; ModuleID = 'blender/source/blender/blenkernel/intern/softbody.c'
source_filename = "blender/source/blender/blenkernel/intern/softbody.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32*, float, float, float, float, i16, float, float }
%struct.BodySpring = type { i32, i32, float, float, float, [3 x float], i32, i16 }
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type { %struct.GHash*, i16, i16, %struct.BodyFace*, i32, [3 x float], [3 x float], %struct.ReferenceState }
%struct.GHash = type opaque
%struct.BodyFace = type { i32, i32, i32, i32, [3 x float], i16 }
%struct.ReferenceState = type { [3 x float], %struct.ReferenceVert* }
%struct.ReferenceVert = type { [3 x float], float }
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.bNodeTree = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.RNG = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleSystem = type opaque
%struct.ParticleData = type opaque
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type opaque
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.ccd_Mesh = type { i32, i32, %struct.MVert*, %struct.MVert*, %struct.MFace*, i32, %struct.ccdf_minmax*, [3 x float], [3 x float] }
%struct.ccdf_minmax = type { float, float, float, float, float, float }
%struct.EffectedPoint = type { float*, float*, float*, float*, float, float, float, float, i32, i32, %struct.ParticleSystem* }
%struct.CollisionModifierData = type { %struct.ModifierData, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MFace*, i32, i32, float, float, %struct.BVHTree* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.BVHTree = type opaque
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.SB_thread_context = type { %struct.Scene*, %struct.Object*, float, float, i32, i32, %struct.ListBase*, i32, float, float, i32, i32 }
%struct._gh_Entry = type { i8*, i8*, i8* }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"softbody\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@SB_localInterruptCallBack = internal global i32 ()* null, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [8 x i8] c"SB_OPOS\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"SB_RPOS\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"SBScratch\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"sb_new_scratch gh\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"bodyspring\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"bpsprings\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"oops we should not get here -  add_2nd_order_springs\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [10 x i8] c"bodypoint\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"SB_Reference\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"_final_mass failed! sb or bp ==NULL\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"SB_body_Faces\00", align 1
@SoftHeunTol = internal global float 1.000000e+00, align 4, !dbg !2176
@.str.12 = private unnamed_addr constant [10 x i8] c"%3.0f%% \0D\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"\0D needed %d steps/frame\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"softbody no valid solver ID!\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.15 = private unnamed_addr constant [24 x i8] c" solver time %f sec %s\0A\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.16 = private unnamed_addr constant [9 x i8] c"ccd_Mesh\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"ccd_Mesh_Faces_mima\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"_final_goal failed! sb or bp ==NULL\0A\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"SBSpringsThread\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"missing cache error\0A\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"SBThread\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"Error expected a SB here\0A\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Aye 998\00", align 1
@.str.24 = private unnamed_addr constant [72 x i8] c"bodypoint <bpi> is not attached to spring  <*bs> --> sb_spring_force()\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SoftBody* @sbNew(%struct.Scene* %scene) #0 !dbg !2185 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2189, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !2191, metadata !DIExpression()), !dbg !2194
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2195
  %call = call i8* %0(i64 472, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !2195
  %1 = bitcast i8* %call to %struct.SoftBody*, !dbg !2195
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !2196
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2197
  %mediafrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 10, !dbg !2198
  store float 5.000000e-01, float* %mediafrict, align 4, !dbg !2199
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2200
  %nodemass = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 7, !dbg !2201
  store float 1.000000e+00, float* %nodemass, align 4, !dbg !2202
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2203
  %grav = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 9, !dbg !2204
  store float 0x40239999A0000000, float* %grav, align 8, !dbg !2205
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2206
  %physics_speed = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 12, !dbg !2207
  store float 1.000000e+00, float* %physics_speed, align 4, !dbg !2208
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2209
  %rklimit = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 11, !dbg !2210
  store float 0x3FB99999A0000000, float* %rklimit, align 8, !dbg !2211
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2212
  %goalspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 13, !dbg !2213
  store float 5.000000e-01, float* %goalspring, align 8, !dbg !2214
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2215
  %goalfrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 14, !dbg !2216
  store float 0.000000e+00, float* %goalfrict, align 4, !dbg !2217
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2218
  %mingoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 15, !dbg !2219
  store float 0.000000e+00, float* %mingoal, align 8, !dbg !2220
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2221
  %maxgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 16, !dbg !2222
  store float 1.000000e+00, float* %maxgoal, align 4, !dbg !2223
  %11 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2224
  %defgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %11, i32 0, i32 17, !dbg !2225
  store float 0x3FE6666660000000, float* %defgoal, align 8, !dbg !2226
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2227
  %inspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 21, !dbg !2228
  store float 5.000000e-01, float* %inspring, align 8, !dbg !2229
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2230
  %infrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 22, !dbg !2231
  store float 5.000000e-01, float* %infrict, align 4, !dbg !2232
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2233
  %inpush = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 46, !dbg !2234
  store float 5.000000e-01, float* %inpush, align 4, !dbg !2235
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2236
  %interval = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 26, !dbg !2237
  store i32 10, i32* %interval, align 8, !dbg !2238
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2239
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !2240
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 6, !dbg !2241
  %17 = load i32, i32* %sfra, align 4, !dbg !2241
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2242
  %sfra1 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 24, !dbg !2243
  store i32 %17, i32* %sfra1, align 8, !dbg !2244
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2245
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 22, !dbg !2246
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 7, !dbg !2247
  %20 = load i32, i32* %efra, align 8, !dbg !2247
  %21 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2248
  %efra3 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %21, i32 0, i32 25, !dbg !2249
  store i32 %20, i32* %efra3, align 4, !dbg !2250
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2251
  %colball = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 33, !dbg !2252
  store float 0x3FDF5C2900000000, float* %colball, align 4, !dbg !2253
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2254
  %balldamp = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 34, !dbg !2255
  store float 5.000000e-01, float* %balldamp, align 8, !dbg !2256
  %24 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2257
  %ballstiff = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %24, i32 0, i32 35, !dbg !2258
  store float 1.000000e+00, float* %ballstiff, align 4, !dbg !2259
  %25 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2260
  %sbc_mode = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %25, i32 0, i32 36, !dbg !2261
  store i16 1, i16* %sbc_mode, align 8, !dbg !2262
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2263
  %minloops = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 38, !dbg !2264
  store i16 10, i16* %minloops, align 4, !dbg !2265
  %27 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2266
  %maxloops = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %27, i32 0, i32 39, !dbg !2267
  store i16 300, i16* %maxloops, align 2, !dbg !2268
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2269
  %choke = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 40, !dbg !2270
  store i16 3, i16* %choke, align 8, !dbg !2271
  %29 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2272
  call void @sb_new_scratch(%struct.SoftBody* %29), !dbg !2273
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2274
  %shearstiff = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 45, !dbg !2275
  store float 1.000000e+00, float* %shearstiff, align 8, !dbg !2276
  %31 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2277
  %solverflags = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %31, i32 0, i32 28, !dbg !2278
  %32 = load i16, i16* %solverflags, align 2, !dbg !2279
  %conv = sext i16 %32 to i32, !dbg !2279
  %or = or i32 %conv, 2, !dbg !2279
  %conv4 = trunc i32 %or to i16, !dbg !2279
  store i16 %conv4, i16* %solverflags, align 2, !dbg !2279
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2280
  %ptcaches = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 48, !dbg !2281
  %call5 = call %struct.PointCache* @BKE_ptcache_add(%struct.ListBase* %ptcaches), !dbg !2282
  %34 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2283
  %pointcache = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 47, !dbg !2284
  store %struct.PointCache* %call5, %struct.PointCache** %pointcache, align 8, !dbg !2285
  %35 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2286
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 49, !dbg !2288
  %36 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !2288
  %tobool = icmp ne %struct.EffectorWeights* %36, null, !dbg !2286
  br i1 %tobool, label %if.end, label %if.then, !dbg !2289

if.then:                                          ; preds = %entry
  %call6 = call %struct.EffectorWeights* @BKE_add_effector_weights(%struct.Group* null), !dbg !2290
  %37 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2291
  %effector_weights7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 49, !dbg !2292
  store %struct.EffectorWeights* %call6, %struct.EffectorWeights** %effector_weights7, align 8, !dbg !2293
  br label %if.end, !dbg !2291

if.end:                                           ; preds = %if.then, %entry
  %38 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2294
  %last_frame = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %38, i32 0, i32 53, !dbg !2295
  store i32 -1, i32* %last_frame, align 4, !dbg !2296
  %39 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2297
  ret %struct.SoftBody* %39, !dbg !2298
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sb_new_scratch(%struct.SoftBody* %sb) #0 !dbg !2299 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !2302, metadata !DIExpression()), !dbg !2303
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2304
  %tobool = icmp ne %struct.SoftBody* %0, null, !dbg !2304
  br i1 %tobool, label %if.end, label %if.then, !dbg !2306

if.then:                                          ; preds = %entry
  br label %return, !dbg !2307

if.end:                                           ; preds = %entry
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2308
  %call = call i8* %1(i64 80, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)), !dbg !2308
  %2 = bitcast i8* %call to %struct.SBScratch*, !dbg !2308
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2309
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 44, !dbg !2310
  store %struct.SBScratch* %2, %struct.SBScratch** %scratch, align 8, !dbg !2311
  %call1 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)), !dbg !2312
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2313
  %scratch2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 44, !dbg !2314
  %5 = load %struct.SBScratch*, %struct.SBScratch** %scratch2, align 8, !dbg !2314
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %5, i32 0, i32 0, !dbg !2315
  store %struct.GHash* %call1, %struct.GHash** %colliderhash, align 8, !dbg !2316
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2317
  %scratch3 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 44, !dbg !2318
  %7 = load %struct.SBScratch*, %struct.SBScratch** %scratch3, align 8, !dbg !2318
  %bodyface = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %7, i32 0, i32 3, !dbg !2319
  store %struct.BodyFace* null, %struct.BodyFace** %bodyface, align 8, !dbg !2320
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2321
  %scratch4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 44, !dbg !2322
  %9 = load %struct.SBScratch*, %struct.SBScratch** %scratch4, align 8, !dbg !2322
  %totface = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %9, i32 0, i32 4, !dbg !2323
  store i32 0, i32* %totface, align 8, !dbg !2324
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2325
  %scratch5 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 44, !dbg !2326
  %11 = load %struct.SBScratch*, %struct.SBScratch** %scratch5, align 8, !dbg !2326
  %aabbmax = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %11, i32 0, i32 6, !dbg !2327
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !2325
  store float 0x46293E5940000000, float* %arrayidx, align 8, !dbg !2328
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2329
  %scratch6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 44, !dbg !2330
  %13 = load %struct.SBScratch*, %struct.SBScratch** %scratch6, align 8, !dbg !2330
  %aabbmax7 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %13, i32 0, i32 6, !dbg !2331
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax7, i64 0, i64 1, !dbg !2329
  store float 0x46293E5940000000, float* %arrayidx8, align 4, !dbg !2332
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2333
  %scratch9 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 44, !dbg !2334
  %15 = load %struct.SBScratch*, %struct.SBScratch** %scratch9, align 8, !dbg !2334
  %aabbmax10 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %15, i32 0, i32 6, !dbg !2335
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax10, i64 0, i64 0, !dbg !2333
  store float 0x46293E5940000000, float* %arrayidx11, align 8, !dbg !2336
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2337
  %scratch12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 44, !dbg !2338
  %17 = load %struct.SBScratch*, %struct.SBScratch** %scratch12, align 8, !dbg !2338
  %aabbmin = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %17, i32 0, i32 5, !dbg !2339
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !2337
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !2340
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2341
  %scratch14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 44, !dbg !2342
  %19 = load %struct.SBScratch*, %struct.SBScratch** %scratch14, align 8, !dbg !2342
  %aabbmin15 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %19, i32 0, i32 5, !dbg !2343
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin15, i64 0, i64 1, !dbg !2341
  store float 0xC6293E5940000000, float* %arrayidx16, align 4, !dbg !2344
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2345
  %scratch17 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 44, !dbg !2346
  %21 = load %struct.SBScratch*, %struct.SBScratch** %scratch17, align 8, !dbg !2346
  %aabbmin18 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %21, i32 0, i32 5, !dbg !2347
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin18, i64 0, i64 0, !dbg !2345
  store float 0xC6293E5940000000, float* %arrayidx19, align 4, !dbg !2348
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2349
  %scratch20 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 44, !dbg !2350
  %23 = load %struct.SBScratch*, %struct.SBScratch** %scratch20, align 8, !dbg !2350
  %Ref = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %23, i32 0, i32 7, !dbg !2351
  %ivert = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref, i32 0, i32 1, !dbg !2352
  store %struct.ReferenceVert* null, %struct.ReferenceVert** %ivert, align 8, !dbg !2353
  br label %return, !dbg !2354

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2354
}

declare dso_local %struct.PointCache* @BKE_ptcache_add(%struct.ListBase*) #2

declare dso_local %struct.EffectorWeights* @BKE_add_effector_weights(%struct.Group*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sbFree(%struct.SoftBody* %sb) #0 !dbg !2355 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !2356, metadata !DIExpression()), !dbg !2357
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2358
  call void @free_softbody_intern(%struct.SoftBody* %0), !dbg !2359
  %1 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2360
  %ptcaches = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %1, i32 0, i32 48, !dbg !2361
  call void @BKE_ptcache_free_list(%struct.ListBase* %ptcaches), !dbg !2362
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2363
  %pointcache = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 47, !dbg !2364
  store %struct.PointCache* null, %struct.PointCache** %pointcache, align 8, !dbg !2365
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2366
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 49, !dbg !2368
  %4 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !2368
  %tobool = icmp ne %struct.EffectorWeights* %4, null, !dbg !2366
  br i1 %tobool, label %if.then, label %if.end, !dbg !2369

if.then:                                          ; preds = %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2370
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2371
  %effector_weights1 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 49, !dbg !2372
  %7 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights1, align 8, !dbg !2372
  %8 = bitcast %struct.EffectorWeights* %7 to i8*, !dbg !2371
  call void %5(i8* %8), !dbg !2370
  br label %if.end, !dbg !2370

if.end:                                           ; preds = %if.then, %entry
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2373
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2374
  %11 = bitcast %struct.SoftBody* %10 to i8*, !dbg !2374
  call void %9(i8* %11), !dbg !2373
  ret void, !dbg !2375
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_softbody_intern(%struct.SoftBody* %sb) #0 !dbg !2376 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  %a = alloca i32, align 4
  %bp = alloca %struct.BodyPoint*, align 8
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !2377, metadata !DIExpression()), !dbg !2378
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2379
  %tobool = icmp ne %struct.SoftBody* %0, null, !dbg !2379
  br i1 %tobool, label %if.then, label %if.end16, !dbg !2381

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2382, metadata !DIExpression()), !dbg !2384
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !2385, metadata !DIExpression()), !dbg !2388
  %1 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2389
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %1, i32 0, i32 2, !dbg !2391
  %2 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2391
  %tobool1 = icmp ne %struct.BodyPoint* %2, null, !dbg !2389
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !2392

if.then2:                                         ; preds = %if.then
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2393
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 0, !dbg !2396
  %4 = load i32, i32* %totpoint, align 8, !dbg !2396
  store i32 %4, i32* %a, align 4, !dbg !2397
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2398
  %bpoint3 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 2, !dbg !2399
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint3, align 8, !dbg !2399
  store %struct.BodyPoint* %6, %struct.BodyPoint** %bp, align 8, !dbg !2400
  br label %for.cond, !dbg !2401

for.cond:                                         ; preds = %for.inc, %if.then2
  %7 = load i32, i32* %a, align 4, !dbg !2402
  %cmp = icmp sgt i32 %7, 0, !dbg !2404
  br i1 %cmp, label %for.body, label %for.end, !dbg !2405

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2406
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 14, !dbg !2409
  %9 = load i32*, i32** %springs, align 8, !dbg !2409
  %cmp4 = icmp ne i32* %9, null, !dbg !2410
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2411

if.then5:                                         ; preds = %for.body
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2412
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2414
  %springs6 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %11, i32 0, i32 14, !dbg !2415
  %12 = load i32*, i32** %springs6, align 8, !dbg !2415
  %13 = bitcast i32* %12 to i8*, !dbg !2414
  call void %10(i8* %13), !dbg !2412
  br label %if.end, !dbg !2416

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !2417

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %a, align 4, !dbg !2418
  %dec = add nsw i32 %14, -1, !dbg !2418
  store i32 %dec, i32* %a, align 4, !dbg !2418
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2419
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %15, i32 1, !dbg !2419
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !2419
  br label %for.cond, !dbg !2420, !llvm.loop !2421

for.end:                                          ; preds = %for.cond
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2423
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2424
  %bpoint7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 2, !dbg !2425
  %18 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint7, align 8, !dbg !2425
  %19 = bitcast %struct.BodyPoint* %18 to i8*, !dbg !2424
  call void %16(i8* %19), !dbg !2423
  br label %if.end8, !dbg !2426

if.end8:                                          ; preds = %for.end, %if.then
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2427
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 3, !dbg !2429
  %21 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !2429
  %tobool9 = icmp ne %struct.BodySpring* %21, null, !dbg !2427
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !2430

if.then10:                                        ; preds = %if.end8
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2431
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2432
  %bspring11 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 3, !dbg !2433
  %24 = load %struct.BodySpring*, %struct.BodySpring** %bspring11, align 8, !dbg !2433
  %25 = bitcast %struct.BodySpring* %24 to i8*, !dbg !2432
  call void %22(i8* %25), !dbg !2431
  br label %if.end12, !dbg !2431

if.end12:                                         ; preds = %if.then10, %if.end8
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2434
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 1, !dbg !2435
  store i32 0, i32* %totspring, align 4, !dbg !2436
  %27 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2437
  %totpoint13 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %27, i32 0, i32 0, !dbg !2438
  store i32 0, i32* %totpoint13, align 8, !dbg !2439
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2440
  %bpoint14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 2, !dbg !2441
  store %struct.BodyPoint* null, %struct.BodyPoint** %bpoint14, align 8, !dbg !2442
  %29 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2443
  %bspring15 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %29, i32 0, i32 3, !dbg !2444
  store %struct.BodySpring* null, %struct.BodySpring** %bspring15, align 8, !dbg !2445
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2446
  call void @free_scratch(%struct.SoftBody* %30), !dbg !2447
  %31 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2448
  call void @free_softbody_baked(%struct.SoftBody* %31), !dbg !2449
  br label %if.end16, !dbg !2450

if.end16:                                         ; preds = %if.end12, %entry
  ret void, !dbg !2451
}

declare dso_local void @BKE_ptcache_free_list(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sbFreeSimulation(%struct.SoftBody* %sb) #0 !dbg !2452 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !2453, metadata !DIExpression()), !dbg !2454
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2455
  call void @free_softbody_intern(%struct.SoftBody* %0), !dbg !2456
  ret void, !dbg !2457
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sbObjectToSoftbody(%struct.Object* %ob) #0 !dbg !2458 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2461, metadata !DIExpression()), !dbg !2462
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2463
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !2464
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2464
  call void @free_softbody_intern(%struct.SoftBody* %1), !dbg !2465
  ret void, !dbg !2466
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sbSetInterruptCallBack(i32 ()* %f) #0 !dbg !2467 {
entry:
  %f.addr = alloca i32 ()*, align 8
  store i32 ()* %f, i32 ()** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i32 ()** %f.addr, metadata !2470, metadata !DIExpression()), !dbg !2471
  %0 = load i32 ()*, i32 ()** %f.addr, align 8, !dbg !2472
  store i32 ()* %0, i32 ()** @SB_localInterruptCallBack, align 8, !dbg !2473
  ret void, !dbg !2474
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SB_estimate_transform(%struct.Object* %ob, float* %lloc, [3 x float]* %lrot, [3 x float]* %lscale) #0 !dbg !2475 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %lloc.addr = alloca float*, align 8
  %lrot.addr = alloca [3 x float]*, align 8
  %lscale.addr = alloca [3 x float]*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %rp = alloca %struct.ReferenceVert*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %opos = alloca [3 x float]*, align 8
  %rpos = alloca [3 x float]*, align 8
  %com = alloca [3 x float], align 4
  %rcom = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2479, metadata !DIExpression()), !dbg !2480
  store float* %lloc, float** %lloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lloc.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  store [3 x float]* %lrot, [3 x float]** %lrot.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %lrot.addr, metadata !2483, metadata !DIExpression()), !dbg !2484
  store [3 x float]* %lscale, [3 x float]** %lscale.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %lscale.addr, metadata !2485, metadata !DIExpression()), !dbg !2486
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !2487, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.declare(metadata %struct.ReferenceVert** %rp, metadata !2489, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !2491, metadata !DIExpression()), !dbg !2492
  store %struct.SoftBody* null, %struct.SoftBody** %sb, align 8, !dbg !2492
  call void @llvm.dbg.declare(metadata [3 x float]** %opos, metadata !2493, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata [3 x float]** %rpos, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata [3 x float]* %com, metadata !2497, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata [3 x float]* %rcom, metadata !2499, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2501, metadata !DIExpression()), !dbg !2502
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2503
  %tobool = icmp ne %struct.Object* %0, null, !dbg !2503
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2505

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2506
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 111, !dbg !2507
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2507
  %tobool1 = icmp ne %struct.SoftBody* %2, null, !dbg !2506
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2508

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !2509

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2510
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !2511
  %4 = load %struct.SoftBody*, %struct.SoftBody** %soft2, align 8, !dbg !2511
  store %struct.SoftBody* %4, %struct.SoftBody** %sb, align 8, !dbg !2512
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2513
  %tobool3 = icmp ne %struct.SoftBody* %5, null, !dbg !2513
  br i1 %tobool3, label %lor.lhs.false4, label %if.then6, !dbg !2515

lor.lhs.false4:                                   ; preds = %if.end
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2516
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 2, !dbg !2517
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2517
  %tobool5 = icmp ne %struct.BodyPoint* %7, null, !dbg !2516
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !2518

if.then6:                                         ; preds = %lor.lhs.false4, %if.end
  br label %return, !dbg !2519

if.end7:                                          ; preds = %lor.lhs.false4
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2520
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2521
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 0, !dbg !2522
  %10 = load i32, i32* %totpoint, align 8, !dbg !2522
  %mul = mul nsw i32 %10, 3, !dbg !2523
  %conv = sext i32 %mul to i64, !dbg !2524
  %mul8 = mul i64 %conv, 4, !dbg !2525
  %call = call i8* %8(i64 %mul8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)), !dbg !2520
  %11 = bitcast i8* %call to [3 x float]*, !dbg !2520
  store [3 x float]* %11, [3 x float]** %opos, align 8, !dbg !2526
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2527
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2528
  %totpoint9 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 0, !dbg !2529
  %14 = load i32, i32* %totpoint9, align 8, !dbg !2529
  %mul10 = mul nsw i32 %14, 3, !dbg !2530
  %conv11 = sext i32 %mul10 to i64, !dbg !2531
  %mul12 = mul i64 %conv11, 4, !dbg !2532
  %call13 = call i8* %12(i64 %mul12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)), !dbg !2527
  %15 = bitcast i8* %call13 to [3 x float]*, !dbg !2527
  store [3 x float]* %15, [3 x float]** %rpos, align 8, !dbg !2533
  store i32 0, i32* %a, align 4, !dbg !2534
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2536
  %bpoint14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 2, !dbg !2537
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint14, align 8, !dbg !2537
  store %struct.BodyPoint* %17, %struct.BodyPoint** %bp, align 8, !dbg !2538
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2539
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 44, !dbg !2540
  %19 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !2540
  %Ref = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %19, i32 0, i32 7, !dbg !2541
  %ivert = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref, i32 0, i32 1, !dbg !2542
  %20 = load %struct.ReferenceVert*, %struct.ReferenceVert** %ivert, align 8, !dbg !2542
  store %struct.ReferenceVert* %20, %struct.ReferenceVert** %rp, align 8, !dbg !2543
  br label %for.cond, !dbg !2544

for.cond:                                         ; preds = %for.inc, %if.end7
  %21 = load i32, i32* %a, align 4, !dbg !2545
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2547
  %totpoint15 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 0, !dbg !2548
  %23 = load i32, i32* %totpoint15, align 8, !dbg !2548
  %cmp = icmp slt i32 %21, %23, !dbg !2549
  br i1 %cmp, label %for.body, label %for.end, !dbg !2550

for.body:                                         ; preds = %for.cond
  %24 = load [3 x float]*, [3 x float]** %rpos, align 8, !dbg !2551
  %25 = load i32, i32* %a, align 4, !dbg !2553
  %idxprom = sext i32 %25 to i64, !dbg !2551
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %24, i64 %idxprom, !dbg !2551
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2551
  %26 = load %struct.ReferenceVert*, %struct.ReferenceVert** %rp, align 8, !dbg !2554
  %pos = getelementptr inbounds %struct.ReferenceVert, %struct.ReferenceVert* %26, i32 0, i32 0, !dbg !2555
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !2554
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay17), !dbg !2556
  %27 = load [3 x float]*, [3 x float]** %opos, align 8, !dbg !2557
  %28 = load i32, i32* %a, align 4, !dbg !2558
  %idxprom18 = sext i32 %28 to i64, !dbg !2557
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom18, !dbg !2557
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !2557
  %29 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2559
  %pos21 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %29, i32 0, i32 3, !dbg !2560
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %pos21, i64 0, i64 0, !dbg !2559
  call void @copy_v3_v3(float* %arraydecay20, float* %arraydecay22), !dbg !2561
  br label %for.inc, !dbg !2562

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %a, align 4, !dbg !2563
  %inc = add nsw i32 %30, 1, !dbg !2563
  store i32 %inc, i32* %a, align 4, !dbg !2563
  %31 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2564
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %31, i32 1, !dbg !2564
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !2564
  %32 = load %struct.ReferenceVert*, %struct.ReferenceVert** %rp, align 8, !dbg !2565
  %incdec.ptr23 = getelementptr inbounds %struct.ReferenceVert, %struct.ReferenceVert* %32, i32 1, !dbg !2565
  store %struct.ReferenceVert* %incdec.ptr23, %struct.ReferenceVert** %rp, align 8, !dbg !2565
  br label %for.cond, !dbg !2566, !llvm.loop !2567

for.end:                                          ; preds = %for.cond
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2569
  %totpoint24 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 0, !dbg !2570
  %34 = load i32, i32* %totpoint24, align 8, !dbg !2570
  %35 = load [3 x float]*, [3 x float]** %opos, align 8, !dbg !2571
  %36 = load [3 x float]*, [3 x float]** %rpos, align 8, !dbg !2572
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %com, i64 0, i64 0, !dbg !2573
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %rcom, i64 0, i64 0, !dbg !2574
  %37 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !2575
  %38 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !2576
  call void @vcloud_estimate_transform(i32 %34, [3 x float]* %35, float* null, [3 x float]* %36, float* null, float* %arraydecay25, float* %arraydecay26, [3 x float]* %37, [3 x float]* %38), !dbg !2577
  %39 = load float*, float** %lloc.addr, align 8, !dbg !2578
  %tobool27 = icmp ne float* %39, null, !dbg !2578
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !2580

if.then28:                                        ; preds = %for.end
  %40 = load float*, float** %lloc.addr, align 8, !dbg !2581
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %com, i64 0, i64 0, !dbg !2582
  call void @copy_v3_v3(float* %40, float* %arraydecay29), !dbg !2583
  br label %if.end30, !dbg !2583

if.end30:                                         ; preds = %if.then28, %for.end
  %41 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2584
  %lcom = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %41, i32 0, i32 50, !dbg !2585
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %lcom, i64 0, i64 0, !dbg !2584
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %com, i64 0, i64 0, !dbg !2586
  call void @copy_v3_v3(float* %arraydecay31, float* %arraydecay32), !dbg !2587
  %42 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !2588
  %tobool33 = icmp ne [3 x float]* %42, null, !dbg !2588
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !2590

if.then34:                                        ; preds = %if.end30
  %43 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2591
  %lscale35 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %43, i32 0, i32 52, !dbg !2592
  %arraydecay36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lscale35, i64 0, i64 0, !dbg !2591
  %44 = load [3 x float]*, [3 x float]** %lscale.addr, align 8, !dbg !2593
  call void @copy_m3_m3([3 x float]* %arraydecay36, [3 x float]* %44), !dbg !2594
  br label %if.end37, !dbg !2594

if.end37:                                         ; preds = %if.then34, %if.end30
  %45 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !2595
  %tobool38 = icmp ne [3 x float]* %45, null, !dbg !2595
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !2597

if.then39:                                        ; preds = %if.end37
  %46 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2598
  %lrot40 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %46, i32 0, i32 51, !dbg !2599
  %arraydecay41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lrot40, i64 0, i64 0, !dbg !2598
  %47 = load [3 x float]*, [3 x float]** %lrot.addr, align 8, !dbg !2600
  call void @copy_m3_m3([3 x float]* %arraydecay41, [3 x float]* %47), !dbg !2601
  br label %if.end42, !dbg !2601

if.end42:                                         ; preds = %if.then39, %if.end37
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2602
  %49 = load [3 x float]*, [3 x float]** %opos, align 8, !dbg !2603
  %50 = bitcast [3 x float]* %49 to i8*, !dbg !2603
  call void %48(i8* %50), !dbg !2602
  %51 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2604
  %52 = load [3 x float]*, [3 x float]** %rpos, align 8, !dbg !2605
  %53 = bitcast [3 x float]* %52 to i8*, !dbg !2605
  call void %51(i8* %53), !dbg !2604
  br label %return, !dbg !2606

return:                                           ; preds = %if.end42, %if.then6, %if.then
  ret void, !dbg !2606
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !2607 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2613, metadata !DIExpression()), !dbg !2614
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2615, metadata !DIExpression()), !dbg !2616
  %0 = load float*, float** %a.addr, align 8, !dbg !2617
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2617
  %1 = load float, float* %arrayidx, align 4, !dbg !2617
  %2 = load float*, float** %r.addr, align 8, !dbg !2618
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2618
  store float %1, float* %arrayidx1, align 4, !dbg !2619
  %3 = load float*, float** %a.addr, align 8, !dbg !2620
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !2620
  %4 = load float, float* %arrayidx2, align 4, !dbg !2620
  %5 = load float*, float** %r.addr, align 8, !dbg !2621
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2621
  store float %4, float* %arrayidx3, align 4, !dbg !2622
  %6 = load float*, float** %a.addr, align 8, !dbg !2623
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !2623
  %7 = load float, float* %arrayidx4, align 4, !dbg !2623
  %8 = load float*, float** %r.addr, align 8, !dbg !2624
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2624
  store float %7, float* %arrayidx5, align 4, !dbg !2625
  ret void, !dbg !2626
}

declare dso_local void @vcloud_estimate_transform(i32, [3 x float]*, float*, [3 x float]*, float*, float*, float*, [3 x float]*, [3 x float]*) #2

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sbObjectStep(%struct.Scene* %scene, %struct.Object* %ob, float %cfra, [3 x float]* %vertexCos, i32 %numVerts) #0 !dbg !2627 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cfra.addr = alloca float, align 4
  %vertexCos.addr = alloca [3 x float]*, align 8
  %numVerts.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %pid = alloca %struct.PTCacheID, align 8
  %dtime = alloca float, align 4
  %timescale = alloca float, align 4
  %framedelta = alloca i32, align 4
  %framenr = alloca i32, align 4
  %startframe = alloca i32, align 4
  %endframe = alloca i32, align 4
  %cache_result = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2630, metadata !DIExpression()), !dbg !2631
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2632, metadata !DIExpression()), !dbg !2633
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !2634, metadata !DIExpression()), !dbg !2635
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !2636, metadata !DIExpression()), !dbg !2637
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !2638, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !2640, metadata !DIExpression()), !dbg !2641
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2642
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !2643
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2643
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !2641
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !2644, metadata !DIExpression()), !dbg !2647
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !2648, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.declare(metadata float* %dtime, metadata !2651, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.declare(metadata float* %timescale, metadata !2653, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.declare(metadata i32* %framedelta, metadata !2655, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !2657, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %startframe, metadata !2659, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.declare(metadata i32* %endframe, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.declare(metadata i32* %cache_result, metadata !2663, metadata !DIExpression()), !dbg !2664
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2665
  %pointcache = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 47, !dbg !2666
  %3 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !2666
  store %struct.PointCache* %3, %struct.PointCache** %cache, align 8, !dbg !2667
  %4 = load float, float* %cfra.addr, align 4, !dbg !2668
  %conv = fptosi float %4 to i32, !dbg !2669
  store i32 %conv, i32* %framenr, align 4, !dbg !2670
  %5 = load i32, i32* %framenr, align 4, !dbg !2671
  %6 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2672
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 4, !dbg !2673
  %7 = load i32, i32* %simframe, align 8, !dbg !2673
  %sub = sub nsw i32 %5, %7, !dbg !2674
  store i32 %sub, i32* %framedelta, align 4, !dbg !2675
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2676
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2677
  call void @BKE_ptcache_id_from_softbody(%struct.PTCacheID* %pid, %struct.Object* %8, %struct.SoftBody* %9), !dbg !2678
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2679
  %11 = load i32, i32* %framenr, align 4, !dbg !2680
  %conv1 = sitofp i32 %11 to float, !dbg !2680
  call void @BKE_ptcache_id_time(%struct.PTCacheID* %pid, %struct.Scene* %10, float %conv1, i32* %startframe, i32* %endframe, float* %timescale), !dbg !2681
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2682
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 2, !dbg !2684
  %13 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2684
  %tobool = icmp ne %struct.BodyPoint* %13, null, !dbg !2682
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2685

land.lhs.true:                                    ; preds = %entry
  %14 = load i32, i32* %numVerts.addr, align 4, !dbg !2686
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2687
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 0, !dbg !2688
  %16 = load i32, i32* %totpoint, align 8, !dbg !2688
  %cmp = icmp ne i32 %14, %16, !dbg !2689
  br i1 %cmp, label %if.then, label %if.end, !dbg !2690

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2691
  call void @BKE_ptcache_invalidate(%struct.PointCache* %17), !dbg !2693
  br label %return, !dbg !2694

if.end:                                           ; preds = %land.lhs.true, %entry
  %18 = load i32, i32* %framenr, align 4, !dbg !2695
  %19 = load i32, i32* %startframe, align 4, !dbg !2697
  %cmp3 = icmp slt i32 %18, %19, !dbg !2698
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !2699

if.then5:                                         ; preds = %if.end
  %20 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2700
  call void @BKE_ptcache_invalidate(%struct.PointCache* %20), !dbg !2702
  br label %return, !dbg !2703

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %framenr, align 4, !dbg !2704
  %22 = load i32, i32* %endframe, align 4, !dbg !2706
  %cmp6 = icmp sgt i32 %21, %22, !dbg !2707
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !2708

if.then8:                                         ; preds = %if.else
  %23 = load i32, i32* %endframe, align 4, !dbg !2709
  store i32 %23, i32* %framenr, align 4, !dbg !2711
  br label %if.end9, !dbg !2712

if.end9:                                          ; preds = %if.then8, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9
  %24 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2713
  %bpoint11 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %24, i32 0, i32 2, !dbg !2715
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint11, align 8, !dbg !2715
  %cmp12 = icmp eq %struct.BodyPoint* %25, null, !dbg !2716
  br i1 %cmp12, label %if.then21, label %lor.lhs.false, !dbg !2717

lor.lhs.false:                                    ; preds = %if.end10
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2718
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 104, !dbg !2719
  %27 = load i16, i16* %softflag, align 2, !dbg !2719
  %conv14 = sext i16 %27 to i32, !dbg !2718
  %and = and i32 %conv14, 4, !dbg !2720
  %tobool15 = icmp ne i32 %and, 0, !dbg !2720
  br i1 %tobool15, label %land.lhs.true16, label %if.end25, !dbg !2721

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2722
  %soft17 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 111, !dbg !2723
  %29 = load %struct.SoftBody*, %struct.SoftBody** %soft17, align 8, !dbg !2723
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %29, i32 0, i32 3, !dbg !2724
  %30 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !2724
  %tobool18 = icmp ne %struct.BodySpring* %30, null, !dbg !2722
  br i1 %tobool18, label %if.end25, label %land.lhs.true19, !dbg !2725

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2726
  %call = call i32 @object_has_edges(%struct.Object* %31), !dbg !2727
  %tobool20 = icmp ne i32 %call, 0, !dbg !2727
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !2728

if.then21:                                        ; preds = %land.lhs.true19, %if.end10
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2729
  %type = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 3, !dbg !2731
  %33 = load i16, i16* %type, align 8, !dbg !2731
  %conv22 = sext i16 %33 to i32, !dbg !2729
  switch i32 %conv22, label %sw.default [
    i32 1, label %sw.bb
    i32 22, label %sw.bb23
    i32 2, label %sw.bb24
    i32 3, label %sw.bb24
  ], !dbg !2732

sw.bb:                                            ; preds = %if.then21
  %34 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2733
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2735
  call void @mesh_to_softbody(%struct.Scene* %34, %struct.Object* %35), !dbg !2736
  br label %sw.epilog, !dbg !2737

sw.bb23:                                          ; preds = %if.then21
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2738
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2739
  call void @lattice_to_softbody(%struct.Scene* %36, %struct.Object* %37), !dbg !2740
  br label %sw.epilog, !dbg !2741

sw.bb24:                                          ; preds = %if.then21, %if.then21
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2742
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2743
  call void @curve_surf_to_softbody(%struct.Scene* %38, %struct.Object* %39), !dbg !2744
  br label %sw.epilog, !dbg !2745

sw.default:                                       ; preds = %if.then21
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2746
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2747
  %42 = load i32, i32* %numVerts.addr, align 4, !dbg !2748
  call void @renew_softbody(%struct.Scene* %40, %struct.Object* %41, i32 %42, i32 0), !dbg !2749
  br label %sw.epilog, !dbg !2750

sw.epilog:                                        ; preds = %sw.default, %sw.bb24, %sw.bb23, %sw.bb
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2751
  %44 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2752
  %45 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2753
  %46 = load i32, i32* %numVerts.addr, align 4, !dbg !2754
  call void @softbody_update_positions(%struct.Object* %43, %struct.SoftBody* %44, [3 x float]* %45, i32 %46), !dbg !2755
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2756
  %48 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2757
  %49 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2758
  %50 = load i32, i32* %numVerts.addr, align 4, !dbg !2759
  call void @softbody_reset(%struct.Object* %47, %struct.SoftBody* %48, [3 x float]* %49, i32 %50), !dbg !2760
  br label %if.end25, !dbg !2761

if.end25:                                         ; preds = %sw.epilog, %land.lhs.true19, %land.lhs.true16, %lor.lhs.false
  %51 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2762
  %totpoint26 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %51, i32 0, i32 0, !dbg !2764
  %52 = load i32, i32* %totpoint26, align 8, !dbg !2764
  %cmp27 = icmp eq i32 %52, 0, !dbg !2765
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !2766

if.then29:                                        ; preds = %if.end25
  br label %return, !dbg !2767

if.end30:                                         ; preds = %if.end25
  %53 = load i32, i32* %framenr, align 4, !dbg !2769
  %54 = load i32, i32* %startframe, align 4, !dbg !2771
  %cmp31 = icmp eq i32 %53, %54, !dbg !2772
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !2773

if.then33:                                        ; preds = %if.end30
  %55 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2774
  %call34 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %55, %struct.PTCacheID* %pid, i32 2), !dbg !2776
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2777
  %57 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2778
  %58 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2779
  %59 = load i32, i32* %numVerts.addr, align 4, !dbg !2780
  call void @softbody_update_positions(%struct.Object* %56, %struct.SoftBody* %57, [3 x float]* %58, i32 %59), !dbg !2781
  %60 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2782
  %61 = load i32, i32* %framenr, align 4, !dbg !2783
  call void @BKE_ptcache_validate(%struct.PointCache* %60, i32 %61), !dbg !2784
  %62 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2785
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %62, i32 0, i32 2, !dbg !2786
  %63 = load i32, i32* %flag, align 8, !dbg !2787
  %and35 = and i32 %63, -259, !dbg !2787
  store i32 %and35, i32* %flag, align 8, !dbg !2787
  %64 = load i32, i32* %framenr, align 4, !dbg !2788
  %65 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2789
  %last_frame = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %65, i32 0, i32 53, !dbg !2790
  store i32 %64, i32* %last_frame, align 4, !dbg !2791
  br label %return, !dbg !2792

if.end36:                                         ; preds = %if.end30
  %66 = load i32, i32* %framenr, align 4, !dbg !2793
  %conv37 = sitofp i32 %66 to float, !dbg !2794
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2795
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 22, !dbg !2796
  %subframe = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 8, !dbg !2797
  %68 = load float, float* %subframe, align 4, !dbg !2797
  %add = fadd float %conv37, %68, !dbg !2798
  %call38 = call i32 @BKE_ptcache_read(%struct.PTCacheID* %pid, float %add), !dbg !2799
  store i32 %call38, i32* %cache_result, align 4, !dbg !2800
  %69 = load i32, i32* %cache_result, align 4, !dbg !2801
  %cmp39 = icmp eq i32 %69, 1, !dbg !2803
  br i1 %cmp39, label %if.then44, label %lor.lhs.false41, !dbg !2804

lor.lhs.false41:                                  ; preds = %if.end36
  %70 = load i32, i32* %cache_result, align 4, !dbg !2805
  %cmp42 = icmp eq i32 %70, 2, !dbg !2806
  br i1 %cmp42, label %if.then44, label %if.else56, !dbg !2807

if.then44:                                        ; preds = %lor.lhs.false41, %if.end36
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2808
  %72 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2810
  %73 = load i32, i32* %numVerts.addr, align 4, !dbg !2811
  %74 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2812
  %local = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %74, i32 0, i32 27, !dbg !2813
  %75 = load i16, i16* %local, align 4, !dbg !2813
  %conv45 = sext i16 %75 to i32, !dbg !2812
  call void @softbody_to_object(%struct.Object* %71, [3 x float]* %72, i32 %73, i32 %conv45), !dbg !2814
  %76 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2815
  %77 = load i32, i32* %framenr, align 4, !dbg !2816
  call void @BKE_ptcache_validate(%struct.PointCache* %76, i32 %77), !dbg !2817
  %78 = load i32, i32* %cache_result, align 4, !dbg !2818
  %cmp46 = icmp eq i32 %78, 2, !dbg !2820
  br i1 %cmp46, label %land.lhs.true48, label %if.end54, !dbg !2821

land.lhs.true48:                                  ; preds = %if.then44
  %79 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2822
  %flag49 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %79, i32 0, i32 2, !dbg !2823
  %80 = load i32, i32* %flag49, align 8, !dbg !2823
  %and50 = and i32 %80, 258, !dbg !2824
  %tobool51 = icmp ne i32 %and50, 0, !dbg !2824
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !2825

if.then52:                                        ; preds = %land.lhs.true48
  %81 = load i32, i32* %framenr, align 4, !dbg !2826
  %call53 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %pid, i32 %81), !dbg !2827
  br label %if.end54, !dbg !2827

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.then44
  %82 = load i32, i32* %framenr, align 4, !dbg !2828
  %83 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2829
  %last_frame55 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %83, i32 0, i32 53, !dbg !2830
  store i32 %82, i32* %last_frame55, align 4, !dbg !2831
  br label %return, !dbg !2832

if.else56:                                        ; preds = %lor.lhs.false41
  %84 = load i32, i32* %cache_result, align 4, !dbg !2833
  %cmp57 = icmp eq i32 %84, 3, !dbg !2835
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !2836

if.then59:                                        ; preds = %if.else56
  br label %if.end66, !dbg !2837

if.else60:                                        ; preds = %if.else56
  %85 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2839
  %flag61 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %85, i32 0, i32 2, !dbg !2841
  %86 = load i32, i32* %flag61, align 8, !dbg !2841
  %and62 = and i32 %86, 1, !dbg !2842
  %tobool63 = icmp ne i32 %and62, 0, !dbg !2842
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !2843

if.then64:                                        ; preds = %if.else60
  %87 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2844
  call void @BKE_ptcache_invalidate(%struct.PointCache* %87), !dbg !2846
  br label %return, !dbg !2847

if.end65:                                         ; preds = %if.else60
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then59
  br label %if.end67

if.end67:                                         ; preds = %if.end66
  %88 = load i32, i32* %framenr, align 4, !dbg !2848
  %89 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2850
  %last_frame68 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %89, i32 0, i32 53, !dbg !2851
  %90 = load i32, i32* %last_frame68, align 4, !dbg !2851
  %add69 = add nsw i32 %90, 1, !dbg !2852
  %cmp70 = icmp ne i32 %88, %add69, !dbg !2853
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !2854

if.then72:                                        ; preds = %if.end67
  br label %return, !dbg !2855

if.end73:                                         ; preds = %if.end67
  %91 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2856
  %simframe74 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %91, i32 0, i32 4, !dbg !2858
  %92 = load i32, i32* %simframe74, align 8, !dbg !2858
  %93 = load i32, i32* %startframe, align 4, !dbg !2859
  %cmp75 = icmp eq i32 %92, %93, !dbg !2860
  br i1 %cmp75, label %land.lhs.true77, label %if.end86, !dbg !2861

land.lhs.true77:                                  ; preds = %if.end73
  %94 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2862
  %flag78 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %94, i32 0, i32 2, !dbg !2863
  %95 = load i32, i32* %flag78, align 8, !dbg !2863
  %and79 = and i32 %95, 2, !dbg !2864
  %tobool80 = icmp ne i32 %and79, 0, !dbg !2864
  br i1 %tobool80, label %if.then84, label %lor.lhs.false81, !dbg !2865

lor.lhs.false81:                                  ; preds = %land.lhs.true77
  %96 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2866
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %96, i32 0, i32 8, !dbg !2867
  %97 = load i32, i32* %last_exact, align 8, !dbg !2867
  %cmp82 = icmp eq i32 %97, 0, !dbg !2868
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !2869

if.then84:                                        ; preds = %lor.lhs.false81, %land.lhs.true77
  %98 = load i32, i32* %startframe, align 4, !dbg !2870
  %call85 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %pid, i32 %98), !dbg !2871
  br label %if.end86, !dbg !2871

if.end86:                                         ; preds = %if.then84, %lor.lhs.false81, %if.end73
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2872
  %100 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2873
  %101 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2874
  %102 = load i32, i32* %numVerts.addr, align 4, !dbg !2875
  call void @softbody_update_positions(%struct.Object* %99, %struct.SoftBody* %100, [3 x float]* %101, i32 %102), !dbg !2876
  %103 = load i32, i32* %framedelta, align 4, !dbg !2877
  %conv87 = sitofp i32 %103 to float, !dbg !2877
  %104 = load float, float* %timescale, align 4, !dbg !2878
  %mul = fmul float %conv87, %104, !dbg !2879
  store float %mul, float* %dtime, align 4, !dbg !2880
  %105 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2881
  %106 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2882
  %107 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2883
  %108 = load float, float* %dtime, align 4, !dbg !2884
  call void @softbody_step(%struct.Scene* %105, %struct.Object* %106, %struct.SoftBody* %107, float %108), !dbg !2885
  %109 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2886
  %110 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2887
  %111 = load i32, i32* %numVerts.addr, align 4, !dbg !2888
  call void @softbody_to_object(%struct.Object* %109, [3 x float]* %110, i32 %111, i32 0), !dbg !2889
  %112 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !2890
  %113 = load i32, i32* %framenr, align 4, !dbg !2891
  call void @BKE_ptcache_validate(%struct.PointCache* %112, i32 %113), !dbg !2892
  %114 = load i32, i32* %framenr, align 4, !dbg !2893
  %call88 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %pid, i32 %114), !dbg !2894
  %115 = load i32, i32* %framenr, align 4, !dbg !2895
  %116 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2896
  %last_frame89 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %116, i32 0, i32 53, !dbg !2897
  store i32 %115, i32* %last_frame89, align 4, !dbg !2898
  br label %return, !dbg !2899

return:                                           ; preds = %if.end86, %if.then72, %if.then64, %if.end54, %if.then33, %if.then29, %if.then5, %if.then
  ret void, !dbg !2899
}

declare dso_local void @BKE_ptcache_id_from_softbody(%struct.PTCacheID*, %struct.Object*, %struct.SoftBody*) #2

declare dso_local void @BKE_ptcache_id_time(%struct.PTCacheID*, %struct.Scene*, float, i32*, i32*, float*) #2

declare dso_local void @BKE_ptcache_invalidate(%struct.PointCache*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @object_has_edges(%struct.Object* %ob) #0 !dbg !2900 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2903, metadata !DIExpression()), !dbg !2904
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2905
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !2907
  %1 = load i16, i16* %type, align 8, !dbg !2907
  %conv = sext i16 %1 to i32, !dbg !2905
  %cmp = icmp eq i32 %conv, 1, !dbg !2908
  br i1 %cmp, label %if.then, label %if.else, !dbg !2909

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2910
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !2912
  %3 = load i8*, i8** %data, align 8, !dbg !2912
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !2913
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 27, !dbg !2914
  %5 = load i32, i32* %totedge, align 4, !dbg !2914
  store i32 %5, i32* %retval, align 4, !dbg !2915
  br label %return, !dbg !2915

if.else:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2916
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !2918
  %7 = load i16, i16* %type2, align 8, !dbg !2918
  %conv3 = sext i16 %7 to i32, !dbg !2916
  %cmp4 = icmp eq i32 %conv3, 22, !dbg !2919
  br i1 %cmp4, label %if.then6, label %if.else7, !dbg !2920

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !2921
  br label %return, !dbg !2921

if.else7:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !2923
  br label %return, !dbg !2923

return:                                           ; preds = %if.else7, %if.then6, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !2925
  ret i32 %8, !dbg !2925
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_to_softbody(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !2926 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %me = alloca %struct.Mesh*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %a = alloca i32, align 4
  %totedge = alloca i32, align 4
  %defgrp_index = alloca i32, align 4
  %defgrp_index34 = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !2933, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !2935, metadata !DIExpression()), !dbg !2936
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2937
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !2938
  %1 = load i8*, i8** %data, align 8, !dbg !2938
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !2937
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !2936
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !2939, metadata !DIExpression()), !dbg !2942
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !2943
  %medge1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 16, !dbg !2944
  %4 = load %struct.MEdge*, %struct.MEdge** %medge1, align 8, !dbg !2944
  store %struct.MEdge* %4, %struct.MEdge** %medge, align 8, !dbg !2942
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !2945, metadata !DIExpression()), !dbg !2946
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !2947, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2951, metadata !DIExpression()), !dbg !2952
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !2953, metadata !DIExpression()), !dbg !2954
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !2955
  call void @BKE_mesh_tessface_ensure(%struct.Mesh* %5), !dbg !2956
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2957
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 104, !dbg !2959
  %7 = load i16, i16* %softflag, align 2, !dbg !2959
  %conv = sext i16 %7 to i32, !dbg !2957
  %and = and i32 %conv, 4, !dbg !2960
  %tobool = icmp ne i32 %and, 0, !dbg !2960
  br i1 %tobool, label %if.then, label %if.else, !dbg !2961

if.then:                                          ; preds = %entry
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !2962
  %totedge2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 27, !dbg !2963
  %9 = load i32, i32* %totedge2, align 4, !dbg !2963
  store i32 %9, i32* %totedge, align 4, !dbg !2964
  br label %if.end, !dbg !2965

if.else:                                          ; preds = %entry
  store i32 0, i32* %totedge, align 4, !dbg !2966
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2967
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2968
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !2969
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 26, !dbg !2970
  %13 = load i32, i32* %totvert, align 8, !dbg !2970
  %14 = load i32, i32* %totedge, align 4, !dbg !2971
  call void @renew_softbody(%struct.Scene* %10, %struct.Object* %11, i32 %13, i32 %14), !dbg !2972
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2973
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 111, !dbg !2974
  %16 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2974
  store %struct.SoftBody* %16, %struct.SoftBody** %sb, align 8, !dbg !2975
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2976
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 2, !dbg !2977
  %18 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2977
  store %struct.BodyPoint* %18, %struct.BodyPoint** %bp, align 8, !dbg !2978
  store i32 0, i32* %a, align 4, !dbg !2979
  br label %for.cond, !dbg !2981

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load i32, i32* %a, align 4, !dbg !2982
  %20 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !2984
  %totvert3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 26, !dbg !2985
  %21 = load i32, i32* %totvert3, align 8, !dbg !2985
  %cmp = icmp slt i32 %19, %21, !dbg !2986
  br i1 %cmp, label %for.body, label %for.end, !dbg !2987

for.body:                                         ; preds = %for.cond
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2988
  %softflag5 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 104, !dbg !2991
  %23 = load i16, i16* %softflag5, align 2, !dbg !2991
  %conv6 = sext i16 %23 to i32, !dbg !2988
  %and7 = and i32 %conv6, 2, !dbg !2992
  %tobool8 = icmp ne i32 %and7, 0, !dbg !2992
  br i1 %tobool8, label %land.lhs.true, label %if.else14, !dbg !2993

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !2994
  %vertgroup = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %24, i32 0, i32 18, !dbg !2995
  %25 = load i16, i16* %vertgroup, align 4, !dbg !2995
  %conv9 = sext i16 %25 to i32, !dbg !2994
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !2994
  br i1 %tobool10, label %if.then11, label %if.else14, !dbg !2996

if.then11:                                        ; preds = %land.lhs.true
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2997
  %27 = load i32, i32* %a, align 4, !dbg !2999
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3000
  %vertgroup12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 18, !dbg !3001
  %29 = load i16, i16* %vertgroup12, align 4, !dbg !3001
  %conv13 = sext i16 %29 to i32, !dbg !3000
  %sub = sub nsw i32 %conv13, 1, !dbg !3002
  %30 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3003
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %30, i32 0, i32 6, !dbg !3004
  call void @get_scalar_from_vertexgroup(%struct.Object* %26, i32 %27, i32 %sub, float* %goal), !dbg !3005
  br label %if.end22, !dbg !3006

if.else14:                                        ; preds = %land.lhs.true, %for.body
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3007
  %softflag15 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 104, !dbg !3010
  %32 = load i16, i16* %softflag15, align 2, !dbg !3010
  %conv16 = sext i16 %32 to i32, !dbg !3007
  %and17 = and i32 %conv16, 2, !dbg !3011
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3011
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !3012

if.then19:                                        ; preds = %if.else14
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3013
  %defgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 17, !dbg !3015
  %34 = load float, float* %defgoal, align 8, !dbg !3015
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3016
  %goal20 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i32 0, i32 6, !dbg !3017
  store float %34, float* %goal20, align 8, !dbg !3018
  br label %if.end21, !dbg !3019

if.end21:                                         ; preds = %if.then19, %if.else14
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then11
  %36 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3020
  %namedVG_Mass = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %36, i32 0, i32 8, !dbg !3022
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %namedVG_Mass, i64 0, i64 0, !dbg !3020
  %37 = load i8, i8* %arrayidx, align 8, !dbg !3020
  %tobool23 = icmp ne i8 %37, 0, !dbg !3020
  br i1 %tobool23, label %if.then24, label %if.end30, !dbg !3023

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %defgrp_index, metadata !3024, metadata !DIExpression()), !dbg !3026
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3027
  %39 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3028
  %namedVG_Mass25 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %39, i32 0, i32 8, !dbg !3029
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %namedVG_Mass25, i64 0, i64 0, !dbg !3028
  %call = call i32 @defgroup_name_index(%struct.Object* %38, i8* %arraydecay), !dbg !3030
  store i32 %call, i32* %defgrp_index, align 4, !dbg !3026
  %40 = load i32, i32* %defgrp_index, align 4, !dbg !3031
  %cmp26 = icmp ne i32 %40, -1, !dbg !3033
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !3034

if.then28:                                        ; preds = %if.then24
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3035
  %42 = load i32, i32* %a, align 4, !dbg !3037
  %43 = load i32, i32* %defgrp_index, align 4, !dbg !3038
  %44 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3039
  %mass = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %44, i32 0, i32 20, !dbg !3040
  call void @get_scalar_from_vertexgroup(%struct.Object* %41, i32 %42, i32 %43, float* %mass), !dbg !3041
  br label %if.end29, !dbg !3042

if.end29:                                         ; preds = %if.then28, %if.then24
  br label %if.end30, !dbg !3043

if.end30:                                         ; preds = %if.end29, %if.end22
  %45 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3044
  %springweight = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %45, i32 0, i32 21, !dbg !3045
  store float 1.000000e+00, float* %springweight, align 8, !dbg !3046
  %46 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3047
  %namedVG_Spring_K = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %46, i32 0, i32 23, !dbg !3049
  %arrayidx31 = getelementptr inbounds [64 x i8], [64 x i8]* %namedVG_Spring_K, i64 0, i64 0, !dbg !3047
  %47 = load i8, i8* %arrayidx31, align 8, !dbg !3047
  %tobool32 = icmp ne i8 %47, 0, !dbg !3047
  br i1 %tobool32, label %if.then33, label %if.end43, !dbg !3050

if.then33:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata i32* %defgrp_index34, metadata !3051, metadata !DIExpression()), !dbg !3053
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3054
  %49 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3055
  %namedVG_Spring_K35 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %49, i32 0, i32 23, !dbg !3056
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %namedVG_Spring_K35, i64 0, i64 0, !dbg !3055
  %call37 = call i32 @defgroup_name_index(%struct.Object* %48, i8* %arraydecay36), !dbg !3057
  store i32 %call37, i32* %defgrp_index34, align 4, !dbg !3053
  %50 = load i32, i32* %defgrp_index34, align 4, !dbg !3058
  %cmp38 = icmp ne i32 %50, -1, !dbg !3060
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !3061

if.then40:                                        ; preds = %if.then33
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3062
  %52 = load i32, i32* %a, align 4, !dbg !3064
  %53 = load i32, i32* %defgrp_index34, align 4, !dbg !3065
  %54 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3066
  %springweight41 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %54, i32 0, i32 21, !dbg !3067
  call void @get_scalar_from_vertexgroup(%struct.Object* %51, i32 %52, i32 %53, float* %springweight41), !dbg !3068
  br label %if.end42, !dbg !3069

if.end42:                                         ; preds = %if.then40, %if.then33
  br label %if.end43, !dbg !3070

if.end43:                                         ; preds = %if.end42, %if.end30
  br label %for.inc, !dbg !3071

for.inc:                                          ; preds = %if.end43
  %55 = load i32, i32* %a, align 4, !dbg !3072
  %inc = add nsw i32 %55, 1, !dbg !3072
  store i32 %inc, i32* %a, align 4, !dbg !3072
  %56 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3073
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %56, i32 1, !dbg !3073
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !3073
  br label %for.cond, !dbg !3074, !llvm.loop !3075

for.end:                                          ; preds = %for.cond
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3077
  %softflag44 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 104, !dbg !3079
  %58 = load i16, i16* %softflag44, align 2, !dbg !3079
  %conv45 = sext i16 %58 to i32, !dbg !3077
  %and46 = and i32 %conv45, 4, !dbg !3080
  %tobool47 = icmp ne i32 %and46, 0, !dbg !3080
  br i1 %tobool47, label %if.then48, label %if.end80, !dbg !3081

if.then48:                                        ; preds = %for.end
  %59 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3082
  %tobool49 = icmp ne %struct.MEdge* %59, null, !dbg !3082
  br i1 %tobool49, label %if.then50, label %if.end79, !dbg !3085

if.then50:                                        ; preds = %if.then48
  %60 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3086
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %60, i32 0, i32 3, !dbg !3088
  %61 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !3088
  store %struct.BodySpring* %61, %struct.BodySpring** %bs, align 8, !dbg !3089
  %62 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3090
  %totedge51 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %62, i32 0, i32 27, !dbg !3092
  %63 = load i32, i32* %totedge51, align 4, !dbg !3092
  store i32 %63, i32* %a, align 4, !dbg !3093
  br label %for.cond52, !dbg !3094

for.cond52:                                       ; preds = %for.inc58, %if.then50
  %64 = load i32, i32* %a, align 4, !dbg !3095
  %cmp53 = icmp sgt i32 %64, 0, !dbg !3097
  br i1 %cmp53, label %for.body55, label %for.end61, !dbg !3098

for.body55:                                       ; preds = %for.cond52
  %65 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3099
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %65, i32 0, i32 0, !dbg !3101
  %66 = load i32, i32* %v1, align 4, !dbg !3101
  %67 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3102
  %v156 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %67, i32 0, i32 0, !dbg !3103
  store i32 %66, i32* %v156, align 4, !dbg !3104
  %68 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3105
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %68, i32 0, i32 1, !dbg !3106
  %69 = load i32, i32* %v2, align 4, !dbg !3106
  %70 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3107
  %v257 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %70, i32 0, i32 1, !dbg !3108
  store i32 %69, i32* %v257, align 4, !dbg !3109
  %71 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3110
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %71, i32 0, i32 6, !dbg !3111
  store i32 1, i32* %springtype, align 4, !dbg !3112
  br label %for.inc58, !dbg !3113

for.inc58:                                        ; preds = %for.body55
  %72 = load i32, i32* %a, align 4, !dbg !3114
  %dec = add nsw i32 %72, -1, !dbg !3114
  store i32 %dec, i32* %a, align 4, !dbg !3114
  %73 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3115
  %incdec.ptr59 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %73, i32 1, !dbg !3115
  store %struct.MEdge* %incdec.ptr59, %struct.MEdge** %medge, align 8, !dbg !3115
  %74 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3116
  %incdec.ptr60 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %74, i32 1, !dbg !3116
  store %struct.BodySpring* %incdec.ptr60, %struct.BodySpring** %bs, align 8, !dbg !3116
  br label %for.cond52, !dbg !3117, !llvm.loop !3118

for.end61:                                        ; preds = %for.cond52
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3120
  %softflag62 = getelementptr inbounds %struct.Object, %struct.Object* %75, i32 0, i32 104, !dbg !3122
  %76 = load i16, i16* %softflag62, align 2, !dbg !3122
  %conv63 = sext i16 %76 to i32, !dbg !3120
  %and64 = and i32 %conv63, 8, !dbg !3123
  %tobool65 = icmp ne i32 %and64, 0, !dbg !3123
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !3124

if.then66:                                        ; preds = %for.end61
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3125
  call void @add_mesh_quad_diag_springs(%struct.Object* %77), !dbg !3127
  br label %if.end67, !dbg !3128

if.end67:                                         ; preds = %if.then66, %for.end61
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3129
  call void @build_bps_springlist(%struct.Object* %78), !dbg !3130
  %79 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3131
  %secondspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %79, i32 0, i32 32, !dbg !3133
  %80 = load float, float* %secondspring, align 8, !dbg !3133
  %cmp68 = fcmp ogt float %80, 0x3E7AD7F2A0000000, !dbg !3134
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !3135

if.then70:                                        ; preds = %if.end67
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3136
  %82 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3138
  %secondspring71 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %82, i32 0, i32 32, !dbg !3139
  %83 = load float, float* %secondspring71, align 8, !dbg !3139
  call void @add_2nd_order_springs(%struct.Object* %81, float %83), !dbg !3140
  %84 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3141
  call void @build_bps_springlist(%struct.Object* %84), !dbg !3142
  br label %if.end72, !dbg !3143

if.end72:                                         ; preds = %if.then70, %if.end67
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3144
  call void @springs_from_mesh(%struct.Object* %85), !dbg !3145
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3146
  %softflag73 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 104, !dbg !3148
  %87 = load i16, i16* %softflag73, align 2, !dbg !3148
  %conv74 = sext i16 %87 to i32, !dbg !3146
  %and75 = and i32 %conv74, 512, !dbg !3149
  %tobool76 = icmp ne i32 %and75, 0, !dbg !3149
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3150

if.then77:                                        ; preds = %if.end72
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3151
  call void @calculate_collision_balls(%struct.Object* %88), !dbg !3153
  br label %if.end78, !dbg !3154

if.end78:                                         ; preds = %if.then77, %if.end72
  br label %if.end79, !dbg !3155

if.end79:                                         ; preds = %if.end78, %if.then48
  br label %if.end80, !dbg !3156

if.end80:                                         ; preds = %if.end79, %for.end
  ret void, !dbg !3157
}

; Function Attrs: noinline nounwind uwtable
define internal void @lattice_to_softbody(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !3158 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %totvert = alloca i32, align 4
  %totspring = alloca i32, align 4
  %a = alloca i32, align 4
  %bp = alloca %struct.BodyPoint*, align 8
  %bpnt = alloca %struct.BPoint*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3159, metadata !DIExpression()), !dbg !3160
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !3163, metadata !DIExpression()), !dbg !3213
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3214
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3215
  %1 = load i8*, i8** %data, align 8, !dbg !3215
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !3214
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !3213
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !3216, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3218, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.declare(metadata i32* %totspring, metadata !3220, metadata !DIExpression()), !dbg !3221
  store i32 0, i32* %totspring, align 4, !dbg !3221
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3222, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpnt, metadata !3226, metadata !DIExpression()), !dbg !3229
  %3 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3230
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %3, i32 0, i32 21, !dbg !3231
  %4 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !3231
  store %struct.BPoint* %4, %struct.BPoint** %bpnt, align 8, !dbg !3229
  %5 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3232
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %5, i32 0, i32 2, !dbg !3233
  %6 = load i16, i16* %pntsu, align 8, !dbg !3233
  %conv = sext i16 %6 to i32, !dbg !3232
  %7 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3234
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %7, i32 0, i32 3, !dbg !3235
  %8 = load i16, i16* %pntsv, align 2, !dbg !3235
  %conv1 = sext i16 %8 to i32, !dbg !3234
  %mul = mul nsw i32 %conv, %conv1, !dbg !3236
  %9 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3237
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %9, i32 0, i32 4, !dbg !3238
  %10 = load i16, i16* %pntsw, align 4, !dbg !3238
  %conv2 = sext i16 %10 to i32, !dbg !3237
  %mul3 = mul nsw i32 %mul, %conv2, !dbg !3239
  store i32 %mul3, i32* %totvert, align 4, !dbg !3240
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3241
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 104, !dbg !3243
  %12 = load i16, i16* %softflag, align 2, !dbg !3243
  %conv4 = sext i16 %12 to i32, !dbg !3241
  %and = and i32 %conv4, 4, !dbg !3244
  %tobool = icmp ne i32 %and, 0, !dbg !3244
  br i1 %tobool, label %if.then, label %if.end47, !dbg !3245

if.then:                                          ; preds = %entry
  %13 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3246
  %pntsu5 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %13, i32 0, i32 2, !dbg !3248
  %14 = load i16, i16* %pntsu5, align 8, !dbg !3248
  %conv6 = sext i16 %14 to i32, !dbg !3246
  %sub = sub nsw i32 %conv6, 1, !dbg !3249
  %15 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3250
  %pntsv7 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %15, i32 0, i32 3, !dbg !3251
  %16 = load i16, i16* %pntsv7, align 2, !dbg !3251
  %conv8 = sext i16 %16 to i32, !dbg !3250
  %mul9 = mul nsw i32 %sub, %conv8, !dbg !3252
  %17 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3253
  %pntsv10 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %17, i32 0, i32 3, !dbg !3254
  %18 = load i16, i16* %pntsv10, align 2, !dbg !3254
  %conv11 = sext i16 %18 to i32, !dbg !3253
  %sub12 = sub nsw i32 %conv11, 1, !dbg !3255
  %19 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3256
  %pntsu13 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %19, i32 0, i32 2, !dbg !3257
  %20 = load i16, i16* %pntsu13, align 8, !dbg !3257
  %conv14 = sext i16 %20 to i32, !dbg !3256
  %mul15 = mul nsw i32 %sub12, %conv14, !dbg !3258
  %add = add nsw i32 %mul9, %mul15, !dbg !3259
  %21 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3260
  %pntsw16 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %21, i32 0, i32 4, !dbg !3261
  %22 = load i16, i16* %pntsw16, align 4, !dbg !3261
  %conv17 = sext i16 %22 to i32, !dbg !3260
  %mul18 = mul nsw i32 %add, %conv17, !dbg !3262
  %23 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3263
  %pntsu19 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %23, i32 0, i32 2, !dbg !3264
  %24 = load i16, i16* %pntsu19, align 8, !dbg !3264
  %conv20 = sext i16 %24 to i32, !dbg !3263
  %25 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3265
  %pntsv21 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %25, i32 0, i32 3, !dbg !3266
  %26 = load i16, i16* %pntsv21, align 2, !dbg !3266
  %conv22 = sext i16 %26 to i32, !dbg !3265
  %mul23 = mul nsw i32 %conv20, %conv22, !dbg !3267
  %27 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3268
  %pntsw24 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %27, i32 0, i32 4, !dbg !3269
  %28 = load i16, i16* %pntsw24, align 4, !dbg !3269
  %conv25 = sext i16 %28 to i32, !dbg !3268
  %sub26 = sub nsw i32 %conv25, 1, !dbg !3270
  %mul27 = mul nsw i32 %mul23, %sub26, !dbg !3271
  %add28 = add nsw i32 %mul18, %mul27, !dbg !3272
  store i32 %add28, i32* %totspring, align 4, !dbg !3273
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3274
  %softflag29 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 104, !dbg !3276
  %30 = load i16, i16* %softflag29, align 2, !dbg !3276
  %conv30 = sext i16 %30 to i32, !dbg !3274
  %and31 = and i32 %conv30, 8, !dbg !3277
  %tobool32 = icmp ne i32 %and31, 0, !dbg !3277
  br i1 %tobool32, label %if.then33, label %if.end, !dbg !3278

if.then33:                                        ; preds = %if.then
  %31 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3279
  %pntsu34 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %31, i32 0, i32 2, !dbg !3281
  %32 = load i16, i16* %pntsu34, align 8, !dbg !3281
  %conv35 = sext i16 %32 to i32, !dbg !3279
  %sub36 = sub nsw i32 %conv35, 1, !dbg !3282
  %mul37 = mul nsw i32 4, %sub36, !dbg !3283
  %33 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3284
  %pntsv38 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %33, i32 0, i32 3, !dbg !3285
  %34 = load i16, i16* %pntsv38, align 2, !dbg !3285
  %conv39 = sext i16 %34 to i32, !dbg !3284
  %sub40 = sub nsw i32 %conv39, 1, !dbg !3286
  %mul41 = mul nsw i32 %mul37, %sub40, !dbg !3287
  %35 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3288
  %pntsw42 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %35, i32 0, i32 4, !dbg !3289
  %36 = load i16, i16* %pntsw42, align 4, !dbg !3289
  %conv43 = sext i16 %36 to i32, !dbg !3288
  %sub44 = sub nsw i32 %conv43, 1, !dbg !3290
  %mul45 = mul nsw i32 %mul41, %sub44, !dbg !3291
  %37 = load i32, i32* %totspring, align 4, !dbg !3292
  %add46 = add nsw i32 %37, %mul45, !dbg !3292
  store i32 %add46, i32* %totspring, align 4, !dbg !3292
  br label %if.end, !dbg !3293

if.end:                                           ; preds = %if.then33, %if.then
  br label %if.end47, !dbg !3294

if.end47:                                         ; preds = %if.end, %entry
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3295
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3296
  %40 = load i32, i32* %totvert, align 4, !dbg !3297
  %41 = load i32, i32* %totspring, align 4, !dbg !3298
  call void @renew_softbody(%struct.Scene* %38, %struct.Object* %39, i32 %40, i32 %41), !dbg !3299
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3300
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 111, !dbg !3301
  %43 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !3301
  store %struct.SoftBody* %43, %struct.SoftBody** %sb, align 8, !dbg !3302
  %44 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3303
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %44, i32 0, i32 2, !dbg !3304
  %45 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !3304
  store %struct.BodyPoint* %45, %struct.BodyPoint** %bp, align 8, !dbg !3305
  store i32 0, i32* %a, align 4, !dbg !3306
  br label %for.cond, !dbg !3308

for.cond:                                         ; preds = %for.inc, %if.end47
  %46 = load i32, i32* %a, align 4, !dbg !3309
  %47 = load i32, i32* %totvert, align 4, !dbg !3311
  %cmp = icmp slt i32 %46, %47, !dbg !3312
  br i1 %cmp, label %for.body, label %for.end, !dbg !3313

for.body:                                         ; preds = %for.cond
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3314
  %softflag49 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 104, !dbg !3317
  %49 = load i16, i16* %softflag49, align 2, !dbg !3317
  %conv50 = sext i16 %49 to i32, !dbg !3314
  %and51 = and i32 %conv50, 2, !dbg !3318
  %tobool52 = icmp ne i32 %and51, 0, !dbg !3318
  br i1 %tobool52, label %land.lhs.true, label %if.else, !dbg !3319

land.lhs.true:                                    ; preds = %for.body
  %50 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3320
  %vertgroup = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %50, i32 0, i32 18, !dbg !3321
  %51 = load i16, i16* %vertgroup, align 4, !dbg !3321
  %conv53 = sext i16 %51 to i32, !dbg !3320
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !3320
  br i1 %tobool54, label %if.then55, label %if.else, !dbg !3322

if.then55:                                        ; preds = %land.lhs.true
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3323
  %53 = load i32, i32* %a, align 4, !dbg !3325
  %54 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3326
  %vertgroup56 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %54, i32 0, i32 18, !dbg !3327
  %55 = load i16, i16* %vertgroup56, align 4, !dbg !3327
  %conv57 = sext i16 %55 to i32, !dbg !3326
  %sub58 = sub nsw i32 %conv57, 1, !dbg !3328
  %conv59 = trunc i32 %sub58 to i16, !dbg !3329
  %conv60 = sext i16 %conv59 to i32, !dbg !3329
  %56 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3330
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %56, i32 0, i32 6, !dbg !3331
  call void @get_scalar_from_vertexgroup(%struct.Object* %52, i32 %53, i32 %conv60, float* %goal), !dbg !3332
  br label %if.end68, !dbg !3333

if.else:                                          ; preds = %land.lhs.true, %for.body
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3334
  %softflag61 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 104, !dbg !3337
  %58 = load i16, i16* %softflag61, align 2, !dbg !3337
  %conv62 = sext i16 %58 to i32, !dbg !3334
  %and63 = and i32 %conv62, 2, !dbg !3338
  %tobool64 = icmp ne i32 %and63, 0, !dbg !3338
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !3339

if.then65:                                        ; preds = %if.else
  %59 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3340
  %defgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %59, i32 0, i32 17, !dbg !3342
  %60 = load float, float* %defgoal, align 8, !dbg !3342
  %61 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3343
  %goal66 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %61, i32 0, i32 6, !dbg !3344
  store float %60, float* %goal66, align 8, !dbg !3345
  br label %if.end67, !dbg !3346

if.end67:                                         ; preds = %if.then65, %if.else
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then55
  br label %for.inc, !dbg !3347

for.inc:                                          ; preds = %if.end68
  %62 = load i32, i32* %a, align 4, !dbg !3348
  %inc = add nsw i32 %62, 1, !dbg !3348
  store i32 %inc, i32* %a, align 4, !dbg !3348
  %63 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3349
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %63, i32 1, !dbg !3349
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !3349
  %64 = load %struct.BPoint*, %struct.BPoint** %bpnt, align 8, !dbg !3350
  %incdec.ptr69 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %64, i32 1, !dbg !3350
  store %struct.BPoint* %incdec.ptr69, %struct.BPoint** %bpnt, align 8, !dbg !3350
  br label %for.cond, !dbg !3351, !llvm.loop !3352

for.end:                                          ; preds = %for.cond
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3354
  %softflag70 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 104, !dbg !3356
  %66 = load i16, i16* %softflag70, align 2, !dbg !3356
  %conv71 = sext i16 %66 to i32, !dbg !3354
  %and72 = and i32 %conv71, 4, !dbg !3357
  %tobool73 = icmp ne i32 %and72, 0, !dbg !3357
  br i1 %tobool73, label %if.then74, label %if.end79, !dbg !3358

if.then74:                                        ; preds = %for.end
  %67 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3359
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3361
  %soft75 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 111, !dbg !3362
  %69 = load %struct.SoftBody*, %struct.SoftBody** %soft75, align 8, !dbg !3362
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %69, i32 0, i32 3, !dbg !3363
  %70 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !3363
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3364
  %softflag76 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 104, !dbg !3365
  %72 = load i16, i16* %softflag76, align 2, !dbg !3365
  %conv77 = sext i16 %72 to i32, !dbg !3364
  %and78 = and i32 %conv77, 8, !dbg !3366
  %73 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3367
  call void @makelatticesprings(%struct.Lattice* %67, %struct.BodySpring* %70, i32 %and78, %struct.Object* %73), !dbg !3368
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3369
  call void @build_bps_springlist(%struct.Object* %74), !dbg !3370
  br label %if.end79, !dbg !3371

if.end79:                                         ; preds = %if.then74, %for.end
  ret void, !dbg !3372
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_surf_to_softbody(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !3373 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bpnt = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %curindex = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totspring = alloca i32, align 4
  %setgoal = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3374, metadata !DIExpression()), !dbg !3375
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3376, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3378, metadata !DIExpression()), !dbg !3480
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3481
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3482
  %1 = load i8*, i8** %data, align 8, !dbg !3482
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !3481
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !3480
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !3485, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3489, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpnt, metadata !3540, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3542, metadata !DIExpression()), !dbg !3543
  call void @llvm.dbg.declare(metadata i32* %curindex, metadata !3544, metadata !DIExpression()), !dbg !3545
  store i32 0, i32* %curindex, align 4, !dbg !3545
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.declare(metadata i32* %totspring, metadata !3548, metadata !DIExpression()), !dbg !3549
  store i32 0, i32* %totspring, align 4, !dbg !3549
  call void @llvm.dbg.declare(metadata i32* %setgoal, metadata !3550, metadata !DIExpression()), !dbg !3551
  store i32 0, i32* %setgoal, align 4, !dbg !3551
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3552
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 3, !dbg !3553
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %nurb), !dbg !3554
  store i32 %call, i32* %totvert, align 4, !dbg !3555
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3556
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 104, !dbg !3558
  %5 = load i16, i16* %softflag, align 2, !dbg !3558
  %conv = sext i16 %5 to i32, !dbg !3556
  %and = and i32 %conv, 4, !dbg !3559
  %tobool = icmp ne i32 %and, 0, !dbg !3559
  br i1 %tobool, label %if.then, label %if.end6, !dbg !3560

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3561
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !3564
  %7 = load i16, i16* %type, align 8, !dbg !3564
  %conv1 = sext i16 %7 to i32, !dbg !3561
  %cmp = icmp eq i32 %conv1, 2, !dbg !3565
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3566

if.then3:                                         ; preds = %if.then
  %8 = load i32, i32* %totvert, align 4, !dbg !3567
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3569
  %nurb4 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 3, !dbg !3570
  %call5 = call i32 @BLI_countlist(%struct.ListBase* %nurb4), !dbg !3571
  %sub = sub nsw i32 %8, %call5, !dbg !3572
  store i32 %sub, i32* %totspring, align 4, !dbg !3573
  br label %if.end, !dbg !3574

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !3575

if.end6:                                          ; preds = %if.end, %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3576
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3577
  %12 = load i32, i32* %totvert, align 4, !dbg !3578
  %13 = load i32, i32* %totspring, align 4, !dbg !3579
  call void @renew_softbody(%struct.Scene* %10, %struct.Object* %11, i32 %12, i32 %13), !dbg !3580
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3581
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 111, !dbg !3582
  %15 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !3582
  store %struct.SoftBody* %15, %struct.SoftBody** %sb, align 8, !dbg !3583
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3584
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 2, !dbg !3585
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !3585
  store %struct.BodyPoint* %17, %struct.BodyPoint** %bp, align 8, !dbg !3586
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3587
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 3, !dbg !3588
  %19 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !3588
  store %struct.BodySpring* %19, %struct.BodySpring** %bs, align 8, !dbg !3589
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3590
  %softflag7 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 104, !dbg !3592
  %21 = load i16, i16* %softflag7, align 2, !dbg !3592
  %conv8 = sext i16 %21 to i32, !dbg !3590
  %and9 = and i32 %conv8, 2, !dbg !3593
  %tobool10 = icmp ne i32 %and9, 0, !dbg !3593
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !3594

if.then11:                                        ; preds = %if.end6
  store i32 1, i32* %setgoal, align 4, !dbg !3595
  br label %if.end12, !dbg !3596

if.end12:                                         ; preds = %if.then11, %if.end6
  %22 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3597
  %nurb13 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 3, !dbg !3599
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb13, i32 0, i32 0, !dbg !3600
  %23 = load i8*, i8** %first, align 8, !dbg !3600
  %24 = bitcast i8* %23 to %struct.Nurb*, !dbg !3597
  store %struct.Nurb* %24, %struct.Nurb** %nu, align 8, !dbg !3601
  br label %for.cond, !dbg !3602

for.cond:                                         ; preds = %for.inc116, %if.end12
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3603
  %tobool14 = icmp ne %struct.Nurb* %25, null, !dbg !3605
  br i1 %tobool14, label %for.body, label %for.end117, !dbg !3605

for.body:                                         ; preds = %for.cond
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3606
  %bezt15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 18, !dbg !3609
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt15, align 8, !dbg !3609
  %tobool16 = icmp ne %struct.BezTriple* %27, null, !dbg !3606
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !3610

if.then17:                                        ; preds = %for.body
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3611
  %bezt18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 18, !dbg !3614
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt18, align 8, !dbg !3614
  store %struct.BezTriple* %29, %struct.BezTriple** %bezt, align 8, !dbg !3615
  store i32 0, i32* %a, align 4, !dbg !3616
  br label %for.cond19, !dbg !3617

for.cond19:                                       ; preds = %for.inc, %if.then17
  %30 = load i32, i32* %a, align 4, !dbg !3618
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3620
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !3621
  %32 = load i32, i32* %pntsu, align 8, !dbg !3621
  %cmp20 = icmp slt i32 %30, %32, !dbg !3622
  br i1 %cmp20, label %for.body22, label %for.end, !dbg !3623

for.body22:                                       ; preds = %for.cond19
  %33 = load i32, i32* %setgoal, align 4, !dbg !3624
  %tobool23 = icmp ne i32 %33, 0, !dbg !3624
  br i1 %tobool23, label %if.then24, label %if.end38, !dbg !3627

if.then24:                                        ; preds = %for.body22
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3628
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 2, !dbg !3630
  %35 = load float, float* %weight, align 4, !dbg !3630
  %36 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3631
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %36, i32 0, i32 6, !dbg !3632
  store float %35, float* %goal, align 8, !dbg !3633
  %37 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3634
  %goal25 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %37, i32 0, i32 6, !dbg !3635
  %38 = load float, float* %goal25, align 8, !dbg !3635
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3636
  %add.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i64 1, !dbg !3637
  %goal26 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %add.ptr, i32 0, i32 6, !dbg !3638
  store float %38, float* %goal26, align 8, !dbg !3639
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3640
  %goal27 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %40, i32 0, i32 6, !dbg !3641
  %41 = load float, float* %goal27, align 8, !dbg !3641
  %42 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3642
  %add.ptr28 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %42, i64 2, !dbg !3643
  %goal29 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %add.ptr28, i32 0, i32 6, !dbg !3644
  store float %41, float* %goal29, align 8, !dbg !3645
  %43 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3646
  %add.ptr30 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %43, i64 1, !dbg !3647
  %loc_flag = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %add.ptr30, i32 0, i32 19, !dbg !3648
  %44 = load i16, i16* %loc_flag, align 8, !dbg !3649
  %conv31 = sext i16 %44 to i32, !dbg !3649
  %or = or i32 %conv31, 2, !dbg !3649
  %conv32 = trunc i32 %or to i16, !dbg !3649
  store i16 %conv32, i16* %loc_flag, align 8, !dbg !3649
  %45 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3650
  %add.ptr33 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %45, i64 2, !dbg !3651
  %loc_flag34 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %add.ptr33, i32 0, i32 19, !dbg !3652
  %46 = load i16, i16* %loc_flag34, align 8, !dbg !3653
  %conv35 = sext i16 %46 to i32, !dbg !3653
  %or36 = or i32 %conv35, 2, !dbg !3653
  %conv37 = trunc i32 %or36 to i16, !dbg !3653
  store i16 %conv37, i16* %loc_flag34, align 8, !dbg !3653
  br label %if.end38, !dbg !3654

if.end38:                                         ; preds = %if.then24, %for.body22
  %47 = load i32, i32* %totspring, align 4, !dbg !3655
  %tobool39 = icmp ne i32 %47, 0, !dbg !3655
  br i1 %tobool39, label %if.then40, label %if.end77, !dbg !3657

if.then40:                                        ; preds = %if.end38
  %48 = load i32, i32* %a, align 4, !dbg !3658
  %cmp41 = icmp sgt i32 %48, 0, !dbg !3661
  br i1 %cmp41, label %if.then43, label %if.end50, !dbg !3662

if.then43:                                        ; preds = %if.then40
  %49 = load i32, i32* %curindex, align 4, !dbg !3663
  %sub44 = sub nsw i32 %49, 3, !dbg !3665
  %50 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3666
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %50, i32 0, i32 0, !dbg !3667
  store i32 %sub44, i32* %v1, align 4, !dbg !3668
  %51 = load i32, i32* %curindex, align 4, !dbg !3669
  %52 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3670
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %52, i32 0, i32 1, !dbg !3671
  store i32 %51, i32* %v2, align 4, !dbg !3672
  %53 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3673
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %53, i32 0, i32 6, !dbg !3674
  store i32 4, i32* %springtype, align 4, !dbg !3675
  %54 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3676
  %add.ptr45 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %54, i64 -1, !dbg !3677
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr45, i32 0, i32 0, !dbg !3678
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !3679
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3679
  %55 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3680
  %vec46 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %55, i32 0, i32 0, !dbg !3681
  %arrayidx47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec46, i64 0, i64 0, !dbg !3680
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx47, i64 0, i64 0, !dbg !3680
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3682
  %call49 = call float @globallen(float* %arraydecay, float* %arraydecay48, %struct.Object* %56), !dbg !3683
  %57 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3684
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %57, i32 0, i32 2, !dbg !3685
  store float %call49, float* %len, align 4, !dbg !3686
  %58 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3687
  %incdec.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %58, i32 1, !dbg !3687
  store %struct.BodySpring* %incdec.ptr, %struct.BodySpring** %bs, align 8, !dbg !3687
  br label %if.end50, !dbg !3688

if.end50:                                         ; preds = %if.then43, %if.then40
  %59 = load i32, i32* %curindex, align 4, !dbg !3689
  %60 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3690
  %v151 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %60, i32 0, i32 0, !dbg !3691
  store i32 %59, i32* %v151, align 4, !dbg !3692
  %61 = load i32, i32* %curindex, align 4, !dbg !3693
  %add = add nsw i32 %61, 1, !dbg !3694
  %62 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3695
  %v252 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %62, i32 0, i32 1, !dbg !3696
  store i32 %add, i32* %v252, align 4, !dbg !3697
  %63 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3698
  %springtype53 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %63, i32 0, i32 6, !dbg !3699
  store i32 4, i32* %springtype53, align 4, !dbg !3700
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3701
  %vec54 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i32 0, i32 0, !dbg !3702
  %arrayidx55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec54, i64 0, i64 0, !dbg !3701
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !3701
  %65 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3703
  %vec57 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %65, i32 0, i32 0, !dbg !3704
  %arrayidx58 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec57, i64 0, i64 1, !dbg !3703
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx58, i64 0, i64 0, !dbg !3703
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3705
  %call60 = call float @globallen(float* %arraydecay56, float* %arraydecay59, %struct.Object* %66), !dbg !3706
  %67 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3707
  %len61 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %67, i32 0, i32 2, !dbg !3708
  store float %call60, float* %len61, align 4, !dbg !3709
  %68 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3710
  %incdec.ptr62 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %68, i32 1, !dbg !3710
  store %struct.BodySpring* %incdec.ptr62, %struct.BodySpring** %bs, align 8, !dbg !3710
  %69 = load i32, i32* %curindex, align 4, !dbg !3711
  %add63 = add nsw i32 %69, 1, !dbg !3712
  %70 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3713
  %v164 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %70, i32 0, i32 0, !dbg !3714
  store i32 %add63, i32* %v164, align 4, !dbg !3715
  %71 = load i32, i32* %curindex, align 4, !dbg !3716
  %add65 = add nsw i32 %71, 2, !dbg !3717
  %72 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3718
  %v266 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %72, i32 0, i32 1, !dbg !3719
  store i32 %add65, i32* %v266, align 4, !dbg !3720
  %73 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3721
  %springtype67 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %73, i32 0, i32 6, !dbg !3722
  store i32 4, i32* %springtype67, align 4, !dbg !3723
  %74 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3724
  %vec68 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %74, i32 0, i32 0, !dbg !3725
  %arrayidx69 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec68, i64 0, i64 1, !dbg !3724
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 0, !dbg !3724
  %75 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3726
  %vec71 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %75, i32 0, i32 0, !dbg !3727
  %arrayidx72 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec71, i64 0, i64 2, !dbg !3726
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !3726
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3728
  %call74 = call float @globallen(float* %arraydecay70, float* %arraydecay73, %struct.Object* %76), !dbg !3729
  %77 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3730
  %len75 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %77, i32 0, i32 2, !dbg !3731
  store float %call74, float* %len75, align 4, !dbg !3732
  %78 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3733
  %incdec.ptr76 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %78, i32 1, !dbg !3733
  store %struct.BodySpring* %incdec.ptr76, %struct.BodySpring** %bs, align 8, !dbg !3733
  br label %if.end77, !dbg !3734

if.end77:                                         ; preds = %if.end50, %if.end38
  br label %for.inc, !dbg !3735

for.inc:                                          ; preds = %if.end77
  %79 = load i32, i32* %a, align 4, !dbg !3736
  %inc = add nsw i32 %79, 1, !dbg !3736
  store i32 %inc, i32* %a, align 4, !dbg !3736
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3737
  %incdec.ptr78 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %80, i32 1, !dbg !3737
  store %struct.BezTriple* %incdec.ptr78, %struct.BezTriple** %bezt, align 8, !dbg !3737
  %81 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3738
  %add.ptr79 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %81, i64 3, !dbg !3738
  store %struct.BodyPoint* %add.ptr79, %struct.BodyPoint** %bp, align 8, !dbg !3738
  %82 = load i32, i32* %curindex, align 4, !dbg !3739
  %add80 = add nsw i32 %82, 3, !dbg !3739
  store i32 %add80, i32* %curindex, align 4, !dbg !3739
  br label %for.cond19, !dbg !3740, !llvm.loop !3741

for.end:                                          ; preds = %for.cond19
  br label %if.end115, !dbg !3743

if.else:                                          ; preds = %for.body
  %83 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3744
  %bp81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %83, i32 0, i32 17, !dbg !3747
  %84 = load %struct.BPoint*, %struct.BPoint** %bp81, align 8, !dbg !3747
  store %struct.BPoint* %84, %struct.BPoint** %bpnt, align 8, !dbg !3748
  store i32 0, i32* %a, align 4, !dbg !3749
  br label %for.cond82, !dbg !3750

for.cond82:                                       ; preds = %for.inc109, %if.else
  %85 = load i32, i32* %a, align 4, !dbg !3751
  %86 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3753
  %pntsu83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %86, i32 0, i32 6, !dbg !3754
  %87 = load i32, i32* %pntsu83, align 8, !dbg !3754
  %88 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3755
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %88, i32 0, i32 7, !dbg !3756
  %89 = load i32, i32* %pntsv, align 4, !dbg !3756
  %mul = mul nsw i32 %87, %89, !dbg !3757
  %cmp84 = icmp slt i32 %85, %mul, !dbg !3758
  br i1 %cmp84, label %for.body86, label %for.end114, !dbg !3759

for.body86:                                       ; preds = %for.cond82
  %90 = load i32, i32* %setgoal, align 4, !dbg !3760
  %tobool87 = icmp ne i32 %90, 0, !dbg !3760
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !3763

if.then88:                                        ; preds = %for.body86
  %91 = load %struct.BPoint*, %struct.BPoint** %bpnt, align 8, !dbg !3764
  %weight89 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %91, i32 0, i32 2, !dbg !3766
  %92 = load float, float* %weight89, align 4, !dbg !3766
  %93 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3767
  %goal90 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %93, i32 0, i32 6, !dbg !3768
  store float %92, float* %goal90, align 8, !dbg !3769
  br label %if.end91, !dbg !3770

if.end91:                                         ; preds = %if.then88, %for.body86
  %94 = load i32, i32* %totspring, align 4, !dbg !3771
  %tobool92 = icmp ne i32 %94, 0, !dbg !3771
  br i1 %tobool92, label %land.lhs.true, label %if.end108, !dbg !3773

land.lhs.true:                                    ; preds = %if.end91
  %95 = load i32, i32* %a, align 4, !dbg !3774
  %cmp93 = icmp sgt i32 %95, 0, !dbg !3775
  br i1 %cmp93, label %if.then95, label %if.end108, !dbg !3776

if.then95:                                        ; preds = %land.lhs.true
  %96 = load i32, i32* %curindex, align 4, !dbg !3777
  %sub96 = sub nsw i32 %96, 1, !dbg !3779
  %97 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3780
  %v197 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %97, i32 0, i32 0, !dbg !3781
  store i32 %sub96, i32* %v197, align 4, !dbg !3782
  %98 = load i32, i32* %curindex, align 4, !dbg !3783
  %99 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3784
  %v298 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %99, i32 0, i32 1, !dbg !3785
  store i32 %98, i32* %v298, align 4, !dbg !3786
  %100 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3787
  %springtype99 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %100, i32 0, i32 6, !dbg !3788
  store i32 1, i32* %springtype99, align 4, !dbg !3789
  %101 = load %struct.BPoint*, %struct.BPoint** %bpnt, align 8, !dbg !3790
  %add.ptr100 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %101, i64 -1, !dbg !3791
  %vec101 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr100, i32 0, i32 0, !dbg !3792
  %arraydecay102 = getelementptr inbounds [4 x float], [4 x float]* %vec101, i64 0, i64 0, !dbg !3793
  %102 = load %struct.BPoint*, %struct.BPoint** %bpnt, align 8, !dbg !3794
  %vec103 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %102, i32 0, i32 0, !dbg !3795
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %vec103, i64 0, i64 0, !dbg !3794
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3796
  %call105 = call float @globallen(float* %arraydecay102, float* %arraydecay104, %struct.Object* %103), !dbg !3797
  %104 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3798
  %len106 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %104, i32 0, i32 2, !dbg !3799
  store float %call105, float* %len106, align 4, !dbg !3800
  %105 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !3801
  %incdec.ptr107 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %105, i32 1, !dbg !3801
  store %struct.BodySpring* %incdec.ptr107, %struct.BodySpring** %bs, align 8, !dbg !3801
  br label %if.end108, !dbg !3802

if.end108:                                        ; preds = %if.then95, %land.lhs.true, %if.end91
  br label %for.inc109, !dbg !3803

for.inc109:                                       ; preds = %if.end108
  %106 = load i32, i32* %a, align 4, !dbg !3804
  %inc110 = add nsw i32 %106, 1, !dbg !3804
  store i32 %inc110, i32* %a, align 4, !dbg !3804
  %107 = load %struct.BPoint*, %struct.BPoint** %bpnt, align 8, !dbg !3805
  %incdec.ptr111 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %107, i32 1, !dbg !3805
  store %struct.BPoint* %incdec.ptr111, %struct.BPoint** %bpnt, align 8, !dbg !3805
  %108 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3806
  %incdec.ptr112 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %108, i32 1, !dbg !3806
  store %struct.BodyPoint* %incdec.ptr112, %struct.BodyPoint** %bp, align 8, !dbg !3806
  %109 = load i32, i32* %curindex, align 4, !dbg !3807
  %inc113 = add nsw i32 %109, 1, !dbg !3807
  store i32 %inc113, i32* %curindex, align 4, !dbg !3807
  br label %for.cond82, !dbg !3808, !llvm.loop !3809

for.end114:                                       ; preds = %for.cond82
  br label %if.end115

if.end115:                                        ; preds = %for.end114, %for.end
  br label %for.inc116, !dbg !3811

for.inc116:                                       ; preds = %if.end115
  %110 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3812
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 0, !dbg !3813
  %111 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3813
  store %struct.Nurb* %111, %struct.Nurb** %nu, align 8, !dbg !3814
  br label %for.cond, !dbg !3815, !llvm.loop !3816

for.end117:                                       ; preds = %for.cond
  %112 = load i32, i32* %totspring, align 4, !dbg !3818
  %tobool118 = icmp ne i32 %112, 0, !dbg !3818
  br i1 %tobool118, label %if.then119, label %if.end126, !dbg !3820

if.then119:                                       ; preds = %for.end117
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3821
  call void @build_bps_springlist(%struct.Object* %113), !dbg !3823
  %114 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3824
  %softflag120 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 104, !dbg !3826
  %115 = load i16, i16* %softflag120, align 2, !dbg !3826
  %conv121 = sext i16 %115 to i32, !dbg !3824
  %and122 = and i32 %conv121, 512, !dbg !3827
  %tobool123 = icmp ne i32 %and122, 0, !dbg !3827
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !3828

if.then124:                                       ; preds = %if.then119
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3829
  call void @calculate_collision_balls(%struct.Object* %116), !dbg !3831
  br label %if.end125, !dbg !3832

if.end125:                                        ; preds = %if.then124, %if.then119
  br label %if.end126, !dbg !3833

if.end126:                                        ; preds = %if.end125, %for.end117
  ret void, !dbg !3834
}

; Function Attrs: noinline nounwind uwtable
define internal void @renew_softbody(%struct.Scene* %scene, %struct.Object* %ob, i32 %totpoint, i32 %totspring) #0 !dbg !3835 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %totpoint.addr = alloca i32, align 4
  %totspring.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %i = alloca i32, align 4
  %softflag = alloca i16, align 2
  %bp = alloca %struct.BodyPoint*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3838, metadata !DIExpression()), !dbg !3839
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  store i32 %totpoint, i32* %totpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoint.addr, metadata !3842, metadata !DIExpression()), !dbg !3843
  store i32 %totspring, i32* %totspring.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totspring.addr, metadata !3844, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !3846, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3848, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.declare(metadata i16* %softflag, metadata !3850, metadata !DIExpression()), !dbg !3851
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3852
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !3854
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !3854
  %cmp = icmp eq %struct.SoftBody* %1, null, !dbg !3855
  br i1 %cmp, label %if.then, label %if.else, !dbg !3856

if.then:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3857
  %call = call %struct.SoftBody* @sbNew(%struct.Scene* %2), !dbg !3858
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3859
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !3860
  store %struct.SoftBody* %call, %struct.SoftBody** %soft1, align 8, !dbg !3861
  br label %if.end, !dbg !3859

if.else:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3862
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 111, !dbg !3863
  %5 = load %struct.SoftBody*, %struct.SoftBody** %soft2, align 8, !dbg !3863
  call void @free_softbody_intern(%struct.SoftBody* %5), !dbg !3864
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3865
  %soft3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 111, !dbg !3866
  %7 = load %struct.SoftBody*, %struct.SoftBody** %soft3, align 8, !dbg !3866
  store %struct.SoftBody* %7, %struct.SoftBody** %sb, align 8, !dbg !3867
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3868
  %softflag4 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 104, !dbg !3869
  %9 = load i16, i16* %softflag4, align 2, !dbg !3869
  store i16 %9, i16* %softflag, align 2, !dbg !3870
  %10 = load i32, i32* %totpoint.addr, align 4, !dbg !3871
  %tobool = icmp ne i32 %10, 0, !dbg !3871
  br i1 %tobool, label %if.then5, label %if.end24, !dbg !3873

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %totpoint.addr, align 4, !dbg !3874
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3876
  %totpoint6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 0, !dbg !3877
  store i32 %11, i32* %totpoint6, align 8, !dbg !3878
  %13 = load i32, i32* %totspring.addr, align 4, !dbg !3879
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3880
  %totspring7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 1, !dbg !3881
  store i32 %13, i32* %totspring7, align 4, !dbg !3882
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3883
  %16 = load i32, i32* %totpoint.addr, align 4, !dbg !3884
  %conv = sext i32 %16 to i64, !dbg !3884
  %mul = mul i64 %conv, 192, !dbg !3885
  %call8 = call i8* %15(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)), !dbg !3883
  %17 = bitcast i8* %call8 to %struct.BodyPoint*, !dbg !3883
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3886
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 2, !dbg !3887
  store %struct.BodyPoint* %17, %struct.BodyPoint** %bpoint, align 8, !dbg !3888
  %19 = load i32, i32* %totspring.addr, align 4, !dbg !3889
  %tobool9 = icmp ne i32 %19, 0, !dbg !3889
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !3891

if.then10:                                        ; preds = %if.then5
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3892
  %21 = load i32, i32* %totspring.addr, align 4, !dbg !3893
  %conv11 = sext i32 %21 to i64, !dbg !3893
  %mul12 = mul i64 %conv11, 40, !dbg !3894
  %call13 = call i8* %20(i64 %mul12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !3892
  %22 = bitcast i8* %call13 to %struct.BodySpring*, !dbg !3892
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3895
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 3, !dbg !3896
  store %struct.BodySpring* %22, %struct.BodySpring** %bspring, align 8, !dbg !3897
  br label %if.end14, !dbg !3895

if.end14:                                         ; preds = %if.then10, %if.then5
  store i32 0, i32* %i, align 4, !dbg !3898
  br label %for.cond, !dbg !3900

for.cond:                                         ; preds = %for.inc, %if.end14
  %24 = load i32, i32* %i, align 4, !dbg !3901
  %25 = load i32, i32* %totpoint.addr, align 4, !dbg !3903
  %cmp15 = icmp slt i32 %24, %25, !dbg !3904
  br i1 %cmp15, label %for.body, label %for.end, !dbg !3905

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !3906, metadata !DIExpression()), !dbg !3908
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3909
  %bpoint17 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 2, !dbg !3910
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint17, align 8, !dbg !3910
  %28 = load i32, i32* %i, align 4, !dbg !3911
  %idxprom = sext i32 %28 to i64, !dbg !3909
  %arrayidx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i64 %idxprom, !dbg !3909
  store %struct.BodyPoint* %arrayidx, %struct.BodyPoint** %bp, align 8, !dbg !3908
  %29 = load i16, i16* %softflag, align 2, !dbg !3912
  %conv18 = sext i16 %29 to i32, !dbg !3912
  %and = and i32 %conv18, 2, !dbg !3914
  %tobool19 = icmp ne i32 %and, 0, !dbg !3914
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !3915

if.then20:                                        ; preds = %for.body
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !3916
  %defgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 17, !dbg !3918
  %31 = load float, float* %defgoal, align 8, !dbg !3918
  %32 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3919
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %32, i32 0, i32 6, !dbg !3920
  store float %31, float* %goal, align 8, !dbg !3921
  br label %if.end23, !dbg !3922

if.else21:                                        ; preds = %for.body
  %33 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3923
  %goal22 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %33, i32 0, i32 6, !dbg !3925
  store float 0.000000e+00, float* %goal22, align 8, !dbg !3926
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then20
  %34 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3927
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %34, i32 0, i32 13, !dbg !3928
  store i32 0, i32* %nofsprings, align 4, !dbg !3929
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3930
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i32 0, i32 14, !dbg !3931
  store i32* null, i32** %springs, align 8, !dbg !3932
  %36 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3933
  %choke = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %36, i32 0, i32 15, !dbg !3934
  store float 0.000000e+00, float* %choke, align 8, !dbg !3935
  %37 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3936
  %choke2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %37, i32 0, i32 16, !dbg !3937
  store float 0.000000e+00, float* %choke2, align 4, !dbg !3938
  %38 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3939
  %frozen = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %38, i32 0, i32 17, !dbg !3940
  store float 1.000000e+00, float* %frozen, align 8, !dbg !3941
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3942
  %colball = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i32 0, i32 18, !dbg !3943
  store float 0.000000e+00, float* %colball, align 4, !dbg !3944
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3945
  %loc_flag = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %40, i32 0, i32 19, !dbg !3946
  store i16 0, i16* %loc_flag, align 8, !dbg !3947
  %41 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3948
  %springweight = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %41, i32 0, i32 21, !dbg !3949
  store float 1.000000e+00, float* %springweight, align 8, !dbg !3950
  %42 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3951
  %mass = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %42, i32 0, i32 20, !dbg !3952
  store float 1.000000e+00, float* %mass, align 4, !dbg !3953
  br label %for.inc, !dbg !3954

for.inc:                                          ; preds = %if.end23
  %43 = load i32, i32* %i, align 4, !dbg !3955
  %inc = add nsw i32 %43, 1, !dbg !3955
  store i32 %inc, i32* %i, align 4, !dbg !3955
  br label %for.cond, !dbg !3956, !llvm.loop !3957

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !3959

if.end24:                                         ; preds = %for.end, %if.end
  ret void, !dbg !3960
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_update_positions(%struct.Object* %ob, %struct.SoftBody* %sb, [3 x float]* %vertexCos, i32 %numVerts) #0 !dbg !3961 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb.addr = alloca %struct.SoftBody*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %numVerts.addr = alloca i32, align 4
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3964, metadata !DIExpression()), !dbg !3965
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !3966, metadata !DIExpression()), !dbg !3967
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !3968, metadata !DIExpression()), !dbg !3969
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3970, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3974, metadata !DIExpression()), !dbg !3975
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !3976
  %tobool = icmp ne %struct.SoftBody* %0, null, !dbg !3976
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3978

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !3979
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %1, i32 0, i32 2, !dbg !3980
  %2 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !3980
  %tobool1 = icmp ne %struct.BodyPoint* %2, null, !dbg !3979
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3981

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !3982

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %a, align 4, !dbg !3983
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !3985
  %bpoint2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 2, !dbg !3986
  %4 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint2, align 8, !dbg !3986
  store %struct.BodyPoint* %4, %struct.BodyPoint** %bp, align 8, !dbg !3987
  br label %for.cond, !dbg !3988

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %a, align 4, !dbg !3989
  %6 = load i32, i32* %numVerts.addr, align 4, !dbg !3991
  %cmp = icmp slt i32 %5, %6, !dbg !3992
  br i1 %cmp, label %for.body, label %for.end, !dbg !3993

for.body:                                         ; preds = %for.cond
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3994
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %7, i32 0, i32 0, !dbg !3996
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !3994
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3997
  %origE = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 1, !dbg !3998
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %origE, i64 0, i64 0, !dbg !3997
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !3999
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4000
  %origE4 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 1, !dbg !4001
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %origE4, i64 0, i64 0, !dbg !4000
  %10 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4002
  %11 = load i32, i32* %a, align 4, !dbg !4003
  %idxprom = sext i32 %11 to i64, !dbg !4002
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %10, i64 %idxprom, !dbg !4002
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4002
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !4004
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4005
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 47, !dbg !4006
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4005
  %13 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4007
  %origE8 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %13, i32 0, i32 1, !dbg !4008
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %origE8, i64 0, i64 0, !dbg !4007
  call void @mul_m4_v3([4 x float]* %arraydecay7, float* %arraydecay9), !dbg !4009
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4010
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 0, i32 2, !dbg !4011
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !4010
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4012
  %origE11 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %15, i32 0, i32 1, !dbg !4013
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %origE11, i64 0, i64 0, !dbg !4012
  call void @copy_v3_v3(float* %arraydecay10, float* %arraydecay12), !dbg !4014
  br label %for.inc, !dbg !4015

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %a, align 4, !dbg !4016
  %inc = add nsw i32 %16, 1, !dbg !4016
  store i32 %inc, i32* %a, align 4, !dbg !4016
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4017
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i32 1, !dbg !4017
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !4017
  br label %for.cond, !dbg !4018, !llvm.loop !4019

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4021
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_reset(%struct.Object* %ob, %struct.SoftBody* %sb, [3 x float]* %vertexCos, i32 %numVerts) #0 !dbg !4022 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb.addr = alloca %struct.SoftBody*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %numVerts.addr = alloca i32, align 4
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !4031, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4033, metadata !DIExpression()), !dbg !4034
  store i32 0, i32* %a, align 4, !dbg !4035
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4037
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %0, i32 0, i32 2, !dbg !4038
  %1 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !4038
  store %struct.BodyPoint* %1, %struct.BodyPoint** %bp, align 8, !dbg !4039
  br label %for.cond, !dbg !4040

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !4041
  %3 = load i32, i32* %numVerts.addr, align 4, !dbg !4043
  %cmp = icmp slt i32 %2, %3, !dbg !4044
  br i1 %cmp, label %for.body, label %for.end, !dbg !4045

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4046
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %4, i32 0, i32 3, !dbg !4048
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !4046
  %5 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4049
  %6 = load i32, i32* %a, align 4, !dbg !4050
  %idxprom = sext i32 %6 to i64, !dbg !4049
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %5, i64 %idxprom, !dbg !4049
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4049
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !4051
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4052
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 47, !dbg !4053
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4052
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4054
  %pos3 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 3, !dbg !4055
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %pos3, i64 0, i64 0, !dbg !4054
  call void @mul_m4_v3([4 x float]* %arraydecay2, float* %arraydecay4), !dbg !4056
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4057
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 0, !dbg !4058
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !4057
  %10 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4059
  %pos6 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %10, i32 0, i32 3, !dbg !4060
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %pos6, i64 0, i64 0, !dbg !4059
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay7), !dbg !4061
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4062
  %origE = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %11, i32 0, i32 1, !dbg !4063
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %origE, i64 0, i64 0, !dbg !4062
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4064
  %pos9 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %12, i32 0, i32 3, !dbg !4065
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %pos9, i64 0, i64 0, !dbg !4064
  call void @copy_v3_v3(float* %arraydecay8, float* %arraydecay10), !dbg !4066
  %13 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4067
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %13, i32 0, i32 2, !dbg !4068
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !4067
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4069
  %pos12 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 0, i32 3, !dbg !4070
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %pos12, i64 0, i64 0, !dbg !4069
  call void @copy_v3_v3(float* %arraydecay11, float* %arraydecay13), !dbg !4071
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4072
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %15, i32 0, i32 4, !dbg !4073
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4072
  store float 0.000000e+00, float* %arrayidx14, align 8, !dbg !4074
  %16 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4075
  %vec15 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %16, i32 0, i32 4, !dbg !4076
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %vec15, i64 0, i64 1, !dbg !4075
  store float 0.000000e+00, float* %arrayidx16, align 4, !dbg !4077
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4078
  %vec17 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i32 0, i32 4, !dbg !4079
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %vec17, i64 0, i64 0, !dbg !4078
  store float 0.000000e+00, float* %arrayidx18, align 8, !dbg !4080
  %18 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4081
  %prevpos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %18, i32 0, i32 7, !dbg !4082
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %prevpos, i64 0, i64 0, !dbg !4081
  %19 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4083
  %pos20 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %19, i32 0, i32 3, !dbg !4084
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %pos20, i64 0, i64 0, !dbg !4083
  call void @copy_v3_v3(float* %arraydecay19, float* %arraydecay21), !dbg !4085
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4086
  %prevvec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 8, !dbg !4087
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %prevvec, i64 0, i64 0, !dbg !4086
  %21 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4088
  %vec23 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %21, i32 0, i32 4, !dbg !4089
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec23, i64 0, i64 0, !dbg !4088
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay24), !dbg !4090
  %22 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4091
  %prevdx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %22, i32 0, i32 9, !dbg !4092
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %prevdx, i64 0, i64 0, !dbg !4091
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4093
  %vec26 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i32 0, i32 4, !dbg !4094
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %vec26, i64 0, i64 0, !dbg !4093
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay27), !dbg !4095
  %24 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4096
  %prevdv = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %24, i32 0, i32 10, !dbg !4097
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %prevdv, i64 0, i64 0, !dbg !4096
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4098
  %vec29 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i32 0, i32 4, !dbg !4099
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec29, i64 0, i64 0, !dbg !4098
  call void @copy_v3_v3(float* %arraydecay28, float* %arraydecay30), !dbg !4100
  br label %for.inc, !dbg !4101

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %a, align 4, !dbg !4102
  %inc = add nsw i32 %26, 1, !dbg !4102
  store i32 %inc, i32* %a, align 4, !dbg !4102
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4103
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i32 1, !dbg !4103
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !4103
  br label %for.cond, !dbg !4104, !llvm.loop !4105

for.end:                                          ; preds = %for.cond
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4107
  call void @free_scratch(%struct.SoftBody* %28), !dbg !4108
  %29 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4109
  call void @sb_new_scratch(%struct.SoftBody* %29), !dbg !4110
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4111
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 44, !dbg !4112
  %31 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !4112
  %needstobuildcollider = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %31, i32 0, i32 1, !dbg !4113
  store i16 1, i16* %needstobuildcollider, align 8, !dbg !4114
  %32 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4115
  %lcom = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %32, i32 0, i32 50, !dbg !4116
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %lcom, i64 0, i64 0, !dbg !4115
  call void @zero_v3(float* %arraydecay31), !dbg !4117
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4118
  %lrot = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 51, !dbg !4119
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lrot, i64 0, i64 0, !dbg !4118
  call void @unit_m3([3 x float]* %arraydecay32), !dbg !4120
  %34 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4121
  %lscale = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 52, !dbg !4122
  %arraydecay33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lscale, i64 0, i64 0, !dbg !4121
  call void @unit_m3([3 x float]* %arraydecay33), !dbg !4123
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4124
  call void @reference_to_scratch(%struct.Object* %35), !dbg !4127
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4128
  call void @SB_estimate_transform(%struct.Object* %36, float* null, [3 x float]* null, [3 x float]* null), !dbg !4129
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4130
  call void @SB_estimate_transform(%struct.Object* %37, float* null, [3 x float]* null, [3 x float]* null), !dbg !4131
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4132
  %type = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 3, !dbg !4133
  %39 = load i16, i16* %type, align 8, !dbg !4133
  %conv = sext i16 %39 to i32, !dbg !4132
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 22, label %sw.bb35
    i32 2, label %sw.bb36
    i32 3, label %sw.bb36
  ], !dbg !4134

sw.bb:                                            ; preds = %for.end
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4135
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 104, !dbg !4138
  %41 = load i16, i16* %softflag, align 2, !dbg !4138
  %conv34 = sext i16 %41 to i32, !dbg !4135
  %and = and i32 %conv34, 1024, !dbg !4139
  %tobool = icmp ne i32 %and, 0, !dbg !4139
  br i1 %tobool, label %if.then, label %if.end, !dbg !4140

if.then:                                          ; preds = %sw.bb
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4141
  call void @mesh_faces_to_scratch(%struct.Object* %42), !dbg !4142
  br label %if.end, !dbg !4142

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !4143

sw.bb35:                                          ; preds = %for.end
  br label %sw.epilog, !dbg !4144

sw.bb36:                                          ; preds = %for.end, %for.end
  br label %sw.epilog, !dbg !4145

sw.default:                                       ; preds = %for.end
  br label %sw.epilog, !dbg !4146

sw.epilog:                                        ; preds = %sw.default, %sw.bb36, %sw.bb35, %if.end
  ret void, !dbg !4147
}

declare dso_local i32 @BKE_ptcache_id_reset(%struct.Scene*, %struct.PTCacheID*, i32) #2

declare dso_local void @BKE_ptcache_validate(%struct.PointCache*, i32) #2

declare dso_local i32 @BKE_ptcache_read(%struct.PTCacheID*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_to_object(%struct.Object* %ob, [3 x float]* %vertexCos, i32 %numVerts, i32 %local) #0 !dbg !4148 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %numVerts.addr = alloca i32, align 4
  %local.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4151, metadata !DIExpression()), !dbg !4152
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !4153, metadata !DIExpression()), !dbg !4154
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  store i32 %local, i32* %local.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %local.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !4159, metadata !DIExpression()), !dbg !4160
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4161
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !4162
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !4162
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !4160
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4163
  %tobool = icmp ne %struct.SoftBody* %2, null, !dbg !4163
  br i1 %tobool, label %if.then, label %if.end19, !dbg !4165

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !4166, metadata !DIExpression()), !dbg !4168
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4169
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 2, !dbg !4170
  %4 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !4170
  store %struct.BodyPoint* %4, %struct.BodyPoint** %bp, align 8, !dbg !4168
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4171, metadata !DIExpression()), !dbg !4172
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4173
  %solverflags = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 28, !dbg !4175
  %6 = load i16, i16* %solverflags, align 2, !dbg !4175
  %conv = sext i16 %6 to i32, !dbg !4173
  %and = and i32 %conv, 4, !dbg !4176
  %tobool1 = icmp ne i32 %and, 0, !dbg !4176
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4177

if.then2:                                         ; preds = %if.then
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4178
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4180
  %lcom = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 50, !dbg !4181
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %lcom, i64 0, i64 0, !dbg !4180
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4182
  %lrot = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 51, !dbg !4183
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lrot, i64 0, i64 0, !dbg !4182
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4184
  %lscale = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 52, !dbg !4185
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %lscale, i64 0, i64 0, !dbg !4184
  call void @SB_estimate_transform(%struct.Object* %7, float* %arraydecay, [3 x float]* %arraydecay3, [3 x float]* %arraydecay4), !dbg !4186
  br label %if.end, !dbg !4187

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4188
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 50, !dbg !4189
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !4188
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4190
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 47, !dbg !4191
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4190
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay5, [4 x float]* %arraydecay6), !dbg !4192
  store i32 0, i32* %a, align 4, !dbg !4193
  br label %for.cond, !dbg !4195

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %a, align 4, !dbg !4196
  %14 = load i32, i32* %numVerts.addr, align 4, !dbg !4198
  %cmp = icmp slt i32 %13, %14, !dbg !4199
  br i1 %cmp, label %for.body, label %for.end, !dbg !4200

for.body:                                         ; preds = %for.cond
  %15 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4201
  %16 = load i32, i32* %a, align 4, !dbg !4203
  %idxprom = sext i32 %16 to i64, !dbg !4201
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom, !dbg !4201
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4201
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4204
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i32 0, i32 3, !dbg !4205
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !4204
  call void @copy_v3_v3(float* %arraydecay8, float* %arraydecay9), !dbg !4206
  %18 = load i32, i32* %local.addr, align 4, !dbg !4207
  %cmp10 = icmp eq i32 %18, 0, !dbg !4209
  br i1 %cmp10, label %if.then12, label %if.end18, !dbg !4210

if.then12:                                        ; preds = %for.body
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4211
  %imat13 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 50, !dbg !4212
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat13, i64 0, i64 0, !dbg !4211
  %20 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4213
  %21 = load i32, i32* %a, align 4, !dbg !4214
  %idxprom15 = sext i32 %21 to i64, !dbg !4213
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom15, !dbg !4213
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !4213
  call void @mul_m4_v3([4 x float]* %arraydecay14, float* %arraydecay17), !dbg !4215
  br label %if.end18, !dbg !4215

if.end18:                                         ; preds = %if.then12, %for.body
  br label %for.inc, !dbg !4216

for.inc:                                          ; preds = %if.end18
  %22 = load i32, i32* %a, align 4, !dbg !4217
  %inc = add nsw i32 %22, 1, !dbg !4217
  store i32 %inc, i32* %a, align 4, !dbg !4217
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4218
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i32 1, !dbg !4218
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !4218
  br label %for.cond, !dbg !4219, !llvm.loop !4220

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !4222

if.end19:                                         ; preds = %for.end, %entry
  ret void, !dbg !4223
}

declare dso_local i32 @BKE_ptcache_write(%struct.PTCacheID*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_step(%struct.Scene* %scene, %struct.Object* %ob, %struct.SoftBody* %sb, float %dtime) #0 !dbg !4224 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sb.addr = alloca %struct.SoftBody*, align 8
  %dtime.addr = alloca float, align 4
  %forcetime = alloca float, align 4
  %sct = alloca double, align 8
  %sst = alloca double, align 8
  %mid_flags = alloca i32, align 4
  %err = alloca float, align 4
  %forcetimemax = alloca float, align 4
  %forcetimemin = alloca float, align 4
  %timedone = alloca float, align 4
  %loops = alloca i32, align 4
  %newtime = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4227, metadata !DIExpression()), !dbg !4228
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4229, metadata !DIExpression()), !dbg !4230
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !4231, metadata !DIExpression()), !dbg !4232
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !4233, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata float* %forcetime, metadata !4235, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.declare(metadata double* %sct, metadata !4237, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata double* %sst, metadata !4240, metadata !DIExpression()), !dbg !4241
  %call = call double @PIL_check_seconds_timer(), !dbg !4242
  store double %call, double* %sst, align 8, !dbg !4243
  %0 = load float, float* %dtime.addr, align 4, !dbg !4244
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !4246
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4247

lor.lhs.false:                                    ; preds = %entry
  %1 = load float, float* %dtime.addr, align 4, !dbg !4248
  %cmp1 = fcmp ogt float %1, 1.050000e+01, !dbg !4249
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4250

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end169, !dbg !4251

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4252
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4253
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4254
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 44, !dbg !4255
  %5 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !4255
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %5, i32 0, i32 0, !dbg !4256
  %6 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !4256
  call void @ccd_update_deflector_hash(%struct.Scene* %2, %struct.Object* %3, %struct.GHash* %6), !dbg !4257
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4258
  %scratch2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 44, !dbg !4260
  %8 = load %struct.SBScratch*, %struct.SBScratch** %scratch2, align 8, !dbg !4260
  %needstobuildcollider = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %8, i32 0, i32 1, !dbg !4261
  %9 = load i16, i16* %needstobuildcollider, align 8, !dbg !4261
  %tobool = icmp ne i16 %9, 0, !dbg !4258
  br i1 %tobool, label %if.then3, label %if.end12, !dbg !4262

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4263
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4266
  %call4 = call i32 @query_external_colliders(%struct.Scene* %10, %struct.Object* %11), !dbg !4267
  %tobool5 = icmp ne i32 %call4, 0, !dbg !4267
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !4268

if.then6:                                         ; preds = %if.then3
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4269
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4271
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4272
  %scratch7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 44, !dbg !4273
  %15 = load %struct.SBScratch*, %struct.SBScratch** %scratch7, align 8, !dbg !4273
  %colliderhash8 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %15, i32 0, i32 0, !dbg !4274
  %16 = load %struct.GHash*, %struct.GHash** %colliderhash8, align 8, !dbg !4274
  call void @ccd_build_deflector_hash(%struct.Scene* %12, %struct.Object* %13, %struct.GHash* %16), !dbg !4275
  br label %if.end9, !dbg !4276

if.end9:                                          ; preds = %if.then6, %if.then3
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4277
  %scratch10 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 44, !dbg !4278
  %18 = load %struct.SBScratch*, %struct.SBScratch** %scratch10, align 8, !dbg !4278
  %needstobuildcollider11 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %18, i32 0, i32 1, !dbg !4279
  store i16 0, i16* %needstobuildcollider11, align 8, !dbg !4280
  br label %if.end12, !dbg !4281

if.end12:                                         ; preds = %if.end9, %if.end
  %19 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4282
  %solver_ID = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %19, i32 0, i32 41, !dbg !4284
  %20 = load i16, i16* %solver_ID, align 2, !dbg !4284
  %conv = sext i16 %20 to i32, !dbg !4282
  %cmp13 = icmp slt i32 %conv, 2, !dbg !4285
  br i1 %cmp13, label %if.then15, label %if.else126, !dbg !4286

if.then15:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %mid_flags, metadata !4287, metadata !DIExpression()), !dbg !4289
  store i32 0, i32* %mid_flags, align 4, !dbg !4289
  call void @llvm.dbg.declare(metadata float* %err, metadata !4290, metadata !DIExpression()), !dbg !4291
  store float 0.000000e+00, float* %err, align 4, !dbg !4291
  call void @llvm.dbg.declare(metadata float* %forcetimemax, metadata !4292, metadata !DIExpression()), !dbg !4293
  store float 1.000000e+00, float* %forcetimemax, align 4, !dbg !4293
  call void @llvm.dbg.declare(metadata float* %forcetimemin, metadata !4294, metadata !DIExpression()), !dbg !4295
  store float 0x3F847AE140000000, float* %forcetimemin, align 4, !dbg !4295
  call void @llvm.dbg.declare(metadata float* %timedone, metadata !4296, metadata !DIExpression()), !dbg !4297
  store float 0.000000e+00, float* %timedone, align 4, !dbg !4297
  call void @llvm.dbg.declare(metadata i32* %loops, metadata !4298, metadata !DIExpression()), !dbg !4299
  store i32 0, i32* %loops, align 4, !dbg !4299
  %21 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4300
  %rklimit = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %21, i32 0, i32 11, !dbg !4301
  %22 = load float, float* %rklimit, align 8, !dbg !4301
  store float %22, float* @SoftHeunTol, align 4, !dbg !4302
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4303
  %minloops = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 38, !dbg !4305
  %24 = load i16, i16* %minloops, align 4, !dbg !4305
  %conv16 = sext i16 %24 to i32, !dbg !4303
  %cmp17 = icmp sgt i32 %conv16, 0, !dbg !4306
  br i1 %cmp17, label %if.then19, label %if.end23, !dbg !4307

if.then19:                                        ; preds = %if.then15
  %25 = load float, float* %dtime.addr, align 4, !dbg !4308
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4309
  %minloops20 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 38, !dbg !4310
  %27 = load i16, i16* %minloops20, align 4, !dbg !4310
  %conv21 = sext i16 %27 to i32, !dbg !4309
  %conv22 = sitofp i32 %conv21 to float, !dbg !4309
  %div = fdiv float %25, %conv22, !dbg !4311
  store float %div, float* %forcetimemax, align 4, !dbg !4312
  br label %if.end23, !dbg !4313

if.end23:                                         ; preds = %if.then19, %if.then15
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4314
  %maxloops = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 39, !dbg !4316
  %29 = load i16, i16* %maxloops, align 2, !dbg !4316
  %conv24 = sext i16 %29 to i32, !dbg !4314
  %cmp25 = icmp sgt i32 %conv24, 0, !dbg !4317
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !4318

if.then27:                                        ; preds = %if.end23
  %30 = load float, float* %dtime.addr, align 4, !dbg !4319
  %31 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4320
  %maxloops28 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %31, i32 0, i32 39, !dbg !4321
  %32 = load i16, i16* %maxloops28, align 2, !dbg !4321
  %conv29 = sext i16 %32 to i32, !dbg !4320
  %conv30 = sitofp i32 %conv29 to float, !dbg !4320
  %div31 = fdiv float %30, %conv30, !dbg !4322
  store float %div31, float* %forcetimemin, align 4, !dbg !4323
  br label %if.end32, !dbg !4324

if.end32:                                         ; preds = %if.then27, %if.end23
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4325
  %solver_ID33 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 41, !dbg !4327
  %34 = load i16, i16* %solver_ID33, align 2, !dbg !4327
  %conv34 = sext i16 %34 to i32, !dbg !4325
  %cmp35 = icmp sgt i32 %conv34, 0, !dbg !4328
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4329

if.then37:                                        ; preds = %if.end32
  %35 = load i32, i32* %mid_flags, align 4, !dbg !4330
  %or = or i32 %35, 1, !dbg !4330
  store i32 %or, i32* %mid_flags, align 4, !dbg !4330
  br label %if.end38, !dbg !4331

if.end38:                                         ; preds = %if.then37, %if.end32
  %36 = load float, float* %forcetimemax, align 4, !dbg !4332
  store float %36, float* %forcetime, align 4, !dbg !4333
  br label %while.cond, !dbg !4334

while.cond:                                       ; preds = %if.end114, %if.end38
  %37 = load float, float* %timedone, align 4, !dbg !4335
  %cmp39 = fcmp olt float %37, 0.000000e+00, !dbg !4335
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !4335

cond.true:                                        ; preds = %while.cond
  %38 = load float, float* %timedone, align 4, !dbg !4335
  %fneg = fneg float %38, !dbg !4335
  br label %cond.end, !dbg !4335

cond.false:                                       ; preds = %while.cond
  %39 = load float, float* %timedone, align 4, !dbg !4335
  br label %cond.end, !dbg !4335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %39, %cond.false ], !dbg !4335
  %40 = load float, float* %dtime.addr, align 4, !dbg !4336
  %cmp41 = fcmp olt float %40, 0.000000e+00, !dbg !4336
  br i1 %cmp41, label %cond.true43, label %cond.false45, !dbg !4336

cond.true43:                                      ; preds = %cond.end
  %41 = load float, float* %dtime.addr, align 4, !dbg !4336
  %fneg44 = fneg float %41, !dbg !4336
  br label %cond.end46, !dbg !4336

cond.false45:                                     ; preds = %cond.end
  %42 = load float, float* %dtime.addr, align 4, !dbg !4336
  br label %cond.end46, !dbg !4336

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi float [ %fneg44, %cond.true43 ], [ %42, %cond.false45 ], !dbg !4336
  %cmp48 = fcmp olt float %cond, %cond47, !dbg !4337
  br i1 %cmp48, label %land.rhs, label %land.end, !dbg !4338

land.rhs:                                         ; preds = %cond.end46
  %43 = load i32, i32* %loops, align 4, !dbg !4339
  %cmp50 = icmp slt i32 %43, 2000, !dbg !4340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end46
  %44 = phi i1 [ false, %cond.end46 ], [ %cmp50, %land.rhs ], !dbg !4341
  br i1 %44, label %while.body, label %while.end, !dbg !4334

while.body:                                       ; preds = %land.end
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4342
  %46 = load float, float* %timedone, align 4, !dbg !4344
  %47 = load float, float* %dtime.addr, align 4, !dbg !4345
  %div52 = fdiv float %46, %47, !dbg !4346
  %mul = fmul float 2.000000e+02, %div52, !dbg !4347
  %conv53 = fptosi float %mul to i32, !dbg !4348
  call void @interpolate_exciter(%struct.Object* %45, i32 200, i32 %conv53), !dbg !4349
  %48 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4350
  %scratch54 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %48, i32 0, i32 44, !dbg !4351
  %49 = load %struct.SBScratch*, %struct.SBScratch** %scratch54, align 8, !dbg !4351
  %flag = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %49, i32 0, i32 2, !dbg !4352
  %50 = load i16, i16* %flag, align 2, !dbg !4353
  %conv55 = sext i16 %50 to i32, !dbg !4353
  %and = and i32 %conv55, -2, !dbg !4353
  %conv56 = trunc i32 %and to i16, !dbg !4353
  store i16 %conv56, i16* %flag, align 2, !dbg !4353
  %51 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4354
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4355
  %53 = load float, float* %forcetime, align 4, !dbg !4356
  %54 = load float, float* %timedone, align 4, !dbg !4357
  %55 = load float, float* %dtime.addr, align 4, !dbg !4358
  %div57 = fdiv float %54, %55, !dbg !4359
  call void @softbody_calc_forces(%struct.Scene* %51, %struct.Object* %52, float %53, float %div57, i32 0), !dbg !4360
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4361
  %57 = load float, float* %forcetime, align 4, !dbg !4362
  %58 = load i32, i32* %mid_flags, align 4, !dbg !4363
  call void @softbody_apply_forces(%struct.Object* %56, float %57, i32 1, float* null, i32 %58), !dbg !4364
  %59 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4365
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4366
  %61 = load float, float* %forcetime, align 4, !dbg !4367
  %62 = load float, float* %timedone, align 4, !dbg !4368
  %63 = load float, float* %dtime.addr, align 4, !dbg !4369
  %div58 = fdiv float %62, %63, !dbg !4370
  call void @softbody_calc_forces(%struct.Scene* %59, %struct.Object* %60, float %61, float %div58, i32 0), !dbg !4371
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4372
  %65 = load float, float* %forcetime, align 4, !dbg !4373
  %66 = load i32, i32* %mid_flags, align 4, !dbg !4374
  call void @softbody_apply_forces(%struct.Object* %64, float %65, i32 2, float* %err, i32 %66), !dbg !4375
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4376
  call void @softbody_apply_goalsnap(%struct.Object* %67), !dbg !4377
  %68 = load float, float* %err, align 4, !dbg !4378
  %69 = load float, float* @SoftHeunTol, align 4, !dbg !4380
  %cmp59 = fcmp ogt float %68, %69, !dbg !4381
  br i1 %cmp59, label %if.then61, label %if.else68, !dbg !4382

if.then61:                                        ; preds = %while.body
  %70 = load float, float* %forcetime, align 4, !dbg !4383
  %71 = load float, float* %forcetimemin, align 4, !dbg !4386
  %cmp62 = fcmp ogt float %70, %71, !dbg !4387
  br i1 %cmp62, label %if.then64, label %if.else, !dbg !4388

if.then64:                                        ; preds = %if.then61
  %72 = load float, float* %forcetime, align 4, !dbg !4389
  %div65 = fdiv float %72, 2.000000e+00, !dbg !4391
  %73 = load float, float* %forcetimemin, align 4, !dbg !4392
  %call66 = call float @max_ff(float %div65, float %73), !dbg !4393
  store float %call66, float* %forcetime, align 4, !dbg !4394
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4395
  call void @softbody_restore_prev_step(%struct.Object* %74), !dbg !4396
  br label %if.end67, !dbg !4397

if.else:                                          ; preds = %if.then61
  %75 = load float, float* %forcetime, align 4, !dbg !4398
  %76 = load float, float* %timedone, align 4, !dbg !4400
  %add = fadd float %76, %75, !dbg !4400
  store float %add, float* %timedone, align 4, !dbg !4400
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then64
  br label %if.end94, !dbg !4401

if.else68:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata float* %newtime, metadata !4402, metadata !DIExpression()), !dbg !4404
  %77 = load float, float* %forcetime, align 4, !dbg !4405
  %mul69 = fmul float %77, 0x3FF19999A0000000, !dbg !4406
  store float %mul69, float* %newtime, align 4, !dbg !4404
  %78 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4407
  %scratch70 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %78, i32 0, i32 44, !dbg !4409
  %79 = load %struct.SBScratch*, %struct.SBScratch** %scratch70, align 8, !dbg !4409
  %flag71 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %79, i32 0, i32 2, !dbg !4410
  %80 = load i16, i16* %flag71, align 2, !dbg !4410
  %conv72 = sext i16 %80 to i32, !dbg !4407
  %and73 = and i32 %conv72, 1, !dbg !4411
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4411
  br i1 %tobool74, label %if.then75, label %if.else76, !dbg !4412

if.then75:                                        ; preds = %if.else68
  %81 = load float, float* %forcetime, align 4, !dbg !4413
  store float %81, float* %newtime, align 4, !dbg !4415
  br label %if.end82, !dbg !4416

if.else76:                                        ; preds = %if.else68
  %82 = load float, float* %err, align 4, !dbg !4417
  %83 = load float, float* @SoftHeunTol, align 4, !dbg !4420
  %div77 = fdiv float %83, 2.000000e+00, !dbg !4421
  %cmp78 = fcmp ogt float %82, %div77, !dbg !4422
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !4423

if.then80:                                        ; preds = %if.else76
  %84 = load float, float* %forcetime, align 4, !dbg !4424
  store float %84, float* %newtime, align 4, !dbg !4426
  br label %if.end81, !dbg !4427

if.end81:                                         ; preds = %if.then80, %if.else76
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then75
  %85 = load float, float* %forcetime, align 4, !dbg !4428
  %86 = load float, float* %timedone, align 4, !dbg !4429
  %add83 = fadd float %86, %85, !dbg !4429
  store float %add83, float* %timedone, align 4, !dbg !4429
  %87 = load float, float* %forcetimemax, align 4, !dbg !4430
  %88 = load float, float* %newtime, align 4, !dbg !4431
  %89 = load float, float* %forcetimemin, align 4, !dbg !4432
  %call84 = call float @max_ff(float %88, float %89), !dbg !4433
  %call85 = call float @min_ff(float %87, float %call84), !dbg !4434
  store float %call85, float* %newtime, align 4, !dbg !4435
  %90 = load float, float* %forcetime, align 4, !dbg !4436
  %cmp86 = fcmp ogt float %90, 0.000000e+00, !dbg !4438
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !4439

if.then88:                                        ; preds = %if.end82
  %91 = load float, float* %dtime.addr, align 4, !dbg !4440
  %92 = load float, float* %timedone, align 4, !dbg !4441
  %sub = fsub float %91, %92, !dbg !4442
  %93 = load float, float* %newtime, align 4, !dbg !4443
  %call89 = call float @min_ff(float %sub, float %93), !dbg !4444
  store float %call89, float* %forcetime, align 4, !dbg !4445
  br label %if.end93, !dbg !4446

if.else90:                                        ; preds = %if.end82
  %94 = load float, float* %dtime.addr, align 4, !dbg !4447
  %95 = load float, float* %timedone, align 4, !dbg !4448
  %sub91 = fsub float %94, %95, !dbg !4449
  %96 = load float, float* %newtime, align 4, !dbg !4450
  %call92 = call float @max_ff(float %sub91, float %96), !dbg !4451
  store float %call92, float* %forcetime, align 4, !dbg !4452
  br label %if.end93

if.end93:                                         ; preds = %if.else90, %if.then88
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end67
  %97 = load i32, i32* %loops, align 4, !dbg !4453
  %inc = add nsw i32 %97, 1, !dbg !4453
  store i32 %inc, i32* %loops, align 4, !dbg !4453
  %98 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4454
  %solverflags = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %98, i32 0, i32 28, !dbg !4456
  %99 = load i16, i16* %solverflags, align 2, !dbg !4456
  %conv95 = sext i16 %99 to i32, !dbg !4454
  %and96 = and i32 %conv95, 1, !dbg !4457
  %tobool97 = icmp ne i32 %and96, 0, !dbg !4457
  br i1 %tobool97, label %if.then98, label %if.end109, !dbg !4458

if.then98:                                        ; preds = %if.end94
  %call99 = call double @PIL_check_seconds_timer(), !dbg !4459
  store double %call99, double* %sct, align 8, !dbg !4461
  %100 = load double, double* %sct, align 8, !dbg !4462
  %101 = load double, double* %sst, align 8, !dbg !4464
  %sub100 = fsub double %100, %101, !dbg !4465
  %cmp101 = fcmp ogt double %sub100, 5.000000e-01, !dbg !4466
  br i1 %cmp101, label %if.then103, label %if.end108, !dbg !4467

if.then103:                                       ; preds = %if.then98
  %102 = load float, float* %timedone, align 4, !dbg !4468
  %mul104 = fmul float 1.000000e+02, %102, !dbg !4469
  %103 = load float, float* %dtime.addr, align 4, !dbg !4470
  %div105 = fdiv float %mul104, %103, !dbg !4471
  %conv106 = fpext float %div105 to double, !dbg !4472
  %call107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), double %conv106), !dbg !4473
  br label %if.end108, !dbg !4473

if.end108:                                        ; preds = %if.then103, %if.then98
  br label %if.end109, !dbg !4474

if.end109:                                        ; preds = %if.end108, %if.end94
  %104 = load i32 ()*, i32 ()** @SB_localInterruptCallBack, align 8, !dbg !4475
  %tobool110 = icmp ne i32 ()* %104, null, !dbg !4475
  br i1 %tobool110, label %land.lhs.true, label %if.end114, !dbg !4477

land.lhs.true:                                    ; preds = %if.end109
  %105 = load i32 ()*, i32 ()** @SB_localInterruptCallBack, align 8, !dbg !4478
  %call111 = call i32 %105(), !dbg !4478
  %tobool112 = icmp ne i32 %call111, 0, !dbg !4478
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !4479

if.then113:                                       ; preds = %land.lhs.true
  br label %while.end, !dbg !4480

if.end114:                                        ; preds = %land.lhs.true, %if.end109
  br label %while.cond, !dbg !4334, !llvm.loop !4481

while.end:                                        ; preds = %if.then113, %land.end
  %106 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4483
  call void @interpolate_exciter(%struct.Object* %106, i32 2, i32 2), !dbg !4484
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4485
  call void @softbody_apply_goalsnap(%struct.Object* %107), !dbg !4486
  %108 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4487
  %solverflags115 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %108, i32 0, i32 28, !dbg !4489
  %109 = load i16, i16* %solverflags115, align 2, !dbg !4489
  %conv116 = sext i16 %109 to i32, !dbg !4487
  %and117 = and i32 %conv116, 1, !dbg !4490
  %tobool118 = icmp ne i32 %and117, 0, !dbg !4490
  br i1 %tobool118, label %if.then119, label %if.end125, !dbg !4491

if.then119:                                       ; preds = %while.end
  %110 = load i32, i32* %loops, align 4, !dbg !4492
  %cmp120 = icmp sgt i32 %110, 1, !dbg !4495
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !4496

if.then122:                                       ; preds = %if.then119
  %111 = load i32, i32* %loops, align 4, !dbg !4497
  %call123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i32 %111), !dbg !4498
  br label %if.end124, !dbg !4498

if.end124:                                        ; preds = %if.then122, %if.then119
  br label %if.end125, !dbg !4499

if.end125:                                        ; preds = %if.end124, %while.end
  br label %if.end149, !dbg !4500

if.else126:                                       ; preds = %if.end12
  %112 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4501
  %solver_ID127 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %112, i32 0, i32 41, !dbg !4503
  %113 = load i16, i16* %solver_ID127, align 2, !dbg !4503
  %conv128 = sext i16 %113 to i32, !dbg !4501
  %cmp129 = icmp eq i32 %conv128, 2, !dbg !4504
  br i1 %cmp129, label %if.then131, label %if.else132, !dbg !4505

if.then131:                                       ; preds = %if.else126
  br label %if.end148, !dbg !4506

if.else132:                                       ; preds = %if.else126
  %114 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4508
  %solver_ID133 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %114, i32 0, i32 41, !dbg !4510
  %115 = load i16, i16* %solver_ID133, align 2, !dbg !4510
  %conv134 = sext i16 %115 to i32, !dbg !4508
  %cmp135 = icmp eq i32 %conv134, 4, !dbg !4511
  br i1 %cmp135, label %if.then137, label %if.else138, !dbg !4512

if.then137:                                       ; preds = %if.else132
  br label %if.end147, !dbg !4513

if.else138:                                       ; preds = %if.else132
  %116 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4515
  %solver_ID139 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %116, i32 0, i32 41, !dbg !4517
  %117 = load i16, i16* %solver_ID139, align 2, !dbg !4517
  %conv140 = sext i16 %117 to i32, !dbg !4515
  %cmp141 = icmp eq i32 %conv140, 3, !dbg !4518
  br i1 %cmp141, label %if.then143, label %if.else144, !dbg !4519

if.then143:                                       ; preds = %if.else138
  br label %if.end146, !dbg !4520

if.else144:                                       ; preds = %if.else138
  %call145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)), !dbg !4522
  br label %if.end146

if.end146:                                        ; preds = %if.else144, %if.then143
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then137
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then131
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end125
  %118 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4524
  %plastic = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %118, i32 0, i32 42, !dbg !4526
  %119 = load i16, i16* %plastic, align 4, !dbg !4526
  %tobool150 = icmp ne i16 %119, 0, !dbg !4524
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !4527

if.then151:                                       ; preds = %if.end149
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4528
  call void @apply_spring_memory(%struct.Object* %120), !dbg !4530
  br label %if.end152, !dbg !4531

if.end152:                                        ; preds = %if.then151, %if.end149
  %121 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4532
  %solverflags153 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %121, i32 0, i32 28, !dbg !4534
  %122 = load i16, i16* %solverflags153, align 2, !dbg !4534
  %conv154 = sext i16 %122 to i32, !dbg !4532
  %and155 = and i32 %conv154, 1, !dbg !4535
  %tobool156 = icmp ne i32 %and155, 0, !dbg !4535
  br i1 %tobool156, label %if.then157, label %if.end169, !dbg !4536

if.then157:                                       ; preds = %if.end152
  %call158 = call double @PIL_check_seconds_timer(), !dbg !4537
  store double %call158, double* %sct, align 8, !dbg !4539
  %123 = load double, double* %sct, align 8, !dbg !4540
  %124 = load double, double* %sst, align 8, !dbg !4542
  %sub159 = fsub double %123, %124, !dbg !4543
  %cmp160 = fcmp ogt double %sub159, 5.000000e-01, !dbg !4544
  br i1 %cmp160, label %if.then165, label %lor.lhs.false162, !dbg !4545

lor.lhs.false162:                                 ; preds = %if.then157
  %125 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4546
  %and163 = and i32 %125, 1, !dbg !4547
  %tobool164 = icmp ne i32 %and163, 0, !dbg !4547
  br i1 %tobool164, label %if.then165, label %if.end168, !dbg !4548

if.then165:                                       ; preds = %lor.lhs.false162, %if.then157
  %126 = load double, double* %sct, align 8, !dbg !4549
  %127 = load double, double* %sst, align 8, !dbg !4550
  %sub166 = fsub double %126, %127, !dbg !4551
  %128 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4552
  %id = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 0, !dbg !4553
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4554
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4552
  %call167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), double %sub166, i8* %arraydecay), !dbg !4555
  br label %if.end168, !dbg !4555

if.end168:                                        ; preds = %if.then165, %lor.lhs.false162
  br label %if.end169, !dbg !4556

if.end169:                                        ; preds = %if.then, %if.end168, %if.end152
  ret void, !dbg !4557
}

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_scratch(%struct.SoftBody* %sb) #0 !dbg !4558 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !4559, metadata !DIExpression()), !dbg !4560
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4561
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %0, i32 0, i32 44, !dbg !4563
  %1 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !4563
  %tobool = icmp ne %struct.SBScratch* %1, null, !dbg !4561
  br i1 %tobool, label %if.then, label %if.end23, !dbg !4564

if.then:                                          ; preds = %entry
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4565
  %scratch1 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 44, !dbg !4568
  %3 = load %struct.SBScratch*, %struct.SBScratch** %scratch1, align 8, !dbg !4568
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %3, i32 0, i32 0, !dbg !4569
  %4 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !4569
  %tobool2 = icmp ne %struct.GHash* %4, null, !dbg !4565
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4570

if.then3:                                         ; preds = %if.then
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4571
  %scratch4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 44, !dbg !4573
  %6 = load %struct.SBScratch*, %struct.SBScratch** %scratch4, align 8, !dbg !4573
  %colliderhash5 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %6, i32 0, i32 0, !dbg !4574
  %7 = load %struct.GHash*, %struct.GHash** %colliderhash5, align 8, !dbg !4574
  call void @BLI_ghash_free(%struct.GHash* %7, void (i8*)* null, void (i8*)* bitcast (void (%struct.ccd_Mesh*)* @ccd_mesh_free to void (i8*)*)), !dbg !4575
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4576
  %scratch6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 44, !dbg !4577
  %9 = load %struct.SBScratch*, %struct.SBScratch** %scratch6, align 8, !dbg !4577
  %colliderhash7 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %9, i32 0, i32 0, !dbg !4578
  store %struct.GHash* null, %struct.GHash** %colliderhash7, align 8, !dbg !4579
  br label %if.end, !dbg !4580

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4581
  %scratch8 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 44, !dbg !4583
  %11 = load %struct.SBScratch*, %struct.SBScratch** %scratch8, align 8, !dbg !4583
  %bodyface = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %11, i32 0, i32 3, !dbg !4584
  %12 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !4584
  %tobool9 = icmp ne %struct.BodyFace* %12, null, !dbg !4581
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !4585

if.then10:                                        ; preds = %if.end
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4586
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4588
  %scratch11 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 44, !dbg !4589
  %15 = load %struct.SBScratch*, %struct.SBScratch** %scratch11, align 8, !dbg !4589
  %bodyface12 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %15, i32 0, i32 3, !dbg !4590
  %16 = load %struct.BodyFace*, %struct.BodyFace** %bodyface12, align 8, !dbg !4590
  %17 = bitcast %struct.BodyFace* %16 to i8*, !dbg !4588
  call void %13(i8* %17), !dbg !4586
  br label %if.end13, !dbg !4591

if.end13:                                         ; preds = %if.then10, %if.end
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4592
  %scratch14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 44, !dbg !4594
  %19 = load %struct.SBScratch*, %struct.SBScratch** %scratch14, align 8, !dbg !4594
  %Ref = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %19, i32 0, i32 7, !dbg !4595
  %ivert = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref, i32 0, i32 1, !dbg !4596
  %20 = load %struct.ReferenceVert*, %struct.ReferenceVert** %ivert, align 8, !dbg !4596
  %tobool15 = icmp ne %struct.ReferenceVert* %20, null, !dbg !4592
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !4597

if.then16:                                        ; preds = %if.end13
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4598
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4600
  %scratch17 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 44, !dbg !4601
  %23 = load %struct.SBScratch*, %struct.SBScratch** %scratch17, align 8, !dbg !4601
  %Ref18 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %23, i32 0, i32 7, !dbg !4602
  %ivert19 = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref18, i32 0, i32 1, !dbg !4603
  %24 = load %struct.ReferenceVert*, %struct.ReferenceVert** %ivert19, align 8, !dbg !4603
  %25 = bitcast %struct.ReferenceVert* %24 to i8*, !dbg !4600
  call void %21(i8* %25), !dbg !4598
  br label %if.end20, !dbg !4604

if.end20:                                         ; preds = %if.then16, %if.end13
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4605
  %27 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4606
  %scratch21 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %27, i32 0, i32 44, !dbg !4607
  %28 = load %struct.SBScratch*, %struct.SBScratch** %scratch21, align 8, !dbg !4607
  %29 = bitcast %struct.SBScratch* %28 to i8*, !dbg !4606
  call void %26(i8* %29), !dbg !4605
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4608
  %scratch22 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 44, !dbg !4609
  store %struct.SBScratch* null, %struct.SBScratch** %scratch22, align 8, !dbg !4610
  br label %if.end23, !dbg !4611

if.end23:                                         ; preds = %if.end20, %entry
  ret void, !dbg !4612
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_softbody_baked(%struct.SoftBody* %sb) #0 !dbg !4613 {
entry:
  %sb.addr = alloca %struct.SoftBody*, align 8
  %key = alloca %struct.SBVertex*, align 8
  %k = alloca i32, align 4
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !4614, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.declare(metadata %struct.SBVertex** %key, metadata !4616, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4618, metadata !DIExpression()), !dbg !4619
  store i32 0, i32* %k, align 4, !dbg !4620
  br label %for.cond, !dbg !4622

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !4623
  %1 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4625
  %totkey = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %1, i32 0, i32 31, !dbg !4626
  %2 = load i32, i32* %totkey, align 4, !dbg !4626
  %cmp = icmp slt i32 %0, %2, !dbg !4627
  br i1 %cmp, label %for.body, label %for.end, !dbg !4628

for.body:                                         ; preds = %for.cond
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4629
  %keys = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 29, !dbg !4631
  %4 = load %struct.SBVertex**, %struct.SBVertex*** %keys, align 8, !dbg !4631
  %5 = load i32, i32* %k, align 4, !dbg !4632
  %idx.ext = sext i32 %5 to i64, !dbg !4633
  %add.ptr = getelementptr inbounds %struct.SBVertex*, %struct.SBVertex** %4, i64 %idx.ext, !dbg !4633
  %6 = load %struct.SBVertex*, %struct.SBVertex** %add.ptr, align 8, !dbg !4634
  store %struct.SBVertex* %6, %struct.SBVertex** %key, align 8, !dbg !4635
  %7 = load %struct.SBVertex*, %struct.SBVertex** %key, align 8, !dbg !4636
  %tobool = icmp ne %struct.SBVertex* %7, null, !dbg !4636
  br i1 %tobool, label %if.then, label %if.end, !dbg !4638

if.then:                                          ; preds = %for.body
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4639
  %9 = load %struct.SBVertex*, %struct.SBVertex** %key, align 8, !dbg !4640
  %10 = bitcast %struct.SBVertex* %9 to i8*, !dbg !4640
  call void %8(i8* %10), !dbg !4639
  br label %if.end, !dbg !4639

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4641

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %k, align 4, !dbg !4642
  %inc = add nsw i32 %11, 1, !dbg !4642
  store i32 %inc, i32* %k, align 4, !dbg !4642
  br label %for.cond, !dbg !4643, !llvm.loop !4644

for.end:                                          ; preds = %for.cond
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4646
  %keys1 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 29, !dbg !4648
  %13 = load %struct.SBVertex**, %struct.SBVertex*** %keys1, align 8, !dbg !4648
  %tobool2 = icmp ne %struct.SBVertex** %13, null, !dbg !4646
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !4649

if.then3:                                         ; preds = %for.end
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4650
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4651
  %keys4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 29, !dbg !4652
  %16 = load %struct.SBVertex**, %struct.SBVertex*** %keys4, align 8, !dbg !4652
  %17 = bitcast %struct.SBVertex** %16 to i8*, !dbg !4651
  call void %14(i8* %17), !dbg !4650
  br label %if.end5, !dbg !4650

if.end5:                                          ; preds = %if.then3, %for.end
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4653
  %keys6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 29, !dbg !4654
  store %struct.SBVertex** null, %struct.SBVertex*** %keys6, align 8, !dbg !4655
  %19 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !4656
  %totkey7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %19, i32 0, i32 31, !dbg !4657
  store i32 0, i32* %totkey7, align 4, !dbg !4658
  ret void, !dbg !4659
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccd_mesh_free(%struct.ccd_Mesh* %ccdm) #0 !dbg !4660 {
entry:
  %ccdm.addr = alloca %struct.ccd_Mesh*, align 8
  store %struct.ccd_Mesh* %ccdm, %struct.ccd_Mesh** %ccdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm.addr, metadata !4688, metadata !DIExpression()), !dbg !4689
  %0 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4690
  %tobool = icmp ne %struct.ccd_Mesh* %0, null, !dbg !4690
  br i1 %tobool, label %land.lhs.true, label %if.end4, !dbg !4692

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4693
  %savety = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %1, i32 0, i32 5, !dbg !4694
  %2 = load i32, i32* %savety, align 8, !dbg !4694
  %cmp = icmp eq i32 %2, 190561, !dbg !4695
  br i1 %cmp, label %if.then, label %if.end4, !dbg !4696

if.then:                                          ; preds = %land.lhs.true
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4697
  %4 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4699
  %mface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %4, i32 0, i32 4, !dbg !4700
  %5 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4700
  %6 = bitcast %struct.MFace* %5 to i8*, !dbg !4699
  call void %3(i8* %6), !dbg !4697
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4701
  %8 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4702
  %mvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %8, i32 0, i32 2, !dbg !4703
  %9 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4703
  %10 = bitcast %struct.MVert* %9 to i8*, !dbg !4702
  call void %7(i8* %10), !dbg !4701
  %11 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4704
  %mprevvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %11, i32 0, i32 3, !dbg !4706
  %12 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !4706
  %tobool1 = icmp ne %struct.MVert* %12, null, !dbg !4704
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4707

if.then2:                                         ; preds = %if.then
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4708
  %14 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4709
  %mprevvert3 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %14, i32 0, i32 3, !dbg !4710
  %15 = load %struct.MVert*, %struct.MVert** %mprevvert3, align 8, !dbg !4710
  %16 = bitcast %struct.MVert* %15 to i8*, !dbg !4709
  call void %13(i8* %16), !dbg !4708
  br label %if.end, !dbg !4708

if.end:                                           ; preds = %if.then2, %if.then
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4711
  %18 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4712
  %mima = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %18, i32 0, i32 6, !dbg !4713
  %19 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !4713
  %20 = bitcast %struct.ccdf_minmax* %19 to i8*, !dbg !4712
  call void %17(i8* %20), !dbg !4711
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4714
  %22 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4715
  %23 = bitcast %struct.ccd_Mesh* %22 to i8*, !dbg !4715
  call void %21(i8* %23), !dbg !4714
  store %struct.ccd_Mesh* null, %struct.ccd_Mesh** %ccdm.addr, align 8, !dbg !4716
  br label %if.end4, !dbg !4717

if.end4:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !4718
}

declare dso_local void @BKE_mesh_tessface_ensure(%struct.Mesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @get_scalar_from_vertexgroup(%struct.Object* %ob, i32 %vertID, i32 %groupindex, float* %target) #0 !dbg !4719 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vertID.addr = alloca i32, align 4
  %groupindex.addr = alloca i32, align 4
  %target.addr = alloca float*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4722, metadata !DIExpression()), !dbg !4723
  store i32 %vertID, i32* %vertID.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertID.addr, metadata !4724, metadata !DIExpression()), !dbg !4725
  store i32 %groupindex, i32* %groupindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %groupindex.addr, metadata !4726, metadata !DIExpression()), !dbg !4727
  store float* %target, float** %target.addr, align 8
  call void @llvm.dbg.declare(metadata float** %target.addr, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !4730, metadata !DIExpression()), !dbg !4733
  store %struct.MDeformVert* null, %struct.MDeformVert** %dv, align 8, !dbg !4733
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4734, metadata !DIExpression()), !dbg !4735
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4736
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !4738
  %1 = load i16, i16* %type, align 8, !dbg !4738
  %conv = sext i16 %1 to i32, !dbg !4736
  %cmp = icmp eq i32 %conv, 1, !dbg !4739
  br i1 %cmp, label %if.then, label %if.else, !dbg !4740

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4741, metadata !DIExpression()), !dbg !4743
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4744
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !4745
  %3 = load i8*, i8** %data, align 8, !dbg !4745
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !4744
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !4743
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4746
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 17, !dbg !4748
  %6 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4748
  %tobool = icmp ne %struct.MDeformVert* %6, null, !dbg !4746
  br i1 %tobool, label %if.then2, label %if.end, !dbg !4749

if.then2:                                         ; preds = %if.then
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4750
  %dvert3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 17, !dbg !4751
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert3, align 8, !dbg !4751
  %9 = load i32, i32* %vertID.addr, align 4, !dbg !4752
  %idx.ext = sext i32 %9 to i64, !dbg !4753
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %8, i64 %idx.ext, !dbg !4753
  store %struct.MDeformVert* %add.ptr, %struct.MDeformVert** %dv, align 8, !dbg !4754
  br label %if.end, !dbg !4755

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end18, !dbg !4756

if.else:                                          ; preds = %entry
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4757
  %type4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !4759
  %11 = load i16, i16* %type4, align 8, !dbg !4759
  %conv5 = sext i16 %11 to i32, !dbg !4757
  %cmp6 = icmp eq i32 %conv5, 22, !dbg !4760
  br i1 %cmp6, label %if.then8, label %if.end17, !dbg !4761

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4762, metadata !DIExpression()), !dbg !4764
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4765
  %data9 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !4766
  %13 = load i8*, i8** %data9, align 8, !dbg !4766
  %14 = bitcast i8* %13 to %struct.Lattice*, !dbg !4765
  store %struct.Lattice* %14, %struct.Lattice** %lt, align 8, !dbg !4764
  %15 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4767
  %dvert10 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %15, i32 0, i32 24, !dbg !4769
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert10, align 8, !dbg !4769
  %tobool11 = icmp ne %struct.MDeformVert* %16, null, !dbg !4767
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !4770

if.then12:                                        ; preds = %if.then8
  %17 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4771
  %dvert13 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %17, i32 0, i32 24, !dbg !4772
  %18 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert13, align 8, !dbg !4772
  %19 = load i32, i32* %vertID.addr, align 4, !dbg !4773
  %idx.ext14 = sext i32 %19 to i64, !dbg !4774
  %add.ptr15 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %18, i64 %idx.ext14, !dbg !4774
  store %struct.MDeformVert* %add.ptr15, %struct.MDeformVert** %dv, align 8, !dbg !4775
  br label %if.end16, !dbg !4776

if.end16:                                         ; preds = %if.then12, %if.then8
  br label %if.end17, !dbg !4777

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %20 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4778
  %tobool19 = icmp ne %struct.MDeformVert* %20, null, !dbg !4778
  br i1 %tobool19, label %if.then20, label %if.end30, !dbg !4780

if.then20:                                        ; preds = %if.end18
  store i32 0, i32* %i, align 4, !dbg !4781
  br label %for.cond, !dbg !4784

for.cond:                                         ; preds = %for.inc, %if.then20
  %21 = load i32, i32* %i, align 4, !dbg !4785
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4787
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %22, i32 0, i32 1, !dbg !4788
  %23 = load i32, i32* %totweight, align 8, !dbg !4788
  %cmp21 = icmp slt i32 %21, %23, !dbg !4789
  br i1 %cmp21, label %for.body, label %for.end, !dbg !4790

for.body:                                         ; preds = %for.cond
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4791
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %24, i32 0, i32 0, !dbg !4794
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4794
  %26 = load i32, i32* %i, align 4, !dbg !4795
  %idxprom = sext i32 %26 to i64, !dbg !4791
  %arrayidx = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %25, i64 %idxprom, !dbg !4791
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx, i32 0, i32 0, !dbg !4796
  %27 = load i32, i32* %def_nr, align 4, !dbg !4796
  %28 = load i32, i32* %groupindex.addr, align 4, !dbg !4797
  %cmp23 = icmp eq i32 %27, %28, !dbg !4798
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !4799

if.then25:                                        ; preds = %for.body
  %29 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4800
  %dw26 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %29, i32 0, i32 0, !dbg !4802
  %30 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw26, align 8, !dbg !4802
  %31 = load i32, i32* %i, align 4, !dbg !4803
  %idxprom27 = sext i32 %31 to i64, !dbg !4800
  %arrayidx28 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %30, i64 %idxprom27, !dbg !4800
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx28, i32 0, i32 1, !dbg !4804
  %32 = load float, float* %weight, align 4, !dbg !4804
  %33 = load float*, float** %target.addr, align 8, !dbg !4805
  store float %32, float* %33, align 4, !dbg !4806
  br label %for.end, !dbg !4807

if.end29:                                         ; preds = %for.body
  br label %for.inc, !dbg !4808

for.inc:                                          ; preds = %if.end29
  %34 = load i32, i32* %i, align 4, !dbg !4809
  %inc = add nsw i32 %34, 1, !dbg !4809
  store i32 %inc, i32* %i, align 4, !dbg !4809
  br label %for.cond, !dbg !4810, !llvm.loop !4811

for.end:                                          ; preds = %if.then25, %for.cond
  br label %if.end30, !dbg !4813

if.end30:                                         ; preds = %for.end, %if.end18
  ret void, !dbg !4814
}

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_mesh_quad_diag_springs(%struct.Object* %ob) #0 !dbg !4815 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %bs_new = alloca %struct.BodySpring*, align 8
  %a = alloca i32, align 4
  %nofquads = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4818, metadata !DIExpression()), !dbg !4819
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4820
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4821
  %1 = load i8*, i8** %data, align 8, !dbg !4821
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !4820
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !4819
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !4822, metadata !DIExpression()), !dbg !4823
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4824
  %mface1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 12, !dbg !4825
  %4 = load %struct.MFace*, %struct.MFace** %mface1, align 8, !dbg !4825
  store %struct.MFace* %4, %struct.MFace** %mface, align 8, !dbg !4823
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !4826, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs_new, metadata !4828, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4830, metadata !DIExpression()), !dbg !4831
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4832
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 111, !dbg !4834
  %6 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !4834
  %tobool = icmp ne %struct.SoftBody* %6, null, !dbg !4832
  br i1 %tobool, label %if.then, label %if.end42, !dbg !4835

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %nofquads, metadata !4836, metadata !DIExpression()), !dbg !4838
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4839
  %call = call i32 @count_mesh_quads(%struct.Mesh* %7), !dbg !4840
  store i32 %call, i32* %nofquads, align 4, !dbg !4841
  %8 = load i32, i32* %nofquads, align 4, !dbg !4842
  %tobool2 = icmp ne i32 %8, 0, !dbg !4842
  br i1 %tobool2, label %if.then3, label %if.end41, !dbg !4844

if.then3:                                         ; preds = %if.then
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4845
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4847
  %soft4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 111, !dbg !4848
  %11 = load %struct.SoftBody*, %struct.SoftBody** %soft4, align 8, !dbg !4848
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %11, i32 0, i32 1, !dbg !4849
  %12 = load i32, i32* %totspring, align 4, !dbg !4849
  %13 = load i32, i32* %nofquads, align 4, !dbg !4850
  %mul = mul nsw i32 %13, 2, !dbg !4851
  %add = add nsw i32 %12, %mul, !dbg !4852
  %conv = sext i32 %add to i64, !dbg !4853
  %mul5 = mul i64 %conv, 40, !dbg !4854
  %call6 = call i8* %9(i64 %mul5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !4845
  %14 = bitcast i8* %call6 to %struct.BodySpring*, !dbg !4845
  store %struct.BodySpring* %14, %struct.BodySpring** %bs_new, align 8, !dbg !4855
  %15 = load %struct.BodySpring*, %struct.BodySpring** %bs_new, align 8, !dbg !4856
  %16 = bitcast %struct.BodySpring* %15 to i8*, !dbg !4857
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4858
  %soft7 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 111, !dbg !4859
  %18 = load %struct.SoftBody*, %struct.SoftBody** %soft7, align 8, !dbg !4859
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 3, !dbg !4860
  %19 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !4860
  %20 = bitcast %struct.BodySpring* %19 to i8*, !dbg !4857
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4861
  %soft8 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 111, !dbg !4862
  %22 = load %struct.SoftBody*, %struct.SoftBody** %soft8, align 8, !dbg !4862
  %totspring9 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 1, !dbg !4863
  %23 = load i32, i32* %totspring9, align 4, !dbg !4863
  %conv10 = sext i32 %23 to i64, !dbg !4864
  %mul11 = mul i64 %conv10, 40, !dbg !4865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %20, i64 %mul11, i1 false), !dbg !4857
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4866
  %soft12 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 111, !dbg !4868
  %25 = load %struct.SoftBody*, %struct.SoftBody** %soft12, align 8, !dbg !4868
  %bspring13 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %25, i32 0, i32 3, !dbg !4869
  %26 = load %struct.BodySpring*, %struct.BodySpring** %bspring13, align 8, !dbg !4869
  %tobool14 = icmp ne %struct.BodySpring* %26, null, !dbg !4866
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !4870

if.then15:                                        ; preds = %if.then3
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4871
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4872
  %soft16 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 111, !dbg !4873
  %29 = load %struct.SoftBody*, %struct.SoftBody** %soft16, align 8, !dbg !4873
  %bspring17 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %29, i32 0, i32 3, !dbg !4874
  %30 = load %struct.BodySpring*, %struct.BodySpring** %bspring17, align 8, !dbg !4874
  %31 = bitcast %struct.BodySpring* %30 to i8*, !dbg !4872
  call void %27(i8* %31), !dbg !4871
  br label %if.end, !dbg !4871

if.end:                                           ; preds = %if.then15, %if.then3
  %32 = load %struct.BodySpring*, %struct.BodySpring** %bs_new, align 8, !dbg !4875
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4876
  %soft18 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 111, !dbg !4877
  %34 = load %struct.SoftBody*, %struct.SoftBody** %soft18, align 8, !dbg !4877
  %bspring19 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 3, !dbg !4878
  store %struct.BodySpring* %32, %struct.BodySpring** %bspring19, align 8, !dbg !4879
  store i32 0, i32* %a, align 4, !dbg !4880
  %35 = load %struct.BodySpring*, %struct.BodySpring** %bs_new, align 8, !dbg !4881
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4882
  %soft20 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 111, !dbg !4883
  %37 = load %struct.SoftBody*, %struct.SoftBody** %soft20, align 8, !dbg !4883
  %totspring21 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 1, !dbg !4884
  %38 = load i32, i32* %totspring21, align 4, !dbg !4884
  %idx.ext = sext i32 %38 to i64, !dbg !4885
  %add.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %35, i64 %idx.ext, !dbg !4885
  store %struct.BodySpring* %add.ptr, %struct.BodySpring** %bs, align 8, !dbg !4886
  %39 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4887
  %tobool22 = icmp ne %struct.MFace* %39, null, !dbg !4887
  br i1 %tobool22, label %if.then23, label %if.end36, !dbg !4889

if.then23:                                        ; preds = %if.end
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4890
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 28, !dbg !4893
  %41 = load i32, i32* %totface, align 8, !dbg !4893
  store i32 %41, i32* %a, align 4, !dbg !4894
  br label %for.cond, !dbg !4895

for.cond:                                         ; preds = %for.inc, %if.then23
  %42 = load i32, i32* %a, align 4, !dbg !4896
  %cmp = icmp sgt i32 %42, 0, !dbg !4898
  br i1 %cmp, label %for.body, label %for.end, !dbg !4899

for.body:                                         ; preds = %for.cond
  %43 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4900
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 3, !dbg !4903
  %44 = load i32, i32* %v4, align 4, !dbg !4903
  %tobool25 = icmp ne i32 %44, 0, !dbg !4900
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !4904

if.then26:                                        ; preds = %for.body
  %45 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4905
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 0, !dbg !4907
  %46 = load i32, i32* %v1, align 4, !dbg !4907
  %47 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4908
  %v127 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %47, i32 0, i32 0, !dbg !4909
  store i32 %46, i32* %v127, align 4, !dbg !4910
  %48 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4911
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 2, !dbg !4912
  %49 = load i32, i32* %v3, align 4, !dbg !4912
  %50 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4913
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %50, i32 0, i32 1, !dbg !4914
  store i32 %49, i32* %v2, align 4, !dbg !4915
  %51 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4916
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %51, i32 0, i32 6, !dbg !4917
  store i32 3, i32* %springtype, align 4, !dbg !4918
  %52 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4919
  %incdec.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %52, i32 1, !dbg !4919
  store %struct.BodySpring* %incdec.ptr, %struct.BodySpring** %bs, align 8, !dbg !4919
  %53 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4920
  %v228 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i32 0, i32 1, !dbg !4921
  %54 = load i32, i32* %v228, align 4, !dbg !4921
  %55 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4922
  %v129 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %55, i32 0, i32 0, !dbg !4923
  store i32 %54, i32* %v129, align 4, !dbg !4924
  %56 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4925
  %v430 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 3, !dbg !4926
  %57 = load i32, i32* %v430, align 4, !dbg !4926
  %58 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4927
  %v231 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %58, i32 0, i32 1, !dbg !4928
  store i32 %57, i32* %v231, align 4, !dbg !4929
  %59 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4930
  %springtype32 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %59, i32 0, i32 6, !dbg !4931
  store i32 3, i32* %springtype32, align 4, !dbg !4932
  %60 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !4933
  %incdec.ptr33 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %60, i32 1, !dbg !4933
  store %struct.BodySpring* %incdec.ptr33, %struct.BodySpring** %bs, align 8, !dbg !4933
  br label %if.end34, !dbg !4934

if.end34:                                         ; preds = %if.then26, %for.body
  br label %for.inc, !dbg !4935

for.inc:                                          ; preds = %if.end34
  %61 = load i32, i32* %a, align 4, !dbg !4936
  %dec = add nsw i32 %61, -1, !dbg !4936
  store i32 %dec, i32* %a, align 4, !dbg !4936
  %62 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4937
  %incdec.ptr35 = getelementptr inbounds %struct.MFace, %struct.MFace* %62, i32 1, !dbg !4937
  store %struct.MFace* %incdec.ptr35, %struct.MFace** %mface, align 8, !dbg !4937
  br label %for.cond, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond
  br label %if.end36, !dbg !4941

if.end36:                                         ; preds = %for.end, %if.end
  %63 = load i32, i32* %nofquads, align 4, !dbg !4942
  %mul37 = mul nsw i32 %63, 2, !dbg !4943
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4944
  %soft38 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 111, !dbg !4945
  %65 = load %struct.SoftBody*, %struct.SoftBody** %soft38, align 8, !dbg !4945
  %totspring39 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %65, i32 0, i32 1, !dbg !4946
  %66 = load i32, i32* %totspring39, align 4, !dbg !4947
  %add40 = add nsw i32 %66, %mul37, !dbg !4947
  store i32 %add40, i32* %totspring39, align 4, !dbg !4947
  br label %if.end41, !dbg !4948

if.end41:                                         ; preds = %if.end36, %if.then
  br label %if.end42, !dbg !4949

if.end42:                                         ; preds = %if.end41, %entry
  ret void, !dbg !4950
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_bps_springlist(%struct.Object* %ob) #0 !dbg !4951 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !4954, metadata !DIExpression()), !dbg !4955
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4956
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !4957
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !4957
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !4958, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4962, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4964, metadata !DIExpression()), !dbg !4965
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4966
  %cmp = icmp eq %struct.SoftBody* %2, null, !dbg !4968
  br i1 %cmp, label %if.then, label %if.end, !dbg !4969

if.then:                                          ; preds = %entry
  br label %for.end25, !dbg !4970

if.end:                                           ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4971
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 0, !dbg !4973
  %4 = load i32, i32* %totpoint, align 8, !dbg !4973
  store i32 %4, i32* %a, align 4, !dbg !4974
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4975
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 2, !dbg !4976
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !4976
  store %struct.BodyPoint* %6, %struct.BodyPoint** %bp, align 8, !dbg !4977
  br label %for.cond, !dbg !4978

for.cond:                                         ; preds = %for.inc22, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !4979
  %cmp1 = icmp sgt i32 %7, 0, !dbg !4981
  br i1 %cmp1, label %for.body, label %for.end25, !dbg !4982

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4983
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 14, !dbg !4986
  %9 = load i32*, i32** %springs, align 8, !dbg !4986
  %tobool = icmp ne i32* %9, null, !dbg !4983
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !4987

if.then2:                                         ; preds = %for.body
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4988
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4990
  %springs3 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %11, i32 0, i32 14, !dbg !4991
  %12 = load i32*, i32** %springs3, align 8, !dbg !4991
  %13 = bitcast i32* %12 to i8*, !dbg !4990
  call void %10(i8* %13), !dbg !4988
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !4992
  %springs4 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 0, i32 14, !dbg !4993
  store i32* null, i32** %springs4, align 8, !dbg !4994
  br label %if.end5, !dbg !4995

if.end5:                                          ; preds = %if.then2, %for.body
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !4996
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 1, !dbg !4998
  %16 = load i32, i32* %totspring, align 4, !dbg !4998
  store i32 %16, i32* %b, align 4, !dbg !4999
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5000
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 3, !dbg !5001
  %18 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !5001
  store %struct.BodySpring* %18, %struct.BodySpring** %bs, align 8, !dbg !5002
  br label %for.cond6, !dbg !5003

for.cond6:                                        ; preds = %for.inc, %if.end5
  %19 = load i32, i32* %b, align 4, !dbg !5004
  %cmp7 = icmp sgt i32 %19, 0, !dbg !5006
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !5007

for.body8:                                        ; preds = %for.cond6
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5008
  %totpoint9 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 0, !dbg !5011
  %21 = load i32, i32* %totpoint9, align 8, !dbg !5011
  %22 = load i32, i32* %a, align 4, !dbg !5012
  %sub = sub nsw i32 %21, %22, !dbg !5013
  %23 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5014
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %23, i32 0, i32 0, !dbg !5015
  %24 = load i32, i32* %v1, align 4, !dbg !5015
  %cmp10 = icmp eq i32 %sub, %24, !dbg !5016
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !5017

if.then11:                                        ; preds = %for.body8
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5018
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5020
  %totspring12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 1, !dbg !5021
  %27 = load i32, i32* %totspring12, align 4, !dbg !5021
  %28 = load i32, i32* %b, align 4, !dbg !5022
  %sub13 = sub nsw i32 %27, %28, !dbg !5023
  call void @add_bp_springlist(%struct.BodyPoint* %25, i32 %sub13), !dbg !5024
  br label %if.end14, !dbg !5025

if.end14:                                         ; preds = %if.then11, %for.body8
  %29 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5026
  %totpoint15 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %29, i32 0, i32 0, !dbg !5028
  %30 = load i32, i32* %totpoint15, align 8, !dbg !5028
  %31 = load i32, i32* %a, align 4, !dbg !5029
  %sub16 = sub nsw i32 %30, %31, !dbg !5030
  %32 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5031
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %32, i32 0, i32 1, !dbg !5032
  %33 = load i32, i32* %v2, align 4, !dbg !5032
  %cmp17 = icmp eq i32 %sub16, %33, !dbg !5033
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !5034

if.then18:                                        ; preds = %if.end14
  %34 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5035
  %35 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5037
  %totspring19 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 1, !dbg !5038
  %36 = load i32, i32* %totspring19, align 4, !dbg !5038
  %37 = load i32, i32* %b, align 4, !dbg !5039
  %sub20 = sub nsw i32 %36, %37, !dbg !5040
  call void @add_bp_springlist(%struct.BodyPoint* %34, i32 %sub20), !dbg !5041
  br label %if.end21, !dbg !5042

if.end21:                                         ; preds = %if.then18, %if.end14
  br label %for.inc, !dbg !5043

for.inc:                                          ; preds = %if.end21
  %38 = load i32, i32* %b, align 4, !dbg !5044
  %dec = add nsw i32 %38, -1, !dbg !5044
  store i32 %dec, i32* %b, align 4, !dbg !5044
  %39 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5045
  %incdec.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %39, i32 1, !dbg !5045
  store %struct.BodySpring* %incdec.ptr, %struct.BodySpring** %bs, align 8, !dbg !5045
  br label %for.cond6, !dbg !5046, !llvm.loop !5047

for.end:                                          ; preds = %for.cond6
  br label %for.inc22, !dbg !5049

for.inc22:                                        ; preds = %for.end
  %40 = load i32, i32* %a, align 4, !dbg !5050
  %dec23 = add nsw i32 %40, -1, !dbg !5050
  store i32 %dec23, i32* %a, align 4, !dbg !5050
  %41 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5051
  %incdec.ptr24 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %41, i32 1, !dbg !5051
  store %struct.BodyPoint* %incdec.ptr24, %struct.BodyPoint** %bp, align 8, !dbg !5051
  br label %for.cond, !dbg !5052, !llvm.loop !5053

for.end25:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5055
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_2nd_order_springs(%struct.Object* %ob, float %stiffness) #0 !dbg !5056 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %stiffness.addr = alloca float, align 4
  %counter = alloca i32, align 4
  %bs_new = alloca %struct.BodySpring*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  store float %stiffness, float* %stiffness.addr, align 4
  call void @llvm.dbg.declare(metadata float* %stiffness.addr, metadata !5061, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !5063, metadata !DIExpression()), !dbg !5064
  store i32 0, i32* %counter, align 4, !dbg !5064
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs_new, metadata !5065, metadata !DIExpression()), !dbg !5066
  %0 = load float, float* %stiffness.addr, align 4, !dbg !5067
  %1 = load float, float* %stiffness.addr, align 4, !dbg !5068
  %mul = fmul float %1, %0, !dbg !5068
  store float %mul, float* %stiffness.addr, align 4, !dbg !5068
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5069
  %3 = load float, float* %stiffness.addr, align 4, !dbg !5070
  call void @add_2nd_order_roller(%struct.Object* %2, float %3, i32* %counter, i32 0), !dbg !5071
  %4 = load i32, i32* %counter, align 4, !dbg !5072
  %tobool = icmp ne i32 %4, 0, !dbg !5072
  br i1 %tobool, label %if.then, label %if.end18, !dbg !5074

if.then:                                          ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5075
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5077
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 111, !dbg !5078
  %7 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5078
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 1, !dbg !5079
  %8 = load i32, i32* %totspring, align 4, !dbg !5079
  %9 = load i32, i32* %counter, align 4, !dbg !5080
  %add = add nsw i32 %8, %9, !dbg !5081
  %conv = sext i32 %add to i64, !dbg !5082
  %mul1 = mul i64 %conv, 40, !dbg !5083
  %call = call i8* %5(i64 %mul1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !5075
  %10 = bitcast i8* %call to %struct.BodySpring*, !dbg !5075
  store %struct.BodySpring* %10, %struct.BodySpring** %bs_new, align 8, !dbg !5084
  %11 = load %struct.BodySpring*, %struct.BodySpring** %bs_new, align 8, !dbg !5085
  %12 = bitcast %struct.BodySpring* %11 to i8*, !dbg !5086
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5087
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 111, !dbg !5088
  %14 = load %struct.SoftBody*, %struct.SoftBody** %soft2, align 8, !dbg !5088
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 3, !dbg !5089
  %15 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !5089
  %16 = bitcast %struct.BodySpring* %15 to i8*, !dbg !5086
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5090
  %soft3 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 111, !dbg !5091
  %18 = load %struct.SoftBody*, %struct.SoftBody** %soft3, align 8, !dbg !5091
  %totspring4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 1, !dbg !5092
  %19 = load i32, i32* %totspring4, align 4, !dbg !5092
  %conv5 = sext i32 %19 to i64, !dbg !5093
  %mul6 = mul i64 %conv5, 40, !dbg !5094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %16, i64 %mul6, i1 false), !dbg !5086
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5095
  %soft7 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 111, !dbg !5097
  %21 = load %struct.SoftBody*, %struct.SoftBody** %soft7, align 8, !dbg !5097
  %bspring8 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %21, i32 0, i32 3, !dbg !5098
  %22 = load %struct.BodySpring*, %struct.BodySpring** %bspring8, align 8, !dbg !5098
  %tobool9 = icmp ne %struct.BodySpring* %22, null, !dbg !5095
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !5099

if.then10:                                        ; preds = %if.then
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5100
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5101
  %soft11 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 111, !dbg !5102
  %25 = load %struct.SoftBody*, %struct.SoftBody** %soft11, align 8, !dbg !5102
  %bspring12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %25, i32 0, i32 3, !dbg !5103
  %26 = load %struct.BodySpring*, %struct.BodySpring** %bspring12, align 8, !dbg !5103
  %27 = bitcast %struct.BodySpring* %26 to i8*, !dbg !5101
  call void %23(i8* %27), !dbg !5100
  br label %if.end, !dbg !5100

if.end:                                           ; preds = %if.then10, %if.then
  %28 = load %struct.BodySpring*, %struct.BodySpring** %bs_new, align 8, !dbg !5104
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5105
  %soft13 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 111, !dbg !5106
  %30 = load %struct.SoftBody*, %struct.SoftBody** %soft13, align 8, !dbg !5106
  %bspring14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 3, !dbg !5107
  store %struct.BodySpring* %28, %struct.BodySpring** %bspring14, align 8, !dbg !5108
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5109
  %32 = load float, float* %stiffness.addr, align 4, !dbg !5110
  call void @add_2nd_order_roller(%struct.Object* %31, float %32, i32* %counter, i32 1), !dbg !5111
  %33 = load i32, i32* %counter, align 4, !dbg !5112
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5113
  %soft15 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 111, !dbg !5114
  %35 = load %struct.SoftBody*, %struct.SoftBody** %soft15, align 8, !dbg !5114
  %totspring16 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 1, !dbg !5115
  %36 = load i32, i32* %totspring16, align 4, !dbg !5116
  %add17 = add nsw i32 %36, %33, !dbg !5116
  store i32 %add17, i32* %totspring16, align 4, !dbg !5116
  br label %if.end18, !dbg !5117

if.end18:                                         ; preds = %if.end, %entry
  ret void, !dbg !5118
}

; Function Attrs: noinline nounwind uwtable
define internal void @springs_from_mesh(%struct.Object* %ob) #0 !dbg !5119 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %me = alloca %struct.Mesh*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  %scale = alloca float, align 4
  %bs = alloca %struct.BodySpring*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5124, metadata !DIExpression()), !dbg !5125
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5126
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5127
  %1 = load i8*, i8** %data, align 8, !dbg !5127
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5126
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !5128, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata float* %scale, metadata !5132, metadata !DIExpression()), !dbg !5133
  store float 1.000000e+00, float* %scale, align 4, !dbg !5133
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5134
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !5135
  %4 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5135
  store %struct.SoftBody* %4, %struct.SoftBody** %sb, align 8, !dbg !5136
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5137
  %tobool = icmp ne %struct.Mesh* %5, null, !dbg !5137
  br i1 %tobool, label %land.lhs.true, label %if.end36, !dbg !5139

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5140
  %tobool1 = icmp ne %struct.SoftBody* %6, null, !dbg !5140
  br i1 %tobool1, label %if.then, label %if.end36, !dbg !5141

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5142
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 26, !dbg !5145
  %8 = load i32, i32* %totvert, align 8, !dbg !5145
  %tobool2 = icmp ne i32 %8, 0, !dbg !5142
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5146

if.then3:                                         ; preds = %if.then
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5147
  %soft4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 111, !dbg !5149
  %10 = load %struct.SoftBody*, %struct.SoftBody** %soft4, align 8, !dbg !5149
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 2, !dbg !5150
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !5150
  store %struct.BodyPoint* %11, %struct.BodyPoint** %bp, align 8, !dbg !5151
  store i32 0, i32* %a, align 4, !dbg !5152
  br label %for.cond, !dbg !5154

for.cond:                                         ; preds = %for.inc, %if.then3
  %12 = load i32, i32* %a, align 4, !dbg !5155
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5157
  %totvert5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 26, !dbg !5158
  %14 = load i32, i32* %totvert5, align 8, !dbg !5158
  %cmp = icmp slt i32 %12, %14, !dbg !5159
  br i1 %cmp, label %for.body, label %for.end, !dbg !5160

for.body:                                         ; preds = %for.cond
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5161
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %15, i32 0, i32 0, !dbg !5163
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !5161
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5164
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 15, !dbg !5165
  %17 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5165
  %18 = load i32, i32* %a, align 4, !dbg !5166
  %idxprom = sext i32 %18 to i64, !dbg !5164
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i64 %idxprom, !dbg !5164
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !5167
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5164
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !5168
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5169
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 47, !dbg !5170
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5169
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5171
  %origS8 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 0, !dbg !5172
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %origS8, i64 0, i64 0, !dbg !5171
  call void @mul_m4_v3([4 x float]* %arraydecay7, float* %arraydecay9), !dbg !5173
  br label %for.inc, !dbg !5174

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !5175
  %inc = add nsw i32 %21, 1, !dbg !5175
  store i32 %inc, i32* %a, align 4, !dbg !5175
  %22 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5176
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %22, i32 1, !dbg !5176
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !5176
  br label %for.cond, !dbg !5177, !llvm.loop !5178

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5180

if.end:                                           ; preds = %for.end, %if.then
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5181
  %springpreload = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 43, !dbg !5183
  %24 = load i16, i16* %springpreload, align 2, !dbg !5183
  %conv = sext i16 %24 to i32, !dbg !5181
  %cmp10 = icmp ne i32 %conv, 0, !dbg !5184
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !5185

if.then12:                                        ; preds = %if.end
  %25 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5186
  %springpreload13 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %25, i32 0, i32 43, !dbg !5188
  %26 = load i16, i16* %springpreload13, align 2, !dbg !5188
  %conv14 = sext i16 %26 to i32, !dbg !5186
  %conv15 = sitofp i32 %conv14 to float, !dbg !5186
  %div = fdiv float %conv15, 1.000000e+02, !dbg !5189
  store float %div, float* %scale, align 4, !dbg !5190
  br label %if.end16, !dbg !5191

if.end16:                                         ; preds = %if.then12, %if.end
  store i32 0, i32* %a, align 4, !dbg !5192
  br label %for.cond17, !dbg !5194

for.cond17:                                       ; preds = %for.inc33, %if.end16
  %27 = load i32, i32* %a, align 4, !dbg !5195
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5197
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 1, !dbg !5198
  %29 = load i32, i32* %totspring, align 4, !dbg !5198
  %cmp18 = icmp slt i32 %27, %29, !dbg !5199
  br i1 %cmp18, label %for.body20, label %for.end35, !dbg !5200

for.body20:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !5201, metadata !DIExpression()), !dbg !5203
  %30 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5204
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %30, i32 0, i32 3, !dbg !5205
  %31 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !5205
  %32 = load i32, i32* %a, align 4, !dbg !5206
  %idxprom21 = sext i32 %32 to i64, !dbg !5204
  %arrayidx22 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %31, i64 %idxprom21, !dbg !5204
  store %struct.BodySpring* %arrayidx22, %struct.BodySpring** %bs, align 8, !dbg !5203
  %33 = load float, float* %scale, align 4, !dbg !5207
  %34 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5208
  %bpoint23 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 2, !dbg !5209
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint23, align 8, !dbg !5209
  %36 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5210
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %36, i32 0, i32 0, !dbg !5211
  %37 = load i32, i32* %v1, align 4, !dbg !5211
  %idxprom24 = sext i32 %37 to i64, !dbg !5208
  %arrayidx25 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i64 %idxprom24, !dbg !5208
  %origS26 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx25, i32 0, i32 0, !dbg !5212
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %origS26, i64 0, i64 0, !dbg !5208
  %38 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5213
  %bpoint28 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %38, i32 0, i32 2, !dbg !5214
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint28, align 8, !dbg !5214
  %40 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5215
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %40, i32 0, i32 1, !dbg !5216
  %41 = load i32, i32* %v2, align 4, !dbg !5216
  %idxprom29 = sext i32 %41 to i64, !dbg !5213
  %arrayidx30 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i64 %idxprom29, !dbg !5213
  %origS31 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx30, i32 0, i32 0, !dbg !5217
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %origS31, i64 0, i64 0, !dbg !5213
  %call = call float @len_v3v3(float* %arraydecay27, float* %arraydecay32), !dbg !5218
  %mul = fmul float %33, %call, !dbg !5219
  %42 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5220
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %42, i32 0, i32 2, !dbg !5221
  store float %mul, float* %len, align 4, !dbg !5222
  br label %for.inc33, !dbg !5223

for.inc33:                                        ; preds = %for.body20
  %43 = load i32, i32* %a, align 4, !dbg !5224
  %inc34 = add nsw i32 %43, 1, !dbg !5224
  store i32 %inc34, i32* %a, align 4, !dbg !5224
  br label %for.cond17, !dbg !5225, !llvm.loop !5226

for.end35:                                        ; preds = %for.cond17
  br label %if.end36, !dbg !5228

if.end36:                                         ; preds = %for.end35, %land.lhs.true, %entry
  ret void, !dbg !5229
}

; Function Attrs: noinline nounwind uwtable
define internal void @calculate_collision_balls(%struct.Object* %ob) #0 !dbg !5230 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %akku_count = alloca i32, align 4
  %min = alloca float, align 4
  %max = alloca float, align 4
  %akku = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !5233, metadata !DIExpression()), !dbg !5234
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5235
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !5236
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5236
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !5234
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !5237, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !5239, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5241, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5243, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %akku_count, metadata !5245, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata float* %min, metadata !5247, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata float* %max, metadata !5249, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.declare(metadata float* %akku, metadata !5251, metadata !DIExpression()), !dbg !5252
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5253
  %cmp = icmp eq %struct.SoftBody* %2, null, !dbg !5255
  br i1 %cmp, label %if.then, label %if.end, !dbg !5256

if.then:                                          ; preds = %entry
  br label %for.end61, !dbg !5257

if.end:                                           ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5258
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 0, !dbg !5260
  %4 = load i32, i32* %totpoint, align 8, !dbg !5260
  store i32 %4, i32* %a, align 4, !dbg !5261
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5262
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 2, !dbg !5263
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !5263
  store %struct.BodyPoint* %6, %struct.BodyPoint** %bp, align 8, !dbg !5264
  br label %for.cond, !dbg !5265

for.cond:                                         ; preds = %for.inc59, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !5266
  %cmp1 = icmp sgt i32 %7, 0, !dbg !5268
  br i1 %cmp1, label %for.body, label %for.end61, !dbg !5269

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5270
  %colball = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 18, !dbg !5272
  store float 0.000000e+00, float* %colball, align 4, !dbg !5273
  store float 0.000000e+00, float* %akku, align 4, !dbg !5274
  store i32 0, i32* %akku_count, align 4, !dbg !5275
  store float 0x4480F0CF00000000, float* %min, align 4, !dbg !5276
  store float 0xC480F0CF00000000, float* %max, align 4, !dbg !5277
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5278
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 13, !dbg !5280
  %10 = load i32, i32* %nofsprings, align 4, !dbg !5280
  store i32 %10, i32* %b, align 4, !dbg !5281
  br label %for.cond2, !dbg !5282

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %b, align 4, !dbg !5283
  %cmp3 = icmp sgt i32 %11, 0, !dbg !5285
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !5286

for.body4:                                        ; preds = %for.cond2
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5287
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 3, !dbg !5289
  %13 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !5289
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5290
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 0, i32 14, !dbg !5291
  %15 = load i32*, i32** %springs, align 8, !dbg !5291
  %16 = load i32, i32* %b, align 4, !dbg !5292
  %sub = sub nsw i32 %16, 1, !dbg !5293
  %idxprom = sext i32 %sub to i64, !dbg !5290
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !5290
  %17 = load i32, i32* %arrayidx, align 4, !dbg !5290
  %idx.ext = sext i32 %17 to i64, !dbg !5294
  %add.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %13, i64 %idx.ext, !dbg !5294
  store %struct.BodySpring* %add.ptr, %struct.BodySpring** %bs, align 8, !dbg !5295
  %18 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5296
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %18, i32 0, i32 6, !dbg !5298
  %19 = load i32, i32* %springtype, align 4, !dbg !5298
  %cmp5 = icmp eq i32 %19, 1, !dbg !5299
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !5300

if.then6:                                         ; preds = %for.body4
  %20 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5301
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %20, i32 0, i32 2, !dbg !5303
  %21 = load float, float* %len, align 4, !dbg !5303
  %22 = load float, float* %akku, align 4, !dbg !5304
  %add = fadd float %22, %21, !dbg !5304
  store float %add, float* %akku, align 4, !dbg !5304
  %23 = load i32, i32* %akku_count, align 4, !dbg !5305
  %inc = add nsw i32 %23, 1, !dbg !5305
  store i32 %inc, i32* %akku_count, align 4, !dbg !5305
  %24 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5306
  %len7 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %24, i32 0, i32 2, !dbg !5307
  %25 = load float, float* %len7, align 4, !dbg !5307
  %26 = load float, float* %min, align 4, !dbg !5308
  %call = call float @min_ff(float %25, float %26), !dbg !5309
  store float %call, float* %min, align 4, !dbg !5310
  %27 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5311
  %len8 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %27, i32 0, i32 2, !dbg !5312
  %28 = load float, float* %len8, align 4, !dbg !5312
  %29 = load float, float* %max, align 4, !dbg !5313
  %call9 = call float @max_ff(float %28, float %29), !dbg !5314
  store float %call9, float* %max, align 4, !dbg !5315
  br label %if.end10, !dbg !5316

if.end10:                                         ; preds = %if.then6, %for.body4
  br label %for.inc, !dbg !5317

for.inc:                                          ; preds = %if.end10
  %30 = load i32, i32* %b, align 4, !dbg !5318
  %dec = add nsw i32 %30, -1, !dbg !5318
  store i32 %dec, i32* %b, align 4, !dbg !5318
  br label %for.cond2, !dbg !5319, !llvm.loop !5320

for.end:                                          ; preds = %for.cond2
  %31 = load i32, i32* %akku_count, align 4, !dbg !5322
  %cmp11 = icmp sgt i32 %31, 0, !dbg !5324
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !5325

if.then12:                                        ; preds = %for.end
  %32 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5326
  %sbc_mode = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %32, i32 0, i32 36, !dbg !5329
  %33 = load i16, i16* %sbc_mode, align 8, !dbg !5329
  %conv = sext i16 %33 to i32, !dbg !5326
  %cmp13 = icmp eq i32 %conv, 0, !dbg !5330
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !5331

if.then15:                                        ; preds = %if.then12
  %34 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5332
  %colball16 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 33, !dbg !5334
  %35 = load float, float* %colball16, align 4, !dbg !5334
  %36 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5335
  %colball17 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %36, i32 0, i32 18, !dbg !5336
  store float %35, float* %colball17, align 4, !dbg !5337
  br label %if.end18, !dbg !5338

if.end18:                                         ; preds = %if.then15, %if.then12
  %37 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5339
  %sbc_mode19 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 36, !dbg !5341
  %38 = load i16, i16* %sbc_mode19, align 8, !dbg !5341
  %conv20 = sext i16 %38 to i32, !dbg !5339
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !5342
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !5343

if.then23:                                        ; preds = %if.end18
  %39 = load float, float* %akku, align 4, !dbg !5344
  %40 = load i32, i32* %akku_count, align 4, !dbg !5346
  %conv24 = sitofp i32 %40 to float, !dbg !5347
  %div = fdiv float %39, %conv24, !dbg !5348
  %41 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5349
  %colball25 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %41, i32 0, i32 33, !dbg !5350
  %42 = load float, float* %colball25, align 4, !dbg !5350
  %mul = fmul float %div, %42, !dbg !5351
  %43 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5352
  %colball26 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %43, i32 0, i32 18, !dbg !5353
  store float %mul, float* %colball26, align 4, !dbg !5354
  br label %if.end27, !dbg !5355

if.end27:                                         ; preds = %if.then23, %if.end18
  %44 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5356
  %sbc_mode28 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %44, i32 0, i32 36, !dbg !5358
  %45 = load i16, i16* %sbc_mode28, align 8, !dbg !5358
  %conv29 = sext i16 %45 to i32, !dbg !5356
  %cmp30 = icmp eq i32 %conv29, 2, !dbg !5359
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !5360

if.then32:                                        ; preds = %if.end27
  %46 = load float, float* %min, align 4, !dbg !5361
  %47 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5363
  %colball33 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %47, i32 0, i32 33, !dbg !5364
  %48 = load float, float* %colball33, align 4, !dbg !5364
  %mul34 = fmul float %46, %48, !dbg !5365
  %49 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5366
  %colball35 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %49, i32 0, i32 18, !dbg !5367
  store float %mul34, float* %colball35, align 4, !dbg !5368
  br label %if.end36, !dbg !5369

if.end36:                                         ; preds = %if.then32, %if.end27
  %50 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5370
  %sbc_mode37 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %50, i32 0, i32 36, !dbg !5372
  %51 = load i16, i16* %sbc_mode37, align 8, !dbg !5372
  %conv38 = sext i16 %51 to i32, !dbg !5370
  %cmp39 = icmp eq i32 %conv38, 3, !dbg !5373
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !5374

if.then41:                                        ; preds = %if.end36
  %52 = load float, float* %max, align 4, !dbg !5375
  %53 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5377
  %colball42 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %53, i32 0, i32 33, !dbg !5378
  %54 = load float, float* %colball42, align 4, !dbg !5378
  %mul43 = fmul float %52, %54, !dbg !5379
  %55 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5380
  %colball44 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %55, i32 0, i32 18, !dbg !5381
  store float %mul43, float* %colball44, align 4, !dbg !5382
  br label %if.end45, !dbg !5383

if.end45:                                         ; preds = %if.then41, %if.end36
  %56 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5384
  %sbc_mode46 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %56, i32 0, i32 36, !dbg !5386
  %57 = load i16, i16* %sbc_mode46, align 8, !dbg !5386
  %conv47 = sext i16 %57 to i32, !dbg !5384
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !5387
  br i1 %cmp48, label %if.then50, label %if.end56, !dbg !5388

if.then50:                                        ; preds = %if.end45
  %58 = load float, float* %min, align 4, !dbg !5389
  %59 = load float, float* %max, align 4, !dbg !5391
  %add51 = fadd float %58, %59, !dbg !5392
  %div52 = fdiv float %add51, 2.000000e+00, !dbg !5393
  %60 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5394
  %colball53 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %60, i32 0, i32 33, !dbg !5395
  %61 = load float, float* %colball53, align 4, !dbg !5395
  %mul54 = fmul float %div52, %61, !dbg !5396
  %62 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5397
  %colball55 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %62, i32 0, i32 18, !dbg !5398
  store float %mul54, float* %colball55, align 4, !dbg !5399
  br label %if.end56, !dbg !5400

if.end56:                                         ; preds = %if.then50, %if.end45
  br label %if.end58, !dbg !5401

if.else:                                          ; preds = %for.end
  %63 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5402
  %colball57 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %63, i32 0, i32 18, !dbg !5403
  store float 0.000000e+00, float* %colball57, align 4, !dbg !5404
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.end56
  br label %for.inc59, !dbg !5405

for.inc59:                                        ; preds = %if.end58
  %64 = load i32, i32* %a, align 4, !dbg !5406
  %dec60 = add nsw i32 %64, -1, !dbg !5406
  store i32 %dec60, i32* %a, align 4, !dbg !5406
  %65 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5407
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %65, i32 1, !dbg !5407
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !5407
  br label %for.cond, !dbg !5408, !llvm.loop !5409

for.end61:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5411
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @count_mesh_quads(%struct.Mesh* %me) #0 !dbg !5412 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %a = alloca i32, align 4
  %result = alloca i32, align 4
  %mface = alloca %struct.MFace*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5417, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5419, metadata !DIExpression()), !dbg !5420
  store i32 0, i32* %result, align 4, !dbg !5420
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !5421, metadata !DIExpression()), !dbg !5422
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5423
  %mface1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 12, !dbg !5424
  %1 = load %struct.MFace*, %struct.MFace** %mface1, align 8, !dbg !5424
  store %struct.MFace* %1, %struct.MFace** %mface, align 8, !dbg !5422
  %2 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5425
  %tobool = icmp ne %struct.MFace* %2, null, !dbg !5425
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5427

if.then:                                          ; preds = %entry
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5428
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 28, !dbg !5431
  %4 = load i32, i32* %totface, align 8, !dbg !5431
  store i32 %4, i32* %a, align 4, !dbg !5432
  br label %for.cond, !dbg !5433

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %a, align 4, !dbg !5434
  %cmp = icmp sgt i32 %5, 0, !dbg !5436
  br i1 %cmp, label %for.body, label %for.end, !dbg !5437

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5438
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %6, i32 0, i32 3, !dbg !5441
  %7 = load i32, i32* %v4, align 4, !dbg !5441
  %tobool2 = icmp ne i32 %7, 0, !dbg !5438
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5442

if.then3:                                         ; preds = %for.body
  %8 = load i32, i32* %result, align 4, !dbg !5443
  %inc = add nsw i32 %8, 1, !dbg !5443
  store i32 %inc, i32* %result, align 4, !dbg !5443
  br label %if.end, !dbg !5444

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5445

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %a, align 4, !dbg !5446
  %dec = add nsw i32 %9, -1, !dbg !5446
  store i32 %dec, i32* %a, align 4, !dbg !5446
  %10 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5447
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i32 1, !dbg !5447
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !5447
  br label %for.cond, !dbg !5448, !llvm.loop !5449

for.end:                                          ; preds = %for.cond
  br label %if.end4, !dbg !5451

if.end4:                                          ; preds = %for.end, %entry
  %11 = load i32, i32* %result, align 4, !dbg !5452
  ret i32 %11, !dbg !5453
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_bp_springlist(%struct.BodyPoint* %bp, i32 %springID) #0 !dbg !5454 {
entry:
  %bp.addr = alloca %struct.BodyPoint*, align 8
  %springID.addr = alloca i32, align 4
  %newlist = alloca i32*, align 8
  store %struct.BodyPoint* %bp, %struct.BodyPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  store i32 %springID, i32* %springID.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %springID.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.declare(metadata i32** %newlist, metadata !5461, metadata !DIExpression()), !dbg !5462
  %0 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5463
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %0, i32 0, i32 14, !dbg !5465
  %1 = load i32*, i32** %springs, align 8, !dbg !5465
  %cmp = icmp eq i32* %1, null, !dbg !5466
  br i1 %cmp, label %if.then, label %if.else, !dbg !5467

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5468
  %call = call i8* %2(i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !5468
  %3 = bitcast i8* %call to i32*, !dbg !5468
  %4 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5470
  %springs1 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %4, i32 0, i32 14, !dbg !5471
  store i32* %3, i32** %springs1, align 8, !dbg !5472
  %5 = load i32, i32* %springID.addr, align 4, !dbg !5473
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5474
  %springs2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %6, i32 0, i32 14, !dbg !5475
  %7 = load i32*, i32** %springs2, align 8, !dbg !5475
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !5474
  store i32 %5, i32* %arrayidx, align 4, !dbg !5476
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5477
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 13, !dbg !5478
  store i32 1, i32* %nofsprings, align 4, !dbg !5479
  br label %if.end, !dbg !5480

if.else:                                          ; preds = %entry
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5481
  %nofsprings3 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 13, !dbg !5483
  %10 = load i32, i32* %nofsprings3, align 4, !dbg !5484
  %inc = add nsw i32 %10, 1, !dbg !5484
  store i32 %inc, i32* %nofsprings3, align 4, !dbg !5484
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5485
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5486
  %nofsprings4 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %12, i32 0, i32 13, !dbg !5487
  %13 = load i32, i32* %nofsprings4, align 4, !dbg !5487
  %conv = sext i32 %13 to i64, !dbg !5486
  %mul = mul i64 %conv, 4, !dbg !5488
  %call5 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !5485
  %14 = bitcast i8* %call5 to i32*, !dbg !5485
  store i32* %14, i32** %newlist, align 8, !dbg !5489
  %15 = load i32*, i32** %newlist, align 8, !dbg !5490
  %16 = bitcast i32* %15 to i8*, !dbg !5491
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5492
  %springs6 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i32 0, i32 14, !dbg !5493
  %18 = load i32*, i32** %springs6, align 8, !dbg !5493
  %19 = bitcast i32* %18 to i8*, !dbg !5491
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5494
  %nofsprings7 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 13, !dbg !5495
  %21 = load i32, i32* %nofsprings7, align 4, !dbg !5495
  %sub = sub nsw i32 %21, 1, !dbg !5496
  %conv8 = sext i32 %sub to i64, !dbg !5497
  %mul9 = mul i64 %conv8, 4, !dbg !5498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %19, i64 %mul9, i1 false), !dbg !5491
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5499
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5500
  %springs10 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i32 0, i32 14, !dbg !5501
  %24 = load i32*, i32** %springs10, align 8, !dbg !5501
  %25 = bitcast i32* %24 to i8*, !dbg !5500
  call void %22(i8* %25), !dbg !5499
  %26 = load i32*, i32** %newlist, align 8, !dbg !5502
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5503
  %springs11 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i32 0, i32 14, !dbg !5504
  store i32* %26, i32** %springs11, align 8, !dbg !5505
  %28 = load i32, i32* %springID.addr, align 4, !dbg !5506
  %29 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5507
  %springs12 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %29, i32 0, i32 14, !dbg !5508
  %30 = load i32*, i32** %springs12, align 8, !dbg !5508
  %31 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !5509
  %nofsprings13 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %31, i32 0, i32 13, !dbg !5510
  %32 = load i32, i32* %nofsprings13, align 4, !dbg !5510
  %sub14 = sub nsw i32 %32, 1, !dbg !5511
  %idxprom = sext i32 %sub14 to i64, !dbg !5507
  %arrayidx15 = getelementptr inbounds i32, i32* %30, i64 %idxprom, !dbg !5507
  store i32 %28, i32* %arrayidx15, align 4, !dbg !5512
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5513
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_2nd_order_roller(%struct.Object* %ob, float %UNUSED_stiffness, i32* %counter, i32 %addsprings) #0 !dbg !5514 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %UNUSED_stiffness.addr = alloca float, align 4
  %counter.addr = alloca i32*, align 8
  %addsprings.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bpo = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %bs2 = alloca %struct.BodySpring*, align 8
  %bs3 = alloca %struct.BodySpring*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %notthis = alloca i32, align 4
  %v0 = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  store float %UNUSED_stiffness, float* %UNUSED_stiffness.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_stiffness.addr, metadata !5519, metadata !DIExpression()), !dbg !5520
  store i32* %counter, i32** %counter.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %counter.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  store i32 %addsprings, i32* %addsprings.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addsprings.addr, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !5525, metadata !DIExpression()), !dbg !5526
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5527
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !5528
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5528
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !5526
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bpo, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !5533, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs2, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs3, metadata !5537, metadata !DIExpression()), !dbg !5538
  store %struct.BodySpring* null, %struct.BodySpring** %bs3, align 8, !dbg !5538
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5541, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5543, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.declare(metadata i32* %notthis, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i32 0, i32* %notthis, align 4, !dbg !5546
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !5547, metadata !DIExpression()), !dbg !5548
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5549
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 3, !dbg !5551
  %3 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !5551
  %tobool = icmp ne %struct.BodySpring* %3, null, !dbg !5549
  br i1 %tobool, label %if.end, label %if.then, !dbg !5552

if.then:                                          ; preds = %entry
  br label %for.end80, !dbg !5553

if.end:                                           ; preds = %entry
  %4 = load i32*, i32** %counter.addr, align 8, !dbg !5555
  store i32 0, i32* %4, align 4, !dbg !5556
  %5 = load i32, i32* %addsprings.addr, align 4, !dbg !5557
  %tobool1 = icmp ne i32 %5, 0, !dbg !5557
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !5559

if.then2:                                         ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5560
  %soft3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 111, !dbg !5561
  %7 = load %struct.SoftBody*, %struct.SoftBody** %soft3, align 8, !dbg !5561
  %bspring4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 3, !dbg !5562
  %8 = load %struct.BodySpring*, %struct.BodySpring** %bspring4, align 8, !dbg !5562
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5563
  %soft5 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 111, !dbg !5564
  %10 = load %struct.SoftBody*, %struct.SoftBody** %soft5, align 8, !dbg !5564
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 1, !dbg !5565
  %11 = load i32, i32* %totspring, align 4, !dbg !5565
  %idx.ext = sext i32 %11 to i64, !dbg !5566
  %add.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %8, i64 %idx.ext, !dbg !5566
  store %struct.BodySpring* %add.ptr, %struct.BodySpring** %bs3, align 8, !dbg !5567
  br label %if.end6, !dbg !5568

if.end6:                                          ; preds = %if.then2, %if.end
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5569
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 0, !dbg !5571
  %13 = load i32, i32* %totpoint, align 8, !dbg !5571
  store i32 %13, i32* %a, align 4, !dbg !5572
  %14 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5573
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %14, i32 0, i32 2, !dbg !5574
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !5574
  store %struct.BodyPoint* %15, %struct.BodyPoint** %bp, align 8, !dbg !5575
  br label %for.cond, !dbg !5576

for.cond:                                         ; preds = %for.inc77, %if.end6
  %16 = load i32, i32* %a, align 4, !dbg !5577
  %cmp = icmp sgt i32 %16, 0, !dbg !5579
  br i1 %cmp, label %for.body, label %for.end80, !dbg !5580

for.body:                                         ; preds = %for.cond
  store %struct.BodyPoint* null, %struct.BodyPoint** %bpo, align 8, !dbg !5581
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5583
  %totpoint7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 0, !dbg !5584
  %18 = load i32, i32* %totpoint7, align 8, !dbg !5584
  %19 = load i32, i32* %a, align 4, !dbg !5585
  %sub = sub nsw i32 %18, %19, !dbg !5586
  store i32 %sub, i32* %v0, align 4, !dbg !5587
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5588
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 13, !dbg !5590
  %21 = load i32, i32* %nofsprings, align 4, !dbg !5590
  store i32 %21, i32* %b, align 4, !dbg !5591
  br label %for.cond8, !dbg !5592

for.cond8:                                        ; preds = %for.inc74, %for.body
  %22 = load i32, i32* %b, align 4, !dbg !5593
  %cmp9 = icmp sgt i32 %22, 0, !dbg !5595
  br i1 %cmp9, label %for.body10, label %for.end76, !dbg !5596

for.body10:                                       ; preds = %for.cond8
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5597
  %bspring11 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 3, !dbg !5599
  %24 = load %struct.BodySpring*, %struct.BodySpring** %bspring11, align 8, !dbg !5599
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5600
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i32 0, i32 14, !dbg !5601
  %26 = load i32*, i32** %springs, align 8, !dbg !5601
  %27 = load i32, i32* %b, align 4, !dbg !5602
  %sub12 = sub nsw i32 %27, 1, !dbg !5603
  %idxprom = sext i32 %sub12 to i64, !dbg !5600
  %arrayidx = getelementptr inbounds i32, i32* %26, i64 %idxprom, !dbg !5600
  %28 = load i32, i32* %arrayidx, align 4, !dbg !5600
  %idx.ext13 = sext i32 %28 to i64, !dbg !5604
  %add.ptr14 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %24, i64 %idx.ext13, !dbg !5604
  store %struct.BodySpring* %add.ptr14, %struct.BodySpring** %bs, align 8, !dbg !5605
  %29 = load i32, i32* %v0, align 4, !dbg !5606
  %30 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5608
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %30, i32 0, i32 0, !dbg !5609
  %31 = load i32, i32* %v1, align 4, !dbg !5609
  %cmp15 = icmp eq i32 %29, %31, !dbg !5610
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !5611

if.then16:                                        ; preds = %for.body10
  %32 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5612
  %bpoint17 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %32, i32 0, i32 2, !dbg !5614
  %33 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint17, align 8, !dbg !5614
  %34 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5615
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %34, i32 0, i32 1, !dbg !5616
  %35 = load i32, i32* %v2, align 4, !dbg !5616
  %idx.ext18 = sext i32 %35 to i64, !dbg !5617
  %add.ptr19 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %33, i64 %idx.ext18, !dbg !5617
  store %struct.BodyPoint* %add.ptr19, %struct.BodyPoint** %bpo, align 8, !dbg !5618
  %36 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5619
  %v220 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %36, i32 0, i32 1, !dbg !5620
  %37 = load i32, i32* %v220, align 4, !dbg !5620
  store i32 %37, i32* %notthis, align 4, !dbg !5621
  br label %if.end31, !dbg !5622

if.else:                                          ; preds = %for.body10
  %38 = load i32, i32* %v0, align 4, !dbg !5623
  %39 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5626
  %v221 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %39, i32 0, i32 1, !dbg !5627
  %40 = load i32, i32* %v221, align 4, !dbg !5627
  %cmp22 = icmp eq i32 %38, %40, !dbg !5628
  br i1 %cmp22, label %if.then23, label %if.else29, !dbg !5629

if.then23:                                        ; preds = %if.else
  %41 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5630
  %bpoint24 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %41, i32 0, i32 2, !dbg !5632
  %42 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint24, align 8, !dbg !5632
  %43 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5633
  %v125 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %43, i32 0, i32 0, !dbg !5634
  %44 = load i32, i32* %v125, align 4, !dbg !5634
  %idx.ext26 = sext i32 %44 to i64, !dbg !5635
  %add.ptr27 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %42, i64 %idx.ext26, !dbg !5635
  store %struct.BodyPoint* %add.ptr27, %struct.BodyPoint** %bpo, align 8, !dbg !5636
  %45 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !5637
  %v128 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %45, i32 0, i32 0, !dbg !5638
  %46 = load i32, i32* %v128, align 4, !dbg !5638
  store i32 %46, i32* %notthis, align 4, !dbg !5639
  br label %if.end30, !dbg !5640

if.else29:                                        ; preds = %if.else
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)), !dbg !5641
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then23
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then16
  %47 = load %struct.BodyPoint*, %struct.BodyPoint** %bpo, align 8, !dbg !5643
  %tobool32 = icmp ne %struct.BodyPoint* %47, null, !dbg !5643
  br i1 %tobool32, label %if.then33, label %if.end73, !dbg !5645

if.then33:                                        ; preds = %if.end31
  %48 = load %struct.BodyPoint*, %struct.BodyPoint** %bpo, align 8, !dbg !5646
  %nofsprings34 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %48, i32 0, i32 13, !dbg !5649
  %49 = load i32, i32* %nofsprings34, align 4, !dbg !5649
  store i32 %49, i32* %c, align 4, !dbg !5650
  br label %for.cond35, !dbg !5651

for.cond35:                                       ; preds = %for.inc, %if.then33
  %50 = load i32, i32* %c, align 4, !dbg !5652
  %cmp36 = icmp sgt i32 %50, 0, !dbg !5654
  br i1 %cmp36, label %for.body37, label %for.end, !dbg !5655

for.body37:                                       ; preds = %for.cond35
  %51 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !5656
  %bspring38 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %51, i32 0, i32 3, !dbg !5658
  %52 = load %struct.BodySpring*, %struct.BodySpring** %bspring38, align 8, !dbg !5658
  %53 = load %struct.BodyPoint*, %struct.BodyPoint** %bpo, align 8, !dbg !5659
  %springs39 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %53, i32 0, i32 14, !dbg !5660
  %54 = load i32*, i32** %springs39, align 8, !dbg !5660
  %55 = load i32, i32* %c, align 4, !dbg !5661
  %sub40 = sub nsw i32 %55, 1, !dbg !5662
  %idxprom41 = sext i32 %sub40 to i64, !dbg !5659
  %arrayidx42 = getelementptr inbounds i32, i32* %54, i64 %idxprom41, !dbg !5659
  %56 = load i32, i32* %arrayidx42, align 4, !dbg !5659
  %idx.ext43 = sext i32 %56 to i64, !dbg !5663
  %add.ptr44 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %52, i64 %idx.ext43, !dbg !5663
  store %struct.BodySpring* %add.ptr44, %struct.BodySpring** %bs2, align 8, !dbg !5664
  %57 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5665
  %v145 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %57, i32 0, i32 0, !dbg !5667
  %58 = load i32, i32* %v145, align 4, !dbg !5667
  %59 = load i32, i32* %notthis, align 4, !dbg !5668
  %cmp46 = icmp ne i32 %58, %59, !dbg !5669
  br i1 %cmp46, label %land.lhs.true, label %if.end56, !dbg !5670

land.lhs.true:                                    ; preds = %for.body37
  %60 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5671
  %v147 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %60, i32 0, i32 0, !dbg !5672
  %61 = load i32, i32* %v147, align 4, !dbg !5672
  %62 = load i32, i32* %v0, align 4, !dbg !5673
  %cmp48 = icmp sgt i32 %61, %62, !dbg !5674
  br i1 %cmp48, label %if.then49, label %if.end56, !dbg !5675

if.then49:                                        ; preds = %land.lhs.true
  %63 = load i32*, i32** %counter.addr, align 8, !dbg !5676
  %64 = load i32, i32* %63, align 4, !dbg !5678
  %inc = add nsw i32 %64, 1, !dbg !5678
  store i32 %inc, i32* %63, align 4, !dbg !5678
  %65 = load i32, i32* %addsprings.addr, align 4, !dbg !5679
  %tobool50 = icmp ne i32 %65, 0, !dbg !5679
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !5681

if.then51:                                        ; preds = %if.then49
  %66 = load i32, i32* %v0, align 4, !dbg !5682
  %67 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5684
  %v152 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %67, i32 0, i32 0, !dbg !5685
  store i32 %66, i32* %v152, align 4, !dbg !5686
  %68 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5687
  %v153 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %68, i32 0, i32 0, !dbg !5688
  %69 = load i32, i32* %v153, align 4, !dbg !5688
  %70 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5689
  %v254 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %70, i32 0, i32 1, !dbg !5690
  store i32 %69, i32* %v254, align 4, !dbg !5691
  %71 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5692
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %71, i32 0, i32 6, !dbg !5693
  store i32 2, i32* %springtype, align 4, !dbg !5694
  %72 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5695
  %incdec.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %72, i32 1, !dbg !5695
  store %struct.BodySpring* %incdec.ptr, %struct.BodySpring** %bs3, align 8, !dbg !5695
  br label %if.end55, !dbg !5696

if.end55:                                         ; preds = %if.then51, %if.then49
  br label %if.end56, !dbg !5697

if.end56:                                         ; preds = %if.end55, %land.lhs.true, %for.body37
  %73 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5698
  %v257 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %73, i32 0, i32 1, !dbg !5700
  %74 = load i32, i32* %v257, align 4, !dbg !5700
  %75 = load i32, i32* %notthis, align 4, !dbg !5701
  %cmp58 = icmp ne i32 %74, %75, !dbg !5702
  br i1 %cmp58, label %land.lhs.true59, label %if.end72, !dbg !5703

land.lhs.true59:                                  ; preds = %if.end56
  %76 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5704
  %v260 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %76, i32 0, i32 1, !dbg !5705
  %77 = load i32, i32* %v260, align 4, !dbg !5705
  %78 = load i32, i32* %v0, align 4, !dbg !5706
  %cmp61 = icmp sgt i32 %77, %78, !dbg !5707
  br i1 %cmp61, label %if.then62, label %if.end72, !dbg !5708

if.then62:                                        ; preds = %land.lhs.true59
  %79 = load i32*, i32** %counter.addr, align 8, !dbg !5709
  %80 = load i32, i32* %79, align 4, !dbg !5711
  %inc63 = add nsw i32 %80, 1, !dbg !5711
  store i32 %inc63, i32* %79, align 4, !dbg !5711
  %81 = load i32, i32* %addsprings.addr, align 4, !dbg !5712
  %tobool64 = icmp ne i32 %81, 0, !dbg !5712
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !5714

if.then65:                                        ; preds = %if.then62
  %82 = load i32, i32* %v0, align 4, !dbg !5715
  %83 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5717
  %v166 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %83, i32 0, i32 0, !dbg !5718
  store i32 %82, i32* %v166, align 4, !dbg !5719
  %84 = load %struct.BodySpring*, %struct.BodySpring** %bs2, align 8, !dbg !5720
  %v267 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %84, i32 0, i32 1, !dbg !5721
  %85 = load i32, i32* %v267, align 4, !dbg !5721
  %86 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5722
  %v268 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %86, i32 0, i32 1, !dbg !5723
  store i32 %85, i32* %v268, align 4, !dbg !5724
  %87 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5725
  %springtype69 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %87, i32 0, i32 6, !dbg !5726
  store i32 2, i32* %springtype69, align 4, !dbg !5727
  %88 = load %struct.BodySpring*, %struct.BodySpring** %bs3, align 8, !dbg !5728
  %incdec.ptr70 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %88, i32 1, !dbg !5728
  store %struct.BodySpring* %incdec.ptr70, %struct.BodySpring** %bs3, align 8, !dbg !5728
  br label %if.end71, !dbg !5729

if.end71:                                         ; preds = %if.then65, %if.then62
  br label %if.end72, !dbg !5730

if.end72:                                         ; preds = %if.end71, %land.lhs.true59, %if.end56
  br label %for.inc, !dbg !5731

for.inc:                                          ; preds = %if.end72
  %89 = load i32, i32* %c, align 4, !dbg !5732
  %dec = add nsw i32 %89, -1, !dbg !5732
  store i32 %dec, i32* %c, align 4, !dbg !5732
  br label %for.cond35, !dbg !5733, !llvm.loop !5734

for.end:                                          ; preds = %for.cond35
  br label %if.end73, !dbg !5736

if.end73:                                         ; preds = %for.end, %if.end31
  br label %for.inc74, !dbg !5737

for.inc74:                                        ; preds = %if.end73
  %90 = load i32, i32* %b, align 4, !dbg !5738
  %dec75 = add nsw i32 %90, -1, !dbg !5738
  store i32 %dec75, i32* %b, align 4, !dbg !5738
  br label %for.cond8, !dbg !5739, !llvm.loop !5740

for.end76:                                        ; preds = %for.cond8
  br label %for.inc77, !dbg !5742

for.inc77:                                        ; preds = %for.end76
  %91 = load i32, i32* %a, align 4, !dbg !5743
  %dec78 = add nsw i32 %91, -1, !dbg !5743
  store i32 %dec78, i32* %a, align 4, !dbg !5743
  %92 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !5744
  %incdec.ptr79 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %92, i32 1, !dbg !5744
  store %struct.BodyPoint* %incdec.ptr79, %struct.BodyPoint** %bp, align 8, !dbg !5744
  br label %for.cond, !dbg !5745, !llvm.loop !5746

for.end80:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5748
}

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !5749 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !5756, metadata !DIExpression()), !dbg !5757
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5758
  %0 = load float*, float** %b.addr, align 8, !dbg !5759
  %1 = load float*, float** %a.addr, align 8, !dbg !5760
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5761
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5762
  %call = call float @len_v3(float* %arraydecay1), !dbg !5763
  ret float %call, !dbg !5764
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5765 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  %0 = load float*, float** %a.addr, align 8, !dbg !5774
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5774
  %1 = load float, float* %arrayidx, align 4, !dbg !5774
  %2 = load float*, float** %b.addr, align 8, !dbg !5775
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5775
  %3 = load float, float* %arrayidx1, align 4, !dbg !5775
  %sub = fsub float %1, %3, !dbg !5776
  %4 = load float*, float** %r.addr, align 8, !dbg !5777
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5777
  store float %sub, float* %arrayidx2, align 4, !dbg !5778
  %5 = load float*, float** %a.addr, align 8, !dbg !5779
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5779
  %6 = load float, float* %arrayidx3, align 4, !dbg !5779
  %7 = load float*, float** %b.addr, align 8, !dbg !5780
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5780
  %8 = load float, float* %arrayidx4, align 4, !dbg !5780
  %sub5 = fsub float %6, %8, !dbg !5781
  %9 = load float*, float** %r.addr, align 8, !dbg !5782
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5782
  store float %sub5, float* %arrayidx6, align 4, !dbg !5783
  %10 = load float*, float** %a.addr, align 8, !dbg !5784
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5784
  %11 = load float, float* %arrayidx7, align 4, !dbg !5784
  %12 = load float*, float** %b.addr, align 8, !dbg !5785
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5785
  %13 = load float, float* %arrayidx8, align 4, !dbg !5785
  %sub9 = fsub float %11, %13, !dbg !5786
  %14 = load float*, float** %r.addr, align 8, !dbg !5787
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5787
  store float %sub9, float* %arrayidx10, align 4, !dbg !5788
  ret void, !dbg !5789
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !5790 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load float*, float** %a.addr, align 8, !dbg !5795
  %1 = load float*, float** %a.addr, align 8, !dbg !5796
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5797
  %call1 = call float @sqrtf(float %call) #5, !dbg !5798
  ret float %call1, !dbg !5799
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !5800 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5801, metadata !DIExpression()), !dbg !5802
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5803, metadata !DIExpression()), !dbg !5804
  %0 = load float*, float** %a.addr, align 8, !dbg !5805
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5805
  %1 = load float, float* %arrayidx, align 4, !dbg !5805
  %2 = load float*, float** %b.addr, align 8, !dbg !5806
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5806
  %3 = load float, float* %arrayidx1, align 4, !dbg !5806
  %mul = fmul float %1, %3, !dbg !5807
  %4 = load float*, float** %a.addr, align 8, !dbg !5808
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5808
  %5 = load float, float* %arrayidx2, align 4, !dbg !5808
  %6 = load float*, float** %b.addr, align 8, !dbg !5809
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5809
  %7 = load float, float* %arrayidx3, align 4, !dbg !5809
  %mul4 = fmul float %5, %7, !dbg !5810
  %add = fadd float %mul, %mul4, !dbg !5811
  %8 = load float*, float** %a.addr, align 8, !dbg !5812
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5812
  %9 = load float, float* %arrayidx5, align 4, !dbg !5812
  %10 = load float*, float** %b.addr, align 8, !dbg !5813
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5813
  %11 = load float, float* %arrayidx6, align 4, !dbg !5813
  %mul7 = fmul float %9, %11, !dbg !5814
  %add8 = fadd float %add, %mul7, !dbg !5815
  ret float %add8, !dbg !5816
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !5817 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load float, float* %a.addr, align 4, !dbg !5825
  %1 = load float, float* %b.addr, align 4, !dbg !5826
  %cmp = fcmp olt float %0, %1, !dbg !5827
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5828

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5829
  br label %cond.end, !dbg !5828

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5830
  br label %cond.end, !dbg !5828

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5828
  ret float %cond, !dbg !5831
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !5832 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  %0 = load float, float* %a.addr, align 4, !dbg !5837
  %1 = load float, float* %b.addr, align 4, !dbg !5838
  %cmp = fcmp ogt float %0, %1, !dbg !5839
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5840

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5841
  br label %cond.end, !dbg !5840

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5842
  br label %cond.end, !dbg !5840

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5840
  ret float %cond, !dbg !5843
}

; Function Attrs: noinline nounwind uwtable
define internal void @makelatticesprings(%struct.Lattice* %lt, %struct.BodySpring* %bs, i32 %dostiff, %struct.Object* %ob) #0 !dbg !5844 {
entry:
  %lt.addr = alloca %struct.Lattice*, align 8
  %bs.addr = alloca %struct.BodySpring*, align 8
  %dostiff.addr = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bpu = alloca %struct.BPoint*, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %w = alloca i32, align 4
  %dv = alloca i32, align 4
  %dw = alloca i32, align 4
  %bpc = alloca i32, align 4
  %bpuc = alloca i32, align 4
  store %struct.Lattice* %lt, %struct.Lattice** %lt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store %struct.BodySpring* %bs, %struct.BodySpring** %bs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  store i32 %dostiff, i32* %dostiff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dostiff.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5855, metadata !DIExpression()), !dbg !5856
  %0 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5857
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %0, i32 0, i32 21, !dbg !5858
  %1 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !5858
  store %struct.BPoint* %1, %struct.BPoint** %bp, align 8, !dbg !5856
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpu, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata i32* %u, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5865, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata i32* %dv, metadata !5867, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !5869, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %bpc, metadata !5871, metadata !DIExpression()), !dbg !5872
  store i32 0, i32* %bpc, align 4, !dbg !5872
  call void @llvm.dbg.declare(metadata i32* %bpuc, metadata !5873, metadata !DIExpression()), !dbg !5874
  %2 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5875
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %2, i32 0, i32 2, !dbg !5876
  %3 = load i16, i16* %pntsu, align 8, !dbg !5876
  %conv = sext i16 %3 to i32, !dbg !5875
  store i32 %conv, i32* %dv, align 4, !dbg !5877
  %4 = load i32, i32* %dv, align 4, !dbg !5878
  %5 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5879
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %5, i32 0, i32 3, !dbg !5880
  %6 = load i16, i16* %pntsv, align 2, !dbg !5880
  %conv1 = sext i16 %6 to i32, !dbg !5879
  %mul = mul nsw i32 %4, %conv1, !dbg !5881
  store i32 %mul, i32* %dw, align 4, !dbg !5882
  store i32 0, i32* %w, align 4, !dbg !5883
  br label %for.cond, !dbg !5885

for.cond:                                         ; preds = %for.inc170, %entry
  %7 = load i32, i32* %w, align 4, !dbg !5886
  %8 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5888
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %8, i32 0, i32 4, !dbg !5889
  %9 = load i16, i16* %pntsw, align 4, !dbg !5889
  %conv2 = sext i16 %9 to i32, !dbg !5888
  %cmp = icmp slt i32 %7, %conv2, !dbg !5890
  br i1 %cmp, label %for.body, label %for.end172, !dbg !5891

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %v, align 4, !dbg !5892
  br label %for.cond4, !dbg !5895

for.cond4:                                        ; preds = %for.inc167, %for.body
  %10 = load i32, i32* %v, align 4, !dbg !5896
  %11 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5898
  %pntsv5 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %11, i32 0, i32 3, !dbg !5899
  %12 = load i16, i16* %pntsv5, align 2, !dbg !5899
  %conv6 = sext i16 %12 to i32, !dbg !5898
  %cmp7 = icmp slt i32 %10, %conv6, !dbg !5900
  br i1 %cmp7, label %for.body9, label %for.end169, !dbg !5901

for.body9:                                        ; preds = %for.cond4
  store i32 0, i32* %u, align 4, !dbg !5902
  store i32 0, i32* %bpuc, align 4, !dbg !5905
  store %struct.BPoint* null, %struct.BPoint** %bpu, align 8, !dbg !5906
  br label %for.cond10, !dbg !5907

for.cond10:                                       ; preds = %for.inc, %for.body9
  %13 = load i32, i32* %u, align 4, !dbg !5908
  %14 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5910
  %pntsu11 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %14, i32 0, i32 2, !dbg !5911
  %15 = load i16, i16* %pntsu11, align 8, !dbg !5911
  %conv12 = sext i16 %15 to i32, !dbg !5910
  %cmp13 = icmp slt i32 %13, %conv12, !dbg !5912
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !5913

for.body15:                                       ; preds = %for.cond10
  %16 = load i32, i32* %w, align 4, !dbg !5914
  %tobool = icmp ne i32 %16, 0, !dbg !5914
  br i1 %tobool, label %if.then, label %if.end, !dbg !5917

if.then:                                          ; preds = %for.body15
  %17 = load i32, i32* %bpc, align 4, !dbg !5918
  %18 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5920
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %18, i32 0, i32 0, !dbg !5921
  store i32 %17, i32* %v1, align 4, !dbg !5922
  %19 = load i32, i32* %bpc, align 4, !dbg !5923
  %20 = load i32, i32* %dw, align 4, !dbg !5924
  %sub = sub nsw i32 %19, %20, !dbg !5925
  %21 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5926
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %21, i32 0, i32 1, !dbg !5927
  store i32 %sub, i32* %v2, align 4, !dbg !5928
  %22 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5929
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %22, i32 0, i32 6, !dbg !5930
  store i32 1, i32* %springtype, align 4, !dbg !5931
  %23 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5932
  %24 = load i32, i32* %dw, align 4, !dbg !5933
  %idx.ext = sext i32 %24 to i64, !dbg !5934
  %idx.neg = sub i64 0, %idx.ext, !dbg !5934
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %23, i64 %idx.neg, !dbg !5934
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr, i32 0, i32 0, !dbg !5935
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !5936
  %25 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5937
  %vec16 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %25, i32 0, i32 0, !dbg !5938
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %vec16, i64 0, i64 0, !dbg !5937
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5939
  %call = call float @globallen(float* %arraydecay, float* %arraydecay17, %struct.Object* %26), !dbg !5940
  %27 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5941
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %27, i32 0, i32 2, !dbg !5942
  store float %call, float* %len, align 4, !dbg !5943
  %28 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5944
  %incdec.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %28, i32 1, !dbg !5944
  store %struct.BodySpring* %incdec.ptr, %struct.BodySpring** %bs.addr, align 8, !dbg !5944
  br label %if.end, !dbg !5945

if.end:                                           ; preds = %if.then, %for.body15
  %29 = load i32, i32* %v, align 4, !dbg !5946
  %tobool18 = icmp ne i32 %29, 0, !dbg !5946
  br i1 %tobool18, label %if.then19, label %if.end34, !dbg !5948

if.then19:                                        ; preds = %if.end
  %30 = load i32, i32* %bpc, align 4, !dbg !5949
  %31 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5951
  %v120 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %31, i32 0, i32 0, !dbg !5952
  store i32 %30, i32* %v120, align 4, !dbg !5953
  %32 = load i32, i32* %bpc, align 4, !dbg !5954
  %33 = load i32, i32* %dv, align 4, !dbg !5955
  %sub21 = sub nsw i32 %32, %33, !dbg !5956
  %34 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5957
  %v222 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %34, i32 0, i32 1, !dbg !5958
  store i32 %sub21, i32* %v222, align 4, !dbg !5959
  %35 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5960
  %springtype23 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %35, i32 0, i32 6, !dbg !5961
  store i32 1, i32* %springtype23, align 4, !dbg !5962
  %36 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5963
  %37 = load i32, i32* %dv, align 4, !dbg !5964
  %idx.ext24 = sext i32 %37 to i64, !dbg !5965
  %idx.neg25 = sub i64 0, %idx.ext24, !dbg !5965
  %add.ptr26 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %36, i64 %idx.neg25, !dbg !5965
  %vec27 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr26, i32 0, i32 0, !dbg !5966
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %vec27, i64 0, i64 0, !dbg !5967
  %38 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5968
  %vec29 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %38, i32 0, i32 0, !dbg !5969
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %vec29, i64 0, i64 0, !dbg !5968
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5970
  %call31 = call float @globallen(float* %arraydecay28, float* %arraydecay30, %struct.Object* %39), !dbg !5971
  %40 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5972
  %len32 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %40, i32 0, i32 2, !dbg !5973
  store float %call31, float* %len32, align 4, !dbg !5974
  %41 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5975
  %incdec.ptr33 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %41, i32 1, !dbg !5975
  store %struct.BodySpring* %incdec.ptr33, %struct.BodySpring** %bs.addr, align 8, !dbg !5975
  br label %if.end34, !dbg !5976

if.end34:                                         ; preds = %if.then19, %if.end
  %42 = load i32, i32* %u, align 4, !dbg !5977
  %tobool35 = icmp ne i32 %42, 0, !dbg !5977
  br i1 %tobool35, label %if.then36, label %if.end47, !dbg !5979

if.then36:                                        ; preds = %if.end34
  %43 = load i32, i32* %bpuc, align 4, !dbg !5980
  %44 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5982
  %v137 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %44, i32 0, i32 0, !dbg !5983
  store i32 %43, i32* %v137, align 4, !dbg !5984
  %45 = load i32, i32* %bpc, align 4, !dbg !5985
  %46 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5986
  %v238 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %46, i32 0, i32 1, !dbg !5987
  store i32 %45, i32* %v238, align 4, !dbg !5988
  %47 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5989
  %springtype39 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %47, i32 0, i32 6, !dbg !5990
  store i32 1, i32* %springtype39, align 4, !dbg !5991
  %48 = load %struct.BPoint*, %struct.BPoint** %bpu, align 8, !dbg !5992
  %vec40 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %48, i32 0, i32 0, !dbg !5993
  %arraydecay41 = getelementptr inbounds [4 x float], [4 x float]* %vec40, i64 0, i64 0, !dbg !5994
  %49 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5995
  %vec42 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %49, i32 0, i32 0, !dbg !5996
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %vec42, i64 0, i64 0, !dbg !5995
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5997
  %call44 = call float @globallen(float* %arraydecay41, float* %arraydecay43, %struct.Object* %50), !dbg !5998
  %51 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !5999
  %len45 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %51, i32 0, i32 2, !dbg !6000
  store float %call44, float* %len45, align 4, !dbg !6001
  %52 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6002
  %incdec.ptr46 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %52, i32 1, !dbg !6002
  store %struct.BodySpring* %incdec.ptr46, %struct.BodySpring** %bs.addr, align 8, !dbg !6002
  br label %if.end47, !dbg !6003

if.end47:                                         ; preds = %if.then36, %if.end34
  %53 = load i32, i32* %dostiff.addr, align 4, !dbg !6004
  %tobool48 = icmp ne i32 %53, 0, !dbg !6004
  br i1 %tobool48, label %if.then49, label %if.end164, !dbg !6006

if.then49:                                        ; preds = %if.end47
  %54 = load i32, i32* %w, align 4, !dbg !6007
  %tobool50 = icmp ne i32 %54, 0, !dbg !6007
  br i1 %tobool50, label %if.then51, label %if.end104, !dbg !6010

if.then51:                                        ; preds = %if.then49
  %55 = load i32, i32* %v, align 4, !dbg !6011
  %tobool52 = icmp ne i32 %55, 0, !dbg !6011
  br i1 %tobool52, label %land.lhs.true, label %if.end75, !dbg !6014

land.lhs.true:                                    ; preds = %if.then51
  %56 = load i32, i32* %u, align 4, !dbg !6015
  %tobool53 = icmp ne i32 %56, 0, !dbg !6015
  br i1 %tobool53, label %if.then54, label %if.end75, !dbg !6016

if.then54:                                        ; preds = %land.lhs.true
  %57 = load i32, i32* %bpc, align 4, !dbg !6017
  %58 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6019
  %v155 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %58, i32 0, i32 0, !dbg !6020
  store i32 %57, i32* %v155, align 4, !dbg !6021
  %59 = load i32, i32* %bpc, align 4, !dbg !6022
  %60 = load i32, i32* %dw, align 4, !dbg !6023
  %sub56 = sub nsw i32 %59, %60, !dbg !6024
  %61 = load i32, i32* %dv, align 4, !dbg !6025
  %sub57 = sub nsw i32 %sub56, %61, !dbg !6026
  %sub58 = sub nsw i32 %sub57, 1, !dbg !6027
  %62 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6028
  %v259 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %62, i32 0, i32 1, !dbg !6029
  store i32 %sub58, i32* %v259, align 4, !dbg !6030
  %63 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6031
  %springtype60 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %63, i32 0, i32 6, !dbg !6032
  store i32 2, i32* %springtype60, align 4, !dbg !6033
  %64 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6034
  %65 = load i32, i32* %dw, align 4, !dbg !6035
  %idx.ext61 = sext i32 %65 to i64, !dbg !6036
  %idx.neg62 = sub i64 0, %idx.ext61, !dbg !6036
  %add.ptr63 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %64, i64 %idx.neg62, !dbg !6036
  %66 = load i32, i32* %dv, align 4, !dbg !6037
  %idx.ext64 = sext i32 %66 to i64, !dbg !6038
  %idx.neg65 = sub i64 0, %idx.ext64, !dbg !6038
  %add.ptr66 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr63, i64 %idx.neg65, !dbg !6038
  %add.ptr67 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr66, i64 -1, !dbg !6039
  %vec68 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr67, i32 0, i32 0, !dbg !6040
  %arraydecay69 = getelementptr inbounds [4 x float], [4 x float]* %vec68, i64 0, i64 0, !dbg !6041
  %67 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6042
  %vec70 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i32 0, i32 0, !dbg !6043
  %arraydecay71 = getelementptr inbounds [4 x float], [4 x float]* %vec70, i64 0, i64 0, !dbg !6042
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6044
  %call72 = call float @globallen(float* %arraydecay69, float* %arraydecay71, %struct.Object* %68), !dbg !6045
  %69 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6046
  %len73 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %69, i32 0, i32 2, !dbg !6047
  store float %call72, float* %len73, align 4, !dbg !6048
  %70 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6049
  %incdec.ptr74 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %70, i32 1, !dbg !6049
  store %struct.BodySpring* %incdec.ptr74, %struct.BodySpring** %bs.addr, align 8, !dbg !6049
  br label %if.end75, !dbg !6050

if.end75:                                         ; preds = %if.then54, %land.lhs.true, %if.then51
  %71 = load i32, i32* %v, align 4, !dbg !6051
  %72 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !6053
  %pntsv76 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %72, i32 0, i32 3, !dbg !6054
  %73 = load i16, i16* %pntsv76, align 2, !dbg !6054
  %conv77 = sext i16 %73 to i32, !dbg !6053
  %sub78 = sub nsw i32 %conv77, 1, !dbg !6055
  %cmp79 = icmp slt i32 %71, %sub78, !dbg !6056
  br i1 %cmp79, label %land.lhs.true81, label %if.end103, !dbg !6057

land.lhs.true81:                                  ; preds = %if.end75
  %74 = load i32, i32* %u, align 4, !dbg !6058
  %cmp82 = icmp ne i32 %74, 0, !dbg !6059
  br i1 %cmp82, label %if.then84, label %if.end103, !dbg !6060

if.then84:                                        ; preds = %land.lhs.true81
  %75 = load i32, i32* %bpc, align 4, !dbg !6061
  %76 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6063
  %v185 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %76, i32 0, i32 0, !dbg !6064
  store i32 %75, i32* %v185, align 4, !dbg !6065
  %77 = load i32, i32* %bpc, align 4, !dbg !6066
  %78 = load i32, i32* %dw, align 4, !dbg !6067
  %sub86 = sub nsw i32 %77, %78, !dbg !6068
  %79 = load i32, i32* %dv, align 4, !dbg !6069
  %add = add nsw i32 %sub86, %79, !dbg !6070
  %sub87 = sub nsw i32 %add, 1, !dbg !6071
  %80 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6072
  %v288 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %80, i32 0, i32 1, !dbg !6073
  store i32 %sub87, i32* %v288, align 4, !dbg !6074
  %81 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6075
  %springtype89 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %81, i32 0, i32 6, !dbg !6076
  store i32 2, i32* %springtype89, align 4, !dbg !6077
  %82 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6078
  %83 = load i32, i32* %dw, align 4, !dbg !6079
  %idx.ext90 = sext i32 %83 to i64, !dbg !6080
  %idx.neg91 = sub i64 0, %idx.ext90, !dbg !6080
  %add.ptr92 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i64 %idx.neg91, !dbg !6080
  %84 = load i32, i32* %dv, align 4, !dbg !6081
  %idx.ext93 = sext i32 %84 to i64, !dbg !6082
  %add.ptr94 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr92, i64 %idx.ext93, !dbg !6082
  %add.ptr95 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr94, i64 -1, !dbg !6083
  %vec96 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr95, i32 0, i32 0, !dbg !6084
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %vec96, i64 0, i64 0, !dbg !6085
  %85 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6086
  %vec98 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %85, i32 0, i32 0, !dbg !6087
  %arraydecay99 = getelementptr inbounds [4 x float], [4 x float]* %vec98, i64 0, i64 0, !dbg !6086
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6088
  %call100 = call float @globallen(float* %arraydecay97, float* %arraydecay99, %struct.Object* %86), !dbg !6089
  %87 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6090
  %len101 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %87, i32 0, i32 2, !dbg !6091
  store float %call100, float* %len101, align 4, !dbg !6092
  %88 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6093
  %incdec.ptr102 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %88, i32 1, !dbg !6093
  store %struct.BodySpring* %incdec.ptr102, %struct.BodySpring** %bs.addr, align 8, !dbg !6093
  br label %if.end103, !dbg !6094

if.end103:                                        ; preds = %if.then84, %land.lhs.true81, %if.end75
  br label %if.end104, !dbg !6095

if.end104:                                        ; preds = %if.end103, %if.then49
  %89 = load i32, i32* %w, align 4, !dbg !6096
  %90 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !6098
  %pntsw105 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %90, i32 0, i32 4, !dbg !6099
  %91 = load i16, i16* %pntsw105, align 4, !dbg !6099
  %conv106 = sext i16 %91 to i32, !dbg !6098
  %sub107 = sub nsw i32 %conv106, 1, !dbg !6100
  %cmp108 = icmp slt i32 %89, %sub107, !dbg !6101
  br i1 %cmp108, label %if.then110, label %if.end163, !dbg !6102

if.then110:                                       ; preds = %if.end104
  %92 = load i32, i32* %v, align 4, !dbg !6103
  %tobool111 = icmp ne i32 %92, 0, !dbg !6103
  br i1 %tobool111, label %land.lhs.true112, label %if.end134, !dbg !6106

land.lhs.true112:                                 ; preds = %if.then110
  %93 = load i32, i32* %u, align 4, !dbg !6107
  %tobool113 = icmp ne i32 %93, 0, !dbg !6107
  br i1 %tobool113, label %if.then114, label %if.end134, !dbg !6108

if.then114:                                       ; preds = %land.lhs.true112
  %94 = load i32, i32* %bpc, align 4, !dbg !6109
  %95 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6111
  %v1115 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %95, i32 0, i32 0, !dbg !6112
  store i32 %94, i32* %v1115, align 4, !dbg !6113
  %96 = load i32, i32* %bpc, align 4, !dbg !6114
  %97 = load i32, i32* %dw, align 4, !dbg !6115
  %add116 = add nsw i32 %96, %97, !dbg !6116
  %98 = load i32, i32* %dv, align 4, !dbg !6117
  %sub117 = sub nsw i32 %add116, %98, !dbg !6118
  %sub118 = sub nsw i32 %sub117, 1, !dbg !6119
  %99 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6120
  %v2119 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %99, i32 0, i32 1, !dbg !6121
  store i32 %sub118, i32* %v2119, align 4, !dbg !6122
  %100 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6123
  %springtype120 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %100, i32 0, i32 6, !dbg !6124
  store i32 2, i32* %springtype120, align 4, !dbg !6125
  %101 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6126
  %102 = load i32, i32* %dw, align 4, !dbg !6127
  %idx.ext121 = sext i32 %102 to i64, !dbg !6128
  %add.ptr122 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %101, i64 %idx.ext121, !dbg !6128
  %103 = load i32, i32* %dv, align 4, !dbg !6129
  %idx.ext123 = sext i32 %103 to i64, !dbg !6130
  %idx.neg124 = sub i64 0, %idx.ext123, !dbg !6130
  %add.ptr125 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr122, i64 %idx.neg124, !dbg !6130
  %add.ptr126 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr125, i64 -1, !dbg !6131
  %vec127 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr126, i32 0, i32 0, !dbg !6132
  %arraydecay128 = getelementptr inbounds [4 x float], [4 x float]* %vec127, i64 0, i64 0, !dbg !6133
  %104 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6134
  %vec129 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %104, i32 0, i32 0, !dbg !6135
  %arraydecay130 = getelementptr inbounds [4 x float], [4 x float]* %vec129, i64 0, i64 0, !dbg !6134
  %105 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6136
  %call131 = call float @globallen(float* %arraydecay128, float* %arraydecay130, %struct.Object* %105), !dbg !6137
  %106 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6138
  %len132 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %106, i32 0, i32 2, !dbg !6139
  store float %call131, float* %len132, align 4, !dbg !6140
  %107 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6141
  %incdec.ptr133 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %107, i32 1, !dbg !6141
  store %struct.BodySpring* %incdec.ptr133, %struct.BodySpring** %bs.addr, align 8, !dbg !6141
  br label %if.end134, !dbg !6142

if.end134:                                        ; preds = %if.then114, %land.lhs.true112, %if.then110
  %108 = load i32, i32* %v, align 4, !dbg !6143
  %109 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !6145
  %pntsv135 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %109, i32 0, i32 3, !dbg !6146
  %110 = load i16, i16* %pntsv135, align 2, !dbg !6146
  %conv136 = sext i16 %110 to i32, !dbg !6145
  %sub137 = sub nsw i32 %conv136, 1, !dbg !6147
  %cmp138 = icmp slt i32 %108, %sub137, !dbg !6148
  br i1 %cmp138, label %land.lhs.true140, label %if.end162, !dbg !6149

land.lhs.true140:                                 ; preds = %if.end134
  %111 = load i32, i32* %u, align 4, !dbg !6150
  %cmp141 = icmp ne i32 %111, 0, !dbg !6151
  br i1 %cmp141, label %if.then143, label %if.end162, !dbg !6152

if.then143:                                       ; preds = %land.lhs.true140
  %112 = load i32, i32* %bpc, align 4, !dbg !6153
  %113 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6155
  %v1144 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %113, i32 0, i32 0, !dbg !6156
  store i32 %112, i32* %v1144, align 4, !dbg !6157
  %114 = load i32, i32* %bpc, align 4, !dbg !6158
  %115 = load i32, i32* %dw, align 4, !dbg !6159
  %add145 = add nsw i32 %114, %115, !dbg !6160
  %116 = load i32, i32* %dv, align 4, !dbg !6161
  %add146 = add nsw i32 %add145, %116, !dbg !6162
  %sub147 = sub nsw i32 %add146, 1, !dbg !6163
  %117 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6164
  %v2148 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %117, i32 0, i32 1, !dbg !6165
  store i32 %sub147, i32* %v2148, align 4, !dbg !6166
  %118 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6167
  %springtype149 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %118, i32 0, i32 6, !dbg !6168
  store i32 2, i32* %springtype149, align 4, !dbg !6169
  %119 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6170
  %120 = load i32, i32* %dw, align 4, !dbg !6171
  %idx.ext150 = sext i32 %120 to i64, !dbg !6172
  %add.ptr151 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %119, i64 %idx.ext150, !dbg !6172
  %121 = load i32, i32* %dv, align 4, !dbg !6173
  %idx.ext152 = sext i32 %121 to i64, !dbg !6174
  %add.ptr153 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr151, i64 %idx.ext152, !dbg !6174
  %add.ptr154 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr153, i64 -1, !dbg !6175
  %vec155 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr154, i32 0, i32 0, !dbg !6176
  %arraydecay156 = getelementptr inbounds [4 x float], [4 x float]* %vec155, i64 0, i64 0, !dbg !6177
  %122 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6178
  %vec157 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %122, i32 0, i32 0, !dbg !6179
  %arraydecay158 = getelementptr inbounds [4 x float], [4 x float]* %vec157, i64 0, i64 0, !dbg !6178
  %123 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6180
  %call159 = call float @globallen(float* %arraydecay156, float* %arraydecay158, %struct.Object* %123), !dbg !6181
  %124 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6182
  %len160 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %124, i32 0, i32 2, !dbg !6183
  store float %call159, float* %len160, align 4, !dbg !6184
  %125 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !6185
  %incdec.ptr161 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %125, i32 1, !dbg !6185
  store %struct.BodySpring* %incdec.ptr161, %struct.BodySpring** %bs.addr, align 8, !dbg !6185
  br label %if.end162, !dbg !6186

if.end162:                                        ; preds = %if.then143, %land.lhs.true140, %if.end134
  br label %if.end163, !dbg !6187

if.end163:                                        ; preds = %if.end162, %if.end104
  br label %if.end164, !dbg !6188

if.end164:                                        ; preds = %if.end163, %if.end47
  %126 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6189
  store %struct.BPoint* %126, %struct.BPoint** %bpu, align 8, !dbg !6190
  %127 = load i32, i32* %bpc, align 4, !dbg !6191
  store i32 %127, i32* %bpuc, align 4, !dbg !6192
  br label %for.inc, !dbg !6193

for.inc:                                          ; preds = %if.end164
  %128 = load i32, i32* %u, align 4, !dbg !6194
  %inc = add nsw i32 %128, 1, !dbg !6194
  store i32 %inc, i32* %u, align 4, !dbg !6194
  %129 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6195
  %incdec.ptr165 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %129, i32 1, !dbg !6195
  store %struct.BPoint* %incdec.ptr165, %struct.BPoint** %bp, align 8, !dbg !6195
  %130 = load i32, i32* %bpc, align 4, !dbg !6196
  %inc166 = add nsw i32 %130, 1, !dbg !6196
  store i32 %inc166, i32* %bpc, align 4, !dbg !6196
  br label %for.cond10, !dbg !6197, !llvm.loop !6198

for.end:                                          ; preds = %for.cond10
  br label %for.inc167, !dbg !6200

for.inc167:                                       ; preds = %for.end
  %131 = load i32, i32* %v, align 4, !dbg !6201
  %inc168 = add nsw i32 %131, 1, !dbg !6201
  store i32 %inc168, i32* %v, align 4, !dbg !6201
  br label %for.cond4, !dbg !6202, !llvm.loop !6203

for.end169:                                       ; preds = %for.cond4
  br label %for.inc170, !dbg !6205

for.inc170:                                       ; preds = %for.end169
  %132 = load i32, i32* %w, align 4, !dbg !6206
  %inc171 = add nsw i32 %132, 1, !dbg !6206
  store i32 %inc171, i32* %w, align 4, !dbg !6206
  br label %for.cond, !dbg !6207, !llvm.loop !6208

for.end172:                                       ; preds = %for.cond
  ret void, !dbg !6210
}

; Function Attrs: noinline nounwind uwtable
define internal float @globallen(float* %v1, float* %v2, %struct.Object* %ob) #0 !dbg !6211 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %p1 = alloca [3 x float], align 4
  %p2 = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6216, metadata !DIExpression()), !dbg !6217
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.declare(metadata [3 x float]* %p1, metadata !6220, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.declare(metadata [3 x float]* %p2, metadata !6222, metadata !DIExpression()), !dbg !6223
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6224
  %0 = load float*, float** %v1.addr, align 8, !dbg !6225
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !6226
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6227
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 47, !dbg !6228
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6227
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6229
  call void @mul_m4_v3([4 x float]* %arraydecay1, float* %arraydecay2), !dbg !6230
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6231
  %2 = load float*, float** %v2.addr, align 8, !dbg !6232
  call void @copy_v3_v3(float* %arraydecay3, float* %2), !dbg !6233
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6234
  %obmat4 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 47, !dbg !6235
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat4, i64 0, i64 0, !dbg !6234
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6236
  call void @mul_m4_v3([4 x float]* %arraydecay5, float* %arraydecay6), !dbg !6237
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6238
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6239
  %call = call float @len_v3v3(float* %arraydecay7, float* %arraydecay8), !dbg !6240
  ret float %call, !dbg !6241
}

declare dso_local i32 @BKE_nurbList_verts_count(%struct.ListBase*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6242 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  %0 = load float*, float** %r.addr, align 8, !dbg !6247
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6247
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6248
  %1 = load float*, float** %r.addr, align 8, !dbg !6249
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6249
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6250
  %2 = load float*, float** %r.addr, align 8, !dbg !6251
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6251
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6252
  ret void, !dbg !6253
}

declare dso_local void @unit_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @reference_to_scratch(%struct.Object* %ob) #0 !dbg !6254 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %rp = alloca %struct.ReferenceVert*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %accu_pos = alloca [3 x float], align 4
  %accu_mass = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !6257, metadata !DIExpression()), !dbg !6258
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6259
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !6260
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6260
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !6258
  call void @llvm.dbg.declare(metadata %struct.ReferenceVert** %rp, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata [3 x float]* %accu_pos, metadata !6265, metadata !DIExpression()), !dbg !6266
  %2 = bitcast [3 x float]* %accu_pos to i8*, !dbg !6266
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !6266
  call void @llvm.dbg.declare(metadata float* %accu_mass, metadata !6267, metadata !DIExpression()), !dbg !6268
  store float 0.000000e+00, float* %accu_mass, align 4, !dbg !6268
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6269, metadata !DIExpression()), !dbg !6270
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6271
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6272
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 0, !dbg !6273
  %5 = load i32, i32* %totpoint, align 8, !dbg !6273
  %conv = sext i32 %5 to i64, !dbg !6272
  %mul = mul i64 16, %conv, !dbg !6274
  %call = call i8* %3(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !6271
  %6 = bitcast i8* %call to %struct.ReferenceVert*, !dbg !6271
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6275
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 44, !dbg !6276
  %8 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !6276
  %Ref = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %8, i32 0, i32 7, !dbg !6277
  %ivert = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref, i32 0, i32 1, !dbg !6278
  store %struct.ReferenceVert* %6, %struct.ReferenceVert** %ivert, align 8, !dbg !6279
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6280
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 111, !dbg !6281
  %10 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !6281
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 2, !dbg !6282
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !6282
  store %struct.BodyPoint* %11, %struct.BodyPoint** %bp, align 8, !dbg !6283
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6284
  %scratch2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 44, !dbg !6285
  %13 = load %struct.SBScratch*, %struct.SBScratch** %scratch2, align 8, !dbg !6285
  %Ref3 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %13, i32 0, i32 7, !dbg !6286
  %ivert4 = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref3, i32 0, i32 1, !dbg !6287
  %14 = load %struct.ReferenceVert*, %struct.ReferenceVert** %ivert4, align 8, !dbg !6287
  store %struct.ReferenceVert* %14, %struct.ReferenceVert** %rp, align 8, !dbg !6288
  store i32 0, i32* %a, align 4, !dbg !6289
  br label %for.cond, !dbg !6291

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %a, align 4, !dbg !6292
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6294
  %totpoint5 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 0, !dbg !6295
  %17 = load i32, i32* %totpoint5, align 8, !dbg !6295
  %cmp = icmp slt i32 %15, %17, !dbg !6296
  br i1 %cmp, label %for.body, label %for.end, !dbg !6297

for.body:                                         ; preds = %for.cond
  %18 = load %struct.ReferenceVert*, %struct.ReferenceVert** %rp, align 8, !dbg !6298
  %pos = getelementptr inbounds %struct.ReferenceVert, %struct.ReferenceVert* %18, i32 0, i32 0, !dbg !6300
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !6298
  %19 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6301
  %pos7 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %19, i32 0, i32 3, !dbg !6302
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %pos7, i64 0, i64 0, !dbg !6301
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay8), !dbg !6303
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %accu_pos, i64 0, i64 0, !dbg !6304
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6305
  %pos10 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 3, !dbg !6306
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %pos10, i64 0, i64 0, !dbg !6305
  call void @add_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !6307
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6308
  %22 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6309
  %call12 = call float @_final_mass(%struct.Object* %21, %struct.BodyPoint* %22), !dbg !6310
  %23 = load float, float* %accu_mass, align 4, !dbg !6311
  %add = fadd float %23, %call12, !dbg !6311
  store float %add, float* %accu_mass, align 4, !dbg !6311
  br label %for.inc, !dbg !6312

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %a, align 4, !dbg !6313
  %inc = add nsw i32 %24, 1, !dbg !6313
  store i32 %inc, i32* %a, align 4, !dbg !6313
  %25 = load %struct.ReferenceVert*, %struct.ReferenceVert** %rp, align 8, !dbg !6314
  %incdec.ptr = getelementptr inbounds %struct.ReferenceVert, %struct.ReferenceVert* %25, i32 1, !dbg !6314
  store %struct.ReferenceVert* %incdec.ptr, %struct.ReferenceVert** %rp, align 8, !dbg !6314
  %26 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6315
  %incdec.ptr13 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %26, i32 1, !dbg !6315
  store %struct.BodyPoint* %incdec.ptr13, %struct.BodyPoint** %bp, align 8, !dbg !6315
  br label %for.cond, !dbg !6316, !llvm.loop !6317

for.end:                                          ; preds = %for.cond
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %accu_pos, i64 0, i64 0, !dbg !6319
  %27 = load float, float* %accu_mass, align 4, !dbg !6320
  %div = fdiv float 1.000000e+00, %27, !dbg !6321
  call void @mul_v3_fl(float* %arraydecay14, float %div), !dbg !6322
  %28 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6323
  %scratch15 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %28, i32 0, i32 44, !dbg !6324
  %29 = load %struct.SBScratch*, %struct.SBScratch** %scratch15, align 8, !dbg !6324
  %Ref16 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %29, i32 0, i32 7, !dbg !6325
  %com = getelementptr inbounds %struct.ReferenceState, %struct.ReferenceState* %Ref16, i32 0, i32 0, !dbg !6326
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %com, i64 0, i64 0, !dbg !6323
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %accu_pos, i64 0, i64 0, !dbg !6327
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay18), !dbg !6328
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_faces_to_scratch(%struct.Object* %ob) #0 !dbg !6330 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %bodyface = alloca %struct.BodyFace*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !6333, metadata !DIExpression()), !dbg !6334
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6335
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !6336
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6336
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !6334
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6337, metadata !DIExpression()), !dbg !6338
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6339
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !6340
  %3 = load i8*, i8** %data, align 8, !dbg !6340
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !6339
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !6338
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata %struct.BodyFace** %bodyface, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6345, metadata !DIExpression()), !dbg !6346
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6347
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6348
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 28, !dbg !6349
  %7 = load i32, i32* %totface, align 8, !dbg !6349
  %conv = sext i32 %7 to i64, !dbg !6348
  %mul = mul i64 32, %conv, !dbg !6350
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)), !dbg !6347
  %8 = bitcast i8* %call to %struct.BodyFace*, !dbg !6347
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6351
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 44, !dbg !6352
  %10 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !6352
  %bodyface1 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %10, i32 0, i32 3, !dbg !6353
  store %struct.BodyFace* %8, %struct.BodyFace** %bodyface1, align 8, !dbg !6354
  store %struct.BodyFace* %8, %struct.BodyFace** %bodyface, align 8, !dbg !6355
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6356
  %mface2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 12, !dbg !6357
  %12 = load %struct.MFace*, %struct.MFace** %mface2, align 8, !dbg !6357
  store %struct.MFace* %12, %struct.MFace** %mface, align 8, !dbg !6358
  store i32 0, i32* %a, align 4, !dbg !6359
  br label %for.cond, !dbg !6361

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %a, align 4, !dbg !6362
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6364
  %totface3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 28, !dbg !6365
  %15 = load i32, i32* %totface3, align 8, !dbg !6365
  %cmp = icmp slt i32 %13, %15, !dbg !6366
  br i1 %cmp, label %for.body, label %for.end, !dbg !6367

for.body:                                         ; preds = %for.cond
  %16 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6368
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 0, !dbg !6370
  %17 = load i32, i32* %v1, align 4, !dbg !6370
  %18 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6371
  %v15 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %18, i32 0, i32 0, !dbg !6372
  store i32 %17, i32* %v15, align 4, !dbg !6373
  %19 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6374
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 1, !dbg !6375
  %20 = load i32, i32* %v2, align 4, !dbg !6375
  %21 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6376
  %v26 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %21, i32 0, i32 1, !dbg !6377
  store i32 %20, i32* %v26, align 4, !dbg !6378
  %22 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6379
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 2, !dbg !6380
  %23 = load i32, i32* %v3, align 4, !dbg !6380
  %24 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6381
  %v37 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %24, i32 0, i32 2, !dbg !6382
  store i32 %23, i32* %v37, align 4, !dbg !6383
  %25 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6384
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 3, !dbg !6385
  %26 = load i32, i32* %v4, align 4, !dbg !6385
  %27 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6386
  %v48 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %27, i32 0, i32 3, !dbg !6387
  store i32 %26, i32* %v48, align 4, !dbg !6388
  %28 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6389
  %ext_force = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %28, i32 0, i32 4, !dbg !6390
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %ext_force, i64 0, i64 2, !dbg !6389
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6391
  %29 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6392
  %ext_force9 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %29, i32 0, i32 4, !dbg !6393
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %ext_force9, i64 0, i64 1, !dbg !6392
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !6394
  %30 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6395
  %ext_force11 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %30, i32 0, i32 4, !dbg !6396
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %ext_force11, i64 0, i64 0, !dbg !6395
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !6397
  %31 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6398
  %flag = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %31, i32 0, i32 5, !dbg !6399
  store i16 0, i16* %flag, align 4, !dbg !6400
  br label %for.inc, !dbg !6401

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %a, align 4, !dbg !6402
  %inc = add nsw i32 %32, 1, !dbg !6402
  store i32 %inc, i32* %a, align 4, !dbg !6402
  %33 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !6403
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 1, !dbg !6403
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !6403
  %34 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !6404
  %incdec.ptr13 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %34, i32 1, !dbg !6404
  store %struct.BodyFace* %incdec.ptr13, %struct.BodyFace** %bodyface, align 8, !dbg !6404
  br label %for.cond, !dbg !6405, !llvm.loop !6406

for.end:                                          ; preds = %for.cond
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6408
  %totface14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 28, !dbg !6409
  %36 = load i32, i32* %totface14, align 8, !dbg !6409
  %37 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6410
  %scratch15 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 44, !dbg !6411
  %38 = load %struct.SBScratch*, %struct.SBScratch** %scratch15, align 8, !dbg !6411
  %totface16 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %38, i32 0, i32 4, !dbg !6412
  store i32 %36, i32* %totface16, align 8, !dbg !6413
  ret void, !dbg !6414
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !6415 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6416, metadata !DIExpression()), !dbg !6417
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6418, metadata !DIExpression()), !dbg !6419
  %0 = load float*, float** %a.addr, align 8, !dbg !6420
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6420
  %1 = load float, float* %arrayidx, align 4, !dbg !6420
  %2 = load float*, float** %r.addr, align 8, !dbg !6421
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6421
  %3 = load float, float* %arrayidx1, align 4, !dbg !6422
  %add = fadd float %3, %1, !dbg !6422
  store float %add, float* %arrayidx1, align 4, !dbg !6422
  %4 = load float*, float** %a.addr, align 8, !dbg !6423
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6423
  %5 = load float, float* %arrayidx2, align 4, !dbg !6423
  %6 = load float*, float** %r.addr, align 8, !dbg !6424
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6424
  %7 = load float, float* %arrayidx3, align 4, !dbg !6425
  %add4 = fadd float %7, %5, !dbg !6425
  store float %add4, float* %arrayidx3, align 4, !dbg !6425
  %8 = load float*, float** %a.addr, align 8, !dbg !6426
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6426
  %9 = load float, float* %arrayidx5, align 4, !dbg !6426
  %10 = load float*, float** %r.addr, align 8, !dbg !6427
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6427
  %11 = load float, float* %arrayidx6, align 4, !dbg !6428
  %add7 = fadd float %11, %9, !dbg !6428
  store float %add7, float* %arrayidx6, align 4, !dbg !6428
  ret void, !dbg !6429
}

; Function Attrs: noinline nounwind uwtable
define internal float @_final_mass(%struct.Object* %ob, %struct.BodyPoint* %bp) #0 !dbg !6430 {
entry:
  %retval = alloca float, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %bp.addr = alloca %struct.BodyPoint*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store %struct.BodyPoint* %bp, %struct.BodyPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6437
  %tobool = icmp ne %struct.Object* %0, null, !dbg !6437
  br i1 %tobool, label %if.then, label %if.end4, !dbg !6439

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !6440, metadata !DIExpression()), !dbg !6442
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6443
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 111, !dbg !6444
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6444
  store %struct.SoftBody* %2, %struct.SoftBody** %sb, align 8, !dbg !6442
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6445
  %tobool1 = icmp ne %struct.SoftBody* %3, null, !dbg !6445
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !6447

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !6448
  %tobool2 = icmp ne %struct.BodyPoint* %4, null, !dbg !6448
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6449

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !6450
  %mass = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %5, i32 0, i32 20, !dbg !6452
  %6 = load float, float* %mass, align 4, !dbg !6452
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6453
  %nodemass = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 7, !dbg !6454
  %8 = load float, float* %nodemass, align 4, !dbg !6454
  %mul = fmul float %6, %8, !dbg !6455
  store float %mul, float* %retval, align 4, !dbg !6456
  br label %return, !dbg !6456

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end4, !dbg !6457

if.end4:                                          ; preds = %if.end, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0)), !dbg !6458
  store float 1.000000e+00, float* %retval, align 4, !dbg !6459
  br label %return, !dbg !6459

return:                                           ; preds = %if.end4, %if.then3
  %9 = load float, float* %retval, align 4, !dbg !6460
  ret float %9, !dbg !6460
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !6461 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  %0 = load float, float* %f.addr, align 4, !dbg !6468
  %1 = load float*, float** %r.addr, align 8, !dbg !6469
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !6469
  %2 = load float, float* %arrayidx, align 4, !dbg !6470
  %mul = fmul float %2, %0, !dbg !6470
  store float %mul, float* %arrayidx, align 4, !dbg !6470
  %3 = load float, float* %f.addr, align 4, !dbg !6471
  %4 = load float*, float** %r.addr, align 8, !dbg !6472
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !6472
  %5 = load float, float* %arrayidx1, align 4, !dbg !6473
  %mul2 = fmul float %5, %3, !dbg !6473
  store float %mul2, float* %arrayidx1, align 4, !dbg !6473
  %6 = load float, float* %f.addr, align 4, !dbg !6474
  %7 = load float*, float** %r.addr, align 8, !dbg !6475
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !6475
  %8 = load float, float* %arrayidx3, align 4, !dbg !6476
  %mul4 = fmul float %8, %6, !dbg !6476
  store float %mul4, float* %arrayidx3, align 4, !dbg !6476
  ret void, !dbg !6477
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local double @PIL_check_seconds_timer() #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccd_update_deflector_hash(%struct.Scene* %scene, %struct.Object* %vertexowner, %struct.GHash* %hash) #0 !dbg !6478 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %vertexowner.addr = alloca %struct.Object*, align 8
  %hash.addr = alloca %struct.GHash*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %ccdmesh = alloca %struct.ccd_Mesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  store %struct.GHash* %hash, %struct.GHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !6487, metadata !DIExpression()), !dbg !6490
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6491
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !6492
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !6493
  %1 = load i8*, i8** %first, align 8, !dbg !6493
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !6491
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !6490
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6494, metadata !DIExpression()), !dbg !6495
  %3 = load %struct.GHash*, %struct.GHash** %hash.addr, align 8, !dbg !6496
  %tobool = icmp ne %struct.GHash* %3, null, !dbg !6496
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6498

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6499
  %tobool2 = icmp ne %struct.Object* %4, null, !dbg !6499
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6500

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.end, !dbg !6501

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !6502

while.cond:                                       ; preds = %if.end23, %if.then11, %if.end
  %5 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6503
  %tobool3 = icmp ne %struct.Base* %5, null, !dbg !6502
  br i1 %tobool3, label %while.body, label %while.end, !dbg !6502

while.body:                                       ; preds = %while.cond
  %6 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6504
  %object = getelementptr inbounds %struct.Base, %struct.Base* %6, i32 0, i32 7, !dbg !6507
  %7 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !6507
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !6508
  %8 = load i16, i16* %type, align 8, !dbg !6508
  %conv = sext i16 %8 to i32, !dbg !6504
  %cmp = icmp eq i32 %conv, 1, !dbg !6509
  br i1 %cmp, label %land.lhs.true, label %if.end23, !dbg !6510

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6511
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 2, !dbg !6512
  %10 = load i32, i32* %lay, align 8, !dbg !6512
  %11 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6513
  %lay5 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 52, !dbg !6514
  %12 = load i32, i32* %lay5, align 8, !dbg !6514
  %and = and i32 %10, %12, !dbg !6515
  %tobool6 = icmp ne i32 %and, 0, !dbg !6515
  br i1 %tobool6, label %if.then7, label %if.end23, !dbg !6516

if.then7:                                         ; preds = %land.lhs.true
  %13 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6517
  %object8 = getelementptr inbounds %struct.Base, %struct.Base* %13, i32 0, i32 7, !dbg !6519
  %14 = load %struct.Object*, %struct.Object** %object8, align 8, !dbg !6519
  store %struct.Object* %14, %struct.Object** %ob, align 8, !dbg !6520
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6521
  %16 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6523
  %cmp9 = icmp eq %struct.Object* %15, %16, !dbg !6524
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !6525

if.then11:                                        ; preds = %if.then7
  %17 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6526
  %next = getelementptr inbounds %struct.Base, %struct.Base* %17, i32 0, i32 0, !dbg !6528
  %18 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !6528
  store %struct.Base* %18, %struct.Base** %base, align 8, !dbg !6529
  br label %while.cond, !dbg !6530, !llvm.loop !6531

if.end12:                                         ; preds = %if.then7
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6533
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 110, !dbg !6535
  %20 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !6535
  %tobool13 = icmp ne %struct.PartDeflect* %20, null, !dbg !6533
  br i1 %tobool13, label %land.lhs.true14, label %if.end22, !dbg !6536

land.lhs.true14:                                  ; preds = %if.end12
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6537
  %pd15 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 110, !dbg !6538
  %22 = load %struct.PartDeflect*, %struct.PartDeflect** %pd15, align 8, !dbg !6538
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %22, i32 0, i32 1, !dbg !6539
  %23 = load i16, i16* %deflect, align 4, !dbg !6539
  %conv16 = sext i16 %23 to i32, !dbg !6537
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !6537
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !6540

if.then18:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdmesh, metadata !6541, metadata !DIExpression()), !dbg !6543
  %24 = load %struct.GHash*, %struct.GHash** %hash.addr, align 8, !dbg !6544
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6545
  %26 = bitcast %struct.Object* %25 to i8*, !dbg !6545
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %24, i8* %26), !dbg !6546
  %27 = bitcast i8* %call to %struct.ccd_Mesh*, !dbg !6546
  store %struct.ccd_Mesh* %27, %struct.ccd_Mesh** %ccdmesh, align 8, !dbg !6543
  %28 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdmesh, align 8, !dbg !6547
  %tobool19 = icmp ne %struct.ccd_Mesh* %28, null, !dbg !6547
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6549

if.then20:                                        ; preds = %if.then18
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6550
  %30 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdmesh, align 8, !dbg !6551
  call void @ccd_mesh_update(%struct.Object* %29, %struct.ccd_Mesh* %30), !dbg !6552
  br label %if.end21, !dbg !6552

if.end21:                                         ; preds = %if.then20, %if.then18
  br label %if.end22, !dbg !6553

if.end22:                                         ; preds = %if.end21, %land.lhs.true14, %if.end12
  br label %if.end23, !dbg !6554

if.end23:                                         ; preds = %if.end22, %land.lhs.true, %while.body
  %31 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6555
  %next24 = getelementptr inbounds %struct.Base, %struct.Base* %31, i32 0, i32 0, !dbg !6556
  %32 = load %struct.Base*, %struct.Base** %next24, align 8, !dbg !6556
  store %struct.Base* %32, %struct.Base** %base, align 8, !dbg !6557
  br label %while.cond, !dbg !6502, !llvm.loop !6531

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !6558
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @query_external_colliders(%struct.Scene* %scene, %struct.Object* %me) #0 !dbg !6559 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %me.addr = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store %struct.Object* %me, %struct.Object** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %me.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6566
  %1 = load %struct.Object*, %struct.Object** %me.addr, align 8, !dbg !6567
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 52, !dbg !6568
  %2 = load i32, i32* %lay, align 8, !dbg !6568
  %call = call i32 @are_there_deflectors(%struct.Scene* %0, i32 %2), !dbg !6569
  ret i32 %call, !dbg !6570
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccd_build_deflector_hash(%struct.Scene* %scene, %struct.Object* %vertexowner, %struct.GHash* %hash) #0 !dbg !6571 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %vertexowner.addr = alloca %struct.Object*, align 8
  %hash.addr = alloca %struct.GHash*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %ccdmesh = alloca %struct.ccd_Mesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6572, metadata !DIExpression()), !dbg !6573
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  store %struct.GHash* %hash, %struct.GHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash.addr, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !6578, metadata !DIExpression()), !dbg !6579
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6580
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !6581
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !6582
  %1 = load i8*, i8** %first, align 8, !dbg !6582
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !6580
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !6579
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6583, metadata !DIExpression()), !dbg !6584
  %3 = load %struct.GHash*, %struct.GHash** %hash.addr, align 8, !dbg !6585
  %tobool = icmp ne %struct.GHash* %3, null, !dbg !6585
  br i1 %tobool, label %if.end, label %if.then, !dbg !6587

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !6588

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6589

while.cond:                                       ; preds = %if.end25, %if.then12, %if.end
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6590
  %tobool2 = icmp ne %struct.Base* %4, null, !dbg !6589
  br i1 %tobool2, label %while.body, label %while.end, !dbg !6589

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6591
  %object = getelementptr inbounds %struct.Base, %struct.Base* %5, i32 0, i32 7, !dbg !6594
  %6 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !6594
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !6595
  %7 = load i16, i16* %type, align 8, !dbg !6595
  %conv = sext i16 %7 to i32, !dbg !6591
  %cmp = icmp eq i32 %conv, 1, !dbg !6596
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !6597

land.lhs.true:                                    ; preds = %while.body
  %8 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6598
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %8, i32 0, i32 2, !dbg !6599
  %9 = load i32, i32* %lay, align 8, !dbg !6599
  %10 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6600
  %lay4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 52, !dbg !6601
  %11 = load i32, i32* %lay4, align 8, !dbg !6601
  %and = and i32 %9, %11, !dbg !6602
  %tobool5 = icmp ne i32 %and, 0, !dbg !6602
  br i1 %tobool5, label %if.then6, label %if.end25, !dbg !6603

if.then6:                                         ; preds = %land.lhs.true
  %12 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6604
  %object7 = getelementptr inbounds %struct.Base, %struct.Base* %12, i32 0, i32 7, !dbg !6606
  %13 = load %struct.Object*, %struct.Object** %object7, align 8, !dbg !6606
  store %struct.Object* %13, %struct.Object** %ob, align 8, !dbg !6607
  %14 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6608
  %tobool8 = icmp ne %struct.Object* %14, null, !dbg !6610
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !6611

land.lhs.true9:                                   ; preds = %if.then6
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6612
  %16 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !6613
  %cmp10 = icmp eq %struct.Object* %15, %16, !dbg !6614
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6615

if.then12:                                        ; preds = %land.lhs.true9
  %17 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6616
  %next = getelementptr inbounds %struct.Base, %struct.Base* %17, i32 0, i32 0, !dbg !6618
  %18 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !6618
  store %struct.Base* %18, %struct.Base** %base, align 8, !dbg !6619
  br label %while.cond, !dbg !6620, !llvm.loop !6621

if.end13:                                         ; preds = %land.lhs.true9, %if.then6
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6623
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 110, !dbg !6625
  %20 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !6625
  %tobool14 = icmp ne %struct.PartDeflect* %20, null, !dbg !6623
  br i1 %tobool14, label %land.lhs.true15, label %if.end24, !dbg !6626

land.lhs.true15:                                  ; preds = %if.end13
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6627
  %pd16 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 110, !dbg !6628
  %22 = load %struct.PartDeflect*, %struct.PartDeflect** %pd16, align 8, !dbg !6628
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %22, i32 0, i32 1, !dbg !6629
  %23 = load i16, i16* %deflect, align 4, !dbg !6629
  %conv17 = sext i16 %23 to i32, !dbg !6627
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !6627
  br i1 %tobool18, label %land.lhs.true19, label %if.end24, !dbg !6630

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %24 = load %struct.GHash*, %struct.GHash** %hash.addr, align 8, !dbg !6631
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6632
  %26 = bitcast %struct.Object* %25 to i8*, !dbg !6632
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %24, i8* %26), !dbg !6633
  %cmp20 = icmp eq i8* %call, null, !dbg !6634
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !6635

if.then22:                                        ; preds = %land.lhs.true19
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdmesh, metadata !6636, metadata !DIExpression()), !dbg !6638
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6639
  %call23 = call %struct.ccd_Mesh* @ccd_mesh_make(%struct.Object* %27), !dbg !6640
  store %struct.ccd_Mesh* %call23, %struct.ccd_Mesh** %ccdmesh, align 8, !dbg !6638
  %28 = load %struct.GHash*, %struct.GHash** %hash.addr, align 8, !dbg !6641
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6642
  %30 = bitcast %struct.Object* %29 to i8*, !dbg !6642
  %31 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdmesh, align 8, !dbg !6643
  %32 = bitcast %struct.ccd_Mesh* %31 to i8*, !dbg !6643
  call void @BLI_ghash_insert(%struct.GHash* %28, i8* %30, i8* %32), !dbg !6644
  br label %if.end24, !dbg !6645

if.end24:                                         ; preds = %if.then22, %land.lhs.true19, %land.lhs.true15, %if.end13
  br label %if.end25, !dbg !6646

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %while.body
  %33 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !6647
  %next26 = getelementptr inbounds %struct.Base, %struct.Base* %33, i32 0, i32 0, !dbg !6648
  %34 = load %struct.Base*, %struct.Base** %next26, align 8, !dbg !6648
  store %struct.Base* %34, %struct.Base** %base, align 8, !dbg !6649
  br label %while.cond, !dbg !6589, !llvm.loop !6621

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !6650
}

; Function Attrs: noinline nounwind uwtable
define internal void @interpolate_exciter(%struct.Object* %ob, i32 %timescale, i32 %time) #0 !dbg !6651 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %timescale.addr = alloca i32, align 4
  %time.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %f = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store i32 %timescale, i32* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timescale.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store i32 %time, i32* %time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %time.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !6660, metadata !DIExpression()), !dbg !6661
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6662
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !6663
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6663
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !6661
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !6664, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.declare(metadata float* %f, metadata !6666, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6668, metadata !DIExpression()), !dbg !6669
  %2 = load i32, i32* %time.addr, align 4, !dbg !6670
  %conv = sitofp i32 %2 to float, !dbg !6671
  %3 = load i32, i32* %timescale.addr, align 4, !dbg !6672
  %conv1 = sitofp i32 %3 to float, !dbg !6673
  %div = fdiv float %conv, %conv1, !dbg !6674
  store float %div, float* %f, align 4, !dbg !6675
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6676
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 0, !dbg !6678
  %5 = load i32, i32* %totpoint, align 8, !dbg !6678
  store i32 %5, i32* %a, align 4, !dbg !6679
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6680
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 2, !dbg !6681
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !6681
  store %struct.BodyPoint* %7, %struct.BodyPoint** %bp, align 8, !dbg !6682
  br label %for.cond, !dbg !6683

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %a, align 4, !dbg !6684
  %cmp = icmp sgt i32 %8, 0, !dbg !6686
  br i1 %cmp, label %for.body, label %for.end, !dbg !6687

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6688
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 0, !dbg !6690
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !6688
  %10 = load float, float* %arrayidx, align 8, !dbg !6688
  %11 = load float, float* %f, align 4, !dbg !6691
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6692
  %origE = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %12, i32 0, i32 1, !dbg !6693
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %origE, i64 0, i64 0, !dbg !6692
  %13 = load float, float* %arrayidx3, align 4, !dbg !6692
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6694
  %origS4 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 0, i32 0, !dbg !6695
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %origS4, i64 0, i64 0, !dbg !6694
  %15 = load float, float* %arrayidx5, align 8, !dbg !6694
  %sub = fsub float %13, %15, !dbg !6696
  %mul = fmul float %11, %sub, !dbg !6697
  %add = fadd float %10, %mul, !dbg !6698
  %16 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6699
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %16, i32 0, i32 2, !dbg !6700
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !6699
  store float %add, float* %arrayidx6, align 8, !dbg !6701
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6702
  %origS7 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i32 0, i32 0, !dbg !6703
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %origS7, i64 0, i64 1, !dbg !6702
  %18 = load float, float* %arrayidx8, align 4, !dbg !6702
  %19 = load float, float* %f, align 4, !dbg !6704
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6705
  %origE9 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 1, !dbg !6706
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %origE9, i64 0, i64 1, !dbg !6705
  %21 = load float, float* %arrayidx10, align 4, !dbg !6705
  %22 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6707
  %origS11 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %22, i32 0, i32 0, !dbg !6708
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %origS11, i64 0, i64 1, !dbg !6707
  %23 = load float, float* %arrayidx12, align 4, !dbg !6707
  %sub13 = fsub float %21, %23, !dbg !6709
  %mul14 = fmul float %19, %sub13, !dbg !6710
  %add15 = fadd float %18, %mul14, !dbg !6711
  %24 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6712
  %origT16 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %24, i32 0, i32 2, !dbg !6713
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %origT16, i64 0, i64 1, !dbg !6712
  store float %add15, float* %arrayidx17, align 4, !dbg !6714
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6715
  %origS18 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i32 0, i32 0, !dbg !6716
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %origS18, i64 0, i64 2, !dbg !6715
  %26 = load float, float* %arrayidx19, align 8, !dbg !6715
  %27 = load float, float* %f, align 4, !dbg !6717
  %28 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6718
  %origE20 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %28, i32 0, i32 1, !dbg !6719
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %origE20, i64 0, i64 2, !dbg !6718
  %29 = load float, float* %arrayidx21, align 4, !dbg !6718
  %30 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6720
  %origS22 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %30, i32 0, i32 0, !dbg !6721
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %origS22, i64 0, i64 2, !dbg !6720
  %31 = load float, float* %arrayidx23, align 8, !dbg !6720
  %sub24 = fsub float %29, %31, !dbg !6722
  %mul25 = fmul float %27, %sub24, !dbg !6723
  %add26 = fadd float %26, %mul25, !dbg !6724
  %32 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6725
  %origT27 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %32, i32 0, i32 2, !dbg !6726
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %origT27, i64 0, i64 2, !dbg !6725
  store float %add26, float* %arrayidx28, align 8, !dbg !6727
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6728
  %34 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6730
  %call = call float @_final_goal(%struct.Object* %33, %struct.BodyPoint* %34), !dbg !6731
  %cmp29 = fcmp oge float %call, 0x3FEFF7CEE0000000, !dbg !6732
  br i1 %cmp29, label %if.then, label %if.end, !dbg !6733

if.then:                                          ; preds = %for.body
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6734
  %origE31 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i32 0, i32 1, !dbg !6736
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %origE31, i64 0, i64 0, !dbg !6734
  %36 = load float, float* %arrayidx32, align 4, !dbg !6734
  %37 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6737
  %origS33 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %37, i32 0, i32 0, !dbg !6738
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %origS33, i64 0, i64 0, !dbg !6737
  %38 = load float, float* %arrayidx34, align 8, !dbg !6737
  %sub35 = fsub float %36, %38, !dbg !6739
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6740
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i32 0, i32 4, !dbg !6741
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6740
  store float %sub35, float* %arrayidx36, align 8, !dbg !6742
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6743
  %origE37 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %40, i32 0, i32 1, !dbg !6744
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %origE37, i64 0, i64 1, !dbg !6743
  %41 = load float, float* %arrayidx38, align 4, !dbg !6743
  %42 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6745
  %origS39 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %42, i32 0, i32 0, !dbg !6746
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %origS39, i64 0, i64 1, !dbg !6745
  %43 = load float, float* %arrayidx40, align 4, !dbg !6745
  %sub41 = fsub float %41, %43, !dbg !6747
  %44 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6748
  %vec42 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %44, i32 0, i32 4, !dbg !6749
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %vec42, i64 0, i64 1, !dbg !6748
  store float %sub41, float* %arrayidx43, align 4, !dbg !6750
  %45 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6751
  %origE44 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %45, i32 0, i32 1, !dbg !6752
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %origE44, i64 0, i64 2, !dbg !6751
  %46 = load float, float* %arrayidx45, align 4, !dbg !6751
  %47 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6753
  %origS46 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %47, i32 0, i32 0, !dbg !6754
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %origS46, i64 0, i64 2, !dbg !6753
  %48 = load float, float* %arrayidx47, align 8, !dbg !6753
  %sub48 = fsub float %46, %48, !dbg !6755
  %49 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6756
  %vec49 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %49, i32 0, i32 4, !dbg !6757
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %vec49, i64 0, i64 2, !dbg !6756
  store float %sub48, float* %arrayidx50, align 8, !dbg !6758
  br label %if.end, !dbg !6759

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6760

for.inc:                                          ; preds = %if.end
  %50 = load i32, i32* %a, align 4, !dbg !6761
  %dec = add nsw i32 %50, -1, !dbg !6761
  store i32 %dec, i32* %a, align 4, !dbg !6761
  %51 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6762
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %51, i32 1, !dbg !6762
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !6762
  br label %for.cond, !dbg !6763, !llvm.loop !6764

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6766
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_calc_forces(%struct.Scene* %scene, %struct.Object* %ob, float %forcetime, float %timenow, i32 %nl_flags) #0 !dbg !6767 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %forcetime.addr = alloca float, align 4
  %timenow.addr = alloca float, align 4
  %nl_flags.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %do_effector = alloca %struct.ListBase*, align 8
  %iks = alloca float, align 4
  %ks = alloca float, align 4
  %kd = alloca float, align 4
  %gravity = alloca [3 x float], align 4
  %fieldfactor = alloca float, align 4
  %windfactor = alloca float, align 4
  %tune = alloca float, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %do_deflector = alloca i32, align 4
  %do_selfcollision = alloca i32, align 4
  %do_springcollision = alloca i32, align 4
  %do_aero = alloca i32, align 4
  %defforce = alloca [3 x float], align 4
  %attached = alloca i32, align 4
  %obp = alloca %struct.BodyPoint*, align 8
  %c = alloca i32, align 4
  %b63 = alloca i32, align 4
  %velcenter = alloca [3 x float], align 4
  %dvel = alloca [3 x float], align 4
  %def = alloca [3 x float], align 4
  %distance = alloca float, align 4
  %compare = alloca float, align 4
  %f = alloca float, align 4
  %auxvect = alloca [3 x float], align 4
  %velgoal = alloca [3 x float], align 4
  %epoint = alloca %struct.EffectedPoint, align 8
  %force298 = alloca [3 x float], align 4
  %speed = alloca [3 x float], align 4
  %eval_sb_fric_force_scale = alloca float, align 4
  %cfforce = alloca [3 x float], align 4
  %defforce377 = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %facenormal = alloca [3 x float], align 4
  %cf = alloca float, align 4
  %intrusion = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  store float %forcetime, float* %forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %forcetime.addr, metadata !6774, metadata !DIExpression()), !dbg !6775
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !6776, metadata !DIExpression()), !dbg !6777
  store i32 %nl_flags, i32* %nl_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nl_flags.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  %0 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 14), align 4, !dbg !6780
  %conv = sext i16 %0 to i32, !dbg !6782
  %and = and i32 %conv, 16, !dbg !6783
  %tobool = icmp ne i32 %and, 0, !dbg !6783
  br i1 %tobool, label %if.else, label %if.then, !dbg !6784

if.then:                                          ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6785
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6787
  %3 = load float, float* %forcetime.addr, align 4, !dbg !6788
  %4 = load float, float* %timenow.addr, align 4, !dbg !6789
  %5 = load i32, i32* %nl_flags.addr, align 4, !dbg !6790
  call void @softbody_calc_forcesEx(%struct.Scene* %1, %struct.Object* %2, float %3, float %4, i32 %5), !dbg !6791
  br label %if.end496, !dbg !6792

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !6793, metadata !DIExpression()), !dbg !6795
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6796
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 111, !dbg !6797
  %7 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6797
  store %struct.SoftBody* %7, %struct.SoftBody** %sb, align 8, !dbg !6795
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !6798, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector, metadata !6802, metadata !DIExpression()), !dbg !6803
  store %struct.ListBase* null, %struct.ListBase** %do_effector, align 8, !dbg !6803
  call void @llvm.dbg.declare(metadata float* %iks, metadata !6804, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.declare(metadata float* %ks, metadata !6806, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.declare(metadata float* %kd, metadata !6808, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.declare(metadata [3 x float]* %gravity, metadata !6810, metadata !DIExpression()), !dbg !6811
  %8 = bitcast [3 x float]* %gravity to i8*, !dbg !6811
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 12, i1 false), !dbg !6811
  call void @llvm.dbg.declare(metadata float* %fieldfactor, metadata !6812, metadata !DIExpression()), !dbg !6813
  store float -1.000000e+00, float* %fieldfactor, align 4, !dbg !6813
  call void @llvm.dbg.declare(metadata float* %windfactor, metadata !6814, metadata !DIExpression()), !dbg !6815
  store float 2.500000e-01, float* %windfactor, align 4, !dbg !6815
  call void @llvm.dbg.declare(metadata float* %tune, metadata !6816, metadata !DIExpression()), !dbg !6817
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6818
  %ballstiff = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 35, !dbg !6819
  %10 = load float, float* %ballstiff, align 4, !dbg !6819
  store float %10, float* %tune, align 4, !dbg !6817
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6820, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6822, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.declare(metadata i32* %do_deflector, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %do_selfcollision, metadata !6826, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata i32* %do_springcollision, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i32* %do_aero, metadata !6830, metadata !DIExpression()), !dbg !6831
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6832
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 40, !dbg !6834
  %flag = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 1, !dbg !6835
  %12 = load i32, i32* %flag, align 4, !dbg !6835
  %and1 = and i32 %12, 1, !dbg !6836
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6836
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6837

if.then3:                                         ; preds = %if.else
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !6838
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6840
  %physics_settings4 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 40, !dbg !6841
  %gravity5 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings4, i32 0, i32 0, !dbg !6842
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %gravity5, i64 0, i64 0, !dbg !6840
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !6843
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !6844
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6845
  %call = call float @sb_grav_force_scale(%struct.Object* %14), !dbg !6846
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6847
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 49, !dbg !6848
  %16 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !6848
  %global_gravity = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %16, i32 0, i32 2, !dbg !6849
  %17 = load float, float* %global_gravity, align 8, !dbg !6849
  %mul = fmul float %call, %17, !dbg !6850
  call void @mul_v3_fl(float* %arraydecay7, float %mul), !dbg !6851
  br label %if.end, !dbg !6852

if.end:                                           ; preds = %if.then3, %if.else
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6853
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6854
  %call8 = call i32 @query_external_colliders(%struct.Scene* %18, %struct.Object* %19), !dbg !6855
  store i32 %call8, i32* %do_deflector, align 4, !dbg !6856
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6857
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 104, !dbg !6858
  %21 = load i16, i16* %softflag, align 2, !dbg !6858
  %conv9 = sext i16 %21 to i32, !dbg !6857
  %and10 = and i32 %conv9, 4, !dbg !6859
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6859
  br i1 %tobool11, label %land.lhs.true, label %land.end, !dbg !6860

land.lhs.true:                                    ; preds = %if.end
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6861
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 3, !dbg !6862
  %23 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !6862
  %tobool12 = icmp ne %struct.BodySpring* %23, null, !dbg !6863
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !6864

land.rhs:                                         ; preds = %land.lhs.true
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6865
  %softflag13 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 104, !dbg !6866
  %25 = load i16, i16* %softflag13, align 2, !dbg !6866
  %conv14 = sext i16 %25 to i32, !dbg !6865
  %and15 = and i32 %conv14, 512, !dbg !6867
  %tobool16 = icmp ne i32 %and15, 0, !dbg !6864
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %26 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %tobool16, %land.rhs ], !dbg !6868
  %land.ext = zext i1 %26 to i32, !dbg !6864
  store i32 %land.ext, i32* %do_selfcollision, align 4, !dbg !6869
  %27 = load i32, i32* %do_deflector, align 4, !dbg !6870
  %tobool17 = icmp ne i32 %27, 0, !dbg !6870
  br i1 %tobool17, label %land.lhs.true18, label %land.end28, !dbg !6871

land.lhs.true18:                                  ; preds = %land.end
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6872
  %softflag19 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 104, !dbg !6873
  %29 = load i16, i16* %softflag19, align 2, !dbg !6873
  %conv20 = sext i16 %29 to i32, !dbg !6872
  %and21 = and i32 %conv20, 4, !dbg !6874
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6874
  br i1 %tobool22, label %land.rhs23, label %land.end28, !dbg !6875

land.rhs23:                                       ; preds = %land.lhs.true18
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6876
  %softflag24 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 104, !dbg !6877
  %31 = load i16, i16* %softflag24, align 2, !dbg !6877
  %conv25 = sext i16 %31 to i32, !dbg !6876
  %and26 = and i32 %conv25, 2048, !dbg !6878
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6875
  br label %land.end28

land.end28:                                       ; preds = %land.rhs23, %land.lhs.true18, %land.end
  %32 = phi i1 [ false, %land.lhs.true18 ], [ false, %land.end ], [ %tobool27, %land.rhs23 ], !dbg !6868
  %land.ext29 = zext i1 %32 to i32, !dbg !6875
  store i32 %land.ext29, i32* %do_springcollision, align 4, !dbg !6879
  %33 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6880
  %aeroedge = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %33, i32 0, i32 37, !dbg !6881
  %34 = load i16, i16* %aeroedge, align 2, !dbg !6881
  %conv30 = sext i16 %34 to i32, !dbg !6882
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !6882
  br i1 %tobool31, label %land.rhs32, label %land.end37, !dbg !6883

land.rhs32:                                       ; preds = %land.end28
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6884
  %softflag33 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 104, !dbg !6885
  %36 = load i16, i16* %softflag33, align 2, !dbg !6885
  %conv34 = sext i16 %36 to i32, !dbg !6884
  %and35 = and i32 %conv34, 4, !dbg !6886
  %tobool36 = icmp ne i32 %and35, 0, !dbg !6883
  br label %land.end37

land.end37:                                       ; preds = %land.rhs32, %land.end28
  %37 = phi i1 [ false, %land.end28 ], [ %tobool36, %land.rhs32 ], !dbg !6868
  %land.ext38 = zext i1 %37 to i32, !dbg !6883
  store i32 %land.ext38, i32* %do_aero, align 4, !dbg !6887
  %38 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6888
  %inspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %38, i32 0, i32 21, !dbg !6889
  %39 = load float, float* %inspring, align 8, !dbg !6889
  %sub = fsub float 1.000000e+00, %39, !dbg !6890
  %div = fdiv float 1.000000e+00, %sub, !dbg !6891
  %sub39 = fsub float %div, 1.000000e+00, !dbg !6892
  store float %sub39, float* %iks, align 4, !dbg !6893
  %40 = load i32, i32* %do_springcollision, align 4, !dbg !6894
  %tobool40 = icmp ne i32 %40, 0, !dbg !6894
  br i1 %tobool40, label %if.then42, label %lor.lhs.false, !dbg !6896

lor.lhs.false:                                    ; preds = %land.end37
  %41 = load i32, i32* %do_aero, align 4, !dbg !6897
  %tobool41 = icmp ne i32 %41, 0, !dbg !6897
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !6898

if.then42:                                        ; preds = %lor.lhs.false, %land.end37
  %42 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6899
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6900
  %44 = load float, float* %timenow.addr, align 4, !dbg !6901
  call void @scan_for_ext_spring_forces(%struct.Scene* %42, %struct.Object* %43, float %44), !dbg !6902
  br label %if.end43, !dbg !6902

if.end43:                                         ; preds = %if.then42, %lor.lhs.false
  %45 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6903
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6904
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6905
  %soft44 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 111, !dbg !6906
  %48 = load %struct.SoftBody*, %struct.SoftBody** %soft44, align 8, !dbg !6906
  %effector_weights45 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %48, i32 0, i32 49, !dbg !6907
  %49 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights45, align 8, !dbg !6907
  %call46 = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %45, %struct.Object* %46, %struct.ParticleSystem* null, %struct.EffectorWeights* %49, i8 zeroext 1), !dbg !6908
  store %struct.ListBase* %call46, %struct.ListBase** %do_effector, align 8, !dbg !6909
  %50 = load i32, i32* %do_deflector, align 4, !dbg !6910
  %tobool47 = icmp ne i32 %50, 0, !dbg !6910
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !6912

if.then48:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata [3 x float]* %defforce, metadata !6913, metadata !DIExpression()), !dbg !6915
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %defforce, i64 0, i64 0, !dbg !6916
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6917
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 52, !dbg !6918
  %52 = load i32, i32* %lay, align 8, !dbg !6918
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6919
  %54 = load float, float* %timenow.addr, align 4, !dbg !6920
  %call50 = call i32 @sb_detect_aabb_collisionCached(float* %arraydecay49, i32 %52, %struct.Object* %53, float %54), !dbg !6921
  store i32 %call50, i32* %do_deflector, align 4, !dbg !6922
  br label %if.end51, !dbg !6923

if.end51:                                         ; preds = %if.then48, %if.end43
  %55 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6924
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %55, i32 0, i32 0, !dbg !6926
  %56 = load i32, i32* %totpoint, align 8, !dbg !6926
  store i32 %56, i32* %a, align 4, !dbg !6927
  %57 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6928
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %57, i32 0, i32 2, !dbg !6929
  %58 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !6929
  store %struct.BodyPoint* %58, %struct.BodyPoint** %bp, align 8, !dbg !6930
  br label %for.cond, !dbg !6931

for.cond:                                         ; preds = %for.inc486, %if.end51
  %59 = load i32, i32* %a, align 4, !dbg !6932
  %cmp = icmp sgt i32 %59, 0, !dbg !6934
  br i1 %cmp, label %for.body, label %for.end489, !dbg !6935

for.body:                                         ; preds = %for.cond
  %60 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6936
  %force = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %60, i32 0, i32 5, !dbg !6938
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 2, !dbg !6936
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6939
  %61 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6940
  %force53 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %61, i32 0, i32 5, !dbg !6941
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %force53, i64 0, i64 1, !dbg !6940
  store float 0.000000e+00, float* %arrayidx54, align 4, !dbg !6942
  %62 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6943
  %force55 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %62, i32 0, i32 5, !dbg !6944
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %force55, i64 0, i64 0, !dbg !6943
  store float 0.000000e+00, float* %arrayidx56, align 4, !dbg !6945
  %63 = load i32, i32* %nl_flags.addr, align 4, !dbg !6946
  %and57 = and i32 %63, 1, !dbg !6948
  %tobool58 = icmp ne i32 %and57, 0, !dbg !6948
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6949

if.then59:                                        ; preds = %for.body
  br label %if.end60, !dbg !6950

if.end60:                                         ; preds = %if.then59, %for.body
  %64 = load i32, i32* %do_selfcollision, align 4, !dbg !6952
  %tobool61 = icmp ne i32 %64, 0, !dbg !6952
  br i1 %tobool61, label %if.then62, label %if.end191, !dbg !6954

if.then62:                                        ; preds = %if.end60
  call void @llvm.dbg.declare(metadata i32* %attached, metadata !6955, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %obp, metadata !6958, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata i32* %b63, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata [3 x float]* %velcenter, metadata !6964, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.declare(metadata [3 x float]* %dvel, metadata !6966, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.declare(metadata [3 x float]* %def, metadata !6968, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.declare(metadata float* %distance, metadata !6970, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.declare(metadata float* %compare, metadata !6972, metadata !DIExpression()), !dbg !6973
  %65 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6974
  %totpoint64 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %65, i32 0, i32 0, !dbg !6976
  %66 = load i32, i32* %totpoint64, align 8, !dbg !6976
  store i32 %66, i32* %c, align 4, !dbg !6977
  %67 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !6978
  %bpoint65 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %67, i32 0, i32 2, !dbg !6979
  %68 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint65, align 8, !dbg !6979
  store %struct.BodyPoint* %68, %struct.BodyPoint** %obp, align 8, !dbg !6980
  br label %for.cond66, !dbg !6981

for.cond66:                                       ; preds = %for.inc188, %if.then62
  %69 = load i32, i32* %c, align 4, !dbg !6982
  %70 = load i32, i32* %a, align 4, !dbg !6984
  %cmp67 = icmp sge i32 %69, %70, !dbg !6985
  br i1 %cmp67, label %for.body69, label %for.end190, !dbg !6986

for.body69:                                       ; preds = %for.cond66
  %71 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !6987
  %colball = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %71, i32 0, i32 18, !dbg !6989
  %72 = load float, float* %colball, align 4, !dbg !6989
  %73 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6990
  %colball70 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %73, i32 0, i32 18, !dbg !6991
  %74 = load float, float* %colball70, align 4, !dbg !6991
  %add = fadd float %72, %74, !dbg !6992
  store float %add, float* %compare, align 4, !dbg !6993
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !6994
  %75 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !6995
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %75, i32 0, i32 3, !dbg !6996
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !6995
  %76 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !6997
  %pos73 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %76, i32 0, i32 3, !dbg !6998
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %pos73, i64 0, i64 0, !dbg !6997
  call void @sub_v3_v3v3(float* %arraydecay71, float* %arraydecay72, float* %arraydecay74), !dbg !6999
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7000
  %77 = load float, float* %arrayidx75, align 4, !dbg !7000
  %cmp76 = fcmp olt float %77, 0.000000e+00, !dbg !7000
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !7000

cond.true:                                        ; preds = %for.body69
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7000
  %78 = load float, float* %arrayidx78, align 4, !dbg !7000
  %fneg = fneg float %78, !dbg !7000
  br label %cond.end, !dbg !7000

cond.false:                                       ; preds = %for.body69
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7000
  %79 = load float, float* %arrayidx79, align 4, !dbg !7000
  br label %cond.end, !dbg !7000

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %79, %cond.false ], !dbg !7000
  %80 = load float, float* %compare, align 4, !dbg !7002
  %cmp80 = fcmp ogt float %cond, %80, !dbg !7003
  br i1 %cmp80, label %if.then108, label %lor.lhs.false82, !dbg !7004

lor.lhs.false82:                                  ; preds = %cond.end
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !7005
  %81 = load float, float* %arrayidx83, align 4, !dbg !7005
  %cmp84 = fcmp olt float %81, 0.000000e+00, !dbg !7005
  br i1 %cmp84, label %cond.true86, label %cond.false89, !dbg !7005

cond.true86:                                      ; preds = %lor.lhs.false82
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !7005
  %82 = load float, float* %arrayidx87, align 4, !dbg !7005
  %fneg88 = fneg float %82, !dbg !7005
  br label %cond.end91, !dbg !7005

cond.false89:                                     ; preds = %lor.lhs.false82
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !7005
  %83 = load float, float* %arrayidx90, align 4, !dbg !7005
  br label %cond.end91, !dbg !7005

cond.end91:                                       ; preds = %cond.false89, %cond.true86
  %cond92 = phi float [ %fneg88, %cond.true86 ], [ %83, %cond.false89 ], !dbg !7005
  %84 = load float, float* %compare, align 4, !dbg !7006
  %cmp93 = fcmp ogt float %cond92, %84, !dbg !7007
  br i1 %cmp93, label %if.then108, label %lor.lhs.false95, !dbg !7008

lor.lhs.false95:                                  ; preds = %cond.end91
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !7009
  %85 = load float, float* %arrayidx96, align 4, !dbg !7009
  %cmp97 = fcmp olt float %85, 0.000000e+00, !dbg !7009
  br i1 %cmp97, label %cond.true99, label %cond.false102, !dbg !7009

cond.true99:                                      ; preds = %lor.lhs.false95
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !7009
  %86 = load float, float* %arrayidx100, align 4, !dbg !7009
  %fneg101 = fneg float %86, !dbg !7009
  br label %cond.end104, !dbg !7009

cond.false102:                                    ; preds = %lor.lhs.false95
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !7009
  %87 = load float, float* %arrayidx103, align 4, !dbg !7009
  br label %cond.end104, !dbg !7009

cond.end104:                                      ; preds = %cond.false102, %cond.true99
  %cond105 = phi float [ %fneg101, %cond.true99 ], [ %87, %cond.false102 ], !dbg !7009
  %88 = load float, float* %compare, align 4, !dbg !7010
  %cmp106 = fcmp ogt float %cond105, %88, !dbg !7011
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !7012

if.then108:                                       ; preds = %cond.end104, %cond.end91, %cond.end
  br label %for.inc188, !dbg !7013

if.end109:                                        ; preds = %cond.end104
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7014
  %call111 = call float @normalize_v3(float* %arraydecay110), !dbg !7015
  store float %call111, float* %distance, align 4, !dbg !7016
  %89 = load float, float* %distance, align 4, !dbg !7017
  %90 = load float, float* %compare, align 4, !dbg !7019
  %cmp112 = fcmp olt float %89, %90, !dbg !7020
  br i1 %cmp112, label %if.then114, label %if.end187, !dbg !7021

if.then114:                                       ; preds = %if.end109
  store i32 0, i32* %attached, align 4, !dbg !7022
  %91 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7024
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %91, i32 0, i32 13, !dbg !7026
  %92 = load i32, i32* %nofsprings, align 4, !dbg !7026
  store i32 %92, i32* %b63, align 4, !dbg !7027
  br label %for.cond115, !dbg !7028

for.cond115:                                      ; preds = %for.inc, %if.then114
  %93 = load i32, i32* %b63, align 4, !dbg !7029
  %cmp116 = icmp sgt i32 %93, 0, !dbg !7031
  br i1 %cmp116, label %for.body118, label %for.end, !dbg !7032

for.body118:                                      ; preds = %for.cond115
  %94 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7033
  %bspring119 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %94, i32 0, i32 3, !dbg !7035
  %95 = load %struct.BodySpring*, %struct.BodySpring** %bspring119, align 8, !dbg !7035
  %96 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7036
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %96, i32 0, i32 14, !dbg !7037
  %97 = load i32*, i32** %springs, align 8, !dbg !7037
  %98 = load i32, i32* %b63, align 4, !dbg !7038
  %sub120 = sub nsw i32 %98, 1, !dbg !7039
  %idxprom = sext i32 %sub120 to i64, !dbg !7036
  %arrayidx121 = getelementptr inbounds i32, i32* %97, i64 %idxprom, !dbg !7036
  %99 = load i32, i32* %arrayidx121, align 4, !dbg !7036
  %idx.ext = sext i32 %99 to i64, !dbg !7040
  %add.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %95, i64 %idx.ext, !dbg !7040
  store %struct.BodySpring* %add.ptr, %struct.BodySpring** %bs, align 8, !dbg !7041
  %100 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7042
  %totpoint122 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %100, i32 0, i32 0, !dbg !7044
  %101 = load i32, i32* %totpoint122, align 8, !dbg !7044
  %102 = load i32, i32* %a, align 4, !dbg !7045
  %sub123 = sub nsw i32 %101, %102, !dbg !7046
  %103 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7047
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %103, i32 0, i32 1, !dbg !7048
  %104 = load i32, i32* %v2, align 4, !dbg !7048
  %cmp124 = icmp eq i32 %sub123, %104, !dbg !7049
  br i1 %cmp124, label %if.then131, label %lor.lhs.false126, !dbg !7050

lor.lhs.false126:                                 ; preds = %for.body118
  %105 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7051
  %totpoint127 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %105, i32 0, i32 0, !dbg !7052
  %106 = load i32, i32* %totpoint127, align 8, !dbg !7052
  %107 = load i32, i32* %a, align 4, !dbg !7053
  %sub128 = sub nsw i32 %106, %107, !dbg !7054
  %108 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7055
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %108, i32 0, i32 0, !dbg !7056
  %109 = load i32, i32* %v1, align 4, !dbg !7056
  %cmp129 = icmp eq i32 %sub128, %109, !dbg !7057
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !7058

if.then131:                                       ; preds = %lor.lhs.false126, %for.body118
  store i32 1, i32* %attached, align 4, !dbg !7059
  br label %for.inc, !dbg !7061

if.end132:                                        ; preds = %lor.lhs.false126
  br label %for.inc, !dbg !7062

for.inc:                                          ; preds = %if.end132, %if.then131
  %110 = load i32, i32* %b63, align 4, !dbg !7063
  %dec = add nsw i32 %110, -1, !dbg !7063
  store i32 %dec, i32* %b63, align 4, !dbg !7063
  br label %for.cond115, !dbg !7064, !llvm.loop !7065

for.end:                                          ; preds = %for.cond115
  %111 = load i32, i32* %attached, align 4, !dbg !7067
  %tobool133 = icmp ne i32 %111, 0, !dbg !7067
  br i1 %tobool133, label %if.end186, label %if.then134, !dbg !7069

if.then134:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %f, metadata !7070, metadata !DIExpression()), !dbg !7072
  %112 = load float, float* %tune, align 4, !dbg !7073
  %113 = load float, float* %distance, align 4, !dbg !7074
  %div135 = fdiv float %112, %113, !dbg !7075
  %114 = load float, float* %tune, align 4, !dbg !7076
  %115 = load float, float* %compare, align 4, !dbg !7077
  %116 = load float, float* %compare, align 4, !dbg !7078
  %mul136 = fmul float %115, %116, !dbg !7079
  %div137 = fdiv float %114, %mul136, !dbg !7080
  %117 = load float, float* %distance, align 4, !dbg !7081
  %mul138 = fmul float %div137, %117, !dbg !7082
  %add139 = fadd float %div135, %mul138, !dbg !7083
  %118 = load float, float* %tune, align 4, !dbg !7084
  %mul140 = fmul float 2.000000e+00, %118, !dbg !7085
  %119 = load float, float* %compare, align 4, !dbg !7086
  %div141 = fdiv float %mul140, %119, !dbg !7087
  %sub142 = fsub float %add139, %div141, !dbg !7088
  store float %sub142, float* %f, align 4, !dbg !7072
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !7089
  %120 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7090
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %120, i32 0, i32 4, !dbg !7091
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7090
  %121 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7092
  %vec145 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %121, i32 0, i32 4, !dbg !7093
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %vec145, i64 0, i64 0, !dbg !7092
  call void @mid_v3_v3v3(float* %arraydecay143, float* %arraydecay144, float* %arraydecay146), !dbg !7094
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7095
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !7096
  %122 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7097
  %vec149 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %122, i32 0, i32 4, !dbg !7098
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %vec149, i64 0, i64 0, !dbg !7097
  call void @sub_v3_v3v3(float* %arraydecay147, float* %arraydecay148, float* %arraydecay150), !dbg !7099
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7100
  %123 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7101
  %124 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7102
  %call152 = call float @_final_mass(%struct.Object* %123, %struct.BodyPoint* %124), !dbg !7103
  call void @mul_v3_fl(float* %arraydecay151, float %call152), !dbg !7104
  %125 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7105
  %force153 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %125, i32 0, i32 5, !dbg !7106
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %force153, i64 0, i64 0, !dbg !7105
  %126 = load float, float* %f, align 4, !dbg !7107
  %127 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7108
  %balldamp = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %127, i32 0, i32 34, !dbg !7109
  %128 = load float, float* %balldamp, align 8, !dbg !7109
  %sub155 = fsub float 1.000000e+00, %128, !dbg !7110
  %mul156 = fmul float %126, %sub155, !dbg !7111
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7112
  call void @Vec3PlusStVec(float* %arraydecay154, float %mul156, float* %arraydecay157), !dbg !7113
  %129 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7114
  %force158 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %129, i32 0, i32 5, !dbg !7115
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %force158, i64 0, i64 0, !dbg !7114
  %130 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7116
  %balldamp160 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %130, i32 0, i32 34, !dbg !7117
  %131 = load float, float* %balldamp160, align 8, !dbg !7117
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7118
  call void @Vec3PlusStVec(float* %arraydecay159, float %131, float* %arraydecay161), !dbg !7119
  %132 = load i32, i32* %nl_flags.addr, align 4, !dbg !7120
  %and162 = and i32 %132, 1, !dbg !7122
  %tobool163 = icmp ne i32 %and162, 0, !dbg !7122
  br i1 %tobool163, label %if.then164, label %if.end165, !dbg !7123

if.then164:                                       ; preds = %if.then134
  br label %if.end165, !dbg !7124

if.end165:                                        ; preds = %if.then164, %if.then134
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7126
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !7127
  %133 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7128
  %vec168 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %133, i32 0, i32 4, !dbg !7129
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %vec168, i64 0, i64 0, !dbg !7128
  call void @sub_v3_v3v3(float* %arraydecay166, float* %arraydecay167, float* %arraydecay169), !dbg !7130
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7131
  %134 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7132
  %135 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7133
  %call171 = call float @_final_mass(%struct.Object* %134, %struct.BodyPoint* %135), !dbg !7134
  %136 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7135
  %137 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7136
  %call172 = call float @_final_mass(%struct.Object* %136, %struct.BodyPoint* %137), !dbg !7137
  %add173 = fadd float %call171, %call172, !dbg !7138
  %div174 = fdiv float %add173, 2.000000e+00, !dbg !7139
  call void @mul_v3_fl(float* %arraydecay170, float %div174), !dbg !7140
  %138 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7141
  %force175 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %138, i32 0, i32 5, !dbg !7142
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %force175, i64 0, i64 0, !dbg !7141
  %139 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7143
  %balldamp177 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %139, i32 0, i32 34, !dbg !7144
  %140 = load float, float* %balldamp177, align 8, !dbg !7144
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !7145
  call void @Vec3PlusStVec(float* %arraydecay176, float %140, float* %arraydecay178), !dbg !7146
  %141 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7147
  %force179 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %141, i32 0, i32 5, !dbg !7148
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %force179, i64 0, i64 0, !dbg !7147
  %142 = load float, float* %f, align 4, !dbg !7149
  %fneg181 = fneg float %142, !dbg !7150
  %143 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7151
  %balldamp182 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %143, i32 0, i32 34, !dbg !7152
  %144 = load float, float* %balldamp182, align 8, !dbg !7152
  %sub183 = fsub float 1.000000e+00, %144, !dbg !7153
  %mul184 = fmul float %fneg181, %sub183, !dbg !7154
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !7155
  call void @Vec3PlusStVec(float* %arraydecay180, float %mul184, float* %arraydecay185), !dbg !7156
  br label %if.end186, !dbg !7157

if.end186:                                        ; preds = %if.end165, %for.end
  br label %if.end187, !dbg !7158

if.end187:                                        ; preds = %if.end186, %if.end109
  br label %for.inc188, !dbg !7159

for.inc188:                                       ; preds = %if.end187, %if.then108
  %145 = load i32, i32* %c, align 4, !dbg !7160
  %dec189 = add nsw i32 %145, -1, !dbg !7160
  store i32 %dec189, i32* %c, align 4, !dbg !7160
  %146 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !7161
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %146, i32 1, !dbg !7161
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %obp, align 8, !dbg !7161
  br label %for.cond66, !dbg !7162, !llvm.loop !7163

for.end190:                                       ; preds = %for.cond66
  br label %if.end191, !dbg !7165

if.end191:                                        ; preds = %for.end190, %if.end60
  %147 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7166
  %148 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7168
  %call192 = call float @_final_goal(%struct.Object* %147, %struct.BodyPoint* %148), !dbg !7169
  %cmp193 = fcmp olt float %call192, 0x3FEFF7CEE0000000, !dbg !7170
  br i1 %cmp193, label %if.then195, label %if.end485, !dbg !7171

if.then195:                                       ; preds = %if.end191
  call void @llvm.dbg.declare(metadata [3 x float]* %auxvect, metadata !7172, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.declare(metadata [3 x float]* %velgoal, metadata !7175, metadata !DIExpression()), !dbg !7176
  %149 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7177
  %softflag196 = getelementptr inbounds %struct.Object, %struct.Object* %149, i32 0, i32 104, !dbg !7179
  %150 = load i16, i16* %softflag196, align 2, !dbg !7179
  %conv197 = sext i16 %150 to i32, !dbg !7177
  %and198 = and i32 %conv197, 2, !dbg !7180
  %tobool199 = icmp ne i32 %and198, 0, !dbg !7180
  br i1 %tobool199, label %if.then200, label %if.end291, !dbg !7181

if.then200:                                       ; preds = %if.then195
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !7182
  %151 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7184
  %pos202 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %151, i32 0, i32 3, !dbg !7185
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %pos202, i64 0, i64 0, !dbg !7184
  %152 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7186
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %152, i32 0, i32 2, !dbg !7187
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !7186
  call void @sub_v3_v3v3(float* %arraydecay201, float* %arraydecay203, float* %arraydecay204), !dbg !7188
  %153 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7189
  %154 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7190
  %call205 = call float @_final_goal(%struct.Object* %153, %struct.BodyPoint* %154), !dbg !7191
  %155 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7192
  %goalspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %155, i32 0, i32 13, !dbg !7193
  %156 = load float, float* %goalspring, align 8, !dbg !7193
  %mul206 = fmul float %call205, %156, !dbg !7194
  %sub207 = fsub float 1.000000e+00, %mul206, !dbg !7195
  %div208 = fdiv float 1.000000e+00, %sub207, !dbg !7196
  %sub209 = fsub float %div208, 1.000000e+00, !dbg !7197
  store float %sub209, float* %ks, align 4, !dbg !7198
  %157 = load float, float* %ks, align 4, !dbg !7199
  %fneg210 = fneg float %157, !dbg !7200
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !7201
  %158 = load float, float* %arrayidx211, align 4, !dbg !7201
  %mul212 = fmul float %fneg210, %158, !dbg !7202
  %159 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7203
  %force213 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %159, i32 0, i32 5, !dbg !7204
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %force213, i64 0, i64 0, !dbg !7203
  %160 = load float, float* %arrayidx214, align 4, !dbg !7205
  %add215 = fadd float %160, %mul212, !dbg !7205
  store float %add215, float* %arrayidx214, align 4, !dbg !7205
  %161 = load float, float* %ks, align 4, !dbg !7206
  %fneg216 = fneg float %161, !dbg !7207
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 1, !dbg !7208
  %162 = load float, float* %arrayidx217, align 4, !dbg !7208
  %mul218 = fmul float %fneg216, %162, !dbg !7209
  %163 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7210
  %force219 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %163, i32 0, i32 5, !dbg !7211
  %arrayidx220 = getelementptr inbounds [3 x float], [3 x float]* %force219, i64 0, i64 1, !dbg !7210
  %164 = load float, float* %arrayidx220, align 4, !dbg !7212
  %add221 = fadd float %164, %mul218, !dbg !7212
  store float %add221, float* %arrayidx220, align 4, !dbg !7212
  %165 = load float, float* %ks, align 4, !dbg !7213
  %fneg222 = fneg float %165, !dbg !7214
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 2, !dbg !7215
  %166 = load float, float* %arrayidx223, align 4, !dbg !7215
  %mul224 = fmul float %fneg222, %166, !dbg !7216
  %167 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7217
  %force225 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %167, i32 0, i32 5, !dbg !7218
  %arrayidx226 = getelementptr inbounds [3 x float], [3 x float]* %force225, i64 0, i64 2, !dbg !7217
  %168 = load float, float* %arrayidx226, align 4, !dbg !7219
  %add227 = fadd float %168, %mul224, !dbg !7219
  store float %add227, float* %arrayidx226, align 4, !dbg !7219
  %169 = load i32, i32* %nl_flags.addr, align 4, !dbg !7220
  %and228 = and i32 %169, 1, !dbg !7222
  %tobool229 = icmp ne i32 %and228, 0, !dbg !7222
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !7223

if.then230:                                       ; preds = %if.then200
  br label %if.end231, !dbg !7224

if.end231:                                        ; preds = %if.then230, %if.then200
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !7226
  %170 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7227
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %170, i32 0, i32 0, !dbg !7228
  %arraydecay233 = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !7227
  %171 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7229
  %origE = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %171, i32 0, i32 1, !dbg !7230
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %origE, i64 0, i64 0, !dbg !7229
  call void @sub_v3_v3v3(float* %arraydecay232, float* %arraydecay233, float* %arraydecay234), !dbg !7231
  %172 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7232
  %goalfrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %172, i32 0, i32 14, !dbg !7233
  %173 = load float, float* %goalfrict, align 4, !dbg !7233
  %174 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7234
  %call235 = call float @sb_fric_force_scale(%struct.Object* %174), !dbg !7235
  %mul236 = fmul float %173, %call235, !dbg !7236
  store float %mul236, float* %kd, align 4, !dbg !7237
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !7238
  %arraydecay238 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !7239
  %175 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7240
  %vec239 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %175, i32 0, i32 4, !dbg !7241
  %arraydecay240 = getelementptr inbounds [3 x float], [3 x float]* %vec239, i64 0, i64 0, !dbg !7240
  call void @add_v3_v3v3(float* %arraydecay237, float* %arraydecay238, float* %arraydecay240), !dbg !7242
  %176 = load float, float* %forcetime.addr, align 4, !dbg !7243
  %cmp241 = fcmp ogt float %176, 0.000000e+00, !dbg !7245
  br i1 %cmp241, label %if.then243, label %if.else265, !dbg !7246

if.then243:                                       ; preds = %if.end231
  %177 = load float, float* %kd, align 4, !dbg !7247
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !7249
  %178 = load float, float* %arrayidx244, align 4, !dbg !7249
  %mul245 = fmul float %177, %178, !dbg !7250
  %179 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7251
  %force246 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %179, i32 0, i32 5, !dbg !7252
  %arrayidx247 = getelementptr inbounds [3 x float], [3 x float]* %force246, i64 0, i64 0, !dbg !7251
  %180 = load float, float* %arrayidx247, align 4, !dbg !7253
  %sub248 = fsub float %180, %mul245, !dbg !7253
  store float %sub248, float* %arrayidx247, align 4, !dbg !7253
  %181 = load float, float* %kd, align 4, !dbg !7254
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 1, !dbg !7255
  %182 = load float, float* %arrayidx249, align 4, !dbg !7255
  %mul250 = fmul float %181, %182, !dbg !7256
  %183 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7257
  %force251 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %183, i32 0, i32 5, !dbg !7258
  %arrayidx252 = getelementptr inbounds [3 x float], [3 x float]* %force251, i64 0, i64 1, !dbg !7257
  %184 = load float, float* %arrayidx252, align 4, !dbg !7259
  %sub253 = fsub float %184, %mul250, !dbg !7259
  store float %sub253, float* %arrayidx252, align 4, !dbg !7259
  %185 = load float, float* %kd, align 4, !dbg !7260
  %arrayidx254 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 2, !dbg !7261
  %186 = load float, float* %arrayidx254, align 4, !dbg !7261
  %mul255 = fmul float %185, %186, !dbg !7262
  %187 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7263
  %force256 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %187, i32 0, i32 5, !dbg !7264
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %force256, i64 0, i64 2, !dbg !7263
  %188 = load float, float* %arrayidx257, align 4, !dbg !7265
  %sub258 = fsub float %188, %mul255, !dbg !7265
  store float %sub258, float* %arrayidx257, align 4, !dbg !7265
  %189 = load i32, i32* %nl_flags.addr, align 4, !dbg !7266
  %and259 = and i32 %189, 1, !dbg !7268
  %tobool260 = icmp ne i32 %and259, 0, !dbg !7268
  br i1 %tobool260, label %if.then261, label %if.end264, !dbg !7269

if.then261:                                       ; preds = %if.then243
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !7270
  %call263 = call float @normalize_v3(float* %arraydecay262), !dbg !7272
  br label %if.end264, !dbg !7273

if.end264:                                        ; preds = %if.then261, %if.then243
  br label %if.end290, !dbg !7274

if.else265:                                       ; preds = %if.end231
  %190 = load float, float* %kd, align 4, !dbg !7275
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !7277
  %191 = load float, float* %arrayidx266, align 4, !dbg !7277
  %192 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7278
  %vec267 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %192, i32 0, i32 4, !dbg !7279
  %arrayidx268 = getelementptr inbounds [3 x float], [3 x float]* %vec267, i64 0, i64 0, !dbg !7278
  %193 = load float, float* %arrayidx268, align 8, !dbg !7278
  %sub269 = fsub float %191, %193, !dbg !7280
  %mul270 = fmul float %190, %sub269, !dbg !7281
  %194 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7282
  %force271 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %194, i32 0, i32 5, !dbg !7283
  %arrayidx272 = getelementptr inbounds [3 x float], [3 x float]* %force271, i64 0, i64 0, !dbg !7282
  %195 = load float, float* %arrayidx272, align 4, !dbg !7284
  %sub273 = fsub float %195, %mul270, !dbg !7284
  store float %sub273, float* %arrayidx272, align 4, !dbg !7284
  %196 = load float, float* %kd, align 4, !dbg !7285
  %arrayidx274 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 1, !dbg !7286
  %197 = load float, float* %arrayidx274, align 4, !dbg !7286
  %198 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7287
  %vec275 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %198, i32 0, i32 4, !dbg !7288
  %arrayidx276 = getelementptr inbounds [3 x float], [3 x float]* %vec275, i64 0, i64 1, !dbg !7287
  %199 = load float, float* %arrayidx276, align 4, !dbg !7287
  %sub277 = fsub float %197, %199, !dbg !7289
  %mul278 = fmul float %196, %sub277, !dbg !7290
  %200 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7291
  %force279 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %200, i32 0, i32 5, !dbg !7292
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %force279, i64 0, i64 1, !dbg !7291
  %201 = load float, float* %arrayidx280, align 4, !dbg !7293
  %sub281 = fsub float %201, %mul278, !dbg !7293
  store float %sub281, float* %arrayidx280, align 4, !dbg !7293
  %202 = load float, float* %kd, align 4, !dbg !7294
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 2, !dbg !7295
  %203 = load float, float* %arrayidx282, align 4, !dbg !7295
  %204 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7296
  %vec283 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %204, i32 0, i32 4, !dbg !7297
  %arrayidx284 = getelementptr inbounds [3 x float], [3 x float]* %vec283, i64 0, i64 2, !dbg !7296
  %205 = load float, float* %arrayidx284, align 8, !dbg !7296
  %sub285 = fsub float %203, %205, !dbg !7298
  %mul286 = fmul float %202, %sub285, !dbg !7299
  %206 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7300
  %force287 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %206, i32 0, i32 5, !dbg !7301
  %arrayidx288 = getelementptr inbounds [3 x float], [3 x float]* %force287, i64 0, i64 2, !dbg !7300
  %207 = load float, float* %arrayidx288, align 4, !dbg !7302
  %sub289 = fsub float %207, %mul286, !dbg !7302
  store float %sub289, float* %arrayidx288, align 4, !dbg !7302
  br label %if.end290

if.end290:                                        ; preds = %if.else265, %if.end264
  br label %if.end291, !dbg !7303

if.end291:                                        ; preds = %if.end290, %if.then195
  %208 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7304
  %force292 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %208, i32 0, i32 5, !dbg !7305
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %force292, i64 0, i64 0, !dbg !7304
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !7306
  %209 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7307
  %210 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7308
  %call295 = call float @_final_mass(%struct.Object* %209, %struct.BodyPoint* %210), !dbg !7309
  call void @madd_v3_v3fl(float* %arraydecay293, float* %arraydecay294, float %call295), !dbg !7310
  %211 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !7311
  %tobool296 = icmp ne %struct.ListBase* %211, null, !dbg !7311
  br i1 %tobool296, label %if.then297, label %if.else345, !dbg !7313

if.then297:                                       ; preds = %if.end291
  call void @llvm.dbg.declare(metadata %struct.EffectedPoint* %epoint, metadata !7314, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata [3 x float]* %force298, metadata !7331, metadata !DIExpression()), !dbg !7332
  %212 = bitcast [3 x float]* %force298 to i8*, !dbg !7332
  call void @llvm.memset.p0i8.i64(i8* align 4 %212, i8 0, i64 12, i1 false), !dbg !7332
  call void @llvm.dbg.declare(metadata [3 x float]* %speed, metadata !7333, metadata !DIExpression()), !dbg !7334
  %213 = bitcast [3 x float]* %speed to i8*, !dbg !7334
  call void @llvm.memset.p0i8.i64(i8* align 4 %213, i8 0, i64 12, i1 false), !dbg !7334
  call void @llvm.dbg.declare(metadata float* %eval_sb_fric_force_scale, metadata !7335, metadata !DIExpression()), !dbg !7336
  %214 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7337
  %call299 = call float @sb_fric_force_scale(%struct.Object* %214), !dbg !7338
  store float %call299, float* %eval_sb_fric_force_scale, align 4, !dbg !7336
  %215 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7339
  %216 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7340
  %pos300 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %216, i32 0, i32 3, !dbg !7341
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %pos300, i64 0, i64 0, !dbg !7340
  %217 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7342
  %vec302 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %217, i32 0, i32 4, !dbg !7343
  %arraydecay303 = getelementptr inbounds [3 x float], [3 x float]* %vec302, i64 0, i64 0, !dbg !7342
  %218 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7344
  %bpoint304 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %218, i32 0, i32 2, !dbg !7345
  %219 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint304, align 8, !dbg !7345
  %220 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7346
  %sub.ptr.lhs.cast = ptrtoint %struct.BodyPoint* %219 to i64, !dbg !7347
  %sub.ptr.rhs.cast = ptrtoint %struct.BodyPoint* %220 to i64, !dbg !7347
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7347
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 192, !dbg !7347
  %conv305 = trunc i64 %sub.ptr.div to i32, !dbg !7344
  call void @pd_point_from_soft(%struct.Scene* %215, float* %arraydecay301, float* %arraydecay303, i32 %conv305, %struct.EffectedPoint* %epoint), !dbg !7348
  %221 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !7349
  %222 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7350
  %effector_weights306 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %222, i32 0, i32 49, !dbg !7351
  %223 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights306, align 8, !dbg !7351
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %force298, i64 0, i64 0, !dbg !7352
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !7353
  call void @pdDoEffectors(%struct.ListBase* %221, %struct.ListBase* null, %struct.EffectorWeights* %223, %struct.EffectedPoint* %epoint, float* %arraydecay307, float* %arraydecay308), !dbg !7354
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %force298, i64 0, i64 0, !dbg !7355
  %224 = load float, float* %fieldfactor, align 4, !dbg !7356
  %225 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !7357
  %mul310 = fmul float %224, %225, !dbg !7358
  call void @mul_v3_fl(float* %arraydecay309, float %mul310), !dbg !7359
  %226 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7360
  %force311 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %226, i32 0, i32 5, !dbg !7361
  %arraydecay312 = getelementptr inbounds [3 x float], [3 x float]* %force311, i64 0, i64 0, !dbg !7360
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %force298, i64 0, i64 0, !dbg !7362
  call void @add_v3_v3(float* %arraydecay312, float* %arraydecay313), !dbg !7363
  %227 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7364
  %mediafrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %227, i32 0, i32 10, !dbg !7365
  %228 = load float, float* %mediafrict, align 4, !dbg !7365
  %229 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !7366
  %mul314 = fmul float %228, %229, !dbg !7367
  store float %mul314, float* %kd, align 4, !dbg !7368
  %230 = load float, float* %kd, align 4, !dbg !7369
  %231 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7370
  %vec315 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %231, i32 0, i32 4, !dbg !7371
  %arrayidx316 = getelementptr inbounds [3 x float], [3 x float]* %vec315, i64 0, i64 0, !dbg !7370
  %232 = load float, float* %arrayidx316, align 8, !dbg !7370
  %233 = load float, float* %windfactor, align 4, !dbg !7372
  %arrayidx317 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !7373
  %234 = load float, float* %arrayidx317, align 4, !dbg !7373
  %mul318 = fmul float %233, %234, !dbg !7374
  %235 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !7375
  %div319 = fdiv float %mul318, %235, !dbg !7376
  %add320 = fadd float %232, %div319, !dbg !7377
  %mul321 = fmul float %230, %add320, !dbg !7378
  %236 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7379
  %force322 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %236, i32 0, i32 5, !dbg !7380
  %arrayidx323 = getelementptr inbounds [3 x float], [3 x float]* %force322, i64 0, i64 0, !dbg !7379
  %237 = load float, float* %arrayidx323, align 4, !dbg !7381
  %sub324 = fsub float %237, %mul321, !dbg !7381
  store float %sub324, float* %arrayidx323, align 4, !dbg !7381
  %238 = load float, float* %kd, align 4, !dbg !7382
  %239 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7383
  %vec325 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %239, i32 0, i32 4, !dbg !7384
  %arrayidx326 = getelementptr inbounds [3 x float], [3 x float]* %vec325, i64 0, i64 1, !dbg !7383
  %240 = load float, float* %arrayidx326, align 4, !dbg !7383
  %241 = load float, float* %windfactor, align 4, !dbg !7385
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 1, !dbg !7386
  %242 = load float, float* %arrayidx327, align 4, !dbg !7386
  %mul328 = fmul float %241, %242, !dbg !7387
  %243 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !7388
  %div329 = fdiv float %mul328, %243, !dbg !7389
  %add330 = fadd float %240, %div329, !dbg !7390
  %mul331 = fmul float %238, %add330, !dbg !7391
  %244 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7392
  %force332 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %244, i32 0, i32 5, !dbg !7393
  %arrayidx333 = getelementptr inbounds [3 x float], [3 x float]* %force332, i64 0, i64 1, !dbg !7392
  %245 = load float, float* %arrayidx333, align 4, !dbg !7394
  %sub334 = fsub float %245, %mul331, !dbg !7394
  store float %sub334, float* %arrayidx333, align 4, !dbg !7394
  %246 = load float, float* %kd, align 4, !dbg !7395
  %247 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7396
  %vec335 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %247, i32 0, i32 4, !dbg !7397
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %vec335, i64 0, i64 2, !dbg !7396
  %248 = load float, float* %arrayidx336, align 8, !dbg !7396
  %249 = load float, float* %windfactor, align 4, !dbg !7398
  %arrayidx337 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 2, !dbg !7399
  %250 = load float, float* %arrayidx337, align 4, !dbg !7399
  %mul338 = fmul float %249, %250, !dbg !7400
  %251 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !7401
  %div339 = fdiv float %mul338, %251, !dbg !7402
  %add340 = fadd float %248, %div339, !dbg !7403
  %mul341 = fmul float %246, %add340, !dbg !7404
  %252 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7405
  %force342 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %252, i32 0, i32 5, !dbg !7406
  %arrayidx343 = getelementptr inbounds [3 x float], [3 x float]* %force342, i64 0, i64 2, !dbg !7405
  %253 = load float, float* %arrayidx343, align 4, !dbg !7407
  %sub344 = fsub float %253, %mul341, !dbg !7407
  store float %sub344, float* %arrayidx343, align 4, !dbg !7407
  br label %if.end371, !dbg !7408

if.else345:                                       ; preds = %if.end291
  %254 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7409
  %mediafrict346 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %254, i32 0, i32 10, !dbg !7411
  %255 = load float, float* %mediafrict346, align 4, !dbg !7411
  %256 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7412
  %call347 = call float @sb_fric_force_scale(%struct.Object* %256), !dbg !7413
  %mul348 = fmul float %255, %call347, !dbg !7414
  store float %mul348, float* %kd, align 4, !dbg !7415
  %257 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7416
  %vec349 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %257, i32 0, i32 4, !dbg !7417
  %arrayidx350 = getelementptr inbounds [3 x float], [3 x float]* %vec349, i64 0, i64 0, !dbg !7416
  %258 = load float, float* %arrayidx350, align 8, !dbg !7416
  %259 = load float, float* %kd, align 4, !dbg !7418
  %mul351 = fmul float %258, %259, !dbg !7419
  %260 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7420
  %force352 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %260, i32 0, i32 5, !dbg !7421
  %arrayidx353 = getelementptr inbounds [3 x float], [3 x float]* %force352, i64 0, i64 0, !dbg !7420
  %261 = load float, float* %arrayidx353, align 4, !dbg !7422
  %sub354 = fsub float %261, %mul351, !dbg !7422
  store float %sub354, float* %arrayidx353, align 4, !dbg !7422
  %262 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7423
  %vec355 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %262, i32 0, i32 4, !dbg !7424
  %arrayidx356 = getelementptr inbounds [3 x float], [3 x float]* %vec355, i64 0, i64 1, !dbg !7423
  %263 = load float, float* %arrayidx356, align 4, !dbg !7423
  %264 = load float, float* %kd, align 4, !dbg !7425
  %mul357 = fmul float %263, %264, !dbg !7426
  %265 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7427
  %force358 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %265, i32 0, i32 5, !dbg !7428
  %arrayidx359 = getelementptr inbounds [3 x float], [3 x float]* %force358, i64 0, i64 1, !dbg !7427
  %266 = load float, float* %arrayidx359, align 4, !dbg !7429
  %sub360 = fsub float %266, %mul357, !dbg !7429
  store float %sub360, float* %arrayidx359, align 4, !dbg !7429
  %267 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7430
  %vec361 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %267, i32 0, i32 4, !dbg !7431
  %arrayidx362 = getelementptr inbounds [3 x float], [3 x float]* %vec361, i64 0, i64 2, !dbg !7430
  %268 = load float, float* %arrayidx362, align 8, !dbg !7430
  %269 = load float, float* %kd, align 4, !dbg !7432
  %mul363 = fmul float %268, %269, !dbg !7433
  %270 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7434
  %force364 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %270, i32 0, i32 5, !dbg !7435
  %arrayidx365 = getelementptr inbounds [3 x float], [3 x float]* %force364, i64 0, i64 2, !dbg !7434
  %271 = load float, float* %arrayidx365, align 4, !dbg !7436
  %sub366 = fsub float %271, %mul363, !dbg !7436
  store float %sub366, float* %arrayidx365, align 4, !dbg !7436
  %272 = load i32, i32* %nl_flags.addr, align 4, !dbg !7437
  %and367 = and i32 %272, 1, !dbg !7439
  %tobool368 = icmp ne i32 %and367, 0, !dbg !7439
  br i1 %tobool368, label %if.then369, label %if.end370, !dbg !7440

if.then369:                                       ; preds = %if.else345
  br label %if.end370, !dbg !7441

if.end370:                                        ; preds = %if.then369, %if.else345
  br label %if.end371

if.end371:                                        ; preds = %if.end370, %if.then297
  %273 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7443
  %choke = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %273, i32 0, i32 15, !dbg !7444
  store float 0.000000e+00, float* %choke, align 8, !dbg !7445
  %274 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7446
  %choke2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %274, i32 0, i32 16, !dbg !7447
  store float 0.000000e+00, float* %choke2, align 4, !dbg !7448
  %275 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7449
  %loc_flag = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %275, i32 0, i32 19, !dbg !7450
  %276 = load i16, i16* %loc_flag, align 8, !dbg !7451
  %conv372 = sext i16 %276 to i32, !dbg !7451
  %and373 = and i32 %conv372, -2, !dbg !7451
  %conv374 = trunc i32 %and373 to i16, !dbg !7451
  store i16 %conv374, i16* %loc_flag, align 8, !dbg !7451
  %277 = load i32, i32* %do_deflector, align 4, !dbg !7452
  %tobool375 = icmp ne i32 %277, 0, !dbg !7452
  br i1 %tobool375, label %if.then376, label %if.end441, !dbg !7454

if.then376:                                       ; preds = %if.end371
  call void @llvm.dbg.declare(metadata [3 x float]* %cfforce, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata [3 x float]* %defforce377, metadata !7458, metadata !DIExpression()), !dbg !7459
  %278 = bitcast [3 x float]* %defforce377 to i8*, !dbg !7459
  call void @llvm.memset.p0i8.i64(i8* align 4 %278, i8 0, i64 12, i1 false), !dbg !7459
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !7460, metadata !DIExpression()), !dbg !7461
  %279 = bitcast [3 x float]* %vel to i8*, !dbg !7461
  call void @llvm.memset.p0i8.i64(i8* align 4 %279, i8 0, i64 12, i1 false), !dbg !7461
  call void @llvm.dbg.declare(metadata [3 x float]* %facenormal, metadata !7462, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.declare(metadata float* %cf, metadata !7464, metadata !DIExpression()), !dbg !7465
  store float 1.000000e+00, float* %cf, align 4, !dbg !7465
  call void @llvm.dbg.declare(metadata float* %intrusion, metadata !7466, metadata !DIExpression()), !dbg !7467
  store float 1.000000e+00, float* %kd, align 4, !dbg !7468
  %280 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7469
  %281 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7471
  %pos378 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %281, i32 0, i32 3, !dbg !7472
  %arraydecay379 = getelementptr inbounds [3 x float], [3 x float]* %pos378, i64 0, i64 0, !dbg !7471
  %arraydecay380 = getelementptr inbounds [3 x float], [3 x float]* %facenormal, i64 0, i64 0, !dbg !7473
  %arraydecay381 = getelementptr inbounds [3 x float], [3 x float]* %defforce377, i64 0, i64 0, !dbg !7474
  %282 = load float, float* %timenow.addr, align 4, !dbg !7475
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !7476
  %call383 = call i32 @sb_deflect_face(%struct.Object* %280, float* %arraydecay379, float* %arraydecay380, float* %arraydecay381, float* %cf, float %282, float* %arraydecay382, float* %intrusion), !dbg !7477
  %tobool384 = icmp ne i32 %call383, 0, !dbg !7477
  br i1 %tobool384, label %if.then385, label %if.end440, !dbg !7478

if.then385:                                       ; preds = %if.then376
  %283 = load i32, i32* %nl_flags.addr, align 4, !dbg !7479
  %tobool386 = icmp ne i32 %283, 0, !dbg !7479
  br i1 %tobool386, label %if.else422, label %land.lhs.true387, !dbg !7482

land.lhs.true387:                                 ; preds = %if.then385
  %284 = load float, float* %intrusion, align 4, !dbg !7483
  %cmp388 = fcmp olt float %284, 0.000000e+00, !dbg !7484
  br i1 %cmp388, label %if.then390, label %if.else422, !dbg !7485

if.then390:                                       ; preds = %land.lhs.true387
  %285 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 14), align 4, !dbg !7486
  %conv391 = sext i16 %285 to i32, !dbg !7489
  %and392 = and i32 %conv391, 1, !dbg !7490
  %tobool393 = icmp ne i32 %and392, 0, !dbg !7490
  br i1 %tobool393, label %if.then394, label %if.else399, !dbg !7491

if.then394:                                       ; preds = %if.then390
  %286 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7492
  %pos395 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %286, i32 0, i32 3, !dbg !7494
  %arraydecay396 = getelementptr inbounds [3 x float], [3 x float]* %pos395, i64 0, i64 0, !dbg !7492
  %287 = load float, float* %intrusion, align 4, !dbg !7495
  %fneg397 = fneg float %287, !dbg !7496
  %arraydecay398 = getelementptr inbounds [3 x float], [3 x float]* %facenormal, i64 0, i64 0, !dbg !7497
  call void @Vec3PlusStVec(float* %arraydecay396, float %fneg397, float* %arraydecay398), !dbg !7498
  br label %if.end409, !dbg !7499

if.else399:                                       ; preds = %if.then390
  %arraydecay400 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !7500
  %288 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7502
  %vec401 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %288, i32 0, i32 4, !dbg !7503
  %arraydecay402 = getelementptr inbounds [3 x float], [3 x float]* %vec401, i64 0, i64 0, !dbg !7502
  %arraydecay403 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !7504
  call void @sub_v3_v3v3(float* %arraydecay400, float* %arraydecay402, float* %arraydecay403), !dbg !7505
  %289 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7506
  %force404 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %289, i32 0, i32 5, !dbg !7507
  %arraydecay405 = getelementptr inbounds [3 x float], [3 x float]* %force404, i64 0, i64 0, !dbg !7506
  %290 = load float, float* %cf, align 4, !dbg !7508
  %fneg406 = fneg float %290, !dbg !7509
  %mul407 = fmul float %fneg406, 5.000000e+01, !dbg !7510
  %arraydecay408 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !7511
  call void @Vec3PlusStVec(float* %arraydecay405, float %mul407, float* %arraydecay408), !dbg !7512
  br label %if.end409

if.end409:                                        ; preds = %if.else399, %if.then394
  %291 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7513
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %291, i32 0, i32 44, !dbg !7514
  %292 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !7514
  %flag410 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %292, i32 0, i32 2, !dbg !7515
  %293 = load i16, i16* %flag410, align 2, !dbg !7516
  %conv411 = sext i16 %293 to i32, !dbg !7516
  %or = or i32 %conv411, 1, !dbg !7516
  %conv412 = trunc i32 %or to i16, !dbg !7516
  store i16 %conv412, i16* %flag410, align 2, !dbg !7516
  %294 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7517
  %loc_flag413 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %294, i32 0, i32 19, !dbg !7518
  %295 = load i16, i16* %loc_flag413, align 8, !dbg !7519
  %conv414 = sext i16 %295 to i32, !dbg !7519
  %or415 = or i32 %conv414, 1, !dbg !7519
  %conv416 = trunc i32 %or415 to i16, !dbg !7519
  store i16 %conv416, i16* %loc_flag413, align 8, !dbg !7519
  %296 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7520
  %choke417 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %296, i32 0, i32 40, !dbg !7521
  %297 = load i16, i16* %choke417, align 8, !dbg !7521
  %conv418 = sext i16 %297 to i32, !dbg !7520
  %conv419 = sitofp i32 %conv418 to float, !dbg !7520
  %mul420 = fmul float %conv419, 0x3F847AE140000000, !dbg !7522
  %298 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7523
  %choke421 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %298, i32 0, i32 15, !dbg !7524
  store float %mul420, float* %choke421, align 8, !dbg !7525
  br label %if.end432, !dbg !7526

if.else422:                                       ; preds = %land.lhs.true387, %if.then385
  %arraydecay423 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !7527
  %299 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7529
  %vec424 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %299, i32 0, i32 4, !dbg !7530
  %arraydecay425 = getelementptr inbounds [3 x float], [3 x float]* %vec424, i64 0, i64 0, !dbg !7529
  %arraydecay426 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !7531
  call void @sub_v3_v3v3(float* %arraydecay423, float* %arraydecay425, float* %arraydecay426), !dbg !7532
  %300 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7533
  %force427 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %300, i32 0, i32 5, !dbg !7534
  %arraydecay428 = getelementptr inbounds [3 x float], [3 x float]* %force427, i64 0, i64 0, !dbg !7533
  %301 = load float, float* %cf, align 4, !dbg !7535
  %fneg429 = fneg float %301, !dbg !7536
  %mul430 = fmul float %fneg429, 5.000000e+01, !dbg !7537
  %arraydecay431 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !7538
  call void @Vec3PlusStVec(float* %arraydecay428, float %mul430, float* %arraydecay431), !dbg !7539
  br label %if.end432

if.end432:                                        ; preds = %if.else422, %if.end409
  %302 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7540
  %force433 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %302, i32 0, i32 5, !dbg !7541
  %arraydecay434 = getelementptr inbounds [3 x float], [3 x float]* %force433, i64 0, i64 0, !dbg !7540
  %303 = load float, float* %kd, align 4, !dbg !7542
  %arraydecay435 = getelementptr inbounds [3 x float], [3 x float]* %defforce377, i64 0, i64 0, !dbg !7543
  call void @Vec3PlusStVec(float* %arraydecay434, float %303, float* %arraydecay435), !dbg !7544
  %304 = load i32, i32* %nl_flags.addr, align 4, !dbg !7545
  %and436 = and i32 %304, 1, !dbg !7547
  %tobool437 = icmp ne i32 %and436, 0, !dbg !7547
  br i1 %tobool437, label %if.then438, label %if.end439, !dbg !7548

if.then438:                                       ; preds = %if.end432
  br label %if.end439, !dbg !7549

if.end439:                                        ; preds = %if.then438, %if.end432
  br label %if.end440, !dbg !7551

if.end440:                                        ; preds = %if.end439, %if.then376
  br label %if.end441, !dbg !7552

if.end441:                                        ; preds = %if.end440, %if.end371
  %305 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7553
  %softflag442 = getelementptr inbounds %struct.Object, %struct.Object* %305, i32 0, i32 104, !dbg !7555
  %306 = load i16, i16* %softflag442, align 2, !dbg !7555
  %conv443 = sext i16 %306 to i32, !dbg !7553
  %and444 = and i32 %conv443, 4, !dbg !7556
  %tobool445 = icmp ne i32 %and444, 0, !dbg !7556
  br i1 %tobool445, label %if.then446, label %if.end484, !dbg !7557

if.then446:                                       ; preds = %if.end441
  %307 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7558
  %bspring447 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %307, i32 0, i32 3, !dbg !7561
  %308 = load %struct.BodySpring*, %struct.BodySpring** %bspring447, align 8, !dbg !7561
  %tobool448 = icmp ne %struct.BodySpring* %308, null, !dbg !7558
  br i1 %tobool448, label %if.then449, label %if.end483, !dbg !7562

if.then449:                                       ; preds = %if.then446
  %309 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7563
  %nofsprings450 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %309, i32 0, i32 13, !dbg !7566
  %310 = load i32, i32* %nofsprings450, align 4, !dbg !7566
  store i32 %310, i32* %b, align 4, !dbg !7567
  br label %for.cond451, !dbg !7568

for.cond451:                                      ; preds = %for.inc480, %if.then449
  %311 = load i32, i32* %b, align 4, !dbg !7569
  %cmp452 = icmp sgt i32 %311, 0, !dbg !7571
  br i1 %cmp452, label %for.body454, label %for.end482, !dbg !7572

for.body454:                                      ; preds = %for.cond451
  %312 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7573
  %bspring455 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %312, i32 0, i32 3, !dbg !7575
  %313 = load %struct.BodySpring*, %struct.BodySpring** %bspring455, align 8, !dbg !7575
  %314 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7576
  %springs456 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %314, i32 0, i32 14, !dbg !7577
  %315 = load i32*, i32** %springs456, align 8, !dbg !7577
  %316 = load i32, i32* %b, align 4, !dbg !7578
  %sub457 = sub nsw i32 %316, 1, !dbg !7579
  %idxprom458 = sext i32 %sub457 to i64, !dbg !7576
  %arrayidx459 = getelementptr inbounds i32, i32* %315, i64 %idxprom458, !dbg !7576
  %317 = load i32, i32* %arrayidx459, align 4, !dbg !7576
  %idx.ext460 = sext i32 %317 to i64, !dbg !7580
  %add.ptr461 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %313, i64 %idx.ext460, !dbg !7580
  store %struct.BodySpring* %add.ptr461, %struct.BodySpring** %bs, align 8, !dbg !7581
  %318 = load i32, i32* %do_springcollision, align 4, !dbg !7582
  %tobool462 = icmp ne i32 %318, 0, !dbg !7582
  br i1 %tobool462, label %if.then465, label %lor.lhs.false463, !dbg !7584

lor.lhs.false463:                                 ; preds = %for.body454
  %319 = load i32, i32* %do_aero, align 4, !dbg !7585
  %tobool464 = icmp ne i32 %319, 0, !dbg !7585
  br i1 %tobool464, label %if.then465, label %if.end477, !dbg !7586

if.then465:                                       ; preds = %lor.lhs.false463, %for.body454
  %320 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7587
  %force466 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %320, i32 0, i32 5, !dbg !7589
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %force466, i64 0, i64 0, !dbg !7587
  %321 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7590
  %ext_force = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %321, i32 0, i32 5, !dbg !7591
  %arraydecay468 = getelementptr inbounds [3 x float], [3 x float]* %ext_force, i64 0, i64 0, !dbg !7590
  call void @add_v3_v3(float* %arraydecay467, float* %arraydecay468), !dbg !7592
  %322 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7593
  %flag469 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %322, i32 0, i32 7, !dbg !7595
  %323 = load i16, i16* %flag469, align 4, !dbg !7595
  %conv470 = sext i16 %323 to i32, !dbg !7593
  %and471 = and i32 %conv470, 1, !dbg !7596
  %tobool472 = icmp ne i32 %and471, 0, !dbg !7596
  br i1 %tobool472, label %if.then473, label %if.end476, !dbg !7597

if.then473:                                       ; preds = %if.then465
  %324 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7598
  %cf474 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %324, i32 0, i32 3, !dbg !7599
  %325 = load float, float* %cf474, align 4, !dbg !7599
  %326 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7600
  %choke475 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %326, i32 0, i32 15, !dbg !7601
  store float %325, float* %choke475, align 8, !dbg !7602
  br label %if.end476, !dbg !7600

if.end476:                                        ; preds = %if.then473, %if.then465
  br label %if.end477, !dbg !7603

if.end477:                                        ; preds = %if.end476, %lor.lhs.false463
  %327 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7604
  %328 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7605
  %totpoint478 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %328, i32 0, i32 0, !dbg !7606
  %329 = load i32, i32* %totpoint478, align 8, !dbg !7606
  %330 = load i32, i32* %a, align 4, !dbg !7607
  %sub479 = sub nsw i32 %329, %330, !dbg !7608
  %331 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !7609
  %332 = load float, float* %iks, align 4, !dbg !7610
  %333 = load float, float* %forcetime.addr, align 4, !dbg !7611
  call void @sb_spring_force(%struct.Object* %327, i32 %sub479, %struct.BodySpring* %331, float %332, float %333, i32 0), !dbg !7612
  br label %for.inc480, !dbg !7613

for.inc480:                                       ; preds = %if.end477
  %334 = load i32, i32* %b, align 4, !dbg !7614
  %dec481 = add nsw i32 %334, -1, !dbg !7614
  store i32 %dec481, i32* %b, align 4, !dbg !7614
  br label %for.cond451, !dbg !7615, !llvm.loop !7616

for.end482:                                       ; preds = %for.cond451
  br label %if.end483, !dbg !7618

if.end483:                                        ; preds = %for.end482, %if.then446
  br label %if.end484, !dbg !7619

if.end484:                                        ; preds = %if.end483, %if.end441
  br label %if.end485, !dbg !7620

if.end485:                                        ; preds = %if.end484, %if.end191
  br label %for.inc486, !dbg !7621

for.inc486:                                       ; preds = %if.end485
  %335 = load i32, i32* %a, align 4, !dbg !7622
  %dec487 = add nsw i32 %335, -1, !dbg !7622
  store i32 %dec487, i32* %a, align 4, !dbg !7622
  %336 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7623
  %incdec.ptr488 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %336, i32 1, !dbg !7623
  store %struct.BodyPoint* %incdec.ptr488, %struct.BodyPoint** %bp, align 8, !dbg !7623
  br label %for.cond, !dbg !7624, !llvm.loop !7625

for.end489:                                       ; preds = %for.cond
  %337 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7627
  %softflag490 = getelementptr inbounds %struct.Object, %struct.Object* %337, i32 0, i32 104, !dbg !7629
  %338 = load i16, i16* %softflag490, align 2, !dbg !7629
  %conv491 = sext i16 %338 to i32, !dbg !7627
  %and492 = and i32 %conv491, 1024, !dbg !7630
  %tobool493 = icmp ne i32 %and492, 0, !dbg !7630
  br i1 %tobool493, label %if.then494, label %if.end495, !dbg !7631

if.then494:                                       ; preds = %for.end489
  %339 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7632
  %340 = load float, float* %timenow.addr, align 4, !dbg !7633
  call void @scan_for_ext_face_forces(%struct.Object* %339, float %340), !dbg !7634
  br label %if.end495, !dbg !7634

if.end495:                                        ; preds = %if.then494, %for.end489
  call void @pdEndEffectors(%struct.ListBase** %do_effector), !dbg !7635
  br label %if.end496

if.end496:                                        ; preds = %if.then, %if.end495
  ret void, !dbg !7636
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_apply_forces(%struct.Object* %ob, float %forcetime, i32 %mode, float* %err, i32 %mid_flags) #0 !dbg !7637 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %forcetime.addr = alloca float, align 4
  %mode.addr = alloca i32, align 4
  %err.addr = alloca float*, align 8
  %mid_flags.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %dx = alloca [3 x float], align 4
  %dv = alloca [3 x float], align 4
  %aabbmin = alloca [3 x float], align 4
  %aabbmax = alloca [3 x float], align 4
  %cm = alloca [3 x float], align 4
  %timeovermass = alloca float, align 4
  %maxerrpos = alloca float, align 4
  %maxerrvel = alloca float, align 4
  %a = alloca i32, align 4
  %fuzzy = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store float %forcetime, float* %forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %forcetime.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  store float* %err, float** %err.addr, align 8
  call void @llvm.dbg.declare(metadata float** %err.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store i32 %mid_flags, i32* %mid_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mid_flags.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !7650, metadata !DIExpression()), !dbg !7651
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7652
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !7653
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !7653
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !7651
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !7654, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata [3 x float]* %dx, metadata !7656, metadata !DIExpression()), !dbg !7657
  %2 = bitcast [3 x float]* %dx to i8*, !dbg !7657
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !7657
  call void @llvm.dbg.declare(metadata [3 x float]* %dv, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmin, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmax, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata [3 x float]* %cm, metadata !7664, metadata !DIExpression()), !dbg !7665
  %3 = bitcast [3 x float]* %cm to i8*, !dbg !7665
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 12, i1 false), !dbg !7665
  call void @llvm.dbg.declare(metadata float* %timeovermass, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata float* %maxerrpos, metadata !7668, metadata !DIExpression()), !dbg !7669
  store float 0.000000e+00, float* %maxerrpos, align 4, !dbg !7669
  call void @llvm.dbg.declare(metadata float* %maxerrvel, metadata !7670, metadata !DIExpression()), !dbg !7671
  store float 0.000000e+00, float* %maxerrvel, align 4, !dbg !7671
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata i32* %fuzzy, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i32 0, i32* %fuzzy, align 4, !dbg !7675
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7676
  %call = call float @sb_time_scale(%struct.Object* %4), !dbg !7677
  %5 = load float, float* %forcetime.addr, align 4, !dbg !7678
  %mul = fmul float %5, %call, !dbg !7678
  store float %mul, float* %forcetime.addr, align 4, !dbg !7678
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !7679
  store float 0x4415AF1D80000000, float* %arrayidx, align 4, !dbg !7680
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !7681
  store float 0x4415AF1D80000000, float* %arrayidx1, align 4, !dbg !7682
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !7683
  store float 0x4415AF1D80000000, float* %arrayidx2, align 4, !dbg !7684
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !7685
  store float 0xC415AF1D80000000, float* %arrayidx3, align 4, !dbg !7686
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !7687
  store float 0xC415AF1D80000000, float* %arrayidx4, align 4, !dbg !7688
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !7689
  store float 0xC415AF1D80000000, float* %arrayidx5, align 4, !dbg !7690
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7691
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 0, !dbg !7693
  %7 = load i32, i32* %totpoint, align 8, !dbg !7693
  store i32 %7, i32* %a, align 4, !dbg !7694
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7695
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 2, !dbg !7696
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !7696
  store %struct.BodyPoint* %9, %struct.BodyPoint** %bp, align 8, !dbg !7697
  br label %for.cond, !dbg !7698

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %a, align 4, !dbg !7699
  %cmp = icmp sgt i32 %10, 0, !dbg !7701
  br i1 %cmp, label %for.body, label %for.end, !dbg !7702

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7703
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7706
  %call6 = call float @_final_mass(%struct.Object* %11, %struct.BodyPoint* %12), !dbg !7707
  %cmp7 = fcmp ogt float %call6, 0x3F847A5B00000000, !dbg !7708
  br i1 %cmp7, label %if.then, label %if.else, !dbg !7709

if.then:                                          ; preds = %for.body
  %13 = load float, float* %forcetime.addr, align 4, !dbg !7710
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7711
  %15 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7712
  %call8 = call float @_final_mass(%struct.Object* %14, %struct.BodyPoint* %15), !dbg !7713
  %div = fdiv float %13, %call8, !dbg !7714
  store float %div, float* %timeovermass, align 4, !dbg !7715
  br label %if.end, !dbg !7716

if.else:                                          ; preds = %for.body
  %16 = load float, float* %forcetime.addr, align 4, !dbg !7717
  %div9 = fdiv float %16, 0x3F847A5B00000000, !dbg !7718
  store float %div9, float* %timeovermass, align 4, !dbg !7719
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7720
  %18 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7722
  %call10 = call float @_final_goal(%struct.Object* %17, %struct.BodyPoint* %18), !dbg !7723
  %cmp11 = fcmp olt float %call10, 0x3FEFF7CEE0000000, !dbg !7724
  br i1 %cmp11, label %if.then12, label %if.end160, !dbg !7725

if.then12:                                        ; preds = %if.end
  %19 = load i32, i32* %mid_flags.addr, align 4, !dbg !7726
  %and = and i32 %19, 1, !dbg !7729
  %tobool = icmp ne i32 %and, 0, !dbg !7729
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !7730

if.then13:                                        ; preds = %if.then12
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7731
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7732
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %20, i32 0, i32 4, !dbg !7733
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7732
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay14), !dbg !7734
  br label %if.end15, !dbg !7734

if.end15:                                         ; preds = %if.then13, %if.then12
  %21 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7735
  %force = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %21, i32 0, i32 5, !dbg !7736
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !7735
  %22 = load float, float* %timeovermass, align 4, !dbg !7737
  call void @mul_v3_fl(float* %arraydecay16, float %22), !dbg !7738
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !7739
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7740
  %force18 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i32 0, i32 5, !dbg !7741
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %force18, i64 0, i64 0, !dbg !7740
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay19), !dbg !7742
  %24 = load i32, i32* %mode.addr, align 4, !dbg !7743
  %cmp20 = icmp eq i32 %24, 1, !dbg !7745
  br i1 %cmp20, label %if.then21, label %if.end27, !dbg !7746

if.then21:                                        ; preds = %if.end15
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7747
  %prevvec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i32 0, i32 8, !dbg !7749
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %prevvec, i64 0, i64 0, !dbg !7747
  %26 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7750
  %vec23 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %26, i32 0, i32 4, !dbg !7751
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec23, i64 0, i64 0, !dbg !7750
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay24), !dbg !7752
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7753
  %prevdv = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i32 0, i32 10, !dbg !7754
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %prevdv, i64 0, i64 0, !dbg !7753
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !7755
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay26), !dbg !7756
  br label %if.end27, !dbg !7757

if.end27:                                         ; preds = %if.then21, %if.end15
  %28 = load i32, i32* %mode.addr, align 4, !dbg !7758
  %cmp28 = icmp eq i32 %28, 2, !dbg !7760
  br i1 %cmp28, label %if.then29, label %if.else73, !dbg !7761

if.then29:                                        ; preds = %if.end27
  %29 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7762
  %prevvec30 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %29, i32 0, i32 8, !dbg !7764
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %prevvec30, i64 0, i64 0, !dbg !7762
  %30 = load float, float* %arrayidx31, align 8, !dbg !7762
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !7765
  %31 = load float, float* %arrayidx32, align 4, !dbg !7765
  %32 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7766
  %prevdv33 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %32, i32 0, i32 10, !dbg !7767
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %prevdv33, i64 0, i64 0, !dbg !7766
  %33 = load float, float* %arrayidx34, align 8, !dbg !7766
  %add = fadd float %31, %33, !dbg !7768
  %mul35 = fmul float 5.000000e-01, %add, !dbg !7769
  %add36 = fadd float %30, %mul35, !dbg !7770
  %34 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7771
  %vec37 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %34, i32 0, i32 4, !dbg !7772
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %vec37, i64 0, i64 0, !dbg !7771
  store float %add36, float* %arrayidx38, align 8, !dbg !7773
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7774
  %prevvec39 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i32 0, i32 8, !dbg !7775
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %prevvec39, i64 0, i64 1, !dbg !7774
  %36 = load float, float* %arrayidx40, align 4, !dbg !7774
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 1, !dbg !7776
  %37 = load float, float* %arrayidx41, align 4, !dbg !7776
  %38 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7777
  %prevdv42 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %38, i32 0, i32 10, !dbg !7778
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %prevdv42, i64 0, i64 1, !dbg !7777
  %39 = load float, float* %arrayidx43, align 4, !dbg !7777
  %add44 = fadd float %37, %39, !dbg !7779
  %mul45 = fmul float 5.000000e-01, %add44, !dbg !7780
  %add46 = fadd float %36, %mul45, !dbg !7781
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7782
  %vec47 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %40, i32 0, i32 4, !dbg !7783
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %vec47, i64 0, i64 1, !dbg !7782
  store float %add46, float* %arrayidx48, align 4, !dbg !7784
  %41 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7785
  %prevvec49 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %41, i32 0, i32 8, !dbg !7786
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %prevvec49, i64 0, i64 2, !dbg !7785
  %42 = load float, float* %arrayidx50, align 8, !dbg !7785
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 2, !dbg !7787
  %43 = load float, float* %arrayidx51, align 4, !dbg !7787
  %44 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7788
  %prevdv52 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %44, i32 0, i32 10, !dbg !7789
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %prevdv52, i64 0, i64 2, !dbg !7788
  %45 = load float, float* %arrayidx53, align 8, !dbg !7788
  %add54 = fadd float %43, %45, !dbg !7790
  %mul55 = fmul float 5.000000e-01, %add54, !dbg !7791
  %add56 = fadd float %42, %mul55, !dbg !7792
  %46 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7793
  %vec57 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %46, i32 0, i32 4, !dbg !7794
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %vec57, i64 0, i64 2, !dbg !7793
  store float %add56, float* %arrayidx58, align 8, !dbg !7795
  %47 = load float, float* %maxerrvel, align 4, !dbg !7796
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !7797
  %48 = load float, float* %arrayidx59, align 4, !dbg !7797
  %49 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7798
  %prevdv60 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %49, i32 0, i32 10, !dbg !7799
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %prevdv60, i64 0, i64 0, !dbg !7798
  %50 = load float, float* %arrayidx61, align 8, !dbg !7798
  %sub = fsub float %48, %50, !dbg !7800
  %51 = call float @llvm.fabs.f32(float %sub), !dbg !7801
  %call62 = call float @max_ff(float %47, float %51), !dbg !7802
  store float %call62, float* %maxerrvel, align 4, !dbg !7803
  %52 = load float, float* %maxerrvel, align 4, !dbg !7804
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 1, !dbg !7805
  %53 = load float, float* %arrayidx63, align 4, !dbg !7805
  %54 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7806
  %prevdv64 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %54, i32 0, i32 10, !dbg !7807
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %prevdv64, i64 0, i64 1, !dbg !7806
  %55 = load float, float* %arrayidx65, align 4, !dbg !7806
  %sub66 = fsub float %53, %55, !dbg !7808
  %56 = call float @llvm.fabs.f32(float %sub66), !dbg !7809
  %call67 = call float @max_ff(float %52, float %56), !dbg !7810
  store float %call67, float* %maxerrvel, align 4, !dbg !7811
  %57 = load float, float* %maxerrvel, align 4, !dbg !7812
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 2, !dbg !7813
  %58 = load float, float* %arrayidx68, align 4, !dbg !7813
  %59 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7814
  %prevdv69 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %59, i32 0, i32 10, !dbg !7815
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %prevdv69, i64 0, i64 2, !dbg !7814
  %60 = load float, float* %arrayidx70, align 8, !dbg !7814
  %sub71 = fsub float %58, %60, !dbg !7816
  %61 = call float @llvm.fabs.f32(float %sub71), !dbg !7817
  %call72 = call float @max_ff(float %57, float %61), !dbg !7818
  store float %call72, float* %maxerrvel, align 4, !dbg !7819
  br label %if.end78, !dbg !7820

if.else73:                                        ; preds = %if.end27
  %62 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7821
  %vec74 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %62, i32 0, i32 4, !dbg !7823
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %vec74, i64 0, i64 0, !dbg !7821
  %63 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7824
  %force76 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %63, i32 0, i32 5, !dbg !7825
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %force76, i64 0, i64 0, !dbg !7824
  call void @add_v3_v3(float* %arraydecay75, float* %arraydecay77), !dbg !7826
  br label %if.end78

if.end78:                                         ; preds = %if.else73, %if.then29
  %64 = load i32, i32* %mid_flags.addr, align 4, !dbg !7827
  %and79 = and i32 %64, 1, !dbg !7829
  %tobool80 = icmp ne i32 %and79, 0, !dbg !7829
  br i1 %tobool80, label %if.end85, label %if.then81, !dbg !7830

if.then81:                                        ; preds = %if.end78
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7831
  %65 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7832
  %vec83 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %65, i32 0, i32 4, !dbg !7833
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vec83, i64 0, i64 0, !dbg !7832
  call void @copy_v3_v3(float* %arraydecay82, float* %arraydecay84), !dbg !7834
  br label %if.end85, !dbg !7834

if.end85:                                         ; preds = %if.then81, %if.end78
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7835
  %66 = load float, float* %forcetime.addr, align 4, !dbg !7836
  call void @mul_v3_fl(float* %arraydecay86, float %66), !dbg !7837
  %67 = load i32, i32* %mode.addr, align 4, !dbg !7838
  %cmp87 = icmp eq i32 %67, 1, !dbg !7840
  br i1 %cmp87, label %if.then88, label %if.end93, !dbg !7841

if.then88:                                        ; preds = %if.end85
  %68 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7842
  %prevpos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %68, i32 0, i32 7, !dbg !7844
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %prevpos, i64 0, i64 0, !dbg !7842
  %69 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7845
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %69, i32 0, i32 3, !dbg !7846
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !7845
  call void @copy_v3_v3(float* %arraydecay89, float* %arraydecay90), !dbg !7847
  %70 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7848
  %prevdx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %70, i32 0, i32 9, !dbg !7849
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %prevdx, i64 0, i64 0, !dbg !7848
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7850
  call void @copy_v3_v3(float* %arraydecay91, float* %arraydecay92), !dbg !7851
  br label %if.end93, !dbg !7852

if.end93:                                         ; preds = %if.then88, %if.end85
  %71 = load i32, i32* %mode.addr, align 4, !dbg !7853
  %cmp94 = icmp eq i32 %71, 2, !dbg !7855
  br i1 %cmp94, label %if.then95, label %if.else155, !dbg !7856

if.then95:                                        ; preds = %if.end93
  %72 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7857
  %prevpos96 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %72, i32 0, i32 7, !dbg !7859
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %prevpos96, i64 0, i64 0, !dbg !7857
  %73 = load float, float* %arrayidx97, align 4, !dbg !7857
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7860
  %74 = load float, float* %arrayidx98, align 4, !dbg !7860
  %75 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7861
  %prevdx99 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %75, i32 0, i32 9, !dbg !7862
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %prevdx99, i64 0, i64 0, !dbg !7861
  %76 = load float, float* %arrayidx100, align 4, !dbg !7861
  %add101 = fadd float %74, %76, !dbg !7863
  %mul102 = fmul float 5.000000e-01, %add101, !dbg !7864
  %add103 = fadd float %73, %mul102, !dbg !7865
  %77 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7866
  %pos104 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %77, i32 0, i32 3, !dbg !7867
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %pos104, i64 0, i64 0, !dbg !7866
  store float %add103, float* %arrayidx105, align 4, !dbg !7868
  %78 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7869
  %prevpos106 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %78, i32 0, i32 7, !dbg !7870
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %prevpos106, i64 0, i64 1, !dbg !7869
  %79 = load float, float* %arrayidx107, align 4, !dbg !7869
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !7871
  %80 = load float, float* %arrayidx108, align 4, !dbg !7871
  %81 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7872
  %prevdx109 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %81, i32 0, i32 9, !dbg !7873
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %prevdx109, i64 0, i64 1, !dbg !7872
  %82 = load float, float* %arrayidx110, align 4, !dbg !7872
  %add111 = fadd float %80, %82, !dbg !7874
  %mul112 = fmul float 5.000000e-01, %add111, !dbg !7875
  %add113 = fadd float %79, %mul112, !dbg !7876
  %83 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7877
  %pos114 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %83, i32 0, i32 3, !dbg !7878
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %pos114, i64 0, i64 1, !dbg !7877
  store float %add113, float* %arrayidx115, align 4, !dbg !7879
  %84 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7880
  %prevpos116 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %84, i32 0, i32 7, !dbg !7881
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %prevpos116, i64 0, i64 2, !dbg !7880
  %85 = load float, float* %arrayidx117, align 4, !dbg !7880
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 2, !dbg !7882
  %86 = load float, float* %arrayidx118, align 4, !dbg !7882
  %87 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7883
  %prevdx119 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %87, i32 0, i32 9, !dbg !7884
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %prevdx119, i64 0, i64 2, !dbg !7883
  %88 = load float, float* %arrayidx120, align 4, !dbg !7883
  %add121 = fadd float %86, %88, !dbg !7885
  %mul122 = fmul float 5.000000e-01, %add121, !dbg !7886
  %add123 = fadd float %85, %mul122, !dbg !7887
  %89 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7888
  %pos124 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %89, i32 0, i32 3, !dbg !7889
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %pos124, i64 0, i64 2, !dbg !7888
  store float %add123, float* %arrayidx125, align 4, !dbg !7890
  %90 = load float, float* %maxerrpos, align 4, !dbg !7891
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7892
  %91 = load float, float* %arrayidx126, align 4, !dbg !7892
  %92 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7893
  %prevdx127 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %92, i32 0, i32 9, !dbg !7894
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %prevdx127, i64 0, i64 0, !dbg !7893
  %93 = load float, float* %arrayidx128, align 4, !dbg !7893
  %sub129 = fsub float %91, %93, !dbg !7895
  %94 = call float @llvm.fabs.f32(float %sub129), !dbg !7896
  %call130 = call float @max_ff(float %90, float %94), !dbg !7897
  store float %call130, float* %maxerrpos, align 4, !dbg !7898
  %95 = load float, float* %maxerrpos, align 4, !dbg !7899
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 1, !dbg !7900
  %96 = load float, float* %arrayidx131, align 4, !dbg !7900
  %97 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7901
  %prevdx132 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %97, i32 0, i32 9, !dbg !7902
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %prevdx132, i64 0, i64 1, !dbg !7901
  %98 = load float, float* %arrayidx133, align 4, !dbg !7901
  %sub134 = fsub float %96, %98, !dbg !7903
  %99 = call float @llvm.fabs.f32(float %sub134), !dbg !7904
  %call135 = call float @max_ff(float %95, float %99), !dbg !7905
  store float %call135, float* %maxerrpos, align 4, !dbg !7906
  %100 = load float, float* %maxerrpos, align 4, !dbg !7907
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 2, !dbg !7908
  %101 = load float, float* %arrayidx136, align 4, !dbg !7908
  %102 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7909
  %prevdx137 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %102, i32 0, i32 9, !dbg !7910
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %prevdx137, i64 0, i64 2, !dbg !7909
  %103 = load float, float* %arrayidx138, align 4, !dbg !7909
  %sub139 = fsub float %101, %103, !dbg !7911
  %104 = call float @llvm.fabs.f32(float %sub139), !dbg !7912
  %call140 = call float @max_ff(float %100, float %104), !dbg !7913
  store float %call140, float* %maxerrpos, align 4, !dbg !7914
  %105 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7915
  %choke2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %105, i32 0, i32 16, !dbg !7917
  %106 = load float, float* %choke2, align 4, !dbg !7917
  %cmp141 = fcmp ogt float %106, 0.000000e+00, !dbg !7918
  br i1 %cmp141, label %if.then142, label %if.end147, !dbg !7919

if.then142:                                       ; preds = %if.then95
  %107 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7920
  %vec143 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %107, i32 0, i32 4, !dbg !7922
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %vec143, i64 0, i64 0, !dbg !7920
  %108 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7923
  %choke2145 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %108, i32 0, i32 16, !dbg !7924
  %109 = load float, float* %choke2145, align 4, !dbg !7924
  %sub146 = fsub float 1.000000e+00, %109, !dbg !7925
  call void @mul_v3_fl(float* %arraydecay144, float %sub146), !dbg !7926
  br label %if.end147, !dbg !7927

if.end147:                                        ; preds = %if.then142, %if.then95
  %110 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7928
  %choke = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %110, i32 0, i32 15, !dbg !7930
  %111 = load float, float* %choke, align 8, !dbg !7930
  %cmp148 = fcmp ogt float %111, 0.000000e+00, !dbg !7931
  br i1 %cmp148, label %if.then149, label %if.end154, !dbg !7932

if.then149:                                       ; preds = %if.end147
  %112 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7933
  %vec150 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %112, i32 0, i32 4, !dbg !7935
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %vec150, i64 0, i64 0, !dbg !7933
  %113 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7936
  %choke152 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %113, i32 0, i32 15, !dbg !7937
  %114 = load float, float* %choke152, align 8, !dbg !7937
  %sub153 = fsub float 1.000000e+00, %114, !dbg !7938
  call void @mul_v3_fl(float* %arraydecay151, float %sub153), !dbg !7939
  br label %if.end154, !dbg !7940

if.end154:                                        ; preds = %if.then149, %if.end147
  br label %if.end159, !dbg !7941

if.else155:                                       ; preds = %if.end93
  %115 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7942
  %pos156 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %115, i32 0, i32 3, !dbg !7944
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %pos156, i64 0, i64 0, !dbg !7942
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %dx, i64 0, i64 0, !dbg !7945
  call void @add_v3_v3(float* %arraydecay157, float* %arraydecay158), !dbg !7946
  br label %if.end159

if.end159:                                        ; preds = %if.else155, %if.end154
  br label %if.end160, !dbg !7947

if.end160:                                        ; preds = %if.end159, %if.end
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !7948
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !7949
  %116 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7950
  %pos163 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %116, i32 0, i32 3, !dbg !7951
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %pos163, i64 0, i64 0, !dbg !7950
  call void @minmax_v3v3_v3(float* %arraydecay161, float* %arraydecay162, float* %arraydecay164), !dbg !7952
  %117 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7953
  %loc_flag = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %117, i32 0, i32 19, !dbg !7955
  %118 = load i16, i16* %loc_flag, align 8, !dbg !7955
  %conv = sext i16 %118 to i32, !dbg !7953
  %and165 = and i32 %conv, 1, !dbg !7956
  %tobool166 = icmp ne i32 %and165, 0, !dbg !7956
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !7957

if.then167:                                       ; preds = %if.end160
  store i32 1, i32* %fuzzy, align 4, !dbg !7958
  br label %if.end168, !dbg !7959

if.end168:                                        ; preds = %if.then167, %if.end160
  br label %for.inc, !dbg !7960

for.inc:                                          ; preds = %if.end168
  %119 = load i32, i32* %a, align 4, !dbg !7961
  %dec = add nsw i32 %119, -1, !dbg !7961
  store i32 %dec, i32* %a, align 4, !dbg !7961
  %120 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !7962
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %120, i32 1, !dbg !7962
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !7962
  br label %for.cond, !dbg !7963, !llvm.loop !7964

for.end:                                          ; preds = %for.cond
  %121 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7966
  %totpoint169 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %121, i32 0, i32 0, !dbg !7968
  %122 = load i32, i32* %totpoint169, align 8, !dbg !7968
  %tobool170 = icmp ne i32 %122, 0, !dbg !7966
  br i1 %tobool170, label %if.then171, label %if.end176, !dbg !7969

if.then171:                                       ; preds = %for.end
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %cm, i64 0, i64 0, !dbg !7970
  %123 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7971
  %totpoint173 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %123, i32 0, i32 0, !dbg !7972
  %124 = load i32, i32* %totpoint173, align 8, !dbg !7972
  %conv174 = sitofp i32 %124 to float, !dbg !7971
  %div175 = fdiv float 1.000000e+00, %conv174, !dbg !7973
  call void @mul_v3_fl(float* %arraydecay172, float %div175), !dbg !7974
  br label %if.end176, !dbg !7974

if.end176:                                        ; preds = %if.then171, %for.end
  %125 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7975
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %125, i32 0, i32 44, !dbg !7977
  %126 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !7977
  %tobool177 = icmp ne %struct.SBScratch* %126, null, !dbg !7975
  br i1 %tobool177, label %if.then178, label %if.end187, !dbg !7978

if.then178:                                       ; preds = %if.end176
  %127 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7979
  %scratch179 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %127, i32 0, i32 44, !dbg !7981
  %128 = load %struct.SBScratch*, %struct.SBScratch** %scratch179, align 8, !dbg !7981
  %aabbmin180 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %128, i32 0, i32 5, !dbg !7982
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin180, i64 0, i64 0, !dbg !7979
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !7983
  call void @copy_v3_v3(float* %arraydecay181, float* %arraydecay182), !dbg !7984
  %129 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7985
  %scratch183 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %129, i32 0, i32 44, !dbg !7986
  %130 = load %struct.SBScratch*, %struct.SBScratch** %scratch183, align 8, !dbg !7986
  %aabbmax184 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %130, i32 0, i32 6, !dbg !7987
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax184, i64 0, i64 0, !dbg !7985
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !7988
  call void @copy_v3_v3(float* %arraydecay185, float* %arraydecay186), !dbg !7989
  br label %if.end187, !dbg !7990

if.end187:                                        ; preds = %if.then178, %if.end176
  %131 = load float*, float** %err.addr, align 8, !dbg !7991
  %tobool188 = icmp ne float* %131, null, !dbg !7991
  br i1 %tobool188, label %if.then189, label %if.end203, !dbg !7993

if.then189:                                       ; preds = %if.end187
  %132 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !7994
  %solverflags = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %132, i32 0, i32 28, !dbg !7997
  %133 = load i16, i16* %solverflags, align 2, !dbg !7997
  %conv190 = sext i16 %133 to i32, !dbg !7994
  %and191 = and i32 %conv190, 2, !dbg !7998
  %tobool192 = icmp ne i32 %and191, 0, !dbg !7998
  br i1 %tobool192, label %if.then193, label %if.else195, !dbg !7999

if.then193:                                       ; preds = %if.then189
  %134 = load float, float* %maxerrpos, align 4, !dbg !8000
  %135 = load float, float* %maxerrvel, align 4, !dbg !8001
  %call194 = call float @max_ff(float %134, float %135), !dbg !8002
  %136 = load float*, float** %err.addr, align 8, !dbg !8003
  store float %call194, float* %136, align 4, !dbg !8004
  br label %if.end196, !dbg !8005

if.else195:                                       ; preds = %if.then189
  %137 = load float, float* %maxerrpos, align 4, !dbg !8006
  %138 = load float*, float** %err.addr, align 8, !dbg !8007
  store float %137, float* %138, align 4, !dbg !8008
  br label %if.end196

if.end196:                                        ; preds = %if.else195, %if.then193
  %139 = load i32, i32* %fuzzy, align 4, !dbg !8009
  %tobool197 = icmp ne i32 %139, 0, !dbg !8009
  br i1 %tobool197, label %if.then198, label %if.end202, !dbg !8011

if.then198:                                       ; preds = %if.end196
  %140 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8012
  %fuzzyness = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %140, i32 0, i32 20, !dbg !8014
  %141 = load i16, i16* %fuzzyness, align 2, !dbg !8014
  %conv199 = sext i16 %141 to i32, !dbg !8012
  %conv200 = sitofp i32 %conv199 to float, !dbg !8012
  %142 = load float*, float** %err.addr, align 8, !dbg !8015
  %143 = load float, float* %142, align 4, !dbg !8016
  %div201 = fdiv float %143, %conv200, !dbg !8016
  store float %div201, float* %142, align 4, !dbg !8016
  br label %if.end202, !dbg !8017

if.end202:                                        ; preds = %if.then198, %if.end196
  br label %if.end203, !dbg !8018

if.end203:                                        ; preds = %if.end202, %if.end187
  ret void, !dbg !8019
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_apply_goalsnap(%struct.Object* %ob) #0 !dbg !8020 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !8023, metadata !DIExpression()), !dbg !8024
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8025
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !8026
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !8026
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !8024
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8029, metadata !DIExpression()), !dbg !8030
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8031
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 0, !dbg !8033
  %3 = load i32, i32* %totpoint, align 8, !dbg !8033
  store i32 %3, i32* %a, align 4, !dbg !8034
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8035
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 2, !dbg !8036
  %5 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !8036
  store %struct.BodyPoint* %5, %struct.BodyPoint** %bp, align 8, !dbg !8037
  br label %for.cond, !dbg !8038

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %a, align 4, !dbg !8039
  %cmp = icmp sgt i32 %6, 0, !dbg !8041
  br i1 %cmp, label %for.body, label %for.end, !dbg !8042

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8043
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8046
  %call = call float @_final_goal(%struct.Object* %7, %struct.BodyPoint* %8), !dbg !8047
  %cmp1 = fcmp oge float %call, 0x3FEFF7CEE0000000, !dbg !8048
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8049

if.then:                                          ; preds = %for.body
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8050
  %prevpos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 7, !dbg !8052
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %prevpos, i64 0, i64 0, !dbg !8050
  %10 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8053
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %10, i32 0, i32 3, !dbg !8054
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8053
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !8055
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8056
  %pos3 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %11, i32 0, i32 3, !dbg !8057
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %pos3, i64 0, i64 0, !dbg !8056
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8058
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %12, i32 0, i32 2, !dbg !8059
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !8058
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay5), !dbg !8060
  br label %if.end, !dbg !8061

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8062

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %a, align 4, !dbg !8063
  %dec = add nsw i32 %13, -1, !dbg !8063
  store i32 %dec, i32* %a, align 4, !dbg !8063
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8064
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i32 1, !dbg !8064
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !8064
  br label %for.cond, !dbg !8065, !llvm.loop !8066

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8068
}

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_restore_prev_step(%struct.Object* %ob) #0 !dbg !8069 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !8072, metadata !DIExpression()), !dbg !8073
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8074
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !8075
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !8075
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !8073
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !8076, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8078, metadata !DIExpression()), !dbg !8079
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8080
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 0, !dbg !8082
  %3 = load i32, i32* %totpoint, align 8, !dbg !8082
  store i32 %3, i32* %a, align 4, !dbg !8083
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8084
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 2, !dbg !8085
  %5 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !8085
  store %struct.BodyPoint* %5, %struct.BodyPoint** %bp, align 8, !dbg !8086
  br label %for.cond, !dbg !8087

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %a, align 4, !dbg !8088
  %cmp = icmp sgt i32 %6, 0, !dbg !8090
  br i1 %cmp, label %for.body, label %for.end, !dbg !8091

for.body:                                         ; preds = %for.cond
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8092
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %7, i32 0, i32 4, !dbg !8094
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8092
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8095
  %prevvec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 8, !dbg !8096
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %prevvec, i64 0, i64 0, !dbg !8095
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !8097
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8098
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 3, !dbg !8099
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8098
  %10 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8100
  %prevpos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %10, i32 0, i32 7, !dbg !8101
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %prevpos, i64 0, i64 0, !dbg !8100
  call void @copy_v3_v3(float* %arraydecay2, float* %arraydecay3), !dbg !8102
  br label %for.inc, !dbg !8103

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %a, align 4, !dbg !8104
  %dec = add nsw i32 %11, -1, !dbg !8104
  store i32 %dec, i32* %a, align 4, !dbg !8104
  %12 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !8105
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %12, i32 1, !dbg !8105
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %bp, align 8, !dbg !8105
  br label %for.cond, !dbg !8106, !llvm.loop !8107

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8109
}

; Function Attrs: noinline nounwind uwtable
define internal void @apply_spring_memory(%struct.Object* %ob) #0 !dbg !8110 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %bp1 = alloca %struct.BodyPoint*, align 8
  %bp2 = alloca %struct.BodyPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca float, align 4
  %l = alloca float, align 4
  %r = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8111, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !8113, metadata !DIExpression()), !dbg !8114
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8115
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !8116
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !8116
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp1, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp2, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata float* %b, metadata !8125, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata float* %l, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata float* %r, metadata !8129, metadata !DIExpression()), !dbg !8130
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8131
  %tobool = icmp ne %struct.SoftBody* %2, null, !dbg !8131
  br i1 %tobool, label %land.lhs.true, label %if.end20, !dbg !8133

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8134
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 1, !dbg !8135
  %4 = load i32, i32* %totspring, align 4, !dbg !8135
  %tobool1 = icmp ne i32 %4, 0, !dbg !8134
  br i1 %tobool1, label %if.then, label %if.end20, !dbg !8136

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8137
  %plastic = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 42, !dbg !8139
  %6 = load i16, i16* %plastic, align 4, !dbg !8139
  %conv = sitofp i16 %6 to float, !dbg !8137
  store float %conv, float* %b, align 4, !dbg !8140
  store i32 0, i32* %a, align 4, !dbg !8141
  br label %for.cond, !dbg !8143

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %a, align 4, !dbg !8144
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8146
  %totspring2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 1, !dbg !8147
  %9 = load i32, i32* %totspring2, align 4, !dbg !8147
  %cmp = icmp slt i32 %7, %9, !dbg !8148
  br i1 %cmp, label %for.body, label %for.end, !dbg !8149

for.body:                                         ; preds = %for.cond
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8150
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 3, !dbg !8152
  %11 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !8152
  %12 = load i32, i32* %a, align 4, !dbg !8153
  %idxprom = sext i32 %12 to i64, !dbg !8150
  %arrayidx = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %11, i64 %idxprom, !dbg !8150
  store %struct.BodySpring* %arrayidx, %struct.BodySpring** %bs, align 8, !dbg !8154
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8155
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 2, !dbg !8156
  %14 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !8156
  %15 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !8157
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %15, i32 0, i32 0, !dbg !8158
  %16 = load i32, i32* %v1, align 4, !dbg !8158
  %idxprom4 = sext i32 %16 to i64, !dbg !8155
  %arrayidx5 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %14, i64 %idxprom4, !dbg !8155
  store %struct.BodyPoint* %arrayidx5, %struct.BodyPoint** %bp1, align 8, !dbg !8159
  %17 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !8160
  %bpoint6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %17, i32 0, i32 2, !dbg !8161
  %18 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint6, align 8, !dbg !8161
  %19 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !8162
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %19, i32 0, i32 1, !dbg !8163
  %20 = load i32, i32* %v2, align 4, !dbg !8163
  %idxprom7 = sext i32 %20 to i64, !dbg !8160
  %arrayidx8 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %18, i64 %idxprom7, !dbg !8160
  store %struct.BodyPoint* %arrayidx8, %struct.BodyPoint** %bp2, align 8, !dbg !8164
  %21 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !8165
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %21, i32 0, i32 3, !dbg !8166
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8165
  %22 = load %struct.BodyPoint*, %struct.BodyPoint** %bp2, align 8, !dbg !8167
  %pos9 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %22, i32 0, i32 3, !dbg !8168
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %pos9, i64 0, i64 0, !dbg !8167
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay10), !dbg !8169
  store float %call, float* %l, align 4, !dbg !8170
  %23 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !8171
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %23, i32 0, i32 2, !dbg !8172
  %24 = load float, float* %len, align 4, !dbg !8172
  %25 = load float, float* %l, align 4, !dbg !8173
  %div = fdiv float %24, %25, !dbg !8174
  store float %div, float* %r, align 4, !dbg !8175
  %26 = load float, float* %r, align 4, !dbg !8176
  %cmp11 = fcmp ogt float %26, 0x3FF0CCCCC0000000, !dbg !8178
  br i1 %cmp11, label %if.then15, label %lor.lhs.false, !dbg !8179

lor.lhs.false:                                    ; preds = %for.body
  %27 = load float, float* %r, align 4, !dbg !8180
  %cmp13 = fcmp olt float %27, 0x3FEE666660000000, !dbg !8181
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !8182

if.then15:                                        ; preds = %lor.lhs.false, %for.body
  %28 = load float, float* %b, align 4, !dbg !8183
  %sub = fsub float 1.000000e+02, %28, !dbg !8185
  %29 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !8186
  %len16 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %29, i32 0, i32 2, !dbg !8187
  %30 = load float, float* %len16, align 4, !dbg !8187
  %mul = fmul float %sub, %30, !dbg !8188
  %31 = load float, float* %b, align 4, !dbg !8189
  %32 = load float, float* %l, align 4, !dbg !8190
  %mul17 = fmul float %31, %32, !dbg !8191
  %add = fadd float %mul, %mul17, !dbg !8192
  %div18 = fdiv float %add, 1.000000e+02, !dbg !8193
  %33 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !8194
  %len19 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %33, i32 0, i32 2, !dbg !8195
  store float %div18, float* %len19, align 4, !dbg !8196
  br label %if.end, !dbg !8197

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %for.inc, !dbg !8198

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %a, align 4, !dbg !8199
  %inc = add nsw i32 %34, 1, !dbg !8199
  store i32 %inc, i32* %a, align 4, !dbg !8199
  br label %for.cond, !dbg !8200, !llvm.loop !8201

for.end:                                          ; preds = %for.cond
  br label %if.end20, !dbg !8203

if.end20:                                         ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !8204
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccd_mesh_update(%struct.Object* %ob, %struct.ccd_Mesh* %pccd_M) #0 !dbg !8205 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pccd_M.addr = alloca %struct.ccd_Mesh*, align 8
  %cmd = alloca %struct.CollisionModifierData*, align 8
  %mima = alloca %struct.ccdf_minmax*, align 8
  %mface = alloca %struct.MFace*, align 8
  %v = alloca [3 x float], align 4
  %hull = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  store %struct.ccd_Mesh* %pccd_M, %struct.ccd_Mesh** %pccd_M.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %pccd_M.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata %struct.CollisionModifierData** %cmd, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata %struct.ccdf_minmax** %mima, metadata !8214, metadata !DIExpression()), !dbg !8215
  store %struct.ccdf_minmax* null, %struct.ccdf_minmax** %mima, align 8, !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !8216, metadata !DIExpression()), !dbg !8217
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !8217
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !8218, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.declare(metadata float* %hull, metadata !8220, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8222, metadata !DIExpression()), !dbg !8223
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8224
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %0, i32 23), !dbg !8225
  %1 = bitcast %struct.ModifierData* %call to %struct.CollisionModifierData*, !dbg !8226
  store %struct.CollisionModifierData* %1, %struct.CollisionModifierData** %cmd, align 8, !dbg !8227
  %2 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8228
  %tobool = icmp ne %struct.CollisionModifierData* %2, null, !dbg !8228
  br i1 %tobool, label %if.end, label %if.then, !dbg !8230

if.then:                                          ; preds = %entry
  br label %return, !dbg !8231

if.end:                                           ; preds = %entry
  %3 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8232
  %numverts = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %3, i32 0, i32 8, !dbg !8234
  %4 = load i32, i32* %numverts, align 8, !dbg !8234
  %tobool1 = icmp ne i32 %4, 0, !dbg !8232
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !8235

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8236
  %numfaces = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %5, i32 0, i32 9, !dbg !8237
  %6 = load i32, i32* %numfaces, align 4, !dbg !8237
  %tobool2 = icmp ne i32 %6, 0, !dbg !8236
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8238

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  br label %return, !dbg !8239

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8240
  %totvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %7, i32 0, i32 0, !dbg !8242
  %8 = load i32, i32* %totvert, align 8, !dbg !8242
  %9 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8243
  %numverts5 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %9, i32 0, i32 8, !dbg !8244
  %10 = load i32, i32* %numverts5, align 8, !dbg !8244
  %cmp = icmp ne i32 %8, %10, !dbg !8245
  br i1 %cmp, label %if.then9, label %lor.lhs.false6, !dbg !8246

lor.lhs.false6:                                   ; preds = %if.end4
  %11 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8247
  %totface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %11, i32 0, i32 1, !dbg !8248
  %12 = load i32, i32* %totface, align 4, !dbg !8248
  %13 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8249
  %numfaces7 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %13, i32 0, i32 9, !dbg !8250
  %14 = load i32, i32* %numfaces7, align 4, !dbg !8250
  %cmp8 = icmp ne i32 %12, %14, !dbg !8251
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8252

if.then9:                                         ; preds = %lor.lhs.false6, %if.end4
  br label %return, !dbg !8253

if.end10:                                         ; preds = %lor.lhs.false6
  %15 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8255
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %15, i32 0, i32 7, !dbg !8256
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 2, !dbg !8255
  store float 0x46293E5940000000, float* %arrayidx, align 8, !dbg !8257
  %16 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8258
  %bbmin11 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %16, i32 0, i32 7, !dbg !8259
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %bbmin11, i64 0, i64 1, !dbg !8258
  store float 0x46293E5940000000, float* %arrayidx12, align 4, !dbg !8260
  %17 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8261
  %bbmin13 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %17, i32 0, i32 7, !dbg !8262
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %bbmin13, i64 0, i64 0, !dbg !8261
  store float 0x46293E5940000000, float* %arrayidx14, align 8, !dbg !8263
  %18 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8264
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %18, i32 0, i32 8, !dbg !8265
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 2, !dbg !8264
  store float 0xC6293E5940000000, float* %arrayidx15, align 4, !dbg !8266
  %19 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8267
  %bbmax16 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %19, i32 0, i32 8, !dbg !8268
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %bbmax16, i64 0, i64 1, !dbg !8267
  store float 0xC6293E5940000000, float* %arrayidx17, align 4, !dbg !8269
  %20 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8270
  %bbmax18 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %20, i32 0, i32 8, !dbg !8271
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %bbmax18, i64 0, i64 0, !dbg !8270
  store float 0xC6293E5940000000, float* %arrayidx19, align 4, !dbg !8272
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8273
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 110, !dbg !8274
  %22 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !8274
  %pdef_sbift = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %22, i32 0, i32 27, !dbg !8275
  %23 = load float, float* %pdef_sbift, align 4, !dbg !8275
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8276
  %pd20 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 110, !dbg !8277
  %25 = load %struct.PartDeflect*, %struct.PartDeflect** %pd20, align 8, !dbg !8277
  %pdef_sboft = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %25, i32 0, i32 28, !dbg !8278
  %26 = load float, float* %pdef_sboft, align 8, !dbg !8278
  %call21 = call float @max_ff(float %23, float %26), !dbg !8279
  store float %call21, float* %hull, align 4, !dbg !8280
  %27 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8281
  %mprevvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %27, i32 0, i32 3, !dbg !8283
  %28 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !8283
  %tobool22 = icmp ne %struct.MVert* %28, null, !dbg !8281
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8284

if.then23:                                        ; preds = %if.end10
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8285
  %30 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8286
  %mprevvert24 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %30, i32 0, i32 3, !dbg !8287
  %31 = load %struct.MVert*, %struct.MVert** %mprevvert24, align 8, !dbg !8287
  %32 = bitcast %struct.MVert* %31 to i8*, !dbg !8286
  call void %29(i8* %32), !dbg !8285
  br label %if.end25, !dbg !8285

if.end25:                                         ; preds = %if.then23, %if.end10
  %33 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8288
  %mvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %33, i32 0, i32 2, !dbg !8289
  %34 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8289
  %35 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8290
  %mprevvert26 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %35, i32 0, i32 3, !dbg !8291
  store %struct.MVert* %34, %struct.MVert** %mprevvert26, align 8, !dbg !8292
  %36 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8293
  %37 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !8294
  %xnew = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %37, i32 0, i32 2, !dbg !8295
  %38 = load %struct.MVert*, %struct.MVert** %xnew, align 8, !dbg !8295
  %39 = bitcast %struct.MVert* %38 to i8*, !dbg !8294
  %call27 = call i8* %36(i8* %39), !dbg !8293
  %40 = bitcast i8* %call27 to %struct.MVert*, !dbg !8293
  %41 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8296
  %mvert28 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %41, i32 0, i32 2, !dbg !8297
  store %struct.MVert* %40, %struct.MVert** %mvert28, align 8, !dbg !8298
  store i32 0, i32* %i, align 4, !dbg !8299
  br label %for.cond, !dbg !8301

for.cond:                                         ; preds = %for.inc, %if.end25
  %42 = load i32, i32* %i, align 4, !dbg !8302
  %43 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8304
  %totvert29 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %43, i32 0, i32 0, !dbg !8305
  %44 = load i32, i32* %totvert29, align 8, !dbg !8305
  %cmp30 = icmp slt i32 %42, %44, !dbg !8306
  br i1 %cmp30, label %for.body, label %for.end, !dbg !8307

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8308
  %45 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8310
  %mvert31 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %45, i32 0, i32 2, !dbg !8311
  %46 = load %struct.MVert*, %struct.MVert** %mvert31, align 8, !dbg !8311
  %47 = load i32, i32* %i, align 4, !dbg !8312
  %idxprom = sext i32 %47 to i64, !dbg !8310
  %arrayidx32 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i64 %idxprom, !dbg !8310
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx32, i32 0, i32 0, !dbg !8313
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8310
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay33), !dbg !8314
  %48 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8315
  %bbmin34 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %48, i32 0, i32 7, !dbg !8316
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %bbmin34, i64 0, i64 0, !dbg !8315
  %49 = load float, float* %arrayidx35, align 8, !dbg !8315
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8317
  %50 = load float, float* %arrayidx36, align 4, !dbg !8317
  %51 = load float, float* %hull, align 4, !dbg !8318
  %sub = fsub float %50, %51, !dbg !8319
  %call37 = call float @min_ff(float %49, float %sub), !dbg !8320
  %52 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8321
  %bbmin38 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %52, i32 0, i32 7, !dbg !8322
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %bbmin38, i64 0, i64 0, !dbg !8321
  store float %call37, float* %arrayidx39, align 8, !dbg !8323
  %53 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8324
  %bbmin40 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %53, i32 0, i32 7, !dbg !8325
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %bbmin40, i64 0, i64 1, !dbg !8324
  %54 = load float, float* %arrayidx41, align 4, !dbg !8324
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8326
  %55 = load float, float* %arrayidx42, align 4, !dbg !8326
  %56 = load float, float* %hull, align 4, !dbg !8327
  %sub43 = fsub float %55, %56, !dbg !8328
  %call44 = call float @min_ff(float %54, float %sub43), !dbg !8329
  %57 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8330
  %bbmin45 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %57, i32 0, i32 7, !dbg !8331
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %bbmin45, i64 0, i64 1, !dbg !8330
  store float %call44, float* %arrayidx46, align 4, !dbg !8332
  %58 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8333
  %bbmin47 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %58, i32 0, i32 7, !dbg !8334
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %bbmin47, i64 0, i64 2, !dbg !8333
  %59 = load float, float* %arrayidx48, align 8, !dbg !8333
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8335
  %60 = load float, float* %arrayidx49, align 4, !dbg !8335
  %61 = load float, float* %hull, align 4, !dbg !8336
  %sub50 = fsub float %60, %61, !dbg !8337
  %call51 = call float @min_ff(float %59, float %sub50), !dbg !8338
  %62 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8339
  %bbmin52 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %62, i32 0, i32 7, !dbg !8340
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %bbmin52, i64 0, i64 2, !dbg !8339
  store float %call51, float* %arrayidx53, align 8, !dbg !8341
  %63 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8342
  %bbmax54 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %63, i32 0, i32 8, !dbg !8343
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %bbmax54, i64 0, i64 0, !dbg !8342
  %64 = load float, float* %arrayidx55, align 4, !dbg !8342
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8344
  %65 = load float, float* %arrayidx56, align 4, !dbg !8344
  %66 = load float, float* %hull, align 4, !dbg !8345
  %add = fadd float %65, %66, !dbg !8346
  %call57 = call float @max_ff(float %64, float %add), !dbg !8347
  %67 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8348
  %bbmax58 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %67, i32 0, i32 8, !dbg !8349
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %bbmax58, i64 0, i64 0, !dbg !8348
  store float %call57, float* %arrayidx59, align 4, !dbg !8350
  %68 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8351
  %bbmax60 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %68, i32 0, i32 8, !dbg !8352
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %bbmax60, i64 0, i64 1, !dbg !8351
  %69 = load float, float* %arrayidx61, align 4, !dbg !8351
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8353
  %70 = load float, float* %arrayidx62, align 4, !dbg !8353
  %71 = load float, float* %hull, align 4, !dbg !8354
  %add63 = fadd float %70, %71, !dbg !8355
  %call64 = call float @max_ff(float %69, float %add63), !dbg !8356
  %72 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8357
  %bbmax65 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %72, i32 0, i32 8, !dbg !8358
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %bbmax65, i64 0, i64 1, !dbg !8357
  store float %call64, float* %arrayidx66, align 4, !dbg !8359
  %73 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8360
  %bbmax67 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %73, i32 0, i32 8, !dbg !8361
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %bbmax67, i64 0, i64 2, !dbg !8360
  %74 = load float, float* %arrayidx68, align 4, !dbg !8360
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8362
  %75 = load float, float* %arrayidx69, align 4, !dbg !8362
  %76 = load float, float* %hull, align 4, !dbg !8363
  %add70 = fadd float %75, %76, !dbg !8364
  %call71 = call float @max_ff(float %74, float %add70), !dbg !8365
  %77 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8366
  %bbmax72 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %77, i32 0, i32 8, !dbg !8367
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %bbmax72, i64 0, i64 2, !dbg !8366
  store float %call71, float* %arrayidx73, align 4, !dbg !8368
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8369
  %78 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8370
  %mprevvert75 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %78, i32 0, i32 3, !dbg !8371
  %79 = load %struct.MVert*, %struct.MVert** %mprevvert75, align 8, !dbg !8371
  %80 = load i32, i32* %i, align 4, !dbg !8372
  %idxprom76 = sext i32 %80 to i64, !dbg !8370
  %arrayidx77 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i64 %idxprom76, !dbg !8370
  %co78 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx77, i32 0, i32 0, !dbg !8373
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %co78, i64 0, i64 0, !dbg !8370
  call void @copy_v3_v3(float* %arraydecay74, float* %arraydecay79), !dbg !8374
  %81 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8375
  %bbmin80 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %81, i32 0, i32 7, !dbg !8376
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %bbmin80, i64 0, i64 0, !dbg !8375
  %82 = load float, float* %arrayidx81, align 8, !dbg !8375
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8377
  %83 = load float, float* %arrayidx82, align 4, !dbg !8377
  %84 = load float, float* %hull, align 4, !dbg !8378
  %sub83 = fsub float %83, %84, !dbg !8379
  %call84 = call float @min_ff(float %82, float %sub83), !dbg !8380
  %85 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8381
  %bbmin85 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %85, i32 0, i32 7, !dbg !8382
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %bbmin85, i64 0, i64 0, !dbg !8381
  store float %call84, float* %arrayidx86, align 8, !dbg !8383
  %86 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8384
  %bbmin87 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %86, i32 0, i32 7, !dbg !8385
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %bbmin87, i64 0, i64 1, !dbg !8384
  %87 = load float, float* %arrayidx88, align 4, !dbg !8384
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8386
  %88 = load float, float* %arrayidx89, align 4, !dbg !8386
  %89 = load float, float* %hull, align 4, !dbg !8387
  %sub90 = fsub float %88, %89, !dbg !8388
  %call91 = call float @min_ff(float %87, float %sub90), !dbg !8389
  %90 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8390
  %bbmin92 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %90, i32 0, i32 7, !dbg !8391
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %bbmin92, i64 0, i64 1, !dbg !8390
  store float %call91, float* %arrayidx93, align 4, !dbg !8392
  %91 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8393
  %bbmin94 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %91, i32 0, i32 7, !dbg !8394
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %bbmin94, i64 0, i64 2, !dbg !8393
  %92 = load float, float* %arrayidx95, align 8, !dbg !8393
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8395
  %93 = load float, float* %arrayidx96, align 4, !dbg !8395
  %94 = load float, float* %hull, align 4, !dbg !8396
  %sub97 = fsub float %93, %94, !dbg !8397
  %call98 = call float @min_ff(float %92, float %sub97), !dbg !8398
  %95 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8399
  %bbmin99 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %95, i32 0, i32 7, !dbg !8400
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %bbmin99, i64 0, i64 2, !dbg !8399
  store float %call98, float* %arrayidx100, align 8, !dbg !8401
  %96 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8402
  %bbmax101 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %96, i32 0, i32 8, !dbg !8403
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %bbmax101, i64 0, i64 0, !dbg !8402
  %97 = load float, float* %arrayidx102, align 4, !dbg !8402
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8404
  %98 = load float, float* %arrayidx103, align 4, !dbg !8404
  %99 = load float, float* %hull, align 4, !dbg !8405
  %add104 = fadd float %98, %99, !dbg !8406
  %call105 = call float @max_ff(float %97, float %add104), !dbg !8407
  %100 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8408
  %bbmax106 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %100, i32 0, i32 8, !dbg !8409
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %bbmax106, i64 0, i64 0, !dbg !8408
  store float %call105, float* %arrayidx107, align 4, !dbg !8410
  %101 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8411
  %bbmax108 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %101, i32 0, i32 8, !dbg !8412
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %bbmax108, i64 0, i64 1, !dbg !8411
  %102 = load float, float* %arrayidx109, align 4, !dbg !8411
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8413
  %103 = load float, float* %arrayidx110, align 4, !dbg !8413
  %104 = load float, float* %hull, align 4, !dbg !8414
  %add111 = fadd float %103, %104, !dbg !8415
  %call112 = call float @max_ff(float %102, float %add111), !dbg !8416
  %105 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8417
  %bbmax113 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %105, i32 0, i32 8, !dbg !8418
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %bbmax113, i64 0, i64 1, !dbg !8417
  store float %call112, float* %arrayidx114, align 4, !dbg !8419
  %106 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8420
  %bbmax115 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %106, i32 0, i32 8, !dbg !8421
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %bbmax115, i64 0, i64 2, !dbg !8420
  %107 = load float, float* %arrayidx116, align 4, !dbg !8420
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8422
  %108 = load float, float* %arrayidx117, align 4, !dbg !8422
  %109 = load float, float* %hull, align 4, !dbg !8423
  %add118 = fadd float %108, %109, !dbg !8424
  %call119 = call float @max_ff(float %107, float %add118), !dbg !8425
  %110 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8426
  %bbmax120 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %110, i32 0, i32 8, !dbg !8427
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %bbmax120, i64 0, i64 2, !dbg !8426
  store float %call119, float* %arrayidx121, align 4, !dbg !8428
  br label %for.inc, !dbg !8429

for.inc:                                          ; preds = %for.body
  %111 = load i32, i32* %i, align 4, !dbg !8430
  %inc = add nsw i32 %111, 1, !dbg !8430
  store i32 %inc, i32* %i, align 4, !dbg !8430
  br label %for.cond, !dbg !8431, !llvm.loop !8432

for.end:                                          ; preds = %for.cond
  %112 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8434
  %mima122 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %112, i32 0, i32 6, !dbg !8435
  %113 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima122, align 8, !dbg !8435
  store %struct.ccdf_minmax* %113, %struct.ccdf_minmax** %mima, align 8, !dbg !8436
  %114 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8437
  %mface123 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %114, i32 0, i32 4, !dbg !8438
  %115 = load %struct.MFace*, %struct.MFace** %mface123, align 8, !dbg !8438
  store %struct.MFace* %115, %struct.MFace** %mface, align 8, !dbg !8439
  store i32 0, i32* %i, align 4, !dbg !8440
  br label %for.cond124, !dbg !8442

for.cond124:                                      ; preds = %for.inc429, %for.end
  %116 = load i32, i32* %i, align 4, !dbg !8443
  %117 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8445
  %totface125 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %117, i32 0, i32 1, !dbg !8446
  %118 = load i32, i32* %totface125, align 4, !dbg !8446
  %cmp126 = icmp slt i32 %116, %118, !dbg !8447
  br i1 %cmp126, label %for.body127, label %for.end431, !dbg !8448

for.body127:                                      ; preds = %for.cond124
  %119 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8449
  %minz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %119, i32 0, i32 2, !dbg !8451
  store float 0x46293E5940000000, float* %minz, align 4, !dbg !8452
  %120 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8453
  %miny = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %120, i32 0, i32 1, !dbg !8454
  store float 0x46293E5940000000, float* %miny, align 4, !dbg !8455
  %121 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8456
  %minx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %121, i32 0, i32 0, !dbg !8457
  store float 0x46293E5940000000, float* %minx, align 4, !dbg !8458
  %122 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8459
  %maxz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %122, i32 0, i32 5, !dbg !8460
  store float 0xC6293E5940000000, float* %maxz, align 4, !dbg !8461
  %123 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8462
  %maxy = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %123, i32 0, i32 4, !dbg !8463
  store float 0xC6293E5940000000, float* %maxy, align 4, !dbg !8464
  %124 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8465
  %maxx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %124, i32 0, i32 3, !dbg !8466
  store float 0xC6293E5940000000, float* %maxx, align 4, !dbg !8467
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8468
  %125 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8469
  %mvert129 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %125, i32 0, i32 2, !dbg !8470
  %126 = load %struct.MVert*, %struct.MVert** %mvert129, align 8, !dbg !8470
  %127 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8471
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %127, i32 0, i32 0, !dbg !8472
  %128 = load i32, i32* %v1, align 4, !dbg !8472
  %idxprom130 = zext i32 %128 to i64, !dbg !8469
  %arrayidx131 = getelementptr inbounds %struct.MVert, %struct.MVert* %126, i64 %idxprom130, !dbg !8469
  %co132 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx131, i32 0, i32 0, !dbg !8473
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co132, i64 0, i64 0, !dbg !8469
  call void @copy_v3_v3(float* %arraydecay128, float* %arraydecay133), !dbg !8474
  %129 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8475
  %minx134 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %129, i32 0, i32 0, !dbg !8476
  %130 = load float, float* %minx134, align 4, !dbg !8476
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8477
  %131 = load float, float* %arrayidx135, align 4, !dbg !8477
  %132 = load float, float* %hull, align 4, !dbg !8478
  %sub136 = fsub float %131, %132, !dbg !8479
  %call137 = call float @min_ff(float %130, float %sub136), !dbg !8480
  %133 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8481
  %minx138 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %133, i32 0, i32 0, !dbg !8482
  store float %call137, float* %minx138, align 4, !dbg !8483
  %134 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8484
  %miny139 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %134, i32 0, i32 1, !dbg !8485
  %135 = load float, float* %miny139, align 4, !dbg !8485
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8486
  %136 = load float, float* %arrayidx140, align 4, !dbg !8486
  %137 = load float, float* %hull, align 4, !dbg !8487
  %sub141 = fsub float %136, %137, !dbg !8488
  %call142 = call float @min_ff(float %135, float %sub141), !dbg !8489
  %138 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8490
  %miny143 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %138, i32 0, i32 1, !dbg !8491
  store float %call142, float* %miny143, align 4, !dbg !8492
  %139 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8493
  %minz144 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %139, i32 0, i32 2, !dbg !8494
  %140 = load float, float* %minz144, align 4, !dbg !8494
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8495
  %141 = load float, float* %arrayidx145, align 4, !dbg !8495
  %142 = load float, float* %hull, align 4, !dbg !8496
  %sub146 = fsub float %141, %142, !dbg !8497
  %call147 = call float @min_ff(float %140, float %sub146), !dbg !8498
  %143 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8499
  %minz148 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %143, i32 0, i32 2, !dbg !8500
  store float %call147, float* %minz148, align 4, !dbg !8501
  %144 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8502
  %maxx149 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %144, i32 0, i32 3, !dbg !8503
  %145 = load float, float* %maxx149, align 4, !dbg !8503
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8504
  %146 = load float, float* %arrayidx150, align 4, !dbg !8504
  %147 = load float, float* %hull, align 4, !dbg !8505
  %add151 = fadd float %146, %147, !dbg !8506
  %call152 = call float @max_ff(float %145, float %add151), !dbg !8507
  %148 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8508
  %maxx153 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %148, i32 0, i32 3, !dbg !8509
  store float %call152, float* %maxx153, align 4, !dbg !8510
  %149 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8511
  %maxy154 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %149, i32 0, i32 4, !dbg !8512
  %150 = load float, float* %maxy154, align 4, !dbg !8512
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8513
  %151 = load float, float* %arrayidx155, align 4, !dbg !8513
  %152 = load float, float* %hull, align 4, !dbg !8514
  %add156 = fadd float %151, %152, !dbg !8515
  %call157 = call float @max_ff(float %150, float %add156), !dbg !8516
  %153 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8517
  %maxy158 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %153, i32 0, i32 4, !dbg !8518
  store float %call157, float* %maxy158, align 4, !dbg !8519
  %154 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8520
  %maxz159 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %154, i32 0, i32 5, !dbg !8521
  %155 = load float, float* %maxz159, align 4, !dbg !8521
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8522
  %156 = load float, float* %arrayidx160, align 4, !dbg !8522
  %157 = load float, float* %hull, align 4, !dbg !8523
  %add161 = fadd float %156, %157, !dbg !8524
  %call162 = call float @max_ff(float %155, float %add161), !dbg !8525
  %158 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8526
  %maxz163 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %158, i32 0, i32 5, !dbg !8527
  store float %call162, float* %maxz163, align 4, !dbg !8528
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8529
  %159 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8530
  %mvert165 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %159, i32 0, i32 2, !dbg !8531
  %160 = load %struct.MVert*, %struct.MVert** %mvert165, align 8, !dbg !8531
  %161 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8532
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %161, i32 0, i32 1, !dbg !8533
  %162 = load i32, i32* %v2, align 4, !dbg !8533
  %idxprom166 = zext i32 %162 to i64, !dbg !8530
  %arrayidx167 = getelementptr inbounds %struct.MVert, %struct.MVert* %160, i64 %idxprom166, !dbg !8530
  %co168 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx167, i32 0, i32 0, !dbg !8534
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %co168, i64 0, i64 0, !dbg !8530
  call void @copy_v3_v3(float* %arraydecay164, float* %arraydecay169), !dbg !8535
  %163 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8536
  %minx170 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %163, i32 0, i32 0, !dbg !8537
  %164 = load float, float* %minx170, align 4, !dbg !8537
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8538
  %165 = load float, float* %arrayidx171, align 4, !dbg !8538
  %166 = load float, float* %hull, align 4, !dbg !8539
  %sub172 = fsub float %165, %166, !dbg !8540
  %call173 = call float @min_ff(float %164, float %sub172), !dbg !8541
  %167 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8542
  %minx174 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %167, i32 0, i32 0, !dbg !8543
  store float %call173, float* %minx174, align 4, !dbg !8544
  %168 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8545
  %miny175 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %168, i32 0, i32 1, !dbg !8546
  %169 = load float, float* %miny175, align 4, !dbg !8546
  %arrayidx176 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8547
  %170 = load float, float* %arrayidx176, align 4, !dbg !8547
  %171 = load float, float* %hull, align 4, !dbg !8548
  %sub177 = fsub float %170, %171, !dbg !8549
  %call178 = call float @min_ff(float %169, float %sub177), !dbg !8550
  %172 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8551
  %miny179 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %172, i32 0, i32 1, !dbg !8552
  store float %call178, float* %miny179, align 4, !dbg !8553
  %173 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8554
  %minz180 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %173, i32 0, i32 2, !dbg !8555
  %174 = load float, float* %minz180, align 4, !dbg !8555
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8556
  %175 = load float, float* %arrayidx181, align 4, !dbg !8556
  %176 = load float, float* %hull, align 4, !dbg !8557
  %sub182 = fsub float %175, %176, !dbg !8558
  %call183 = call float @min_ff(float %174, float %sub182), !dbg !8559
  %177 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8560
  %minz184 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %177, i32 0, i32 2, !dbg !8561
  store float %call183, float* %minz184, align 4, !dbg !8562
  %178 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8563
  %maxx185 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %178, i32 0, i32 3, !dbg !8564
  %179 = load float, float* %maxx185, align 4, !dbg !8564
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8565
  %180 = load float, float* %arrayidx186, align 4, !dbg !8565
  %181 = load float, float* %hull, align 4, !dbg !8566
  %add187 = fadd float %180, %181, !dbg !8567
  %call188 = call float @max_ff(float %179, float %add187), !dbg !8568
  %182 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8569
  %maxx189 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %182, i32 0, i32 3, !dbg !8570
  store float %call188, float* %maxx189, align 4, !dbg !8571
  %183 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8572
  %maxy190 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %183, i32 0, i32 4, !dbg !8573
  %184 = load float, float* %maxy190, align 4, !dbg !8573
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8574
  %185 = load float, float* %arrayidx191, align 4, !dbg !8574
  %186 = load float, float* %hull, align 4, !dbg !8575
  %add192 = fadd float %185, %186, !dbg !8576
  %call193 = call float @max_ff(float %184, float %add192), !dbg !8577
  %187 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8578
  %maxy194 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %187, i32 0, i32 4, !dbg !8579
  store float %call193, float* %maxy194, align 4, !dbg !8580
  %188 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8581
  %maxz195 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %188, i32 0, i32 5, !dbg !8582
  %189 = load float, float* %maxz195, align 4, !dbg !8582
  %arrayidx196 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8583
  %190 = load float, float* %arrayidx196, align 4, !dbg !8583
  %191 = load float, float* %hull, align 4, !dbg !8584
  %add197 = fadd float %190, %191, !dbg !8585
  %call198 = call float @max_ff(float %189, float %add197), !dbg !8586
  %192 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8587
  %maxz199 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %192, i32 0, i32 5, !dbg !8588
  store float %call198, float* %maxz199, align 4, !dbg !8589
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8590
  %193 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8591
  %mvert201 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %193, i32 0, i32 2, !dbg !8592
  %194 = load %struct.MVert*, %struct.MVert** %mvert201, align 8, !dbg !8592
  %195 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8593
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %195, i32 0, i32 2, !dbg !8594
  %196 = load i32, i32* %v3, align 4, !dbg !8594
  %idxprom202 = zext i32 %196 to i64, !dbg !8591
  %arrayidx203 = getelementptr inbounds %struct.MVert, %struct.MVert* %194, i64 %idxprom202, !dbg !8591
  %co204 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx203, i32 0, i32 0, !dbg !8595
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %co204, i64 0, i64 0, !dbg !8591
  call void @copy_v3_v3(float* %arraydecay200, float* %arraydecay205), !dbg !8596
  %197 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8597
  %minx206 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %197, i32 0, i32 0, !dbg !8598
  %198 = load float, float* %minx206, align 4, !dbg !8598
  %arrayidx207 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8599
  %199 = load float, float* %arrayidx207, align 4, !dbg !8599
  %200 = load float, float* %hull, align 4, !dbg !8600
  %sub208 = fsub float %199, %200, !dbg !8601
  %call209 = call float @min_ff(float %198, float %sub208), !dbg !8602
  %201 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8603
  %minx210 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %201, i32 0, i32 0, !dbg !8604
  store float %call209, float* %minx210, align 4, !dbg !8605
  %202 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8606
  %miny211 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %202, i32 0, i32 1, !dbg !8607
  %203 = load float, float* %miny211, align 4, !dbg !8607
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8608
  %204 = load float, float* %arrayidx212, align 4, !dbg !8608
  %205 = load float, float* %hull, align 4, !dbg !8609
  %sub213 = fsub float %204, %205, !dbg !8610
  %call214 = call float @min_ff(float %203, float %sub213), !dbg !8611
  %206 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8612
  %miny215 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %206, i32 0, i32 1, !dbg !8613
  store float %call214, float* %miny215, align 4, !dbg !8614
  %207 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8615
  %minz216 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %207, i32 0, i32 2, !dbg !8616
  %208 = load float, float* %minz216, align 4, !dbg !8616
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8617
  %209 = load float, float* %arrayidx217, align 4, !dbg !8617
  %210 = load float, float* %hull, align 4, !dbg !8618
  %sub218 = fsub float %209, %210, !dbg !8619
  %call219 = call float @min_ff(float %208, float %sub218), !dbg !8620
  %211 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8621
  %minz220 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %211, i32 0, i32 2, !dbg !8622
  store float %call219, float* %minz220, align 4, !dbg !8623
  %212 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8624
  %maxx221 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %212, i32 0, i32 3, !dbg !8625
  %213 = load float, float* %maxx221, align 4, !dbg !8625
  %arrayidx222 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8626
  %214 = load float, float* %arrayidx222, align 4, !dbg !8626
  %215 = load float, float* %hull, align 4, !dbg !8627
  %add223 = fadd float %214, %215, !dbg !8628
  %call224 = call float @max_ff(float %213, float %add223), !dbg !8629
  %216 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8630
  %maxx225 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %216, i32 0, i32 3, !dbg !8631
  store float %call224, float* %maxx225, align 4, !dbg !8632
  %217 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8633
  %maxy226 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %217, i32 0, i32 4, !dbg !8634
  %218 = load float, float* %maxy226, align 4, !dbg !8634
  %arrayidx227 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8635
  %219 = load float, float* %arrayidx227, align 4, !dbg !8635
  %220 = load float, float* %hull, align 4, !dbg !8636
  %add228 = fadd float %219, %220, !dbg !8637
  %call229 = call float @max_ff(float %218, float %add228), !dbg !8638
  %221 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8639
  %maxy230 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %221, i32 0, i32 4, !dbg !8640
  store float %call229, float* %maxy230, align 4, !dbg !8641
  %222 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8642
  %maxz231 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %222, i32 0, i32 5, !dbg !8643
  %223 = load float, float* %maxz231, align 4, !dbg !8643
  %arrayidx232 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8644
  %224 = load float, float* %arrayidx232, align 4, !dbg !8644
  %225 = load float, float* %hull, align 4, !dbg !8645
  %add233 = fadd float %224, %225, !dbg !8646
  %call234 = call float @max_ff(float %223, float %add233), !dbg !8647
  %226 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8648
  %maxz235 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %226, i32 0, i32 5, !dbg !8649
  store float %call234, float* %maxz235, align 4, !dbg !8650
  %227 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8651
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %227, i32 0, i32 3, !dbg !8653
  %228 = load i32, i32* %v4, align 4, !dbg !8653
  %tobool236 = icmp ne i32 %228, 0, !dbg !8651
  br i1 %tobool236, label %if.then237, label %if.end275, !dbg !8654

if.then237:                                       ; preds = %for.body127
  %arraydecay238 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8655
  %229 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8657
  %mvert239 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %229, i32 0, i32 2, !dbg !8658
  %230 = load %struct.MVert*, %struct.MVert** %mvert239, align 8, !dbg !8658
  %231 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8659
  %v4240 = getelementptr inbounds %struct.MFace, %struct.MFace* %231, i32 0, i32 3, !dbg !8660
  %232 = load i32, i32* %v4240, align 4, !dbg !8660
  %idxprom241 = zext i32 %232 to i64, !dbg !8657
  %arrayidx242 = getelementptr inbounds %struct.MVert, %struct.MVert* %230, i64 %idxprom241, !dbg !8657
  %co243 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx242, i32 0, i32 0, !dbg !8661
  %arraydecay244 = getelementptr inbounds [3 x float], [3 x float]* %co243, i64 0, i64 0, !dbg !8657
  call void @copy_v3_v3(float* %arraydecay238, float* %arraydecay244), !dbg !8662
  %233 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8663
  %minx245 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %233, i32 0, i32 0, !dbg !8664
  %234 = load float, float* %minx245, align 4, !dbg !8664
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8665
  %235 = load float, float* %arrayidx246, align 4, !dbg !8665
  %236 = load float, float* %hull, align 4, !dbg !8666
  %sub247 = fsub float %235, %236, !dbg !8667
  %call248 = call float @min_ff(float %234, float %sub247), !dbg !8668
  %237 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8669
  %minx249 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %237, i32 0, i32 0, !dbg !8670
  store float %call248, float* %minx249, align 4, !dbg !8671
  %238 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8672
  %miny250 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %238, i32 0, i32 1, !dbg !8673
  %239 = load float, float* %miny250, align 4, !dbg !8673
  %arrayidx251 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8674
  %240 = load float, float* %arrayidx251, align 4, !dbg !8674
  %241 = load float, float* %hull, align 4, !dbg !8675
  %sub252 = fsub float %240, %241, !dbg !8676
  %call253 = call float @min_ff(float %239, float %sub252), !dbg !8677
  %242 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8678
  %miny254 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %242, i32 0, i32 1, !dbg !8679
  store float %call253, float* %miny254, align 4, !dbg !8680
  %243 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8681
  %minz255 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %243, i32 0, i32 2, !dbg !8682
  %244 = load float, float* %minz255, align 4, !dbg !8682
  %arrayidx256 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8683
  %245 = load float, float* %arrayidx256, align 4, !dbg !8683
  %246 = load float, float* %hull, align 4, !dbg !8684
  %sub257 = fsub float %245, %246, !dbg !8685
  %call258 = call float @min_ff(float %244, float %sub257), !dbg !8686
  %247 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8687
  %minz259 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %247, i32 0, i32 2, !dbg !8688
  store float %call258, float* %minz259, align 4, !dbg !8689
  %248 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8690
  %maxx260 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %248, i32 0, i32 3, !dbg !8691
  %249 = load float, float* %maxx260, align 4, !dbg !8691
  %arrayidx261 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8692
  %250 = load float, float* %arrayidx261, align 4, !dbg !8692
  %251 = load float, float* %hull, align 4, !dbg !8693
  %add262 = fadd float %250, %251, !dbg !8694
  %call263 = call float @max_ff(float %249, float %add262), !dbg !8695
  %252 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8696
  %maxx264 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %252, i32 0, i32 3, !dbg !8697
  store float %call263, float* %maxx264, align 4, !dbg !8698
  %253 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8699
  %maxy265 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %253, i32 0, i32 4, !dbg !8700
  %254 = load float, float* %maxy265, align 4, !dbg !8700
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8701
  %255 = load float, float* %arrayidx266, align 4, !dbg !8701
  %256 = load float, float* %hull, align 4, !dbg !8702
  %add267 = fadd float %255, %256, !dbg !8703
  %call268 = call float @max_ff(float %254, float %add267), !dbg !8704
  %257 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8705
  %maxy269 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %257, i32 0, i32 4, !dbg !8706
  store float %call268, float* %maxy269, align 4, !dbg !8707
  %258 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8708
  %maxz270 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %258, i32 0, i32 5, !dbg !8709
  %259 = load float, float* %maxz270, align 4, !dbg !8709
  %arrayidx271 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8710
  %260 = load float, float* %arrayidx271, align 4, !dbg !8710
  %261 = load float, float* %hull, align 4, !dbg !8711
  %add272 = fadd float %260, %261, !dbg !8712
  %call273 = call float @max_ff(float %259, float %add272), !dbg !8713
  %262 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8714
  %maxz274 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %262, i32 0, i32 5, !dbg !8715
  store float %call273, float* %maxz274, align 4, !dbg !8716
  br label %if.end275, !dbg !8717

if.end275:                                        ; preds = %if.then237, %for.body127
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8718
  %263 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8719
  %mprevvert277 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %263, i32 0, i32 3, !dbg !8720
  %264 = load %struct.MVert*, %struct.MVert** %mprevvert277, align 8, !dbg !8720
  %265 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8721
  %v1278 = getelementptr inbounds %struct.MFace, %struct.MFace* %265, i32 0, i32 0, !dbg !8722
  %266 = load i32, i32* %v1278, align 4, !dbg !8722
  %idxprom279 = zext i32 %266 to i64, !dbg !8719
  %arrayidx280 = getelementptr inbounds %struct.MVert, %struct.MVert* %264, i64 %idxprom279, !dbg !8719
  %co281 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx280, i32 0, i32 0, !dbg !8723
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %co281, i64 0, i64 0, !dbg !8719
  call void @copy_v3_v3(float* %arraydecay276, float* %arraydecay282), !dbg !8724
  %267 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8725
  %minx283 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %267, i32 0, i32 0, !dbg !8726
  %268 = load float, float* %minx283, align 4, !dbg !8726
  %arrayidx284 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8727
  %269 = load float, float* %arrayidx284, align 4, !dbg !8727
  %270 = load float, float* %hull, align 4, !dbg !8728
  %sub285 = fsub float %269, %270, !dbg !8729
  %call286 = call float @min_ff(float %268, float %sub285), !dbg !8730
  %271 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8731
  %minx287 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %271, i32 0, i32 0, !dbg !8732
  store float %call286, float* %minx287, align 4, !dbg !8733
  %272 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8734
  %miny288 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %272, i32 0, i32 1, !dbg !8735
  %273 = load float, float* %miny288, align 4, !dbg !8735
  %arrayidx289 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8736
  %274 = load float, float* %arrayidx289, align 4, !dbg !8736
  %275 = load float, float* %hull, align 4, !dbg !8737
  %sub290 = fsub float %274, %275, !dbg !8738
  %call291 = call float @min_ff(float %273, float %sub290), !dbg !8739
  %276 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8740
  %miny292 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %276, i32 0, i32 1, !dbg !8741
  store float %call291, float* %miny292, align 4, !dbg !8742
  %277 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8743
  %minz293 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %277, i32 0, i32 2, !dbg !8744
  %278 = load float, float* %minz293, align 4, !dbg !8744
  %arrayidx294 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8745
  %279 = load float, float* %arrayidx294, align 4, !dbg !8745
  %280 = load float, float* %hull, align 4, !dbg !8746
  %sub295 = fsub float %279, %280, !dbg !8747
  %call296 = call float @min_ff(float %278, float %sub295), !dbg !8748
  %281 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8749
  %minz297 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %281, i32 0, i32 2, !dbg !8750
  store float %call296, float* %minz297, align 4, !dbg !8751
  %282 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8752
  %maxx298 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %282, i32 0, i32 3, !dbg !8753
  %283 = load float, float* %maxx298, align 4, !dbg !8753
  %arrayidx299 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8754
  %284 = load float, float* %arrayidx299, align 4, !dbg !8754
  %285 = load float, float* %hull, align 4, !dbg !8755
  %add300 = fadd float %284, %285, !dbg !8756
  %call301 = call float @max_ff(float %283, float %add300), !dbg !8757
  %286 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8758
  %maxx302 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %286, i32 0, i32 3, !dbg !8759
  store float %call301, float* %maxx302, align 4, !dbg !8760
  %287 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8761
  %maxy303 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %287, i32 0, i32 4, !dbg !8762
  %288 = load float, float* %maxy303, align 4, !dbg !8762
  %arrayidx304 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8763
  %289 = load float, float* %arrayidx304, align 4, !dbg !8763
  %290 = load float, float* %hull, align 4, !dbg !8764
  %add305 = fadd float %289, %290, !dbg !8765
  %call306 = call float @max_ff(float %288, float %add305), !dbg !8766
  %291 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8767
  %maxy307 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %291, i32 0, i32 4, !dbg !8768
  store float %call306, float* %maxy307, align 4, !dbg !8769
  %292 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8770
  %maxz308 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %292, i32 0, i32 5, !dbg !8771
  %293 = load float, float* %maxz308, align 4, !dbg !8771
  %arrayidx309 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8772
  %294 = load float, float* %arrayidx309, align 4, !dbg !8772
  %295 = load float, float* %hull, align 4, !dbg !8773
  %add310 = fadd float %294, %295, !dbg !8774
  %call311 = call float @max_ff(float %293, float %add310), !dbg !8775
  %296 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8776
  %maxz312 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %296, i32 0, i32 5, !dbg !8777
  store float %call311, float* %maxz312, align 4, !dbg !8778
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8779
  %297 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8780
  %mprevvert314 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %297, i32 0, i32 3, !dbg !8781
  %298 = load %struct.MVert*, %struct.MVert** %mprevvert314, align 8, !dbg !8781
  %299 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8782
  %v2315 = getelementptr inbounds %struct.MFace, %struct.MFace* %299, i32 0, i32 1, !dbg !8783
  %300 = load i32, i32* %v2315, align 4, !dbg !8783
  %idxprom316 = zext i32 %300 to i64, !dbg !8780
  %arrayidx317 = getelementptr inbounds %struct.MVert, %struct.MVert* %298, i64 %idxprom316, !dbg !8780
  %co318 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx317, i32 0, i32 0, !dbg !8784
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %co318, i64 0, i64 0, !dbg !8780
  call void @copy_v3_v3(float* %arraydecay313, float* %arraydecay319), !dbg !8785
  %301 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8786
  %minx320 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %301, i32 0, i32 0, !dbg !8787
  %302 = load float, float* %minx320, align 4, !dbg !8787
  %arrayidx321 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8788
  %303 = load float, float* %arrayidx321, align 4, !dbg !8788
  %304 = load float, float* %hull, align 4, !dbg !8789
  %sub322 = fsub float %303, %304, !dbg !8790
  %call323 = call float @min_ff(float %302, float %sub322), !dbg !8791
  %305 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8792
  %minx324 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %305, i32 0, i32 0, !dbg !8793
  store float %call323, float* %minx324, align 4, !dbg !8794
  %306 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8795
  %miny325 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %306, i32 0, i32 1, !dbg !8796
  %307 = load float, float* %miny325, align 4, !dbg !8796
  %arrayidx326 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8797
  %308 = load float, float* %arrayidx326, align 4, !dbg !8797
  %309 = load float, float* %hull, align 4, !dbg !8798
  %sub327 = fsub float %308, %309, !dbg !8799
  %call328 = call float @min_ff(float %307, float %sub327), !dbg !8800
  %310 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8801
  %miny329 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %310, i32 0, i32 1, !dbg !8802
  store float %call328, float* %miny329, align 4, !dbg !8803
  %311 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8804
  %minz330 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %311, i32 0, i32 2, !dbg !8805
  %312 = load float, float* %minz330, align 4, !dbg !8805
  %arrayidx331 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8806
  %313 = load float, float* %arrayidx331, align 4, !dbg !8806
  %314 = load float, float* %hull, align 4, !dbg !8807
  %sub332 = fsub float %313, %314, !dbg !8808
  %call333 = call float @min_ff(float %312, float %sub332), !dbg !8809
  %315 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8810
  %minz334 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %315, i32 0, i32 2, !dbg !8811
  store float %call333, float* %minz334, align 4, !dbg !8812
  %316 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8813
  %maxx335 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %316, i32 0, i32 3, !dbg !8814
  %317 = load float, float* %maxx335, align 4, !dbg !8814
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8815
  %318 = load float, float* %arrayidx336, align 4, !dbg !8815
  %319 = load float, float* %hull, align 4, !dbg !8816
  %add337 = fadd float %318, %319, !dbg !8817
  %call338 = call float @max_ff(float %317, float %add337), !dbg !8818
  %320 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8819
  %maxx339 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %320, i32 0, i32 3, !dbg !8820
  store float %call338, float* %maxx339, align 4, !dbg !8821
  %321 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8822
  %maxy340 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %321, i32 0, i32 4, !dbg !8823
  %322 = load float, float* %maxy340, align 4, !dbg !8823
  %arrayidx341 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8824
  %323 = load float, float* %arrayidx341, align 4, !dbg !8824
  %324 = load float, float* %hull, align 4, !dbg !8825
  %add342 = fadd float %323, %324, !dbg !8826
  %call343 = call float @max_ff(float %322, float %add342), !dbg !8827
  %325 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8828
  %maxy344 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %325, i32 0, i32 4, !dbg !8829
  store float %call343, float* %maxy344, align 4, !dbg !8830
  %326 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8831
  %maxz345 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %326, i32 0, i32 5, !dbg !8832
  %327 = load float, float* %maxz345, align 4, !dbg !8832
  %arrayidx346 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8833
  %328 = load float, float* %arrayidx346, align 4, !dbg !8833
  %329 = load float, float* %hull, align 4, !dbg !8834
  %add347 = fadd float %328, %329, !dbg !8835
  %call348 = call float @max_ff(float %327, float %add347), !dbg !8836
  %330 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8837
  %maxz349 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %330, i32 0, i32 5, !dbg !8838
  store float %call348, float* %maxz349, align 4, !dbg !8839
  %arraydecay350 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8840
  %331 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8841
  %mprevvert351 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %331, i32 0, i32 3, !dbg !8842
  %332 = load %struct.MVert*, %struct.MVert** %mprevvert351, align 8, !dbg !8842
  %333 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8843
  %v3352 = getelementptr inbounds %struct.MFace, %struct.MFace* %333, i32 0, i32 2, !dbg !8844
  %334 = load i32, i32* %v3352, align 4, !dbg !8844
  %idxprom353 = zext i32 %334 to i64, !dbg !8841
  %arrayidx354 = getelementptr inbounds %struct.MVert, %struct.MVert* %332, i64 %idxprom353, !dbg !8841
  %co355 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx354, i32 0, i32 0, !dbg !8845
  %arraydecay356 = getelementptr inbounds [3 x float], [3 x float]* %co355, i64 0, i64 0, !dbg !8841
  call void @copy_v3_v3(float* %arraydecay350, float* %arraydecay356), !dbg !8846
  %335 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8847
  %minx357 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %335, i32 0, i32 0, !dbg !8848
  %336 = load float, float* %minx357, align 4, !dbg !8848
  %arrayidx358 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8849
  %337 = load float, float* %arrayidx358, align 4, !dbg !8849
  %338 = load float, float* %hull, align 4, !dbg !8850
  %sub359 = fsub float %337, %338, !dbg !8851
  %call360 = call float @min_ff(float %336, float %sub359), !dbg !8852
  %339 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8853
  %minx361 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %339, i32 0, i32 0, !dbg !8854
  store float %call360, float* %minx361, align 4, !dbg !8855
  %340 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8856
  %miny362 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %340, i32 0, i32 1, !dbg !8857
  %341 = load float, float* %miny362, align 4, !dbg !8857
  %arrayidx363 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8858
  %342 = load float, float* %arrayidx363, align 4, !dbg !8858
  %343 = load float, float* %hull, align 4, !dbg !8859
  %sub364 = fsub float %342, %343, !dbg !8860
  %call365 = call float @min_ff(float %341, float %sub364), !dbg !8861
  %344 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8862
  %miny366 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %344, i32 0, i32 1, !dbg !8863
  store float %call365, float* %miny366, align 4, !dbg !8864
  %345 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8865
  %minz367 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %345, i32 0, i32 2, !dbg !8866
  %346 = load float, float* %minz367, align 4, !dbg !8866
  %arrayidx368 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8867
  %347 = load float, float* %arrayidx368, align 4, !dbg !8867
  %348 = load float, float* %hull, align 4, !dbg !8868
  %sub369 = fsub float %347, %348, !dbg !8869
  %call370 = call float @min_ff(float %346, float %sub369), !dbg !8870
  %349 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8871
  %minz371 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %349, i32 0, i32 2, !dbg !8872
  store float %call370, float* %minz371, align 4, !dbg !8873
  %350 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8874
  %maxx372 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %350, i32 0, i32 3, !dbg !8875
  %351 = load float, float* %maxx372, align 4, !dbg !8875
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8876
  %352 = load float, float* %arrayidx373, align 4, !dbg !8876
  %353 = load float, float* %hull, align 4, !dbg !8877
  %add374 = fadd float %352, %353, !dbg !8878
  %call375 = call float @max_ff(float %351, float %add374), !dbg !8879
  %354 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8880
  %maxx376 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %354, i32 0, i32 3, !dbg !8881
  store float %call375, float* %maxx376, align 4, !dbg !8882
  %355 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8883
  %maxy377 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %355, i32 0, i32 4, !dbg !8884
  %356 = load float, float* %maxy377, align 4, !dbg !8884
  %arrayidx378 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8885
  %357 = load float, float* %arrayidx378, align 4, !dbg !8885
  %358 = load float, float* %hull, align 4, !dbg !8886
  %add379 = fadd float %357, %358, !dbg !8887
  %call380 = call float @max_ff(float %356, float %add379), !dbg !8888
  %359 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8889
  %maxy381 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %359, i32 0, i32 4, !dbg !8890
  store float %call380, float* %maxy381, align 4, !dbg !8891
  %360 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8892
  %maxz382 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %360, i32 0, i32 5, !dbg !8893
  %361 = load float, float* %maxz382, align 4, !dbg !8893
  %arrayidx383 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8894
  %362 = load float, float* %arrayidx383, align 4, !dbg !8894
  %363 = load float, float* %hull, align 4, !dbg !8895
  %add384 = fadd float %362, %363, !dbg !8896
  %call385 = call float @max_ff(float %361, float %add384), !dbg !8897
  %364 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8898
  %maxz386 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %364, i32 0, i32 5, !dbg !8899
  store float %call385, float* %maxz386, align 4, !dbg !8900
  %365 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8901
  %v4387 = getelementptr inbounds %struct.MFace, %struct.MFace* %365, i32 0, i32 3, !dbg !8903
  %366 = load i32, i32* %v4387, align 4, !dbg !8903
  %tobool388 = icmp ne i32 %366, 0, !dbg !8901
  br i1 %tobool388, label %if.then389, label %if.end427, !dbg !8904

if.then389:                                       ; preds = %if.end275
  %arraydecay390 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8905
  %367 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M.addr, align 8, !dbg !8907
  %mprevvert391 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %367, i32 0, i32 3, !dbg !8908
  %368 = load %struct.MVert*, %struct.MVert** %mprevvert391, align 8, !dbg !8908
  %369 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8909
  %v4392 = getelementptr inbounds %struct.MFace, %struct.MFace* %369, i32 0, i32 3, !dbg !8910
  %370 = load i32, i32* %v4392, align 4, !dbg !8910
  %idxprom393 = zext i32 %370 to i64, !dbg !8907
  %arrayidx394 = getelementptr inbounds %struct.MVert, %struct.MVert* %368, i64 %idxprom393, !dbg !8907
  %co395 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx394, i32 0, i32 0, !dbg !8911
  %arraydecay396 = getelementptr inbounds [3 x float], [3 x float]* %co395, i64 0, i64 0, !dbg !8907
  call void @copy_v3_v3(float* %arraydecay390, float* %arraydecay396), !dbg !8912
  %371 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8913
  %minx397 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %371, i32 0, i32 0, !dbg !8914
  %372 = load float, float* %minx397, align 4, !dbg !8914
  %arrayidx398 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8915
  %373 = load float, float* %arrayidx398, align 4, !dbg !8915
  %374 = load float, float* %hull, align 4, !dbg !8916
  %sub399 = fsub float %373, %374, !dbg !8917
  %call400 = call float @min_ff(float %372, float %sub399), !dbg !8918
  %375 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8919
  %minx401 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %375, i32 0, i32 0, !dbg !8920
  store float %call400, float* %minx401, align 4, !dbg !8921
  %376 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8922
  %miny402 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %376, i32 0, i32 1, !dbg !8923
  %377 = load float, float* %miny402, align 4, !dbg !8923
  %arrayidx403 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8924
  %378 = load float, float* %arrayidx403, align 4, !dbg !8924
  %379 = load float, float* %hull, align 4, !dbg !8925
  %sub404 = fsub float %378, %379, !dbg !8926
  %call405 = call float @min_ff(float %377, float %sub404), !dbg !8927
  %380 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8928
  %miny406 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %380, i32 0, i32 1, !dbg !8929
  store float %call405, float* %miny406, align 4, !dbg !8930
  %381 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8931
  %minz407 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %381, i32 0, i32 2, !dbg !8932
  %382 = load float, float* %minz407, align 4, !dbg !8932
  %arrayidx408 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8933
  %383 = load float, float* %arrayidx408, align 4, !dbg !8933
  %384 = load float, float* %hull, align 4, !dbg !8934
  %sub409 = fsub float %383, %384, !dbg !8935
  %call410 = call float @min_ff(float %382, float %sub409), !dbg !8936
  %385 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8937
  %minz411 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %385, i32 0, i32 2, !dbg !8938
  store float %call410, float* %minz411, align 4, !dbg !8939
  %386 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8940
  %maxx412 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %386, i32 0, i32 3, !dbg !8941
  %387 = load float, float* %maxx412, align 4, !dbg !8941
  %arrayidx413 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !8942
  %388 = load float, float* %arrayidx413, align 4, !dbg !8942
  %389 = load float, float* %hull, align 4, !dbg !8943
  %add414 = fadd float %388, %389, !dbg !8944
  %call415 = call float @max_ff(float %387, float %add414), !dbg !8945
  %390 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8946
  %maxx416 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %390, i32 0, i32 3, !dbg !8947
  store float %call415, float* %maxx416, align 4, !dbg !8948
  %391 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8949
  %maxy417 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %391, i32 0, i32 4, !dbg !8950
  %392 = load float, float* %maxy417, align 4, !dbg !8950
  %arrayidx418 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !8951
  %393 = load float, float* %arrayidx418, align 4, !dbg !8951
  %394 = load float, float* %hull, align 4, !dbg !8952
  %add419 = fadd float %393, %394, !dbg !8953
  %call420 = call float @max_ff(float %392, float %add419), !dbg !8954
  %395 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8955
  %maxy421 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %395, i32 0, i32 4, !dbg !8956
  store float %call420, float* %maxy421, align 4, !dbg !8957
  %396 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8958
  %maxz422 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %396, i32 0, i32 5, !dbg !8959
  %397 = load float, float* %maxz422, align 4, !dbg !8959
  %arrayidx423 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !8960
  %398 = load float, float* %arrayidx423, align 4, !dbg !8960
  %399 = load float, float* %hull, align 4, !dbg !8961
  %add424 = fadd float %398, %399, !dbg !8962
  %call425 = call float @max_ff(float %397, float %add424), !dbg !8963
  %400 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8964
  %maxz426 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %400, i32 0, i32 5, !dbg !8965
  store float %call425, float* %maxz426, align 4, !dbg !8966
  br label %if.end427, !dbg !8967

if.end427:                                        ; preds = %if.then389, %if.end275
  %401 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !8968
  %incdec.ptr = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %401, i32 1, !dbg !8968
  store %struct.ccdf_minmax* %incdec.ptr, %struct.ccdf_minmax** %mima, align 8, !dbg !8968
  %402 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8969
  %incdec.ptr428 = getelementptr inbounds %struct.MFace, %struct.MFace* %402, i32 1, !dbg !8969
  store %struct.MFace* %incdec.ptr428, %struct.MFace** %mface, align 8, !dbg !8969
  br label %for.inc429, !dbg !8970

for.inc429:                                       ; preds = %if.end427
  %403 = load i32, i32* %i, align 4, !dbg !8971
  %inc430 = add nsw i32 %403, 1, !dbg !8971
  store i32 %inc430, i32* %i, align 4, !dbg !8971
  br label %for.cond124, !dbg !8972, !llvm.loop !8973

for.end431:                                       ; preds = %for.cond124
  br label %return, !dbg !8975

return:                                           ; preds = %for.end431, %if.then9, %if.then3, %if.then
  ret void, !dbg !8976
}

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @are_there_deflectors(%struct.Scene* %scene, i32 %layer) #0 !dbg !8977 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %layer.addr = alloca i32, align 4
  %base = alloca %struct.Base*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8980, metadata !DIExpression()), !dbg !8981
  store i32 %layer, i32* %layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8984, metadata !DIExpression()), !dbg !8985
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8986
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !8988
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !8989
  %1 = load i8*, i8** %first, align 8, !dbg !8989
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !8986
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !8990
  br label %for.cond, !dbg !8991

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8992
  %tobool = icmp ne %struct.Base* %3, null, !dbg !8994
  br i1 %tobool, label %for.body, label %for.end, !dbg !8994

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8995
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 2, !dbg !8998
  %5 = load i32, i32* %lay, align 8, !dbg !8998
  %6 = load i32, i32* %layer.addr, align 4, !dbg !8999
  %and = and i32 %5, %6, !dbg !9000
  %tobool2 = icmp ne i32 %and, 0, !dbg !9000
  br i1 %tobool2, label %land.lhs.true, label %if.end8, !dbg !9001

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9002
  %object = getelementptr inbounds %struct.Base, %struct.Base* %7, i32 0, i32 7, !dbg !9003
  %8 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9003
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 110, !dbg !9004
  %9 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !9004
  %tobool3 = icmp ne %struct.PartDeflect* %9, null, !dbg !9002
  br i1 %tobool3, label %if.then, label %if.end8, !dbg !9005

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9006
  %object4 = getelementptr inbounds %struct.Base, %struct.Base* %10, i32 0, i32 7, !dbg !9009
  %11 = load %struct.Object*, %struct.Object** %object4, align 8, !dbg !9009
  %pd5 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 110, !dbg !9010
  %12 = load %struct.PartDeflect*, %struct.PartDeflect** %pd5, align 8, !dbg !9010
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %12, i32 0, i32 1, !dbg !9011
  %13 = load i16, i16* %deflect, align 4, !dbg !9011
  %tobool6 = icmp ne i16 %13, 0, !dbg !9006
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9012

if.then7:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !9013
  br label %return, !dbg !9013

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !9014

if.end8:                                          ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9015

for.inc:                                          ; preds = %if.end8
  %14 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9016
  %next = getelementptr inbounds %struct.Base, %struct.Base* %14, i32 0, i32 0, !dbg !9017
  %15 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !9017
  store %struct.Base* %15, %struct.Base** %base, align 8, !dbg !9018
  br label %for.cond, !dbg !9019, !llvm.loop !9020

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9022
  br label %return, !dbg !9022

return:                                           ; preds = %for.end, %if.then7
  %16 = load i32, i32* %retval, align 4, !dbg !9023
  ret i32 %16, !dbg !9023
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ccd_Mesh* @ccd_mesh_make(%struct.Object* %ob) #0 !dbg !9024 {
entry:
  %retval = alloca %struct.ccd_Mesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cmd = alloca %struct.CollisionModifierData*, align 8
  %pccd_M = alloca %struct.ccd_Mesh*, align 8
  %mima = alloca %struct.ccdf_minmax*, align 8
  %mface = alloca %struct.MFace*, align 8
  %v = alloca [3 x float], align 4
  %hull = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata %struct.CollisionModifierData** %cmd, metadata !9029, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %pccd_M, metadata !9031, metadata !DIExpression()), !dbg !9032
  store %struct.ccd_Mesh* null, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9032
  call void @llvm.dbg.declare(metadata %struct.ccdf_minmax** %mima, metadata !9033, metadata !DIExpression()), !dbg !9034
  store %struct.ccdf_minmax* null, %struct.ccdf_minmax** %mima, align 8, !dbg !9034
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !9035, metadata !DIExpression()), !dbg !9036
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !9036
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !9037, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.declare(metadata float* %hull, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9041, metadata !DIExpression()), !dbg !9042
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9043
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %0, i32 23), !dbg !9044
  %1 = bitcast %struct.ModifierData* %call to %struct.CollisionModifierData*, !dbg !9045
  store %struct.CollisionModifierData* %1, %struct.CollisionModifierData** %cmd, align 8, !dbg !9046
  %2 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9047
  %tobool = icmp ne %struct.CollisionModifierData* %2, null, !dbg !9047
  br i1 %tobool, label %if.end, label %if.then, !dbg !9049

if.then:                                          ; preds = %entry
  store %struct.ccd_Mesh* null, %struct.ccd_Mesh** %retval, align 8, !dbg !9050
  br label %return, !dbg !9050

if.end:                                           ; preds = %entry
  %3 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9051
  %numverts = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %3, i32 0, i32 8, !dbg !9053
  %4 = load i32, i32* %numverts, align 8, !dbg !9053
  %tobool1 = icmp ne i32 %4, 0, !dbg !9051
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !9054

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9055
  %numfaces = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %5, i32 0, i32 9, !dbg !9056
  %6 = load i32, i32* %numfaces, align 4, !dbg !9056
  %tobool2 = icmp ne i32 %6, 0, !dbg !9055
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9057

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.ccd_Mesh* null, %struct.ccd_Mesh** %retval, align 8, !dbg !9058
  br label %return, !dbg !9058

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9059
  %call5 = call i8* %7(i64 72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)), !dbg !9059
  %8 = bitcast i8* %call5 to %struct.ccd_Mesh*, !dbg !9059
  store %struct.ccd_Mesh* %8, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9060
  %9 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9061
  %numverts6 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %9, i32 0, i32 8, !dbg !9062
  %10 = load i32, i32* %numverts6, align 8, !dbg !9062
  %11 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9063
  %totvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %11, i32 0, i32 0, !dbg !9064
  store i32 %10, i32* %totvert, align 8, !dbg !9065
  %12 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9066
  %numfaces7 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %12, i32 0, i32 9, !dbg !9067
  %13 = load i32, i32* %numfaces7, align 4, !dbg !9067
  %14 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9068
  %totface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %14, i32 0, i32 1, !dbg !9069
  store i32 %13, i32* %totface, align 4, !dbg !9070
  %15 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9071
  %savety = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %15, i32 0, i32 5, !dbg !9072
  store i32 190561, i32* %savety, align 8, !dbg !9073
  %16 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9074
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %16, i32 0, i32 7, !dbg !9075
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 2, !dbg !9074
  store float 0x46293E5940000000, float* %arrayidx, align 8, !dbg !9076
  %17 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9077
  %bbmin8 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %17, i32 0, i32 7, !dbg !9078
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %bbmin8, i64 0, i64 1, !dbg !9077
  store float 0x46293E5940000000, float* %arrayidx9, align 4, !dbg !9079
  %18 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9080
  %bbmin10 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %18, i32 0, i32 7, !dbg !9081
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %bbmin10, i64 0, i64 0, !dbg !9080
  store float 0x46293E5940000000, float* %arrayidx11, align 8, !dbg !9082
  %19 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9083
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %19, i32 0, i32 8, !dbg !9084
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 2, !dbg !9083
  store float 0xC6293E5940000000, float* %arrayidx12, align 4, !dbg !9085
  %20 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9086
  %bbmax13 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %20, i32 0, i32 8, !dbg !9087
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %bbmax13, i64 0, i64 1, !dbg !9086
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !9088
  %21 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9089
  %bbmax15 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %21, i32 0, i32 8, !dbg !9090
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %bbmax15, i64 0, i64 0, !dbg !9089
  store float 0xC6293E5940000000, float* %arrayidx16, align 4, !dbg !9091
  %22 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9092
  %mprevvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %22, i32 0, i32 3, !dbg !9093
  store %struct.MVert* null, %struct.MVert** %mprevvert, align 8, !dbg !9094
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9095
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 110, !dbg !9096
  %24 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !9096
  %pdef_sbift = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %24, i32 0, i32 27, !dbg !9097
  %25 = load float, float* %pdef_sbift, align 4, !dbg !9097
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9098
  %pd17 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 110, !dbg !9099
  %27 = load %struct.PartDeflect*, %struct.PartDeflect** %pd17, align 8, !dbg !9099
  %pdef_sboft = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %27, i32 0, i32 28, !dbg !9100
  %28 = load float, float* %pdef_sboft, align 8, !dbg !9100
  %call18 = call float @max_ff(float %25, float %28), !dbg !9101
  store float %call18, float* %hull, align 4, !dbg !9102
  %29 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9103
  %30 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9104
  %xnew = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %30, i32 0, i32 2, !dbg !9105
  %31 = load %struct.MVert*, %struct.MVert** %xnew, align 8, !dbg !9105
  %32 = bitcast %struct.MVert* %31 to i8*, !dbg !9104
  %call19 = call i8* %29(i8* %32), !dbg !9103
  %33 = bitcast i8* %call19 to %struct.MVert*, !dbg !9103
  %34 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9106
  %mvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %34, i32 0, i32 2, !dbg !9107
  store %struct.MVert* %33, %struct.MVert** %mvert, align 8, !dbg !9108
  store i32 0, i32* %i, align 4, !dbg !9109
  br label %for.cond, !dbg !9111

for.cond:                                         ; preds = %for.inc, %if.end4
  %35 = load i32, i32* %i, align 4, !dbg !9112
  %36 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9114
  %totvert20 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %36, i32 0, i32 0, !dbg !9115
  %37 = load i32, i32* %totvert20, align 8, !dbg !9115
  %cmp = icmp slt i32 %35, %37, !dbg !9116
  br i1 %cmp, label %for.body, label %for.end, !dbg !9117

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9118
  %38 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9120
  %mvert21 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %38, i32 0, i32 2, !dbg !9121
  %39 = load %struct.MVert*, %struct.MVert** %mvert21, align 8, !dbg !9121
  %40 = load i32, i32* %i, align 4, !dbg !9122
  %idxprom = sext i32 %40 to i64, !dbg !9120
  %arrayidx22 = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i64 %idxprom, !dbg !9120
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx22, i32 0, i32 0, !dbg !9123
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9120
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay23), !dbg !9124
  %41 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9125
  %bbmin24 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %41, i32 0, i32 7, !dbg !9126
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %bbmin24, i64 0, i64 0, !dbg !9125
  %42 = load float, float* %arrayidx25, align 8, !dbg !9125
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9127
  %43 = load float, float* %arrayidx26, align 4, !dbg !9127
  %44 = load float, float* %hull, align 4, !dbg !9128
  %sub = fsub float %43, %44, !dbg !9129
  %call27 = call float @min_ff(float %42, float %sub), !dbg !9130
  %45 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9131
  %bbmin28 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %45, i32 0, i32 7, !dbg !9132
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %bbmin28, i64 0, i64 0, !dbg !9131
  store float %call27, float* %arrayidx29, align 8, !dbg !9133
  %46 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9134
  %bbmin30 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %46, i32 0, i32 7, !dbg !9135
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %bbmin30, i64 0, i64 1, !dbg !9134
  %47 = load float, float* %arrayidx31, align 4, !dbg !9134
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9136
  %48 = load float, float* %arrayidx32, align 4, !dbg !9136
  %49 = load float, float* %hull, align 4, !dbg !9137
  %sub33 = fsub float %48, %49, !dbg !9138
  %call34 = call float @min_ff(float %47, float %sub33), !dbg !9139
  %50 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9140
  %bbmin35 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %50, i32 0, i32 7, !dbg !9141
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %bbmin35, i64 0, i64 1, !dbg !9140
  store float %call34, float* %arrayidx36, align 4, !dbg !9142
  %51 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9143
  %bbmin37 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %51, i32 0, i32 7, !dbg !9144
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %bbmin37, i64 0, i64 2, !dbg !9143
  %52 = load float, float* %arrayidx38, align 8, !dbg !9143
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9145
  %53 = load float, float* %arrayidx39, align 4, !dbg !9145
  %54 = load float, float* %hull, align 4, !dbg !9146
  %sub40 = fsub float %53, %54, !dbg !9147
  %call41 = call float @min_ff(float %52, float %sub40), !dbg !9148
  %55 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9149
  %bbmin42 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %55, i32 0, i32 7, !dbg !9150
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %bbmin42, i64 0, i64 2, !dbg !9149
  store float %call41, float* %arrayidx43, align 8, !dbg !9151
  %56 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9152
  %bbmax44 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %56, i32 0, i32 8, !dbg !9153
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %bbmax44, i64 0, i64 0, !dbg !9152
  %57 = load float, float* %arrayidx45, align 4, !dbg !9152
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9154
  %58 = load float, float* %arrayidx46, align 4, !dbg !9154
  %59 = load float, float* %hull, align 4, !dbg !9155
  %add = fadd float %58, %59, !dbg !9156
  %call47 = call float @max_ff(float %57, float %add), !dbg !9157
  %60 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9158
  %bbmax48 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %60, i32 0, i32 8, !dbg !9159
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %bbmax48, i64 0, i64 0, !dbg !9158
  store float %call47, float* %arrayidx49, align 4, !dbg !9160
  %61 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9161
  %bbmax50 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %61, i32 0, i32 8, !dbg !9162
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %bbmax50, i64 0, i64 1, !dbg !9161
  %62 = load float, float* %arrayidx51, align 4, !dbg !9161
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9163
  %63 = load float, float* %arrayidx52, align 4, !dbg !9163
  %64 = load float, float* %hull, align 4, !dbg !9164
  %add53 = fadd float %63, %64, !dbg !9165
  %call54 = call float @max_ff(float %62, float %add53), !dbg !9166
  %65 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9167
  %bbmax55 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %65, i32 0, i32 8, !dbg !9168
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %bbmax55, i64 0, i64 1, !dbg !9167
  store float %call54, float* %arrayidx56, align 4, !dbg !9169
  %66 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9170
  %bbmax57 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %66, i32 0, i32 8, !dbg !9171
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %bbmax57, i64 0, i64 2, !dbg !9170
  %67 = load float, float* %arrayidx58, align 4, !dbg !9170
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9172
  %68 = load float, float* %arrayidx59, align 4, !dbg !9172
  %69 = load float, float* %hull, align 4, !dbg !9173
  %add60 = fadd float %68, %69, !dbg !9174
  %call61 = call float @max_ff(float %67, float %add60), !dbg !9175
  %70 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9176
  %bbmax62 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %70, i32 0, i32 8, !dbg !9177
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %bbmax62, i64 0, i64 2, !dbg !9176
  store float %call61, float* %arrayidx63, align 4, !dbg !9178
  br label %for.inc, !dbg !9179

for.inc:                                          ; preds = %for.body
  %71 = load i32, i32* %i, align 4, !dbg !9180
  %inc = add nsw i32 %71, 1, !dbg !9180
  store i32 %inc, i32* %i, align 4, !dbg !9180
  br label %for.cond, !dbg !9181, !llvm.loop !9182

for.end:                                          ; preds = %for.cond
  %72 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9184
  %73 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %cmd, align 8, !dbg !9185
  %mfaces = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %73, i32 0, i32 7, !dbg !9186
  %74 = load %struct.MFace*, %struct.MFace** %mfaces, align 8, !dbg !9186
  %75 = bitcast %struct.MFace* %74 to i8*, !dbg !9185
  %call64 = call i8* %72(i8* %75), !dbg !9184
  %76 = bitcast i8* %call64 to %struct.MFace*, !dbg !9184
  %77 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9187
  %mface65 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %77, i32 0, i32 4, !dbg !9188
  store %struct.MFace* %76, %struct.MFace** %mface65, align 8, !dbg !9189
  %78 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9190
  %79 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9191
  %totface66 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %79, i32 0, i32 1, !dbg !9192
  %80 = load i32, i32* %totface66, align 4, !dbg !9192
  %conv = sext i32 %80 to i64, !dbg !9191
  %mul = mul i64 24, %conv, !dbg !9193
  %call67 = call i8* %78(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)), !dbg !9190
  %81 = bitcast i8* %call67 to %struct.ccdf_minmax*, !dbg !9190
  %82 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9194
  %mima68 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %82, i32 0, i32 6, !dbg !9195
  store %struct.ccdf_minmax* %81, %struct.ccdf_minmax** %mima68, align 8, !dbg !9196
  %83 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9197
  %mima69 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %83, i32 0, i32 6, !dbg !9198
  %84 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima69, align 8, !dbg !9198
  store %struct.ccdf_minmax* %84, %struct.ccdf_minmax** %mima, align 8, !dbg !9199
  %85 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9200
  %mface70 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %85, i32 0, i32 4, !dbg !9201
  %86 = load %struct.MFace*, %struct.MFace** %mface70, align 8, !dbg !9201
  store %struct.MFace* %86, %struct.MFace** %mface, align 8, !dbg !9202
  store i32 0, i32* %i, align 4, !dbg !9203
  br label %for.cond71, !dbg !9205

for.cond71:                                       ; preds = %for.inc225, %for.end
  %87 = load i32, i32* %i, align 4, !dbg !9206
  %88 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9208
  %totface72 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %88, i32 0, i32 1, !dbg !9209
  %89 = load i32, i32* %totface72, align 4, !dbg !9209
  %cmp73 = icmp slt i32 %87, %89, !dbg !9210
  br i1 %cmp73, label %for.body75, label %for.end227, !dbg !9211

for.body75:                                       ; preds = %for.cond71
  %90 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9212
  %minz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %90, i32 0, i32 2, !dbg !9214
  store float 0x46293E5940000000, float* %minz, align 4, !dbg !9215
  %91 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9216
  %miny = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %91, i32 0, i32 1, !dbg !9217
  store float 0x46293E5940000000, float* %miny, align 4, !dbg !9218
  %92 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9219
  %minx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %92, i32 0, i32 0, !dbg !9220
  store float 0x46293E5940000000, float* %minx, align 4, !dbg !9221
  %93 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9222
  %maxz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %93, i32 0, i32 5, !dbg !9223
  store float 0xC6293E5940000000, float* %maxz, align 4, !dbg !9224
  %94 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9225
  %maxy = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %94, i32 0, i32 4, !dbg !9226
  store float 0xC6293E5940000000, float* %maxy, align 4, !dbg !9227
  %95 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9228
  %maxx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %95, i32 0, i32 3, !dbg !9229
  store float 0xC6293E5940000000, float* %maxx, align 4, !dbg !9230
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9231
  %96 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9232
  %mvert77 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %96, i32 0, i32 2, !dbg !9233
  %97 = load %struct.MVert*, %struct.MVert** %mvert77, align 8, !dbg !9233
  %98 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9234
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %98, i32 0, i32 0, !dbg !9235
  %99 = load i32, i32* %v1, align 4, !dbg !9235
  %idxprom78 = zext i32 %99 to i64, !dbg !9232
  %arrayidx79 = getelementptr inbounds %struct.MVert, %struct.MVert* %97, i64 %idxprom78, !dbg !9232
  %co80 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx79, i32 0, i32 0, !dbg !9236
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 0, !dbg !9232
  call void @copy_v3_v3(float* %arraydecay76, float* %arraydecay81), !dbg !9237
  %100 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9238
  %minx82 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %100, i32 0, i32 0, !dbg !9239
  %101 = load float, float* %minx82, align 4, !dbg !9239
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9240
  %102 = load float, float* %arrayidx83, align 4, !dbg !9240
  %103 = load float, float* %hull, align 4, !dbg !9241
  %sub84 = fsub float %102, %103, !dbg !9242
  %call85 = call float @min_ff(float %101, float %sub84), !dbg !9243
  %104 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9244
  %minx86 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %104, i32 0, i32 0, !dbg !9245
  store float %call85, float* %minx86, align 4, !dbg !9246
  %105 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9247
  %miny87 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %105, i32 0, i32 1, !dbg !9248
  %106 = load float, float* %miny87, align 4, !dbg !9248
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9249
  %107 = load float, float* %arrayidx88, align 4, !dbg !9249
  %108 = load float, float* %hull, align 4, !dbg !9250
  %sub89 = fsub float %107, %108, !dbg !9251
  %call90 = call float @min_ff(float %106, float %sub89), !dbg !9252
  %109 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9253
  %miny91 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %109, i32 0, i32 1, !dbg !9254
  store float %call90, float* %miny91, align 4, !dbg !9255
  %110 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9256
  %minz92 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %110, i32 0, i32 2, !dbg !9257
  %111 = load float, float* %minz92, align 4, !dbg !9257
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9258
  %112 = load float, float* %arrayidx93, align 4, !dbg !9258
  %113 = load float, float* %hull, align 4, !dbg !9259
  %sub94 = fsub float %112, %113, !dbg !9260
  %call95 = call float @min_ff(float %111, float %sub94), !dbg !9261
  %114 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9262
  %minz96 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %114, i32 0, i32 2, !dbg !9263
  store float %call95, float* %minz96, align 4, !dbg !9264
  %115 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9265
  %maxx97 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %115, i32 0, i32 3, !dbg !9266
  %116 = load float, float* %maxx97, align 4, !dbg !9266
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9267
  %117 = load float, float* %arrayidx98, align 4, !dbg !9267
  %118 = load float, float* %hull, align 4, !dbg !9268
  %add99 = fadd float %117, %118, !dbg !9269
  %call100 = call float @max_ff(float %116, float %add99), !dbg !9270
  %119 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9271
  %maxx101 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %119, i32 0, i32 3, !dbg !9272
  store float %call100, float* %maxx101, align 4, !dbg !9273
  %120 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9274
  %maxy102 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %120, i32 0, i32 4, !dbg !9275
  %121 = load float, float* %maxy102, align 4, !dbg !9275
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9276
  %122 = load float, float* %arrayidx103, align 4, !dbg !9276
  %123 = load float, float* %hull, align 4, !dbg !9277
  %add104 = fadd float %122, %123, !dbg !9278
  %call105 = call float @max_ff(float %121, float %add104), !dbg !9279
  %124 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9280
  %maxy106 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %124, i32 0, i32 4, !dbg !9281
  store float %call105, float* %maxy106, align 4, !dbg !9282
  %125 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9283
  %maxz107 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %125, i32 0, i32 5, !dbg !9284
  %126 = load float, float* %maxz107, align 4, !dbg !9284
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9285
  %127 = load float, float* %arrayidx108, align 4, !dbg !9285
  %128 = load float, float* %hull, align 4, !dbg !9286
  %add109 = fadd float %127, %128, !dbg !9287
  %call110 = call float @max_ff(float %126, float %add109), !dbg !9288
  %129 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9289
  %maxz111 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %129, i32 0, i32 5, !dbg !9290
  store float %call110, float* %maxz111, align 4, !dbg !9291
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9292
  %130 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9293
  %mvert113 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %130, i32 0, i32 2, !dbg !9294
  %131 = load %struct.MVert*, %struct.MVert** %mvert113, align 8, !dbg !9294
  %132 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9295
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %132, i32 0, i32 1, !dbg !9296
  %133 = load i32, i32* %v2, align 4, !dbg !9296
  %idxprom114 = zext i32 %133 to i64, !dbg !9293
  %arrayidx115 = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i64 %idxprom114, !dbg !9293
  %co116 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx115, i32 0, i32 0, !dbg !9297
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %co116, i64 0, i64 0, !dbg !9293
  call void @copy_v3_v3(float* %arraydecay112, float* %arraydecay117), !dbg !9298
  %134 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9299
  %minx118 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %134, i32 0, i32 0, !dbg !9300
  %135 = load float, float* %minx118, align 4, !dbg !9300
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9301
  %136 = load float, float* %arrayidx119, align 4, !dbg !9301
  %137 = load float, float* %hull, align 4, !dbg !9302
  %sub120 = fsub float %136, %137, !dbg !9303
  %call121 = call float @min_ff(float %135, float %sub120), !dbg !9304
  %138 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9305
  %minx122 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %138, i32 0, i32 0, !dbg !9306
  store float %call121, float* %minx122, align 4, !dbg !9307
  %139 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9308
  %miny123 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %139, i32 0, i32 1, !dbg !9309
  %140 = load float, float* %miny123, align 4, !dbg !9309
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9310
  %141 = load float, float* %arrayidx124, align 4, !dbg !9310
  %142 = load float, float* %hull, align 4, !dbg !9311
  %sub125 = fsub float %141, %142, !dbg !9312
  %call126 = call float @min_ff(float %140, float %sub125), !dbg !9313
  %143 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9314
  %miny127 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %143, i32 0, i32 1, !dbg !9315
  store float %call126, float* %miny127, align 4, !dbg !9316
  %144 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9317
  %minz128 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %144, i32 0, i32 2, !dbg !9318
  %145 = load float, float* %minz128, align 4, !dbg !9318
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9319
  %146 = load float, float* %arrayidx129, align 4, !dbg !9319
  %147 = load float, float* %hull, align 4, !dbg !9320
  %sub130 = fsub float %146, %147, !dbg !9321
  %call131 = call float @min_ff(float %145, float %sub130), !dbg !9322
  %148 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9323
  %minz132 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %148, i32 0, i32 2, !dbg !9324
  store float %call131, float* %minz132, align 4, !dbg !9325
  %149 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9326
  %maxx133 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %149, i32 0, i32 3, !dbg !9327
  %150 = load float, float* %maxx133, align 4, !dbg !9327
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9328
  %151 = load float, float* %arrayidx134, align 4, !dbg !9328
  %152 = load float, float* %hull, align 4, !dbg !9329
  %add135 = fadd float %151, %152, !dbg !9330
  %call136 = call float @max_ff(float %150, float %add135), !dbg !9331
  %153 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9332
  %maxx137 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %153, i32 0, i32 3, !dbg !9333
  store float %call136, float* %maxx137, align 4, !dbg !9334
  %154 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9335
  %maxy138 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %154, i32 0, i32 4, !dbg !9336
  %155 = load float, float* %maxy138, align 4, !dbg !9336
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9337
  %156 = load float, float* %arrayidx139, align 4, !dbg !9337
  %157 = load float, float* %hull, align 4, !dbg !9338
  %add140 = fadd float %156, %157, !dbg !9339
  %call141 = call float @max_ff(float %155, float %add140), !dbg !9340
  %158 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9341
  %maxy142 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %158, i32 0, i32 4, !dbg !9342
  store float %call141, float* %maxy142, align 4, !dbg !9343
  %159 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9344
  %maxz143 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %159, i32 0, i32 5, !dbg !9345
  %160 = load float, float* %maxz143, align 4, !dbg !9345
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9346
  %161 = load float, float* %arrayidx144, align 4, !dbg !9346
  %162 = load float, float* %hull, align 4, !dbg !9347
  %add145 = fadd float %161, %162, !dbg !9348
  %call146 = call float @max_ff(float %160, float %add145), !dbg !9349
  %163 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9350
  %maxz147 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %163, i32 0, i32 5, !dbg !9351
  store float %call146, float* %maxz147, align 4, !dbg !9352
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9353
  %164 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9354
  %mvert149 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %164, i32 0, i32 2, !dbg !9355
  %165 = load %struct.MVert*, %struct.MVert** %mvert149, align 8, !dbg !9355
  %166 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9356
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %166, i32 0, i32 2, !dbg !9357
  %167 = load i32, i32* %v3, align 4, !dbg !9357
  %idxprom150 = zext i32 %167 to i64, !dbg !9354
  %arrayidx151 = getelementptr inbounds %struct.MVert, %struct.MVert* %165, i64 %idxprom150, !dbg !9354
  %co152 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx151, i32 0, i32 0, !dbg !9358
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %co152, i64 0, i64 0, !dbg !9354
  call void @copy_v3_v3(float* %arraydecay148, float* %arraydecay153), !dbg !9359
  %168 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9360
  %minx154 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %168, i32 0, i32 0, !dbg !9361
  %169 = load float, float* %minx154, align 4, !dbg !9361
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9362
  %170 = load float, float* %arrayidx155, align 4, !dbg !9362
  %171 = load float, float* %hull, align 4, !dbg !9363
  %sub156 = fsub float %170, %171, !dbg !9364
  %call157 = call float @min_ff(float %169, float %sub156), !dbg !9365
  %172 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9366
  %minx158 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %172, i32 0, i32 0, !dbg !9367
  store float %call157, float* %minx158, align 4, !dbg !9368
  %173 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9369
  %miny159 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %173, i32 0, i32 1, !dbg !9370
  %174 = load float, float* %miny159, align 4, !dbg !9370
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9371
  %175 = load float, float* %arrayidx160, align 4, !dbg !9371
  %176 = load float, float* %hull, align 4, !dbg !9372
  %sub161 = fsub float %175, %176, !dbg !9373
  %call162 = call float @min_ff(float %174, float %sub161), !dbg !9374
  %177 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9375
  %miny163 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %177, i32 0, i32 1, !dbg !9376
  store float %call162, float* %miny163, align 4, !dbg !9377
  %178 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9378
  %minz164 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %178, i32 0, i32 2, !dbg !9379
  %179 = load float, float* %minz164, align 4, !dbg !9379
  %arrayidx165 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9380
  %180 = load float, float* %arrayidx165, align 4, !dbg !9380
  %181 = load float, float* %hull, align 4, !dbg !9381
  %sub166 = fsub float %180, %181, !dbg !9382
  %call167 = call float @min_ff(float %179, float %sub166), !dbg !9383
  %182 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9384
  %minz168 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %182, i32 0, i32 2, !dbg !9385
  store float %call167, float* %minz168, align 4, !dbg !9386
  %183 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9387
  %maxx169 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %183, i32 0, i32 3, !dbg !9388
  %184 = load float, float* %maxx169, align 4, !dbg !9388
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9389
  %185 = load float, float* %arrayidx170, align 4, !dbg !9389
  %186 = load float, float* %hull, align 4, !dbg !9390
  %add171 = fadd float %185, %186, !dbg !9391
  %call172 = call float @max_ff(float %184, float %add171), !dbg !9392
  %187 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9393
  %maxx173 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %187, i32 0, i32 3, !dbg !9394
  store float %call172, float* %maxx173, align 4, !dbg !9395
  %188 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9396
  %maxy174 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %188, i32 0, i32 4, !dbg !9397
  %189 = load float, float* %maxy174, align 4, !dbg !9397
  %arrayidx175 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9398
  %190 = load float, float* %arrayidx175, align 4, !dbg !9398
  %191 = load float, float* %hull, align 4, !dbg !9399
  %add176 = fadd float %190, %191, !dbg !9400
  %call177 = call float @max_ff(float %189, float %add176), !dbg !9401
  %192 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9402
  %maxy178 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %192, i32 0, i32 4, !dbg !9403
  store float %call177, float* %maxy178, align 4, !dbg !9404
  %193 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9405
  %maxz179 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %193, i32 0, i32 5, !dbg !9406
  %194 = load float, float* %maxz179, align 4, !dbg !9406
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9407
  %195 = load float, float* %arrayidx180, align 4, !dbg !9407
  %196 = load float, float* %hull, align 4, !dbg !9408
  %add181 = fadd float %195, %196, !dbg !9409
  %call182 = call float @max_ff(float %194, float %add181), !dbg !9410
  %197 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9411
  %maxz183 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %197, i32 0, i32 5, !dbg !9412
  store float %call182, float* %maxz183, align 4, !dbg !9413
  %198 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9414
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %198, i32 0, i32 3, !dbg !9416
  %199 = load i32, i32* %v4, align 4, !dbg !9416
  %tobool184 = icmp ne i32 %199, 0, !dbg !9414
  br i1 %tobool184, label %if.then185, label %if.end223, !dbg !9417

if.then185:                                       ; preds = %for.body75
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9418
  %200 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9420
  %mvert187 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %200, i32 0, i32 2, !dbg !9421
  %201 = load %struct.MVert*, %struct.MVert** %mvert187, align 8, !dbg !9421
  %202 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9422
  %v4188 = getelementptr inbounds %struct.MFace, %struct.MFace* %202, i32 0, i32 3, !dbg !9423
  %203 = load i32, i32* %v4188, align 4, !dbg !9423
  %idxprom189 = zext i32 %203 to i64, !dbg !9420
  %arrayidx190 = getelementptr inbounds %struct.MVert, %struct.MVert* %201, i64 %idxprom189, !dbg !9420
  %co191 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx190, i32 0, i32 0, !dbg !9424
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %co191, i64 0, i64 0, !dbg !9420
  call void @copy_v3_v3(float* %arraydecay186, float* %arraydecay192), !dbg !9425
  %204 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9426
  %minx193 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %204, i32 0, i32 0, !dbg !9427
  %205 = load float, float* %minx193, align 4, !dbg !9427
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9428
  %206 = load float, float* %arrayidx194, align 4, !dbg !9428
  %207 = load float, float* %hull, align 4, !dbg !9429
  %sub195 = fsub float %206, %207, !dbg !9430
  %call196 = call float @min_ff(float %205, float %sub195), !dbg !9431
  %208 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9432
  %minx197 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %208, i32 0, i32 0, !dbg !9433
  store float %call196, float* %minx197, align 4, !dbg !9434
  %209 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9435
  %miny198 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %209, i32 0, i32 1, !dbg !9436
  %210 = load float, float* %miny198, align 4, !dbg !9436
  %arrayidx199 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9437
  %211 = load float, float* %arrayidx199, align 4, !dbg !9437
  %212 = load float, float* %hull, align 4, !dbg !9438
  %sub200 = fsub float %211, %212, !dbg !9439
  %call201 = call float @min_ff(float %210, float %sub200), !dbg !9440
  %213 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9441
  %miny202 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %213, i32 0, i32 1, !dbg !9442
  store float %call201, float* %miny202, align 4, !dbg !9443
  %214 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9444
  %minz203 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %214, i32 0, i32 2, !dbg !9445
  %215 = load float, float* %minz203, align 4, !dbg !9445
  %arrayidx204 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9446
  %216 = load float, float* %arrayidx204, align 4, !dbg !9446
  %217 = load float, float* %hull, align 4, !dbg !9447
  %sub205 = fsub float %216, %217, !dbg !9448
  %call206 = call float @min_ff(float %215, float %sub205), !dbg !9449
  %218 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9450
  %minz207 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %218, i32 0, i32 2, !dbg !9451
  store float %call206, float* %minz207, align 4, !dbg !9452
  %219 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9453
  %maxx208 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %219, i32 0, i32 3, !dbg !9454
  %220 = load float, float* %maxx208, align 4, !dbg !9454
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !9455
  %221 = load float, float* %arrayidx209, align 4, !dbg !9455
  %222 = load float, float* %hull, align 4, !dbg !9456
  %add210 = fadd float %221, %222, !dbg !9457
  %call211 = call float @max_ff(float %220, float %add210), !dbg !9458
  %223 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9459
  %maxx212 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %223, i32 0, i32 3, !dbg !9460
  store float %call211, float* %maxx212, align 4, !dbg !9461
  %224 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9462
  %maxy213 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %224, i32 0, i32 4, !dbg !9463
  %225 = load float, float* %maxy213, align 4, !dbg !9463
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !9464
  %226 = load float, float* %arrayidx214, align 4, !dbg !9464
  %227 = load float, float* %hull, align 4, !dbg !9465
  %add215 = fadd float %226, %227, !dbg !9466
  %call216 = call float @max_ff(float %225, float %add215), !dbg !9467
  %228 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9468
  %maxy217 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %228, i32 0, i32 4, !dbg !9469
  store float %call216, float* %maxy217, align 4, !dbg !9470
  %229 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9471
  %maxz218 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %229, i32 0, i32 5, !dbg !9472
  %230 = load float, float* %maxz218, align 4, !dbg !9472
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !9473
  %231 = load float, float* %arrayidx219, align 4, !dbg !9473
  %232 = load float, float* %hull, align 4, !dbg !9474
  %add220 = fadd float %231, %232, !dbg !9475
  %call221 = call float @max_ff(float %230, float %add220), !dbg !9476
  %233 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9477
  %maxz222 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %233, i32 0, i32 5, !dbg !9478
  store float %call221, float* %maxz222, align 4, !dbg !9479
  br label %if.end223, !dbg !9480

if.end223:                                        ; preds = %if.then185, %for.body75
  %234 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !9481
  %incdec.ptr = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %234, i32 1, !dbg !9481
  store %struct.ccdf_minmax* %incdec.ptr, %struct.ccdf_minmax** %mima, align 8, !dbg !9481
  %235 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9482
  %incdec.ptr224 = getelementptr inbounds %struct.MFace, %struct.MFace* %235, i32 1, !dbg !9482
  store %struct.MFace* %incdec.ptr224, %struct.MFace** %mface, align 8, !dbg !9482
  br label %for.inc225, !dbg !9483

for.inc225:                                       ; preds = %if.end223
  %236 = load i32, i32* %i, align 4, !dbg !9484
  %inc226 = add nsw i32 %236, 1, !dbg !9484
  store i32 %inc226, i32* %i, align 4, !dbg !9484
  br label %for.cond71, !dbg !9485, !llvm.loop !9486

for.end227:                                       ; preds = %for.cond71
  %237 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %pccd_M, align 8, !dbg !9488
  store %struct.ccd_Mesh* %237, %struct.ccd_Mesh** %retval, align 8, !dbg !9489
  br label %return, !dbg !9489

return:                                           ; preds = %for.end227, %if.then3, %if.then
  %238 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %retval, align 8, !dbg !9490
  ret %struct.ccd_Mesh* %238, !dbg !9490
}

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @_final_goal(%struct.Object* %ob, %struct.BodyPoint* %bp) #0 !dbg !9491 {
entry:
  %retval = alloca float, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %bp.addr = alloca %struct.BodyPoint*, align 8
  %f = alloca float, align 4
  %sb = alloca %struct.SoftBody*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store %struct.BodyPoint* %bp, %struct.BodyPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.declare(metadata float* %f, metadata !9496, metadata !DIExpression()), !dbg !9497
  store float 0xC09F3FF5C0000000, float* %f, align 4, !dbg !9497
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9498
  %tobool = icmp ne %struct.Object* %0, null, !dbg !9498
  br i1 %tobool, label %if.then, label %if.end14, !dbg !9500

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !9501, metadata !DIExpression()), !dbg !9503
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9504
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 111, !dbg !9505
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9505
  store %struct.SoftBody* %2, %struct.SoftBody** %sb, align 8, !dbg !9503
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9506
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 104, !dbg !9508
  %4 = load i16, i16* %softflag, align 2, !dbg !9508
  %conv = sext i16 %4 to i32, !dbg !9506
  %and = and i32 %conv, 2, !dbg !9509
  %tobool1 = icmp ne i32 %and, 0, !dbg !9509
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !9510

if.then2:                                         ; preds = %if.then
  store float 0.000000e+00, float* %retval, align 4, !dbg !9511
  br label %return, !dbg !9511

if.end:                                           ; preds = %if.then
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9512
  %tobool3 = icmp ne %struct.SoftBody* %5, null, !dbg !9512
  br i1 %tobool3, label %land.lhs.true, label %if.end13, !dbg !9514

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !9515
  %tobool4 = icmp ne %struct.BodyPoint* %6, null, !dbg !9515
  br i1 %tobool4, label %if.then5, label %if.end13, !dbg !9516

if.then5:                                         ; preds = %land.lhs.true
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !9517
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %7, i32 0, i32 6, !dbg !9520
  %8 = load float, float* %goal, align 8, !dbg !9520
  %cmp = fcmp olt float %8, 0.000000e+00, !dbg !9521
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9522

if.then7:                                         ; preds = %if.then5
  store float 0.000000e+00, float* %retval, align 4, !dbg !9523
  br label %return, !dbg !9523

if.end8:                                          ; preds = %if.then5
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9524
  %mingoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 15, !dbg !9525
  %10 = load float, float* %mingoal, align 8, !dbg !9525
  %11 = load %struct.BodyPoint*, %struct.BodyPoint** %bp.addr, align 8, !dbg !9526
  %goal9 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %11, i32 0, i32 6, !dbg !9527
  %12 = load float, float* %goal9, align 8, !dbg !9527
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9528
  %maxgoal = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 16, !dbg !9529
  %14 = load float, float* %maxgoal, align 4, !dbg !9529
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9530
  %mingoal10 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 15, !dbg !9531
  %16 = load float, float* %mingoal10, align 8, !dbg !9531
  %sub = fsub float %14, %16, !dbg !9532
  %17 = call float @llvm.fabs.f32(float %sub), !dbg !9533
  %mul = fmul float %12, %17, !dbg !9534
  %add = fadd float %10, %mul, !dbg !9535
  store float %add, float* %f, align 4, !dbg !9536
  %18 = load float, float* %f, align 4, !dbg !9537
  %conv11 = fpext float %18 to double, !dbg !9537
  %call = call double @pow(double %conv11, double 4.000000e+00) #5, !dbg !9538
  %conv12 = fptrunc double %call to float, !dbg !9538
  store float %conv12, float* %f, align 4, !dbg !9539
  %19 = load float, float* %f, align 4, !dbg !9540
  store float %19, float* %retval, align 4, !dbg !9541
  br label %return, !dbg !9541

if.end13:                                         ; preds = %land.lhs.true, %if.end
  br label %if.end14, !dbg !9542

if.end14:                                         ; preds = %if.end13, %entry
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)), !dbg !9543
  %20 = load float, float* %f, align 4, !dbg !9544
  store float %20, float* %retval, align 4, !dbg !9545
  br label %return, !dbg !9545

return:                                           ; preds = %if.end14, %if.end8, %if.then7, %if.then2
  %21 = load float, float* %retval, align 4, !dbg !9546
  ret float %21, !dbg !9546
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define internal void @softbody_calc_forcesEx(%struct.Scene* %scene, %struct.Object* %ob, float %forcetime, float %timenow, i32 %UNUSED_nl_flags) #0 !dbg !9547 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %forcetime.addr = alloca float, align 4
  %timenow.addr = alloca float, align 4
  %UNUSED_nl_flags.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %do_effector = alloca %struct.ListBase*, align 8
  %fieldfactor = alloca float, align 4
  %windfactor = alloca float, align 4
  %do_deflector = alloca i32, align 4
  %do_springcollision = alloca i32, align 4
  %do_aero = alloca i32, align 4
  %defforce = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9548, metadata !DIExpression()), !dbg !9549
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9550, metadata !DIExpression()), !dbg !9551
  store float %forcetime, float* %forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %forcetime.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  store i32 %UNUSED_nl_flags, i32* %UNUSED_nl_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_nl_flags.addr, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !9558, metadata !DIExpression()), !dbg !9559
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9560
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !9561
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9561
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !9559
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector, metadata !9562, metadata !DIExpression()), !dbg !9563
  store %struct.ListBase* null, %struct.ListBase** %do_effector, align 8, !dbg !9563
  call void @llvm.dbg.declare(metadata float* %fieldfactor, metadata !9564, metadata !DIExpression()), !dbg !9565
  store float -1.000000e+00, float* %fieldfactor, align 4, !dbg !9565
  call void @llvm.dbg.declare(metadata float* %windfactor, metadata !9566, metadata !DIExpression()), !dbg !9567
  store float 2.500000e-01, float* %windfactor, align 4, !dbg !9567
  call void @llvm.dbg.declare(metadata i32* %do_deflector, metadata !9568, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.declare(metadata i32* %do_springcollision, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata i32* %do_aero, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9574
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9575
  %call = call i32 @query_external_colliders(%struct.Scene* %2, %struct.Object* %3), !dbg !9576
  store i32 %call, i32* %do_deflector, align 4, !dbg !9577
  %4 = load i32, i32* %do_deflector, align 4, !dbg !9578
  %tobool = icmp ne i32 %4, 0, !dbg !9578
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !9579

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9580
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 104, !dbg !9581
  %6 = load i16, i16* %softflag, align 2, !dbg !9581
  %conv = sext i16 %6 to i32, !dbg !9580
  %and = and i32 %conv, 4, !dbg !9582
  %tobool1 = icmp ne i32 %and, 0, !dbg !9582
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !9583

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9584
  %softflag2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 104, !dbg !9585
  %8 = load i16, i16* %softflag2, align 2, !dbg !9585
  %conv3 = sext i16 %8 to i32, !dbg !9584
  %and4 = and i32 %conv3, 2048, !dbg !9586
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool5, %land.rhs ], !dbg !9587
  %land.ext = zext i1 %9 to i32, !dbg !9583
  store i32 %land.ext, i32* %do_springcollision, align 4, !dbg !9588
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9589
  %aeroedge = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 37, !dbg !9590
  %11 = load i16, i16* %aeroedge, align 2, !dbg !9590
  %conv6 = sext i16 %11 to i32, !dbg !9591
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !9591
  br i1 %tobool7, label %land.rhs8, label %land.end13, !dbg !9592

land.rhs8:                                        ; preds = %land.end
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9593
  %softflag9 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 104, !dbg !9594
  %13 = load i16, i16* %softflag9, align 2, !dbg !9594
  %conv10 = sext i16 %13 to i32, !dbg !9593
  %and11 = and i32 %conv10, 4, !dbg !9595
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9592
  br label %land.end13

land.end13:                                       ; preds = %land.rhs8, %land.end
  %14 = phi i1 [ false, %land.end ], [ %tobool12, %land.rhs8 ], !dbg !9587
  %land.ext14 = zext i1 %14 to i32, !dbg !9592
  store i32 %land.ext14, i32* %do_aero, align 4, !dbg !9596
  %15 = load i32, i32* %do_springcollision, align 4, !dbg !9597
  %tobool15 = icmp ne i32 %15, 0, !dbg !9597
  br i1 %tobool15, label %if.then, label %lor.lhs.false, !dbg !9599

lor.lhs.false:                                    ; preds = %land.end13
  %16 = load i32, i32* %do_aero, align 4, !dbg !9600
  %tobool16 = icmp ne i32 %16, 0, !dbg !9600
  br i1 %tobool16, label %if.then, label %if.end, !dbg !9601

if.then:                                          ; preds = %lor.lhs.false, %land.end13
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9602
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9603
  %19 = load float, float* %timenow.addr, align 4, !dbg !9604
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9605
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 1, !dbg !9606
  %21 = load i32, i32* %totspring, align 4, !dbg !9606
  call void @sb_sfesf_threads_run(%struct.Scene* %17, %struct.Object* %18, float %19, i32 %21, i32* ()* null), !dbg !9607
  br label %if.end, !dbg !9607

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9608
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9609
  %24 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9610
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %24, i32 0, i32 49, !dbg !9611
  %25 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !9611
  %call17 = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %22, %struct.Object* %23, %struct.ParticleSystem* null, %struct.EffectorWeights* %25, i8 zeroext 1), !dbg !9612
  store %struct.ListBase* %call17, %struct.ListBase** %do_effector, align 8, !dbg !9613
  %26 = load i32, i32* %do_deflector, align 4, !dbg !9614
  %tobool18 = icmp ne i32 %26, 0, !dbg !9614
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !9616

if.then19:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %defforce, metadata !9617, metadata !DIExpression()), !dbg !9619
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %defforce, i64 0, i64 0, !dbg !9620
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9621
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 52, !dbg !9622
  %28 = load i32, i32* %lay, align 8, !dbg !9622
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9623
  %30 = load float, float* %timenow.addr, align 4, !dbg !9624
  %call20 = call i32 @sb_detect_aabb_collisionCached(float* %arraydecay, i32 %28, %struct.Object* %29, float %30), !dbg !9625
  store i32 %call20, i32* %do_deflector, align 4, !dbg !9626
  br label %if.end21, !dbg !9627

if.end21:                                         ; preds = %if.then19, %if.end
  %31 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9628
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9629
  %33 = load float, float* %forcetime.addr, align 4, !dbg !9630
  %34 = load float, float* %timenow.addr, align 4, !dbg !9631
  %35 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9632
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 0, !dbg !9633
  %36 = load i32, i32* %totpoint, align 8, !dbg !9633
  %37 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !9634
  %38 = load i32, i32* %do_deflector, align 4, !dbg !9635
  %39 = load float, float* %fieldfactor, align 4, !dbg !9636
  %40 = load float, float* %windfactor, align 4, !dbg !9637
  call void @sb_cf_threads_run(%struct.Scene* %31, %struct.Object* %32, float %33, float %34, i32 %36, i32* ()* null, %struct.ListBase* %37, i32 %38, float %39, float %40), !dbg !9638
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9639
  %softflag22 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 104, !dbg !9641
  %42 = load i16, i16* %softflag22, align 2, !dbg !9641
  %conv23 = sext i16 %42 to i32, !dbg !9639
  %and24 = and i32 %conv23, 1024, !dbg !9642
  %tobool25 = icmp ne i32 %and24, 0, !dbg !9642
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9643

if.then26:                                        ; preds = %if.end21
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9644
  %44 = load float, float* %timenow.addr, align 4, !dbg !9645
  call void @scan_for_ext_face_forces(%struct.Object* %43, float %44), !dbg !9646
  br label %if.end27, !dbg !9646

if.end27:                                         ; preds = %if.then26, %if.end21
  call void @pdEndEffectors(%struct.ListBase** %do_effector), !dbg !9647
  ret void, !dbg !9648
}

; Function Attrs: noinline nounwind uwtable
define internal float @sb_grav_force_scale(%struct.Object* %UNUSED_ob) #0 !dbg !9649 {
entry:
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !9652, metadata !DIExpression()), !dbg !9653
  ret float 0x3F50624DE0000000, !dbg !9654
}

; Function Attrs: noinline nounwind uwtable
define internal void @scan_for_ext_spring_forces(%struct.Scene* %scene, %struct.Object* %ob, float %timenow) #0 !dbg !9655 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %timenow.addr = alloca float, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %do_effector = alloca %struct.ListBase*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !9664, metadata !DIExpression()), !dbg !9665
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9666
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !9667
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9667
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !9665
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector, metadata !9668, metadata !DIExpression()), !dbg !9669
  store %struct.ListBase* null, %struct.ListBase** %do_effector, align 8, !dbg !9669
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9670
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9671
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9672
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 49, !dbg !9673
  %5 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !9673
  %call = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %2, %struct.Object* %3, %struct.ParticleSystem* null, %struct.EffectorWeights* %5, i8 zeroext 1), !dbg !9674
  store %struct.ListBase* %call, %struct.ListBase** %do_effector, align 8, !dbg !9675
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9676
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9677
  %8 = load float, float* %timenow.addr, align 4, !dbg !9678
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9679
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 1, !dbg !9680
  %10 = load i32, i32* %totspring, align 4, !dbg !9680
  %11 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !9681
  call void @_scan_for_ext_spring_forces(%struct.Scene* %6, %struct.Object* %7, float %8, i32 0, i32 %10, %struct.ListBase* %11), !dbg !9682
  call void @pdEndEffectors(%struct.ListBase** %do_effector), !dbg !9683
  ret void, !dbg !9684
}

declare dso_local %struct.ListBase* @pdInitEffectors(%struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.EffectorWeights*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_detect_aabb_collisionCached(float* %UNUSED_force, i32 %UNUSED_par_layer, %struct.Object* %vertexowner, float %UNUSED_time) #0 !dbg !9685 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_force.addr = alloca float*, align 8
  %UNUSED_par_layer.addr = alloca i32, align 4
  %vertexowner.addr = alloca %struct.Object*, align 8
  %UNUSED_time.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %hash = alloca %struct.GHash*, align 8
  %ihash = alloca %struct.GHashIterator*, align 8
  %aabbmin = alloca [3 x float], align 4
  %aabbmax = alloca [3 x float], align 4
  %deflected = alloca i32, align 4
  %ccdm = alloca %struct.ccd_Mesh*, align 8
  store float* %UNUSED_force, float** %UNUSED_force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_force.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i32 %UNUSED_par_layer, i32* %UNUSED_par_layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_par_layer.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !9692, metadata !DIExpression()), !dbg !9693
  store float %UNUSED_time, float* %UNUSED_time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_time.addr, metadata !9694, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !9700
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !9701
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9701
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !9699
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ihash, metadata !9704, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmin, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmax, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !9719, metadata !DIExpression()), !dbg !9720
  store i32 0, i32* %deflected, align 4, !dbg !9720
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9721
  %cmp = icmp eq %struct.SoftBody* %2, null, !dbg !9723
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9724

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9725
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 44, !dbg !9726
  %4 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !9726
  %cmp1 = icmp eq %struct.SBScratch* %4, null, !dbg !9727
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9728

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9729
  br label %return, !dbg !9729

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !9730
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9731
  %scratch2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 44, !dbg !9732
  %6 = load %struct.SBScratch*, %struct.SBScratch** %scratch2, align 8, !dbg !9732
  %aabbmin3 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %6, i32 0, i32 5, !dbg !9733
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin3, i64 0, i64 0, !dbg !9731
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay4), !dbg !9734
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !9735
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9736
  %scratch6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 44, !dbg !9737
  %8 = load %struct.SBScratch*, %struct.SBScratch** %scratch6, align 8, !dbg !9737
  %aabbmax7 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %8, i32 0, i32 6, !dbg !9738
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax7, i64 0, i64 0, !dbg !9736
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay8), !dbg !9739
  %9 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !9740
  %soft9 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 111, !dbg !9741
  %10 = load %struct.SoftBody*, %struct.SoftBody** %soft9, align 8, !dbg !9741
  %scratch10 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 44, !dbg !9742
  %11 = load %struct.SBScratch*, %struct.SBScratch** %scratch10, align 8, !dbg !9742
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %11, i32 0, i32 0, !dbg !9743
  %12 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !9743
  store %struct.GHash* %12, %struct.GHash** %hash, align 8, !dbg !9744
  %13 = load %struct.GHash*, %struct.GHash** %hash, align 8, !dbg !9745
  %call = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %13), !dbg !9746
  store %struct.GHashIterator* %call, %struct.GHashIterator** %ihash, align 8, !dbg !9747
  br label %while.cond, !dbg !9748

while.cond:                                       ; preds = %if.end56, %if.else, %if.then52, %if.end
  %14 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9749
  %call11 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %14), !dbg !9750
  %tobool = icmp ne i8 %call11, 0, !dbg !9751
  %lnot = xor i1 %tobool, true, !dbg !9751
  br i1 %lnot, label %while.body, label %while.end, !dbg !9748

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm, metadata !9752, metadata !DIExpression()), !dbg !9754
  %15 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9755
  %call12 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %15), !dbg !9756
  %16 = bitcast i8* %call12 to %struct.ccd_Mesh*, !dbg !9756
  store %struct.ccd_Mesh* %16, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9754
  %17 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9757
  %call13 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %17), !dbg !9758
  %18 = bitcast i8* %call13 to %struct.Object*, !dbg !9758
  store %struct.Object* %18, %struct.Object** %ob, align 8, !dbg !9759
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9760
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 110, !dbg !9762
  %20 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !9762
  %tobool14 = icmp ne %struct.PartDeflect* %20, null, !dbg !9760
  br i1 %tobool14, label %land.lhs.true, label %if.end56, !dbg !9763

land.lhs.true:                                    ; preds = %while.body
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9764
  %pd15 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 110, !dbg !9765
  %22 = load %struct.PartDeflect*, %struct.PartDeflect** %pd15, align 8, !dbg !9765
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %22, i32 0, i32 1, !dbg !9766
  %23 = load i16, i16* %deflect, align 4, !dbg !9766
  %conv = sext i16 %23 to i32, !dbg !9764
  %tobool16 = icmp ne i32 %conv, 0, !dbg !9764
  br i1 %tobool16, label %if.then17, label %if.end56, !dbg !9767

if.then17:                                        ; preds = %land.lhs.true
  %24 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9768
  %tobool18 = icmp ne %struct.ccd_Mesh* %24, null, !dbg !9768
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !9771

if.then19:                                        ; preds = %if.then17
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !9772
  %25 = load float, float* %arrayidx, align 4, !dbg !9772
  %26 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9775
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %26, i32 0, i32 7, !dbg !9776
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 0, !dbg !9775
  %27 = load float, float* %arrayidx20, align 8, !dbg !9775
  %cmp21 = fcmp olt float %25, %27, !dbg !9777
  br i1 %cmp21, label %if.then52, label %lor.lhs.false23, !dbg !9778

lor.lhs.false23:                                  ; preds = %if.then19
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !9779
  %28 = load float, float* %arrayidx24, align 4, !dbg !9779
  %29 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9780
  %bbmin25 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %29, i32 0, i32 7, !dbg !9781
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %bbmin25, i64 0, i64 1, !dbg !9780
  %30 = load float, float* %arrayidx26, align 4, !dbg !9780
  %cmp27 = fcmp olt float %28, %30, !dbg !9782
  br i1 %cmp27, label %if.then52, label %lor.lhs.false29, !dbg !9783

lor.lhs.false29:                                  ; preds = %lor.lhs.false23
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !9784
  %31 = load float, float* %arrayidx30, align 4, !dbg !9784
  %32 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9785
  %bbmin31 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %32, i32 0, i32 7, !dbg !9786
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %bbmin31, i64 0, i64 2, !dbg !9785
  %33 = load float, float* %arrayidx32, align 8, !dbg !9785
  %cmp33 = fcmp olt float %31, %33, !dbg !9787
  br i1 %cmp33, label %if.then52, label %lor.lhs.false35, !dbg !9788

lor.lhs.false35:                                  ; preds = %lor.lhs.false29
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !9789
  %34 = load float, float* %arrayidx36, align 4, !dbg !9789
  %35 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9790
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %35, i32 0, i32 8, !dbg !9791
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 0, !dbg !9790
  %36 = load float, float* %arrayidx37, align 4, !dbg !9790
  %cmp38 = fcmp ogt float %34, %36, !dbg !9792
  br i1 %cmp38, label %if.then52, label %lor.lhs.false40, !dbg !9793

lor.lhs.false40:                                  ; preds = %lor.lhs.false35
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !9794
  %37 = load float, float* %arrayidx41, align 4, !dbg !9794
  %38 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9795
  %bbmax42 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %38, i32 0, i32 8, !dbg !9796
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %bbmax42, i64 0, i64 1, !dbg !9795
  %39 = load float, float* %arrayidx43, align 4, !dbg !9795
  %cmp44 = fcmp ogt float %37, %39, !dbg !9797
  br i1 %cmp44, label %if.then52, label %lor.lhs.false46, !dbg !9798

lor.lhs.false46:                                  ; preds = %lor.lhs.false40
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !9799
  %40 = load float, float* %arrayidx47, align 4, !dbg !9799
  %41 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !9800
  %bbmax48 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %41, i32 0, i32 8, !dbg !9801
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %bbmax48, i64 0, i64 2, !dbg !9800
  %42 = load float, float* %arrayidx49, align 4, !dbg !9800
  %cmp50 = fcmp ogt float %40, %42, !dbg !9802
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !9803

if.then52:                                        ; preds = %lor.lhs.false46, %lor.lhs.false40, %lor.lhs.false35, %lor.lhs.false29, %lor.lhs.false23, %if.then19
  %43 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9804
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %43), !dbg !9806
  br label %while.cond, !dbg !9807, !llvm.loop !9808

if.end53:                                         ; preds = %lor.lhs.false46
  store i32 2, i32* %deflected, align 4, !dbg !9810
  br label %if.end55, !dbg !9811

if.else:                                          ; preds = %if.then17
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)), !dbg !9812
  %44 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9814
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %44), !dbg !9815
  br label %while.cond, !dbg !9816, !llvm.loop !9808

if.end55:                                         ; preds = %if.end53
  br label %if.end56, !dbg !9817

if.end56:                                         ; preds = %if.end55, %land.lhs.true, %while.body
  %45 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9818
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %45), !dbg !9819
  br label %while.cond, !dbg !9748, !llvm.loop !9808

while.end:                                        ; preds = %while.cond
  %46 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !9820
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %46), !dbg !9821
  %47 = load i32, i32* %deflected, align 4, !dbg !9822
  store i32 %47, i32* %retval, align 4, !dbg !9823
  br label %return, !dbg !9823

return:                                           ; preds = %while.end, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !9824
  ret i32 %48, !dbg !9824
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !9825 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  %0 = load float*, float** %n.addr, align 8, !dbg !9830
  %1 = load float*, float** %n.addr, align 8, !dbg !9831
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !9832
  ret float %call, !dbg !9833
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @Vec3PlusStVec(float* %v, float %s, float* %v1) #0 !dbg !9834 {
entry:
  %v.addr = alloca float*, align 8
  %s.addr = alloca float, align 4
  %v1.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9837, metadata !DIExpression()), !dbg !9838
  store float %s, float* %s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s.addr, metadata !9839, metadata !DIExpression()), !dbg !9840
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  %0 = load float, float* %s.addr, align 4, !dbg !9843
  %1 = load float*, float** %v1.addr, align 8, !dbg !9844
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !9844
  %2 = load float, float* %arrayidx, align 4, !dbg !9844
  %mul = fmul float %0, %2, !dbg !9845
  %3 = load float*, float** %v.addr, align 8, !dbg !9846
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9846
  %4 = load float, float* %arrayidx1, align 4, !dbg !9847
  %add = fadd float %4, %mul, !dbg !9847
  store float %add, float* %arrayidx1, align 4, !dbg !9847
  %5 = load float, float* %s.addr, align 4, !dbg !9848
  %6 = load float*, float** %v1.addr, align 8, !dbg !9849
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 1, !dbg !9849
  %7 = load float, float* %arrayidx2, align 4, !dbg !9849
  %mul3 = fmul float %5, %7, !dbg !9850
  %8 = load float*, float** %v.addr, align 8, !dbg !9851
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !9851
  %9 = load float, float* %arrayidx4, align 4, !dbg !9852
  %add5 = fadd float %9, %mul3, !dbg !9852
  store float %add5, float* %arrayidx4, align 4, !dbg !9852
  %10 = load float, float* %s.addr, align 4, !dbg !9853
  %11 = load float*, float** %v1.addr, align 8, !dbg !9854
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 2, !dbg !9854
  %12 = load float, float* %arrayidx6, align 4, !dbg !9854
  %mul7 = fmul float %10, %12, !dbg !9855
  %13 = load float*, float** %v.addr, align 8, !dbg !9856
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !9856
  %14 = load float, float* %arrayidx8, align 4, !dbg !9857
  %add9 = fadd float %14, %mul7, !dbg !9857
  store float %add9, float* %arrayidx8, align 4, !dbg !9857
  ret void, !dbg !9858
}

; Function Attrs: noinline nounwind uwtable
define internal float @sb_fric_force_scale(%struct.Object* %UNUSED_ob) #0 !dbg !9859 {
entry:
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  ret float 0x3F847AE140000000, !dbg !9862
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !9863 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  %0 = load float*, float** %a.addr, align 8, !dbg !9870
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9870
  %1 = load float, float* %arrayidx, align 4, !dbg !9870
  %2 = load float*, float** %b.addr, align 8, !dbg !9871
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9871
  %3 = load float, float* %arrayidx1, align 4, !dbg !9871
  %add = fadd float %1, %3, !dbg !9872
  %4 = load float*, float** %r.addr, align 8, !dbg !9873
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9873
  store float %add, float* %arrayidx2, align 4, !dbg !9874
  %5 = load float*, float** %a.addr, align 8, !dbg !9875
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9875
  %6 = load float, float* %arrayidx3, align 4, !dbg !9875
  %7 = load float*, float** %b.addr, align 8, !dbg !9876
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9876
  %8 = load float, float* %arrayidx4, align 4, !dbg !9876
  %add5 = fadd float %6, %8, !dbg !9877
  %9 = load float*, float** %r.addr, align 8, !dbg !9878
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9878
  store float %add5, float* %arrayidx6, align 4, !dbg !9879
  %10 = load float*, float** %a.addr, align 8, !dbg !9880
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !9880
  %11 = load float, float* %arrayidx7, align 4, !dbg !9880
  %12 = load float*, float** %b.addr, align 8, !dbg !9881
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !9881
  %13 = load float, float* %arrayidx8, align 4, !dbg !9881
  %add9 = fadd float %11, %13, !dbg !9882
  %14 = load float*, float** %r.addr, align 8, !dbg !9883
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !9883
  store float %add9, float* %arrayidx10, align 4, !dbg !9884
  ret void, !dbg !9885
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !9886 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9889, metadata !DIExpression()), !dbg !9890
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9893, metadata !DIExpression()), !dbg !9894
  %0 = load float*, float** %a.addr, align 8, !dbg !9895
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9895
  %1 = load float, float* %arrayidx, align 4, !dbg !9895
  %2 = load float, float* %f.addr, align 4, !dbg !9896
  %mul = fmul float %1, %2, !dbg !9897
  %3 = load float*, float** %r.addr, align 8, !dbg !9898
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9898
  %4 = load float, float* %arrayidx1, align 4, !dbg !9899
  %add = fadd float %4, %mul, !dbg !9899
  store float %add, float* %arrayidx1, align 4, !dbg !9899
  %5 = load float*, float** %a.addr, align 8, !dbg !9900
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !9900
  %6 = load float, float* %arrayidx2, align 4, !dbg !9900
  %7 = load float, float* %f.addr, align 4, !dbg !9901
  %mul3 = fmul float %6, %7, !dbg !9902
  %8 = load float*, float** %r.addr, align 8, !dbg !9903
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !9903
  %9 = load float, float* %arrayidx4, align 4, !dbg !9904
  %add5 = fadd float %9, %mul3, !dbg !9904
  store float %add5, float* %arrayidx4, align 4, !dbg !9904
  %10 = load float*, float** %a.addr, align 8, !dbg !9905
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9905
  %11 = load float, float* %arrayidx6, align 4, !dbg !9905
  %12 = load float, float* %f.addr, align 4, !dbg !9906
  %mul7 = fmul float %11, %12, !dbg !9907
  %13 = load float*, float** %r.addr, align 8, !dbg !9908
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !9908
  %14 = load float, float* %arrayidx8, align 4, !dbg !9909
  %add9 = fadd float %14, %mul7, !dbg !9909
  store float %add9, float* %arrayidx8, align 4, !dbg !9909
  ret void, !dbg !9910
}

declare dso_local void @pd_point_from_soft(%struct.Scene*, float*, float*, i32, %struct.EffectedPoint*) #2

declare dso_local void @pdDoEffectors(%struct.ListBase*, %struct.ListBase*, %struct.EffectorWeights*, %struct.EffectedPoint*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_deflect_face(%struct.Object* %ob, float* %actpos, float* %facenormal, float* %force, float* %cf, float %time, float* %vel, float* %intrusion) #0 !dbg !9911 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %actpos.addr = alloca float*, align 8
  %facenormal.addr = alloca float*, align 8
  %force.addr = alloca float*, align 8
  %cf.addr = alloca float*, align 8
  %time.addr = alloca float, align 4
  %vel.addr = alloca float*, align 8
  %intrusion.addr = alloca float*, align 8
  %s_actpos = alloca [3 x float], align 4
  %deflected = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9914, metadata !DIExpression()), !dbg !9915
  store float* %actpos, float** %actpos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %actpos.addr, metadata !9916, metadata !DIExpression()), !dbg !9917
  store float* %facenormal, float** %facenormal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facenormal.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  store float* %cf, float** %cf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cf.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !9924, metadata !DIExpression()), !dbg !9925
  store float* %vel, float** %vel.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vel.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  store float* %intrusion, float** %intrusion.addr, align 8
  call void @llvm.dbg.declare(metadata float** %intrusion.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata [3 x float]* %s_actpos, metadata !9930, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !9932, metadata !DIExpression()), !dbg !9933
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %s_actpos, i64 0, i64 0, !dbg !9934
  %0 = load float*, float** %actpos.addr, align 8, !dbg !9935
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !9936
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %s_actpos, i64 0, i64 0, !dbg !9937
  %1 = load float*, float** %facenormal.addr, align 8, !dbg !9938
  %2 = load float*, float** %cf.addr, align 8, !dbg !9939
  %3 = load float*, float** %force.addr, align 8, !dbg !9940
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9941
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 52, !dbg !9942
  %5 = load i32, i32* %lay, align 8, !dbg !9942
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9943
  %7 = load float, float* %time.addr, align 4, !dbg !9944
  %8 = load float*, float** %vel.addr, align 8, !dbg !9945
  %9 = load float*, float** %intrusion.addr, align 8, !dbg !9946
  %call = call i32 @sb_detect_vertex_collisionCached(float* %arraydecay1, float* %1, float* %2, float* %3, i32 %5, %struct.Object* %6, float %7, float* %8, float* %9), !dbg !9947
  store i32 %call, i32* %deflected, align 4, !dbg !9948
  %10 = load i32, i32* %deflected, align 4, !dbg !9949
  ret i32 %10, !dbg !9950
}

; Function Attrs: noinline nounwind uwtable
define internal void @sb_spring_force(%struct.Object* %ob, i32 %bpi, %struct.BodySpring* %bs, float %iks, float %UNUSED_forcetime, i32 %nl_flags) #0 !dbg !9951 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bpi.addr = alloca i32, align 4
  %bs.addr = alloca %struct.BodySpring*, align 8
  %iks.addr = alloca float, align 4
  %UNUSED_forcetime.addr = alloca float, align 4
  %nl_flags.addr = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp1 = alloca %struct.BodyPoint*, align 8
  %bp2 = alloca %struct.BodyPoint*, align 8
  %dir = alloca [3 x float], align 4
  %dvel = alloca [3 x float], align 4
  %distance = alloca float, align 4
  %forcefactor = alloca float, align 4
  %kd = alloca float, align 4
  %absvel = alloca float, align 4
  %projvel = alloca float, align 4
  %kw = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  store i32 %bpi, i32* %bpi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bpi.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  store %struct.BodySpring* %bs, %struct.BodySpring** %bs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  store float %iks, float* %iks.addr, align 4
  call void @llvm.dbg.declare(metadata float* %iks.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  store float %UNUSED_forcetime, float* %UNUSED_forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_forcetime.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  store i32 %nl_flags, i32* %nl_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nl_flags.addr, metadata !9964, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !9966, metadata !DIExpression()), !dbg !9967
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9968
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !9969
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9969
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !9967
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp1, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp2, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !9974, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.declare(metadata [3 x float]* %dvel, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata float* %distance, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata float* %forcefactor, metadata !9980, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata float* %kd, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata float* %absvel, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata float* %projvel, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata float* %kw, metadata !9988, metadata !DIExpression()), !dbg !9989
  %2 = load i32, i32* %bpi.addr, align 4, !dbg !9990
  %3 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !9992
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %3, i32 0, i32 0, !dbg !9993
  %4 = load i32, i32* %v1, align 4, !dbg !9993
  %cmp = icmp eq i32 %2, %4, !dbg !9994
  br i1 %cmp, label %if.then, label %if.else, !dbg !9995

if.then:                                          ; preds = %entry
  %5 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !9996
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 2, !dbg !9998
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !9998
  %7 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !9999
  %v11 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %7, i32 0, i32 0, !dbg !10000
  %8 = load i32, i32* %v11, align 4, !dbg !10000
  %idxprom = sext i32 %8 to i64, !dbg !9996
  %arrayidx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %6, i64 %idxprom, !dbg !9996
  store %struct.BodyPoint* %arrayidx, %struct.BodyPoint** %bp1, align 8, !dbg !10001
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10002
  %bpoint2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 2, !dbg !10003
  %10 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint2, align 8, !dbg !10003
  %11 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10004
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %11, i32 0, i32 1, !dbg !10005
  %12 = load i32, i32* %v2, align 4, !dbg !10005
  %idxprom3 = sext i32 %12 to i64, !dbg !10002
  %arrayidx4 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %10, i64 %idxprom3, !dbg !10002
  store %struct.BodyPoint* %arrayidx4, %struct.BodyPoint** %bp2, align 8, !dbg !10006
  br label %if.end17, !dbg !10007

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %bpi.addr, align 4, !dbg !10008
  %14 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10010
  %v25 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %14, i32 0, i32 1, !dbg !10011
  %15 = load i32, i32* %v25, align 4, !dbg !10011
  %cmp6 = icmp eq i32 %13, %15, !dbg !10012
  br i1 %cmp6, label %if.then7, label %if.else16, !dbg !10013

if.then7:                                         ; preds = %if.else
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10014
  %bpoint8 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 2, !dbg !10016
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint8, align 8, !dbg !10016
  %18 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10017
  %v29 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %18, i32 0, i32 1, !dbg !10018
  %19 = load i32, i32* %v29, align 4, !dbg !10018
  %idxprom10 = sext i32 %19 to i64, !dbg !10014
  %arrayidx11 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %17, i64 %idxprom10, !dbg !10014
  store %struct.BodyPoint* %arrayidx11, %struct.BodyPoint** %bp1, align 8, !dbg !10019
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10020
  %bpoint12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 2, !dbg !10021
  %21 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint12, align 8, !dbg !10021
  %22 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10022
  %v113 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %22, i32 0, i32 0, !dbg !10023
  %23 = load i32, i32* %v113, align 4, !dbg !10023
  %idxprom14 = sext i32 %23 to i64, !dbg !10020
  %arrayidx15 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %21, i64 %idxprom14, !dbg !10020
  store %struct.BodyPoint* %arrayidx15, %struct.BodyPoint** %bp2, align 8, !dbg !10024
  br label %if.end, !dbg !10025

if.else16:                                        ; preds = %if.else
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.24, i64 0, i64 0)), !dbg !10026
  br label %if.end75, !dbg !10028

if.end:                                           ; preds = %if.then7
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10029
  %24 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !10030
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %24, i32 0, i32 3, !dbg !10031
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !10030
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bp2, align 8, !dbg !10032
  %pos19 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i32 0, i32 3, !dbg !10033
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %pos19, i64 0, i64 0, !dbg !10032
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay18, float* %arraydecay20), !dbg !10034
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10035
  %call22 = call float @normalize_v3(float* %arraydecay21), !dbg !10036
  store float %call22, float* %distance, align 4, !dbg !10037
  %26 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10038
  %len = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %26, i32 0, i32 2, !dbg !10040
  %27 = load float, float* %len, align 4, !dbg !10040
  %28 = load float, float* %distance, align 4, !dbg !10041
  %cmp23 = fcmp olt float %27, %28, !dbg !10042
  br i1 %cmp23, label %if.then24, label %if.else26, !dbg !10043

if.then24:                                        ; preds = %if.end17
  %29 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10044
  %inspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %29, i32 0, i32 21, !dbg !10045
  %30 = load float, float* %inspring, align 8, !dbg !10045
  %sub = fsub float 1.000000e+00, %30, !dbg !10046
  %div = fdiv float 1.000000e+00, %sub, !dbg !10047
  %sub25 = fsub float %div, 1.000000e+00, !dbg !10048
  store float %sub25, float* %iks.addr, align 4, !dbg !10049
  br label %if.end30, !dbg !10050

if.else26:                                        ; preds = %if.end17
  %31 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10051
  %inpush = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %31, i32 0, i32 46, !dbg !10052
  %32 = load float, float* %inpush, align 4, !dbg !10052
  %sub27 = fsub float 1.000000e+00, %32, !dbg !10053
  %div28 = fdiv float 1.000000e+00, %sub27, !dbg !10054
  %sub29 = fsub float %div28, 1.000000e+00, !dbg !10055
  store float %sub29, float* %iks.addr, align 4, !dbg !10056
  br label %if.end30

if.end30:                                         ; preds = %if.else26, %if.then24
  %33 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10057
  %len31 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %33, i32 0, i32 2, !dbg !10059
  %34 = load float, float* %len31, align 4, !dbg !10059
  %cmp32 = fcmp ogt float %34, 0.000000e+00, !dbg !10060
  br i1 %cmp32, label %if.then33, label %if.else36, !dbg !10061

if.then33:                                        ; preds = %if.end30
  %35 = load float, float* %iks.addr, align 4, !dbg !10062
  %36 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10063
  %len34 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %36, i32 0, i32 2, !dbg !10064
  %37 = load float, float* %len34, align 4, !dbg !10064
  %div35 = fdiv float %35, %37, !dbg !10065
  store float %div35, float* %forcefactor, align 4, !dbg !10066
  br label %if.end37, !dbg !10067

if.else36:                                        ; preds = %if.end30
  %38 = load float, float* %iks.addr, align 4, !dbg !10068
  store float %38, float* %forcefactor, align 4, !dbg !10069
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then33
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !10070
  %springweight = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i32 0, i32 21, !dbg !10071
  %40 = load float, float* %springweight, align 8, !dbg !10071
  %41 = load %struct.BodyPoint*, %struct.BodyPoint** %bp2, align 8, !dbg !10072
  %springweight38 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %41, i32 0, i32 21, !dbg !10073
  %42 = load float, float* %springweight38, align 8, !dbg !10073
  %add = fadd float %40, %42, !dbg !10074
  %div39 = fdiv float %add, 2.000000e+00, !dbg !10075
  store float %div39, float* %kw, align 4, !dbg !10076
  %43 = load float, float* %kw, align 4, !dbg !10077
  %44 = load float, float* %kw, align 4, !dbg !10078
  %mul = fmul float %43, %44, !dbg !10079
  store float %mul, float* %kw, align 4, !dbg !10080
  %45 = load float, float* %kw, align 4, !dbg !10081
  %46 = load float, float* %kw, align 4, !dbg !10082
  %mul40 = fmul float %45, %46, !dbg !10083
  store float %mul40, float* %kw, align 4, !dbg !10084
  %47 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10085
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %47, i32 0, i32 6, !dbg !10086
  %48 = load i32, i32* %springtype, align 4, !dbg !10086
  switch i32 %48, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb
    i32 2, label %sw.bb42
    i32 3, label %sw.bb45
  ], !dbg !10087

sw.bb:                                            ; preds = %if.end37, %if.end37
  %49 = load float, float* %kw, align 4, !dbg !10088
  %50 = load float, float* %forcefactor, align 4, !dbg !10090
  %mul41 = fmul float %50, %49, !dbg !10090
  store float %mul41, float* %forcefactor, align 4, !dbg !10090
  br label %sw.epilog, !dbg !10091

sw.bb42:                                          ; preds = %if.end37
  %51 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10092
  %secondspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %51, i32 0, i32 32, !dbg !10093
  %52 = load float, float* %secondspring, align 8, !dbg !10093
  %53 = load float, float* %kw, align 4, !dbg !10094
  %mul43 = fmul float %52, %53, !dbg !10095
  %54 = load float, float* %forcefactor, align 4, !dbg !10096
  %mul44 = fmul float %54, %mul43, !dbg !10096
  store float %mul44, float* %forcefactor, align 4, !dbg !10096
  br label %sw.epilog, !dbg !10097

sw.bb45:                                          ; preds = %if.end37
  %55 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10098
  %shearstiff = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %55, i32 0, i32 45, !dbg !10099
  %56 = load float, float* %shearstiff, align 8, !dbg !10099
  %57 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10100
  %shearstiff46 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %57, i32 0, i32 45, !dbg !10101
  %58 = load float, float* %shearstiff46, align 8, !dbg !10101
  %mul47 = fmul float %56, %58, !dbg !10102
  %59 = load float, float* %kw, align 4, !dbg !10103
  %mul48 = fmul float %mul47, %59, !dbg !10104
  %60 = load float, float* %forcefactor, align 4, !dbg !10105
  %mul49 = fmul float %60, %mul48, !dbg !10105
  store float %mul49, float* %forcefactor, align 4, !dbg !10105
  br label %sw.epilog, !dbg !10106

sw.default:                                       ; preds = %if.end37
  br label %sw.epilog, !dbg !10107

sw.epilog:                                        ; preds = %sw.default, %sw.bb45, %sw.bb42, %sw.bb
  %61 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !10108
  %force = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %61, i32 0, i32 5, !dbg !10109
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !10108
  %62 = load %struct.BodySpring*, %struct.BodySpring** %bs.addr, align 8, !dbg !10110
  %len51 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %62, i32 0, i32 2, !dbg !10111
  %63 = load float, float* %len51, align 4, !dbg !10111
  %64 = load float, float* %distance, align 4, !dbg !10112
  %sub52 = fsub float %63, %64, !dbg !10113
  %65 = load float, float* %forcefactor, align 4, !dbg !10114
  %mul53 = fmul float %sub52, %65, !dbg !10115
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10116
  call void @Vec3PlusStVec(float* %arraydecay50, float %mul53, float* %arraydecay54), !dbg !10117
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !10118
  %66 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !10119
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %66, i32 0, i32 4, !dbg !10120
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10119
  %67 = load %struct.BodyPoint*, %struct.BodyPoint** %bp2, align 8, !dbg !10121
  %vec57 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %67, i32 0, i32 4, !dbg !10122
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %vec57, i64 0, i64 0, !dbg !10121
  call void @sub_v3_v3v3(float* %arraydecay55, float* %arraydecay56, float* %arraydecay58), !dbg !10123
  %68 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10124
  %infrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %68, i32 0, i32 22, !dbg !10125
  %69 = load float, float* %infrict, align 4, !dbg !10125
  %70 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10126
  %call59 = call float @sb_fric_force_scale(%struct.Object* %70), !dbg !10127
  %mul60 = fmul float %69, %call59, !dbg !10128
  store float %mul60, float* %kd, align 4, !dbg !10129
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !10130
  %call62 = call float @normalize_v3(float* %arraydecay61), !dbg !10131
  store float %call62, float* %absvel, align 4, !dbg !10132
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10133
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !10134
  %call65 = call float @dot_v3v3(float* %arraydecay63, float* %arraydecay64), !dbg !10135
  store float %call65, float* %projvel, align 4, !dbg !10136
  %71 = load float, float* %absvel, align 4, !dbg !10137
  %72 = load float, float* %projvel, align 4, !dbg !10138
  %mul66 = fmul float %71, %72, !dbg !10139
  %73 = load float, float* %kd, align 4, !dbg !10140
  %mul67 = fmul float %73, %mul66, !dbg !10140
  store float %mul67, float* %kd, align 4, !dbg !10140
  %74 = load %struct.BodyPoint*, %struct.BodyPoint** %bp1, align 8, !dbg !10141
  %force68 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %74, i32 0, i32 5, !dbg !10142
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %force68, i64 0, i64 0, !dbg !10141
  %75 = load float, float* %kd, align 4, !dbg !10143
  %fneg = fneg float %75, !dbg !10144
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !10145
  call void @Vec3PlusStVec(float* %arraydecay69, float %fneg, float* %arraydecay70), !dbg !10146
  %76 = load i32, i32* %nl_flags.addr, align 4, !dbg !10147
  %and = and i32 %76, 1, !dbg !10149
  %tobool = icmp ne i32 %and, 0, !dbg !10149
  br i1 %tobool, label %if.then71, label %if.end75, !dbg !10150

if.then71:                                        ; preds = %sw.epilog
  %77 = load %struct.BodyPoint*, %struct.BodyPoint** %bp2, align 8, !dbg !10151
  %goal = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %77, i32 0, i32 6, !dbg !10154
  %78 = load float, float* %goal, align 8, !dbg !10154
  %cmp72 = fcmp olt float %78, 0x3FEFF7CEE0000000, !dbg !10155
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !10156

if.then73:                                        ; preds = %if.then71
  br label %if.end74, !dbg !10157

if.end74:                                         ; preds = %if.then73, %if.then71
  br label %if.end75, !dbg !10159

if.end75:                                         ; preds = %if.else16, %if.end74, %sw.epilog
  ret void, !dbg !10160
}

; Function Attrs: noinline nounwind uwtable
define internal void @scan_for_ext_face_forces(%struct.Object* %ob, float %timenow) #0 !dbg !10161 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %timenow.addr = alloca float, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bf = alloca %struct.BodyFace*, align 8
  %a = alloca i32, align 4
  %damp = alloca float, align 4
  %choke = alloca float, align 4
  %tune = alloca float, align 4
  %feedback = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !10166, metadata !DIExpression()), !dbg !10167
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10168
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !10169
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !10169
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !10167
  call void @llvm.dbg.declare(metadata %struct.BodyFace** %bf, metadata !10170, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10172, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.declare(metadata float* %damp, metadata !10174, metadata !DIExpression()), !dbg !10175
  store float 0.000000e+00, float* %damp, align 4, !dbg !10175
  call void @llvm.dbg.declare(metadata float* %choke, metadata !10176, metadata !DIExpression()), !dbg !10177
  store float 1.000000e+00, float* %choke, align 4, !dbg !10177
  call void @llvm.dbg.declare(metadata float* %tune, metadata !10178, metadata !DIExpression()), !dbg !10179
  store float -1.000000e+01, float* %tune, align 4, !dbg !10179
  call void @llvm.dbg.declare(metadata [3 x float]* %feedback, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10182
  %tobool = icmp ne %struct.SoftBody* %2, null, !dbg !10182
  br i1 %tobool, label %land.lhs.true, label %if.end299, !dbg !10184

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10185
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 44, !dbg !10186
  %4 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !10186
  %totface = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %4, i32 0, i32 4, !dbg !10187
  %5 = load i32, i32* %totface, align 8, !dbg !10187
  %tobool1 = icmp ne i32 %5, 0, !dbg !10185
  br i1 %tobool1, label %if.then, label %if.end299, !dbg !10188

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10189
  %scratch2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 44, !dbg !10191
  %7 = load %struct.SBScratch*, %struct.SBScratch** %scratch2, align 8, !dbg !10191
  %bodyface = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %7, i32 0, i32 3, !dbg !10192
  %8 = load %struct.BodyFace*, %struct.BodyFace** %bodyface, align 8, !dbg !10192
  store %struct.BodyFace* %8, %struct.BodyFace** %bf, align 8, !dbg !10193
  store i32 0, i32* %a, align 4, !dbg !10194
  br label %for.cond, !dbg !10196

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %a, align 4, !dbg !10197
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10199
  %scratch3 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 44, !dbg !10200
  %11 = load %struct.SBScratch*, %struct.SBScratch** %scratch3, align 8, !dbg !10200
  %totface4 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %11, i32 0, i32 4, !dbg !10201
  %12 = load i32, i32* %totface4, align 8, !dbg !10201
  %cmp = icmp slt i32 %9, %12, !dbg !10202
  br i1 %cmp, label %for.body, label %for.end, !dbg !10203

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10204
  %ext_force = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %13, i32 0, i32 4, !dbg !10206
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %ext_force, i64 0, i64 2, !dbg !10204
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10207
  %14 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10208
  %ext_force5 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %14, i32 0, i32 4, !dbg !10209
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %ext_force5, i64 0, i64 1, !dbg !10208
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !10210
  %15 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10211
  %ext_force7 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %15, i32 0, i32 4, !dbg !10212
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %ext_force7, i64 0, i64 0, !dbg !10211
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !10213
  %16 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10214
  %flag = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %16, i32 0, i32 5, !dbg !10215
  %17 = load i16, i16* %flag, align 4, !dbg !10216
  %conv = sext i16 %17 to i32, !dbg !10216
  %and = and i32 %conv, -2, !dbg !10216
  %conv9 = trunc i32 %and to i16, !dbg !10216
  store i16 %conv9, i16* %flag, align 4, !dbg !10216
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 2, !dbg !10217
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !10218
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 1, !dbg !10219
  store float 0.000000e+00, float* %arrayidx11, align 4, !dbg !10220
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10221
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !10222
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10223
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 2, !dbg !10225
  %19 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !10225
  %20 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10226
  %v1 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %20, i32 0, i32 0, !dbg !10227
  %21 = load i32, i32* %v1, align 4, !dbg !10227
  %idxprom = sext i32 %21 to i64, !dbg !10223
  %arrayidx13 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %19, i64 %idxprom, !dbg !10223
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx13, i32 0, i32 3, !dbg !10228
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !10223
  %22 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10229
  %bpoint14 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %22, i32 0, i32 2, !dbg !10230
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint14, align 8, !dbg !10230
  %24 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10231
  %v2 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %24, i32 0, i32 1, !dbg !10232
  %25 = load i32, i32* %v2, align 4, !dbg !10232
  %idxprom15 = sext i32 %25 to i64, !dbg !10229
  %arrayidx16 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i64 %idxprom15, !dbg !10229
  %pos17 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx16, i32 0, i32 3, !dbg !10233
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %pos17, i64 0, i64 0, !dbg !10229
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10234
  %bpoint19 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 2, !dbg !10235
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint19, align 8, !dbg !10235
  %28 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10236
  %v3 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %28, i32 0, i32 2, !dbg !10237
  %29 = load i32, i32* %v3, align 4, !dbg !10237
  %idxprom20 = sext i32 %29 to i64, !dbg !10234
  %arrayidx21 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i64 %idxprom20, !dbg !10234
  %pos22 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx21, i32 0, i32 3, !dbg !10238
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %pos22, i64 0, i64 0, !dbg !10234
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10239
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10240
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 52, !dbg !10241
  %31 = load i32, i32* %lay, align 8, !dbg !10241
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10242
  %33 = load float, float* %timenow.addr, align 4, !dbg !10243
  %call = call i32 @sb_detect_face_collisionCached(float* %arraydecay, float* %arraydecay18, float* %arraydecay23, float* %damp, float* %arraydecay24, i32 %31, %struct.Object* %32, float %33), !dbg !10244
  %tobool25 = icmp ne i32 %call, 0, !dbg !10244
  br i1 %tobool25, label %if.then26, label %if.end, !dbg !10245

if.then26:                                        ; preds = %for.body
  %34 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10246
  %bpoint27 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %34, i32 0, i32 2, !dbg !10248
  %35 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint27, align 8, !dbg !10248
  %36 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10249
  %v128 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %36, i32 0, i32 0, !dbg !10250
  %37 = load i32, i32* %v128, align 4, !dbg !10250
  %idxprom29 = sext i32 %37 to i64, !dbg !10246
  %arrayidx30 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %35, i64 %idxprom29, !dbg !10246
  %force = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx30, i32 0, i32 5, !dbg !10251
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !10246
  %38 = load float, float* %tune, align 4, !dbg !10252
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10253
  call void @Vec3PlusStVec(float* %arraydecay31, float %38, float* %arraydecay32), !dbg !10254
  %39 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10255
  %bpoint33 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %39, i32 0, i32 2, !dbg !10256
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint33, align 8, !dbg !10256
  %41 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10257
  %v234 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %41, i32 0, i32 1, !dbg !10258
  %42 = load i32, i32* %v234, align 4, !dbg !10258
  %idxprom35 = sext i32 %42 to i64, !dbg !10255
  %arrayidx36 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %40, i64 %idxprom35, !dbg !10255
  %force37 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx36, i32 0, i32 5, !dbg !10259
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %force37, i64 0, i64 0, !dbg !10255
  %43 = load float, float* %tune, align 4, !dbg !10260
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10261
  call void @Vec3PlusStVec(float* %arraydecay38, float %43, float* %arraydecay39), !dbg !10262
  %44 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10263
  %bpoint40 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %44, i32 0, i32 2, !dbg !10264
  %45 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint40, align 8, !dbg !10264
  %46 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10265
  %v341 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %46, i32 0, i32 2, !dbg !10266
  %47 = load i32, i32* %v341, align 4, !dbg !10266
  %idxprom42 = sext i32 %47 to i64, !dbg !10263
  %arrayidx43 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %45, i64 %idxprom42, !dbg !10263
  %force44 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx43, i32 0, i32 5, !dbg !10267
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %force44, i64 0, i64 0, !dbg !10263
  %48 = load float, float* %tune, align 4, !dbg !10268
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10269
  call void @Vec3PlusStVec(float* %arraydecay45, float %48, float* %arraydecay46), !dbg !10270
  %49 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10271
  %flag47 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %49, i32 0, i32 5, !dbg !10272
  %50 = load i16, i16* %flag47, align 4, !dbg !10273
  %conv48 = sext i16 %50 to i32, !dbg !10273
  %or = or i32 %conv48, 1, !dbg !10273
  %conv49 = trunc i32 %or to i16, !dbg !10273
  store i16 %conv49, i16* %flag47, align 4, !dbg !10273
  %51 = load float, float* %damp, align 4, !dbg !10274
  %52 = load float, float* %choke, align 4, !dbg !10275
  %call50 = call float @max_ff(float %51, float %52), !dbg !10276
  %call51 = call float @min_ff(float %call50, float 1.000000e+00), !dbg !10277
  store float %call51, float* %choke, align 4, !dbg !10278
  br label %if.end, !dbg !10279

if.end:                                           ; preds = %if.then26, %for.body
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 2, !dbg !10280
  store float 0.000000e+00, float* %arrayidx52, align 4, !dbg !10281
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 1, !dbg !10282
  store float 0.000000e+00, float* %arrayidx53, align 4, !dbg !10283
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10284
  store float 0.000000e+00, float* %arrayidx54, align 4, !dbg !10285
  %53 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10286
  %v4 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %53, i32 0, i32 3, !dbg !10288
  %54 = load i32, i32* %v4, align 4, !dbg !10288
  %tobool55 = icmp ne i32 %54, 0, !dbg !10289
  br i1 %tobool55, label %land.lhs.true56, label %if.end107, !dbg !10290

land.lhs.true56:                                  ; preds = %if.end
  %55 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10291
  %bpoint57 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %55, i32 0, i32 2, !dbg !10292
  %56 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint57, align 8, !dbg !10292
  %57 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10293
  %v158 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %57, i32 0, i32 0, !dbg !10294
  %58 = load i32, i32* %v158, align 4, !dbg !10294
  %idxprom59 = sext i32 %58 to i64, !dbg !10291
  %arrayidx60 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %56, i64 %idxprom59, !dbg !10291
  %pos61 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx60, i32 0, i32 3, !dbg !10295
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %pos61, i64 0, i64 0, !dbg !10291
  %59 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10296
  %bpoint63 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %59, i32 0, i32 2, !dbg !10297
  %60 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint63, align 8, !dbg !10297
  %61 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10298
  %v364 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %61, i32 0, i32 2, !dbg !10299
  %62 = load i32, i32* %v364, align 4, !dbg !10299
  %idxprom65 = sext i32 %62 to i64, !dbg !10296
  %arrayidx66 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %60, i64 %idxprom65, !dbg !10296
  %pos67 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx66, i32 0, i32 3, !dbg !10300
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %pos67, i64 0, i64 0, !dbg !10296
  %63 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10301
  %bpoint69 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %63, i32 0, i32 2, !dbg !10302
  %64 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint69, align 8, !dbg !10302
  %65 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10303
  %v470 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %65, i32 0, i32 3, !dbg !10304
  %66 = load i32, i32* %v470, align 4, !dbg !10304
  %idxprom71 = sext i32 %66 to i64, !dbg !10301
  %arrayidx72 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %64, i64 %idxprom71, !dbg !10301
  %pos73 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx72, i32 0, i32 3, !dbg !10305
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %pos73, i64 0, i64 0, !dbg !10301
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10306
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10307
  %lay76 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 52, !dbg !10308
  %68 = load i32, i32* %lay76, align 8, !dbg !10308
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10309
  %70 = load float, float* %timenow.addr, align 4, !dbg !10310
  %call77 = call i32 @sb_detect_face_collisionCached(float* %arraydecay62, float* %arraydecay68, float* %arraydecay74, float* %damp, float* %arraydecay75, i32 %68, %struct.Object* %69, float %70), !dbg !10311
  %tobool78 = icmp ne i32 %call77, 0, !dbg !10311
  br i1 %tobool78, label %if.then79, label %if.end107, !dbg !10312

if.then79:                                        ; preds = %land.lhs.true56
  %71 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10313
  %bpoint80 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %71, i32 0, i32 2, !dbg !10315
  %72 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint80, align 8, !dbg !10315
  %73 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10316
  %v181 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %73, i32 0, i32 0, !dbg !10317
  %74 = load i32, i32* %v181, align 4, !dbg !10317
  %idxprom82 = sext i32 %74 to i64, !dbg !10313
  %arrayidx83 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %72, i64 %idxprom82, !dbg !10313
  %force84 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx83, i32 0, i32 5, !dbg !10318
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %force84, i64 0, i64 0, !dbg !10313
  %75 = load float, float* %tune, align 4, !dbg !10319
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10320
  call void @Vec3PlusStVec(float* %arraydecay85, float %75, float* %arraydecay86), !dbg !10321
  %76 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10322
  %bpoint87 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %76, i32 0, i32 2, !dbg !10323
  %77 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint87, align 8, !dbg !10323
  %78 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10324
  %v388 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %78, i32 0, i32 2, !dbg !10325
  %79 = load i32, i32* %v388, align 4, !dbg !10325
  %idxprom89 = sext i32 %79 to i64, !dbg !10322
  %arrayidx90 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %77, i64 %idxprom89, !dbg !10322
  %force91 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx90, i32 0, i32 5, !dbg !10326
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %force91, i64 0, i64 0, !dbg !10322
  %80 = load float, float* %tune, align 4, !dbg !10327
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10328
  call void @Vec3PlusStVec(float* %arraydecay92, float %80, float* %arraydecay93), !dbg !10329
  %81 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10330
  %bpoint94 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %81, i32 0, i32 2, !dbg !10331
  %82 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint94, align 8, !dbg !10331
  %83 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10332
  %v495 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %83, i32 0, i32 3, !dbg !10333
  %84 = load i32, i32* %v495, align 4, !dbg !10333
  %idxprom96 = sext i32 %84 to i64, !dbg !10330
  %arrayidx97 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %82, i64 %idxprom96, !dbg !10330
  %force98 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx97, i32 0, i32 5, !dbg !10334
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %force98, i64 0, i64 0, !dbg !10330
  %85 = load float, float* %tune, align 4, !dbg !10335
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10336
  call void @Vec3PlusStVec(float* %arraydecay99, float %85, float* %arraydecay100), !dbg !10337
  %86 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10338
  %flag101 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %86, i32 0, i32 5, !dbg !10339
  %87 = load i16, i16* %flag101, align 4, !dbg !10340
  %conv102 = sext i16 %87 to i32, !dbg !10340
  %or103 = or i32 %conv102, 1, !dbg !10340
  %conv104 = trunc i32 %or103 to i16, !dbg !10340
  store i16 %conv104, i16* %flag101, align 4, !dbg !10340
  %88 = load float, float* %damp, align 4, !dbg !10341
  %89 = load float, float* %choke, align 4, !dbg !10342
  %call105 = call float @max_ff(float %88, float %89), !dbg !10343
  %call106 = call float @min_ff(float %call105, float 1.000000e+00), !dbg !10344
  store float %call106, float* %choke, align 4, !dbg !10345
  br label %if.end107, !dbg !10346

if.end107:                                        ; preds = %if.then79, %land.lhs.true56, %if.end
  %90 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10347
  %flag108 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %90, i32 0, i32 5, !dbg !10349
  %91 = load i16, i16* %flag108, align 4, !dbg !10349
  %conv109 = sext i16 %91 to i32, !dbg !10347
  %and110 = and i32 %conv109, 1, !dbg !10350
  %cmp111 = icmp eq i32 %and110, 0, !dbg !10351
  br i1 %cmp111, label %if.then113, label %if.end229, !dbg !10352

if.then113:                                       ; preds = %if.end107
  %92 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10353
  %flag114 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %92, i32 0, i32 5, !dbg !10355
  %93 = load i16, i16* %flag114, align 4, !dbg !10356
  %conv115 = sext i16 %93 to i32, !dbg !10356
  %and116 = and i32 %conv115, -3, !dbg !10356
  %conv117 = trunc i32 %and116 to i16, !dbg !10356
  store i16 %conv117, i16* %flag114, align 4, !dbg !10356
  store float -1.000000e+00, float* %tune, align 4, !dbg !10357
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 2, !dbg !10358
  store float 0.000000e+00, float* %arrayidx118, align 4, !dbg !10359
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 1, !dbg !10360
  store float 0.000000e+00, float* %arrayidx119, align 4, !dbg !10361
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10362
  store float 0.000000e+00, float* %arrayidx120, align 4, !dbg !10363
  %94 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10364
  %bpoint121 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %94, i32 0, i32 2, !dbg !10366
  %95 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint121, align 8, !dbg !10366
  %96 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10367
  %v1122 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %96, i32 0, i32 0, !dbg !10368
  %97 = load i32, i32* %v1122, align 4, !dbg !10368
  %idxprom123 = sext i32 %97 to i64, !dbg !10364
  %arrayidx124 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %95, i64 %idxprom123, !dbg !10364
  %pos125 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx124, i32 0, i32 3, !dbg !10369
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %pos125, i64 0, i64 0, !dbg !10364
  %98 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10370
  %bpoint127 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %98, i32 0, i32 2, !dbg !10371
  %99 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint127, align 8, !dbg !10371
  %100 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10372
  %v2128 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %100, i32 0, i32 1, !dbg !10373
  %101 = load i32, i32* %v2128, align 4, !dbg !10373
  %idxprom129 = sext i32 %101 to i64, !dbg !10370
  %arrayidx130 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %99, i64 %idxprom129, !dbg !10370
  %pos131 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx130, i32 0, i32 3, !dbg !10374
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %pos131, i64 0, i64 0, !dbg !10370
  %102 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10375
  %bpoint133 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %102, i32 0, i32 2, !dbg !10376
  %103 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint133, align 8, !dbg !10376
  %104 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10377
  %v3134 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %104, i32 0, i32 2, !dbg !10378
  %105 = load i32, i32* %v3134, align 4, !dbg !10378
  %idxprom135 = sext i32 %105 to i64, !dbg !10375
  %arrayidx136 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %103, i64 %idxprom135, !dbg !10375
  %pos137 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx136, i32 0, i32 3, !dbg !10379
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %pos137, i64 0, i64 0, !dbg !10375
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10380
  %106 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10381
  %lay140 = getelementptr inbounds %struct.Object, %struct.Object* %106, i32 0, i32 52, !dbg !10382
  %107 = load i32, i32* %lay140, align 8, !dbg !10382
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10383
  %109 = load float, float* %timenow.addr, align 4, !dbg !10384
  %call141 = call i32 @sb_detect_face_pointCached(float* %arraydecay126, float* %arraydecay132, float* %arraydecay138, float* %damp, float* %arraydecay139, i32 %107, %struct.Object* %108, float %109), !dbg !10385
  %tobool142 = icmp ne i32 %call141, 0, !dbg !10385
  br i1 %tobool142, label %if.then143, label %if.end171, !dbg !10386

if.then143:                                       ; preds = %if.then113
  %110 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10387
  %bpoint144 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %110, i32 0, i32 2, !dbg !10389
  %111 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint144, align 8, !dbg !10389
  %112 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10390
  %v1145 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %112, i32 0, i32 0, !dbg !10391
  %113 = load i32, i32* %v1145, align 4, !dbg !10391
  %idxprom146 = sext i32 %113 to i64, !dbg !10387
  %arrayidx147 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %111, i64 %idxprom146, !dbg !10387
  %force148 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx147, i32 0, i32 5, !dbg !10392
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %force148, i64 0, i64 0, !dbg !10387
  %114 = load float, float* %tune, align 4, !dbg !10393
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10394
  call void @Vec3PlusStVec(float* %arraydecay149, float %114, float* %arraydecay150), !dbg !10395
  %115 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10396
  %bpoint151 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %115, i32 0, i32 2, !dbg !10397
  %116 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint151, align 8, !dbg !10397
  %117 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10398
  %v2152 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %117, i32 0, i32 1, !dbg !10399
  %118 = load i32, i32* %v2152, align 4, !dbg !10399
  %idxprom153 = sext i32 %118 to i64, !dbg !10396
  %arrayidx154 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %116, i64 %idxprom153, !dbg !10396
  %force155 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx154, i32 0, i32 5, !dbg !10400
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %force155, i64 0, i64 0, !dbg !10396
  %119 = load float, float* %tune, align 4, !dbg !10401
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10402
  call void @Vec3PlusStVec(float* %arraydecay156, float %119, float* %arraydecay157), !dbg !10403
  %120 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10404
  %bpoint158 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %120, i32 0, i32 2, !dbg !10405
  %121 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint158, align 8, !dbg !10405
  %122 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10406
  %v3159 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %122, i32 0, i32 2, !dbg !10407
  %123 = load i32, i32* %v3159, align 4, !dbg !10407
  %idxprom160 = sext i32 %123 to i64, !dbg !10404
  %arrayidx161 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %121, i64 %idxprom160, !dbg !10404
  %force162 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx161, i32 0, i32 5, !dbg !10408
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %force162, i64 0, i64 0, !dbg !10404
  %124 = load float, float* %tune, align 4, !dbg !10409
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10410
  call void @Vec3PlusStVec(float* %arraydecay163, float %124, float* %arraydecay164), !dbg !10411
  %125 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10412
  %flag165 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %125, i32 0, i32 5, !dbg !10413
  %126 = load i16, i16* %flag165, align 4, !dbg !10414
  %conv166 = sext i16 %126 to i32, !dbg !10414
  %or167 = or i32 %conv166, 2, !dbg !10414
  %conv168 = trunc i32 %or167 to i16, !dbg !10414
  store i16 %conv168, i16* %flag165, align 4, !dbg !10414
  %127 = load float, float* %damp, align 4, !dbg !10415
  %128 = load float, float* %choke, align 4, !dbg !10416
  %call169 = call float @max_ff(float %127, float %128), !dbg !10417
  %call170 = call float @min_ff(float %call169, float 1.000000e+00), !dbg !10418
  store float %call170, float* %choke, align 4, !dbg !10419
  br label %if.end171, !dbg !10420

if.end171:                                        ; preds = %if.then143, %if.then113
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 2, !dbg !10421
  store float 0.000000e+00, float* %arrayidx172, align 4, !dbg !10422
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 1, !dbg !10423
  store float 0.000000e+00, float* %arrayidx173, align 4, !dbg !10424
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10425
  store float 0.000000e+00, float* %arrayidx174, align 4, !dbg !10426
  %129 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10427
  %v4175 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %129, i32 0, i32 3, !dbg !10429
  %130 = load i32, i32* %v4175, align 4, !dbg !10429
  %tobool176 = icmp ne i32 %130, 0, !dbg !10430
  br i1 %tobool176, label %land.lhs.true177, label %if.end228, !dbg !10431

land.lhs.true177:                                 ; preds = %if.end171
  %131 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10432
  %bpoint178 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %131, i32 0, i32 2, !dbg !10433
  %132 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint178, align 8, !dbg !10433
  %133 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10434
  %v1179 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %133, i32 0, i32 0, !dbg !10435
  %134 = load i32, i32* %v1179, align 4, !dbg !10435
  %idxprom180 = sext i32 %134 to i64, !dbg !10432
  %arrayidx181 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %132, i64 %idxprom180, !dbg !10432
  %pos182 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx181, i32 0, i32 3, !dbg !10436
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %pos182, i64 0, i64 0, !dbg !10432
  %135 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10437
  %bpoint184 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %135, i32 0, i32 2, !dbg !10438
  %136 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint184, align 8, !dbg !10438
  %137 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10439
  %v3185 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %137, i32 0, i32 2, !dbg !10440
  %138 = load i32, i32* %v3185, align 4, !dbg !10440
  %idxprom186 = sext i32 %138 to i64, !dbg !10437
  %arrayidx187 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %136, i64 %idxprom186, !dbg !10437
  %pos188 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx187, i32 0, i32 3, !dbg !10441
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %pos188, i64 0, i64 0, !dbg !10437
  %139 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10442
  %bpoint190 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %139, i32 0, i32 2, !dbg !10443
  %140 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint190, align 8, !dbg !10443
  %141 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10444
  %v4191 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %141, i32 0, i32 3, !dbg !10445
  %142 = load i32, i32* %v4191, align 4, !dbg !10445
  %idxprom192 = sext i32 %142 to i64, !dbg !10442
  %arrayidx193 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %140, i64 %idxprom192, !dbg !10442
  %pos194 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx193, i32 0, i32 3, !dbg !10446
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %pos194, i64 0, i64 0, !dbg !10442
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10447
  %143 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10448
  %lay197 = getelementptr inbounds %struct.Object, %struct.Object* %143, i32 0, i32 52, !dbg !10449
  %144 = load i32, i32* %lay197, align 8, !dbg !10449
  %145 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10450
  %146 = load float, float* %timenow.addr, align 4, !dbg !10451
  %call198 = call i32 @sb_detect_face_pointCached(float* %arraydecay183, float* %arraydecay189, float* %arraydecay195, float* %damp, float* %arraydecay196, i32 %144, %struct.Object* %145, float %146), !dbg !10452
  %tobool199 = icmp ne i32 %call198, 0, !dbg !10452
  br i1 %tobool199, label %if.then200, label %if.end228, !dbg !10453

if.then200:                                       ; preds = %land.lhs.true177
  %147 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10454
  %bpoint201 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %147, i32 0, i32 2, !dbg !10456
  %148 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint201, align 8, !dbg !10456
  %149 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10457
  %v1202 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %149, i32 0, i32 0, !dbg !10458
  %150 = load i32, i32* %v1202, align 4, !dbg !10458
  %idxprom203 = sext i32 %150 to i64, !dbg !10454
  %arrayidx204 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %148, i64 %idxprom203, !dbg !10454
  %force205 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx204, i32 0, i32 5, !dbg !10459
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %force205, i64 0, i64 0, !dbg !10454
  %151 = load float, float* %tune, align 4, !dbg !10460
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10461
  call void @Vec3PlusStVec(float* %arraydecay206, float %151, float* %arraydecay207), !dbg !10462
  %152 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10463
  %bpoint208 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %152, i32 0, i32 2, !dbg !10464
  %153 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint208, align 8, !dbg !10464
  %154 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10465
  %v3209 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %154, i32 0, i32 2, !dbg !10466
  %155 = load i32, i32* %v3209, align 4, !dbg !10466
  %idxprom210 = sext i32 %155 to i64, !dbg !10463
  %arrayidx211 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %153, i64 %idxprom210, !dbg !10463
  %force212 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx211, i32 0, i32 5, !dbg !10467
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %force212, i64 0, i64 0, !dbg !10463
  %156 = load float, float* %tune, align 4, !dbg !10468
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10469
  call void @Vec3PlusStVec(float* %arraydecay213, float %156, float* %arraydecay214), !dbg !10470
  %157 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10471
  %bpoint215 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %157, i32 0, i32 2, !dbg !10472
  %158 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint215, align 8, !dbg !10472
  %159 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10473
  %v4216 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %159, i32 0, i32 3, !dbg !10474
  %160 = load i32, i32* %v4216, align 4, !dbg !10474
  %idxprom217 = sext i32 %160 to i64, !dbg !10471
  %arrayidx218 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %158, i64 %idxprom217, !dbg !10471
  %force219 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx218, i32 0, i32 5, !dbg !10475
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %force219, i64 0, i64 0, !dbg !10471
  %161 = load float, float* %tune, align 4, !dbg !10476
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !10477
  call void @Vec3PlusStVec(float* %arraydecay220, float %161, float* %arraydecay221), !dbg !10478
  %162 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10479
  %flag222 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %162, i32 0, i32 5, !dbg !10480
  %163 = load i16, i16* %flag222, align 4, !dbg !10481
  %conv223 = sext i16 %163 to i32, !dbg !10481
  %or224 = or i32 %conv223, 2, !dbg !10481
  %conv225 = trunc i32 %or224 to i16, !dbg !10481
  store i16 %conv225, i16* %flag222, align 4, !dbg !10481
  %164 = load float, float* %damp, align 4, !dbg !10482
  %165 = load float, float* %choke, align 4, !dbg !10483
  %call226 = call float @max_ff(float %164, float %165), !dbg !10484
  %call227 = call float @min_ff(float %call226, float 1.000000e+00), !dbg !10485
  store float %call227, float* %choke, align 4, !dbg !10486
  br label %if.end228, !dbg !10487

if.end228:                                        ; preds = %if.then200, %land.lhs.true177, %if.end171
  br label %if.end229, !dbg !10488

if.end229:                                        ; preds = %if.end228, %if.end107
  br label %for.inc, !dbg !10489

for.inc:                                          ; preds = %if.end229
  %166 = load i32, i32* %a, align 4, !dbg !10490
  %inc = add nsw i32 %166, 1, !dbg !10490
  store i32 %inc, i32* %a, align 4, !dbg !10490
  %167 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10491
  %incdec.ptr = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %167, i32 1, !dbg !10491
  store %struct.BodyFace* %incdec.ptr, %struct.BodyFace** %bf, align 8, !dbg !10491
  br label %for.cond, !dbg !10492, !llvm.loop !10493

for.end:                                          ; preds = %for.cond
  %168 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10495
  %scratch230 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %168, i32 0, i32 44, !dbg !10496
  %169 = load %struct.SBScratch*, %struct.SBScratch** %scratch230, align 8, !dbg !10496
  %bodyface231 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %169, i32 0, i32 3, !dbg !10497
  %170 = load %struct.BodyFace*, %struct.BodyFace** %bodyface231, align 8, !dbg !10497
  store %struct.BodyFace* %170, %struct.BodyFace** %bf, align 8, !dbg !10498
  store i32 0, i32* %a, align 4, !dbg !10499
  br label %for.cond232, !dbg !10501

for.cond232:                                      ; preds = %for.inc295, %for.end
  %171 = load i32, i32* %a, align 4, !dbg !10502
  %172 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10504
  %scratch233 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %172, i32 0, i32 44, !dbg !10505
  %173 = load %struct.SBScratch*, %struct.SBScratch** %scratch233, align 8, !dbg !10505
  %totface234 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %173, i32 0, i32 4, !dbg !10506
  %174 = load i32, i32* %totface234, align 8, !dbg !10506
  %cmp235 = icmp slt i32 %171, %174, !dbg !10507
  br i1 %cmp235, label %for.body237, label %for.end298, !dbg !10508

for.body237:                                      ; preds = %for.cond232
  %175 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10509
  %flag238 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %175, i32 0, i32 5, !dbg !10512
  %176 = load i16, i16* %flag238, align 4, !dbg !10512
  %conv239 = sext i16 %176 to i32, !dbg !10509
  %and240 = and i32 %conv239, 1, !dbg !10513
  %tobool241 = icmp ne i32 %and240, 0, !dbg !10513
  br i1 %tobool241, label %if.then246, label %lor.lhs.false, !dbg !10514

lor.lhs.false:                                    ; preds = %for.body237
  %177 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10515
  %flag242 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %177, i32 0, i32 5, !dbg !10516
  %178 = load i16, i16* %flag242, align 4, !dbg !10516
  %conv243 = sext i16 %178 to i32, !dbg !10515
  %and244 = and i32 %conv243, 2, !dbg !10517
  %tobool245 = icmp ne i32 %and244, 0, !dbg !10517
  br i1 %tobool245, label %if.then246, label %if.end294, !dbg !10518

if.then246:                                       ; preds = %lor.lhs.false, %for.body237
  %179 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10519
  %bpoint247 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %179, i32 0, i32 2, !dbg !10521
  %180 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint247, align 8, !dbg !10521
  %181 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10522
  %v1248 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %181, i32 0, i32 0, !dbg !10523
  %182 = load i32, i32* %v1248, align 4, !dbg !10523
  %idxprom249 = sext i32 %182 to i64, !dbg !10519
  %arrayidx250 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %180, i64 %idxprom249, !dbg !10519
  %choke2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx250, i32 0, i32 16, !dbg !10524
  %183 = load float, float* %choke2, align 4, !dbg !10524
  %184 = load float, float* %choke, align 4, !dbg !10525
  %call251 = call float @max_ff(float %183, float %184), !dbg !10526
  %185 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10527
  %bpoint252 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %185, i32 0, i32 2, !dbg !10528
  %186 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint252, align 8, !dbg !10528
  %187 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10529
  %v1253 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %187, i32 0, i32 0, !dbg !10530
  %188 = load i32, i32* %v1253, align 4, !dbg !10530
  %idxprom254 = sext i32 %188 to i64, !dbg !10527
  %arrayidx255 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %186, i64 %idxprom254, !dbg !10527
  %choke2256 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx255, i32 0, i32 16, !dbg !10531
  store float %call251, float* %choke2256, align 4, !dbg !10532
  %189 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10533
  %bpoint257 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %189, i32 0, i32 2, !dbg !10534
  %190 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint257, align 8, !dbg !10534
  %191 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10535
  %v2258 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %191, i32 0, i32 1, !dbg !10536
  %192 = load i32, i32* %v2258, align 4, !dbg !10536
  %idxprom259 = sext i32 %192 to i64, !dbg !10533
  %arrayidx260 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %190, i64 %idxprom259, !dbg !10533
  %choke2261 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx260, i32 0, i32 16, !dbg !10537
  %193 = load float, float* %choke2261, align 4, !dbg !10537
  %194 = load float, float* %choke, align 4, !dbg !10538
  %call262 = call float @max_ff(float %193, float %194), !dbg !10539
  %195 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10540
  %bpoint263 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %195, i32 0, i32 2, !dbg !10541
  %196 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint263, align 8, !dbg !10541
  %197 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10542
  %v2264 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %197, i32 0, i32 1, !dbg !10543
  %198 = load i32, i32* %v2264, align 4, !dbg !10543
  %idxprom265 = sext i32 %198 to i64, !dbg !10540
  %arrayidx266 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %196, i64 %idxprom265, !dbg !10540
  %choke2267 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx266, i32 0, i32 16, !dbg !10544
  store float %call262, float* %choke2267, align 4, !dbg !10545
  %199 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10546
  %bpoint268 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %199, i32 0, i32 2, !dbg !10547
  %200 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint268, align 8, !dbg !10547
  %201 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10548
  %v3269 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %201, i32 0, i32 2, !dbg !10549
  %202 = load i32, i32* %v3269, align 4, !dbg !10549
  %idxprom270 = sext i32 %202 to i64, !dbg !10546
  %arrayidx271 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %200, i64 %idxprom270, !dbg !10546
  %choke2272 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx271, i32 0, i32 16, !dbg !10550
  %203 = load float, float* %choke2272, align 4, !dbg !10550
  %204 = load float, float* %choke, align 4, !dbg !10551
  %call273 = call float @max_ff(float %203, float %204), !dbg !10552
  %205 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10553
  %bpoint274 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %205, i32 0, i32 2, !dbg !10554
  %206 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint274, align 8, !dbg !10554
  %207 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10555
  %v3275 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %207, i32 0, i32 2, !dbg !10556
  %208 = load i32, i32* %v3275, align 4, !dbg !10556
  %idxprom276 = sext i32 %208 to i64, !dbg !10553
  %arrayidx277 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %206, i64 %idxprom276, !dbg !10553
  %choke2278 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx277, i32 0, i32 16, !dbg !10557
  store float %call273, float* %choke2278, align 4, !dbg !10558
  %209 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10559
  %v4279 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %209, i32 0, i32 3, !dbg !10561
  %210 = load i32, i32* %v4279, align 4, !dbg !10561
  %tobool280 = icmp ne i32 %210, 0, !dbg !10559
  br i1 %tobool280, label %if.then281, label %if.end293, !dbg !10562

if.then281:                                       ; preds = %if.then246
  %211 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10563
  %bpoint282 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %211, i32 0, i32 2, !dbg !10565
  %212 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint282, align 8, !dbg !10565
  %213 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10566
  %v2283 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %213, i32 0, i32 1, !dbg !10567
  %214 = load i32, i32* %v2283, align 4, !dbg !10567
  %idxprom284 = sext i32 %214 to i64, !dbg !10563
  %arrayidx285 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %212, i64 %idxprom284, !dbg !10563
  %choke2286 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx285, i32 0, i32 16, !dbg !10568
  %215 = load float, float* %choke2286, align 4, !dbg !10568
  %216 = load float, float* %choke, align 4, !dbg !10569
  %call287 = call float @max_ff(float %215, float %216), !dbg !10570
  %217 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !10571
  %bpoint288 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %217, i32 0, i32 2, !dbg !10572
  %218 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint288, align 8, !dbg !10572
  %219 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10573
  %v2289 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %219, i32 0, i32 1, !dbg !10574
  %220 = load i32, i32* %v2289, align 4, !dbg !10574
  %idxprom290 = sext i32 %220 to i64, !dbg !10571
  %arrayidx291 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %218, i64 %idxprom290, !dbg !10571
  %choke2292 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx291, i32 0, i32 16, !dbg !10575
  store float %call287, float* %choke2292, align 4, !dbg !10576
  br label %if.end293, !dbg !10577

if.end293:                                        ; preds = %if.then281, %if.then246
  br label %if.end294, !dbg !10578

if.end294:                                        ; preds = %if.end293, %lor.lhs.false
  br label %for.inc295, !dbg !10579

for.inc295:                                       ; preds = %if.end294
  %221 = load i32, i32* %a, align 4, !dbg !10580
  %inc296 = add nsw i32 %221, 1, !dbg !10580
  store i32 %inc296, i32* %a, align 4, !dbg !10580
  %222 = load %struct.BodyFace*, %struct.BodyFace** %bf, align 8, !dbg !10581
  %incdec.ptr297 = getelementptr inbounds %struct.BodyFace, %struct.BodyFace* %222, i32 1, !dbg !10581
  store %struct.BodyFace* %incdec.ptr297, %struct.BodyFace** %bf, align 8, !dbg !10581
  br label %for.cond232, !dbg !10582, !llvm.loop !10583

for.end298:                                       ; preds = %for.cond232
  br label %if.end299, !dbg !10585

if.end299:                                        ; preds = %for.end298, %land.lhs.true, %entry
  ret void, !dbg !10586
}

declare dso_local void @pdEndEffectors(%struct.ListBase**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sb_sfesf_threads_run(%struct.Scene* %scene, %struct.Object* %ob, float %timenow, i32 %totsprings, i32* ()* %UNUSED_ptr_to_break_func) #0 !dbg !10587 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %timenow.addr = alloca float, align 4
  %totsprings.addr = alloca i32, align 4
  %UNUSED_ptr_to_break_func.addr = alloca i32* ()*, align 8
  %do_effector = alloca %struct.ListBase*, align 8
  %threads = alloca %struct.ListBase, align 8
  %sb_threads = alloca %struct.SB_thread_context*, align 8
  %i = alloca i32, align 4
  %totthread = alloca i32, align 4
  %left = alloca i32, align 4
  %dec = alloca i32, align 4
  %lowsprings = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  store i32 %totsprings, i32* %totsprings.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totsprings.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i32* ()* %UNUSED_ptr_to_break_func, i32* ()** %UNUSED_ptr_to_break_func.addr, align 8
  call void @llvm.dbg.declare(metadata i32* ()** %UNUSED_ptr_to_break_func.addr, metadata !10601, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector, metadata !10603, metadata !DIExpression()), !dbg !10604
  store %struct.ListBase* null, %struct.ListBase** %do_effector, align 8, !dbg !10604
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !10605, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.declare(metadata %struct.SB_thread_context** %sb_threads, metadata !10607, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10609, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !10611, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.declare(metadata i32* %left, metadata !10613, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.declare(metadata i32* %dec, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata i32* %lowsprings, metadata !10617, metadata !DIExpression()), !dbg !10618
  store i32 100, i32* %lowsprings, align 4, !dbg !10618
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10619
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10620
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10621
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 111, !dbg !10622
  %3 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !10622
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 49, !dbg !10623
  %4 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !10623
  %call = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %0, %struct.Object* %1, %struct.ParticleSystem* null, %struct.EffectorWeights* %4, i8 zeroext 1), !dbg !10624
  store %struct.ListBase* %call, %struct.ListBase** %do_effector, align 8, !dbg !10625
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10626
  %call1 = call i32 @BKE_scene_num_threads(%struct.Scene* %5), !dbg !10627
  store i32 %call1, i32* %totthread, align 4, !dbg !10628
  br label %while.cond, !dbg !10629

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i32, i32* %totsprings.addr, align 4, !dbg !10630
  %7 = load i32, i32* %totthread, align 4, !dbg !10631
  %div = sdiv i32 %6, %7, !dbg !10632
  %8 = load i32, i32* %lowsprings, align 4, !dbg !10633
  %cmp = icmp slt i32 %div, %8, !dbg !10634
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10635

land.rhs:                                         ; preds = %while.cond
  %9 = load i32, i32* %totthread, align 4, !dbg !10636
  %cmp2 = icmp sgt i32 %9, 1, !dbg !10637
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !10638
  br i1 %10, label %while.body, label %while.end, !dbg !10629

while.body:                                       ; preds = %land.end
  %11 = load i32, i32* %totthread, align 4, !dbg !10639
  %dec3 = add nsw i32 %11, -1, !dbg !10639
  store i32 %dec3, i32* %totthread, align 4, !dbg !10639
  br label %while.cond, !dbg !10629, !llvm.loop !10641

while.end:                                        ; preds = %land.end
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10643
  %13 = load i32, i32* %totthread, align 4, !dbg !10644
  %conv = sext i32 %13 to i64, !dbg !10644
  %mul = mul i64 64, %conv, !dbg !10645
  %call4 = call i8* %12(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)), !dbg !10643
  %14 = bitcast i8* %call4 to %struct.SB_thread_context*, !dbg !10643
  store %struct.SB_thread_context* %14, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10646
  %15 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10647
  %16 = bitcast %struct.SB_thread_context* %15 to i8*, !dbg !10648
  %17 = load i32, i32* %totthread, align 4, !dbg !10649
  %conv5 = sext i32 %17 to i64, !dbg !10649
  %mul6 = mul i64 64, %conv5, !dbg !10650
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 %mul6, i1 false), !dbg !10648
  %18 = load i32, i32* %totsprings.addr, align 4, !dbg !10651
  store i32 %18, i32* %left, align 4, !dbg !10652
  %19 = load i32, i32* %totsprings.addr, align 4, !dbg !10653
  %20 = load i32, i32* %totthread, align 4, !dbg !10654
  %div7 = sdiv i32 %19, %20, !dbg !10655
  %add = add nsw i32 %div7, 1, !dbg !10656
  store i32 %add, i32* %dec, align 4, !dbg !10657
  store i32 0, i32* %i, align 4, !dbg !10658
  br label %for.cond, !dbg !10660

for.cond:                                         ; preds = %for.inc, %while.end
  %21 = load i32, i32* %i, align 4, !dbg !10661
  %22 = load i32, i32* %totthread, align 4, !dbg !10663
  %cmp8 = icmp slt i32 %21, %22, !dbg !10664
  br i1 %cmp8, label %for.body, label %for.end, !dbg !10665

for.body:                                         ; preds = %for.cond
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10666
  %24 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10668
  %25 = load i32, i32* %i, align 4, !dbg !10669
  %idxprom = sext i32 %25 to i64, !dbg !10668
  %arrayidx = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %24, i64 %idxprom, !dbg !10668
  %scene10 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx, i32 0, i32 0, !dbg !10670
  store %struct.Scene* %23, %struct.Scene** %scene10, align 8, !dbg !10671
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10672
  %27 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10673
  %28 = load i32, i32* %i, align 4, !dbg !10674
  %idxprom11 = sext i32 %28 to i64, !dbg !10673
  %arrayidx12 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %27, i64 %idxprom11, !dbg !10673
  %ob13 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx12, i32 0, i32 1, !dbg !10675
  store %struct.Object* %26, %struct.Object** %ob13, align 8, !dbg !10676
  %29 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10677
  %30 = load i32, i32* %i, align 4, !dbg !10678
  %idxprom14 = sext i32 %30 to i64, !dbg !10677
  %arrayidx15 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %29, i64 %idxprom14, !dbg !10677
  %forcetime = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx15, i32 0, i32 2, !dbg !10679
  store float 0.000000e+00, float* %forcetime, align 8, !dbg !10680
  %31 = load float, float* %timenow.addr, align 4, !dbg !10681
  %32 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10682
  %33 = load i32, i32* %i, align 4, !dbg !10683
  %idxprom16 = sext i32 %33 to i64, !dbg !10682
  %arrayidx17 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %32, i64 %idxprom16, !dbg !10682
  %timenow18 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx17, i32 0, i32 3, !dbg !10684
  store float %31, float* %timenow18, align 4, !dbg !10685
  %34 = load i32, i32* %left, align 4, !dbg !10686
  %35 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10687
  %36 = load i32, i32* %i, align 4, !dbg !10688
  %idxprom19 = sext i32 %36 to i64, !dbg !10687
  %arrayidx20 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %35, i64 %idxprom19, !dbg !10687
  %ilast = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx20, i32 0, i32 5, !dbg !10689
  store i32 %34, i32* %ilast, align 4, !dbg !10690
  %37 = load i32, i32* %left, align 4, !dbg !10691
  %38 = load i32, i32* %dec, align 4, !dbg !10692
  %sub = sub nsw i32 %37, %38, !dbg !10693
  store i32 %sub, i32* %left, align 4, !dbg !10694
  %39 = load i32, i32* %left, align 4, !dbg !10695
  %cmp21 = icmp sgt i32 %39, 0, !dbg !10697
  br i1 %cmp21, label %if.then, label %if.else, !dbg !10698

if.then:                                          ; preds = %for.body
  %40 = load i32, i32* %left, align 4, !dbg !10699
  %41 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10701
  %42 = load i32, i32* %i, align 4, !dbg !10702
  %idxprom23 = sext i32 %42 to i64, !dbg !10701
  %arrayidx24 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %41, i64 %idxprom23, !dbg !10701
  %ifirst = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx24, i32 0, i32 4, !dbg !10703
  store i32 %40, i32* %ifirst, align 8, !dbg !10704
  br label %if.end, !dbg !10705

if.else:                                          ; preds = %for.body
  %43 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10706
  %44 = load i32, i32* %i, align 4, !dbg !10707
  %idxprom25 = sext i32 %44 to i64, !dbg !10706
  %arrayidx26 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %43, i64 %idxprom25, !dbg !10706
  %ifirst27 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx26, i32 0, i32 4, !dbg !10708
  store i32 0, i32* %ifirst27, align 8, !dbg !10709
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %45 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !10710
  %46 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10711
  %47 = load i32, i32* %i, align 4, !dbg !10712
  %idxprom28 = sext i32 %47 to i64, !dbg !10711
  %arrayidx29 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %46, i64 %idxprom28, !dbg !10711
  %do_effector30 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx29, i32 0, i32 6, !dbg !10713
  store %struct.ListBase* %45, %struct.ListBase** %do_effector30, align 8, !dbg !10714
  %48 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10715
  %49 = load i32, i32* %i, align 4, !dbg !10716
  %idxprom31 = sext i32 %49 to i64, !dbg !10715
  %arrayidx32 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %48, i64 %idxprom31, !dbg !10715
  %do_deflector = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx32, i32 0, i32 7, !dbg !10717
  store i32 0, i32* %do_deflector, align 8, !dbg !10718
  %50 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10719
  %51 = load i32, i32* %i, align 4, !dbg !10720
  %idxprom33 = sext i32 %51 to i64, !dbg !10719
  %arrayidx34 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %50, i64 %idxprom33, !dbg !10719
  %fieldfactor = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx34, i32 0, i32 8, !dbg !10721
  store float 0.000000e+00, float* %fieldfactor, align 4, !dbg !10722
  %52 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10723
  %53 = load i32, i32* %i, align 4, !dbg !10724
  %idxprom35 = sext i32 %53 to i64, !dbg !10723
  %arrayidx36 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %52, i64 %idxprom35, !dbg !10723
  %windfactor = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx36, i32 0, i32 9, !dbg !10725
  store float 0.000000e+00, float* %windfactor, align 8, !dbg !10726
  %54 = load i32, i32* %i, align 4, !dbg !10727
  %55 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10728
  %56 = load i32, i32* %i, align 4, !dbg !10729
  %idxprom37 = sext i32 %56 to i64, !dbg !10728
  %arrayidx38 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %55, i64 %idxprom37, !dbg !10728
  %nr = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx38, i32 0, i32 10, !dbg !10730
  store i32 %54, i32* %nr, align 4, !dbg !10731
  %57 = load i32, i32* %totthread, align 4, !dbg !10732
  %58 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10733
  %59 = load i32, i32* %i, align 4, !dbg !10734
  %idxprom39 = sext i32 %59 to i64, !dbg !10733
  %arrayidx40 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %58, i64 %idxprom39, !dbg !10733
  %tot = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx40, i32 0, i32 11, !dbg !10735
  store i32 %57, i32* %tot, align 8, !dbg !10736
  br label %for.inc, !dbg !10737

for.inc:                                          ; preds = %if.end
  %60 = load i32, i32* %i, align 4, !dbg !10738
  %inc = add nsw i32 %60, 1, !dbg !10738
  store i32 %inc, i32* %i, align 4, !dbg !10738
  br label %for.cond, !dbg !10739, !llvm.loop !10740

for.end:                                          ; preds = %for.cond
  %61 = load i32, i32* %totthread, align 4, !dbg !10742
  %cmp41 = icmp sgt i32 %61, 1, !dbg !10744
  br i1 %cmp41, label %if.then43, label %if.else53, !dbg !10745

if.then43:                                        ; preds = %for.end
  %62 = load i32, i32* %totthread, align 4, !dbg !10746
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @exec_scan_for_ext_spring_forces, i32 %62), !dbg !10748
  store i32 0, i32* %i, align 4, !dbg !10749
  br label %for.cond44, !dbg !10751

for.cond44:                                       ; preds = %for.inc50, %if.then43
  %63 = load i32, i32* %i, align 4, !dbg !10752
  %64 = load i32, i32* %totthread, align 4, !dbg !10754
  %cmp45 = icmp slt i32 %63, %64, !dbg !10755
  br i1 %cmp45, label %for.body47, label %for.end52, !dbg !10756

for.body47:                                       ; preds = %for.cond44
  %65 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10757
  %66 = load i32, i32* %i, align 4, !dbg !10758
  %idxprom48 = sext i32 %66 to i64, !dbg !10757
  %arrayidx49 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %65, i64 %idxprom48, !dbg !10757
  %67 = bitcast %struct.SB_thread_context* %arrayidx49 to i8*, !dbg !10759
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %67), !dbg !10760
  br label %for.inc50, !dbg !10760

for.inc50:                                        ; preds = %for.body47
  %68 = load i32, i32* %i, align 4, !dbg !10761
  %inc51 = add nsw i32 %68, 1, !dbg !10761
  store i32 %inc51, i32* %i, align 4, !dbg !10761
  br label %for.cond44, !dbg !10762, !llvm.loop !10763

for.end52:                                        ; preds = %for.cond44
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !10765
  br label %if.end56, !dbg !10766

if.else53:                                        ; preds = %for.end
  %69 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10767
  %arrayidx54 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %69, i64 0, !dbg !10767
  %70 = bitcast %struct.SB_thread_context* %arrayidx54 to i8*, !dbg !10768
  %call55 = call i8* @exec_scan_for_ext_spring_forces(i8* %70), !dbg !10769
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %for.end52
  %71 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10770
  %72 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10771
  %73 = bitcast %struct.SB_thread_context* %72 to i8*, !dbg !10771
  call void %71(i8* %73), !dbg !10770
  call void @pdEndEffectors(%struct.ListBase** %do_effector), !dbg !10772
  ret void, !dbg !10773
}

; Function Attrs: noinline nounwind uwtable
define internal void @sb_cf_threads_run(%struct.Scene* %scene, %struct.Object* %ob, float %forcetime, float %timenow, i32 %totpoint, i32* ()* %UNUSED_ptr_to_break_func, %struct.ListBase* %do_effector, i32 %do_deflector, float %fieldfactor, float %windfactor) #0 !dbg !10774 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %forcetime.addr = alloca float, align 4
  %timenow.addr = alloca float, align 4
  %totpoint.addr = alloca i32, align 4
  %UNUSED_ptr_to_break_func.addr = alloca i32* ()*, align 8
  %do_effector.addr = alloca %struct.ListBase*, align 8
  %do_deflector.addr = alloca i32, align 4
  %fieldfactor.addr = alloca float, align 4
  %windfactor.addr = alloca float, align 4
  %threads = alloca %struct.ListBase, align 8
  %sb_threads = alloca %struct.SB_thread_context*, align 8
  %i = alloca i32, align 4
  %totthread = alloca i32, align 4
  %left = alloca i32, align 4
  %dec = alloca i32, align 4
  %lowpoints = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10777, metadata !DIExpression()), !dbg !10778
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store float %forcetime, float* %forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %forcetime.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  store i32 %totpoint, i32* %totpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoint.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  store i32* ()* %UNUSED_ptr_to_break_func, i32* ()** %UNUSED_ptr_to_break_func.addr, align 8
  call void @llvm.dbg.declare(metadata i32* ()** %UNUSED_ptr_to_break_func.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  store %struct.ListBase* %do_effector, %struct.ListBase** %do_effector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  store i32 %do_deflector, i32* %do_deflector.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_deflector.addr, metadata !10791, metadata !DIExpression()), !dbg !10792
  store float %fieldfactor, float* %fieldfactor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fieldfactor.addr, metadata !10793, metadata !DIExpression()), !dbg !10794
  store float %windfactor, float* %windfactor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %windfactor.addr, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata %struct.SB_thread_context** %sb_threads, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i32* %left, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %dec, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i32* %lowpoints, metadata !10809, metadata !DIExpression()), !dbg !10810
  store i32 100, i32* %lowpoints, align 4, !dbg !10810
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10811
  %call = call i32 @BKE_scene_num_threads(%struct.Scene* %0), !dbg !10812
  store i32 %call, i32* %totthread, align 4, !dbg !10813
  br label %while.cond, !dbg !10814

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %totpoint.addr, align 4, !dbg !10815
  %2 = load i32, i32* %totthread, align 4, !dbg !10816
  %div = sdiv i32 %1, %2, !dbg !10817
  %3 = load i32, i32* %lowpoints, align 4, !dbg !10818
  %cmp = icmp slt i32 %div, %3, !dbg !10819
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10820

land.rhs:                                         ; preds = %while.cond
  %4 = load i32, i32* %totthread, align 4, !dbg !10821
  %cmp1 = icmp sgt i32 %4, 1, !dbg !10822
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ], !dbg !10823
  br i1 %5, label %while.body, label %while.end, !dbg !10814

while.body:                                       ; preds = %land.end
  %6 = load i32, i32* %totthread, align 4, !dbg !10824
  %dec2 = add nsw i32 %6, -1, !dbg !10824
  store i32 %dec2, i32* %totthread, align 4, !dbg !10824
  br label %while.cond, !dbg !10814, !llvm.loop !10826

while.end:                                        ; preds = %land.end
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10828
  %8 = load i32, i32* %totthread, align 4, !dbg !10829
  %conv = sext i32 %8 to i64, !dbg !10829
  %mul = mul i64 64, %conv, !dbg !10830
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0)), !dbg !10828
  %9 = bitcast i8* %call3 to %struct.SB_thread_context*, !dbg !10828
  store %struct.SB_thread_context* %9, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10831
  %10 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10832
  %11 = bitcast %struct.SB_thread_context* %10 to i8*, !dbg !10833
  %12 = load i32, i32* %totthread, align 4, !dbg !10834
  %conv4 = sext i32 %12 to i64, !dbg !10834
  %mul5 = mul i64 64, %conv4, !dbg !10835
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %mul5, i1 false), !dbg !10833
  %13 = load i32, i32* %totpoint.addr, align 4, !dbg !10836
  store i32 %13, i32* %left, align 4, !dbg !10837
  %14 = load i32, i32* %totpoint.addr, align 4, !dbg !10838
  %15 = load i32, i32* %totthread, align 4, !dbg !10839
  %div6 = sdiv i32 %14, %15, !dbg !10840
  %add = add nsw i32 %div6, 1, !dbg !10841
  store i32 %add, i32* %dec, align 4, !dbg !10842
  store i32 0, i32* %i, align 4, !dbg !10843
  br label %for.cond, !dbg !10845

for.cond:                                         ; preds = %for.inc, %while.end
  %16 = load i32, i32* %i, align 4, !dbg !10846
  %17 = load i32, i32* %totthread, align 4, !dbg !10848
  %cmp7 = icmp slt i32 %16, %17, !dbg !10849
  br i1 %cmp7, label %for.body, label %for.end, !dbg !10850

for.body:                                         ; preds = %for.cond
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10851
  %19 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10853
  %20 = load i32, i32* %i, align 4, !dbg !10854
  %idxprom = sext i32 %20 to i64, !dbg !10853
  %arrayidx = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %19, i64 %idxprom, !dbg !10853
  %scene9 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx, i32 0, i32 0, !dbg !10855
  store %struct.Scene* %18, %struct.Scene** %scene9, align 8, !dbg !10856
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10857
  %22 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10858
  %23 = load i32, i32* %i, align 4, !dbg !10859
  %idxprom10 = sext i32 %23 to i64, !dbg !10858
  %arrayidx11 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %22, i64 %idxprom10, !dbg !10858
  %ob12 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx11, i32 0, i32 1, !dbg !10860
  store %struct.Object* %21, %struct.Object** %ob12, align 8, !dbg !10861
  %24 = load float, float* %forcetime.addr, align 4, !dbg !10862
  %25 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10863
  %26 = load i32, i32* %i, align 4, !dbg !10864
  %idxprom13 = sext i32 %26 to i64, !dbg !10863
  %arrayidx14 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %25, i64 %idxprom13, !dbg !10863
  %forcetime15 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx14, i32 0, i32 2, !dbg !10865
  store float %24, float* %forcetime15, align 8, !dbg !10866
  %27 = load float, float* %timenow.addr, align 4, !dbg !10867
  %28 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10868
  %29 = load i32, i32* %i, align 4, !dbg !10869
  %idxprom16 = sext i32 %29 to i64, !dbg !10868
  %arrayidx17 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %28, i64 %idxprom16, !dbg !10868
  %timenow18 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx17, i32 0, i32 3, !dbg !10870
  store float %27, float* %timenow18, align 4, !dbg !10871
  %30 = load i32, i32* %left, align 4, !dbg !10872
  %31 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10873
  %32 = load i32, i32* %i, align 4, !dbg !10874
  %idxprom19 = sext i32 %32 to i64, !dbg !10873
  %arrayidx20 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %31, i64 %idxprom19, !dbg !10873
  %ilast = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx20, i32 0, i32 5, !dbg !10875
  store i32 %30, i32* %ilast, align 4, !dbg !10876
  %33 = load i32, i32* %left, align 4, !dbg !10877
  %34 = load i32, i32* %dec, align 4, !dbg !10878
  %sub = sub nsw i32 %33, %34, !dbg !10879
  store i32 %sub, i32* %left, align 4, !dbg !10880
  %35 = load i32, i32* %left, align 4, !dbg !10881
  %cmp21 = icmp sgt i32 %35, 0, !dbg !10883
  br i1 %cmp21, label %if.then, label %if.else, !dbg !10884

if.then:                                          ; preds = %for.body
  %36 = load i32, i32* %left, align 4, !dbg !10885
  %37 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10887
  %38 = load i32, i32* %i, align 4, !dbg !10888
  %idxprom23 = sext i32 %38 to i64, !dbg !10887
  %arrayidx24 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %37, i64 %idxprom23, !dbg !10887
  %ifirst = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx24, i32 0, i32 4, !dbg !10889
  store i32 %36, i32* %ifirst, align 8, !dbg !10890
  br label %if.end, !dbg !10891

if.else:                                          ; preds = %for.body
  %39 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10892
  %40 = load i32, i32* %i, align 4, !dbg !10893
  %idxprom25 = sext i32 %40 to i64, !dbg !10892
  %arrayidx26 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %39, i64 %idxprom25, !dbg !10892
  %ifirst27 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx26, i32 0, i32 4, !dbg !10894
  store i32 0, i32* %ifirst27, align 8, !dbg !10895
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %41 = load %struct.ListBase*, %struct.ListBase** %do_effector.addr, align 8, !dbg !10896
  %42 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10897
  %43 = load i32, i32* %i, align 4, !dbg !10898
  %idxprom28 = sext i32 %43 to i64, !dbg !10897
  %arrayidx29 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %42, i64 %idxprom28, !dbg !10897
  %do_effector30 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx29, i32 0, i32 6, !dbg !10899
  store %struct.ListBase* %41, %struct.ListBase** %do_effector30, align 8, !dbg !10900
  %44 = load i32, i32* %do_deflector.addr, align 4, !dbg !10901
  %45 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10902
  %46 = load i32, i32* %i, align 4, !dbg !10903
  %idxprom31 = sext i32 %46 to i64, !dbg !10902
  %arrayidx32 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %45, i64 %idxprom31, !dbg !10902
  %do_deflector33 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx32, i32 0, i32 7, !dbg !10904
  store i32 %44, i32* %do_deflector33, align 8, !dbg !10905
  %47 = load float, float* %fieldfactor.addr, align 4, !dbg !10906
  %48 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10907
  %49 = load i32, i32* %i, align 4, !dbg !10908
  %idxprom34 = sext i32 %49 to i64, !dbg !10907
  %arrayidx35 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %48, i64 %idxprom34, !dbg !10907
  %fieldfactor36 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx35, i32 0, i32 8, !dbg !10909
  store float %47, float* %fieldfactor36, align 4, !dbg !10910
  %50 = load float, float* %windfactor.addr, align 4, !dbg !10911
  %51 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10912
  %52 = load i32, i32* %i, align 4, !dbg !10913
  %idxprom37 = sext i32 %52 to i64, !dbg !10912
  %arrayidx38 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %51, i64 %idxprom37, !dbg !10912
  %windfactor39 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx38, i32 0, i32 9, !dbg !10914
  store float %50, float* %windfactor39, align 8, !dbg !10915
  %53 = load i32, i32* %i, align 4, !dbg !10916
  %54 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10917
  %55 = load i32, i32* %i, align 4, !dbg !10918
  %idxprom40 = sext i32 %55 to i64, !dbg !10917
  %arrayidx41 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %54, i64 %idxprom40, !dbg !10917
  %nr = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx41, i32 0, i32 10, !dbg !10919
  store i32 %53, i32* %nr, align 4, !dbg !10920
  %56 = load i32, i32* %totthread, align 4, !dbg !10921
  %57 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10922
  %58 = load i32, i32* %i, align 4, !dbg !10923
  %idxprom42 = sext i32 %58 to i64, !dbg !10922
  %arrayidx43 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %57, i64 %idxprom42, !dbg !10922
  %tot = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %arrayidx43, i32 0, i32 11, !dbg !10924
  store i32 %56, i32* %tot, align 8, !dbg !10925
  br label %for.inc, !dbg !10926

for.inc:                                          ; preds = %if.end
  %59 = load i32, i32* %i, align 4, !dbg !10927
  %inc = add nsw i32 %59, 1, !dbg !10927
  store i32 %inc, i32* %i, align 4, !dbg !10927
  br label %for.cond, !dbg !10928, !llvm.loop !10929

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %totthread, align 4, !dbg !10931
  %cmp44 = icmp sgt i32 %60, 1, !dbg !10933
  br i1 %cmp44, label %if.then46, label %if.else56, !dbg !10934

if.then46:                                        ; preds = %for.end
  %61 = load i32, i32* %totthread, align 4, !dbg !10935
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @exec_softbody_calc_forces, i32 %61), !dbg !10937
  store i32 0, i32* %i, align 4, !dbg !10938
  br label %for.cond47, !dbg !10940

for.cond47:                                       ; preds = %for.inc53, %if.then46
  %62 = load i32, i32* %i, align 4, !dbg !10941
  %63 = load i32, i32* %totthread, align 4, !dbg !10943
  %cmp48 = icmp slt i32 %62, %63, !dbg !10944
  br i1 %cmp48, label %for.body50, label %for.end55, !dbg !10945

for.body50:                                       ; preds = %for.cond47
  %64 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10946
  %65 = load i32, i32* %i, align 4, !dbg !10947
  %idxprom51 = sext i32 %65 to i64, !dbg !10946
  %arrayidx52 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %64, i64 %idxprom51, !dbg !10946
  %66 = bitcast %struct.SB_thread_context* %arrayidx52 to i8*, !dbg !10948
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %66), !dbg !10949
  br label %for.inc53, !dbg !10949

for.inc53:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4, !dbg !10950
  %inc54 = add nsw i32 %67, 1, !dbg !10950
  store i32 %inc54, i32* %i, align 4, !dbg !10950
  br label %for.cond47, !dbg !10951, !llvm.loop !10952

for.end55:                                        ; preds = %for.cond47
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !10954
  br label %if.end59, !dbg !10955

if.else56:                                        ; preds = %for.end
  %68 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10956
  %arrayidx57 = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %68, i64 0, !dbg !10956
  %69 = bitcast %struct.SB_thread_context* %arrayidx57 to i8*, !dbg !10957
  %call58 = call i8* @exec_softbody_calc_forces(i8* %69), !dbg !10958
  br label %if.end59

if.end59:                                         ; preds = %if.else56, %for.end55
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10959
  %71 = load %struct.SB_thread_context*, %struct.SB_thread_context** %sb_threads, align 8, !dbg !10960
  %72 = bitcast %struct.SB_thread_context* %71 to i8*, !dbg !10960
  call void %70(i8* %72), !dbg !10959
  ret void, !dbg !10961
}

declare dso_local i32 @BKE_scene_num_threads(%struct.Scene*) #2

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @exec_scan_for_ext_spring_forces(i8* %data) #0 !dbg !10962 {
entry:
  %data.addr = alloca i8*, align 8
  %pctx = alloca %struct.SB_thread_context*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10965, metadata !DIExpression()), !dbg !10966
  call void @llvm.dbg.declare(metadata %struct.SB_thread_context** %pctx, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10969
  %1 = bitcast i8* %0 to %struct.SB_thread_context*, !dbg !10970
  store %struct.SB_thread_context* %1, %struct.SB_thread_context** %pctx, align 8, !dbg !10968
  %2 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10971
  %scene = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %2, i32 0, i32 0, !dbg !10972
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10972
  %4 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10973
  %ob = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %4, i32 0, i32 1, !dbg !10974
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10974
  %6 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10975
  %timenow = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %6, i32 0, i32 3, !dbg !10976
  %7 = load float, float* %timenow, align 4, !dbg !10976
  %8 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10977
  %ifirst = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %8, i32 0, i32 4, !dbg !10978
  %9 = load i32, i32* %ifirst, align 8, !dbg !10978
  %10 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10979
  %ilast = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %10, i32 0, i32 5, !dbg !10980
  %11 = load i32, i32* %ilast, align 4, !dbg !10980
  %12 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !10981
  %do_effector = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %12, i32 0, i32 6, !dbg !10982
  %13 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !10982
  call void @_scan_for_ext_spring_forces(%struct.Scene* %3, %struct.Object* %5, float %7, i32 %9, i32 %11, %struct.ListBase* %13), !dbg !10983
  ret i8* null, !dbg !10984
}

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_end_threads(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_scan_for_ext_spring_forces(%struct.Scene* %scene, %struct.Object* %ob, float %timenow, i32 %ifirst, i32 %ilast, %struct.ListBase* %do_effector) #0 !dbg !10985 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %timenow.addr = alloca float, align 4
  %ifirst.addr = alloca i32, align 4
  %ilast.addr = alloca i32, align 4
  %do_effector.addr = alloca %struct.ListBase*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  %a = alloca i32, align 4
  %damp = alloca float, align 4
  %feedback = alloca [3 x float], align 4
  %bs = alloca %struct.BodySpring*, align 8
  %vel = alloca [3 x float], align 4
  %sp = alloca [3 x float], align 4
  %pr = alloca [3 x float], align 4
  %force = alloca [3 x float], align 4
  %f = alloca float, align 4
  %windfactor = alloca float, align 4
  %epoint = alloca %struct.EffectedPoint, align 8
  %speed = alloca [3 x float], align 4
  %pos41 = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i32 %ifirst, i32* %ifirst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifirst.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  store i32 %ilast, i32* %ilast.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ilast.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  store %struct.ListBase* %do_effector, %struct.ListBase** %do_effector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector.addr, metadata !10998, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !11000, metadata !DIExpression()), !dbg !11001
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11002
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !11003
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !11003
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !11001
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata float* %damp, metadata !11006, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.declare(metadata [3 x float]* %feedback, metadata !11008, metadata !DIExpression()), !dbg !11009
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11010
  %tobool = icmp ne %struct.SoftBody* %2, null, !dbg !11010
  br i1 %tobool, label %land.lhs.true, label %if.end137, !dbg !11012

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11013
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 1, !dbg !11014
  %4 = load i32, i32* %totspring, align 4, !dbg !11014
  %tobool1 = icmp ne i32 %4, 0, !dbg !11013
  br i1 %tobool1, label %if.then, label %if.end137, !dbg !11015

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* %ifirst.addr, align 4, !dbg !11016
  store i32 %5, i32* %a, align 4, !dbg !11019
  br label %for.cond, !dbg !11020

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %a, align 4, !dbg !11021
  %7 = load i32, i32* %ilast.addr, align 4, !dbg !11023
  %cmp = icmp slt i32 %6, %7, !dbg !11024
  br i1 %cmp, label %for.body, label %for.end, !dbg !11025

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !11026, metadata !DIExpression()), !dbg !11028
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11029
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 3, !dbg !11030
  %9 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !11030
  %10 = load i32, i32* %a, align 4, !dbg !11031
  %idxprom = sext i32 %10 to i64, !dbg !11029
  %arrayidx = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %9, i64 %idxprom, !dbg !11029
  store %struct.BodySpring* %arrayidx, %struct.BodySpring** %bs, align 8, !dbg !11028
  %11 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11032
  %ext_force = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %11, i32 0, i32 5, !dbg !11033
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %ext_force, i64 0, i64 2, !dbg !11032
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !11034
  %12 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11035
  %ext_force3 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %12, i32 0, i32 5, !dbg !11036
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %ext_force3, i64 0, i64 1, !dbg !11035
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !11037
  %13 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11038
  %ext_force5 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %13, i32 0, i32 5, !dbg !11039
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %ext_force5, i64 0, i64 0, !dbg !11038
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !11040
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 2, !dbg !11041
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !11042
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 1, !dbg !11043
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !11044
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !11045
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !11046
  %14 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11047
  %flag = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %14, i32 0, i32 7, !dbg !11048
  %15 = load i16, i16* %flag, align 4, !dbg !11049
  %conv = sext i16 %15 to i32, !dbg !11049
  %and = and i32 %conv, -2, !dbg !11049
  %conv10 = trunc i32 %and to i16, !dbg !11049
  store i16 %conv10, i16* %flag, align 4, !dbg !11049
  %16 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11050
  %springtype = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %16, i32 0, i32 6, !dbg !11052
  %17 = load i32, i32* %springtype, align 4, !dbg !11052
  %cmp11 = icmp eq i32 %17, 1, !dbg !11053
  br i1 %cmp11, label %if.then13, label %if.end136, !dbg !11054

if.then13:                                        ; preds = %for.body
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11055
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 104, !dbg !11058
  %19 = load i16, i16* %softflag, align 2, !dbg !11058
  %conv14 = sext i16 %19 to i32, !dbg !11055
  %and15 = and i32 %conv14, 2048, !dbg !11059
  %tobool16 = icmp ne i32 %and15, 0, !dbg !11059
  br i1 %tobool16, label %if.then17, label %if.end36, !dbg !11060

if.then17:                                        ; preds = %if.then13
  %20 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11061
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %20, i32 0, i32 2, !dbg !11064
  %21 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !11064
  %22 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11065
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %22, i32 0, i32 0, !dbg !11066
  %23 = load i32, i32* %v1, align 4, !dbg !11066
  %idxprom18 = sext i32 %23 to i64, !dbg !11061
  %arrayidx19 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %21, i64 %idxprom18, !dbg !11061
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx19, i32 0, i32 3, !dbg !11067
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !11061
  %24 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11068
  %bpoint20 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %24, i32 0, i32 2, !dbg !11069
  %25 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint20, align 8, !dbg !11069
  %26 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11070
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %26, i32 0, i32 1, !dbg !11071
  %27 = load i32, i32* %v2, align 4, !dbg !11071
  %idxprom21 = sext i32 %27 to i64, !dbg !11068
  %arrayidx22 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %25, i64 %idxprom21, !dbg !11068
  %pos23 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx22, i32 0, i32 3, !dbg !11072
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %pos23, i64 0, i64 0, !dbg !11068
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !11073
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11074
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 52, !dbg !11075
  %29 = load i32, i32* %lay, align 8, !dbg !11075
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11076
  %31 = load float, float* %timenow.addr, align 4, !dbg !11077
  %call = call i32 @sb_detect_edge_collisionCached(float* %arraydecay, float* %arraydecay24, float* %damp, float* %arraydecay25, i32 %29, %struct.Object* %30, float %31), !dbg !11078
  %tobool26 = icmp ne i32 %call, 0, !dbg !11078
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !11079

if.then27:                                        ; preds = %if.then17
  %32 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11080
  %ext_force28 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %32, i32 0, i32 5, !dbg !11082
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %ext_force28, i64 0, i64 0, !dbg !11080
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %feedback, i64 0, i64 0, !dbg !11083
  call void @add_v3_v3(float* %arraydecay29, float* %arraydecay30), !dbg !11084
  %33 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11085
  %flag31 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %33, i32 0, i32 7, !dbg !11086
  %34 = load i16, i16* %flag31, align 4, !dbg !11087
  %conv32 = sext i16 %34 to i32, !dbg !11087
  %or = or i32 %conv32, 1, !dbg !11087
  %conv33 = trunc i32 %or to i16, !dbg !11087
  store i16 %conv33, i16* %flag31, align 4, !dbg !11087
  %35 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11088
  %choke = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 40, !dbg !11089
  %36 = load i16, i16* %choke, align 8, !dbg !11089
  %conv34 = sext i16 %36 to i32, !dbg !11088
  %conv35 = sitofp i32 %conv34 to float, !dbg !11088
  %mul = fmul float %conv35, 0x3F847AE140000000, !dbg !11090
  %37 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11091
  %cf = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %37, i32 0, i32 3, !dbg !11092
  store float %mul, float* %cf, align 4, !dbg !11093
  br label %if.end, !dbg !11094

if.end:                                           ; preds = %if.then27, %if.then17
  br label %if.end36, !dbg !11095

if.end36:                                         ; preds = %if.end, %if.then13
  %38 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11096
  %aeroedge = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %38, i32 0, i32 37, !dbg !11098
  %39 = load i16, i16* %aeroedge, align 2, !dbg !11098
  %tobool37 = icmp ne i16 %39, 0, !dbg !11096
  br i1 %tobool37, label %if.then38, label %if.end135, !dbg !11099

if.then38:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !11100, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.declare(metadata [3 x float]* %sp, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata [3 x float]* %pr, metadata !11105, metadata !DIExpression()), !dbg !11106
  call void @llvm.dbg.declare(metadata [3 x float]* %force, metadata !11107, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.declare(metadata float* %f, metadata !11109, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.declare(metadata float* %windfactor, metadata !11111, metadata !DIExpression()), !dbg !11112
  store float 2.500000e-01, float* %windfactor, align 4, !dbg !11112
  %40 = load %struct.ListBase*, %struct.ListBase** %do_effector.addr, align 8, !dbg !11113
  %tobool39 = icmp ne %struct.ListBase* %40, null, !dbg !11113
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !11115

if.then40:                                        ; preds = %if.then38
  call void @llvm.dbg.declare(metadata %struct.EffectedPoint* %epoint, metadata !11116, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.declare(metadata [3 x float]* %speed, metadata !11119, metadata !DIExpression()), !dbg !11120
  %41 = bitcast [3 x float]* %speed to i8*, !dbg !11120
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 12, i1 false), !dbg !11120
  call void @llvm.dbg.declare(metadata [3 x float]* %pos41, metadata !11121, metadata !DIExpression()), !dbg !11122
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %pos41, i64 0, i64 0, !dbg !11123
  %42 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11124
  %bpoint43 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %42, i32 0, i32 2, !dbg !11125
  %43 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint43, align 8, !dbg !11125
  %44 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11126
  %v144 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %44, i32 0, i32 0, !dbg !11127
  %45 = load i32, i32* %v144, align 4, !dbg !11127
  %idxprom45 = sext i32 %45 to i64, !dbg !11124
  %arrayidx46 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %43, i64 %idxprom45, !dbg !11124
  %pos47 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx46, i32 0, i32 3, !dbg !11128
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %pos47, i64 0, i64 0, !dbg !11124
  %46 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11129
  %bpoint49 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %46, i32 0, i32 2, !dbg !11130
  %47 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint49, align 8, !dbg !11130
  %48 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11131
  %v250 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %48, i32 0, i32 1, !dbg !11132
  %49 = load i32, i32* %v250, align 4, !dbg !11132
  %idxprom51 = sext i32 %49 to i64, !dbg !11129
  %arrayidx52 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %47, i64 %idxprom51, !dbg !11129
  %pos53 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx52, i32 0, i32 3, !dbg !11133
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %pos53, i64 0, i64 0, !dbg !11129
  call void @mid_v3_v3v3(float* %arraydecay42, float* %arraydecay48, float* %arraydecay54), !dbg !11134
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11135
  %50 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11136
  %bpoint56 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %50, i32 0, i32 2, !dbg !11137
  %51 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint56, align 8, !dbg !11137
  %52 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11138
  %v157 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %52, i32 0, i32 0, !dbg !11139
  %53 = load i32, i32* %v157, align 4, !dbg !11139
  %idxprom58 = sext i32 %53 to i64, !dbg !11136
  %arrayidx59 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %51, i64 %idxprom58, !dbg !11136
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx59, i32 0, i32 4, !dbg !11140
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11136
  %54 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11141
  %bpoint61 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %54, i32 0, i32 2, !dbg !11142
  %55 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint61, align 8, !dbg !11142
  %56 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11143
  %v262 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %56, i32 0, i32 1, !dbg !11144
  %57 = load i32, i32* %v262, align 4, !dbg !11144
  %idxprom63 = sext i32 %57 to i64, !dbg !11141
  %arrayidx64 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %55, i64 %idxprom63, !dbg !11141
  %vec65 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx64, i32 0, i32 4, !dbg !11145
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %vec65, i64 0, i64 0, !dbg !11141
  call void @mid_v3_v3v3(float* %arraydecay55, float* %arraydecay60, float* %arraydecay66), !dbg !11146
  %58 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11147
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %pos41, i64 0, i64 0, !dbg !11148
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11149
  call void @pd_point_from_soft(%struct.Scene* %58, float* %arraydecay67, float* %arraydecay68, i32 -1, %struct.EffectedPoint* %epoint), !dbg !11150
  %59 = load %struct.ListBase*, %struct.ListBase** %do_effector.addr, align 8, !dbg !11151
  %60 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11152
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %60, i32 0, i32 49, !dbg !11153
  %61 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !11153
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !11154
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !11155
  call void @pdDoEffectors(%struct.ListBase* %59, %struct.ListBase* null, %struct.EffectorWeights* %61, %struct.EffectedPoint* %epoint, float* %arraydecay69, float* %arraydecay70), !dbg !11156
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !11157
  %62 = load float, float* %windfactor, align 4, !dbg !11158
  call void @mul_v3_fl(float* %arraydecay71, float %62), !dbg !11159
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11160
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !11161
  call void @add_v3_v3(float* %arraydecay72, float* %arraydecay73), !dbg !11162
  br label %if.end87, !dbg !11163

if.else:                                          ; preds = %if.then38
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11164
  %63 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11166
  %bpoint75 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %63, i32 0, i32 2, !dbg !11167
  %64 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint75, align 8, !dbg !11167
  %65 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11168
  %v176 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %65, i32 0, i32 0, !dbg !11169
  %66 = load i32, i32* %v176, align 4, !dbg !11169
  %idxprom77 = sext i32 %66 to i64, !dbg !11166
  %arrayidx78 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %64, i64 %idxprom77, !dbg !11166
  %vec79 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx78, i32 0, i32 4, !dbg !11170
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %vec79, i64 0, i64 0, !dbg !11166
  %67 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11171
  %bpoint81 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %67, i32 0, i32 2, !dbg !11172
  %68 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint81, align 8, !dbg !11172
  %69 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11173
  %v282 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %69, i32 0, i32 1, !dbg !11174
  %70 = load i32, i32* %v282, align 4, !dbg !11174
  %idxprom83 = sext i32 %70 to i64, !dbg !11171
  %arrayidx84 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %68, i64 %idxprom83, !dbg !11171
  %vec85 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx84, i32 0, i32 4, !dbg !11175
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %vec85, i64 0, i64 0, !dbg !11171
  call void @add_v3_v3v3(float* %arraydecay74, float* %arraydecay80, float* %arraydecay86), !dbg !11176
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then40
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11177
  %call89 = call float @normalize_v3(float* %arraydecay88), !dbg !11178
  store float %call89, float* %f, align 4, !dbg !11179
  %71 = load float, float* %f, align 4, !dbg !11180
  %mul90 = fmul float 0xBF1A36E2E0000000, %71, !dbg !11181
  %72 = load float, float* %f, align 4, !dbg !11182
  %mul91 = fmul float %mul90, %72, !dbg !11183
  %73 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11184
  %aeroedge92 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %73, i32 0, i32 37, !dbg !11185
  %74 = load i16, i16* %aeroedge92, align 2, !dbg !11185
  %conv93 = sext i16 %74 to i32, !dbg !11184
  %conv94 = sitofp i32 %conv93 to float, !dbg !11184
  %mul95 = fmul float %mul91, %conv94, !dbg !11186
  store float %mul95, float* %f, align 4, !dbg !11187
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %sp, i64 0, i64 0, !dbg !11188
  %75 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11189
  %bpoint97 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %75, i32 0, i32 2, !dbg !11190
  %76 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint97, align 8, !dbg !11190
  %77 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11191
  %v198 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %77, i32 0, i32 0, !dbg !11192
  %78 = load i32, i32* %v198, align 4, !dbg !11192
  %idxprom99 = sext i32 %78 to i64, !dbg !11189
  %arrayidx100 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %76, i64 %idxprom99, !dbg !11189
  %pos101 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx100, i32 0, i32 3, !dbg !11193
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %pos101, i64 0, i64 0, !dbg !11189
  %79 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11194
  %bpoint103 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %79, i32 0, i32 2, !dbg !11195
  %80 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint103, align 8, !dbg !11195
  %81 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11196
  %v2104 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %81, i32 0, i32 1, !dbg !11197
  %82 = load i32, i32* %v2104, align 4, !dbg !11197
  %idxprom105 = sext i32 %82 to i64, !dbg !11194
  %arrayidx106 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %80, i64 %idxprom105, !dbg !11194
  %pos107 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx106, i32 0, i32 3, !dbg !11198
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %pos107, i64 0, i64 0, !dbg !11194
  call void @sub_v3_v3v3(float* %arraydecay96, float* %arraydecay102, float* %arraydecay108), !dbg !11199
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %pr, i64 0, i64 0, !dbg !11200
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11201
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %sp, i64 0, i64 0, !dbg !11202
  call void @project_v3_v3v3(float* %arraydecay109, float* %arraydecay110, float* %arraydecay111), !dbg !11203
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11204
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %pr, i64 0, i64 0, !dbg !11205
  call void @sub_v3_v3(float* %arraydecay112, float* %arraydecay113), !dbg !11206
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11207
  %call115 = call float @normalize_v3(float* %arraydecay114), !dbg !11208
  %83 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11209
  %softflag116 = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 104, !dbg !11211
  %84 = load i16, i16* %softflag116, align 2, !dbg !11211
  %conv117 = sext i16 %84 to i32, !dbg !11209
  %and118 = and i32 %conv117, 16384, !dbg !11212
  %tobool119 = icmp ne i32 %and118, 0, !dbg !11212
  br i1 %tobool119, label %if.then120, label %if.else130, !dbg !11213

if.then120:                                       ; preds = %if.end87
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %sp, i64 0, i64 0, !dbg !11214
  %call122 = call float @normalize_v3(float* %arraydecay121), !dbg !11216
  %85 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11217
  %ext_force123 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %85, i32 0, i32 5, !dbg !11218
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %ext_force123, i64 0, i64 0, !dbg !11217
  %86 = load float, float* %f, align 4, !dbg !11219
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11220
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %sp, i64 0, i64 0, !dbg !11221
  %call127 = call float @dot_v3v3(float* %arraydecay125, float* %arraydecay126), !dbg !11222
  %87 = call float @llvm.fabs.f32(float %call127), !dbg !11223
  %sub = fsub float 1.000000e+00, %87, !dbg !11224
  %mul128 = fmul float %86, %sub, !dbg !11225
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11226
  call void @Vec3PlusStVec(float* %arraydecay124, float %mul128, float* %arraydecay129), !dbg !11227
  br label %if.end134, !dbg !11228

if.else130:                                       ; preds = %if.end87
  %88 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !11229
  %ext_force131 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %88, i32 0, i32 5, !dbg !11231
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %ext_force131, i64 0, i64 0, !dbg !11229
  %89 = load float, float* %f, align 4, !dbg !11232
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !11233
  call void @Vec3PlusStVec(float* %arraydecay132, float %89, float* %arraydecay133), !dbg !11234
  br label %if.end134

if.end134:                                        ; preds = %if.else130, %if.then120
  br label %if.end135, !dbg !11235

if.end135:                                        ; preds = %if.end134, %if.end36
  br label %if.end136, !dbg !11236

if.end136:                                        ; preds = %if.end135, %for.body
  br label %for.inc, !dbg !11237

for.inc:                                          ; preds = %if.end136
  %90 = load i32, i32* %a, align 4, !dbg !11238
  %inc = add nsw i32 %90, 1, !dbg !11238
  store i32 %inc, i32* %a, align 4, !dbg !11238
  br label %for.cond, !dbg !11239, !llvm.loop !11240

for.end:                                          ; preds = %for.cond
  br label %if.end137, !dbg !11242

if.end137:                                        ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !11243
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_detect_edge_collisionCached(float* %edge_v1, float* %edge_v2, float* %damp, float* %force, i32 %UNUSED_par_layer, %struct.Object* %vertexowner, float %time) #0 !dbg !11244 {
entry:
  %edge_v1.addr = alloca float*, align 8
  %edge_v2.addr = alloca float*, align 8
  %damp.addr = alloca float*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_par_layer.addr = alloca i32, align 4
  %vertexowner.addr = alloca %struct.Object*, align 8
  %time.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %hash = alloca %struct.GHash*, align 8
  %ihash = alloca %struct.GHashIterator*, align 8
  %nv1 = alloca [3 x float], align 4
  %nv2 = alloca [3 x float], align 4
  %nv3 = alloca [3 x float], align 4
  %nv4 = alloca [3 x float], align 4
  %edge1 = alloca [3 x float], align 4
  %edge2 = alloca [3 x float], align 4
  %d_nvect = alloca [3 x float], align 4
  %aabbmin = alloca [3 x float], align 4
  %aabbmax = alloca [3 x float], align 4
  %t = alloca float, align 4
  %el = alloca float, align 4
  %a = alloca i32, align 4
  %deflected = alloca i32, align 4
  %ccdm = alloca %struct.ccd_Mesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mprevvert = alloca %struct.MVert*, align 8
  %mima = alloca %struct.ccdf_minmax*, align 8
  %v1159 = alloca [3 x float], align 4
  %v2160 = alloca [3 x float], align 4
  %intrusiondepth = alloca float, align 4
  %i1 = alloca float, align 4
  %i2 = alloca float, align 4
  %v1195 = alloca [3 x float], align 4
  %v2196 = alloca [3 x float], align 4
  %intrusiondepth197 = alloca float, align 4
  %i1198 = alloca float, align 4
  %i2199 = alloca float, align 4
  store float* %edge_v1, float** %edge_v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %edge_v1.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store float* %edge_v2, float** %edge_v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %edge_v2.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  store float* %damp, float** %damp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %damp.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  store i32 %UNUSED_par_layer, i32* %UNUSED_par_layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_par_layer.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !11259, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11261, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash, metadata !11263, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ihash, metadata !11265, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.declare(metadata [3 x float]* %nv1, metadata !11267, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.declare(metadata [3 x float]* %nv2, metadata !11269, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.declare(metadata [3 x float]* %nv3, metadata !11271, metadata !DIExpression()), !dbg !11272
  call void @llvm.dbg.declare(metadata [3 x float]* %nv4, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.declare(metadata [3 x float]* %edge1, metadata !11275, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.declare(metadata [3 x float]* %edge2, metadata !11277, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.declare(metadata [3 x float]* %d_nvect, metadata !11279, metadata !DIExpression()), !dbg !11280
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmin, metadata !11281, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmax, metadata !11283, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.declare(metadata float* %t, metadata !11285, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.declare(metadata float* %el, metadata !11287, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11289, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !11291, metadata !DIExpression()), !dbg !11292
  store i32 0, i32* %deflected, align 4, !dbg !11292
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !11293
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !11294
  %0 = load float*, float** %edge_v1.addr, align 8, !dbg !11295
  call void @minmax_v3v3_v3(float* %arraydecay, float* %arraydecay1, float* %0), !dbg !11296
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !11297
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !11298
  %1 = load float*, float** %edge_v2.addr, align 8, !dbg !11299
  call void @minmax_v3v3_v3(float* %arraydecay2, float* %arraydecay3, float* %1), !dbg !11300
  %2 = load float*, float** %edge_v1.addr, align 8, !dbg !11301
  %3 = load float*, float** %edge_v2.addr, align 8, !dbg !11302
  %call = call float @len_v3v3(float* %2, float* %3), !dbg !11303
  store float %call, float* %el, align 4, !dbg !11304
  %4 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !11305
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 111, !dbg !11306
  %5 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !11306
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %5, i32 0, i32 44, !dbg !11307
  %6 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !11307
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %6, i32 0, i32 0, !dbg !11308
  %7 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !11308
  store %struct.GHash* %7, %struct.GHash** %hash, align 8, !dbg !11309
  %8 = load %struct.GHash*, %struct.GHash** %hash, align 8, !dbg !11310
  %call4 = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %8), !dbg !11311
  store %struct.GHashIterator* %call4, %struct.GHashIterator** %ihash, align 8, !dbg !11312
  br label %while.cond, !dbg !11313

while.cond:                                       ; preds = %if.end220, %if.else, %if.then47, %entry
  %9 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11314
  %call5 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %9), !dbg !11315
  %tobool = icmp ne i8 %call5, 0, !dbg !11316
  %lnot = xor i1 %tobool, true, !dbg !11316
  br i1 %lnot, label %while.body, label %while.end221, !dbg !11313

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm, metadata !11317, metadata !DIExpression()), !dbg !11319
  %10 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11320
  %call6 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %10), !dbg !11321
  %11 = bitcast i8* %call6 to %struct.ccd_Mesh*, !dbg !11321
  store %struct.ccd_Mesh* %11, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11319
  %12 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11322
  %call7 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %12), !dbg !11323
  %13 = bitcast i8* %call7 to %struct.Object*, !dbg !11323
  store %struct.Object* %13, %struct.Object** %ob, align 8, !dbg !11324
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11325
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 110, !dbg !11327
  %15 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !11327
  %tobool8 = icmp ne %struct.PartDeflect* %15, null, !dbg !11325
  br i1 %tobool8, label %land.lhs.true, label %if.end220, !dbg !11328

land.lhs.true:                                    ; preds = %while.body
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11329
  %pd9 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 110, !dbg !11330
  %17 = load %struct.PartDeflect*, %struct.PartDeflect** %pd9, align 8, !dbg !11330
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %17, i32 0, i32 1, !dbg !11331
  %18 = load i16, i16* %deflect, align 4, !dbg !11331
  %conv = sext i16 %18 to i32, !dbg !11329
  %tobool10 = icmp ne i32 %conv, 0, !dbg !11329
  br i1 %tobool10, label %if.then, label %if.end220, !dbg !11332

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !11333, metadata !DIExpression()), !dbg !11335
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !11335
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !11336, metadata !DIExpression()), !dbg !11337
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !11337
  call void @llvm.dbg.declare(metadata %struct.MVert** %mprevvert, metadata !11338, metadata !DIExpression()), !dbg !11339
  store %struct.MVert* null, %struct.MVert** %mprevvert, align 8, !dbg !11339
  call void @llvm.dbg.declare(metadata %struct.ccdf_minmax** %mima, metadata !11340, metadata !DIExpression()), !dbg !11341
  store %struct.ccdf_minmax* null, %struct.ccdf_minmax** %mima, align 8, !dbg !11341
  %19 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11342
  %tobool11 = icmp ne %struct.ccd_Mesh* %19, null, !dbg !11342
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !11344

if.then12:                                        ; preds = %if.then
  %20 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11345
  %mface13 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %20, i32 0, i32 4, !dbg !11347
  %21 = load %struct.MFace*, %struct.MFace** %mface13, align 8, !dbg !11347
  store %struct.MFace* %21, %struct.MFace** %mface, align 8, !dbg !11348
  %22 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11349
  %mvert14 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %22, i32 0, i32 2, !dbg !11350
  %23 = load %struct.MVert*, %struct.MVert** %mvert14, align 8, !dbg !11350
  store %struct.MVert* %23, %struct.MVert** %mvert, align 8, !dbg !11351
  %24 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11352
  %mprevvert15 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %24, i32 0, i32 3, !dbg !11353
  %25 = load %struct.MVert*, %struct.MVert** %mprevvert15, align 8, !dbg !11353
  store %struct.MVert* %25, %struct.MVert** %mprevvert, align 8, !dbg !11354
  %26 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11355
  %mima16 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %26, i32 0, i32 6, !dbg !11356
  %27 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima16, align 8, !dbg !11356
  store %struct.ccdf_minmax* %27, %struct.ccdf_minmax** %mima, align 8, !dbg !11357
  %28 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11358
  %totface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %28, i32 0, i32 1, !dbg !11359
  %29 = load i32, i32* %totface, align 4, !dbg !11359
  store i32 %29, i32* %a, align 4, !dbg !11360
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !11361
  %30 = load float, float* %arrayidx, align 4, !dbg !11361
  %31 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11363
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %31, i32 0, i32 7, !dbg !11364
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 0, !dbg !11363
  %32 = load float, float* %arrayidx17, align 8, !dbg !11363
  %cmp = fcmp olt float %30, %32, !dbg !11365
  br i1 %cmp, label %if.then47, label %lor.lhs.false, !dbg !11366

lor.lhs.false:                                    ; preds = %if.then12
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !11367
  %33 = load float, float* %arrayidx19, align 4, !dbg !11367
  %34 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11368
  %bbmin20 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %34, i32 0, i32 7, !dbg !11369
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %bbmin20, i64 0, i64 1, !dbg !11368
  %35 = load float, float* %arrayidx21, align 4, !dbg !11368
  %cmp22 = fcmp olt float %33, %35, !dbg !11370
  br i1 %cmp22, label %if.then47, label %lor.lhs.false24, !dbg !11371

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !11372
  %36 = load float, float* %arrayidx25, align 4, !dbg !11372
  %37 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11373
  %bbmin26 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %37, i32 0, i32 7, !dbg !11374
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %bbmin26, i64 0, i64 2, !dbg !11373
  %38 = load float, float* %arrayidx27, align 8, !dbg !11373
  %cmp28 = fcmp olt float %36, %38, !dbg !11375
  br i1 %cmp28, label %if.then47, label %lor.lhs.false30, !dbg !11376

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !11377
  %39 = load float, float* %arrayidx31, align 4, !dbg !11377
  %40 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11378
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %40, i32 0, i32 8, !dbg !11379
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 0, !dbg !11378
  %41 = load float, float* %arrayidx32, align 4, !dbg !11378
  %cmp33 = fcmp ogt float %39, %41, !dbg !11380
  br i1 %cmp33, label %if.then47, label %lor.lhs.false35, !dbg !11381

lor.lhs.false35:                                  ; preds = %lor.lhs.false30
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !11382
  %42 = load float, float* %arrayidx36, align 4, !dbg !11382
  %43 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11383
  %bbmax37 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %43, i32 0, i32 8, !dbg !11384
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %bbmax37, i64 0, i64 1, !dbg !11383
  %44 = load float, float* %arrayidx38, align 4, !dbg !11383
  %cmp39 = fcmp ogt float %42, %44, !dbg !11385
  br i1 %cmp39, label %if.then47, label %lor.lhs.false41, !dbg !11386

lor.lhs.false41:                                  ; preds = %lor.lhs.false35
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !11387
  %45 = load float, float* %arrayidx42, align 4, !dbg !11387
  %46 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !11388
  %bbmax43 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %46, i32 0, i32 8, !dbg !11389
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %bbmax43, i64 0, i64 2, !dbg !11388
  %47 = load float, float* %arrayidx44, align 4, !dbg !11388
  %cmp45 = fcmp ogt float %45, %47, !dbg !11390
  br i1 %cmp45, label %if.then47, label %if.end, !dbg !11391

if.then47:                                        ; preds = %lor.lhs.false41, %lor.lhs.false35, %lor.lhs.false30, %lor.lhs.false24, %lor.lhs.false, %if.then12
  %48 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11392
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %48), !dbg !11394
  br label %while.cond, !dbg !11395, !llvm.loop !11396

if.end:                                           ; preds = %lor.lhs.false41
  br label %if.end49, !dbg !11398

if.else:                                          ; preds = %if.then
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)), !dbg !11399
  %49 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11401
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %49), !dbg !11402
  br label %while.cond, !dbg !11403, !llvm.loop !11396

if.end49:                                         ; preds = %if.end
  br label %while.cond50, !dbg !11404

while.cond50:                                     ; preds = %if.end217, %if.then76, %if.end49
  %50 = load i32, i32* %a, align 4, !dbg !11405
  %dec = add nsw i32 %50, -1, !dbg !11405
  store i32 %dec, i32* %a, align 4, !dbg !11405
  %tobool51 = icmp ne i32 %50, 0, !dbg !11404
  br i1 %tobool51, label %while.body52, label %while.end, !dbg !11404

while.body52:                                     ; preds = %while.cond50
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !11406
  %51 = load float, float* %arrayidx53, align 4, !dbg !11406
  %52 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11409
  %minx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %52, i32 0, i32 0, !dbg !11410
  %53 = load float, float* %minx, align 4, !dbg !11410
  %cmp54 = fcmp olt float %51, %53, !dbg !11411
  br i1 %cmp54, label %if.then76, label %lor.lhs.false56, !dbg !11412

lor.lhs.false56:                                  ; preds = %while.body52
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !11413
  %54 = load float, float* %arrayidx57, align 4, !dbg !11413
  %55 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11414
  %maxx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %55, i32 0, i32 3, !dbg !11415
  %56 = load float, float* %maxx, align 4, !dbg !11415
  %cmp58 = fcmp ogt float %54, %56, !dbg !11416
  br i1 %cmp58, label %if.then76, label %lor.lhs.false60, !dbg !11417

lor.lhs.false60:                                  ; preds = %lor.lhs.false56
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !11418
  %57 = load float, float* %arrayidx61, align 4, !dbg !11418
  %58 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11419
  %miny = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %58, i32 0, i32 1, !dbg !11420
  %59 = load float, float* %miny, align 4, !dbg !11420
  %cmp62 = fcmp olt float %57, %59, !dbg !11421
  br i1 %cmp62, label %if.then76, label %lor.lhs.false64, !dbg !11422

lor.lhs.false64:                                  ; preds = %lor.lhs.false60
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !11423
  %60 = load float, float* %arrayidx65, align 4, !dbg !11423
  %61 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11424
  %maxy = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %61, i32 0, i32 4, !dbg !11425
  %62 = load float, float* %maxy, align 4, !dbg !11425
  %cmp66 = fcmp ogt float %60, %62, !dbg !11426
  br i1 %cmp66, label %if.then76, label %lor.lhs.false68, !dbg !11427

lor.lhs.false68:                                  ; preds = %lor.lhs.false64
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !11428
  %63 = load float, float* %arrayidx69, align 4, !dbg !11428
  %64 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11429
  %minz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %64, i32 0, i32 2, !dbg !11430
  %65 = load float, float* %minz, align 4, !dbg !11430
  %cmp70 = fcmp olt float %63, %65, !dbg !11431
  br i1 %cmp70, label %if.then76, label %lor.lhs.false72, !dbg !11432

lor.lhs.false72:                                  ; preds = %lor.lhs.false68
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !11433
  %66 = load float, float* %arrayidx73, align 4, !dbg !11433
  %67 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11434
  %maxz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %67, i32 0, i32 5, !dbg !11435
  %68 = load float, float* %maxz, align 4, !dbg !11435
  %cmp74 = fcmp ogt float %66, %68, !dbg !11436
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !11437

if.then76:                                        ; preds = %lor.lhs.false72, %lor.lhs.false68, %lor.lhs.false64, %lor.lhs.false60, %lor.lhs.false56, %while.body52
  %69 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11438
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %69, i32 1, !dbg !11438
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !11438
  %70 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11440
  %incdec.ptr77 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %70, i32 1, !dbg !11440
  store %struct.ccdf_minmax* %incdec.ptr77, %struct.ccdf_minmax** %mima, align 8, !dbg !11440
  br label %while.cond50, !dbg !11441, !llvm.loop !11442

if.end78:                                         ; preds = %lor.lhs.false72
  %71 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11444
  %tobool79 = icmp ne %struct.MVert* %71, null, !dbg !11444
  br i1 %tobool79, label %if.then80, label %if.end141, !dbg !11446

if.then80:                                        ; preds = %if.end78
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11447
  %72 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11449
  %73 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11450
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 0, !dbg !11451
  %74 = load i32, i32* %v1, align 4, !dbg !11451
  %idxprom = zext i32 %74 to i64, !dbg !11449
  %arrayidx82 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom, !dbg !11449
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx82, i32 0, i32 0, !dbg !11452
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11449
  call void @copy_v3_v3(float* %arraydecay81, float* %arraydecay83), !dbg !11453
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11454
  %75 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11455
  %76 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11456
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %76, i32 0, i32 1, !dbg !11457
  %77 = load i32, i32* %v2, align 4, !dbg !11457
  %idxprom85 = zext i32 %77 to i64, !dbg !11455
  %arrayidx86 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom85, !dbg !11455
  %co87 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx86, i32 0, i32 0, !dbg !11458
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %co87, i64 0, i64 0, !dbg !11455
  call void @copy_v3_v3(float* %arraydecay84, float* %arraydecay88), !dbg !11459
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11460
  %78 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11461
  %79 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11462
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 2, !dbg !11463
  %80 = load i32, i32* %v3, align 4, !dbg !11463
  %idxprom90 = zext i32 %80 to i64, !dbg !11461
  %arrayidx91 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i64 %idxprom90, !dbg !11461
  %co92 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx91, i32 0, i32 0, !dbg !11464
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co92, i64 0, i64 0, !dbg !11461
  call void @copy_v3_v3(float* %arraydecay89, float* %arraydecay93), !dbg !11465
  %81 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11466
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %81, i32 0, i32 3, !dbg !11468
  %82 = load i32, i32* %v4, align 4, !dbg !11468
  %tobool94 = icmp ne i32 %82, 0, !dbg !11466
  br i1 %tobool94, label %if.then95, label %if.end102, !dbg !11469

if.then95:                                        ; preds = %if.then80
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11470
  %83 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11472
  %84 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11473
  %v497 = getelementptr inbounds %struct.MFace, %struct.MFace* %84, i32 0, i32 3, !dbg !11474
  %85 = load i32, i32* %v497, align 4, !dbg !11474
  %idxprom98 = zext i32 %85 to i64, !dbg !11472
  %arrayidx99 = getelementptr inbounds %struct.MVert, %struct.MVert* %83, i64 %idxprom98, !dbg !11472
  %co100 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx99, i32 0, i32 0, !dbg !11475
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %co100, i64 0, i64 0, !dbg !11472
  call void @copy_v3_v3(float* %arraydecay96, float* %arraydecay101), !dbg !11476
  br label %if.end102, !dbg !11477

if.end102:                                        ; preds = %if.then95, %if.then80
  %86 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !11478
  %tobool103 = icmp ne %struct.MVert* %86, null, !dbg !11478
  br i1 %tobool103, label %if.then104, label %if.end140, !dbg !11480

if.then104:                                       ; preds = %if.end102
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11481
  %87 = load float, float* %time.addr, align 4, !dbg !11483
  call void @mul_v3_fl(float* %arraydecay105, float %87), !dbg !11484
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11485
  %88 = load float, float* %time.addr, align 4, !dbg !11486
  %sub = fsub float 1.000000e+00, %88, !dbg !11487
  %89 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !11488
  %90 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11489
  %v1107 = getelementptr inbounds %struct.MFace, %struct.MFace* %90, i32 0, i32 0, !dbg !11490
  %91 = load i32, i32* %v1107, align 4, !dbg !11490
  %idxprom108 = zext i32 %91 to i64, !dbg !11488
  %arrayidx109 = getelementptr inbounds %struct.MVert, %struct.MVert* %89, i64 %idxprom108, !dbg !11488
  %co110 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx109, i32 0, i32 0, !dbg !11491
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %co110, i64 0, i64 0, !dbg !11488
  call void @Vec3PlusStVec(float* %arraydecay106, float %sub, float* %arraydecay111), !dbg !11492
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11493
  %92 = load float, float* %time.addr, align 4, !dbg !11494
  call void @mul_v3_fl(float* %arraydecay112, float %92), !dbg !11495
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11496
  %93 = load float, float* %time.addr, align 4, !dbg !11497
  %sub114 = fsub float 1.000000e+00, %93, !dbg !11498
  %94 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !11499
  %95 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11500
  %v2115 = getelementptr inbounds %struct.MFace, %struct.MFace* %95, i32 0, i32 1, !dbg !11501
  %96 = load i32, i32* %v2115, align 4, !dbg !11501
  %idxprom116 = zext i32 %96 to i64, !dbg !11499
  %arrayidx117 = getelementptr inbounds %struct.MVert, %struct.MVert* %94, i64 %idxprom116, !dbg !11499
  %co118 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx117, i32 0, i32 0, !dbg !11502
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !11499
  call void @Vec3PlusStVec(float* %arraydecay113, float %sub114, float* %arraydecay119), !dbg !11503
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11504
  %97 = load float, float* %time.addr, align 4, !dbg !11505
  call void @mul_v3_fl(float* %arraydecay120, float %97), !dbg !11506
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11507
  %98 = load float, float* %time.addr, align 4, !dbg !11508
  %sub122 = fsub float 1.000000e+00, %98, !dbg !11509
  %99 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !11510
  %100 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11511
  %v3123 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 0, i32 2, !dbg !11512
  %101 = load i32, i32* %v3123, align 4, !dbg !11512
  %idxprom124 = zext i32 %101 to i64, !dbg !11510
  %arrayidx125 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i64 %idxprom124, !dbg !11510
  %co126 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx125, i32 0, i32 0, !dbg !11513
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %co126, i64 0, i64 0, !dbg !11510
  call void @Vec3PlusStVec(float* %arraydecay121, float %sub122, float* %arraydecay127), !dbg !11514
  %102 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11515
  %v4128 = getelementptr inbounds %struct.MFace, %struct.MFace* %102, i32 0, i32 3, !dbg !11517
  %103 = load i32, i32* %v4128, align 4, !dbg !11517
  %tobool129 = icmp ne i32 %103, 0, !dbg !11515
  br i1 %tobool129, label %if.then130, label %if.end139, !dbg !11518

if.then130:                                       ; preds = %if.then104
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11519
  %104 = load float, float* %time.addr, align 4, !dbg !11521
  call void @mul_v3_fl(float* %arraydecay131, float %104), !dbg !11522
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11523
  %105 = load float, float* %time.addr, align 4, !dbg !11524
  %sub133 = fsub float 1.000000e+00, %105, !dbg !11525
  %106 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !11526
  %107 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11527
  %v4134 = getelementptr inbounds %struct.MFace, %struct.MFace* %107, i32 0, i32 3, !dbg !11528
  %108 = load i32, i32* %v4134, align 4, !dbg !11528
  %idxprom135 = zext i32 %108 to i64, !dbg !11526
  %arrayidx136 = getelementptr inbounds %struct.MVert, %struct.MVert* %106, i64 %idxprom135, !dbg !11526
  %co137 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx136, i32 0, i32 0, !dbg !11529
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %co137, i64 0, i64 0, !dbg !11526
  call void @Vec3PlusStVec(float* %arraydecay132, float %sub133, float* %arraydecay138), !dbg !11530
  br label %if.end139, !dbg !11531

if.end139:                                        ; preds = %if.then130, %if.then104
  br label %if.end140, !dbg !11532

if.end140:                                        ; preds = %if.end139, %if.end102
  br label %if.end141, !dbg !11533

if.end141:                                        ; preds = %if.end140, %if.end78
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !11534
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11535
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11536
  call void @sub_v3_v3v3(float* %arraydecay142, float* %arraydecay143, float* %arraydecay144), !dbg !11537
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !11538
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11539
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11540
  call void @sub_v3_v3v3(float* %arraydecay145, float* %arraydecay146, float* %arraydecay147), !dbg !11541
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11542
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !11543
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !11544
  call void @cross_v3_v3v3(float* %arraydecay148, float* %arraydecay149, float* %arraydecay150), !dbg !11545
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11546
  %call152 = call float @normalize_v3(float* %arraydecay151), !dbg !11547
  %109 = load float*, float** %edge_v1.addr, align 8, !dbg !11548
  %110 = load float*, float** %edge_v2.addr, align 8, !dbg !11550
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11551
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11552
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11553
  %call156 = call zeroext i8 @isect_line_tri_v3(float* %109, float* %110, float* %arraydecay153, float* %arraydecay154, float* %arraydecay155, float* %t, float* null), !dbg !11554
  %tobool157 = icmp ne i8 %call156, 0, !dbg !11554
  br i1 %tobool157, label %if.then158, label %if.end174, !dbg !11555

if.then158:                                       ; preds = %if.end141
  call void @llvm.dbg.declare(metadata [3 x float]* %v1159, metadata !11556, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.declare(metadata [3 x float]* %v2160, metadata !11559, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.declare(metadata float* %intrusiondepth, metadata !11561, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.declare(metadata float* %i1, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata float* %i2, metadata !11565, metadata !DIExpression()), !dbg !11566
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %v1159, i64 0, i64 0, !dbg !11567
  %111 = load float*, float** %edge_v1.addr, align 8, !dbg !11568
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11569
  call void @sub_v3_v3v3(float* %arraydecay161, float* %111, float* %arraydecay162), !dbg !11570
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %v2160, i64 0, i64 0, !dbg !11571
  %112 = load float*, float** %edge_v2.addr, align 8, !dbg !11572
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !11573
  call void @sub_v3_v3v3(float* %arraydecay163, float* %112, float* %arraydecay164), !dbg !11574
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %v1159, i64 0, i64 0, !dbg !11575
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11576
  %call167 = call float @dot_v3v3(float* %arraydecay165, float* %arraydecay166), !dbg !11577
  store float %call167, float* %i1, align 4, !dbg !11578
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %v2160, i64 0, i64 0, !dbg !11579
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11580
  %call170 = call float @dot_v3v3(float* %arraydecay168, float* %arraydecay169), !dbg !11581
  store float %call170, float* %i2, align 4, !dbg !11582
  %113 = load float, float* %i1, align 4, !dbg !11583
  %114 = load float, float* %i2, align 4, !dbg !11584
  %call171 = call float @min_ff(float %113, float %114), !dbg !11585
  %fneg = fneg float %call171, !dbg !11586
  %115 = load float, float* %el, align 4, !dbg !11587
  %div = fdiv float %fneg, %115, !dbg !11588
  store float %div, float* %intrusiondepth, align 4, !dbg !11589
  %116 = load float*, float** %force.addr, align 8, !dbg !11590
  %117 = load float, float* %intrusiondepth, align 4, !dbg !11591
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11592
  call void @Vec3PlusStVec(float* %116, float %117, float* %arraydecay172), !dbg !11593
  %118 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11594
  %pd173 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 110, !dbg !11595
  %119 = load %struct.PartDeflect*, %struct.PartDeflect** %pd173, align 8, !dbg !11595
  %pdef_sbdamp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %119, i32 0, i32 26, !dbg !11596
  %120 = load float, float* %pdef_sbdamp, align 8, !dbg !11596
  %121 = load float*, float** %damp.addr, align 8, !dbg !11597
  store float %120, float* %121, align 4, !dbg !11598
  store i32 2, i32* %deflected, align 4, !dbg !11599
  br label %if.end174, !dbg !11600

if.end174:                                        ; preds = %if.then158, %if.end141
  %122 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11601
  %v4175 = getelementptr inbounds %struct.MFace, %struct.MFace* %122, i32 0, i32 3, !dbg !11603
  %123 = load i32, i32* %v4175, align 4, !dbg !11603
  %tobool176 = icmp ne i32 %123, 0, !dbg !11601
  br i1 %tobool176, label %if.then177, label %if.end217, !dbg !11604

if.then177:                                       ; preds = %if.end174
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !11605
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11607
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11608
  call void @sub_v3_v3v3(float* %arraydecay178, float* %arraydecay179, float* %arraydecay180), !dbg !11609
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !11610
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11611
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11612
  call void @sub_v3_v3v3(float* %arraydecay181, float* %arraydecay182, float* %arraydecay183), !dbg !11613
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11614
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !11615
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !11616
  call void @cross_v3_v3v3(float* %arraydecay184, float* %arraydecay185, float* %arraydecay186), !dbg !11617
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11618
  %call188 = call float @normalize_v3(float* %arraydecay187), !dbg !11619
  %124 = load float*, float** %edge_v1.addr, align 8, !dbg !11620
  %125 = load float*, float** %edge_v2.addr, align 8, !dbg !11622
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !11623
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !11624
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11625
  %call192 = call zeroext i8 @isect_line_tri_v3(float* %124, float* %125, float* %arraydecay189, float* %arraydecay190, float* %arraydecay191, float* %t, float* null), !dbg !11626
  %tobool193 = icmp ne i8 %call192, 0, !dbg !11626
  br i1 %tobool193, label %if.then194, label %if.end216, !dbg !11627

if.then194:                                       ; preds = %if.then177
  call void @llvm.dbg.declare(metadata [3 x float]* %v1195, metadata !11628, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.declare(metadata [3 x float]* %v2196, metadata !11631, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.declare(metadata float* %intrusiondepth197, metadata !11633, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.declare(metadata float* %i1198, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata float* %i2199, metadata !11637, metadata !DIExpression()), !dbg !11638
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %v1195, i64 0, i64 0, !dbg !11639
  %126 = load float*, float** %edge_v1.addr, align 8, !dbg !11640
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11641
  call void @sub_v3_v3v3(float* %arraydecay200, float* %126, float* %arraydecay201), !dbg !11642
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %v2196, i64 0, i64 0, !dbg !11643
  %127 = load float*, float** %edge_v2.addr, align 8, !dbg !11644
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !11645
  call void @sub_v3_v3v3(float* %arraydecay202, float* %127, float* %arraydecay203), !dbg !11646
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %v1195, i64 0, i64 0, !dbg !11647
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11648
  %call206 = call float @dot_v3v3(float* %arraydecay204, float* %arraydecay205), !dbg !11649
  store float %call206, float* %i1198, align 4, !dbg !11650
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %v2196, i64 0, i64 0, !dbg !11651
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11652
  %call209 = call float @dot_v3v3(float* %arraydecay207, float* %arraydecay208), !dbg !11653
  store float %call209, float* %i2199, align 4, !dbg !11654
  %128 = load float, float* %i1198, align 4, !dbg !11655
  %129 = load float, float* %i2199, align 4, !dbg !11656
  %call210 = call float @min_ff(float %128, float %129), !dbg !11657
  %fneg211 = fneg float %call210, !dbg !11658
  %130 = load float, float* %el, align 4, !dbg !11659
  %div212 = fdiv float %fneg211, %130, !dbg !11660
  store float %div212, float* %intrusiondepth197, align 4, !dbg !11661
  %131 = load float*, float** %force.addr, align 8, !dbg !11662
  %132 = load float, float* %intrusiondepth197, align 4, !dbg !11663
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !11664
  call void @Vec3PlusStVec(float* %131, float %132, float* %arraydecay213), !dbg !11665
  %133 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11666
  %pd214 = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 110, !dbg !11667
  %134 = load %struct.PartDeflect*, %struct.PartDeflect** %pd214, align 8, !dbg !11667
  %pdef_sbdamp215 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %134, i32 0, i32 26, !dbg !11668
  %135 = load float, float* %pdef_sbdamp215, align 8, !dbg !11668
  %136 = load float*, float** %damp.addr, align 8, !dbg !11669
  store float %135, float* %136, align 4, !dbg !11670
  store i32 2, i32* %deflected, align 4, !dbg !11671
  br label %if.end216, !dbg !11672

if.end216:                                        ; preds = %if.then194, %if.then177
  br label %if.end217, !dbg !11673

if.end217:                                        ; preds = %if.end216, %if.end174
  %137 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !11674
  %incdec.ptr218 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i32 1, !dbg !11674
  store %struct.MFace* %incdec.ptr218, %struct.MFace** %mface, align 8, !dbg !11674
  %138 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !11675
  %incdec.ptr219 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %138, i32 1, !dbg !11675
  store %struct.ccdf_minmax* %incdec.ptr219, %struct.ccdf_minmax** %mima, align 8, !dbg !11675
  br label %while.cond50, !dbg !11404, !llvm.loop !11442

while.end:                                        ; preds = %while.cond50
  br label %if.end220, !dbg !11676

if.end220:                                        ; preds = %while.end, %land.lhs.true, %while.body
  %139 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11677
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %139), !dbg !11678
  br label %while.cond, !dbg !11313, !llvm.loop !11396

while.end221:                                     ; preds = %while.cond
  %140 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !11679
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %140), !dbg !11680
  %141 = load i32, i32* %deflected, align 4, !dbg !11681
  ret i32 %141, !dbg !11682
}

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !11683 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11684, metadata !DIExpression()), !dbg !11685
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  %0 = load float*, float** %a.addr, align 8, !dbg !11688
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11688
  %1 = load float, float* %arrayidx, align 4, !dbg !11688
  %2 = load float*, float** %r.addr, align 8, !dbg !11689
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11689
  %3 = load float, float* %arrayidx1, align 4, !dbg !11690
  %sub = fsub float %3, %1, !dbg !11690
  store float %sub, float* %arrayidx1, align 4, !dbg !11690
  %4 = load float*, float** %a.addr, align 8, !dbg !11691
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11691
  %5 = load float, float* %arrayidx2, align 4, !dbg !11691
  %6 = load float*, float** %r.addr, align 8, !dbg !11692
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11692
  %7 = load float, float* %arrayidx3, align 4, !dbg !11693
  %sub4 = fsub float %7, %5, !dbg !11693
  store float %sub4, float* %arrayidx3, align 4, !dbg !11693
  %8 = load float*, float** %a.addr, align 8, !dbg !11694
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11694
  %9 = load float, float* %arrayidx5, align 4, !dbg !11694
  %10 = load float*, float** %r.addr, align 8, !dbg !11695
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11695
  %11 = load float, float* %arrayidx6, align 4, !dbg !11696
  %sub7 = fsub float %11, %9, !dbg !11696
  store float %sub7, float* %arrayidx6, align 4, !dbg !11696
  ret void, !dbg !11697
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

declare dso_local %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !11698 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !11701, metadata !DIExpression()), !dbg !11702
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !11703
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !11704
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !11704
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !11705
  %lnot = xor i1 %tobool, true, !dbg !11705
  %lnot.ext = zext i1 %lnot to i32, !dbg !11705
  %conv = trunc i32 %lnot.ext to i8, !dbg !11705
  ret i8 %conv, !dbg !11706
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !11707 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !11710, metadata !DIExpression()), !dbg !11711
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !11712
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !11713
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !11713
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !11714
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !11714
  %3 = load i8*, i8** %val, align 8, !dbg !11714
  ret i8* %3, !dbg !11715
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !11716 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !11719
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !11720
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !11720
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !11721
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !11721
  %3 = load i8*, i8** %key, align 8, !dbg !11721
  ret i8* %3, !dbg !11722
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !11723 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11724, metadata !DIExpression()), !dbg !11725
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11726, metadata !DIExpression()), !dbg !11727
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  %0 = load float*, float** %a.addr, align 8, !dbg !11730
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !11730
  %1 = load float, float* %arrayidx, align 4, !dbg !11730
  %2 = load float*, float** %b.addr, align 8, !dbg !11731
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !11731
  %3 = load float, float* %arrayidx1, align 4, !dbg !11731
  %mul = fmul float %1, %3, !dbg !11732
  %4 = load float*, float** %a.addr, align 8, !dbg !11733
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !11733
  %5 = load float, float* %arrayidx2, align 4, !dbg !11733
  %6 = load float*, float** %b.addr, align 8, !dbg !11734
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11734
  %7 = load float, float* %arrayidx3, align 4, !dbg !11734
  %mul4 = fmul float %5, %7, !dbg !11735
  %sub = fsub float %mul, %mul4, !dbg !11736
  %8 = load float*, float** %r.addr, align 8, !dbg !11737
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !11737
  store float %sub, float* %arrayidx5, align 4, !dbg !11738
  %9 = load float*, float** %a.addr, align 8, !dbg !11739
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !11739
  %10 = load float, float* %arrayidx6, align 4, !dbg !11739
  %11 = load float*, float** %b.addr, align 8, !dbg !11740
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !11740
  %12 = load float, float* %arrayidx7, align 4, !dbg !11740
  %mul8 = fmul float %10, %12, !dbg !11741
  %13 = load float*, float** %a.addr, align 8, !dbg !11742
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !11742
  %14 = load float, float* %arrayidx9, align 4, !dbg !11742
  %15 = load float*, float** %b.addr, align 8, !dbg !11743
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !11743
  %16 = load float, float* %arrayidx10, align 4, !dbg !11743
  %mul11 = fmul float %14, %16, !dbg !11744
  %sub12 = fsub float %mul8, %mul11, !dbg !11745
  %17 = load float*, float** %r.addr, align 8, !dbg !11746
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !11746
  store float %sub12, float* %arrayidx13, align 4, !dbg !11747
  %18 = load float*, float** %a.addr, align 8, !dbg !11748
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !11748
  %19 = load float, float* %arrayidx14, align 4, !dbg !11748
  %20 = load float*, float** %b.addr, align 8, !dbg !11749
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !11749
  %21 = load float, float* %arrayidx15, align 4, !dbg !11749
  %mul16 = fmul float %19, %21, !dbg !11750
  %22 = load float*, float** %a.addr, align 8, !dbg !11751
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !11751
  %23 = load float, float* %arrayidx17, align 4, !dbg !11751
  %24 = load float*, float** %b.addr, align 8, !dbg !11752
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !11752
  %25 = load float, float* %arrayidx18, align 4, !dbg !11752
  %mul19 = fmul float %23, %25, !dbg !11753
  %sub20 = fsub float %mul16, %mul19, !dbg !11754
  %26 = load float*, float** %r.addr, align 8, !dbg !11755
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !11755
  store float %sub20, float* %arrayidx21, align 4, !dbg !11756
  ret void, !dbg !11757
}

declare dso_local zeroext i8 @isect_line_tri_v3(float*, float*, float*, float*, float*, float*, float*) #2

declare dso_local void @BLI_ghashIterator_free(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @exec_softbody_calc_forces(i8* %data) #0 !dbg !11758 {
entry:
  %data.addr = alloca i8*, align 8
  %pctx = alloca %struct.SB_thread_context*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.declare(metadata %struct.SB_thread_context** %pctx, metadata !11761, metadata !DIExpression()), !dbg !11762
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11763
  %1 = bitcast i8* %0 to %struct.SB_thread_context*, !dbg !11764
  store %struct.SB_thread_context* %1, %struct.SB_thread_context** %pctx, align 8, !dbg !11762
  %2 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11765
  %scene = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %2, i32 0, i32 0, !dbg !11766
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11766
  %4 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11767
  %ob = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %4, i32 0, i32 1, !dbg !11768
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11768
  %6 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11769
  %forcetime = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %6, i32 0, i32 2, !dbg !11770
  %7 = load float, float* %forcetime, align 8, !dbg !11770
  %8 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11771
  %timenow = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %8, i32 0, i32 3, !dbg !11772
  %9 = load float, float* %timenow, align 4, !dbg !11772
  %10 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11773
  %ifirst = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %10, i32 0, i32 4, !dbg !11774
  %11 = load i32, i32* %ifirst, align 8, !dbg !11774
  %12 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11775
  %ilast = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %12, i32 0, i32 5, !dbg !11776
  %13 = load i32, i32* %ilast, align 4, !dbg !11776
  %14 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11777
  %do_effector = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %14, i32 0, i32 6, !dbg !11778
  %15 = load %struct.ListBase*, %struct.ListBase** %do_effector, align 8, !dbg !11778
  %16 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11779
  %do_deflector = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %16, i32 0, i32 7, !dbg !11780
  %17 = load i32, i32* %do_deflector, align 8, !dbg !11780
  %18 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11781
  %fieldfactor = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %18, i32 0, i32 8, !dbg !11782
  %19 = load float, float* %fieldfactor, align 4, !dbg !11782
  %20 = load %struct.SB_thread_context*, %struct.SB_thread_context** %pctx, align 8, !dbg !11783
  %windfactor = getelementptr inbounds %struct.SB_thread_context, %struct.SB_thread_context* %20, i32 0, i32 9, !dbg !11784
  %21 = load float, float* %windfactor, align 8, !dbg !11784
  %call = call i32 @_softbody_calc_forces_slice_in_a_thread(%struct.Scene* %3, %struct.Object* %5, float %7, float %9, i32 %11, i32 %13, i32* ()* null, %struct.ListBase* %15, i32 %17, float %19, float %21), !dbg !11785
  ret i8* null, !dbg !11786
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_softbody_calc_forces_slice_in_a_thread(%struct.Scene* %scene, %struct.Object* %ob, float %forcetime, float %timenow, i32 %ifirst, i32 %ilast, i32* ()* %UNUSED_ptr_to_break_func, %struct.ListBase* %do_effector, i32 %do_deflector, float %fieldfactor, float %windfactor) #0 !dbg !11787 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %forcetime.addr = alloca float, align 4
  %timenow.addr = alloca float, align 4
  %ifirst.addr = alloca i32, align 4
  %ilast.addr = alloca i32, align 4
  %UNUSED_ptr_to_break_func.addr = alloca i32* ()*, align 8
  %do_effector.addr = alloca %struct.ListBase*, align 8
  %do_deflector.addr = alloca i32, align 4
  %fieldfactor.addr = alloca float, align 4
  %windfactor.addr = alloca float, align 4
  %iks = alloca float, align 4
  %bb = alloca i32, align 4
  %do_selfcollision = alloca i32, align 4
  %do_springcollision = alloca i32, align 4
  %do_aero = alloca i32, align 4
  %number_of_points_here = alloca i32, align 4
  %sb = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %attached = alloca i32, align 4
  %obp = alloca %struct.BodyPoint*, align 8
  %bs = alloca %struct.BodySpring*, align 8
  %c = alloca i32, align 4
  %b = alloca i32, align 4
  %velcenter = alloca [3 x float], align 4
  %dvel = alloca [3 x float], align 4
  %def = alloca [3 x float], align 4
  %distance = alloca float, align 4
  %compare = alloca float, align 4
  %bstune = alloca float, align 4
  %f = alloca float, align 4
  %auxvect = alloca [3 x float], align 4
  %velgoal = alloca [3 x float], align 4
  %ks = alloca float, align 4
  %kd = alloca float, align 4
  %gravity = alloca [3 x float], align 4
  %epoint = alloca %struct.EffectedPoint, align 8
  %kd267 = alloca float, align 4
  %force268 = alloca [3 x float], align 4
  %speed = alloca [3 x float], align 4
  %eval_sb_fric_force_scale = alloca float, align 4
  %kd316 = alloca float, align 4
  %cfforce = alloca [3 x float], align 4
  %defforce = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %facenormal = alloca [3 x float], align 4
  %cf = alloca float, align 4
  %intrusion = alloca float, align 4
  %kd349 = alloca float, align 4
  %b399 = alloca i32, align 4
  %bs400 = alloca %struct.BodySpring*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11790, metadata !DIExpression()), !dbg !11791
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  store float %forcetime, float* %forcetime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %forcetime.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  store float %timenow, float* %timenow.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timenow.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  store i32 %ifirst, i32* %ifirst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifirst.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store i32 %ilast, i32* %ilast.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ilast.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i32* ()* %UNUSED_ptr_to_break_func, i32* ()** %UNUSED_ptr_to_break_func.addr, align 8
  call void @llvm.dbg.declare(metadata i32* ()** %UNUSED_ptr_to_break_func.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  store %struct.ListBase* %do_effector, %struct.ListBase** %do_effector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %do_effector.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i32 %do_deflector, i32* %do_deflector.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_deflector.addr, metadata !11806, metadata !DIExpression()), !dbg !11807
  store float %fieldfactor, float* %fieldfactor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fieldfactor.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  store float %windfactor, float* %windfactor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %windfactor.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.declare(metadata float* %iks, metadata !11812, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.declare(metadata i32* %bb, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.declare(metadata i32* %do_selfcollision, metadata !11816, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.declare(metadata i32* %do_springcollision, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata i32* %do_aero, metadata !11820, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.declare(metadata i32* %number_of_points_here, metadata !11822, metadata !DIExpression()), !dbg !11823
  %0 = load i32, i32* %ilast.addr, align 4, !dbg !11824
  %1 = load i32, i32* %ifirst.addr, align 4, !dbg !11825
  %sub = sub nsw i32 %0, %1, !dbg !11826
  store i32 %sub, i32* %number_of_points_here, align 4, !dbg !11823
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !11827, metadata !DIExpression()), !dbg !11828
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11829
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 111, !dbg !11830
  %3 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !11830
  store %struct.SoftBody* %3, %struct.SoftBody** %sb, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !11831, metadata !DIExpression()), !dbg !11832
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11833
  %tobool = icmp ne %struct.SoftBody* %4, null, !dbg !11833
  br i1 %tobool, label %if.then, label %if.else, !dbg !11835

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11836
  %softflag = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 104, !dbg !11838
  %6 = load i16, i16* %softflag, align 2, !dbg !11838
  %conv = sext i16 %6 to i32, !dbg !11836
  %and = and i32 %conv, 4, !dbg !11839
  %tobool1 = icmp ne i32 %and, 0, !dbg !11839
  br i1 %tobool1, label %land.lhs.true, label %land.end, !dbg !11840

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11841
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 3, !dbg !11842
  %8 = load %struct.BodySpring*, %struct.BodySpring** %bspring, align 8, !dbg !11842
  %tobool2 = icmp ne %struct.BodySpring* %8, null, !dbg !11843
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !11844

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11845
  %softflag3 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 104, !dbg !11846
  %10 = load i16, i16* %softflag3, align 2, !dbg !11846
  %conv4 = sext i16 %10 to i32, !dbg !11845
  %and5 = and i32 %conv4, 512, !dbg !11847
  %tobool6 = icmp ne i32 %and5, 0, !dbg !11844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.then
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %if.then ], [ %tobool6, %land.rhs ], !dbg !11848
  %land.ext = zext i1 %11 to i32, !dbg !11844
  store i32 %land.ext, i32* %do_selfcollision, align 4, !dbg !11849
  %12 = load i32, i32* %do_deflector.addr, align 4, !dbg !11850
  %tobool7 = icmp ne i32 %12, 0, !dbg !11850
  br i1 %tobool7, label %land.lhs.true8, label %land.end18, !dbg !11851

land.lhs.true8:                                   ; preds = %land.end
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11852
  %softflag9 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 104, !dbg !11853
  %14 = load i16, i16* %softflag9, align 2, !dbg !11853
  %conv10 = sext i16 %14 to i32, !dbg !11852
  %and11 = and i32 %conv10, 4, !dbg !11854
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11854
  br i1 %tobool12, label %land.rhs13, label %land.end18, !dbg !11855

land.rhs13:                                       ; preds = %land.lhs.true8
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11856
  %softflag14 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 104, !dbg !11857
  %16 = load i16, i16* %softflag14, align 2, !dbg !11857
  %conv15 = sext i16 %16 to i32, !dbg !11856
  %and16 = and i32 %conv15, 2048, !dbg !11858
  %tobool17 = icmp ne i32 %and16, 0, !dbg !11855
  br label %land.end18

land.end18:                                       ; preds = %land.rhs13, %land.lhs.true8, %land.end
  %17 = phi i1 [ false, %land.lhs.true8 ], [ false, %land.end ], [ %tobool17, %land.rhs13 ], !dbg !11848
  %land.ext19 = zext i1 %17 to i32, !dbg !11855
  store i32 %land.ext19, i32* %do_springcollision, align 4, !dbg !11859
  %18 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11860
  %aeroedge = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %18, i32 0, i32 37, !dbg !11861
  %19 = load i16, i16* %aeroedge, align 2, !dbg !11861
  %conv20 = sext i16 %19 to i32, !dbg !11862
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !11862
  br i1 %tobool21, label %land.rhs22, label %land.end27, !dbg !11863

land.rhs22:                                       ; preds = %land.end18
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11864
  %softflag23 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 104, !dbg !11865
  %21 = load i16, i16* %softflag23, align 2, !dbg !11865
  %conv24 = sext i16 %21 to i32, !dbg !11864
  %and25 = and i32 %conv24, 4, !dbg !11866
  %tobool26 = icmp ne i32 %and25, 0, !dbg !11863
  br label %land.end27

land.end27:                                       ; preds = %land.rhs22, %land.end18
  %22 = phi i1 [ false, %land.end18 ], [ %tobool26, %land.rhs22 ], !dbg !11848
  %land.ext28 = zext i1 %22 to i32, !dbg !11863
  store i32 %land.ext28, i32* %do_aero, align 4, !dbg !11867
  br label %if.end, !dbg !11868

if.else:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0)), !dbg !11869
  store i32 999, i32* %retval, align 4, !dbg !11871
  br label %return, !dbg !11871

if.end:                                           ; preds = %land.end27
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11872
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 0, !dbg !11874
  %24 = load i32, i32* %totpoint, align 8, !dbg !11874
  %25 = load i32, i32* %ifirst.addr, align 4, !dbg !11875
  %cmp = icmp slt i32 %24, %25, !dbg !11876
  br i1 %cmp, label %if.then30, label %if.end32, !dbg !11877

if.then30:                                        ; preds = %if.end
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)), !dbg !11878
  store i32 998, i32* %retval, align 4, !dbg !11880
  br label %return, !dbg !11880

if.end32:                                         ; preds = %if.end
  %26 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11881
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %26, i32 0, i32 2, !dbg !11882
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !11882
  %28 = load i32, i32* %ifirst.addr, align 4, !dbg !11883
  %idxprom = sext i32 %28 to i64, !dbg !11881
  %arrayidx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i64 %idxprom, !dbg !11881
  store %struct.BodyPoint* %arrayidx, %struct.BodyPoint** %bp, align 8, !dbg !11884
  %29 = load i32, i32* %number_of_points_here, align 4, !dbg !11885
  store i32 %29, i32* %bb, align 4, !dbg !11887
  br label %for.cond, !dbg !11888

for.cond:                                         ; preds = %for.inc436, %if.end32
  %30 = load i32, i32* %bb, align 4, !dbg !11889
  %cmp33 = icmp sgt i32 %30, 0, !dbg !11891
  br i1 %cmp33, label %for.body, label %for.end439, !dbg !11892

for.body:                                         ; preds = %for.cond
  %31 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !11893
  %force = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %31, i32 0, i32 5, !dbg !11895
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 2, !dbg !11893
  store float 0.000000e+00, float* %arrayidx35, align 4, !dbg !11896
  %32 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !11897
  %force36 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %32, i32 0, i32 5, !dbg !11898
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %force36, i64 0, i64 1, !dbg !11897
  store float 0.000000e+00, float* %arrayidx37, align 4, !dbg !11899
  %33 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !11900
  %force38 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %33, i32 0, i32 5, !dbg !11901
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %force38, i64 0, i64 0, !dbg !11900
  store float 0.000000e+00, float* %arrayidx39, align 4, !dbg !11902
  %34 = load i32, i32* %do_selfcollision, align 4, !dbg !11903
  %tobool40 = icmp ne i32 %34, 0, !dbg !11903
  br i1 %tobool40, label %if.then41, label %if.end158, !dbg !11905

if.then41:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %attached, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %obp, metadata !11909, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs, metadata !11911, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.declare(metadata i32* %c, metadata !11913, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11915, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.declare(metadata [3 x float]* %velcenter, metadata !11917, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata [3 x float]* %dvel, metadata !11919, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.declare(metadata [3 x float]* %def, metadata !11921, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.declare(metadata float* %distance, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.declare(metadata float* %compare, metadata !11925, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.declare(metadata float* %bstune, metadata !11927, metadata !DIExpression()), !dbg !11928
  %35 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11929
  %ballstiff = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %35, i32 0, i32 35, !dbg !11930
  %36 = load float, float* %ballstiff, align 4, !dbg !11930
  store float %36, float* %bstune, align 4, !dbg !11928
  %37 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11931
  %totpoint42 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 0, !dbg !11933
  %38 = load i32, i32* %totpoint42, align 8, !dbg !11933
  store i32 %38, i32* %c, align 4, !dbg !11934
  %39 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11935
  %bpoint43 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %39, i32 0, i32 2, !dbg !11936
  %40 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint43, align 8, !dbg !11936
  store %struct.BodyPoint* %40, %struct.BodyPoint** %obp, align 8, !dbg !11937
  br label %for.cond44, !dbg !11938

for.cond44:                                       ; preds = %for.inc155, %if.then41
  %41 = load i32, i32* %c, align 4, !dbg !11939
  %42 = load i32, i32* %ifirst.addr, align 4, !dbg !11941
  %43 = load i32, i32* %bb, align 4, !dbg !11942
  %add = add nsw i32 %42, %43, !dbg !11943
  %cmp45 = icmp sge i32 %41, %add, !dbg !11944
  br i1 %cmp45, label %for.body47, label %for.end157, !dbg !11945

for.body47:                                       ; preds = %for.cond44
  %44 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !11946
  %colball = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %44, i32 0, i32 18, !dbg !11948
  %45 = load float, float* %colball, align 4, !dbg !11948
  %46 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !11949
  %colball48 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %46, i32 0, i32 18, !dbg !11950
  %47 = load float, float* %colball48, align 4, !dbg !11950
  %add49 = fadd float %45, %47, !dbg !11951
  store float %add49, float* %compare, align 4, !dbg !11952
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !11953
  %48 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !11954
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %48, i32 0, i32 3, !dbg !11955
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !11954
  %49 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !11956
  %pos51 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %49, i32 0, i32 3, !dbg !11957
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %pos51, i64 0, i64 0, !dbg !11956
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay50, float* %arraydecay52), !dbg !11958
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !11959
  %50 = load float, float* %arrayidx53, align 4, !dbg !11959
  %cmp54 = fcmp olt float %50, 0.000000e+00, !dbg !11959
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !11959

cond.true:                                        ; preds = %for.body47
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !11959
  %51 = load float, float* %arrayidx56, align 4, !dbg !11959
  %fneg = fneg float %51, !dbg !11959
  br label %cond.end, !dbg !11959

cond.false:                                       ; preds = %for.body47
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !11959
  %52 = load float, float* %arrayidx57, align 4, !dbg !11959
  br label %cond.end, !dbg !11959

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %52, %cond.false ], !dbg !11959
  %53 = load float, float* %compare, align 4, !dbg !11961
  %cmp58 = fcmp ogt float %cond, %53, !dbg !11962
  br i1 %cmp58, label %if.then85, label %lor.lhs.false, !dbg !11963

lor.lhs.false:                                    ; preds = %cond.end
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !11964
  %54 = load float, float* %arrayidx60, align 4, !dbg !11964
  %cmp61 = fcmp olt float %54, 0.000000e+00, !dbg !11964
  br i1 %cmp61, label %cond.true63, label %cond.false66, !dbg !11964

cond.true63:                                      ; preds = %lor.lhs.false
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !11964
  %55 = load float, float* %arrayidx64, align 4, !dbg !11964
  %fneg65 = fneg float %55, !dbg !11964
  br label %cond.end68, !dbg !11964

cond.false66:                                     ; preds = %lor.lhs.false
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 1, !dbg !11964
  %56 = load float, float* %arrayidx67, align 4, !dbg !11964
  br label %cond.end68, !dbg !11964

cond.end68:                                       ; preds = %cond.false66, %cond.true63
  %cond69 = phi float [ %fneg65, %cond.true63 ], [ %56, %cond.false66 ], !dbg !11964
  %57 = load float, float* %compare, align 4, !dbg !11965
  %cmp70 = fcmp ogt float %cond69, %57, !dbg !11966
  br i1 %cmp70, label %if.then85, label %lor.lhs.false72, !dbg !11967

lor.lhs.false72:                                  ; preds = %cond.end68
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !11968
  %58 = load float, float* %arrayidx73, align 4, !dbg !11968
  %cmp74 = fcmp olt float %58, 0.000000e+00, !dbg !11968
  br i1 %cmp74, label %cond.true76, label %cond.false79, !dbg !11968

cond.true76:                                      ; preds = %lor.lhs.false72
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !11968
  %59 = load float, float* %arrayidx77, align 4, !dbg !11968
  %fneg78 = fneg float %59, !dbg !11968
  br label %cond.end81, !dbg !11968

cond.false79:                                     ; preds = %lor.lhs.false72
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 2, !dbg !11968
  %60 = load float, float* %arrayidx80, align 4, !dbg !11968
  br label %cond.end81, !dbg !11968

cond.end81:                                       ; preds = %cond.false79, %cond.true76
  %cond82 = phi float [ %fneg78, %cond.true76 ], [ %60, %cond.false79 ], !dbg !11968
  %61 = load float, float* %compare, align 4, !dbg !11969
  %cmp83 = fcmp ogt float %cond82, %61, !dbg !11970
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !11971

if.then85:                                        ; preds = %cond.end81, %cond.end68, %cond.end
  br label %for.inc155, !dbg !11972

if.end86:                                         ; preds = %cond.end81
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !11973
  %call88 = call float @normalize_v3(float* %arraydecay87), !dbg !11974
  store float %call88, float* %distance, align 4, !dbg !11975
  %62 = load float, float* %distance, align 4, !dbg !11976
  %63 = load float, float* %compare, align 4, !dbg !11978
  %cmp89 = fcmp olt float %62, %63, !dbg !11979
  br i1 %cmp89, label %if.then91, label %if.end154, !dbg !11980

if.then91:                                        ; preds = %if.end86
  store i32 0, i32* %attached, align 4, !dbg !11981
  %64 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !11983
  %nofsprings = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %64, i32 0, i32 13, !dbg !11985
  %65 = load i32, i32* %nofsprings, align 4, !dbg !11985
  store i32 %65, i32* %b, align 4, !dbg !11986
  br label %for.cond92, !dbg !11987

for.cond92:                                       ; preds = %for.inc, %if.then91
  %66 = load i32, i32* %b, align 4, !dbg !11988
  %cmp93 = icmp sgt i32 %66, 0, !dbg !11990
  br i1 %cmp93, label %for.body95, label %for.end, !dbg !11991

for.body95:                                       ; preds = %for.cond92
  %67 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !11992
  %bspring96 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %67, i32 0, i32 3, !dbg !11994
  %68 = load %struct.BodySpring*, %struct.BodySpring** %bspring96, align 8, !dbg !11994
  %69 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !11995
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %69, i32 0, i32 14, !dbg !11996
  %70 = load i32*, i32** %springs, align 8, !dbg !11996
  %71 = load i32, i32* %b, align 4, !dbg !11997
  %sub97 = sub nsw i32 %71, 1, !dbg !11998
  %idxprom98 = sext i32 %sub97 to i64, !dbg !11995
  %arrayidx99 = getelementptr inbounds i32, i32* %70, i64 %idxprom98, !dbg !11995
  %72 = load i32, i32* %arrayidx99, align 4, !dbg !11995
  %idx.ext = sext i32 %72 to i64, !dbg !11999
  %add.ptr = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %68, i64 %idx.ext, !dbg !11999
  store %struct.BodySpring* %add.ptr, %struct.BodySpring** %bs, align 8, !dbg !12000
  %73 = load i32, i32* %ilast.addr, align 4, !dbg !12001
  %74 = load i32, i32* %bb, align 4, !dbg !12003
  %sub100 = sub nsw i32 %73, %74, !dbg !12004
  %75 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !12005
  %v2 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %75, i32 0, i32 1, !dbg !12006
  %76 = load i32, i32* %v2, align 4, !dbg !12006
  %cmp101 = icmp eq i32 %sub100, %76, !dbg !12007
  br i1 %cmp101, label %if.then107, label %lor.lhs.false103, !dbg !12008

lor.lhs.false103:                                 ; preds = %for.body95
  %77 = load i32, i32* %ilast.addr, align 4, !dbg !12009
  %78 = load i32, i32* %bb, align 4, !dbg !12010
  %sub104 = sub nsw i32 %77, %78, !dbg !12011
  %79 = load %struct.BodySpring*, %struct.BodySpring** %bs, align 8, !dbg !12012
  %v1 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %79, i32 0, i32 0, !dbg !12013
  %80 = load i32, i32* %v1, align 4, !dbg !12013
  %cmp105 = icmp eq i32 %sub104, %80, !dbg !12014
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !12015

if.then107:                                       ; preds = %lor.lhs.false103, %for.body95
  store i32 1, i32* %attached, align 4, !dbg !12016
  br label %for.inc, !dbg !12018

if.end108:                                        ; preds = %lor.lhs.false103
  br label %for.inc, !dbg !12019

for.inc:                                          ; preds = %if.end108, %if.then107
  %81 = load i32, i32* %b, align 4, !dbg !12020
  %dec = add nsw i32 %81, -1, !dbg !12020
  store i32 %dec, i32* %b, align 4, !dbg !12020
  br label %for.cond92, !dbg !12021, !llvm.loop !12022

for.end:                                          ; preds = %for.cond92
  %82 = load i32, i32* %attached, align 4, !dbg !12024
  %tobool109 = icmp ne i32 %82, 0, !dbg !12024
  br i1 %tobool109, label %if.end153, label %if.then110, !dbg !12026

if.then110:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %f, metadata !12027, metadata !DIExpression()), !dbg !12029
  %83 = load float, float* %bstune, align 4, !dbg !12030
  %84 = load float, float* %distance, align 4, !dbg !12031
  %div = fdiv float %83, %84, !dbg !12032
  %85 = load float, float* %bstune, align 4, !dbg !12033
  %86 = load float, float* %compare, align 4, !dbg !12034
  %87 = load float, float* %compare, align 4, !dbg !12035
  %mul = fmul float %86, %87, !dbg !12036
  %div111 = fdiv float %85, %mul, !dbg !12037
  %88 = load float, float* %distance, align 4, !dbg !12038
  %mul112 = fmul float %div111, %88, !dbg !12039
  %add113 = fadd float %div, %mul112, !dbg !12040
  %89 = load float, float* %bstune, align 4, !dbg !12041
  %mul114 = fmul float 2.000000e+00, %89, !dbg !12042
  %90 = load float, float* %compare, align 4, !dbg !12043
  %div115 = fdiv float %mul114, %90, !dbg !12044
  %sub116 = fsub float %add113, %div115, !dbg !12045
  store float %sub116, float* %f, align 4, !dbg !12029
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !12046
  %91 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12047
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %91, i32 0, i32 4, !dbg !12048
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12047
  %92 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !12049
  %vec119 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %92, i32 0, i32 4, !dbg !12050
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %vec119, i64 0, i64 0, !dbg !12049
  call void @mid_v3_v3v3(float* %arraydecay117, float* %arraydecay118, float* %arraydecay120), !dbg !12051
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12052
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !12053
  %93 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12054
  %vec123 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %93, i32 0, i32 4, !dbg !12055
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %vec123, i64 0, i64 0, !dbg !12054
  call void @sub_v3_v3v3(float* %arraydecay121, float* %arraydecay122, float* %arraydecay124), !dbg !12056
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12057
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12058
  %95 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12059
  %call126 = call float @_final_mass(%struct.Object* %94, %struct.BodyPoint* %95), !dbg !12060
  call void @mul_v3_fl(float* %arraydecay125, float %call126), !dbg !12061
  %96 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12062
  %force127 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %96, i32 0, i32 5, !dbg !12063
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %force127, i64 0, i64 0, !dbg !12062
  %97 = load float, float* %f, align 4, !dbg !12064
  %98 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12065
  %balldamp = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %98, i32 0, i32 34, !dbg !12066
  %99 = load float, float* %balldamp, align 8, !dbg !12066
  %sub129 = fsub float 1.000000e+00, %99, !dbg !12067
  %mul130 = fmul float %97, %sub129, !dbg !12068
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !12069
  call void @Vec3PlusStVec(float* %arraydecay128, float %mul130, float* %arraydecay131), !dbg !12070
  %100 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12071
  %force132 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %100, i32 0, i32 5, !dbg !12072
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %force132, i64 0, i64 0, !dbg !12071
  %101 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12073
  %balldamp134 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %101, i32 0, i32 34, !dbg !12074
  %102 = load float, float* %balldamp134, align 8, !dbg !12074
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12075
  call void @Vec3PlusStVec(float* %arraydecay133, float %102, float* %arraydecay135), !dbg !12076
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12077
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %velcenter, i64 0, i64 0, !dbg !12078
  %103 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !12079
  %vec138 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %103, i32 0, i32 4, !dbg !12080
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %vec138, i64 0, i64 0, !dbg !12079
  call void @sub_v3_v3v3(float* %arraydecay136, float* %arraydecay137, float* %arraydecay139), !dbg !12081
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12082
  %104 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12083
  %105 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12084
  %call141 = call float @_final_mass(%struct.Object* %104, %struct.BodyPoint* %105), !dbg !12085
  call void @mul_v3_fl(float* %arraydecay140, float %call141), !dbg !12086
  %106 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !12087
  %force142 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %106, i32 0, i32 5, !dbg !12088
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %force142, i64 0, i64 0, !dbg !12087
  %107 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12089
  %balldamp144 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %107, i32 0, i32 34, !dbg !12090
  %108 = load float, float* %balldamp144, align 8, !dbg !12090
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %dvel, i64 0, i64 0, !dbg !12091
  call void @Vec3PlusStVec(float* %arraydecay143, float %108, float* %arraydecay145), !dbg !12092
  %109 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !12093
  %force146 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %109, i32 0, i32 5, !dbg !12094
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %force146, i64 0, i64 0, !dbg !12093
  %110 = load float, float* %f, align 4, !dbg !12095
  %fneg148 = fneg float %110, !dbg !12096
  %111 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12097
  %balldamp149 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %111, i32 0, i32 34, !dbg !12098
  %112 = load float, float* %balldamp149, align 8, !dbg !12098
  %sub150 = fsub float 1.000000e+00, %112, !dbg !12099
  %mul151 = fmul float %fneg148, %sub150, !dbg !12100
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %def, i64 0, i64 0, !dbg !12101
  call void @Vec3PlusStVec(float* %arraydecay147, float %mul151, float* %arraydecay152), !dbg !12102
  br label %if.end153, !dbg !12103

if.end153:                                        ; preds = %if.then110, %for.end
  br label %if.end154, !dbg !12104

if.end154:                                        ; preds = %if.end153, %if.end86
  br label %for.inc155, !dbg !12105

for.inc155:                                       ; preds = %if.end154, %if.then85
  %113 = load i32, i32* %c, align 4, !dbg !12106
  %dec156 = add nsw i32 %113, -1, !dbg !12106
  store i32 %dec156, i32* %c, align 4, !dbg !12106
  %114 = load %struct.BodyPoint*, %struct.BodyPoint** %obp, align 8, !dbg !12107
  %incdec.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %114, i32 1, !dbg !12107
  store %struct.BodyPoint* %incdec.ptr, %struct.BodyPoint** %obp, align 8, !dbg !12107
  br label %for.cond44, !dbg !12108, !llvm.loop !12109

for.end157:                                       ; preds = %for.cond44
  br label %if.end158, !dbg !12111

if.end158:                                        ; preds = %for.end157, %for.body
  %115 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12112
  %116 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12114
  %call159 = call float @_final_goal(%struct.Object* %115, %struct.BodyPoint* %116), !dbg !12115
  %cmp160 = fcmp olt float %call159, 0x3FEFF7CEE0000000, !dbg !12116
  br i1 %cmp160, label %if.then162, label %if.end435, !dbg !12117

if.then162:                                       ; preds = %if.end158
  call void @llvm.dbg.declare(metadata [3 x float]* %auxvect, metadata !12118, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.declare(metadata [3 x float]* %velgoal, metadata !12121, metadata !DIExpression()), !dbg !12122
  %117 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12123
  %softflag163 = getelementptr inbounds %struct.Object, %struct.Object* %117, i32 0, i32 104, !dbg !12125
  %118 = load i16, i16* %softflag163, align 2, !dbg !12125
  %conv164 = sext i16 %118 to i32, !dbg !12123
  %and165 = and i32 %conv164, 2, !dbg !12126
  %tobool166 = icmp ne i32 %and165, 0, !dbg !12126
  br i1 %tobool166, label %if.then167, label %if.end248, !dbg !12127

if.then167:                                       ; preds = %if.then162
  call void @llvm.dbg.declare(metadata float* %ks, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.declare(metadata float* %kd, metadata !12131, metadata !DIExpression()), !dbg !12132
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !12133
  %119 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12134
  %pos169 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %119, i32 0, i32 3, !dbg !12135
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %pos169, i64 0, i64 0, !dbg !12134
  %120 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12136
  %origT = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %120, i32 0, i32 2, !dbg !12137
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %origT, i64 0, i64 0, !dbg !12136
  call void @sub_v3_v3v3(float* %arraydecay168, float* %arraydecay170, float* %arraydecay171), !dbg !12138
  %121 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12139
  %122 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12140
  %call172 = call float @_final_goal(%struct.Object* %121, %struct.BodyPoint* %122), !dbg !12141
  %123 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12142
  %goalspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %123, i32 0, i32 13, !dbg !12143
  %124 = load float, float* %goalspring, align 8, !dbg !12143
  %mul173 = fmul float %call172, %124, !dbg !12144
  %sub174 = fsub float 1.000000e+00, %mul173, !dbg !12145
  %div175 = fdiv float 1.000000e+00, %sub174, !dbg !12146
  %sub176 = fsub float %div175, 1.000000e+00, !dbg !12147
  store float %sub176, float* %ks, align 4, !dbg !12148
  %125 = load float, float* %ks, align 4, !dbg !12149
  %fneg177 = fneg float %125, !dbg !12150
  %arrayidx178 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !12151
  %126 = load float, float* %arrayidx178, align 4, !dbg !12151
  %mul179 = fmul float %fneg177, %126, !dbg !12152
  %127 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12153
  %force180 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %127, i32 0, i32 5, !dbg !12154
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %force180, i64 0, i64 0, !dbg !12153
  %128 = load float, float* %arrayidx181, align 4, !dbg !12155
  %add182 = fadd float %128, %mul179, !dbg !12155
  store float %add182, float* %arrayidx181, align 4, !dbg !12155
  %129 = load float, float* %ks, align 4, !dbg !12156
  %fneg183 = fneg float %129, !dbg !12157
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 1, !dbg !12158
  %130 = load float, float* %arrayidx184, align 4, !dbg !12158
  %mul185 = fmul float %fneg183, %130, !dbg !12159
  %131 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12160
  %force186 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %131, i32 0, i32 5, !dbg !12161
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %force186, i64 0, i64 1, !dbg !12160
  %132 = load float, float* %arrayidx187, align 4, !dbg !12162
  %add188 = fadd float %132, %mul185, !dbg !12162
  store float %add188, float* %arrayidx187, align 4, !dbg !12162
  %133 = load float, float* %ks, align 4, !dbg !12163
  %fneg189 = fneg float %133, !dbg !12164
  %arrayidx190 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 2, !dbg !12165
  %134 = load float, float* %arrayidx190, align 4, !dbg !12165
  %mul191 = fmul float %fneg189, %134, !dbg !12166
  %135 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12167
  %force192 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %135, i32 0, i32 5, !dbg !12168
  %arrayidx193 = getelementptr inbounds [3 x float], [3 x float]* %force192, i64 0, i64 2, !dbg !12167
  %136 = load float, float* %arrayidx193, align 4, !dbg !12169
  %add194 = fadd float %136, %mul191, !dbg !12169
  store float %add194, float* %arrayidx193, align 4, !dbg !12169
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !12170
  %137 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12171
  %origS = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %137, i32 0, i32 0, !dbg !12172
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %origS, i64 0, i64 0, !dbg !12171
  %138 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12173
  %origE = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %138, i32 0, i32 1, !dbg !12174
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %origE, i64 0, i64 0, !dbg !12173
  call void @sub_v3_v3v3(float* %arraydecay195, float* %arraydecay196, float* %arraydecay197), !dbg !12175
  %139 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12176
  %goalfrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %139, i32 0, i32 14, !dbg !12177
  %140 = load float, float* %goalfrict, align 4, !dbg !12177
  %141 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12178
  %call198 = call float @sb_fric_force_scale(%struct.Object* %141), !dbg !12179
  %mul199 = fmul float %140, %call198, !dbg !12180
  store float %mul199, float* %kd, align 4, !dbg !12181
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !12182
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !12183
  %142 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12184
  %vec202 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %142, i32 0, i32 4, !dbg !12185
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %vec202, i64 0, i64 0, !dbg !12184
  call void @add_v3_v3v3(float* %arraydecay200, float* %arraydecay201, float* %arraydecay203), !dbg !12186
  %143 = load float, float* %forcetime.addr, align 4, !dbg !12187
  %cmp204 = fcmp ogt float %143, 0.000000e+00, !dbg !12189
  br i1 %cmp204, label %if.then206, label %if.else222, !dbg !12190

if.then206:                                       ; preds = %if.then167
  %144 = load float, float* %kd, align 4, !dbg !12191
  %arrayidx207 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 0, !dbg !12193
  %145 = load float, float* %arrayidx207, align 4, !dbg !12193
  %mul208 = fmul float %144, %145, !dbg !12194
  %146 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12195
  %force209 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %146, i32 0, i32 5, !dbg !12196
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %force209, i64 0, i64 0, !dbg !12195
  %147 = load float, float* %arrayidx210, align 4, !dbg !12197
  %sub211 = fsub float %147, %mul208, !dbg !12197
  store float %sub211, float* %arrayidx210, align 4, !dbg !12197
  %148 = load float, float* %kd, align 4, !dbg !12198
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 1, !dbg !12199
  %149 = load float, float* %arrayidx212, align 4, !dbg !12199
  %mul213 = fmul float %148, %149, !dbg !12200
  %150 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12201
  %force214 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %150, i32 0, i32 5, !dbg !12202
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %force214, i64 0, i64 1, !dbg !12201
  %151 = load float, float* %arrayidx215, align 4, !dbg !12203
  %sub216 = fsub float %151, %mul213, !dbg !12203
  store float %sub216, float* %arrayidx215, align 4, !dbg !12203
  %152 = load float, float* %kd, align 4, !dbg !12204
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %auxvect, i64 0, i64 2, !dbg !12205
  %153 = load float, float* %arrayidx217, align 4, !dbg !12205
  %mul218 = fmul float %152, %153, !dbg !12206
  %154 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12207
  %force219 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %154, i32 0, i32 5, !dbg !12208
  %arrayidx220 = getelementptr inbounds [3 x float], [3 x float]* %force219, i64 0, i64 2, !dbg !12207
  %155 = load float, float* %arrayidx220, align 4, !dbg !12209
  %sub221 = fsub float %155, %mul218, !dbg !12209
  store float %sub221, float* %arrayidx220, align 4, !dbg !12209
  br label %if.end247, !dbg !12210

if.else222:                                       ; preds = %if.then167
  %156 = load float, float* %kd, align 4, !dbg !12211
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 0, !dbg !12213
  %157 = load float, float* %arrayidx223, align 4, !dbg !12213
  %158 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12214
  %vec224 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %158, i32 0, i32 4, !dbg !12215
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %vec224, i64 0, i64 0, !dbg !12214
  %159 = load float, float* %arrayidx225, align 8, !dbg !12214
  %sub226 = fsub float %157, %159, !dbg !12216
  %mul227 = fmul float %156, %sub226, !dbg !12217
  %160 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12218
  %force228 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %160, i32 0, i32 5, !dbg !12219
  %arrayidx229 = getelementptr inbounds [3 x float], [3 x float]* %force228, i64 0, i64 0, !dbg !12218
  %161 = load float, float* %arrayidx229, align 4, !dbg !12220
  %sub230 = fsub float %161, %mul227, !dbg !12220
  store float %sub230, float* %arrayidx229, align 4, !dbg !12220
  %162 = load float, float* %kd, align 4, !dbg !12221
  %arrayidx231 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 1, !dbg !12222
  %163 = load float, float* %arrayidx231, align 4, !dbg !12222
  %164 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12223
  %vec232 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %164, i32 0, i32 4, !dbg !12224
  %arrayidx233 = getelementptr inbounds [3 x float], [3 x float]* %vec232, i64 0, i64 1, !dbg !12223
  %165 = load float, float* %arrayidx233, align 4, !dbg !12223
  %sub234 = fsub float %163, %165, !dbg !12225
  %mul235 = fmul float %162, %sub234, !dbg !12226
  %166 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12227
  %force236 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %166, i32 0, i32 5, !dbg !12228
  %arrayidx237 = getelementptr inbounds [3 x float], [3 x float]* %force236, i64 0, i64 1, !dbg !12227
  %167 = load float, float* %arrayidx237, align 4, !dbg !12229
  %sub238 = fsub float %167, %mul235, !dbg !12229
  store float %sub238, float* %arrayidx237, align 4, !dbg !12229
  %168 = load float, float* %kd, align 4, !dbg !12230
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %velgoal, i64 0, i64 2, !dbg !12231
  %169 = load float, float* %arrayidx239, align 4, !dbg !12231
  %170 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12232
  %vec240 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %170, i32 0, i32 4, !dbg !12233
  %arrayidx241 = getelementptr inbounds [3 x float], [3 x float]* %vec240, i64 0, i64 2, !dbg !12232
  %171 = load float, float* %arrayidx241, align 8, !dbg !12232
  %sub242 = fsub float %169, %171, !dbg !12234
  %mul243 = fmul float %168, %sub242, !dbg !12235
  %172 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12236
  %force244 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %172, i32 0, i32 5, !dbg !12237
  %arrayidx245 = getelementptr inbounds [3 x float], [3 x float]* %force244, i64 0, i64 2, !dbg !12236
  %173 = load float, float* %arrayidx245, align 4, !dbg !12238
  %sub246 = fsub float %173, %mul243, !dbg !12238
  store float %sub246, float* %arrayidx245, align 4, !dbg !12238
  br label %if.end247

if.end247:                                        ; preds = %if.else222, %if.then206
  br label %if.end248, !dbg !12239

if.end248:                                        ; preds = %if.end247, %if.then162
  %174 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12240
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %174, i32 0, i32 40, !dbg !12242
  %flag = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 1, !dbg !12243
  %175 = load i32, i32* %flag, align 4, !dbg !12243
  %and249 = and i32 %175, 1, !dbg !12244
  %tobool250 = icmp ne i32 %and249, 0, !dbg !12244
  br i1 %tobool250, label %if.then251, label %if.end264, !dbg !12245

if.then251:                                       ; preds = %if.end248
  call void @llvm.dbg.declare(metadata [3 x float]* %gravity, metadata !12246, metadata !DIExpression()), !dbg !12248
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !12249
  %176 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12250
  %physics_settings253 = getelementptr inbounds %struct.Scene, %struct.Scene* %176, i32 0, i32 40, !dbg !12251
  %gravity254 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings253, i32 0, i32 0, !dbg !12252
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %gravity254, i64 0, i64 0, !dbg !12250
  call void @copy_v3_v3(float* %arraydecay252, float* %arraydecay255), !dbg !12253
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !12254
  %177 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12255
  %call257 = call float @sb_grav_force_scale(%struct.Object* %177), !dbg !12256
  %178 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12257
  %179 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12258
  %call258 = call float @_final_mass(%struct.Object* %178, %struct.BodyPoint* %179), !dbg !12259
  %mul259 = fmul float %call257, %call258, !dbg !12260
  %180 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12261
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %180, i32 0, i32 49, !dbg !12262
  %181 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !12262
  %global_gravity = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %181, i32 0, i32 2, !dbg !12263
  %182 = load float, float* %global_gravity, align 8, !dbg !12263
  %mul260 = fmul float %mul259, %182, !dbg !12264
  call void @mul_v3_fl(float* %arraydecay256, float %mul260), !dbg !12265
  %183 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12266
  %force261 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %183, i32 0, i32 5, !dbg !12267
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %force261, i64 0, i64 0, !dbg !12266
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !12268
  call void @add_v3_v3(float* %arraydecay262, float* %arraydecay263), !dbg !12269
  br label %if.end264, !dbg !12270

if.end264:                                        ; preds = %if.then251, %if.end248
  %184 = load %struct.ListBase*, %struct.ListBase** %do_effector.addr, align 8, !dbg !12271
  %tobool265 = icmp ne %struct.ListBase* %184, null, !dbg !12271
  br i1 %tobool265, label %if.then266, label %if.else315, !dbg !12273

if.then266:                                       ; preds = %if.end264
  call void @llvm.dbg.declare(metadata %struct.EffectedPoint* %epoint, metadata !12274, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata float* %kd267, metadata !12277, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata [3 x float]* %force268, metadata !12279, metadata !DIExpression()), !dbg !12280
  %185 = bitcast [3 x float]* %force268 to i8*, !dbg !12280
  call void @llvm.memset.p0i8.i64(i8* align 4 %185, i8 0, i64 12, i1 false), !dbg !12280
  call void @llvm.dbg.declare(metadata [3 x float]* %speed, metadata !12281, metadata !DIExpression()), !dbg !12282
  %186 = bitcast [3 x float]* %speed to i8*, !dbg !12282
  call void @llvm.memset.p0i8.i64(i8* align 4 %186, i8 0, i64 12, i1 false), !dbg !12282
  call void @llvm.dbg.declare(metadata float* %eval_sb_fric_force_scale, metadata !12283, metadata !DIExpression()), !dbg !12284
  %187 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12285
  %call269 = call float @sb_fric_force_scale(%struct.Object* %187), !dbg !12286
  store float %call269, float* %eval_sb_fric_force_scale, align 4, !dbg !12284
  %188 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12287
  %189 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12288
  %pos270 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %189, i32 0, i32 3, !dbg !12289
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %pos270, i64 0, i64 0, !dbg !12288
  %190 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12290
  %vec272 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %190, i32 0, i32 4, !dbg !12291
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %vec272, i64 0, i64 0, !dbg !12290
  %191 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12292
  %bpoint274 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %191, i32 0, i32 2, !dbg !12293
  %192 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint274, align 8, !dbg !12293
  %193 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12294
  %sub.ptr.lhs.cast = ptrtoint %struct.BodyPoint* %192 to i64, !dbg !12295
  %sub.ptr.rhs.cast = ptrtoint %struct.BodyPoint* %193 to i64, !dbg !12295
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12295
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 192, !dbg !12295
  %conv275 = trunc i64 %sub.ptr.div to i32, !dbg !12292
  call void @pd_point_from_soft(%struct.Scene* %188, float* %arraydecay271, float* %arraydecay273, i32 %conv275, %struct.EffectedPoint* %epoint), !dbg !12296
  %194 = load %struct.ListBase*, %struct.ListBase** %do_effector.addr, align 8, !dbg !12297
  %195 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12298
  %effector_weights276 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %195, i32 0, i32 49, !dbg !12299
  %196 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights276, align 8, !dbg !12299
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %force268, i64 0, i64 0, !dbg !12300
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !12301
  call void @pdDoEffectors(%struct.ListBase* %194, %struct.ListBase* null, %struct.EffectorWeights* %196, %struct.EffectedPoint* %epoint, float* %arraydecay277, float* %arraydecay278), !dbg !12302
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %force268, i64 0, i64 0, !dbg !12303
  %197 = load float, float* %fieldfactor.addr, align 4, !dbg !12304
  %198 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !12305
  %mul280 = fmul float %197, %198, !dbg !12306
  call void @mul_v3_fl(float* %arraydecay279, float %mul280), !dbg !12307
  %199 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12308
  %force281 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %199, i32 0, i32 5, !dbg !12309
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %force281, i64 0, i64 0, !dbg !12308
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %force268, i64 0, i64 0, !dbg !12310
  call void @add_v3_v3(float* %arraydecay282, float* %arraydecay283), !dbg !12311
  %200 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12312
  %mediafrict = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %200, i32 0, i32 10, !dbg !12313
  %201 = load float, float* %mediafrict, align 4, !dbg !12313
  %202 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !12314
  %mul284 = fmul float %201, %202, !dbg !12315
  store float %mul284, float* %kd267, align 4, !dbg !12316
  %203 = load float, float* %kd267, align 4, !dbg !12317
  %204 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12318
  %vec285 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %204, i32 0, i32 4, !dbg !12319
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %vec285, i64 0, i64 0, !dbg !12318
  %205 = load float, float* %arrayidx286, align 8, !dbg !12318
  %206 = load float, float* %windfactor.addr, align 4, !dbg !12320
  %arrayidx287 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 0, !dbg !12321
  %207 = load float, float* %arrayidx287, align 4, !dbg !12321
  %mul288 = fmul float %206, %207, !dbg !12322
  %208 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !12323
  %div289 = fdiv float %mul288, %208, !dbg !12324
  %add290 = fadd float %205, %div289, !dbg !12325
  %mul291 = fmul float %203, %add290, !dbg !12326
  %209 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12327
  %force292 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %209, i32 0, i32 5, !dbg !12328
  %arrayidx293 = getelementptr inbounds [3 x float], [3 x float]* %force292, i64 0, i64 0, !dbg !12327
  %210 = load float, float* %arrayidx293, align 4, !dbg !12329
  %sub294 = fsub float %210, %mul291, !dbg !12329
  store float %sub294, float* %arrayidx293, align 4, !dbg !12329
  %211 = load float, float* %kd267, align 4, !dbg !12330
  %212 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12331
  %vec295 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %212, i32 0, i32 4, !dbg !12332
  %arrayidx296 = getelementptr inbounds [3 x float], [3 x float]* %vec295, i64 0, i64 1, !dbg !12331
  %213 = load float, float* %arrayidx296, align 4, !dbg !12331
  %214 = load float, float* %windfactor.addr, align 4, !dbg !12333
  %arrayidx297 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 1, !dbg !12334
  %215 = load float, float* %arrayidx297, align 4, !dbg !12334
  %mul298 = fmul float %214, %215, !dbg !12335
  %216 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !12336
  %div299 = fdiv float %mul298, %216, !dbg !12337
  %add300 = fadd float %213, %div299, !dbg !12338
  %mul301 = fmul float %211, %add300, !dbg !12339
  %217 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12340
  %force302 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %217, i32 0, i32 5, !dbg !12341
  %arrayidx303 = getelementptr inbounds [3 x float], [3 x float]* %force302, i64 0, i64 1, !dbg !12340
  %218 = load float, float* %arrayidx303, align 4, !dbg !12342
  %sub304 = fsub float %218, %mul301, !dbg !12342
  store float %sub304, float* %arrayidx303, align 4, !dbg !12342
  %219 = load float, float* %kd267, align 4, !dbg !12343
  %220 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12344
  %vec305 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %220, i32 0, i32 4, !dbg !12345
  %arrayidx306 = getelementptr inbounds [3 x float], [3 x float]* %vec305, i64 0, i64 2, !dbg !12344
  %221 = load float, float* %arrayidx306, align 8, !dbg !12344
  %222 = load float, float* %windfactor.addr, align 4, !dbg !12346
  %arrayidx307 = getelementptr inbounds [3 x float], [3 x float]* %speed, i64 0, i64 2, !dbg !12347
  %223 = load float, float* %arrayidx307, align 4, !dbg !12347
  %mul308 = fmul float %222, %223, !dbg !12348
  %224 = load float, float* %eval_sb_fric_force_scale, align 4, !dbg !12349
  %div309 = fdiv float %mul308, %224, !dbg !12350
  %add310 = fadd float %221, %div309, !dbg !12351
  %mul311 = fmul float %219, %add310, !dbg !12352
  %225 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12353
  %force312 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %225, i32 0, i32 5, !dbg !12354
  %arrayidx313 = getelementptr inbounds [3 x float], [3 x float]* %force312, i64 0, i64 2, !dbg !12353
  %226 = load float, float* %arrayidx313, align 4, !dbg !12355
  %sub314 = fsub float %226, %mul311, !dbg !12355
  store float %sub314, float* %arrayidx313, align 4, !dbg !12355
  br label %if.end338, !dbg !12356

if.else315:                                       ; preds = %if.end264
  call void @llvm.dbg.declare(metadata float* %kd316, metadata !12357, metadata !DIExpression()), !dbg !12359
  %227 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12360
  %mediafrict317 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %227, i32 0, i32 10, !dbg !12361
  %228 = load float, float* %mediafrict317, align 4, !dbg !12361
  %229 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12362
  %call318 = call float @sb_fric_force_scale(%struct.Object* %229), !dbg !12363
  %mul319 = fmul float %228, %call318, !dbg !12364
  store float %mul319, float* %kd316, align 4, !dbg !12359
  %230 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12365
  %vec320 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %230, i32 0, i32 4, !dbg !12366
  %arrayidx321 = getelementptr inbounds [3 x float], [3 x float]* %vec320, i64 0, i64 0, !dbg !12365
  %231 = load float, float* %arrayidx321, align 8, !dbg !12365
  %232 = load float, float* %kd316, align 4, !dbg !12367
  %mul322 = fmul float %231, %232, !dbg !12368
  %233 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12369
  %force323 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %233, i32 0, i32 5, !dbg !12370
  %arrayidx324 = getelementptr inbounds [3 x float], [3 x float]* %force323, i64 0, i64 0, !dbg !12369
  %234 = load float, float* %arrayidx324, align 4, !dbg !12371
  %sub325 = fsub float %234, %mul322, !dbg !12371
  store float %sub325, float* %arrayidx324, align 4, !dbg !12371
  %235 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12372
  %vec326 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %235, i32 0, i32 4, !dbg !12373
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %vec326, i64 0, i64 1, !dbg !12372
  %236 = load float, float* %arrayidx327, align 4, !dbg !12372
  %237 = load float, float* %kd316, align 4, !dbg !12374
  %mul328 = fmul float %236, %237, !dbg !12375
  %238 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12376
  %force329 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %238, i32 0, i32 5, !dbg !12377
  %arrayidx330 = getelementptr inbounds [3 x float], [3 x float]* %force329, i64 0, i64 1, !dbg !12376
  %239 = load float, float* %arrayidx330, align 4, !dbg !12378
  %sub331 = fsub float %239, %mul328, !dbg !12378
  store float %sub331, float* %arrayidx330, align 4, !dbg !12378
  %240 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12379
  %vec332 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %240, i32 0, i32 4, !dbg !12380
  %arrayidx333 = getelementptr inbounds [3 x float], [3 x float]* %vec332, i64 0, i64 2, !dbg !12379
  %241 = load float, float* %arrayidx333, align 8, !dbg !12379
  %242 = load float, float* %kd316, align 4, !dbg !12381
  %mul334 = fmul float %241, %242, !dbg !12382
  %243 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12383
  %force335 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %243, i32 0, i32 5, !dbg !12384
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %force335, i64 0, i64 2, !dbg !12383
  %244 = load float, float* %arrayidx336, align 4, !dbg !12385
  %sub337 = fsub float %244, %mul334, !dbg !12385
  store float %sub337, float* %arrayidx336, align 4, !dbg !12385
  br label %if.end338

if.end338:                                        ; preds = %if.else315, %if.then266
  %245 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12386
  %choke = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %245, i32 0, i32 15, !dbg !12387
  store float 0.000000e+00, float* %choke, align 8, !dbg !12388
  %246 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12389
  %choke2 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %246, i32 0, i32 16, !dbg !12390
  store float 0.000000e+00, float* %choke2, align 4, !dbg !12391
  %247 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12392
  %loc_flag = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %247, i32 0, i32 19, !dbg !12393
  %248 = load i16, i16* %loc_flag, align 8, !dbg !12394
  %conv339 = sext i16 %248 to i32, !dbg !12394
  %and340 = and i32 %conv339, -2, !dbg !12394
  %conv341 = trunc i32 %and340 to i16, !dbg !12394
  store i16 %conv341, i16* %loc_flag, align 8, !dbg !12394
  %249 = load i32, i32* %do_deflector.addr, align 4, !dbg !12395
  %tobool342 = icmp ne i32 %249, 0, !dbg !12395
  br i1 %tobool342, label %land.lhs.true343, label %if.end387, !dbg !12397

land.lhs.true343:                                 ; preds = %if.end338
  %250 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12398
  %loc_flag344 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %250, i32 0, i32 19, !dbg !12399
  %251 = load i16, i16* %loc_flag344, align 8, !dbg !12399
  %conv345 = sext i16 %251 to i32, !dbg !12398
  %and346 = and i32 %conv345, 2, !dbg !12400
  %tobool347 = icmp ne i32 %and346, 0, !dbg !12400
  br i1 %tobool347, label %if.end387, label %if.then348, !dbg !12401

if.then348:                                       ; preds = %land.lhs.true343
  call void @llvm.dbg.declare(metadata [3 x float]* %cfforce, metadata !12402, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.declare(metadata [3 x float]* %defforce, metadata !12405, metadata !DIExpression()), !dbg !12406
  %252 = bitcast [3 x float]* %defforce to i8*, !dbg !12406
  call void @llvm.memset.p0i8.i64(i8* align 4 %252, i8 0, i64 12, i1 false), !dbg !12406
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !12407, metadata !DIExpression()), !dbg !12408
  %253 = bitcast [3 x float]* %vel to i8*, !dbg !12408
  call void @llvm.memset.p0i8.i64(i8* align 4 %253, i8 0, i64 12, i1 false), !dbg !12408
  call void @llvm.dbg.declare(metadata [3 x float]* %facenormal, metadata !12409, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.declare(metadata float* %cf, metadata !12411, metadata !DIExpression()), !dbg !12412
  store float 1.000000e+00, float* %cf, align 4, !dbg !12412
  call void @llvm.dbg.declare(metadata float* %intrusion, metadata !12413, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.declare(metadata float* %kd349, metadata !12415, metadata !DIExpression()), !dbg !12416
  store float 1.000000e+00, float* %kd349, align 4, !dbg !12416
  %254 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12417
  %255 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12419
  %pos350 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %255, i32 0, i32 3, !dbg !12420
  %arraydecay351 = getelementptr inbounds [3 x float], [3 x float]* %pos350, i64 0, i64 0, !dbg !12419
  %arraydecay352 = getelementptr inbounds [3 x float], [3 x float]* %facenormal, i64 0, i64 0, !dbg !12421
  %arraydecay353 = getelementptr inbounds [3 x float], [3 x float]* %defforce, i64 0, i64 0, !dbg !12422
  %256 = load float, float* %timenow.addr, align 4, !dbg !12423
  %arraydecay354 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12424
  %call355 = call i32 @sb_deflect_face(%struct.Object* %254, float* %arraydecay351, float* %arraydecay352, float* %arraydecay353, float* %cf, float %256, float* %arraydecay354, float* %intrusion), !dbg !12425
  %tobool356 = icmp ne i32 %call355, 0, !dbg !12425
  br i1 %tobool356, label %if.then357, label %if.end386, !dbg !12426

if.then357:                                       ; preds = %if.then348
  %257 = load float, float* %intrusion, align 4, !dbg !12427
  %cmp358 = fcmp olt float %257, 0.000000e+00, !dbg !12430
  br i1 %cmp358, label %if.then360, label %if.end373, !dbg !12431

if.then360:                                       ; preds = %if.then357
  %258 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12432
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %258, i32 0, i32 44, !dbg !12434
  %259 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !12434
  %flag361 = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %259, i32 0, i32 2, !dbg !12435
  %260 = load i16, i16* %flag361, align 2, !dbg !12436
  %conv362 = sext i16 %260 to i32, !dbg !12436
  %or = or i32 %conv362, 1, !dbg !12436
  %conv363 = trunc i32 %or to i16, !dbg !12436
  store i16 %conv363, i16* %flag361, align 2, !dbg !12436
  %261 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12437
  %loc_flag364 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %261, i32 0, i32 19, !dbg !12438
  %262 = load i16, i16* %loc_flag364, align 8, !dbg !12439
  %conv365 = sext i16 %262 to i32, !dbg !12439
  %or366 = or i32 %conv365, 1, !dbg !12439
  %conv367 = trunc i32 %or366 to i16, !dbg !12439
  store i16 %conv367, i16* %loc_flag364, align 8, !dbg !12439
  %263 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12440
  %choke368 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %263, i32 0, i32 40, !dbg !12441
  %264 = load i16, i16* %choke368, align 8, !dbg !12441
  %conv369 = sext i16 %264 to i32, !dbg !12440
  %conv370 = sitofp i32 %conv369 to float, !dbg !12440
  %mul371 = fmul float %conv370, 0x3F847AE140000000, !dbg !12442
  %265 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12443
  %choke372 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %265, i32 0, i32 15, !dbg !12444
  store float %mul371, float* %choke372, align 8, !dbg !12445
  br label %if.end373, !dbg !12446

if.end373:                                        ; preds = %if.then360, %if.then357
  %arraydecay374 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !12447
  %266 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12448
  %vec375 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %266, i32 0, i32 4, !dbg !12449
  %arraydecay376 = getelementptr inbounds [3 x float], [3 x float]* %vec375, i64 0, i64 0, !dbg !12448
  %arraydecay377 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12450
  call void @sub_v3_v3v3(float* %arraydecay374, float* %arraydecay376, float* %arraydecay377), !dbg !12451
  %267 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12452
  %force378 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %267, i32 0, i32 5, !dbg !12453
  %arraydecay379 = getelementptr inbounds [3 x float], [3 x float]* %force378, i64 0, i64 0, !dbg !12452
  %268 = load float, float* %cf, align 4, !dbg !12454
  %fneg380 = fneg float %268, !dbg !12455
  %mul381 = fmul float %fneg380, 5.000000e+01, !dbg !12456
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %cfforce, i64 0, i64 0, !dbg !12457
  call void @Vec3PlusStVec(float* %arraydecay379, float %mul381, float* %arraydecay382), !dbg !12458
  %269 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12459
  %force383 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %269, i32 0, i32 5, !dbg !12460
  %arraydecay384 = getelementptr inbounds [3 x float], [3 x float]* %force383, i64 0, i64 0, !dbg !12459
  %270 = load float, float* %kd349, align 4, !dbg !12461
  %arraydecay385 = getelementptr inbounds [3 x float], [3 x float]* %defforce, i64 0, i64 0, !dbg !12462
  call void @Vec3PlusStVec(float* %arraydecay384, float %270, float* %arraydecay385), !dbg !12463
  br label %if.end386, !dbg !12464

if.end386:                                        ; preds = %if.end373, %if.then348
  br label %if.end387, !dbg !12465

if.end387:                                        ; preds = %if.end386, %land.lhs.true343, %if.end338
  %271 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12466
  %inspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %271, i32 0, i32 21, !dbg !12467
  %272 = load float, float* %inspring, align 8, !dbg !12467
  %sub388 = fsub float 1.000000e+00, %272, !dbg !12468
  %div389 = fdiv float 1.000000e+00, %sub388, !dbg !12469
  %sub390 = fsub float %div389, 1.000000e+00, !dbg !12470
  store float %sub390, float* %iks, align 4, !dbg !12471
  %273 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12472
  %softflag391 = getelementptr inbounds %struct.Object, %struct.Object* %273, i32 0, i32 104, !dbg !12474
  %274 = load i16, i16* %softflag391, align 2, !dbg !12474
  %conv392 = sext i16 %274 to i32, !dbg !12472
  %and393 = and i32 %conv392, 4, !dbg !12475
  %tobool394 = icmp ne i32 %and393, 0, !dbg !12475
  br i1 %tobool394, label %if.then395, label %if.end434, !dbg !12476

if.then395:                                       ; preds = %if.end387
  %275 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12477
  %bspring396 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %275, i32 0, i32 3, !dbg !12480
  %276 = load %struct.BodySpring*, %struct.BodySpring** %bspring396, align 8, !dbg !12480
  %tobool397 = icmp ne %struct.BodySpring* %276, null, !dbg !12477
  br i1 %tobool397, label %if.then398, label %if.end433, !dbg !12481

if.then398:                                       ; preds = %if.then395
  call void @llvm.dbg.declare(metadata i32* %b399, metadata !12482, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.declare(metadata %struct.BodySpring** %bs400, metadata !12485, metadata !DIExpression()), !dbg !12486
  %277 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12487
  %nofsprings401 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %277, i32 0, i32 13, !dbg !12489
  %278 = load i32, i32* %nofsprings401, align 4, !dbg !12489
  store i32 %278, i32* %b399, align 4, !dbg !12490
  br label %for.cond402, !dbg !12491

for.cond402:                                      ; preds = %for.inc430, %if.then398
  %279 = load i32, i32* %b399, align 4, !dbg !12492
  %cmp403 = icmp sgt i32 %279, 0, !dbg !12494
  br i1 %cmp403, label %for.body405, label %for.end432, !dbg !12495

for.body405:                                      ; preds = %for.cond402
  %280 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !12496
  %bspring406 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %280, i32 0, i32 3, !dbg !12498
  %281 = load %struct.BodySpring*, %struct.BodySpring** %bspring406, align 8, !dbg !12498
  %282 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12499
  %springs407 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %282, i32 0, i32 14, !dbg !12500
  %283 = load i32*, i32** %springs407, align 8, !dbg !12500
  %284 = load i32, i32* %b399, align 4, !dbg !12501
  %sub408 = sub nsw i32 %284, 1, !dbg !12502
  %idxprom409 = sext i32 %sub408 to i64, !dbg !12499
  %arrayidx410 = getelementptr inbounds i32, i32* %283, i64 %idxprom409, !dbg !12499
  %285 = load i32, i32* %arrayidx410, align 4, !dbg !12499
  %idx.ext411 = sext i32 %285 to i64, !dbg !12503
  %add.ptr412 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %281, i64 %idx.ext411, !dbg !12503
  store %struct.BodySpring* %add.ptr412, %struct.BodySpring** %bs400, align 8, !dbg !12504
  %286 = load i32, i32* %do_springcollision, align 4, !dbg !12505
  %tobool413 = icmp ne i32 %286, 0, !dbg !12505
  br i1 %tobool413, label %if.then416, label %lor.lhs.false414, !dbg !12507

lor.lhs.false414:                                 ; preds = %for.body405
  %287 = load i32, i32* %do_aero, align 4, !dbg !12508
  %tobool415 = icmp ne i32 %287, 0, !dbg !12508
  br i1 %tobool415, label %if.then416, label %if.end428, !dbg !12509

if.then416:                                       ; preds = %lor.lhs.false414, %for.body405
  %288 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12510
  %force417 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %288, i32 0, i32 5, !dbg !12512
  %arraydecay418 = getelementptr inbounds [3 x float], [3 x float]* %force417, i64 0, i64 0, !dbg !12510
  %289 = load %struct.BodySpring*, %struct.BodySpring** %bs400, align 8, !dbg !12513
  %ext_force = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %289, i32 0, i32 5, !dbg !12514
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %ext_force, i64 0, i64 0, !dbg !12513
  call void @add_v3_v3(float* %arraydecay418, float* %arraydecay419), !dbg !12515
  %290 = load %struct.BodySpring*, %struct.BodySpring** %bs400, align 8, !dbg !12516
  %flag420 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %290, i32 0, i32 7, !dbg !12518
  %291 = load i16, i16* %flag420, align 4, !dbg !12518
  %conv421 = sext i16 %291 to i32, !dbg !12516
  %and422 = and i32 %conv421, 1, !dbg !12519
  %tobool423 = icmp ne i32 %and422, 0, !dbg !12519
  br i1 %tobool423, label %if.then424, label %if.end427, !dbg !12520

if.then424:                                       ; preds = %if.then416
  %292 = load %struct.BodySpring*, %struct.BodySpring** %bs400, align 8, !dbg !12521
  %cf425 = getelementptr inbounds %struct.BodySpring, %struct.BodySpring* %292, i32 0, i32 3, !dbg !12522
  %293 = load float, float* %cf425, align 4, !dbg !12522
  %294 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12523
  %choke426 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %294, i32 0, i32 15, !dbg !12524
  store float %293, float* %choke426, align 8, !dbg !12525
  br label %if.end427, !dbg !12523

if.end427:                                        ; preds = %if.then424, %if.then416
  br label %if.end428, !dbg !12526

if.end428:                                        ; preds = %if.end427, %lor.lhs.false414
  %295 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12527
  %296 = load i32, i32* %ilast.addr, align 4, !dbg !12528
  %297 = load i32, i32* %bb, align 4, !dbg !12529
  %sub429 = sub nsw i32 %296, %297, !dbg !12530
  %298 = load %struct.BodySpring*, %struct.BodySpring** %bs400, align 8, !dbg !12531
  %299 = load float, float* %iks, align 4, !dbg !12532
  %300 = load float, float* %forcetime.addr, align 4, !dbg !12533
  call void @sb_spring_force(%struct.Object* %295, i32 %sub429, %struct.BodySpring* %298, float %299, float %300, i32 0), !dbg !12534
  br label %for.inc430, !dbg !12535

for.inc430:                                       ; preds = %if.end428
  %301 = load i32, i32* %b399, align 4, !dbg !12536
  %dec431 = add nsw i32 %301, -1, !dbg !12536
  store i32 %dec431, i32* %b399, align 4, !dbg !12536
  br label %for.cond402, !dbg !12537, !llvm.loop !12538

for.end432:                                       ; preds = %for.cond402
  br label %if.end433, !dbg !12540

if.end433:                                        ; preds = %for.end432, %if.then395
  br label %if.end434, !dbg !12541

if.end434:                                        ; preds = %if.end433, %if.end387
  br label %if.end435, !dbg !12542

if.end435:                                        ; preds = %if.end434, %if.end158
  br label %for.inc436, !dbg !12543

for.inc436:                                       ; preds = %if.end435
  %302 = load i32, i32* %bb, align 4, !dbg !12544
  %dec437 = add nsw i32 %302, -1, !dbg !12544
  store i32 %dec437, i32* %bb, align 4, !dbg !12544
  %303 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !12545
  %incdec.ptr438 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %303, i32 1, !dbg !12545
  store %struct.BodyPoint* %incdec.ptr438, %struct.BodyPoint** %bp, align 8, !dbg !12545
  br label %for.cond, !dbg !12546, !llvm.loop !12547

for.end439:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12549
  br label %return, !dbg !12549

return:                                           ; preds = %for.end439, %if.then30, %if.else
  %304 = load i32, i32* %retval, align 4, !dbg !12550
  ret i32 %304, !dbg !12550
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !12551 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12554, metadata !DIExpression()), !dbg !12555
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12556, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.declare(metadata float* %d, metadata !12558, metadata !DIExpression()), !dbg !12559
  %0 = load float*, float** %a.addr, align 8, !dbg !12560
  %1 = load float*, float** %a.addr, align 8, !dbg !12561
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !12562
  store float %call, float* %d, align 4, !dbg !12559
  %2 = load float, float* %d, align 4, !dbg !12563
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !12565
  br i1 %cmp, label %if.then, label %if.else, !dbg !12566

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !12567
  %call1 = call float @sqrtf(float %3) #5, !dbg !12569
  store float %call1, float* %d, align 4, !dbg !12570
  %4 = load float*, float** %r.addr, align 8, !dbg !12571
  %5 = load float*, float** %a.addr, align 8, !dbg !12572
  %6 = load float, float* %d, align 4, !dbg !12573
  %div = fdiv float 1.000000e+00, %6, !dbg !12574
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !12575
  br label %if.end, !dbg !12576

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !12577
  call void @zero_v3(float* %7), !dbg !12579
  store float 0.000000e+00, float* %d, align 4, !dbg !12580
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !12581
  ret float %8, !dbg !12582
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !12583 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12584, metadata !DIExpression()), !dbg !12585
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12586, metadata !DIExpression()), !dbg !12587
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12588, metadata !DIExpression()), !dbg !12589
  %0 = load float*, float** %a.addr, align 8, !dbg !12590
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12590
  %1 = load float, float* %arrayidx, align 4, !dbg !12590
  %2 = load float, float* %f.addr, align 4, !dbg !12591
  %mul = fmul float %1, %2, !dbg !12592
  %3 = load float*, float** %r.addr, align 8, !dbg !12593
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !12593
  store float %mul, float* %arrayidx1, align 4, !dbg !12594
  %4 = load float*, float** %a.addr, align 8, !dbg !12595
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12595
  %5 = load float, float* %arrayidx2, align 4, !dbg !12595
  %6 = load float, float* %f.addr, align 4, !dbg !12596
  %mul3 = fmul float %5, %6, !dbg !12597
  %7 = load float*, float** %r.addr, align 8, !dbg !12598
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12598
  store float %mul3, float* %arrayidx4, align 4, !dbg !12599
  %8 = load float*, float** %a.addr, align 8, !dbg !12600
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12600
  %9 = load float, float* %arrayidx5, align 4, !dbg !12600
  %10 = load float, float* %f.addr, align 4, !dbg !12601
  %mul6 = fmul float %9, %10, !dbg !12602
  %11 = load float*, float** %r.addr, align 8, !dbg !12603
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !12603
  store float %mul6, float* %arrayidx7, align 4, !dbg !12604
  ret void, !dbg !12605
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_detect_vertex_collisionCached(float* %opco, float* %facenormal, float* %damp, float* %force, i32 %UNUSED_par_layer, %struct.Object* %vertexowner, float %time, float* %vel, float* %intrusion) #0 !dbg !12606 {
entry:
  %opco.addr = alloca float*, align 8
  %facenormal.addr = alloca float*, align 8
  %damp.addr = alloca float*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_par_layer.addr = alloca i32, align 4
  %vertexowner.addr = alloca %struct.Object*, align 8
  %time.addr = alloca float, align 4
  %vel.addr = alloca float*, align 8
  %intrusion.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  %hash = alloca %struct.GHash*, align 8
  %ihash = alloca %struct.GHashIterator*, align 8
  %nv1 = alloca [3 x float], align 4
  %nv2 = alloca [3 x float], align 4
  %nv3 = alloca [3 x float], align 4
  %nv4 = alloca [3 x float], align 4
  %edge1 = alloca [3 x float], align 4
  %edge2 = alloca [3 x float], align 4
  %d_nvect = alloca [3 x float], align 4
  %dv1 = alloca [3 x float], align 4
  %ve = alloca [3 x float], align 4
  %avel = alloca [3 x float], align 4
  %vv1 = alloca [3 x float], align 4
  %vv2 = alloca [3 x float], align 4
  %vv3 = alloca [3 x float], align 4
  %vv4 = alloca [3 x float], align 4
  %coledge = alloca [3 x float], align 4
  %mindistedge = alloca float, align 4
  %outerforceaccu = alloca [3 x float], align 4
  %innerforceaccu = alloca [3 x float], align 4
  %facedist = alloca float, align 4
  %force_mag_norm = alloca float, align 4
  %minx = alloca float, align 4
  %miny = alloca float, align 4
  %minz = alloca float, align 4
  %maxx = alloca float, align 4
  %maxy = alloca float, align 4
  %maxz = alloca float, align 4
  %innerfacethickness = alloca float, align 4
  %outerfacethickness = alloca float, align 4
  %ee = alloca float, align 4
  %ff = alloca float, align 4
  %fa = alloca float, align 4
  %a = alloca i32, align 4
  %deflected = alloca i32, align 4
  %cavel = alloca i32, align 4
  %ci = alloca i32, align 4
  %ccdm = alloca %struct.ccd_Mesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mprevvert = alloca %struct.MVert*, align 8
  %mima = alloca %struct.ccdf_minmax*, align 8
  %dist = alloca float, align 4
  store float* %opco, float** %opco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %opco.addr, metadata !12609, metadata !DIExpression()), !dbg !12610
  store float* %facenormal, float** %facenormal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facenormal.addr, metadata !12611, metadata !DIExpression()), !dbg !12612
  store float* %damp, float** %damp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %damp.addr, metadata !12613, metadata !DIExpression()), !dbg !12614
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !12615, metadata !DIExpression()), !dbg !12616
  store i32 %UNUSED_par_layer, i32* %UNUSED_par_layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_par_layer.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !12619, metadata !DIExpression()), !dbg !12620
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  store float* %vel, float** %vel.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vel.addr, metadata !12623, metadata !DIExpression()), !dbg !12624
  store float* %intrusion, float** %intrusion.addr, align 8
  call void @llvm.dbg.declare(metadata float** %intrusion.addr, metadata !12625, metadata !DIExpression()), !dbg !12626
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12627, metadata !DIExpression()), !dbg !12628
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !12628
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash, metadata !12629, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ihash, metadata !12631, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.declare(metadata [3 x float]* %nv1, metadata !12633, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.declare(metadata [3 x float]* %nv2, metadata !12635, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata [3 x float]* %nv3, metadata !12637, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.declare(metadata [3 x float]* %nv4, metadata !12639, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.declare(metadata [3 x float]* %edge1, metadata !12641, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.declare(metadata [3 x float]* %edge2, metadata !12643, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.declare(metadata [3 x float]* %d_nvect, metadata !12645, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.declare(metadata [3 x float]* %dv1, metadata !12647, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.declare(metadata [3 x float]* %ve, metadata !12649, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.declare(metadata [3 x float]* %avel, metadata !12651, metadata !DIExpression()), !dbg !12652
  %0 = bitcast [3 x float]* %avel to i8*, !dbg !12652
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !12652
  call void @llvm.dbg.declare(metadata [3 x float]* %vv1, metadata !12653, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.declare(metadata [3 x float]* %vv2, metadata !12655, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.declare(metadata [3 x float]* %vv3, metadata !12657, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.declare(metadata [3 x float]* %vv4, metadata !12659, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.declare(metadata [3 x float]* %coledge, metadata !12661, metadata !DIExpression()), !dbg !12662
  %1 = bitcast [3 x float]* %coledge to i8*, !dbg !12662
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !12662
  call void @llvm.dbg.declare(metadata float* %mindistedge, metadata !12663, metadata !DIExpression()), !dbg !12664
  store float 1.000000e+03, float* %mindistedge, align 4, !dbg !12664
  call void @llvm.dbg.declare(metadata [3 x float]* %outerforceaccu, metadata !12665, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.declare(metadata [3 x float]* %innerforceaccu, metadata !12667, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.declare(metadata float* %facedist, metadata !12669, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.declare(metadata float* %force_mag_norm, metadata !12671, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.declare(metadata float* %minx, metadata !12673, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.declare(metadata float* %miny, metadata !12675, metadata !DIExpression()), !dbg !12676
  call void @llvm.dbg.declare(metadata float* %minz, metadata !12677, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !12679, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !12681, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.declare(metadata float* %maxz, metadata !12683, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.declare(metadata float* %innerfacethickness, metadata !12685, metadata !DIExpression()), !dbg !12686
  store float -5.000000e-01, float* %innerfacethickness, align 4, !dbg !12686
  call void @llvm.dbg.declare(metadata float* %outerfacethickness, metadata !12687, metadata !DIExpression()), !dbg !12688
  store float 0x3FC99999A0000000, float* %outerfacethickness, align 4, !dbg !12688
  call void @llvm.dbg.declare(metadata float* %ee, metadata !12689, metadata !DIExpression()), !dbg !12690
  store float 5.000000e+00, float* %ee, align 4, !dbg !12690
  call void @llvm.dbg.declare(metadata float* %ff, metadata !12691, metadata !DIExpression()), !dbg !12692
  store float 0x3FB99999A0000000, float* %ff, align 4, !dbg !12692
  call void @llvm.dbg.declare(metadata float* %fa, metadata !12693, metadata !DIExpression()), !dbg !12694
  store float 1.000000e+00, float* %fa, align 4, !dbg !12694
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !12697, metadata !DIExpression()), !dbg !12698
  store i32 0, i32* %deflected, align 4, !dbg !12698
  call void @llvm.dbg.declare(metadata i32* %cavel, metadata !12699, metadata !DIExpression()), !dbg !12700
  store i32 0, i32* %cavel, align 4, !dbg !12700
  call void @llvm.dbg.declare(metadata i32* %ci, metadata !12701, metadata !DIExpression()), !dbg !12702
  store i32 0, i32* %ci, align 4, !dbg !12702
  %2 = load float*, float** %intrusion.addr, align 8, !dbg !12703
  store float 0.000000e+00, float* %2, align 4, !dbg !12704
  %3 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !12705
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !12706
  %4 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !12706
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 44, !dbg !12707
  %5 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !12707
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %5, i32 0, i32 0, !dbg !12708
  %6 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !12708
  store %struct.GHash* %6, %struct.GHash** %hash, align 8, !dbg !12709
  %7 = load %struct.GHash*, %struct.GHash** %hash, align 8, !dbg !12710
  %call = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %7), !dbg !12711
  store %struct.GHashIterator* %call, %struct.GHashIterator** %ihash, align 8, !dbg !12712
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 2, !dbg !12713
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !12714
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 1, !dbg !12715
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !12716
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 0, !dbg !12717
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !12718
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 2, !dbg !12719
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !12720
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 1, !dbg !12721
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !12722
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 0, !dbg !12723
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !12724
  br label %while.cond, !dbg !12725

while.cond:                                       ; preds = %if.end447, %if.else, %if.then49, %entry
  %8 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !12726
  %call6 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %8), !dbg !12727
  %tobool = icmp ne i8 %call6, 0, !dbg !12728
  %lnot = xor i1 %tobool, true, !dbg !12728
  br i1 %lnot, label %while.body, label %while.end448, !dbg !12725

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm, metadata !12729, metadata !DIExpression()), !dbg !12731
  %9 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !12732
  %call7 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %9), !dbg !12733
  %10 = bitcast i8* %call7 to %struct.ccd_Mesh*, !dbg !12733
  store %struct.ccd_Mesh* %10, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12731
  %11 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !12734
  %call8 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %11), !dbg !12735
  %12 = bitcast i8* %call8 to %struct.Object*, !dbg !12735
  store %struct.Object* %12, %struct.Object** %ob, align 8, !dbg !12736
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12737
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 110, !dbg !12739
  %14 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !12739
  %tobool9 = icmp ne %struct.PartDeflect* %14, null, !dbg !12737
  br i1 %tobool9, label %land.lhs.true, label %if.end447, !dbg !12740

land.lhs.true:                                    ; preds = %while.body
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12741
  %pd10 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 110, !dbg !12742
  %16 = load %struct.PartDeflect*, %struct.PartDeflect** %pd10, align 8, !dbg !12742
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %16, i32 0, i32 1, !dbg !12743
  %17 = load i16, i16* %deflect, align 4, !dbg !12743
  %conv = sext i16 %17 to i32, !dbg !12741
  %tobool11 = icmp ne i32 %conv, 0, !dbg !12741
  br i1 %tobool11, label %if.then, label %if.end447, !dbg !12744

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !12745, metadata !DIExpression()), !dbg !12747
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !12747
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !12748, metadata !DIExpression()), !dbg !12749
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !12749
  call void @llvm.dbg.declare(metadata %struct.MVert** %mprevvert, metadata !12750, metadata !DIExpression()), !dbg !12751
  store %struct.MVert* null, %struct.MVert** %mprevvert, align 8, !dbg !12751
  call void @llvm.dbg.declare(metadata %struct.ccdf_minmax** %mima, metadata !12752, metadata !DIExpression()), !dbg !12753
  store %struct.ccdf_minmax* null, %struct.ccdf_minmax** %mima, align 8, !dbg !12753
  %18 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12754
  %tobool12 = icmp ne %struct.ccd_Mesh* %18, null, !dbg !12754
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !12756

if.then13:                                        ; preds = %if.then
  %19 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12757
  %mface14 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %19, i32 0, i32 4, !dbg !12759
  %20 = load %struct.MFace*, %struct.MFace** %mface14, align 8, !dbg !12759
  store %struct.MFace* %20, %struct.MFace** %mface, align 8, !dbg !12760
  %21 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12761
  %mvert15 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %21, i32 0, i32 2, !dbg !12762
  %22 = load %struct.MVert*, %struct.MVert** %mvert15, align 8, !dbg !12762
  store %struct.MVert* %22, %struct.MVert** %mvert, align 8, !dbg !12763
  %23 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12764
  %mprevvert16 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %23, i32 0, i32 3, !dbg !12765
  %24 = load %struct.MVert*, %struct.MVert** %mprevvert16, align 8, !dbg !12765
  store %struct.MVert* %24, %struct.MVert** %mprevvert, align 8, !dbg !12766
  %25 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12767
  %mima17 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %25, i32 0, i32 6, !dbg !12768
  %26 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima17, align 8, !dbg !12768
  store %struct.ccdf_minmax* %26, %struct.ccdf_minmax** %mima, align 8, !dbg !12769
  %27 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12770
  %totface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %27, i32 0, i32 1, !dbg !12771
  %28 = load i32, i32* %totface, align 4, !dbg !12771
  store i32 %28, i32* %a, align 4, !dbg !12772
  %29 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12773
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %29, i32 0, i32 7, !dbg !12774
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 0, !dbg !12773
  %30 = load float, float* %arrayidx18, align 8, !dbg !12773
  store float %30, float* %minx, align 4, !dbg !12775
  %31 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12776
  %bbmin19 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %31, i32 0, i32 7, !dbg !12777
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %bbmin19, i64 0, i64 1, !dbg !12776
  %32 = load float, float* %arrayidx20, align 4, !dbg !12776
  store float %32, float* %miny, align 4, !dbg !12778
  %33 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12779
  %bbmin21 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %33, i32 0, i32 7, !dbg !12780
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %bbmin21, i64 0, i64 2, !dbg !12779
  %34 = load float, float* %arrayidx22, align 8, !dbg !12779
  store float %34, float* %minz, align 4, !dbg !12781
  %35 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12782
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %35, i32 0, i32 8, !dbg !12783
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 0, !dbg !12782
  %36 = load float, float* %arrayidx23, align 4, !dbg !12782
  store float %36, float* %maxx, align 4, !dbg !12784
  %37 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12785
  %bbmax24 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %37, i32 0, i32 8, !dbg !12786
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %bbmax24, i64 0, i64 1, !dbg !12785
  %38 = load float, float* %arrayidx25, align 4, !dbg !12785
  store float %38, float* %maxy, align 4, !dbg !12787
  %39 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !12788
  %bbmax26 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %39, i32 0, i32 8, !dbg !12789
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %bbmax26, i64 0, i64 2, !dbg !12788
  %40 = load float, float* %arrayidx27, align 4, !dbg !12788
  store float %40, float* %maxz, align 4, !dbg !12790
  %41 = load float*, float** %opco.addr, align 8, !dbg !12791
  %arrayidx28 = getelementptr inbounds float, float* %41, i64 0, !dbg !12791
  %42 = load float, float* %arrayidx28, align 4, !dbg !12791
  %43 = load float, float* %minx, align 4, !dbg !12793
  %cmp = fcmp olt float %42, %43, !dbg !12794
  br i1 %cmp, label %if.then49, label %lor.lhs.false, !dbg !12795

lor.lhs.false:                                    ; preds = %if.then13
  %44 = load float*, float** %opco.addr, align 8, !dbg !12796
  %arrayidx30 = getelementptr inbounds float, float* %44, i64 1, !dbg !12796
  %45 = load float, float* %arrayidx30, align 4, !dbg !12796
  %46 = load float, float* %miny, align 4, !dbg !12797
  %cmp31 = fcmp olt float %45, %46, !dbg !12798
  br i1 %cmp31, label %if.then49, label %lor.lhs.false33, !dbg !12799

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %47 = load float*, float** %opco.addr, align 8, !dbg !12800
  %arrayidx34 = getelementptr inbounds float, float* %47, i64 2, !dbg !12800
  %48 = load float, float* %arrayidx34, align 4, !dbg !12800
  %49 = load float, float* %minz, align 4, !dbg !12801
  %cmp35 = fcmp olt float %48, %49, !dbg !12802
  br i1 %cmp35, label %if.then49, label %lor.lhs.false37, !dbg !12803

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %50 = load float*, float** %opco.addr, align 8, !dbg !12804
  %arrayidx38 = getelementptr inbounds float, float* %50, i64 0, !dbg !12804
  %51 = load float, float* %arrayidx38, align 4, !dbg !12804
  %52 = load float, float* %maxx, align 4, !dbg !12805
  %cmp39 = fcmp ogt float %51, %52, !dbg !12806
  br i1 %cmp39, label %if.then49, label %lor.lhs.false41, !dbg !12807

lor.lhs.false41:                                  ; preds = %lor.lhs.false37
  %53 = load float*, float** %opco.addr, align 8, !dbg !12808
  %arrayidx42 = getelementptr inbounds float, float* %53, i64 1, !dbg !12808
  %54 = load float, float* %arrayidx42, align 4, !dbg !12808
  %55 = load float, float* %maxy, align 4, !dbg !12809
  %cmp43 = fcmp ogt float %54, %55, !dbg !12810
  br i1 %cmp43, label %if.then49, label %lor.lhs.false45, !dbg !12811

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %56 = load float*, float** %opco.addr, align 8, !dbg !12812
  %arrayidx46 = getelementptr inbounds float, float* %56, i64 2, !dbg !12812
  %57 = load float, float* %arrayidx46, align 4, !dbg !12812
  %58 = load float, float* %maxz, align 4, !dbg !12813
  %cmp47 = fcmp ogt float %57, %58, !dbg !12814
  br i1 %cmp47, label %if.then49, label %if.end, !dbg !12815

if.then49:                                        ; preds = %lor.lhs.false45, %lor.lhs.false41, %lor.lhs.false37, %lor.lhs.false33, %lor.lhs.false, %if.then13
  %59 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !12816
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %59), !dbg !12818
  br label %while.cond, !dbg !12819, !llvm.loop !12820

if.end:                                           ; preds = %lor.lhs.false45
  br label %if.end51, !dbg !12822

if.else:                                          ; preds = %if.then
  %call50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)), !dbg !12823
  %60 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !12825
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %60), !dbg !12826
  br label %while.cond, !dbg !12827, !llvm.loop !12820

if.end51:                                         ; preds = %if.end
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12828
  %pd52 = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 110, !dbg !12829
  %62 = load %struct.PartDeflect*, %struct.PartDeflect** %pd52, align 8, !dbg !12829
  %pdef_sbift = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %62, i32 0, i32 27, !dbg !12830
  %63 = load float, float* %pdef_sbift, align 4, !dbg !12830
  %fneg = fneg float %63, !dbg !12831
  store float %fneg, float* %innerfacethickness, align 4, !dbg !12832
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12833
  %pd53 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 110, !dbg !12834
  %65 = load %struct.PartDeflect*, %struct.PartDeflect** %pd53, align 8, !dbg !12834
  %pdef_sboft = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %65, i32 0, i32 28, !dbg !12835
  %66 = load float, float* %pdef_sboft, align 8, !dbg !12835
  store float %66, float* %outerfacethickness, align 4, !dbg !12836
  %67 = load float, float* %ff, align 4, !dbg !12837
  %68 = load float, float* %outerfacethickness, align 4, !dbg !12838
  %mul = fmul float %67, %68, !dbg !12839
  %69 = load float, float* %outerfacethickness, align 4, !dbg !12840
  %sub = fsub float %mul, %69, !dbg !12841
  store float %sub, float* %fa, align 4, !dbg !12842
  %70 = load float, float* %fa, align 4, !dbg !12843
  %71 = load float, float* %fa, align 4, !dbg !12844
  %mul54 = fmul float %71, %70, !dbg !12844
  store float %mul54, float* %fa, align 4, !dbg !12844
  %72 = load float, float* %fa, align 4, !dbg !12845
  %div = fdiv float 1.000000e+00, %72, !dbg !12846
  store float %div, float* %fa, align 4, !dbg !12847
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 2, !dbg !12848
  store float 0.000000e+00, float* %arrayidx55, align 4, !dbg !12849
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 1, !dbg !12850
  store float 0.000000e+00, float* %arrayidx56, align 4, !dbg !12851
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 0, !dbg !12852
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !12853
  br label %while.cond58, !dbg !12854

while.cond58:                                     ; preds = %if.end444, %if.then90, %if.end51
  %73 = load i32, i32* %a, align 4, !dbg !12855
  %dec = add nsw i32 %73, -1, !dbg !12855
  store i32 %dec, i32* %a, align 4, !dbg !12855
  %tobool59 = icmp ne i32 %73, 0, !dbg !12854
  br i1 %tobool59, label %while.body60, label %while.end, !dbg !12854

while.body60:                                     ; preds = %while.cond58
  %74 = load float*, float** %opco.addr, align 8, !dbg !12856
  %arrayidx61 = getelementptr inbounds float, float* %74, i64 0, !dbg !12856
  %75 = load float, float* %arrayidx61, align 4, !dbg !12856
  %76 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12859
  %minx62 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %76, i32 0, i32 0, !dbg !12860
  %77 = load float, float* %minx62, align 4, !dbg !12860
  %cmp63 = fcmp olt float %75, %77, !dbg !12861
  br i1 %cmp63, label %if.then90, label %lor.lhs.false65, !dbg !12862

lor.lhs.false65:                                  ; preds = %while.body60
  %78 = load float*, float** %opco.addr, align 8, !dbg !12863
  %arrayidx66 = getelementptr inbounds float, float* %78, i64 0, !dbg !12863
  %79 = load float, float* %arrayidx66, align 4, !dbg !12863
  %80 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12864
  %maxx67 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %80, i32 0, i32 3, !dbg !12865
  %81 = load float, float* %maxx67, align 4, !dbg !12865
  %cmp68 = fcmp ogt float %79, %81, !dbg !12866
  br i1 %cmp68, label %if.then90, label %lor.lhs.false70, !dbg !12867

lor.lhs.false70:                                  ; preds = %lor.lhs.false65
  %82 = load float*, float** %opco.addr, align 8, !dbg !12868
  %arrayidx71 = getelementptr inbounds float, float* %82, i64 1, !dbg !12868
  %83 = load float, float* %arrayidx71, align 4, !dbg !12868
  %84 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12869
  %miny72 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %84, i32 0, i32 1, !dbg !12870
  %85 = load float, float* %miny72, align 4, !dbg !12870
  %cmp73 = fcmp olt float %83, %85, !dbg !12871
  br i1 %cmp73, label %if.then90, label %lor.lhs.false75, !dbg !12872

lor.lhs.false75:                                  ; preds = %lor.lhs.false70
  %86 = load float*, float** %opco.addr, align 8, !dbg !12873
  %arrayidx76 = getelementptr inbounds float, float* %86, i64 1, !dbg !12873
  %87 = load float, float* %arrayidx76, align 4, !dbg !12873
  %88 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12874
  %maxy77 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %88, i32 0, i32 4, !dbg !12875
  %89 = load float, float* %maxy77, align 4, !dbg !12875
  %cmp78 = fcmp ogt float %87, %89, !dbg !12876
  br i1 %cmp78, label %if.then90, label %lor.lhs.false80, !dbg !12877

lor.lhs.false80:                                  ; preds = %lor.lhs.false75
  %90 = load float*, float** %opco.addr, align 8, !dbg !12878
  %arrayidx81 = getelementptr inbounds float, float* %90, i64 2, !dbg !12878
  %91 = load float, float* %arrayidx81, align 4, !dbg !12878
  %92 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12879
  %minz82 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %92, i32 0, i32 2, !dbg !12880
  %93 = load float, float* %minz82, align 4, !dbg !12880
  %cmp83 = fcmp olt float %91, %93, !dbg !12881
  br i1 %cmp83, label %if.then90, label %lor.lhs.false85, !dbg !12882

lor.lhs.false85:                                  ; preds = %lor.lhs.false80
  %94 = load float*, float** %opco.addr, align 8, !dbg !12883
  %arrayidx86 = getelementptr inbounds float, float* %94, i64 2, !dbg !12883
  %95 = load float, float* %arrayidx86, align 4, !dbg !12883
  %96 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12884
  %maxz87 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %96, i32 0, i32 5, !dbg !12885
  %97 = load float, float* %maxz87, align 4, !dbg !12885
  %cmp88 = fcmp ogt float %95, %97, !dbg !12886
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !12887

if.then90:                                        ; preds = %lor.lhs.false85, %lor.lhs.false80, %lor.lhs.false75, %lor.lhs.false70, %lor.lhs.false65, %while.body60
  %98 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12888
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %98, i32 1, !dbg !12888
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !12888
  %99 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !12890
  %incdec.ptr91 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %99, i32 1, !dbg !12890
  store %struct.ccdf_minmax* %incdec.ptr91, %struct.ccdf_minmax** %mima, align 8, !dbg !12890
  br label %while.cond58, !dbg !12891, !llvm.loop !12892

if.end92:                                         ; preds = %lor.lhs.false85
  %100 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12894
  %tobool93 = icmp ne %struct.MVert* %100, null, !dbg !12894
  br i1 %tobool93, label %if.then94, label %if.end187, !dbg !12896

if.then94:                                        ; preds = %if.end92
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !12897
  %101 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12899
  %102 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12900
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %102, i32 0, i32 0, !dbg !12901
  %103 = load i32, i32* %v1, align 4, !dbg !12901
  %idxprom = zext i32 %103 to i64, !dbg !12899
  %arrayidx95 = getelementptr inbounds %struct.MVert, %struct.MVert* %101, i64 %idxprom, !dbg !12899
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx95, i32 0, i32 0, !dbg !12902
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12899
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay96), !dbg !12903
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !12904
  %104 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12905
  %105 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12906
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 1, !dbg !12907
  %106 = load i32, i32* %v2, align 4, !dbg !12907
  %idxprom98 = zext i32 %106 to i64, !dbg !12905
  %arrayidx99 = getelementptr inbounds %struct.MVert, %struct.MVert* %104, i64 %idxprom98, !dbg !12905
  %co100 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx99, i32 0, i32 0, !dbg !12908
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %co100, i64 0, i64 0, !dbg !12905
  call void @copy_v3_v3(float* %arraydecay97, float* %arraydecay101), !dbg !12909
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !12910
  %107 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12911
  %108 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12912
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 0, i32 2, !dbg !12913
  %109 = load i32, i32* %v3, align 4, !dbg !12913
  %idxprom103 = zext i32 %109 to i64, !dbg !12911
  %arrayidx104 = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i64 %idxprom103, !dbg !12911
  %co105 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx104, i32 0, i32 0, !dbg !12914
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %co105, i64 0, i64 0, !dbg !12911
  call void @copy_v3_v3(float* %arraydecay102, float* %arraydecay106), !dbg !12915
  %110 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12916
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %110, i32 0, i32 3, !dbg !12918
  %111 = load i32, i32* %v4, align 4, !dbg !12918
  %tobool107 = icmp ne i32 %111, 0, !dbg !12916
  br i1 %tobool107, label %if.then108, label %if.end115, !dbg !12919

if.then108:                                       ; preds = %if.then94
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !12920
  %112 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12922
  %113 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12923
  %v4110 = getelementptr inbounds %struct.MFace, %struct.MFace* %113, i32 0, i32 3, !dbg !12924
  %114 = load i32, i32* %v4110, align 4, !dbg !12924
  %idxprom111 = zext i32 %114 to i64, !dbg !12922
  %arrayidx112 = getelementptr inbounds %struct.MVert, %struct.MVert* %112, i64 %idxprom111, !dbg !12922
  %co113 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx112, i32 0, i32 0, !dbg !12925
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %co113, i64 0, i64 0, !dbg !12922
  call void @copy_v3_v3(float* %arraydecay109, float* %arraydecay114), !dbg !12926
  br label %if.end115, !dbg !12927

if.end115:                                        ; preds = %if.then108, %if.then94
  %115 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12928
  %tobool116 = icmp ne %struct.MVert* %115, null, !dbg !12928
  br i1 %tobool116, label %if.then117, label %if.end186, !dbg !12930

if.then117:                                       ; preds = %if.end115
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %vv1, i64 0, i64 0, !dbg !12931
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !12933
  %116 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12934
  %117 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12935
  %v1120 = getelementptr inbounds %struct.MFace, %struct.MFace* %117, i32 0, i32 0, !dbg !12936
  %118 = load i32, i32* %v1120, align 4, !dbg !12936
  %idxprom121 = zext i32 %118 to i64, !dbg !12934
  %arrayidx122 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i64 %idxprom121, !dbg !12934
  %co123 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx122, i32 0, i32 0, !dbg !12937
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %co123, i64 0, i64 0, !dbg !12934
  call void @sub_v3_v3v3(float* %arraydecay118, float* %arraydecay119, float* %arraydecay124), !dbg !12938
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %vv2, i64 0, i64 0, !dbg !12939
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !12940
  %119 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12941
  %120 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12942
  %v2127 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i32 0, i32 1, !dbg !12943
  %121 = load i32, i32* %v2127, align 4, !dbg !12943
  %idxprom128 = zext i32 %121 to i64, !dbg !12941
  %arrayidx129 = getelementptr inbounds %struct.MVert, %struct.MVert* %119, i64 %idxprom128, !dbg !12941
  %co130 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx129, i32 0, i32 0, !dbg !12944
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %co130, i64 0, i64 0, !dbg !12941
  call void @sub_v3_v3v3(float* %arraydecay125, float* %arraydecay126, float* %arraydecay131), !dbg !12945
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %vv3, i64 0, i64 0, !dbg !12946
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !12947
  %122 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12948
  %123 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12949
  %v3134 = getelementptr inbounds %struct.MFace, %struct.MFace* %123, i32 0, i32 2, !dbg !12950
  %124 = load i32, i32* %v3134, align 4, !dbg !12950
  %idxprom135 = zext i32 %124 to i64, !dbg !12948
  %arrayidx136 = getelementptr inbounds %struct.MVert, %struct.MVert* %122, i64 %idxprom135, !dbg !12948
  %co137 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx136, i32 0, i32 0, !dbg !12951
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %co137, i64 0, i64 0, !dbg !12948
  call void @sub_v3_v3v3(float* %arraydecay132, float* %arraydecay133, float* %arraydecay138), !dbg !12952
  %125 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12953
  %v4139 = getelementptr inbounds %struct.MFace, %struct.MFace* %125, i32 0, i32 3, !dbg !12955
  %126 = load i32, i32* %v4139, align 4, !dbg !12955
  %tobool140 = icmp ne i32 %126, 0, !dbg !12953
  br i1 %tobool140, label %if.then141, label %if.end149, !dbg !12956

if.then141:                                       ; preds = %if.then117
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %vv4, i64 0, i64 0, !dbg !12957
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !12959
  %127 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12960
  %128 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12961
  %v4144 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 3, !dbg !12962
  %129 = load i32, i32* %v4144, align 4, !dbg !12962
  %idxprom145 = zext i32 %129 to i64, !dbg !12960
  %arrayidx146 = getelementptr inbounds %struct.MVert, %struct.MVert* %127, i64 %idxprom145, !dbg !12960
  %co147 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx146, i32 0, i32 0, !dbg !12963
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %co147, i64 0, i64 0, !dbg !12960
  call void @sub_v3_v3v3(float* %arraydecay142, float* %arraydecay143, float* %arraydecay148), !dbg !12964
  br label %if.end149, !dbg !12965

if.end149:                                        ; preds = %if.then141, %if.then117
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !12966
  %130 = load float, float* %time.addr, align 4, !dbg !12967
  call void @mul_v3_fl(float* %arraydecay150, float %130), !dbg !12968
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !12969
  %131 = load float, float* %time.addr, align 4, !dbg !12970
  %sub152 = fsub float 1.000000e+00, %131, !dbg !12971
  %132 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12972
  %133 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12973
  %v1153 = getelementptr inbounds %struct.MFace, %struct.MFace* %133, i32 0, i32 0, !dbg !12974
  %134 = load i32, i32* %v1153, align 4, !dbg !12974
  %idxprom154 = zext i32 %134 to i64, !dbg !12972
  %arrayidx155 = getelementptr inbounds %struct.MVert, %struct.MVert* %132, i64 %idxprom154, !dbg !12972
  %co156 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx155, i32 0, i32 0, !dbg !12975
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %co156, i64 0, i64 0, !dbg !12972
  call void @Vec3PlusStVec(float* %arraydecay151, float %sub152, float* %arraydecay157), !dbg !12976
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !12977
  %135 = load float, float* %time.addr, align 4, !dbg !12978
  call void @mul_v3_fl(float* %arraydecay158, float %135), !dbg !12979
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !12980
  %136 = load float, float* %time.addr, align 4, !dbg !12981
  %sub160 = fsub float 1.000000e+00, %136, !dbg !12982
  %137 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12983
  %138 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12984
  %v2161 = getelementptr inbounds %struct.MFace, %struct.MFace* %138, i32 0, i32 1, !dbg !12985
  %139 = load i32, i32* %v2161, align 4, !dbg !12985
  %idxprom162 = zext i32 %139 to i64, !dbg !12983
  %arrayidx163 = getelementptr inbounds %struct.MVert, %struct.MVert* %137, i64 %idxprom162, !dbg !12983
  %co164 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx163, i32 0, i32 0, !dbg !12986
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %co164, i64 0, i64 0, !dbg !12983
  call void @Vec3PlusStVec(float* %arraydecay159, float %sub160, float* %arraydecay165), !dbg !12987
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !12988
  %140 = load float, float* %time.addr, align 4, !dbg !12989
  call void @mul_v3_fl(float* %arraydecay166, float %140), !dbg !12990
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !12991
  %141 = load float, float* %time.addr, align 4, !dbg !12992
  %sub168 = fsub float 1.000000e+00, %141, !dbg !12993
  %142 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !12994
  %143 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12995
  %v3169 = getelementptr inbounds %struct.MFace, %struct.MFace* %143, i32 0, i32 2, !dbg !12996
  %144 = load i32, i32* %v3169, align 4, !dbg !12996
  %idxprom170 = zext i32 %144 to i64, !dbg !12994
  %arrayidx171 = getelementptr inbounds %struct.MVert, %struct.MVert* %142, i64 %idxprom170, !dbg !12994
  %co172 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx171, i32 0, i32 0, !dbg !12997
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %co172, i64 0, i64 0, !dbg !12994
  call void @Vec3PlusStVec(float* %arraydecay167, float %sub168, float* %arraydecay173), !dbg !12998
  %145 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !12999
  %v4174 = getelementptr inbounds %struct.MFace, %struct.MFace* %145, i32 0, i32 3, !dbg !13001
  %146 = load i32, i32* %v4174, align 4, !dbg !13001
  %tobool175 = icmp ne i32 %146, 0, !dbg !12999
  br i1 %tobool175, label %if.then176, label %if.end185, !dbg !13002

if.then176:                                       ; preds = %if.end149
  %arraydecay177 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13003
  %147 = load float, float* %time.addr, align 4, !dbg !13005
  call void @mul_v3_fl(float* %arraydecay177, float %147), !dbg !13006
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13007
  %148 = load float, float* %time.addr, align 4, !dbg !13008
  %sub179 = fsub float 1.000000e+00, %148, !dbg !13009
  %149 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13010
  %150 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13011
  %v4180 = getelementptr inbounds %struct.MFace, %struct.MFace* %150, i32 0, i32 3, !dbg !13012
  %151 = load i32, i32* %v4180, align 4, !dbg !13012
  %idxprom181 = zext i32 %151 to i64, !dbg !13010
  %arrayidx182 = getelementptr inbounds %struct.MVert, %struct.MVert* %149, i64 %idxprom181, !dbg !13010
  %co183 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx182, i32 0, i32 0, !dbg !13013
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %co183, i64 0, i64 0, !dbg !13010
  call void @Vec3PlusStVec(float* %arraydecay178, float %sub179, float* %arraydecay184), !dbg !13014
  br label %if.end185, !dbg !13015

if.end185:                                        ; preds = %if.then176, %if.end149
  br label %if.end186, !dbg !13016

if.end186:                                        ; preds = %if.end185, %if.end115
  br label %if.end187, !dbg !13017

if.end187:                                        ; preds = %if.end186, %if.end92
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13018
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13019
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13020
  call void @sub_v3_v3v3(float* %arraydecay188, float* %arraydecay189, float* %arraydecay190), !dbg !13021
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13022
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13023
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13024
  call void @sub_v3_v3v3(float* %arraydecay191, float* %arraydecay192, float* %arraydecay193), !dbg !13025
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %dv1, i64 0, i64 0, !dbg !13026
  %152 = load float*, float** %opco.addr, align 8, !dbg !13027
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13028
  call void @sub_v3_v3v3(float* %arraydecay194, float* %152, float* %arraydecay195), !dbg !13029
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13030
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13031
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13032
  call void @cross_v3_v3v3(float* %arraydecay196, float* %arraydecay197, float* %arraydecay198), !dbg !13033
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13034
  %call200 = call float @normalize_v3(float* %arraydecay199), !dbg !13035
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %dv1, i64 0, i64 0, !dbg !13036
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13037
  %call203 = call float @dot_v3v3(float* %arraydecay201, float* %arraydecay202), !dbg !13038
  store float %call203, float* %facedist, align 4, !dbg !13039
  %153 = load float, float* %facedist, align 4, !dbg !13040
  %154 = load float, float* %innerfacethickness, align 4, !dbg !13042
  %cmp204 = fcmp ogt float %153, %154, !dbg !13043
  br i1 %cmp204, label %land.lhs.true206, label %if.end266, !dbg !13044

land.lhs.true206:                                 ; preds = %if.end187
  %155 = load float, float* %facedist, align 4, !dbg !13045
  %156 = load float, float* %outerfacethickness, align 4, !dbg !13046
  %cmp207 = fcmp olt float %155, %156, !dbg !13047
  br i1 %cmp207, label %if.then209, label %if.end266, !dbg !13048

if.then209:                                       ; preds = %land.lhs.true206
  %157 = load float*, float** %opco.addr, align 8, !dbg !13049
  %arraydecay210 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13052
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13053
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13054
  %call213 = call zeroext i8 @isect_point_tri_prism_v3(float* %157, float* %arraydecay210, float* %arraydecay211, float* %arraydecay212), !dbg !13055
  %tobool214 = icmp ne i8 %call213, 0, !dbg !13055
  br i1 %tobool214, label %if.then215, label %if.end265, !dbg !13056

if.then215:                                       ; preds = %if.then209
  %158 = load float, float* %ee, align 4, !dbg !13057
  %fneg216 = fneg float %158, !dbg !13059
  %159 = load float, float* %facedist, align 4, !dbg !13060
  %mul217 = fmul float %fneg216, %159, !dbg !13061
  %conv218 = fpext float %mul217 to double, !dbg !13059
  %call219 = call double @exp(double %conv218) #5, !dbg !13062
  %conv220 = fptrunc double %call219 to float, !dbg !13063
  store float %conv220, float* %force_mag_norm, align 4, !dbg !13064
  %160 = load float, float* %facedist, align 4, !dbg !13065
  %161 = load float, float* %outerfacethickness, align 4, !dbg !13067
  %162 = load float, float* %ff, align 4, !dbg !13068
  %mul221 = fmul float %161, %162, !dbg !13069
  %cmp222 = fcmp ogt float %160, %mul221, !dbg !13070
  br i1 %cmp222, label %if.then224, label %if.end230, !dbg !13071

if.then224:                                       ; preds = %if.then215
  %163 = load float, float* %force_mag_norm, align 4, !dbg !13072
  %164 = load float, float* %fa, align 4, !dbg !13073
  %mul225 = fmul float %163, %164, !dbg !13074
  %165 = load float, float* %facedist, align 4, !dbg !13075
  %166 = load float, float* %outerfacethickness, align 4, !dbg !13076
  %sub226 = fsub float %165, %166, !dbg !13077
  %mul227 = fmul float %mul225, %sub226, !dbg !13078
  %167 = load float, float* %facedist, align 4, !dbg !13079
  %168 = load float, float* %outerfacethickness, align 4, !dbg !13080
  %sub228 = fsub float %167, %168, !dbg !13081
  %mul229 = fmul float %mul227, %sub228, !dbg !13082
  store float %mul229, float* %force_mag_norm, align 4, !dbg !13083
  br label %if.end230, !dbg !13084

if.end230:                                        ; preds = %if.then224, %if.then215
  %169 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13085
  %pd231 = getelementptr inbounds %struct.Object, %struct.Object* %169, i32 0, i32 110, !dbg !13086
  %170 = load %struct.PartDeflect*, %struct.PartDeflect** %pd231, align 8, !dbg !13086
  %pdef_sbdamp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %170, i32 0, i32 26, !dbg !13087
  %171 = load float, float* %pdef_sbdamp, align 8, !dbg !13087
  %172 = load float*, float** %damp.addr, align 8, !dbg !13088
  store float %171, float* %172, align 4, !dbg !13089
  %173 = load float, float* %facedist, align 4, !dbg !13090
  %cmp232 = fcmp ogt float %173, 0.000000e+00, !dbg !13092
  br i1 %cmp232, label %if.then234, label %if.else240, !dbg !13093

if.then234:                                       ; preds = %if.end230
  %174 = load float, float* %facedist, align 4, !dbg !13094
  %175 = load float, float* %outerfacethickness, align 4, !dbg !13096
  %div235 = fdiv float %174, %175, !dbg !13097
  %sub236 = fsub float 1.000000e+00, %div235, !dbg !13098
  %176 = load float*, float** %damp.addr, align 8, !dbg !13099
  %177 = load float, float* %176, align 4, !dbg !13100
  %mul237 = fmul float %177, %sub236, !dbg !13100
  store float %mul237, float* %176, align 4, !dbg !13100
  %arraydecay238 = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 0, !dbg !13101
  %178 = load float, float* %force_mag_norm, align 4, !dbg !13102
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13103
  call void @Vec3PlusStVec(float* %arraydecay238, float %178, float* %arraydecay239), !dbg !13104
  store i32 3, i32* %deflected, align 4, !dbg !13105
  br label %if.end247, !dbg !13106

if.else240:                                       ; preds = %if.end230
  %arraydecay241 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 0, !dbg !13107
  %179 = load float, float* %force_mag_norm, align 4, !dbg !13109
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13110
  call void @Vec3PlusStVec(float* %arraydecay241, float %179, float* %arraydecay242), !dbg !13111
  %180 = load i32, i32* %deflected, align 4, !dbg !13112
  %cmp243 = icmp slt i32 %180, 2, !dbg !13114
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !13115

if.then245:                                       ; preds = %if.else240
  store i32 2, i32* %deflected, align 4, !dbg !13116
  br label %if.end246, !dbg !13117

if.end246:                                        ; preds = %if.then245, %if.else240
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.then234
  %181 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13118
  %tobool248 = icmp ne %struct.MVert* %181, null, !dbg !13120
  br i1 %tobool248, label %land.lhs.true249, label %if.end263, !dbg !13121

land.lhs.true249:                                 ; preds = %if.end247
  %182 = load float*, float** %damp.addr, align 8, !dbg !13122
  %183 = load float, float* %182, align 4, !dbg !13123
  %cmp250 = fcmp ogt float %183, 0.000000e+00, !dbg !13124
  br i1 %cmp250, label %if.then252, label %if.end263, !dbg !13125

if.then252:                                       ; preds = %land.lhs.true249
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13126
  %184 = load float*, float** %opco.addr, align 8, !dbg !13128
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13129
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13130
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13131
  %arraydecay257 = getelementptr inbounds [3 x float], [3 x float]* %vv1, i64 0, i64 0, !dbg !13132
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %vv2, i64 0, i64 0, !dbg !13133
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %vv3, i64 0, i64 0, !dbg !13134
  %call260 = call i32 @choose_winner(float* %arraydecay253, float* %184, float* %arraydecay254, float* %arraydecay255, float* %arraydecay256, float* %arraydecay257, float* %arraydecay258, float* %arraydecay259), !dbg !13135
  %arraydecay261 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 0, !dbg !13136
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13137
  call void @add_v3_v3(float* %arraydecay261, float* %arraydecay262), !dbg !13138
  %185 = load i32, i32* %cavel, align 4, !dbg !13139
  %inc = add nsw i32 %185, 1, !dbg !13139
  store i32 %inc, i32* %cavel, align 4, !dbg !13139
  br label %if.end263, !dbg !13140

if.end263:                                        ; preds = %if.then252, %land.lhs.true249, %if.end247
  %186 = load float, float* %facedist, align 4, !dbg !13141
  %187 = load float*, float** %intrusion.addr, align 8, !dbg !13142
  %188 = load float, float* %187, align 4, !dbg !13143
  %add = fadd float %188, %186, !dbg !13143
  store float %add, float* %187, align 4, !dbg !13143
  %189 = load i32, i32* %ci, align 4, !dbg !13144
  %inc264 = add nsw i32 %189, 1, !dbg !13144
  store i32 %inc264, i32* %ci, align 4, !dbg !13144
  br label %if.end265, !dbg !13145

if.end265:                                        ; preds = %if.end263, %if.then209
  br label %if.end266, !dbg !13146

if.end266:                                        ; preds = %if.end265, %land.lhs.true206, %if.end187
  %190 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13147
  %v4267 = getelementptr inbounds %struct.MFace, %struct.MFace* %190, i32 0, i32 3, !dbg !13149
  %191 = load i32, i32* %v4267, align 4, !dbg !13149
  %tobool268 = icmp ne i32 %191, 0, !dbg !13147
  br i1 %tobool268, label %if.then269, label %if.end444, !dbg !13150

if.then269:                                       ; preds = %if.end266
  %arraydecay270 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13151
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13153
  %arraydecay272 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13154
  call void @sub_v3_v3v3(float* %arraydecay270, float* %arraydecay271, float* %arraydecay272), !dbg !13155
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13156
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13157
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13158
  call void @sub_v3_v3v3(float* %arraydecay273, float* %arraydecay274, float* %arraydecay275), !dbg !13159
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %dv1, i64 0, i64 0, !dbg !13160
  %192 = load float*, float** %opco.addr, align 8, !dbg !13161
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13162
  call void @sub_v3_v3v3(float* %arraydecay276, float* %192, float* %arraydecay277), !dbg !13163
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13164
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13165
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13166
  call void @cross_v3_v3v3(float* %arraydecay278, float* %arraydecay279, float* %arraydecay280), !dbg !13167
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13168
  %call282 = call float @normalize_v3(float* %arraydecay281), !dbg !13169
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %dv1, i64 0, i64 0, !dbg !13170
  %arraydecay284 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13171
  %call285 = call float @dot_v3v3(float* %arraydecay283, float* %arraydecay284), !dbg !13172
  store float %call285, float* %facedist, align 4, !dbg !13173
  %193 = load float, float* %facedist, align 4, !dbg !13174
  %194 = load float, float* %innerfacethickness, align 4, !dbg !13176
  %cmp286 = fcmp ogt float %193, %194, !dbg !13177
  br i1 %cmp286, label %land.lhs.true288, label %if.end351, !dbg !13178

land.lhs.true288:                                 ; preds = %if.then269
  %195 = load float, float* %facedist, align 4, !dbg !13179
  %196 = load float, float* %outerfacethickness, align 4, !dbg !13180
  %cmp289 = fcmp olt float %195, %196, !dbg !13181
  br i1 %cmp289, label %if.then291, label %if.end351, !dbg !13182

if.then291:                                       ; preds = %land.lhs.true288
  %197 = load float*, float** %opco.addr, align 8, !dbg !13183
  %arraydecay292 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13186
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13187
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13188
  %call295 = call zeroext i8 @isect_point_tri_prism_v3(float* %197, float* %arraydecay292, float* %arraydecay293, float* %arraydecay294), !dbg !13189
  %tobool296 = icmp ne i8 %call295, 0, !dbg !13189
  br i1 %tobool296, label %if.then297, label %if.end350, !dbg !13190

if.then297:                                       ; preds = %if.then291
  %198 = load float, float* %ee, align 4, !dbg !13191
  %fneg298 = fneg float %198, !dbg !13193
  %199 = load float, float* %facedist, align 4, !dbg !13194
  %mul299 = fmul float %fneg298, %199, !dbg !13195
  %conv300 = fpext float %mul299 to double, !dbg !13193
  %call301 = call double @exp(double %conv300) #5, !dbg !13196
  %conv302 = fptrunc double %call301 to float, !dbg !13197
  store float %conv302, float* %force_mag_norm, align 4, !dbg !13198
  %200 = load float, float* %facedist, align 4, !dbg !13199
  %201 = load float, float* %outerfacethickness, align 4, !dbg !13201
  %202 = load float, float* %ff, align 4, !dbg !13202
  %mul303 = fmul float %201, %202, !dbg !13203
  %cmp304 = fcmp ogt float %200, %mul303, !dbg !13204
  br i1 %cmp304, label %if.then306, label %if.end312, !dbg !13205

if.then306:                                       ; preds = %if.then297
  %203 = load float, float* %force_mag_norm, align 4, !dbg !13206
  %204 = load float, float* %fa, align 4, !dbg !13207
  %mul307 = fmul float %203, %204, !dbg !13208
  %205 = load float, float* %facedist, align 4, !dbg !13209
  %206 = load float, float* %outerfacethickness, align 4, !dbg !13210
  %sub308 = fsub float %205, %206, !dbg !13211
  %mul309 = fmul float %mul307, %sub308, !dbg !13212
  %207 = load float, float* %facedist, align 4, !dbg !13213
  %208 = load float, float* %outerfacethickness, align 4, !dbg !13214
  %sub310 = fsub float %207, %208, !dbg !13215
  %mul311 = fmul float %mul309, %sub310, !dbg !13216
  store float %mul311, float* %force_mag_norm, align 4, !dbg !13217
  br label %if.end312, !dbg !13218

if.end312:                                        ; preds = %if.then306, %if.then297
  %209 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13219
  %pd313 = getelementptr inbounds %struct.Object, %struct.Object* %209, i32 0, i32 110, !dbg !13220
  %210 = load %struct.PartDeflect*, %struct.PartDeflect** %pd313, align 8, !dbg !13220
  %pdef_sbdamp314 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %210, i32 0, i32 26, !dbg !13221
  %211 = load float, float* %pdef_sbdamp314, align 8, !dbg !13221
  %212 = load float*, float** %damp.addr, align 8, !dbg !13222
  store float %211, float* %212, align 4, !dbg !13223
  %213 = load float, float* %facedist, align 4, !dbg !13224
  %cmp315 = fcmp ogt float %213, 0.000000e+00, !dbg !13226
  br i1 %cmp315, label %if.then317, label %if.else323, !dbg !13227

if.then317:                                       ; preds = %if.end312
  %214 = load float, float* %facedist, align 4, !dbg !13228
  %215 = load float, float* %outerfacethickness, align 4, !dbg !13230
  %div318 = fdiv float %214, %215, !dbg !13231
  %sub319 = fsub float 1.000000e+00, %div318, !dbg !13232
  %216 = load float*, float** %damp.addr, align 8, !dbg !13233
  %217 = load float, float* %216, align 4, !dbg !13234
  %mul320 = fmul float %217, %sub319, !dbg !13234
  store float %mul320, float* %216, align 4, !dbg !13234
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 0, !dbg !13235
  %218 = load float, float* %force_mag_norm, align 4, !dbg !13236
  %arraydecay322 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13237
  call void @Vec3PlusStVec(float* %arraydecay321, float %218, float* %arraydecay322), !dbg !13238
  store i32 3, i32* %deflected, align 4, !dbg !13239
  br label %if.end330, !dbg !13240

if.else323:                                       ; preds = %if.end312
  %arraydecay324 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 0, !dbg !13241
  %219 = load float, float* %force_mag_norm, align 4, !dbg !13243
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13244
  call void @Vec3PlusStVec(float* %arraydecay324, float %219, float* %arraydecay325), !dbg !13245
  %220 = load i32, i32* %deflected, align 4, !dbg !13246
  %cmp326 = icmp slt i32 %220, 2, !dbg !13248
  br i1 %cmp326, label %if.then328, label %if.end329, !dbg !13249

if.then328:                                       ; preds = %if.else323
  store i32 2, i32* %deflected, align 4, !dbg !13250
  br label %if.end329, !dbg !13251

if.end329:                                        ; preds = %if.then328, %if.else323
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then317
  %221 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13252
  %tobool331 = icmp ne %struct.MVert* %221, null, !dbg !13254
  br i1 %tobool331, label %land.lhs.true332, label %if.end347, !dbg !13255

land.lhs.true332:                                 ; preds = %if.end330
  %222 = load float*, float** %damp.addr, align 8, !dbg !13256
  %223 = load float, float* %222, align 4, !dbg !13257
  %cmp333 = fcmp ogt float %223, 0.000000e+00, !dbg !13258
  br i1 %cmp333, label %if.then335, label %if.end347, !dbg !13259

if.then335:                                       ; preds = %land.lhs.true332
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13260
  %224 = load float*, float** %opco.addr, align 8, !dbg !13262
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13263
  %arraydecay338 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13264
  %arraydecay339 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13265
  %arraydecay340 = getelementptr inbounds [3 x float], [3 x float]* %vv1, i64 0, i64 0, !dbg !13266
  %arraydecay341 = getelementptr inbounds [3 x float], [3 x float]* %vv3, i64 0, i64 0, !dbg !13267
  %arraydecay342 = getelementptr inbounds [3 x float], [3 x float]* %vv4, i64 0, i64 0, !dbg !13268
  %call343 = call i32 @choose_winner(float* %arraydecay336, float* %224, float* %arraydecay337, float* %arraydecay338, float* %arraydecay339, float* %arraydecay340, float* %arraydecay341, float* %arraydecay342), !dbg !13269
  %arraydecay344 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 0, !dbg !13270
  %arraydecay345 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13271
  call void @add_v3_v3(float* %arraydecay344, float* %arraydecay345), !dbg !13272
  %225 = load i32, i32* %cavel, align 4, !dbg !13273
  %inc346 = add nsw i32 %225, 1, !dbg !13273
  store i32 %inc346, i32* %cavel, align 4, !dbg !13273
  br label %if.end347, !dbg !13274

if.end347:                                        ; preds = %if.then335, %land.lhs.true332, %if.end330
  %226 = load float, float* %facedist, align 4, !dbg !13275
  %227 = load float*, float** %intrusion.addr, align 8, !dbg !13276
  %228 = load float, float* %227, align 4, !dbg !13277
  %add348 = fadd float %228, %226, !dbg !13277
  store float %add348, float* %227, align 4, !dbg !13277
  %229 = load i32, i32* %ci, align 4, !dbg !13278
  %inc349 = add nsw i32 %229, 1, !dbg !13278
  store i32 %inc349, i32* %ci, align 4, !dbg !13278
  br label %if.end350, !dbg !13279

if.end350:                                        ; preds = %if.end347, %if.then291
  br label %if.end351, !dbg !13280

if.end351:                                        ; preds = %if.end350, %land.lhs.true288, %if.then269
  %230 = load i32, i32* %deflected, align 4, !dbg !13281
  %cmp352 = icmp slt i32 %230, 2, !dbg !13283
  br i1 %cmp352, label %land.lhs.true354, label %if.end443, !dbg !13284

land.lhs.true354:                                 ; preds = %if.end351
  %231 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 14), align 4, !dbg !13285
  %conv355 = sext i16 %231 to i32, !dbg !13286
  %cmp356 = icmp ne i32 %conv355, 444, !dbg !13287
  br i1 %cmp356, label %if.then358, label %if.end443, !dbg !13288

if.then358:                                       ; preds = %land.lhs.true354
  call void @llvm.dbg.declare(metadata float* %dist, metadata !13289, metadata !DIExpression()), !dbg !13291
  %arraydecay359 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13292
  %232 = load float*, float** %opco.addr, align 8, !dbg !13293
  %arraydecay360 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13294
  %arraydecay361 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13295
  call void @closest_to_line_segment_v3(float* %arraydecay359, float* %232, float* %arraydecay360, float* %arraydecay361), !dbg !13296
  %arraydecay362 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13297
  %233 = load float*, float** %opco.addr, align 8, !dbg !13298
  %arraydecay363 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13299
  call void @sub_v3_v3v3(float* %arraydecay362, float* %233, float* %arraydecay363), !dbg !13300
  %arraydecay364 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13301
  %call365 = call float @normalize_v3(float* %arraydecay364), !dbg !13302
  store float %call365, float* %dist, align 4, !dbg !13303
  %234 = load float, float* %dist, align 4, !dbg !13304
  %235 = load float, float* %outerfacethickness, align 4, !dbg !13306
  %cmp366 = fcmp olt float %234, %235, !dbg !13307
  br i1 %cmp366, label %land.lhs.true368, label %if.end374, !dbg !13308

land.lhs.true368:                                 ; preds = %if.then358
  %236 = load float, float* %dist, align 4, !dbg !13309
  %237 = load float, float* %mindistedge, align 4, !dbg !13310
  %cmp369 = fcmp olt float %236, %237, !dbg !13311
  br i1 %cmp369, label %if.then371, label %if.end374, !dbg !13312

if.then371:                                       ; preds = %land.lhs.true368
  %arraydecay372 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13313
  %arraydecay373 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13315
  call void @copy_v3_v3(float* %arraydecay372, float* %arraydecay373), !dbg !13316
  %238 = load float, float* %dist, align 4, !dbg !13317
  store float %238, float* %mindistedge, align 4, !dbg !13318
  store i32 1, i32* %deflected, align 4, !dbg !13319
  br label %if.end374, !dbg !13320

if.end374:                                        ; preds = %if.then371, %land.lhs.true368, %if.then358
  %arraydecay375 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13321
  %239 = load float*, float** %opco.addr, align 8, !dbg !13322
  %arraydecay376 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13323
  %arraydecay377 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13324
  call void @closest_to_line_segment_v3(float* %arraydecay375, float* %239, float* %arraydecay376, float* %arraydecay377), !dbg !13325
  %arraydecay378 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13326
  %240 = load float*, float** %opco.addr, align 8, !dbg !13327
  %arraydecay379 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13328
  call void @sub_v3_v3v3(float* %arraydecay378, float* %240, float* %arraydecay379), !dbg !13329
  %arraydecay380 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13330
  %call381 = call float @normalize_v3(float* %arraydecay380), !dbg !13331
  store float %call381, float* %dist, align 4, !dbg !13332
  %241 = load float, float* %dist, align 4, !dbg !13333
  %242 = load float, float* %outerfacethickness, align 4, !dbg !13335
  %cmp382 = fcmp olt float %241, %242, !dbg !13336
  br i1 %cmp382, label %land.lhs.true384, label %if.end390, !dbg !13337

land.lhs.true384:                                 ; preds = %if.end374
  %243 = load float, float* %dist, align 4, !dbg !13338
  %244 = load float, float* %mindistedge, align 4, !dbg !13339
  %cmp385 = fcmp olt float %243, %244, !dbg !13340
  br i1 %cmp385, label %if.then387, label %if.end390, !dbg !13341

if.then387:                                       ; preds = %land.lhs.true384
  %arraydecay388 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13342
  %arraydecay389 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13344
  call void @copy_v3_v3(float* %arraydecay388, float* %arraydecay389), !dbg !13345
  %245 = load float, float* %dist, align 4, !dbg !13346
  store float %245, float* %mindistedge, align 4, !dbg !13347
  store i32 1, i32* %deflected, align 4, !dbg !13348
  br label %if.end390, !dbg !13349

if.end390:                                        ; preds = %if.then387, %land.lhs.true384, %if.end374
  %arraydecay391 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13350
  %246 = load float*, float** %opco.addr, align 8, !dbg !13351
  %arraydecay392 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13352
  %arraydecay393 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13353
  call void @closest_to_line_segment_v3(float* %arraydecay391, float* %246, float* %arraydecay392, float* %arraydecay393), !dbg !13354
  %arraydecay394 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13355
  %247 = load float*, float** %opco.addr, align 8, !dbg !13356
  %arraydecay395 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13357
  call void @sub_v3_v3v3(float* %arraydecay394, float* %247, float* %arraydecay395), !dbg !13358
  %arraydecay396 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13359
  %call397 = call float @normalize_v3(float* %arraydecay396), !dbg !13360
  store float %call397, float* %dist, align 4, !dbg !13361
  %248 = load float, float* %dist, align 4, !dbg !13362
  %249 = load float, float* %outerfacethickness, align 4, !dbg !13364
  %cmp398 = fcmp olt float %248, %249, !dbg !13365
  br i1 %cmp398, label %land.lhs.true400, label %if.end406, !dbg !13366

land.lhs.true400:                                 ; preds = %if.end390
  %250 = load float, float* %dist, align 4, !dbg !13367
  %251 = load float, float* %mindistedge, align 4, !dbg !13368
  %cmp401 = fcmp olt float %250, %251, !dbg !13369
  br i1 %cmp401, label %if.then403, label %if.end406, !dbg !13370

if.then403:                                       ; preds = %land.lhs.true400
  %arraydecay404 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13371
  %arraydecay405 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13373
  call void @copy_v3_v3(float* %arraydecay404, float* %arraydecay405), !dbg !13374
  %252 = load float, float* %dist, align 4, !dbg !13375
  store float %252, float* %mindistedge, align 4, !dbg !13376
  store i32 1, i32* %deflected, align 4, !dbg !13377
  br label %if.end406, !dbg !13378

if.end406:                                        ; preds = %if.then403, %land.lhs.true400, %if.end390
  %253 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13379
  %v4407 = getelementptr inbounds %struct.MFace, %struct.MFace* %253, i32 0, i32 3, !dbg !13381
  %254 = load i32, i32* %v4407, align 4, !dbg !13381
  %tobool408 = icmp ne i32 %254, 0, !dbg !13379
  br i1 %tobool408, label %if.then409, label %if.end442, !dbg !13382

if.then409:                                       ; preds = %if.end406
  %arraydecay410 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13383
  %255 = load float*, float** %opco.addr, align 8, !dbg !13385
  %arraydecay411 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13386
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13387
  call void @closest_to_line_segment_v3(float* %arraydecay410, float* %255, float* %arraydecay411, float* %arraydecay412), !dbg !13388
  %arraydecay413 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13389
  %256 = load float*, float** %opco.addr, align 8, !dbg !13390
  %arraydecay414 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13391
  call void @sub_v3_v3v3(float* %arraydecay413, float* %256, float* %arraydecay414), !dbg !13392
  %arraydecay415 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13393
  %call416 = call float @normalize_v3(float* %arraydecay415), !dbg !13394
  store float %call416, float* %dist, align 4, !dbg !13395
  %257 = load float, float* %dist, align 4, !dbg !13396
  %258 = load float, float* %outerfacethickness, align 4, !dbg !13398
  %cmp417 = fcmp olt float %257, %258, !dbg !13399
  br i1 %cmp417, label %land.lhs.true419, label %if.end425, !dbg !13400

land.lhs.true419:                                 ; preds = %if.then409
  %259 = load float, float* %dist, align 4, !dbg !13401
  %260 = load float, float* %mindistedge, align 4, !dbg !13402
  %cmp420 = fcmp olt float %259, %260, !dbg !13403
  br i1 %cmp420, label %if.then422, label %if.end425, !dbg !13404

if.then422:                                       ; preds = %land.lhs.true419
  %arraydecay423 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13405
  %arraydecay424 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13407
  call void @copy_v3_v3(float* %arraydecay423, float* %arraydecay424), !dbg !13408
  %261 = load float, float* %dist, align 4, !dbg !13409
  store float %261, float* %mindistedge, align 4, !dbg !13410
  store i32 1, i32* %deflected, align 4, !dbg !13411
  br label %if.end425, !dbg !13412

if.end425:                                        ; preds = %if.then422, %land.lhs.true419, %if.then409
  %arraydecay426 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13413
  %262 = load float*, float** %opco.addr, align 8, !dbg !13414
  %arraydecay427 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13415
  %arraydecay428 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13416
  call void @closest_to_line_segment_v3(float* %arraydecay426, float* %262, float* %arraydecay427, float* %arraydecay428), !dbg !13417
  %arraydecay429 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13418
  %263 = load float*, float** %opco.addr, align 8, !dbg !13419
  %arraydecay430 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13420
  call void @sub_v3_v3v3(float* %arraydecay429, float* %263, float* %arraydecay430), !dbg !13421
  %arraydecay431 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13422
  %call432 = call float @normalize_v3(float* %arraydecay431), !dbg !13423
  store float %call432, float* %dist, align 4, !dbg !13424
  %264 = load float, float* %dist, align 4, !dbg !13425
  %265 = load float, float* %outerfacethickness, align 4, !dbg !13427
  %cmp433 = fcmp olt float %264, %265, !dbg !13428
  br i1 %cmp433, label %land.lhs.true435, label %if.end441, !dbg !13429

land.lhs.true435:                                 ; preds = %if.end425
  %266 = load float, float* %dist, align 4, !dbg !13430
  %267 = load float, float* %mindistedge, align 4, !dbg !13431
  %cmp436 = fcmp olt float %266, %267, !dbg !13432
  br i1 %cmp436, label %if.then438, label %if.end441, !dbg !13433

if.then438:                                       ; preds = %land.lhs.true435
  %arraydecay439 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13434
  %arraydecay440 = getelementptr inbounds [3 x float], [3 x float]* %ve, i64 0, i64 0, !dbg !13436
  call void @copy_v3_v3(float* %arraydecay439, float* %arraydecay440), !dbg !13437
  %268 = load float, float* %dist, align 4, !dbg !13438
  store float %268, float* %mindistedge, align 4, !dbg !13439
  store i32 1, i32* %deflected, align 4, !dbg !13440
  br label %if.end441, !dbg !13441

if.end441:                                        ; preds = %if.then438, %land.lhs.true435, %if.end425
  br label %if.end442, !dbg !13442

if.end442:                                        ; preds = %if.end441, %if.end406
  br label %if.end443, !dbg !13443

if.end443:                                        ; preds = %if.end442, %land.lhs.true354, %if.end351
  br label %if.end444, !dbg !13444

if.end444:                                        ; preds = %if.end443, %if.end266
  %269 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13445
  %incdec.ptr445 = getelementptr inbounds %struct.MFace, %struct.MFace* %269, i32 1, !dbg !13445
  store %struct.MFace* %incdec.ptr445, %struct.MFace** %mface, align 8, !dbg !13445
  %270 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13446
  %incdec.ptr446 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %270, i32 1, !dbg !13446
  store %struct.ccdf_minmax* %incdec.ptr446, %struct.ccdf_minmax** %mima, align 8, !dbg !13446
  br label %while.cond58, !dbg !12854, !llvm.loop !12892

while.end:                                        ; preds = %while.cond58
  br label %if.end447, !dbg !13447

if.end447:                                        ; preds = %while.end, %land.lhs.true, %while.body
  %271 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13448
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %271), !dbg !13449
  br label %while.cond, !dbg !12725, !llvm.loop !12820

while.end448:                                     ; preds = %while.cond
  %272 = load i32, i32* %deflected, align 4, !dbg !13450
  %cmp449 = icmp eq i32 %272, 1, !dbg !13452
  br i1 %cmp449, label %if.then451, label %if.end477, !dbg !13453

if.then451:                                       ; preds = %while.end448
  %273 = load float, float* %ee, align 4, !dbg !13454
  %fneg452 = fneg float %273, !dbg !13456
  %274 = load float, float* %mindistedge, align 4, !dbg !13457
  %mul453 = fmul float %fneg452, %274, !dbg !13458
  %conv454 = fpext float %mul453 to double, !dbg !13456
  %call455 = call double @exp(double %conv454) #5, !dbg !13459
  %conv456 = fptrunc double %call455 to float, !dbg !13460
  store float %conv456, float* %force_mag_norm, align 4, !dbg !13461
  %275 = load float, float* %mindistedge, align 4, !dbg !13462
  %276 = load float, float* %outerfacethickness, align 4, !dbg !13464
  %277 = load float, float* %ff, align 4, !dbg !13465
  %mul457 = fmul float %276, %277, !dbg !13466
  %cmp458 = fcmp ogt float %275, %mul457, !dbg !13467
  br i1 %cmp458, label %if.then460, label %if.end466, !dbg !13468

if.then460:                                       ; preds = %if.then451
  %278 = load float, float* %force_mag_norm, align 4, !dbg !13469
  %279 = load float, float* %fa, align 4, !dbg !13470
  %mul461 = fmul float %278, %279, !dbg !13471
  %280 = load float, float* %mindistedge, align 4, !dbg !13472
  %281 = load float, float* %outerfacethickness, align 4, !dbg !13473
  %sub462 = fsub float %280, %281, !dbg !13474
  %mul463 = fmul float %mul461, %sub462, !dbg !13475
  %282 = load float, float* %mindistedge, align 4, !dbg !13476
  %283 = load float, float* %outerfacethickness, align 4, !dbg !13477
  %sub464 = fsub float %282, %283, !dbg !13478
  %mul465 = fmul float %mul463, %sub464, !dbg !13479
  store float %mul465, float* %force_mag_norm, align 4, !dbg !13480
  br label %if.end466, !dbg !13481

if.end466:                                        ; preds = %if.then460, %if.then451
  %284 = load float*, float** %force.addr, align 8, !dbg !13482
  %285 = load float, float* %force_mag_norm, align 4, !dbg !13483
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %coledge, i64 0, i64 0, !dbg !13484
  call void @Vec3PlusStVec(float* %284, float %285, float* %arraydecay467), !dbg !13485
  %286 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13486
  %pd468 = getelementptr inbounds %struct.Object, %struct.Object* %286, i32 0, i32 110, !dbg !13487
  %287 = load %struct.PartDeflect*, %struct.PartDeflect** %pd468, align 8, !dbg !13487
  %pdef_sbdamp469 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %287, i32 0, i32 26, !dbg !13488
  %288 = load float, float* %pdef_sbdamp469, align 8, !dbg !13488
  %289 = load float*, float** %damp.addr, align 8, !dbg !13489
  store float %288, float* %289, align 4, !dbg !13490
  %290 = load float, float* %mindistedge, align 4, !dbg !13491
  %cmp470 = fcmp ogt float %290, 0.000000e+00, !dbg !13493
  br i1 %cmp470, label %if.then472, label %if.end476, !dbg !13494

if.then472:                                       ; preds = %if.end466
  %291 = load float, float* %mindistedge, align 4, !dbg !13495
  %292 = load float, float* %outerfacethickness, align 4, !dbg !13497
  %div473 = fdiv float %291, %292, !dbg !13498
  %sub474 = fsub float 1.000000e+00, %div473, !dbg !13499
  %293 = load float*, float** %damp.addr, align 8, !dbg !13500
  %294 = load float, float* %293, align 4, !dbg !13501
  %mul475 = fmul float %294, %sub474, !dbg !13501
  store float %mul475, float* %293, align 4, !dbg !13501
  br label %if.end476, !dbg !13502

if.end476:                                        ; preds = %if.then472, %if.end466
  br label %if.end477, !dbg !13503

if.end477:                                        ; preds = %if.end476, %while.end448
  %295 = load i32, i32* %deflected, align 4, !dbg !13504
  %cmp478 = icmp eq i32 %295, 2, !dbg !13506
  br i1 %cmp478, label %if.then480, label %if.end482, !dbg !13507

if.then480:                                       ; preds = %if.end477
  %296 = load float*, float** %force.addr, align 8, !dbg !13508
  %arraydecay481 = getelementptr inbounds [3 x float], [3 x float]* %innerforceaccu, i64 0, i64 0, !dbg !13510
  call void @add_v3_v3(float* %296, float* %arraydecay481), !dbg !13511
  br label %if.end482, !dbg !13512

if.end482:                                        ; preds = %if.then480, %if.end477
  %297 = load i32, i32* %deflected, align 4, !dbg !13513
  %cmp483 = icmp eq i32 %297, 3, !dbg !13515
  br i1 %cmp483, label %if.then485, label %if.end487, !dbg !13516

if.then485:                                       ; preds = %if.end482
  %298 = load float*, float** %force.addr, align 8, !dbg !13517
  %arraydecay486 = getelementptr inbounds [3 x float], [3 x float]* %outerforceaccu, i64 0, i64 0, !dbg !13519
  call void @add_v3_v3(float* %298, float* %arraydecay486), !dbg !13520
  br label %if.end487, !dbg !13521

if.end487:                                        ; preds = %if.then485, %if.end482
  %299 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13522
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %299), !dbg !13523
  %300 = load i32, i32* %cavel, align 4, !dbg !13524
  %tobool488 = icmp ne i32 %300, 0, !dbg !13524
  br i1 %tobool488, label %if.then489, label %if.end493, !dbg !13526

if.then489:                                       ; preds = %if.end487
  %arraydecay490 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 0, !dbg !13527
  %301 = load i32, i32* %cavel, align 4, !dbg !13528
  %conv491 = sitofp i32 %301 to float, !dbg !13529
  %div492 = fdiv float 1.000000e+00, %conv491, !dbg !13530
  call void @mul_v3_fl(float* %arraydecay490, float %div492), !dbg !13531
  br label %if.end493, !dbg !13531

if.end493:                                        ; preds = %if.then489, %if.end487
  %302 = load float*, float** %vel.addr, align 8, !dbg !13532
  %arraydecay494 = getelementptr inbounds [3 x float], [3 x float]* %avel, i64 0, i64 0, !dbg !13533
  call void @copy_v3_v3(float* %302, float* %arraydecay494), !dbg !13534
  %303 = load i32, i32* %ci, align 4, !dbg !13535
  %tobool495 = icmp ne i32 %303, 0, !dbg !13535
  br i1 %tobool495, label %if.then496, label %if.end499, !dbg !13537

if.then496:                                       ; preds = %if.end493
  %304 = load i32, i32* %ci, align 4, !dbg !13538
  %conv497 = sitofp i32 %304 to float, !dbg !13538
  %305 = load float*, float** %intrusion.addr, align 8, !dbg !13539
  %306 = load float, float* %305, align 4, !dbg !13540
  %div498 = fdiv float %306, %conv497, !dbg !13540
  store float %div498, float* %305, align 4, !dbg !13540
  br label %if.end499, !dbg !13541

if.end499:                                        ; preds = %if.then496, %if.end493
  %307 = load i32, i32* %deflected, align 4, !dbg !13542
  %tobool500 = icmp ne i32 %307, 0, !dbg !13542
  br i1 %tobool500, label %if.then501, label %if.end503, !dbg !13544

if.then501:                                       ; preds = %if.end499
  %308 = load float*, float** %facenormal.addr, align 8, !dbg !13545
  %309 = load float*, float** %force.addr, align 8, !dbg !13547
  %call502 = call float @normalize_v3_v3(float* %308, float* %309), !dbg !13548
  br label %if.end503, !dbg !13549

if.end503:                                        ; preds = %if.then501, %if.end499
  %310 = load i32, i32* %deflected, align 4, !dbg !13550
  ret i32 %310, !dbg !13551
}

declare dso_local zeroext i8 @isect_point_tri_prism_v3(float*, float*, float*, float*) #2

; Function Attrs: nounwind
declare dso_local double @exp(double) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @choose_winner(float* %w, float* %pos, float* %a, float* %b, float* %c, float* %ca, float* %cb, float* %cc) #0 !dbg !13552 {
entry:
  %w.addr = alloca float*, align 8
  %pos.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  %ca.addr = alloca float*, align 8
  %cb.addr = alloca float*, align 8
  %cc.addr = alloca float*, align 8
  %mindist = alloca float, align 4
  %cp = alloca float, align 4
  %winner = alloca i32, align 4
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !13555, metadata !DIExpression()), !dbg !13556
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !13557, metadata !DIExpression()), !dbg !13558
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  store float* %ca, float** %ca.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ca.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  store float* %cb, float** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cb.addr, metadata !13567, metadata !DIExpression()), !dbg !13568
  store float* %cc, float** %cc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cc.addr, metadata !13569, metadata !DIExpression()), !dbg !13570
  call void @llvm.dbg.declare(metadata float* %mindist, metadata !13571, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.declare(metadata float* %cp, metadata !13573, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.declare(metadata i32* %winner, metadata !13575, metadata !DIExpression()), !dbg !13576
  store i32 1, i32* %winner, align 4, !dbg !13576
  %0 = load float*, float** %pos.addr, align 8, !dbg !13577
  %1 = load float*, float** %a.addr, align 8, !dbg !13578
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !13579
  %2 = call float @llvm.fabs.f32(float %call), !dbg !13580
  store float %2, float* %mindist, align 4, !dbg !13581
  %3 = load float*, float** %pos.addr, align 8, !dbg !13582
  %4 = load float*, float** %b.addr, align 8, !dbg !13583
  %call1 = call float @dot_v3v3(float* %3, float* %4), !dbg !13584
  %5 = call float @llvm.fabs.f32(float %call1), !dbg !13585
  store float %5, float* %cp, align 4, !dbg !13586
  %6 = load float, float* %mindist, align 4, !dbg !13587
  %7 = load float, float* %cp, align 4, !dbg !13589
  %cmp = fcmp olt float %6, %7, !dbg !13590
  br i1 %cmp, label %if.then, label %if.end, !dbg !13591

if.then:                                          ; preds = %entry
  %8 = load float, float* %cp, align 4, !dbg !13592
  store float %8, float* %mindist, align 4, !dbg !13594
  store i32 2, i32* %winner, align 4, !dbg !13595
  br label %if.end, !dbg !13596

if.end:                                           ; preds = %if.then, %entry
  %9 = load float*, float** %pos.addr, align 8, !dbg !13597
  %10 = load float*, float** %c.addr, align 8, !dbg !13598
  %call2 = call float @dot_v3v3(float* %9, float* %10), !dbg !13599
  %11 = call float @llvm.fabs.f32(float %call2), !dbg !13600
  store float %11, float* %cp, align 4, !dbg !13601
  %12 = load float, float* %mindist, align 4, !dbg !13602
  %13 = load float, float* %cp, align 4, !dbg !13604
  %cmp3 = fcmp olt float %12, %13, !dbg !13605
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13606

if.then4:                                         ; preds = %if.end
  %14 = load float, float* %cp, align 4, !dbg !13607
  store float %14, float* %mindist, align 4, !dbg !13609
  store i32 3, i32* %winner, align 4, !dbg !13610
  br label %if.end5, !dbg !13611

if.end5:                                          ; preds = %if.then4, %if.end
  %15 = load i32, i32* %winner, align 4, !dbg !13612
  switch i32 %15, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb7
  ], !dbg !13613

sw.bb:                                            ; preds = %if.end5
  %16 = load float*, float** %w.addr, align 8, !dbg !13614
  %17 = load float*, float** %ca.addr, align 8, !dbg !13616
  call void @copy_v3_v3(float* %16, float* %17), !dbg !13617
  br label %sw.epilog, !dbg !13618

sw.bb6:                                           ; preds = %if.end5
  %18 = load float*, float** %w.addr, align 8, !dbg !13619
  %19 = load float*, float** %cb.addr, align 8, !dbg !13620
  call void @copy_v3_v3(float* %18, float* %19), !dbg !13621
  br label %sw.epilog, !dbg !13622

sw.bb7:                                           ; preds = %if.end5
  %20 = load float*, float** %w.addr, align 8, !dbg !13623
  %21 = load float*, float** %cc.addr, align 8, !dbg !13624
  call void @copy_v3_v3(float* %20, float* %21), !dbg !13625
  br label %sw.epilog, !dbg !13626

sw.epilog:                                        ; preds = %sw.bb7, %if.end5, %sw.bb6, %sw.bb
  %22 = load i32, i32* %winner, align 4, !dbg !13627
  ret i32 %22, !dbg !13628
}

declare dso_local void @closest_to_line_segment_v3(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_detect_face_collisionCached(float* %face_v1, float* %face_v2, float* %face_v3, float* %damp, float* %force, i32 %UNUSED_par_layer, %struct.Object* %vertexowner, float %time) #0 !dbg !13629 {
entry:
  %face_v1.addr = alloca float*, align 8
  %face_v2.addr = alloca float*, align 8
  %face_v3.addr = alloca float*, align 8
  %damp.addr = alloca float*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_par_layer.addr = alloca i32, align 4
  %vertexowner.addr = alloca %struct.Object*, align 8
  %time.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %hash = alloca %struct.GHash*, align 8
  %ihash = alloca %struct.GHashIterator*, align 8
  %nv1 = alloca [3 x float], align 4
  %nv2 = alloca [3 x float], align 4
  %nv3 = alloca [3 x float], align 4
  %nv4 = alloca [3 x float], align 4
  %edge1 = alloca [3 x float], align 4
  %edge2 = alloca [3 x float], align 4
  %d_nvect = alloca [3 x float], align 4
  %aabbmin = alloca [3 x float], align 4
  %aabbmax = alloca [3 x float], align 4
  %t = alloca float, align 4
  %tune = alloca float, align 4
  %a = alloca i32, align 4
  %deflected = alloca i32, align 4
  %ccdm = alloca %struct.ccd_Mesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mprevvert = alloca %struct.MVert*, align 8
  %mima = alloca %struct.ccdf_minmax*, align 8
  store float* %face_v1, float** %face_v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v1.addr, metadata !13632, metadata !DIExpression()), !dbg !13633
  store float* %face_v2, float** %face_v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v2.addr, metadata !13634, metadata !DIExpression()), !dbg !13635
  store float* %face_v3, float** %face_v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v3.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  store float* %damp, float** %damp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %damp.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  store i32 %UNUSED_par_layer, i32* %UNUSED_par_layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_par_layer.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash, metadata !13650, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ihash, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.declare(metadata [3 x float]* %nv1, metadata !13654, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.declare(metadata [3 x float]* %nv2, metadata !13656, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.declare(metadata [3 x float]* %nv3, metadata !13658, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.declare(metadata [3 x float]* %nv4, metadata !13660, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.declare(metadata [3 x float]* %edge1, metadata !13662, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.declare(metadata [3 x float]* %edge2, metadata !13664, metadata !DIExpression()), !dbg !13665
  call void @llvm.dbg.declare(metadata [3 x float]* %d_nvect, metadata !13666, metadata !DIExpression()), !dbg !13667
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmin, metadata !13668, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmax, metadata !13670, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.declare(metadata float* %t, metadata !13672, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.declare(metadata float* %tune, metadata !13674, metadata !DIExpression()), !dbg !13675
  store float 1.000000e+01, float* %tune, align 4, !dbg !13675
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13676, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !13678, metadata !DIExpression()), !dbg !13679
  store i32 0, i32* %deflected, align 4, !dbg !13679
  %0 = load float*, float** %face_v1.addr, align 8, !dbg !13680
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13680
  %1 = load float, float* %arrayidx, align 4, !dbg !13680
  %2 = load float*, float** %face_v2.addr, align 8, !dbg !13681
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13681
  %3 = load float, float* %arrayidx1, align 4, !dbg !13681
  %4 = load float*, float** %face_v3.addr, align 8, !dbg !13682
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !13682
  %5 = load float, float* %arrayidx2, align 4, !dbg !13682
  %call = call float @min_fff(float %1, float %3, float %5), !dbg !13683
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !13684
  store float %call, float* %arrayidx3, align 4, !dbg !13685
  %6 = load float*, float** %face_v1.addr, align 8, !dbg !13686
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !13686
  %7 = load float, float* %arrayidx4, align 4, !dbg !13686
  %8 = load float*, float** %face_v2.addr, align 8, !dbg !13687
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !13687
  %9 = load float, float* %arrayidx5, align 4, !dbg !13687
  %10 = load float*, float** %face_v3.addr, align 8, !dbg !13688
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !13688
  %11 = load float, float* %arrayidx6, align 4, !dbg !13688
  %call7 = call float @min_fff(float %7, float %9, float %11), !dbg !13689
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !13690
  store float %call7, float* %arrayidx8, align 4, !dbg !13691
  %12 = load float*, float** %face_v1.addr, align 8, !dbg !13692
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 2, !dbg !13692
  %13 = load float, float* %arrayidx9, align 4, !dbg !13692
  %14 = load float*, float** %face_v2.addr, align 8, !dbg !13693
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !13693
  %15 = load float, float* %arrayidx10, align 4, !dbg !13693
  %16 = load float*, float** %face_v3.addr, align 8, !dbg !13694
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !13694
  %17 = load float, float* %arrayidx11, align 4, !dbg !13694
  %call12 = call float @min_fff(float %13, float %15, float %17), !dbg !13695
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !13696
  store float %call12, float* %arrayidx13, align 4, !dbg !13697
  %18 = load float*, float** %face_v1.addr, align 8, !dbg !13698
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !13698
  %19 = load float, float* %arrayidx14, align 4, !dbg !13698
  %20 = load float*, float** %face_v2.addr, align 8, !dbg !13699
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !13699
  %21 = load float, float* %arrayidx15, align 4, !dbg !13699
  %22 = load float*, float** %face_v3.addr, align 8, !dbg !13700
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !13700
  %23 = load float, float* %arrayidx16, align 4, !dbg !13700
  %call17 = call float @max_fff(float %19, float %21, float %23), !dbg !13701
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !13702
  store float %call17, float* %arrayidx18, align 4, !dbg !13703
  %24 = load float*, float** %face_v1.addr, align 8, !dbg !13704
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 1, !dbg !13704
  %25 = load float, float* %arrayidx19, align 4, !dbg !13704
  %26 = load float*, float** %face_v2.addr, align 8, !dbg !13705
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 1, !dbg !13705
  %27 = load float, float* %arrayidx20, align 4, !dbg !13705
  %28 = load float*, float** %face_v3.addr, align 8, !dbg !13706
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 1, !dbg !13706
  %29 = load float, float* %arrayidx21, align 4, !dbg !13706
  %call22 = call float @max_fff(float %25, float %27, float %29), !dbg !13707
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !13708
  store float %call22, float* %arrayidx23, align 4, !dbg !13709
  %30 = load float*, float** %face_v1.addr, align 8, !dbg !13710
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 2, !dbg !13710
  %31 = load float, float* %arrayidx24, align 4, !dbg !13710
  %32 = load float*, float** %face_v2.addr, align 8, !dbg !13711
  %arrayidx25 = getelementptr inbounds float, float* %32, i64 2, !dbg !13711
  %33 = load float, float* %arrayidx25, align 4, !dbg !13711
  %34 = load float*, float** %face_v3.addr, align 8, !dbg !13712
  %arrayidx26 = getelementptr inbounds float, float* %34, i64 2, !dbg !13712
  %35 = load float, float* %arrayidx26, align 4, !dbg !13712
  %call27 = call float @max_fff(float %31, float %33, float %35), !dbg !13713
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !13714
  store float %call27, float* %arrayidx28, align 4, !dbg !13715
  %36 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !13716
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 111, !dbg !13717
  %37 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !13717
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %37, i32 0, i32 44, !dbg !13718
  %38 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !13718
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %38, i32 0, i32 0, !dbg !13719
  %39 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !13719
  store %struct.GHash* %39, %struct.GHash** %hash, align 8, !dbg !13720
  %40 = load %struct.GHash*, %struct.GHash** %hash, align 8, !dbg !13721
  %call29 = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %40), !dbg !13722
  store %struct.GHashIterator* %call29, %struct.GHashIterator** %ihash, align 8, !dbg !13723
  br label %while.cond, !dbg !13724

while.cond:                                       ; preds = %if.end233, %if.else, %if.then73, %entry
  %41 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13725
  %call30 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %41), !dbg !13726
  %tobool = icmp ne i8 %call30, 0, !dbg !13727
  %lnot = xor i1 %tobool, true, !dbg !13727
  br i1 %lnot, label %while.body, label %while.end234, !dbg !13724

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm, metadata !13728, metadata !DIExpression()), !dbg !13730
  %42 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13731
  %call31 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %42), !dbg !13732
  %43 = bitcast i8* %call31 to %struct.ccd_Mesh*, !dbg !13732
  store %struct.ccd_Mesh* %43, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13730
  %44 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13733
  %call32 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %44), !dbg !13734
  %45 = bitcast i8* %call32 to %struct.Object*, !dbg !13734
  store %struct.Object* %45, %struct.Object** %ob, align 8, !dbg !13735
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13736
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 110, !dbg !13738
  %47 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13738
  %tobool33 = icmp ne %struct.PartDeflect* %47, null, !dbg !13736
  br i1 %tobool33, label %land.lhs.true, label %if.end233, !dbg !13739

land.lhs.true:                                    ; preds = %while.body
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13740
  %pd34 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 110, !dbg !13741
  %49 = load %struct.PartDeflect*, %struct.PartDeflect** %pd34, align 8, !dbg !13741
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %49, i32 0, i32 1, !dbg !13742
  %50 = load i16, i16* %deflect, align 4, !dbg !13742
  %conv = sext i16 %50 to i32, !dbg !13740
  %tobool35 = icmp ne i32 %conv, 0, !dbg !13740
  br i1 %tobool35, label %if.then, label %if.end233, !dbg !13743

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !13744, metadata !DIExpression()), !dbg !13746
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !13746
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !13747, metadata !DIExpression()), !dbg !13748
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !13748
  call void @llvm.dbg.declare(metadata %struct.MVert** %mprevvert, metadata !13749, metadata !DIExpression()), !dbg !13750
  store %struct.MVert* null, %struct.MVert** %mprevvert, align 8, !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.ccdf_minmax** %mima, metadata !13751, metadata !DIExpression()), !dbg !13752
  store %struct.ccdf_minmax* null, %struct.ccdf_minmax** %mima, align 8, !dbg !13752
  %51 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13753
  %tobool36 = icmp ne %struct.ccd_Mesh* %51, null, !dbg !13753
  br i1 %tobool36, label %if.then37, label %if.else, !dbg !13755

if.then37:                                        ; preds = %if.then
  %52 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13756
  %mface38 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %52, i32 0, i32 4, !dbg !13758
  %53 = load %struct.MFace*, %struct.MFace** %mface38, align 8, !dbg !13758
  store %struct.MFace* %53, %struct.MFace** %mface, align 8, !dbg !13759
  %54 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13760
  %mvert39 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %54, i32 0, i32 2, !dbg !13761
  %55 = load %struct.MVert*, %struct.MVert** %mvert39, align 8, !dbg !13761
  store %struct.MVert* %55, %struct.MVert** %mvert, align 8, !dbg !13762
  %56 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13763
  %mprevvert40 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %56, i32 0, i32 3, !dbg !13764
  %57 = load %struct.MVert*, %struct.MVert** %mprevvert40, align 8, !dbg !13764
  store %struct.MVert* %57, %struct.MVert** %mprevvert, align 8, !dbg !13765
  %58 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13766
  %mima41 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %58, i32 0, i32 6, !dbg !13767
  %59 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima41, align 8, !dbg !13767
  store %struct.ccdf_minmax* %59, %struct.ccdf_minmax** %mima, align 8, !dbg !13768
  %60 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13769
  %totface = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %60, i32 0, i32 1, !dbg !13770
  %61 = load i32, i32* %totface, align 4, !dbg !13770
  store i32 %61, i32* %a, align 4, !dbg !13771
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !13772
  %62 = load float, float* %arrayidx42, align 4, !dbg !13772
  %63 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13774
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %63, i32 0, i32 7, !dbg !13775
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 0, !dbg !13774
  %64 = load float, float* %arrayidx43, align 8, !dbg !13774
  %cmp = fcmp olt float %62, %64, !dbg !13776
  br i1 %cmp, label %if.then73, label %lor.lhs.false, !dbg !13777

lor.lhs.false:                                    ; preds = %if.then37
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !13778
  %65 = load float, float* %arrayidx45, align 4, !dbg !13778
  %66 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13779
  %bbmin46 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %66, i32 0, i32 7, !dbg !13780
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %bbmin46, i64 0, i64 1, !dbg !13779
  %67 = load float, float* %arrayidx47, align 4, !dbg !13779
  %cmp48 = fcmp olt float %65, %67, !dbg !13781
  br i1 %cmp48, label %if.then73, label %lor.lhs.false50, !dbg !13782

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !13783
  %68 = load float, float* %arrayidx51, align 4, !dbg !13783
  %69 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13784
  %bbmin52 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %69, i32 0, i32 7, !dbg !13785
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %bbmin52, i64 0, i64 2, !dbg !13784
  %70 = load float, float* %arrayidx53, align 8, !dbg !13784
  %cmp54 = fcmp olt float %68, %70, !dbg !13786
  br i1 %cmp54, label %if.then73, label %lor.lhs.false56, !dbg !13787

lor.lhs.false56:                                  ; preds = %lor.lhs.false50
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !13788
  %71 = load float, float* %arrayidx57, align 4, !dbg !13788
  %72 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13789
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %72, i32 0, i32 8, !dbg !13790
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 0, !dbg !13789
  %73 = load float, float* %arrayidx58, align 4, !dbg !13789
  %cmp59 = fcmp ogt float %71, %73, !dbg !13791
  br i1 %cmp59, label %if.then73, label %lor.lhs.false61, !dbg !13792

lor.lhs.false61:                                  ; preds = %lor.lhs.false56
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !13793
  %74 = load float, float* %arrayidx62, align 4, !dbg !13793
  %75 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13794
  %bbmax63 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %75, i32 0, i32 8, !dbg !13795
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %bbmax63, i64 0, i64 1, !dbg !13794
  %76 = load float, float* %arrayidx64, align 4, !dbg !13794
  %cmp65 = fcmp ogt float %74, %76, !dbg !13796
  br i1 %cmp65, label %if.then73, label %lor.lhs.false67, !dbg !13797

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !13798
  %77 = load float, float* %arrayidx68, align 4, !dbg !13798
  %78 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !13799
  %bbmax69 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %78, i32 0, i32 8, !dbg !13800
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %bbmax69, i64 0, i64 2, !dbg !13799
  %79 = load float, float* %arrayidx70, align 4, !dbg !13799
  %cmp71 = fcmp ogt float %77, %79, !dbg !13801
  br i1 %cmp71, label %if.then73, label %if.end, !dbg !13802

if.then73:                                        ; preds = %lor.lhs.false67, %lor.lhs.false61, %lor.lhs.false56, %lor.lhs.false50, %lor.lhs.false, %if.then37
  %80 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13803
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %80), !dbg !13805
  br label %while.cond, !dbg !13806, !llvm.loop !13807

if.end:                                           ; preds = %lor.lhs.false67
  br label %if.end75, !dbg !13809

if.else:                                          ; preds = %if.then
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)), !dbg !13810
  %81 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !13812
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %81), !dbg !13813
  br label %while.cond, !dbg !13814, !llvm.loop !13807

if.end75:                                         ; preds = %if.end
  br label %while.cond76, !dbg !13815

while.cond76:                                     ; preds = %if.end230, %if.then102, %if.end75
  %82 = load i32, i32* %a, align 4, !dbg !13816
  %dec = add nsw i32 %82, -1, !dbg !13816
  store i32 %dec, i32* %a, align 4, !dbg !13816
  %tobool77 = icmp ne i32 %82, 0, !dbg !13815
  br i1 %tobool77, label %while.body78, label %while.end, !dbg !13815

while.body78:                                     ; preds = %while.cond76
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !13817
  %83 = load float, float* %arrayidx79, align 4, !dbg !13817
  %84 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13820
  %minx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %84, i32 0, i32 0, !dbg !13821
  %85 = load float, float* %minx, align 4, !dbg !13821
  %cmp80 = fcmp olt float %83, %85, !dbg !13822
  br i1 %cmp80, label %if.then102, label %lor.lhs.false82, !dbg !13823

lor.lhs.false82:                                  ; preds = %while.body78
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !13824
  %86 = load float, float* %arrayidx83, align 4, !dbg !13824
  %87 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13825
  %maxx = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %87, i32 0, i32 3, !dbg !13826
  %88 = load float, float* %maxx, align 4, !dbg !13826
  %cmp84 = fcmp ogt float %86, %88, !dbg !13827
  br i1 %cmp84, label %if.then102, label %lor.lhs.false86, !dbg !13828

lor.lhs.false86:                                  ; preds = %lor.lhs.false82
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !13829
  %89 = load float, float* %arrayidx87, align 4, !dbg !13829
  %90 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13830
  %miny = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %90, i32 0, i32 1, !dbg !13831
  %91 = load float, float* %miny, align 4, !dbg !13831
  %cmp88 = fcmp olt float %89, %91, !dbg !13832
  br i1 %cmp88, label %if.then102, label %lor.lhs.false90, !dbg !13833

lor.lhs.false90:                                  ; preds = %lor.lhs.false86
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !13834
  %92 = load float, float* %arrayidx91, align 4, !dbg !13834
  %93 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13835
  %maxy = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %93, i32 0, i32 4, !dbg !13836
  %94 = load float, float* %maxy, align 4, !dbg !13836
  %cmp92 = fcmp ogt float %92, %94, !dbg !13837
  br i1 %cmp92, label %if.then102, label %lor.lhs.false94, !dbg !13838

lor.lhs.false94:                                  ; preds = %lor.lhs.false90
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !13839
  %95 = load float, float* %arrayidx95, align 4, !dbg !13839
  %96 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13840
  %minz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %96, i32 0, i32 2, !dbg !13841
  %97 = load float, float* %minz, align 4, !dbg !13841
  %cmp96 = fcmp olt float %95, %97, !dbg !13842
  br i1 %cmp96, label %if.then102, label %lor.lhs.false98, !dbg !13843

lor.lhs.false98:                                  ; preds = %lor.lhs.false94
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !13844
  %98 = load float, float* %arrayidx99, align 4, !dbg !13844
  %99 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13845
  %maxz = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %99, i32 0, i32 5, !dbg !13846
  %100 = load float, float* %maxz, align 4, !dbg !13846
  %cmp100 = fcmp ogt float %98, %100, !dbg !13847
  br i1 %cmp100, label %if.then102, label %if.end104, !dbg !13848

if.then102:                                       ; preds = %lor.lhs.false98, %lor.lhs.false94, %lor.lhs.false90, %lor.lhs.false86, %lor.lhs.false82, %while.body78
  %101 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13849
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %101, i32 1, !dbg !13849
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !13849
  %102 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !13851
  %incdec.ptr103 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %102, i32 1, !dbg !13851
  store %struct.ccdf_minmax* %incdec.ptr103, %struct.ccdf_minmax** %mima, align 8, !dbg !13851
  br label %while.cond76, !dbg !13852, !llvm.loop !13853

if.end104:                                        ; preds = %lor.lhs.false98
  %103 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13855
  %tobool105 = icmp ne %struct.MVert* %103, null, !dbg !13855
  br i1 %tobool105, label %if.then106, label %if.end166, !dbg !13857

if.then106:                                       ; preds = %if.end104
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13858
  %104 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13860
  %105 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13861
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 0, !dbg !13862
  %106 = load i32, i32* %v1, align 4, !dbg !13862
  %idxprom = zext i32 %106 to i64, !dbg !13860
  %arrayidx107 = getelementptr inbounds %struct.MVert, %struct.MVert* %104, i64 %idxprom, !dbg !13860
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx107, i32 0, i32 0, !dbg !13863
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13860
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay108), !dbg !13864
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13865
  %107 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13866
  %108 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13867
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 0, i32 1, !dbg !13868
  %109 = load i32, i32* %v2, align 4, !dbg !13868
  %idxprom110 = zext i32 %109 to i64, !dbg !13866
  %arrayidx111 = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i64 %idxprom110, !dbg !13866
  %co112 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx111, i32 0, i32 0, !dbg !13869
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %co112, i64 0, i64 0, !dbg !13866
  call void @copy_v3_v3(float* %arraydecay109, float* %arraydecay113), !dbg !13870
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13871
  %110 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13872
  %111 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13873
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 2, !dbg !13874
  %112 = load i32, i32* %v3, align 4, !dbg !13874
  %idxprom115 = zext i32 %112 to i64, !dbg !13872
  %arrayidx116 = getelementptr inbounds %struct.MVert, %struct.MVert* %110, i64 %idxprom115, !dbg !13872
  %co117 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx116, i32 0, i32 0, !dbg !13875
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %co117, i64 0, i64 0, !dbg !13872
  call void @copy_v3_v3(float* %arraydecay114, float* %arraydecay118), !dbg !13876
  %113 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13877
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %113, i32 0, i32 3, !dbg !13879
  %114 = load i32, i32* %v4, align 4, !dbg !13879
  %tobool119 = icmp ne i32 %114, 0, !dbg !13877
  br i1 %tobool119, label %if.then120, label %if.end127, !dbg !13880

if.then120:                                       ; preds = %if.then106
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13881
  %115 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13883
  %116 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13884
  %v4122 = getelementptr inbounds %struct.MFace, %struct.MFace* %116, i32 0, i32 3, !dbg !13885
  %117 = load i32, i32* %v4122, align 4, !dbg !13885
  %idxprom123 = zext i32 %117 to i64, !dbg !13883
  %arrayidx124 = getelementptr inbounds %struct.MVert, %struct.MVert* %115, i64 %idxprom123, !dbg !13883
  %co125 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx124, i32 0, i32 0, !dbg !13886
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %co125, i64 0, i64 0, !dbg !13883
  call void @copy_v3_v3(float* %arraydecay121, float* %arraydecay126), !dbg !13887
  br label %if.end127, !dbg !13888

if.end127:                                        ; preds = %if.then120, %if.then106
  %118 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13889
  %tobool128 = icmp ne %struct.MVert* %118, null, !dbg !13889
  br i1 %tobool128, label %if.then129, label %if.end165, !dbg !13891

if.then129:                                       ; preds = %if.end127
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13892
  %119 = load float, float* %time.addr, align 4, !dbg !13894
  call void @mul_v3_fl(float* %arraydecay130, float %119), !dbg !13895
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13896
  %120 = load float, float* %time.addr, align 4, !dbg !13897
  %sub = fsub float 1.000000e+00, %120, !dbg !13898
  %121 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13899
  %122 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13900
  %v1132 = getelementptr inbounds %struct.MFace, %struct.MFace* %122, i32 0, i32 0, !dbg !13901
  %123 = load i32, i32* %v1132, align 4, !dbg !13901
  %idxprom133 = zext i32 %123 to i64, !dbg !13899
  %arrayidx134 = getelementptr inbounds %struct.MVert, %struct.MVert* %121, i64 %idxprom133, !dbg !13899
  %co135 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx134, i32 0, i32 0, !dbg !13902
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !13899
  call void @Vec3PlusStVec(float* %arraydecay131, float %sub, float* %arraydecay136), !dbg !13903
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13904
  %124 = load float, float* %time.addr, align 4, !dbg !13905
  call void @mul_v3_fl(float* %arraydecay137, float %124), !dbg !13906
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13907
  %125 = load float, float* %time.addr, align 4, !dbg !13908
  %sub139 = fsub float 1.000000e+00, %125, !dbg !13909
  %126 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13910
  %127 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13911
  %v2140 = getelementptr inbounds %struct.MFace, %struct.MFace* %127, i32 0, i32 1, !dbg !13912
  %128 = load i32, i32* %v2140, align 4, !dbg !13912
  %idxprom141 = zext i32 %128 to i64, !dbg !13910
  %arrayidx142 = getelementptr inbounds %struct.MVert, %struct.MVert* %126, i64 %idxprom141, !dbg !13910
  %co143 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx142, i32 0, i32 0, !dbg !13913
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 0, !dbg !13910
  call void @Vec3PlusStVec(float* %arraydecay138, float %sub139, float* %arraydecay144), !dbg !13914
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13915
  %129 = load float, float* %time.addr, align 4, !dbg !13916
  call void @mul_v3_fl(float* %arraydecay145, float %129), !dbg !13917
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13918
  %130 = load float, float* %time.addr, align 4, !dbg !13919
  %sub147 = fsub float 1.000000e+00, %130, !dbg !13920
  %131 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13921
  %132 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13922
  %v3148 = getelementptr inbounds %struct.MFace, %struct.MFace* %132, i32 0, i32 2, !dbg !13923
  %133 = load i32, i32* %v3148, align 4, !dbg !13923
  %idxprom149 = zext i32 %133 to i64, !dbg !13921
  %arrayidx150 = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i64 %idxprom149, !dbg !13921
  %co151 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx150, i32 0, i32 0, !dbg !13924
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %co151, i64 0, i64 0, !dbg !13921
  call void @Vec3PlusStVec(float* %arraydecay146, float %sub147, float* %arraydecay152), !dbg !13925
  %134 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13926
  %v4153 = getelementptr inbounds %struct.MFace, %struct.MFace* %134, i32 0, i32 3, !dbg !13928
  %135 = load i32, i32* %v4153, align 4, !dbg !13928
  %tobool154 = icmp ne i32 %135, 0, !dbg !13926
  br i1 %tobool154, label %if.then155, label %if.end164, !dbg !13929

if.then155:                                       ; preds = %if.then129
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13930
  %136 = load float, float* %time.addr, align 4, !dbg !13932
  call void @mul_v3_fl(float* %arraydecay156, float %136), !dbg !13933
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !13934
  %137 = load float, float* %time.addr, align 4, !dbg !13935
  %sub158 = fsub float 1.000000e+00, %137, !dbg !13936
  %138 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !13937
  %139 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13938
  %v4159 = getelementptr inbounds %struct.MFace, %struct.MFace* %139, i32 0, i32 3, !dbg !13939
  %140 = load i32, i32* %v4159, align 4, !dbg !13939
  %idxprom160 = zext i32 %140 to i64, !dbg !13937
  %arrayidx161 = getelementptr inbounds %struct.MVert, %struct.MVert* %138, i64 %idxprom160, !dbg !13937
  %co162 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx161, i32 0, i32 0, !dbg !13940
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %co162, i64 0, i64 0, !dbg !13937
  call void @Vec3PlusStVec(float* %arraydecay157, float %sub158, float* %arraydecay163), !dbg !13941
  br label %if.end164, !dbg !13942

if.end164:                                        ; preds = %if.then155, %if.then129
  br label %if.end165, !dbg !13943

if.end165:                                        ; preds = %if.end164, %if.end127
  br label %if.end166, !dbg !13944

if.end166:                                        ; preds = %if.end165, %if.end104
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13945
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13946
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13947
  call void @sub_v3_v3v3(float* %arraydecay167, float* %arraydecay168, float* %arraydecay169), !dbg !13948
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13949
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13950
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13951
  call void @sub_v3_v3v3(float* %arraydecay170, float* %arraydecay171, float* %arraydecay172), !dbg !13952
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13953
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !13954
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13955
  call void @cross_v3_v3v3(float* %arraydecay173, float* %arraydecay174, float* %arraydecay175), !dbg !13956
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13957
  %call177 = call float @normalize_v3(float* %arraydecay176), !dbg !13958
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13959
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13961
  %141 = load float*, float** %face_v1.addr, align 8, !dbg !13962
  %142 = load float*, float** %face_v2.addr, align 8, !dbg !13963
  %143 = load float*, float** %face_v3.addr, align 8, !dbg !13964
  %call180 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay178, float* %arraydecay179, float* %141, float* %142, float* %143, float* %t, float* null), !dbg !13965
  %conv181 = zext i8 %call180 to i32, !dbg !13965
  %tobool182 = icmp ne i32 %conv181, 0, !dbg !13965
  br i1 %tobool182, label %if.then195, label %lor.lhs.false183, !dbg !13966

lor.lhs.false183:                                 ; preds = %if.end166
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %nv2, i64 0, i64 0, !dbg !13967
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13968
  %144 = load float*, float** %face_v1.addr, align 8, !dbg !13969
  %145 = load float*, float** %face_v2.addr, align 8, !dbg !13970
  %146 = load float*, float** %face_v3.addr, align 8, !dbg !13971
  %call186 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay184, float* %arraydecay185, float* %144, float* %145, float* %146, float* %t, float* null), !dbg !13972
  %conv187 = zext i8 %call186 to i32, !dbg !13972
  %tobool188 = icmp ne i32 %conv187, 0, !dbg !13972
  br i1 %tobool188, label %if.then195, label %lor.lhs.false189, !dbg !13973

lor.lhs.false189:                                 ; preds = %lor.lhs.false183
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !13974
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !13975
  %147 = load float*, float** %face_v1.addr, align 8, !dbg !13976
  %148 = load float*, float** %face_v2.addr, align 8, !dbg !13977
  %149 = load float*, float** %face_v3.addr, align 8, !dbg !13978
  %call192 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay190, float* %arraydecay191, float* %147, float* %148, float* %149, float* %t, float* null), !dbg !13979
  %conv193 = zext i8 %call192 to i32, !dbg !13979
  %tobool194 = icmp ne i32 %conv193, 0, !dbg !13979
  br i1 %tobool194, label %if.then195, label %if.end198, !dbg !13980

if.then195:                                       ; preds = %lor.lhs.false189, %lor.lhs.false183, %if.end166
  %150 = load float*, float** %force.addr, align 8, !dbg !13981
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !13983
  call void @Vec3PlusStVec(float* %150, float -5.000000e-01, float* %arraydecay196), !dbg !13984
  %151 = load float, float* %tune, align 4, !dbg !13985
  %152 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13986
  %pd197 = getelementptr inbounds %struct.Object, %struct.Object* %152, i32 0, i32 110, !dbg !13987
  %153 = load %struct.PartDeflect*, %struct.PartDeflect** %pd197, align 8, !dbg !13987
  %pdef_sbdamp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %153, i32 0, i32 26, !dbg !13988
  %154 = load float, float* %pdef_sbdamp, align 8, !dbg !13988
  %mul = fmul float %151, %154, !dbg !13989
  %155 = load float*, float** %damp.addr, align 8, !dbg !13990
  store float %mul, float* %155, align 4, !dbg !13991
  store i32 2, i32* %deflected, align 4, !dbg !13992
  br label %if.end198, !dbg !13993

if.end198:                                        ; preds = %if.then195, %lor.lhs.false189
  %156 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13994
  %v4199 = getelementptr inbounds %struct.MFace, %struct.MFace* %156, i32 0, i32 3, !dbg !13996
  %157 = load i32, i32* %v4199, align 4, !dbg !13996
  %tobool200 = icmp ne i32 %157, 0, !dbg !13994
  br i1 %tobool200, label %if.then201, label %if.end230, !dbg !13997

if.then201:                                       ; preds = %if.end198
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !13998
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !14000
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !14001
  call void @sub_v3_v3v3(float* %arraydecay202, float* %arraydecay203, float* %arraydecay204), !dbg !14002
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !14003
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14004
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !14005
  call void @sub_v3_v3v3(float* %arraydecay205, float* %arraydecay206, float* %arraydecay207), !dbg !14006
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14007
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !14008
  %arraydecay210 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !14009
  call void @cross_v3_v3v3(float* %arraydecay208, float* %arraydecay209, float* %arraydecay210), !dbg !14010
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14011
  %call212 = call float @normalize_v3(float* %arraydecay211), !dbg !14012
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %nv3, i64 0, i64 0, !dbg !14013
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !14015
  %158 = load float*, float** %face_v1.addr, align 8, !dbg !14016
  %159 = load float*, float** %face_v2.addr, align 8, !dbg !14017
  %160 = load float*, float** %face_v3.addr, align 8, !dbg !14018
  %call215 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay213, float* %arraydecay214, float* %158, float* %159, float* %160, float* %t, float* null), !dbg !14019
  %conv216 = zext i8 %call215 to i32, !dbg !14019
  %tobool217 = icmp ne i32 %conv216, 0, !dbg !14019
  br i1 %tobool217, label %if.then224, label %lor.lhs.false218, !dbg !14020

lor.lhs.false218:                                 ; preds = %if.then201
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %nv4, i64 0, i64 0, !dbg !14021
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14022
  %161 = load float*, float** %face_v1.addr, align 8, !dbg !14023
  %162 = load float*, float** %face_v2.addr, align 8, !dbg !14024
  %163 = load float*, float** %face_v3.addr, align 8, !dbg !14025
  %call221 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay219, float* %arraydecay220, float* %161, float* %162, float* %163, float* %t, float* null), !dbg !14026
  %conv222 = zext i8 %call221 to i32, !dbg !14026
  %tobool223 = icmp ne i32 %conv222, 0, !dbg !14026
  br i1 %tobool223, label %if.then224, label %if.end229, !dbg !14027

if.then224:                                       ; preds = %lor.lhs.false218, %if.then201
  %164 = load float*, float** %force.addr, align 8, !dbg !14028
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14030
  call void @Vec3PlusStVec(float* %164, float -5.000000e-01, float* %arraydecay225), !dbg !14031
  %165 = load float, float* %tune, align 4, !dbg !14032
  %166 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14033
  %pd226 = getelementptr inbounds %struct.Object, %struct.Object* %166, i32 0, i32 110, !dbg !14034
  %167 = load %struct.PartDeflect*, %struct.PartDeflect** %pd226, align 8, !dbg !14034
  %pdef_sbdamp227 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %167, i32 0, i32 26, !dbg !14035
  %168 = load float, float* %pdef_sbdamp227, align 8, !dbg !14035
  %mul228 = fmul float %165, %168, !dbg !14036
  %169 = load float*, float** %damp.addr, align 8, !dbg !14037
  store float %mul228, float* %169, align 4, !dbg !14038
  store i32 2, i32* %deflected, align 4, !dbg !14039
  br label %if.end229, !dbg !14040

if.end229:                                        ; preds = %if.then224, %lor.lhs.false218
  br label %if.end230, !dbg !14041

if.end230:                                        ; preds = %if.end229, %if.end198
  %170 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14042
  %incdec.ptr231 = getelementptr inbounds %struct.MFace, %struct.MFace* %170, i32 1, !dbg !14042
  store %struct.MFace* %incdec.ptr231, %struct.MFace** %mface, align 8, !dbg !14042
  %171 = load %struct.ccdf_minmax*, %struct.ccdf_minmax** %mima, align 8, !dbg !14043
  %incdec.ptr232 = getelementptr inbounds %struct.ccdf_minmax, %struct.ccdf_minmax* %171, i32 1, !dbg !14043
  store %struct.ccdf_minmax* %incdec.ptr232, %struct.ccdf_minmax** %mima, align 8, !dbg !14043
  br label %while.cond76, !dbg !13815, !llvm.loop !13853

while.end:                                        ; preds = %while.cond76
  br label %if.end233, !dbg !14044

if.end233:                                        ; preds = %while.end, %land.lhs.true, %while.body
  %172 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14045
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %172), !dbg !14046
  br label %while.cond, !dbg !13724, !llvm.loop !13807

while.end234:                                     ; preds = %while.cond
  %173 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14047
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %173), !dbg !14048
  %174 = load i32, i32* %deflected, align 4, !dbg !14049
  ret i32 %174, !dbg !14050
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sb_detect_face_pointCached(float* %face_v1, float* %face_v2, float* %face_v3, float* %damp, float* %force, i32 %UNUSED_par_layer, %struct.Object* %vertexowner, float %time) #0 !dbg !14051 {
entry:
  %face_v1.addr = alloca float*, align 8
  %face_v2.addr = alloca float*, align 8
  %face_v3.addr = alloca float*, align 8
  %damp.addr = alloca float*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_par_layer.addr = alloca i32, align 4
  %vertexowner.addr = alloca %struct.Object*, align 8
  %time.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %hash = alloca %struct.GHash*, align 8
  %ihash = alloca %struct.GHashIterator*, align 8
  %nv1 = alloca [3 x float], align 4
  %edge1 = alloca [3 x float], align 4
  %edge2 = alloca [3 x float], align 4
  %d_nvect = alloca [3 x float], align 4
  %aabbmin = alloca [3 x float], align 4
  %aabbmax = alloca [3 x float], align 4
  %facedist = alloca float, align 4
  %outerfacethickness = alloca float, align 4
  %tune = alloca float, align 4
  %a = alloca i32, align 4
  %deflected = alloca i32, align 4
  %ccdm = alloca %struct.ccd_Mesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mprevvert = alloca %struct.MVert*, align 8
  %df = alloca float, align 4
  store float* %face_v1, float** %face_v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v1.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  store float* %face_v2, float** %face_v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v2.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  store float* %face_v3, float** %face_v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %face_v3.addr, metadata !14056, metadata !DIExpression()), !dbg !14057
  store float* %damp, float** %damp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %damp.addr, metadata !14058, metadata !DIExpression()), !dbg !14059
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i32 %UNUSED_par_layer, i32* %UNUSED_par_layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_par_layer.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  store %struct.Object* %vertexowner, %struct.Object** %vertexowner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %vertexowner.addr, metadata !14064, metadata !DIExpression()), !dbg !14065
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !14066, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata %struct.GHash** %hash, metadata !14070, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ihash, metadata !14072, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.declare(metadata [3 x float]* %nv1, metadata !14074, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.declare(metadata [3 x float]* %edge1, metadata !14076, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.declare(metadata [3 x float]* %edge2, metadata !14078, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.declare(metadata [3 x float]* %d_nvect, metadata !14080, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmin, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.declare(metadata [3 x float]* %aabbmax, metadata !14084, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.declare(metadata float* %facedist, metadata !14086, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.declare(metadata float* %outerfacethickness, metadata !14088, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.declare(metadata float* %tune, metadata !14090, metadata !DIExpression()), !dbg !14091
  store float 1.000000e+01, float* %tune, align 4, !dbg !14091
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14092, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.declare(metadata i32* %deflected, metadata !14094, metadata !DIExpression()), !dbg !14095
  store i32 0, i32* %deflected, align 4, !dbg !14095
  %0 = load float*, float** %face_v1.addr, align 8, !dbg !14096
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14096
  %1 = load float, float* %arrayidx, align 4, !dbg !14096
  %2 = load float*, float** %face_v2.addr, align 8, !dbg !14097
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14097
  %3 = load float, float* %arrayidx1, align 4, !dbg !14097
  %4 = load float*, float** %face_v3.addr, align 8, !dbg !14098
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !14098
  %5 = load float, float* %arrayidx2, align 4, !dbg !14098
  %call = call float @min_fff(float %1, float %3, float %5), !dbg !14099
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !14100
  store float %call, float* %arrayidx3, align 4, !dbg !14101
  %6 = load float*, float** %face_v1.addr, align 8, !dbg !14102
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !14102
  %7 = load float, float* %arrayidx4, align 4, !dbg !14102
  %8 = load float*, float** %face_v2.addr, align 8, !dbg !14103
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 1, !dbg !14103
  %9 = load float, float* %arrayidx5, align 4, !dbg !14103
  %10 = load float*, float** %face_v3.addr, align 8, !dbg !14104
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 1, !dbg !14104
  %11 = load float, float* %arrayidx6, align 4, !dbg !14104
  %call7 = call float @min_fff(float %7, float %9, float %11), !dbg !14105
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !14106
  store float %call7, float* %arrayidx8, align 4, !dbg !14107
  %12 = load float*, float** %face_v1.addr, align 8, !dbg !14108
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 2, !dbg !14108
  %13 = load float, float* %arrayidx9, align 4, !dbg !14108
  %14 = load float*, float** %face_v2.addr, align 8, !dbg !14109
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !14109
  %15 = load float, float* %arrayidx10, align 4, !dbg !14109
  %16 = load float*, float** %face_v3.addr, align 8, !dbg !14110
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !14110
  %17 = load float, float* %arrayidx11, align 4, !dbg !14110
  %call12 = call float @min_fff(float %13, float %15, float %17), !dbg !14111
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !14112
  store float %call12, float* %arrayidx13, align 4, !dbg !14113
  %18 = load float*, float** %face_v1.addr, align 8, !dbg !14114
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !14114
  %19 = load float, float* %arrayidx14, align 4, !dbg !14114
  %20 = load float*, float** %face_v2.addr, align 8, !dbg !14115
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !14115
  %21 = load float, float* %arrayidx15, align 4, !dbg !14115
  %22 = load float*, float** %face_v3.addr, align 8, !dbg !14116
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !14116
  %23 = load float, float* %arrayidx16, align 4, !dbg !14116
  %call17 = call float @max_fff(float %19, float %21, float %23), !dbg !14117
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !14118
  store float %call17, float* %arrayidx18, align 4, !dbg !14119
  %24 = load float*, float** %face_v1.addr, align 8, !dbg !14120
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 1, !dbg !14120
  %25 = load float, float* %arrayidx19, align 4, !dbg !14120
  %26 = load float*, float** %face_v2.addr, align 8, !dbg !14121
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 1, !dbg !14121
  %27 = load float, float* %arrayidx20, align 4, !dbg !14121
  %28 = load float*, float** %face_v3.addr, align 8, !dbg !14122
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 1, !dbg !14122
  %29 = load float, float* %arrayidx21, align 4, !dbg !14122
  %call22 = call float @max_fff(float %25, float %27, float %29), !dbg !14123
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !14124
  store float %call22, float* %arrayidx23, align 4, !dbg !14125
  %30 = load float*, float** %face_v1.addr, align 8, !dbg !14126
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 2, !dbg !14126
  %31 = load float, float* %arrayidx24, align 4, !dbg !14126
  %32 = load float*, float** %face_v2.addr, align 8, !dbg !14127
  %arrayidx25 = getelementptr inbounds float, float* %32, i64 2, !dbg !14127
  %33 = load float, float* %arrayidx25, align 4, !dbg !14127
  %34 = load float*, float** %face_v3.addr, align 8, !dbg !14128
  %arrayidx26 = getelementptr inbounds float, float* %34, i64 2, !dbg !14128
  %35 = load float, float* %arrayidx26, align 4, !dbg !14128
  %call27 = call float @max_fff(float %31, float %33, float %35), !dbg !14129
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !14130
  store float %call27, float* %arrayidx28, align 4, !dbg !14131
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !14132
  %36 = load float*, float** %face_v1.addr, align 8, !dbg !14133
  %37 = load float*, float** %face_v2.addr, align 8, !dbg !14134
  call void @sub_v3_v3v3(float* %arraydecay, float* %36, float* %37), !dbg !14135
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !14136
  %38 = load float*, float** %face_v3.addr, align 8, !dbg !14137
  %39 = load float*, float** %face_v2.addr, align 8, !dbg !14138
  call void @sub_v3_v3v3(float* %arraydecay29, float* %38, float* %39), !dbg !14139
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14140
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %edge2, i64 0, i64 0, !dbg !14141
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %edge1, i64 0, i64 0, !dbg !14142
  call void @cross_v3_v3v3(float* %arraydecay30, float* %arraydecay31, float* %arraydecay32), !dbg !14143
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14144
  %call34 = call float @normalize_v3(float* %arraydecay33), !dbg !14145
  %40 = load %struct.Object*, %struct.Object** %vertexowner.addr, align 8, !dbg !14146
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 111, !dbg !14147
  %41 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !14147
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %41, i32 0, i32 44, !dbg !14148
  %42 = load %struct.SBScratch*, %struct.SBScratch** %scratch, align 8, !dbg !14148
  %colliderhash = getelementptr inbounds %struct.SBScratch, %struct.SBScratch* %42, i32 0, i32 0, !dbg !14149
  %43 = load %struct.GHash*, %struct.GHash** %colliderhash, align 8, !dbg !14149
  store %struct.GHash* %43, %struct.GHash** %hash, align 8, !dbg !14150
  %44 = load %struct.GHash*, %struct.GHash** %hash, align 8, !dbg !14151
  %call35 = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %44), !dbg !14152
  store %struct.GHashIterator* %call35, %struct.GHashIterator** %ihash, align 8, !dbg !14153
  br label %while.cond, !dbg !14154

while.cond:                                       ; preds = %if.end130, %if.else, %if.then78, %entry
  %45 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14155
  %call36 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %45), !dbg !14156
  %tobool = icmp ne i8 %call36, 0, !dbg !14157
  %lnot = xor i1 %tobool, true, !dbg !14157
  br i1 %lnot, label %while.body, label %while.end131, !dbg !14154

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ccd_Mesh** %ccdm, metadata !14158, metadata !DIExpression()), !dbg !14160
  %46 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14161
  %call37 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %46), !dbg !14162
  %47 = bitcast i8* %call37 to %struct.ccd_Mesh*, !dbg !14162
  store %struct.ccd_Mesh* %47, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14160
  %48 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14163
  %call38 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %48), !dbg !14164
  %49 = bitcast i8* %call38 to %struct.Object*, !dbg !14164
  store %struct.Object* %49, %struct.Object** %ob, align 8, !dbg !14165
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14166
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 110, !dbg !14168
  %51 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !14168
  %tobool39 = icmp ne %struct.PartDeflect* %51, null, !dbg !14166
  br i1 %tobool39, label %land.lhs.true, label %if.end130, !dbg !14169

land.lhs.true:                                    ; preds = %while.body
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14170
  %pd40 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 110, !dbg !14171
  %53 = load %struct.PartDeflect*, %struct.PartDeflect** %pd40, align 8, !dbg !14171
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %53, i32 0, i32 1, !dbg !14172
  %54 = load i16, i16* %deflect, align 4, !dbg !14172
  %conv = sext i16 %54 to i32, !dbg !14170
  %tobool41 = icmp ne i32 %conv, 0, !dbg !14170
  br i1 %tobool41, label %if.then, label %if.end130, !dbg !14173

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !14174, metadata !DIExpression()), !dbg !14176
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !14176
  call void @llvm.dbg.declare(metadata %struct.MVert** %mprevvert, metadata !14177, metadata !DIExpression()), !dbg !14178
  store %struct.MVert* null, %struct.MVert** %mprevvert, align 8, !dbg !14178
  %55 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14179
  %tobool42 = icmp ne %struct.ccd_Mesh* %55, null, !dbg !14179
  br i1 %tobool42, label %if.then43, label %if.else, !dbg !14181

if.then43:                                        ; preds = %if.then
  %56 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14182
  %mvert44 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %56, i32 0, i32 2, !dbg !14184
  %57 = load %struct.MVert*, %struct.MVert** %mvert44, align 8, !dbg !14184
  store %struct.MVert* %57, %struct.MVert** %mvert, align 8, !dbg !14185
  %58 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14186
  %totvert = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %58, i32 0, i32 0, !dbg !14187
  %59 = load i32, i32* %totvert, align 8, !dbg !14187
  store i32 %59, i32* %a, align 4, !dbg !14188
  %60 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14189
  %mprevvert45 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %60, i32 0, i32 3, !dbg !14190
  %61 = load %struct.MVert*, %struct.MVert** %mprevvert45, align 8, !dbg !14190
  store %struct.MVert* %61, %struct.MVert** %mprevvert, align 8, !dbg !14191
  %62 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14192
  %pd46 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 110, !dbg !14193
  %63 = load %struct.PartDeflect*, %struct.PartDeflect** %pd46, align 8, !dbg !14193
  %pdef_sboft = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %63, i32 0, i32 28, !dbg !14194
  %64 = load float, float* %pdef_sboft, align 8, !dbg !14194
  store float %64, float* %outerfacethickness, align 4, !dbg !14195
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 0, !dbg !14196
  %65 = load float, float* %arrayidx47, align 4, !dbg !14196
  %66 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14198
  %bbmin = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %66, i32 0, i32 7, !dbg !14199
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %bbmin, i64 0, i64 0, !dbg !14198
  %67 = load float, float* %arrayidx48, align 8, !dbg !14198
  %cmp = fcmp olt float %65, %67, !dbg !14200
  br i1 %cmp, label %if.then78, label %lor.lhs.false, !dbg !14201

lor.lhs.false:                                    ; preds = %if.then43
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 1, !dbg !14202
  %68 = load float, float* %arrayidx50, align 4, !dbg !14202
  %69 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14203
  %bbmin51 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %69, i32 0, i32 7, !dbg !14204
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %bbmin51, i64 0, i64 1, !dbg !14203
  %70 = load float, float* %arrayidx52, align 4, !dbg !14203
  %cmp53 = fcmp olt float %68, %70, !dbg !14205
  br i1 %cmp53, label %if.then78, label %lor.lhs.false55, !dbg !14206

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %aabbmax, i64 0, i64 2, !dbg !14207
  %71 = load float, float* %arrayidx56, align 4, !dbg !14207
  %72 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14208
  %bbmin57 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %72, i32 0, i32 7, !dbg !14209
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %bbmin57, i64 0, i64 2, !dbg !14208
  %73 = load float, float* %arrayidx58, align 8, !dbg !14208
  %cmp59 = fcmp olt float %71, %73, !dbg !14210
  br i1 %cmp59, label %if.then78, label %lor.lhs.false61, !dbg !14211

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 0, !dbg !14212
  %74 = load float, float* %arrayidx62, align 4, !dbg !14212
  %75 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14213
  %bbmax = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %75, i32 0, i32 8, !dbg !14214
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %bbmax, i64 0, i64 0, !dbg !14213
  %76 = load float, float* %arrayidx63, align 4, !dbg !14213
  %cmp64 = fcmp ogt float %74, %76, !dbg !14215
  br i1 %cmp64, label %if.then78, label %lor.lhs.false66, !dbg !14216

lor.lhs.false66:                                  ; preds = %lor.lhs.false61
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 1, !dbg !14217
  %77 = load float, float* %arrayidx67, align 4, !dbg !14217
  %78 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14218
  %bbmax68 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %78, i32 0, i32 8, !dbg !14219
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %bbmax68, i64 0, i64 1, !dbg !14218
  %79 = load float, float* %arrayidx69, align 4, !dbg !14218
  %cmp70 = fcmp ogt float %77, %79, !dbg !14220
  br i1 %cmp70, label %if.then78, label %lor.lhs.false72, !dbg !14221

lor.lhs.false72:                                  ; preds = %lor.lhs.false66
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %aabbmin, i64 0, i64 2, !dbg !14222
  %80 = load float, float* %arrayidx73, align 4, !dbg !14222
  %81 = load %struct.ccd_Mesh*, %struct.ccd_Mesh** %ccdm, align 8, !dbg !14223
  %bbmax74 = getelementptr inbounds %struct.ccd_Mesh, %struct.ccd_Mesh* %81, i32 0, i32 8, !dbg !14224
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %bbmax74, i64 0, i64 2, !dbg !14223
  %82 = load float, float* %arrayidx75, align 4, !dbg !14223
  %cmp76 = fcmp ogt float %80, %82, !dbg !14225
  br i1 %cmp76, label %if.then78, label %if.end, !dbg !14226

if.then78:                                        ; preds = %lor.lhs.false72, %lor.lhs.false66, %lor.lhs.false61, %lor.lhs.false55, %lor.lhs.false, %if.then43
  %83 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14227
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %83), !dbg !14229
  br label %while.cond, !dbg !14230, !llvm.loop !14231

if.end:                                           ; preds = %lor.lhs.false72
  br label %if.end80, !dbg !14233

if.else:                                          ; preds = %if.then
  %call79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)), !dbg !14234
  %84 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14236
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %84), !dbg !14237
  br label %while.cond, !dbg !14238, !llvm.loop !14231

if.end80:                                         ; preds = %if.end
  %85 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14239
  %tobool81 = icmp ne %struct.MVert* %85, null, !dbg !14239
  br i1 %tobool81, label %if.then82, label %if.end129, !dbg !14241

if.then82:                                        ; preds = %if.end80
  br label %while.cond83, !dbg !14242

while.cond83:                                     ; preds = %if.end128, %if.then82
  %86 = load i32, i32* %a, align 4, !dbg !14244
  %tobool84 = icmp ne i32 %86, 0, !dbg !14242
  br i1 %tobool84, label %while.body85, label %while.end, !dbg !14242

while.body85:                                     ; preds = %while.cond83
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14245
  %87 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14247
  %88 = load i32, i32* %a, align 4, !dbg !14248
  %sub = sub nsw i32 %88, 1, !dbg !14249
  %idxprom = sext i32 %sub to i64, !dbg !14247
  %arrayidx87 = getelementptr inbounds %struct.MVert, %struct.MVert* %87, i64 %idxprom, !dbg !14247
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx87, i32 0, i32 0, !dbg !14250
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14247
  call void @copy_v3_v3(float* %arraydecay86, float* %arraydecay88), !dbg !14251
  %89 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !14252
  %tobool89 = icmp ne %struct.MVert* %89, null, !dbg !14252
  br i1 %tobool89, label %if.then90, label %if.end99, !dbg !14254

if.then90:                                        ; preds = %while.body85
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14255
  %90 = load float, float* %time.addr, align 4, !dbg !14257
  call void @mul_v3_fl(float* %arraydecay91, float %90), !dbg !14258
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14259
  %91 = load float, float* %time.addr, align 4, !dbg !14260
  %sub93 = fsub float 1.000000e+00, %91, !dbg !14261
  %92 = load %struct.MVert*, %struct.MVert** %mprevvert, align 8, !dbg !14262
  %93 = load i32, i32* %a, align 4, !dbg !14263
  %sub94 = sub nsw i32 %93, 1, !dbg !14264
  %idxprom95 = sext i32 %sub94 to i64, !dbg !14262
  %arrayidx96 = getelementptr inbounds %struct.MVert, %struct.MVert* %92, i64 %idxprom95, !dbg !14262
  %co97 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx96, i32 0, i32 0, !dbg !14265
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %co97, i64 0, i64 0, !dbg !14262
  call void @Vec3PlusStVec(float* %arraydecay92, float %sub93, float* %arraydecay98), !dbg !14266
  br label %if.end99, !dbg !14267

if.end99:                                         ; preds = %if.then90, %while.body85
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14268
  %94 = load float*, float** %face_v2.addr, align 8, !dbg !14269
  call void @sub_v3_v3(float* %arraydecay100, float* %94), !dbg !14270
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14271
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14272
  %call103 = call float @dot_v3v3(float* %arraydecay101, float* %arraydecay102), !dbg !14273
  store float %call103, float* %facedist, align 4, !dbg !14274
  %95 = load float, float* %facedist, align 4, !dbg !14275
  %cmp104 = fcmp olt float %95, 0.000000e+00, !dbg !14275
  br i1 %cmp104, label %cond.true, label %cond.false, !dbg !14275

cond.true:                                        ; preds = %if.end99
  %96 = load float, float* %facedist, align 4, !dbg !14275
  %fneg = fneg float %96, !dbg !14275
  br label %cond.end, !dbg !14275

cond.false:                                       ; preds = %if.end99
  %97 = load float, float* %facedist, align 4, !dbg !14275
  br label %cond.end, !dbg !14275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %97, %cond.false ], !dbg !14275
  %98 = load float, float* %outerfacethickness, align 4, !dbg !14277
  %cmp106 = fcmp olt float %cond, %98, !dbg !14278
  br i1 %cmp106, label %if.then108, label %if.end128, !dbg !14279

if.then108:                                       ; preds = %cond.end
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %nv1, i64 0, i64 0, !dbg !14280
  %99 = load float*, float** %face_v1.addr, align 8, !dbg !14283
  %100 = load float*, float** %face_v2.addr, align 8, !dbg !14284
  %101 = load float*, float** %face_v3.addr, align 8, !dbg !14285
  %call110 = call zeroext i8 @isect_point_tri_prism_v3(float* %arraydecay109, float* %99, float* %100, float* %101), !dbg !14286
  %tobool111 = icmp ne i8 %call110, 0, !dbg !14286
  br i1 %tobool111, label %if.then112, label %if.end127, !dbg !14287

if.then112:                                       ; preds = %if.then108
  call void @llvm.dbg.declare(metadata float* %df, metadata !14288, metadata !DIExpression()), !dbg !14290
  %102 = load float, float* %facedist, align 4, !dbg !14291
  %cmp113 = fcmp ogt float %102, 0.000000e+00, !dbg !14293
  br i1 %cmp113, label %if.then115, label %if.else117, !dbg !14294

if.then115:                                       ; preds = %if.then112
  %103 = load float, float* %outerfacethickness, align 4, !dbg !14295
  %104 = load float, float* %facedist, align 4, !dbg !14297
  %sub116 = fsub float %103, %104, !dbg !14298
  %105 = load float, float* %outerfacethickness, align 4, !dbg !14299
  %div = fdiv float %sub116, %105, !dbg !14300
  store float %div, float* %df, align 4, !dbg !14301
  br label %if.end119, !dbg !14302

if.else117:                                       ; preds = %if.then112
  %106 = load float, float* %outerfacethickness, align 4, !dbg !14303
  %107 = load float, float* %facedist, align 4, !dbg !14305
  %add = fadd float %106, %107, !dbg !14306
  %108 = load float, float* %outerfacethickness, align 4, !dbg !14307
  %div118 = fdiv float %add, %108, !dbg !14308
  store float %div118, float* %df, align 4, !dbg !14309
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.then115
  %109 = load float, float* %df, align 4, !dbg !14310
  %110 = load float, float* %tune, align 4, !dbg !14311
  %mul = fmul float %109, %110, !dbg !14312
  %111 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14313
  %pd120 = getelementptr inbounds %struct.Object, %struct.Object* %111, i32 0, i32 110, !dbg !14314
  %112 = load %struct.PartDeflect*, %struct.PartDeflect** %pd120, align 8, !dbg !14314
  %pdef_sbdamp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %112, i32 0, i32 26, !dbg !14315
  %113 = load float, float* %pdef_sbdamp, align 8, !dbg !14315
  %mul121 = fmul float %mul, %113, !dbg !14316
  %114 = load float*, float** %damp.addr, align 8, !dbg !14317
  store float %mul121, float* %114, align 4, !dbg !14318
  %115 = load float, float* %df, align 4, !dbg !14319
  %mul122 = fmul float -1.000000e+02, %115, !dbg !14320
  %call123 = call float @expf(float %mul122) #5, !dbg !14321
  %mul124 = fmul float 0x3F847AE140000000, %call123, !dbg !14322
  store float %mul124, float* %df, align 4, !dbg !14323
  %116 = load float*, float** %force.addr, align 8, !dbg !14324
  %117 = load float, float* %df, align 4, !dbg !14325
  %fneg125 = fneg float %117, !dbg !14326
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %d_nvect, i64 0, i64 0, !dbg !14327
  call void @Vec3PlusStVec(float* %116, float %fneg125, float* %arraydecay126), !dbg !14328
  store i32 3, i32* %deflected, align 4, !dbg !14329
  br label %if.end127, !dbg !14330

if.end127:                                        ; preds = %if.end119, %if.then108
  br label %if.end128, !dbg !14331

if.end128:                                        ; preds = %if.end127, %cond.end
  %118 = load i32, i32* %a, align 4, !dbg !14332
  %dec = add nsw i32 %118, -1, !dbg !14332
  store i32 %dec, i32* %a, align 4, !dbg !14332
  br label %while.cond83, !dbg !14242, !llvm.loop !14333

while.end:                                        ; preds = %while.cond83
  br label %if.end129, !dbg !14335

if.end129:                                        ; preds = %while.end, %if.end80
  br label %if.end130, !dbg !14336

if.end130:                                        ; preds = %if.end129, %land.lhs.true, %while.body
  %119 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14337
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %119), !dbg !14338
  br label %while.cond, !dbg !14154, !llvm.loop !14231

while.end131:                                     ; preds = %while.cond
  %120 = load %struct.GHashIterator*, %struct.GHashIterator** %ihash, align 8, !dbg !14339
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %120), !dbg !14340
  %121 = load i32, i32* %deflected, align 4, !dbg !14341
  ret i32 %121, !dbg !14342
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_fff(float %a, float %b, float %c) #0 !dbg !14343 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !14346, metadata !DIExpression()), !dbg !14347
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !14348, metadata !DIExpression()), !dbg !14349
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !14350, metadata !DIExpression()), !dbg !14351
  %0 = load float, float* %a.addr, align 4, !dbg !14352
  %1 = load float, float* %b.addr, align 4, !dbg !14353
  %call = call float @min_ff(float %0, float %1), !dbg !14354
  %2 = load float, float* %c.addr, align 4, !dbg !14355
  %call1 = call float @min_ff(float %call, float %2), !dbg !14356
  ret float %call1, !dbg !14357
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !14358 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !14359, metadata !DIExpression()), !dbg !14360
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !14361, metadata !DIExpression()), !dbg !14362
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !14363, metadata !DIExpression()), !dbg !14364
  %0 = load float, float* %a.addr, align 4, !dbg !14365
  %1 = load float, float* %b.addr, align 4, !dbg !14366
  %call = call float @max_ff(float %0, float %1), !dbg !14367
  %2 = load float, float* %c.addr, align 4, !dbg !14368
  %call1 = call float @max_ff(float %call, float %2), !dbg !14369
  ret float %call1, !dbg !14370
}

; Function Attrs: nounwind
declare dso_local float @expf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @sb_time_scale(%struct.Object* %ob) #0 !dbg !14371 {
entry:
  %retval = alloca float, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %sb = alloca %struct.SoftBody*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14372, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb, metadata !14374, metadata !DIExpression()), !dbg !14375
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14376
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !14377
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !14377
  store %struct.SoftBody* %1, %struct.SoftBody** %sb, align 8, !dbg !14375
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !14378
  %tobool = icmp ne %struct.SoftBody* %2, null, !dbg !14378
  br i1 %tobool, label %if.then, label %if.end, !dbg !14380

if.then:                                          ; preds = %entry
  %3 = load %struct.SoftBody*, %struct.SoftBody** %sb, align 8, !dbg !14381
  %physics_speed = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %3, i32 0, i32 12, !dbg !14383
  %4 = load float, float* %physics_speed, align 4, !dbg !14383
  store float %4, float* %retval, align 4, !dbg !14384
  br label %return, !dbg !14384

if.end:                                           ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !14385
  br label %return, !dbg !14385

return:                                           ; preds = %if.end, %if.then
  %5 = load float, float* %retval, align 4, !dbg !14386
  ret float %5, !dbg !14386
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2181, !2182, !2183}
!llvm.ident = !{!2184}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "SB_localInterruptCallBack", scope: !2, file: !3, line: 87, type: !2178, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !91, globals: !2172, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/softbody.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !26, !38}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 92, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11}
!8 = !DIEnumerator(name: "SB_EDGE", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "SB_BEND", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "SB_STIFFQUAD", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "SB_HANDLE", value: 4, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !13, line: 339, baseType: !6, size: 32, elements: !14)
!13 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!15 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!18 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!19 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!21 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!22 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!23 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!24 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!25 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !27, line: 123, baseType: !6, size: 32, elements: !28)
!27 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37}
!29 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!33 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!35 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!36 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!37 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !39, line: 35, baseType: !6, size: 32, elements: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = !{!41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90}
!41 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!42 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!44 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!45 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!47 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!48 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!49 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!50 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!51 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!52 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!53 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!54 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!55 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!56 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!57 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!58 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!59 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!60 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!61 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!62 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!63 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!64 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!65 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!66 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!67 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!68 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!69 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!70 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!71 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!72 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!73 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!74 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!75 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!76 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!77 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!78 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!79 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!80 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!81 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!82 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!83 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!84 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!85 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!86 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!87 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!88 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!89 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!90 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!91 = !{!92, !93, !94, !95, !100, !139, !501, !2146, !2166}
!92 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!94 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashValFreeFP", file: !96, line: 46, baseType: !97)
!96 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DISubroutineType(types: !99)
!99 = !{null, !93}
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !102, line: 133, baseType: !103)
!102 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !102, line: 58, size: 11008, elements: !104)
!104 = !{!105, !175, !179, !190, !193, !197, !201, !208, !217, !313, !319, !326, !334, !345, !358, !371, !382, !391, !403, !411, !413, !416, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !103, file: !102, line: 59, baseType: !106, size: 960)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !107, line: 130, baseType: !108)
!107 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !107, line: 117, size: 960, elements: !109)
!109 = !{!110, !111, !112, !114, !134, !138, !140, !141, !142, !143}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !108, file: !107, line: 118, baseType: !93, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !108, file: !107, line: 118, baseType: !93, size: 64, offset: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !108, file: !107, line: 119, baseType: !113, size: 64, offset: 128)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !108, file: !107, line: 120, baseType: !115, size: 64, offset: 192)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !107, line: 136, size: 17600, elements: !117)
!117 = !{!118, !119, !121, !124, !129, !130, !131}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !116, file: !107, line: 137, baseType: !106, size: 960)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !116, file: !107, line: 138, baseType: !120, size: 64, offset: 960)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !116, file: !107, line: 139, baseType: !122, size: 64, offset: 1024)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !107, line: 43, flags: DIFlagFwdDecl)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !116, file: !107, line: 140, baseType: !125, size: 8192, offset: 1088)
!125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 8192, elements: !127)
!126 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!127 = !{!128}
!128 = !DISubrange(count: 1024)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !116, file: !107, line: 141, baseType: !125, size: 8192, offset: 9280)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !116, file: !107, line: 148, baseType: !115, size: 64, offset: 17472)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !116, file: !107, line: 150, baseType: !132, size: 64, offset: 17536)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !107, line: 45, flags: DIFlagFwdDecl)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !108, file: !107, line: 121, baseType: !135, size: 528, offset: 256)
!135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 528, elements: !136)
!136 = !{!137}
!137 = !DISubrange(count: 66)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !108, file: !107, line: 126, baseType: !139, size: 16, offset: 784)
!139 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !108, file: !107, line: 127, baseType: !92, size: 32, offset: 800)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !108, file: !107, line: 128, baseType: !92, size: 32, offset: 832)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !108, file: !107, line: 128, baseType: !92, size: 32, offset: 864)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !108, file: !107, line: 129, baseType: !144, size: 64, offset: 896)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !107, line: 75, baseType: !146)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !107, line: 62, size: 1024, elements: !147)
!147 = !{!148, !150, !151, !152, !153, !154, !158, !159, !173, !174}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !146, file: !107, line: 63, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !107, line: 63, baseType: !149, size: 64, offset: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !146, file: !107, line: 64, baseType: !126, size: 8, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !146, file: !107, line: 64, baseType: !126, size: 8, offset: 136)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !146, file: !107, line: 65, baseType: !139, size: 16, offset: 144)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !107, line: 66, baseType: !155, size: 512, offset: 160)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 512, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !146, file: !107, line: 67, baseType: !92, size: 32, offset: 672)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !107, line: 69, baseType: !160, size: 256, offset: 704)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !107, line: 60, baseType: !161)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !107, line: 48, size: 256, elements: !162)
!162 = !{!163, !164, !171, !172}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !161, file: !107, line: 49, baseType: !93, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !161, file: !107, line: 58, baseType: !165, size: 128, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !166, line: 71, baseType: !167)
!166 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !166, line: 69, size: 128, elements: !168)
!168 = !{!169, !170}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !167, file: !166, line: 70, baseType: !93, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !167, file: !166, line: 70, baseType: !93, size: 64, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !161, file: !107, line: 59, baseType: !92, size: 32, offset: 192)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !161, file: !107, line: 59, baseType: !92, size: 32, offset: 224)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !146, file: !107, line: 70, baseType: !92, size: 32, offset: 960)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !146, file: !107, line: 74, baseType: !92, size: 32, offset: 992)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !103, file: !102, line: 60, baseType: !176, size: 64, offset: 960)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !178, line: 45, flags: DIFlagFwdDecl)
!178 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!179 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !103, file: !102, line: 62, baseType: !180, size: 64, offset: 1024)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !13, line: 97, size: 832, elements: !182)
!182 = !{!183, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !181, file: !13, line: 98, baseType: !184, size: 768)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 768, elements: !185)
!185 = !{!186, !187}
!186 = !DISubrange(count: 8)
!187 = !DISubrange(count: 3)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !181, file: !13, line: 99, baseType: !92, size: 32, offset: 768)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !181, file: !13, line: 99, baseType: !92, size: 32, offset: 800)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !103, file: !102, line: 64, baseType: !191, size: 64, offset: 1088)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !178, line: 46, flags: DIFlagFwdDecl)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !103, file: !102, line: 65, baseType: !194, size: 64, offset: 1152)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !196, line: 41, flags: DIFlagFwdDecl)
!196 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!197 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !103, file: !102, line: 66, baseType: !198, size: 64, offset: 1216)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !13, line: 50, flags: DIFlagFwdDecl)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !103, file: !102, line: 67, baseType: !202, size: 64, offset: 1280)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !204, line: 154, size: 64, elements: !205)
!204 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!205 = !{!206, !207}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !203, file: !204, line: 155, baseType: !92, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !203, file: !204, line: 156, baseType: !92, size: 32, offset: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !103, file: !102, line: 71, baseType: !209, size: 64, offset: 1344)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !204, line: 79, size: 96, elements: !211)
!211 = !{!212, !213, !214, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !210, file: !204, line: 81, baseType: !92, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !210, file: !204, line: 82, baseType: !92, size: 32, offset: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !210, file: !204, line: 83, baseType: !139, size: 16, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !210, file: !204, line: 84, baseType: !126, size: 8, offset: 80)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !210, file: !204, line: 84, baseType: !126, size: 8, offset: 88)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !103, file: !102, line: 72, baseType: !218, size: 64, offset: 1408)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !204, line: 93, size: 128, elements: !220)
!220 = !{!221, !308, !309, !310, !311, !312}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !219, file: !204, line: 94, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !224, line: 77, size: 15424, elements: !225)
!224 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!225 = !{!226, !227, !228, !231, !234, !237, !240, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !259, !260, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !289, !290, !291, !297, !298, !302}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !223, file: !224, line: 78, baseType: !106, size: 960)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !223, file: !224, line: 80, baseType: !125, size: 8192, offset: 960)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !223, file: !224, line: 82, baseType: !229, size: 64, offset: 9152)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !224, line: 43, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !223, file: !224, line: 83, baseType: !232, size: 64, offset: 9216)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !107, line: 46, flags: DIFlagFwdDecl)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !223, file: !224, line: 86, baseType: !235, size: 64, offset: 9280)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !224, line: 41, flags: DIFlagFwdDecl)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !223, file: !224, line: 87, baseType: !238, size: 64, offset: 9344)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !224, line: 44, flags: DIFlagFwdDecl)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !223, file: !224, line: 89, baseType: !241, size: 512, offset: 9408)
!241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 512, elements: !242)
!242 = !{!186}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !223, file: !224, line: 90, baseType: !139, size: 16, offset: 9920)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !223, file: !224, line: 90, baseType: !139, size: 16, offset: 9936)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !223, file: !224, line: 92, baseType: !139, size: 16, offset: 9952)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !223, file: !224, line: 92, baseType: !139, size: 16, offset: 9968)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !223, file: !224, line: 93, baseType: !139, size: 16, offset: 9984)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !223, file: !224, line: 93, baseType: !139, size: 16, offset: 10000)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !223, file: !224, line: 94, baseType: !92, size: 32, offset: 10016)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !223, file: !224, line: 97, baseType: !139, size: 16, offset: 10048)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !223, file: !224, line: 97, baseType: !139, size: 16, offset: 10064)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !223, file: !224, line: 98, baseType: !139, size: 16, offset: 10080)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !223, file: !224, line: 98, baseType: !139, size: 16, offset: 10096)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !223, file: !224, line: 99, baseType: !139, size: 16, offset: 10112)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !223, file: !224, line: 99, baseType: !139, size: 16, offset: 10128)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !223, file: !224, line: 100, baseType: !6, size: 32, offset: 10144)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !223, file: !224, line: 101, baseType: !258, size: 64, offset: 10176)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !223, file: !224, line: 103, baseType: !132, size: 64, offset: 10240)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !223, file: !224, line: 104, baseType: !261, size: 64, offset: 10304)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !107, line: 159, size: 448, elements: !263)
!263 = !{!264, !268, !269, !271, !272, !274}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !262, file: !107, line: 161, baseType: !265, size: 64)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 2)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !262, file: !107, line: 162, baseType: !265, size: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !262, file: !107, line: 163, baseType: !270, size: 32, offset: 128)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 32, elements: !266)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !262, file: !107, line: 164, baseType: !270, size: 32, offset: 160)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !262, file: !107, line: 165, baseType: !273, size: 128, offset: 192)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 128, elements: !266)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !262, file: !107, line: 166, baseType: !275, size: 128, offset: 320)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 128, elements: !266)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !223, file: !224, line: 107, baseType: !94, size: 32, offset: 10368)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !223, file: !224, line: 108, baseType: !92, size: 32, offset: 10400)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !223, file: !224, line: 109, baseType: !139, size: 16, offset: 10432)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !223, file: !224, line: 110, baseType: !139, size: 16, offset: 10448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !223, file: !224, line: 113, baseType: !92, size: 32, offset: 10464)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !223, file: !224, line: 113, baseType: !92, size: 32, offset: 10496)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !223, file: !224, line: 114, baseType: !126, size: 8, offset: 10528)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !223, file: !224, line: 114, baseType: !126, size: 8, offset: 10536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !223, file: !224, line: 115, baseType: !139, size: 16, offset: 10544)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !223, file: !224, line: 116, baseType: !286, size: 128, offset: 10560)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 128, elements: !287)
!287 = !{!288}
!288 = !DISubrange(count: 4)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !223, file: !224, line: 119, baseType: !94, size: 32, offset: 10688)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !223, file: !224, line: 119, baseType: !94, size: 32, offset: 10720)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !223, file: !224, line: 122, baseType: !292, size: 512, offset: 10752)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !293, line: 182, baseType: !294)
!293 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !293, line: 180, size: 512, elements: !295)
!295 = !{!296}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !293, line: 181, baseType: !155, size: 512)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !223, file: !224, line: 123, baseType: !126, size: 8, offset: 11264)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !223, file: !224, line: 125, baseType: !299, size: 56, offset: 11272)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 56, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 7)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !223, file: !224, line: 126, baseType: !303, size: 4096, offset: 11328)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 4096, elements: !242)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !224, line: 69, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !224, line: 67, size: 512, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !305, file: !224, line: 68, baseType: !155, size: 512)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !219, file: !204, line: 95, baseType: !126, size: 8, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !219, file: !204, line: 95, baseType: !126, size: 8, offset: 72)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !219, file: !204, line: 96, baseType: !139, size: 16, offset: 80)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !219, file: !204, line: 96, baseType: !139, size: 16, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !219, file: !204, line: 96, baseType: !139, size: 16, offset: 112)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !103, file: !102, line: 73, baseType: !314, size: 64, offset: 1472)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !204, line: 88, size: 64, elements: !316)
!316 = !{!317, !318}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !315, file: !204, line: 89, baseType: !6, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !315, file: !204, line: 90, baseType: !6, size: 32, offset: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !103, file: !102, line: 74, baseType: !320, size: 64, offset: 1536)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !204, line: 109, size: 96, elements: !322)
!322 = !{!323, !325}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !321, file: !204, line: 110, baseType: !324, size: 64)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 64, elements: !266)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !321, file: !204, line: 111, baseType: !92, size: 32, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !103, file: !102, line: 75, baseType: !327, size: 64, offset: 1600)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !204, line: 129, size: 32, elements: !329)
!329 = !{!330, !331, !332, !333}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !328, file: !204, line: 130, baseType: !126, size: 8)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !328, file: !204, line: 130, baseType: !126, size: 8, offset: 8)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !328, file: !204, line: 130, baseType: !126, size: 8, offset: 16)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !328, file: !204, line: 130, baseType: !126, size: 8, offset: 24)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !103, file: !102, line: 80, baseType: !335, size: 64, offset: 1664)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !204, line: 42, size: 160, elements: !337)
!337 = !{!338, !339, !340, !341, !342, !343, !344}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !336, file: !204, line: 43, baseType: !6, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !336, file: !204, line: 43, baseType: !6, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !336, file: !204, line: 43, baseType: !6, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !336, file: !204, line: 43, baseType: !6, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !336, file: !204, line: 44, baseType: !139, size: 16, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !336, file: !204, line: 45, baseType: !126, size: 8, offset: 144)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !336, file: !204, line: 45, baseType: !126, size: 8, offset: 152)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !103, file: !102, line: 81, baseType: !346, size: 64, offset: 1728)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !204, line: 160, size: 384, elements: !348)
!348 = !{!349, !352, !353, !354, !355, !356, !357}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !347, file: !204, line: 161, baseType: !350, size: 256)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 256, elements: !351)
!351 = !{!288, !267}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !347, file: !204, line: 162, baseType: !222, size: 64, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !347, file: !204, line: 163, baseType: !126, size: 8, offset: 320)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !347, file: !204, line: 163, baseType: !126, size: 8, offset: 328)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !347, file: !204, line: 164, baseType: !139, size: 16, offset: 336)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !347, file: !204, line: 164, baseType: !139, size: 16, offset: 352)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !347, file: !204, line: 164, baseType: !139, size: 16, offset: 368)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !103, file: !102, line: 82, baseType: !359, size: 64, offset: 1792)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !102, line: 136, size: 512, elements: !361)
!361 = !{!362, !363, !364, !366, !367, !368, !369, !370}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !360, file: !102, line: 137, baseType: !93, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !360, file: !102, line: 138, baseType: !350, size: 256, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !360, file: !102, line: 139, baseType: !365, size: 128, offset: 320)
!365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, elements: !287)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !360, file: !102, line: 140, baseType: !126, size: 8, offset: 448)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !360, file: !102, line: 140, baseType: !126, size: 8, offset: 456)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !360, file: !102, line: 141, baseType: !139, size: 16, offset: 464)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !360, file: !102, line: 141, baseType: !139, size: 16, offset: 480)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !360, file: !102, line: 141, baseType: !139, size: 16, offset: 496)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !103, file: !102, line: 83, baseType: !372, size: 64, offset: 1856)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !204, line: 65, size: 160, elements: !374)
!374 = !{!375, !378, !380, !381}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !373, file: !204, line: 66, baseType: !376, size: 96)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 96, elements: !377)
!377 = !{!187}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !373, file: !204, line: 67, baseType: !379, size: 48, offset: 96)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 48, elements: !377)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !373, file: !204, line: 68, baseType: !126, size: 8, offset: 144)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !373, file: !204, line: 68, baseType: !126, size: 8, offset: 152)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !103, file: !102, line: 84, baseType: !383, size: 64, offset: 1920)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !204, line: 48, size: 96, elements: !385)
!385 = !{!386, !387, !388, !389, !390}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !384, file: !204, line: 49, baseType: !6, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !384, file: !204, line: 49, baseType: !6, size: 32, offset: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !384, file: !204, line: 50, baseType: !126, size: 8, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !384, file: !204, line: 50, baseType: !126, size: 8, offset: 72)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !384, file: !204, line: 51, baseType: !139, size: 16, offset: 80)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !103, file: !102, line: 85, baseType: !392, size: 64, offset: 1984)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !204, line: 59, size: 128, elements: !394)
!394 = !{!395, !401, !402}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !393, file: !204, line: 60, baseType: !396, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !204, line: 54, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !397, file: !204, line: 55, baseType: !92, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !397, file: !204, line: 56, baseType: !94, size: 32, offset: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !393, file: !204, line: 61, baseType: !92, size: 32, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !393, file: !204, line: 62, baseType: !92, size: 32, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !103, file: !102, line: 89, baseType: !404, size: 64, offset: 2048)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !204, line: 74, size: 32, elements: !406)
!406 = !{!407, !408, !409, !410}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !405, file: !204, line: 75, baseType: !126, size: 8)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !405, file: !204, line: 75, baseType: !126, size: 8, offset: 8)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !405, file: !204, line: 75, baseType: !126, size: 8, offset: 16)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !405, file: !204, line: 75, baseType: !126, size: 8, offset: 24)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !103, file: !102, line: 90, baseType: !412, size: 64, offset: 2112)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !103, file: !102, line: 93, baseType: !414, size: 64, offset: 2176)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !102, line: 93, flags: DIFlagFwdDecl)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !103, file: !102, line: 95, baseType: !417, size: 1600, offset: 2240)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !418, line: 64, size: 1600, elements: !419)
!418 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!419 = !{!420, !435, !439, !440, !441, !442, !445}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !417, file: !418, line: 65, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !418, line: 53, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !418, line: 42, size: 832, elements: !424)
!424 = !{!425, !426, !427, !428, !429, !430, !431, !432, !433, !434}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !423, file: !418, line: 43, baseType: !92, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !423, file: !418, line: 44, baseType: !92, size: 32, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !423, file: !418, line: 45, baseType: !92, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !423, file: !418, line: 46, baseType: !92, size: 32, offset: 96)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !423, file: !418, line: 47, baseType: !92, size: 32, offset: 128)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !423, file: !418, line: 48, baseType: !92, size: 32, offset: 160)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !423, file: !418, line: 49, baseType: !92, size: 32, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !423, file: !418, line: 50, baseType: !92, size: 32, offset: 224)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !418, line: 51, baseType: !155, size: 512, offset: 256)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !423, file: !418, line: 52, baseType: !93, size: 64, offset: 768)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !417, file: !418, line: 66, baseType: !436, size: 1312, offset: 64)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 1312, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 41)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !417, file: !418, line: 69, baseType: !92, size: 32, offset: 1376)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !417, file: !418, line: 69, baseType: !92, size: 32, offset: 1408)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !417, file: !418, line: 70, baseType: !92, size: 32, offset: 1440)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !417, file: !418, line: 71, baseType: !443, size: 64, offset: 1472)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !418, line: 71, flags: DIFlagFwdDecl)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !417, file: !418, line: 72, baseType: !446, size: 64, offset: 1536)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !418, line: 59, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !418, line: 57, size: 8192, elements: !449)
!449 = !{!450}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !448, file: !418, line: 58, baseType: !125, size: 8192)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !103, file: !102, line: 95, baseType: !417, size: 1600, offset: 3840)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !103, file: !102, line: 95, baseType: !417, size: 1600, offset: 5440)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !103, file: !102, line: 98, baseType: !417, size: 1600, offset: 7040)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !103, file: !102, line: 98, baseType: !417, size: 1600, offset: 8640)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !103, file: !102, line: 101, baseType: !92, size: 32, offset: 10240)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !103, file: !102, line: 101, baseType: !92, size: 32, offset: 10272)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !103, file: !102, line: 101, baseType: !92, size: 32, offset: 10304)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !103, file: !102, line: 101, baseType: !92, size: 32, offset: 10336)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !103, file: !102, line: 104, baseType: !92, size: 32, offset: 10368)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !103, file: !102, line: 104, baseType: !92, size: 32, offset: 10400)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !103, file: !102, line: 111, baseType: !92, size: 32, offset: 10432)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !103, file: !102, line: 114, baseType: !376, size: 96, offset: 10464)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !103, file: !102, line: 115, baseType: !376, size: 96, offset: 10560)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !103, file: !102, line: 116, baseType: !376, size: 96, offset: 10656)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !103, file: !102, line: 118, baseType: !92, size: 32, offset: 10752)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !103, file: !102, line: 119, baseType: !139, size: 16, offset: 10784)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !103, file: !102, line: 119, baseType: !139, size: 16, offset: 10800)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !103, file: !102, line: 120, baseType: !94, size: 32, offset: 10816)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !103, file: !102, line: 121, baseType: !92, size: 32, offset: 10848)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !103, file: !102, line: 124, baseType: !126, size: 8, offset: 10880)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !103, file: !102, line: 124, baseType: !126, size: 8, offset: 10888)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !103, file: !102, line: 126, baseType: !126, size: 8, offset: 10896)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !103, file: !102, line: 126, baseType: !126, size: 8, offset: 10904)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !103, file: !102, line: 127, baseType: !126, size: 8, offset: 10912)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !103, file: !102, line: 128, baseType: !126, size: 8, offset: 10920)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !103, file: !102, line: 130, baseType: !139, size: 16, offset: 10928)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !103, file: !102, line: 132, baseType: !478, size: 64, offset: 10944)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !204, line: 233, size: 3584, elements: !480)
!480 = !{!481, !482, !485, !487, !488, !489, !490, !491, !492, !493, !494, !496, !497, !499}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !479, file: !204, line: 234, baseType: !165, size: 128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !479, file: !204, line: 235, baseType: !483, size: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !204, line: 69, baseType: !373)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 192)
!486 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 200)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 208)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 216)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 224)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !479, file: !204, line: 237, baseType: !486, size: 8, offset: 232)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !479, file: !204, line: 238, baseType: !486, size: 8, offset: 240)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !479, file: !204, line: 238, baseType: !486, size: 8, offset: 248)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !479, file: !204, line: 241, baseType: !495, size: 1600, offset: 256)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !418, line: 73, baseType: !417)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !479, file: !204, line: 242, baseType: !495, size: 1600, offset: 1856)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !479, file: !204, line: 243, baseType: !498, size: 64, offset: 3456)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !479, file: !204, line: 244, baseType: !500, size: 64, offset: 3520)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollisionModifierData", file: !39, line: 584, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollisionModifierData", file: !39, line: 568, size: 1536, elements: !504)
!504 = !{!505, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !503, file: !39, line: 569, baseType: !506, size: 896)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !39, line: 110, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !39, line: 99, size: 896, elements: !508)
!508 = !{!509, !511, !512, !513, !514, !515, !516, !517, !2131}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !507, file: !39, line: 100, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !507, file: !39, line: 100, baseType: !510, size: 64, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !507, file: !39, line: 102, baseType: !92, size: 32, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !507, file: !39, line: 102, baseType: !92, size: 32, offset: 160)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !507, file: !39, line: 103, baseType: !92, size: 32, offset: 192)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !507, file: !39, line: 103, baseType: !92, size: 32, offset: 224)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !39, line: 104, baseType: !155, size: 512, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !507, file: !39, line: 107, baseType: !518, size: 64, offset: 768)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !520, line: 1216, size: 39680, elements: !521)
!520 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!521 = !{!522, !523, !524, !1508, !1511, !1512, !1513, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1540, !1752, !1755, !2005, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2027, !2028, !2029, !2030, !2031, !2039, !2105, !2112, !2113, !2120, !2123, !2124, !2125, !2126, !2127, !2128}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !519, file: !520, line: 1217, baseType: !106, size: 960)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !519, file: !520, line: 1218, baseType: !176, size: 64, offset: 960)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !519, file: !520, line: 1220, baseType: !525, size: 64, offset: 1024)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !13, line: 115, size: 11392, elements: !527)
!527 = !{!528, !529, !530, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !560, !561, !602, !603, !606, !607, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !739, !740, !741, !742, !743, !744, !745, !746, !747, !1033, !1440, !1441, !1442, !1443, !1444, !1445, !1448, !1471, !1474, !1475, !1479, !1480, !1481, !1482, !1483, !1484, !1486, !1489, !1492, !1493, !1496, !1497}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !526, file: !13, line: 116, baseType: !106, size: 960)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !526, file: !13, line: 117, baseType: !176, size: 64, offset: 960)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !526, file: !13, line: 119, baseType: !531, size: 64, offset: 1024)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !13, line: 57, flags: DIFlagFwdDecl)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !526, file: !13, line: 121, baseType: !139, size: 16, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !526, file: !13, line: 121, baseType: !139, size: 16, offset: 1104)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !526, file: !13, line: 122, baseType: !92, size: 32, offset: 1120)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !526, file: !13, line: 122, baseType: !92, size: 32, offset: 1152)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !526, file: !13, line: 122, baseType: !92, size: 32, offset: 1184)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !526, file: !13, line: 123, baseType: !155, size: 512, offset: 1216)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !526, file: !13, line: 124, baseType: !525, size: 64, offset: 1728)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !526, file: !13, line: 124, baseType: !525, size: 64, offset: 1792)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !526, file: !13, line: 127, baseType: !525, size: 64, offset: 1856)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !526, file: !13, line: 127, baseType: !525, size: 64, offset: 1920)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !526, file: !13, line: 127, baseType: !525, size: 64, offset: 1984)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !526, file: !13, line: 128, baseType: !191, size: 64, offset: 2048)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !526, file: !13, line: 130, baseType: !180, size: 64, offset: 2112)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !526, file: !13, line: 131, baseType: !547, size: 64, offset: 2176)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !549, line: 486, size: 1600, elements: !550)
!549 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558, !559}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !548, file: !549, line: 487, baseType: !106, size: 960)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !548, file: !549, line: 489, baseType: !165, size: 128, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !548, file: !549, line: 490, baseType: !165, size: 128, offset: 1088)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !548, file: !549, line: 491, baseType: !165, size: 128, offset: 1216)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !548, file: !549, line: 492, baseType: !165, size: 128, offset: 1344)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !548, file: !549, line: 494, baseType: !92, size: 32, offset: 1472)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !548, file: !549, line: 495, baseType: !92, size: 32, offset: 1504)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !548, file: !549, line: 497, baseType: !92, size: 32, offset: 1536)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !548, file: !549, line: 498, baseType: !92, size: 32, offset: 1568)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !526, file: !13, line: 132, baseType: !547, size: 64, offset: 2240)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !526, file: !13, line: 133, baseType: !562, size: 64, offset: 2304)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !549, line: 334, size: 1728, elements: !564)
!564 = !{!565, !566, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !601}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !563, file: !549, line: 335, baseType: !165, size: 128)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !563, file: !549, line: 336, baseType: !567, size: 64, offset: 128)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !549, line: 47, flags: DIFlagFwdDecl)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !563, file: !549, line: 338, baseType: !139, size: 16, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !563, file: !549, line: 338, baseType: !139, size: 16, offset: 208)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !563, file: !549, line: 339, baseType: !6, size: 32, offset: 224)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !563, file: !549, line: 340, baseType: !92, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !563, file: !549, line: 342, baseType: !94, size: 32, offset: 288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !563, file: !549, line: 343, baseType: !376, size: 96, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !563, file: !549, line: 344, baseType: !376, size: 96, offset: 416)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !563, file: !549, line: 347, baseType: !165, size: 128, offset: 512)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !563, file: !549, line: 349, baseType: !92, size: 32, offset: 640)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !563, file: !549, line: 350, baseType: !92, size: 32, offset: 672)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !563, file: !549, line: 351, baseType: !93, size: 64, offset: 704)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !563, file: !549, line: 352, baseType: !93, size: 64, offset: 768)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !563, file: !549, line: 354, baseType: !582, size: 384, offset: 832)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !549, line: 116, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !549, line: 94, size: 384, elements: !584)
!584 = !{!585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !583, file: !549, line: 96, baseType: !92, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !583, file: !549, line: 96, baseType: !92, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !583, file: !549, line: 97, baseType: !92, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !583, file: !549, line: 97, baseType: !92, size: 32, offset: 96)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !583, file: !549, line: 99, baseType: !139, size: 16, offset: 128)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !583, file: !549, line: 100, baseType: !139, size: 16, offset: 144)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !583, file: !549, line: 102, baseType: !139, size: 16, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !583, file: !549, line: 105, baseType: !139, size: 16, offset: 176)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !583, file: !549, line: 108, baseType: !139, size: 16, offset: 192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !583, file: !549, line: 109, baseType: !139, size: 16, offset: 208)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !583, file: !549, line: 111, baseType: !139, size: 16, offset: 224)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !583, file: !549, line: 112, baseType: !139, size: 16, offset: 240)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !583, file: !549, line: 114, baseType: !92, size: 32, offset: 256)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !583, file: !549, line: 114, baseType: !92, size: 32, offset: 288)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !583, file: !549, line: 115, baseType: !92, size: 32, offset: 320)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !583, file: !549, line: 115, baseType: !92, size: 32, offset: 352)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !563, file: !549, line: 355, baseType: !155, size: 512, offset: 1216)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !526, file: !13, line: 134, baseType: !93, size: 64, offset: 2368)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !526, file: !13, line: 136, baseType: !604, size: 64, offset: 2432)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !13, line: 58, flags: DIFlagFwdDecl)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !526, file: !13, line: 138, baseType: !582, size: 384, offset: 2496)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !526, file: !13, line: 139, baseType: !608, size: 64, offset: 2880)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !549, line: 80, baseType: !610)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !549, line: 72, size: 192, elements: !611)
!611 = !{!612, !619, !620, !621, !622}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !610, file: !549, line: 73, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !549, line: 59, baseType: !615)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !549, line: 56, size: 128, elements: !616)
!616 = !{!617, !618}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !615, file: !549, line: 57, baseType: !376, size: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !615, file: !549, line: 58, baseType: !92, size: 32, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !610, file: !549, line: 74, baseType: !92, size: 32, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !610, file: !549, line: 76, baseType: !92, size: 32, offset: 96)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !610, file: !549, line: 77, baseType: !92, size: 32, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !610, file: !549, line: 79, baseType: !92, size: 32, offset: 160)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !526, file: !13, line: 141, baseType: !165, size: 128, offset: 2944)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !526, file: !13, line: 142, baseType: !165, size: 128, offset: 3072)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !526, file: !13, line: 143, baseType: !165, size: 128, offset: 3200)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !526, file: !13, line: 144, baseType: !165, size: 128, offset: 3328)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !526, file: !13, line: 146, baseType: !92, size: 32, offset: 3456)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !526, file: !13, line: 147, baseType: !92, size: 32, offset: 3488)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !526, file: !13, line: 150, baseType: !198, size: 64, offset: 3520)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !526, file: !13, line: 151, baseType: !500, size: 64, offset: 3584)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !526, file: !13, line: 152, baseType: !92, size: 32, offset: 3648)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !526, file: !13, line: 153, baseType: !92, size: 32, offset: 3680)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !526, file: !13, line: 156, baseType: !376, size: 96, offset: 3712)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !526, file: !13, line: 156, baseType: !376, size: 96, offset: 3808)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !526, file: !13, line: 156, baseType: !376, size: 96, offset: 3904)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !526, file: !13, line: 157, baseType: !376, size: 96, offset: 4000)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !526, file: !13, line: 158, baseType: !376, size: 96, offset: 4096)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !526, file: !13, line: 159, baseType: !376, size: 96, offset: 4192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !526, file: !13, line: 160, baseType: !376, size: 96, offset: 4288)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !526, file: !13, line: 160, baseType: !376, size: 96, offset: 4384)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !526, file: !13, line: 161, baseType: !286, size: 128, offset: 4480)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !526, file: !13, line: 161, baseType: !286, size: 128, offset: 4608)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !526, file: !13, line: 162, baseType: !376, size: 96, offset: 4736)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !526, file: !13, line: 162, baseType: !376, size: 96, offset: 4832)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !526, file: !13, line: 163, baseType: !94, size: 32, offset: 4928)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !526, file: !13, line: 163, baseType: !94, size: 32, offset: 4960)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !526, file: !13, line: 164, baseType: !648, size: 512, offset: 4992)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 512, elements: !649)
!649 = !{!288, !288}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !526, file: !13, line: 165, baseType: !648, size: 512, offset: 5504)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !526, file: !13, line: 166, baseType: !648, size: 512, offset: 6016)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !526, file: !13, line: 167, baseType: !648, size: 512, offset: 6528)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !526, file: !13, line: 176, baseType: !648, size: 512, offset: 7040)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !526, file: !13, line: 178, baseType: !6, size: 32, offset: 7552)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !526, file: !13, line: 180, baseType: !139, size: 16, offset: 7584)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !526, file: !13, line: 181, baseType: !139, size: 16, offset: 7600)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !526, file: !13, line: 183, baseType: !139, size: 16, offset: 7616)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !526, file: !13, line: 183, baseType: !139, size: 16, offset: 7632)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !526, file: !13, line: 184, baseType: !139, size: 16, offset: 7648)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !526, file: !13, line: 184, baseType: !139, size: 16, offset: 7664)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !526, file: !13, line: 185, baseType: !139, size: 16, offset: 7680)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !526, file: !13, line: 186, baseType: !139, size: 16, offset: 7696)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !526, file: !13, line: 187, baseType: !139, size: 16, offset: 7712)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !526, file: !13, line: 188, baseType: !126, size: 8, offset: 7728)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !526, file: !13, line: 189, baseType: !126, size: 8, offset: 7736)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !526, file: !13, line: 192, baseType: !92, size: 32, offset: 7744)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !526, file: !13, line: 192, baseType: !92, size: 32, offset: 7776)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !526, file: !13, line: 192, baseType: !92, size: 32, offset: 7808)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !526, file: !13, line: 192, baseType: !92, size: 32, offset: 7840)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !526, file: !13, line: 194, baseType: !92, size: 32, offset: 7872)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !526, file: !13, line: 202, baseType: !94, size: 32, offset: 7904)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !526, file: !13, line: 202, baseType: !94, size: 32, offset: 7936)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !526, file: !13, line: 202, baseType: !94, size: 32, offset: 7968)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !526, file: !13, line: 211, baseType: !94, size: 32, offset: 8000)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !526, file: !13, line: 212, baseType: !94, size: 32, offset: 8032)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !526, file: !13, line: 213, baseType: !94, size: 32, offset: 8064)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !526, file: !13, line: 214, baseType: !94, size: 32, offset: 8096)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !526, file: !13, line: 215, baseType: !94, size: 32, offset: 8128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !526, file: !13, line: 216, baseType: !94, size: 32, offset: 8160)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !526, file: !13, line: 219, baseType: !94, size: 32, offset: 8192)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !526, file: !13, line: 220, baseType: !94, size: 32, offset: 8224)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !526, file: !13, line: 221, baseType: !94, size: 32, offset: 8256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !526, file: !13, line: 224, baseType: !684, size: 16, offset: 8288)
!684 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !526, file: !13, line: 224, baseType: !684, size: 16, offset: 8304)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !526, file: !13, line: 226, baseType: !139, size: 16, offset: 8320)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !526, file: !13, line: 228, baseType: !126, size: 8, offset: 8336)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !526, file: !13, line: 229, baseType: !126, size: 8, offset: 8344)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !526, file: !13, line: 231, baseType: !139, size: 16, offset: 8352)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !526, file: !13, line: 232, baseType: !126, size: 8, offset: 8368)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !526, file: !13, line: 233, baseType: !126, size: 8, offset: 8376)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !526, file: !13, line: 234, baseType: !94, size: 32, offset: 8384)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !526, file: !13, line: 235, baseType: !94, size: 32, offset: 8416)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !526, file: !13, line: 237, baseType: !165, size: 128, offset: 8448)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !526, file: !13, line: 238, baseType: !165, size: 128, offset: 8576)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !526, file: !13, line: 239, baseType: !165, size: 128, offset: 8704)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !526, file: !13, line: 240, baseType: !165, size: 128, offset: 8832)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !526, file: !13, line: 242, baseType: !94, size: 32, offset: 8960)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !526, file: !13, line: 244, baseType: !139, size: 16, offset: 8992)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !526, file: !13, line: 245, baseType: !684, size: 16, offset: 9008)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !526, file: !13, line: 246, baseType: !286, size: 128, offset: 9024)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !526, file: !13, line: 248, baseType: !92, size: 32, offset: 9152)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !526, file: !13, line: 249, baseType: !92, size: 32, offset: 9184)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !526, file: !13, line: 251, baseType: !705, size: 64, offset: 9216)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !707, line: 215, size: 960, elements: !708)
!707 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!708 = !{!709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !706, file: !707, line: 216, baseType: !92, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !706, file: !707, line: 217, baseType: !94, size: 32, offset: 32)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !706, file: !707, line: 218, baseType: !94, size: 32, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !706, file: !707, line: 219, baseType: !94, size: 32, offset: 96)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !706, file: !707, line: 221, baseType: !92, size: 32, offset: 128)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !706, file: !707, line: 222, baseType: !92, size: 32, offset: 160)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !706, file: !707, line: 223, baseType: !92, size: 32, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !706, file: !707, line: 224, baseType: !92, size: 32, offset: 224)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !706, file: !707, line: 226, baseType: !94, size: 32, offset: 256)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !706, file: !707, line: 227, baseType: !94, size: 32, offset: 288)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !706, file: !707, line: 228, baseType: !94, size: 32, offset: 320)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !706, file: !707, line: 229, baseType: !94, size: 32, offset: 352)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !706, file: !707, line: 231, baseType: !94, size: 32, offset: 384)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !706, file: !707, line: 232, baseType: !94, size: 32, offset: 416)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !706, file: !707, line: 233, baseType: !94, size: 32, offset: 448)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !706, file: !707, line: 234, baseType: !94, size: 32, offset: 480)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !706, file: !707, line: 236, baseType: !94, size: 32, offset: 512)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !706, file: !707, line: 237, baseType: !94, size: 32, offset: 544)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !706, file: !707, line: 238, baseType: !94, size: 32, offset: 576)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !706, file: !707, line: 239, baseType: !94, size: 32, offset: 608)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !706, file: !707, line: 241, baseType: !94, size: 32, offset: 640)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !706, file: !707, line: 242, baseType: !94, size: 32, offset: 672)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !706, file: !707, line: 243, baseType: !94, size: 32, offset: 704)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !706, file: !707, line: 244, baseType: !94, size: 32, offset: 736)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !706, file: !707, line: 246, baseType: !94, size: 32, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !706, file: !707, line: 247, baseType: !94, size: 32, offset: 800)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !706, file: !707, line: 248, baseType: !92, size: 32, offset: 832)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !706, file: !707, line: 249, baseType: !92, size: 32, offset: 864)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !706, file: !707, line: 250, baseType: !94, size: 32, offset: 896)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !706, file: !707, line: 251, baseType: !94, size: 32, offset: 928)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !526, file: !13, line: 253, baseType: !126, size: 8, offset: 9280)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !526, file: !13, line: 254, baseType: !126, size: 8, offset: 9288)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !526, file: !13, line: 255, baseType: !139, size: 16, offset: 9296)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !526, file: !13, line: 256, baseType: !376, size: 96, offset: 9312)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !526, file: !13, line: 258, baseType: !165, size: 128, offset: 9408)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !526, file: !13, line: 259, baseType: !165, size: 128, offset: 9536)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !526, file: !13, line: 260, baseType: !165, size: 128, offset: 9664)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !526, file: !13, line: 261, baseType: !165, size: 128, offset: 9792)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !526, file: !13, line: 263, baseType: !748, size: 64, offset: 9920)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !707, line: 61, size: 1280, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !1026, !1030, !1031, !1032}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !749, file: !707, line: 62, baseType: !92, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !749, file: !707, line: 63, baseType: !139, size: 16, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !749, file: !707, line: 64, baseType: !139, size: 16, offset: 48)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !749, file: !707, line: 65, baseType: !139, size: 16, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !749, file: !707, line: 66, baseType: !139, size: 16, offset: 80)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !749, file: !707, line: 67, baseType: !139, size: 16, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !749, file: !707, line: 68, baseType: !139, size: 16, offset: 112)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !749, file: !707, line: 68, baseType: !139, size: 16, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !749, file: !707, line: 69, baseType: !139, size: 16, offset: 144)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !749, file: !707, line: 72, baseType: !94, size: 32, offset: 160)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !749, file: !707, line: 73, baseType: !94, size: 32, offset: 192)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !749, file: !707, line: 74, baseType: !94, size: 32, offset: 224)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !749, file: !707, line: 77, baseType: !94, size: 32, offset: 256)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !749, file: !707, line: 80, baseType: !94, size: 32, offset: 288)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !749, file: !707, line: 81, baseType: !94, size: 32, offset: 320)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !749, file: !707, line: 82, baseType: !94, size: 32, offset: 352)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !749, file: !707, line: 83, baseType: !94, size: 32, offset: 384)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !749, file: !707, line: 84, baseType: !94, size: 32, offset: 416)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !749, file: !707, line: 85, baseType: !94, size: 32, offset: 448)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !749, file: !707, line: 88, baseType: !94, size: 32, offset: 480)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !749, file: !707, line: 89, baseType: !94, size: 32, offset: 512)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !749, file: !707, line: 90, baseType: !94, size: 32, offset: 544)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !749, file: !707, line: 91, baseType: !94, size: 32, offset: 576)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !749, file: !707, line: 92, baseType: !94, size: 32, offset: 608)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !749, file: !707, line: 93, baseType: !94, size: 32, offset: 640)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !749, file: !707, line: 95, baseType: !94, size: 32, offset: 672)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !749, file: !707, line: 98, baseType: !94, size: 32, offset: 704)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !749, file: !707, line: 99, baseType: !94, size: 32, offset: 736)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !749, file: !707, line: 100, baseType: !94, size: 32, offset: 768)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !749, file: !707, line: 103, baseType: !94, size: 32, offset: 800)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !749, file: !707, line: 103, baseType: !94, size: 32, offset: 832)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !749, file: !707, line: 104, baseType: !94, size: 32, offset: 864)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !749, file: !707, line: 104, baseType: !94, size: 32, offset: 896)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !749, file: !707, line: 104, baseType: !94, size: 32, offset: 928)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !749, file: !707, line: 104, baseType: !94, size: 32, offset: 960)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !749, file: !707, line: 107, baseType: !94, size: 32, offset: 992)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !749, file: !707, line: 108, baseType: !788, size: 64, offset: 1024)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !178, line: 202, size: 3328, elements: !790)
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !859, !862, !863, !864, !890, !918, !919, !995, !1016, !1024, !1025}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !789, file: !178, line: 203, baseType: !106, size: 960)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !789, file: !178, line: 204, baseType: !176, size: 64, offset: 960)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !789, file: !178, line: 206, baseType: !94, size: 32, offset: 1024)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !789, file: !178, line: 206, baseType: !94, size: 32, offset: 1056)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1088)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1120)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1152)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1184)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1216)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !789, file: !178, line: 207, baseType: !94, size: 32, offset: 1248)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !789, file: !178, line: 208, baseType: !94, size: 32, offset: 1280)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !789, file: !178, line: 208, baseType: !94, size: 32, offset: 1312)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !789, file: !178, line: 211, baseType: !94, size: 32, offset: 1344)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !789, file: !178, line: 211, baseType: !94, size: 32, offset: 1376)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !789, file: !178, line: 211, baseType: !94, size: 32, offset: 1408)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !789, file: !178, line: 211, baseType: !94, size: 32, offset: 1440)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !789, file: !178, line: 211, baseType: !94, size: 32, offset: 1472)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !789, file: !178, line: 214, baseType: !94, size: 32, offset: 1504)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !789, file: !178, line: 214, baseType: !94, size: 32, offset: 1536)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !789, file: !178, line: 217, baseType: !94, size: 32, offset: 1568)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !789, file: !178, line: 218, baseType: !94, size: 32, offset: 1600)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !789, file: !178, line: 219, baseType: !94, size: 32, offset: 1632)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !789, file: !178, line: 220, baseType: !94, size: 32, offset: 1664)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !789, file: !178, line: 221, baseType: !94, size: 32, offset: 1696)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !789, file: !178, line: 222, baseType: !139, size: 16, offset: 1728)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !789, file: !178, line: 222, baseType: !139, size: 16, offset: 1744)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !789, file: !178, line: 224, baseType: !139, size: 16, offset: 1760)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !789, file: !178, line: 224, baseType: !139, size: 16, offset: 1776)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !789, file: !178, line: 227, baseType: !139, size: 16, offset: 1792)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !789, file: !178, line: 227, baseType: !139, size: 16, offset: 1808)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !789, file: !178, line: 229, baseType: !139, size: 16, offset: 1824)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !789, file: !178, line: 229, baseType: !139, size: 16, offset: 1840)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !789, file: !178, line: 230, baseType: !139, size: 16, offset: 1856)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !789, file: !178, line: 230, baseType: !139, size: 16, offset: 1872)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !789, file: !178, line: 232, baseType: !94, size: 32, offset: 1888)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !789, file: !178, line: 232, baseType: !94, size: 32, offset: 1920)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !789, file: !178, line: 232, baseType: !94, size: 32, offset: 1952)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !789, file: !178, line: 232, baseType: !94, size: 32, offset: 1984)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !789, file: !178, line: 233, baseType: !92, size: 32, offset: 2016)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !789, file: !178, line: 234, baseType: !92, size: 32, offset: 2048)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !789, file: !178, line: 235, baseType: !139, size: 16, offset: 2080)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !789, file: !178, line: 235, baseType: !139, size: 16, offset: 2096)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !789, file: !178, line: 236, baseType: !139, size: 16, offset: 2112)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !789, file: !178, line: 239, baseType: !139, size: 16, offset: 2128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !789, file: !178, line: 240, baseType: !92, size: 32, offset: 2144)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !789, file: !178, line: 241, baseType: !92, size: 32, offset: 2176)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !789, file: !178, line: 241, baseType: !92, size: 32, offset: 2208)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !789, file: !178, line: 241, baseType: !92, size: 32, offset: 2240)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !789, file: !178, line: 243, baseType: !94, size: 32, offset: 2272)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !789, file: !178, line: 243, baseType: !94, size: 32, offset: 2304)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !789, file: !178, line: 244, baseType: !94, size: 32, offset: 2336)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !789, file: !178, line: 246, baseType: !843, size: 320, offset: 2368)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !224, line: 50, size: 320, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !843, file: !224, line: 51, baseType: !518, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !843, file: !224, line: 53, baseType: !92, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !843, file: !224, line: 54, baseType: !92, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !843, file: !224, line: 55, baseType: !92, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !843, file: !224, line: 55, baseType: !92, size: 32, offset: 160)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !843, file: !224, line: 56, baseType: !126, size: 8, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !843, file: !224, line: 56, baseType: !126, size: 8, offset: 200)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !843, file: !224, line: 57, baseType: !126, size: 8, offset: 208)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !843, file: !224, line: 57, baseType: !126, size: 8, offset: 216)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !843, file: !224, line: 59, baseType: !139, size: 16, offset: 224)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !843, file: !224, line: 59, baseType: !139, size: 16, offset: 240)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !843, file: !224, line: 59, baseType: !139, size: 16, offset: 256)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !843, file: !224, line: 61, baseType: !139, size: 16, offset: 272)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !843, file: !224, line: 63, baseType: !92, size: 32, offset: 288)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !789, file: !178, line: 248, baseType: !860, size: 64, offset: 2688)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !178, line: 248, flags: DIFlagFwdDecl)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !789, file: !178, line: 249, baseType: !191, size: 64, offset: 2752)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !789, file: !178, line: 250, baseType: !222, size: 64, offset: 2816)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !789, file: !178, line: 251, baseType: !865, size: 64, offset: 2880)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !178, line: 113, size: 6208, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !877}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !866, file: !178, line: 114, baseType: !139, size: 16)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !866, file: !178, line: 114, baseType: !139, size: 16, offset: 16)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !866, file: !178, line: 115, baseType: !126, size: 8, offset: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !866, file: !178, line: 115, baseType: !126, size: 8, offset: 40)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !866, file: !178, line: 116, baseType: !126, size: 8, offset: 48)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !866, file: !178, line: 117, baseType: !874, size: 8, offset: 56)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 8, elements: !875)
!875 = !{!876}
!876 = !DISubrange(count: 1)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !866, file: !178, line: 119, baseType: !878, size: 6144, offset: 64)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 6144, elements: !888)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !178, line: 109, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !178, line: 106, size: 192, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !880, file: !178, line: 107, baseType: !94, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !880, file: !178, line: 107, baseType: !94, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !880, file: !178, line: 107, baseType: !94, size: 32, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !880, file: !178, line: 107, baseType: !94, size: 32, offset: 96)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !880, file: !178, line: 107, baseType: !94, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !880, file: !178, line: 108, baseType: !92, size: 32, offset: 160)
!888 = !{!889}
!889 = !DISubrange(count: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !789, file: !178, line: 252, baseType: !891, size: 64, offset: 2944)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !178, line: 122, size: 1600, elements: !893)
!893 = !{!894, !895, !896, !902, !903, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !892, file: !178, line: 123, baseType: !525, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !892, file: !178, line: 124, baseType: !222, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !892, file: !178, line: 125, baseType: !897, size: 384, offset: 128)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 384, elements: !900)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !293, line: 136, flags: DIFlagFwdDecl)
!900 = !{!901}
!901 = !DISubrange(count: 6)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !892, file: !178, line: 126, baseType: !648, size: 512, offset: 512)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !892, file: !178, line: 127, baseType: !904, size: 288, offset: 1024)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 288, elements: !905)
!905 = !{!187, !187}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !892, file: !178, line: 128, baseType: !139, size: 16, offset: 1312)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !892, file: !178, line: 128, baseType: !139, size: 16, offset: 1328)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !892, file: !178, line: 129, baseType: !94, size: 32, offset: 1344)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !892, file: !178, line: 129, baseType: !94, size: 32, offset: 1376)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !892, file: !178, line: 130, baseType: !94, size: 32, offset: 1408)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !892, file: !178, line: 131, baseType: !6, size: 32, offset: 1440)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !892, file: !178, line: 132, baseType: !139, size: 16, offset: 1472)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !892, file: !178, line: 132, baseType: !139, size: 16, offset: 1488)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !892, file: !178, line: 133, baseType: !92, size: 32, offset: 1504)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !892, file: !178, line: 133, baseType: !92, size: 32, offset: 1536)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !892, file: !178, line: 134, baseType: !139, size: 16, offset: 1568)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !892, file: !178, line: 134, baseType: !139, size: 16, offset: 1584)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !789, file: !178, line: 253, baseType: !261, size: 64, offset: 3008)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !789, file: !178, line: 254, baseType: !920, size: 64, offset: 3072)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !178, line: 137, size: 832, elements: !922)
!922 = !{!923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !921, file: !178, line: 138, baseType: !139, size: 16)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !921, file: !178, line: 140, baseType: !139, size: 16, offset: 16)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !921, file: !178, line: 141, baseType: !94, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !921, file: !178, line: 142, baseType: !94, size: 32, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !921, file: !178, line: 143, baseType: !139, size: 16, offset: 96)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !921, file: !178, line: 144, baseType: !139, size: 16, offset: 112)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !921, file: !178, line: 145, baseType: !92, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !921, file: !178, line: 147, baseType: !92, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !921, file: !178, line: 149, baseType: !525, size: 64, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !921, file: !178, line: 150, baseType: !92, size: 32, offset: 256)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !921, file: !178, line: 151, baseType: !139, size: 16, offset: 288)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !921, file: !178, line: 152, baseType: !139, size: 16, offset: 304)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !921, file: !178, line: 154, baseType: !93, size: 64, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !921, file: !178, line: 155, baseType: !937, size: 64, offset: 384)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !921, file: !178, line: 157, baseType: !94, size: 32, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !921, file: !178, line: 158, baseType: !139, size: 16, offset: 480)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !921, file: !178, line: 159, baseType: !139, size: 16, offset: 496)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !921, file: !178, line: 160, baseType: !139, size: 16, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !921, file: !178, line: 161, baseType: !379, size: 48, offset: 528)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !921, file: !178, line: 162, baseType: !94, size: 32, offset: 576)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !921, file: !178, line: 164, baseType: !94, size: 32, offset: 608)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !921, file: !178, line: 164, baseType: !94, size: 32, offset: 640)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !921, file: !178, line: 164, baseType: !94, size: 32, offset: 672)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !921, file: !178, line: 165, baseType: !865, size: 64, offset: 704)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !921, file: !178, line: 167, baseType: !949, size: 64, offset: 768)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !293, line: 72, size: 3072, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !965, !966, !991, !992, !993, !994}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !950, file: !293, line: 73, baseType: !92, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !950, file: !293, line: 73, baseType: !92, size: 32, offset: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !950, file: !293, line: 74, baseType: !92, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !950, file: !293, line: 75, baseType: !92, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !950, file: !293, line: 77, baseType: !957, size: 128, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !958, line: 95, baseType: !959)
!958 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !958, line: 92, size: 128, elements: !960)
!960 = !{!961, !962, !963, !964}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !959, file: !958, line: 93, baseType: !94, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !959, file: !958, line: 93, baseType: !94, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !959, file: !958, line: 94, baseType: !94, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !959, file: !958, line: 94, baseType: !94, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !950, file: !293, line: 77, baseType: !957, size: 128, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !950, file: !293, line: 79, baseType: !967, size: 2304, offset: 384)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 2304, elements: !287)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !293, line: 67, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !293, line: 55, size: 576, elements: !970)
!970 = !{!971, !972, !973, !974, !975, !976, !977, !978, !987, !988, !989, !990}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !969, file: !293, line: 56, baseType: !139, size: 16)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !969, file: !293, line: 56, baseType: !139, size: 16, offset: 16)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !969, file: !293, line: 58, baseType: !94, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !969, file: !293, line: 59, baseType: !94, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !969, file: !293, line: 59, baseType: !94, size: 32, offset: 96)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !969, file: !293, line: 60, baseType: !324, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !969, file: !293, line: 60, baseType: !324, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !969, file: !293, line: 61, baseType: !979, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !293, line: 47, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !293, line: 44, size: 96, elements: !982)
!982 = !{!983, !984, !985, !986}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !981, file: !293, line: 45, baseType: !94, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !981, file: !293, line: 45, baseType: !94, size: 32, offset: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !981, file: !293, line: 46, baseType: !139, size: 16, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !981, file: !293, line: 46, baseType: !139, size: 16, offset: 80)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !969, file: !293, line: 62, baseType: !979, size: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !969, file: !293, line: 64, baseType: !979, size: 64, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !969, file: !293, line: 65, baseType: !324, size: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !969, file: !293, line: 66, baseType: !324, size: 64, offset: 512)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !950, file: !293, line: 80, baseType: !376, size: 96, offset: 2688)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !950, file: !293, line: 80, baseType: !376, size: 96, offset: 2784)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !950, file: !293, line: 81, baseType: !376, size: 96, offset: 2880)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !950, file: !293, line: 83, baseType: !376, size: 96, offset: 2976)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !789, file: !178, line: 255, baseType: !996, size: 64, offset: 3136)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !178, line: 170, size: 8704, elements: !998)
!998 = !{!999, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !997, file: !178, line: 171, baseType: !1000, size: 96)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 96, elements: !377)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !997, file: !178, line: 172, baseType: !92, size: 32, offset: 96)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !997, file: !178, line: 173, baseType: !139, size: 16, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !997, file: !178, line: 174, baseType: !139, size: 16, offset: 144)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !997, file: !178, line: 175, baseType: !139, size: 16, offset: 160)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !997, file: !178, line: 176, baseType: !139, size: 16, offset: 176)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !997, file: !178, line: 177, baseType: !139, size: 16, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !997, file: !178, line: 178, baseType: !139, size: 16, offset: 208)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !997, file: !178, line: 179, baseType: !92, size: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !997, file: !178, line: 181, baseType: !525, size: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !997, file: !178, line: 182, baseType: !94, size: 32, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !997, file: !178, line: 183, baseType: !92, size: 32, offset: 352)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !997, file: !178, line: 184, baseType: !125, size: 8192, offset: 384)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !997, file: !178, line: 187, baseType: !937, size: 64, offset: 8576)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !997, file: !178, line: 188, baseType: !92, size: 32, offset: 8640)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !997, file: !178, line: 189, baseType: !92, size: 32, offset: 8672)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !789, file: !178, line: 256, baseType: !1017, size: 64, offset: 3200)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !178, line: 193, size: 640, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1018, file: !178, line: 194, baseType: !525, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1018, file: !178, line: 195, baseType: !155, size: 512, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1018, file: !178, line: 197, baseType: !92, size: 32, offset: 576)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1018, file: !178, line: 198, baseType: !92, size: 32, offset: 608)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !789, file: !178, line: 258, baseType: !126, size: 8, offset: 3264)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !789, file: !178, line: 259, baseType: !299, size: 56, offset: 3272)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !749, file: !707, line: 111, baseType: !1027, size: 64, offset: 1088)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !1029, line: 43, flags: DIFlagFwdDecl)
!1029 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !749, file: !707, line: 112, baseType: !94, size: 32, offset: 1152)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !749, file: !707, line: 113, baseType: !92, size: 32, offset: 1184)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !749, file: !707, line: 115, baseType: !525, size: 64, offset: 1216)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !526, file: !13, line: 264, baseType: !1034, size: 64, offset: 9984)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !707, line: 268, size: 3776, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1067, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1161, !1162, !1163, !1420, !1421, !1436, !1437, !1438, !1439}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1035, file: !707, line: 270, baseType: !92, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !1035, file: !707, line: 270, baseType: !92, size: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !1035, file: !707, line: 271, baseType: !1040, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !1042, line: 38, size: 1536, elements: !1043)
!1042 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_softbody.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1060, !1061, !1062, !1063, !1064, !1065, !1066}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "origS", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "origE", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96, offset: 96)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "origT", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96, offset: 288)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96, offset: 384)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !1041, file: !1042, line: 39, baseType: !376, size: 96, offset: 480)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "goal", scope: !1041, file: !1042, line: 40, baseType: !94, size: 32, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "prevpos", scope: !1041, file: !1042, line: 41, baseType: !376, size: 96, offset: 608)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "prevvec", scope: !1041, file: !1042, line: 41, baseType: !376, size: 96, offset: 704)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "prevdx", scope: !1041, file: !1042, line: 41, baseType: !376, size: 96, offset: 800)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "prevdv", scope: !1041, file: !1042, line: 41, baseType: !376, size: 96, offset: 896)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "impdv", scope: !1041, file: !1042, line: 42, baseType: !376, size: 96, offset: 992)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "impdx", scope: !1041, file: !1042, line: 42, baseType: !376, size: 96, offset: 1088)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "nofsprings", scope: !1041, file: !1042, line: 43, baseType: !92, size: 32, offset: 1184)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "springs", scope: !1041, file: !1042, line: 43, baseType: !1059, size: 64, offset: 1216)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !1041, file: !1042, line: 44, baseType: !94, size: 32, offset: 1280)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "choke2", scope: !1041, file: !1042, line: 44, baseType: !94, size: 32, offset: 1312)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1041, file: !1042, line: 44, baseType: !94, size: 32, offset: 1344)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !1041, file: !1042, line: 45, baseType: !94, size: 32, offset: 1376)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "loc_flag", scope: !1041, file: !1042, line: 46, baseType: !139, size: 16, offset: 1408)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1041, file: !1042, line: 48, baseType: !94, size: 32, offset: 1440)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "springweight", scope: !1041, file: !1042, line: 49, baseType: !94, size: 32, offset: 1472)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !1035, file: !707, line: 272, baseType: !1068, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !3, line: 94, size: 320, elements: !1070)
!1070 = !{!1071, !1072, !1073, !1074, !1075, !1076, !1077, !1079}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1069, file: !3, line: 95, baseType: !92, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1069, file: !3, line: 95, baseType: !92, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1069, file: !3, line: 96, baseType: !94, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1069, file: !3, line: 96, baseType: !94, size: 32, offset: 96)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1069, file: !3, line: 96, baseType: !94, size: 32, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ext_force", scope: !1069, file: !3, line: 97, baseType: !376, size: 96, offset: 160)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "springtype", scope: !1069, file: !3, line: 98, baseType: !1078, size: 32, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "type_spring", file: !3, line: 92, baseType: !5)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1069, file: !3, line: 99, baseType: !139, size: 16, offset: 288)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1035, file: !707, line: 273, baseType: !126, size: 8, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !1035, file: !707, line: 274, baseType: !126, size: 8, offset: 200)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !1035, file: !707, line: 275, baseType: !139, size: 16, offset: 208)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !1035, file: !707, line: 280, baseType: !94, size: 32, offset: 224)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !1035, file: !707, line: 281, baseType: !155, size: 512, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !1035, file: !707, line: 285, baseType: !94, size: 32, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !1035, file: !707, line: 286, baseType: !94, size: 32, offset: 800)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !1035, file: !707, line: 287, baseType: !94, size: 32, offset: 832)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !1035, file: !707, line: 288, baseType: !94, size: 32, offset: 864)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !1035, file: !707, line: 291, baseType: !94, size: 32, offset: 896)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !1035, file: !707, line: 292, baseType: !94, size: 32, offset: 928)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !1035, file: !707, line: 293, baseType: !94, size: 32, offset: 960)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !1035, file: !707, line: 294, baseType: !94, size: 32, offset: 992)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !1035, file: !707, line: 295, baseType: !94, size: 32, offset: 1024)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !1035, file: !707, line: 296, baseType: !139, size: 16, offset: 1056)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !1035, file: !707, line: 297, baseType: !155, size: 512, offset: 1072)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !1035, file: !707, line: 301, baseType: !139, size: 16, offset: 1584)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !1035, file: !707, line: 304, baseType: !94, size: 32, offset: 1600)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !1035, file: !707, line: 305, baseType: !94, size: 32, offset: 1632)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !1035, file: !707, line: 306, baseType: !155, size: 512, offset: 1664)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1035, file: !707, line: 312, baseType: !92, size: 32, offset: 2176)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1035, file: !707, line: 312, baseType: !92, size: 32, offset: 2208)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1035, file: !707, line: 313, baseType: !92, size: 32, offset: 2240)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1035, file: !707, line: 314, baseType: !139, size: 16, offset: 2272)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !1035, file: !707, line: 314, baseType: !139, size: 16, offset: 2288)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1035, file: !707, line: 317, baseType: !1106, size: 64, offset: 2304)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !707, line: 213, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !707, line: 211, size: 128, elements: !1110)
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1109, file: !707, line: 212, baseType: !286, size: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !1035, file: !707, line: 318, baseType: !92, size: 32, offset: 2368)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1035, file: !707, line: 318, baseType: !92, size: 32, offset: 2400)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !1035, file: !707, line: 320, baseType: !94, size: 32, offset: 2432)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !1035, file: !707, line: 323, baseType: !94, size: 32, offset: 2464)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !1035, file: !707, line: 324, baseType: !94, size: 32, offset: 2496)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !1035, file: !707, line: 325, baseType: !94, size: 32, offset: 2528)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !1035, file: !707, line: 326, baseType: !139, size: 16, offset: 2560)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !1035, file: !707, line: 327, baseType: !139, size: 16, offset: 2576)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !1035, file: !707, line: 328, baseType: !139, size: 16, offset: 2592)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !1035, file: !707, line: 329, baseType: !139, size: 16, offset: 2608)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !1035, file: !707, line: 330, baseType: !139, size: 16, offset: 2624)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !1035, file: !707, line: 331, baseType: !139, size: 16, offset: 2640)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !1035, file: !707, line: 332, baseType: !139, size: 16, offset: 2656)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !1035, file: !707, line: 332, baseType: !139, size: 16, offset: 2672)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1035, file: !707, line: 335, baseType: !1127, size: 64, offset: 2688)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !3, line: 120, size: 640, elements: !1129)
!1129 = !{!1130, !1133, !1134, !1135, !1146, !1147, !1148, !1149}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "colliderhash", scope: !1128, file: !3, line: 121, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !96, line: 48, baseType: !568)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "needstobuildcollider", scope: !1128, file: !3, line: 122, baseType: !139, size: 16, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1128, file: !3, line: 123, baseType: !139, size: 16, offset: 80)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "bodyface", scope: !1128, file: !3, line: 124, baseType: !1136, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "BodyFace", file: !3, line: 106, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BodyFace", file: !3, line: 102, size: 256, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1138, file: !3, line: 103, baseType: !92, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1138, file: !3, line: 103, baseType: !92, size: 32, offset: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1138, file: !3, line: 103, baseType: !92, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1138, file: !3, line: 103, baseType: !92, size: 32, offset: 96)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "ext_force", scope: !1138, file: !3, line: 104, baseType: !376, size: 96, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1138, file: !3, line: 105, baseType: !139, size: 16, offset: 224)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1128, file: !3, line: 125, baseType: !92, size: 32, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "aabbmin", scope: !1128, file: !3, line: 126, baseType: !376, size: 96, offset: 224)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "aabbmax", scope: !1128, file: !3, line: 126, baseType: !376, size: 96, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "Ref", scope: !1128, file: !3, line: 127, baseType: !1150, size: 192, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceState", file: !3, line: 116, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReferenceState", file: !3, line: 113, size: 192, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "com", scope: !1151, file: !3, line: 114, baseType: !376, size: 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ivert", scope: !1151, file: !3, line: 115, baseType: !1155, size: 64, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceVert", file: !3, line: 111, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReferenceVert", file: !3, line: 108, size: 128, elements: !1158)
!1158 = !{!1159, !1160}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1157, file: !3, line: 109, baseType: !376, size: 96)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1157, file: !3, line: 110, baseType: !94, size: 32, offset: 96)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !1035, file: !707, line: 336, baseType: !94, size: 32, offset: 2752)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !1035, file: !707, line: 337, baseType: !94, size: 32, offset: 2784)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1035, file: !707, line: 339, baseType: !1164, size: 64, offset: 2816)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !707, line: 170, size: 10560, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1416}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1165, file: !707, line: 171, baseType: !1164, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1165, file: !707, line: 171, baseType: !1164, size: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1165, file: !707, line: 172, baseType: !92, size: 32, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1165, file: !707, line: 174, baseType: !92, size: 32, offset: 160)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !1165, file: !707, line: 186, baseType: !92, size: 32, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !1165, file: !707, line: 187, baseType: !92, size: 32, offset: 224)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !1165, file: !707, line: 188, baseType: !92, size: 32, offset: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !1165, file: !707, line: 189, baseType: !92, size: 32, offset: 288)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !1165, file: !707, line: 190, baseType: !92, size: 32, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !1165, file: !707, line: 191, baseType: !92, size: 32, offset: 352)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1165, file: !707, line: 192, baseType: !92, size: 32, offset: 384)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1165, file: !707, line: 195, baseType: !92, size: 32, offset: 416)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1165, file: !707, line: 196, baseType: !92, size: 32, offset: 448)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1165, file: !707, line: 197, baseType: !139, size: 16, offset: 480)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1165, file: !707, line: 197, baseType: !139, size: 16, offset: 496)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !707, line: 199, baseType: !155, size: 512, offset: 512)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !1165, file: !707, line: 200, baseType: !155, size: 512, offset: 1024)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1165, file: !707, line: 201, baseType: !155, size: 512, offset: 1536)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1165, file: !707, line: 202, baseType: !125, size: 8192, offset: 2048)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !1165, file: !707, line: 203, baseType: !500, size: 64, offset: 10240)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1165, file: !707, line: 205, baseType: !167, size: 128, offset: 10304)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1165, file: !707, line: 207, baseType: !1189, size: 64, offset: 10432)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !1191, line: 235, size: 2560, elements: !1192)
!1191 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1192 = !{!1193, !1194, !1229, !1232, !1397, !1400, !1401, !1402, !1403, !1404, !1408, !1409, !1410, !1411, !1412, !1413, !1415}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !1190, file: !1191, line: 236, baseType: !165, size: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !1190, file: !1191, line: 237, baseType: !1195, size: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !1191, line: 218, size: 1152, elements: !1197)
!1197 = !{!1198, !1199, !1200, !1218, !1221, !1224, !1225, !1226, !1227, !1228}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1196, file: !1191, line: 219, baseType: !1195, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1196, file: !1191, line: 219, baseType: !1195, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1196, file: !1191, line: 220, baseType: !1201, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !1191, line: 212, size: 128, elements: !1203)
!1203 = !{!1204, !1216, !1217}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1202, file: !1191, line: 213, baseType: !1205, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !1191, line: 194, size: 448, elements: !1207)
!1207 = !{!1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1206, file: !1191, line: 195, baseType: !937, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1206, file: !1191, line: 196, baseType: !937, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1206, file: !1191, line: 197, baseType: !937, size: 64, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1206, file: !1191, line: 198, baseType: !937, size: 64, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !1206, file: !1191, line: 200, baseType: !376, size: 96, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !1206, file: !1191, line: 201, baseType: !94, size: 32, offset: 352)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1206, file: !1191, line: 202, baseType: !94, size: 32, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1206, file: !1191, line: 203, baseType: !139, size: 16, offset: 416)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1202, file: !1191, line: 214, baseType: !92, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1202, file: !1191, line: 215, baseType: !139, size: 16, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1196, file: !1191, line: 223, baseType: !1219, size: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !1029, line: 45, flags: DIFlagFwdDecl)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1196, file: !1191, line: 224, baseType: !1222, size: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !1191, line: 224, flags: DIFlagFwdDecl)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1196, file: !1191, line: 225, baseType: !937, size: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !1196, file: !1191, line: 226, baseType: !92, size: 32, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1196, file: !1191, line: 229, baseType: !167, size: 128, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1196, file: !1191, line: 231, baseType: !92, size: 32, offset: 576)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1196, file: !1191, line: 232, baseType: !155, size: 512, offset: 608)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1190, file: !1191, line: 238, baseType: !1230, size: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !1191, line: 216, baseType: !1202)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1190, file: !1191, line: 240, baseType: !1233, size: 1600, offset: 256)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !1191, line: 122, size: 1600, elements: !1234)
!1234 = !{!1235, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1253, !1257, !1261, !1351, !1352, !1368, !1372, !1376, !1380, !1386, !1387, !1391, !1392, !1393, !1395}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1233, file: !1191, line: 123, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1233, file: !1191, line: 123, baseType: !1236, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1233, file: !1191, line: 125, baseType: !518, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1233, file: !1191, line: 126, baseType: !525, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !1233, file: !1191, line: 127, baseType: !93, size: 64, offset: 256)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1233, file: !1191, line: 128, baseType: !6, size: 32, offset: 320)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1233, file: !1191, line: 129, baseType: !6, size: 32, offset: 352)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1233, file: !1191, line: 130, baseType: !6, size: 32, offset: 384)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !1233, file: !1191, line: 132, baseType: !6, size: 32, offset: 416)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !1233, file: !1191, line: 133, baseType: !6, size: 32, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1233, file: !1191, line: 136, baseType: !6, size: 32, offset: 480)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !1233, file: !1191, line: 136, baseType: !6, size: 32, offset: 512)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !1233, file: !1191, line: 139, baseType: !1249, size: 64, offset: 576)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!92, !92, !93, !1252, !92}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !1233, file: !1191, line: 141, baseType: !1254, size: 64, offset: 640)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{null, !92, !93, !1252, !94, !937}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !1233, file: !1191, line: 143, baseType: !1258, size: 64, offset: 704)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{null, !92, !93, !1252, !94, !94, !94, !937}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !1233, file: !1191, line: 146, baseType: !1262, size: 64, offset: 768)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!92, !1265, !93}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !1191, line: 118, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !1191, line: 109, size: 1536, elements: !1268)
!1268 = !{!1269, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1349}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !1267, file: !1191, line: 110, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1272, line: 7, baseType: !1273)
!1272 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1274, line: 49, size: 1728, elements: !1275)
!1274 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1275 = !{!1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1291, !1293, !1294, !1295, !1299, !1300, !1302, !1303, !1306, !1308, !1311, !1314, !1315, !1316, !1320, !1321}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1273, file: !1274, line: 51, baseType: !92, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1273, file: !1274, line: 54, baseType: !500, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1273, file: !1274, line: 55, baseType: !500, size: 64, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1273, file: !1274, line: 56, baseType: !500, size: 64, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1273, file: !1274, line: 57, baseType: !500, size: 64, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1273, file: !1274, line: 58, baseType: !500, size: 64, offset: 320)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1273, file: !1274, line: 59, baseType: !500, size: 64, offset: 384)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1273, file: !1274, line: 60, baseType: !500, size: 64, offset: 448)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1273, file: !1274, line: 61, baseType: !500, size: 64, offset: 512)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1273, file: !1274, line: 64, baseType: !500, size: 64, offset: 576)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1273, file: !1274, line: 65, baseType: !500, size: 64, offset: 640)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1273, file: !1274, line: 66, baseType: !500, size: 64, offset: 704)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1273, file: !1274, line: 68, baseType: !1289, size: 64, offset: 768)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1274, line: 36, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1273, file: !1274, line: 70, baseType: !1292, size: 64, offset: 832)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1273, file: !1274, line: 72, baseType: !92, size: 32, offset: 896)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1273, file: !1274, line: 73, baseType: !92, size: 32, offset: 928)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1273, file: !1274, line: 74, baseType: !1296, size: 64, offset: 960)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1297, line: 152, baseType: !1298)
!1297 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1298 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1273, file: !1274, line: 77, baseType: !684, size: 16, offset: 1024)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1273, file: !1274, line: 78, baseType: !1301, size: 8, offset: 1040)
!1301 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1273, file: !1274, line: 79, baseType: !874, size: 8, offset: 1048)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1273, file: !1274, line: 81, baseType: !1304, size: 64, offset: 1088)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1274, line: 43, baseType: null)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1273, file: !1274, line: 89, baseType: !1307, size: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1297, line: 153, baseType: !1298)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1273, file: !1274, line: 91, baseType: !1309, size: 64, offset: 1216)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1274, line: 37, flags: DIFlagFwdDecl)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1273, file: !1274, line: 92, baseType: !1312, size: 64, offset: 1280)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1274, line: 38, flags: DIFlagFwdDecl)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1273, file: !1274, line: 93, baseType: !1292, size: 64, offset: 1344)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1273, file: !1274, line: 94, baseType: !93, size: 64, offset: 1408)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1273, file: !1274, line: 95, baseType: !1317, size: 64, offset: 1472)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1318, line: 46, baseType: !1319)
!1318 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1319 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1273, file: !1274, line: 96, baseType: !92, size: 32, offset: 1536)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1273, file: !1274, line: 98, baseType: !1322, size: 160, offset: 1568)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 160, elements: !1323)
!1323 = !{!1324}
!1324 = !DISubrange(count: 20)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1267, file: !1191, line: 112, baseType: !92, size: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !1267, file: !1191, line: 112, baseType: !92, size: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1267, file: !1191, line: 113, baseType: !6, size: 32, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1267, file: !1191, line: 113, baseType: !6, size: 32, offset: 160)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1267, file: !1191, line: 114, baseType: !6, size: 32, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1267, file: !1191, line: 114, baseType: !6, size: 32, offset: 224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1267, file: !1191, line: 116, baseType: !1332, size: 736, offset: 256)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !1191, line: 98, size: 736, elements: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1332, file: !1191, line: 99, baseType: !6, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1332, file: !1191, line: 100, baseType: !376, size: 96, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1332, file: !1191, line: 101, baseType: !376, size: 96, offset: 128)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1332, file: !1191, line: 102, baseType: !286, size: 128, offset: 224)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1332, file: !1191, line: 103, baseType: !376, size: 96, offset: 352)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1332, file: !1191, line: 104, baseType: !94, size: 32, offset: 448)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1332, file: !1191, line: 105, baseType: !376, size: 96, offset: 480)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1332, file: !1191, line: 106, baseType: !1342, size: 160, offset: 576)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !1343, line: 109, size: 160, elements: !1344)
!1343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1344 = !{!1345, !1346, !1347, !1348}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1342, file: !1343, line: 110, baseType: !94, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1342, file: !1343, line: 110, baseType: !376, size: 96, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !1342, file: !1343, line: 111, baseType: !139, size: 16, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1342, file: !1343, line: 111, baseType: !139, size: 16, offset: 144)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1267, file: !1191, line: 117, baseType: !1350, size: 512, offset: 1024)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 512, elements: !242)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !1233, file: !1191, line: 148, baseType: !1262, size: 64, offset: 832)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !1233, file: !1191, line: 151, baseType: !1353, size: 64, offset: 896)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{null, !93, !1356, !92}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !707, line: 159, size: 1408, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1357, file: !707, line: 160, baseType: !1356, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1357, file: !707, line: 160, baseType: !1356, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1357, file: !707, line: 161, baseType: !6, size: 32, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1357, file: !707, line: 161, baseType: !6, size: 32, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1357, file: !707, line: 162, baseType: !6, size: 32, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1357, file: !707, line: 162, baseType: !6, size: 32, offset: 224)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !707, line: 164, baseType: !1350, size: 512, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1357, file: !707, line: 165, baseType: !1350, size: 512, offset: 768)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1357, file: !707, line: 167, baseType: !167, size: 128, offset: 1280)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !1233, file: !1191, line: 153, baseType: !1369, size: 64, offset: 960)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{null, !93, !1356, !94}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !1233, file: !1191, line: 155, baseType: !1373, size: 64, offset: 1024)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{null, !93, !1356, !94, !94, !94}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1233, file: !1191, line: 158, baseType: !1377, size: 64, offset: 1088)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!92, !93, !92}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1233, file: !1191, line: 160, baseType: !1381, size: 64, offset: 1152)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{null, !93, !1384}
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !1233, file: !1191, line: 162, baseType: !1377, size: 64, offset: 1216)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1233, file: !1191, line: 164, baseType: !1388, size: 64, offset: 1280)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!92, !1265}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1233, file: !1191, line: 165, baseType: !1388, size: 64, offset: 1344)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1233, file: !1191, line: 167, baseType: !1164, size: 64, offset: 1408)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !1233, file: !1191, line: 169, baseType: !1394, size: 64, offset: 1472)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1233, file: !1191, line: 170, baseType: !1396, size: 64, offset: 1536)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1190, file: !1191, line: 243, baseType: !1398, size: 64, offset: 1856)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !13, line: 55, flags: DIFlagFwdDecl)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1190, file: !1191, line: 244, baseType: !1219, size: 64, offset: 1920)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1190, file: !1191, line: 245, baseType: !1222, size: 64, offset: 1984)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1190, file: !1191, line: 246, baseType: !937, size: 64, offset: 2048)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !1190, file: !1191, line: 247, baseType: !1059, size: 64, offset: 2112)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1190, file: !1191, line: 249, baseType: !1405, size: 64, offset: 2176)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !1191, line: 249, flags: DIFlagFwdDecl)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1190, file: !1191, line: 250, baseType: !165, size: 128, offset: 2240)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1190, file: !1191, line: 252, baseType: !92, size: 32, offset: 2368)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !1190, file: !1191, line: 252, baseType: !92, size: 32, offset: 2400)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1190, file: !1191, line: 252, baseType: !92, size: 32, offset: 2432)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !1190, file: !1191, line: 252, baseType: !92, size: 32, offset: 2464)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !1190, file: !1191, line: 254, baseType: !1414, size: 24, offset: 2496)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 24, elements: !377)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !1190, file: !1191, line: 255, baseType: !1414, size: 24, offset: 2520)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1165, file: !707, line: 208, baseType: !1417, size: 64, offset: 10496)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{null, !1189}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1035, file: !707, line: 340, baseType: !167, size: 128, offset: 2880)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1035, file: !707, line: 342, baseType: !1422, size: 64, offset: 3008)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !707, line: 118, size: 640, elements: !1424)
!1424 = !{!1425, !1428, !1432, !1433, !1434, !1435}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1423, file: !707, line: 119, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !549, line: 46, flags: DIFlagFwdDecl)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1423, file: !707, line: 121, baseType: !1429, size: 448, offset: 64)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 448, elements: !1430)
!1430 = !{!1431}
!1431 = !DISubrange(count: 14)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !1423, file: !707, line: 122, baseType: !94, size: 32, offset: 512)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1423, file: !707, line: 123, baseType: !139, size: 16, offset: 544)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1423, file: !707, line: 123, baseType: !379, size: 48, offset: 560)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1423, file: !707, line: 124, baseType: !92, size: 32, offset: 608)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !1035, file: !707, line: 344, baseType: !376, size: 96, offset: 3072)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !1035, file: !707, line: 345, baseType: !904, size: 288, offset: 3168)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !1035, file: !707, line: 346, baseType: !904, size: 288, offset: 3456)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1035, file: !707, line: 348, baseType: !92, size: 32, offset: 3744)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !526, file: !13, line: 265, baseType: !1426, size: 64, offset: 10048)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !526, file: !13, line: 267, baseType: !126, size: 8, offset: 10112)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !526, file: !13, line: 268, baseType: !126, size: 8, offset: 10120)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !526, file: !13, line: 269, baseType: !139, size: 16, offset: 10128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !526, file: !13, line: 270, baseType: !94, size: 32, offset: 10144)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !526, file: !13, line: 272, baseType: !1446, size: 64, offset: 10176)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !13, line: 54, flags: DIFlagFwdDecl)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !526, file: !13, line: 275, baseType: !1449, size: 64, offset: 10240)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !1451, line: 49, size: 448, elements: !1452)
!1451 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1452 = !{!1453, !1454, !1455, !1456}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1450, file: !1451, line: 50, baseType: !165, size: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !1450, file: !1451, line: 51, baseType: !165, size: 128, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !1450, file: !1451, line: 52, baseType: !165, size: 128, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1450, file: !1451, line: 53, baseType: !1457, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !1459, line: 65, size: 128, elements: !1460)
!1459 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1460 = !{!1461, !1469, !1470}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1458, file: !1459, line: 66, baseType: !1462, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !1459, line: 56, size: 320, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1463, file: !1459, line: 57, baseType: !286, size: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1463, file: !1459, line: 58, baseType: !286, size: 128, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1463, file: !1459, line: 59, baseType: !94, size: 32, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1463, file: !1459, line: 59, baseType: !94, size: 32, offset: 288)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1458, file: !1459, line: 67, baseType: !92, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !1458, file: !1459, line: 68, baseType: !94, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !526, file: !13, line: 277, baseType: !1472, size: 64, offset: 10304)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !13, line: 56, flags: DIFlagFwdDecl)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !526, file: !13, line: 277, baseType: !1472, size: 64, offset: 10368)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !526, file: !13, line: 278, baseType: !1476, size: 64, offset: 10432)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1477, line: 27, baseType: !1478)
!1477 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1297, line: 45, baseType: !1319)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !526, file: !13, line: 279, baseType: !1476, size: 64, offset: 10496)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !526, file: !13, line: 280, baseType: !6, size: 32, offset: 10560)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !526, file: !13, line: 281, baseType: !6, size: 32, offset: 10592)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !526, file: !13, line: 283, baseType: !165, size: 128, offset: 10624)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !526, file: !13, line: 284, baseType: !165, size: 128, offset: 10752)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !526, file: !13, line: 285, baseType: !1485, size: 64, offset: 10880)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !526, file: !13, line: 287, baseType: !1487, size: 64, offset: 10944)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !13, line: 59, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !526, file: !13, line: 288, baseType: !1490, size: 64, offset: 11008)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !13, line: 288, flags: DIFlagFwdDecl)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !526, file: !13, line: 290, baseType: !324, size: 64, offset: 11072)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !526, file: !13, line: 291, baseType: !1494, size: 64, offset: 11136)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !224, line: 65, baseType: !843)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !526, file: !13, line: 293, baseType: !165, size: 128, offset: 11200)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !526, file: !13, line: 294, baseType: !1498, size: 64, offset: 11328)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !13, line: 113, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !13, line: 108, size: 256, elements: !1501)
!1501 = !{!1502, !1504, !1505, !1506, !1507}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1500, file: !13, line: 109, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1500, file: !13, line: 109, baseType: !1503, size: 64, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1500, file: !13, line: 110, baseType: !525, size: 64, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1500, file: !13, line: 111, baseType: !92, size: 32, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1500, file: !13, line: 112, baseType: !94, size: 32, offset: 224)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !519, file: !520, line: 1221, baseType: !1509, size: 64, offset: 1088)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !520, line: 52, flags: DIFlagFwdDecl)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !519, file: !520, line: 1223, baseType: !518, size: 64, offset: 1152)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !519, file: !520, line: 1225, baseType: !165, size: 128, offset: 1216)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !519, file: !520, line: 1226, baseType: !1514, size: 64, offset: 1344)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !520, line: 69, size: 320, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1515, file: !520, line: 70, baseType: !1514, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1515, file: !520, line: 70, baseType: !1514, size: 64, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1515, file: !520, line: 71, baseType: !6, size: 32, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1515, file: !520, line: 71, baseType: !6, size: 32, offset: 160)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1515, file: !520, line: 72, baseType: !92, size: 32, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1515, file: !520, line: 73, baseType: !139, size: 16, offset: 224)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1515, file: !520, line: 73, baseType: !139, size: 16, offset: 240)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1515, file: !520, line: 74, baseType: !525, size: 64, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !519, file: !520, line: 1227, baseType: !525, size: 64, offset: 1408)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !519, file: !520, line: 1229, baseType: !376, size: 96, offset: 1472)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !519, file: !520, line: 1230, baseType: !376, size: 96, offset: 1568)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !519, file: !520, line: 1231, baseType: !376, size: 96, offset: 1664)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !519, file: !520, line: 1231, baseType: !376, size: 96, offset: 1760)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !519, file: !520, line: 1233, baseType: !6, size: 32, offset: 1856)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !519, file: !520, line: 1234, baseType: !92, size: 32, offset: 1888)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !519, file: !520, line: 1235, baseType: !6, size: 32, offset: 1920)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !519, file: !520, line: 1237, baseType: !139, size: 16, offset: 1952)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !519, file: !520, line: 1239, baseType: !126, size: 8, offset: 1968)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !519, file: !520, line: 1240, baseType: !874, size: 8, offset: 1976)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !519, file: !520, line: 1242, baseType: !860, size: 64, offset: 1984)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !519, file: !520, line: 1244, baseType: !1538, size: 64, offset: 2048)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !520, line: 59, flags: DIFlagFwdDecl)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !519, file: !520, line: 1246, baseType: !1541, size: 64, offset: 2112)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !520, line: 1067, size: 5184, elements: !1543)
!1543 = !{!1544, !1571, !1572, !1586, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1608, !1624, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1735}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1542, file: !520, line: 1068, baseType: !1545, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !520, line: 934, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !520, line: 925, size: 576, elements: !1548)
!1548 = !{!1549, !1565, !1566, !1567, !1568, !1569, !1570}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1547, file: !520, line: 926, baseType: !1550, size: 320)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !520, line: 830, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !520, line: 813, size: 320, elements: !1552)
!1552 = !{!1553, !1556, !1559, !1560, !1562, !1563, !1564}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1551, file: !520, line: 814, baseType: !1554, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !520, line: 51, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1551, file: !520, line: 815, baseType: !1557, size: 64, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !520, line: 815, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1551, file: !520, line: 818, baseType: !93, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1551, file: !520, line: 819, baseType: !1561, size: 32, offset: 192)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 32, elements: !287)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1551, file: !520, line: 822, baseType: !92, size: 32, offset: 224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1551, file: !520, line: 826, baseType: !92, size: 32, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1551, file: !520, line: 829, baseType: !92, size: 32, offset: 288)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1547, file: !520, line: 928, baseType: !139, size: 16, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1547, file: !520, line: 928, baseType: !139, size: 16, offset: 336)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1547, file: !520, line: 929, baseType: !92, size: 32, offset: 352)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1547, file: !520, line: 930, baseType: !258, size: 64, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1547, file: !520, line: 931, baseType: !392, size: 64, offset: 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1547, file: !520, line: 933, baseType: !93, size: 64, offset: 512)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1542, file: !520, line: 1069, baseType: !1545, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1542, file: !520, line: 1070, baseType: !1573, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !520, line: 916, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !520, line: 891, size: 704, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1575, file: !520, line: 892, baseType: !1550, size: 320)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1575, file: !520, line: 896, baseType: !92, size: 32, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1575, file: !520, line: 900, baseType: !1000, size: 96, offset: 352)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1575, file: !520, line: 903, baseType: !94, size: 32, offset: 448)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1575, file: !520, line: 906, baseType: !92, size: 32, offset: 480)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1575, file: !520, line: 909, baseType: !94, size: 32, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1575, file: !520, line: 912, baseType: !94, size: 32, offset: 544)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1575, file: !520, line: 914, baseType: !525, size: 64, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1575, file: !520, line: 915, baseType: !93, size: 64, offset: 640)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1542, file: !520, line: 1071, baseType: !1587, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !520, line: 920, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !520, line: 918, size: 320, elements: !1590)
!1590 = !{!1591}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1589, file: !520, line: 919, baseType: !1550, size: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1542, file: !520, line: 1075, baseType: !94, size: 32, offset: 256)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1542, file: !520, line: 1077, baseType: !94, size: 32, offset: 288)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1542, file: !520, line: 1078, baseType: !94, size: 32, offset: 320)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1542, file: !520, line: 1079, baseType: !139, size: 16, offset: 352)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1542, file: !520, line: 1082, baseType: !139, size: 16, offset: 368)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1542, file: !520, line: 1085, baseType: !126, size: 8, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1542, file: !520, line: 1086, baseType: !126, size: 8, offset: 392)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1542, file: !520, line: 1087, baseType: !126, size: 8, offset: 400)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1542, file: !520, line: 1088, baseType: !126, size: 8, offset: 408)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1542, file: !520, line: 1090, baseType: !94, size: 32, offset: 416)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1542, file: !520, line: 1093, baseType: !139, size: 16, offset: 448)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1542, file: !520, line: 1096, baseType: !126, size: 8, offset: 464)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1542, file: !520, line: 1098, baseType: !1605, size: 40, offset: 472)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 40, elements: !1606)
!1606 = !{!1607}
!1607 = !DISubrange(count: 5)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1542, file: !520, line: 1101, baseType: !1609, size: 832, offset: 512)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !520, line: 836, size: 832, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1609, file: !520, line: 837, baseType: !1550, size: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1609, file: !520, line: 839, baseType: !139, size: 16, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1609, file: !520, line: 839, baseType: !139, size: 16, offset: 336)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1609, file: !520, line: 842, baseType: !139, size: 16, offset: 352)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1609, file: !520, line: 842, baseType: !139, size: 16, offset: 368)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1609, file: !520, line: 843, baseType: !270, size: 32, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1609, file: !520, line: 845, baseType: !92, size: 32, offset: 416)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1609, file: !520, line: 847, baseType: !93, size: 64, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1609, file: !520, line: 848, baseType: !222, size: 64, offset: 512)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1609, file: !520, line: 849, baseType: !222, size: 64, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1609, file: !520, line: 850, baseType: !222, size: 64, offset: 640)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1609, file: !520, line: 851, baseType: !376, size: 96, offset: 704)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1609, file: !520, line: 852, baseType: !94, size: 32, offset: 800)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1542, file: !520, line: 1104, baseType: !1625, size: 1344, offset: 1344)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !520, line: 867, size: 1344, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1625, file: !520, line: 868, baseType: !139, size: 16)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1625, file: !520, line: 869, baseType: !139, size: 16, offset: 16)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1625, file: !520, line: 870, baseType: !139, size: 16, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1625, file: !520, line: 871, baseType: !139, size: 16, offset: 48)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1625, file: !520, line: 873, baseType: !1632, size: 896, offset: 64)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1633, size: 896, elements: !300)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !520, line: 864, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !520, line: 859, size: 128, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1634, file: !520, line: 860, baseType: !139, size: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1634, file: !520, line: 861, baseType: !139, size: 16, offset: 16)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1634, file: !520, line: 861, baseType: !139, size: 16, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1634, file: !520, line: 861, baseType: !139, size: 16, offset: 48)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1634, file: !520, line: 862, baseType: !92, size: 32, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1634, file: !520, line: 863, baseType: !94, size: 32, offset: 96)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1625, file: !520, line: 874, baseType: !93, size: 64, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1625, file: !520, line: 876, baseType: !94, size: 32, offset: 1024)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1625, file: !520, line: 876, baseType: !94, size: 32, offset: 1056)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1625, file: !520, line: 878, baseType: !92, size: 32, offset: 1088)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1625, file: !520, line: 879, baseType: !92, size: 32, offset: 1120)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1625, file: !520, line: 881, baseType: !92, size: 32, offset: 1152)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1625, file: !520, line: 881, baseType: !92, size: 32, offset: 1184)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1625, file: !520, line: 883, baseType: !518, size: 64, offset: 1216)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1625, file: !520, line: 884, baseType: !525, size: 64, offset: 1280)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1542, file: !520, line: 1107, baseType: !94, size: 32, offset: 2688)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1542, file: !520, line: 1110, baseType: !94, size: 32, offset: 2720)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1542, file: !520, line: 1113, baseType: !139, size: 16, offset: 2752)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1542, file: !520, line: 1113, baseType: !139, size: 16, offset: 2768)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1542, file: !520, line: 1116, baseType: !126, size: 8, offset: 2784)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1542, file: !520, line: 1117, baseType: !874, size: 8, offset: 2792)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1542, file: !520, line: 1120, baseType: !139, size: 16, offset: 2800)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1542, file: !520, line: 1121, baseType: !94, size: 32, offset: 2816)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1542, file: !520, line: 1122, baseType: !94, size: 32, offset: 2848)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1542, file: !520, line: 1123, baseType: !94, size: 32, offset: 2880)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1542, file: !520, line: 1124, baseType: !94, size: 32, offset: 2912)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1542, file: !520, line: 1125, baseType: !94, size: 32, offset: 2944)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1542, file: !520, line: 1126, baseType: !94, size: 32, offset: 2976)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1542, file: !520, line: 1127, baseType: !94, size: 32, offset: 3008)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1542, file: !520, line: 1128, baseType: !94, size: 32, offset: 3040)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1542, file: !520, line: 1129, baseType: !94, size: 32, offset: 3072)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1542, file: !520, line: 1130, baseType: !94, size: 32, offset: 3104)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1542, file: !520, line: 1131, baseType: !139, size: 16, offset: 3136)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1542, file: !520, line: 1132, baseType: !126, size: 8, offset: 3152)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1542, file: !520, line: 1133, baseType: !126, size: 8, offset: 3160)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1542, file: !520, line: 1134, baseType: !1672, size: 24, offset: 3168)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 24, elements: !377)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1542, file: !520, line: 1135, baseType: !126, size: 8, offset: 3192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1542, file: !520, line: 1138, baseType: !525, size: 64, offset: 3200)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1542, file: !520, line: 1139, baseType: !126, size: 8, offset: 3264)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1542, file: !520, line: 1140, baseType: !126, size: 8, offset: 3272)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1542, file: !520, line: 1141, baseType: !126, size: 8, offset: 3280)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1542, file: !520, line: 1142, baseType: !126, size: 8, offset: 3288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1542, file: !520, line: 1143, baseType: !126, size: 8, offset: 3296)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1542, file: !520, line: 1144, baseType: !1681, size: 64, offset: 3304)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 64, elements: !242)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1542, file: !520, line: 1145, baseType: !1681, size: 64, offset: 3368)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1542, file: !520, line: 1148, baseType: !126, size: 8, offset: 3432)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1542, file: !520, line: 1149, baseType: !126, size: 8, offset: 3440)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1542, file: !520, line: 1152, baseType: !126, size: 8, offset: 3448)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1542, file: !520, line: 1152, baseType: !126, size: 8, offset: 3456)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1542, file: !520, line: 1153, baseType: !126, size: 8, offset: 3464)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1542, file: !520, line: 1154, baseType: !139, size: 16, offset: 3472)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1542, file: !520, line: 1154, baseType: !139, size: 16, offset: 3488)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1542, file: !520, line: 1155, baseType: !139, size: 16, offset: 3504)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1542, file: !520, line: 1155, baseType: !139, size: 16, offset: 3520)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1542, file: !520, line: 1156, baseType: !126, size: 8, offset: 3536)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1542, file: !520, line: 1157, baseType: !126, size: 8, offset: 3544)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1542, file: !520, line: 1159, baseType: !126, size: 8, offset: 3552)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1542, file: !520, line: 1160, baseType: !126, size: 8, offset: 3560)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1542, file: !520, line: 1161, baseType: !126, size: 8, offset: 3568)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1542, file: !520, line: 1162, baseType: !126, size: 8, offset: 3576)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1542, file: !520, line: 1165, baseType: !92, size: 32, offset: 3584)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1542, file: !520, line: 1166, baseType: !92, size: 32, offset: 3616)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1542, file: !520, line: 1167, baseType: !92, size: 32, offset: 3648)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1542, file: !520, line: 1168, baseType: !92, size: 32, offset: 3680)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1542, file: !520, line: 1171, baseType: !139, size: 16, offset: 3712)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1542, file: !520, line: 1171, baseType: !139, size: 16, offset: 3728)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1542, file: !520, line: 1172, baseType: !92, size: 32, offset: 3744)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1542, file: !520, line: 1173, baseType: !94, size: 32, offset: 3776)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1542, file: !520, line: 1174, baseType: !94, size: 32, offset: 3808)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1542, file: !520, line: 1177, baseType: !1708, size: 1024, offset: 3840)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !520, line: 963, size: 1024, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1733, !1734}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1708, file: !520, line: 965, baseType: !92, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1708, file: !520, line: 968, baseType: !94, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1708, file: !520, line: 971, baseType: !94, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1708, file: !520, line: 974, baseType: !94, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1708, file: !520, line: 977, baseType: !376, size: 96, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1708, file: !520, line: 979, baseType: !376, size: 96, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1708, file: !520, line: 982, baseType: !92, size: 32, offset: 320)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1708, file: !520, line: 987, baseType: !324, size: 64, offset: 352)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1708, file: !520, line: 989, baseType: !94, size: 32, offset: 416)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1708, file: !520, line: 994, baseType: !92, size: 32, offset: 448)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1708, file: !520, line: 995, baseType: !92, size: 32, offset: 480)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1708, file: !520, line: 997, baseType: !126, size: 8, offset: 512)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1708, file: !520, line: 998, baseType: !299, size: 56, offset: 520)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1708, file: !520, line: 1000, baseType: !94, size: 32, offset: 576)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1708, file: !520, line: 1003, baseType: !324, size: 64, offset: 608)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1708, file: !520, line: 1006, baseType: !92, size: 32, offset: 672)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1708, file: !520, line: 1009, baseType: !94, size: 32, offset: 704)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1708, file: !520, line: 1012, baseType: !324, size: 64, offset: 736)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1708, file: !520, line: 1015, baseType: !324, size: 64, offset: 800)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1708, file: !520, line: 1018, baseType: !92, size: 32, offset: 864)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1708, file: !520, line: 1019, baseType: !1731, size: 64, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !520, line: 63, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1708, file: !520, line: 1023, baseType: !94, size: 32, offset: 960)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1708, file: !520, line: 1024, baseType: !92, size: 32, offset: 992)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1542, file: !520, line: 1179, baseType: !1736, size: 320, offset: 4864)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !520, line: 1043, size: 320, elements: !1737)
!1737 = !{!1738, !1739, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !520, line: 1044, baseType: !126, size: 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1736, file: !520, line: 1045, baseType: !1740, size: 16, offset: 8)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 16, elements: !266)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1736, file: !520, line: 1048, baseType: !126, size: 8, offset: 24)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1736, file: !520, line: 1049, baseType: !94, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1736, file: !520, line: 1049, baseType: !94, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1736, file: !520, line: 1052, baseType: !94, size: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1736, file: !520, line: 1052, baseType: !94, size: 32, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1736, file: !520, line: 1053, baseType: !126, size: 8, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1736, file: !520, line: 1054, baseType: !1672, size: 24, offset: 168)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1736, file: !520, line: 1057, baseType: !94, size: 32, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1736, file: !520, line: 1057, baseType: !94, size: 32, offset: 224)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1736, file: !520, line: 1060, baseType: !94, size: 32, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1736, file: !520, line: 1060, baseType: !94, size: 32, offset: 288)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !519, file: !520, line: 1247, baseType: !1753, size: 64, offset: 2176)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !520, line: 60, flags: DIFlagFwdDecl)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !519, file: !520, line: 1251, baseType: !1756, size: 31872, offset: 2240)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !520, line: 403, size: 31872, elements: !1757)
!1757 = !{!1758, !1793, !1813, !1822, !1842, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1983, !1984, !1985, !1987, !2003, !2004}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1756, file: !520, line: 404, baseType: !1759, size: 1984)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !520, line: 259, size: 1984, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1776, !1788}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1759, file: !520, line: 260, baseType: !126, size: 8)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1759, file: !520, line: 263, baseType: !126, size: 8, offset: 8)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1759, file: !520, line: 266, baseType: !126, size: 8, offset: 16)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1759, file: !520, line: 267, baseType: !126, size: 8, offset: 24)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1759, file: !520, line: 269, baseType: !126, size: 8, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1759, file: !520, line: 270, baseType: !126, size: 8, offset: 40)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1759, file: !520, line: 276, baseType: !126, size: 8, offset: 48)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1759, file: !520, line: 279, baseType: !126, size: 8, offset: 56)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1759, file: !520, line: 280, baseType: !139, size: 16, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1759, file: !520, line: 280, baseType: !139, size: 16, offset: 80)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1759, file: !520, line: 281, baseType: !94, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1759, file: !520, line: 284, baseType: !126, size: 8, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1759, file: !520, line: 285, baseType: !126, size: 8, offset: 136)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1759, file: !520, line: 287, baseType: !1775, size: 48, offset: 144)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 48, elements: !900)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1759, file: !520, line: 290, baseType: !1777, size: 1280, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !293, line: 174, baseType: !1778)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !293, line: 166, size: 1280, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1778, file: !293, line: 167, baseType: !92, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1778, file: !293, line: 167, baseType: !92, size: 32, offset: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1778, file: !293, line: 168, baseType: !155, size: 512, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1778, file: !293, line: 169, baseType: !155, size: 512, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1778, file: !293, line: 170, baseType: !94, size: 32, offset: 1088)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1778, file: !293, line: 171, baseType: !94, size: 32, offset: 1120)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1778, file: !293, line: 172, baseType: !949, size: 64, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1778, file: !293, line: 173, baseType: !93, size: 64, offset: 1216)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1759, file: !520, line: 291, baseType: !1789, size: 512, offset: 1472)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !293, line: 178, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !293, line: 176, size: 512, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1790, file: !293, line: 177, baseType: !155, size: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1756, file: !520, line: 406, baseType: !1794, size: 64, offset: 1984)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !520, line: 80, size: 1472, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1795, file: !520, line: 81, baseType: !93, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1795, file: !520, line: 82, baseType: !93, size: 64, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1795, file: !520, line: 83, baseType: !6, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1795, file: !520, line: 84, baseType: !6, size: 32, offset: 160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1795, file: !520, line: 86, baseType: !6, size: 32, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1795, file: !520, line: 87, baseType: !6, size: 32, offset: 224)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1795, file: !520, line: 88, baseType: !6, size: 32, offset: 256)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1795, file: !520, line: 89, baseType: !6, size: 32, offset: 288)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1795, file: !520, line: 90, baseType: !6, size: 32, offset: 320)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1795, file: !520, line: 91, baseType: !6, size: 32, offset: 352)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1795, file: !520, line: 92, baseType: !6, size: 32, offset: 384)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1795, file: !520, line: 93, baseType: !6, size: 32, offset: 416)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1795, file: !520, line: 95, baseType: !1810, size: 1024, offset: 448)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 1024, elements: !1811)
!1811 = !{!1812}
!1812 = !DISubrange(count: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1756, file: !520, line: 407, baseType: !1814, size: 64, offset: 2048)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !520, line: 98, size: 1216, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1821}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1815, file: !520, line: 100, baseType: !93, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1815, file: !520, line: 101, baseType: !93, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1815, file: !520, line: 103, baseType: !6, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1815, file: !520, line: 104, baseType: !6, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1815, file: !520, line: 106, baseType: !1810, size: 1024, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1756, file: !520, line: 408, baseType: !1823, size: 512, offset: 2112)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !520, line: 109, size: 512, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1823, file: !520, line: 111, baseType: !92, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1823, file: !520, line: 112, baseType: !92, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1823, file: !520, line: 115, baseType: !92, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1823, file: !520, line: 116, baseType: !92, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1823, file: !520, line: 117, baseType: !92, size: 32, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1823, file: !520, line: 118, baseType: !92, size: 32, offset: 160)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1823, file: !520, line: 119, baseType: !92, size: 32, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1823, file: !520, line: 120, baseType: !92, size: 32, offset: 224)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1823, file: !520, line: 121, baseType: !92, size: 32, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1823, file: !520, line: 122, baseType: !92, size: 32, offset: 288)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1823, file: !520, line: 125, baseType: !92, size: 32, offset: 320)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1823, file: !520, line: 126, baseType: !92, size: 32, offset: 352)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1823, file: !520, line: 127, baseType: !139, size: 16, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1823, file: !520, line: 128, baseType: !139, size: 16, offset: 400)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1823, file: !520, line: 129, baseType: !92, size: 32, offset: 416)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1823, file: !520, line: 130, baseType: !92, size: 32, offset: 448)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1823, file: !520, line: 131, baseType: !92, size: 32, offset: 480)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1756, file: !520, line: 409, baseType: !1843, size: 576, offset: 2624)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !520, line: 134, size: 576, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1843, file: !520, line: 135, baseType: !92, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1843, file: !520, line: 136, baseType: !92, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1843, file: !520, line: 137, baseType: !92, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1843, file: !520, line: 138, baseType: !92, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1843, file: !520, line: 139, baseType: !92, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1843, file: !520, line: 140, baseType: !92, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1843, file: !520, line: 141, baseType: !92, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1843, file: !520, line: 142, baseType: !92, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1843, file: !520, line: 143, baseType: !94, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1843, file: !520, line: 144, baseType: !92, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1843, file: !520, line: 145, baseType: !92, size: 32, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1843, file: !520, line: 147, baseType: !92, size: 32, offset: 352)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1843, file: !520, line: 148, baseType: !92, size: 32, offset: 384)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1843, file: !520, line: 149, baseType: !92, size: 32, offset: 416)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1843, file: !520, line: 150, baseType: !92, size: 32, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1843, file: !520, line: 151, baseType: !92, size: 32, offset: 480)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1843, file: !520, line: 152, baseType: !144, size: 64, offset: 512)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1756, file: !520, line: 411, baseType: !92, size: 32, offset: 3200)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1756, file: !520, line: 411, baseType: !92, size: 32, offset: 3232)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1756, file: !520, line: 411, baseType: !92, size: 32, offset: 3264)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1756, file: !520, line: 412, baseType: !94, size: 32, offset: 3296)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1756, file: !520, line: 413, baseType: !92, size: 32, offset: 3328)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1756, file: !520, line: 413, baseType: !92, size: 32, offset: 3360)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1756, file: !520, line: 415, baseType: !92, size: 32, offset: 3392)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1756, file: !520, line: 415, baseType: !92, size: 32, offset: 3424)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1756, file: !520, line: 416, baseType: !139, size: 16, offset: 3456)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1756, file: !520, line: 416, baseType: !139, size: 16, offset: 3472)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1756, file: !520, line: 418, baseType: !94, size: 32, offset: 3488)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1756, file: !520, line: 418, baseType: !94, size: 32, offset: 3520)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1756, file: !520, line: 421, baseType: !94, size: 32, offset: 3552)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1756, file: !520, line: 421, baseType: !94, size: 32, offset: 3584)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1756, file: !520, line: 421, baseType: !94, size: 32, offset: 3616)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1756, file: !520, line: 425, baseType: !139, size: 16, offset: 3648)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1756, file: !520, line: 425, baseType: !139, size: 16, offset: 3664)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1756, file: !520, line: 425, baseType: !139, size: 16, offset: 3680)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1756, file: !520, line: 426, baseType: !139, size: 16, offset: 3696)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1756, file: !520, line: 428, baseType: !139, size: 16, offset: 3712)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1756, file: !520, line: 428, baseType: !139, size: 16, offset: 3728)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1756, file: !520, line: 431, baseType: !92, size: 32, offset: 3744)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1756, file: !520, line: 433, baseType: !139, size: 16, offset: 3776)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1756, file: !520, line: 435, baseType: !139, size: 16, offset: 3792)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1756, file: !520, line: 437, baseType: !139, size: 16, offset: 3808)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1756, file: !520, line: 439, baseType: !139, size: 16, offset: 3824)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1756, file: !520, line: 441, baseType: !139, size: 16, offset: 3840)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1756, file: !520, line: 443, baseType: !139, size: 16, offset: 3856)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1756, file: !520, line: 449, baseType: !92, size: 32, offset: 3872)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1756, file: !520, line: 453, baseType: !92, size: 32, offset: 3904)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1756, file: !520, line: 458, baseType: !139, size: 16, offset: 3936)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1756, file: !520, line: 462, baseType: !139, size: 16, offset: 3952)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1756, file: !520, line: 467, baseType: !92, size: 32, offset: 3968)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1756, file: !520, line: 467, baseType: !92, size: 32, offset: 4000)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1756, file: !520, line: 469, baseType: !139, size: 16, offset: 4032)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1756, file: !520, line: 469, baseType: !139, size: 16, offset: 4048)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1756, file: !520, line: 469, baseType: !139, size: 16, offset: 4064)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1756, file: !520, line: 469, baseType: !139, size: 16, offset: 4080)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1756, file: !520, line: 474, baseType: !139, size: 16, offset: 4096)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1756, file: !520, line: 475, baseType: !126, size: 8, offset: 4112)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1756, file: !520, line: 476, baseType: !126, size: 8, offset: 4120)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1756, file: !520, line: 481, baseType: !92, size: 32, offset: 4128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1756, file: !520, line: 486, baseType: !92, size: 32, offset: 4160)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1756, file: !520, line: 491, baseType: !92, size: 32, offset: 4192)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1756, file: !520, line: 496, baseType: !139, size: 16, offset: 4224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1756, file: !520, line: 498, baseType: !139, size: 16, offset: 4240)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1756, file: !520, line: 501, baseType: !139, size: 16, offset: 4256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1756, file: !520, line: 502, baseType: !139, size: 16, offset: 4272)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1756, file: !520, line: 508, baseType: !139, size: 16, offset: 4288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1756, file: !520, line: 513, baseType: !139, size: 16, offset: 4304)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1756, file: !520, line: 515, baseType: !139, size: 16, offset: 4320)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1756, file: !520, line: 515, baseType: !139, size: 16, offset: 4336)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1756, file: !520, line: 519, baseType: !957, size: 128, offset: 4352)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1756, file: !520, line: 519, baseType: !957, size: 128, offset: 4480)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1756, file: !520, line: 520, baseType: !1917, size: 128, offset: 4608)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !958, line: 89, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !958, line: 86, size: 128, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1918, file: !958, line: 87, baseType: !92, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1918, file: !958, line: 87, baseType: !92, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1918, file: !958, line: 88, baseType: !92, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1918, file: !958, line: 88, baseType: !92, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1756, file: !520, line: 523, baseType: !165, size: 128, offset: 4736)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1756, file: !520, line: 524, baseType: !139, size: 16, offset: 4864)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1756, file: !520, line: 527, baseType: !139, size: 16, offset: 4880)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1756, file: !520, line: 532, baseType: !94, size: 32, offset: 4896)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1756, file: !520, line: 532, baseType: !94, size: 32, offset: 4928)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1756, file: !520, line: 534, baseType: !94, size: 32, offset: 4960)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1756, file: !520, line: 538, baseType: !94, size: 32, offset: 4992)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1756, file: !520, line: 542, baseType: !92, size: 32, offset: 5024)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1756, file: !520, line: 545, baseType: !94, size: 32, offset: 5056)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1756, file: !520, line: 545, baseType: !94, size: 32, offset: 5088)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1756, file: !520, line: 545, baseType: !94, size: 32, offset: 5120)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1756, file: !520, line: 548, baseType: !94, size: 32, offset: 5152)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1756, file: !520, line: 551, baseType: !139, size: 16, offset: 5184)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1756, file: !520, line: 551, baseType: !139, size: 16, offset: 5200)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1756, file: !520, line: 551, baseType: !139, size: 16, offset: 5216)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1756, file: !520, line: 551, baseType: !139, size: 16, offset: 5232)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1756, file: !520, line: 552, baseType: !139, size: 16, offset: 5248)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1756, file: !520, line: 552, baseType: !139, size: 16, offset: 5264)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1756, file: !520, line: 553, baseType: !94, size: 32, offset: 5280)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1756, file: !520, line: 553, baseType: !94, size: 32, offset: 5312)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1756, file: !520, line: 554, baseType: !139, size: 16, offset: 5344)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1756, file: !520, line: 554, baseType: !139, size: 16, offset: 5360)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1756, file: !520, line: 555, baseType: !94, size: 32, offset: 5376)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1756, file: !520, line: 555, baseType: !94, size: 32, offset: 5408)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1756, file: !520, line: 558, baseType: !125, size: 8192, offset: 5440)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1756, file: !520, line: 561, baseType: !92, size: 32, offset: 13632)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1756, file: !520, line: 562, baseType: !139, size: 16, offset: 13664)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1756, file: !520, line: 562, baseType: !139, size: 16, offset: 13680)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1756, file: !520, line: 565, baseType: !1953, size: 6144, offset: 13696)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 6144, elements: !1954)
!1954 = !{!1955}
!1955 = !DISubrange(count: 768)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1756, file: !520, line: 568, baseType: !286, size: 128, offset: 19840)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1756, file: !520, line: 569, baseType: !286, size: 128, offset: 19968)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1756, file: !520, line: 572, baseType: !126, size: 8, offset: 20096)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1756, file: !520, line: 573, baseType: !126, size: 8, offset: 20104)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1756, file: !520, line: 574, baseType: !126, size: 8, offset: 20112)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1756, file: !520, line: 575, baseType: !1605, size: 40, offset: 20120)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1756, file: !520, line: 578, baseType: !92, size: 32, offset: 20160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1756, file: !520, line: 579, baseType: !139, size: 16, offset: 20192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1756, file: !520, line: 580, baseType: !139, size: 16, offset: 20208)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1756, file: !520, line: 581, baseType: !94, size: 32, offset: 20224)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1756, file: !520, line: 582, baseType: !94, size: 32, offset: 20256)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1756, file: !520, line: 585, baseType: !139, size: 16, offset: 20288)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1756, file: !520, line: 585, baseType: !139, size: 16, offset: 20304)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1756, file: !520, line: 586, baseType: !94, size: 32, offset: 20320)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1756, file: !520, line: 589, baseType: !139, size: 16, offset: 20352)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1756, file: !520, line: 589, baseType: !139, size: 16, offset: 20368)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1756, file: !520, line: 590, baseType: !92, size: 32, offset: 20384)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1756, file: !520, line: 593, baseType: !139, size: 16, offset: 20416)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1756, file: !520, line: 593, baseType: !139, size: 16, offset: 20432)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1756, file: !520, line: 594, baseType: !139, size: 16, offset: 20448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1756, file: !520, line: 594, baseType: !139, size: 16, offset: 20464)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1756, file: !520, line: 595, baseType: !94, size: 32, offset: 20480)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1756, file: !520, line: 596, baseType: !94, size: 32, offset: 20512)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1756, file: !520, line: 597, baseType: !1980, size: 64, offset: 20544)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1982, line: 44, flags: DIFlagFwdDecl)
!1982 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1756, file: !520, line: 600, baseType: !92, size: 32, offset: 20608)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1756, file: !520, line: 601, baseType: !94, size: 32, offset: 20640)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1756, file: !520, line: 604, baseType: !1986, size: 256, offset: 20672)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 256, elements: !888)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1756, file: !520, line: 607, baseType: !1988, size: 10880, offset: 20928)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !520, line: 364, size: 10880, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1988, file: !520, line: 365, baseType: !1759, size: 1984)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1988, file: !520, line: 367, baseType: !125, size: 8192, offset: 1984)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1988, file: !520, line: 369, baseType: !139, size: 16, offset: 10176)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1988, file: !520, line: 369, baseType: !139, size: 16, offset: 10192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1988, file: !520, line: 370, baseType: !139, size: 16, offset: 10208)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1988, file: !520, line: 370, baseType: !139, size: 16, offset: 10224)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1988, file: !520, line: 372, baseType: !94, size: 32, offset: 10240)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1988, file: !520, line: 373, baseType: !94, size: 32, offset: 10272)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1988, file: !520, line: 375, baseType: !1672, size: 24, offset: 10304)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1988, file: !520, line: 376, baseType: !126, size: 8, offset: 10328)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1988, file: !520, line: 378, baseType: !126, size: 8, offset: 10336)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1988, file: !520, line: 379, baseType: !1672, size: 24, offset: 10344)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1988, file: !520, line: 381, baseType: !155, size: 512, offset: 10368)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1756, file: !520, line: 609, baseType: !92, size: 32, offset: 31808)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1756, file: !520, line: 610, baseType: !92, size: 32, offset: 31840)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !519, file: !520, line: 1252, baseType: !2006, size: 256, offset: 34112)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !520, line: 158, size: 256, elements: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2006, file: !520, line: 159, baseType: !92, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2006, file: !520, line: 160, baseType: !94, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2006, file: !520, line: 161, baseType: !94, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2006, file: !520, line: 162, baseType: !94, size: 32, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2006, file: !520, line: 163, baseType: !92, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2006, file: !520, line: 164, baseType: !139, size: 16, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2006, file: !520, line: 165, baseType: !139, size: 16, offset: 176)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2006, file: !520, line: 166, baseType: !94, size: 32, offset: 192)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2006, file: !520, line: 167, baseType: !94, size: 32, offset: 224)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !519, file: !520, line: 1254, baseType: !165, size: 128, offset: 34368)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !519, file: !520, line: 1255, baseType: !165, size: 128, offset: 34496)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !519, file: !520, line: 1257, baseType: !93, size: 64, offset: 34624)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !519, file: !520, line: 1258, baseType: !93, size: 64, offset: 34688)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !519, file: !520, line: 1259, baseType: !93, size: 64, offset: 34752)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !519, file: !520, line: 1260, baseType: !93, size: 64, offset: 34816)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !519, file: !520, line: 1262, baseType: !93, size: 64, offset: 34880)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !519, file: !520, line: 1265, baseType: !2025, size: 64, offset: 34944)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !520, line: 1265, flags: DIFlagFwdDecl)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !519, file: !520, line: 1266, baseType: !139, size: 16, offset: 35008)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !519, file: !520, line: 1267, baseType: !139, size: 16, offset: 35024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !519, file: !520, line: 1270, baseType: !92, size: 32, offset: 35040)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !519, file: !520, line: 1271, baseType: !165, size: 128, offset: 35072)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !519, file: !520, line: 1274, baseType: !2032, size: 128, offset: 35200)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !520, line: 650, size: 128, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2032, file: !520, line: 651, baseType: !376, size: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2032, file: !520, line: 652, baseType: !126, size: 8, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2032, file: !520, line: 652, baseType: !126, size: 8, offset: 104)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2032, file: !520, line: 652, baseType: !126, size: 8, offset: 112)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2032, file: !520, line: 652, baseType: !126, size: 8, offset: 120)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !519, file: !520, line: 1275, baseType: !2040, size: 1472, offset: 35328)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !520, line: 676, size: 1472, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2063, !2064, !2065, !2066, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2040, file: !520, line: 679, baseType: !2032, size: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2040, file: !520, line: 680, baseType: !139, size: 16, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2040, file: !520, line: 680, baseType: !139, size: 16, offset: 144)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2040, file: !520, line: 680, baseType: !139, size: 16, offset: 160)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2040, file: !520, line: 680, baseType: !139, size: 16, offset: 176)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2040, file: !520, line: 681, baseType: !139, size: 16, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2040, file: !520, line: 681, baseType: !139, size: 16, offset: 208)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2040, file: !520, line: 681, baseType: !139, size: 16, offset: 224)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2040, file: !520, line: 681, baseType: !139, size: 16, offset: 240)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2040, file: !520, line: 682, baseType: !139, size: 16, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2040, file: !520, line: 682, baseType: !379, size: 48, offset: 272)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2040, file: !520, line: 685, baseType: !2054, size: 192, offset: 320)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !520, line: 633, size: 192, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2054, file: !520, line: 634, baseType: !139, size: 16)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2054, file: !520, line: 634, baseType: !139, size: 16, offset: 16)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2054, file: !520, line: 635, baseType: !139, size: 16, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2054, file: !520, line: 635, baseType: !139, size: 16, offset: 48)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2054, file: !520, line: 636, baseType: !94, size: 32, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2054, file: !520, line: 636, baseType: !94, size: 32, offset: 96)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2054, file: !520, line: 637, baseType: !1980, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2040, file: !520, line: 686, baseType: !139, size: 16, offset: 512)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2040, file: !520, line: 686, baseType: !139, size: 16, offset: 528)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2040, file: !520, line: 687, baseType: !94, size: 32, offset: 544)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2040, file: !520, line: 688, baseType: !2067, size: 448, offset: 576)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !520, line: 674, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !520, line: 659, size: 448, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2068, file: !520, line: 660, baseType: !94, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2068, file: !520, line: 661, baseType: !94, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2068, file: !520, line: 662, baseType: !94, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2068, file: !520, line: 663, baseType: !94, size: 32, offset: 96)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2068, file: !520, line: 664, baseType: !94, size: 32, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2068, file: !520, line: 665, baseType: !94, size: 32, offset: 160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2068, file: !520, line: 666, baseType: !94, size: 32, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2068, file: !520, line: 667, baseType: !94, size: 32, offset: 224)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2068, file: !520, line: 668, baseType: !94, size: 32, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2068, file: !520, line: 669, baseType: !94, size: 32, offset: 288)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2068, file: !520, line: 670, baseType: !92, size: 32, offset: 320)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2068, file: !520, line: 671, baseType: !94, size: 32, offset: 352)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2068, file: !520, line: 672, baseType: !94, size: 32, offset: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2068, file: !520, line: 673, baseType: !139, size: 16, offset: 416)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2068, file: !520, line: 673, baseType: !139, size: 16, offset: 432)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2040, file: !520, line: 692, baseType: !94, size: 32, offset: 1024)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2040, file: !520, line: 697, baseType: !94, size: 32, offset: 1056)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2040, file: !520, line: 703, baseType: !92, size: 32, offset: 1088)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2040, file: !520, line: 704, baseType: !139, size: 16, offset: 1120)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2040, file: !520, line: 704, baseType: !139, size: 16, offset: 1136)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2040, file: !520, line: 705, baseType: !139, size: 16, offset: 1152)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2040, file: !520, line: 706, baseType: !139, size: 16, offset: 1168)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2040, file: !520, line: 707, baseType: !139, size: 16, offset: 1184)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2040, file: !520, line: 708, baseType: !139, size: 16, offset: 1200)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2040, file: !520, line: 709, baseType: !139, size: 16, offset: 1216)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2040, file: !520, line: 709, baseType: !139, size: 16, offset: 1232)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2040, file: !520, line: 709, baseType: !139, size: 16, offset: 1248)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2040, file: !520, line: 709, baseType: !139, size: 16, offset: 1264)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2040, file: !520, line: 710, baseType: !139, size: 16, offset: 1280)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2040, file: !520, line: 711, baseType: !139, size: 16, offset: 1296)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2040, file: !520, line: 712, baseType: !94, size: 32, offset: 1312)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2040, file: !520, line: 713, baseType: !94, size: 32, offset: 1344)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2040, file: !520, line: 713, baseType: !94, size: 32, offset: 1376)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2040, file: !520, line: 713, baseType: !94, size: 32, offset: 1408)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2040, file: !520, line: 713, baseType: !94, size: 32, offset: 1440)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !519, file: !520, line: 1278, baseType: !2106, size: 64, offset: 36800)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !520, line: 1197, size: 64, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2106, file: !520, line: 1199, baseType: !94, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2106, file: !520, line: 1200, baseType: !126, size: 8, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2106, file: !520, line: 1201, baseType: !126, size: 8, offset: 40)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2106, file: !520, line: 1202, baseType: !139, size: 16, offset: 48)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !519, file: !520, line: 1281, baseType: !604, size: 64, offset: 36864)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !519, file: !520, line: 1284, baseType: !2114, size: 192, offset: 36928)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !520, line: 1208, size: 192, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2119}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2114, file: !520, line: 1209, baseType: !376, size: 96)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2114, file: !520, line: 1210, baseType: !92, size: 32, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2114, file: !520, line: 1210, baseType: !92, size: 32, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2114, file: !520, line: 1210, baseType: !92, size: 32, offset: 160)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !519, file: !520, line: 1287, baseType: !2121, size: 64, offset: 37120)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !520, line: 62, flags: DIFlagFwdDecl)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !519, file: !520, line: 1289, baseType: !1476, size: 64, offset: 37184)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !519, file: !520, line: 1290, baseType: !1476, size: 64, offset: 37248)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !519, file: !520, line: 1293, baseType: !1777, size: 1280, offset: 37312)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !519, file: !520, line: 1294, baseType: !1789, size: 512, offset: 38592)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !519, file: !520, line: 1295, baseType: !292, size: 512, offset: 39104)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !519, file: !520, line: 1298, baseType: !2129, size: 64, offset: 39616)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !520, line: 1298, flags: DIFlagFwdDecl)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !507, file: !39, line: 109, baseType: !500, size: 64, offset: 832)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !503, file: !39, line: 571, baseType: !372, size: 64, offset: 896)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "xnew", scope: !503, file: !39, line: 572, baseType: !372, size: 64, offset: 960)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !503, file: !39, line: 573, baseType: !372, size: 64, offset: 1024)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "current_xnew", scope: !503, file: !39, line: 574, baseType: !372, size: 64, offset: 1088)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "current_x", scope: !503, file: !39, line: 575, baseType: !372, size: 64, offset: 1152)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "current_v", scope: !503, file: !39, line: 576, baseType: !372, size: 64, offset: 1216)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "mfaces", scope: !503, file: !39, line: 578, baseType: !335, size: 64, offset: 1280)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !503, file: !39, line: 580, baseType: !6, size: 32, offset: 1344)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "numfaces", scope: !503, file: !39, line: 581, baseType: !6, size: 32, offset: 1376)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "time_x", scope: !503, file: !39, line: 582, baseType: !94, size: 32, offset: 1408)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "time_xnew", scope: !503, file: !39, line: 582, baseType: !94, size: 32, offset: 1440)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !503, file: !39, line: 583, baseType: !2144, size: 64, offset: 1472)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !39, line: 583, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "SB_thread_context", file: !3, line: 143, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SB_thread_context", file: !3, line: 130, size: 512, elements: !2149)
!2149 = !{!2150, !2153, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2148, file: !3, line: 131, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !520, line: 1299, baseType: !519)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2148, file: !3, line: 132, baseType: !2154, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !13, line: 295, baseType: !526)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "forcetime", scope: !2148, file: !3, line: 133, baseType: !94, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "timenow", scope: !2148, file: !3, line: 134, baseType: !94, size: 32, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ifirst", scope: !2148, file: !3, line: 135, baseType: !92, size: 32, offset: 192)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ilast", scope: !2148, file: !3, line: 136, baseType: !92, size: 32, offset: 224)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "do_effector", scope: !2148, file: !3, line: 137, baseType: !1485, size: 64, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "do_deflector", scope: !2148, file: !3, line: 138, baseType: !92, size: 32, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfactor", scope: !2148, file: !3, line: 139, baseType: !94, size: 32, offset: 352)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "windfactor", scope: !2148, file: !3, line: 140, baseType: !94, size: 32, offset: 384)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2148, file: !3, line: 141, baseType: !92, size: 32, offset: 416)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2148, file: !3, line: 142, baseType: !92, size: 32, offset: 448)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !96, line: 94, size: 192, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2167, file: !96, line: 94, baseType: !93, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2167, file: !96, line: 94, baseType: !93, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2167, file: !96, line: 94, baseType: !93, size: 64, offset: 128)
!2172 = !{!2173, !0, !2176}
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression(DW_OP_constu, 190561, DW_OP_stack_value))
!2174 = distinct !DIGlobalVariable(name: "CCD_SAVETY", scope: !2, file: !3, line: 270, type: !2175, isLocal: true, isDefinition: true)
!2175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !92)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "SoftHeunTol", scope: !2, file: !3, line: 170, type: !94, isLocal: true, isDefinition: true)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!92}
!2181 = !{i32 7, !"Dwarf Version", i32 4}
!2182 = !{i32 2, !"Debug Info Version", i32 3}
!2183 = !{i32 1, !"wchar_size", i32 4}
!2184 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2185 = distinct !DISubprogram(name: "sbNew", scope: !3, file: !3, line: 3681, type: !2186, scopeLine: 3682, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!1034, !2151}
!2188 = !{}
!2189 = !DILocalVariable(name: "scene", arg: 1, scope: !2185, file: !3, line: 3681, type: !2151)
!2190 = !DILocation(line: 3681, column: 24, scope: !2185)
!2191 = !DILocalVariable(name: "sb", scope: !2185, file: !3, line: 3683, type: !2192)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftBody", file: !707, line: 349, baseType: !1035)
!2194 = !DILocation(line: 3683, column: 12, scope: !2185)
!2195 = !DILocation(line: 3685, column: 6, scope: !2185)
!2196 = !DILocation(line: 3685, column: 4, scope: !2185)
!2197 = !DILocation(line: 3687, column: 2, scope: !2185)
!2198 = !DILocation(line: 3687, column: 6, scope: !2185)
!2199 = !DILocation(line: 3687, column: 16, scope: !2185)
!2200 = !DILocation(line: 3688, column: 2, scope: !2185)
!2201 = !DILocation(line: 3688, column: 6, scope: !2185)
!2202 = !DILocation(line: 3688, column: 14, scope: !2185)
!2203 = !DILocation(line: 3689, column: 2, scope: !2185)
!2204 = !DILocation(line: 3689, column: 6, scope: !2185)
!2205 = !DILocation(line: 3689, column: 10, scope: !2185)
!2206 = !DILocation(line: 3690, column: 2, scope: !2185)
!2207 = !DILocation(line: 3690, column: 6, scope: !2185)
!2208 = !DILocation(line: 3690, column: 19, scope: !2185)
!2209 = !DILocation(line: 3691, column: 2, scope: !2185)
!2210 = !DILocation(line: 3691, column: 6, scope: !2185)
!2211 = !DILocation(line: 3691, column: 13, scope: !2185)
!2212 = !DILocation(line: 3693, column: 2, scope: !2185)
!2213 = !DILocation(line: 3693, column: 6, scope: !2185)
!2214 = !DILocation(line: 3693, column: 16, scope: !2185)
!2215 = !DILocation(line: 3694, column: 2, scope: !2185)
!2216 = !DILocation(line: 3694, column: 6, scope: !2185)
!2217 = !DILocation(line: 3694, column: 15, scope: !2185)
!2218 = !DILocation(line: 3695, column: 2, scope: !2185)
!2219 = !DILocation(line: 3695, column: 6, scope: !2185)
!2220 = !DILocation(line: 3695, column: 13, scope: !2185)
!2221 = !DILocation(line: 3696, column: 2, scope: !2185)
!2222 = !DILocation(line: 3696, column: 6, scope: !2185)
!2223 = !DILocation(line: 3696, column: 13, scope: !2185)
!2224 = !DILocation(line: 3697, column: 2, scope: !2185)
!2225 = !DILocation(line: 3697, column: 6, scope: !2185)
!2226 = !DILocation(line: 3697, column: 13, scope: !2185)
!2227 = !DILocation(line: 3699, column: 2, scope: !2185)
!2228 = !DILocation(line: 3699, column: 6, scope: !2185)
!2229 = !DILocation(line: 3699, column: 14, scope: !2185)
!2230 = !DILocation(line: 3700, column: 2, scope: !2185)
!2231 = !DILocation(line: 3700, column: 6, scope: !2185)
!2232 = !DILocation(line: 3700, column: 13, scope: !2185)
!2233 = !DILocation(line: 3702, column: 2, scope: !2185)
!2234 = !DILocation(line: 3702, column: 6, scope: !2185)
!2235 = !DILocation(line: 3702, column: 13, scope: !2185)
!2236 = !DILocation(line: 3704, column: 2, scope: !2185)
!2237 = !DILocation(line: 3704, column: 6, scope: !2185)
!2238 = !DILocation(line: 3704, column: 14, scope: !2185)
!2239 = !DILocation(line: 3705, column: 12, scope: !2185)
!2240 = !DILocation(line: 3705, column: 19, scope: !2185)
!2241 = !DILocation(line: 3705, column: 21, scope: !2185)
!2242 = !DILocation(line: 3705, column: 2, scope: !2185)
!2243 = !DILocation(line: 3705, column: 6, scope: !2185)
!2244 = !DILocation(line: 3705, column: 10, scope: !2185)
!2245 = !DILocation(line: 3706, column: 12, scope: !2185)
!2246 = !DILocation(line: 3706, column: 19, scope: !2185)
!2247 = !DILocation(line: 3706, column: 21, scope: !2185)
!2248 = !DILocation(line: 3706, column: 2, scope: !2185)
!2249 = !DILocation(line: 3706, column: 6, scope: !2185)
!2250 = !DILocation(line: 3706, column: 10, scope: !2185)
!2251 = !DILocation(line: 3708, column: 2, scope: !2185)
!2252 = !DILocation(line: 3708, column: 6, scope: !2185)
!2253 = !DILocation(line: 3708, column: 15, scope: !2185)
!2254 = !DILocation(line: 3709, column: 2, scope: !2185)
!2255 = !DILocation(line: 3709, column: 6, scope: !2185)
!2256 = !DILocation(line: 3709, column: 15, scope: !2185)
!2257 = !DILocation(line: 3710, column: 2, scope: !2185)
!2258 = !DILocation(line: 3710, column: 6, scope: !2185)
!2259 = !DILocation(line: 3710, column: 15, scope: !2185)
!2260 = !DILocation(line: 3711, column: 2, scope: !2185)
!2261 = !DILocation(line: 3711, column: 6, scope: !2185)
!2262 = !DILocation(line: 3711, column: 15, scope: !2185)
!2263 = !DILocation(line: 3714, column: 2, scope: !2185)
!2264 = !DILocation(line: 3714, column: 6, scope: !2185)
!2265 = !DILocation(line: 3714, column: 15, scope: !2185)
!2266 = !DILocation(line: 3715, column: 2, scope: !2185)
!2267 = !DILocation(line: 3715, column: 6, scope: !2185)
!2268 = !DILocation(line: 3715, column: 15, scope: !2185)
!2269 = !DILocation(line: 3717, column: 2, scope: !2185)
!2270 = !DILocation(line: 3717, column: 6, scope: !2185)
!2271 = !DILocation(line: 3717, column: 12, scope: !2185)
!2272 = !DILocation(line: 3718, column: 17, scope: !2185)
!2273 = !DILocation(line: 3718, column: 2, scope: !2185)
!2274 = !DILocation(line: 3720, column: 2, scope: !2185)
!2275 = !DILocation(line: 3720, column: 6, scope: !2185)
!2276 = !DILocation(line: 3720, column: 17, scope: !2185)
!2277 = !DILocation(line: 3721, column: 2, scope: !2185)
!2278 = !DILocation(line: 3721, column: 6, scope: !2185)
!2279 = !DILocation(line: 3721, column: 18, scope: !2185)
!2280 = !DILocation(line: 3723, column: 36, scope: !2185)
!2281 = !DILocation(line: 3723, column: 40, scope: !2185)
!2282 = !DILocation(line: 3723, column: 19, scope: !2185)
!2283 = !DILocation(line: 3723, column: 2, scope: !2185)
!2284 = !DILocation(line: 3723, column: 6, scope: !2185)
!2285 = !DILocation(line: 3723, column: 17, scope: !2185)
!2286 = !DILocation(line: 3725, column: 7, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 3725, column: 6)
!2288 = !DILocation(line: 3725, column: 11, scope: !2287)
!2289 = !DILocation(line: 3725, column: 6, scope: !2185)
!2290 = !DILocation(line: 3726, column: 26, scope: !2287)
!2291 = !DILocation(line: 3726, column: 3, scope: !2287)
!2292 = !DILocation(line: 3726, column: 7, scope: !2287)
!2293 = !DILocation(line: 3726, column: 24, scope: !2287)
!2294 = !DILocation(line: 3728, column: 2, scope: !2185)
!2295 = !DILocation(line: 3728, column: 6, scope: !2185)
!2296 = !DILocation(line: 3728, column: 16, scope: !2185)
!2297 = !DILocation(line: 3730, column: 9, scope: !2185)
!2298 = !DILocation(line: 3730, column: 2, scope: !2185)
!2299 = distinct !DISubprogram(name: "sb_new_scratch", scope: !3, file: !3, line: 3664, type: !2300, scopeLine: 3665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !2192}
!2302 = !DILocalVariable(name: "sb", arg: 1, scope: !2299, file: !3, line: 3664, type: !2192)
!2303 = !DILocation(line: 3664, column: 38, scope: !2299)
!2304 = !DILocation(line: 3666, column: 7, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 3666, column: 6)
!2306 = !DILocation(line: 3666, column: 6, scope: !2299)
!2307 = !DILocation(line: 3666, column: 11, scope: !2305)
!2308 = !DILocation(line: 3667, column: 16, scope: !2299)
!2309 = !DILocation(line: 3667, column: 2, scope: !2299)
!2310 = !DILocation(line: 3667, column: 6, scope: !2299)
!2311 = !DILocation(line: 3667, column: 14, scope: !2299)
!2312 = !DILocation(line: 3668, column: 30, scope: !2299)
!2313 = !DILocation(line: 3668, column: 2, scope: !2299)
!2314 = !DILocation(line: 3668, column: 6, scope: !2299)
!2315 = !DILocation(line: 3668, column: 15, scope: !2299)
!2316 = !DILocation(line: 3668, column: 28, scope: !2299)
!2317 = !DILocation(line: 3669, column: 2, scope: !2299)
!2318 = !DILocation(line: 3669, column: 6, scope: !2299)
!2319 = !DILocation(line: 3669, column: 15, scope: !2299)
!2320 = !DILocation(line: 3669, column: 24, scope: !2299)
!2321 = !DILocation(line: 3670, column: 2, scope: !2299)
!2322 = !DILocation(line: 3670, column: 6, scope: !2299)
!2323 = !DILocation(line: 3670, column: 15, scope: !2299)
!2324 = !DILocation(line: 3670, column: 23, scope: !2299)
!2325 = !DILocation(line: 3671, column: 50, scope: !2299)
!2326 = !DILocation(line: 3671, column: 54, scope: !2299)
!2327 = !DILocation(line: 3671, column: 63, scope: !2299)
!2328 = !DILocation(line: 3671, column: 74, scope: !2299)
!2329 = !DILocation(line: 3671, column: 26, scope: !2299)
!2330 = !DILocation(line: 3671, column: 30, scope: !2299)
!2331 = !DILocation(line: 3671, column: 39, scope: !2299)
!2332 = !DILocation(line: 3671, column: 49, scope: !2299)
!2333 = !DILocation(line: 3671, column: 2, scope: !2299)
!2334 = !DILocation(line: 3671, column: 6, scope: !2299)
!2335 = !DILocation(line: 3671, column: 15, scope: !2299)
!2336 = !DILocation(line: 3671, column: 25, scope: !2299)
!2337 = !DILocation(line: 3672, column: 50, scope: !2299)
!2338 = !DILocation(line: 3672, column: 54, scope: !2299)
!2339 = !DILocation(line: 3672, column: 63, scope: !2299)
!2340 = !DILocation(line: 3672, column: 74, scope: !2299)
!2341 = !DILocation(line: 3672, column: 26, scope: !2299)
!2342 = !DILocation(line: 3672, column: 30, scope: !2299)
!2343 = !DILocation(line: 3672, column: 39, scope: !2299)
!2344 = !DILocation(line: 3672, column: 49, scope: !2299)
!2345 = !DILocation(line: 3672, column: 2, scope: !2299)
!2346 = !DILocation(line: 3672, column: 6, scope: !2299)
!2347 = !DILocation(line: 3672, column: 15, scope: !2299)
!2348 = !DILocation(line: 3672, column: 25, scope: !2299)
!2349 = !DILocation(line: 3673, column: 2, scope: !2299)
!2350 = !DILocation(line: 3673, column: 6, scope: !2299)
!2351 = !DILocation(line: 3673, column: 15, scope: !2299)
!2352 = !DILocation(line: 3673, column: 19, scope: !2299)
!2353 = !DILocation(line: 3673, column: 25, scope: !2299)
!2354 = !DILocation(line: 3675, column: 1, scope: !2299)
!2355 = distinct !DISubprogram(name: "sbFree", scope: !3, file: !3, line: 3734, type: !2300, scopeLine: 3735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2356 = !DILocalVariable(name: "sb", arg: 1, scope: !2355, file: !3, line: 3734, type: !2192)
!2357 = !DILocation(line: 3734, column: 23, scope: !2355)
!2358 = !DILocation(line: 3736, column: 23, scope: !2355)
!2359 = !DILocation(line: 3736, column: 2, scope: !2355)
!2360 = !DILocation(line: 3737, column: 25, scope: !2355)
!2361 = !DILocation(line: 3737, column: 29, scope: !2355)
!2362 = !DILocation(line: 3737, column: 2, scope: !2355)
!2363 = !DILocation(line: 3738, column: 2, scope: !2355)
!2364 = !DILocation(line: 3738, column: 6, scope: !2355)
!2365 = !DILocation(line: 3738, column: 17, scope: !2355)
!2366 = !DILocation(line: 3739, column: 6, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 3739, column: 6)
!2368 = !DILocation(line: 3739, column: 10, scope: !2367)
!2369 = !DILocation(line: 3739, column: 6, scope: !2355)
!2370 = !DILocation(line: 3740, column: 3, scope: !2367)
!2371 = !DILocation(line: 3740, column: 13, scope: !2367)
!2372 = !DILocation(line: 3740, column: 17, scope: !2367)
!2373 = !DILocation(line: 3741, column: 2, scope: !2355)
!2374 = !DILocation(line: 3741, column: 12, scope: !2355)
!2375 = !DILocation(line: 3742, column: 1, scope: !2355)
!2376 = distinct !DISubprogram(name: "free_softbody_intern", scope: !3, file: !3, line: 932, type: !2300, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2377 = !DILocalVariable(name: "sb", arg: 1, scope: !2376, file: !3, line: 932, type: !2192)
!2378 = !DILocation(line: 932, column: 44, scope: !2376)
!2379 = !DILocation(line: 934, column: 6, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 934, column: 6)
!2381 = !DILocation(line: 934, column: 6, scope: !2376)
!2382 = !DILocalVariable(name: "a", scope: !2383, file: !3, line: 935, type: !92)
!2383 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 934, column: 10)
!2384 = !DILocation(line: 935, column: 7, scope: !2383)
!2385 = !DILocalVariable(name: "bp", scope: !2383, file: !3, line: 936, type: !2386)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "BodyPoint", file: !1042, line: 50, baseType: !1041)
!2388 = !DILocation(line: 936, column: 14, scope: !2383)
!2389 = !DILocation(line: 938, column: 7, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 938, column: 7)
!2391 = !DILocation(line: 938, column: 11, scope: !2390)
!2392 = !DILocation(line: 938, column: 7, scope: !2383)
!2393 = !DILocation(line: 939, column: 11, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 939, column: 4)
!2395 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 938, column: 19)
!2396 = !DILocation(line: 939, column: 15, scope: !2394)
!2397 = !DILocation(line: 939, column: 10, scope: !2394)
!2398 = !DILocation(line: 939, column: 29, scope: !2394)
!2399 = !DILocation(line: 939, column: 33, scope: !2394)
!2400 = !DILocation(line: 939, column: 27, scope: !2394)
!2401 = !DILocation(line: 939, column: 9, scope: !2394)
!2402 = !DILocation(line: 939, column: 41, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 939, column: 4)
!2404 = !DILocation(line: 939, column: 42, scope: !2403)
!2405 = !DILocation(line: 939, column: 4, scope: !2394)
!2406 = !DILocation(line: 941, column: 9, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 941, column: 9)
!2408 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 939, column: 57)
!2409 = !DILocation(line: 941, column: 13, scope: !2407)
!2410 = !DILocation(line: 941, column: 21, scope: !2407)
!2411 = !DILocation(line: 941, column: 9, scope: !2408)
!2412 = !DILocation(line: 942, column: 6, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 941, column: 30)
!2414 = !DILocation(line: 942, column: 16, scope: !2413)
!2415 = !DILocation(line: 942, column: 20, scope: !2413)
!2416 = !DILocation(line: 943, column: 5, scope: !2413)
!2417 = !DILocation(line: 944, column: 4, scope: !2408)
!2418 = !DILocation(line: 939, column: 47, scope: !2403)
!2419 = !DILocation(line: 939, column: 53, scope: !2403)
!2420 = !DILocation(line: 939, column: 4, scope: !2403)
!2421 = distinct !{!2421, !2405, !2422}
!2422 = !DILocation(line: 944, column: 4, scope: !2394)
!2423 = !DILocation(line: 945, column: 4, scope: !2395)
!2424 = !DILocation(line: 945, column: 14, scope: !2395)
!2425 = !DILocation(line: 945, column: 18, scope: !2395)
!2426 = !DILocation(line: 946, column: 3, scope: !2395)
!2427 = !DILocation(line: 948, column: 7, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 948, column: 7)
!2429 = !DILocation(line: 948, column: 11, scope: !2428)
!2430 = !DILocation(line: 948, column: 7, scope: !2383)
!2431 = !DILocation(line: 948, column: 20, scope: !2428)
!2432 = !DILocation(line: 948, column: 30, scope: !2428)
!2433 = !DILocation(line: 948, column: 34, scope: !2428)
!2434 = !DILocation(line: 950, column: 17, scope: !2383)
!2435 = !DILocation(line: 950, column: 21, scope: !2383)
!2436 = !DILocation(line: 950, column: 30, scope: !2383)
!2437 = !DILocation(line: 950, column: 3, scope: !2383)
!2438 = !DILocation(line: 950, column: 7, scope: !2383)
!2439 = !DILocation(line: 950, column: 15, scope: !2383)
!2440 = !DILocation(line: 951, column: 3, scope: !2383)
!2441 = !DILocation(line: 951, column: 7, scope: !2383)
!2442 = !DILocation(line: 951, column: 13, scope: !2383)
!2443 = !DILocation(line: 952, column: 3, scope: !2383)
!2444 = !DILocation(line: 952, column: 7, scope: !2383)
!2445 = !DILocation(line: 952, column: 14, scope: !2383)
!2446 = !DILocation(line: 954, column: 16, scope: !2383)
!2447 = !DILocation(line: 954, column: 3, scope: !2383)
!2448 = !DILocation(line: 955, column: 23, scope: !2383)
!2449 = !DILocation(line: 955, column: 3, scope: !2383)
!2450 = !DILocation(line: 956, column: 2, scope: !2383)
!2451 = !DILocation(line: 957, column: 1, scope: !2376)
!2452 = distinct !DISubprogram(name: "sbFreeSimulation", scope: !3, file: !3, line: 3744, type: !2300, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2453 = !DILocalVariable(name: "sb", arg: 1, scope: !2452, file: !3, line: 3744, type: !2192)
!2454 = !DILocation(line: 3744, column: 33, scope: !2452)
!2455 = !DILocation(line: 3746, column: 23, scope: !2452)
!2456 = !DILocation(line: 3746, column: 2, scope: !2452)
!2457 = !DILocation(line: 3747, column: 1, scope: !2452)
!2458 = distinct !DISubprogram(name: "sbObjectToSoftbody", scope: !3, file: !3, line: 3750, type: !2459, scopeLine: 3751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{null, !2154}
!2461 = !DILocalVariable(name: "ob", arg: 1, scope: !2458, file: !3, line: 3750, type: !2154)
!2462 = !DILocation(line: 3750, column: 33, scope: !2458)
!2463 = !DILocation(line: 3754, column: 23, scope: !2458)
!2464 = !DILocation(line: 3754, column: 27, scope: !2458)
!2465 = !DILocation(line: 3754, column: 2, scope: !2458)
!2466 = !DILocation(line: 3755, column: 1, scope: !2458)
!2467 = distinct !DISubprogram(name: "sbSetInterruptCallBack", scope: !3, file: !3, line: 3771, type: !2468, scopeLine: 3772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{null, !2178}
!2470 = !DILocalVariable(name: "f", arg: 1, scope: !2467, file: !3, line: 3771, type: !2178)
!2471 = !DILocation(line: 3771, column: 35, scope: !2467)
!2472 = !DILocation(line: 3773, column: 30, scope: !2467)
!2473 = !DILocation(line: 3773, column: 28, scope: !2467)
!2474 = !DILocation(line: 3774, column: 1, scope: !2467)
!2475 = distinct !DISubprogram(name: "SB_estimate_transform", scope: !3, file: !3, line: 3813, type: !2476, scopeLine: 3814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{null, !2154, !937, !2478, !2478}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!2479 = !DILocalVariable(name: "ob", arg: 1, scope: !2475, file: !3, line: 3813, type: !2154)
!2480 = !DILocation(line: 3813, column: 36, scope: !2475)
!2481 = !DILocalVariable(name: "lloc", arg: 2, scope: !2475, file: !3, line: 3813, type: !937)
!2482 = !DILocation(line: 3813, column: 46, scope: !2475)
!2483 = !DILocalVariable(name: "lrot", arg: 3, scope: !2475, file: !3, line: 3813, type: !2478)
!2484 = !DILocation(line: 3813, column: 61, scope: !2475)
!2485 = !DILocalVariable(name: "lscale", arg: 4, scope: !2475, file: !3, line: 3813, type: !2478)
!2486 = !DILocation(line: 3813, column: 79, scope: !2475)
!2487 = !DILocalVariable(name: "bp", scope: !2475, file: !3, line: 3815, type: !2386)
!2488 = !DILocation(line: 3815, column: 13, scope: !2475)
!2489 = !DILocalVariable(name: "rp", scope: !2475, file: !3, line: 3816, type: !1155)
!2490 = !DILocation(line: 3816, column: 17, scope: !2475)
!2491 = !DILocalVariable(name: "sb", scope: !2475, file: !3, line: 3817, type: !2192)
!2492 = !DILocation(line: 3817, column: 12, scope: !2475)
!2493 = !DILocalVariable(name: "opos", scope: !2475, file: !3, line: 3818, type: !2478)
!2494 = !DILocation(line: 3818, column: 10, scope: !2475)
!2495 = !DILocalVariable(name: "rpos", scope: !2475, file: !3, line: 3819, type: !2478)
!2496 = !DILocation(line: 3819, column: 10, scope: !2475)
!2497 = !DILocalVariable(name: "com", scope: !2475, file: !3, line: 3820, type: !376)
!2498 = !DILocation(line: 3820, column: 8, scope: !2475)
!2499 = !DILocalVariable(name: "rcom", scope: !2475, file: !3, line: 3820, type: !376)
!2500 = !DILocation(line: 3820, column: 16, scope: !2475)
!2501 = !DILocalVariable(name: "a", scope: !2475, file: !3, line: 3821, type: !92)
!2502 = !DILocation(line: 3821, column: 6, scope: !2475)
!2503 = !DILocation(line: 3823, column: 7, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3823, column: 6)
!2505 = !DILocation(line: 3823, column: 10, scope: !2504)
!2506 = !DILocation(line: 3823, column: 13, scope: !2504)
!2507 = !DILocation(line: 3823, column: 17, scope: !2504)
!2508 = !DILocation(line: 3823, column: 6, scope: !2475)
!2509 = !DILocation(line: 3823, column: 23, scope: !2504)
!2510 = !DILocation(line: 3824, column: 6, scope: !2475)
!2511 = !DILocation(line: 3824, column: 10, scope: !2475)
!2512 = !DILocation(line: 3824, column: 4, scope: !2475)
!2513 = !DILocation(line: 3825, column: 7, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3825, column: 6)
!2515 = !DILocation(line: 3825, column: 10, scope: !2514)
!2516 = !DILocation(line: 3825, column: 14, scope: !2514)
!2517 = !DILocation(line: 3825, column: 18, scope: !2514)
!2518 = !DILocation(line: 3825, column: 6, scope: !2475)
!2519 = !DILocation(line: 3825, column: 26, scope: !2514)
!2520 = !DILocation(line: 3826, column: 8, scope: !2475)
!2521 = !DILocation(line: 3826, column: 21, scope: !2475)
!2522 = !DILocation(line: 3826, column: 25, scope: !2475)
!2523 = !DILocation(line: 3826, column: 34, scope: !2475)
!2524 = !DILocation(line: 3826, column: 20, scope: !2475)
!2525 = !DILocation(line: 3826, column: 36, scope: !2475)
!2526 = !DILocation(line: 3826, column: 6, scope: !2475)
!2527 = !DILocation(line: 3827, column: 8, scope: !2475)
!2528 = !DILocation(line: 3827, column: 21, scope: !2475)
!2529 = !DILocation(line: 3827, column: 25, scope: !2475)
!2530 = !DILocation(line: 3827, column: 34, scope: !2475)
!2531 = !DILocation(line: 3827, column: 20, scope: !2475)
!2532 = !DILocation(line: 3827, column: 36, scope: !2475)
!2533 = !DILocation(line: 3827, column: 6, scope: !2475)
!2534 = !DILocation(line: 3829, column: 8, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3829, column: 2)
!2536 = !DILocation(line: 3829, column: 15, scope: !2535)
!2537 = !DILocation(line: 3829, column: 19, scope: !2535)
!2538 = !DILocation(line: 3829, column: 14, scope: !2535)
!2539 = !DILocation(line: 3829, column: 30, scope: !2535)
!2540 = !DILocation(line: 3829, column: 34, scope: !2535)
!2541 = !DILocation(line: 3829, column: 43, scope: !2535)
!2542 = !DILocation(line: 3829, column: 47, scope: !2535)
!2543 = !DILocation(line: 3829, column: 29, scope: !2535)
!2544 = !DILocation(line: 3829, column: 7, scope: !2535)
!2545 = !DILocation(line: 3829, column: 54, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 3829, column: 2)
!2547 = !DILocation(line: 3829, column: 56, scope: !2546)
!2548 = !DILocation(line: 3829, column: 60, scope: !2546)
!2549 = !DILocation(line: 3829, column: 55, scope: !2546)
!2550 = !DILocation(line: 3829, column: 2, scope: !2535)
!2551 = !DILocation(line: 3830, column: 14, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 3829, column: 87)
!2553 = !DILocation(line: 3830, column: 19, scope: !2552)
!2554 = !DILocation(line: 3830, column: 23, scope: !2552)
!2555 = !DILocation(line: 3830, column: 27, scope: !2552)
!2556 = !DILocation(line: 3830, column: 3, scope: !2552)
!2557 = !DILocation(line: 3831, column: 14, scope: !2552)
!2558 = !DILocation(line: 3831, column: 19, scope: !2552)
!2559 = !DILocation(line: 3831, column: 23, scope: !2552)
!2560 = !DILocation(line: 3831, column: 27, scope: !2552)
!2561 = !DILocation(line: 3831, column: 3, scope: !2552)
!2562 = !DILocation(line: 3832, column: 2, scope: !2552)
!2563 = !DILocation(line: 3829, column: 71, scope: !2546)
!2564 = !DILocation(line: 3829, column: 77, scope: !2546)
!2565 = !DILocation(line: 3829, column: 83, scope: !2546)
!2566 = !DILocation(line: 3829, column: 2, scope: !2546)
!2567 = distinct !{!2567, !2550, !2568}
!2568 = !DILocation(line: 3832, column: 2, scope: !2535)
!2569 = !DILocation(line: 3834, column: 28, scope: !2475)
!2570 = !DILocation(line: 3834, column: 32, scope: !2475)
!2571 = !DILocation(line: 3834, column: 42, scope: !2475)
!2572 = !DILocation(line: 3834, column: 54, scope: !2475)
!2573 = !DILocation(line: 3834, column: 66, scope: !2475)
!2574 = !DILocation(line: 3834, column: 71, scope: !2475)
!2575 = !DILocation(line: 3834, column: 77, scope: !2475)
!2576 = !DILocation(line: 3834, column: 83, scope: !2475)
!2577 = !DILocation(line: 3834, column: 2, scope: !2475)
!2578 = !DILocation(line: 3836, column: 6, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3836, column: 6)
!2580 = !DILocation(line: 3836, column: 6, scope: !2475)
!2581 = !DILocation(line: 3836, column: 23, scope: !2579)
!2582 = !DILocation(line: 3836, column: 29, scope: !2579)
!2583 = !DILocation(line: 3836, column: 12, scope: !2579)
!2584 = !DILocation(line: 3837, column: 13, scope: !2475)
!2585 = !DILocation(line: 3837, column: 17, scope: !2475)
!2586 = !DILocation(line: 3837, column: 23, scope: !2475)
!2587 = !DILocation(line: 3837, column: 2, scope: !2475)
!2588 = !DILocation(line: 3838, column: 6, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3838, column: 6)
!2590 = !DILocation(line: 3838, column: 6, scope: !2475)
!2591 = !DILocation(line: 3838, column: 25, scope: !2589)
!2592 = !DILocation(line: 3838, column: 29, scope: !2589)
!2593 = !DILocation(line: 3838, column: 37, scope: !2589)
!2594 = !DILocation(line: 3838, column: 14, scope: !2589)
!2595 = !DILocation(line: 3839, column: 6, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 3839, column: 6)
!2597 = !DILocation(line: 3839, column: 6, scope: !2475)
!2598 = !DILocation(line: 3839, column: 25, scope: !2596)
!2599 = !DILocation(line: 3839, column: 29, scope: !2596)
!2600 = !DILocation(line: 3839, column: 35, scope: !2596)
!2601 = !DILocation(line: 3839, column: 14, scope: !2596)
!2602 = !DILocation(line: 3842, column: 2, scope: !2475)
!2603 = !DILocation(line: 3842, column: 12, scope: !2475)
!2604 = !DILocation(line: 3843, column: 2, scope: !2475)
!2605 = !DILocation(line: 3843, column: 12, scope: !2475)
!2606 = !DILocation(line: 3844, column: 1, scope: !2475)
!2607 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2608, file: !2608, line: 64, type: !2609, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2608 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2609 = !DISubroutineType(types: !2610)
!2610 = !{null, !937, !2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !94)
!2613 = !DILocalVariable(name: "r", arg: 1, scope: !2607, file: !2608, line: 64, type: !937)
!2614 = !DILocation(line: 64, column: 31, scope: !2607)
!2615 = !DILocalVariable(name: "a", arg: 2, scope: !2607, file: !2608, line: 64, type: !2611)
!2616 = !DILocation(line: 64, column: 49, scope: !2607)
!2617 = !DILocation(line: 66, column: 9, scope: !2607)
!2618 = !DILocation(line: 66, column: 2, scope: !2607)
!2619 = !DILocation(line: 66, column: 7, scope: !2607)
!2620 = !DILocation(line: 67, column: 9, scope: !2607)
!2621 = !DILocation(line: 67, column: 2, scope: !2607)
!2622 = !DILocation(line: 67, column: 7, scope: !2607)
!2623 = !DILocation(line: 68, column: 9, scope: !2607)
!2624 = !DILocation(line: 68, column: 2, scope: !2607)
!2625 = !DILocation(line: 68, column: 7, scope: !2607)
!2626 = !DILocation(line: 69, column: 1, scope: !2607)
!2627 = distinct !DISubprogram(name: "sbObjectStep", scope: !3, file: !3, line: 4042, type: !2628, scopeLine: 4043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !2151, !2154, !94, !2478, !92}
!2630 = !DILocalVariable(name: "scene", arg: 1, scope: !2627, file: !3, line: 4042, type: !2151)
!2631 = !DILocation(line: 4042, column: 26, scope: !2627)
!2632 = !DILocalVariable(name: "ob", arg: 2, scope: !2627, file: !3, line: 4042, type: !2154)
!2633 = !DILocation(line: 4042, column: 41, scope: !2627)
!2634 = !DILocalVariable(name: "cfra", arg: 3, scope: !2627, file: !3, line: 4042, type: !94)
!2635 = !DILocation(line: 4042, column: 51, scope: !2627)
!2636 = !DILocalVariable(name: "vertexCos", arg: 4, scope: !2627, file: !3, line: 4042, type: !2478)
!2637 = !DILocation(line: 4042, column: 65, scope: !2627)
!2638 = !DILocalVariable(name: "numVerts", arg: 5, scope: !2627, file: !3, line: 4042, type: !92)
!2639 = !DILocation(line: 4042, column: 84, scope: !2627)
!2640 = !DILocalVariable(name: "sb", scope: !2627, file: !3, line: 4044, type: !2192)
!2641 = !DILocation(line: 4044, column: 12, scope: !2627)
!2642 = !DILocation(line: 4044, column: 16, scope: !2627)
!2643 = !DILocation(line: 4044, column: 20, scope: !2627)
!2644 = !DILocalVariable(name: "cache", scope: !2627, file: !3, line: 4045, type: !2645)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointCache", file: !707, line: 209, baseType: !1165)
!2647 = !DILocation(line: 4045, column: 14, scope: !2627)
!2648 = !DILocalVariable(name: "pid", scope: !2627, file: !3, line: 4046, type: !2649)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheID", file: !1191, line: 171, baseType: !1233)
!2650 = !DILocation(line: 4046, column: 12, scope: !2627)
!2651 = !DILocalVariable(name: "dtime", scope: !2627, file: !3, line: 4047, type: !94)
!2652 = !DILocation(line: 4047, column: 8, scope: !2627)
!2653 = !DILocalVariable(name: "timescale", scope: !2627, file: !3, line: 4047, type: !94)
!2654 = !DILocation(line: 4047, column: 15, scope: !2627)
!2655 = !DILocalVariable(name: "framedelta", scope: !2627, file: !3, line: 4048, type: !92)
!2656 = !DILocation(line: 4048, column: 6, scope: !2627)
!2657 = !DILocalVariable(name: "framenr", scope: !2627, file: !3, line: 4048, type: !92)
!2658 = !DILocation(line: 4048, column: 18, scope: !2627)
!2659 = !DILocalVariable(name: "startframe", scope: !2627, file: !3, line: 4048, type: !92)
!2660 = !DILocation(line: 4048, column: 27, scope: !2627)
!2661 = !DILocalVariable(name: "endframe", scope: !2627, file: !3, line: 4048, type: !92)
!2662 = !DILocation(line: 4048, column: 39, scope: !2627)
!2663 = !DILocalVariable(name: "cache_result", scope: !2627, file: !3, line: 4049, type: !92)
!2664 = !DILocation(line: 4049, column: 6, scope: !2627)
!2665 = !DILocation(line: 4051, column: 9, scope: !2627)
!2666 = !DILocation(line: 4051, column: 13, scope: !2627)
!2667 = !DILocation(line: 4051, column: 7, scope: !2627)
!2668 = !DILocation(line: 4053, column: 16, scope: !2627)
!2669 = !DILocation(line: 4053, column: 11, scope: !2627)
!2670 = !DILocation(line: 4053, column: 9, scope: !2627)
!2671 = !DILocation(line: 4054, column: 14, scope: !2627)
!2672 = !DILocation(line: 4054, column: 24, scope: !2627)
!2673 = !DILocation(line: 4054, column: 31, scope: !2627)
!2674 = !DILocation(line: 4054, column: 22, scope: !2627)
!2675 = !DILocation(line: 4054, column: 12, scope: !2627)
!2676 = !DILocation(line: 4056, column: 37, scope: !2627)
!2677 = !DILocation(line: 4056, column: 41, scope: !2627)
!2678 = !DILocation(line: 4056, column: 2, scope: !2627)
!2679 = !DILocation(line: 4057, column: 28, scope: !2627)
!2680 = !DILocation(line: 4057, column: 35, scope: !2627)
!2681 = !DILocation(line: 4057, column: 2, scope: !2627)
!2682 = !DILocation(line: 4061, column: 6, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4061, column: 6)
!2684 = !DILocation(line: 4061, column: 10, scope: !2683)
!2685 = !DILocation(line: 4061, column: 17, scope: !2683)
!2686 = !DILocation(line: 4061, column: 20, scope: !2683)
!2687 = !DILocation(line: 4061, column: 32, scope: !2683)
!2688 = !DILocation(line: 4061, column: 36, scope: !2683)
!2689 = !DILocation(line: 4061, column: 29, scope: !2683)
!2690 = !DILocation(line: 4061, column: 6, scope: !2627)
!2691 = !DILocation(line: 4062, column: 26, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 4061, column: 46)
!2693 = !DILocation(line: 4062, column: 3, scope: !2692)
!2694 = !DILocation(line: 4063, column: 3, scope: !2692)
!2695 = !DILocation(line: 4067, column: 6, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4067, column: 6)
!2697 = !DILocation(line: 4067, column: 16, scope: !2696)
!2698 = !DILocation(line: 4067, column: 14, scope: !2696)
!2699 = !DILocation(line: 4067, column: 6, scope: !2627)
!2700 = !DILocation(line: 4068, column: 26, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 4067, column: 28)
!2702 = !DILocation(line: 4068, column: 3, scope: !2701)
!2703 = !DILocation(line: 4069, column: 3, scope: !2701)
!2704 = !DILocation(line: 4071, column: 11, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 4071, column: 11)
!2706 = !DILocation(line: 4071, column: 21, scope: !2705)
!2707 = !DILocation(line: 4071, column: 19, scope: !2705)
!2708 = !DILocation(line: 4071, column: 11, scope: !2696)
!2709 = !DILocation(line: 4072, column: 13, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 4071, column: 31)
!2711 = !DILocation(line: 4072, column: 11, scope: !2710)
!2712 = !DILocation(line: 4073, column: 2, scope: !2710)
!2713 = !DILocation(line: 4076, column: 6, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4076, column: 6)
!2715 = !DILocation(line: 4076, column: 10, scope: !2714)
!2716 = !DILocation(line: 4076, column: 17, scope: !2714)
!2717 = !DILocation(line: 4076, column: 25, scope: !2714)
!2718 = !DILocation(line: 4077, column: 7, scope: !2714)
!2719 = !DILocation(line: 4077, column: 11, scope: !2714)
!2720 = !DILocation(line: 4077, column: 20, scope: !2714)
!2721 = !DILocation(line: 4077, column: 35, scope: !2714)
!2722 = !DILocation(line: 4077, column: 39, scope: !2714)
!2723 = !DILocation(line: 4077, column: 43, scope: !2714)
!2724 = !DILocation(line: 4077, column: 49, scope: !2714)
!2725 = !DILocation(line: 4077, column: 57, scope: !2714)
!2726 = !DILocation(line: 4077, column: 77, scope: !2714)
!2727 = !DILocation(line: 4077, column: 60, scope: !2714)
!2728 = !DILocation(line: 4076, column: 6, scope: !2627)
!2729 = !DILocation(line: 4080, column: 11, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 4078, column: 2)
!2731 = !DILocation(line: 4080, column: 15, scope: !2730)
!2732 = !DILocation(line: 4080, column: 3, scope: !2730)
!2733 = !DILocation(line: 4082, column: 22, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 4080, column: 21)
!2735 = !DILocation(line: 4082, column: 29, scope: !2734)
!2736 = !DILocation(line: 4082, column: 5, scope: !2734)
!2737 = !DILocation(line: 4083, column: 5, scope: !2734)
!2738 = !DILocation(line: 4085, column: 25, scope: !2734)
!2739 = !DILocation(line: 4085, column: 32, scope: !2734)
!2740 = !DILocation(line: 4085, column: 5, scope: !2734)
!2741 = !DILocation(line: 4086, column: 5, scope: !2734)
!2742 = !DILocation(line: 4089, column: 28, scope: !2734)
!2743 = !DILocation(line: 4089, column: 35, scope: !2734)
!2744 = !DILocation(line: 4089, column: 5, scope: !2734)
!2745 = !DILocation(line: 4090, column: 5, scope: !2734)
!2746 = !DILocation(line: 4092, column: 20, scope: !2734)
!2747 = !DILocation(line: 4092, column: 27, scope: !2734)
!2748 = !DILocation(line: 4092, column: 31, scope: !2734)
!2749 = !DILocation(line: 4092, column: 5, scope: !2734)
!2750 = !DILocation(line: 4093, column: 5, scope: !2734)
!2751 = !DILocation(line: 4096, column: 29, scope: !2730)
!2752 = !DILocation(line: 4096, column: 33, scope: !2730)
!2753 = !DILocation(line: 4096, column: 37, scope: !2730)
!2754 = !DILocation(line: 4096, column: 48, scope: !2730)
!2755 = !DILocation(line: 4096, column: 3, scope: !2730)
!2756 = !DILocation(line: 4097, column: 18, scope: !2730)
!2757 = !DILocation(line: 4097, column: 22, scope: !2730)
!2758 = !DILocation(line: 4097, column: 26, scope: !2730)
!2759 = !DILocation(line: 4097, column: 37, scope: !2730)
!2760 = !DILocation(line: 4097, column: 3, scope: !2730)
!2761 = !DILocation(line: 4098, column: 2, scope: !2730)
!2762 = !DILocation(line: 4101, column: 6, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4101, column: 6)
!2764 = !DILocation(line: 4101, column: 10, scope: !2763)
!2765 = !DILocation(line: 4101, column: 18, scope: !2763)
!2766 = !DILocation(line: 4101, column: 6, scope: !2627)
!2767 = !DILocation(line: 4102, column: 3, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 4101, column: 23)
!2769 = !DILocation(line: 4104, column: 6, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4104, column: 6)
!2771 = !DILocation(line: 4104, column: 17, scope: !2770)
!2772 = !DILocation(line: 4104, column: 14, scope: !2770)
!2773 = !DILocation(line: 4104, column: 6, scope: !2627)
!2774 = !DILocation(line: 4105, column: 24, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 4104, column: 29)
!2776 = !DILocation(line: 4105, column: 3, scope: !2775)
!2777 = !DILocation(line: 4108, column: 29, scope: !2775)
!2778 = !DILocation(line: 4108, column: 33, scope: !2775)
!2779 = !DILocation(line: 4108, column: 37, scope: !2775)
!2780 = !DILocation(line: 4108, column: 48, scope: !2775)
!2781 = !DILocation(line: 4108, column: 3, scope: !2775)
!2782 = !DILocation(line: 4110, column: 24, scope: !2775)
!2783 = !DILocation(line: 4110, column: 31, scope: !2775)
!2784 = !DILocation(line: 4110, column: 3, scope: !2775)
!2785 = !DILocation(line: 4111, column: 3, scope: !2775)
!2786 = !DILocation(line: 4111, column: 10, scope: !2775)
!2787 = !DILocation(line: 4111, column: 15, scope: !2775)
!2788 = !DILocation(line: 4113, column: 20, scope: !2775)
!2789 = !DILocation(line: 4113, column: 3, scope: !2775)
!2790 = !DILocation(line: 4113, column: 7, scope: !2775)
!2791 = !DILocation(line: 4113, column: 18, scope: !2775)
!2792 = !DILocation(line: 4115, column: 3, scope: !2775)
!2793 = !DILocation(line: 4119, column: 47, scope: !2627)
!2794 = !DILocation(line: 4119, column: 40, scope: !2627)
!2795 = !DILocation(line: 4119, column: 55, scope: !2627)
!2796 = !DILocation(line: 4119, column: 62, scope: !2627)
!2797 = !DILocation(line: 4119, column: 64, scope: !2627)
!2798 = !DILocation(line: 4119, column: 54, scope: !2627)
!2799 = !DILocation(line: 4119, column: 17, scope: !2627)
!2800 = !DILocation(line: 4119, column: 15, scope: !2627)
!2801 = !DILocation(line: 4121, column: 6, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4121, column: 6)
!2803 = !DILocation(line: 4121, column: 19, scope: !2802)
!2804 = !DILocation(line: 4121, column: 41, scope: !2802)
!2805 = !DILocation(line: 4121, column: 44, scope: !2802)
!2806 = !DILocation(line: 4121, column: 57, scope: !2802)
!2807 = !DILocation(line: 4121, column: 6, scope: !2627)
!2808 = !DILocation(line: 4122, column: 22, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 4121, column: 87)
!2810 = !DILocation(line: 4122, column: 26, scope: !2809)
!2811 = !DILocation(line: 4122, column: 37, scope: !2809)
!2812 = !DILocation(line: 4122, column: 47, scope: !2809)
!2813 = !DILocation(line: 4122, column: 51, scope: !2809)
!2814 = !DILocation(line: 4122, column: 3, scope: !2809)
!2815 = !DILocation(line: 4124, column: 24, scope: !2809)
!2816 = !DILocation(line: 4124, column: 31, scope: !2809)
!2817 = !DILocation(line: 4124, column: 3, scope: !2809)
!2818 = !DILocation(line: 4126, column: 7, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 4126, column: 7)
!2820 = !DILocation(line: 4126, column: 20, scope: !2819)
!2821 = !DILocation(line: 4126, column: 49, scope: !2819)
!2822 = !DILocation(line: 4126, column: 52, scope: !2819)
!2823 = !DILocation(line: 4126, column: 59, scope: !2819)
!2824 = !DILocation(line: 4126, column: 64, scope: !2819)
!2825 = !DILocation(line: 4126, column: 7, scope: !2809)
!2826 = !DILocation(line: 4127, column: 28, scope: !2819)
!2827 = !DILocation(line: 4127, column: 4, scope: !2819)
!2828 = !DILocation(line: 4129, column: 20, scope: !2809)
!2829 = !DILocation(line: 4129, column: 3, scope: !2809)
!2830 = !DILocation(line: 4129, column: 7, scope: !2809)
!2831 = !DILocation(line: 4129, column: 18, scope: !2809)
!2832 = !DILocation(line: 4131, column: 3, scope: !2809)
!2833 = !DILocation(line: 4133, column: 11, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 4133, column: 11)
!2835 = !DILocation(line: 4133, column: 23, scope: !2834)
!2836 = !DILocation(line: 4133, column: 11, scope: !2802)
!2837 = !DILocation(line: 4135, column: 2, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 4133, column: 43)
!2839 = !DILocation(line: 4136, column: 30, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 4136, column: 29)
!2841 = !DILocation(line: 4136, column: 37, scope: !2840)
!2842 = !DILocation(line: 4136, column: 42, scope: !2840)
!2843 = !DILocation(line: 4136, column: 29, scope: !2834)
!2844 = !DILocation(line: 4138, column: 26, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 4136, column: 60)
!2846 = !DILocation(line: 4138, column: 3, scope: !2845)
!2847 = !DILocation(line: 4139, column: 3, scope: !2845)
!2848 = !DILocation(line: 4142, column: 6, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4142, column: 6)
!2850 = !DILocation(line: 4142, column: 15, scope: !2849)
!2851 = !DILocation(line: 4142, column: 19, scope: !2849)
!2852 = !DILocation(line: 4142, column: 29, scope: !2849)
!2853 = !DILocation(line: 4142, column: 13, scope: !2849)
!2854 = !DILocation(line: 4142, column: 6, scope: !2627)
!2855 = !DILocation(line: 4143, column: 3, scope: !2849)
!2856 = !DILocation(line: 4146, column: 6, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 4146, column: 6)
!2858 = !DILocation(line: 4146, column: 13, scope: !2857)
!2859 = !DILocation(line: 4146, column: 25, scope: !2857)
!2860 = !DILocation(line: 4146, column: 22, scope: !2857)
!2861 = !DILocation(line: 4146, column: 36, scope: !2857)
!2862 = !DILocation(line: 4146, column: 40, scope: !2857)
!2863 = !DILocation(line: 4146, column: 47, scope: !2857)
!2864 = !DILocation(line: 4146, column: 52, scope: !2857)
!2865 = !DILocation(line: 4146, column: 71, scope: !2857)
!2866 = !DILocation(line: 4146, column: 74, scope: !2857)
!2867 = !DILocation(line: 4146, column: 81, scope: !2857)
!2868 = !DILocation(line: 4146, column: 91, scope: !2857)
!2869 = !DILocation(line: 4146, column: 6, scope: !2627)
!2870 = !DILocation(line: 4147, column: 27, scope: !2857)
!2871 = !DILocation(line: 4147, column: 3, scope: !2857)
!2872 = !DILocation(line: 4149, column: 28, scope: !2627)
!2873 = !DILocation(line: 4149, column: 32, scope: !2627)
!2874 = !DILocation(line: 4149, column: 36, scope: !2627)
!2875 = !DILocation(line: 4149, column: 47, scope: !2627)
!2876 = !DILocation(line: 4149, column: 2, scope: !2627)
!2877 = !DILocation(line: 4152, column: 10, scope: !2627)
!2878 = !DILocation(line: 4152, column: 21, scope: !2627)
!2879 = !DILocation(line: 4152, column: 20, scope: !2627)
!2880 = !DILocation(line: 4152, column: 8, scope: !2627)
!2881 = !DILocation(line: 4155, column: 16, scope: !2627)
!2882 = !DILocation(line: 4155, column: 23, scope: !2627)
!2883 = !DILocation(line: 4155, column: 27, scope: !2627)
!2884 = !DILocation(line: 4155, column: 31, scope: !2627)
!2885 = !DILocation(line: 4155, column: 2, scope: !2627)
!2886 = !DILocation(line: 4157, column: 21, scope: !2627)
!2887 = !DILocation(line: 4157, column: 25, scope: !2627)
!2888 = !DILocation(line: 4157, column: 36, scope: !2627)
!2889 = !DILocation(line: 4157, column: 2, scope: !2627)
!2890 = !DILocation(line: 4159, column: 23, scope: !2627)
!2891 = !DILocation(line: 4159, column: 30, scope: !2627)
!2892 = !DILocation(line: 4159, column: 2, scope: !2627)
!2893 = !DILocation(line: 4160, column: 26, scope: !2627)
!2894 = !DILocation(line: 4160, column: 2, scope: !2627)
!2895 = !DILocation(line: 4162, column: 19, scope: !2627)
!2896 = !DILocation(line: 4162, column: 2, scope: !2627)
!2897 = !DILocation(line: 4162, column: 6, scope: !2627)
!2898 = !DILocation(line: 4162, column: 17, scope: !2627)
!2899 = !DILocation(line: 4163, column: 1, scope: !2627)
!2900 = distinct !DISubprogram(name: "object_has_edges", scope: !3, file: !3, line: 3757, type: !2901, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!92, !2154}
!2903 = !DILocalVariable(name: "ob", arg: 1, scope: !2900, file: !3, line: 3757, type: !2154)
!2904 = !DILocation(line: 3757, column: 37, scope: !2900)
!2905 = !DILocation(line: 3759, column: 6, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 3759, column: 6)
!2907 = !DILocation(line: 3759, column: 10, scope: !2906)
!2908 = !DILocation(line: 3759, column: 14, scope: !2906)
!2909 = !DILocation(line: 3759, column: 6, scope: !2900)
!2910 = !DILocation(line: 3760, column: 19, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 3759, column: 25)
!2912 = !DILocation(line: 3760, column: 23, scope: !2911)
!2913 = !DILocation(line: 3760, column: 11, scope: !2911)
!2914 = !DILocation(line: 3760, column: 30, scope: !2911)
!2915 = !DILocation(line: 3760, column: 3, scope: !2911)
!2916 = !DILocation(line: 3762, column: 11, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 3762, column: 11)
!2918 = !DILocation(line: 3762, column: 15, scope: !2917)
!2919 = !DILocation(line: 3762, column: 19, scope: !2917)
!2920 = !DILocation(line: 3762, column: 11, scope: !2906)
!2921 = !DILocation(line: 3763, column: 3, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 3762, column: 33)
!2923 = !DILocation(line: 3766, column: 3, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 3765, column: 7)
!2925 = !DILocation(line: 3768, column: 1, scope: !2900)
!2926 = distinct !DISubprogram(name: "mesh_to_softbody", scope: !3, file: !3, line: 3258, type: !2927, scopeLine: 3259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{null, !2151, !2154}
!2929 = !DILocalVariable(name: "scene", arg: 1, scope: !2926, file: !3, line: 3258, type: !2151)
!2930 = !DILocation(line: 3258, column: 37, scope: !2926)
!2931 = !DILocalVariable(name: "ob", arg: 2, scope: !2926, file: !3, line: 3258, type: !2154)
!2932 = !DILocation(line: 3258, column: 52, scope: !2926)
!2933 = !DILocalVariable(name: "sb", scope: !2926, file: !3, line: 3260, type: !2192)
!2934 = !DILocation(line: 3260, column: 12, scope: !2926)
!2935 = !DILocalVariable(name: "me", scope: !2926, file: !3, line: 3261, type: !100)
!2936 = !DILocation(line: 3261, column: 8, scope: !2926)
!2937 = !DILocation(line: 3261, column: 12, scope: !2926)
!2938 = !DILocation(line: 3261, column: 16, scope: !2926)
!2939 = !DILocalVariable(name: "medge", scope: !2926, file: !3, line: 3262, type: !2940)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !204, line: 52, baseType: !384)
!2942 = !DILocation(line: 3262, column: 9, scope: !2926)
!2943 = !DILocation(line: 3262, column: 16, scope: !2926)
!2944 = !DILocation(line: 3262, column: 20, scope: !2926)
!2945 = !DILocalVariable(name: "bp", scope: !2926, file: !3, line: 3263, type: !2386)
!2946 = !DILocation(line: 3263, column: 13, scope: !2926)
!2947 = !DILocalVariable(name: "bs", scope: !2926, file: !3, line: 3264, type: !2948)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "BodySpring", file: !3, line: 100, baseType: !1069)
!2950 = !DILocation(line: 3264, column: 14, scope: !2926)
!2951 = !DILocalVariable(name: "a", scope: !2926, file: !3, line: 3265, type: !92)
!2952 = !DILocation(line: 3265, column: 6, scope: !2926)
!2953 = !DILocalVariable(name: "totedge", scope: !2926, file: !3, line: 3265, type: !92)
!2954 = !DILocation(line: 3265, column: 9, scope: !2926)
!2955 = !DILocation(line: 3267, column: 27, scope: !2926)
!2956 = !DILocation(line: 3267, column: 2, scope: !2926)
!2957 = !DILocation(line: 3269, column: 6, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 3269, column: 6)
!2959 = !DILocation(line: 3269, column: 10, scope: !2958)
!2960 = !DILocation(line: 3269, column: 19, scope: !2958)
!2961 = !DILocation(line: 3269, column: 6, scope: !2926)
!2962 = !DILocation(line: 3269, column: 43, scope: !2958)
!2963 = !DILocation(line: 3269, column: 47, scope: !2958)
!2964 = !DILocation(line: 3269, column: 41, scope: !2958)
!2965 = !DILocation(line: 3269, column: 34, scope: !2958)
!2966 = !DILocation(line: 3270, column: 14, scope: !2958)
!2967 = !DILocation(line: 3273, column: 17, scope: !2926)
!2968 = !DILocation(line: 3273, column: 24, scope: !2926)
!2969 = !DILocation(line: 3273, column: 28, scope: !2926)
!2970 = !DILocation(line: 3273, column: 32, scope: !2926)
!2971 = !DILocation(line: 3273, column: 41, scope: !2926)
!2972 = !DILocation(line: 3273, column: 2, scope: !2926)
!2973 = !DILocation(line: 3276, column: 6, scope: !2926)
!2974 = !DILocation(line: 3276, column: 10, scope: !2926)
!2975 = !DILocation(line: 3276, column: 4, scope: !2926)
!2976 = !DILocation(line: 3277, column: 6, scope: !2926)
!2977 = !DILocation(line: 3277, column: 10, scope: !2926)
!2978 = !DILocation(line: 3277, column: 4, scope: !2926)
!2979 = !DILocation(line: 3279, column: 8, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 3279, column: 2)
!2981 = !DILocation(line: 3279, column: 7, scope: !2980)
!2982 = !DILocation(line: 3279, column: 12, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 3279, column: 2)
!2984 = !DILocation(line: 3279, column: 14, scope: !2983)
!2985 = !DILocation(line: 3279, column: 18, scope: !2983)
!2986 = !DILocation(line: 3279, column: 13, scope: !2983)
!2987 = !DILocation(line: 3279, column: 2, scope: !2980)
!2988 = !DILocation(line: 3286, column: 8, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 3286, column: 7)
!2990 = distinct !DILexicalBlock(scope: !2983, file: !3, line: 3279, column: 38)
!2991 = !DILocation(line: 3286, column: 12, scope: !2989)
!2992 = !DILocation(line: 3286, column: 21, scope: !2989)
!2993 = !DILocation(line: 3286, column: 35, scope: !2989)
!2994 = !DILocation(line: 3286, column: 38, scope: !2989)
!2995 = !DILocation(line: 3286, column: 42, scope: !2989)
!2996 = !DILocation(line: 3286, column: 7, scope: !2990)
!2997 = !DILocation(line: 3289, column: 32, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 3286, column: 53)
!2999 = !DILocation(line: 3289, column: 36, scope: !2998)
!3000 = !DILocation(line: 3289, column: 39, scope: !2998)
!3001 = !DILocation(line: 3289, column: 43, scope: !2998)
!3002 = !DILocation(line: 3289, column: 53, scope: !2998)
!3003 = !DILocation(line: 3289, column: 59, scope: !2998)
!3004 = !DILocation(line: 3289, column: 63, scope: !2998)
!3005 = !DILocation(line: 3289, column: 4, scope: !2998)
!3006 = !DILocation(line: 3296, column: 3, scope: !2998)
!3007 = !DILocation(line: 3300, column: 8, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 3300, column: 8)
!3009 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 3297, column: 8)
!3010 = !DILocation(line: 3300, column: 12, scope: !3008)
!3011 = !DILocation(line: 3300, column: 21, scope: !3008)
!3012 = !DILocation(line: 3300, column: 8, scope: !3009)
!3013 = !DILocation(line: 3300, column: 47, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 3300, column: 35)
!3015 = !DILocation(line: 3300, column: 51, scope: !3014)
!3016 = !DILocation(line: 3300, column: 36, scope: !3014)
!3017 = !DILocation(line: 3300, column: 40, scope: !3014)
!3018 = !DILocation(line: 3300, column: 45, scope: !3014)
!3019 = !DILocation(line: 3300, column: 59, scope: !3014)
!3020 = !DILocation(line: 3307, column: 7, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 3307, column: 7)
!3022 = !DILocation(line: 3307, column: 11, scope: !3021)
!3023 = !DILocation(line: 3307, column: 7, scope: !2990)
!3024 = !DILocalVariable(name: "defgrp_index", scope: !3025, file: !3, line: 3308, type: !92)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 3307, column: 28)
!3026 = !DILocation(line: 3308, column: 8, scope: !3025)
!3027 = !DILocation(line: 3308, column: 43, scope: !3025)
!3028 = !DILocation(line: 3308, column: 47, scope: !3025)
!3029 = !DILocation(line: 3308, column: 51, scope: !3025)
!3030 = !DILocation(line: 3308, column: 23, scope: !3025)
!3031 = !DILocation(line: 3310, column: 8, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 3310, column: 8)
!3033 = !DILocation(line: 3310, column: 21, scope: !3032)
!3034 = !DILocation(line: 3310, column: 8, scope: !3025)
!3035 = !DILocation(line: 3311, column: 33, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 3310, column: 28)
!3037 = !DILocation(line: 3311, column: 37, scope: !3036)
!3038 = !DILocation(line: 3311, column: 40, scope: !3036)
!3039 = !DILocation(line: 3311, column: 55, scope: !3036)
!3040 = !DILocation(line: 3311, column: 59, scope: !3036)
!3041 = !DILocation(line: 3311, column: 5, scope: !3036)
!3042 = !DILocation(line: 3315, column: 4, scope: !3036)
!3043 = !DILocation(line: 3316, column: 3, scope: !3025)
!3044 = !DILocation(line: 3318, column: 3, scope: !2990)
!3045 = !DILocation(line: 3318, column: 7, scope: !2990)
!3046 = !DILocation(line: 3318, column: 20, scope: !2990)
!3047 = !DILocation(line: 3320, column: 7, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 3320, column: 7)
!3049 = !DILocation(line: 3320, column: 11, scope: !3048)
!3050 = !DILocation(line: 3320, column: 7, scope: !2990)
!3051 = !DILocalVariable(name: "defgrp_index", scope: !3052, file: !3, line: 3321, type: !92)
!3052 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 3320, column: 32)
!3053 = !DILocation(line: 3321, column: 8, scope: !3052)
!3054 = !DILocation(line: 3321, column: 43, scope: !3052)
!3055 = !DILocation(line: 3321, column: 47, scope: !3052)
!3056 = !DILocation(line: 3321, column: 51, scope: !3052)
!3057 = !DILocation(line: 3321, column: 23, scope: !3052)
!3058 = !DILocation(line: 3323, column: 8, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 3323, column: 8)
!3060 = !DILocation(line: 3323, column: 22, scope: !3059)
!3061 = !DILocation(line: 3323, column: 8, scope: !3052)
!3062 = !DILocation(line: 3324, column: 33, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 3323, column: 29)
!3064 = !DILocation(line: 3324, column: 37, scope: !3063)
!3065 = !DILocation(line: 3324, column: 40, scope: !3063)
!3066 = !DILocation(line: 3324, column: 56, scope: !3063)
!3067 = !DILocation(line: 3324, column: 60, scope: !3063)
!3068 = !DILocation(line: 3324, column: 5, scope: !3063)
!3069 = !DILocation(line: 3327, column: 4, scope: !3063)
!3070 = !DILocation(line: 3328, column: 3, scope: !3052)
!3071 = !DILocation(line: 3331, column: 2, scope: !2990)
!3072 = !DILocation(line: 3279, column: 28, scope: !2983)
!3073 = !DILocation(line: 3279, column: 34, scope: !2983)
!3074 = !DILocation(line: 3279, column: 2, scope: !2983)
!3075 = distinct !{!3075, !2987, !3076}
!3076 = !DILocation(line: 3331, column: 2, scope: !2980)
!3077 = !DILocation(line: 3334, column: 6, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 3334, column: 6)
!3079 = !DILocation(line: 3334, column: 10, scope: !3078)
!3080 = !DILocation(line: 3334, column: 19, scope: !3078)
!3081 = !DILocation(line: 3334, column: 6, scope: !2926)
!3082 = !DILocation(line: 3335, column: 7, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 3335, column: 7)
!3084 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 3334, column: 34)
!3085 = !DILocation(line: 3335, column: 7, scope: !3084)
!3086 = !DILocation(line: 3336, column: 8, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 3335, column: 14)
!3088 = !DILocation(line: 3336, column: 12, scope: !3087)
!3089 = !DILocation(line: 3336, column: 6, scope: !3087)
!3090 = !DILocation(line: 3337, column: 11, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 3337, column: 4)
!3092 = !DILocation(line: 3337, column: 15, scope: !3091)
!3093 = !DILocation(line: 3337, column: 10, scope: !3091)
!3094 = !DILocation(line: 3337, column: 9, scope: !3091)
!3095 = !DILocation(line: 3337, column: 24, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 3337, column: 4)
!3097 = !DILocation(line: 3337, column: 25, scope: !3096)
!3098 = !DILocation(line: 3337, column: 4, scope: !3091)
!3099 = !DILocation(line: 3338, column: 13, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 3337, column: 49)
!3101 = !DILocation(line: 3338, column: 20, scope: !3100)
!3102 = !DILocation(line: 3338, column: 5, scope: !3100)
!3103 = !DILocation(line: 3338, column: 9, scope: !3100)
!3104 = !DILocation(line: 3338, column: 11, scope: !3100)
!3105 = !DILocation(line: 3339, column: 13, scope: !3100)
!3106 = !DILocation(line: 3339, column: 20, scope: !3100)
!3107 = !DILocation(line: 3339, column: 5, scope: !3100)
!3108 = !DILocation(line: 3339, column: 9, scope: !3100)
!3109 = !DILocation(line: 3339, column: 11, scope: !3100)
!3110 = !DILocation(line: 3340, column: 5, scope: !3100)
!3111 = !DILocation(line: 3340, column: 9, scope: !3100)
!3112 = !DILocation(line: 3340, column: 19, scope: !3100)
!3113 = !DILocation(line: 3341, column: 4, scope: !3100)
!3114 = !DILocation(line: 3337, column: 30, scope: !3096)
!3115 = !DILocation(line: 3337, column: 39, scope: !3096)
!3116 = !DILocation(line: 3337, column: 45, scope: !3096)
!3117 = !DILocation(line: 3337, column: 4, scope: !3096)
!3118 = distinct !{!3118, !3098, !3119}
!3119 = !DILocation(line: 3341, column: 4, scope: !3091)
!3120 = !DILocation(line: 3345, column: 8, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 3345, column: 8)
!3122 = !DILocation(line: 3345, column: 12, scope: !3121)
!3123 = !DILocation(line: 3345, column: 21, scope: !3121)
!3124 = !DILocation(line: 3345, column: 8, scope: !3087)
!3125 = !DILocation(line: 3346, column: 32, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 3345, column: 36)
!3127 = !DILocation(line: 3346, column: 5, scope: !3126)
!3128 = !DILocation(line: 3347, column: 4, scope: !3126)
!3129 = !DILocation(line: 3349, column: 25, scope: !3087)
!3130 = !DILocation(line: 3349, column: 4, scope: !3087)
!3131 = !DILocation(line: 3351, column: 8, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 3351, column: 8)
!3133 = !DILocation(line: 3351, column: 12, scope: !3132)
!3134 = !DILocation(line: 3351, column: 25, scope: !3132)
!3135 = !DILocation(line: 3351, column: 8, scope: !3087)
!3136 = !DILocation(line: 3352, column: 27, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 3351, column: 39)
!3138 = !DILocation(line: 3352, column: 31, scope: !3137)
!3139 = !DILocation(line: 3352, column: 35, scope: !3137)
!3140 = !DILocation(line: 3352, column: 5, scope: !3137)
!3141 = !DILocation(line: 3353, column: 26, scope: !3137)
!3142 = !DILocation(line: 3353, column: 5, scope: !3137)
!3143 = !DILocation(line: 3354, column: 4, scope: !3137)
!3144 = !DILocation(line: 3355, column: 22, scope: !3087)
!3145 = !DILocation(line: 3355, column: 4, scope: !3087)
!3146 = !DILocation(line: 3356, column: 8, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 3356, column: 8)
!3148 = !DILocation(line: 3356, column: 12, scope: !3147)
!3149 = !DILocation(line: 3356, column: 21, scope: !3147)
!3150 = !DILocation(line: 3356, column: 8, scope: !3087)
!3151 = !DILocation(line: 3356, column: 62, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 3356, column: 35)
!3153 = !DILocation(line: 3356, column: 36, scope: !3152)
!3154 = !DILocation(line: 3356, column: 66, scope: !3152)
!3155 = !DILocation(line: 3358, column: 3, scope: !3087)
!3156 = !DILocation(line: 3360, column: 2, scope: !3084)
!3157 = !DILocation(line: 3362, column: 1, scope: !2926)
!3158 = distinct !DISubprogram(name: "lattice_to_softbody", scope: !3, file: !3, line: 3503, type: !2927, scopeLine: 3504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!3159 = !DILocalVariable(name: "scene", arg: 1, scope: !3158, file: !3, line: 3503, type: !2151)
!3160 = !DILocation(line: 3503, column: 40, scope: !3158)
!3161 = !DILocalVariable(name: "ob", arg: 2, scope: !3158, file: !3, line: 3503, type: !2154)
!3162 = !DILocation(line: 3503, column: 55, scope: !3158)
!3163 = !DILocalVariable(name: "lt", scope: !3158, file: !3, line: 3505, type: !3164)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !196, line: 72, baseType: !3166)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !196, line: 52, size: 2240, elements: !3167)
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3200, !3201, !3202, !3203, !3204}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3166, file: !196, line: 53, baseType: !106, size: 960)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3166, file: !196, line: 54, baseType: !176, size: 64, offset: 960)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !3166, file: !196, line: 56, baseType: !139, size: 16, offset: 1024)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !3166, file: !196, line: 56, baseType: !139, size: 16, offset: 1040)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !3166, file: !196, line: 56, baseType: !139, size: 16, offset: 1056)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3166, file: !196, line: 56, baseType: !139, size: 16, offset: 1072)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !3166, file: !196, line: 57, baseType: !139, size: 16, offset: 1088)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !3166, file: !196, line: 57, baseType: !139, size: 16, offset: 1104)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !3166, file: !196, line: 57, baseType: !139, size: 16, offset: 1120)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3166, file: !196, line: 57, baseType: !139, size: 16, offset: 1136)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !3166, file: !196, line: 58, baseType: !126, size: 8, offset: 1152)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !3166, file: !196, line: 58, baseType: !126, size: 8, offset: 1160)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !3166, file: !196, line: 58, baseType: !126, size: 8, offset: 1168)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3166, file: !196, line: 58, baseType: !126, size: 8, offset: 1176)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !3166, file: !196, line: 59, baseType: !92, size: 32, offset: 1184)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1216)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1248)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1280)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1312)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1344)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !3166, file: !196, line: 61, baseType: !94, size: 32, offset: 1376)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !3166, file: !196, line: 63, baseType: !3190, size: 64, offset: 1408)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !1459, line: 136, size: 288, elements: !3192)
!3192 = !{!3193, !3194, !3195, !3196, !3197, !3198, !3199}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3191, file: !1459, line: 137, baseType: !286, size: 128)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3191, file: !1459, line: 138, baseType: !94, size: 32, offset: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3191, file: !1459, line: 138, baseType: !94, size: 32, offset: 160)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3191, file: !1459, line: 139, baseType: !139, size: 16, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3191, file: !1459, line: 139, baseType: !139, size: 16, offset: 208)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3191, file: !1459, line: 140, baseType: !94, size: 32, offset: 224)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3191, file: !1459, line: 140, baseType: !94, size: 32, offset: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3166, file: !196, line: 65, baseType: !191, size: 64, offset: 1472)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3166, file: !196, line: 66, baseType: !194, size: 64, offset: 1536)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3166, file: !196, line: 68, baseType: !392, size: 64, offset: 1600)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3166, file: !196, line: 69, baseType: !155, size: 512, offset: 1664)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !3166, file: !196, line: 71, baseType: !3205, size: 64, offset: 2176)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !196, line: 44, size: 128, elements: !3207)
!3207 = !{!3208, !3210, !3211}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3206, file: !196, line: 45, baseType: !3209, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3206, file: !196, line: 47, baseType: !92, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3206, file: !196, line: 49, baseType: !3212, size: 32, offset: 96)
!3212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 32, elements: !287)
!3213 = !DILocation(line: 3505, column: 11, scope: !3158)
!3214 = !DILocation(line: 3505, column: 15, scope: !3158)
!3215 = !DILocation(line: 3505, column: 19, scope: !3158)
!3216 = !DILocalVariable(name: "sb", scope: !3158, file: !3, line: 3506, type: !2192)
!3217 = !DILocation(line: 3506, column: 12, scope: !3158)
!3218 = !DILocalVariable(name: "totvert", scope: !3158, file: !3, line: 3507, type: !92)
!3219 = !DILocation(line: 3507, column: 6, scope: !3158)
!3220 = !DILocalVariable(name: "totspring", scope: !3158, file: !3, line: 3507, type: !92)
!3221 = !DILocation(line: 3507, column: 15, scope: !3158)
!3222 = !DILocalVariable(name: "a", scope: !3158, file: !3, line: 3507, type: !92)
!3223 = !DILocation(line: 3507, column: 30, scope: !3158)
!3224 = !DILocalVariable(name: "bp", scope: !3158, file: !3, line: 3508, type: !2386)
!3225 = !DILocation(line: 3508, column: 13, scope: !3158)
!3226 = !DILocalVariable(name: "bpnt", scope: !3158, file: !3, line: 3509, type: !3227)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !1459, line: 141, baseType: !3191)
!3229 = !DILocation(line: 3509, column: 10, scope: !3158)
!3230 = !DILocation(line: 3509, column: 17, scope: !3158)
!3231 = !DILocation(line: 3509, column: 21, scope: !3158)
!3232 = !DILocation(line: 3511, column: 11, scope: !3158)
!3233 = !DILocation(line: 3511, column: 15, scope: !3158)
!3234 = !DILocation(line: 3511, column: 21, scope: !3158)
!3235 = !DILocation(line: 3511, column: 25, scope: !3158)
!3236 = !DILocation(line: 3511, column: 20, scope: !3158)
!3237 = !DILocation(line: 3511, column: 31, scope: !3158)
!3238 = !DILocation(line: 3511, column: 35, scope: !3158)
!3239 = !DILocation(line: 3511, column: 30, scope: !3158)
!3240 = !DILocation(line: 3511, column: 9, scope: !3158)
!3241 = !DILocation(line: 3513, column: 6, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 3513, column: 6)
!3243 = !DILocation(line: 3513, column: 10, scope: !3242)
!3244 = !DILocation(line: 3513, column: 19, scope: !3242)
!3245 = !DILocation(line: 3513, column: 6, scope: !3158)
!3246 = !DILocation(line: 3514, column: 17, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 3513, column: 34)
!3248 = !DILocation(line: 3514, column: 21, scope: !3247)
!3249 = !DILocation(line: 3514, column: 27, scope: !3247)
!3250 = !DILocation(line: 3514, column: 34, scope: !3247)
!3251 = !DILocation(line: 3514, column: 38, scope: !3247)
!3252 = !DILocation(line: 3514, column: 32, scope: !3247)
!3253 = !DILocation(line: 3515, column: 17, scope: !3247)
!3254 = !DILocation(line: 3515, column: 21, scope: !3247)
!3255 = !DILocation(line: 3515, column: 27, scope: !3247)
!3256 = !DILocation(line: 3515, column: 34, scope: !3247)
!3257 = !DILocation(line: 3515, column: 38, scope: !3247)
!3258 = !DILocation(line: 3515, column: 32, scope: !3247)
!3259 = !DILocation(line: 3514, column: 44, scope: !3247)
!3260 = !DILocation(line: 3515, column: 47, scope: !3247)
!3261 = !DILocation(line: 3515, column: 51, scope: !3247)
!3262 = !DILocation(line: 3515, column: 45, scope: !3247)
!3263 = !DILocation(line: 3516, column: 15, scope: !3247)
!3264 = !DILocation(line: 3516, column: 19, scope: !3247)
!3265 = !DILocation(line: 3516, column: 25, scope: !3247)
!3266 = !DILocation(line: 3516, column: 29, scope: !3247)
!3267 = !DILocation(line: 3516, column: 24, scope: !3247)
!3268 = !DILocation(line: 3516, column: 38, scope: !3247)
!3269 = !DILocation(line: 3516, column: 42, scope: !3247)
!3270 = !DILocation(line: 3516, column: 48, scope: !3247)
!3271 = !DILocation(line: 3516, column: 35, scope: !3247)
!3272 = !DILocation(line: 3515, column: 57, scope: !3247)
!3273 = !DILocation(line: 3514, column: 13, scope: !3247)
!3274 = !DILocation(line: 3517, column: 7, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 3517, column: 7)
!3276 = !DILocation(line: 3517, column: 11, scope: !3275)
!3277 = !DILocation(line: 3517, column: 20, scope: !3275)
!3278 = !DILocation(line: 3517, column: 7, scope: !3247)
!3279 = !DILocation(line: 3518, column: 22, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 3517, column: 35)
!3281 = !DILocation(line: 3518, column: 26, scope: !3280)
!3282 = !DILocation(line: 3518, column: 32, scope: !3280)
!3283 = !DILocation(line: 3518, column: 19, scope: !3280)
!3284 = !DILocation(line: 3518, column: 41, scope: !3280)
!3285 = !DILocation(line: 3518, column: 45, scope: !3280)
!3286 = !DILocation(line: 3518, column: 51, scope: !3280)
!3287 = !DILocation(line: 3518, column: 37, scope: !3280)
!3288 = !DILocation(line: 3518, column: 59, scope: !3280)
!3289 = !DILocation(line: 3518, column: 63, scope: !3280)
!3290 = !DILocation(line: 3518, column: 69, scope: !3280)
!3291 = !DILocation(line: 3518, column: 56, scope: !3280)
!3292 = !DILocation(line: 3518, column: 14, scope: !3280)
!3293 = !DILocation(line: 3519, column: 3, scope: !3280)
!3294 = !DILocation(line: 3520, column: 2, scope: !3247)
!3295 = !DILocation(line: 3524, column: 17, scope: !3158)
!3296 = !DILocation(line: 3524, column: 24, scope: !3158)
!3297 = !DILocation(line: 3524, column: 28, scope: !3158)
!3298 = !DILocation(line: 3524, column: 37, scope: !3158)
!3299 = !DILocation(line: 3524, column: 2, scope: !3158)
!3300 = !DILocation(line: 3525, column: 6, scope: !3158)
!3301 = !DILocation(line: 3525, column: 10, scope: !3158)
!3302 = !DILocation(line: 3525, column: 4, scope: !3158)
!3303 = !DILocation(line: 3526, column: 7, scope: !3158)
!3304 = !DILocation(line: 3526, column: 11, scope: !3158)
!3305 = !DILocation(line: 3526, column: 5, scope: !3158)
!3306 = !DILocation(line: 3529, column: 9, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 3529, column: 2)
!3308 = !DILocation(line: 3529, column: 7, scope: !3307)
!3309 = !DILocation(line: 3529, column: 14, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 3529, column: 2)
!3311 = !DILocation(line: 3529, column: 18, scope: !3310)
!3312 = !DILocation(line: 3529, column: 16, scope: !3310)
!3313 = !DILocation(line: 3529, column: 2, scope: !3307)
!3314 = !DILocation(line: 3530, column: 8, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 3530, column: 7)
!3316 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 3529, column: 46)
!3317 = !DILocation(line: 3530, column: 12, scope: !3315)
!3318 = !DILocation(line: 3530, column: 21, scope: !3315)
!3319 = !DILocation(line: 3530, column: 35, scope: !3315)
!3320 = !DILocation(line: 3530, column: 38, scope: !3315)
!3321 = !DILocation(line: 3530, column: 42, scope: !3315)
!3322 = !DILocation(line: 3530, column: 7, scope: !3316)
!3323 = !DILocation(line: 3531, column: 32, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 3530, column: 53)
!3325 = !DILocation(line: 3531, column: 36, scope: !3324)
!3326 = !DILocation(line: 3531, column: 48, scope: !3324)
!3327 = !DILocation(line: 3531, column: 52, scope: !3324)
!3328 = !DILocation(line: 3531, column: 62, scope: !3324)
!3329 = !DILocation(line: 3531, column: 39, scope: !3324)
!3330 = !DILocation(line: 3531, column: 69, scope: !3324)
!3331 = !DILocation(line: 3531, column: 73, scope: !3324)
!3332 = !DILocation(line: 3531, column: 4, scope: !3324)
!3333 = !DILocation(line: 3532, column: 3, scope: !3324)
!3334 = !DILocation(line: 3534, column: 8, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 3534, column: 8)
!3336 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 3533, column: 8)
!3337 = !DILocation(line: 3534, column: 12, scope: !3335)
!3338 = !DILocation(line: 3534, column: 21, scope: !3335)
!3339 = !DILocation(line: 3534, column: 8, scope: !3336)
!3340 = !DILocation(line: 3535, column: 16, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 3534, column: 35)
!3342 = !DILocation(line: 3535, column: 20, scope: !3341)
!3343 = !DILocation(line: 3535, column: 5, scope: !3341)
!3344 = !DILocation(line: 3535, column: 9, scope: !3341)
!3345 = !DILocation(line: 3535, column: 14, scope: !3341)
!3346 = !DILocation(line: 3536, column: 4, scope: !3341)
!3347 = !DILocation(line: 3538, column: 2, scope: !3316)
!3348 = !DILocation(line: 3529, column: 28, scope: !3310)
!3349 = !DILocation(line: 3529, column: 34, scope: !3310)
!3350 = !DILocation(line: 3529, column: 42, scope: !3310)
!3351 = !DILocation(line: 3529, column: 2, scope: !3310)
!3352 = distinct !{!3352, !3313, !3353}
!3353 = !DILocation(line: 3538, column: 2, scope: !3307)
!3354 = !DILocation(line: 3541, column: 6, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 3541, column: 6)
!3356 = !DILocation(line: 3541, column: 10, scope: !3355)
!3357 = !DILocation(line: 3541, column: 19, scope: !3355)
!3358 = !DILocation(line: 3541, column: 6, scope: !3158)
!3359 = !DILocation(line: 3542, column: 22, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 3541, column: 34)
!3361 = !DILocation(line: 3542, column: 26, scope: !3360)
!3362 = !DILocation(line: 3542, column: 30, scope: !3360)
!3363 = !DILocation(line: 3542, column: 36, scope: !3360)
!3364 = !DILocation(line: 3542, column: 45, scope: !3360)
!3365 = !DILocation(line: 3542, column: 49, scope: !3360)
!3366 = !DILocation(line: 3542, column: 58, scope: !3360)
!3367 = !DILocation(line: 3542, column: 73, scope: !3360)
!3368 = !DILocation(line: 3542, column: 3, scope: !3360)
!3369 = !DILocation(line: 3543, column: 24, scope: !3360)
!3370 = !DILocation(line: 3543, column: 3, scope: !3360)
!3371 = !DILocation(line: 3544, column: 2, scope: !3360)
!3372 = !DILocation(line: 3545, column: 1, scope: !3158)
!3373 = distinct !DISubprogram(name: "curve_surf_to_softbody", scope: !3, file: !3, line: 3548, type: !2927, scopeLine: 3549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!3374 = !DILocalVariable(name: "scene", arg: 1, scope: !3373, file: !3, line: 3548, type: !2151)
!3375 = !DILocation(line: 3548, column: 43, scope: !3373)
!3376 = !DILocalVariable(name: "ob", arg: 2, scope: !3373, file: !3, line: 3548, type: !2154)
!3377 = !DILocation(line: 3548, column: 58, scope: !3373)
!3378 = !DILocalVariable(name: "cu", scope: !3373, file: !3, line: 3550, type: !3379)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1459, line: 273, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1459, line: 193, size: 4224, elements: !3382)
!3382 = !{!3383, !3384, !3385, !3386, !3387, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3447, !3448, !3451, !3452, !3453, !3454, !3462, !3463, !3464, !3473, !3474, !3475, !3476, !3477, !3478, !3479}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3381, file: !1459, line: 194, baseType: !106, size: 960)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3381, file: !1459, line: 195, baseType: !176, size: 64, offset: 960)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3381, file: !1459, line: 197, baseType: !180, size: 64, offset: 1024)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !3381, file: !1459, line: 199, baseType: !165, size: 128, offset: 1088)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !3381, file: !1459, line: 201, baseType: !3388, size: 64, offset: 1216)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1459, line: 191, baseType: !3390)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1459, line: 180, size: 256, elements: !3391)
!3391 = !{!3392, !3393, !3394, !3395}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !3390, file: !1459, line: 182, baseType: !165, size: 128)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !3390, file: !1459, line: 185, baseType: !567, size: 64, offset: 128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3390, file: !1459, line: 188, baseType: !92, size: 32, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3390, file: !1459, line: 190, baseType: !3212, size: 32, offset: 224)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !3381, file: !1459, line: 203, baseType: !525, size: 64, offset: 1280)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !3381, file: !1459, line: 203, baseType: !525, size: 64, offset: 1344)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !3381, file: !1459, line: 203, baseType: !525, size: 64, offset: 1408)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3381, file: !1459, line: 204, baseType: !191, size: 64, offset: 1472)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3381, file: !1459, line: 205, baseType: !194, size: 64, offset: 1536)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3381, file: !1459, line: 206, baseType: !198, size: 64, offset: 1600)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3381, file: !1459, line: 209, baseType: !376, size: 96, offset: 1664)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3381, file: !1459, line: 210, baseType: !376, size: 96, offset: 1760)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3381, file: !1459, line: 211, baseType: !376, size: 96, offset: 1856)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3381, file: !1459, line: 213, baseType: !139, size: 16, offset: 1952)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3381, file: !1459, line: 215, baseType: !139, size: 16, offset: 1968)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3381, file: !1459, line: 216, baseType: !139, size: 16, offset: 1984)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !3381, file: !1459, line: 216, baseType: !139, size: 16, offset: 2000)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !3381, file: !1459, line: 217, baseType: !94, size: 32, offset: 2016)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !3381, file: !1459, line: 217, baseType: !94, size: 32, offset: 2048)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !3381, file: !1459, line: 219, baseType: !92, size: 32, offset: 2080)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !3381, file: !1459, line: 220, baseType: !139, size: 16, offset: 2112)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3381, file: !1459, line: 220, baseType: !139, size: 16, offset: 2128)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3381, file: !1459, line: 221, baseType: !92, size: 32, offset: 2144)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3381, file: !1459, line: 222, baseType: !94, size: 32, offset: 2176)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !3381, file: !1459, line: 222, baseType: !94, size: 32, offset: 2208)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !3381, file: !1459, line: 222, baseType: !94, size: 32, offset: 2240)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !3381, file: !1459, line: 225, baseType: !139, size: 16, offset: 2272)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !3381, file: !1459, line: 225, baseType: !139, size: 16, offset: 2288)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !3381, file: !1459, line: 226, baseType: !139, size: 16, offset: 2304)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !3381, file: !1459, line: 226, baseType: !139, size: 16, offset: 2320)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !3381, file: !1459, line: 229, baseType: !92, size: 32, offset: 2336)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !3381, file: !1459, line: 231, baseType: !92, size: 32, offset: 2368)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3381, file: !1459, line: 233, baseType: !3212, size: 32, offset: 2400)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !3381, file: !1459, line: 236, baseType: !139, size: 16, offset: 2432)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !3381, file: !1459, line: 237, baseType: !126, size: 8, offset: 2448)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3381, file: !1459, line: 237, baseType: !126, size: 8, offset: 2456)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2464)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2496)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2528)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2560)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2592)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2624)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !3381, file: !1459, line: 238, baseType: !94, size: 32, offset: 2656)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3381, file: !1459, line: 239, baseType: !94, size: 32, offset: 2688)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3381, file: !1459, line: 239, baseType: !94, size: 32, offset: 2720)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !3381, file: !1459, line: 240, baseType: !94, size: 32, offset: 2752)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3381, file: !1459, line: 244, baseType: !92, size: 32, offset: 2784)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !3381, file: !1459, line: 245, baseType: !92, size: 32, offset: 2816)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !3381, file: !1459, line: 245, baseType: !92, size: 32, offset: 2848)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !3381, file: !1459, line: 248, baseType: !92, size: 32, offset: 2880)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3381, file: !1459, line: 249, baseType: !92, size: 32, offset: 2912)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3381, file: !1459, line: 250, baseType: !500, size: 64, offset: 2944)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !3381, file: !1459, line: 251, baseType: !3445, size: 64, offset: 3008)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1459, line: 50, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3381, file: !1459, line: 253, baseType: !155, size: 512, offset: 3072)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3381, file: !1459, line: 254, baseType: !3449, size: 64, offset: 3584)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1459, line: 47, flags: DIFlagFwdDecl)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !3381, file: !1459, line: 255, baseType: !3449, size: 64, offset: 3648)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !3381, file: !1459, line: 256, baseType: !3449, size: 64, offset: 3712)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !3381, file: !1459, line: 257, baseType: !3449, size: 64, offset: 3776)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !3381, file: !1459, line: 259, baseType: !3455, size: 64, offset: 3840)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1459, line: 176, size: 128, elements: !3457)
!3457 = !{!3458, !3459, !3460, !3461}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3456, file: !1459, line: 177, baseType: !94, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3456, file: !1459, line: 177, baseType: !94, size: 32, offset: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3456, file: !1459, line: 177, baseType: !94, size: 32, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3456, file: !1459, line: 177, baseType: !94, size: 32, offset: 96)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !3381, file: !1459, line: 260, baseType: !92, size: 32, offset: 3904)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !3381, file: !1459, line: 260, baseType: !92, size: 32, offset: 3936)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !3381, file: !1459, line: 262, baseType: !3465, size: 64, offset: 3968)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1459, line: 168, size: 64, elements: !3467)
!3467 = !{!3468, !3469, !3470, !3471, !3472}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !3466, file: !1459, line: 169, baseType: !139, size: 16)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3466, file: !1459, line: 170, baseType: !139, size: 16, offset: 16)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3466, file: !1459, line: 171, baseType: !126, size: 8, offset: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3466, file: !1459, line: 172, baseType: !126, size: 8, offset: 40)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3466, file: !1459, line: 173, baseType: !139, size: 16, offset: 48)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !3381, file: !1459, line: 263, baseType: !3466, size: 64, offset: 4032)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3381, file: !1459, line: 267, baseType: !94, size: 32, offset: 4096)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !3381, file: !1459, line: 268, baseType: !94, size: 32, offset: 4128)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !3381, file: !1459, line: 268, baseType: !94, size: 32, offset: 4160)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !3381, file: !1459, line: 269, baseType: !126, size: 8, offset: 4192)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !3381, file: !1459, line: 269, baseType: !126, size: 8, offset: 4200)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3381, file: !1459, line: 271, baseType: !1740, size: 16, offset: 4208)
!3480 = !DILocation(line: 3550, column: 9, scope: !3373)
!3481 = !DILocation(line: 3550, column: 13, scope: !3373)
!3482 = !DILocation(line: 3550, column: 17, scope: !3373)
!3483 = !DILocalVariable(name: "sb", scope: !3373, file: !3, line: 3551, type: !2192)
!3484 = !DILocation(line: 3551, column: 12, scope: !3373)
!3485 = !DILocalVariable(name: "bp", scope: !3373, file: !3, line: 3552, type: !2386)
!3486 = !DILocation(line: 3552, column: 13, scope: !3373)
!3487 = !DILocalVariable(name: "bs", scope: !3373, file: !3, line: 3553, type: !2948)
!3488 = !DILocation(line: 3553, column: 14, scope: !3373)
!3489 = !DILocalVariable(name: "nu", scope: !3373, file: !3, line: 3554, type: !3490)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !1459, line: 166, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !1459, line: 147, size: 704, elements: !3493)
!3493 = !{!3494, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3534, !3535, !3536}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3492, file: !1459, line: 148, baseType: !3495, size: 64)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3492, file: !1459, line: 148, baseType: !3495, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3492, file: !1459, line: 149, baseType: !139, size: 16, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3492, file: !1459, line: 150, baseType: !139, size: 16, offset: 144)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3492, file: !1459, line: 151, baseType: !139, size: 16, offset: 160)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3492, file: !1459, line: 151, baseType: !139, size: 16, offset: 176)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !3492, file: !1459, line: 152, baseType: !92, size: 32, offset: 192)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !3492, file: !1459, line: 152, baseType: !92, size: 32, offset: 224)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3492, file: !1459, line: 153, baseType: !270, size: 32, offset: 256)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !3492, file: !1459, line: 154, baseType: !139, size: 16, offset: 288)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !3492, file: !1459, line: 154, baseType: !139, size: 16, offset: 304)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !3492, file: !1459, line: 155, baseType: !139, size: 16, offset: 320)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !3492, file: !1459, line: 155, baseType: !139, size: 16, offset: 336)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !3492, file: !1459, line: 156, baseType: !139, size: 16, offset: 352)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !3492, file: !1459, line: 156, baseType: !139, size: 16, offset: 368)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !3492, file: !1459, line: 158, baseType: !937, size: 64, offset: 384)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !3492, file: !1459, line: 158, baseType: !937, size: 64, offset: 448)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3492, file: !1459, line: 159, baseType: !3227, size: 64, offset: 512)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !3492, file: !1459, line: 160, baseType: !3514, size: 64, offset: 576)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1459, line: 133, baseType: !3516)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1459, line: 117, size: 576, elements: !3517)
!3517 = !{!3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3516, file: !1459, line: 118, baseType: !904, size: 288)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3516, file: !1459, line: 119, baseType: !94, size: 32, offset: 288)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3516, file: !1459, line: 119, baseType: !94, size: 32, offset: 320)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3516, file: !1459, line: 119, baseType: !94, size: 32, offset: 352)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3516, file: !1459, line: 121, baseType: !126, size: 8, offset: 384)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3516, file: !1459, line: 123, baseType: !126, size: 8, offset: 392)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3516, file: !1459, line: 123, baseType: !126, size: 8, offset: 400)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3516, file: !1459, line: 124, baseType: !126, size: 8, offset: 408)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !3516, file: !1459, line: 124, baseType: !126, size: 8, offset: 416)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !3516, file: !1459, line: 124, baseType: !126, size: 8, offset: 424)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3516, file: !1459, line: 126, baseType: !126, size: 8, offset: 432)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !3516, file: !1459, line: 128, baseType: !126, size: 8, offset: 440)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3516, file: !1459, line: 129, baseType: !94, size: 32, offset: 448)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !3516, file: !1459, line: 130, baseType: !94, size: 32, offset: 480)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3516, file: !1459, line: 130, baseType: !94, size: 32, offset: 512)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3516, file: !1459, line: 132, baseType: !3212, size: 32, offset: 544)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !3492, file: !1459, line: 162, baseType: !139, size: 16, offset: 640)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !3492, file: !1459, line: 163, baseType: !139, size: 16, offset: 656)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !3492, file: !1459, line: 165, baseType: !92, size: 32, offset: 672)
!3537 = !DILocation(line: 3554, column: 8, scope: !3373)
!3538 = !DILocalVariable(name: "bezt", scope: !3373, file: !3, line: 3555, type: !3514)
!3539 = !DILocation(line: 3555, column: 13, scope: !3373)
!3540 = !DILocalVariable(name: "bpnt", scope: !3373, file: !3, line: 3556, type: !3227)
!3541 = !DILocation(line: 3556, column: 10, scope: !3373)
!3542 = !DILocalVariable(name: "a", scope: !3373, file: !3, line: 3557, type: !92)
!3543 = !DILocation(line: 3557, column: 6, scope: !3373)
!3544 = !DILocalVariable(name: "curindex", scope: !3373, file: !3, line: 3557, type: !92)
!3545 = !DILocation(line: 3557, column: 9, scope: !3373)
!3546 = !DILocalVariable(name: "totvert", scope: !3373, file: !3, line: 3558, type: !92)
!3547 = !DILocation(line: 3558, column: 6, scope: !3373)
!3548 = !DILocalVariable(name: "totspring", scope: !3373, file: !3, line: 3558, type: !92)
!3549 = !DILocation(line: 3558, column: 15, scope: !3373)
!3550 = !DILocalVariable(name: "setgoal", scope: !3373, file: !3, line: 3558, type: !92)
!3551 = !DILocation(line: 3558, column: 30, scope: !3373)
!3552 = !DILocation(line: 3560, column: 37, scope: !3373)
!3553 = !DILocation(line: 3560, column: 41, scope: !3373)
!3554 = !DILocation(line: 3560, column: 11, scope: !3373)
!3555 = !DILocation(line: 3560, column: 9, scope: !3373)
!3556 = !DILocation(line: 3562, column: 6, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 3562, column: 6)
!3558 = !DILocation(line: 3562, column: 10, scope: !3557)
!3559 = !DILocation(line: 3562, column: 19, scope: !3557)
!3560 = !DILocation(line: 3562, column: 6, scope: !3373)
!3561 = !DILocation(line: 3563, column: 7, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 3563, column: 7)
!3563 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 3562, column: 34)
!3564 = !DILocation(line: 3563, column: 11, scope: !3562)
!3565 = !DILocation(line: 3563, column: 15, scope: !3562)
!3566 = !DILocation(line: 3563, column: 7, scope: !3563)
!3567 = !DILocation(line: 3564, column: 15, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 3563, column: 27)
!3569 = !DILocation(line: 3564, column: 40, scope: !3568)
!3570 = !DILocation(line: 3564, column: 44, scope: !3568)
!3571 = !DILocation(line: 3564, column: 25, scope: !3568)
!3572 = !DILocation(line: 3564, column: 23, scope: !3568)
!3573 = !DILocation(line: 3564, column: 13, scope: !3568)
!3574 = !DILocation(line: 3565, column: 3, scope: !3568)
!3575 = !DILocation(line: 3566, column: 2, scope: !3563)
!3576 = !DILocation(line: 3569, column: 17, scope: !3373)
!3577 = !DILocation(line: 3569, column: 24, scope: !3373)
!3578 = !DILocation(line: 3569, column: 28, scope: !3373)
!3579 = !DILocation(line: 3569, column: 37, scope: !3373)
!3580 = !DILocation(line: 3569, column: 2, scope: !3373)
!3581 = !DILocation(line: 3570, column: 6, scope: !3373)
!3582 = !DILocation(line: 3570, column: 10, scope: !3373)
!3583 = !DILocation(line: 3570, column: 4, scope: !3373)
!3584 = !DILocation(line: 3573, column: 6, scope: !3373)
!3585 = !DILocation(line: 3573, column: 10, scope: !3373)
!3586 = !DILocation(line: 3573, column: 4, scope: !3373)
!3587 = !DILocation(line: 3574, column: 6, scope: !3373)
!3588 = !DILocation(line: 3574, column: 10, scope: !3373)
!3589 = !DILocation(line: 3574, column: 4, scope: !3373)
!3590 = !DILocation(line: 3579, column: 6, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 3579, column: 6)
!3592 = !DILocation(line: 3579, column: 10, scope: !3591)
!3593 = !DILocation(line: 3579, column: 19, scope: !3591)
!3594 = !DILocation(line: 3579, column: 6, scope: !3373)
!3595 = !DILocation(line: 3580, column: 10, scope: !3591)
!3596 = !DILocation(line: 3580, column: 3, scope: !3591)
!3597 = !DILocation(line: 3582, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 3582, column: 2)
!3599 = !DILocation(line: 3582, column: 15, scope: !3598)
!3600 = !DILocation(line: 3582, column: 20, scope: !3598)
!3601 = !DILocation(line: 3582, column: 9, scope: !3598)
!3602 = !DILocation(line: 3582, column: 7, scope: !3598)
!3603 = !DILocation(line: 3582, column: 27, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 3582, column: 2)
!3605 = !DILocation(line: 3582, column: 2, scope: !3598)
!3606 = !DILocation(line: 3583, column: 7, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 3583, column: 7)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 3582, column: 45)
!3609 = !DILocation(line: 3583, column: 11, scope: !3607)
!3610 = !DILocation(line: 3583, column: 7, scope: !3608)
!3611 = !DILocation(line: 3588, column: 14, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 3588, column: 4)
!3613 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 3583, column: 17)
!3614 = !DILocation(line: 3588, column: 18, scope: !3612)
!3615 = !DILocation(line: 3588, column: 13, scope: !3612)
!3616 = !DILocation(line: 3588, column: 25, scope: !3612)
!3617 = !DILocation(line: 3588, column: 9, scope: !3612)
!3618 = !DILocation(line: 3588, column: 29, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 3588, column: 4)
!3620 = !DILocation(line: 3588, column: 31, scope: !3619)
!3621 = !DILocation(line: 3588, column: 35, scope: !3619)
!3622 = !DILocation(line: 3588, column: 30, scope: !3619)
!3623 = !DILocation(line: 3588, column: 4, scope: !3612)
!3624 = !DILocation(line: 3589, column: 9, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 3589, column: 9)
!3626 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 3588, column: 75)
!3627 = !DILocation(line: 3589, column: 9, scope: !3626)
!3628 = !DILocation(line: 3590, column: 16, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 3589, column: 18)
!3630 = !DILocation(line: 3590, column: 22, scope: !3629)
!3631 = !DILocation(line: 3590, column: 6, scope: !3629)
!3632 = !DILocation(line: 3590, column: 10, scope: !3629)
!3633 = !DILocation(line: 3590, column: 14, scope: !3629)
!3634 = !DILocation(line: 3593, column: 20, scope: !3629)
!3635 = !DILocation(line: 3593, column: 24, scope: !3629)
!3636 = !DILocation(line: 3593, column: 7, scope: !3629)
!3637 = !DILocation(line: 3593, column: 9, scope: !3629)
!3638 = !DILocation(line: 3593, column: 14, scope: !3629)
!3639 = !DILocation(line: 3593, column: 18, scope: !3629)
!3640 = !DILocation(line: 3594, column: 20, scope: !3629)
!3641 = !DILocation(line: 3594, column: 24, scope: !3629)
!3642 = !DILocation(line: 3594, column: 7, scope: !3629)
!3643 = !DILocation(line: 3594, column: 9, scope: !3629)
!3644 = !DILocation(line: 3594, column: 14, scope: !3629)
!3645 = !DILocation(line: 3594, column: 18, scope: !3629)
!3646 = !DILocation(line: 3596, column: 7, scope: !3629)
!3647 = !DILocation(line: 3596, column: 9, scope: !3629)
!3648 = !DILocation(line: 3596, column: 14, scope: !3629)
!3649 = !DILocation(line: 3596, column: 23, scope: !3629)
!3650 = !DILocation(line: 3597, column: 7, scope: !3629)
!3651 = !DILocation(line: 3597, column: 9, scope: !3629)
!3652 = !DILocation(line: 3597, column: 14, scope: !3629)
!3653 = !DILocation(line: 3597, column: 23, scope: !3629)
!3654 = !DILocation(line: 3598, column: 5, scope: !3629)
!3655 = !DILocation(line: 3600, column: 9, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 3600, column: 9)
!3657 = !DILocation(line: 3600, column: 9, scope: !3626)
!3658 = !DILocation(line: 3601, column: 10, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 3601, column: 10)
!3660 = distinct !DILexicalBlock(scope: !3656, file: !3, line: 3600, column: 20)
!3661 = !DILocation(line: 3601, column: 11, scope: !3659)
!3662 = !DILocation(line: 3601, column: 10, scope: !3660)
!3663 = !DILocation(line: 3602, column: 15, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 3601, column: 15)
!3665 = !DILocation(line: 3602, column: 23, scope: !3664)
!3666 = !DILocation(line: 3602, column: 7, scope: !3664)
!3667 = !DILocation(line: 3602, column: 11, scope: !3664)
!3668 = !DILocation(line: 3602, column: 13, scope: !3664)
!3669 = !DILocation(line: 3603, column: 15, scope: !3664)
!3670 = !DILocation(line: 3603, column: 7, scope: !3664)
!3671 = !DILocation(line: 3603, column: 11, scope: !3664)
!3672 = !DILocation(line: 3603, column: 13, scope: !3664)
!3673 = !DILocation(line: 3604, column: 7, scope: !3664)
!3674 = !DILocation(line: 3604, column: 11, scope: !3664)
!3675 = !DILocation(line: 3604, column: 21, scope: !3664)
!3676 = !DILocation(line: 3605, column: 28, scope: !3664)
!3677 = !DILocation(line: 3605, column: 32, scope: !3664)
!3678 = !DILocation(line: 3605, column: 37, scope: !3664)
!3679 = !DILocation(line: 3605, column: 27, scope: !3664)
!3680 = !DILocation(line: 3605, column: 45, scope: !3664)
!3681 = !DILocation(line: 3605, column: 51, scope: !3664)
!3682 = !DILocation(line: 3605, column: 59, scope: !3664)
!3683 = !DILocation(line: 3605, column: 17, scope: !3664)
!3684 = !DILocation(line: 3605, column: 7, scope: !3664)
!3685 = !DILocation(line: 3605, column: 11, scope: !3664)
!3686 = !DILocation(line: 3605, column: 15, scope: !3664)
!3687 = !DILocation(line: 3606, column: 9, scope: !3664)
!3688 = !DILocation(line: 3607, column: 6, scope: !3664)
!3689 = !DILocation(line: 3608, column: 14, scope: !3660)
!3690 = !DILocation(line: 3608, column: 6, scope: !3660)
!3691 = !DILocation(line: 3608, column: 10, scope: !3660)
!3692 = !DILocation(line: 3608, column: 12, scope: !3660)
!3693 = !DILocation(line: 3609, column: 14, scope: !3660)
!3694 = !DILocation(line: 3609, column: 22, scope: !3660)
!3695 = !DILocation(line: 3609, column: 6, scope: !3660)
!3696 = !DILocation(line: 3609, column: 10, scope: !3660)
!3697 = !DILocation(line: 3609, column: 12, scope: !3660)
!3698 = !DILocation(line: 3610, column: 6, scope: !3660)
!3699 = !DILocation(line: 3610, column: 10, scope: !3660)
!3700 = !DILocation(line: 3610, column: 20, scope: !3660)
!3701 = !DILocation(line: 3611, column: 26, scope: !3660)
!3702 = !DILocation(line: 3611, column: 32, scope: !3660)
!3703 = !DILocation(line: 3611, column: 40, scope: !3660)
!3704 = !DILocation(line: 3611, column: 46, scope: !3660)
!3705 = !DILocation(line: 3611, column: 54, scope: !3660)
!3706 = !DILocation(line: 3611, column: 16, scope: !3660)
!3707 = !DILocation(line: 3611, column: 6, scope: !3660)
!3708 = !DILocation(line: 3611, column: 10, scope: !3660)
!3709 = !DILocation(line: 3611, column: 14, scope: !3660)
!3710 = !DILocation(line: 3612, column: 8, scope: !3660)
!3711 = !DILocation(line: 3614, column: 14, scope: !3660)
!3712 = !DILocation(line: 3614, column: 22, scope: !3660)
!3713 = !DILocation(line: 3614, column: 6, scope: !3660)
!3714 = !DILocation(line: 3614, column: 10, scope: !3660)
!3715 = !DILocation(line: 3614, column: 12, scope: !3660)
!3716 = !DILocation(line: 3615, column: 14, scope: !3660)
!3717 = !DILocation(line: 3615, column: 22, scope: !3660)
!3718 = !DILocation(line: 3615, column: 6, scope: !3660)
!3719 = !DILocation(line: 3615, column: 10, scope: !3660)
!3720 = !DILocation(line: 3615, column: 12, scope: !3660)
!3721 = !DILocation(line: 3616, column: 6, scope: !3660)
!3722 = !DILocation(line: 3616, column: 10, scope: !3660)
!3723 = !DILocation(line: 3616, column: 20, scope: !3660)
!3724 = !DILocation(line: 3617, column: 26, scope: !3660)
!3725 = !DILocation(line: 3617, column: 32, scope: !3660)
!3726 = !DILocation(line: 3617, column: 40, scope: !3660)
!3727 = !DILocation(line: 3617, column: 46, scope: !3660)
!3728 = !DILocation(line: 3617, column: 54, scope: !3660)
!3729 = !DILocation(line: 3617, column: 16, scope: !3660)
!3730 = !DILocation(line: 3617, column: 6, scope: !3660)
!3731 = !DILocation(line: 3617, column: 10, scope: !3660)
!3732 = !DILocation(line: 3617, column: 14, scope: !3660)
!3733 = !DILocation(line: 3618, column: 8, scope: !3660)
!3734 = !DILocation(line: 3619, column: 5, scope: !3660)
!3735 = !DILocation(line: 3620, column: 4, scope: !3626)
!3736 = !DILocation(line: 3588, column: 43, scope: !3619)
!3737 = !DILocation(line: 3588, column: 51, scope: !3619)
!3738 = !DILocation(line: 3588, column: 57, scope: !3619)
!3739 = !DILocation(line: 3588, column: 70, scope: !3619)
!3740 = !DILocation(line: 3588, column: 4, scope: !3619)
!3741 = distinct !{!3741, !3623, !3742}
!3742 = !DILocation(line: 3620, column: 4, scope: !3612)
!3743 = !DILocation(line: 3621, column: 3, scope: !3613)
!3744 = !DILocation(line: 3623, column: 14, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 3623, column: 4)
!3746 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 3622, column: 8)
!3747 = !DILocation(line: 3623, column: 18, scope: !3745)
!3748 = !DILocation(line: 3623, column: 13, scope: !3745)
!3749 = !DILocation(line: 3623, column: 23, scope: !3745)
!3750 = !DILocation(line: 3623, column: 9, scope: !3745)
!3751 = !DILocation(line: 3623, column: 27, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 3623, column: 4)
!3753 = !DILocation(line: 3623, column: 29, scope: !3752)
!3754 = !DILocation(line: 3623, column: 33, scope: !3752)
!3755 = !DILocation(line: 3623, column: 39, scope: !3752)
!3756 = !DILocation(line: 3623, column: 43, scope: !3752)
!3757 = !DILocation(line: 3623, column: 38, scope: !3752)
!3758 = !DILocation(line: 3623, column: 28, scope: !3752)
!3759 = !DILocation(line: 3623, column: 4, scope: !3745)
!3760 = !DILocation(line: 3624, column: 9, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 3624, column: 9)
!3762 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 3623, column: 81)
!3763 = !DILocation(line: 3624, column: 9, scope: !3762)
!3764 = !DILocation(line: 3625, column: 16, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 3624, column: 18)
!3766 = !DILocation(line: 3625, column: 22, scope: !3765)
!3767 = !DILocation(line: 3625, column: 6, scope: !3765)
!3768 = !DILocation(line: 3625, column: 10, scope: !3765)
!3769 = !DILocation(line: 3625, column: 14, scope: !3765)
!3770 = !DILocation(line: 3626, column: 5, scope: !3765)
!3771 = !DILocation(line: 3627, column: 9, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 3627, column: 9)
!3773 = !DILocation(line: 3627, column: 19, scope: !3772)
!3774 = !DILocation(line: 3627, column: 22, scope: !3772)
!3775 = !DILocation(line: 3627, column: 23, scope: !3772)
!3776 = !DILocation(line: 3627, column: 9, scope: !3762)
!3777 = !DILocation(line: 3628, column: 14, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 3627, column: 27)
!3779 = !DILocation(line: 3628, column: 22, scope: !3778)
!3780 = !DILocation(line: 3628, column: 6, scope: !3778)
!3781 = !DILocation(line: 3628, column: 10, scope: !3778)
!3782 = !DILocation(line: 3628, column: 12, scope: !3778)
!3783 = !DILocation(line: 3629, column: 14, scope: !3778)
!3784 = !DILocation(line: 3629, column: 6, scope: !3778)
!3785 = !DILocation(line: 3629, column: 10, scope: !3778)
!3786 = !DILocation(line: 3629, column: 12, scope: !3778)
!3787 = !DILocation(line: 3630, column: 6, scope: !3778)
!3788 = !DILocation(line: 3630, column: 10, scope: !3778)
!3789 = !DILocation(line: 3630, column: 20, scope: !3778)
!3790 = !DILocation(line: 3631, column: 27, scope: !3778)
!3791 = !DILocation(line: 3631, column: 31, scope: !3778)
!3792 = !DILocation(line: 3631, column: 36, scope: !3778)
!3793 = !DILocation(line: 3631, column: 26, scope: !3778)
!3794 = !DILocation(line: 3631, column: 41, scope: !3778)
!3795 = !DILocation(line: 3631, column: 47, scope: !3778)
!3796 = !DILocation(line: 3631, column: 52, scope: !3778)
!3797 = !DILocation(line: 3631, column: 15, scope: !3778)
!3798 = !DILocation(line: 3631, column: 6, scope: !3778)
!3799 = !DILocation(line: 3631, column: 10, scope: !3778)
!3800 = !DILocation(line: 3631, column: 13, scope: !3778)
!3801 = !DILocation(line: 3632, column: 8, scope: !3778)
!3802 = !DILocation(line: 3633, column: 5, scope: !3778)
!3803 = !DILocation(line: 3634, column: 4, scope: !3762)
!3804 = !DILocation(line: 3623, column: 51, scope: !3752)
!3805 = !DILocation(line: 3623, column: 59, scope: !3752)
!3806 = !DILocation(line: 3623, column: 65, scope: !3752)
!3807 = !DILocation(line: 3623, column: 77, scope: !3752)
!3808 = !DILocation(line: 3623, column: 4, scope: !3752)
!3809 = distinct !{!3809, !3759, !3810}
!3810 = !DILocation(line: 3634, column: 4, scope: !3745)
!3811 = !DILocation(line: 3636, column: 2, scope: !3608)
!3812 = !DILocation(line: 3582, column: 35, scope: !3604)
!3813 = !DILocation(line: 3582, column: 39, scope: !3604)
!3814 = !DILocation(line: 3582, column: 33, scope: !3604)
!3815 = !DILocation(line: 3582, column: 2, scope: !3604)
!3816 = distinct !{!3816, !3605, !3817}
!3817 = !DILocation(line: 3636, column: 2, scope: !3598)
!3818 = !DILocation(line: 3638, column: 6, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 3638, column: 6)
!3820 = !DILocation(line: 3638, column: 6, scope: !3373)
!3821 = !DILocation(line: 3639, column: 24, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 3638, column: 17)
!3823 = !DILocation(line: 3639, column: 3, scope: !3822)
!3824 = !DILocation(line: 3640, column: 7, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 3640, column: 7)
!3826 = !DILocation(line: 3640, column: 11, scope: !3825)
!3827 = !DILocation(line: 3640, column: 20, scope: !3825)
!3828 = !DILocation(line: 3640, column: 7, scope: !3822)
!3829 = !DILocation(line: 3640, column: 61, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 3640, column: 34)
!3831 = !DILocation(line: 3640, column: 35, scope: !3830)
!3832 = !DILocation(line: 3640, column: 65, scope: !3830)
!3833 = !DILocation(line: 3641, column: 2, scope: !3822)
!3834 = !DILocation(line: 3642, column: 1, scope: !3373)
!3835 = distinct !DISubprogram(name: "renew_softbody", scope: !3, file: !3, line: 849, type: !3836, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{null, !2151, !2154, !92, !92}
!3838 = !DILocalVariable(name: "scene", arg: 1, scope: !3835, file: !3, line: 849, type: !2151)
!3839 = !DILocation(line: 849, column: 35, scope: !3835)
!3840 = !DILocalVariable(name: "ob", arg: 2, scope: !3835, file: !3, line: 849, type: !2154)
!3841 = !DILocation(line: 849, column: 50, scope: !3835)
!3842 = !DILocalVariable(name: "totpoint", arg: 3, scope: !3835, file: !3, line: 849, type: !92)
!3843 = !DILocation(line: 849, column: 58, scope: !3835)
!3844 = !DILocalVariable(name: "totspring", arg: 4, scope: !3835, file: !3, line: 849, type: !92)
!3845 = !DILocation(line: 849, column: 72, scope: !3835)
!3846 = !DILocalVariable(name: "sb", scope: !3835, file: !3, line: 851, type: !2192)
!3847 = !DILocation(line: 851, column: 12, scope: !3835)
!3848 = !DILocalVariable(name: "i", scope: !3835, file: !3, line: 852, type: !92)
!3849 = !DILocation(line: 852, column: 6, scope: !3835)
!3850 = !DILocalVariable(name: "softflag", scope: !3835, file: !3, line: 853, type: !139)
!3851 = !DILocation(line: 853, column: 8, scope: !3835)
!3852 = !DILocation(line: 854, column: 6, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 854, column: 6)
!3854 = !DILocation(line: 854, column: 10, scope: !3853)
!3855 = !DILocation(line: 854, column: 14, scope: !3853)
!3856 = !DILocation(line: 854, column: 6, scope: !3835)
!3857 = !DILocation(line: 854, column: 38, scope: !3853)
!3858 = !DILocation(line: 854, column: 32, scope: !3853)
!3859 = !DILocation(line: 854, column: 22, scope: !3853)
!3860 = !DILocation(line: 854, column: 26, scope: !3853)
!3861 = !DILocation(line: 854, column: 30, scope: !3853)
!3862 = !DILocation(line: 855, column: 28, scope: !3853)
!3863 = !DILocation(line: 855, column: 32, scope: !3853)
!3864 = !DILocation(line: 855, column: 7, scope: !3853)
!3865 = !DILocation(line: 856, column: 6, scope: !3835)
!3866 = !DILocation(line: 856, column: 10, scope: !3835)
!3867 = !DILocation(line: 856, column: 4, scope: !3835)
!3868 = !DILocation(line: 857, column: 11, scope: !3835)
!3869 = !DILocation(line: 857, column: 15, scope: !3835)
!3870 = !DILocation(line: 857, column: 10, scope: !3835)
!3871 = !DILocation(line: 859, column: 6, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 859, column: 6)
!3873 = !DILocation(line: 859, column: 6, scope: !3835)
!3874 = !DILocation(line: 860, column: 17, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 859, column: 16)
!3876 = !DILocation(line: 860, column: 3, scope: !3875)
!3877 = !DILocation(line: 860, column: 7, scope: !3875)
!3878 = !DILocation(line: 860, column: 15, scope: !3875)
!3879 = !DILocation(line: 861, column: 18, scope: !3875)
!3880 = !DILocation(line: 861, column: 3, scope: !3875)
!3881 = !DILocation(line: 861, column: 7, scope: !3875)
!3882 = !DILocation(line: 861, column: 16, scope: !3875)
!3883 = !DILocation(line: 863, column: 15, scope: !3875)
!3884 = !DILocation(line: 863, column: 27, scope: !3875)
!3885 = !DILocation(line: 863, column: 35, scope: !3875)
!3886 = !DILocation(line: 863, column: 3, scope: !3875)
!3887 = !DILocation(line: 863, column: 7, scope: !3875)
!3888 = !DILocation(line: 863, column: 13, scope: !3875)
!3889 = !DILocation(line: 864, column: 7, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 864, column: 7)
!3891 = !DILocation(line: 864, column: 7, scope: !3875)
!3892 = !DILocation(line: 865, column: 17, scope: !3890)
!3893 = !DILocation(line: 865, column: 29, scope: !3890)
!3894 = !DILocation(line: 865, column: 38, scope: !3890)
!3895 = !DILocation(line: 865, column: 4, scope: !3890)
!3896 = !DILocation(line: 865, column: 8, scope: !3890)
!3897 = !DILocation(line: 865, column: 15, scope: !3890)
!3898 = !DILocation(line: 868, column: 9, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 868, column: 3)
!3900 = !DILocation(line: 868, column: 8, scope: !3899)
!3901 = !DILocation(line: 868, column: 13, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 868, column: 3)
!3903 = !DILocation(line: 868, column: 15, scope: !3902)
!3904 = !DILocation(line: 868, column: 14, scope: !3902)
!3905 = !DILocation(line: 868, column: 3, scope: !3899)
!3906 = !DILocalVariable(name: "bp", scope: !3907, file: !3, line: 869, type: !2386)
!3907 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 868, column: 30)
!3908 = !DILocation(line: 869, column: 15, scope: !3907)
!3909 = !DILocation(line: 869, column: 21, scope: !3907)
!3910 = !DILocation(line: 869, column: 25, scope: !3907)
!3911 = !DILocation(line: 869, column: 32, scope: !3907)
!3912 = !DILocation(line: 875, column: 8, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 875, column: 8)
!3914 = !DILocation(line: 875, column: 17, scope: !3913)
!3915 = !DILocation(line: 875, column: 8, scope: !3907)
!3916 = !DILocation(line: 876, column: 15, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 875, column: 31)
!3918 = !DILocation(line: 876, column: 19, scope: !3917)
!3919 = !DILocation(line: 876, column: 5, scope: !3917)
!3920 = !DILocation(line: 876, column: 9, scope: !3917)
!3921 = !DILocation(line: 876, column: 13, scope: !3917)
!3922 = !DILocation(line: 877, column: 4, scope: !3917)
!3923 = !DILocation(line: 879, column: 5, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 878, column: 9)
!3925 = !DILocation(line: 879, column: 9, scope: !3924)
!3926 = !DILocation(line: 879, column: 13, scope: !3924)
!3927 = !DILocation(line: 883, column: 4, scope: !3907)
!3928 = !DILocation(line: 883, column: 8, scope: !3907)
!3929 = !DILocation(line: 883, column: 18, scope: !3907)
!3930 = !DILocation(line: 884, column: 4, scope: !3907)
!3931 = !DILocation(line: 884, column: 8, scope: !3907)
!3932 = !DILocation(line: 884, column: 15, scope: !3907)
!3933 = !DILocation(line: 885, column: 4, scope: !3907)
!3934 = !DILocation(line: 885, column: 8, scope: !3907)
!3935 = !DILocation(line: 885, column: 14, scope: !3907)
!3936 = !DILocation(line: 886, column: 4, scope: !3907)
!3937 = !DILocation(line: 886, column: 8, scope: !3907)
!3938 = !DILocation(line: 886, column: 15, scope: !3907)
!3939 = !DILocation(line: 887, column: 4, scope: !3907)
!3940 = !DILocation(line: 887, column: 8, scope: !3907)
!3941 = !DILocation(line: 887, column: 15, scope: !3907)
!3942 = !DILocation(line: 888, column: 4, scope: !3907)
!3943 = !DILocation(line: 888, column: 8, scope: !3907)
!3944 = !DILocation(line: 888, column: 16, scope: !3907)
!3945 = !DILocation(line: 889, column: 4, scope: !3907)
!3946 = !DILocation(line: 889, column: 8, scope: !3907)
!3947 = !DILocation(line: 889, column: 17, scope: !3907)
!3948 = !DILocation(line: 890, column: 4, scope: !3907)
!3949 = !DILocation(line: 890, column: 8, scope: !3907)
!3950 = !DILocation(line: 890, column: 21, scope: !3907)
!3951 = !DILocation(line: 891, column: 4, scope: !3907)
!3952 = !DILocation(line: 891, column: 8, scope: !3907)
!3953 = !DILocation(line: 891, column: 13, scope: !3907)
!3954 = !DILocation(line: 892, column: 3, scope: !3907)
!3955 = !DILocation(line: 868, column: 26, scope: !3902)
!3956 = !DILocation(line: 868, column: 3, scope: !3902)
!3957 = distinct !{!3957, !3905, !3958}
!3958 = !DILocation(line: 892, column: 3, scope: !3899)
!3959 = !DILocation(line: 893, column: 2, scope: !3875)
!3960 = !DILocation(line: 894, column: 1, scope: !3835)
!3961 = distinct !DISubprogram(name: "softbody_update_positions", scope: !3, file: !3, line: 3776, type: !3962, scopeLine: 3777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{null, !2154, !2192, !2478, !92}
!3964 = !DILocalVariable(name: "ob", arg: 1, scope: !3961, file: !3, line: 3776, type: !2154)
!3965 = !DILocation(line: 3776, column: 47, scope: !3961)
!3966 = !DILocalVariable(name: "sb", arg: 2, scope: !3961, file: !3, line: 3776, type: !2192)
!3967 = !DILocation(line: 3776, column: 61, scope: !3961)
!3968 = !DILocalVariable(name: "vertexCos", arg: 3, scope: !3961, file: !3, line: 3776, type: !2478)
!3969 = !DILocation(line: 3776, column: 73, scope: !3961)
!3970 = !DILocalVariable(name: "numVerts", arg: 4, scope: !3961, file: !3, line: 3776, type: !92)
!3971 = !DILocation(line: 3776, column: 92, scope: !3961)
!3972 = !DILocalVariable(name: "bp", scope: !3961, file: !3, line: 3778, type: !2386)
!3973 = !DILocation(line: 3778, column: 13, scope: !3961)
!3974 = !DILocalVariable(name: "a", scope: !3961, file: !3, line: 3779, type: !92)
!3975 = !DILocation(line: 3779, column: 6, scope: !3961)
!3976 = !DILocation(line: 3781, column: 7, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 3781, column: 6)
!3978 = !DILocation(line: 3781, column: 10, scope: !3977)
!3979 = !DILocation(line: 3781, column: 14, scope: !3977)
!3980 = !DILocation(line: 3781, column: 18, scope: !3977)
!3981 = !DILocation(line: 3781, column: 6, scope: !3961)
!3982 = !DILocation(line: 3782, column: 3, scope: !3977)
!3983 = !DILocation(line: 3784, column: 8, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 3784, column: 2)
!3985 = !DILocation(line: 3784, column: 15, scope: !3984)
!3986 = !DILocation(line: 3784, column: 19, scope: !3984)
!3987 = !DILocation(line: 3784, column: 14, scope: !3984)
!3988 = !DILocation(line: 3784, column: 7, scope: !3984)
!3989 = !DILocation(line: 3784, column: 27, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3784, column: 2)
!3991 = !DILocation(line: 3784, column: 29, scope: !3990)
!3992 = !DILocation(line: 3784, column: 28, scope: !3990)
!3993 = !DILocation(line: 3784, column: 2, scope: !3984)
!3994 = !DILocation(line: 3786, column: 14, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 3784, column: 50)
!3996 = !DILocation(line: 3786, column: 18, scope: !3995)
!3997 = !DILocation(line: 3786, column: 25, scope: !3995)
!3998 = !DILocation(line: 3786, column: 29, scope: !3995)
!3999 = !DILocation(line: 3786, column: 3, scope: !3995)
!4000 = !DILocation(line: 3788, column: 14, scope: !3995)
!4001 = !DILocation(line: 3788, column: 18, scope: !3995)
!4002 = !DILocation(line: 3788, column: 25, scope: !3995)
!4003 = !DILocation(line: 3788, column: 35, scope: !3995)
!4004 = !DILocation(line: 3788, column: 3, scope: !3995)
!4005 = !DILocation(line: 3790, column: 13, scope: !3995)
!4006 = !DILocation(line: 3790, column: 17, scope: !3995)
!4007 = !DILocation(line: 3790, column: 24, scope: !3995)
!4008 = !DILocation(line: 3790, column: 28, scope: !3995)
!4009 = !DILocation(line: 3790, column: 3, scope: !3995)
!4010 = !DILocation(line: 3793, column: 14, scope: !3995)
!4011 = !DILocation(line: 3793, column: 18, scope: !3995)
!4012 = !DILocation(line: 3793, column: 25, scope: !3995)
!4013 = !DILocation(line: 3793, column: 29, scope: !3995)
!4014 = !DILocation(line: 3793, column: 3, scope: !3995)
!4015 = !DILocation(line: 3794, column: 2, scope: !3995)
!4016 = !DILocation(line: 3784, column: 40, scope: !3990)
!4017 = !DILocation(line: 3784, column: 46, scope: !3990)
!4018 = !DILocation(line: 3784, column: 2, scope: !3990)
!4019 = distinct !{!4019, !3993, !4020}
!4020 = !DILocation(line: 3794, column: 2, scope: !3984)
!4021 = !DILocation(line: 3795, column: 1, scope: !3961)
!4022 = distinct !DISubprogram(name: "softbody_reset", scope: !3, file: !3, line: 3846, type: !3962, scopeLine: 3847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4023 = !DILocalVariable(name: "ob", arg: 1, scope: !4022, file: !3, line: 3846, type: !2154)
!4024 = !DILocation(line: 3846, column: 36, scope: !4022)
!4025 = !DILocalVariable(name: "sb", arg: 2, scope: !4022, file: !3, line: 3846, type: !2192)
!4026 = !DILocation(line: 3846, column: 50, scope: !4022)
!4027 = !DILocalVariable(name: "vertexCos", arg: 3, scope: !4022, file: !3, line: 3846, type: !2478)
!4028 = !DILocation(line: 3846, column: 62, scope: !4022)
!4029 = !DILocalVariable(name: "numVerts", arg: 4, scope: !4022, file: !3, line: 3846, type: !92)
!4030 = !DILocation(line: 3846, column: 81, scope: !4022)
!4031 = !DILocalVariable(name: "bp", scope: !4022, file: !3, line: 3848, type: !2386)
!4032 = !DILocation(line: 3848, column: 13, scope: !4022)
!4033 = !DILocalVariable(name: "a", scope: !4022, file: !3, line: 3849, type: !92)
!4034 = !DILocation(line: 3849, column: 6, scope: !4022)
!4035 = !DILocation(line: 3851, column: 8, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 3851, column: 2)
!4037 = !DILocation(line: 3851, column: 15, scope: !4036)
!4038 = !DILocation(line: 3851, column: 19, scope: !4036)
!4039 = !DILocation(line: 3851, column: 14, scope: !4036)
!4040 = !DILocation(line: 3851, column: 7, scope: !4036)
!4041 = !DILocation(line: 3851, column: 27, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3851, column: 2)
!4043 = !DILocation(line: 3851, column: 29, scope: !4042)
!4044 = !DILocation(line: 3851, column: 28, scope: !4042)
!4045 = !DILocation(line: 3851, column: 2, scope: !4036)
!4046 = !DILocation(line: 3852, column: 14, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 3851, column: 50)
!4048 = !DILocation(line: 3852, column: 18, scope: !4047)
!4049 = !DILocation(line: 3852, column: 23, scope: !4047)
!4050 = !DILocation(line: 3852, column: 33, scope: !4047)
!4051 = !DILocation(line: 3852, column: 3, scope: !4047)
!4052 = !DILocation(line: 3853, column: 13, scope: !4047)
!4053 = !DILocation(line: 3853, column: 17, scope: !4047)
!4054 = !DILocation(line: 3853, column: 24, scope: !4047)
!4055 = !DILocation(line: 3853, column: 28, scope: !4047)
!4056 = !DILocation(line: 3853, column: 3, scope: !4047)
!4057 = !DILocation(line: 3854, column: 14, scope: !4047)
!4058 = !DILocation(line: 3854, column: 18, scope: !4047)
!4059 = !DILocation(line: 3854, column: 25, scope: !4047)
!4060 = !DILocation(line: 3854, column: 29, scope: !4047)
!4061 = !DILocation(line: 3854, column: 3, scope: !4047)
!4062 = !DILocation(line: 3855, column: 14, scope: !4047)
!4063 = !DILocation(line: 3855, column: 18, scope: !4047)
!4064 = !DILocation(line: 3855, column: 25, scope: !4047)
!4065 = !DILocation(line: 3855, column: 29, scope: !4047)
!4066 = !DILocation(line: 3855, column: 3, scope: !4047)
!4067 = !DILocation(line: 3856, column: 14, scope: !4047)
!4068 = !DILocation(line: 3856, column: 18, scope: !4047)
!4069 = !DILocation(line: 3856, column: 25, scope: !4047)
!4070 = !DILocation(line: 3856, column: 29, scope: !4047)
!4071 = !DILocation(line: 3856, column: 3, scope: !4047)
!4072 = !DILocation(line: 3857, column: 29, scope: !4047)
!4073 = !DILocation(line: 3857, column: 33, scope: !4047)
!4074 = !DILocation(line: 3857, column: 40, scope: !4047)
!4075 = !DILocation(line: 3857, column: 16, scope: !4047)
!4076 = !DILocation(line: 3857, column: 20, scope: !4047)
!4077 = !DILocation(line: 3857, column: 27, scope: !4047)
!4078 = !DILocation(line: 3857, column: 3, scope: !4047)
!4079 = !DILocation(line: 3857, column: 7, scope: !4047)
!4080 = !DILocation(line: 3857, column: 14, scope: !4047)
!4081 = !DILocation(line: 3871, column: 14, scope: !4047)
!4082 = !DILocation(line: 3871, column: 18, scope: !4047)
!4083 = !DILocation(line: 3871, column: 27, scope: !4047)
!4084 = !DILocation(line: 3871, column: 31, scope: !4047)
!4085 = !DILocation(line: 3871, column: 3, scope: !4047)
!4086 = !DILocation(line: 3872, column: 14, scope: !4047)
!4087 = !DILocation(line: 3872, column: 18, scope: !4047)
!4088 = !DILocation(line: 3872, column: 27, scope: !4047)
!4089 = !DILocation(line: 3872, column: 31, scope: !4047)
!4090 = !DILocation(line: 3872, column: 3, scope: !4047)
!4091 = !DILocation(line: 3873, column: 14, scope: !4047)
!4092 = !DILocation(line: 3873, column: 18, scope: !4047)
!4093 = !DILocation(line: 3873, column: 26, scope: !4047)
!4094 = !DILocation(line: 3873, column: 30, scope: !4047)
!4095 = !DILocation(line: 3873, column: 3, scope: !4047)
!4096 = !DILocation(line: 3874, column: 14, scope: !4047)
!4097 = !DILocation(line: 3874, column: 18, scope: !4047)
!4098 = !DILocation(line: 3874, column: 26, scope: !4047)
!4099 = !DILocation(line: 3874, column: 30, scope: !4047)
!4100 = !DILocation(line: 3874, column: 3, scope: !4047)
!4101 = !DILocation(line: 3875, column: 2, scope: !4047)
!4102 = !DILocation(line: 3851, column: 40, scope: !4042)
!4103 = !DILocation(line: 3851, column: 46, scope: !4042)
!4104 = !DILocation(line: 3851, column: 2, scope: !4042)
!4105 = distinct !{!4105, !4045, !4106}
!4106 = !DILocation(line: 3875, column: 2, scope: !4036)
!4107 = !DILocation(line: 3878, column: 15, scope: !4022)
!4108 = !DILocation(line: 3878, column: 2, scope: !4022)
!4109 = !DILocation(line: 3879, column: 17, scope: !4022)
!4110 = !DILocation(line: 3879, column: 2, scope: !4022)
!4111 = !DILocation(line: 3880, column: 2, scope: !4022)
!4112 = !DILocation(line: 3880, column: 6, scope: !4022)
!4113 = !DILocation(line: 3880, column: 15, scope: !4022)
!4114 = !DILocation(line: 3880, column: 35, scope: !4022)
!4115 = !DILocation(line: 3881, column: 10, scope: !4022)
!4116 = !DILocation(line: 3881, column: 14, scope: !4022)
!4117 = !DILocation(line: 3881, column: 2, scope: !4022)
!4118 = !DILocation(line: 3882, column: 10, scope: !4022)
!4119 = !DILocation(line: 3882, column: 14, scope: !4022)
!4120 = !DILocation(line: 3882, column: 2, scope: !4022)
!4121 = !DILocation(line: 3883, column: 10, scope: !4022)
!4122 = !DILocation(line: 3883, column: 14, scope: !4022)
!4123 = !DILocation(line: 3883, column: 2, scope: !4022)
!4124 = !DILocation(line: 3890, column: 24, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 3889, column: 9)
!4126 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 3889, column: 6)
!4127 = !DILocation(line: 3890, column: 3, scope: !4125)
!4128 = !DILocation(line: 3891, column: 25, scope: !4125)
!4129 = !DILocation(line: 3891, column: 3, scope: !4125)
!4130 = !DILocation(line: 3892, column: 25, scope: !4125)
!4131 = !DILocation(line: 3892, column: 3, scope: !4125)
!4132 = !DILocation(line: 3894, column: 10, scope: !4022)
!4133 = !DILocation(line: 3894, column: 14, scope: !4022)
!4134 = !DILocation(line: 3894, column: 2, scope: !4022)
!4135 = !DILocation(line: 3896, column: 7, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 3896, column: 7)
!4137 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 3894, column: 20)
!4138 = !DILocation(line: 3896, column: 11, scope: !4136)
!4139 = !DILocation(line: 3896, column: 20, scope: !4136)
!4140 = !DILocation(line: 3896, column: 7, scope: !4137)
!4141 = !DILocation(line: 3896, column: 60, scope: !4136)
!4142 = !DILocation(line: 3896, column: 38, scope: !4136)
!4143 = !DILocation(line: 3897, column: 3, scope: !4137)
!4144 = !DILocation(line: 3899, column: 3, scope: !4137)
!4145 = !DILocation(line: 3902, column: 3, scope: !4137)
!4146 = !DILocation(line: 3904, column: 3, scope: !4137)
!4147 = !DILocation(line: 3906, column: 1, scope: !4022)
!4148 = distinct !DISubprogram(name: "softbody_to_object", scope: !3, file: !3, line: 3645, type: !4149, scopeLine: 3646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{null, !2154, !2478, !92, !92}
!4151 = !DILocalVariable(name: "ob", arg: 1, scope: !4148, file: !3, line: 3645, type: !2154)
!4152 = !DILocation(line: 3645, column: 40, scope: !4148)
!4153 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !4148, file: !3, line: 3645, type: !2478)
!4154 = !DILocation(line: 3645, column: 52, scope: !4148)
!4155 = !DILocalVariable(name: "numVerts", arg: 3, scope: !4148, file: !3, line: 3645, type: !92)
!4156 = !DILocation(line: 3645, column: 71, scope: !4148)
!4157 = !DILocalVariable(name: "local", arg: 4, scope: !4148, file: !3, line: 3645, type: !92)
!4158 = !DILocation(line: 3645, column: 85, scope: !4148)
!4159 = !DILocalVariable(name: "sb", scope: !4148, file: !3, line: 3647, type: !2192)
!4160 = !DILocation(line: 3647, column: 12, scope: !4148)
!4161 = !DILocation(line: 3647, column: 16, scope: !4148)
!4162 = !DILocation(line: 3647, column: 20, scope: !4148)
!4163 = !DILocation(line: 3648, column: 6, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 3648, column: 6)
!4165 = !DILocation(line: 3648, column: 6, scope: !4148)
!4166 = !DILocalVariable(name: "bp", scope: !4167, file: !3, line: 3649, type: !2386)
!4167 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 3648, column: 10)
!4168 = !DILocation(line: 3649, column: 14, scope: !4167)
!4169 = !DILocation(line: 3649, column: 18, scope: !4167)
!4170 = !DILocation(line: 3649, column: 22, scope: !4167)
!4171 = !DILocalVariable(name: "a", scope: !4167, file: !3, line: 3650, type: !92)
!4172 = !DILocation(line: 3650, column: 7, scope: !4167)
!4173 = !DILocation(line: 3651, column: 7, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 3651, column: 7)
!4175 = !DILocation(line: 3651, column: 11, scope: !4174)
!4176 = !DILocation(line: 3651, column: 23, scope: !4174)
!4177 = !DILocation(line: 3651, column: 7, scope: !4167)
!4178 = !DILocation(line: 3651, column: 66, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 3651, column: 43)
!4180 = !DILocation(line: 3651, column: 70, scope: !4179)
!4181 = !DILocation(line: 3651, column: 74, scope: !4179)
!4182 = !DILocation(line: 3651, column: 80, scope: !4179)
!4183 = !DILocation(line: 3651, column: 84, scope: !4179)
!4184 = !DILocation(line: 3651, column: 90, scope: !4179)
!4185 = !DILocation(line: 3651, column: 94, scope: !4179)
!4186 = !DILocation(line: 3651, column: 44, scope: !4179)
!4187 = !DILocation(line: 3651, column: 102, scope: !4179)
!4188 = !DILocation(line: 3653, column: 16, scope: !4167)
!4189 = !DILocation(line: 3653, column: 20, scope: !4167)
!4190 = !DILocation(line: 3653, column: 26, scope: !4167)
!4191 = !DILocation(line: 3653, column: 30, scope: !4167)
!4192 = !DILocation(line: 3653, column: 3, scope: !4167)
!4193 = !DILocation(line: 3655, column: 9, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 3655, column: 3)
!4195 = !DILocation(line: 3655, column: 8, scope: !4194)
!4196 = !DILocation(line: 3655, column: 13, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 3655, column: 3)
!4198 = !DILocation(line: 3655, column: 15, scope: !4197)
!4199 = !DILocation(line: 3655, column: 14, scope: !4197)
!4200 = !DILocation(line: 3655, column: 3, scope: !4194)
!4201 = !DILocation(line: 3656, column: 15, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 3655, column: 36)
!4203 = !DILocation(line: 3656, column: 25, scope: !4202)
!4204 = !DILocation(line: 3656, column: 29, scope: !4202)
!4205 = !DILocation(line: 3656, column: 33, scope: !4202)
!4206 = !DILocation(line: 3656, column: 4, scope: !4202)
!4207 = !DILocation(line: 3657, column: 8, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 3657, column: 8)
!4209 = !DILocation(line: 3657, column: 13, scope: !4208)
!4210 = !DILocation(line: 3657, column: 8, scope: !4202)
!4211 = !DILocation(line: 3658, column: 15, scope: !4208)
!4212 = !DILocation(line: 3658, column: 19, scope: !4208)
!4213 = !DILocation(line: 3658, column: 25, scope: !4208)
!4214 = !DILocation(line: 3658, column: 35, scope: !4208)
!4215 = !DILocation(line: 3658, column: 5, scope: !4208)
!4216 = !DILocation(line: 3659, column: 3, scope: !4202)
!4217 = !DILocation(line: 3655, column: 26, scope: !4197)
!4218 = !DILocation(line: 3655, column: 32, scope: !4197)
!4219 = !DILocation(line: 3655, column: 3, scope: !4197)
!4220 = distinct !{!4220, !4200, !4221}
!4221 = !DILocation(line: 3659, column: 3, scope: !4194)
!4222 = !DILocation(line: 3660, column: 2, scope: !4167)
!4223 = !DILocation(line: 3661, column: 1, scope: !4148)
!4224 = distinct !DISubprogram(name: "softbody_step", scope: !3, file: !3, line: 3908, type: !4225, scopeLine: 3909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !2151, !2154, !2192, !94}
!4227 = !DILocalVariable(name: "scene", arg: 1, scope: !4224, file: !3, line: 3908, type: !2151)
!4228 = !DILocation(line: 3908, column: 34, scope: !4224)
!4229 = !DILocalVariable(name: "ob", arg: 2, scope: !4224, file: !3, line: 3908, type: !2154)
!4230 = !DILocation(line: 3908, column: 49, scope: !4224)
!4231 = !DILocalVariable(name: "sb", arg: 3, scope: !4224, file: !3, line: 3908, type: !2192)
!4232 = !DILocation(line: 3908, column: 63, scope: !4224)
!4233 = !DILocalVariable(name: "dtime", arg: 4, scope: !4224, file: !3, line: 3908, type: !94)
!4234 = !DILocation(line: 3908, column: 73, scope: !4224)
!4235 = !DILocalVariable(name: "forcetime", scope: !4224, file: !3, line: 3911, type: !94)
!4236 = !DILocation(line: 3911, column: 8, scope: !4224)
!4237 = !DILocalVariable(name: "sct", scope: !4224, file: !3, line: 3912, type: !4238)
!4238 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4239 = !DILocation(line: 3912, column: 9, scope: !4224)
!4240 = !DILocalVariable(name: "sst", scope: !4224, file: !3, line: 3912, type: !4238)
!4241 = !DILocation(line: 3912, column: 14, scope: !4224)
!4242 = !DILocation(line: 3915, column: 6, scope: !4224)
!4243 = !DILocation(line: 3915, column: 5, scope: !4224)
!4244 = !DILocation(line: 3920, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 3920, column: 6)
!4246 = !DILocation(line: 3920, column: 12, scope: !4245)
!4247 = !DILocation(line: 3920, column: 16, scope: !4245)
!4248 = !DILocation(line: 3920, column: 19, scope: !4245)
!4249 = !DILocation(line: 3920, column: 25, scope: !4245)
!4250 = !DILocation(line: 3920, column: 6, scope: !4224)
!4251 = !DILocation(line: 3920, column: 34, scope: !4245)
!4252 = !DILocation(line: 3922, column: 28, scope: !4224)
!4253 = !DILocation(line: 3922, column: 35, scope: !4224)
!4254 = !DILocation(line: 3922, column: 39, scope: !4224)
!4255 = !DILocation(line: 3922, column: 43, scope: !4224)
!4256 = !DILocation(line: 3922, column: 52, scope: !4224)
!4257 = !DILocation(line: 3922, column: 2, scope: !4224)
!4258 = !DILocation(line: 3924, column: 6, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 3924, column: 6)
!4260 = !DILocation(line: 3924, column: 10, scope: !4259)
!4261 = !DILocation(line: 3924, column: 19, scope: !4259)
!4262 = !DILocation(line: 3924, column: 6, scope: !4224)
!4263 = !DILocation(line: 3925, column: 32, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 3925, column: 7)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 3924, column: 41)
!4266 = !DILocation(line: 3925, column: 39, scope: !4264)
!4267 = !DILocation(line: 3925, column: 7, scope: !4264)
!4268 = !DILocation(line: 3925, column: 7, scope: !4265)
!4269 = !DILocation(line: 3926, column: 29, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3925, column: 44)
!4271 = !DILocation(line: 3926, column: 36, scope: !4270)
!4272 = !DILocation(line: 3926, column: 40, scope: !4270)
!4273 = !DILocation(line: 3926, column: 44, scope: !4270)
!4274 = !DILocation(line: 3926, column: 53, scope: !4270)
!4275 = !DILocation(line: 3926, column: 4, scope: !4270)
!4276 = !DILocation(line: 3927, column: 3, scope: !4270)
!4277 = !DILocation(line: 3928, column: 3, scope: !4265)
!4278 = !DILocation(line: 3928, column: 7, scope: !4265)
!4279 = !DILocation(line: 3928, column: 16, scope: !4265)
!4280 = !DILocation(line: 3928, column: 36, scope: !4265)
!4281 = !DILocation(line: 3929, column: 2, scope: !4265)
!4282 = !DILocation(line: 3931, column: 6, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 3931, column: 6)
!4284 = !DILocation(line: 3931, column: 10, scope: !4283)
!4285 = !DILocation(line: 3931, column: 20, scope: !4283)
!4286 = !DILocation(line: 3931, column: 6, scope: !4224)
!4287 = !DILocalVariable(name: "mid_flags", scope: !4288, file: !3, line: 3933, type: !92)
!4288 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 3931, column: 25)
!4289 = !DILocation(line: 3933, column: 7, scope: !4288)
!4290 = !DILocalVariable(name: "err", scope: !4288, file: !3, line: 3934, type: !94)
!4291 = !DILocation(line: 3934, column: 9, scope: !4288)
!4292 = !DILocalVariable(name: "forcetimemax", scope: !4288, file: !3, line: 3935, type: !94)
!4293 = !DILocation(line: 3935, column: 9, scope: !4288)
!4294 = !DILocalVariable(name: "forcetimemin", scope: !4288, file: !3, line: 3936, type: !94)
!4295 = !DILocation(line: 3936, column: 9, scope: !4288)
!4296 = !DILocalVariable(name: "timedone", scope: !4288, file: !3, line: 3937, type: !94)
!4297 = !DILocation(line: 3937, column: 9, scope: !4288)
!4298 = !DILocalVariable(name: "loops", scope: !4288, file: !3, line: 3940, type: !92)
!4299 = !DILocation(line: 3940, column: 7, scope: !4288)
!4300 = !DILocation(line: 3942, column: 17, scope: !4288)
!4301 = !DILocation(line: 3942, column: 21, scope: !4288)
!4302 = !DILocation(line: 3942, column: 15, scope: !4288)
!4303 = !DILocation(line: 3944, column: 7, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3944, column: 7)
!4305 = !DILocation(line: 3944, column: 11, scope: !4304)
!4306 = !DILocation(line: 3944, column: 20, scope: !4304)
!4307 = !DILocation(line: 3944, column: 7, scope: !4288)
!4308 = !DILocation(line: 3944, column: 40, scope: !4304)
!4309 = !DILocation(line: 3944, column: 48, scope: !4304)
!4310 = !DILocation(line: 3944, column: 52, scope: !4304)
!4311 = !DILocation(line: 3944, column: 46, scope: !4304)
!4312 = !DILocation(line: 3944, column: 38, scope: !4304)
!4313 = !DILocation(line: 3944, column: 25, scope: !4304)
!4314 = !DILocation(line: 3945, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3945, column: 7)
!4316 = !DILocation(line: 3945, column: 11, scope: !4315)
!4317 = !DILocation(line: 3945, column: 20, scope: !4315)
!4318 = !DILocation(line: 3945, column: 7, scope: !4288)
!4319 = !DILocation(line: 3945, column: 40, scope: !4315)
!4320 = !DILocation(line: 3945, column: 48, scope: !4315)
!4321 = !DILocation(line: 3945, column: 52, scope: !4315)
!4322 = !DILocation(line: 3945, column: 46, scope: !4315)
!4323 = !DILocation(line: 3945, column: 38, scope: !4315)
!4324 = !DILocation(line: 3945, column: 25, scope: !4315)
!4325 = !DILocation(line: 3947, column: 7, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3947, column: 7)
!4327 = !DILocation(line: 3947, column: 11, scope: !4326)
!4328 = !DILocation(line: 3947, column: 20, scope: !4326)
!4329 = !DILocation(line: 3947, column: 7, scope: !4288)
!4330 = !DILocation(line: 3947, column: 34, scope: !4326)
!4331 = !DILocation(line: 3947, column: 24, scope: !4326)
!4332 = !DILocation(line: 3949, column: 15, scope: !4288)
!4333 = !DILocation(line: 3949, column: 13, scope: !4288)
!4334 = !DILocation(line: 3950, column: 3, scope: !4288)
!4335 = !DILocation(line: 3950, column: 12, scope: !4288)
!4336 = !DILocation(line: 3950, column: 28, scope: !4288)
!4337 = !DILocation(line: 3950, column: 26, scope: !4288)
!4338 = !DILocation(line: 3950, column: 40, scope: !4288)
!4339 = !DILocation(line: 3950, column: 44, scope: !4288)
!4340 = !DILocation(line: 3950, column: 50, scope: !4288)
!4341 = !DILocation(line: 0, scope: !4288)
!4342 = !DILocation(line: 3952, column: 24, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 3950, column: 60)
!4344 = !DILocation(line: 3952, column: 47, scope: !4343)
!4345 = !DILocation(line: 3952, column: 56, scope: !4343)
!4346 = !DILocation(line: 3952, column: 55, scope: !4343)
!4347 = !DILocation(line: 3952, column: 45, scope: !4343)
!4348 = !DILocation(line: 3952, column: 33, scope: !4343)
!4349 = !DILocation(line: 3952, column: 4, scope: !4343)
!4350 = !DILocation(line: 3954, column: 4, scope: !4343)
!4351 = !DILocation(line: 3954, column: 8, scope: !4343)
!4352 = !DILocation(line: 3954, column: 17, scope: !4343)
!4353 = !DILocation(line: 3954, column: 22, scope: !4343)
!4354 = !DILocation(line: 3956, column: 25, scope: !4343)
!4355 = !DILocation(line: 3956, column: 32, scope: !4343)
!4356 = !DILocation(line: 3956, column: 36, scope: !4343)
!4357 = !DILocation(line: 3956, column: 47, scope: !4343)
!4358 = !DILocation(line: 3956, column: 56, scope: !4343)
!4359 = !DILocation(line: 3956, column: 55, scope: !4343)
!4360 = !DILocation(line: 3956, column: 4, scope: !4343)
!4361 = !DILocation(line: 3958, column: 26, scope: !4343)
!4362 = !DILocation(line: 3958, column: 30, scope: !4343)
!4363 = !DILocation(line: 3958, column: 50, scope: !4343)
!4364 = !DILocation(line: 3958, column: 4, scope: !4343)
!4365 = !DILocation(line: 3961, column: 25, scope: !4343)
!4366 = !DILocation(line: 3961, column: 32, scope: !4343)
!4367 = !DILocation(line: 3961, column: 36, scope: !4343)
!4368 = !DILocation(line: 3961, column: 47, scope: !4343)
!4369 = !DILocation(line: 3961, column: 56, scope: !4343)
!4370 = !DILocation(line: 3961, column: 55, scope: !4343)
!4371 = !DILocation(line: 3961, column: 4, scope: !4343)
!4372 = !DILocation(line: 3963, column: 26, scope: !4343)
!4373 = !DILocation(line: 3963, column: 30, scope: !4343)
!4374 = !DILocation(line: 3963, column: 50, scope: !4343)
!4375 = !DILocation(line: 3963, column: 4, scope: !4343)
!4376 = !DILocation(line: 3964, column: 28, scope: !4343)
!4377 = !DILocation(line: 3964, column: 4, scope: !4343)
!4378 = !DILocation(line: 3966, column: 8, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3966, column: 8)
!4380 = !DILocation(line: 3966, column: 14, scope: !4379)
!4381 = !DILocation(line: 3966, column: 12, scope: !4379)
!4382 = !DILocation(line: 3966, column: 8, scope: !4343)
!4383 = !DILocation(line: 3968, column: 9, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 3968, column: 9)
!4385 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 3966, column: 27)
!4386 = !DILocation(line: 3968, column: 21, scope: !4384)
!4387 = !DILocation(line: 3968, column: 19, scope: !4384)
!4388 = !DILocation(line: 3968, column: 9, scope: !4385)
!4389 = !DILocation(line: 3969, column: 25, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 3968, column: 35)
!4391 = !DILocation(line: 3969, column: 35, scope: !4390)
!4392 = !DILocation(line: 3969, column: 43, scope: !4390)
!4393 = !DILocation(line: 3969, column: 18, scope: !4390)
!4394 = !DILocation(line: 3969, column: 16, scope: !4390)
!4395 = !DILocation(line: 3970, column: 33, scope: !4390)
!4396 = !DILocation(line: 3970, column: 6, scope: !4390)
!4397 = !DILocation(line: 3972, column: 5, scope: !4390)
!4398 = !DILocation(line: 3974, column: 18, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 3973, column: 10)
!4400 = !DILocation(line: 3974, column: 15, scope: !4399)
!4401 = !DILocation(line: 3976, column: 4, scope: !4385)
!4402 = !DILocalVariable(name: "newtime", scope: !4403, file: !3, line: 3978, type: !94)
!4403 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 3977, column: 9)
!4404 = !DILocation(line: 3978, column: 11, scope: !4403)
!4405 = !DILocation(line: 3978, column: 21, scope: !4403)
!4406 = !DILocation(line: 3978, column: 31, scope: !4403)
!4407 = !DILocation(line: 3980, column: 9, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 3980, column: 9)
!4409 = !DILocation(line: 3980, column: 13, scope: !4408)
!4410 = !DILocation(line: 3980, column: 22, scope: !4408)
!4411 = !DILocation(line: 3980, column: 27, scope: !4408)
!4412 = !DILocation(line: 3980, column: 9, scope: !4403)
!4413 = !DILocation(line: 3982, column: 16, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 3980, column: 42)
!4415 = !DILocation(line: 3982, column: 14, scope: !4414)
!4416 = !DILocation(line: 3984, column: 5, scope: !4414)
!4417 = !DILocation(line: 3986, column: 10, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 3986, column: 10)
!4419 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 3985, column: 10)
!4420 = !DILocation(line: 3986, column: 16, scope: !4418)
!4421 = !DILocation(line: 3986, column: 27, scope: !4418)
!4422 = !DILocation(line: 3986, column: 14, scope: !4418)
!4423 = !DILocation(line: 3986, column: 10, scope: !4419)
!4424 = !DILocation(line: 3987, column: 17, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 3986, column: 34)
!4426 = !DILocation(line: 3987, column: 15, scope: !4425)
!4427 = !DILocation(line: 3988, column: 6, scope: !4425)
!4428 = !DILocation(line: 3990, column: 17, scope: !4403)
!4429 = !DILocation(line: 3990, column: 14, scope: !4403)
!4430 = !DILocation(line: 3991, column: 22, scope: !4403)
!4431 = !DILocation(line: 3991, column: 43, scope: !4403)
!4432 = !DILocation(line: 3991, column: 52, scope: !4403)
!4433 = !DILocation(line: 3991, column: 36, scope: !4403)
!4434 = !DILocation(line: 3991, column: 15, scope: !4403)
!4435 = !DILocation(line: 3991, column: 13, scope: !4403)
!4436 = !DILocation(line: 3993, column: 9, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 3993, column: 9)
!4438 = !DILocation(line: 3993, column: 19, scope: !4437)
!4439 = !DILocation(line: 3993, column: 9, scope: !4403)
!4440 = !DILocation(line: 3994, column: 25, scope: !4437)
!4441 = !DILocation(line: 3994, column: 33, scope: !4437)
!4442 = !DILocation(line: 3994, column: 31, scope: !4437)
!4443 = !DILocation(line: 3994, column: 43, scope: !4437)
!4444 = !DILocation(line: 3994, column: 18, scope: !4437)
!4445 = !DILocation(line: 3994, column: 16, scope: !4437)
!4446 = !DILocation(line: 3994, column: 6, scope: !4437)
!4447 = !DILocation(line: 3996, column: 25, scope: !4437)
!4448 = !DILocation(line: 3996, column: 33, scope: !4437)
!4449 = !DILocation(line: 3996, column: 31, scope: !4437)
!4450 = !DILocation(line: 3996, column: 43, scope: !4437)
!4451 = !DILocation(line: 3996, column: 18, scope: !4437)
!4452 = !DILocation(line: 3996, column: 16, scope: !4437)
!4453 = !DILocation(line: 3998, column: 9, scope: !4343)
!4454 = !DILocation(line: 3999, column: 8, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3999, column: 8)
!4456 = !DILocation(line: 3999, column: 12, scope: !4455)
!4457 = !DILocation(line: 3999, column: 24, scope: !4455)
!4458 = !DILocation(line: 3999, column: 8, scope: !4343)
!4459 = !DILocation(line: 4000, column: 11, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 3999, column: 41)
!4461 = !DILocation(line: 4000, column: 9, scope: !4460)
!4462 = !DILocation(line: 4001, column: 9, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 4001, column: 9)
!4464 = !DILocation(line: 4001, column: 15, scope: !4463)
!4465 = !DILocation(line: 4001, column: 13, scope: !4463)
!4466 = !DILocation(line: 4001, column: 19, scope: !4463)
!4467 = !DILocation(line: 4001, column: 9, scope: !4460)
!4468 = !DILocation(line: 4001, column: 56, scope: !4463)
!4469 = !DILocation(line: 4001, column: 54, scope: !4463)
!4470 = !DILocation(line: 4001, column: 67, scope: !4463)
!4471 = !DILocation(line: 4001, column: 65, scope: !4463)
!4472 = !DILocation(line: 4001, column: 47, scope: !4463)
!4473 = !DILocation(line: 4001, column: 26, scope: !4463)
!4474 = !DILocation(line: 4002, column: 4, scope: !4460)
!4475 = !DILocation(line: 4004, column: 8, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 4004, column: 8)
!4477 = !DILocation(line: 4004, column: 34, scope: !4476)
!4478 = !DILocation(line: 4004, column: 37, scope: !4476)
!4479 = !DILocation(line: 4004, column: 8, scope: !4343)
!4480 = !DILocation(line: 4004, column: 66, scope: !4476)
!4481 = distinct !{!4481, !4334, !4482}
!4482 = !DILocation(line: 4006, column: 3, scope: !4288)
!4483 = !DILocation(line: 4008, column: 23, scope: !4288)
!4484 = !DILocation(line: 4008, column: 3, scope: !4288)
!4485 = !DILocation(line: 4009, column: 27, scope: !4288)
!4486 = !DILocation(line: 4009, column: 3, scope: !4288)
!4487 = !DILocation(line: 4012, column: 7, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 4012, column: 7)
!4489 = !DILocation(line: 4012, column: 11, scope: !4488)
!4490 = !DILocation(line: 4012, column: 23, scope: !4488)
!4491 = !DILocation(line: 4012, column: 7, scope: !4288)
!4492 = !DILocation(line: 4013, column: 8, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 4013, column: 8)
!4494 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 4012, column: 40)
!4495 = !DILocation(line: 4013, column: 14, scope: !4493)
!4496 = !DILocation(line: 4013, column: 8, scope: !4494)
!4497 = !DILocation(line: 4014, column: 40, scope: !4493)
!4498 = !DILocation(line: 4014, column: 5, scope: !4493)
!4499 = !DILocation(line: 4015, column: 3, scope: !4494)
!4500 = !DILocation(line: 4017, column: 2, scope: !4288)
!4501 = !DILocation(line: 4018, column: 11, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 4018, column: 11)
!4503 = !DILocation(line: 4018, column: 15, scope: !4502)
!4504 = !DILocation(line: 4018, column: 25, scope: !4502)
!4505 = !DILocation(line: 4018, column: 11, scope: !4283)
!4506 = !DILocation(line: 4021, column: 2, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 4018, column: 31)
!4508 = !DILocation(line: 4022, column: 11, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 4022, column: 11)
!4510 = !DILocation(line: 4022, column: 15, scope: !4509)
!4511 = !DILocation(line: 4022, column: 25, scope: !4509)
!4512 = !DILocation(line: 4022, column: 11, scope: !4502)
!4513 = !DILocation(line: 4024, column: 2, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 4022, column: 31)
!4515 = !DILocation(line: 4025, column: 11, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 4025, column: 11)
!4517 = !DILocation(line: 4025, column: 15, scope: !4516)
!4518 = !DILocation(line: 4025, column: 25, scope: !4516)
!4519 = !DILocation(line: 4025, column: 11, scope: !4509)
!4520 = !DILocation(line: 4029, column: 2, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 4025, column: 31)
!4522 = !DILocation(line: 4031, column: 3, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 4030, column: 7)
!4524 = !DILocation(line: 4033, column: 6, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 4033, column: 6)
!4526 = !DILocation(line: 4033, column: 10, scope: !4525)
!4527 = !DILocation(line: 4033, column: 6, scope: !4224)
!4528 = !DILocation(line: 4033, column: 41, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 4033, column: 19)
!4530 = !DILocation(line: 4033, column: 21, scope: !4529)
!4531 = !DILocation(line: 4033, column: 45, scope: !4529)
!4532 = !DILocation(line: 4035, column: 6, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 4035, column: 6)
!4534 = !DILocation(line: 4035, column: 10, scope: !4533)
!4535 = !DILocation(line: 4035, column: 22, scope: !4533)
!4536 = !DILocation(line: 4035, column: 6, scope: !4224)
!4537 = !DILocation(line: 4036, column: 7, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 4035, column: 39)
!4539 = !DILocation(line: 4036, column: 6, scope: !4538)
!4540 = !DILocation(line: 4037, column: 8, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 4037, column: 7)
!4542 = !DILocation(line: 4037, column: 14, scope: !4541)
!4543 = !DILocation(line: 4037, column: 12, scope: !4541)
!4544 = !DILocation(line: 4037, column: 18, scope: !4541)
!4545 = !DILocation(line: 4037, column: 25, scope: !4541)
!4546 = !DILocation(line: 4037, column: 31, scope: !4541)
!4547 = !DILocation(line: 4037, column: 37, scope: !4541)
!4548 = !DILocation(line: 4037, column: 7, scope: !4538)
!4549 = !DILocation(line: 4037, column: 84, scope: !4541)
!4550 = !DILocation(line: 4037, column: 88, scope: !4541)
!4551 = !DILocation(line: 4037, column: 87, scope: !4541)
!4552 = !DILocation(line: 4037, column: 93, scope: !4541)
!4553 = !DILocation(line: 4037, column: 97, scope: !4541)
!4554 = !DILocation(line: 4037, column: 100, scope: !4541)
!4555 = !DILocation(line: 4037, column: 49, scope: !4541)
!4556 = !DILocation(line: 4038, column: 2, scope: !4538)
!4557 = !DILocation(line: 4039, column: 1, scope: !4224)
!4558 = distinct !DISubprogram(name: "free_scratch", scope: !3, file: !3, line: 910, type: !2300, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4559 = !DILocalVariable(name: "sb", arg: 1, scope: !4558, file: !3, line: 910, type: !2192)
!4560 = !DILocation(line: 910, column: 36, scope: !4558)
!4561 = !DILocation(line: 912, column: 6, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 912, column: 6)
!4563 = !DILocation(line: 912, column: 10, scope: !4562)
!4564 = !DILocation(line: 912, column: 6, scope: !4558)
!4565 = !DILocation(line: 914, column: 7, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 914, column: 7)
!4567 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 912, column: 19)
!4568 = !DILocation(line: 914, column: 11, scope: !4566)
!4569 = !DILocation(line: 914, column: 20, scope: !4566)
!4570 = !DILocation(line: 914, column: 7, scope: !4567)
!4571 = !DILocation(line: 915, column: 19, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 914, column: 34)
!4573 = !DILocation(line: 915, column: 23, scope: !4572)
!4574 = !DILocation(line: 915, column: 32, scope: !4572)
!4575 = !DILocation(line: 915, column: 4, scope: !4572)
!4576 = !DILocation(line: 917, column: 4, scope: !4572)
!4577 = !DILocation(line: 917, column: 8, scope: !4572)
!4578 = !DILocation(line: 917, column: 17, scope: !4572)
!4579 = !DILocation(line: 917, column: 30, scope: !4572)
!4580 = !DILocation(line: 918, column: 3, scope: !4572)
!4581 = !DILocation(line: 919, column: 7, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 919, column: 7)
!4583 = !DILocation(line: 919, column: 11, scope: !4582)
!4584 = !DILocation(line: 919, column: 20, scope: !4582)
!4585 = !DILocation(line: 919, column: 7, scope: !4567)
!4586 = !DILocation(line: 920, column: 4, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 919, column: 30)
!4588 = !DILocation(line: 920, column: 14, scope: !4587)
!4589 = !DILocation(line: 920, column: 18, scope: !4587)
!4590 = !DILocation(line: 920, column: 27, scope: !4587)
!4591 = !DILocation(line: 921, column: 3, scope: !4587)
!4592 = !DILocation(line: 922, column: 7, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 922, column: 7)
!4594 = !DILocation(line: 922, column: 11, scope: !4593)
!4595 = !DILocation(line: 922, column: 20, scope: !4593)
!4596 = !DILocation(line: 922, column: 24, scope: !4593)
!4597 = !DILocation(line: 922, column: 7, scope: !4567)
!4598 = !DILocation(line: 923, column: 4, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 922, column: 31)
!4600 = !DILocation(line: 923, column: 14, scope: !4599)
!4601 = !DILocation(line: 923, column: 18, scope: !4599)
!4602 = !DILocation(line: 923, column: 27, scope: !4599)
!4603 = !DILocation(line: 923, column: 31, scope: !4599)
!4604 = !DILocation(line: 924, column: 3, scope: !4599)
!4605 = !DILocation(line: 925, column: 3, scope: !4567)
!4606 = !DILocation(line: 925, column: 13, scope: !4567)
!4607 = !DILocation(line: 925, column: 17, scope: !4567)
!4608 = !DILocation(line: 926, column: 3, scope: !4567)
!4609 = !DILocation(line: 926, column: 7, scope: !4567)
!4610 = !DILocation(line: 926, column: 15, scope: !4567)
!4611 = !DILocation(line: 927, column: 2, scope: !4567)
!4612 = !DILocation(line: 929, column: 1, scope: !4558)
!4613 = distinct !DISubprogram(name: "free_softbody_baked", scope: !3, file: !3, line: 896, type: !2300, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4614 = !DILocalVariable(name: "sb", arg: 1, scope: !4613, file: !3, line: 896, type: !2192)
!4615 = !DILocation(line: 896, column: 43, scope: !4613)
!4616 = !DILocalVariable(name: "key", scope: !4613, file: !3, line: 898, type: !1107)
!4617 = !DILocation(line: 898, column: 12, scope: !4613)
!4618 = !DILocalVariable(name: "k", scope: !4613, file: !3, line: 899, type: !92)
!4619 = !DILocation(line: 899, column: 6, scope: !4613)
!4620 = !DILocation(line: 901, column: 8, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 901, column: 2)
!4622 = !DILocation(line: 901, column: 7, scope: !4621)
!4623 = !DILocation(line: 901, column: 12, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 901, column: 2)
!4625 = !DILocation(line: 901, column: 14, scope: !4624)
!4626 = !DILocation(line: 901, column: 18, scope: !4624)
!4627 = !DILocation(line: 901, column: 13, scope: !4624)
!4628 = !DILocation(line: 901, column: 2, scope: !4621)
!4629 = !DILocation(line: 902, column: 10, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 901, column: 31)
!4631 = !DILocation(line: 902, column: 14, scope: !4630)
!4632 = !DILocation(line: 902, column: 21, scope: !4630)
!4633 = !DILocation(line: 902, column: 19, scope: !4630)
!4634 = !DILocation(line: 902, column: 8, scope: !4630)
!4635 = !DILocation(line: 902, column: 6, scope: !4630)
!4636 = !DILocation(line: 903, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 903, column: 7)
!4638 = !DILocation(line: 903, column: 7, scope: !4630)
!4639 = !DILocation(line: 903, column: 12, scope: !4637)
!4640 = !DILocation(line: 903, column: 22, scope: !4637)
!4641 = !DILocation(line: 904, column: 2, scope: !4630)
!4642 = !DILocation(line: 901, column: 27, scope: !4624)
!4643 = !DILocation(line: 901, column: 2, scope: !4624)
!4644 = distinct !{!4644, !4628, !4645}
!4645 = !DILocation(line: 904, column: 2, scope: !4621)
!4646 = !DILocation(line: 905, column: 6, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 905, column: 6)
!4648 = !DILocation(line: 905, column: 10, scope: !4647)
!4649 = !DILocation(line: 905, column: 6, scope: !4613)
!4650 = !DILocation(line: 905, column: 16, scope: !4647)
!4651 = !DILocation(line: 905, column: 26, scope: !4647)
!4652 = !DILocation(line: 905, column: 30, scope: !4647)
!4653 = !DILocation(line: 907, column: 2, scope: !4613)
!4654 = !DILocation(line: 907, column: 6, scope: !4613)
!4655 = !DILocation(line: 907, column: 10, scope: !4613)
!4656 = !DILocation(line: 908, column: 2, scope: !4613)
!4657 = !DILocation(line: 908, column: 6, scope: !4613)
!4658 = !DILocation(line: 908, column: 12, scope: !4613)
!4659 = !DILocation(line: 909, column: 1, scope: !4613)
!4660 = distinct !DISubprogram(name: "ccd_mesh_free", scope: !3, file: !3, line: 533, type: !4661, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{null, !4663}
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccd_Mesh", file: !3, line: 288, baseType: !4665)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccd_Mesh", file: !3, line: 278, size: 576, elements: !4666)
!4666 = !{!4667, !4668, !4669, !4670, !4671, !4674, !4675, !4686, !4687}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4665, file: !3, line: 279, baseType: !92, size: 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4665, file: !3, line: 279, baseType: !92, size: 32, offset: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !4665, file: !3, line: 280, baseType: !483, size: 64, offset: 64)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "mprevvert", scope: !4665, file: !3, line: 281, baseType: !483, size: 64, offset: 128)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !4665, file: !3, line: 282, baseType: !4672, size: 64, offset: 192)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !204, line: 46, baseType: !336)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "savety", scope: !4665, file: !3, line: 283, baseType: !92, size: 32, offset: 256)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "mima", scope: !4665, file: !3, line: 284, baseType: !4676, size: 64, offset: 320)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccdf_minmax", file: !3, line: 274, baseType: !4678)
!4678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccdf_minmax", file: !3, line: 272, size: 192, elements: !4679)
!4679 = !{!4680, !4681, !4682, !4683, !4684, !4685}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !4678, file: !3, line: 273, baseType: !94, size: 32)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !4678, file: !3, line: 273, baseType: !94, size: 32, offset: 32)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "minz", scope: !4678, file: !3, line: 273, baseType: !94, size: 32, offset: 64)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "maxx", scope: !4678, file: !3, line: 273, baseType: !94, size: 32, offset: 96)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !4678, file: !3, line: 273, baseType: !94, size: 32, offset: 128)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "maxz", scope: !4678, file: !3, line: 273, baseType: !94, size: 32, offset: 160)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !4665, file: !3, line: 286, baseType: !376, size: 96, offset: 384)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !4665, file: !3, line: 287, baseType: !376, size: 96, offset: 480)
!4688 = !DILocalVariable(name: "ccdm", arg: 1, scope: !4660, file: !3, line: 533, type: !4663)
!4689 = !DILocation(line: 533, column: 37, scope: !4660)
!4690 = !DILocation(line: 535, column: 6, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 535, column: 6)
!4692 = !DILocation(line: 535, column: 11, scope: !4691)
!4693 = !DILocation(line: 535, column: 15, scope: !4691)
!4694 = !DILocation(line: 535, column: 21, scope: !4691)
!4695 = !DILocation(line: 535, column: 28, scope: !4691)
!4696 = !DILocation(line: 535, column: 6, scope: !4660)
!4697 = !DILocation(line: 536, column: 3, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 535, column: 45)
!4699 = !DILocation(line: 536, column: 13, scope: !4698)
!4700 = !DILocation(line: 536, column: 19, scope: !4698)
!4701 = !DILocation(line: 537, column: 3, scope: !4698)
!4702 = !DILocation(line: 537, column: 13, scope: !4698)
!4703 = !DILocation(line: 537, column: 19, scope: !4698)
!4704 = !DILocation(line: 538, column: 7, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 538, column: 7)
!4706 = !DILocation(line: 538, column: 13, scope: !4705)
!4707 = !DILocation(line: 538, column: 7, scope: !4698)
!4708 = !DILocation(line: 538, column: 24, scope: !4705)
!4709 = !DILocation(line: 538, column: 34, scope: !4705)
!4710 = !DILocation(line: 538, column: 40, scope: !4705)
!4711 = !DILocation(line: 539, column: 3, scope: !4698)
!4712 = !DILocation(line: 539, column: 13, scope: !4698)
!4713 = !DILocation(line: 539, column: 19, scope: !4698)
!4714 = !DILocation(line: 540, column: 3, scope: !4698)
!4715 = !DILocation(line: 540, column: 13, scope: !4698)
!4716 = !DILocation(line: 541, column: 8, scope: !4698)
!4717 = !DILocation(line: 542, column: 2, scope: !4698)
!4718 = !DILocation(line: 543, column: 1, scope: !4660)
!4719 = distinct !DISubprogram(name: "get_scalar_from_vertexgroup", scope: !3, file: !3, line: 3186, type: !4720, scopeLine: 3192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{null, !2154, !92, !92, !937}
!4722 = !DILocalVariable(name: "ob", arg: 1, scope: !4719, file: !3, line: 3186, type: !2154)
!4723 = !DILocation(line: 3186, column: 49, scope: !4719)
!4724 = !DILocalVariable(name: "vertID", arg: 2, scope: !4719, file: !3, line: 3186, type: !92)
!4725 = !DILocation(line: 3186, column: 57, scope: !4719)
!4726 = !DILocalVariable(name: "groupindex", arg: 3, scope: !4719, file: !3, line: 3186, type: !92)
!4727 = !DILocation(line: 3186, column: 69, scope: !4719)
!4728 = !DILocalVariable(name: "target", arg: 4, scope: !4719, file: !3, line: 3186, type: !937)
!4729 = !DILocation(line: 3186, column: 88, scope: !4719)
!4730 = !DILocalVariable(name: "dv", scope: !4719, file: !3, line: 3193, type: !4731)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !204, line: 63, baseType: !393)
!4733 = !DILocation(line: 3193, column: 15, scope: !4719)
!4734 = !DILocalVariable(name: "i", scope: !4719, file: !3, line: 3194, type: !92)
!4735 = !DILocation(line: 3194, column: 6, scope: !4719)
!4736 = !DILocation(line: 3197, column: 6, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3197, column: 6)
!4738 = !DILocation(line: 3197, column: 10, scope: !4737)
!4739 = !DILocation(line: 3197, column: 14, scope: !4737)
!4740 = !DILocation(line: 3197, column: 6, scope: !4719)
!4741 = !DILocalVariable(name: "me", scope: !4742, file: !3, line: 3198, type: !100)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 3197, column: 25)
!4743 = !DILocation(line: 3198, column: 9, scope: !4742)
!4744 = !DILocation(line: 3198, column: 13, scope: !4742)
!4745 = !DILocation(line: 3198, column: 17, scope: !4742)
!4746 = !DILocation(line: 3199, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 3199, column: 7)
!4748 = !DILocation(line: 3199, column: 11, scope: !4747)
!4749 = !DILocation(line: 3199, column: 7, scope: !4742)
!4750 = !DILocation(line: 3200, column: 9, scope: !4747)
!4751 = !DILocation(line: 3200, column: 13, scope: !4747)
!4752 = !DILocation(line: 3200, column: 21, scope: !4747)
!4753 = !DILocation(line: 3200, column: 19, scope: !4747)
!4754 = !DILocation(line: 3200, column: 7, scope: !4747)
!4755 = !DILocation(line: 3200, column: 4, scope: !4747)
!4756 = !DILocation(line: 3201, column: 2, scope: !4742)
!4757 = !DILocation(line: 3202, column: 11, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 3202, column: 11)
!4759 = !DILocation(line: 3202, column: 15, scope: !4758)
!4760 = !DILocation(line: 3202, column: 19, scope: !4758)
!4761 = !DILocation(line: 3202, column: 11, scope: !4737)
!4762 = !DILocalVariable(name: "lt", scope: !4763, file: !3, line: 3203, type: !3164)
!4763 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 3202, column: 33)
!4764 = !DILocation(line: 3203, column: 12, scope: !4763)
!4765 = !DILocation(line: 3203, column: 16, scope: !4763)
!4766 = !DILocation(line: 3203, column: 20, scope: !4763)
!4767 = !DILocation(line: 3204, column: 7, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 3204, column: 7)
!4769 = !DILocation(line: 3204, column: 11, scope: !4768)
!4770 = !DILocation(line: 3204, column: 7, scope: !4763)
!4771 = !DILocation(line: 3205, column: 9, scope: !4768)
!4772 = !DILocation(line: 3205, column: 13, scope: !4768)
!4773 = !DILocation(line: 3205, column: 21, scope: !4768)
!4774 = !DILocation(line: 3205, column: 19, scope: !4768)
!4775 = !DILocation(line: 3205, column: 7, scope: !4768)
!4776 = !DILocation(line: 3205, column: 4, scope: !4768)
!4777 = !DILocation(line: 3206, column: 2, scope: !4763)
!4778 = !DILocation(line: 3207, column: 6, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3207, column: 6)
!4780 = !DILocation(line: 3207, column: 6, scope: !4719)
!4781 = !DILocation(line: 3209, column: 9, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 3209, column: 3)
!4783 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 3207, column: 10)
!4784 = !DILocation(line: 3209, column: 8, scope: !4782)
!4785 = !DILocation(line: 3209, column: 13, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 3209, column: 3)
!4787 = !DILocation(line: 3209, column: 15, scope: !4786)
!4788 = !DILocation(line: 3209, column: 19, scope: !4786)
!4789 = !DILocation(line: 3209, column: 14, scope: !4786)
!4790 = !DILocation(line: 3209, column: 3, scope: !4782)
!4791 = !DILocation(line: 3210, column: 8, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 3210, column: 8)
!4793 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 3209, column: 35)
!4794 = !DILocation(line: 3210, column: 12, scope: !4792)
!4795 = !DILocation(line: 3210, column: 15, scope: !4792)
!4796 = !DILocation(line: 3210, column: 18, scope: !4792)
!4797 = !DILocation(line: 3210, column: 28, scope: !4792)
!4798 = !DILocation(line: 3210, column: 25, scope: !4792)
!4799 = !DILocation(line: 3210, column: 8, scope: !4793)
!4800 = !DILocation(line: 3211, column: 14, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 3210, column: 40)
!4802 = !DILocation(line: 3211, column: 18, scope: !4801)
!4803 = !DILocation(line: 3211, column: 21, scope: !4801)
!4804 = !DILocation(line: 3211, column: 24, scope: !4801)
!4805 = !DILocation(line: 3211, column: 6, scope: !4801)
!4806 = !DILocation(line: 3211, column: 12, scope: !4801)
!4807 = !DILocation(line: 3212, column: 5, scope: !4801)
!4808 = !DILocation(line: 3214, column: 3, scope: !4793)
!4809 = !DILocation(line: 3209, column: 31, scope: !4786)
!4810 = !DILocation(line: 3209, column: 3, scope: !4786)
!4811 = distinct !{!4811, !4790, !4812}
!4812 = !DILocation(line: 3214, column: 3, scope: !4782)
!4813 = !DILocation(line: 3215, column: 2, scope: !4783)
!4814 = !DILocation(line: 3216, column: 1, scope: !4719)
!4815 = distinct !DISubprogram(name: "add_mesh_quad_diag_springs", scope: !3, file: !3, line: 619, type: !2459, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4816 = !DILocalVariable(name: "ob", arg: 1, scope: !4815, file: !3, line: 619, type: !2154)
!4817 = !DILocation(line: 619, column: 48, scope: !4815)
!4818 = !DILocalVariable(name: "me", scope: !4815, file: !3, line: 621, type: !100)
!4819 = !DILocation(line: 621, column: 8, scope: !4815)
!4820 = !DILocation(line: 621, column: 12, scope: !4815)
!4821 = !DILocation(line: 621, column: 16, scope: !4815)
!4822 = !DILocalVariable(name: "mface", scope: !4815, file: !3, line: 622, type: !4672)
!4823 = !DILocation(line: 622, column: 9, scope: !4815)
!4824 = !DILocation(line: 622, column: 16, scope: !4815)
!4825 = !DILocation(line: 622, column: 20, scope: !4815)
!4826 = !DILocalVariable(name: "bs", scope: !4815, file: !3, line: 624, type: !2948)
!4827 = !DILocation(line: 624, column: 14, scope: !4815)
!4828 = !DILocalVariable(name: "bs_new", scope: !4815, file: !3, line: 624, type: !2948)
!4829 = !DILocation(line: 624, column: 19, scope: !4815)
!4830 = !DILocalVariable(name: "a", scope: !4815, file: !3, line: 625, type: !92)
!4831 = !DILocation(line: 625, column: 6, scope: !4815)
!4832 = !DILocation(line: 627, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 627, column: 6)
!4834 = !DILocation(line: 627, column: 10, scope: !4833)
!4835 = !DILocation(line: 627, column: 6, scope: !4815)
!4836 = !DILocalVariable(name: "nofquads", scope: !4837, file: !3, line: 628, type: !92)
!4837 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 627, column: 16)
!4838 = !DILocation(line: 628, column: 7, scope: !4837)
!4839 = !DILocation(line: 631, column: 31, scope: !4837)
!4840 = !DILocation(line: 631, column: 14, scope: !4837)
!4841 = !DILocation(line: 631, column: 12, scope: !4837)
!4842 = !DILocation(line: 632, column: 7, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 632, column: 7)
!4844 = !DILocation(line: 632, column: 7, scope: !4837)
!4845 = !DILocation(line: 634, column: 12, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 632, column: 17)
!4847 = !DILocation(line: 634, column: 25, scope: !4846)
!4848 = !DILocation(line: 634, column: 29, scope: !4846)
!4849 = !DILocation(line: 634, column: 35, scope: !4846)
!4850 = !DILocation(line: 634, column: 47, scope: !4846)
!4851 = !DILocation(line: 634, column: 56, scope: !4846)
!4852 = !DILocation(line: 634, column: 45, scope: !4846)
!4853 = !DILocation(line: 634, column: 24, scope: !4846)
!4854 = !DILocation(line: 634, column: 60, scope: !4846)
!4855 = !DILocation(line: 634, column: 10, scope: !4846)
!4856 = !DILocation(line: 635, column: 11, scope: !4846)
!4857 = !DILocation(line: 635, column: 4, scope: !4846)
!4858 = !DILocation(line: 635, column: 19, scope: !4846)
!4859 = !DILocation(line: 635, column: 23, scope: !4846)
!4860 = !DILocation(line: 635, column: 29, scope: !4846)
!4861 = !DILocation(line: 635, column: 39, scope: !4846)
!4862 = !DILocation(line: 635, column: 43, scope: !4846)
!4863 = !DILocation(line: 635, column: 49, scope: !4846)
!4864 = !DILocation(line: 635, column: 38, scope: !4846)
!4865 = !DILocation(line: 635, column: 60, scope: !4846)
!4866 = !DILocation(line: 637, column: 8, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 637, column: 8)
!4868 = !DILocation(line: 637, column: 12, scope: !4867)
!4869 = !DILocation(line: 637, column: 18, scope: !4867)
!4870 = !DILocation(line: 637, column: 8, scope: !4846)
!4871 = !DILocation(line: 638, column: 5, scope: !4867)
!4872 = !DILocation(line: 638, column: 15, scope: !4867)
!4873 = !DILocation(line: 638, column: 19, scope: !4867)
!4874 = !DILocation(line: 638, column: 25, scope: !4867)
!4875 = !DILocation(line: 639, column: 24, scope: !4846)
!4876 = !DILocation(line: 639, column: 4, scope: !4846)
!4877 = !DILocation(line: 639, column: 8, scope: !4846)
!4878 = !DILocation(line: 639, column: 14, scope: !4846)
!4879 = !DILocation(line: 639, column: 22, scope: !4846)
!4880 = !DILocation(line: 642, column: 6, scope: !4846)
!4881 = !DILocation(line: 643, column: 9, scope: !4846)
!4882 = !DILocation(line: 643, column: 16, scope: !4846)
!4883 = !DILocation(line: 643, column: 20, scope: !4846)
!4884 = !DILocation(line: 643, column: 26, scope: !4846)
!4885 = !DILocation(line: 643, column: 15, scope: !4846)
!4886 = !DILocation(line: 643, column: 7, scope: !4846)
!4887 = !DILocation(line: 645, column: 8, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 645, column: 8)
!4889 = !DILocation(line: 645, column: 8, scope: !4846)
!4890 = !DILocation(line: 646, column: 12, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 646, column: 5)
!4892 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 645, column: 16)
!4893 = !DILocation(line: 646, column: 16, scope: !4891)
!4894 = !DILocation(line: 646, column: 11, scope: !4891)
!4895 = !DILocation(line: 646, column: 10, scope: !4891)
!4896 = !DILocation(line: 646, column: 25, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 646, column: 5)
!4898 = !DILocation(line: 646, column: 26, scope: !4897)
!4899 = !DILocation(line: 646, column: 5, scope: !4891)
!4900 = !DILocation(line: 647, column: 10, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 647, column: 10)
!4902 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 646, column: 44)
!4903 = !DILocation(line: 647, column: 17, scope: !4901)
!4904 = !DILocation(line: 647, column: 10, scope: !4902)
!4905 = !DILocation(line: 648, column: 15, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 647, column: 21)
!4907 = !DILocation(line: 648, column: 22, scope: !4906)
!4908 = !DILocation(line: 648, column: 7, scope: !4906)
!4909 = !DILocation(line: 648, column: 11, scope: !4906)
!4910 = !DILocation(line: 648, column: 13, scope: !4906)
!4911 = !DILocation(line: 649, column: 15, scope: !4906)
!4912 = !DILocation(line: 649, column: 22, scope: !4906)
!4913 = !DILocation(line: 649, column: 7, scope: !4906)
!4914 = !DILocation(line: 649, column: 11, scope: !4906)
!4915 = !DILocation(line: 649, column: 13, scope: !4906)
!4916 = !DILocation(line: 650, column: 7, scope: !4906)
!4917 = !DILocation(line: 650, column: 11, scope: !4906)
!4918 = !DILocation(line: 650, column: 24, scope: !4906)
!4919 = !DILocation(line: 651, column: 9, scope: !4906)
!4920 = !DILocation(line: 652, column: 15, scope: !4906)
!4921 = !DILocation(line: 652, column: 22, scope: !4906)
!4922 = !DILocation(line: 652, column: 7, scope: !4906)
!4923 = !DILocation(line: 652, column: 11, scope: !4906)
!4924 = !DILocation(line: 652, column: 13, scope: !4906)
!4925 = !DILocation(line: 653, column: 15, scope: !4906)
!4926 = !DILocation(line: 653, column: 22, scope: !4906)
!4927 = !DILocation(line: 653, column: 7, scope: !4906)
!4928 = !DILocation(line: 653, column: 11, scope: !4906)
!4929 = !DILocation(line: 653, column: 13, scope: !4906)
!4930 = !DILocation(line: 654, column: 7, scope: !4906)
!4931 = !DILocation(line: 654, column: 11, scope: !4906)
!4932 = !DILocation(line: 654, column: 24, scope: !4906)
!4933 = !DILocation(line: 655, column: 9, scope: !4906)
!4934 = !DILocation(line: 657, column: 6, scope: !4906)
!4935 = !DILocation(line: 658, column: 5, scope: !4902)
!4936 = !DILocation(line: 646, column: 31, scope: !4897)
!4937 = !DILocation(line: 646, column: 40, scope: !4897)
!4938 = !DILocation(line: 646, column: 5, scope: !4897)
!4939 = distinct !{!4939, !4899, !4940}
!4940 = !DILocation(line: 658, column: 5, scope: !4891)
!4941 = !DILocation(line: 659, column: 4, scope: !4892)
!4942 = !DILocation(line: 662, column: 27, scope: !4846)
!4943 = !DILocation(line: 662, column: 36, scope: !4846)
!4944 = !DILocation(line: 662, column: 4, scope: !4846)
!4945 = !DILocation(line: 662, column: 8, scope: !4846)
!4946 = !DILocation(line: 662, column: 14, scope: !4846)
!4947 = !DILocation(line: 662, column: 24, scope: !4846)
!4948 = !DILocation(line: 663, column: 3, scope: !4846)
!4949 = !DILocation(line: 664, column: 2, scope: !4837)
!4950 = !DILocation(line: 665, column: 1, scope: !4815)
!4951 = distinct !DISubprogram(name: "build_bps_springlist", scope: !3, file: !3, line: 772, type: !2459, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!4952 = !DILocalVariable(name: "ob", arg: 1, scope: !4951, file: !3, line: 772, type: !2154)
!4953 = !DILocation(line: 772, column: 42, scope: !4951)
!4954 = !DILocalVariable(name: "sb", scope: !4951, file: !3, line: 774, type: !2192)
!4955 = !DILocation(line: 774, column: 12, scope: !4951)
!4956 = !DILocation(line: 774, column: 16, scope: !4951)
!4957 = !DILocation(line: 774, column: 20, scope: !4951)
!4958 = !DILocalVariable(name: "bp", scope: !4951, file: !3, line: 775, type: !2386)
!4959 = !DILocation(line: 775, column: 13, scope: !4951)
!4960 = !DILocalVariable(name: "bs", scope: !4951, file: !3, line: 776, type: !2948)
!4961 = !DILocation(line: 776, column: 14, scope: !4951)
!4962 = !DILocalVariable(name: "a", scope: !4951, file: !3, line: 777, type: !92)
!4963 = !DILocation(line: 777, column: 6, scope: !4951)
!4964 = !DILocalVariable(name: "b", scope: !4951, file: !3, line: 777, type: !92)
!4965 = !DILocation(line: 777, column: 9, scope: !4951)
!4966 = !DILocation(line: 779, column: 6, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 779, column: 6)
!4968 = !DILocation(line: 779, column: 8, scope: !4967)
!4969 = !DILocation(line: 779, column: 6, scope: !4951)
!4970 = !DILocation(line: 779, column: 16, scope: !4967)
!4971 = !DILocation(line: 781, column: 9, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 781, column: 2)
!4973 = !DILocation(line: 781, column: 13, scope: !4972)
!4974 = !DILocation(line: 781, column: 8, scope: !4972)
!4975 = !DILocation(line: 781, column: 27, scope: !4972)
!4976 = !DILocation(line: 781, column: 31, scope: !4972)
!4977 = !DILocation(line: 781, column: 25, scope: !4972)
!4978 = !DILocation(line: 781, column: 7, scope: !4972)
!4979 = !DILocation(line: 781, column: 39, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 781, column: 2)
!4981 = !DILocation(line: 781, column: 40, scope: !4980)
!4982 = !DILocation(line: 781, column: 2, scope: !4972)
!4983 = !DILocation(line: 783, column: 7, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 783, column: 7)
!4985 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 781, column: 55)
!4986 = !DILocation(line: 783, column: 11, scope: !4984)
!4987 = !DILocation(line: 783, column: 7, scope: !4985)
!4988 = !DILocation(line: 784, column: 4, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 783, column: 20)
!4990 = !DILocation(line: 784, column: 14, scope: !4989)
!4991 = !DILocation(line: 784, column: 18, scope: !4989)
!4992 = !DILocation(line: 785, column: 4, scope: !4989)
!4993 = !DILocation(line: 785, column: 8, scope: !4989)
!4994 = !DILocation(line: 785, column: 15, scope: !4989)
!4995 = !DILocation(line: 786, column: 3, scope: !4989)
!4996 = !DILocation(line: 788, column: 10, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 788, column: 3)
!4998 = !DILocation(line: 788, column: 14, scope: !4997)
!4999 = !DILocation(line: 788, column: 9, scope: !4997)
!5000 = !DILocation(line: 788, column: 29, scope: !4997)
!5001 = !DILocation(line: 788, column: 33, scope: !4997)
!5002 = !DILocation(line: 788, column: 27, scope: !4997)
!5003 = !DILocation(line: 788, column: 8, scope: !4997)
!5004 = !DILocation(line: 788, column: 42, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 788, column: 3)
!5006 = !DILocation(line: 788, column: 43, scope: !5005)
!5007 = !DILocation(line: 788, column: 3, scope: !4997)
!5008 = !DILocation(line: 789, column: 11, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 789, column: 8)
!5010 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 788, column: 58)
!5011 = !DILocation(line: 789, column: 15, scope: !5009)
!5012 = !DILocation(line: 789, column: 24, scope: !5009)
!5013 = !DILocation(line: 789, column: 23, scope: !5009)
!5014 = !DILocation(line: 789, column: 30, scope: !5009)
!5015 = !DILocation(line: 789, column: 34, scope: !5009)
!5016 = !DILocation(line: 789, column: 27, scope: !5009)
!5017 = !DILocation(line: 789, column: 8, scope: !5010)
!5018 = !DILocation(line: 790, column: 23, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 789, column: 40)
!5020 = !DILocation(line: 790, column: 27, scope: !5019)
!5021 = !DILocation(line: 790, column: 31, scope: !5019)
!5022 = !DILocation(line: 790, column: 42, scope: !5019)
!5023 = !DILocation(line: 790, column: 41, scope: !5019)
!5024 = !DILocation(line: 790, column: 5, scope: !5019)
!5025 = !DILocation(line: 791, column: 4, scope: !5019)
!5026 = !DILocation(line: 792, column: 11, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 792, column: 8)
!5028 = !DILocation(line: 792, column: 15, scope: !5027)
!5029 = !DILocation(line: 792, column: 24, scope: !5027)
!5030 = !DILocation(line: 792, column: 23, scope: !5027)
!5031 = !DILocation(line: 792, column: 30, scope: !5027)
!5032 = !DILocation(line: 792, column: 34, scope: !5027)
!5033 = !DILocation(line: 792, column: 27, scope: !5027)
!5034 = !DILocation(line: 792, column: 8, scope: !5010)
!5035 = !DILocation(line: 793, column: 23, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 792, column: 40)
!5037 = !DILocation(line: 793, column: 27, scope: !5036)
!5038 = !DILocation(line: 793, column: 31, scope: !5036)
!5039 = !DILocation(line: 793, column: 42, scope: !5036)
!5040 = !DILocation(line: 793, column: 41, scope: !5036)
!5041 = !DILocation(line: 793, column: 5, scope: !5036)
!5042 = !DILocation(line: 794, column: 4, scope: !5036)
!5043 = !DILocation(line: 795, column: 3, scope: !5010)
!5044 = !DILocation(line: 788, column: 48, scope: !5005)
!5045 = !DILocation(line: 788, column: 54, scope: !5005)
!5046 = !DILocation(line: 788, column: 3, scope: !5005)
!5047 = distinct !{!5047, !5007, !5048}
!5048 = !DILocation(line: 795, column: 3, scope: !4997)
!5049 = !DILocation(line: 796, column: 2, scope: !4985)
!5050 = !DILocation(line: 781, column: 45, scope: !4980)
!5051 = !DILocation(line: 781, column: 51, scope: !4980)
!5052 = !DILocation(line: 781, column: 2, scope: !4980)
!5053 = distinct !{!5053, !4982, !5054}
!5054 = !DILocation(line: 796, column: 2, scope: !4972)
!5055 = !DILocation(line: 797, column: 1, scope: !4951)
!5056 = distinct !DISubprogram(name: "add_2nd_order_springs", scope: !3, file: !3, line: 729, type: !5057, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !2154, !94}
!5059 = !DILocalVariable(name: "ob", arg: 1, scope: !5056, file: !3, line: 729, type: !2154)
!5060 = !DILocation(line: 729, column: 43, scope: !5056)
!5061 = !DILocalVariable(name: "stiffness", arg: 2, scope: !5056, file: !3, line: 729, type: !94)
!5062 = !DILocation(line: 729, column: 53, scope: !5056)
!5063 = !DILocalVariable(name: "counter", scope: !5056, file: !3, line: 731, type: !92)
!5064 = !DILocation(line: 731, column: 6, scope: !5056)
!5065 = !DILocalVariable(name: "bs_new", scope: !5056, file: !3, line: 732, type: !2948)
!5066 = !DILocation(line: 732, column: 14, scope: !5056)
!5067 = !DILocation(line: 733, column: 14, scope: !5056)
!5068 = !DILocation(line: 733, column: 12, scope: !5056)
!5069 = !DILocation(line: 735, column: 23, scope: !5056)
!5070 = !DILocation(line: 735, column: 27, scope: !5056)
!5071 = !DILocation(line: 735, column: 2, scope: !5056)
!5072 = !DILocation(line: 736, column: 6, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 736, column: 6)
!5074 = !DILocation(line: 736, column: 6, scope: !5056)
!5075 = !DILocation(line: 738, column: 11, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 736, column: 15)
!5077 = !DILocation(line: 738, column: 24, scope: !5076)
!5078 = !DILocation(line: 738, column: 28, scope: !5076)
!5079 = !DILocation(line: 738, column: 34, scope: !5076)
!5080 = !DILocation(line: 738, column: 46, scope: !5076)
!5081 = !DILocation(line: 738, column: 44, scope: !5076)
!5082 = !DILocation(line: 738, column: 23, scope: !5076)
!5083 = !DILocation(line: 738, column: 55, scope: !5076)
!5084 = !DILocation(line: 738, column: 9, scope: !5076)
!5085 = !DILocation(line: 739, column: 10, scope: !5076)
!5086 = !DILocation(line: 739, column: 3, scope: !5076)
!5087 = !DILocation(line: 739, column: 18, scope: !5076)
!5088 = !DILocation(line: 739, column: 22, scope: !5076)
!5089 = !DILocation(line: 739, column: 28, scope: !5076)
!5090 = !DILocation(line: 739, column: 38, scope: !5076)
!5091 = !DILocation(line: 739, column: 42, scope: !5076)
!5092 = !DILocation(line: 739, column: 48, scope: !5076)
!5093 = !DILocation(line: 739, column: 37, scope: !5076)
!5094 = !DILocation(line: 739, column: 59, scope: !5076)
!5095 = !DILocation(line: 741, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 741, column: 7)
!5097 = !DILocation(line: 741, column: 11, scope: !5096)
!5098 = !DILocation(line: 741, column: 17, scope: !5096)
!5099 = !DILocation(line: 741, column: 7, scope: !5076)
!5100 = !DILocation(line: 742, column: 4, scope: !5096)
!5101 = !DILocation(line: 742, column: 14, scope: !5096)
!5102 = !DILocation(line: 742, column: 18, scope: !5096)
!5103 = !DILocation(line: 742, column: 24, scope: !5096)
!5104 = !DILocation(line: 743, column: 23, scope: !5076)
!5105 = !DILocation(line: 743, column: 3, scope: !5076)
!5106 = !DILocation(line: 743, column: 7, scope: !5076)
!5107 = !DILocation(line: 743, column: 13, scope: !5076)
!5108 = !DILocation(line: 743, column: 21, scope: !5076)
!5109 = !DILocation(line: 745, column: 24, scope: !5076)
!5110 = !DILocation(line: 745, column: 28, scope: !5076)
!5111 = !DILocation(line: 745, column: 3, scope: !5076)
!5112 = !DILocation(line: 746, column: 26, scope: !5076)
!5113 = !DILocation(line: 746, column: 3, scope: !5076)
!5114 = !DILocation(line: 746, column: 7, scope: !5076)
!5115 = !DILocation(line: 746, column: 13, scope: !5076)
!5116 = !DILocation(line: 746, column: 23, scope: !5076)
!5117 = !DILocation(line: 747, column: 2, scope: !5076)
!5118 = !DILocation(line: 748, column: 1, scope: !5056)
!5119 = distinct !DISubprogram(name: "springs_from_mesh", scope: !3, file: !3, line: 3220, type: !2459, scopeLine: 3221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5120 = !DILocalVariable(name: "ob", arg: 1, scope: !5119, file: !3, line: 3220, type: !2154)
!5121 = !DILocation(line: 3220, column: 39, scope: !5119)
!5122 = !DILocalVariable(name: "sb", scope: !5119, file: !3, line: 3222, type: !2192)
!5123 = !DILocation(line: 3222, column: 12, scope: !5119)
!5124 = !DILocalVariable(name: "me", scope: !5119, file: !3, line: 3223, type: !100)
!5125 = !DILocation(line: 3223, column: 8, scope: !5119)
!5126 = !DILocation(line: 3223, column: 12, scope: !5119)
!5127 = !DILocation(line: 3223, column: 16, scope: !5119)
!5128 = !DILocalVariable(name: "bp", scope: !5119, file: !3, line: 3224, type: !2386)
!5129 = !DILocation(line: 3224, column: 13, scope: !5119)
!5130 = !DILocalVariable(name: "a", scope: !5119, file: !3, line: 3225, type: !92)
!5131 = !DILocation(line: 3225, column: 6, scope: !5119)
!5132 = !DILocalVariable(name: "scale", scope: !5119, file: !3, line: 3226, type: !94)
!5133 = !DILocation(line: 3226, column: 8, scope: !5119)
!5134 = !DILocation(line: 3228, column: 6, scope: !5119)
!5135 = !DILocation(line: 3228, column: 10, scope: !5119)
!5136 = !DILocation(line: 3228, column: 4, scope: !5119)
!5137 = !DILocation(line: 3229, column: 6, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 3229, column: 6)
!5139 = !DILocation(line: 3229, column: 9, scope: !5138)
!5140 = !DILocation(line: 3229, column: 12, scope: !5138)
!5141 = !DILocation(line: 3229, column: 6, scope: !5119)
!5142 = !DILocation(line: 3234, column: 7, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 3234, column: 7)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3229, column: 16)
!5145 = !DILocation(line: 3234, column: 11, scope: !5143)
!5146 = !DILocation(line: 3234, column: 7, scope: !5144)
!5147 = !DILocation(line: 3235, column: 8, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 3234, column: 20)
!5149 = !DILocation(line: 3235, column: 12, scope: !5148)
!5150 = !DILocation(line: 3235, column: 18, scope: !5148)
!5151 = !DILocation(line: 3235, column: 6, scope: !5148)
!5152 = !DILocation(line: 3236, column: 10, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 3236, column: 4)
!5154 = !DILocation(line: 3236, column: 9, scope: !5153)
!5155 = !DILocation(line: 3236, column: 14, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 3236, column: 4)
!5157 = !DILocation(line: 3236, column: 16, scope: !5156)
!5158 = !DILocation(line: 3236, column: 20, scope: !5156)
!5159 = !DILocation(line: 3236, column: 15, scope: !5156)
!5160 = !DILocation(line: 3236, column: 4, scope: !5153)
!5161 = !DILocation(line: 3237, column: 16, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 3236, column: 40)
!5163 = !DILocation(line: 3237, column: 20, scope: !5162)
!5164 = !DILocation(line: 3237, column: 27, scope: !5162)
!5165 = !DILocation(line: 3237, column: 31, scope: !5162)
!5166 = !DILocation(line: 3237, column: 37, scope: !5162)
!5167 = !DILocation(line: 3237, column: 40, scope: !5162)
!5168 = !DILocation(line: 3237, column: 5, scope: !5162)
!5169 = !DILocation(line: 3238, column: 15, scope: !5162)
!5170 = !DILocation(line: 3238, column: 19, scope: !5162)
!5171 = !DILocation(line: 3238, column: 26, scope: !5162)
!5172 = !DILocation(line: 3238, column: 30, scope: !5162)
!5173 = !DILocation(line: 3238, column: 5, scope: !5162)
!5174 = !DILocation(line: 3239, column: 4, scope: !5162)
!5175 = !DILocation(line: 3236, column: 30, scope: !5156)
!5176 = !DILocation(line: 3236, column: 36, scope: !5156)
!5177 = !DILocation(line: 3236, column: 4, scope: !5156)
!5178 = distinct !{!5178, !5160, !5179}
!5179 = !DILocation(line: 3239, column: 4, scope: !5153)
!5180 = !DILocation(line: 3241, column: 3, scope: !5148)
!5181 = !DILocation(line: 3244, column: 7, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 3244, column: 7)
!5183 = !DILocation(line: 3244, column: 11, scope: !5182)
!5184 = !DILocation(line: 3244, column: 25, scope: !5182)
!5185 = !DILocation(line: 3244, column: 7, scope: !5144)
!5186 = !DILocation(line: 3245, column: 12, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 3244, column: 32)
!5188 = !DILocation(line: 3245, column: 16, scope: !5187)
!5189 = !DILocation(line: 3245, column: 30, scope: !5187)
!5190 = !DILocation(line: 3245, column: 10, scope: !5187)
!5191 = !DILocation(line: 3246, column: 3, scope: !5187)
!5192 = !DILocation(line: 3247, column: 9, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 3247, column: 3)
!5194 = !DILocation(line: 3247, column: 8, scope: !5193)
!5195 = !DILocation(line: 3247, column: 13, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 3247, column: 3)
!5197 = !DILocation(line: 3247, column: 15, scope: !5196)
!5198 = !DILocation(line: 3247, column: 19, scope: !5196)
!5199 = !DILocation(line: 3247, column: 14, scope: !5196)
!5200 = !DILocation(line: 3247, column: 3, scope: !5193)
!5201 = !DILocalVariable(name: "bs", scope: !5202, file: !3, line: 3248, type: !2948)
!5202 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 3247, column: 35)
!5203 = !DILocation(line: 3248, column: 16, scope: !5202)
!5204 = !DILocation(line: 3248, column: 22, scope: !5202)
!5205 = !DILocation(line: 3248, column: 26, scope: !5202)
!5206 = !DILocation(line: 3248, column: 34, scope: !5202)
!5207 = !DILocation(line: 3249, column: 13, scope: !5202)
!5208 = !DILocation(line: 3249, column: 28, scope: !5202)
!5209 = !DILocation(line: 3249, column: 32, scope: !5202)
!5210 = !DILocation(line: 3249, column: 39, scope: !5202)
!5211 = !DILocation(line: 3249, column: 43, scope: !5202)
!5212 = !DILocation(line: 3249, column: 47, scope: !5202)
!5213 = !DILocation(line: 3249, column: 54, scope: !5202)
!5214 = !DILocation(line: 3249, column: 58, scope: !5202)
!5215 = !DILocation(line: 3249, column: 65, scope: !5202)
!5216 = !DILocation(line: 3249, column: 69, scope: !5202)
!5217 = !DILocation(line: 3249, column: 73, scope: !5202)
!5218 = !DILocation(line: 3249, column: 19, scope: !5202)
!5219 = !DILocation(line: 3249, column: 18, scope: !5202)
!5220 = !DILocation(line: 3249, column: 4, scope: !5202)
!5221 = !DILocation(line: 3249, column: 8, scope: !5202)
!5222 = !DILocation(line: 3249, column: 11, scope: !5202)
!5223 = !DILocation(line: 3250, column: 3, scope: !5202)
!5224 = !DILocation(line: 3247, column: 31, scope: !5196)
!5225 = !DILocation(line: 3247, column: 3, scope: !5196)
!5226 = distinct !{!5226, !5200, !5227}
!5227 = !DILocation(line: 3250, column: 3, scope: !5193)
!5228 = !DILocation(line: 3251, column: 2, scope: !5144)
!5229 = !DILocation(line: 3252, column: 1, scope: !5119)
!5230 = distinct !DISubprogram(name: "calculate_collision_balls", scope: !3, file: !3, line: 799, type: !2459, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5231 = !DILocalVariable(name: "ob", arg: 1, scope: !5230, file: !3, line: 799, type: !2154)
!5232 = !DILocation(line: 799, column: 47, scope: !5230)
!5233 = !DILocalVariable(name: "sb", scope: !5230, file: !3, line: 801, type: !2192)
!5234 = !DILocation(line: 801, column: 12, scope: !5230)
!5235 = !DILocation(line: 801, column: 16, scope: !5230)
!5236 = !DILocation(line: 801, column: 20, scope: !5230)
!5237 = !DILocalVariable(name: "bp", scope: !5230, file: !3, line: 802, type: !2386)
!5238 = !DILocation(line: 802, column: 13, scope: !5230)
!5239 = !DILocalVariable(name: "bs", scope: !5230, file: !3, line: 803, type: !2948)
!5240 = !DILocation(line: 803, column: 14, scope: !5230)
!5241 = !DILocalVariable(name: "a", scope: !5230, file: !3, line: 804, type: !92)
!5242 = !DILocation(line: 804, column: 6, scope: !5230)
!5243 = !DILocalVariable(name: "b", scope: !5230, file: !3, line: 804, type: !92)
!5244 = !DILocation(line: 804, column: 9, scope: !5230)
!5245 = !DILocalVariable(name: "akku_count", scope: !5230, file: !3, line: 804, type: !92)
!5246 = !DILocation(line: 804, column: 12, scope: !5230)
!5247 = !DILocalVariable(name: "min", scope: !5230, file: !3, line: 805, type: !94)
!5248 = !DILocation(line: 805, column: 8, scope: !5230)
!5249 = !DILocalVariable(name: "max", scope: !5230, file: !3, line: 805, type: !94)
!5250 = !DILocation(line: 805, column: 13, scope: !5230)
!5251 = !DILocalVariable(name: "akku", scope: !5230, file: !3, line: 805, type: !94)
!5252 = !DILocation(line: 805, column: 18, scope: !5230)
!5253 = !DILocation(line: 807, column: 6, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 807, column: 6)
!5255 = !DILocation(line: 807, column: 8, scope: !5254)
!5256 = !DILocation(line: 807, column: 6, scope: !5230)
!5257 = !DILocation(line: 807, column: 16, scope: !5254)
!5258 = !DILocation(line: 809, column: 9, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 809, column: 2)
!5260 = !DILocation(line: 809, column: 13, scope: !5259)
!5261 = !DILocation(line: 809, column: 8, scope: !5259)
!5262 = !DILocation(line: 809, column: 27, scope: !5259)
!5263 = !DILocation(line: 809, column: 31, scope: !5259)
!5264 = !DILocation(line: 809, column: 25, scope: !5259)
!5265 = !DILocation(line: 809, column: 7, scope: !5259)
!5266 = !DILocation(line: 809, column: 39, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 809, column: 2)
!5268 = !DILocation(line: 809, column: 40, scope: !5267)
!5269 = !DILocation(line: 809, column: 2, scope: !5259)
!5270 = !DILocation(line: 810, column: 3, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 809, column: 55)
!5272 = !DILocation(line: 810, column: 7, scope: !5271)
!5273 = !DILocation(line: 810, column: 14, scope: !5271)
!5274 = !DILocation(line: 811, column: 8, scope: !5271)
!5275 = !DILocation(line: 812, column: 13, scope: !5271)
!5276 = !DILocation(line: 813, column: 7, scope: !5271)
!5277 = !DILocation(line: 814, column: 7, scope: !5271)
!5278 = !DILocation(line: 816, column: 10, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 816, column: 3)
!5280 = !DILocation(line: 816, column: 14, scope: !5279)
!5281 = !DILocation(line: 816, column: 9, scope: !5279)
!5282 = !DILocation(line: 816, column: 8, scope: !5279)
!5283 = !DILocation(line: 816, column: 25, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 816, column: 3)
!5285 = !DILocation(line: 816, column: 26, scope: !5284)
!5286 = !DILocation(line: 816, column: 3, scope: !5279)
!5287 = !DILocation(line: 817, column: 9, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 816, column: 34)
!5289 = !DILocation(line: 817, column: 13, scope: !5288)
!5290 = !DILocation(line: 817, column: 23, scope: !5288)
!5291 = !DILocation(line: 817, column: 27, scope: !5288)
!5292 = !DILocation(line: 817, column: 35, scope: !5288)
!5293 = !DILocation(line: 817, column: 36, scope: !5288)
!5294 = !DILocation(line: 817, column: 21, scope: !5288)
!5295 = !DILocation(line: 817, column: 7, scope: !5288)
!5296 = !DILocation(line: 818, column: 8, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 818, column: 8)
!5298 = !DILocation(line: 818, column: 12, scope: !5297)
!5299 = !DILocation(line: 818, column: 23, scope: !5297)
!5300 = !DILocation(line: 818, column: 8, scope: !5288)
!5301 = !DILocation(line: 819, column: 13, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 818, column: 35)
!5303 = !DILocation(line: 819, column: 17, scope: !5302)
!5304 = !DILocation(line: 819, column: 10, scope: !5302)
!5305 = !DILocation(line: 820, column: 15, scope: !5302)
!5306 = !DILocation(line: 821, column: 18, scope: !5302)
!5307 = !DILocation(line: 821, column: 22, scope: !5302)
!5308 = !DILocation(line: 821, column: 27, scope: !5302)
!5309 = !DILocation(line: 821, column: 11, scope: !5302)
!5310 = !DILocation(line: 821, column: 9, scope: !5302)
!5311 = !DILocation(line: 822, column: 18, scope: !5302)
!5312 = !DILocation(line: 822, column: 22, scope: !5302)
!5313 = !DILocation(line: 822, column: 27, scope: !5302)
!5314 = !DILocation(line: 822, column: 11, scope: !5302)
!5315 = !DILocation(line: 822, column: 9, scope: !5302)
!5316 = !DILocation(line: 823, column: 4, scope: !5302)
!5317 = !DILocation(line: 824, column: 3, scope: !5288)
!5318 = !DILocation(line: 816, column: 30, scope: !5284)
!5319 = !DILocation(line: 816, column: 3, scope: !5284)
!5320 = distinct !{!5320, !5286, !5321}
!5321 = !DILocation(line: 824, column: 3, scope: !5279)
!5322 = !DILocation(line: 826, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 826, column: 7)
!5324 = !DILocation(line: 826, column: 18, scope: !5323)
!5325 = !DILocation(line: 826, column: 7, scope: !5271)
!5326 = !DILocation(line: 827, column: 8, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 827, column: 8)
!5328 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 826, column: 23)
!5329 = !DILocation(line: 827, column: 12, scope: !5327)
!5330 = !DILocation(line: 827, column: 21, scope: !5327)
!5331 = !DILocation(line: 827, column: 8, scope: !5328)
!5332 = !DILocation(line: 828, column: 17, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 827, column: 41)
!5334 = !DILocation(line: 828, column: 21, scope: !5333)
!5335 = !DILocation(line: 828, column: 5, scope: !5333)
!5336 = !DILocation(line: 828, column: 9, scope: !5333)
!5337 = !DILocation(line: 828, column: 16, scope: !5333)
!5338 = !DILocation(line: 829, column: 4, scope: !5333)
!5339 = !DILocation(line: 830, column: 8, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 830, column: 8)
!5341 = !DILocation(line: 830, column: 12, scope: !5340)
!5342 = !DILocation(line: 830, column: 21, scope: !5340)
!5343 = !DILocation(line: 830, column: 8, scope: !5328)
!5344 = !DILocation(line: 831, column: 19, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 830, column: 38)
!5346 = !DILocation(line: 831, column: 31, scope: !5345)
!5347 = !DILocation(line: 831, column: 24, scope: !5345)
!5348 = !DILocation(line: 831, column: 23, scope: !5345)
!5349 = !DILocation(line: 831, column: 42, scope: !5345)
!5350 = !DILocation(line: 831, column: 46, scope: !5345)
!5351 = !DILocation(line: 831, column: 41, scope: !5345)
!5352 = !DILocation(line: 831, column: 5, scope: !5345)
!5353 = !DILocation(line: 831, column: 9, scope: !5345)
!5354 = !DILocation(line: 831, column: 17, scope: !5345)
!5355 = !DILocation(line: 832, column: 4, scope: !5345)
!5356 = !DILocation(line: 833, column: 8, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 833, column: 8)
!5358 = !DILocation(line: 833, column: 12, scope: !5357)
!5359 = !DILocation(line: 833, column: 21, scope: !5357)
!5360 = !DILocation(line: 833, column: 8, scope: !5328)
!5361 = !DILocation(line: 834, column: 17, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 833, column: 38)
!5363 = !DILocation(line: 834, column: 21, scope: !5362)
!5364 = !DILocation(line: 834, column: 25, scope: !5362)
!5365 = !DILocation(line: 834, column: 20, scope: !5362)
!5366 = !DILocation(line: 834, column: 5, scope: !5362)
!5367 = !DILocation(line: 834, column: 9, scope: !5362)
!5368 = !DILocation(line: 834, column: 16, scope: !5362)
!5369 = !DILocation(line: 835, column: 4, scope: !5362)
!5370 = !DILocation(line: 836, column: 8, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 836, column: 8)
!5372 = !DILocation(line: 836, column: 12, scope: !5371)
!5373 = !DILocation(line: 836, column: 21, scope: !5371)
!5374 = !DILocation(line: 836, column: 8, scope: !5328)
!5375 = !DILocation(line: 837, column: 17, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 836, column: 38)
!5377 = !DILocation(line: 837, column: 21, scope: !5376)
!5378 = !DILocation(line: 837, column: 25, scope: !5376)
!5379 = !DILocation(line: 837, column: 20, scope: !5376)
!5380 = !DILocation(line: 837, column: 5, scope: !5376)
!5381 = !DILocation(line: 837, column: 9, scope: !5376)
!5382 = !DILocation(line: 837, column: 16, scope: !5376)
!5383 = !DILocation(line: 838, column: 4, scope: !5376)
!5384 = !DILocation(line: 839, column: 8, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 839, column: 8)
!5386 = !DILocation(line: 839, column: 12, scope: !5385)
!5387 = !DILocation(line: 839, column: 21, scope: !5385)
!5388 = !DILocation(line: 839, column: 8, scope: !5328)
!5389 = !DILocation(line: 840, column: 20, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 839, column: 44)
!5391 = !DILocation(line: 840, column: 26, scope: !5390)
!5392 = !DILocation(line: 840, column: 24, scope: !5390)
!5393 = !DILocation(line: 840, column: 30, scope: !5390)
!5394 = !DILocation(line: 840, column: 36, scope: !5390)
!5395 = !DILocation(line: 840, column: 40, scope: !5390)
!5396 = !DILocation(line: 840, column: 35, scope: !5390)
!5397 = !DILocation(line: 840, column: 5, scope: !5390)
!5398 = !DILocation(line: 840, column: 9, scope: !5390)
!5399 = !DILocation(line: 840, column: 17, scope: !5390)
!5400 = !DILocation(line: 841, column: 4, scope: !5390)
!5401 = !DILocation(line: 842, column: 3, scope: !5328)
!5402 = !DILocation(line: 843, column: 8, scope: !5323)
!5403 = !DILocation(line: 843, column: 12, scope: !5323)
!5404 = !DILocation(line: 843, column: 19, scope: !5323)
!5405 = !DILocation(line: 844, column: 2, scope: !5271)
!5406 = !DILocation(line: 809, column: 45, scope: !5267)
!5407 = !DILocation(line: 809, column: 51, scope: !5267)
!5408 = !DILocation(line: 809, column: 2, scope: !5267)
!5409 = distinct !{!5409, !5269, !5410}
!5410 = !DILocation(line: 844, column: 2, scope: !5259)
!5411 = !DILocation(line: 845, column: 1, scope: !5230)
!5412 = distinct !DISubprogram(name: "count_mesh_quads", scope: !3, file: !3, line: 606, type: !5413, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!92, !100}
!5415 = !DILocalVariable(name: "me", arg: 1, scope: !5412, file: !3, line: 606, type: !100)
!5416 = !DILocation(line: 606, column: 35, scope: !5412)
!5417 = !DILocalVariable(name: "a", scope: !5412, file: !3, line: 608, type: !92)
!5418 = !DILocation(line: 608, column: 6, scope: !5412)
!5419 = !DILocalVariable(name: "result", scope: !5412, file: !3, line: 608, type: !92)
!5420 = !DILocation(line: 608, column: 9, scope: !5412)
!5421 = !DILocalVariable(name: "mface", scope: !5412, file: !3, line: 609, type: !4672)
!5422 = !DILocation(line: 609, column: 9, scope: !5412)
!5423 = !DILocation(line: 609, column: 16, scope: !5412)
!5424 = !DILocation(line: 609, column: 20, scope: !5412)
!5425 = !DILocation(line: 611, column: 6, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 611, column: 6)
!5427 = !DILocation(line: 611, column: 6, scope: !5412)
!5428 = !DILocation(line: 612, column: 10, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 612, column: 3)
!5430 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 611, column: 13)
!5431 = !DILocation(line: 612, column: 14, scope: !5429)
!5432 = !DILocation(line: 612, column: 9, scope: !5429)
!5433 = !DILocation(line: 612, column: 8, scope: !5429)
!5434 = !DILocation(line: 612, column: 23, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 612, column: 3)
!5436 = !DILocation(line: 612, column: 24, scope: !5435)
!5437 = !DILocation(line: 612, column: 3, scope: !5429)
!5438 = !DILocation(line: 613, column: 8, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 613, column: 8)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 612, column: 42)
!5441 = !DILocation(line: 613, column: 15, scope: !5439)
!5442 = !DILocation(line: 613, column: 8, scope: !5440)
!5443 = !DILocation(line: 613, column: 25, scope: !5439)
!5444 = !DILocation(line: 613, column: 19, scope: !5439)
!5445 = !DILocation(line: 614, column: 3, scope: !5440)
!5446 = !DILocation(line: 612, column: 29, scope: !5435)
!5447 = !DILocation(line: 612, column: 38, scope: !5435)
!5448 = !DILocation(line: 612, column: 3, scope: !5435)
!5449 = distinct !{!5449, !5437, !5450}
!5450 = !DILocation(line: 614, column: 3, scope: !5429)
!5451 = !DILocation(line: 615, column: 2, scope: !5430)
!5452 = !DILocation(line: 616, column: 9, scope: !5412)
!5453 = !DILocation(line: 616, column: 2, scope: !5412)
!5454 = distinct !DISubprogram(name: "add_bp_springlist", scope: !3, file: !3, line: 750, type: !5455, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{null, !2386, !92}
!5457 = !DILocalVariable(name: "bp", arg: 1, scope: !5454, file: !3, line: 750, type: !2386)
!5458 = !DILocation(line: 750, column: 42, scope: !5454)
!5459 = !DILocalVariable(name: "springID", arg: 2, scope: !5454, file: !3, line: 750, type: !92)
!5460 = !DILocation(line: 750, column: 50, scope: !5454)
!5461 = !DILocalVariable(name: "newlist", scope: !5454, file: !3, line: 752, type: !1059)
!5462 = !DILocation(line: 752, column: 7, scope: !5454)
!5463 = !DILocation(line: 754, column: 6, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 754, column: 6)
!5465 = !DILocation(line: 754, column: 10, scope: !5464)
!5466 = !DILocation(line: 754, column: 18, scope: !5464)
!5467 = !DILocation(line: 754, column: 6, scope: !5454)
!5468 = !DILocation(line: 755, column: 17, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 754, column: 27)
!5470 = !DILocation(line: 755, column: 3, scope: !5469)
!5471 = !DILocation(line: 755, column: 7, scope: !5469)
!5472 = !DILocation(line: 755, column: 15, scope: !5469)
!5473 = !DILocation(line: 756, column: 20, scope: !5469)
!5474 = !DILocation(line: 756, column: 3, scope: !5469)
!5475 = !DILocation(line: 756, column: 7, scope: !5469)
!5476 = !DILocation(line: 756, column: 18, scope: !5469)
!5477 = !DILocation(line: 757, column: 3, scope: !5469)
!5478 = !DILocation(line: 757, column: 7, scope: !5469)
!5479 = !DILocation(line: 757, column: 18, scope: !5469)
!5480 = !DILocation(line: 758, column: 2, scope: !5469)
!5481 = !DILocation(line: 760, column: 3, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 759, column: 7)
!5483 = !DILocation(line: 760, column: 7, scope: !5482)
!5484 = !DILocation(line: 760, column: 17, scope: !5482)
!5485 = !DILocation(line: 761, column: 13, scope: !5482)
!5486 = !DILocation(line: 761, column: 25, scope: !5482)
!5487 = !DILocation(line: 761, column: 29, scope: !5482)
!5488 = !DILocation(line: 761, column: 40, scope: !5482)
!5489 = !DILocation(line: 761, column: 11, scope: !5482)
!5490 = !DILocation(line: 762, column: 10, scope: !5482)
!5491 = !DILocation(line: 762, column: 3, scope: !5482)
!5492 = !DILocation(line: 762, column: 19, scope: !5482)
!5493 = !DILocation(line: 762, column: 23, scope: !5482)
!5494 = !DILocation(line: 762, column: 33, scope: !5482)
!5495 = !DILocation(line: 762, column: 37, scope: !5482)
!5496 = !DILocation(line: 762, column: 47, scope: !5482)
!5497 = !DILocation(line: 762, column: 32, scope: !5482)
!5498 = !DILocation(line: 762, column: 50, scope: !5482)
!5499 = !DILocation(line: 763, column: 3, scope: !5482)
!5500 = !DILocation(line: 763, column: 13, scope: !5482)
!5501 = !DILocation(line: 763, column: 17, scope: !5482)
!5502 = !DILocation(line: 764, column: 17, scope: !5482)
!5503 = !DILocation(line: 764, column: 3, scope: !5482)
!5504 = !DILocation(line: 764, column: 7, scope: !5482)
!5505 = !DILocation(line: 764, column: 15, scope: !5482)
!5506 = !DILocation(line: 765, column: 35, scope: !5482)
!5507 = !DILocation(line: 765, column: 3, scope: !5482)
!5508 = !DILocation(line: 765, column: 7, scope: !5482)
!5509 = !DILocation(line: 765, column: 15, scope: !5482)
!5510 = !DILocation(line: 765, column: 19, scope: !5482)
!5511 = !DILocation(line: 765, column: 29, scope: !5482)
!5512 = !DILocation(line: 765, column: 33, scope: !5482)
!5513 = !DILocation(line: 767, column: 1, scope: !5454)
!5514 = distinct !DISubprogram(name: "add_2nd_order_roller", scope: !3, file: !3, line: 667, type: !5515, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{null, !2154, !94, !1059, !92}
!5517 = !DILocalVariable(name: "ob", arg: 1, scope: !5514, file: !3, line: 667, type: !2154)
!5518 = !DILocation(line: 667, column: 42, scope: !5514)
!5519 = !DILocalVariable(name: "UNUSED_stiffness", arg: 2, scope: !5514, file: !3, line: 667, type: !94)
!5520 = !DILocation(line: 667, column: 52, scope: !5514)
!5521 = !DILocalVariable(name: "counter", arg: 3, scope: !5514, file: !3, line: 667, type: !1059)
!5522 = !DILocation(line: 667, column: 76, scope: !5514)
!5523 = !DILocalVariable(name: "addsprings", arg: 4, scope: !5514, file: !3, line: 667, type: !92)
!5524 = !DILocation(line: 667, column: 89, scope: !5514)
!5525 = !DILocalVariable(name: "sb", scope: !5514, file: !3, line: 670, type: !2192)
!5526 = !DILocation(line: 670, column: 12, scope: !5514)
!5527 = !DILocation(line: 670, column: 16, scope: !5514)
!5528 = !DILocation(line: 670, column: 20, scope: !5514)
!5529 = !DILocalVariable(name: "bp", scope: !5514, file: !3, line: 671, type: !2386)
!5530 = !DILocation(line: 671, column: 13, scope: !5514)
!5531 = !DILocalVariable(name: "bpo", scope: !5514, file: !3, line: 671, type: !2386)
!5532 = !DILocation(line: 671, column: 18, scope: !5514)
!5533 = !DILocalVariable(name: "bs", scope: !5514, file: !3, line: 672, type: !2948)
!5534 = !DILocation(line: 672, column: 14, scope: !5514)
!5535 = !DILocalVariable(name: "bs2", scope: !5514, file: !3, line: 672, type: !2948)
!5536 = !DILocation(line: 672, column: 19, scope: !5514)
!5537 = !DILocalVariable(name: "bs3", scope: !5514, file: !3, line: 672, type: !2948)
!5538 = !DILocation(line: 672, column: 25, scope: !5514)
!5539 = !DILocalVariable(name: "a", scope: !5514, file: !3, line: 673, type: !92)
!5540 = !DILocation(line: 673, column: 6, scope: !5514)
!5541 = !DILocalVariable(name: "b", scope: !5514, file: !3, line: 673, type: !92)
!5542 = !DILocation(line: 673, column: 9, scope: !5514)
!5543 = !DILocalVariable(name: "c", scope: !5514, file: !3, line: 673, type: !92)
!5544 = !DILocation(line: 673, column: 12, scope: !5514)
!5545 = !DILocalVariable(name: "notthis", scope: !5514, file: !3, line: 673, type: !92)
!5546 = !DILocation(line: 673, column: 15, scope: !5514)
!5547 = !DILocalVariable(name: "v0", scope: !5514, file: !3, line: 673, type: !92)
!5548 = !DILocation(line: 673, column: 27, scope: !5514)
!5549 = !DILocation(line: 674, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 674, column: 6)
!5551 = !DILocation(line: 674, column: 11, scope: !5550)
!5552 = !DILocation(line: 674, column: 6, scope: !5514)
!5553 = !DILocation(line: 674, column: 21, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 674, column: 20)
!5555 = !DILocation(line: 676, column: 3, scope: !5514)
!5556 = !DILocation(line: 676, column: 11, scope: !5514)
!5557 = !DILocation(line: 677, column: 6, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 677, column: 6)
!5559 = !DILocation(line: 677, column: 6, scope: !5514)
!5560 = !DILocation(line: 677, column: 24, scope: !5558)
!5561 = !DILocation(line: 677, column: 28, scope: !5558)
!5562 = !DILocation(line: 677, column: 34, scope: !5558)
!5563 = !DILocation(line: 677, column: 42, scope: !5558)
!5564 = !DILocation(line: 677, column: 46, scope: !5558)
!5565 = !DILocation(line: 677, column: 52, scope: !5558)
!5566 = !DILocation(line: 677, column: 41, scope: !5558)
!5567 = !DILocation(line: 677, column: 22, scope: !5558)
!5568 = !DILocation(line: 677, column: 18, scope: !5558)
!5569 = !DILocation(line: 678, column: 9, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 678, column: 2)
!5571 = !DILocation(line: 678, column: 13, scope: !5570)
!5572 = !DILocation(line: 678, column: 8, scope: !5570)
!5573 = !DILocation(line: 678, column: 27, scope: !5570)
!5574 = !DILocation(line: 678, column: 31, scope: !5570)
!5575 = !DILocation(line: 678, column: 25, scope: !5570)
!5576 = !DILocation(line: 678, column: 7, scope: !5570)
!5577 = !DILocation(line: 678, column: 39, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 678, column: 2)
!5579 = !DILocation(line: 678, column: 40, scope: !5578)
!5580 = !DILocation(line: 678, column: 2, scope: !5570)
!5581 = !DILocation(line: 680, column: 7, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 678, column: 55)
!5583 = !DILocation(line: 681, column: 10, scope: !5582)
!5584 = !DILocation(line: 681, column: 14, scope: !5582)
!5585 = !DILocation(line: 681, column: 23, scope: !5582)
!5586 = !DILocation(line: 681, column: 22, scope: !5582)
!5587 = !DILocation(line: 681, column: 7, scope: !5582)
!5588 = !DILocation(line: 682, column: 10, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 682, column: 3)
!5590 = !DILocation(line: 682, column: 14, scope: !5589)
!5591 = !DILocation(line: 682, column: 9, scope: !5589)
!5592 = !DILocation(line: 682, column: 8, scope: !5589)
!5593 = !DILocation(line: 682, column: 25, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 682, column: 3)
!5595 = !DILocation(line: 682, column: 26, scope: !5594)
!5596 = !DILocation(line: 682, column: 3, scope: !5589)
!5597 = !DILocation(line: 683, column: 9, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 682, column: 34)
!5599 = !DILocation(line: 683, column: 13, scope: !5598)
!5600 = !DILocation(line: 683, column: 23, scope: !5598)
!5601 = !DILocation(line: 683, column: 27, scope: !5598)
!5602 = !DILocation(line: 683, column: 35, scope: !5598)
!5603 = !DILocation(line: 683, column: 36, scope: !5598)
!5604 = !DILocation(line: 683, column: 21, scope: !5598)
!5605 = !DILocation(line: 683, column: 7, scope: !5598)
!5606 = !DILocation(line: 686, column: 8, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 686, column: 8)
!5608 = !DILocation(line: 686, column: 14, scope: !5607)
!5609 = !DILocation(line: 686, column: 18, scope: !5607)
!5610 = !DILocation(line: 686, column: 11, scope: !5607)
!5611 = !DILocation(line: 686, column: 8, scope: !5598)
!5612 = !DILocation(line: 687, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 686, column: 22)
!5614 = !DILocation(line: 687, column: 15, scope: !5613)
!5615 = !DILocation(line: 687, column: 22, scope: !5613)
!5616 = !DILocation(line: 687, column: 26, scope: !5613)
!5617 = !DILocation(line: 687, column: 21, scope: !5613)
!5618 = !DILocation(line: 687, column: 9, scope: !5613)
!5619 = !DILocation(line: 688, column: 15, scope: !5613)
!5620 = !DILocation(line: 688, column: 19, scope: !5613)
!5621 = !DILocation(line: 688, column: 13, scope: !5613)
!5622 = !DILocation(line: 689, column: 4, scope: !5613)
!5623 = !DILocation(line: 691, column: 8, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 691, column: 8)
!5625 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 690, column: 9)
!5626 = !DILocation(line: 691, column: 14, scope: !5624)
!5627 = !DILocation(line: 691, column: 18, scope: !5624)
!5628 = !DILocation(line: 691, column: 11, scope: !5624)
!5629 = !DILocation(line: 691, column: 8, scope: !5625)
!5630 = !DILocation(line: 692, column: 11, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 691, column: 22)
!5632 = !DILocation(line: 692, column: 15, scope: !5631)
!5633 = !DILocation(line: 692, column: 22, scope: !5631)
!5634 = !DILocation(line: 692, column: 26, scope: !5631)
!5635 = !DILocation(line: 692, column: 21, scope: !5631)
!5636 = !DILocation(line: 692, column: 9, scope: !5631)
!5637 = !DILocation(line: 693, column: 15, scope: !5631)
!5638 = !DILocation(line: 693, column: 19, scope: !5631)
!5639 = !DILocation(line: 693, column: 13, scope: !5631)
!5640 = !DILocation(line: 694, column: 4, scope: !5631)
!5641 = !DILocation(line: 695, column: 10, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 695, column: 9)
!5643 = !DILocation(line: 697, column: 8, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 697, column: 8)
!5645 = !DILocation(line: 697, column: 8, scope: !5598)
!5646 = !DILocation(line: 698, column: 12, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 698, column: 5)
!5648 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 697, column: 13)
!5649 = !DILocation(line: 698, column: 17, scope: !5647)
!5650 = !DILocation(line: 698, column: 11, scope: !5647)
!5651 = !DILocation(line: 698, column: 10, scope: !5647)
!5652 = !DILocation(line: 698, column: 28, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 698, column: 5)
!5654 = !DILocation(line: 698, column: 29, scope: !5653)
!5655 = !DILocation(line: 698, column: 5, scope: !5647)
!5656 = !DILocation(line: 699, column: 12, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 698, column: 37)
!5658 = !DILocation(line: 699, column: 16, scope: !5657)
!5659 = !DILocation(line: 699, column: 26, scope: !5657)
!5660 = !DILocation(line: 699, column: 31, scope: !5657)
!5661 = !DILocation(line: 699, column: 39, scope: !5657)
!5662 = !DILocation(line: 699, column: 40, scope: !5657)
!5663 = !DILocation(line: 699, column: 24, scope: !5657)
!5664 = !DILocation(line: 699, column: 10, scope: !5657)
!5665 = !DILocation(line: 700, column: 11, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 700, column: 10)
!5667 = !DILocation(line: 700, column: 16, scope: !5666)
!5668 = !DILocation(line: 700, column: 22, scope: !5666)
!5669 = !DILocation(line: 700, column: 19, scope: !5666)
!5670 = !DILocation(line: 700, column: 31, scope: !5666)
!5671 = !DILocation(line: 700, column: 35, scope: !5666)
!5672 = !DILocation(line: 700, column: 40, scope: !5666)
!5673 = !DILocation(line: 700, column: 45, scope: !5666)
!5674 = !DILocation(line: 700, column: 43, scope: !5666)
!5675 = !DILocation(line: 700, column: 10, scope: !5657)
!5676 = !DILocation(line: 701, column: 9, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 700, column: 50)
!5678 = !DILocation(line: 701, column: 17, scope: !5677)
!5679 = !DILocation(line: 702, column: 11, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 702, column: 11)
!5681 = !DILocation(line: 702, column: 11, scope: !5677)
!5682 = !DILocation(line: 703, column: 17, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 702, column: 23)
!5684 = !DILocation(line: 703, column: 8, scope: !5683)
!5685 = !DILocation(line: 703, column: 13, scope: !5683)
!5686 = !DILocation(line: 703, column: 15, scope: !5683)
!5687 = !DILocation(line: 704, column: 17, scope: !5683)
!5688 = !DILocation(line: 704, column: 22, scope: !5683)
!5689 = !DILocation(line: 704, column: 8, scope: !5683)
!5690 = !DILocation(line: 704, column: 13, scope: !5683)
!5691 = !DILocation(line: 704, column: 15, scope: !5683)
!5692 = !DILocation(line: 705, column: 8, scope: !5683)
!5693 = !DILocation(line: 705, column: 13, scope: !5683)
!5694 = !DILocation(line: 705, column: 26, scope: !5683)
!5695 = !DILocation(line: 706, column: 11, scope: !5683)
!5696 = !DILocation(line: 707, column: 7, scope: !5683)
!5697 = !DILocation(line: 708, column: 6, scope: !5677)
!5698 = !DILocation(line: 709, column: 11, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 709, column: 10)
!5700 = !DILocation(line: 709, column: 16, scope: !5699)
!5701 = !DILocation(line: 709, column: 21, scope: !5699)
!5702 = !DILocation(line: 709, column: 19, scope: !5699)
!5703 = !DILocation(line: 709, column: 29, scope: !5699)
!5704 = !DILocation(line: 709, column: 32, scope: !5699)
!5705 = !DILocation(line: 709, column: 37, scope: !5699)
!5706 = !DILocation(line: 709, column: 42, scope: !5699)
!5707 = !DILocation(line: 709, column: 40, scope: !5699)
!5708 = !DILocation(line: 709, column: 10, scope: !5657)
!5709 = !DILocation(line: 710, column: 8, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 709, column: 47)
!5711 = !DILocation(line: 710, column: 16, scope: !5710)
!5712 = !DILocation(line: 711, column: 11, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 711, column: 11)
!5714 = !DILocation(line: 711, column: 11, scope: !5710)
!5715 = !DILocation(line: 712, column: 17, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 711, column: 23)
!5717 = !DILocation(line: 712, column: 8, scope: !5716)
!5718 = !DILocation(line: 712, column: 13, scope: !5716)
!5719 = !DILocation(line: 712, column: 15, scope: !5716)
!5720 = !DILocation(line: 713, column: 17, scope: !5716)
!5721 = !DILocation(line: 713, column: 22, scope: !5716)
!5722 = !DILocation(line: 713, column: 8, scope: !5716)
!5723 = !DILocation(line: 713, column: 13, scope: !5716)
!5724 = !DILocation(line: 713, column: 15, scope: !5716)
!5725 = !DILocation(line: 714, column: 8, scope: !5716)
!5726 = !DILocation(line: 714, column: 13, scope: !5716)
!5727 = !DILocation(line: 714, column: 26, scope: !5716)
!5728 = !DILocation(line: 715, column: 11, scope: !5716)
!5729 = !DILocation(line: 716, column: 7, scope: !5716)
!5730 = !DILocation(line: 718, column: 6, scope: !5710)
!5731 = !DILocation(line: 719, column: 5, scope: !5657)
!5732 = !DILocation(line: 698, column: 33, scope: !5653)
!5733 = !DILocation(line: 698, column: 5, scope: !5653)
!5734 = distinct !{!5734, !5655, !5735}
!5735 = !DILocation(line: 719, column: 5, scope: !5647)
!5736 = !DILocation(line: 721, column: 4, scope: !5648)
!5737 = !DILocation(line: 723, column: 3, scope: !5598)
!5738 = !DILocation(line: 682, column: 30, scope: !5594)
!5739 = !DILocation(line: 682, column: 3, scope: !5594)
!5740 = distinct !{!5740, !5596, !5741}
!5741 = !DILocation(line: 723, column: 3, scope: !5589)
!5742 = !DILocation(line: 725, column: 2, scope: !5582)
!5743 = !DILocation(line: 678, column: 45, scope: !5578)
!5744 = !DILocation(line: 678, column: 51, scope: !5578)
!5745 = !DILocation(line: 678, column: 2, scope: !5578)
!5746 = distinct !{!5746, !5580, !5747}
!5747 = !DILocation(line: 725, column: 2, scope: !5570)
!5748 = !DILocation(line: 726, column: 1, scope: !5514)
!5749 = distinct !DISubprogram(name: "len_v3v3", scope: !2608, file: !2608, line: 759, type: !5750, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!94, !2611, !2611}
!5752 = !DILocalVariable(name: "a", arg: 1, scope: !5749, file: !2608, line: 759, type: !2611)
!5753 = !DILocation(line: 759, column: 36, scope: !5749)
!5754 = !DILocalVariable(name: "b", arg: 2, scope: !5749, file: !2608, line: 759, type: !2611)
!5755 = !DILocation(line: 759, column: 54, scope: !5749)
!5756 = !DILocalVariable(name: "d", scope: !5749, file: !2608, line: 761, type: !376)
!5757 = !DILocation(line: 761, column: 8, scope: !5749)
!5758 = !DILocation(line: 763, column: 14, scope: !5749)
!5759 = !DILocation(line: 763, column: 17, scope: !5749)
!5760 = !DILocation(line: 763, column: 20, scope: !5749)
!5761 = !DILocation(line: 763, column: 2, scope: !5749)
!5762 = !DILocation(line: 764, column: 16, scope: !5749)
!5763 = !DILocation(line: 764, column: 9, scope: !5749)
!5764 = !DILocation(line: 764, column: 2, scope: !5749)
!5765 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2608, file: !2608, line: 357, type: !5766, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !937, !2611, !2611}
!5768 = !DILocalVariable(name: "r", arg: 1, scope: !5765, file: !2608, line: 357, type: !937)
!5769 = !DILocation(line: 357, column: 32, scope: !5765)
!5770 = !DILocalVariable(name: "a", arg: 2, scope: !5765, file: !2608, line: 357, type: !2611)
!5771 = !DILocation(line: 357, column: 50, scope: !5765)
!5772 = !DILocalVariable(name: "b", arg: 3, scope: !5765, file: !2608, line: 357, type: !2611)
!5773 = !DILocation(line: 357, column: 68, scope: !5765)
!5774 = !DILocation(line: 359, column: 9, scope: !5765)
!5775 = !DILocation(line: 359, column: 16, scope: !5765)
!5776 = !DILocation(line: 359, column: 14, scope: !5765)
!5777 = !DILocation(line: 359, column: 2, scope: !5765)
!5778 = !DILocation(line: 359, column: 7, scope: !5765)
!5779 = !DILocation(line: 360, column: 9, scope: !5765)
!5780 = !DILocation(line: 360, column: 16, scope: !5765)
!5781 = !DILocation(line: 360, column: 14, scope: !5765)
!5782 = !DILocation(line: 360, column: 2, scope: !5765)
!5783 = !DILocation(line: 360, column: 7, scope: !5765)
!5784 = !DILocation(line: 361, column: 9, scope: !5765)
!5785 = !DILocation(line: 361, column: 16, scope: !5765)
!5786 = !DILocation(line: 361, column: 14, scope: !5765)
!5787 = !DILocation(line: 361, column: 2, scope: !5765)
!5788 = !DILocation(line: 361, column: 7, scope: !5765)
!5789 = !DILocation(line: 362, column: 1, scope: !5765)
!5790 = distinct !DISubprogram(name: "len_v3", scope: !2608, file: !2608, line: 714, type: !5791, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!94, !2611}
!5793 = !DILocalVariable(name: "a", arg: 1, scope: !5790, file: !2608, line: 714, type: !2611)
!5794 = !DILocation(line: 714, column: 34, scope: !5790)
!5795 = !DILocation(line: 716, column: 24, scope: !5790)
!5796 = !DILocation(line: 716, column: 27, scope: !5790)
!5797 = !DILocation(line: 716, column: 15, scope: !5790)
!5798 = !DILocation(line: 716, column: 9, scope: !5790)
!5799 = !DILocation(line: 716, column: 2, scope: !5790)
!5800 = distinct !DISubprogram(name: "dot_v3v3", scope: !2608, file: !2608, line: 619, type: !5750, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5801 = !DILocalVariable(name: "a", arg: 1, scope: !5800, file: !2608, line: 619, type: !2611)
!5802 = !DILocation(line: 619, column: 36, scope: !5800)
!5803 = !DILocalVariable(name: "b", arg: 2, scope: !5800, file: !2608, line: 619, type: !2611)
!5804 = !DILocation(line: 619, column: 54, scope: !5800)
!5805 = !DILocation(line: 621, column: 9, scope: !5800)
!5806 = !DILocation(line: 621, column: 16, scope: !5800)
!5807 = !DILocation(line: 621, column: 14, scope: !5800)
!5808 = !DILocation(line: 621, column: 23, scope: !5800)
!5809 = !DILocation(line: 621, column: 30, scope: !5800)
!5810 = !DILocation(line: 621, column: 28, scope: !5800)
!5811 = !DILocation(line: 621, column: 21, scope: !5800)
!5812 = !DILocation(line: 621, column: 37, scope: !5800)
!5813 = !DILocation(line: 621, column: 44, scope: !5800)
!5814 = !DILocation(line: 621, column: 42, scope: !5800)
!5815 = !DILocation(line: 621, column: 35, scope: !5800)
!5816 = !DILocation(line: 621, column: 2, scope: !5800)
!5817 = distinct !DISubprogram(name: "min_ff", scope: !5818, file: !5818, line: 202, type: !5819, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5818 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5819 = !DISubroutineType(types: !5820)
!5820 = !{!94, !94, !94}
!5821 = !DILocalVariable(name: "a", arg: 1, scope: !5817, file: !5818, line: 202, type: !94)
!5822 = !DILocation(line: 202, column: 28, scope: !5817)
!5823 = !DILocalVariable(name: "b", arg: 2, scope: !5817, file: !5818, line: 202, type: !94)
!5824 = !DILocation(line: 202, column: 37, scope: !5817)
!5825 = !DILocation(line: 204, column: 10, scope: !5817)
!5826 = !DILocation(line: 204, column: 14, scope: !5817)
!5827 = !DILocation(line: 204, column: 12, scope: !5817)
!5828 = !DILocation(line: 204, column: 9, scope: !5817)
!5829 = !DILocation(line: 204, column: 19, scope: !5817)
!5830 = !DILocation(line: 204, column: 23, scope: !5817)
!5831 = !DILocation(line: 204, column: 2, scope: !5817)
!5832 = distinct !DISubprogram(name: "max_ff", scope: !5818, file: !5818, line: 206, type: !5819, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5833 = !DILocalVariable(name: "a", arg: 1, scope: !5832, file: !5818, line: 206, type: !94)
!5834 = !DILocation(line: 206, column: 28, scope: !5832)
!5835 = !DILocalVariable(name: "b", arg: 2, scope: !5832, file: !5818, line: 206, type: !94)
!5836 = !DILocation(line: 206, column: 37, scope: !5832)
!5837 = !DILocation(line: 208, column: 10, scope: !5832)
!5838 = !DILocation(line: 208, column: 14, scope: !5832)
!5839 = !DILocation(line: 208, column: 12, scope: !5832)
!5840 = !DILocation(line: 208, column: 9, scope: !5832)
!5841 = !DILocation(line: 208, column: 19, scope: !5832)
!5842 = !DILocation(line: 208, column: 23, scope: !5832)
!5843 = !DILocation(line: 208, column: 2, scope: !5832)
!5844 = distinct !DISubprogram(name: "makelatticesprings", scope: !3, file: !3, line: 3422, type: !5845, scopeLine: 3423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !3164, !2948, !92, !2154}
!5847 = !DILocalVariable(name: "lt", arg: 1, scope: !5844, file: !3, line: 3422, type: !3164)
!5848 = !DILocation(line: 3422, column: 41, scope: !5844)
!5849 = !DILocalVariable(name: "bs", arg: 2, scope: !5844, file: !3, line: 3422, type: !2948)
!5850 = !DILocation(line: 3422, column: 57, scope: !5844)
!5851 = !DILocalVariable(name: "dostiff", arg: 3, scope: !5844, file: !3, line: 3422, type: !92)
!5852 = !DILocation(line: 3422, column: 65, scope: !5844)
!5853 = !DILocalVariable(name: "ob", arg: 4, scope: !5844, file: !3, line: 3422, type: !2154)
!5854 = !DILocation(line: 3422, column: 82, scope: !5844)
!5855 = !DILocalVariable(name: "bp", scope: !5844, file: !3, line: 3424, type: !3227)
!5856 = !DILocation(line: 3424, column: 10, scope: !5844)
!5857 = !DILocation(line: 3424, column: 13, scope: !5844)
!5858 = !DILocation(line: 3424, column: 17, scope: !5844)
!5859 = !DILocalVariable(name: "bpu", scope: !5844, file: !3, line: 3424, type: !3227)
!5860 = !DILocation(line: 3424, column: 23, scope: !5844)
!5861 = !DILocalVariable(name: "u", scope: !5844, file: !3, line: 3425, type: !92)
!5862 = !DILocation(line: 3425, column: 6, scope: !5844)
!5863 = !DILocalVariable(name: "v", scope: !5844, file: !3, line: 3425, type: !92)
!5864 = !DILocation(line: 3425, column: 9, scope: !5844)
!5865 = !DILocalVariable(name: "w", scope: !5844, file: !3, line: 3425, type: !92)
!5866 = !DILocation(line: 3425, column: 12, scope: !5844)
!5867 = !DILocalVariable(name: "dv", scope: !5844, file: !3, line: 3425, type: !92)
!5868 = !DILocation(line: 3425, column: 15, scope: !5844)
!5869 = !DILocalVariable(name: "dw", scope: !5844, file: !3, line: 3425, type: !92)
!5870 = !DILocation(line: 3425, column: 19, scope: !5844)
!5871 = !DILocalVariable(name: "bpc", scope: !5844, file: !3, line: 3425, type: !92)
!5872 = !DILocation(line: 3425, column: 23, scope: !5844)
!5873 = !DILocalVariable(name: "bpuc", scope: !5844, file: !3, line: 3425, type: !92)
!5874 = !DILocation(line: 3425, column: 30, scope: !5844)
!5875 = !DILocation(line: 3427, column: 6, scope: !5844)
!5876 = !DILocation(line: 3427, column: 10, scope: !5844)
!5877 = !DILocation(line: 3427, column: 4, scope: !5844)
!5878 = !DILocation(line: 3428, column: 6, scope: !5844)
!5879 = !DILocation(line: 3428, column: 9, scope: !5844)
!5880 = !DILocation(line: 3428, column: 13, scope: !5844)
!5881 = !DILocation(line: 3428, column: 8, scope: !5844)
!5882 = !DILocation(line: 3428, column: 4, scope: !5844)
!5883 = !DILocation(line: 3430, column: 8, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 3430, column: 2)
!5885 = !DILocation(line: 3430, column: 7, scope: !5884)
!5886 = !DILocation(line: 3430, column: 12, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3430, column: 2)
!5888 = !DILocation(line: 3430, column: 14, scope: !5887)
!5889 = !DILocation(line: 3430, column: 18, scope: !5887)
!5890 = !DILocation(line: 3430, column: 13, scope: !5887)
!5891 = !DILocation(line: 3430, column: 2, scope: !5884)
!5892 = !DILocation(line: 3432, column: 9, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 3432, column: 3)
!5894 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 3430, column: 30)
!5895 = !DILocation(line: 3432, column: 8, scope: !5893)
!5896 = !DILocation(line: 3432, column: 13, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 3432, column: 3)
!5898 = !DILocation(line: 3432, column: 15, scope: !5897)
!5899 = !DILocation(line: 3432, column: 19, scope: !5897)
!5900 = !DILocation(line: 3432, column: 14, scope: !5897)
!5901 = !DILocation(line: 3432, column: 3, scope: !5893)
!5902 = !DILocation(line: 3434, column: 10, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 3434, column: 4)
!5904 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 3432, column: 31)
!5905 = !DILocation(line: 3434, column: 18, scope: !5903)
!5906 = !DILocation(line: 3434, column: 25, scope: !5903)
!5907 = !DILocation(line: 3434, column: 9, scope: !5903)
!5908 = !DILocation(line: 3434, column: 32, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 3434, column: 4)
!5910 = !DILocation(line: 3434, column: 34, scope: !5909)
!5911 = !DILocation(line: 3434, column: 38, scope: !5909)
!5912 = !DILocation(line: 3434, column: 33, scope: !5909)
!5913 = !DILocation(line: 3434, column: 4, scope: !5903)
!5914 = !DILocation(line: 3436, column: 9, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3436, column: 9)
!5916 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 3434, column: 63)
!5917 = !DILocation(line: 3436, column: 9, scope: !5916)
!5918 = !DILocation(line: 3437, column: 15, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 3436, column: 12)
!5920 = !DILocation(line: 3437, column: 6, scope: !5919)
!5921 = !DILocation(line: 3437, column: 10, scope: !5919)
!5922 = !DILocation(line: 3437, column: 13, scope: !5919)
!5923 = !DILocation(line: 3438, column: 15, scope: !5919)
!5924 = !DILocation(line: 3438, column: 19, scope: !5919)
!5925 = !DILocation(line: 3438, column: 18, scope: !5919)
!5926 = !DILocation(line: 3438, column: 6, scope: !5919)
!5927 = !DILocation(line: 3438, column: 10, scope: !5919)
!5928 = !DILocation(line: 3438, column: 13, scope: !5919)
!5929 = !DILocation(line: 3439, column: 6, scope: !5919)
!5930 = !DILocation(line: 3439, column: 10, scope: !5919)
!5931 = !DILocation(line: 3439, column: 20, scope: !5919)
!5932 = !DILocation(line: 3440, column: 26, scope: !5919)
!5933 = !DILocation(line: 3440, column: 29, scope: !5919)
!5934 = !DILocation(line: 3440, column: 28, scope: !5919)
!5935 = !DILocation(line: 3440, column: 34, scope: !5919)
!5936 = !DILocation(line: 3440, column: 25, scope: !5919)
!5937 = !DILocation(line: 3440, column: 39, scope: !5919)
!5938 = !DILocation(line: 3440, column: 43, scope: !5919)
!5939 = !DILocation(line: 3440, column: 48, scope: !5919)
!5940 = !DILocation(line: 3440, column: 15, scope: !5919)
!5941 = !DILocation(line: 3440, column: 6, scope: !5919)
!5942 = !DILocation(line: 3440, column: 10, scope: !5919)
!5943 = !DILocation(line: 3440, column: 13, scope: !5919)
!5944 = !DILocation(line: 3441, column: 8, scope: !5919)
!5945 = !DILocation(line: 3442, column: 5, scope: !5919)
!5946 = !DILocation(line: 3443, column: 9, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3443, column: 9)
!5948 = !DILocation(line: 3443, column: 9, scope: !5916)
!5949 = !DILocation(line: 3444, column: 15, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3443, column: 12)
!5951 = !DILocation(line: 3444, column: 6, scope: !5950)
!5952 = !DILocation(line: 3444, column: 10, scope: !5950)
!5953 = !DILocation(line: 3444, column: 13, scope: !5950)
!5954 = !DILocation(line: 3445, column: 15, scope: !5950)
!5955 = !DILocation(line: 3445, column: 19, scope: !5950)
!5956 = !DILocation(line: 3445, column: 18, scope: !5950)
!5957 = !DILocation(line: 3445, column: 6, scope: !5950)
!5958 = !DILocation(line: 3445, column: 10, scope: !5950)
!5959 = !DILocation(line: 3445, column: 13, scope: !5950)
!5960 = !DILocation(line: 3446, column: 6, scope: !5950)
!5961 = !DILocation(line: 3446, column: 10, scope: !5950)
!5962 = !DILocation(line: 3446, column: 20, scope: !5950)
!5963 = !DILocation(line: 3447, column: 26, scope: !5950)
!5964 = !DILocation(line: 3447, column: 29, scope: !5950)
!5965 = !DILocation(line: 3447, column: 28, scope: !5950)
!5966 = !DILocation(line: 3447, column: 34, scope: !5950)
!5967 = !DILocation(line: 3447, column: 25, scope: !5950)
!5968 = !DILocation(line: 3447, column: 39, scope: !5950)
!5969 = !DILocation(line: 3447, column: 43, scope: !5950)
!5970 = !DILocation(line: 3447, column: 48, scope: !5950)
!5971 = !DILocation(line: 3447, column: 15, scope: !5950)
!5972 = !DILocation(line: 3447, column: 6, scope: !5950)
!5973 = !DILocation(line: 3447, column: 10, scope: !5950)
!5974 = !DILocation(line: 3447, column: 13, scope: !5950)
!5975 = !DILocation(line: 3448, column: 8, scope: !5950)
!5976 = !DILocation(line: 3449, column: 5, scope: !5950)
!5977 = !DILocation(line: 3450, column: 9, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3450, column: 9)
!5979 = !DILocation(line: 3450, column: 9, scope: !5916)
!5980 = !DILocation(line: 3451, column: 15, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 3450, column: 12)
!5982 = !DILocation(line: 3451, column: 6, scope: !5981)
!5983 = !DILocation(line: 3451, column: 10, scope: !5981)
!5984 = !DILocation(line: 3451, column: 13, scope: !5981)
!5985 = !DILocation(line: 3452, column: 15, scope: !5981)
!5986 = !DILocation(line: 3452, column: 6, scope: !5981)
!5987 = !DILocation(line: 3452, column: 10, scope: !5981)
!5988 = !DILocation(line: 3452, column: 13, scope: !5981)
!5989 = !DILocation(line: 3453, column: 6, scope: !5981)
!5990 = !DILocation(line: 3453, column: 10, scope: !5981)
!5991 = !DILocation(line: 3453, column: 20, scope: !5981)
!5992 = !DILocation(line: 3454, column: 26, scope: !5981)
!5993 = !DILocation(line: 3454, column: 32, scope: !5981)
!5994 = !DILocation(line: 3454, column: 25, scope: !5981)
!5995 = !DILocation(line: 3454, column: 37, scope: !5981)
!5996 = !DILocation(line: 3454, column: 41, scope: !5981)
!5997 = !DILocation(line: 3454, column: 46, scope: !5981)
!5998 = !DILocation(line: 3454, column: 15, scope: !5981)
!5999 = !DILocation(line: 3454, column: 6, scope: !5981)
!6000 = !DILocation(line: 3454, column: 10, scope: !5981)
!6001 = !DILocation(line: 3454, column: 13, scope: !5981)
!6002 = !DILocation(line: 3455, column: 8, scope: !5981)
!6003 = !DILocation(line: 3456, column: 5, scope: !5981)
!6004 = !DILocation(line: 3458, column: 9, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3458, column: 9)
!6006 = !DILocation(line: 3458, column: 9, scope: !5916)
!6007 = !DILocation(line: 3460, column: 10, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 3460, column: 10)
!6009 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 3458, column: 18)
!6010 = !DILocation(line: 3460, column: 10, scope: !6009)
!6011 = !DILocation(line: 3461, column: 12, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 3461, column: 12)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 3460, column: 13)
!6014 = !DILocation(line: 3461, column: 14, scope: !6012)
!6015 = !DILocation(line: 3461, column: 17, scope: !6012)
!6016 = !DILocation(line: 3461, column: 12, scope: !6013)
!6017 = !DILocation(line: 3462, column: 17, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 3461, column: 21)
!6019 = !DILocation(line: 3462, column: 8, scope: !6018)
!6020 = !DILocation(line: 3462, column: 12, scope: !6018)
!6021 = !DILocation(line: 3462, column: 15, scope: !6018)
!6022 = !DILocation(line: 3463, column: 17, scope: !6018)
!6023 = !DILocation(line: 3463, column: 21, scope: !6018)
!6024 = !DILocation(line: 3463, column: 20, scope: !6018)
!6025 = !DILocation(line: 3463, column: 24, scope: !6018)
!6026 = !DILocation(line: 3463, column: 23, scope: !6018)
!6027 = !DILocation(line: 3463, column: 26, scope: !6018)
!6028 = !DILocation(line: 3463, column: 8, scope: !6018)
!6029 = !DILocation(line: 3463, column: 12, scope: !6018)
!6030 = !DILocation(line: 3463, column: 15, scope: !6018)
!6031 = !DILocation(line: 3464, column: 8, scope: !6018)
!6032 = !DILocation(line: 3464, column: 12, scope: !6018)
!6033 = !DILocation(line: 3464, column: 22, scope: !6018)
!6034 = !DILocation(line: 3465, column: 28, scope: !6018)
!6035 = !DILocation(line: 3465, column: 31, scope: !6018)
!6036 = !DILocation(line: 3465, column: 30, scope: !6018)
!6037 = !DILocation(line: 3465, column: 34, scope: !6018)
!6038 = !DILocation(line: 3465, column: 33, scope: !6018)
!6039 = !DILocation(line: 3465, column: 36, scope: !6018)
!6040 = !DILocation(line: 3465, column: 41, scope: !6018)
!6041 = !DILocation(line: 3465, column: 27, scope: !6018)
!6042 = !DILocation(line: 3465, column: 46, scope: !6018)
!6043 = !DILocation(line: 3465, column: 50, scope: !6018)
!6044 = !DILocation(line: 3465, column: 55, scope: !6018)
!6045 = !DILocation(line: 3465, column: 17, scope: !6018)
!6046 = !DILocation(line: 3465, column: 8, scope: !6018)
!6047 = !DILocation(line: 3465, column: 12, scope: !6018)
!6048 = !DILocation(line: 3465, column: 15, scope: !6018)
!6049 = !DILocation(line: 3466, column: 10, scope: !6018)
!6050 = !DILocation(line: 3467, column: 7, scope: !6018)
!6051 = !DILocation(line: 3468, column: 13, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 3468, column: 12)
!6053 = !DILocation(line: 3468, column: 17, scope: !6052)
!6054 = !DILocation(line: 3468, column: 21, scope: !6052)
!6055 = !DILocation(line: 3468, column: 26, scope: !6052)
!6056 = !DILocation(line: 3468, column: 15, scope: !6052)
!6057 = !DILocation(line: 3468, column: 30, scope: !6052)
!6058 = !DILocation(line: 3468, column: 34, scope: !6052)
!6059 = !DILocation(line: 3468, column: 36, scope: !6052)
!6060 = !DILocation(line: 3468, column: 12, scope: !6013)
!6061 = !DILocation(line: 3469, column: 17, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 3468, column: 44)
!6063 = !DILocation(line: 3469, column: 8, scope: !6062)
!6064 = !DILocation(line: 3469, column: 12, scope: !6062)
!6065 = !DILocation(line: 3469, column: 15, scope: !6062)
!6066 = !DILocation(line: 3470, column: 17, scope: !6062)
!6067 = !DILocation(line: 3470, column: 21, scope: !6062)
!6068 = !DILocation(line: 3470, column: 20, scope: !6062)
!6069 = !DILocation(line: 3470, column: 24, scope: !6062)
!6070 = !DILocation(line: 3470, column: 23, scope: !6062)
!6071 = !DILocation(line: 3470, column: 26, scope: !6062)
!6072 = !DILocation(line: 3470, column: 8, scope: !6062)
!6073 = !DILocation(line: 3470, column: 12, scope: !6062)
!6074 = !DILocation(line: 3470, column: 15, scope: !6062)
!6075 = !DILocation(line: 3471, column: 8, scope: !6062)
!6076 = !DILocation(line: 3471, column: 12, scope: !6062)
!6077 = !DILocation(line: 3471, column: 22, scope: !6062)
!6078 = !DILocation(line: 3472, column: 28, scope: !6062)
!6079 = !DILocation(line: 3472, column: 31, scope: !6062)
!6080 = !DILocation(line: 3472, column: 30, scope: !6062)
!6081 = !DILocation(line: 3472, column: 34, scope: !6062)
!6082 = !DILocation(line: 3472, column: 33, scope: !6062)
!6083 = !DILocation(line: 3472, column: 36, scope: !6062)
!6084 = !DILocation(line: 3472, column: 41, scope: !6062)
!6085 = !DILocation(line: 3472, column: 27, scope: !6062)
!6086 = !DILocation(line: 3472, column: 46, scope: !6062)
!6087 = !DILocation(line: 3472, column: 50, scope: !6062)
!6088 = !DILocation(line: 3472, column: 55, scope: !6062)
!6089 = !DILocation(line: 3472, column: 17, scope: !6062)
!6090 = !DILocation(line: 3472, column: 8, scope: !6062)
!6091 = !DILocation(line: 3472, column: 12, scope: !6062)
!6092 = !DILocation(line: 3472, column: 15, scope: !6062)
!6093 = !DILocation(line: 3473, column: 10, scope: !6062)
!6094 = !DILocation(line: 3474, column: 7, scope: !6062)
!6095 = !DILocation(line: 3475, column: 6, scope: !6013)
!6096 = !DILocation(line: 3477, column: 10, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 3477, column: 10)
!6098 = !DILocation(line: 3477, column: 14, scope: !6097)
!6099 = !DILocation(line: 3477, column: 18, scope: !6097)
!6100 = !DILocation(line: 3477, column: 24, scope: !6097)
!6101 = !DILocation(line: 3477, column: 12, scope: !6097)
!6102 = !DILocation(line: 3477, column: 10, scope: !6009)
!6103 = !DILocation(line: 3478, column: 12, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 3478, column: 12)
!6105 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 3477, column: 28)
!6106 = !DILocation(line: 3478, column: 14, scope: !6104)
!6107 = !DILocation(line: 3478, column: 17, scope: !6104)
!6108 = !DILocation(line: 3478, column: 12, scope: !6105)
!6109 = !DILocation(line: 3479, column: 17, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 3478, column: 21)
!6111 = !DILocation(line: 3479, column: 8, scope: !6110)
!6112 = !DILocation(line: 3479, column: 12, scope: !6110)
!6113 = !DILocation(line: 3479, column: 15, scope: !6110)
!6114 = !DILocation(line: 3480, column: 17, scope: !6110)
!6115 = !DILocation(line: 3480, column: 21, scope: !6110)
!6116 = !DILocation(line: 3480, column: 20, scope: !6110)
!6117 = !DILocation(line: 3480, column: 24, scope: !6110)
!6118 = !DILocation(line: 3480, column: 23, scope: !6110)
!6119 = !DILocation(line: 3480, column: 26, scope: !6110)
!6120 = !DILocation(line: 3480, column: 8, scope: !6110)
!6121 = !DILocation(line: 3480, column: 12, scope: !6110)
!6122 = !DILocation(line: 3480, column: 15, scope: !6110)
!6123 = !DILocation(line: 3481, column: 8, scope: !6110)
!6124 = !DILocation(line: 3481, column: 12, scope: !6110)
!6125 = !DILocation(line: 3481, column: 22, scope: !6110)
!6126 = !DILocation(line: 3482, column: 28, scope: !6110)
!6127 = !DILocation(line: 3482, column: 31, scope: !6110)
!6128 = !DILocation(line: 3482, column: 30, scope: !6110)
!6129 = !DILocation(line: 3482, column: 34, scope: !6110)
!6130 = !DILocation(line: 3482, column: 33, scope: !6110)
!6131 = !DILocation(line: 3482, column: 36, scope: !6110)
!6132 = !DILocation(line: 3482, column: 41, scope: !6110)
!6133 = !DILocation(line: 3482, column: 27, scope: !6110)
!6134 = !DILocation(line: 3482, column: 46, scope: !6110)
!6135 = !DILocation(line: 3482, column: 50, scope: !6110)
!6136 = !DILocation(line: 3482, column: 55, scope: !6110)
!6137 = !DILocation(line: 3482, column: 17, scope: !6110)
!6138 = !DILocation(line: 3482, column: 8, scope: !6110)
!6139 = !DILocation(line: 3482, column: 12, scope: !6110)
!6140 = !DILocation(line: 3482, column: 15, scope: !6110)
!6141 = !DILocation(line: 3483, column: 10, scope: !6110)
!6142 = !DILocation(line: 3484, column: 7, scope: !6110)
!6143 = !DILocation(line: 3485, column: 13, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 3485, column: 12)
!6145 = !DILocation(line: 3485, column: 17, scope: !6144)
!6146 = !DILocation(line: 3485, column: 21, scope: !6144)
!6147 = !DILocation(line: 3485, column: 26, scope: !6144)
!6148 = !DILocation(line: 3485, column: 15, scope: !6144)
!6149 = !DILocation(line: 3485, column: 30, scope: !6144)
!6150 = !DILocation(line: 3485, column: 34, scope: !6144)
!6151 = !DILocation(line: 3485, column: 36, scope: !6144)
!6152 = !DILocation(line: 3485, column: 12, scope: !6105)
!6153 = !DILocation(line: 3486, column: 17, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 3485, column: 44)
!6155 = !DILocation(line: 3486, column: 8, scope: !6154)
!6156 = !DILocation(line: 3486, column: 12, scope: !6154)
!6157 = !DILocation(line: 3486, column: 15, scope: !6154)
!6158 = !DILocation(line: 3487, column: 17, scope: !6154)
!6159 = !DILocation(line: 3487, column: 21, scope: !6154)
!6160 = !DILocation(line: 3487, column: 20, scope: !6154)
!6161 = !DILocation(line: 3487, column: 24, scope: !6154)
!6162 = !DILocation(line: 3487, column: 23, scope: !6154)
!6163 = !DILocation(line: 3487, column: 26, scope: !6154)
!6164 = !DILocation(line: 3487, column: 8, scope: !6154)
!6165 = !DILocation(line: 3487, column: 12, scope: !6154)
!6166 = !DILocation(line: 3487, column: 15, scope: !6154)
!6167 = !DILocation(line: 3488, column: 8, scope: !6154)
!6168 = !DILocation(line: 3488, column: 12, scope: !6154)
!6169 = !DILocation(line: 3488, column: 22, scope: !6154)
!6170 = !DILocation(line: 3489, column: 29, scope: !6154)
!6171 = !DILocation(line: 3489, column: 32, scope: !6154)
!6172 = !DILocation(line: 3489, column: 31, scope: !6154)
!6173 = !DILocation(line: 3489, column: 35, scope: !6154)
!6174 = !DILocation(line: 3489, column: 34, scope: !6154)
!6175 = !DILocation(line: 3489, column: 37, scope: !6154)
!6176 = !DILocation(line: 3489, column: 42, scope: !6154)
!6177 = !DILocation(line: 3489, column: 28, scope: !6154)
!6178 = !DILocation(line: 3489, column: 47, scope: !6154)
!6179 = !DILocation(line: 3489, column: 51, scope: !6154)
!6180 = !DILocation(line: 3489, column: 56, scope: !6154)
!6181 = !DILocation(line: 3489, column: 18, scope: !6154)
!6182 = !DILocation(line: 3489, column: 9, scope: !6154)
!6183 = !DILocation(line: 3489, column: 13, scope: !6154)
!6184 = !DILocation(line: 3489, column: 16, scope: !6154)
!6185 = !DILocation(line: 3490, column: 10, scope: !6154)
!6186 = !DILocation(line: 3491, column: 7, scope: !6154)
!6187 = !DILocation(line: 3492, column: 6, scope: !6105)
!6188 = !DILocation(line: 3493, column: 5, scope: !6009)
!6189 = !DILocation(line: 3494, column: 11, scope: !5916)
!6190 = !DILocation(line: 3494, column: 9, scope: !5916)
!6191 = !DILocation(line: 3495, column: 12, scope: !5916)
!6192 = !DILocation(line: 3495, column: 10, scope: !5916)
!6193 = !DILocation(line: 3496, column: 4, scope: !5916)
!6194 = !DILocation(line: 3434, column: 46, scope: !5909)
!6195 = !DILocation(line: 3434, column: 52, scope: !5909)
!6196 = !DILocation(line: 3434, column: 59, scope: !5909)
!6197 = !DILocation(line: 3434, column: 4, scope: !5909)
!6198 = distinct !{!6198, !5913, !6199}
!6199 = !DILocation(line: 3496, column: 4, scope: !5903)
!6200 = !DILocation(line: 3497, column: 3, scope: !5904)
!6201 = !DILocation(line: 3432, column: 27, scope: !5897)
!6202 = !DILocation(line: 3432, column: 3, scope: !5897)
!6203 = distinct !{!6203, !5901, !6204}
!6204 = !DILocation(line: 3497, column: 3, scope: !5893)
!6205 = !DILocation(line: 3498, column: 2, scope: !5894)
!6206 = !DILocation(line: 3430, column: 26, scope: !5887)
!6207 = !DILocation(line: 3430, column: 2, scope: !5887)
!6208 = distinct !{!6208, !5891, !6209}
!6209 = !DILocation(line: 3498, column: 2, scope: !5884)
!6210 = !DILocation(line: 3499, column: 1, scope: !5844)
!6211 = distinct !DISubprogram(name: "globallen", scope: !3, file: !3, line: 3412, type: !6212, scopeLine: 3413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{!94, !937, !937, !2154}
!6214 = !DILocalVariable(name: "v1", arg: 1, scope: !6211, file: !3, line: 3412, type: !937)
!6215 = !DILocation(line: 3412, column: 31, scope: !6211)
!6216 = !DILocalVariable(name: "v2", arg: 2, scope: !6211, file: !3, line: 3412, type: !937)
!6217 = !DILocation(line: 3412, column: 42, scope: !6211)
!6218 = !DILocalVariable(name: "ob", arg: 3, scope: !6211, file: !3, line: 3412, type: !2154)
!6219 = !DILocation(line: 3412, column: 54, scope: !6211)
!6220 = !DILocalVariable(name: "p1", scope: !6211, file: !3, line: 3414, type: !376)
!6221 = !DILocation(line: 3414, column: 8, scope: !6211)
!6222 = !DILocalVariable(name: "p2", scope: !6211, file: !3, line: 3414, type: !376)
!6223 = !DILocation(line: 3414, column: 15, scope: !6211)
!6224 = !DILocation(line: 3415, column: 13, scope: !6211)
!6225 = !DILocation(line: 3415, column: 17, scope: !6211)
!6226 = !DILocation(line: 3415, column: 2, scope: !6211)
!6227 = !DILocation(line: 3416, column: 12, scope: !6211)
!6228 = !DILocation(line: 3416, column: 16, scope: !6211)
!6229 = !DILocation(line: 3416, column: 23, scope: !6211)
!6230 = !DILocation(line: 3416, column: 2, scope: !6211)
!6231 = !DILocation(line: 3417, column: 13, scope: !6211)
!6232 = !DILocation(line: 3417, column: 17, scope: !6211)
!6233 = !DILocation(line: 3417, column: 2, scope: !6211)
!6234 = !DILocation(line: 3418, column: 12, scope: !6211)
!6235 = !DILocation(line: 3418, column: 16, scope: !6211)
!6236 = !DILocation(line: 3418, column: 23, scope: !6211)
!6237 = !DILocation(line: 3418, column: 2, scope: !6211)
!6238 = !DILocation(line: 3419, column: 18, scope: !6211)
!6239 = !DILocation(line: 3419, column: 22, scope: !6211)
!6240 = !DILocation(line: 3419, column: 9, scope: !6211)
!6241 = !DILocation(line: 3419, column: 2, scope: !6211)
!6242 = distinct !DISubprogram(name: "zero_v3", scope: !2608, file: !2608, line: 43, type: !6243, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{null, !937}
!6245 = !DILocalVariable(name: "r", arg: 1, scope: !6242, file: !2608, line: 43, type: !937)
!6246 = !DILocation(line: 43, column: 28, scope: !6242)
!6247 = !DILocation(line: 45, column: 2, scope: !6242)
!6248 = !DILocation(line: 45, column: 7, scope: !6242)
!6249 = !DILocation(line: 46, column: 2, scope: !6242)
!6250 = !DILocation(line: 46, column: 7, scope: !6242)
!6251 = !DILocation(line: 47, column: 2, scope: !6242)
!6252 = !DILocation(line: 47, column: 7, scope: !6242)
!6253 = !DILocation(line: 48, column: 1, scope: !6242)
!6254 = distinct !DISubprogram(name: "reference_to_scratch", scope: !3, file: !3, line: 3386, type: !2459, scopeLine: 3387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6255 = !DILocalVariable(name: "ob", arg: 1, scope: !6254, file: !3, line: 3386, type: !2154)
!6256 = !DILocation(line: 3386, column: 42, scope: !6254)
!6257 = !DILocalVariable(name: "sb", scope: !6254, file: !3, line: 3388, type: !2192)
!6258 = !DILocation(line: 3388, column: 12, scope: !6254)
!6259 = !DILocation(line: 3388, column: 16, scope: !6254)
!6260 = !DILocation(line: 3388, column: 20, scope: !6254)
!6261 = !DILocalVariable(name: "rp", scope: !6254, file: !3, line: 3389, type: !1155)
!6262 = !DILocation(line: 3389, column: 17, scope: !6254)
!6263 = !DILocalVariable(name: "bp", scope: !6254, file: !3, line: 3390, type: !2386)
!6264 = !DILocation(line: 3390, column: 17, scope: !6254)
!6265 = !DILocalVariable(name: "accu_pos", scope: !6254, file: !3, line: 3391, type: !376)
!6266 = !DILocation(line: 3391, column: 8, scope: !6254)
!6267 = !DILocalVariable(name: "accu_mass", scope: !6254, file: !3, line: 3392, type: !94)
!6268 = !DILocation(line: 3392, column: 8, scope: !6254)
!6269 = !DILocalVariable(name: "a", scope: !6254, file: !3, line: 3393, type: !92)
!6270 = !DILocation(line: 3393, column: 6, scope: !6254)
!6271 = !DILocation(line: 3395, column: 27, scope: !6254)
!6272 = !DILocation(line: 3395, column: 61, scope: !6254)
!6273 = !DILocation(line: 3395, column: 65, scope: !6254)
!6274 = !DILocation(line: 3395, column: 60, scope: !6254)
!6275 = !DILocation(line: 3395, column: 2, scope: !6254)
!6276 = !DILocation(line: 3395, column: 6, scope: !6254)
!6277 = !DILocation(line: 3395, column: 15, scope: !6254)
!6278 = !DILocation(line: 3395, column: 19, scope: !6254)
!6279 = !DILocation(line: 3395, column: 25, scope: !6254)
!6280 = !DILocation(line: 3396, column: 6, scope: !6254)
!6281 = !DILocation(line: 3396, column: 10, scope: !6254)
!6282 = !DILocation(line: 3396, column: 16, scope: !6254)
!6283 = !DILocation(line: 3396, column: 4, scope: !6254)
!6284 = !DILocation(line: 3397, column: 6, scope: !6254)
!6285 = !DILocation(line: 3397, column: 10, scope: !6254)
!6286 = !DILocation(line: 3397, column: 19, scope: !6254)
!6287 = !DILocation(line: 3397, column: 23, scope: !6254)
!6288 = !DILocation(line: 3397, column: 4, scope: !6254)
!6289 = !DILocation(line: 3398, column: 8, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 3398, column: 2)
!6291 = !DILocation(line: 3398, column: 7, scope: !6290)
!6292 = !DILocation(line: 3398, column: 12, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 3398, column: 2)
!6294 = !DILocation(line: 3398, column: 14, scope: !6293)
!6295 = !DILocation(line: 3398, column: 18, scope: !6293)
!6296 = !DILocation(line: 3398, column: 13, scope: !6293)
!6297 = !DILocation(line: 3398, column: 2, scope: !6290)
!6298 = !DILocation(line: 3399, column: 14, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 3398, column: 45)
!6300 = !DILocation(line: 3399, column: 18, scope: !6299)
!6301 = !DILocation(line: 3399, column: 23, scope: !6299)
!6302 = !DILocation(line: 3399, column: 27, scope: !6299)
!6303 = !DILocation(line: 3399, column: 3, scope: !6299)
!6304 = !DILocation(line: 3400, column: 13, scope: !6299)
!6305 = !DILocation(line: 3400, column: 23, scope: !6299)
!6306 = !DILocation(line: 3400, column: 27, scope: !6299)
!6307 = !DILocation(line: 3400, column: 3, scope: !6299)
!6308 = !DILocation(line: 3401, column: 28, scope: !6299)
!6309 = !DILocation(line: 3401, column: 32, scope: !6299)
!6310 = !DILocation(line: 3401, column: 16, scope: !6299)
!6311 = !DILocation(line: 3401, column: 13, scope: !6299)
!6312 = !DILocation(line: 3402, column: 2, scope: !6299)
!6313 = !DILocation(line: 3398, column: 29, scope: !6293)
!6314 = !DILocation(line: 3398, column: 35, scope: !6293)
!6315 = !DILocation(line: 3398, column: 41, scope: !6293)
!6316 = !DILocation(line: 3398, column: 2, scope: !6293)
!6317 = distinct !{!6317, !6297, !6318}
!6318 = !DILocation(line: 3402, column: 2, scope: !6290)
!6319 = !DILocation(line: 3403, column: 12, scope: !6254)
!6320 = !DILocation(line: 3403, column: 27, scope: !6254)
!6321 = !DILocation(line: 3403, column: 26, scope: !6254)
!6322 = !DILocation(line: 3403, column: 2, scope: !6254)
!6323 = !DILocation(line: 3404, column: 13, scope: !6254)
!6324 = !DILocation(line: 3404, column: 17, scope: !6254)
!6325 = !DILocation(line: 3404, column: 26, scope: !6254)
!6326 = !DILocation(line: 3404, column: 30, scope: !6254)
!6327 = !DILocation(line: 3404, column: 35, scope: !6254)
!6328 = !DILocation(line: 3404, column: 2, scope: !6254)
!6329 = !DILocation(line: 3406, column: 1, scope: !6254)
!6330 = distinct !DISubprogram(name: "mesh_faces_to_scratch", scope: !3, file: !3, line: 3364, type: !2459, scopeLine: 3365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6331 = !DILocalVariable(name: "ob", arg: 1, scope: !6330, file: !3, line: 3364, type: !2154)
!6332 = !DILocation(line: 3364, column: 43, scope: !6330)
!6333 = !DILocalVariable(name: "sb", scope: !6330, file: !3, line: 3366, type: !2192)
!6334 = !DILocation(line: 3366, column: 12, scope: !6330)
!6335 = !DILocation(line: 3366, column: 16, scope: !6330)
!6336 = !DILocation(line: 3366, column: 20, scope: !6330)
!6337 = !DILocalVariable(name: "me", scope: !6330, file: !3, line: 3367, type: !100)
!6338 = !DILocation(line: 3367, column: 8, scope: !6330)
!6339 = !DILocation(line: 3367, column: 12, scope: !6330)
!6340 = !DILocation(line: 3367, column: 16, scope: !6330)
!6341 = !DILocalVariable(name: "mface", scope: !6330, file: !3, line: 3368, type: !4672)
!6342 = !DILocation(line: 3368, column: 9, scope: !6330)
!6343 = !DILocalVariable(name: "bodyface", scope: !6330, file: !3, line: 3369, type: !1136)
!6344 = !DILocation(line: 3369, column: 12, scope: !6330)
!6345 = !DILocalVariable(name: "a", scope: !6330, file: !3, line: 3370, type: !92)
!6346 = !DILocation(line: 3370, column: 6, scope: !6330)
!6347 = !DILocation(line: 3373, column: 37, scope: !6330)
!6348 = !DILocation(line: 3373, column: 66, scope: !6330)
!6349 = !DILocation(line: 3373, column: 70, scope: !6330)
!6350 = !DILocation(line: 3373, column: 65, scope: !6330)
!6351 = !DILocation(line: 3373, column: 13, scope: !6330)
!6352 = !DILocation(line: 3373, column: 17, scope: !6330)
!6353 = !DILocation(line: 3373, column: 26, scope: !6330)
!6354 = !DILocation(line: 3373, column: 35, scope: !6330)
!6355 = !DILocation(line: 3373, column: 11, scope: !6330)
!6356 = !DILocation(line: 3375, column: 10, scope: !6330)
!6357 = !DILocation(line: 3375, column: 14, scope: !6330)
!6358 = !DILocation(line: 3375, column: 8, scope: !6330)
!6359 = !DILocation(line: 3376, column: 8, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 3376, column: 2)
!6361 = !DILocation(line: 3376, column: 7, scope: !6360)
!6362 = !DILocation(line: 3376, column: 12, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 3376, column: 2)
!6364 = !DILocation(line: 3376, column: 14, scope: !6363)
!6365 = !DILocation(line: 3376, column: 18, scope: !6363)
!6366 = !DILocation(line: 3376, column: 13, scope: !6363)
!6367 = !DILocation(line: 3376, column: 2, scope: !6360)
!6368 = !DILocation(line: 3377, column: 18, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 3376, column: 53)
!6370 = !DILocation(line: 3377, column: 25, scope: !6369)
!6371 = !DILocation(line: 3377, column: 3, scope: !6369)
!6372 = !DILocation(line: 3377, column: 13, scope: !6369)
!6373 = !DILocation(line: 3377, column: 16, scope: !6369)
!6374 = !DILocation(line: 3378, column: 18, scope: !6369)
!6375 = !DILocation(line: 3378, column: 25, scope: !6369)
!6376 = !DILocation(line: 3378, column: 3, scope: !6369)
!6377 = !DILocation(line: 3378, column: 13, scope: !6369)
!6378 = !DILocation(line: 3378, column: 16, scope: !6369)
!6379 = !DILocation(line: 3379, column: 18, scope: !6369)
!6380 = !DILocation(line: 3379, column: 25, scope: !6369)
!6381 = !DILocation(line: 3379, column: 3, scope: !6369)
!6382 = !DILocation(line: 3379, column: 13, scope: !6369)
!6383 = !DILocation(line: 3379, column: 16, scope: !6369)
!6384 = !DILocation(line: 3380, column: 18, scope: !6369)
!6385 = !DILocation(line: 3380, column: 25, scope: !6369)
!6386 = !DILocation(line: 3380, column: 3, scope: !6369)
!6387 = !DILocation(line: 3380, column: 13, scope: !6369)
!6388 = !DILocation(line: 3380, column: 16, scope: !6369)
!6389 = !DILocation(line: 3381, column: 53, scope: !6369)
!6390 = !DILocation(line: 3381, column: 63, scope: !6369)
!6391 = !DILocation(line: 3381, column: 76, scope: !6369)
!6392 = !DILocation(line: 3381, column: 28, scope: !6369)
!6393 = !DILocation(line: 3381, column: 38, scope: !6369)
!6394 = !DILocation(line: 3381, column: 51, scope: !6369)
!6395 = !DILocation(line: 3381, column: 3, scope: !6369)
!6396 = !DILocation(line: 3381, column: 13, scope: !6369)
!6397 = !DILocation(line: 3381, column: 26, scope: !6369)
!6398 = !DILocation(line: 3382, column: 3, scope: !6369)
!6399 = !DILocation(line: 3382, column: 13, scope: !6369)
!6400 = !DILocation(line: 3382, column: 18, scope: !6369)
!6401 = !DILocation(line: 3383, column: 2, scope: !6369)
!6402 = !DILocation(line: 3376, column: 28, scope: !6363)
!6403 = !DILocation(line: 3376, column: 37, scope: !6363)
!6404 = !DILocation(line: 3376, column: 49, scope: !6363)
!6405 = !DILocation(line: 3376, column: 2, scope: !6363)
!6406 = distinct !{!6406, !6367, !6407}
!6407 = !DILocation(line: 3383, column: 2, scope: !6360)
!6408 = !DILocation(line: 3384, column: 25, scope: !6330)
!6409 = !DILocation(line: 3384, column: 29, scope: !6330)
!6410 = !DILocation(line: 3384, column: 2, scope: !6330)
!6411 = !DILocation(line: 3384, column: 6, scope: !6330)
!6412 = !DILocation(line: 3384, column: 15, scope: !6330)
!6413 = !DILocation(line: 3384, column: 23, scope: !6330)
!6414 = !DILocation(line: 3385, column: 1, scope: !6330)
!6415 = distinct !DISubprogram(name: "add_v3_v3", scope: !2608, file: !2608, line: 302, type: !2609, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6416 = !DILocalVariable(name: "r", arg: 1, scope: !6415, file: !2608, line: 302, type: !937)
!6417 = !DILocation(line: 302, column: 30, scope: !6415)
!6418 = !DILocalVariable(name: "a", arg: 2, scope: !6415, file: !2608, line: 302, type: !2611)
!6419 = !DILocation(line: 302, column: 48, scope: !6415)
!6420 = !DILocation(line: 304, column: 10, scope: !6415)
!6421 = !DILocation(line: 304, column: 2, scope: !6415)
!6422 = !DILocation(line: 304, column: 7, scope: !6415)
!6423 = !DILocation(line: 305, column: 10, scope: !6415)
!6424 = !DILocation(line: 305, column: 2, scope: !6415)
!6425 = !DILocation(line: 305, column: 7, scope: !6415)
!6426 = !DILocation(line: 306, column: 10, scope: !6415)
!6427 = !DILocation(line: 306, column: 2, scope: !6415)
!6428 = !DILocation(line: 306, column: 7, scope: !6415)
!6429 = !DILocation(line: 307, column: 1, scope: !6415)
!6430 = distinct !DISubprogram(name: "_final_mass", scope: !3, file: !3, line: 245, type: !6431, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!94, !2154, !2386}
!6433 = !DILocalVariable(name: "ob", arg: 1, scope: !6430, file: !3, line: 245, type: !2154)
!6434 = !DILocation(line: 245, column: 34, scope: !6430)
!6435 = !DILocalVariable(name: "bp", arg: 2, scope: !6430, file: !3, line: 245, type: !2386)
!6436 = !DILocation(line: 245, column: 49, scope: !6430)
!6437 = !DILocation(line: 247, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 247, column: 6)
!6439 = !DILocation(line: 247, column: 6, scope: !6430)
!6440 = !DILocalVariable(name: "sb", scope: !6441, file: !3, line: 248, type: !2192)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 247, column: 10)
!6442 = !DILocation(line: 248, column: 13, scope: !6441)
!6443 = !DILocation(line: 248, column: 17, scope: !6441)
!6444 = !DILocation(line: 248, column: 21, scope: !6441)
!6445 = !DILocation(line: 249, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 249, column: 7)
!6447 = !DILocation(line: 249, column: 9, scope: !6446)
!6448 = !DILocation(line: 249, column: 11, scope: !6446)
!6449 = !DILocation(line: 249, column: 7, scope: !6441)
!6450 = !DILocation(line: 250, column: 11, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 249, column: 15)
!6452 = !DILocation(line: 250, column: 15, scope: !6451)
!6453 = !DILocation(line: 250, column: 20, scope: !6451)
!6454 = !DILocation(line: 250, column: 24, scope: !6451)
!6455 = !DILocation(line: 250, column: 19, scope: !6451)
!6456 = !DILocation(line: 250, column: 4, scope: !6451)
!6457 = !DILocation(line: 252, column: 2, scope: !6441)
!6458 = !DILocation(line: 253, column: 2, scope: !6430)
!6459 = !DILocation(line: 254, column: 2, scope: !6430)
!6460 = !DILocation(line: 255, column: 1, scope: !6430)
!6461 = distinct !DISubprogram(name: "mul_v3_fl", scope: !2608, file: !2608, line: 392, type: !6462, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{null, !937, !94}
!6464 = !DILocalVariable(name: "r", arg: 1, scope: !6461, file: !2608, line: 392, type: !937)
!6465 = !DILocation(line: 392, column: 30, scope: !6461)
!6466 = !DILocalVariable(name: "f", arg: 2, scope: !6461, file: !2608, line: 392, type: !94)
!6467 = !DILocation(line: 392, column: 42, scope: !6461)
!6468 = !DILocation(line: 394, column: 10, scope: !6461)
!6469 = !DILocation(line: 394, column: 2, scope: !6461)
!6470 = !DILocation(line: 394, column: 7, scope: !6461)
!6471 = !DILocation(line: 395, column: 10, scope: !6461)
!6472 = !DILocation(line: 395, column: 2, scope: !6461)
!6473 = !DILocation(line: 395, column: 7, scope: !6461)
!6474 = !DILocation(line: 396, column: 10, scope: !6461)
!6475 = !DILocation(line: 396, column: 2, scope: !6461)
!6476 = !DILocation(line: 396, column: 7, scope: !6461)
!6477 = !DILocation(line: 397, column: 1, scope: !6461)
!6478 = distinct !DISubprogram(name: "ccd_update_deflector_hash", scope: !3, file: !3, line: 572, type: !6479, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{null, !2151, !2154, !1131}
!6481 = !DILocalVariable(name: "scene", arg: 1, scope: !6478, file: !3, line: 572, type: !2151)
!6482 = !DILocation(line: 572, column: 46, scope: !6478)
!6483 = !DILocalVariable(name: "vertexowner", arg: 2, scope: !6478, file: !3, line: 572, type: !2154)
!6484 = !DILocation(line: 572, column: 61, scope: !6478)
!6485 = !DILocalVariable(name: "hash", arg: 3, scope: !6478, file: !3, line: 572, type: !1131)
!6486 = !DILocation(line: 572, column: 81, scope: !6478)
!6487 = !DILocalVariable(name: "base", scope: !6478, file: !3, line: 574, type: !6488)
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !520, line: 75, baseType: !1515)
!6490 = !DILocation(line: 574, column: 8, scope: !6478)
!6491 = !DILocation(line: 574, column: 14, scope: !6478)
!6492 = !DILocation(line: 574, column: 21, scope: !6478)
!6493 = !DILocation(line: 574, column: 26, scope: !6478)
!6494 = !DILocalVariable(name: "ob", scope: !6478, file: !3, line: 575, type: !2154)
!6495 = !DILocation(line: 575, column: 10, scope: !6478)
!6496 = !DILocation(line: 577, column: 8, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 577, column: 6)
!6498 = !DILocation(line: 577, column: 14, scope: !6497)
!6499 = !DILocation(line: 577, column: 19, scope: !6497)
!6500 = !DILocation(line: 577, column: 6, scope: !6478)
!6501 = !DILocation(line: 577, column: 33, scope: !6497)
!6502 = !DILocation(line: 578, column: 2, scope: !6478)
!6503 = !DILocation(line: 578, column: 9, scope: !6478)
!6504 = !DILocation(line: 580, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 580, column: 7)
!6506 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 578, column: 15)
!6507 = !DILocation(line: 580, column: 13, scope: !6505)
!6508 = !DILocation(line: 580, column: 21, scope: !6505)
!6509 = !DILocation(line: 580, column: 25, scope: !6505)
!6510 = !DILocation(line: 580, column: 35, scope: !6505)
!6511 = !DILocation(line: 580, column: 39, scope: !6505)
!6512 = !DILocation(line: 580, column: 45, scope: !6505)
!6513 = !DILocation(line: 580, column: 51, scope: !6505)
!6514 = !DILocation(line: 580, column: 64, scope: !6505)
!6515 = !DILocation(line: 580, column: 49, scope: !6505)
!6516 = !DILocation(line: 580, column: 7, scope: !6506)
!6517 = !DILocation(line: 581, column: 8, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 580, column: 70)
!6519 = !DILocation(line: 581, column: 14, scope: !6518)
!6520 = !DILocation(line: 581, column: 6, scope: !6518)
!6521 = !DILocation(line: 582, column: 8, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 582, column: 8)
!6523 = !DILocation(line: 582, column: 14, scope: !6522)
!6524 = !DILocation(line: 582, column: 11, scope: !6522)
!6525 = !DILocation(line: 582, column: 8, scope: !6518)
!6526 = !DILocation(line: 584, column: 12, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 582, column: 27)
!6528 = !DILocation(line: 584, column: 18, scope: !6527)
!6529 = !DILocation(line: 584, column: 10, scope: !6527)
!6530 = !DILocation(line: 585, column: 5, scope: !6527)
!6531 = distinct !{!6531, !6502, !6532}
!6532 = !DILocation(line: 597, column: 2, scope: !6478)
!6533 = !DILocation(line: 589, column: 8, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 589, column: 8)
!6535 = !DILocation(line: 589, column: 12, scope: !6534)
!6536 = !DILocation(line: 589, column: 15, scope: !6534)
!6537 = !DILocation(line: 589, column: 18, scope: !6534)
!6538 = !DILocation(line: 589, column: 22, scope: !6534)
!6539 = !DILocation(line: 589, column: 26, scope: !6534)
!6540 = !DILocation(line: 589, column: 8, scope: !6518)
!6541 = !DILocalVariable(name: "ccdmesh", scope: !6542, file: !3, line: 590, type: !4663)
!6542 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 589, column: 35)
!6543 = !DILocation(line: 590, column: 15, scope: !6542)
!6544 = !DILocation(line: 590, column: 42, scope: !6542)
!6545 = !DILocation(line: 590, column: 48, scope: !6542)
!6546 = !DILocation(line: 590, column: 25, scope: !6542)
!6547 = !DILocation(line: 591, column: 9, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 591, column: 9)
!6549 = !DILocation(line: 591, column: 9, scope: !6542)
!6550 = !DILocation(line: 592, column: 22, scope: !6548)
!6551 = !DILocation(line: 592, column: 26, scope: !6548)
!6552 = !DILocation(line: 592, column: 6, scope: !6548)
!6553 = !DILocation(line: 593, column: 4, scope: !6542)
!6554 = !DILocation(line: 595, column: 3, scope: !6518)
!6555 = !DILocation(line: 596, column: 10, scope: !6506)
!6556 = !DILocation(line: 596, column: 16, scope: !6506)
!6557 = !DILocation(line: 596, column: 8, scope: !6506)
!6558 = !DILocation(line: 598, column: 1, scope: !6478)
!6559 = distinct !DISubprogram(name: "query_external_colliders", scope: !3, file: !3, line: 1010, type: !6560, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!92, !2151, !2154}
!6562 = !DILocalVariable(name: "scene", arg: 1, scope: !6559, file: !3, line: 1010, type: !2151)
!6563 = !DILocation(line: 1010, column: 44, scope: !6559)
!6564 = !DILocalVariable(name: "me", arg: 2, scope: !6559, file: !3, line: 1010, type: !2154)
!6565 = !DILocation(line: 1010, column: 59, scope: !6559)
!6566 = !DILocation(line: 1012, column: 30, scope: !6559)
!6567 = !DILocation(line: 1012, column: 37, scope: !6559)
!6568 = !DILocation(line: 1012, column: 41, scope: !6559)
!6569 = !DILocation(line: 1012, column: 9, scope: !6559)
!6570 = !DILocation(line: 1012, column: 2, scope: !6559)
!6571 = distinct !DISubprogram(name: "ccd_build_deflector_hash", scope: !3, file: !3, line: 545, type: !6479, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6572 = !DILocalVariable(name: "scene", arg: 1, scope: !6571, file: !3, line: 545, type: !2151)
!6573 = !DILocation(line: 545, column: 45, scope: !6571)
!6574 = !DILocalVariable(name: "vertexowner", arg: 2, scope: !6571, file: !3, line: 545, type: !2154)
!6575 = !DILocation(line: 545, column: 60, scope: !6571)
!6576 = !DILocalVariable(name: "hash", arg: 3, scope: !6571, file: !3, line: 545, type: !1131)
!6577 = !DILocation(line: 545, column: 80, scope: !6571)
!6578 = !DILocalVariable(name: "base", scope: !6571, file: !3, line: 547, type: !6488)
!6579 = !DILocation(line: 547, column: 8, scope: !6571)
!6580 = !DILocation(line: 547, column: 14, scope: !6571)
!6581 = !DILocation(line: 547, column: 21, scope: !6571)
!6582 = !DILocation(line: 547, column: 26, scope: !6571)
!6583 = !DILocalVariable(name: "ob", scope: !6571, file: !3, line: 548, type: !2154)
!6584 = !DILocation(line: 548, column: 10, scope: !6571)
!6585 = !DILocation(line: 550, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 550, column: 6)
!6587 = !DILocation(line: 550, column: 6, scope: !6571)
!6588 = !DILocation(line: 550, column: 13, scope: !6586)
!6589 = !DILocation(line: 551, column: 2, scope: !6571)
!6590 = !DILocation(line: 551, column: 9, scope: !6571)
!6591 = !DILocation(line: 553, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 553, column: 7)
!6593 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 551, column: 15)
!6594 = !DILocation(line: 553, column: 13, scope: !6592)
!6595 = !DILocation(line: 553, column: 21, scope: !6592)
!6596 = !DILocation(line: 553, column: 25, scope: !6592)
!6597 = !DILocation(line: 553, column: 35, scope: !6592)
!6598 = !DILocation(line: 553, column: 39, scope: !6592)
!6599 = !DILocation(line: 553, column: 45, scope: !6592)
!6600 = !DILocation(line: 553, column: 51, scope: !6592)
!6601 = !DILocation(line: 553, column: 64, scope: !6592)
!6602 = !DILocation(line: 553, column: 49, scope: !6592)
!6603 = !DILocation(line: 553, column: 7, scope: !6593)
!6604 = !DILocation(line: 554, column: 8, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 553, column: 70)
!6606 = !DILocation(line: 554, column: 14, scope: !6605)
!6607 = !DILocation(line: 554, column: 6, scope: !6605)
!6608 = !DILocation(line: 555, column: 9, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 555, column: 8)
!6610 = !DILocation(line: 555, column: 8, scope: !6609)
!6611 = !DILocation(line: 555, column: 22, scope: !6609)
!6612 = !DILocation(line: 555, column: 26, scope: !6609)
!6613 = !DILocation(line: 555, column: 32, scope: !6609)
!6614 = !DILocation(line: 555, column: 29, scope: !6609)
!6615 = !DILocation(line: 555, column: 8, scope: !6605)
!6616 = !DILocation(line: 557, column: 12, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 555, column: 46)
!6618 = !DILocation(line: 557, column: 18, scope: !6617)
!6619 = !DILocation(line: 557, column: 10, scope: !6617)
!6620 = !DILocation(line: 558, column: 5, scope: !6617)
!6621 = distinct !{!6621, !6589, !6622}
!6622 = !DILocation(line: 569, column: 2, scope: !6571)
!6623 = !DILocation(line: 562, column: 8, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 562, column: 8)
!6625 = !DILocation(line: 562, column: 12, scope: !6624)
!6626 = !DILocation(line: 562, column: 15, scope: !6624)
!6627 = !DILocation(line: 562, column: 18, scope: !6624)
!6628 = !DILocation(line: 562, column: 22, scope: !6624)
!6629 = !DILocation(line: 562, column: 26, scope: !6624)
!6630 = !DILocation(line: 562, column: 34, scope: !6624)
!6631 = !DILocation(line: 562, column: 54, scope: !6624)
!6632 = !DILocation(line: 562, column: 60, scope: !6624)
!6633 = !DILocation(line: 562, column: 37, scope: !6624)
!6634 = !DILocation(line: 562, column: 64, scope: !6624)
!6635 = !DILocation(line: 562, column: 8, scope: !6605)
!6636 = !DILocalVariable(name: "ccdmesh", scope: !6637, file: !3, line: 563, type: !4663)
!6637 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 562, column: 73)
!6638 = !DILocation(line: 563, column: 15, scope: !6637)
!6639 = !DILocation(line: 563, column: 39, scope: !6637)
!6640 = !DILocation(line: 563, column: 25, scope: !6637)
!6641 = !DILocation(line: 564, column: 22, scope: !6637)
!6642 = !DILocation(line: 564, column: 28, scope: !6637)
!6643 = !DILocation(line: 564, column: 32, scope: !6637)
!6644 = !DILocation(line: 564, column: 5, scope: !6637)
!6645 = !DILocation(line: 565, column: 4, scope: !6637)
!6646 = !DILocation(line: 567, column: 3, scope: !6605)
!6647 = !DILocation(line: 568, column: 10, scope: !6593)
!6648 = !DILocation(line: 568, column: 16, scope: !6593)
!6649 = !DILocation(line: 568, column: 8, scope: !6593)
!6650 = !DILocation(line: 570, column: 1, scope: !6571)
!6651 = distinct !DISubprogram(name: "interpolate_exciter", scope: !3, file: !3, line: 3157, type: !6652, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{null, !2154, !92, !92}
!6654 = !DILocalVariable(name: "ob", arg: 1, scope: !6651, file: !3, line: 3157, type: !2154)
!6655 = !DILocation(line: 3157, column: 41, scope: !6651)
!6656 = !DILocalVariable(name: "timescale", arg: 2, scope: !6651, file: !3, line: 3157, type: !92)
!6657 = !DILocation(line: 3157, column: 49, scope: !6651)
!6658 = !DILocalVariable(name: "time", arg: 3, scope: !6651, file: !3, line: 3157, type: !92)
!6659 = !DILocation(line: 3157, column: 64, scope: !6651)
!6660 = !DILocalVariable(name: "sb", scope: !6651, file: !3, line: 3159, type: !2192)
!6661 = !DILocation(line: 3159, column: 12, scope: !6651)
!6662 = !DILocation(line: 3159, column: 16, scope: !6651)
!6663 = !DILocation(line: 3159, column: 20, scope: !6651)
!6664 = !DILocalVariable(name: "bp", scope: !6651, file: !3, line: 3160, type: !2386)
!6665 = !DILocation(line: 3160, column: 13, scope: !6651)
!6666 = !DILocalVariable(name: "f", scope: !6651, file: !3, line: 3161, type: !94)
!6667 = !DILocation(line: 3161, column: 8, scope: !6651)
!6668 = !DILocalVariable(name: "a", scope: !6651, file: !3, line: 3162, type: !92)
!6669 = !DILocation(line: 3162, column: 6, scope: !6651)
!6670 = !DILocation(line: 3164, column: 13, scope: !6651)
!6671 = !DILocation(line: 3164, column: 6, scope: !6651)
!6672 = !DILocation(line: 3164, column: 25, scope: !6651)
!6673 = !DILocation(line: 3164, column: 18, scope: !6651)
!6674 = !DILocation(line: 3164, column: 17, scope: !6651)
!6675 = !DILocation(line: 3164, column: 4, scope: !6651)
!6676 = !DILocation(line: 3166, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 3166, column: 2)
!6678 = !DILocation(line: 3166, column: 13, scope: !6677)
!6679 = !DILocation(line: 3166, column: 8, scope: !6677)
!6680 = !DILocation(line: 3166, column: 27, scope: !6677)
!6681 = !DILocation(line: 3166, column: 31, scope: !6677)
!6682 = !DILocation(line: 3166, column: 25, scope: !6677)
!6683 = !DILocation(line: 3166, column: 7, scope: !6677)
!6684 = !DILocation(line: 3166, column: 39, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 3166, column: 2)
!6686 = !DILocation(line: 3166, column: 40, scope: !6685)
!6687 = !DILocation(line: 3166, column: 2, scope: !6677)
!6688 = !DILocation(line: 3167, column: 18, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 3166, column: 55)
!6690 = !DILocation(line: 3167, column: 22, scope: !6689)
!6691 = !DILocation(line: 3167, column: 33, scope: !6689)
!6692 = !DILocation(line: 3167, column: 36, scope: !6689)
!6693 = !DILocation(line: 3167, column: 40, scope: !6689)
!6694 = !DILocation(line: 3167, column: 51, scope: !6689)
!6695 = !DILocation(line: 3167, column: 55, scope: !6689)
!6696 = !DILocation(line: 3167, column: 49, scope: !6689)
!6697 = !DILocation(line: 3167, column: 34, scope: !6689)
!6698 = !DILocation(line: 3167, column: 31, scope: !6689)
!6699 = !DILocation(line: 3167, column: 3, scope: !6689)
!6700 = !DILocation(line: 3167, column: 7, scope: !6689)
!6701 = !DILocation(line: 3167, column: 16, scope: !6689)
!6702 = !DILocation(line: 3168, column: 18, scope: !6689)
!6703 = !DILocation(line: 3168, column: 22, scope: !6689)
!6704 = !DILocation(line: 3168, column: 33, scope: !6689)
!6705 = !DILocation(line: 3168, column: 36, scope: !6689)
!6706 = !DILocation(line: 3168, column: 40, scope: !6689)
!6707 = !DILocation(line: 3168, column: 51, scope: !6689)
!6708 = !DILocation(line: 3168, column: 55, scope: !6689)
!6709 = !DILocation(line: 3168, column: 49, scope: !6689)
!6710 = !DILocation(line: 3168, column: 34, scope: !6689)
!6711 = !DILocation(line: 3168, column: 31, scope: !6689)
!6712 = !DILocation(line: 3168, column: 3, scope: !6689)
!6713 = !DILocation(line: 3168, column: 7, scope: !6689)
!6714 = !DILocation(line: 3168, column: 16, scope: !6689)
!6715 = !DILocation(line: 3169, column: 18, scope: !6689)
!6716 = !DILocation(line: 3169, column: 22, scope: !6689)
!6717 = !DILocation(line: 3169, column: 33, scope: !6689)
!6718 = !DILocation(line: 3169, column: 36, scope: !6689)
!6719 = !DILocation(line: 3169, column: 40, scope: !6689)
!6720 = !DILocation(line: 3169, column: 51, scope: !6689)
!6721 = !DILocation(line: 3169, column: 55, scope: !6689)
!6722 = !DILocation(line: 3169, column: 49, scope: !6689)
!6723 = !DILocation(line: 3169, column: 34, scope: !6689)
!6724 = !DILocation(line: 3169, column: 31, scope: !6689)
!6725 = !DILocation(line: 3169, column: 3, scope: !6689)
!6726 = !DILocation(line: 3169, column: 7, scope: !6689)
!6727 = !DILocation(line: 3169, column: 16, scope: !6689)
!6728 = !DILocation(line: 3170, column: 19, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 3170, column: 7)
!6730 = !DILocation(line: 3170, column: 23, scope: !6729)
!6731 = !DILocation(line: 3170, column: 7, scope: !6729)
!6732 = !DILocation(line: 3170, column: 27, scope: !6729)
!6733 = !DILocation(line: 3170, column: 7, scope: !6689)
!6734 = !DILocation(line: 3171, column: 17, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3170, column: 44)
!6736 = !DILocation(line: 3171, column: 21, scope: !6735)
!6737 = !DILocation(line: 3171, column: 32, scope: !6735)
!6738 = !DILocation(line: 3171, column: 36, scope: !6735)
!6739 = !DILocation(line: 3171, column: 30, scope: !6735)
!6740 = !DILocation(line: 3171, column: 4, scope: !6735)
!6741 = !DILocation(line: 3171, column: 8, scope: !6735)
!6742 = !DILocation(line: 3171, column: 15, scope: !6735)
!6743 = !DILocation(line: 3172, column: 17, scope: !6735)
!6744 = !DILocation(line: 3172, column: 21, scope: !6735)
!6745 = !DILocation(line: 3172, column: 32, scope: !6735)
!6746 = !DILocation(line: 3172, column: 36, scope: !6735)
!6747 = !DILocation(line: 3172, column: 30, scope: !6735)
!6748 = !DILocation(line: 3172, column: 4, scope: !6735)
!6749 = !DILocation(line: 3172, column: 8, scope: !6735)
!6750 = !DILocation(line: 3172, column: 15, scope: !6735)
!6751 = !DILocation(line: 3173, column: 17, scope: !6735)
!6752 = !DILocation(line: 3173, column: 21, scope: !6735)
!6753 = !DILocation(line: 3173, column: 32, scope: !6735)
!6754 = !DILocation(line: 3173, column: 36, scope: !6735)
!6755 = !DILocation(line: 3173, column: 30, scope: !6735)
!6756 = !DILocation(line: 3173, column: 4, scope: !6735)
!6757 = !DILocation(line: 3173, column: 8, scope: !6735)
!6758 = !DILocation(line: 3173, column: 15, scope: !6735)
!6759 = !DILocation(line: 3174, column: 3, scope: !6735)
!6760 = !DILocation(line: 3175, column: 2, scope: !6689)
!6761 = !DILocation(line: 3166, column: 45, scope: !6685)
!6762 = !DILocation(line: 3166, column: 51, scope: !6685)
!6763 = !DILocation(line: 3166, column: 2, scope: !6685)
!6764 = distinct !{!6764, !6687, !6765}
!6765 = !DILocation(line: 3175, column: 2, scope: !6677)
!6766 = !DILocation(line: 3177, column: 1, scope: !6651)
!6767 = distinct !DISubprogram(name: "softbody_calc_forces", scope: !3, file: !3, line: 2489, type: !6768, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{null, !2151, !2154, !94, !94, !92}
!6770 = !DILocalVariable(name: "scene", arg: 1, scope: !6767, file: !3, line: 2489, type: !2151)
!6771 = !DILocation(line: 2489, column: 41, scope: !6767)
!6772 = !DILocalVariable(name: "ob", arg: 2, scope: !6767, file: !3, line: 2489, type: !2154)
!6773 = !DILocation(line: 2489, column: 56, scope: !6767)
!6774 = !DILocalVariable(name: "forcetime", arg: 3, scope: !6767, file: !3, line: 2489, type: !94)
!6775 = !DILocation(line: 2489, column: 66, scope: !6767)
!6776 = !DILocalVariable(name: "timenow", arg: 4, scope: !6767, file: !3, line: 2489, type: !94)
!6777 = !DILocation(line: 2489, column: 83, scope: !6767)
!6778 = !DILocalVariable(name: "nl_flags", arg: 5, scope: !6767, file: !3, line: 2489, type: !92)
!6779 = !DILocation(line: 2489, column: 96, scope: !6767)
!6780 = !DILocation(line: 2492, column: 10, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2492, column: 6)
!6782 = !DILocation(line: 2492, column: 8, scope: !6781)
!6783 = !DILocation(line: 2492, column: 22, scope: !6781)
!6784 = !DILocation(line: 2492, column: 6, scope: !6767)
!6785 = !DILocation(line: 2493, column: 26, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2492, column: 31)
!6787 = !DILocation(line: 2493, column: 33, scope: !6786)
!6788 = !DILocation(line: 2493, column: 37, scope: !6786)
!6789 = !DILocation(line: 2493, column: 48, scope: !6786)
!6790 = !DILocation(line: 2493, column: 57, scope: !6786)
!6791 = !DILocation(line: 2493, column: 3, scope: !6786)
!6792 = !DILocation(line: 2494, column: 3, scope: !6786)
!6793 = !DILocalVariable(name: "sb", scope: !6794, file: !3, line: 2508, type: !2192)
!6794 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2496, column: 7)
!6795 = !DILocation(line: 2508, column: 13, scope: !6794)
!6796 = !DILocation(line: 2508, column: 17, scope: !6794)
!6797 = !DILocation(line: 2508, column: 21, scope: !6794)
!6798 = !DILocalVariable(name: "bp", scope: !6794, file: !3, line: 2509, type: !2386)
!6799 = !DILocation(line: 2509, column: 15, scope: !6794)
!6800 = !DILocalVariable(name: "bs", scope: !6794, file: !3, line: 2511, type: !2948)
!6801 = !DILocation(line: 2511, column: 15, scope: !6794)
!6802 = !DILocalVariable(name: "do_effector", scope: !6794, file: !3, line: 2512, type: !1485)
!6803 = !DILocation(line: 2512, column: 13, scope: !6794)
!6804 = !DILocalVariable(name: "iks", scope: !6794, file: !3, line: 2513, type: !94)
!6805 = !DILocation(line: 2513, column: 9, scope: !6794)
!6806 = !DILocalVariable(name: "ks", scope: !6794, file: !3, line: 2513, type: !94)
!6807 = !DILocation(line: 2513, column: 14, scope: !6794)
!6808 = !DILocalVariable(name: "kd", scope: !6794, file: !3, line: 2513, type: !94)
!6809 = !DILocation(line: 2513, column: 18, scope: !6794)
!6810 = !DILocalVariable(name: "gravity", scope: !6794, file: !3, line: 2513, type: !376)
!6811 = !DILocation(line: 2513, column: 22, scope: !6794)
!6812 = !DILocalVariable(name: "fieldfactor", scope: !6794, file: !3, line: 2514, type: !94)
!6813 = !DILocation(line: 2514, column: 9, scope: !6794)
!6814 = !DILocalVariable(name: "windfactor", scope: !6794, file: !3, line: 2514, type: !94)
!6815 = !DILocation(line: 2514, column: 30, scope: !6794)
!6816 = !DILocalVariable(name: "tune", scope: !6794, file: !3, line: 2515, type: !94)
!6817 = !DILocation(line: 2515, column: 9, scope: !6794)
!6818 = !DILocation(line: 2515, column: 16, scope: !6794)
!6819 = !DILocation(line: 2515, column: 20, scope: !6794)
!6820 = !DILocalVariable(name: "a", scope: !6794, file: !3, line: 2516, type: !92)
!6821 = !DILocation(line: 2516, column: 7, scope: !6794)
!6822 = !DILocalVariable(name: "b", scope: !6794, file: !3, line: 2516, type: !92)
!6823 = !DILocation(line: 2516, column: 10, scope: !6794)
!6824 = !DILocalVariable(name: "do_deflector", scope: !6794, file: !3, line: 2516, type: !92)
!6825 = !DILocation(line: 2516, column: 14, scope: !6794)
!6826 = !DILocalVariable(name: "do_selfcollision", scope: !6794, file: !3, line: 2516, type: !92)
!6827 = !DILocation(line: 2516, column: 28, scope: !6794)
!6828 = !DILocalVariable(name: "do_springcollision", scope: !6794, file: !3, line: 2516, type: !92)
!6829 = !DILocation(line: 2516, column: 46, scope: !6794)
!6830 = !DILocalVariable(name: "do_aero", scope: !6794, file: !3, line: 2516, type: !92)
!6831 = !DILocation(line: 2516, column: 66, scope: !6794)
!6832 = !DILocation(line: 2529, column: 7, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2529, column: 7)
!6834 = !DILocation(line: 2529, column: 14, scope: !6833)
!6835 = !DILocation(line: 2529, column: 31, scope: !6833)
!6836 = !DILocation(line: 2529, column: 36, scope: !6833)
!6837 = !DILocation(line: 2529, column: 7, scope: !6794)
!6838 = !DILocation(line: 2530, column: 15, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2529, column: 59)
!6840 = !DILocation(line: 2530, column: 24, scope: !6839)
!6841 = !DILocation(line: 2530, column: 31, scope: !6839)
!6842 = !DILocation(line: 2530, column: 48, scope: !6839)
!6843 = !DILocation(line: 2530, column: 4, scope: !6839)
!6844 = !DILocation(line: 2531, column: 14, scope: !6839)
!6845 = !DILocation(line: 2531, column: 43, scope: !6839)
!6846 = !DILocation(line: 2531, column: 23, scope: !6839)
!6847 = !DILocation(line: 2531, column: 47, scope: !6839)
!6848 = !DILocation(line: 2531, column: 51, scope: !6839)
!6849 = !DILocation(line: 2531, column: 69, scope: !6839)
!6850 = !DILocation(line: 2531, column: 46, scope: !6839)
!6851 = !DILocation(line: 2531, column: 4, scope: !6839)
!6852 = !DILocation(line: 2532, column: 3, scope: !6839)
!6853 = !DILocation(line: 2535, column: 42, scope: !6794)
!6854 = !DILocation(line: 2535, column: 49, scope: !6794)
!6855 = !DILocation(line: 2535, column: 17, scope: !6794)
!6856 = !DILocation(line: 2535, column: 15, scope: !6794)
!6857 = !DILocation(line: 2536, column: 22, scope: !6794)
!6858 = !DILocation(line: 2536, column: 26, scope: !6794)
!6859 = !DILocation(line: 2536, column: 35, scope: !6794)
!6860 = !DILocation(line: 2536, column: 50, scope: !6794)
!6861 = !DILocation(line: 2536, column: 54, scope: !6794)
!6862 = !DILocation(line: 2536, column: 58, scope: !6794)
!6863 = !DILocation(line: 2536, column: 53, scope: !6794)
!6864 = !DILocation(line: 2536, column: 66, scope: !6794)
!6865 = !DILocation(line: 2536, column: 70, scope: !6794)
!6866 = !DILocation(line: 2536, column: 74, scope: !6794)
!6867 = !DILocation(line: 2536, column: 83, scope: !6794)
!6868 = !DILocation(line: 0, scope: !6794)
!6869 = !DILocation(line: 2536, column: 19, scope: !6794)
!6870 = !DILocation(line: 2537, column: 22, scope: !6794)
!6871 = !DILocation(line: 2537, column: 35, scope: !6794)
!6872 = !DILocation(line: 2537, column: 39, scope: !6794)
!6873 = !DILocation(line: 2537, column: 43, scope: !6794)
!6874 = !DILocation(line: 2537, column: 52, scope: !6794)
!6875 = !DILocation(line: 2537, column: 67, scope: !6794)
!6876 = !DILocation(line: 2537, column: 70, scope: !6794)
!6877 = !DILocation(line: 2537, column: 74, scope: !6794)
!6878 = !DILocation(line: 2537, column: 83, scope: !6794)
!6879 = !DILocation(line: 2537, column: 21, scope: !6794)
!6880 = !DILocation(line: 2538, column: 13, scope: !6794)
!6881 = !DILocation(line: 2538, column: 17, scope: !6794)
!6882 = !DILocation(line: 2538, column: 12, scope: !6794)
!6883 = !DILocation(line: 2538, column: 26, scope: !6794)
!6884 = !DILocation(line: 2538, column: 30, scope: !6794)
!6885 = !DILocation(line: 2538, column: 34, scope: !6794)
!6886 = !DILocation(line: 2538, column: 43, scope: !6794)
!6887 = !DILocation(line: 2538, column: 10, scope: !6794)
!6888 = !DILocation(line: 2540, column: 21, scope: !6794)
!6889 = !DILocation(line: 2540, column: 25, scope: !6794)
!6890 = !DILocation(line: 2540, column: 20, scope: !6794)
!6891 = !DILocation(line: 2540, column: 14, scope: !6794)
!6892 = !DILocation(line: 2540, column: 34, scope: !6794)
!6893 = !DILocation(line: 2540, column: 8, scope: !6794)
!6894 = !DILocation(line: 2543, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2543, column: 7)
!6896 = !DILocation(line: 2543, column: 26, scope: !6895)
!6897 = !DILocation(line: 2543, column: 29, scope: !6895)
!6898 = !DILocation(line: 2543, column: 7, scope: !6794)
!6899 = !DILocation(line: 2543, column: 66, scope: !6895)
!6900 = !DILocation(line: 2543, column: 73, scope: !6895)
!6901 = !DILocation(line: 2543, column: 77, scope: !6895)
!6902 = !DILocation(line: 2543, column: 39, scope: !6895)
!6903 = !DILocation(line: 2545, column: 32, scope: !6794)
!6904 = !DILocation(line: 2545, column: 39, scope: !6794)
!6905 = !DILocation(line: 2545, column: 49, scope: !6794)
!6906 = !DILocation(line: 2545, column: 53, scope: !6794)
!6907 = !DILocation(line: 2545, column: 59, scope: !6794)
!6908 = !DILocation(line: 2545, column: 16, scope: !6794)
!6909 = !DILocation(line: 2545, column: 14, scope: !6794)
!6910 = !DILocation(line: 2547, column: 7, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2547, column: 7)
!6912 = !DILocation(line: 2547, column: 7, scope: !6794)
!6913 = !DILocalVariable(name: "defforce", scope: !6914, file: !3, line: 2548, type: !376)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 2547, column: 21)
!6915 = !DILocation(line: 2548, column: 10, scope: !6914)
!6916 = !DILocation(line: 2549, column: 50, scope: !6914)
!6917 = !DILocation(line: 2549, column: 60, scope: !6914)
!6918 = !DILocation(line: 2549, column: 64, scope: !6914)
!6919 = !DILocation(line: 2549, column: 69, scope: !6914)
!6920 = !DILocation(line: 2549, column: 73, scope: !6914)
!6921 = !DILocation(line: 2549, column: 19, scope: !6914)
!6922 = !DILocation(line: 2549, column: 17, scope: !6914)
!6923 = !DILocation(line: 2550, column: 3, scope: !6914)
!6924 = !DILocation(line: 2552, column: 10, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2552, column: 3)
!6926 = !DILocation(line: 2552, column: 14, scope: !6925)
!6927 = !DILocation(line: 2552, column: 9, scope: !6925)
!6928 = !DILocation(line: 2552, column: 28, scope: !6925)
!6929 = !DILocation(line: 2552, column: 32, scope: !6925)
!6930 = !DILocation(line: 2552, column: 26, scope: !6925)
!6931 = !DILocation(line: 2552, column: 8, scope: !6925)
!6932 = !DILocation(line: 2552, column: 40, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 2552, column: 3)
!6934 = !DILocation(line: 2552, column: 41, scope: !6933)
!6935 = !DILocation(line: 2552, column: 3, scope: !6925)
!6936 = !DILocation(line: 2554, column: 34, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 2552, column: 56)
!6938 = !DILocation(line: 2554, column: 38, scope: !6937)
!6939 = !DILocation(line: 2554, column: 47, scope: !6937)
!6940 = !DILocation(line: 2554, column: 19, scope: !6937)
!6941 = !DILocation(line: 2554, column: 23, scope: !6937)
!6942 = !DILocation(line: 2554, column: 32, scope: !6937)
!6943 = !DILocation(line: 2554, column: 4, scope: !6937)
!6944 = !DILocation(line: 2554, column: 8, scope: !6937)
!6945 = !DILocation(line: 2554, column: 17, scope: !6937)
!6946 = !DILocation(line: 2555, column: 8, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2555, column: 8)
!6948 = !DILocation(line: 2555, column: 17, scope: !6947)
!6949 = !DILocation(line: 2555, column: 8, scope: !6937)
!6950 = !DILocation(line: 2574, column: 4, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 2555, column: 30)
!6952 = !DILocation(line: 2578, column: 8, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2578, column: 8)
!6954 = !DILocation(line: 2578, column: 8, scope: !6937)
!6955 = !DILocalVariable(name: "attached", scope: !6956, file: !3, line: 2579, type: !92)
!6956 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2578, column: 26)
!6957 = !DILocation(line: 2579, column: 9, scope: !6956)
!6958 = !DILocalVariable(name: "obp", scope: !6956, file: !3, line: 2580, type: !2386)
!6959 = !DILocation(line: 2580, column: 18, scope: !6956)
!6960 = !DILocalVariable(name: "c", scope: !6956, file: !3, line: 2581, type: !92)
!6961 = !DILocation(line: 2581, column: 9, scope: !6956)
!6962 = !DILocalVariable(name: "b", scope: !6956, file: !3, line: 2581, type: !92)
!6963 = !DILocation(line: 2581, column: 12, scope: !6956)
!6964 = !DILocalVariable(name: "velcenter", scope: !6956, file: !3, line: 2582, type: !376)
!6965 = !DILocation(line: 2582, column: 11, scope: !6956)
!6966 = !DILocalVariable(name: "dvel", scope: !6956, file: !3, line: 2582, type: !376)
!6967 = !DILocation(line: 2582, column: 25, scope: !6956)
!6968 = !DILocalVariable(name: "def", scope: !6956, file: !3, line: 2582, type: !376)
!6969 = !DILocation(line: 2582, column: 34, scope: !6956)
!6970 = !DILocalVariable(name: "distance", scope: !6956, file: !3, line: 2583, type: !94)
!6971 = !DILocation(line: 2583, column: 11, scope: !6956)
!6972 = !DILocalVariable(name: "compare", scope: !6956, file: !3, line: 2584, type: !94)
!6973 = !DILocation(line: 2584, column: 11, scope: !6956)
!6974 = !DILocation(line: 2586, column: 12, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 2586, column: 5)
!6976 = !DILocation(line: 2586, column: 16, scope: !6975)
!6977 = !DILocation(line: 2586, column: 11, scope: !6975)
!6978 = !DILocation(line: 2586, column: 31, scope: !6975)
!6979 = !DILocation(line: 2586, column: 35, scope: !6975)
!6980 = !DILocation(line: 2586, column: 29, scope: !6975)
!6981 = !DILocation(line: 2586, column: 10, scope: !6975)
!6982 = !DILocation(line: 2586, column: 43, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 2586, column: 5)
!6984 = !DILocation(line: 2586, column: 46, scope: !6983)
!6985 = !DILocation(line: 2586, column: 44, scope: !6983)
!6986 = !DILocation(line: 2586, column: 5, scope: !6975)
!6987 = !DILocation(line: 2590, column: 17, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 2586, column: 61)
!6989 = !DILocation(line: 2590, column: 22, scope: !6988)
!6990 = !DILocation(line: 2590, column: 32, scope: !6988)
!6991 = !DILocation(line: 2590, column: 36, scope: !6988)
!6992 = !DILocation(line: 2590, column: 30, scope: !6988)
!6993 = !DILocation(line: 2590, column: 14, scope: !6988)
!6994 = !DILocation(line: 2591, column: 18, scope: !6988)
!6995 = !DILocation(line: 2591, column: 23, scope: !6988)
!6996 = !DILocation(line: 2591, column: 27, scope: !6988)
!6997 = !DILocation(line: 2591, column: 32, scope: !6988)
!6998 = !DILocation(line: 2591, column: 37, scope: !6988)
!6999 = !DILocation(line: 2591, column: 6, scope: !6988)
!7000 = !DILocation(line: 2595, column: 11, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2595, column: 10)
!7002 = !DILocation(line: 2595, column: 25, scope: !7001)
!7003 = !DILocation(line: 2595, column: 23, scope: !7001)
!7004 = !DILocation(line: 2595, column: 34, scope: !7001)
!7005 = !DILocation(line: 2595, column: 38, scope: !7001)
!7006 = !DILocation(line: 2595, column: 52, scope: !7001)
!7007 = !DILocation(line: 2595, column: 50, scope: !7001)
!7008 = !DILocation(line: 2595, column: 61, scope: !7001)
!7009 = !DILocation(line: 2595, column: 65, scope: !7001)
!7010 = !DILocation(line: 2595, column: 79, scope: !7001)
!7011 = !DILocation(line: 2595, column: 77, scope: !7001)
!7012 = !DILocation(line: 2595, column: 10, scope: !6988)
!7013 = !DILocation(line: 2595, column: 89, scope: !7001)
!7014 = !DILocation(line: 2597, column: 30, scope: !6988)
!7015 = !DILocation(line: 2597, column: 17, scope: !6988)
!7016 = !DILocation(line: 2597, column: 15, scope: !6988)
!7017 = !DILocation(line: 2598, column: 10, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2598, column: 10)
!7019 = !DILocation(line: 2598, column: 21, scope: !7018)
!7020 = !DILocation(line: 2598, column: 19, scope: !7018)
!7021 = !DILocation(line: 2598, column: 10, scope: !6988)
!7022 = !DILocation(line: 2600, column: 16, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 2598, column: 31)
!7024 = !DILocation(line: 2601, column: 14, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 2601, column: 7)
!7026 = !DILocation(line: 2601, column: 19, scope: !7025)
!7027 = !DILocation(line: 2601, column: 13, scope: !7025)
!7028 = !DILocation(line: 2601, column: 12, scope: !7025)
!7029 = !DILocation(line: 2601, column: 30, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2601, column: 7)
!7031 = !DILocation(line: 2601, column: 31, scope: !7030)
!7032 = !DILocation(line: 2601, column: 7, scope: !7025)
!7033 = !DILocation(line: 2602, column: 13, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 2601, column: 39)
!7035 = !DILocation(line: 2602, column: 17, scope: !7034)
!7036 = !DILocation(line: 2602, column: 27, scope: !7034)
!7037 = !DILocation(line: 2602, column: 32, scope: !7034)
!7038 = !DILocation(line: 2602, column: 40, scope: !7034)
!7039 = !DILocation(line: 2602, column: 41, scope: !7034)
!7040 = !DILocation(line: 2602, column: 25, scope: !7034)
!7041 = !DILocation(line: 2602, column: 11, scope: !7034)
!7042 = !DILocation(line: 2603, column: 14, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2603, column: 12)
!7044 = !DILocation(line: 2603, column: 18, scope: !7043)
!7045 = !DILocation(line: 2603, column: 27, scope: !7043)
!7046 = !DILocation(line: 2603, column: 26, scope: !7043)
!7047 = !DILocation(line: 2603, column: 32, scope: !7043)
!7048 = !DILocation(line: 2603, column: 36, scope: !7043)
!7049 = !DILocation(line: 2603, column: 29, scope: !7043)
!7050 = !DILocation(line: 2603, column: 40, scope: !7043)
!7051 = !DILocation(line: 2603, column: 45, scope: !7043)
!7052 = !DILocation(line: 2603, column: 49, scope: !7043)
!7053 = !DILocation(line: 2603, column: 58, scope: !7043)
!7054 = !DILocation(line: 2603, column: 57, scope: !7043)
!7055 = !DILocation(line: 2603, column: 63, scope: !7043)
!7056 = !DILocation(line: 2603, column: 67, scope: !7043)
!7057 = !DILocation(line: 2603, column: 60, scope: !7043)
!7058 = !DILocation(line: 2603, column: 12, scope: !7034)
!7059 = !DILocation(line: 2604, column: 17, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 2603, column: 72)
!7061 = !DILocation(line: 2605, column: 9, scope: !7060)
!7062 = !DILocation(line: 2606, column: 7, scope: !7034)
!7063 = !DILocation(line: 2601, column: 35, scope: !7030)
!7064 = !DILocation(line: 2601, column: 7, scope: !7030)
!7065 = distinct !{!7065, !7032, !7066}
!7066 = !DILocation(line: 2606, column: 7, scope: !7025)
!7067 = !DILocation(line: 2607, column: 12, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 2607, column: 11)
!7069 = !DILocation(line: 2607, column: 11, scope: !7023)
!7070 = !DILocalVariable(name: "f", scope: !7071, file: !3, line: 2608, type: !94)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2607, column: 22)
!7072 = !DILocation(line: 2608, column: 14, scope: !7071)
!7073 = !DILocation(line: 2608, column: 18, scope: !7071)
!7074 = !DILocation(line: 2608, column: 26, scope: !7071)
!7075 = !DILocation(line: 2608, column: 23, scope: !7071)
!7076 = !DILocation(line: 2608, column: 38, scope: !7071)
!7077 = !DILocation(line: 2608, column: 46, scope: !7071)
!7078 = !DILocation(line: 2608, column: 56, scope: !7071)
!7079 = !DILocation(line: 2608, column: 54, scope: !7071)
!7080 = !DILocation(line: 2608, column: 43, scope: !7071)
!7081 = !DILocation(line: 2608, column: 67, scope: !7071)
!7082 = !DILocation(line: 2608, column: 65, scope: !7071)
!7083 = !DILocation(line: 2608, column: 36, scope: !7071)
!7084 = !DILocation(line: 2608, column: 85, scope: !7071)
!7085 = !DILocation(line: 2608, column: 83, scope: !7071)
!7086 = !DILocation(line: 2608, column: 90, scope: !7071)
!7087 = !DILocation(line: 2608, column: 89, scope: !7071)
!7088 = !DILocation(line: 2608, column: 76, scope: !7071)
!7089 = !DILocation(line: 2610, column: 20, scope: !7071)
!7090 = !DILocation(line: 2610, column: 31, scope: !7071)
!7091 = !DILocation(line: 2610, column: 35, scope: !7071)
!7092 = !DILocation(line: 2610, column: 40, scope: !7071)
!7093 = !DILocation(line: 2610, column: 45, scope: !7071)
!7094 = !DILocation(line: 2610, column: 8, scope: !7071)
!7095 = !DILocation(line: 2611, column: 20, scope: !7071)
!7096 = !DILocation(line: 2611, column: 26, scope: !7071)
!7097 = !DILocation(line: 2611, column: 37, scope: !7071)
!7098 = !DILocation(line: 2611, column: 41, scope: !7071)
!7099 = !DILocation(line: 2611, column: 8, scope: !7071)
!7100 = !DILocation(line: 2612, column: 18, scope: !7071)
!7101 = !DILocation(line: 2612, column: 36, scope: !7071)
!7102 = !DILocation(line: 2612, column: 40, scope: !7071)
!7103 = !DILocation(line: 2612, column: 24, scope: !7071)
!7104 = !DILocation(line: 2612, column: 8, scope: !7071)
!7105 = !DILocation(line: 2614, column: 22, scope: !7071)
!7106 = !DILocation(line: 2614, column: 26, scope: !7071)
!7107 = !DILocation(line: 2614, column: 33, scope: !7071)
!7108 = !DILocation(line: 2614, column: 41, scope: !7071)
!7109 = !DILocation(line: 2614, column: 45, scope: !7071)
!7110 = !DILocation(line: 2614, column: 40, scope: !7071)
!7111 = !DILocation(line: 2614, column: 34, scope: !7071)
!7112 = !DILocation(line: 2614, column: 56, scope: !7071)
!7113 = !DILocation(line: 2614, column: 8, scope: !7071)
!7114 = !DILocation(line: 2615, column: 22, scope: !7071)
!7115 = !DILocation(line: 2615, column: 26, scope: !7071)
!7116 = !DILocation(line: 2615, column: 33, scope: !7071)
!7117 = !DILocation(line: 2615, column: 37, scope: !7071)
!7118 = !DILocation(line: 2615, column: 47, scope: !7071)
!7119 = !DILocation(line: 2615, column: 8, scope: !7071)
!7120 = !DILocation(line: 2617, column: 12, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 2617, column: 12)
!7122 = !DILocation(line: 2617, column: 21, scope: !7121)
!7123 = !DILocation(line: 2617, column: 12, scope: !7071)
!7124 = !DILocation(line: 2639, column: 8, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 2617, column: 34)
!7126 = !DILocation(line: 2642, column: 20, scope: !7071)
!7127 = !DILocation(line: 2642, column: 26, scope: !7071)
!7128 = !DILocation(line: 2642, column: 37, scope: !7071)
!7129 = !DILocation(line: 2642, column: 42, scope: !7071)
!7130 = !DILocation(line: 2642, column: 8, scope: !7071)
!7131 = !DILocation(line: 2643, column: 18, scope: !7071)
!7132 = !DILocation(line: 2643, column: 37, scope: !7071)
!7133 = !DILocation(line: 2643, column: 41, scope: !7071)
!7134 = !DILocation(line: 2643, column: 25, scope: !7071)
!7135 = !DILocation(line: 2643, column: 57, scope: !7071)
!7136 = !DILocation(line: 2643, column: 61, scope: !7071)
!7137 = !DILocation(line: 2643, column: 45, scope: !7071)
!7138 = !DILocation(line: 2643, column: 44, scope: !7071)
!7139 = !DILocation(line: 2643, column: 66, scope: !7071)
!7140 = !DILocation(line: 2643, column: 8, scope: !7071)
!7141 = !DILocation(line: 2645, column: 22, scope: !7071)
!7142 = !DILocation(line: 2645, column: 27, scope: !7071)
!7143 = !DILocation(line: 2645, column: 34, scope: !7071)
!7144 = !DILocation(line: 2645, column: 38, scope: !7071)
!7145 = !DILocation(line: 2645, column: 48, scope: !7071)
!7146 = !DILocation(line: 2645, column: 8, scope: !7071)
!7147 = !DILocation(line: 2646, column: 22, scope: !7071)
!7148 = !DILocation(line: 2646, column: 27, scope: !7071)
!7149 = !DILocation(line: 2646, column: 35, scope: !7071)
!7150 = !DILocation(line: 2646, column: 34, scope: !7071)
!7151 = !DILocation(line: 2646, column: 43, scope: !7071)
!7152 = !DILocation(line: 2646, column: 47, scope: !7071)
!7153 = !DILocation(line: 2646, column: 42, scope: !7071)
!7154 = !DILocation(line: 2646, column: 36, scope: !7071)
!7155 = !DILocation(line: 2646, column: 58, scope: !7071)
!7156 = !DILocation(line: 2646, column: 8, scope: !7071)
!7157 = !DILocation(line: 2649, column: 7, scope: !7071)
!7158 = !DILocation(line: 2650, column: 6, scope: !7023)
!7159 = !DILocation(line: 2651, column: 5, scope: !6988)
!7160 = !DILocation(line: 2586, column: 50, scope: !6983)
!7161 = !DILocation(line: 2586, column: 57, scope: !6983)
!7162 = !DILocation(line: 2586, column: 5, scope: !6983)
!7163 = distinct !{!7163, !6986, !7164}
!7164 = !DILocation(line: 2651, column: 5, scope: !6975)
!7165 = !DILocation(line: 2652, column: 4, scope: !6956)
!7166 = !DILocation(line: 2655, column: 20, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2655, column: 8)
!7168 = !DILocation(line: 2655, column: 24, scope: !7167)
!7169 = !DILocation(line: 2655, column: 8, scope: !7167)
!7170 = !DILocation(line: 2655, column: 28, scope: !7167)
!7171 = !DILocation(line: 2655, column: 8, scope: !6937)
!7172 = !DILocalVariable(name: "auxvect", scope: !7173, file: !3, line: 2656, type: !376)
!7173 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2655, column: 44)
!7174 = !DILocation(line: 2656, column: 11, scope: !7173)
!7175 = !DILocalVariable(name: "velgoal", scope: !7173, file: !3, line: 2657, type: !376)
!7176 = !DILocation(line: 2657, column: 11, scope: !7173)
!7177 = !DILocation(line: 2660, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2660, column: 9)
!7179 = !DILocation(line: 2660, column: 13, scope: !7178)
!7180 = !DILocation(line: 2660, column: 22, scope: !7178)
!7181 = !DILocation(line: 2660, column: 9, scope: !7173)
!7182 = !DILocation(line: 2662, column: 18, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 2660, column: 36)
!7184 = !DILocation(line: 2662, column: 27, scope: !7183)
!7185 = !DILocation(line: 2662, column: 31, scope: !7183)
!7186 = !DILocation(line: 2662, column: 36, scope: !7183)
!7187 = !DILocation(line: 2662, column: 40, scope: !7183)
!7188 = !DILocation(line: 2662, column: 6, scope: !7183)
!7189 = !DILocation(line: 2663, column: 38, scope: !7183)
!7190 = !DILocation(line: 2663, column: 42, scope: !7183)
!7191 = !DILocation(line: 2663, column: 26, scope: !7183)
!7192 = !DILocation(line: 2663, column: 48, scope: !7183)
!7193 = !DILocation(line: 2663, column: 52, scope: !7183)
!7194 = !DILocation(line: 2663, column: 46, scope: !7183)
!7195 = !DILocation(line: 2663, column: 24, scope: !7183)
!7196 = !DILocation(line: 2663, column: 17, scope: !7183)
!7197 = !DILocation(line: 2663, column: 64, scope: !7183)
!7198 = !DILocation(line: 2663, column: 10, scope: !7183)
!7199 = !DILocation(line: 2664, column: 22, scope: !7183)
!7200 = !DILocation(line: 2664, column: 21, scope: !7183)
!7201 = !DILocation(line: 2664, column: 26, scope: !7183)
!7202 = !DILocation(line: 2664, column: 24, scope: !7183)
!7203 = !DILocation(line: 2664, column: 6, scope: !7183)
!7204 = !DILocation(line: 2664, column: 10, scope: !7183)
!7205 = !DILocation(line: 2664, column: 18, scope: !7183)
!7206 = !DILocation(line: 2665, column: 22, scope: !7183)
!7207 = !DILocation(line: 2665, column: 21, scope: !7183)
!7208 = !DILocation(line: 2665, column: 26, scope: !7183)
!7209 = !DILocation(line: 2665, column: 24, scope: !7183)
!7210 = !DILocation(line: 2665, column: 6, scope: !7183)
!7211 = !DILocation(line: 2665, column: 10, scope: !7183)
!7212 = !DILocation(line: 2665, column: 18, scope: !7183)
!7213 = !DILocation(line: 2666, column: 22, scope: !7183)
!7214 = !DILocation(line: 2666, column: 21, scope: !7183)
!7215 = !DILocation(line: 2666, column: 26, scope: !7183)
!7216 = !DILocation(line: 2666, column: 24, scope: !7183)
!7217 = !DILocation(line: 2666, column: 6, scope: !7183)
!7218 = !DILocation(line: 2666, column: 10, scope: !7183)
!7219 = !DILocation(line: 2666, column: 18, scope: !7183)
!7220 = !DILocation(line: 2668, column: 10, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 2668, column: 10)
!7222 = !DILocation(line: 2668, column: 19, scope: !7221)
!7223 = !DILocation(line: 2668, column: 10, scope: !7183)
!7224 = !DILocation(line: 2673, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2668, column: 32)
!7226 = !DILocation(line: 2677, column: 18, scope: !7183)
!7227 = !DILocation(line: 2677, column: 27, scope: !7183)
!7228 = !DILocation(line: 2677, column: 31, scope: !7183)
!7229 = !DILocation(line: 2677, column: 38, scope: !7183)
!7230 = !DILocation(line: 2677, column: 42, scope: !7183)
!7231 = !DILocation(line: 2677, column: 6, scope: !7183)
!7232 = !DILocation(line: 2678, column: 11, scope: !7183)
!7233 = !DILocation(line: 2678, column: 15, scope: !7183)
!7234 = !DILocation(line: 2678, column: 47, scope: !7183)
!7235 = !DILocation(line: 2678, column: 27, scope: !7183)
!7236 = !DILocation(line: 2678, column: 25, scope: !7183)
!7237 = !DILocation(line: 2678, column: 9, scope: !7183)
!7238 = !DILocation(line: 2679, column: 18, scope: !7183)
!7239 = !DILocation(line: 2679, column: 27, scope: !7183)
!7240 = !DILocation(line: 2679, column: 36, scope: !7183)
!7241 = !DILocation(line: 2679, column: 40, scope: !7183)
!7242 = !DILocation(line: 2679, column: 6, scope: !7183)
!7243 = !DILocation(line: 2681, column: 10, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 2681, column: 10)
!7245 = !DILocation(line: 2681, column: 20, scope: !7244)
!7246 = !DILocation(line: 2681, column: 10, scope: !7183)
!7247 = !DILocation(line: 2682, column: 22, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 2681, column: 28)
!7249 = !DILocation(line: 2682, column: 28, scope: !7248)
!7250 = !DILocation(line: 2682, column: 25, scope: !7248)
!7251 = !DILocation(line: 2682, column: 7, scope: !7248)
!7252 = !DILocation(line: 2682, column: 11, scope: !7248)
!7253 = !DILocation(line: 2682, column: 19, scope: !7248)
!7254 = !DILocation(line: 2683, column: 22, scope: !7248)
!7255 = !DILocation(line: 2683, column: 28, scope: !7248)
!7256 = !DILocation(line: 2683, column: 25, scope: !7248)
!7257 = !DILocation(line: 2683, column: 7, scope: !7248)
!7258 = !DILocation(line: 2683, column: 11, scope: !7248)
!7259 = !DILocation(line: 2683, column: 19, scope: !7248)
!7260 = !DILocation(line: 2684, column: 22, scope: !7248)
!7261 = !DILocation(line: 2684, column: 28, scope: !7248)
!7262 = !DILocation(line: 2684, column: 25, scope: !7248)
!7263 = !DILocation(line: 2684, column: 7, scope: !7248)
!7264 = !DILocation(line: 2684, column: 11, scope: !7248)
!7265 = !DILocation(line: 2684, column: 19, scope: !7248)
!7266 = !DILocation(line: 2685, column: 11, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 2685, column: 11)
!7268 = !DILocation(line: 2685, column: 20, scope: !7267)
!7269 = !DILocation(line: 2685, column: 11, scope: !7248)
!7270 = !DILocation(line: 2687, column: 21, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 2685, column: 33)
!7272 = !DILocation(line: 2687, column: 8, scope: !7271)
!7273 = !DILocation(line: 2690, column: 7, scope: !7271)
!7274 = !DILocation(line: 2692, column: 6, scope: !7248)
!7275 = !DILocation(line: 2694, column: 22, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 2693, column: 11)
!7277 = !DILocation(line: 2694, column: 28, scope: !7276)
!7278 = !DILocation(line: 2694, column: 41, scope: !7276)
!7279 = !DILocation(line: 2694, column: 45, scope: !7276)
!7280 = !DILocation(line: 2694, column: 39, scope: !7276)
!7281 = !DILocation(line: 2694, column: 25, scope: !7276)
!7282 = !DILocation(line: 2694, column: 7, scope: !7276)
!7283 = !DILocation(line: 2694, column: 11, scope: !7276)
!7284 = !DILocation(line: 2694, column: 19, scope: !7276)
!7285 = !DILocation(line: 2695, column: 22, scope: !7276)
!7286 = !DILocation(line: 2695, column: 28, scope: !7276)
!7287 = !DILocation(line: 2695, column: 41, scope: !7276)
!7288 = !DILocation(line: 2695, column: 45, scope: !7276)
!7289 = !DILocation(line: 2695, column: 39, scope: !7276)
!7290 = !DILocation(line: 2695, column: 25, scope: !7276)
!7291 = !DILocation(line: 2695, column: 7, scope: !7276)
!7292 = !DILocation(line: 2695, column: 11, scope: !7276)
!7293 = !DILocation(line: 2695, column: 19, scope: !7276)
!7294 = !DILocation(line: 2696, column: 22, scope: !7276)
!7295 = !DILocation(line: 2696, column: 28, scope: !7276)
!7296 = !DILocation(line: 2696, column: 41, scope: !7276)
!7297 = !DILocation(line: 2696, column: 45, scope: !7276)
!7298 = !DILocation(line: 2696, column: 39, scope: !7276)
!7299 = !DILocation(line: 2696, column: 25, scope: !7276)
!7300 = !DILocation(line: 2696, column: 7, scope: !7276)
!7301 = !DILocation(line: 2696, column: 11, scope: !7276)
!7302 = !DILocation(line: 2696, column: 19, scope: !7276)
!7303 = !DILocation(line: 2698, column: 5, scope: !7183)
!7304 = !DILocation(line: 2703, column: 18, scope: !7173)
!7305 = !DILocation(line: 2703, column: 22, scope: !7173)
!7306 = !DILocation(line: 2703, column: 29, scope: !7173)
!7307 = !DILocation(line: 2703, column: 50, scope: !7173)
!7308 = !DILocation(line: 2703, column: 54, scope: !7173)
!7309 = !DILocation(line: 2703, column: 38, scope: !7173)
!7310 = !DILocation(line: 2703, column: 5, scope: !7173)
!7311 = !DILocation(line: 2707, column: 9, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2707, column: 9)
!7313 = !DILocation(line: 2707, column: 9, scope: !7173)
!7314 = !DILocalVariable(name: "epoint", scope: !7315, file: !3, line: 2708, type: !7316)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2707, column: 22)
!7316 = !DIDerivedType(tag: DW_TAG_typedef, name: "EffectedPoint", file: !1029, line: 67, baseType: !7317)
!7317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectedPoint", file: !1029, line: 52, size: 512, elements: !7318)
!7318 = !{!7319, !7320, !7321, !7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329}
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !7317, file: !1029, line: 53, baseType: !937, size: 64)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !7317, file: !1029, line: 54, baseType: !937, size: 64, offset: 64)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !7317, file: !1029, line: 55, baseType: !937, size: 64, offset: 128)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !7317, file: !1029, line: 56, baseType: !937, size: 64, offset: 192)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_frame", scope: !7317, file: !1029, line: 57, baseType: !94, size: 32, offset: 256)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_sec", scope: !7317, file: !1029, line: 58, baseType: !94, size: 32, offset: 288)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7317, file: !1029, line: 61, baseType: !94, size: 32, offset: 320)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "charge", scope: !7317, file: !1029, line: 61, baseType: !94, size: 32, offset: 352)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7317, file: !1029, line: 63, baseType: !6, size: 32, offset: 384)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !7317, file: !1029, line: 64, baseType: !92, size: 32, offset: 416)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !7317, file: !1029, line: 66, baseType: !1398, size: 64, offset: 448)
!7330 = !DILocation(line: 2708, column: 20, scope: !7315)
!7331 = !DILocalVariable(name: "force", scope: !7315, file: !3, line: 2709, type: !376)
!7332 = !DILocation(line: 2709, column: 12, scope: !7315)
!7333 = !DILocalVariable(name: "speed", scope: !7315, file: !3, line: 2710, type: !376)
!7334 = !DILocation(line: 2710, column: 12, scope: !7315)
!7335 = !DILocalVariable(name: "eval_sb_fric_force_scale", scope: !7315, file: !3, line: 2711, type: !94)
!7336 = !DILocation(line: 2711, column: 12, scope: !7315)
!7337 = !DILocation(line: 2711, column: 59, scope: !7315)
!7338 = !DILocation(line: 2711, column: 39, scope: !7315)
!7339 = !DILocation(line: 2712, column: 25, scope: !7315)
!7340 = !DILocation(line: 2712, column: 32, scope: !7315)
!7341 = !DILocation(line: 2712, column: 36, scope: !7315)
!7342 = !DILocation(line: 2712, column: 41, scope: !7315)
!7343 = !DILocation(line: 2712, column: 45, scope: !7315)
!7344 = !DILocation(line: 2712, column: 50, scope: !7315)
!7345 = !DILocation(line: 2712, column: 54, scope: !7315)
!7346 = !DILocation(line: 2712, column: 61, scope: !7315)
!7347 = !DILocation(line: 2712, column: 60, scope: !7315)
!7348 = !DILocation(line: 2712, column: 6, scope: !7315)
!7349 = !DILocation(line: 2713, column: 20, scope: !7315)
!7350 = !DILocation(line: 2713, column: 39, scope: !7315)
!7351 = !DILocation(line: 2713, column: 43, scope: !7315)
!7352 = !DILocation(line: 2713, column: 70, scope: !7315)
!7353 = !DILocation(line: 2713, column: 77, scope: !7315)
!7354 = !DILocation(line: 2713, column: 6, scope: !7315)
!7355 = !DILocation(line: 2716, column: 16, scope: !7315)
!7356 = !DILocation(line: 2716, column: 23, scope: !7315)
!7357 = !DILocation(line: 2716, column: 36, scope: !7315)
!7358 = !DILocation(line: 2716, column: 34, scope: !7315)
!7359 = !DILocation(line: 2716, column: 6, scope: !7315)
!7360 = !DILocation(line: 2717, column: 16, scope: !7315)
!7361 = !DILocation(line: 2717, column: 20, scope: !7315)
!7362 = !DILocation(line: 2717, column: 27, scope: !7315)
!7363 = !DILocation(line: 2717, column: 6, scope: !7315)
!7364 = !DILocation(line: 2720, column: 10, scope: !7315)
!7365 = !DILocation(line: 2720, column: 14, scope: !7315)
!7366 = !DILocation(line: 2720, column: 26, scope: !7315)
!7367 = !DILocation(line: 2720, column: 24, scope: !7315)
!7368 = !DILocation(line: 2720, column: 8, scope: !7315)
!7369 = !DILocation(line: 2721, column: 22, scope: !7315)
!7370 = !DILocation(line: 2721, column: 28, scope: !7315)
!7371 = !DILocation(line: 2721, column: 32, scope: !7315)
!7372 = !DILocation(line: 2721, column: 41, scope: !7315)
!7373 = !DILocation(line: 2721, column: 52, scope: !7315)
!7374 = !DILocation(line: 2721, column: 51, scope: !7315)
!7375 = !DILocation(line: 2721, column: 61, scope: !7315)
!7376 = !DILocation(line: 2721, column: 60, scope: !7315)
!7377 = !DILocation(line: 2721, column: 39, scope: !7315)
!7378 = !DILocation(line: 2721, column: 25, scope: !7315)
!7379 = !DILocation(line: 2721, column: 6, scope: !7315)
!7380 = !DILocation(line: 2721, column: 10, scope: !7315)
!7381 = !DILocation(line: 2721, column: 19, scope: !7315)
!7382 = !DILocation(line: 2722, column: 22, scope: !7315)
!7383 = !DILocation(line: 2722, column: 28, scope: !7315)
!7384 = !DILocation(line: 2722, column: 32, scope: !7315)
!7385 = !DILocation(line: 2722, column: 41, scope: !7315)
!7386 = !DILocation(line: 2722, column: 52, scope: !7315)
!7387 = !DILocation(line: 2722, column: 51, scope: !7315)
!7388 = !DILocation(line: 2722, column: 61, scope: !7315)
!7389 = !DILocation(line: 2722, column: 60, scope: !7315)
!7390 = !DILocation(line: 2722, column: 39, scope: !7315)
!7391 = !DILocation(line: 2722, column: 25, scope: !7315)
!7392 = !DILocation(line: 2722, column: 6, scope: !7315)
!7393 = !DILocation(line: 2722, column: 10, scope: !7315)
!7394 = !DILocation(line: 2722, column: 19, scope: !7315)
!7395 = !DILocation(line: 2723, column: 22, scope: !7315)
!7396 = !DILocation(line: 2723, column: 28, scope: !7315)
!7397 = !DILocation(line: 2723, column: 32, scope: !7315)
!7398 = !DILocation(line: 2723, column: 41, scope: !7315)
!7399 = !DILocation(line: 2723, column: 52, scope: !7315)
!7400 = !DILocation(line: 2723, column: 51, scope: !7315)
!7401 = !DILocation(line: 2723, column: 61, scope: !7315)
!7402 = !DILocation(line: 2723, column: 60, scope: !7315)
!7403 = !DILocation(line: 2723, column: 39, scope: !7315)
!7404 = !DILocation(line: 2723, column: 25, scope: !7315)
!7405 = !DILocation(line: 2723, column: 6, scope: !7315)
!7406 = !DILocation(line: 2723, column: 10, scope: !7315)
!7407 = !DILocation(line: 2723, column: 19, scope: !7315)
!7408 = !DILocation(line: 2726, column: 5, scope: !7315)
!7409 = !DILocation(line: 2729, column: 10, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2727, column: 10)
!7411 = !DILocation(line: 2729, column: 14, scope: !7410)
!7412 = !DILocation(line: 2729, column: 46, scope: !7410)
!7413 = !DILocation(line: 2729, column: 26, scope: !7410)
!7414 = !DILocation(line: 2729, column: 24, scope: !7410)
!7415 = !DILocation(line: 2729, column: 8, scope: !7410)
!7416 = !DILocation(line: 2731, column: 21, scope: !7410)
!7417 = !DILocation(line: 2731, column: 25, scope: !7410)
!7418 = !DILocation(line: 2731, column: 32, scope: !7410)
!7419 = !DILocation(line: 2731, column: 31, scope: !7410)
!7420 = !DILocation(line: 2731, column: 6, scope: !7410)
!7421 = !DILocation(line: 2731, column: 10, scope: !7410)
!7422 = !DILocation(line: 2731, column: 18, scope: !7410)
!7423 = !DILocation(line: 2732, column: 21, scope: !7410)
!7424 = !DILocation(line: 2732, column: 25, scope: !7410)
!7425 = !DILocation(line: 2732, column: 32, scope: !7410)
!7426 = !DILocation(line: 2732, column: 31, scope: !7410)
!7427 = !DILocation(line: 2732, column: 6, scope: !7410)
!7428 = !DILocation(line: 2732, column: 10, scope: !7410)
!7429 = !DILocation(line: 2732, column: 18, scope: !7410)
!7430 = !DILocation(line: 2733, column: 21, scope: !7410)
!7431 = !DILocation(line: 2733, column: 25, scope: !7410)
!7432 = !DILocation(line: 2733, column: 32, scope: !7410)
!7433 = !DILocation(line: 2733, column: 31, scope: !7410)
!7434 = !DILocation(line: 2733, column: 6, scope: !7410)
!7435 = !DILocation(line: 2733, column: 10, scope: !7410)
!7436 = !DILocation(line: 2733, column: 18, scope: !7410)
!7437 = !DILocation(line: 2735, column: 10, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2735, column: 10)
!7439 = !DILocation(line: 2735, column: 19, scope: !7438)
!7440 = !DILocation(line: 2735, column: 10, scope: !7410)
!7441 = !DILocation(line: 2742, column: 6, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2735, column: 32)
!7443 = !DILocation(line: 2746, column: 5, scope: !7173)
!7444 = !DILocation(line: 2746, column: 9, scope: !7173)
!7445 = !DILocation(line: 2746, column: 15, scope: !7173)
!7446 = !DILocation(line: 2747, column: 5, scope: !7173)
!7447 = !DILocation(line: 2747, column: 9, scope: !7173)
!7448 = !DILocation(line: 2747, column: 16, scope: !7173)
!7449 = !DILocation(line: 2748, column: 5, scope: !7173)
!7450 = !DILocation(line: 2748, column: 9, scope: !7173)
!7451 = !DILocation(line: 2748, column: 18, scope: !7173)
!7452 = !DILocation(line: 2749, column: 9, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2749, column: 9)
!7454 = !DILocation(line: 2749, column: 9, scope: !7173)
!7455 = !DILocalVariable(name: "cfforce", scope: !7456, file: !3, line: 2750, type: !376)
!7456 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2749, column: 23)
!7457 = !DILocation(line: 2750, column: 12, scope: !7456)
!7458 = !DILocalVariable(name: "defforce", scope: !7456, file: !3, line: 2750, type: !376)
!7459 = !DILocation(line: 2750, column: 24, scope: !7456)
!7460 = !DILocalVariable(name: "vel", scope: !7456, file: !3, line: 2750, type: !376)
!7461 = !DILocation(line: 2750, column: 57, scope: !7456)
!7462 = !DILocalVariable(name: "facenormal", scope: !7456, file: !3, line: 2750, type: !376)
!7463 = !DILocation(line: 2750, column: 86, scope: !7456)
!7464 = !DILocalVariable(name: "cf", scope: !7456, file: !3, line: 2750, type: !94)
!7465 = !DILocation(line: 2750, column: 101, scope: !7456)
!7466 = !DILocalVariable(name: "intrusion", scope: !7456, file: !3, line: 2750, type: !94)
!7467 = !DILocation(line: 2750, column: 112, scope: !7456)
!7468 = !DILocation(line: 2751, column: 9, scope: !7456)
!7469 = !DILocation(line: 2753, column: 26, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 2753, column: 10)
!7471 = !DILocation(line: 2753, column: 30, scope: !7470)
!7472 = !DILocation(line: 2753, column: 34, scope: !7470)
!7473 = !DILocation(line: 2753, column: 39, scope: !7470)
!7474 = !DILocation(line: 2753, column: 51, scope: !7470)
!7475 = !DILocation(line: 2753, column: 66, scope: !7470)
!7476 = !DILocation(line: 2753, column: 75, scope: !7470)
!7477 = !DILocation(line: 2753, column: 10, scope: !7470)
!7478 = !DILocation(line: 2753, column: 10, scope: !7456)
!7479 = !DILocation(line: 2754, column: 13, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 2754, column: 11)
!7481 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 2753, column: 93)
!7482 = !DILocation(line: 2754, column: 22, scope: !7480)
!7483 = !DILocation(line: 2754, column: 25, scope: !7480)
!7484 = !DILocation(line: 2754, column: 35, scope: !7480)
!7485 = !DILocation(line: 2754, column: 11, scope: !7481)
!7486 = !DILocation(line: 2755, column: 14, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 2755, column: 12)
!7488 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 2754, column: 44)
!7489 = !DILocation(line: 2755, column: 12, scope: !7487)
!7490 = !DILocation(line: 2755, column: 26, scope: !7487)
!7491 = !DILocation(line: 2755, column: 12, scope: !7488)
!7492 = !DILocation(line: 2766, column: 23, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 2755, column: 34)
!7494 = !DILocation(line: 2766, column: 27, scope: !7493)
!7495 = !DILocation(line: 2766, column: 33, scope: !7493)
!7496 = !DILocation(line: 2766, column: 32, scope: !7493)
!7497 = !DILocation(line: 2766, column: 44, scope: !7493)
!7498 = !DILocation(line: 2766, column: 9, scope: !7493)
!7499 = !DILocation(line: 2767, column: 8, scope: !7493)
!7500 = !DILocation(line: 2770, column: 21, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 2768, column: 13)
!7502 = !DILocation(line: 2770, column: 30, scope: !7501)
!7503 = !DILocation(line: 2770, column: 34, scope: !7501)
!7504 = !DILocation(line: 2770, column: 39, scope: !7501)
!7505 = !DILocation(line: 2770, column: 9, scope: !7501)
!7506 = !DILocation(line: 2771, column: 23, scope: !7501)
!7507 = !DILocation(line: 2771, column: 27, scope: !7501)
!7508 = !DILocation(line: 2771, column: 35, scope: !7501)
!7509 = !DILocation(line: 2771, column: 34, scope: !7501)
!7510 = !DILocation(line: 2771, column: 37, scope: !7501)
!7511 = !DILocation(line: 2771, column: 45, scope: !7501)
!7512 = !DILocation(line: 2771, column: 9, scope: !7501)
!7513 = !DILocation(line: 2775, column: 8, scope: !7488)
!7514 = !DILocation(line: 2775, column: 12, scope: !7488)
!7515 = !DILocation(line: 2775, column: 21, scope: !7488)
!7516 = !DILocation(line: 2775, column: 26, scope: !7488)
!7517 = !DILocation(line: 2776, column: 8, scope: !7488)
!7518 = !DILocation(line: 2776, column: 12, scope: !7488)
!7519 = !DILocation(line: 2776, column: 21, scope: !7488)
!7520 = !DILocation(line: 2777, column: 20, scope: !7488)
!7521 = !DILocation(line: 2777, column: 24, scope: !7488)
!7522 = !DILocation(line: 2777, column: 29, scope: !7488)
!7523 = !DILocation(line: 2777, column: 8, scope: !7488)
!7524 = !DILocation(line: 2777, column: 12, scope: !7488)
!7525 = !DILocation(line: 2777, column: 18, scope: !7488)
!7526 = !DILocation(line: 2778, column: 7, scope: !7488)
!7527 = !DILocation(line: 2780, column: 20, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 2779, column: 12)
!7529 = !DILocation(line: 2780, column: 29, scope: !7528)
!7530 = !DILocation(line: 2780, column: 33, scope: !7528)
!7531 = !DILocation(line: 2780, column: 38, scope: !7528)
!7532 = !DILocation(line: 2780, column: 8, scope: !7528)
!7533 = !DILocation(line: 2781, column: 22, scope: !7528)
!7534 = !DILocation(line: 2781, column: 26, scope: !7528)
!7535 = !DILocation(line: 2781, column: 34, scope: !7528)
!7536 = !DILocation(line: 2781, column: 33, scope: !7528)
!7537 = !DILocation(line: 2781, column: 36, scope: !7528)
!7538 = !DILocation(line: 2781, column: 44, scope: !7528)
!7539 = !DILocation(line: 2781, column: 8, scope: !7528)
!7540 = !DILocation(line: 2783, column: 21, scope: !7481)
!7541 = !DILocation(line: 2783, column: 25, scope: !7481)
!7542 = !DILocation(line: 2783, column: 32, scope: !7481)
!7543 = !DILocation(line: 2783, column: 36, scope: !7481)
!7544 = !DILocation(line: 2783, column: 7, scope: !7481)
!7545 = !DILocation(line: 2784, column: 11, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 2784, column: 11)
!7547 = !DILocation(line: 2784, column: 20, scope: !7546)
!7548 = !DILocation(line: 2784, column: 11, scope: !7481)
!7549 = !DILocation(line: 2790, column: 7, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2784, column: 33)
!7551 = !DILocation(line: 2792, column: 6, scope: !7481)
!7552 = !DILocation(line: 2794, column: 5, scope: !7456)
!7553 = !DILocation(line: 2798, column: 9, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2798, column: 9)
!7555 = !DILocation(line: 2798, column: 13, scope: !7554)
!7556 = !DILocation(line: 2798, column: 22, scope: !7554)
!7557 = !DILocation(line: 2798, column: 9, scope: !7173)
!7558 = !DILocation(line: 2799, column: 10, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2799, column: 10)
!7560 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 2798, column: 37)
!7561 = !DILocation(line: 2799, column: 14, scope: !7559)
!7562 = !DILocation(line: 2799, column: 10, scope: !7560)
!7563 = !DILocation(line: 2800, column: 14, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 2800, column: 7)
!7565 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2799, column: 23)
!7566 = !DILocation(line: 2800, column: 18, scope: !7564)
!7567 = !DILocation(line: 2800, column: 13, scope: !7564)
!7568 = !DILocation(line: 2800, column: 12, scope: !7564)
!7569 = !DILocation(line: 2800, column: 29, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 2800, column: 7)
!7571 = !DILocation(line: 2800, column: 30, scope: !7570)
!7572 = !DILocation(line: 2800, column: 7, scope: !7564)
!7573 = !DILocation(line: 2801, column: 13, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 2800, column: 38)
!7575 = !DILocation(line: 2801, column: 17, scope: !7574)
!7576 = !DILocation(line: 2801, column: 27, scope: !7574)
!7577 = !DILocation(line: 2801, column: 31, scope: !7574)
!7578 = !DILocation(line: 2801, column: 39, scope: !7574)
!7579 = !DILocation(line: 2801, column: 40, scope: !7574)
!7580 = !DILocation(line: 2801, column: 25, scope: !7574)
!7581 = !DILocation(line: 2801, column: 11, scope: !7574)
!7582 = !DILocation(line: 2802, column: 12, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 2802, column: 12)
!7584 = !DILocation(line: 2802, column: 31, scope: !7583)
!7585 = !DILocation(line: 2802, column: 34, scope: !7583)
!7586 = !DILocation(line: 2802, column: 12, scope: !7574)
!7587 = !DILocation(line: 2803, column: 19, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 2802, column: 43)
!7589 = !DILocation(line: 2803, column: 23, scope: !7588)
!7590 = !DILocation(line: 2803, column: 30, scope: !7588)
!7591 = !DILocation(line: 2803, column: 34, scope: !7588)
!7592 = !DILocation(line: 2803, column: 9, scope: !7588)
!7593 = !DILocation(line: 2804, column: 13, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 2804, column: 13)
!7595 = !DILocation(line: 2804, column: 17, scope: !7594)
!7596 = !DILocation(line: 2804, column: 22, scope: !7594)
!7597 = !DILocation(line: 2804, column: 13, scope: !7588)
!7598 = !DILocation(line: 2805, column: 22, scope: !7594)
!7599 = !DILocation(line: 2805, column: 26, scope: !7594)
!7600 = !DILocation(line: 2805, column: 10, scope: !7594)
!7601 = !DILocation(line: 2805, column: 14, scope: !7594)
!7602 = !DILocation(line: 2805, column: 20, scope: !7594)
!7603 = !DILocation(line: 2807, column: 8, scope: !7588)
!7604 = !DILocation(line: 2810, column: 24, scope: !7574)
!7605 = !DILocation(line: 2810, column: 28, scope: !7574)
!7606 = !DILocation(line: 2810, column: 32, scope: !7574)
!7607 = !DILocation(line: 2810, column: 41, scope: !7574)
!7608 = !DILocation(line: 2810, column: 40, scope: !7574)
!7609 = !DILocation(line: 2810, column: 44, scope: !7574)
!7610 = !DILocation(line: 2810, column: 48, scope: !7574)
!7611 = !DILocation(line: 2810, column: 53, scope: !7574)
!7612 = !DILocation(line: 2810, column: 8, scope: !7574)
!7613 = !DILocation(line: 2811, column: 7, scope: !7574)
!7614 = !DILocation(line: 2800, column: 34, scope: !7570)
!7615 = !DILocation(line: 2800, column: 7, scope: !7570)
!7616 = distinct !{!7616, !7572, !7617}
!7617 = !DILocation(line: 2811, column: 7, scope: !7564)
!7618 = !DILocation(line: 2812, column: 6, scope: !7565)
!7619 = !DILocation(line: 2813, column: 5, scope: !7560)
!7620 = !DILocation(line: 2815, column: 4, scope: !7173)
!7621 = !DILocation(line: 2816, column: 3, scope: !6937)
!7622 = !DILocation(line: 2552, column: 46, scope: !6933)
!7623 = !DILocation(line: 2552, column: 52, scope: !6933)
!7624 = !DILocation(line: 2552, column: 3, scope: !6933)
!7625 = distinct !{!7625, !6935, !7626}
!7626 = !DILocation(line: 2816, column: 3, scope: !6925)
!7627 = !DILocation(line: 2820, column: 7, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2820, column: 7)
!7629 = !DILocation(line: 2820, column: 11, scope: !7628)
!7630 = !DILocation(line: 2820, column: 20, scope: !7628)
!7631 = !DILocation(line: 2820, column: 7, scope: !6794)
!7632 = !DILocation(line: 2820, column: 63, scope: !7628)
!7633 = !DILocation(line: 2820, column: 67, scope: !7628)
!7634 = !DILocation(line: 2820, column: 38, scope: !7628)
!7635 = !DILocation(line: 2891, column: 3, scope: !6794)
!7636 = !DILocation(line: 2893, column: 1, scope: !6767)
!7637 = distinct !DISubprogram(name: "softbody_apply_forces", scope: !3, file: !3, line: 2895, type: !7638, scopeLine: 2896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{null, !2154, !94, !92, !937, !92}
!7640 = !DILocalVariable(name: "ob", arg: 1, scope: !7637, file: !3, line: 2895, type: !2154)
!7641 = !DILocation(line: 2895, column: 43, scope: !7637)
!7642 = !DILocalVariable(name: "forcetime", arg: 2, scope: !7637, file: !3, line: 2895, type: !94)
!7643 = !DILocation(line: 2895, column: 53, scope: !7637)
!7644 = !DILocalVariable(name: "mode", arg: 3, scope: !7637, file: !3, line: 2895, type: !92)
!7645 = !DILocation(line: 2895, column: 68, scope: !7637)
!7646 = !DILocalVariable(name: "err", arg: 4, scope: !7637, file: !3, line: 2895, type: !937)
!7647 = !DILocation(line: 2895, column: 81, scope: !7637)
!7648 = !DILocalVariable(name: "mid_flags", arg: 5, scope: !7637, file: !3, line: 2895, type: !92)
!7649 = !DILocation(line: 2895, column: 90, scope: !7637)
!7650 = !DILocalVariable(name: "sb", scope: !7637, file: !3, line: 2900, type: !2192)
!7651 = !DILocation(line: 2900, column: 12, scope: !7637)
!7652 = !DILocation(line: 2900, column: 16, scope: !7637)
!7653 = !DILocation(line: 2900, column: 20, scope: !7637)
!7654 = !DILocalVariable(name: "bp", scope: !7637, file: !3, line: 2901, type: !2386)
!7655 = !DILocation(line: 2901, column: 13, scope: !7637)
!7656 = !DILocalVariable(name: "dx", scope: !7637, file: !3, line: 2902, type: !376)
!7657 = !DILocation(line: 2902, column: 8, scope: !7637)
!7658 = !DILocalVariable(name: "dv", scope: !7637, file: !3, line: 2902, type: !376)
!7659 = !DILocation(line: 2902, column: 21, scope: !7637)
!7660 = !DILocalVariable(name: "aabbmin", scope: !7637, file: !3, line: 2902, type: !376)
!7661 = !DILocation(line: 2902, column: 28, scope: !7637)
!7662 = !DILocalVariable(name: "aabbmax", scope: !7637, file: !3, line: 2902, type: !376)
!7663 = !DILocation(line: 2902, column: 40, scope: !7637)
!7664 = !DILocalVariable(name: "cm", scope: !7637, file: !3, line: 2902, type: !376)
!7665 = !DILocation(line: 2902, column: 52, scope: !7637)
!7666 = !DILocalVariable(name: "timeovermass", scope: !7637, file: !3, line: 2903, type: !94)
!7667 = !DILocation(line: 2903, column: 8, scope: !7637)
!7668 = !DILocalVariable(name: "maxerrpos", scope: !7637, file: !3, line: 2904, type: !94)
!7669 = !DILocation(line: 2904, column: 8, scope: !7637)
!7670 = !DILocalVariable(name: "maxerrvel", scope: !7637, file: !3, line: 2904, type: !94)
!7671 = !DILocation(line: 2904, column: 25, scope: !7637)
!7672 = !DILocalVariable(name: "a", scope: !7637, file: !3, line: 2905, type: !92)
!7673 = !DILocation(line: 2905, column: 6, scope: !7637)
!7674 = !DILocalVariable(name: "fuzzy", scope: !7637, file: !3, line: 2905, type: !92)
!7675 = !DILocation(line: 2905, column: 9, scope: !7637)
!7676 = !DILocation(line: 2907, column: 29, scope: !7637)
!7677 = !DILocation(line: 2907, column: 15, scope: !7637)
!7678 = !DILocation(line: 2907, column: 12, scope: !7637)
!7679 = !DILocation(line: 2909, column: 24, scope: !7637)
!7680 = !DILocation(line: 2909, column: 35, scope: !7637)
!7681 = !DILocation(line: 2909, column: 13, scope: !7637)
!7682 = !DILocation(line: 2909, column: 23, scope: !7637)
!7683 = !DILocation(line: 2909, column: 2, scope: !7637)
!7684 = !DILocation(line: 2909, column: 12, scope: !7637)
!7685 = !DILocation(line: 2910, column: 24, scope: !7637)
!7686 = !DILocation(line: 2910, column: 35, scope: !7637)
!7687 = !DILocation(line: 2910, column: 13, scope: !7637)
!7688 = !DILocation(line: 2910, column: 23, scope: !7637)
!7689 = !DILocation(line: 2910, column: 2, scope: !7637)
!7690 = !DILocation(line: 2910, column: 12, scope: !7637)
!7691 = !DILocation(line: 2919, column: 9, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 2919, column: 2)
!7693 = !DILocation(line: 2919, column: 13, scope: !7692)
!7694 = !DILocation(line: 2919, column: 8, scope: !7692)
!7695 = !DILocation(line: 2919, column: 27, scope: !7692)
!7696 = !DILocation(line: 2919, column: 31, scope: !7692)
!7697 = !DILocation(line: 2919, column: 25, scope: !7692)
!7698 = !DILocation(line: 2919, column: 7, scope: !7692)
!7699 = !DILocation(line: 2919, column: 39, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 2919, column: 2)
!7701 = !DILocation(line: 2919, column: 40, scope: !7700)
!7702 = !DILocation(line: 2919, column: 2, scope: !7692)
!7703 = !DILocation(line: 2922, column: 19, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2922, column: 7)
!7705 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 2919, column: 55)
!7706 = !DILocation(line: 2922, column: 23, scope: !7704)
!7707 = !DILocation(line: 2922, column: 7, scope: !7704)
!7708 = !DILocation(line: 2922, column: 27, scope: !7704)
!7709 = !DILocation(line: 2922, column: 7, scope: !7705)
!7710 = !DILocation(line: 2922, column: 55, scope: !7704)
!7711 = !DILocation(line: 2922, column: 77, scope: !7704)
!7712 = !DILocation(line: 2922, column: 81, scope: !7704)
!7713 = !DILocation(line: 2922, column: 65, scope: !7704)
!7714 = !DILocation(line: 2922, column: 64, scope: !7704)
!7715 = !DILocation(line: 2922, column: 53, scope: !7704)
!7716 = !DILocation(line: 2922, column: 40, scope: !7704)
!7717 = !DILocation(line: 2923, column: 23, scope: !7704)
!7718 = !DILocation(line: 2923, column: 32, scope: !7704)
!7719 = !DILocation(line: 2923, column: 21, scope: !7704)
!7720 = !DILocation(line: 2926, column: 19, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2926, column: 7)
!7722 = !DILocation(line: 2926, column: 23, scope: !7721)
!7723 = !DILocation(line: 2926, column: 7, scope: !7721)
!7724 = !DILocation(line: 2926, column: 27, scope: !7721)
!7725 = !DILocation(line: 2926, column: 7, scope: !7705)
!7726 = !DILocation(line: 2928, column: 8, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2928, column: 8)
!7728 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 2926, column: 43)
!7729 = !DILocation(line: 2928, column: 18, scope: !7727)
!7730 = !DILocation(line: 2928, column: 8, scope: !7728)
!7731 = !DILocation(line: 2928, column: 45, scope: !7727)
!7732 = !DILocation(line: 2928, column: 49, scope: !7727)
!7733 = !DILocation(line: 2928, column: 53, scope: !7727)
!7734 = !DILocation(line: 2928, column: 34, scope: !7727)
!7735 = !DILocation(line: 2934, column: 14, scope: !7728)
!7736 = !DILocation(line: 2934, column: 18, scope: !7728)
!7737 = !DILocation(line: 2934, column: 25, scope: !7728)
!7738 = !DILocation(line: 2934, column: 4, scope: !7728)
!7739 = !DILocation(line: 2936, column: 15, scope: !7728)
!7740 = !DILocation(line: 2936, column: 19, scope: !7728)
!7741 = !DILocation(line: 2936, column: 23, scope: !7728)
!7742 = !DILocation(line: 2936, column: 4, scope: !7728)
!7743 = !DILocation(line: 2938, column: 8, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2938, column: 8)
!7745 = !DILocation(line: 2938, column: 13, scope: !7744)
!7746 = !DILocation(line: 2938, column: 8, scope: !7728)
!7747 = !DILocation(line: 2939, column: 16, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 2938, column: 19)
!7749 = !DILocation(line: 2939, column: 20, scope: !7748)
!7750 = !DILocation(line: 2939, column: 29, scope: !7748)
!7751 = !DILocation(line: 2939, column: 33, scope: !7748)
!7752 = !DILocation(line: 2939, column: 5, scope: !7748)
!7753 = !DILocation(line: 2940, column: 16, scope: !7748)
!7754 = !DILocation(line: 2940, column: 20, scope: !7748)
!7755 = !DILocation(line: 2940, column: 28, scope: !7748)
!7756 = !DILocation(line: 2940, column: 5, scope: !7748)
!7757 = !DILocation(line: 2941, column: 4, scope: !7748)
!7758 = !DILocation(line: 2943, column: 8, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2943, column: 8)
!7760 = !DILocation(line: 2943, column: 13, scope: !7759)
!7761 = !DILocation(line: 2943, column: 8, scope: !7728)
!7762 = !DILocation(line: 2945, column: 18, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2943, column: 18)
!7764 = !DILocation(line: 2945, column: 22, scope: !7763)
!7765 = !DILocation(line: 2945, column: 43, scope: !7763)
!7766 = !DILocation(line: 2945, column: 51, scope: !7763)
!7767 = !DILocation(line: 2945, column: 55, scope: !7763)
!7768 = !DILocation(line: 2945, column: 49, scope: !7763)
!7769 = !DILocation(line: 2945, column: 40, scope: !7763)
!7770 = !DILocation(line: 2945, column: 33, scope: !7763)
!7771 = !DILocation(line: 2945, column: 5, scope: !7763)
!7772 = !DILocation(line: 2945, column: 9, scope: !7763)
!7773 = !DILocation(line: 2945, column: 16, scope: !7763)
!7774 = !DILocation(line: 2946, column: 18, scope: !7763)
!7775 = !DILocation(line: 2946, column: 22, scope: !7763)
!7776 = !DILocation(line: 2946, column: 43, scope: !7763)
!7777 = !DILocation(line: 2946, column: 51, scope: !7763)
!7778 = !DILocation(line: 2946, column: 55, scope: !7763)
!7779 = !DILocation(line: 2946, column: 49, scope: !7763)
!7780 = !DILocation(line: 2946, column: 40, scope: !7763)
!7781 = !DILocation(line: 2946, column: 33, scope: !7763)
!7782 = !DILocation(line: 2946, column: 5, scope: !7763)
!7783 = !DILocation(line: 2946, column: 9, scope: !7763)
!7784 = !DILocation(line: 2946, column: 16, scope: !7763)
!7785 = !DILocation(line: 2947, column: 18, scope: !7763)
!7786 = !DILocation(line: 2947, column: 22, scope: !7763)
!7787 = !DILocation(line: 2947, column: 43, scope: !7763)
!7788 = !DILocation(line: 2947, column: 51, scope: !7763)
!7789 = !DILocation(line: 2947, column: 55, scope: !7763)
!7790 = !DILocation(line: 2947, column: 49, scope: !7763)
!7791 = !DILocation(line: 2947, column: 40, scope: !7763)
!7792 = !DILocation(line: 2947, column: 33, scope: !7763)
!7793 = !DILocation(line: 2947, column: 5, scope: !7763)
!7794 = !DILocation(line: 2947, column: 9, scope: !7763)
!7795 = !DILocation(line: 2947, column: 16, scope: !7763)
!7796 = !DILocation(line: 2949, column: 24, scope: !7763)
!7797 = !DILocation(line: 2949, column: 41, scope: !7763)
!7798 = !DILocation(line: 2949, column: 49, scope: !7763)
!7799 = !DILocation(line: 2949, column: 53, scope: !7763)
!7800 = !DILocation(line: 2949, column: 47, scope: !7763)
!7801 = !DILocation(line: 2949, column: 35, scope: !7763)
!7802 = !DILocation(line: 2949, column: 17, scope: !7763)
!7803 = !DILocation(line: 2949, column: 15, scope: !7763)
!7804 = !DILocation(line: 2950, column: 24, scope: !7763)
!7805 = !DILocation(line: 2950, column: 41, scope: !7763)
!7806 = !DILocation(line: 2950, column: 49, scope: !7763)
!7807 = !DILocation(line: 2950, column: 53, scope: !7763)
!7808 = !DILocation(line: 2950, column: 47, scope: !7763)
!7809 = !DILocation(line: 2950, column: 35, scope: !7763)
!7810 = !DILocation(line: 2950, column: 17, scope: !7763)
!7811 = !DILocation(line: 2950, column: 15, scope: !7763)
!7812 = !DILocation(line: 2951, column: 24, scope: !7763)
!7813 = !DILocation(line: 2951, column: 41, scope: !7763)
!7814 = !DILocation(line: 2951, column: 49, scope: !7763)
!7815 = !DILocation(line: 2951, column: 53, scope: !7763)
!7816 = !DILocation(line: 2951, column: 47, scope: !7763)
!7817 = !DILocation(line: 2951, column: 35, scope: !7763)
!7818 = !DILocation(line: 2951, column: 17, scope: !7763)
!7819 = !DILocation(line: 2951, column: 15, scope: !7763)
!7820 = !DILocation(line: 2952, column: 4, scope: !7763)
!7821 = !DILocation(line: 2953, column: 21, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2953, column: 9)
!7823 = !DILocation(line: 2953, column: 25, scope: !7822)
!7824 = !DILocation(line: 2953, column: 30, scope: !7822)
!7825 = !DILocation(line: 2953, column: 34, scope: !7822)
!7826 = !DILocation(line: 2953, column: 11, scope: !7822)
!7827 = !DILocation(line: 2956, column: 10, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2956, column: 8)
!7829 = !DILocation(line: 2956, column: 20, scope: !7828)
!7830 = !DILocation(line: 2956, column: 8, scope: !7728)
!7831 = !DILocation(line: 2956, column: 48, scope: !7828)
!7832 = !DILocation(line: 2956, column: 52, scope: !7828)
!7833 = !DILocation(line: 2956, column: 56, scope: !7828)
!7834 = !DILocation(line: 2956, column: 37, scope: !7828)
!7835 = !DILocation(line: 2961, column: 14, scope: !7728)
!7836 = !DILocation(line: 2961, column: 18, scope: !7728)
!7837 = !DILocation(line: 2961, column: 4, scope: !7728)
!7838 = !DILocation(line: 2974, column: 8, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2974, column: 8)
!7840 = !DILocation(line: 2974, column: 13, scope: !7839)
!7841 = !DILocation(line: 2974, column: 8, scope: !7728)
!7842 = !DILocation(line: 2975, column: 16, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 2974, column: 18)
!7844 = !DILocation(line: 2975, column: 20, scope: !7843)
!7845 = !DILocation(line: 2975, column: 29, scope: !7843)
!7846 = !DILocation(line: 2975, column: 33, scope: !7843)
!7847 = !DILocation(line: 2975, column: 5, scope: !7843)
!7848 = !DILocation(line: 2976, column: 16, scope: !7843)
!7849 = !DILocation(line: 2976, column: 20, scope: !7843)
!7850 = !DILocation(line: 2976, column: 28, scope: !7843)
!7851 = !DILocation(line: 2976, column: 5, scope: !7843)
!7852 = !DILocation(line: 2977, column: 4, scope: !7843)
!7853 = !DILocation(line: 2979, column: 8, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 2979, column: 8)
!7855 = !DILocation(line: 2979, column: 13, scope: !7854)
!7856 = !DILocation(line: 2979, column: 8, scope: !7728)
!7857 = !DILocation(line: 2980, column: 18, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2979, column: 18)
!7859 = !DILocation(line: 2980, column: 22, scope: !7858)
!7860 = !DILocation(line: 2980, column: 44, scope: !7858)
!7861 = !DILocation(line: 2980, column: 52, scope: !7858)
!7862 = !DILocation(line: 2980, column: 56, scope: !7858)
!7863 = !DILocation(line: 2980, column: 50, scope: !7858)
!7864 = !DILocation(line: 2980, column: 40, scope: !7858)
!7865 = !DILocation(line: 2980, column: 33, scope: !7858)
!7866 = !DILocation(line: 2980, column: 5, scope: !7858)
!7867 = !DILocation(line: 2980, column: 9, scope: !7858)
!7868 = !DILocation(line: 2980, column: 16, scope: !7858)
!7869 = !DILocation(line: 2981, column: 18, scope: !7858)
!7870 = !DILocation(line: 2981, column: 22, scope: !7858)
!7871 = !DILocation(line: 2981, column: 44, scope: !7858)
!7872 = !DILocation(line: 2981, column: 52, scope: !7858)
!7873 = !DILocation(line: 2981, column: 56, scope: !7858)
!7874 = !DILocation(line: 2981, column: 50, scope: !7858)
!7875 = !DILocation(line: 2981, column: 40, scope: !7858)
!7876 = !DILocation(line: 2981, column: 33, scope: !7858)
!7877 = !DILocation(line: 2981, column: 5, scope: !7858)
!7878 = !DILocation(line: 2981, column: 9, scope: !7858)
!7879 = !DILocation(line: 2981, column: 16, scope: !7858)
!7880 = !DILocation(line: 2982, column: 18, scope: !7858)
!7881 = !DILocation(line: 2982, column: 22, scope: !7858)
!7882 = !DILocation(line: 2982, column: 44, scope: !7858)
!7883 = !DILocation(line: 2982, column: 52, scope: !7858)
!7884 = !DILocation(line: 2982, column: 56, scope: !7858)
!7885 = !DILocation(line: 2982, column: 50, scope: !7858)
!7886 = !DILocation(line: 2982, column: 40, scope: !7858)
!7887 = !DILocation(line: 2982, column: 33, scope: !7858)
!7888 = !DILocation(line: 2982, column: 5, scope: !7858)
!7889 = !DILocation(line: 2982, column: 9, scope: !7858)
!7890 = !DILocation(line: 2982, column: 16, scope: !7858)
!7891 = !DILocation(line: 2983, column: 24, scope: !7858)
!7892 = !DILocation(line: 2983, column: 41, scope: !7858)
!7893 = !DILocation(line: 2983, column: 49, scope: !7858)
!7894 = !DILocation(line: 2983, column: 53, scope: !7858)
!7895 = !DILocation(line: 2983, column: 47, scope: !7858)
!7896 = !DILocation(line: 2983, column: 35, scope: !7858)
!7897 = !DILocation(line: 2983, column: 17, scope: !7858)
!7898 = !DILocation(line: 2983, column: 15, scope: !7858)
!7899 = !DILocation(line: 2984, column: 24, scope: !7858)
!7900 = !DILocation(line: 2984, column: 41, scope: !7858)
!7901 = !DILocation(line: 2984, column: 49, scope: !7858)
!7902 = !DILocation(line: 2984, column: 53, scope: !7858)
!7903 = !DILocation(line: 2984, column: 47, scope: !7858)
!7904 = !DILocation(line: 2984, column: 35, scope: !7858)
!7905 = !DILocation(line: 2984, column: 17, scope: !7858)
!7906 = !DILocation(line: 2984, column: 15, scope: !7858)
!7907 = !DILocation(line: 2985, column: 24, scope: !7858)
!7908 = !DILocation(line: 2985, column: 41, scope: !7858)
!7909 = !DILocation(line: 2985, column: 49, scope: !7858)
!7910 = !DILocation(line: 2985, column: 53, scope: !7858)
!7911 = !DILocation(line: 2985, column: 47, scope: !7858)
!7912 = !DILocation(line: 2985, column: 35, scope: !7858)
!7913 = !DILocation(line: 2985, column: 17, scope: !7858)
!7914 = !DILocation(line: 2985, column: 15, scope: !7858)
!7915 = !DILocation(line: 2991, column: 9, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 2991, column: 9)
!7917 = !DILocation(line: 2991, column: 13, scope: !7916)
!7918 = !DILocation(line: 2991, column: 20, scope: !7916)
!7919 = !DILocation(line: 2991, column: 9, scope: !7858)
!7920 = !DILocation(line: 2992, column: 16, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2991, column: 28)
!7922 = !DILocation(line: 2992, column: 20, scope: !7921)
!7923 = !DILocation(line: 2992, column: 33, scope: !7921)
!7924 = !DILocation(line: 2992, column: 37, scope: !7921)
!7925 = !DILocation(line: 2992, column: 31, scope: !7921)
!7926 = !DILocation(line: 2992, column: 6, scope: !7921)
!7927 = !DILocation(line: 2993, column: 5, scope: !7921)
!7928 = !DILocation(line: 2994, column: 9, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 2994, column: 9)
!7930 = !DILocation(line: 2994, column: 13, scope: !7929)
!7931 = !DILocation(line: 2994, column: 19, scope: !7929)
!7932 = !DILocation(line: 2994, column: 9, scope: !7858)
!7933 = !DILocation(line: 2995, column: 16, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2994, column: 27)
!7935 = !DILocation(line: 2995, column: 20, scope: !7934)
!7936 = !DILocation(line: 2995, column: 33, scope: !7934)
!7937 = !DILocation(line: 2995, column: 37, scope: !7934)
!7938 = !DILocation(line: 2995, column: 31, scope: !7934)
!7939 = !DILocation(line: 2995, column: 6, scope: !7934)
!7940 = !DILocation(line: 2996, column: 5, scope: !7934)
!7941 = !DILocation(line: 2998, column: 4, scope: !7858)
!7942 = !DILocation(line: 2999, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2999, column: 9)
!7944 = !DILocation(line: 2999, column: 25, scope: !7943)
!7945 = !DILocation(line: 2999, column: 30, scope: !7943)
!7946 = !DILocation(line: 2999, column: 11, scope: !7943)
!7947 = !DILocation(line: 3000, column: 3, scope: !7728)
!7948 = !DILocation(line: 3002, column: 18, scope: !7705)
!7949 = !DILocation(line: 3002, column: 27, scope: !7705)
!7950 = !DILocation(line: 3002, column: 36, scope: !7705)
!7951 = !DILocation(line: 3002, column: 40, scope: !7705)
!7952 = !DILocation(line: 3002, column: 3, scope: !7705)
!7953 = !DILocation(line: 3003, column: 7, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 3003, column: 7)
!7955 = !DILocation(line: 3003, column: 11, scope: !7954)
!7956 = !DILocation(line: 3003, column: 20, scope: !7954)
!7957 = !DILocation(line: 3003, column: 7, scope: !7705)
!7958 = !DILocation(line: 3003, column: 41, scope: !7954)
!7959 = !DILocation(line: 3003, column: 35, scope: !7954)
!7960 = !DILocation(line: 3004, column: 2, scope: !7705)
!7961 = !DILocation(line: 2919, column: 45, scope: !7700)
!7962 = !DILocation(line: 2919, column: 51, scope: !7700)
!7963 = !DILocation(line: 2919, column: 2, scope: !7700)
!7964 = distinct !{!7964, !7702, !7965}
!7965 = !DILocation(line: 3004, column: 2, scope: !7692)
!7966 = !DILocation(line: 3006, column: 6, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3006, column: 6)
!7968 = !DILocation(line: 3006, column: 10, scope: !7967)
!7969 = !DILocation(line: 3006, column: 6, scope: !7637)
!7970 = !DILocation(line: 3006, column: 30, scope: !7967)
!7971 = !DILocation(line: 3006, column: 39, scope: !7967)
!7972 = !DILocation(line: 3006, column: 43, scope: !7967)
!7973 = !DILocation(line: 3006, column: 38, scope: !7967)
!7974 = !DILocation(line: 3006, column: 20, scope: !7967)
!7975 = !DILocation(line: 3007, column: 6, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3007, column: 6)
!7977 = !DILocation(line: 3007, column: 10, scope: !7976)
!7978 = !DILocation(line: 3007, column: 6, scope: !7637)
!7979 = !DILocation(line: 3008, column: 14, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 3007, column: 19)
!7981 = !DILocation(line: 3008, column: 18, scope: !7980)
!7982 = !DILocation(line: 3008, column: 27, scope: !7980)
!7983 = !DILocation(line: 3008, column: 36, scope: !7980)
!7984 = !DILocation(line: 3008, column: 3, scope: !7980)
!7985 = !DILocation(line: 3009, column: 14, scope: !7980)
!7986 = !DILocation(line: 3009, column: 18, scope: !7980)
!7987 = !DILocation(line: 3009, column: 27, scope: !7980)
!7988 = !DILocation(line: 3009, column: 36, scope: !7980)
!7989 = !DILocation(line: 3009, column: 3, scope: !7980)
!7990 = !DILocation(line: 3010, column: 2, scope: !7980)
!7991 = !DILocation(line: 3012, column: 6, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3012, column: 6)
!7993 = !DILocation(line: 3012, column: 6, scope: !7637)
!7994 = !DILocation(line: 3013, column: 7, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3013, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 3012, column: 11)
!7997 = !DILocation(line: 3013, column: 11, scope: !7995)
!7998 = !DILocation(line: 3013, column: 23, scope: !7995)
!7999 = !DILocation(line: 3013, column: 7, scope: !7996)
!8000 = !DILocation(line: 3014, column: 18, scope: !7995)
!8001 = !DILocation(line: 3014, column: 29, scope: !7995)
!8002 = !DILocation(line: 3014, column: 11, scope: !7995)
!8003 = !DILocation(line: 3014, column: 5, scope: !7995)
!8004 = !DILocation(line: 3014, column: 9, scope: !7995)
!8005 = !DILocation(line: 3014, column: 4, scope: !7995)
!8006 = !DILocation(line: 3016, column: 11, scope: !7995)
!8007 = !DILocation(line: 3016, column: 5, scope: !7995)
!8008 = !DILocation(line: 3016, column: 9, scope: !7995)
!8009 = !DILocation(line: 3018, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3018, column: 7)
!8011 = !DILocation(line: 3018, column: 7, scope: !7996)
!8012 = !DILocation(line: 3019, column: 12, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3018, column: 14)
!8014 = !DILocation(line: 3019, column: 16, scope: !8013)
!8015 = !DILocation(line: 3019, column: 5, scope: !8013)
!8016 = !DILocation(line: 3019, column: 9, scope: !8013)
!8017 = !DILocation(line: 3020, column: 3, scope: !8013)
!8018 = !DILocation(line: 3021, column: 2, scope: !7996)
!8019 = !DILocation(line: 3022, column: 1, scope: !7637)
!8020 = distinct !DISubprogram(name: "softbody_apply_goalsnap", scope: !3, file: !3, line: 3118, type: !2459, scopeLine: 3119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!8021 = !DILocalVariable(name: "ob", arg: 1, scope: !8020, file: !3, line: 3118, type: !2154)
!8022 = !DILocation(line: 3118, column: 45, scope: !8020)
!8023 = !DILocalVariable(name: "sb", scope: !8020, file: !3, line: 3120, type: !2192)
!8024 = !DILocation(line: 3120, column: 12, scope: !8020)
!8025 = !DILocation(line: 3120, column: 16, scope: !8020)
!8026 = !DILocation(line: 3120, column: 20, scope: !8020)
!8027 = !DILocalVariable(name: "bp", scope: !8020, file: !3, line: 3121, type: !2386)
!8028 = !DILocation(line: 3121, column: 13, scope: !8020)
!8029 = !DILocalVariable(name: "a", scope: !8020, file: !3, line: 3122, type: !92)
!8030 = !DILocation(line: 3122, column: 6, scope: !8020)
!8031 = !DILocation(line: 3124, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 3124, column: 2)
!8033 = !DILocation(line: 3124, column: 13, scope: !8032)
!8034 = !DILocation(line: 3124, column: 8, scope: !8032)
!8035 = !DILocation(line: 3124, column: 27, scope: !8032)
!8036 = !DILocation(line: 3124, column: 31, scope: !8032)
!8037 = !DILocation(line: 3124, column: 25, scope: !8032)
!8038 = !DILocation(line: 3124, column: 7, scope: !8032)
!8039 = !DILocation(line: 3124, column: 39, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 3124, column: 2)
!8041 = !DILocation(line: 3124, column: 40, scope: !8040)
!8042 = !DILocation(line: 3124, column: 2, scope: !8032)
!8043 = !DILocation(line: 3125, column: 19, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 3125, column: 7)
!8045 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 3124, column: 55)
!8046 = !DILocation(line: 3125, column: 23, scope: !8044)
!8047 = !DILocation(line: 3125, column: 7, scope: !8044)
!8048 = !DILocation(line: 3125, column: 27, scope: !8044)
!8049 = !DILocation(line: 3125, column: 7, scope: !8045)
!8050 = !DILocation(line: 3126, column: 15, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 3125, column: 44)
!8052 = !DILocation(line: 3126, column: 19, scope: !8051)
!8053 = !DILocation(line: 3126, column: 28, scope: !8051)
!8054 = !DILocation(line: 3126, column: 32, scope: !8051)
!8055 = !DILocation(line: 3126, column: 4, scope: !8051)
!8056 = !DILocation(line: 3127, column: 15, scope: !8051)
!8057 = !DILocation(line: 3127, column: 19, scope: !8051)
!8058 = !DILocation(line: 3127, column: 24, scope: !8051)
!8059 = !DILocation(line: 3127, column: 28, scope: !8051)
!8060 = !DILocation(line: 3127, column: 4, scope: !8051)
!8061 = !DILocation(line: 3128, column: 3, scope: !8051)
!8062 = !DILocation(line: 3129, column: 2, scope: !8045)
!8063 = !DILocation(line: 3124, column: 45, scope: !8040)
!8064 = !DILocation(line: 3124, column: 51, scope: !8040)
!8065 = !DILocation(line: 3124, column: 2, scope: !8040)
!8066 = distinct !{!8066, !8042, !8067}
!8067 = !DILocation(line: 3129, column: 2, scope: !8032)
!8068 = !DILocation(line: 3130, column: 1, scope: !8020)
!8069 = distinct !DISubprogram(name: "softbody_restore_prev_step", scope: !3, file: !3, line: 3025, type: !2459, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!8070 = !DILocalVariable(name: "ob", arg: 1, scope: !8069, file: !3, line: 3025, type: !2154)
!8071 = !DILocation(line: 3025, column: 48, scope: !8069)
!8072 = !DILocalVariable(name: "sb", scope: !8069, file: !3, line: 3027, type: !2192)
!8073 = !DILocation(line: 3027, column: 12, scope: !8069)
!8074 = !DILocation(line: 3027, column: 16, scope: !8069)
!8075 = !DILocation(line: 3027, column: 20, scope: !8069)
!8076 = !DILocalVariable(name: "bp", scope: !8069, file: !3, line: 3028, type: !2386)
!8077 = !DILocation(line: 3028, column: 13, scope: !8069)
!8078 = !DILocalVariable(name: "a", scope: !8069, file: !3, line: 3029, type: !92)
!8079 = !DILocation(line: 3029, column: 6, scope: !8069)
!8080 = !DILocation(line: 3031, column: 9, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 3031, column: 2)
!8082 = !DILocation(line: 3031, column: 13, scope: !8081)
!8083 = !DILocation(line: 3031, column: 8, scope: !8081)
!8084 = !DILocation(line: 3031, column: 27, scope: !8081)
!8085 = !DILocation(line: 3031, column: 31, scope: !8081)
!8086 = !DILocation(line: 3031, column: 25, scope: !8081)
!8087 = !DILocation(line: 3031, column: 7, scope: !8081)
!8088 = !DILocation(line: 3031, column: 39, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 3031, column: 2)
!8090 = !DILocation(line: 3031, column: 40, scope: !8089)
!8091 = !DILocation(line: 3031, column: 2, scope: !8081)
!8092 = !DILocation(line: 3032, column: 14, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 3031, column: 55)
!8094 = !DILocation(line: 3032, column: 18, scope: !8093)
!8095 = !DILocation(line: 3032, column: 23, scope: !8093)
!8096 = !DILocation(line: 3032, column: 27, scope: !8093)
!8097 = !DILocation(line: 3032, column: 3, scope: !8093)
!8098 = !DILocation(line: 3033, column: 14, scope: !8093)
!8099 = !DILocation(line: 3033, column: 18, scope: !8093)
!8100 = !DILocation(line: 3033, column: 23, scope: !8093)
!8101 = !DILocation(line: 3033, column: 27, scope: !8093)
!8102 = !DILocation(line: 3033, column: 3, scope: !8093)
!8103 = !DILocation(line: 3034, column: 2, scope: !8093)
!8104 = !DILocation(line: 3031, column: 45, scope: !8089)
!8105 = !DILocation(line: 3031, column: 51, scope: !8089)
!8106 = !DILocation(line: 3031, column: 2, scope: !8089)
!8107 = distinct !{!8107, !8091, !8108}
!8108 = !DILocation(line: 3034, column: 2, scope: !8081)
!8109 = !DILocation(line: 3035, column: 1, scope: !8069)
!8110 = distinct !DISubprogram(name: "apply_spring_memory", scope: !3, file: !3, line: 3133, type: !2459, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!8111 = !DILocalVariable(name: "ob", arg: 1, scope: !8110, file: !3, line: 3133, type: !2154)
!8112 = !DILocation(line: 3133, column: 41, scope: !8110)
!8113 = !DILocalVariable(name: "sb", scope: !8110, file: !3, line: 3135, type: !2192)
!8114 = !DILocation(line: 3135, column: 12, scope: !8110)
!8115 = !DILocation(line: 3135, column: 17, scope: !8110)
!8116 = !DILocation(line: 3135, column: 21, scope: !8110)
!8117 = !DILocalVariable(name: "bs", scope: !8110, file: !3, line: 3136, type: !2948)
!8118 = !DILocation(line: 3136, column: 14, scope: !8110)
!8119 = !DILocalVariable(name: "bp1", scope: !8110, file: !3, line: 3137, type: !2386)
!8120 = !DILocation(line: 3137, column: 13, scope: !8110)
!8121 = !DILocalVariable(name: "bp2", scope: !8110, file: !3, line: 3137, type: !2386)
!8122 = !DILocation(line: 3137, column: 19, scope: !8110)
!8123 = !DILocalVariable(name: "a", scope: !8110, file: !3, line: 3138, type: !92)
!8124 = !DILocation(line: 3138, column: 6, scope: !8110)
!8125 = !DILocalVariable(name: "b", scope: !8110, file: !3, line: 3139, type: !94)
!8126 = !DILocation(line: 3139, column: 8, scope: !8110)
!8127 = !DILocalVariable(name: "l", scope: !8110, file: !3, line: 3139, type: !94)
!8128 = !DILocation(line: 3139, column: 11, scope: !8110)
!8129 = !DILocalVariable(name: "r", scope: !8110, file: !3, line: 3139, type: !94)
!8130 = !DILocation(line: 3139, column: 14, scope: !8110)
!8131 = !DILocation(line: 3141, column: 6, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3141, column: 6)
!8133 = !DILocation(line: 3141, column: 9, scope: !8132)
!8134 = !DILocation(line: 3141, column: 12, scope: !8132)
!8135 = !DILocation(line: 3141, column: 16, scope: !8132)
!8136 = !DILocation(line: 3141, column: 6, scope: !8110)
!8137 = !DILocation(line: 3142, column: 7, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3141, column: 27)
!8139 = !DILocation(line: 3142, column: 11, scope: !8138)
!8140 = !DILocation(line: 3142, column: 5, scope: !8138)
!8141 = !DILocation(line: 3143, column: 9, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 3143, column: 3)
!8143 = !DILocation(line: 3143, column: 8, scope: !8142)
!8144 = !DILocation(line: 3143, column: 13, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 3143, column: 3)
!8146 = !DILocation(line: 3143, column: 15, scope: !8145)
!8147 = !DILocation(line: 3143, column: 19, scope: !8145)
!8148 = !DILocation(line: 3143, column: 14, scope: !8145)
!8149 = !DILocation(line: 3143, column: 3, scope: !8142)
!8150 = !DILocation(line: 3144, column: 11, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 3143, column: 35)
!8152 = !DILocation(line: 3144, column: 15, scope: !8151)
!8153 = !DILocation(line: 3144, column: 23, scope: !8151)
!8154 = !DILocation(line: 3144, column: 8, scope: !8151)
!8155 = !DILocation(line: 3145, column: 10, scope: !8151)
!8156 = !DILocation(line: 3145, column: 14, scope: !8151)
!8157 = !DILocation(line: 3145, column: 21, scope: !8151)
!8158 = !DILocation(line: 3145, column: 25, scope: !8151)
!8159 = !DILocation(line: 3145, column: 8, scope: !8151)
!8160 = !DILocation(line: 3146, column: 10, scope: !8151)
!8161 = !DILocation(line: 3146, column: 14, scope: !8151)
!8162 = !DILocation(line: 3146, column: 21, scope: !8151)
!8163 = !DILocation(line: 3146, column: 25, scope: !8151)
!8164 = !DILocation(line: 3146, column: 8, scope: !8151)
!8165 = !DILocation(line: 3147, column: 17, scope: !8151)
!8166 = !DILocation(line: 3147, column: 22, scope: !8151)
!8167 = !DILocation(line: 3147, column: 27, scope: !8151)
!8168 = !DILocation(line: 3147, column: 32, scope: !8151)
!8169 = !DILocation(line: 3147, column: 8, scope: !8151)
!8170 = !DILocation(line: 3147, column: 6, scope: !8151)
!8171 = !DILocation(line: 3148, column: 8, scope: !8151)
!8172 = !DILocation(line: 3148, column: 12, scope: !8151)
!8173 = !DILocation(line: 3148, column: 16, scope: !8151)
!8174 = !DILocation(line: 3148, column: 15, scope: !8151)
!8175 = !DILocation(line: 3148, column: 6, scope: !8151)
!8176 = !DILocation(line: 3149, column: 10, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 3149, column: 8)
!8178 = !DILocation(line: 3149, column: 12, scope: !8177)
!8179 = !DILocation(line: 3149, column: 21, scope: !8177)
!8180 = !DILocation(line: 3149, column: 25, scope: !8177)
!8181 = !DILocation(line: 3149, column: 27, scope: !8177)
!8182 = !DILocation(line: 3149, column: 8, scope: !8151)
!8183 = !DILocation(line: 3150, column: 25, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3149, column: 37)
!8185 = !DILocation(line: 3150, column: 23, scope: !8184)
!8186 = !DILocation(line: 3150, column: 30, scope: !8184)
!8187 = !DILocation(line: 3150, column: 34, scope: !8184)
!8188 = !DILocation(line: 3150, column: 28, scope: !8184)
!8189 = !DILocation(line: 3150, column: 41, scope: !8184)
!8190 = !DILocation(line: 3150, column: 43, scope: !8184)
!8191 = !DILocation(line: 3150, column: 42, scope: !8184)
!8192 = !DILocation(line: 3150, column: 39, scope: !8184)
!8193 = !DILocation(line: 3150, column: 45, scope: !8184)
!8194 = !DILocation(line: 3150, column: 4, scope: !8184)
!8195 = !DILocation(line: 3150, column: 8, scope: !8184)
!8196 = !DILocation(line: 3150, column: 12, scope: !8184)
!8197 = !DILocation(line: 3151, column: 4, scope: !8184)
!8198 = !DILocation(line: 3152, column: 3, scope: !8151)
!8199 = !DILocation(line: 3143, column: 31, scope: !8145)
!8200 = !DILocation(line: 3143, column: 3, scope: !8145)
!8201 = distinct !{!8201, !8149, !8202}
!8202 = !DILocation(line: 3152, column: 3, scope: !8142)
!8203 = !DILocation(line: 3153, column: 2, scope: !8138)
!8204 = !DILocation(line: 3154, column: 1, scope: !8110)
!8205 = distinct !DISubprogram(name: "ccd_mesh_update", scope: !3, file: !3, line: 390, type: !8206, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{null, !2154, !4663}
!8208 = !DILocalVariable(name: "ob", arg: 1, scope: !8205, file: !3, line: 390, type: !2154)
!8209 = !DILocation(line: 390, column: 37, scope: !8205)
!8210 = !DILocalVariable(name: "pccd_M", arg: 2, scope: !8205, file: !3, line: 390, type: !4663)
!8211 = !DILocation(line: 390, column: 51, scope: !8205)
!8212 = !DILocalVariable(name: "cmd", scope: !8205, file: !3, line: 392, type: !501)
!8213 = !DILocation(line: 392, column: 25, scope: !8205)
!8214 = !DILocalVariable(name: "mima", scope: !8205, file: !3, line: 393, type: !4676)
!8215 = !DILocation(line: 393, column: 15, scope: !8205)
!8216 = !DILocalVariable(name: "mface", scope: !8205, file: !3, line: 394, type: !4672)
!8217 = !DILocation(line: 394, column: 9, scope: !8205)
!8218 = !DILocalVariable(name: "v", scope: !8205, file: !3, line: 395, type: !376)
!8219 = !DILocation(line: 395, column: 8, scope: !8205)
!8220 = !DILocalVariable(name: "hull", scope: !8205, file: !3, line: 395, type: !94)
!8221 = !DILocation(line: 395, column: 14, scope: !8205)
!8222 = !DILocalVariable(name: "i", scope: !8205, file: !3, line: 396, type: !92)
!8223 = !DILocation(line: 396, column: 6, scope: !8205)
!8224 = !DILocation(line: 398, column: 53, scope: !8205)
!8225 = !DILocation(line: 398, column: 32, scope: !8205)
!8226 = !DILocation(line: 398, column: 7, scope: !8205)
!8227 = !DILocation(line: 398, column: 6, scope: !8205)
!8228 = !DILocation(line: 401, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 401, column: 6)
!8230 = !DILocation(line: 401, column: 6, scope: !8205)
!8231 = !DILocation(line: 401, column: 12, scope: !8229)
!8232 = !DILocation(line: 402, column: 7, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 402, column: 6)
!8234 = !DILocation(line: 402, column: 12, scope: !8233)
!8235 = !DILocation(line: 402, column: 21, scope: !8233)
!8236 = !DILocation(line: 402, column: 25, scope: !8233)
!8237 = !DILocation(line: 402, column: 30, scope: !8233)
!8238 = !DILocation(line: 402, column: 6, scope: !8205)
!8239 = !DILocation(line: 402, column: 40, scope: !8233)
!8240 = !DILocation(line: 404, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 404, column: 6)
!8242 = !DILocation(line: 404, column: 15, scope: !8241)
!8243 = !DILocation(line: 404, column: 26, scope: !8241)
!8244 = !DILocation(line: 404, column: 31, scope: !8241)
!8245 = !DILocation(line: 404, column: 23, scope: !8241)
!8246 = !DILocation(line: 404, column: 41, scope: !8241)
!8247 = !DILocation(line: 405, column: 7, scope: !8241)
!8248 = !DILocation(line: 405, column: 15, scope: !8241)
!8249 = !DILocation(line: 405, column: 26, scope: !8241)
!8250 = !DILocation(line: 405, column: 31, scope: !8241)
!8251 = !DILocation(line: 405, column: 23, scope: !8241)
!8252 = !DILocation(line: 404, column: 6, scope: !8205)
!8253 = !DILocation(line: 407, column: 3, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 406, column: 2)
!8255 = !DILocation(line: 410, column: 36, scope: !8205)
!8256 = !DILocation(line: 410, column: 44, scope: !8205)
!8257 = !DILocation(line: 410, column: 52, scope: !8205)
!8258 = !DILocation(line: 410, column: 19, scope: !8205)
!8259 = !DILocation(line: 410, column: 27, scope: !8205)
!8260 = !DILocation(line: 410, column: 35, scope: !8205)
!8261 = !DILocation(line: 410, column: 2, scope: !8205)
!8262 = !DILocation(line: 410, column: 10, scope: !8205)
!8263 = !DILocation(line: 410, column: 18, scope: !8205)
!8264 = !DILocation(line: 411, column: 36, scope: !8205)
!8265 = !DILocation(line: 411, column: 44, scope: !8205)
!8266 = !DILocation(line: 411, column: 52, scope: !8205)
!8267 = !DILocation(line: 411, column: 19, scope: !8205)
!8268 = !DILocation(line: 411, column: 27, scope: !8205)
!8269 = !DILocation(line: 411, column: 35, scope: !8205)
!8270 = !DILocation(line: 411, column: 2, scope: !8205)
!8271 = !DILocation(line: 411, column: 10, scope: !8205)
!8272 = !DILocation(line: 411, column: 18, scope: !8205)
!8273 = !DILocation(line: 415, column: 16, scope: !8205)
!8274 = !DILocation(line: 415, column: 20, scope: !8205)
!8275 = !DILocation(line: 415, column: 24, scope: !8205)
!8276 = !DILocation(line: 415, column: 36, scope: !8205)
!8277 = !DILocation(line: 415, column: 40, scope: !8205)
!8278 = !DILocation(line: 415, column: 44, scope: !8205)
!8279 = !DILocation(line: 415, column: 9, scope: !8205)
!8280 = !DILocation(line: 415, column: 7, scope: !8205)
!8281 = !DILocation(line: 418, column: 6, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 418, column: 6)
!8283 = !DILocation(line: 418, column: 14, scope: !8282)
!8284 = !DILocation(line: 418, column: 6, scope: !8205)
!8285 = !DILocation(line: 418, column: 25, scope: !8282)
!8286 = !DILocation(line: 418, column: 35, scope: !8282)
!8287 = !DILocation(line: 418, column: 43, scope: !8282)
!8288 = !DILocation(line: 419, column: 22, scope: !8205)
!8289 = !DILocation(line: 419, column: 30, scope: !8205)
!8290 = !DILocation(line: 419, column: 2, scope: !8205)
!8291 = !DILocation(line: 419, column: 10, scope: !8205)
!8292 = !DILocation(line: 419, column: 20, scope: !8205)
!8293 = !DILocation(line: 421, column: 18, scope: !8205)
!8294 = !DILocation(line: 421, column: 32, scope: !8205)
!8295 = !DILocation(line: 421, column: 37, scope: !8205)
!8296 = !DILocation(line: 421, column: 2, scope: !8205)
!8297 = !DILocation(line: 421, column: 10, scope: !8205)
!8298 = !DILocation(line: 421, column: 16, scope: !8205)
!8299 = !DILocation(line: 424, column: 8, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 424, column: 2)
!8301 = !DILocation(line: 424, column: 7, scope: !8300)
!8302 = !DILocation(line: 424, column: 12, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 424, column: 2)
!8304 = !DILocation(line: 424, column: 16, scope: !8303)
!8305 = !DILocation(line: 424, column: 24, scope: !8303)
!8306 = !DILocation(line: 424, column: 14, scope: !8303)
!8307 = !DILocation(line: 424, column: 2, scope: !8300)
!8308 = !DILocation(line: 426, column: 14, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 424, column: 38)
!8310 = !DILocation(line: 426, column: 17, scope: !8309)
!8311 = !DILocation(line: 426, column: 25, scope: !8309)
!8312 = !DILocation(line: 426, column: 31, scope: !8309)
!8313 = !DILocation(line: 426, column: 34, scope: !8309)
!8314 = !DILocation(line: 426, column: 3, scope: !8309)
!8315 = !DILocation(line: 427, column: 29, scope: !8309)
!8316 = !DILocation(line: 427, column: 37, scope: !8309)
!8317 = !DILocation(line: 427, column: 47, scope: !8309)
!8318 = !DILocation(line: 427, column: 54, scope: !8309)
!8319 = !DILocation(line: 427, column: 52, scope: !8309)
!8320 = !DILocation(line: 427, column: 22, scope: !8309)
!8321 = !DILocation(line: 427, column: 3, scope: !8309)
!8322 = !DILocation(line: 427, column: 11, scope: !8309)
!8323 = !DILocation(line: 427, column: 20, scope: !8309)
!8324 = !DILocation(line: 428, column: 29, scope: !8309)
!8325 = !DILocation(line: 428, column: 37, scope: !8309)
!8326 = !DILocation(line: 428, column: 47, scope: !8309)
!8327 = !DILocation(line: 428, column: 54, scope: !8309)
!8328 = !DILocation(line: 428, column: 52, scope: !8309)
!8329 = !DILocation(line: 428, column: 22, scope: !8309)
!8330 = !DILocation(line: 428, column: 3, scope: !8309)
!8331 = !DILocation(line: 428, column: 11, scope: !8309)
!8332 = !DILocation(line: 428, column: 20, scope: !8309)
!8333 = !DILocation(line: 429, column: 29, scope: !8309)
!8334 = !DILocation(line: 429, column: 37, scope: !8309)
!8335 = !DILocation(line: 429, column: 47, scope: !8309)
!8336 = !DILocation(line: 429, column: 54, scope: !8309)
!8337 = !DILocation(line: 429, column: 52, scope: !8309)
!8338 = !DILocation(line: 429, column: 22, scope: !8309)
!8339 = !DILocation(line: 429, column: 3, scope: !8309)
!8340 = !DILocation(line: 429, column: 11, scope: !8309)
!8341 = !DILocation(line: 429, column: 20, scope: !8309)
!8342 = !DILocation(line: 431, column: 29, scope: !8309)
!8343 = !DILocation(line: 431, column: 37, scope: !8309)
!8344 = !DILocation(line: 431, column: 47, scope: !8309)
!8345 = !DILocation(line: 431, column: 54, scope: !8309)
!8346 = !DILocation(line: 431, column: 52, scope: !8309)
!8347 = !DILocation(line: 431, column: 22, scope: !8309)
!8348 = !DILocation(line: 431, column: 3, scope: !8309)
!8349 = !DILocation(line: 431, column: 11, scope: !8309)
!8350 = !DILocation(line: 431, column: 20, scope: !8309)
!8351 = !DILocation(line: 432, column: 29, scope: !8309)
!8352 = !DILocation(line: 432, column: 37, scope: !8309)
!8353 = !DILocation(line: 432, column: 47, scope: !8309)
!8354 = !DILocation(line: 432, column: 54, scope: !8309)
!8355 = !DILocation(line: 432, column: 52, scope: !8309)
!8356 = !DILocation(line: 432, column: 22, scope: !8309)
!8357 = !DILocation(line: 432, column: 3, scope: !8309)
!8358 = !DILocation(line: 432, column: 11, scope: !8309)
!8359 = !DILocation(line: 432, column: 20, scope: !8309)
!8360 = !DILocation(line: 433, column: 29, scope: !8309)
!8361 = !DILocation(line: 433, column: 37, scope: !8309)
!8362 = !DILocation(line: 433, column: 47, scope: !8309)
!8363 = !DILocation(line: 433, column: 54, scope: !8309)
!8364 = !DILocation(line: 433, column: 52, scope: !8309)
!8365 = !DILocation(line: 433, column: 22, scope: !8309)
!8366 = !DILocation(line: 433, column: 3, scope: !8309)
!8367 = !DILocation(line: 433, column: 11, scope: !8309)
!8368 = !DILocation(line: 433, column: 20, scope: !8309)
!8369 = !DILocation(line: 436, column: 14, scope: !8309)
!8370 = !DILocation(line: 436, column: 17, scope: !8309)
!8371 = !DILocation(line: 436, column: 25, scope: !8309)
!8372 = !DILocation(line: 436, column: 35, scope: !8309)
!8373 = !DILocation(line: 436, column: 38, scope: !8309)
!8374 = !DILocation(line: 436, column: 3, scope: !8309)
!8375 = !DILocation(line: 437, column: 29, scope: !8309)
!8376 = !DILocation(line: 437, column: 37, scope: !8309)
!8377 = !DILocation(line: 437, column: 47, scope: !8309)
!8378 = !DILocation(line: 437, column: 54, scope: !8309)
!8379 = !DILocation(line: 437, column: 52, scope: !8309)
!8380 = !DILocation(line: 437, column: 22, scope: !8309)
!8381 = !DILocation(line: 437, column: 3, scope: !8309)
!8382 = !DILocation(line: 437, column: 11, scope: !8309)
!8383 = !DILocation(line: 437, column: 20, scope: !8309)
!8384 = !DILocation(line: 438, column: 29, scope: !8309)
!8385 = !DILocation(line: 438, column: 37, scope: !8309)
!8386 = !DILocation(line: 438, column: 47, scope: !8309)
!8387 = !DILocation(line: 438, column: 54, scope: !8309)
!8388 = !DILocation(line: 438, column: 52, scope: !8309)
!8389 = !DILocation(line: 438, column: 22, scope: !8309)
!8390 = !DILocation(line: 438, column: 3, scope: !8309)
!8391 = !DILocation(line: 438, column: 11, scope: !8309)
!8392 = !DILocation(line: 438, column: 20, scope: !8309)
!8393 = !DILocation(line: 439, column: 29, scope: !8309)
!8394 = !DILocation(line: 439, column: 37, scope: !8309)
!8395 = !DILocation(line: 439, column: 47, scope: !8309)
!8396 = !DILocation(line: 439, column: 54, scope: !8309)
!8397 = !DILocation(line: 439, column: 52, scope: !8309)
!8398 = !DILocation(line: 439, column: 22, scope: !8309)
!8399 = !DILocation(line: 439, column: 3, scope: !8309)
!8400 = !DILocation(line: 439, column: 11, scope: !8309)
!8401 = !DILocation(line: 439, column: 20, scope: !8309)
!8402 = !DILocation(line: 441, column: 29, scope: !8309)
!8403 = !DILocation(line: 441, column: 37, scope: !8309)
!8404 = !DILocation(line: 441, column: 47, scope: !8309)
!8405 = !DILocation(line: 441, column: 54, scope: !8309)
!8406 = !DILocation(line: 441, column: 52, scope: !8309)
!8407 = !DILocation(line: 441, column: 22, scope: !8309)
!8408 = !DILocation(line: 441, column: 3, scope: !8309)
!8409 = !DILocation(line: 441, column: 11, scope: !8309)
!8410 = !DILocation(line: 441, column: 20, scope: !8309)
!8411 = !DILocation(line: 442, column: 29, scope: !8309)
!8412 = !DILocation(line: 442, column: 37, scope: !8309)
!8413 = !DILocation(line: 442, column: 47, scope: !8309)
!8414 = !DILocation(line: 442, column: 54, scope: !8309)
!8415 = !DILocation(line: 442, column: 52, scope: !8309)
!8416 = !DILocation(line: 442, column: 22, scope: !8309)
!8417 = !DILocation(line: 442, column: 3, scope: !8309)
!8418 = !DILocation(line: 442, column: 11, scope: !8309)
!8419 = !DILocation(line: 442, column: 20, scope: !8309)
!8420 = !DILocation(line: 443, column: 29, scope: !8309)
!8421 = !DILocation(line: 443, column: 37, scope: !8309)
!8422 = !DILocation(line: 443, column: 47, scope: !8309)
!8423 = !DILocation(line: 443, column: 54, scope: !8309)
!8424 = !DILocation(line: 443, column: 52, scope: !8309)
!8425 = !DILocation(line: 443, column: 22, scope: !8309)
!8426 = !DILocation(line: 443, column: 3, scope: !8309)
!8427 = !DILocation(line: 443, column: 11, scope: !8309)
!8428 = !DILocation(line: 443, column: 20, scope: !8309)
!8429 = !DILocation(line: 445, column: 2, scope: !8309)
!8430 = !DILocation(line: 424, column: 34, scope: !8303)
!8431 = !DILocation(line: 424, column: 2, scope: !8303)
!8432 = distinct !{!8432, !8307, !8433}
!8433 = !DILocation(line: 445, column: 2, scope: !8300)
!8434 = !DILocation(line: 447, column: 10, scope: !8205)
!8435 = !DILocation(line: 447, column: 18, scope: !8205)
!8436 = !DILocation(line: 447, column: 8, scope: !8205)
!8437 = !DILocation(line: 448, column: 10, scope: !8205)
!8438 = !DILocation(line: 448, column: 18, scope: !8205)
!8439 = !DILocation(line: 448, column: 8, scope: !8205)
!8440 = !DILocation(line: 452, column: 8, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 452, column: 2)
!8442 = !DILocation(line: 452, column: 7, scope: !8441)
!8443 = !DILocation(line: 452, column: 12, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 452, column: 2)
!8445 = !DILocation(line: 452, column: 16, scope: !8444)
!8446 = !DILocation(line: 452, column: 24, scope: !8444)
!8447 = !DILocation(line: 452, column: 14, scope: !8444)
!8448 = !DILocation(line: 452, column: 2, scope: !8441)
!8449 = !DILocation(line: 453, column: 25, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 452, column: 38)
!8451 = !DILocation(line: 453, column: 31, scope: !8450)
!8452 = !DILocation(line: 453, column: 35, scope: !8450)
!8453 = !DILocation(line: 453, column: 14, scope: !8450)
!8454 = !DILocation(line: 453, column: 20, scope: !8450)
!8455 = !DILocation(line: 453, column: 24, scope: !8450)
!8456 = !DILocation(line: 453, column: 3, scope: !8450)
!8457 = !DILocation(line: 453, column: 9, scope: !8450)
!8458 = !DILocation(line: 453, column: 13, scope: !8450)
!8459 = !DILocation(line: 454, column: 25, scope: !8450)
!8460 = !DILocation(line: 454, column: 31, scope: !8450)
!8461 = !DILocation(line: 454, column: 35, scope: !8450)
!8462 = !DILocation(line: 454, column: 14, scope: !8450)
!8463 = !DILocation(line: 454, column: 20, scope: !8450)
!8464 = !DILocation(line: 454, column: 24, scope: !8450)
!8465 = !DILocation(line: 454, column: 3, scope: !8450)
!8466 = !DILocation(line: 454, column: 9, scope: !8450)
!8467 = !DILocation(line: 454, column: 13, scope: !8450)
!8468 = !DILocation(line: 456, column: 14, scope: !8450)
!8469 = !DILocation(line: 456, column: 17, scope: !8450)
!8470 = !DILocation(line: 456, column: 25, scope: !8450)
!8471 = !DILocation(line: 456, column: 31, scope: !8450)
!8472 = !DILocation(line: 456, column: 38, scope: !8450)
!8473 = !DILocation(line: 456, column: 42, scope: !8450)
!8474 = !DILocation(line: 456, column: 3, scope: !8450)
!8475 = !DILocation(line: 457, column: 23, scope: !8450)
!8476 = !DILocation(line: 457, column: 29, scope: !8450)
!8477 = !DILocation(line: 457, column: 35, scope: !8450)
!8478 = !DILocation(line: 457, column: 42, scope: !8450)
!8479 = !DILocation(line: 457, column: 40, scope: !8450)
!8480 = !DILocation(line: 457, column: 16, scope: !8450)
!8481 = !DILocation(line: 457, column: 3, scope: !8450)
!8482 = !DILocation(line: 457, column: 9, scope: !8450)
!8483 = !DILocation(line: 457, column: 14, scope: !8450)
!8484 = !DILocation(line: 458, column: 23, scope: !8450)
!8485 = !DILocation(line: 458, column: 29, scope: !8450)
!8486 = !DILocation(line: 458, column: 35, scope: !8450)
!8487 = !DILocation(line: 458, column: 42, scope: !8450)
!8488 = !DILocation(line: 458, column: 40, scope: !8450)
!8489 = !DILocation(line: 458, column: 16, scope: !8450)
!8490 = !DILocation(line: 458, column: 3, scope: !8450)
!8491 = !DILocation(line: 458, column: 9, scope: !8450)
!8492 = !DILocation(line: 458, column: 14, scope: !8450)
!8493 = !DILocation(line: 459, column: 23, scope: !8450)
!8494 = !DILocation(line: 459, column: 29, scope: !8450)
!8495 = !DILocation(line: 459, column: 35, scope: !8450)
!8496 = !DILocation(line: 459, column: 42, scope: !8450)
!8497 = !DILocation(line: 459, column: 40, scope: !8450)
!8498 = !DILocation(line: 459, column: 16, scope: !8450)
!8499 = !DILocation(line: 459, column: 3, scope: !8450)
!8500 = !DILocation(line: 459, column: 9, scope: !8450)
!8501 = !DILocation(line: 459, column: 14, scope: !8450)
!8502 = !DILocation(line: 460, column: 23, scope: !8450)
!8503 = !DILocation(line: 460, column: 29, scope: !8450)
!8504 = !DILocation(line: 460, column: 35, scope: !8450)
!8505 = !DILocation(line: 460, column: 42, scope: !8450)
!8506 = !DILocation(line: 460, column: 40, scope: !8450)
!8507 = !DILocation(line: 460, column: 16, scope: !8450)
!8508 = !DILocation(line: 460, column: 3, scope: !8450)
!8509 = !DILocation(line: 460, column: 9, scope: !8450)
!8510 = !DILocation(line: 460, column: 14, scope: !8450)
!8511 = !DILocation(line: 461, column: 23, scope: !8450)
!8512 = !DILocation(line: 461, column: 29, scope: !8450)
!8513 = !DILocation(line: 461, column: 35, scope: !8450)
!8514 = !DILocation(line: 461, column: 42, scope: !8450)
!8515 = !DILocation(line: 461, column: 40, scope: !8450)
!8516 = !DILocation(line: 461, column: 16, scope: !8450)
!8517 = !DILocation(line: 461, column: 3, scope: !8450)
!8518 = !DILocation(line: 461, column: 9, scope: !8450)
!8519 = !DILocation(line: 461, column: 14, scope: !8450)
!8520 = !DILocation(line: 462, column: 23, scope: !8450)
!8521 = !DILocation(line: 462, column: 29, scope: !8450)
!8522 = !DILocation(line: 462, column: 35, scope: !8450)
!8523 = !DILocation(line: 462, column: 42, scope: !8450)
!8524 = !DILocation(line: 462, column: 40, scope: !8450)
!8525 = !DILocation(line: 462, column: 16, scope: !8450)
!8526 = !DILocation(line: 462, column: 3, scope: !8450)
!8527 = !DILocation(line: 462, column: 9, scope: !8450)
!8528 = !DILocation(line: 462, column: 14, scope: !8450)
!8529 = !DILocation(line: 464, column: 14, scope: !8450)
!8530 = !DILocation(line: 464, column: 17, scope: !8450)
!8531 = !DILocation(line: 464, column: 25, scope: !8450)
!8532 = !DILocation(line: 464, column: 31, scope: !8450)
!8533 = !DILocation(line: 464, column: 38, scope: !8450)
!8534 = !DILocation(line: 464, column: 42, scope: !8450)
!8535 = !DILocation(line: 464, column: 3, scope: !8450)
!8536 = !DILocation(line: 465, column: 23, scope: !8450)
!8537 = !DILocation(line: 465, column: 29, scope: !8450)
!8538 = !DILocation(line: 465, column: 35, scope: !8450)
!8539 = !DILocation(line: 465, column: 42, scope: !8450)
!8540 = !DILocation(line: 465, column: 40, scope: !8450)
!8541 = !DILocation(line: 465, column: 16, scope: !8450)
!8542 = !DILocation(line: 465, column: 3, scope: !8450)
!8543 = !DILocation(line: 465, column: 9, scope: !8450)
!8544 = !DILocation(line: 465, column: 14, scope: !8450)
!8545 = !DILocation(line: 466, column: 23, scope: !8450)
!8546 = !DILocation(line: 466, column: 29, scope: !8450)
!8547 = !DILocation(line: 466, column: 35, scope: !8450)
!8548 = !DILocation(line: 466, column: 42, scope: !8450)
!8549 = !DILocation(line: 466, column: 40, scope: !8450)
!8550 = !DILocation(line: 466, column: 16, scope: !8450)
!8551 = !DILocation(line: 466, column: 3, scope: !8450)
!8552 = !DILocation(line: 466, column: 9, scope: !8450)
!8553 = !DILocation(line: 466, column: 14, scope: !8450)
!8554 = !DILocation(line: 467, column: 23, scope: !8450)
!8555 = !DILocation(line: 467, column: 29, scope: !8450)
!8556 = !DILocation(line: 467, column: 35, scope: !8450)
!8557 = !DILocation(line: 467, column: 42, scope: !8450)
!8558 = !DILocation(line: 467, column: 40, scope: !8450)
!8559 = !DILocation(line: 467, column: 16, scope: !8450)
!8560 = !DILocation(line: 467, column: 3, scope: !8450)
!8561 = !DILocation(line: 467, column: 9, scope: !8450)
!8562 = !DILocation(line: 467, column: 14, scope: !8450)
!8563 = !DILocation(line: 468, column: 23, scope: !8450)
!8564 = !DILocation(line: 468, column: 29, scope: !8450)
!8565 = !DILocation(line: 468, column: 35, scope: !8450)
!8566 = !DILocation(line: 468, column: 42, scope: !8450)
!8567 = !DILocation(line: 468, column: 40, scope: !8450)
!8568 = !DILocation(line: 468, column: 16, scope: !8450)
!8569 = !DILocation(line: 468, column: 3, scope: !8450)
!8570 = !DILocation(line: 468, column: 9, scope: !8450)
!8571 = !DILocation(line: 468, column: 14, scope: !8450)
!8572 = !DILocation(line: 469, column: 23, scope: !8450)
!8573 = !DILocation(line: 469, column: 29, scope: !8450)
!8574 = !DILocation(line: 469, column: 35, scope: !8450)
!8575 = !DILocation(line: 469, column: 42, scope: !8450)
!8576 = !DILocation(line: 469, column: 40, scope: !8450)
!8577 = !DILocation(line: 469, column: 16, scope: !8450)
!8578 = !DILocation(line: 469, column: 3, scope: !8450)
!8579 = !DILocation(line: 469, column: 9, scope: !8450)
!8580 = !DILocation(line: 469, column: 14, scope: !8450)
!8581 = !DILocation(line: 470, column: 23, scope: !8450)
!8582 = !DILocation(line: 470, column: 29, scope: !8450)
!8583 = !DILocation(line: 470, column: 35, scope: !8450)
!8584 = !DILocation(line: 470, column: 42, scope: !8450)
!8585 = !DILocation(line: 470, column: 40, scope: !8450)
!8586 = !DILocation(line: 470, column: 16, scope: !8450)
!8587 = !DILocation(line: 470, column: 3, scope: !8450)
!8588 = !DILocation(line: 470, column: 9, scope: !8450)
!8589 = !DILocation(line: 470, column: 14, scope: !8450)
!8590 = !DILocation(line: 472, column: 14, scope: !8450)
!8591 = !DILocation(line: 472, column: 17, scope: !8450)
!8592 = !DILocation(line: 472, column: 25, scope: !8450)
!8593 = !DILocation(line: 472, column: 31, scope: !8450)
!8594 = !DILocation(line: 472, column: 38, scope: !8450)
!8595 = !DILocation(line: 472, column: 42, scope: !8450)
!8596 = !DILocation(line: 472, column: 3, scope: !8450)
!8597 = !DILocation(line: 473, column: 23, scope: !8450)
!8598 = !DILocation(line: 473, column: 29, scope: !8450)
!8599 = !DILocation(line: 473, column: 35, scope: !8450)
!8600 = !DILocation(line: 473, column: 42, scope: !8450)
!8601 = !DILocation(line: 473, column: 40, scope: !8450)
!8602 = !DILocation(line: 473, column: 16, scope: !8450)
!8603 = !DILocation(line: 473, column: 3, scope: !8450)
!8604 = !DILocation(line: 473, column: 9, scope: !8450)
!8605 = !DILocation(line: 473, column: 14, scope: !8450)
!8606 = !DILocation(line: 474, column: 23, scope: !8450)
!8607 = !DILocation(line: 474, column: 29, scope: !8450)
!8608 = !DILocation(line: 474, column: 35, scope: !8450)
!8609 = !DILocation(line: 474, column: 42, scope: !8450)
!8610 = !DILocation(line: 474, column: 40, scope: !8450)
!8611 = !DILocation(line: 474, column: 16, scope: !8450)
!8612 = !DILocation(line: 474, column: 3, scope: !8450)
!8613 = !DILocation(line: 474, column: 9, scope: !8450)
!8614 = !DILocation(line: 474, column: 14, scope: !8450)
!8615 = !DILocation(line: 475, column: 23, scope: !8450)
!8616 = !DILocation(line: 475, column: 29, scope: !8450)
!8617 = !DILocation(line: 475, column: 35, scope: !8450)
!8618 = !DILocation(line: 475, column: 42, scope: !8450)
!8619 = !DILocation(line: 475, column: 40, scope: !8450)
!8620 = !DILocation(line: 475, column: 16, scope: !8450)
!8621 = !DILocation(line: 475, column: 3, scope: !8450)
!8622 = !DILocation(line: 475, column: 9, scope: !8450)
!8623 = !DILocation(line: 475, column: 14, scope: !8450)
!8624 = !DILocation(line: 476, column: 23, scope: !8450)
!8625 = !DILocation(line: 476, column: 29, scope: !8450)
!8626 = !DILocation(line: 476, column: 35, scope: !8450)
!8627 = !DILocation(line: 476, column: 42, scope: !8450)
!8628 = !DILocation(line: 476, column: 40, scope: !8450)
!8629 = !DILocation(line: 476, column: 16, scope: !8450)
!8630 = !DILocation(line: 476, column: 3, scope: !8450)
!8631 = !DILocation(line: 476, column: 9, scope: !8450)
!8632 = !DILocation(line: 476, column: 14, scope: !8450)
!8633 = !DILocation(line: 477, column: 23, scope: !8450)
!8634 = !DILocation(line: 477, column: 29, scope: !8450)
!8635 = !DILocation(line: 477, column: 35, scope: !8450)
!8636 = !DILocation(line: 477, column: 42, scope: !8450)
!8637 = !DILocation(line: 477, column: 40, scope: !8450)
!8638 = !DILocation(line: 477, column: 16, scope: !8450)
!8639 = !DILocation(line: 477, column: 3, scope: !8450)
!8640 = !DILocation(line: 477, column: 9, scope: !8450)
!8641 = !DILocation(line: 477, column: 14, scope: !8450)
!8642 = !DILocation(line: 478, column: 23, scope: !8450)
!8643 = !DILocation(line: 478, column: 29, scope: !8450)
!8644 = !DILocation(line: 478, column: 35, scope: !8450)
!8645 = !DILocation(line: 478, column: 42, scope: !8450)
!8646 = !DILocation(line: 478, column: 40, scope: !8450)
!8647 = !DILocation(line: 478, column: 16, scope: !8450)
!8648 = !DILocation(line: 478, column: 3, scope: !8450)
!8649 = !DILocation(line: 478, column: 9, scope: !8450)
!8650 = !DILocation(line: 478, column: 14, scope: !8450)
!8651 = !DILocation(line: 480, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 480, column: 7)
!8653 = !DILocation(line: 480, column: 14, scope: !8652)
!8654 = !DILocation(line: 480, column: 7, scope: !8450)
!8655 = !DILocation(line: 481, column: 15, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 480, column: 18)
!8657 = !DILocation(line: 481, column: 18, scope: !8656)
!8658 = !DILocation(line: 481, column: 26, scope: !8656)
!8659 = !DILocation(line: 481, column: 32, scope: !8656)
!8660 = !DILocation(line: 481, column: 39, scope: !8656)
!8661 = !DILocation(line: 481, column: 43, scope: !8656)
!8662 = !DILocation(line: 481, column: 4, scope: !8656)
!8663 = !DILocation(line: 482, column: 24, scope: !8656)
!8664 = !DILocation(line: 482, column: 30, scope: !8656)
!8665 = !DILocation(line: 482, column: 36, scope: !8656)
!8666 = !DILocation(line: 482, column: 43, scope: !8656)
!8667 = !DILocation(line: 482, column: 41, scope: !8656)
!8668 = !DILocation(line: 482, column: 17, scope: !8656)
!8669 = !DILocation(line: 482, column: 4, scope: !8656)
!8670 = !DILocation(line: 482, column: 10, scope: !8656)
!8671 = !DILocation(line: 482, column: 15, scope: !8656)
!8672 = !DILocation(line: 483, column: 24, scope: !8656)
!8673 = !DILocation(line: 483, column: 30, scope: !8656)
!8674 = !DILocation(line: 483, column: 36, scope: !8656)
!8675 = !DILocation(line: 483, column: 43, scope: !8656)
!8676 = !DILocation(line: 483, column: 41, scope: !8656)
!8677 = !DILocation(line: 483, column: 17, scope: !8656)
!8678 = !DILocation(line: 483, column: 4, scope: !8656)
!8679 = !DILocation(line: 483, column: 10, scope: !8656)
!8680 = !DILocation(line: 483, column: 15, scope: !8656)
!8681 = !DILocation(line: 484, column: 24, scope: !8656)
!8682 = !DILocation(line: 484, column: 30, scope: !8656)
!8683 = !DILocation(line: 484, column: 36, scope: !8656)
!8684 = !DILocation(line: 484, column: 43, scope: !8656)
!8685 = !DILocation(line: 484, column: 41, scope: !8656)
!8686 = !DILocation(line: 484, column: 17, scope: !8656)
!8687 = !DILocation(line: 484, column: 4, scope: !8656)
!8688 = !DILocation(line: 484, column: 10, scope: !8656)
!8689 = !DILocation(line: 484, column: 15, scope: !8656)
!8690 = !DILocation(line: 485, column: 24, scope: !8656)
!8691 = !DILocation(line: 485, column: 30, scope: !8656)
!8692 = !DILocation(line: 485, column: 36, scope: !8656)
!8693 = !DILocation(line: 485, column: 43, scope: !8656)
!8694 = !DILocation(line: 485, column: 41, scope: !8656)
!8695 = !DILocation(line: 485, column: 17, scope: !8656)
!8696 = !DILocation(line: 485, column: 4, scope: !8656)
!8697 = !DILocation(line: 485, column: 10, scope: !8656)
!8698 = !DILocation(line: 485, column: 15, scope: !8656)
!8699 = !DILocation(line: 486, column: 24, scope: !8656)
!8700 = !DILocation(line: 486, column: 30, scope: !8656)
!8701 = !DILocation(line: 486, column: 36, scope: !8656)
!8702 = !DILocation(line: 486, column: 43, scope: !8656)
!8703 = !DILocation(line: 486, column: 41, scope: !8656)
!8704 = !DILocation(line: 486, column: 17, scope: !8656)
!8705 = !DILocation(line: 486, column: 4, scope: !8656)
!8706 = !DILocation(line: 486, column: 10, scope: !8656)
!8707 = !DILocation(line: 486, column: 15, scope: !8656)
!8708 = !DILocation(line: 487, column: 24, scope: !8656)
!8709 = !DILocation(line: 487, column: 30, scope: !8656)
!8710 = !DILocation(line: 487, column: 36, scope: !8656)
!8711 = !DILocation(line: 487, column: 43, scope: !8656)
!8712 = !DILocation(line: 487, column: 41, scope: !8656)
!8713 = !DILocation(line: 487, column: 17, scope: !8656)
!8714 = !DILocation(line: 487, column: 4, scope: !8656)
!8715 = !DILocation(line: 487, column: 10, scope: !8656)
!8716 = !DILocation(line: 487, column: 15, scope: !8656)
!8717 = !DILocation(line: 488, column: 3, scope: !8656)
!8718 = !DILocation(line: 491, column: 14, scope: !8450)
!8719 = !DILocation(line: 491, column: 17, scope: !8450)
!8720 = !DILocation(line: 491, column: 25, scope: !8450)
!8721 = !DILocation(line: 491, column: 35, scope: !8450)
!8722 = !DILocation(line: 491, column: 42, scope: !8450)
!8723 = !DILocation(line: 491, column: 46, scope: !8450)
!8724 = !DILocation(line: 491, column: 3, scope: !8450)
!8725 = !DILocation(line: 492, column: 23, scope: !8450)
!8726 = !DILocation(line: 492, column: 29, scope: !8450)
!8727 = !DILocation(line: 492, column: 35, scope: !8450)
!8728 = !DILocation(line: 492, column: 42, scope: !8450)
!8729 = !DILocation(line: 492, column: 40, scope: !8450)
!8730 = !DILocation(line: 492, column: 16, scope: !8450)
!8731 = !DILocation(line: 492, column: 3, scope: !8450)
!8732 = !DILocation(line: 492, column: 9, scope: !8450)
!8733 = !DILocation(line: 492, column: 14, scope: !8450)
!8734 = !DILocation(line: 493, column: 23, scope: !8450)
!8735 = !DILocation(line: 493, column: 29, scope: !8450)
!8736 = !DILocation(line: 493, column: 35, scope: !8450)
!8737 = !DILocation(line: 493, column: 42, scope: !8450)
!8738 = !DILocation(line: 493, column: 40, scope: !8450)
!8739 = !DILocation(line: 493, column: 16, scope: !8450)
!8740 = !DILocation(line: 493, column: 3, scope: !8450)
!8741 = !DILocation(line: 493, column: 9, scope: !8450)
!8742 = !DILocation(line: 493, column: 14, scope: !8450)
!8743 = !DILocation(line: 494, column: 23, scope: !8450)
!8744 = !DILocation(line: 494, column: 29, scope: !8450)
!8745 = !DILocation(line: 494, column: 35, scope: !8450)
!8746 = !DILocation(line: 494, column: 42, scope: !8450)
!8747 = !DILocation(line: 494, column: 40, scope: !8450)
!8748 = !DILocation(line: 494, column: 16, scope: !8450)
!8749 = !DILocation(line: 494, column: 3, scope: !8450)
!8750 = !DILocation(line: 494, column: 9, scope: !8450)
!8751 = !DILocation(line: 494, column: 14, scope: !8450)
!8752 = !DILocation(line: 495, column: 23, scope: !8450)
!8753 = !DILocation(line: 495, column: 29, scope: !8450)
!8754 = !DILocation(line: 495, column: 35, scope: !8450)
!8755 = !DILocation(line: 495, column: 42, scope: !8450)
!8756 = !DILocation(line: 495, column: 40, scope: !8450)
!8757 = !DILocation(line: 495, column: 16, scope: !8450)
!8758 = !DILocation(line: 495, column: 3, scope: !8450)
!8759 = !DILocation(line: 495, column: 9, scope: !8450)
!8760 = !DILocation(line: 495, column: 14, scope: !8450)
!8761 = !DILocation(line: 496, column: 23, scope: !8450)
!8762 = !DILocation(line: 496, column: 29, scope: !8450)
!8763 = !DILocation(line: 496, column: 35, scope: !8450)
!8764 = !DILocation(line: 496, column: 42, scope: !8450)
!8765 = !DILocation(line: 496, column: 40, scope: !8450)
!8766 = !DILocation(line: 496, column: 16, scope: !8450)
!8767 = !DILocation(line: 496, column: 3, scope: !8450)
!8768 = !DILocation(line: 496, column: 9, scope: !8450)
!8769 = !DILocation(line: 496, column: 14, scope: !8450)
!8770 = !DILocation(line: 497, column: 23, scope: !8450)
!8771 = !DILocation(line: 497, column: 29, scope: !8450)
!8772 = !DILocation(line: 497, column: 35, scope: !8450)
!8773 = !DILocation(line: 497, column: 42, scope: !8450)
!8774 = !DILocation(line: 497, column: 40, scope: !8450)
!8775 = !DILocation(line: 497, column: 16, scope: !8450)
!8776 = !DILocation(line: 497, column: 3, scope: !8450)
!8777 = !DILocation(line: 497, column: 9, scope: !8450)
!8778 = !DILocation(line: 497, column: 14, scope: !8450)
!8779 = !DILocation(line: 499, column: 14, scope: !8450)
!8780 = !DILocation(line: 499, column: 17, scope: !8450)
!8781 = !DILocation(line: 499, column: 25, scope: !8450)
!8782 = !DILocation(line: 499, column: 35, scope: !8450)
!8783 = !DILocation(line: 499, column: 42, scope: !8450)
!8784 = !DILocation(line: 499, column: 46, scope: !8450)
!8785 = !DILocation(line: 499, column: 3, scope: !8450)
!8786 = !DILocation(line: 500, column: 23, scope: !8450)
!8787 = !DILocation(line: 500, column: 29, scope: !8450)
!8788 = !DILocation(line: 500, column: 35, scope: !8450)
!8789 = !DILocation(line: 500, column: 42, scope: !8450)
!8790 = !DILocation(line: 500, column: 40, scope: !8450)
!8791 = !DILocation(line: 500, column: 16, scope: !8450)
!8792 = !DILocation(line: 500, column: 3, scope: !8450)
!8793 = !DILocation(line: 500, column: 9, scope: !8450)
!8794 = !DILocation(line: 500, column: 14, scope: !8450)
!8795 = !DILocation(line: 501, column: 23, scope: !8450)
!8796 = !DILocation(line: 501, column: 29, scope: !8450)
!8797 = !DILocation(line: 501, column: 35, scope: !8450)
!8798 = !DILocation(line: 501, column: 42, scope: !8450)
!8799 = !DILocation(line: 501, column: 40, scope: !8450)
!8800 = !DILocation(line: 501, column: 16, scope: !8450)
!8801 = !DILocation(line: 501, column: 3, scope: !8450)
!8802 = !DILocation(line: 501, column: 9, scope: !8450)
!8803 = !DILocation(line: 501, column: 14, scope: !8450)
!8804 = !DILocation(line: 502, column: 23, scope: !8450)
!8805 = !DILocation(line: 502, column: 29, scope: !8450)
!8806 = !DILocation(line: 502, column: 35, scope: !8450)
!8807 = !DILocation(line: 502, column: 42, scope: !8450)
!8808 = !DILocation(line: 502, column: 40, scope: !8450)
!8809 = !DILocation(line: 502, column: 16, scope: !8450)
!8810 = !DILocation(line: 502, column: 3, scope: !8450)
!8811 = !DILocation(line: 502, column: 9, scope: !8450)
!8812 = !DILocation(line: 502, column: 14, scope: !8450)
!8813 = !DILocation(line: 503, column: 23, scope: !8450)
!8814 = !DILocation(line: 503, column: 29, scope: !8450)
!8815 = !DILocation(line: 503, column: 35, scope: !8450)
!8816 = !DILocation(line: 503, column: 42, scope: !8450)
!8817 = !DILocation(line: 503, column: 40, scope: !8450)
!8818 = !DILocation(line: 503, column: 16, scope: !8450)
!8819 = !DILocation(line: 503, column: 3, scope: !8450)
!8820 = !DILocation(line: 503, column: 9, scope: !8450)
!8821 = !DILocation(line: 503, column: 14, scope: !8450)
!8822 = !DILocation(line: 504, column: 23, scope: !8450)
!8823 = !DILocation(line: 504, column: 29, scope: !8450)
!8824 = !DILocation(line: 504, column: 35, scope: !8450)
!8825 = !DILocation(line: 504, column: 42, scope: !8450)
!8826 = !DILocation(line: 504, column: 40, scope: !8450)
!8827 = !DILocation(line: 504, column: 16, scope: !8450)
!8828 = !DILocation(line: 504, column: 3, scope: !8450)
!8829 = !DILocation(line: 504, column: 9, scope: !8450)
!8830 = !DILocation(line: 504, column: 14, scope: !8450)
!8831 = !DILocation(line: 505, column: 23, scope: !8450)
!8832 = !DILocation(line: 505, column: 29, scope: !8450)
!8833 = !DILocation(line: 505, column: 35, scope: !8450)
!8834 = !DILocation(line: 505, column: 42, scope: !8450)
!8835 = !DILocation(line: 505, column: 40, scope: !8450)
!8836 = !DILocation(line: 505, column: 16, scope: !8450)
!8837 = !DILocation(line: 505, column: 3, scope: !8450)
!8838 = !DILocation(line: 505, column: 9, scope: !8450)
!8839 = !DILocation(line: 505, column: 14, scope: !8450)
!8840 = !DILocation(line: 507, column: 14, scope: !8450)
!8841 = !DILocation(line: 507, column: 17, scope: !8450)
!8842 = !DILocation(line: 507, column: 25, scope: !8450)
!8843 = !DILocation(line: 507, column: 35, scope: !8450)
!8844 = !DILocation(line: 507, column: 42, scope: !8450)
!8845 = !DILocation(line: 507, column: 46, scope: !8450)
!8846 = !DILocation(line: 507, column: 3, scope: !8450)
!8847 = !DILocation(line: 508, column: 23, scope: !8450)
!8848 = !DILocation(line: 508, column: 29, scope: !8450)
!8849 = !DILocation(line: 508, column: 35, scope: !8450)
!8850 = !DILocation(line: 508, column: 42, scope: !8450)
!8851 = !DILocation(line: 508, column: 40, scope: !8450)
!8852 = !DILocation(line: 508, column: 16, scope: !8450)
!8853 = !DILocation(line: 508, column: 3, scope: !8450)
!8854 = !DILocation(line: 508, column: 9, scope: !8450)
!8855 = !DILocation(line: 508, column: 14, scope: !8450)
!8856 = !DILocation(line: 509, column: 23, scope: !8450)
!8857 = !DILocation(line: 509, column: 29, scope: !8450)
!8858 = !DILocation(line: 509, column: 35, scope: !8450)
!8859 = !DILocation(line: 509, column: 42, scope: !8450)
!8860 = !DILocation(line: 509, column: 40, scope: !8450)
!8861 = !DILocation(line: 509, column: 16, scope: !8450)
!8862 = !DILocation(line: 509, column: 3, scope: !8450)
!8863 = !DILocation(line: 509, column: 9, scope: !8450)
!8864 = !DILocation(line: 509, column: 14, scope: !8450)
!8865 = !DILocation(line: 510, column: 23, scope: !8450)
!8866 = !DILocation(line: 510, column: 29, scope: !8450)
!8867 = !DILocation(line: 510, column: 35, scope: !8450)
!8868 = !DILocation(line: 510, column: 42, scope: !8450)
!8869 = !DILocation(line: 510, column: 40, scope: !8450)
!8870 = !DILocation(line: 510, column: 16, scope: !8450)
!8871 = !DILocation(line: 510, column: 3, scope: !8450)
!8872 = !DILocation(line: 510, column: 9, scope: !8450)
!8873 = !DILocation(line: 510, column: 14, scope: !8450)
!8874 = !DILocation(line: 511, column: 23, scope: !8450)
!8875 = !DILocation(line: 511, column: 29, scope: !8450)
!8876 = !DILocation(line: 511, column: 35, scope: !8450)
!8877 = !DILocation(line: 511, column: 42, scope: !8450)
!8878 = !DILocation(line: 511, column: 40, scope: !8450)
!8879 = !DILocation(line: 511, column: 16, scope: !8450)
!8880 = !DILocation(line: 511, column: 3, scope: !8450)
!8881 = !DILocation(line: 511, column: 9, scope: !8450)
!8882 = !DILocation(line: 511, column: 14, scope: !8450)
!8883 = !DILocation(line: 512, column: 23, scope: !8450)
!8884 = !DILocation(line: 512, column: 29, scope: !8450)
!8885 = !DILocation(line: 512, column: 35, scope: !8450)
!8886 = !DILocation(line: 512, column: 42, scope: !8450)
!8887 = !DILocation(line: 512, column: 40, scope: !8450)
!8888 = !DILocation(line: 512, column: 16, scope: !8450)
!8889 = !DILocation(line: 512, column: 3, scope: !8450)
!8890 = !DILocation(line: 512, column: 9, scope: !8450)
!8891 = !DILocation(line: 512, column: 14, scope: !8450)
!8892 = !DILocation(line: 513, column: 23, scope: !8450)
!8893 = !DILocation(line: 513, column: 29, scope: !8450)
!8894 = !DILocation(line: 513, column: 35, scope: !8450)
!8895 = !DILocation(line: 513, column: 42, scope: !8450)
!8896 = !DILocation(line: 513, column: 40, scope: !8450)
!8897 = !DILocation(line: 513, column: 16, scope: !8450)
!8898 = !DILocation(line: 513, column: 3, scope: !8450)
!8899 = !DILocation(line: 513, column: 9, scope: !8450)
!8900 = !DILocation(line: 513, column: 14, scope: !8450)
!8901 = !DILocation(line: 515, column: 7, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 515, column: 7)
!8903 = !DILocation(line: 515, column: 14, scope: !8902)
!8904 = !DILocation(line: 515, column: 7, scope: !8450)
!8905 = !DILocation(line: 516, column: 15, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 515, column: 18)
!8907 = !DILocation(line: 516, column: 18, scope: !8906)
!8908 = !DILocation(line: 516, column: 26, scope: !8906)
!8909 = !DILocation(line: 516, column: 36, scope: !8906)
!8910 = !DILocation(line: 516, column: 43, scope: !8906)
!8911 = !DILocation(line: 516, column: 47, scope: !8906)
!8912 = !DILocation(line: 516, column: 4, scope: !8906)
!8913 = !DILocation(line: 517, column: 24, scope: !8906)
!8914 = !DILocation(line: 517, column: 30, scope: !8906)
!8915 = !DILocation(line: 517, column: 36, scope: !8906)
!8916 = !DILocation(line: 517, column: 43, scope: !8906)
!8917 = !DILocation(line: 517, column: 41, scope: !8906)
!8918 = !DILocation(line: 517, column: 17, scope: !8906)
!8919 = !DILocation(line: 517, column: 4, scope: !8906)
!8920 = !DILocation(line: 517, column: 10, scope: !8906)
!8921 = !DILocation(line: 517, column: 15, scope: !8906)
!8922 = !DILocation(line: 518, column: 24, scope: !8906)
!8923 = !DILocation(line: 518, column: 30, scope: !8906)
!8924 = !DILocation(line: 518, column: 36, scope: !8906)
!8925 = !DILocation(line: 518, column: 43, scope: !8906)
!8926 = !DILocation(line: 518, column: 41, scope: !8906)
!8927 = !DILocation(line: 518, column: 17, scope: !8906)
!8928 = !DILocation(line: 518, column: 4, scope: !8906)
!8929 = !DILocation(line: 518, column: 10, scope: !8906)
!8930 = !DILocation(line: 518, column: 15, scope: !8906)
!8931 = !DILocation(line: 519, column: 24, scope: !8906)
!8932 = !DILocation(line: 519, column: 30, scope: !8906)
!8933 = !DILocation(line: 519, column: 36, scope: !8906)
!8934 = !DILocation(line: 519, column: 43, scope: !8906)
!8935 = !DILocation(line: 519, column: 41, scope: !8906)
!8936 = !DILocation(line: 519, column: 17, scope: !8906)
!8937 = !DILocation(line: 519, column: 4, scope: !8906)
!8938 = !DILocation(line: 519, column: 10, scope: !8906)
!8939 = !DILocation(line: 519, column: 15, scope: !8906)
!8940 = !DILocation(line: 520, column: 24, scope: !8906)
!8941 = !DILocation(line: 520, column: 30, scope: !8906)
!8942 = !DILocation(line: 520, column: 36, scope: !8906)
!8943 = !DILocation(line: 520, column: 43, scope: !8906)
!8944 = !DILocation(line: 520, column: 41, scope: !8906)
!8945 = !DILocation(line: 520, column: 17, scope: !8906)
!8946 = !DILocation(line: 520, column: 4, scope: !8906)
!8947 = !DILocation(line: 520, column: 10, scope: !8906)
!8948 = !DILocation(line: 520, column: 15, scope: !8906)
!8949 = !DILocation(line: 521, column: 24, scope: !8906)
!8950 = !DILocation(line: 521, column: 30, scope: !8906)
!8951 = !DILocation(line: 521, column: 36, scope: !8906)
!8952 = !DILocation(line: 521, column: 43, scope: !8906)
!8953 = !DILocation(line: 521, column: 41, scope: !8906)
!8954 = !DILocation(line: 521, column: 17, scope: !8906)
!8955 = !DILocation(line: 521, column: 4, scope: !8906)
!8956 = !DILocation(line: 521, column: 10, scope: !8906)
!8957 = !DILocation(line: 521, column: 15, scope: !8906)
!8958 = !DILocation(line: 522, column: 24, scope: !8906)
!8959 = !DILocation(line: 522, column: 30, scope: !8906)
!8960 = !DILocation(line: 522, column: 36, scope: !8906)
!8961 = !DILocation(line: 522, column: 43, scope: !8906)
!8962 = !DILocation(line: 522, column: 41, scope: !8906)
!8963 = !DILocation(line: 522, column: 17, scope: !8906)
!8964 = !DILocation(line: 522, column: 4, scope: !8906)
!8965 = !DILocation(line: 522, column: 10, scope: !8906)
!8966 = !DILocation(line: 522, column: 15, scope: !8906)
!8967 = !DILocation(line: 523, column: 3, scope: !8906)
!8968 = !DILocation(line: 526, column: 6, scope: !8450)
!8969 = !DILocation(line: 527, column: 7, scope: !8450)
!8970 = !DILocation(line: 529, column: 2, scope: !8450)
!8971 = !DILocation(line: 452, column: 34, scope: !8444)
!8972 = !DILocation(line: 452, column: 2, scope: !8444)
!8973 = distinct !{!8973, !8448, !8974}
!8974 = !DILocation(line: 529, column: 2, scope: !8441)
!8975 = !DILocation(line: 530, column: 2, scope: !8205)
!8976 = !DILocation(line: 531, column: 1, scope: !8205)
!8977 = distinct !DISubprogram(name: "are_there_deflectors", scope: !3, file: !3, line: 997, type: !8978, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!92, !2151, !6}
!8980 = !DILocalVariable(name: "scene", arg: 1, scope: !8977, file: !3, line: 997, type: !2151)
!8981 = !DILocation(line: 997, column: 40, scope: !8977)
!8982 = !DILocalVariable(name: "layer", arg: 2, scope: !8977, file: !3, line: 997, type: !6)
!8983 = !DILocation(line: 997, column: 60, scope: !8977)
!8984 = !DILocalVariable(name: "base", scope: !8977, file: !3, line: 999, type: !6488)
!8985 = !DILocation(line: 999, column: 8, scope: !8977)
!8986 = !DILocation(line: 1001, column: 14, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 1001, column: 2)
!8988 = !DILocation(line: 1001, column: 21, scope: !8987)
!8989 = !DILocation(line: 1001, column: 26, scope: !8987)
!8990 = !DILocation(line: 1001, column: 12, scope: !8987)
!8991 = !DILocation(line: 1001, column: 7, scope: !8987)
!8992 = !DILocation(line: 1001, column: 33, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1001, column: 2)
!8994 = !DILocation(line: 1001, column: 2, scope: !8987)
!8995 = !DILocation(line: 1002, column: 9, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1002, column: 8)
!8997 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1001, column: 57)
!8998 = !DILocation(line: 1002, column: 15, scope: !8996)
!8999 = !DILocation(line: 1002, column: 21, scope: !8996)
!9000 = !DILocation(line: 1002, column: 19, scope: !8996)
!9001 = !DILocation(line: 1002, column: 28, scope: !8996)
!9002 = !DILocation(line: 1002, column: 31, scope: !8996)
!9003 = !DILocation(line: 1002, column: 37, scope: !8996)
!9004 = !DILocation(line: 1002, column: 45, scope: !8996)
!9005 = !DILocation(line: 1002, column: 8, scope: !8997)
!9006 = !DILocation(line: 1003, column: 8, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 1003, column: 8)
!9008 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 1002, column: 49)
!9009 = !DILocation(line: 1003, column: 14, scope: !9007)
!9010 = !DILocation(line: 1003, column: 22, scope: !9007)
!9011 = !DILocation(line: 1003, column: 26, scope: !9007)
!9012 = !DILocation(line: 1003, column: 8, scope: !9008)
!9013 = !DILocation(line: 1004, column: 5, scope: !9007)
!9014 = !DILocation(line: 1005, column: 3, scope: !9008)
!9015 = !DILocation(line: 1006, column: 2, scope: !8997)
!9016 = !DILocation(line: 1001, column: 45, scope: !8993)
!9017 = !DILocation(line: 1001, column: 51, scope: !8993)
!9018 = !DILocation(line: 1001, column: 43, scope: !8993)
!9019 = !DILocation(line: 1001, column: 2, scope: !8993)
!9020 = distinct !{!9020, !8994, !9021}
!9021 = !DILocation(line: 1006, column: 2, scope: !8987)
!9022 = !DILocation(line: 1007, column: 2, scope: !8977)
!9023 = !DILocation(line: 1008, column: 1, scope: !8977)
!9024 = distinct !DISubprogram(name: "ccd_mesh_make", scope: !3, file: !3, line: 293, type: !9025, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{!4663, !2154}
!9027 = !DILocalVariable(name: "ob", arg: 1, scope: !9024, file: !3, line: 293, type: !2154)
!9028 = !DILocation(line: 293, column: 40, scope: !9024)
!9029 = !DILocalVariable(name: "cmd", scope: !9024, file: !3, line: 295, type: !501)
!9030 = !DILocation(line: 295, column: 25, scope: !9024)
!9031 = !DILocalVariable(name: "pccd_M", scope: !9024, file: !3, line: 296, type: !4663)
!9032 = !DILocation(line: 296, column: 12, scope: !9024)
!9033 = !DILocalVariable(name: "mima", scope: !9024, file: !3, line: 297, type: !4676)
!9034 = !DILocation(line: 297, column: 15, scope: !9024)
!9035 = !DILocalVariable(name: "mface", scope: !9024, file: !3, line: 298, type: !4672)
!9036 = !DILocation(line: 298, column: 9, scope: !9024)
!9037 = !DILocalVariable(name: "v", scope: !9024, file: !3, line: 299, type: !376)
!9038 = !DILocation(line: 299, column: 8, scope: !9024)
!9039 = !DILocalVariable(name: "hull", scope: !9024, file: !3, line: 299, type: !94)
!9040 = !DILocation(line: 299, column: 14, scope: !9024)
!9041 = !DILocalVariable(name: "i", scope: !9024, file: !3, line: 300, type: !92)
!9042 = !DILocation(line: 300, column: 6, scope: !9024)
!9043 = !DILocation(line: 302, column: 53, scope: !9024)
!9044 = !DILocation(line: 302, column: 32, scope: !9024)
!9045 = !DILocation(line: 302, column: 7, scope: !9024)
!9046 = !DILocation(line: 302, column: 6, scope: !9024)
!9047 = !DILocation(line: 305, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 305, column: 6)
!9049 = !DILocation(line: 305, column: 6, scope: !9024)
!9050 = !DILocation(line: 305, column: 12, scope: !9048)
!9051 = !DILocation(line: 306, column: 7, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 306, column: 6)
!9053 = !DILocation(line: 306, column: 12, scope: !9052)
!9054 = !DILocation(line: 306, column: 21, scope: !9052)
!9055 = !DILocation(line: 306, column: 25, scope: !9052)
!9056 = !DILocation(line: 306, column: 30, scope: !9052)
!9057 = !DILocation(line: 306, column: 6, scope: !9024)
!9058 = !DILocation(line: 306, column: 40, scope: !9052)
!9059 = !DILocation(line: 308, column: 11, scope: !9024)
!9060 = !DILocation(line: 308, column: 9, scope: !9024)
!9061 = !DILocation(line: 309, column: 20, scope: !9024)
!9062 = !DILocation(line: 309, column: 25, scope: !9024)
!9063 = !DILocation(line: 309, column: 2, scope: !9024)
!9064 = !DILocation(line: 309, column: 10, scope: !9024)
!9065 = !DILocation(line: 309, column: 18, scope: !9024)
!9066 = !DILocation(line: 310, column: 20, scope: !9024)
!9067 = !DILocation(line: 310, column: 25, scope: !9024)
!9068 = !DILocation(line: 310, column: 2, scope: !9024)
!9069 = !DILocation(line: 310, column: 10, scope: !9024)
!9070 = !DILocation(line: 310, column: 18, scope: !9024)
!9071 = !DILocation(line: 311, column: 2, scope: !9024)
!9072 = !DILocation(line: 311, column: 10, scope: !9024)
!9073 = !DILocation(line: 311, column: 18, scope: !9024)
!9074 = !DILocation(line: 312, column: 36, scope: !9024)
!9075 = !DILocation(line: 312, column: 44, scope: !9024)
!9076 = !DILocation(line: 312, column: 52, scope: !9024)
!9077 = !DILocation(line: 312, column: 19, scope: !9024)
!9078 = !DILocation(line: 312, column: 27, scope: !9024)
!9079 = !DILocation(line: 312, column: 35, scope: !9024)
!9080 = !DILocation(line: 312, column: 2, scope: !9024)
!9081 = !DILocation(line: 312, column: 10, scope: !9024)
!9082 = !DILocation(line: 312, column: 18, scope: !9024)
!9083 = !DILocation(line: 313, column: 36, scope: !9024)
!9084 = !DILocation(line: 313, column: 44, scope: !9024)
!9085 = !DILocation(line: 313, column: 52, scope: !9024)
!9086 = !DILocation(line: 313, column: 19, scope: !9024)
!9087 = !DILocation(line: 313, column: 27, scope: !9024)
!9088 = !DILocation(line: 313, column: 35, scope: !9024)
!9089 = !DILocation(line: 313, column: 2, scope: !9024)
!9090 = !DILocation(line: 313, column: 10, scope: !9024)
!9091 = !DILocation(line: 313, column: 18, scope: !9024)
!9092 = !DILocation(line: 314, column: 2, scope: !9024)
!9093 = !DILocation(line: 314, column: 10, scope: !9024)
!9094 = !DILocation(line: 314, column: 19, scope: !9024)
!9095 = !DILocation(line: 318, column: 16, scope: !9024)
!9096 = !DILocation(line: 318, column: 20, scope: !9024)
!9097 = !DILocation(line: 318, column: 24, scope: !9024)
!9098 = !DILocation(line: 318, column: 36, scope: !9024)
!9099 = !DILocation(line: 318, column: 40, scope: !9024)
!9100 = !DILocation(line: 318, column: 44, scope: !9024)
!9101 = !DILocation(line: 318, column: 9, scope: !9024)
!9102 = !DILocation(line: 318, column: 7, scope: !9024)
!9103 = !DILocation(line: 321, column: 18, scope: !9024)
!9104 = !DILocation(line: 321, column: 32, scope: !9024)
!9105 = !DILocation(line: 321, column: 37, scope: !9024)
!9106 = !DILocation(line: 321, column: 2, scope: !9024)
!9107 = !DILocation(line: 321, column: 10, scope: !9024)
!9108 = !DILocation(line: 321, column: 16, scope: !9024)
!9109 = !DILocation(line: 324, column: 8, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 324, column: 2)
!9111 = !DILocation(line: 324, column: 7, scope: !9110)
!9112 = !DILocation(line: 324, column: 12, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9110, file: !3, line: 324, column: 2)
!9114 = !DILocation(line: 324, column: 16, scope: !9113)
!9115 = !DILocation(line: 324, column: 24, scope: !9113)
!9116 = !DILocation(line: 324, column: 14, scope: !9113)
!9117 = !DILocation(line: 324, column: 2, scope: !9110)
!9118 = !DILocation(line: 326, column: 14, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 324, column: 38)
!9120 = !DILocation(line: 326, column: 17, scope: !9119)
!9121 = !DILocation(line: 326, column: 25, scope: !9119)
!9122 = !DILocation(line: 326, column: 31, scope: !9119)
!9123 = !DILocation(line: 326, column: 34, scope: !9119)
!9124 = !DILocation(line: 326, column: 3, scope: !9119)
!9125 = !DILocation(line: 327, column: 29, scope: !9119)
!9126 = !DILocation(line: 327, column: 37, scope: !9119)
!9127 = !DILocation(line: 327, column: 47, scope: !9119)
!9128 = !DILocation(line: 327, column: 54, scope: !9119)
!9129 = !DILocation(line: 327, column: 52, scope: !9119)
!9130 = !DILocation(line: 327, column: 22, scope: !9119)
!9131 = !DILocation(line: 327, column: 3, scope: !9119)
!9132 = !DILocation(line: 327, column: 11, scope: !9119)
!9133 = !DILocation(line: 327, column: 20, scope: !9119)
!9134 = !DILocation(line: 328, column: 29, scope: !9119)
!9135 = !DILocation(line: 328, column: 37, scope: !9119)
!9136 = !DILocation(line: 328, column: 47, scope: !9119)
!9137 = !DILocation(line: 328, column: 54, scope: !9119)
!9138 = !DILocation(line: 328, column: 52, scope: !9119)
!9139 = !DILocation(line: 328, column: 22, scope: !9119)
!9140 = !DILocation(line: 328, column: 3, scope: !9119)
!9141 = !DILocation(line: 328, column: 11, scope: !9119)
!9142 = !DILocation(line: 328, column: 20, scope: !9119)
!9143 = !DILocation(line: 329, column: 29, scope: !9119)
!9144 = !DILocation(line: 329, column: 37, scope: !9119)
!9145 = !DILocation(line: 329, column: 47, scope: !9119)
!9146 = !DILocation(line: 329, column: 54, scope: !9119)
!9147 = !DILocation(line: 329, column: 52, scope: !9119)
!9148 = !DILocation(line: 329, column: 22, scope: !9119)
!9149 = !DILocation(line: 329, column: 3, scope: !9119)
!9150 = !DILocation(line: 329, column: 11, scope: !9119)
!9151 = !DILocation(line: 329, column: 20, scope: !9119)
!9152 = !DILocation(line: 331, column: 29, scope: !9119)
!9153 = !DILocation(line: 331, column: 37, scope: !9119)
!9154 = !DILocation(line: 331, column: 47, scope: !9119)
!9155 = !DILocation(line: 331, column: 54, scope: !9119)
!9156 = !DILocation(line: 331, column: 52, scope: !9119)
!9157 = !DILocation(line: 331, column: 22, scope: !9119)
!9158 = !DILocation(line: 331, column: 3, scope: !9119)
!9159 = !DILocation(line: 331, column: 11, scope: !9119)
!9160 = !DILocation(line: 331, column: 20, scope: !9119)
!9161 = !DILocation(line: 332, column: 29, scope: !9119)
!9162 = !DILocation(line: 332, column: 37, scope: !9119)
!9163 = !DILocation(line: 332, column: 47, scope: !9119)
!9164 = !DILocation(line: 332, column: 54, scope: !9119)
!9165 = !DILocation(line: 332, column: 52, scope: !9119)
!9166 = !DILocation(line: 332, column: 22, scope: !9119)
!9167 = !DILocation(line: 332, column: 3, scope: !9119)
!9168 = !DILocation(line: 332, column: 11, scope: !9119)
!9169 = !DILocation(line: 332, column: 20, scope: !9119)
!9170 = !DILocation(line: 333, column: 29, scope: !9119)
!9171 = !DILocation(line: 333, column: 37, scope: !9119)
!9172 = !DILocation(line: 333, column: 47, scope: !9119)
!9173 = !DILocation(line: 333, column: 54, scope: !9119)
!9174 = !DILocation(line: 333, column: 52, scope: !9119)
!9175 = !DILocation(line: 333, column: 22, scope: !9119)
!9176 = !DILocation(line: 333, column: 3, scope: !9119)
!9177 = !DILocation(line: 333, column: 11, scope: !9119)
!9178 = !DILocation(line: 333, column: 20, scope: !9119)
!9179 = !DILocation(line: 335, column: 2, scope: !9119)
!9180 = !DILocation(line: 324, column: 34, scope: !9113)
!9181 = !DILocation(line: 324, column: 2, scope: !9113)
!9182 = distinct !{!9182, !9117, !9183}
!9183 = !DILocation(line: 335, column: 2, scope: !9110)
!9184 = !DILocation(line: 337, column: 18, scope: !9024)
!9185 = !DILocation(line: 337, column: 32, scope: !9024)
!9186 = !DILocation(line: 337, column: 37, scope: !9024)
!9187 = !DILocation(line: 337, column: 2, scope: !9024)
!9188 = !DILocation(line: 337, column: 10, scope: !9024)
!9189 = !DILocation(line: 337, column: 16, scope: !9024)
!9190 = !DILocation(line: 340, column: 17, scope: !9024)
!9191 = !DILocation(line: 340, column: 49, scope: !9024)
!9192 = !DILocation(line: 340, column: 57, scope: !9024)
!9193 = !DILocation(line: 340, column: 48, scope: !9024)
!9194 = !DILocation(line: 340, column: 2, scope: !9024)
!9195 = !DILocation(line: 340, column: 10, scope: !9024)
!9196 = !DILocation(line: 340, column: 15, scope: !9024)
!9197 = !DILocation(line: 341, column: 10, scope: !9024)
!9198 = !DILocation(line: 341, column: 18, scope: !9024)
!9199 = !DILocation(line: 341, column: 8, scope: !9024)
!9200 = !DILocation(line: 342, column: 10, scope: !9024)
!9201 = !DILocation(line: 342, column: 18, scope: !9024)
!9202 = !DILocation(line: 342, column: 8, scope: !9024)
!9203 = !DILocation(line: 346, column: 8, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 346, column: 2)
!9205 = !DILocation(line: 346, column: 7, scope: !9204)
!9206 = !DILocation(line: 346, column: 12, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 346, column: 2)
!9208 = !DILocation(line: 346, column: 16, scope: !9207)
!9209 = !DILocation(line: 346, column: 24, scope: !9207)
!9210 = !DILocation(line: 346, column: 14, scope: !9207)
!9211 = !DILocation(line: 346, column: 2, scope: !9204)
!9212 = !DILocation(line: 347, column: 25, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 346, column: 38)
!9214 = !DILocation(line: 347, column: 31, scope: !9213)
!9215 = !DILocation(line: 347, column: 35, scope: !9213)
!9216 = !DILocation(line: 347, column: 14, scope: !9213)
!9217 = !DILocation(line: 347, column: 20, scope: !9213)
!9218 = !DILocation(line: 347, column: 24, scope: !9213)
!9219 = !DILocation(line: 347, column: 3, scope: !9213)
!9220 = !DILocation(line: 347, column: 9, scope: !9213)
!9221 = !DILocation(line: 347, column: 13, scope: !9213)
!9222 = !DILocation(line: 348, column: 25, scope: !9213)
!9223 = !DILocation(line: 348, column: 31, scope: !9213)
!9224 = !DILocation(line: 348, column: 35, scope: !9213)
!9225 = !DILocation(line: 348, column: 14, scope: !9213)
!9226 = !DILocation(line: 348, column: 20, scope: !9213)
!9227 = !DILocation(line: 348, column: 24, scope: !9213)
!9228 = !DILocation(line: 348, column: 3, scope: !9213)
!9229 = !DILocation(line: 348, column: 9, scope: !9213)
!9230 = !DILocation(line: 348, column: 13, scope: !9213)
!9231 = !DILocation(line: 350, column: 14, scope: !9213)
!9232 = !DILocation(line: 350, column: 17, scope: !9213)
!9233 = !DILocation(line: 350, column: 25, scope: !9213)
!9234 = !DILocation(line: 350, column: 31, scope: !9213)
!9235 = !DILocation(line: 350, column: 38, scope: !9213)
!9236 = !DILocation(line: 350, column: 42, scope: !9213)
!9237 = !DILocation(line: 350, column: 3, scope: !9213)
!9238 = !DILocation(line: 351, column: 23, scope: !9213)
!9239 = !DILocation(line: 351, column: 29, scope: !9213)
!9240 = !DILocation(line: 351, column: 35, scope: !9213)
!9241 = !DILocation(line: 351, column: 42, scope: !9213)
!9242 = !DILocation(line: 351, column: 40, scope: !9213)
!9243 = !DILocation(line: 351, column: 16, scope: !9213)
!9244 = !DILocation(line: 351, column: 3, scope: !9213)
!9245 = !DILocation(line: 351, column: 9, scope: !9213)
!9246 = !DILocation(line: 351, column: 14, scope: !9213)
!9247 = !DILocation(line: 352, column: 23, scope: !9213)
!9248 = !DILocation(line: 352, column: 29, scope: !9213)
!9249 = !DILocation(line: 352, column: 35, scope: !9213)
!9250 = !DILocation(line: 352, column: 42, scope: !9213)
!9251 = !DILocation(line: 352, column: 40, scope: !9213)
!9252 = !DILocation(line: 352, column: 16, scope: !9213)
!9253 = !DILocation(line: 352, column: 3, scope: !9213)
!9254 = !DILocation(line: 352, column: 9, scope: !9213)
!9255 = !DILocation(line: 352, column: 14, scope: !9213)
!9256 = !DILocation(line: 353, column: 23, scope: !9213)
!9257 = !DILocation(line: 353, column: 29, scope: !9213)
!9258 = !DILocation(line: 353, column: 35, scope: !9213)
!9259 = !DILocation(line: 353, column: 42, scope: !9213)
!9260 = !DILocation(line: 353, column: 40, scope: !9213)
!9261 = !DILocation(line: 353, column: 16, scope: !9213)
!9262 = !DILocation(line: 353, column: 3, scope: !9213)
!9263 = !DILocation(line: 353, column: 9, scope: !9213)
!9264 = !DILocation(line: 353, column: 14, scope: !9213)
!9265 = !DILocation(line: 354, column: 23, scope: !9213)
!9266 = !DILocation(line: 354, column: 29, scope: !9213)
!9267 = !DILocation(line: 354, column: 35, scope: !9213)
!9268 = !DILocation(line: 354, column: 42, scope: !9213)
!9269 = !DILocation(line: 354, column: 40, scope: !9213)
!9270 = !DILocation(line: 354, column: 16, scope: !9213)
!9271 = !DILocation(line: 354, column: 3, scope: !9213)
!9272 = !DILocation(line: 354, column: 9, scope: !9213)
!9273 = !DILocation(line: 354, column: 14, scope: !9213)
!9274 = !DILocation(line: 355, column: 23, scope: !9213)
!9275 = !DILocation(line: 355, column: 29, scope: !9213)
!9276 = !DILocation(line: 355, column: 35, scope: !9213)
!9277 = !DILocation(line: 355, column: 42, scope: !9213)
!9278 = !DILocation(line: 355, column: 40, scope: !9213)
!9279 = !DILocation(line: 355, column: 16, scope: !9213)
!9280 = !DILocation(line: 355, column: 3, scope: !9213)
!9281 = !DILocation(line: 355, column: 9, scope: !9213)
!9282 = !DILocation(line: 355, column: 14, scope: !9213)
!9283 = !DILocation(line: 356, column: 23, scope: !9213)
!9284 = !DILocation(line: 356, column: 29, scope: !9213)
!9285 = !DILocation(line: 356, column: 35, scope: !9213)
!9286 = !DILocation(line: 356, column: 42, scope: !9213)
!9287 = !DILocation(line: 356, column: 40, scope: !9213)
!9288 = !DILocation(line: 356, column: 16, scope: !9213)
!9289 = !DILocation(line: 356, column: 3, scope: !9213)
!9290 = !DILocation(line: 356, column: 9, scope: !9213)
!9291 = !DILocation(line: 356, column: 14, scope: !9213)
!9292 = !DILocation(line: 358, column: 14, scope: !9213)
!9293 = !DILocation(line: 358, column: 17, scope: !9213)
!9294 = !DILocation(line: 358, column: 25, scope: !9213)
!9295 = !DILocation(line: 358, column: 31, scope: !9213)
!9296 = !DILocation(line: 358, column: 38, scope: !9213)
!9297 = !DILocation(line: 358, column: 42, scope: !9213)
!9298 = !DILocation(line: 358, column: 3, scope: !9213)
!9299 = !DILocation(line: 359, column: 23, scope: !9213)
!9300 = !DILocation(line: 359, column: 29, scope: !9213)
!9301 = !DILocation(line: 359, column: 35, scope: !9213)
!9302 = !DILocation(line: 359, column: 42, scope: !9213)
!9303 = !DILocation(line: 359, column: 40, scope: !9213)
!9304 = !DILocation(line: 359, column: 16, scope: !9213)
!9305 = !DILocation(line: 359, column: 3, scope: !9213)
!9306 = !DILocation(line: 359, column: 9, scope: !9213)
!9307 = !DILocation(line: 359, column: 14, scope: !9213)
!9308 = !DILocation(line: 360, column: 23, scope: !9213)
!9309 = !DILocation(line: 360, column: 29, scope: !9213)
!9310 = !DILocation(line: 360, column: 35, scope: !9213)
!9311 = !DILocation(line: 360, column: 42, scope: !9213)
!9312 = !DILocation(line: 360, column: 40, scope: !9213)
!9313 = !DILocation(line: 360, column: 16, scope: !9213)
!9314 = !DILocation(line: 360, column: 3, scope: !9213)
!9315 = !DILocation(line: 360, column: 9, scope: !9213)
!9316 = !DILocation(line: 360, column: 14, scope: !9213)
!9317 = !DILocation(line: 361, column: 23, scope: !9213)
!9318 = !DILocation(line: 361, column: 29, scope: !9213)
!9319 = !DILocation(line: 361, column: 35, scope: !9213)
!9320 = !DILocation(line: 361, column: 42, scope: !9213)
!9321 = !DILocation(line: 361, column: 40, scope: !9213)
!9322 = !DILocation(line: 361, column: 16, scope: !9213)
!9323 = !DILocation(line: 361, column: 3, scope: !9213)
!9324 = !DILocation(line: 361, column: 9, scope: !9213)
!9325 = !DILocation(line: 361, column: 14, scope: !9213)
!9326 = !DILocation(line: 362, column: 23, scope: !9213)
!9327 = !DILocation(line: 362, column: 29, scope: !9213)
!9328 = !DILocation(line: 362, column: 35, scope: !9213)
!9329 = !DILocation(line: 362, column: 42, scope: !9213)
!9330 = !DILocation(line: 362, column: 40, scope: !9213)
!9331 = !DILocation(line: 362, column: 16, scope: !9213)
!9332 = !DILocation(line: 362, column: 3, scope: !9213)
!9333 = !DILocation(line: 362, column: 9, scope: !9213)
!9334 = !DILocation(line: 362, column: 14, scope: !9213)
!9335 = !DILocation(line: 363, column: 23, scope: !9213)
!9336 = !DILocation(line: 363, column: 29, scope: !9213)
!9337 = !DILocation(line: 363, column: 35, scope: !9213)
!9338 = !DILocation(line: 363, column: 42, scope: !9213)
!9339 = !DILocation(line: 363, column: 40, scope: !9213)
!9340 = !DILocation(line: 363, column: 16, scope: !9213)
!9341 = !DILocation(line: 363, column: 3, scope: !9213)
!9342 = !DILocation(line: 363, column: 9, scope: !9213)
!9343 = !DILocation(line: 363, column: 14, scope: !9213)
!9344 = !DILocation(line: 364, column: 23, scope: !9213)
!9345 = !DILocation(line: 364, column: 29, scope: !9213)
!9346 = !DILocation(line: 364, column: 35, scope: !9213)
!9347 = !DILocation(line: 364, column: 42, scope: !9213)
!9348 = !DILocation(line: 364, column: 40, scope: !9213)
!9349 = !DILocation(line: 364, column: 16, scope: !9213)
!9350 = !DILocation(line: 364, column: 3, scope: !9213)
!9351 = !DILocation(line: 364, column: 9, scope: !9213)
!9352 = !DILocation(line: 364, column: 14, scope: !9213)
!9353 = !DILocation(line: 366, column: 14, scope: !9213)
!9354 = !DILocation(line: 366, column: 17, scope: !9213)
!9355 = !DILocation(line: 366, column: 25, scope: !9213)
!9356 = !DILocation(line: 366, column: 31, scope: !9213)
!9357 = !DILocation(line: 366, column: 38, scope: !9213)
!9358 = !DILocation(line: 366, column: 42, scope: !9213)
!9359 = !DILocation(line: 366, column: 3, scope: !9213)
!9360 = !DILocation(line: 367, column: 23, scope: !9213)
!9361 = !DILocation(line: 367, column: 29, scope: !9213)
!9362 = !DILocation(line: 367, column: 35, scope: !9213)
!9363 = !DILocation(line: 367, column: 42, scope: !9213)
!9364 = !DILocation(line: 367, column: 40, scope: !9213)
!9365 = !DILocation(line: 367, column: 16, scope: !9213)
!9366 = !DILocation(line: 367, column: 3, scope: !9213)
!9367 = !DILocation(line: 367, column: 9, scope: !9213)
!9368 = !DILocation(line: 367, column: 14, scope: !9213)
!9369 = !DILocation(line: 368, column: 23, scope: !9213)
!9370 = !DILocation(line: 368, column: 29, scope: !9213)
!9371 = !DILocation(line: 368, column: 35, scope: !9213)
!9372 = !DILocation(line: 368, column: 42, scope: !9213)
!9373 = !DILocation(line: 368, column: 40, scope: !9213)
!9374 = !DILocation(line: 368, column: 16, scope: !9213)
!9375 = !DILocation(line: 368, column: 3, scope: !9213)
!9376 = !DILocation(line: 368, column: 9, scope: !9213)
!9377 = !DILocation(line: 368, column: 14, scope: !9213)
!9378 = !DILocation(line: 369, column: 23, scope: !9213)
!9379 = !DILocation(line: 369, column: 29, scope: !9213)
!9380 = !DILocation(line: 369, column: 35, scope: !9213)
!9381 = !DILocation(line: 369, column: 42, scope: !9213)
!9382 = !DILocation(line: 369, column: 40, scope: !9213)
!9383 = !DILocation(line: 369, column: 16, scope: !9213)
!9384 = !DILocation(line: 369, column: 3, scope: !9213)
!9385 = !DILocation(line: 369, column: 9, scope: !9213)
!9386 = !DILocation(line: 369, column: 14, scope: !9213)
!9387 = !DILocation(line: 370, column: 23, scope: !9213)
!9388 = !DILocation(line: 370, column: 29, scope: !9213)
!9389 = !DILocation(line: 370, column: 35, scope: !9213)
!9390 = !DILocation(line: 370, column: 42, scope: !9213)
!9391 = !DILocation(line: 370, column: 40, scope: !9213)
!9392 = !DILocation(line: 370, column: 16, scope: !9213)
!9393 = !DILocation(line: 370, column: 3, scope: !9213)
!9394 = !DILocation(line: 370, column: 9, scope: !9213)
!9395 = !DILocation(line: 370, column: 14, scope: !9213)
!9396 = !DILocation(line: 371, column: 23, scope: !9213)
!9397 = !DILocation(line: 371, column: 29, scope: !9213)
!9398 = !DILocation(line: 371, column: 35, scope: !9213)
!9399 = !DILocation(line: 371, column: 42, scope: !9213)
!9400 = !DILocation(line: 371, column: 40, scope: !9213)
!9401 = !DILocation(line: 371, column: 16, scope: !9213)
!9402 = !DILocation(line: 371, column: 3, scope: !9213)
!9403 = !DILocation(line: 371, column: 9, scope: !9213)
!9404 = !DILocation(line: 371, column: 14, scope: !9213)
!9405 = !DILocation(line: 372, column: 23, scope: !9213)
!9406 = !DILocation(line: 372, column: 29, scope: !9213)
!9407 = !DILocation(line: 372, column: 35, scope: !9213)
!9408 = !DILocation(line: 372, column: 42, scope: !9213)
!9409 = !DILocation(line: 372, column: 40, scope: !9213)
!9410 = !DILocation(line: 372, column: 16, scope: !9213)
!9411 = !DILocation(line: 372, column: 3, scope: !9213)
!9412 = !DILocation(line: 372, column: 9, scope: !9213)
!9413 = !DILocation(line: 372, column: 14, scope: !9213)
!9414 = !DILocation(line: 374, column: 7, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 374, column: 7)
!9416 = !DILocation(line: 374, column: 14, scope: !9415)
!9417 = !DILocation(line: 374, column: 7, scope: !9213)
!9418 = !DILocation(line: 375, column: 15, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 374, column: 18)
!9420 = !DILocation(line: 375, column: 18, scope: !9419)
!9421 = !DILocation(line: 375, column: 26, scope: !9419)
!9422 = !DILocation(line: 375, column: 32, scope: !9419)
!9423 = !DILocation(line: 375, column: 39, scope: !9419)
!9424 = !DILocation(line: 375, column: 43, scope: !9419)
!9425 = !DILocation(line: 375, column: 4, scope: !9419)
!9426 = !DILocation(line: 376, column: 24, scope: !9419)
!9427 = !DILocation(line: 376, column: 30, scope: !9419)
!9428 = !DILocation(line: 376, column: 36, scope: !9419)
!9429 = !DILocation(line: 376, column: 43, scope: !9419)
!9430 = !DILocation(line: 376, column: 41, scope: !9419)
!9431 = !DILocation(line: 376, column: 17, scope: !9419)
!9432 = !DILocation(line: 376, column: 4, scope: !9419)
!9433 = !DILocation(line: 376, column: 10, scope: !9419)
!9434 = !DILocation(line: 376, column: 15, scope: !9419)
!9435 = !DILocation(line: 377, column: 24, scope: !9419)
!9436 = !DILocation(line: 377, column: 30, scope: !9419)
!9437 = !DILocation(line: 377, column: 36, scope: !9419)
!9438 = !DILocation(line: 377, column: 43, scope: !9419)
!9439 = !DILocation(line: 377, column: 41, scope: !9419)
!9440 = !DILocation(line: 377, column: 17, scope: !9419)
!9441 = !DILocation(line: 377, column: 4, scope: !9419)
!9442 = !DILocation(line: 377, column: 10, scope: !9419)
!9443 = !DILocation(line: 377, column: 15, scope: !9419)
!9444 = !DILocation(line: 378, column: 24, scope: !9419)
!9445 = !DILocation(line: 378, column: 30, scope: !9419)
!9446 = !DILocation(line: 378, column: 36, scope: !9419)
!9447 = !DILocation(line: 378, column: 43, scope: !9419)
!9448 = !DILocation(line: 378, column: 41, scope: !9419)
!9449 = !DILocation(line: 378, column: 17, scope: !9419)
!9450 = !DILocation(line: 378, column: 4, scope: !9419)
!9451 = !DILocation(line: 378, column: 10, scope: !9419)
!9452 = !DILocation(line: 378, column: 15, scope: !9419)
!9453 = !DILocation(line: 379, column: 24, scope: !9419)
!9454 = !DILocation(line: 379, column: 30, scope: !9419)
!9455 = !DILocation(line: 379, column: 36, scope: !9419)
!9456 = !DILocation(line: 379, column: 43, scope: !9419)
!9457 = !DILocation(line: 379, column: 41, scope: !9419)
!9458 = !DILocation(line: 379, column: 17, scope: !9419)
!9459 = !DILocation(line: 379, column: 4, scope: !9419)
!9460 = !DILocation(line: 379, column: 10, scope: !9419)
!9461 = !DILocation(line: 379, column: 15, scope: !9419)
!9462 = !DILocation(line: 380, column: 24, scope: !9419)
!9463 = !DILocation(line: 380, column: 30, scope: !9419)
!9464 = !DILocation(line: 380, column: 36, scope: !9419)
!9465 = !DILocation(line: 380, column: 43, scope: !9419)
!9466 = !DILocation(line: 380, column: 41, scope: !9419)
!9467 = !DILocation(line: 380, column: 17, scope: !9419)
!9468 = !DILocation(line: 380, column: 4, scope: !9419)
!9469 = !DILocation(line: 380, column: 10, scope: !9419)
!9470 = !DILocation(line: 380, column: 15, scope: !9419)
!9471 = !DILocation(line: 381, column: 24, scope: !9419)
!9472 = !DILocation(line: 381, column: 30, scope: !9419)
!9473 = !DILocation(line: 381, column: 36, scope: !9419)
!9474 = !DILocation(line: 381, column: 43, scope: !9419)
!9475 = !DILocation(line: 381, column: 41, scope: !9419)
!9476 = !DILocation(line: 381, column: 17, scope: !9419)
!9477 = !DILocation(line: 381, column: 4, scope: !9419)
!9478 = !DILocation(line: 381, column: 10, scope: !9419)
!9479 = !DILocation(line: 381, column: 15, scope: !9419)
!9480 = !DILocation(line: 382, column: 3, scope: !9419)
!9481 = !DILocation(line: 384, column: 7, scope: !9213)
!9482 = !DILocation(line: 385, column: 8, scope: !9213)
!9483 = !DILocation(line: 386, column: 2, scope: !9213)
!9484 = !DILocation(line: 346, column: 34, scope: !9207)
!9485 = !DILocation(line: 346, column: 2, scope: !9207)
!9486 = distinct !{!9486, !9211, !9487}
!9487 = !DILocation(line: 386, column: 2, scope: !9204)
!9488 = !DILocation(line: 388, column: 9, scope: !9024)
!9489 = !DILocation(line: 388, column: 2, scope: !9024)
!9490 = !DILocation(line: 389, column: 1, scope: !9024)
!9491 = distinct !DISubprogram(name: "_final_goal", scope: !3, file: !3, line: 228, type: !6431, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9492 = !DILocalVariable(name: "ob", arg: 1, scope: !9491, file: !3, line: 228, type: !2154)
!9493 = !DILocation(line: 228, column: 34, scope: !9491)
!9494 = !DILocalVariable(name: "bp", arg: 2, scope: !9491, file: !3, line: 228, type: !2386)
!9495 = !DILocation(line: 228, column: 49, scope: !9491)
!9496 = !DILocalVariable(name: "f", scope: !9491, file: !3, line: 230, type: !94)
!9497 = !DILocation(line: 230, column: 8, scope: !9491)
!9498 = !DILocation(line: 231, column: 6, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 231, column: 6)
!9500 = !DILocation(line: 231, column: 6, scope: !9491)
!9501 = !DILocalVariable(name: "sb", scope: !9502, file: !3, line: 232, type: !2192)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 231, column: 10)
!9503 = !DILocation(line: 232, column: 13, scope: !9502)
!9504 = !DILocation(line: 232, column: 17, scope: !9502)
!9505 = !DILocation(line: 232, column: 21, scope: !9502)
!9506 = !DILocation(line: 233, column: 9, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 233, column: 7)
!9508 = !DILocation(line: 233, column: 13, scope: !9507)
!9509 = !DILocation(line: 233, column: 22, scope: !9507)
!9510 = !DILocation(line: 233, column: 7, scope: !9502)
!9511 = !DILocation(line: 233, column: 37, scope: !9507)
!9512 = !DILocation(line: 234, column: 7, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 234, column: 7)
!9514 = !DILocation(line: 234, column: 9, scope: !9513)
!9515 = !DILocation(line: 234, column: 11, scope: !9513)
!9516 = !DILocation(line: 234, column: 7, scope: !9502)
!9517 = !DILocation(line: 235, column: 8, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 235, column: 8)
!9519 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 234, column: 15)
!9520 = !DILocation(line: 235, column: 12, scope: !9518)
!9521 = !DILocation(line: 235, column: 17, scope: !9518)
!9522 = !DILocation(line: 235, column: 8, scope: !9519)
!9523 = !DILocation(line: 235, column: 25, scope: !9518)
!9524 = !DILocation(line: 236, column: 8, scope: !9519)
!9525 = !DILocation(line: 236, column: 12, scope: !9519)
!9526 = !DILocation(line: 236, column: 22, scope: !9519)
!9527 = !DILocation(line: 236, column: 26, scope: !9519)
!9528 = !DILocation(line: 236, column: 39, scope: !9519)
!9529 = !DILocation(line: 236, column: 43, scope: !9519)
!9530 = !DILocation(line: 236, column: 53, scope: !9519)
!9531 = !DILocation(line: 236, column: 57, scope: !9519)
!9532 = !DILocation(line: 236, column: 51, scope: !9519)
!9533 = !DILocation(line: 236, column: 33, scope: !9519)
!9534 = !DILocation(line: 236, column: 31, scope: !9519)
!9535 = !DILocation(line: 236, column: 20, scope: !9519)
!9536 = !DILocation(line: 236, column: 6, scope: !9519)
!9537 = !DILocation(line: 237, column: 12, scope: !9519)
!9538 = !DILocation(line: 237, column: 8, scope: !9519)
!9539 = !DILocation(line: 237, column: 6, scope: !9519)
!9540 = !DILocation(line: 238, column: 12, scope: !9519)
!9541 = !DILocation(line: 238, column: 4, scope: !9519)
!9542 = !DILocation(line: 240, column: 2, scope: !9502)
!9543 = !DILocation(line: 241, column: 2, scope: !9491)
!9544 = !DILocation(line: 242, column: 9, scope: !9491)
!9545 = !DILocation(line: 242, column: 2, scope: !9491)
!9546 = !DILocation(line: 243, column: 1, scope: !9491)
!9547 = distinct !DISubprogram(name: "softbody_calc_forcesEx", scope: !3, file: !3, line: 2442, type: !6768, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9548 = !DILocalVariable(name: "scene", arg: 1, scope: !9547, file: !3, line: 2442, type: !2151)
!9549 = !DILocation(line: 2442, column: 43, scope: !9547)
!9550 = !DILocalVariable(name: "ob", arg: 2, scope: !9547, file: !3, line: 2442, type: !2154)
!9551 = !DILocation(line: 2442, column: 58, scope: !9547)
!9552 = !DILocalVariable(name: "forcetime", arg: 3, scope: !9547, file: !3, line: 2442, type: !94)
!9553 = !DILocation(line: 2442, column: 68, scope: !9547)
!9554 = !DILocalVariable(name: "timenow", arg: 4, scope: !9547, file: !3, line: 2442, type: !94)
!9555 = !DILocation(line: 2442, column: 85, scope: !9547)
!9556 = !DILocalVariable(name: "UNUSED_nl_flags", arg: 5, scope: !9547, file: !3, line: 2442, type: !92)
!9557 = !DILocation(line: 2442, column: 98, scope: !9547)
!9558 = !DILocalVariable(name: "sb", scope: !9547, file: !3, line: 2447, type: !2192)
!9559 = !DILocation(line: 2447, column: 12, scope: !9547)
!9560 = !DILocation(line: 2447, column: 16, scope: !9547)
!9561 = !DILocation(line: 2447, column: 20, scope: !9547)
!9562 = !DILocalVariable(name: "do_effector", scope: !9547, file: !3, line: 2449, type: !1485)
!9563 = !DILocation(line: 2449, column: 12, scope: !9547)
!9564 = !DILocalVariable(name: "fieldfactor", scope: !9547, file: !3, line: 2452, type: !94)
!9565 = !DILocation(line: 2452, column: 8, scope: !9547)
!9566 = !DILocalVariable(name: "windfactor", scope: !9547, file: !3, line: 2452, type: !94)
!9567 = !DILocation(line: 2452, column: 29, scope: !9547)
!9568 = !DILocalVariable(name: "do_deflector", scope: !9547, file: !3, line: 2453, type: !92)
!9569 = !DILocation(line: 2453, column: 8, scope: !9547)
!9570 = !DILocalVariable(name: "do_springcollision", scope: !9547, file: !3, line: 2453, type: !92)
!9571 = !DILocation(line: 2453, column: 45, scope: !9547)
!9572 = !DILocalVariable(name: "do_aero", scope: !9547, file: !3, line: 2453, type: !92)
!9573 = !DILocation(line: 2453, column: 65, scope: !9547)
!9574 = !DILocation(line: 2458, column: 41, scope: !9547)
!9575 = !DILocation(line: 2458, column: 48, scope: !9547)
!9576 = !DILocation(line: 2458, column: 16, scope: !9547)
!9577 = !DILocation(line: 2458, column: 14, scope: !9547)
!9578 = !DILocation(line: 2460, column: 21, scope: !9547)
!9579 = !DILocation(line: 2460, column: 34, scope: !9547)
!9580 = !DILocation(line: 2460, column: 38, scope: !9547)
!9581 = !DILocation(line: 2460, column: 42, scope: !9547)
!9582 = !DILocation(line: 2460, column: 51, scope: !9547)
!9583 = !DILocation(line: 2460, column: 66, scope: !9547)
!9584 = !DILocation(line: 2460, column: 69, scope: !9547)
!9585 = !DILocation(line: 2460, column: 73, scope: !9547)
!9586 = !DILocation(line: 2460, column: 82, scope: !9547)
!9587 = !DILocation(line: 0, scope: !9547)
!9588 = !DILocation(line: 2460, column: 20, scope: !9547)
!9589 = !DILocation(line: 2461, column: 12, scope: !9547)
!9590 = !DILocation(line: 2461, column: 16, scope: !9547)
!9591 = !DILocation(line: 2461, column: 11, scope: !9547)
!9592 = !DILocation(line: 2461, column: 25, scope: !9547)
!9593 = !DILocation(line: 2461, column: 29, scope: !9547)
!9594 = !DILocation(line: 2461, column: 33, scope: !9547)
!9595 = !DILocation(line: 2461, column: 42, scope: !9547)
!9596 = !DILocation(line: 2461, column: 9, scope: !9547)
!9597 = !DILocation(line: 2466, column: 6, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 2466, column: 6)
!9599 = !DILocation(line: 2466, column: 25, scope: !9598)
!9600 = !DILocation(line: 2466, column: 28, scope: !9598)
!9601 = !DILocation(line: 2466, column: 6, scope: !9547)
!9602 = !DILocation(line: 2467, column: 23, scope: !9598)
!9603 = !DILocation(line: 2467, column: 30, scope: !9598)
!9604 = !DILocation(line: 2467, column: 34, scope: !9598)
!9605 = !DILocation(line: 2467, column: 43, scope: !9598)
!9606 = !DILocation(line: 2467, column: 47, scope: !9598)
!9607 = !DILocation(line: 2467, column: 2, scope: !9598)
!9608 = !DILocation(line: 2470, column: 31, scope: !9547)
!9609 = !DILocation(line: 2470, column: 38, scope: !9547)
!9610 = !DILocation(line: 2470, column: 48, scope: !9547)
!9611 = !DILocation(line: 2470, column: 52, scope: !9547)
!9612 = !DILocation(line: 2470, column: 15, scope: !9547)
!9613 = !DILocation(line: 2470, column: 13, scope: !9547)
!9614 = !DILocation(line: 2472, column: 6, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 2472, column: 6)
!9616 = !DILocation(line: 2472, column: 6, scope: !9547)
!9617 = !DILocalVariable(name: "defforce", scope: !9618, file: !3, line: 2473, type: !376)
!9618 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2472, column: 20)
!9619 = !DILocation(line: 2473, column: 9, scope: !9618)
!9620 = !DILocation(line: 2474, column: 49, scope: !9618)
!9621 = !DILocation(line: 2474, column: 59, scope: !9618)
!9622 = !DILocation(line: 2474, column: 63, scope: !9618)
!9623 = !DILocation(line: 2474, column: 68, scope: !9618)
!9624 = !DILocation(line: 2474, column: 72, scope: !9618)
!9625 = !DILocation(line: 2474, column: 18, scope: !9618)
!9626 = !DILocation(line: 2474, column: 16, scope: !9618)
!9627 = !DILocation(line: 2475, column: 2, scope: !9618)
!9628 = !DILocation(line: 2477, column: 20, scope: !9547)
!9629 = !DILocation(line: 2477, column: 27, scope: !9547)
!9630 = !DILocation(line: 2477, column: 31, scope: !9547)
!9631 = !DILocation(line: 2477, column: 42, scope: !9547)
!9632 = !DILocation(line: 2477, column: 51, scope: !9547)
!9633 = !DILocation(line: 2477, column: 55, scope: !9547)
!9634 = !DILocation(line: 2477, column: 71, scope: !9547)
!9635 = !DILocation(line: 2477, column: 84, scope: !9547)
!9636 = !DILocation(line: 2477, column: 98, scope: !9547)
!9637 = !DILocation(line: 2477, column: 111, scope: !9547)
!9638 = !DILocation(line: 2477, column: 2, scope: !9547)
!9639 = !DILocation(line: 2480, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 2480, column: 6)
!9641 = !DILocation(line: 2480, column: 10, scope: !9640)
!9642 = !DILocation(line: 2480, column: 19, scope: !9640)
!9643 = !DILocation(line: 2480, column: 6, scope: !9547)
!9644 = !DILocation(line: 2480, column: 62, scope: !9640)
!9645 = !DILocation(line: 2480, column: 66, scope: !9640)
!9646 = !DILocation(line: 2480, column: 37, scope: !9640)
!9647 = !DILocation(line: 2483, column: 2, scope: !9547)
!9648 = !DILocation(line: 2484, column: 1, scope: !9547)
!9649 = distinct !DISubprogram(name: "sb_grav_force_scale", scope: !3, file: !3, line: 181, type: !9650, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{!94, !2154}
!9652 = !DILocalVariable(name: "UNUSED_ob", arg: 1, scope: !9649, file: !3, line: 181, type: !2154)
!9653 = !DILocation(line: 181, column: 42, scope: !9649)
!9654 = !DILocation(line: 186, column: 2, scope: !9649)
!9655 = distinct !DISubprogram(name: "scan_for_ext_spring_forces", scope: !3, file: !3, line: 1639, type: !9656, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{null, !2151, !2154, !94}
!9658 = !DILocalVariable(name: "scene", arg: 1, scope: !9655, file: !3, line: 1639, type: !2151)
!9659 = !DILocation(line: 1639, column: 47, scope: !9655)
!9660 = !DILocalVariable(name: "ob", arg: 2, scope: !9655, file: !3, line: 1639, type: !2154)
!9661 = !DILocation(line: 1639, column: 62, scope: !9655)
!9662 = !DILocalVariable(name: "timenow", arg: 3, scope: !9655, file: !3, line: 1639, type: !94)
!9663 = !DILocation(line: 1639, column: 72, scope: !9655)
!9664 = !DILocalVariable(name: "sb", scope: !9655, file: !3, line: 1641, type: !2192)
!9665 = !DILocation(line: 1641, column: 12, scope: !9655)
!9666 = !DILocation(line: 1641, column: 17, scope: !9655)
!9667 = !DILocation(line: 1641, column: 21, scope: !9655)
!9668 = !DILocalVariable(name: "do_effector", scope: !9655, file: !3, line: 1642, type: !1485)
!9669 = !DILocation(line: 1642, column: 12, scope: !9655)
!9670 = !DILocation(line: 1644, column: 32, scope: !9655)
!9671 = !DILocation(line: 1644, column: 39, scope: !9655)
!9672 = !DILocation(line: 1644, column: 49, scope: !9655)
!9673 = !DILocation(line: 1644, column: 53, scope: !9655)
!9674 = !DILocation(line: 1644, column: 16, scope: !9655)
!9675 = !DILocation(line: 1644, column: 14, scope: !9655)
!9676 = !DILocation(line: 1645, column: 30, scope: !9655)
!9677 = !DILocation(line: 1645, column: 37, scope: !9655)
!9678 = !DILocation(line: 1645, column: 41, scope: !9655)
!9679 = !DILocation(line: 1645, column: 53, scope: !9655)
!9680 = !DILocation(line: 1645, column: 57, scope: !9655)
!9681 = !DILocation(line: 1645, column: 68, scope: !9655)
!9682 = !DILocation(line: 1645, column: 2, scope: !9655)
!9683 = !DILocation(line: 1646, column: 2, scope: !9655)
!9684 = !DILocation(line: 1647, column: 1, scope: !9655)
!9685 = distinct !DISubprogram(name: "sb_detect_aabb_collisionCached", scope: !3, file: !3, line: 1018, type: !9686, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{!92, !937, !6, !525, !94}
!9688 = !DILocalVariable(name: "UNUSED_force", arg: 1, scope: !9685, file: !3, line: 1018, type: !937)
!9689 = !DILocation(line: 1018, column: 49, scope: !9685)
!9690 = !DILocalVariable(name: "UNUSED_par_layer", arg: 2, scope: !9685, file: !3, line: 1018, type: !6)
!9691 = !DILocation(line: 1018, column: 80, scope: !9685)
!9692 = !DILocalVariable(name: "vertexowner", arg: 3, scope: !9685, file: !3, line: 1018, type: !525)
!9693 = !DILocation(line: 1018, column: 114, scope: !9685)
!9694 = !DILocalVariable(name: "UNUSED_time", arg: 4, scope: !9685, file: !3, line: 1018, type: !94)
!9695 = !DILocation(line: 1018, column: 133, scope: !9685)
!9696 = !DILocalVariable(name: "ob", scope: !9685, file: !3, line: 1020, type: !2154)
!9697 = !DILocation(line: 1020, column: 10, scope: !9685)
!9698 = !DILocalVariable(name: "sb", scope: !9685, file: !3, line: 1021, type: !2192)
!9699 = !DILocation(line: 1021, column: 12, scope: !9685)
!9700 = !DILocation(line: 1021, column: 15, scope: !9685)
!9701 = !DILocation(line: 1021, column: 28, scope: !9685)
!9702 = !DILocalVariable(name: "hash", scope: !9685, file: !3, line: 1022, type: !1131)
!9703 = !DILocation(line: 1022, column: 9, scope: !9685)
!9704 = !DILocalVariable(name: "ihash", scope: !9685, file: !3, line: 1023, type: !9705)
!9705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9706, size: 64)
!9706 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !96, line: 54, baseType: !9707)
!9707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !96, line: 50, size: 192, elements: !9708)
!9708 = !{!9709, !9710, !9713}
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !9707, file: !96, line: 51, baseType: !1131, size: 64)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !9707, file: !96, line: 52, baseType: !9711, size: 64, offset: 64)
!9711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9712, size: 64)
!9712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !96, line: 52, flags: DIFlagFwdDecl)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !9707, file: !96, line: 53, baseType: !6, size: 32, offset: 128)
!9714 = !DILocation(line: 1023, column: 17, scope: !9685)
!9715 = !DILocalVariable(name: "aabbmin", scope: !9685, file: !3, line: 1024, type: !376)
!9716 = !DILocation(line: 1024, column: 9, scope: !9685)
!9717 = !DILocalVariable(name: "aabbmax", scope: !9685, file: !3, line: 1024, type: !376)
!9718 = !DILocation(line: 1024, column: 21, scope: !9685)
!9719 = !DILocalVariable(name: "deflected", scope: !9685, file: !3, line: 1025, type: !92)
!9720 = !DILocation(line: 1025, column: 6, scope: !9685)
!9721 = !DILocation(line: 1030, column: 7, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1030, column: 6)
!9723 = !DILocation(line: 1030, column: 10, scope: !9722)
!9724 = !DILocation(line: 1030, column: 19, scope: !9722)
!9725 = !DILocation(line: 1030, column: 23, scope: !9722)
!9726 = !DILocation(line: 1030, column: 27, scope: !9722)
!9727 = !DILocation(line: 1030, column: 35, scope: !9722)
!9728 = !DILocation(line: 1030, column: 6, scope: !9685)
!9729 = !DILocation(line: 1030, column: 44, scope: !9722)
!9730 = !DILocation(line: 1031, column: 13, scope: !9685)
!9731 = !DILocation(line: 1031, column: 22, scope: !9685)
!9732 = !DILocation(line: 1031, column: 26, scope: !9685)
!9733 = !DILocation(line: 1031, column: 35, scope: !9685)
!9734 = !DILocation(line: 1031, column: 2, scope: !9685)
!9735 = !DILocation(line: 1032, column: 13, scope: !9685)
!9736 = !DILocation(line: 1032, column: 22, scope: !9685)
!9737 = !DILocation(line: 1032, column: 26, scope: !9685)
!9738 = !DILocation(line: 1032, column: 35, scope: !9685)
!9739 = !DILocation(line: 1032, column: 2, scope: !9685)
!9740 = !DILocation(line: 1034, column: 10, scope: !9685)
!9741 = !DILocation(line: 1034, column: 23, scope: !9685)
!9742 = !DILocation(line: 1034, column: 29, scope: !9685)
!9743 = !DILocation(line: 1034, column: 38, scope: !9685)
!9744 = !DILocation(line: 1034, column: 8, scope: !9685)
!9745 = !DILocation(line: 1035, column: 32, scope: !9685)
!9746 = !DILocation(line: 1035, column: 10, scope: !9685)
!9747 = !DILocation(line: 1035, column: 8, scope: !9685)
!9748 = !DILocation(line: 1036, column: 2, scope: !9685)
!9749 = !DILocation(line: 1036, column: 33, scope: !9685)
!9750 = !DILocation(line: 1036, column: 10, scope: !9685)
!9751 = !DILocation(line: 1036, column: 9, scope: !9685)
!9752 = !DILocalVariable(name: "ccdm", scope: !9753, file: !3, line: 1038, type: !4663)
!9753 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1036, column: 41)
!9754 = !DILocation(line: 1038, column: 13, scope: !9753)
!9755 = !DILocation(line: 1038, column: 48, scope: !9753)
!9756 = !DILocation(line: 1038, column: 20, scope: !9753)
!9757 = !DILocation(line: 1039, column: 46, scope: !9753)
!9758 = !DILocation(line: 1039, column: 20, scope: !9753)
!9759 = !DILocation(line: 1039, column: 18, scope: !9753)
!9760 = !DILocation(line: 1041, column: 8, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 1041, column: 8)
!9762 = !DILocation(line: 1041, column: 12, scope: !9761)
!9763 = !DILocation(line: 1041, column: 15, scope: !9761)
!9764 = !DILocation(line: 1041, column: 18, scope: !9761)
!9765 = !DILocation(line: 1041, column: 22, scope: !9761)
!9766 = !DILocation(line: 1041, column: 26, scope: !9761)
!9767 = !DILocation(line: 1041, column: 8, scope: !9753)
!9768 = !DILocation(line: 1048, column: 9, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 1048, column: 9)
!9770 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 1041, column: 35)
!9771 = !DILocation(line: 1048, column: 9, scope: !9770)
!9772 = !DILocation(line: 1056, column: 11, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 1056, column: 10)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1048, column: 15)
!9775 = !DILocation(line: 1056, column: 24, scope: !9773)
!9776 = !DILocation(line: 1056, column: 30, scope: !9773)
!9777 = !DILocation(line: 1056, column: 22, scope: !9773)
!9778 = !DILocation(line: 1056, column: 40, scope: !9773)
!9779 = !DILocation(line: 1057, column: 11, scope: !9773)
!9780 = !DILocation(line: 1057, column: 24, scope: !9773)
!9781 = !DILocation(line: 1057, column: 30, scope: !9773)
!9782 = !DILocation(line: 1057, column: 22, scope: !9773)
!9783 = !DILocation(line: 1057, column: 40, scope: !9773)
!9784 = !DILocation(line: 1058, column: 11, scope: !9773)
!9785 = !DILocation(line: 1058, column: 24, scope: !9773)
!9786 = !DILocation(line: 1058, column: 30, scope: !9773)
!9787 = !DILocation(line: 1058, column: 22, scope: !9773)
!9788 = !DILocation(line: 1058, column: 40, scope: !9773)
!9789 = !DILocation(line: 1059, column: 11, scope: !9773)
!9790 = !DILocation(line: 1059, column: 24, scope: !9773)
!9791 = !DILocation(line: 1059, column: 30, scope: !9773)
!9792 = !DILocation(line: 1059, column: 22, scope: !9773)
!9793 = !DILocation(line: 1059, column: 40, scope: !9773)
!9794 = !DILocation(line: 1060, column: 11, scope: !9773)
!9795 = !DILocation(line: 1060, column: 24, scope: !9773)
!9796 = !DILocation(line: 1060, column: 30, scope: !9773)
!9797 = !DILocation(line: 1060, column: 22, scope: !9773)
!9798 = !DILocation(line: 1060, column: 40, scope: !9773)
!9799 = !DILocation(line: 1061, column: 11, scope: !9773)
!9800 = !DILocation(line: 1061, column: 24, scope: !9773)
!9801 = !DILocation(line: 1061, column: 30, scope: !9773)
!9802 = !DILocation(line: 1061, column: 22, scope: !9773)
!9803 = !DILocation(line: 1056, column: 10, scope: !9774)
!9804 = !DILocation(line: 1064, column: 30, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1062, column: 6)
!9806 = !DILocation(line: 1064, column: 7, scope: !9805)
!9807 = !DILocation(line: 1065, column: 7, scope: !9805)
!9808 = distinct !{!9808, !9748, !9809}
!9809 = !DILocation(line: 1081, column: 2, scope: !9685)
!9810 = !DILocation(line: 1070, column: 16, scope: !9774)
!9811 = !DILocation(line: 1072, column: 5, scope: !9774)
!9812 = !DILocation(line: 1075, column: 6, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1073, column: 10)
!9814 = !DILocation(line: 1076, column: 29, scope: !9813)
!9815 = !DILocation(line: 1076, column: 6, scope: !9813)
!9816 = !DILocation(line: 1077, column: 6, scope: !9813)
!9817 = !DILocation(line: 1079, column: 4, scope: !9770)
!9818 = !DILocation(line: 1080, column: 27, scope: !9753)
!9819 = !DILocation(line: 1080, column: 4, scope: !9753)
!9820 = !DILocation(line: 1082, column: 25, scope: !9685)
!9821 = !DILocation(line: 1082, column: 2, scope: !9685)
!9822 = !DILocation(line: 1083, column: 9, scope: !9685)
!9823 = !DILocation(line: 1083, column: 2, scope: !9685)
!9824 = !DILocation(line: 1084, column: 1, scope: !9685)
!9825 = distinct !DISubprogram(name: "normalize_v3", scope: !2608, file: !2608, line: 830, type: !9826, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9826 = !DISubroutineType(types: !9827)
!9827 = !{!94, !937}
!9828 = !DILocalVariable(name: "n", arg: 1, scope: !9825, file: !2608, line: 830, type: !937)
!9829 = !DILocation(line: 830, column: 34, scope: !9825)
!9830 = !DILocation(line: 832, column: 25, scope: !9825)
!9831 = !DILocation(line: 832, column: 28, scope: !9825)
!9832 = !DILocation(line: 832, column: 9, scope: !9825)
!9833 = !DILocation(line: 832, column: 2, scope: !9825)
!9834 = distinct !DISubprogram(name: "Vec3PlusStVec", scope: !3, file: !3, line: 988, type: !9835, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{null, !937, !94, !937}
!9837 = !DILocalVariable(name: "v", arg: 1, scope: !9834, file: !3, line: 988, type: !937)
!9838 = !DILocation(line: 988, column: 34, scope: !9834)
!9839 = !DILocalVariable(name: "s", arg: 2, scope: !9834, file: !3, line: 988, type: !94)
!9840 = !DILocation(line: 988, column: 43, scope: !9834)
!9841 = !DILocalVariable(name: "v1", arg: 3, scope: !9834, file: !3, line: 988, type: !937)
!9842 = !DILocation(line: 988, column: 53, scope: !9834)
!9843 = !DILocation(line: 990, column: 10, scope: !9834)
!9844 = !DILocation(line: 990, column: 12, scope: !9834)
!9845 = !DILocation(line: 990, column: 11, scope: !9834)
!9846 = !DILocation(line: 990, column: 2, scope: !9834)
!9847 = !DILocation(line: 990, column: 7, scope: !9834)
!9848 = !DILocation(line: 991, column: 10, scope: !9834)
!9849 = !DILocation(line: 991, column: 12, scope: !9834)
!9850 = !DILocation(line: 991, column: 11, scope: !9834)
!9851 = !DILocation(line: 991, column: 2, scope: !9834)
!9852 = !DILocation(line: 991, column: 7, scope: !9834)
!9853 = !DILocation(line: 992, column: 10, scope: !9834)
!9854 = !DILocation(line: 992, column: 12, scope: !9834)
!9855 = !DILocation(line: 992, column: 11, scope: !9834)
!9856 = !DILocation(line: 992, column: 2, scope: !9834)
!9857 = !DILocation(line: 992, column: 7, scope: !9834)
!9858 = !DILocation(line: 993, column: 1, scope: !9834)
!9859 = distinct !DISubprogram(name: "sb_fric_force_scale", scope: !3, file: !3, line: 189, type: !9650, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9860 = !DILocalVariable(name: "UNUSED_ob", arg: 1, scope: !9859, file: !3, line: 189, type: !2154)
!9861 = !DILocation(line: 189, column: 42, scope: !9859)
!9862 = !DILocation(line: 194, column: 2, scope: !9859)
!9863 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !2608, file: !2608, line: 309, type: !5766, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9864 = !DILocalVariable(name: "r", arg: 1, scope: !9863, file: !2608, line: 309, type: !937)
!9865 = !DILocation(line: 309, column: 32, scope: !9863)
!9866 = !DILocalVariable(name: "a", arg: 2, scope: !9863, file: !2608, line: 309, type: !2611)
!9867 = !DILocation(line: 309, column: 50, scope: !9863)
!9868 = !DILocalVariable(name: "b", arg: 3, scope: !9863, file: !2608, line: 309, type: !2611)
!9869 = !DILocation(line: 309, column: 68, scope: !9863)
!9870 = !DILocation(line: 311, column: 9, scope: !9863)
!9871 = !DILocation(line: 311, column: 16, scope: !9863)
!9872 = !DILocation(line: 311, column: 14, scope: !9863)
!9873 = !DILocation(line: 311, column: 2, scope: !9863)
!9874 = !DILocation(line: 311, column: 7, scope: !9863)
!9875 = !DILocation(line: 312, column: 9, scope: !9863)
!9876 = !DILocation(line: 312, column: 16, scope: !9863)
!9877 = !DILocation(line: 312, column: 14, scope: !9863)
!9878 = !DILocation(line: 312, column: 2, scope: !9863)
!9879 = !DILocation(line: 312, column: 7, scope: !9863)
!9880 = !DILocation(line: 313, column: 9, scope: !9863)
!9881 = !DILocation(line: 313, column: 16, scope: !9863)
!9882 = !DILocation(line: 313, column: 14, scope: !9863)
!9883 = !DILocation(line: 313, column: 2, scope: !9863)
!9884 = !DILocation(line: 313, column: 7, scope: !9863)
!9885 = !DILocation(line: 314, column: 1, scope: !9863)
!9886 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !2608, file: !2608, line: 507, type: !9887, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9887 = !DISubroutineType(types: !9888)
!9888 = !{null, !937, !2611, !94}
!9889 = !DILocalVariable(name: "r", arg: 1, scope: !9886, file: !2608, line: 507, type: !937)
!9890 = !DILocation(line: 507, column: 33, scope: !9886)
!9891 = !DILocalVariable(name: "a", arg: 2, scope: !9886, file: !2608, line: 507, type: !2611)
!9892 = !DILocation(line: 507, column: 51, scope: !9886)
!9893 = !DILocalVariable(name: "f", arg: 3, scope: !9886, file: !2608, line: 507, type: !94)
!9894 = !DILocation(line: 507, column: 63, scope: !9886)
!9895 = !DILocation(line: 509, column: 10, scope: !9886)
!9896 = !DILocation(line: 509, column: 17, scope: !9886)
!9897 = !DILocation(line: 509, column: 15, scope: !9886)
!9898 = !DILocation(line: 509, column: 2, scope: !9886)
!9899 = !DILocation(line: 509, column: 7, scope: !9886)
!9900 = !DILocation(line: 510, column: 10, scope: !9886)
!9901 = !DILocation(line: 510, column: 17, scope: !9886)
!9902 = !DILocation(line: 510, column: 15, scope: !9886)
!9903 = !DILocation(line: 510, column: 2, scope: !9886)
!9904 = !DILocation(line: 510, column: 7, scope: !9886)
!9905 = !DILocation(line: 511, column: 10, scope: !9886)
!9906 = !DILocation(line: 511, column: 17, scope: !9886)
!9907 = !DILocation(line: 511, column: 15, scope: !9886)
!9908 = !DILocation(line: 511, column: 2, scope: !9886)
!9909 = !DILocation(line: 511, column: 7, scope: !9886)
!9910 = !DILocation(line: 512, column: 1, scope: !9886)
!9911 = distinct !DISubprogram(name: "sb_deflect_face", scope: !3, file: !3, line: 2034, type: !9912, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9912 = !DISubroutineType(types: !9913)
!9913 = !{!92, !2154, !937, !937, !937, !937, !94, !937, !937}
!9914 = !DILocalVariable(name: "ob", arg: 1, scope: !9911, file: !3, line: 2034, type: !2154)
!9915 = !DILocation(line: 2034, column: 36, scope: !9911)
!9916 = !DILocalVariable(name: "actpos", arg: 2, scope: !9911, file: !3, line: 2034, type: !937)
!9917 = !DILocation(line: 2034, column: 47, scope: !9911)
!9918 = !DILocalVariable(name: "facenormal", arg: 3, scope: !9911, file: !3, line: 2034, type: !937)
!9919 = !DILocation(line: 2034, column: 62, scope: !9911)
!9920 = !DILocalVariable(name: "force", arg: 4, scope: !9911, file: !3, line: 2034, type: !937)
!9921 = !DILocation(line: 2034, column: 81, scope: !9911)
!9922 = !DILocalVariable(name: "cf", arg: 5, scope: !9911, file: !3, line: 2034, type: !937)
!9923 = !DILocation(line: 2034, column: 95, scope: !9911)
!9924 = !DILocalVariable(name: "time", arg: 6, scope: !9911, file: !3, line: 2034, type: !94)
!9925 = !DILocation(line: 2034, column: 105, scope: !9911)
!9926 = !DILocalVariable(name: "vel", arg: 7, scope: !9911, file: !3, line: 2034, type: !937)
!9927 = !DILocation(line: 2034, column: 118, scope: !9911)
!9928 = !DILocalVariable(name: "intrusion", arg: 8, scope: !9911, file: !3, line: 2034, type: !937)
!9929 = !DILocation(line: 2034, column: 130, scope: !9911)
!9930 = !DILocalVariable(name: "s_actpos", scope: !9911, file: !3, line: 2036, type: !376)
!9931 = !DILocation(line: 2036, column: 8, scope: !9911)
!9932 = !DILocalVariable(name: "deflected", scope: !9911, file: !3, line: 2037, type: !92)
!9933 = !DILocation(line: 2037, column: 6, scope: !9911)
!9934 = !DILocation(line: 2038, column: 13, scope: !9911)
!9935 = !DILocation(line: 2038, column: 23, scope: !9911)
!9936 = !DILocation(line: 2038, column: 2, scope: !9911)
!9937 = !DILocation(line: 2039, column: 46, scope: !9911)
!9938 = !DILocation(line: 2039, column: 56, scope: !9911)
!9939 = !DILocation(line: 2039, column: 68, scope: !9911)
!9940 = !DILocation(line: 2039, column: 72, scope: !9911)
!9941 = !DILocation(line: 2039, column: 79, scope: !9911)
!9942 = !DILocation(line: 2039, column: 83, scope: !9911)
!9943 = !DILocation(line: 2039, column: 88, scope: !9911)
!9944 = !DILocation(line: 2039, column: 92, scope: !9911)
!9945 = !DILocation(line: 2039, column: 98, scope: !9911)
!9946 = !DILocation(line: 2039, column: 103, scope: !9911)
!9947 = !DILocation(line: 2039, column: 13, scope: !9911)
!9948 = !DILocation(line: 2039, column: 11, scope: !9911)
!9949 = !DILocation(line: 2041, column: 9, scope: !9911)
!9950 = !DILocation(line: 2041, column: 2, scope: !9911)
!9951 = distinct !DISubprogram(name: "sb_spring_force", scope: !3, file: !3, line: 2079, type: !9952, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{null, !2154, !92, !2948, !94, !94, !92}
!9954 = !DILocalVariable(name: "ob", arg: 1, scope: !9951, file: !3, line: 2079, type: !2154)
!9955 = !DILocation(line: 2079, column: 37, scope: !9951)
!9956 = !DILocalVariable(name: "bpi", arg: 2, scope: !9951, file: !3, line: 2079, type: !92)
!9957 = !DILocation(line: 2079, column: 45, scope: !9951)
!9958 = !DILocalVariable(name: "bs", arg: 3, scope: !9951, file: !3, line: 2079, type: !2948)
!9959 = !DILocation(line: 2079, column: 62, scope: !9951)
!9960 = !DILocalVariable(name: "iks", arg: 4, scope: !9951, file: !3, line: 2079, type: !94)
!9961 = !DILocation(line: 2079, column: 72, scope: !9951)
!9962 = !DILocalVariable(name: "UNUSED_forcetime", arg: 5, scope: !9951, file: !3, line: 2079, type: !94)
!9963 = !DILocation(line: 2079, column: 83, scope: !9951)
!9964 = !DILocalVariable(name: "nl_flags", arg: 6, scope: !9951, file: !3, line: 2079, type: !92)
!9965 = !DILocation(line: 2079, column: 106, scope: !9951)
!9966 = !DILocalVariable(name: "sb", scope: !9951, file: !3, line: 2081, type: !2192)
!9967 = !DILocation(line: 2081, column: 12, scope: !9951)
!9968 = !DILocation(line: 2081, column: 16, scope: !9951)
!9969 = !DILocation(line: 2081, column: 20, scope: !9951)
!9970 = !DILocalVariable(name: "bp1", scope: !9951, file: !3, line: 2082, type: !2386)
!9971 = !DILocation(line: 2082, column: 14, scope: !9951)
!9972 = !DILocalVariable(name: "bp2", scope: !9951, file: !3, line: 2082, type: !2386)
!9973 = !DILocation(line: 2082, column: 20, scope: !9951)
!9974 = !DILocalVariable(name: "dir", scope: !9951, file: !3, line: 2084, type: !376)
!9975 = !DILocation(line: 2084, column: 8, scope: !9951)
!9976 = !DILocalVariable(name: "dvel", scope: !9951, file: !3, line: 2084, type: !376)
!9977 = !DILocation(line: 2084, column: 16, scope: !9951)
!9978 = !DILocalVariable(name: "distance", scope: !9951, file: !3, line: 2085, type: !94)
!9979 = !DILocation(line: 2085, column: 8, scope: !9951)
!9980 = !DILocalVariable(name: "forcefactor", scope: !9951, file: !3, line: 2085, type: !94)
!9981 = !DILocation(line: 2085, column: 18, scope: !9951)
!9982 = !DILocalVariable(name: "kd", scope: !9951, file: !3, line: 2085, type: !94)
!9983 = !DILocation(line: 2085, column: 31, scope: !9951)
!9984 = !DILocalVariable(name: "absvel", scope: !9951, file: !3, line: 2085, type: !94)
!9985 = !DILocation(line: 2085, column: 35, scope: !9951)
!9986 = !DILocalVariable(name: "projvel", scope: !9951, file: !3, line: 2085, type: !94)
!9987 = !DILocation(line: 2085, column: 43, scope: !9951)
!9988 = !DILocalVariable(name: "kw", scope: !9951, file: !3, line: 2085, type: !94)
!9989 = !DILocation(line: 2085, column: 52, scope: !9951)
!9990 = !DILocation(line: 2090, column: 6, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2090, column: 6)
!9992 = !DILocation(line: 2090, column: 13, scope: !9991)
!9993 = !DILocation(line: 2090, column: 17, scope: !9991)
!9994 = !DILocation(line: 2090, column: 10, scope: !9991)
!9995 = !DILocation(line: 2090, column: 6, scope: !9951)
!9996 = !DILocation(line: 2091, column: 10, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 2090, column: 21)
!9998 = !DILocation(line: 2091, column: 14, scope: !9997)
!9999 = !DILocation(line: 2091, column: 21, scope: !9997)
!10000 = !DILocation(line: 2091, column: 25, scope: !9997)
!10001 = !DILocation(line: 2091, column: 7, scope: !9997)
!10002 = !DILocation(line: 2092, column: 10, scope: !9997)
!10003 = !DILocation(line: 2092, column: 14, scope: !9997)
!10004 = !DILocation(line: 2092, column: 21, scope: !9997)
!10005 = !DILocation(line: 2092, column: 25, scope: !9997)
!10006 = !DILocation(line: 2092, column: 7, scope: !9997)
!10007 = !DILocation(line: 2097, column: 2, scope: !9997)
!10008 = !DILocation(line: 2098, column: 11, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 2098, column: 11)
!10010 = !DILocation(line: 2098, column: 18, scope: !10009)
!10011 = !DILocation(line: 2098, column: 22, scope: !10009)
!10012 = !DILocation(line: 2098, column: 15, scope: !10009)
!10013 = !DILocation(line: 2098, column: 11, scope: !9991)
!10014 = !DILocation(line: 2099, column: 10, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 2098, column: 26)
!10016 = !DILocation(line: 2099, column: 14, scope: !10015)
!10017 = !DILocation(line: 2099, column: 21, scope: !10015)
!10018 = !DILocation(line: 2099, column: 25, scope: !10015)
!10019 = !DILocation(line: 2099, column: 7, scope: !10015)
!10020 = !DILocation(line: 2100, column: 10, scope: !10015)
!10021 = !DILocation(line: 2100, column: 14, scope: !10015)
!10022 = !DILocation(line: 2100, column: 21, scope: !10015)
!10023 = !DILocation(line: 2100, column: 25, scope: !10015)
!10024 = !DILocation(line: 2100, column: 7, scope: !10015)
!10025 = !DILocation(line: 2105, column: 2, scope: !10015)
!10026 = !DILocation(line: 2109, column: 3, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 2106, column: 7)
!10028 = !DILocation(line: 2110, column: 3, scope: !10027)
!10029 = !DILocation(line: 2114, column: 14, scope: !9951)
!10030 = !DILocation(line: 2114, column: 19, scope: !9951)
!10031 = !DILocation(line: 2114, column: 24, scope: !9951)
!10032 = !DILocation(line: 2114, column: 29, scope: !9951)
!10033 = !DILocation(line: 2114, column: 34, scope: !9951)
!10034 = !DILocation(line: 2114, column: 2, scope: !9951)
!10035 = !DILocation(line: 2115, column: 26, scope: !9951)
!10036 = !DILocation(line: 2115, column: 13, scope: !9951)
!10037 = !DILocation(line: 2115, column: 11, scope: !9951)
!10038 = !DILocation(line: 2116, column: 6, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2116, column: 6)
!10040 = !DILocation(line: 2116, column: 10, scope: !10039)
!10041 = !DILocation(line: 2116, column: 16, scope: !10039)
!10042 = !DILocation(line: 2116, column: 14, scope: !10039)
!10043 = !DILocation(line: 2116, column: 6, scope: !9951)
!10044 = !DILocation(line: 2117, column: 21, scope: !10039)
!10045 = !DILocation(line: 2117, column: 25, scope: !10039)
!10046 = !DILocation(line: 2117, column: 20, scope: !10039)
!10047 = !DILocation(line: 2117, column: 14, scope: !10039)
!10048 = !DILocation(line: 2117, column: 34, scope: !10039)
!10049 = !DILocation(line: 2117, column: 8, scope: !10039)
!10050 = !DILocation(line: 2117, column: 3, scope: !10039)
!10051 = !DILocation(line: 2119, column: 21, scope: !10039)
!10052 = !DILocation(line: 2119, column: 25, scope: !10039)
!10053 = !DILocation(line: 2119, column: 20, scope: !10039)
!10054 = !DILocation(line: 2119, column: 14, scope: !10039)
!10055 = !DILocation(line: 2119, column: 32, scope: !10039)
!10056 = !DILocation(line: 2119, column: 8, scope: !10039)
!10057 = !DILocation(line: 2121, column: 6, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2121, column: 6)
!10059 = !DILocation(line: 2121, column: 10, scope: !10058)
!10060 = !DILocation(line: 2121, column: 14, scope: !10058)
!10061 = !DILocation(line: 2121, column: 6, scope: !9951)
!10062 = !DILocation(line: 2122, column: 17, scope: !10058)
!10063 = !DILocation(line: 2122, column: 21, scope: !10058)
!10064 = !DILocation(line: 2122, column: 25, scope: !10058)
!10065 = !DILocation(line: 2122, column: 20, scope: !10058)
!10066 = !DILocation(line: 2122, column: 15, scope: !10058)
!10067 = !DILocation(line: 2122, column: 3, scope: !10058)
!10068 = !DILocation(line: 2124, column: 17, scope: !10058)
!10069 = !DILocation(line: 2124, column: 15, scope: !10058)
!10070 = !DILocation(line: 2125, column: 8, scope: !9951)
!10071 = !DILocation(line: 2125, column: 13, scope: !9951)
!10072 = !DILocation(line: 2125, column: 26, scope: !9951)
!10073 = !DILocation(line: 2125, column: 31, scope: !9951)
!10074 = !DILocation(line: 2125, column: 25, scope: !9951)
!10075 = !DILocation(line: 2125, column: 44, scope: !9951)
!10076 = !DILocation(line: 2125, column: 5, scope: !9951)
!10077 = !DILocation(line: 2126, column: 7, scope: !9951)
!10078 = !DILocation(line: 2126, column: 12, scope: !9951)
!10079 = !DILocation(line: 2126, column: 10, scope: !9951)
!10080 = !DILocation(line: 2126, column: 5, scope: !9951)
!10081 = !DILocation(line: 2127, column: 7, scope: !9951)
!10082 = !DILocation(line: 2127, column: 12, scope: !9951)
!10083 = !DILocation(line: 2127, column: 10, scope: !9951)
!10084 = !DILocation(line: 2127, column: 5, scope: !9951)
!10085 = !DILocation(line: 2128, column: 10, scope: !9951)
!10086 = !DILocation(line: 2128, column: 14, scope: !9951)
!10087 = !DILocation(line: 2128, column: 2, scope: !9951)
!10088 = !DILocation(line: 2131, column: 20, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2128, column: 26)
!10090 = !DILocation(line: 2131, column: 16, scope: !10089)
!10091 = !DILocation(line: 2132, column: 4, scope: !10089)
!10092 = !DILocation(line: 2134, column: 18, scope: !10089)
!10093 = !DILocation(line: 2134, column: 22, scope: !10089)
!10094 = !DILocation(line: 2134, column: 35, scope: !10089)
!10095 = !DILocation(line: 2134, column: 34, scope: !10089)
!10096 = !DILocation(line: 2134, column: 16, scope: !10089)
!10097 = !DILocation(line: 2135, column: 4, scope: !10089)
!10098 = !DILocation(line: 2137, column: 18, scope: !10089)
!10099 = !DILocation(line: 2137, column: 22, scope: !10089)
!10100 = !DILocation(line: 2137, column: 33, scope: !10089)
!10101 = !DILocation(line: 2137, column: 37, scope: !10089)
!10102 = !DILocation(line: 2137, column: 32, scope: !10089)
!10103 = !DILocation(line: 2137, column: 49, scope: !10089)
!10104 = !DILocation(line: 2137, column: 47, scope: !10089)
!10105 = !DILocation(line: 2137, column: 16, scope: !10089)
!10106 = !DILocation(line: 2138, column: 4, scope: !10089)
!10107 = !DILocation(line: 2140, column: 4, scope: !10089)
!10108 = !DILocation(line: 2144, column: 16, scope: !9951)
!10109 = !DILocation(line: 2144, column: 21, scope: !9951)
!10110 = !DILocation(line: 2144, column: 29, scope: !9951)
!10111 = !DILocation(line: 2144, column: 33, scope: !9951)
!10112 = !DILocation(line: 2144, column: 39, scope: !9951)
!10113 = !DILocation(line: 2144, column: 37, scope: !9951)
!10114 = !DILocation(line: 2144, column: 49, scope: !9951)
!10115 = !DILocation(line: 2144, column: 48, scope: !9951)
!10116 = !DILocation(line: 2144, column: 62, scope: !9951)
!10117 = !DILocation(line: 2144, column: 2, scope: !9951)
!10118 = !DILocation(line: 2147, column: 14, scope: !9951)
!10119 = !DILocation(line: 2147, column: 20, scope: !9951)
!10120 = !DILocation(line: 2147, column: 25, scope: !9951)
!10121 = !DILocation(line: 2147, column: 30, scope: !9951)
!10122 = !DILocation(line: 2147, column: 35, scope: !9951)
!10123 = !DILocation(line: 2147, column: 2, scope: !9951)
!10124 = !DILocation(line: 2148, column: 7, scope: !9951)
!10125 = !DILocation(line: 2148, column: 11, scope: !9951)
!10126 = !DILocation(line: 2148, column: 41, scope: !9951)
!10127 = !DILocation(line: 2148, column: 21, scope: !9951)
!10128 = !DILocation(line: 2148, column: 19, scope: !9951)
!10129 = !DILocation(line: 2148, column: 5, scope: !9951)
!10130 = !DILocation(line: 2149, column: 25, scope: !9951)
!10131 = !DILocation(line: 2149, column: 12, scope: !9951)
!10132 = !DILocation(line: 2149, column: 10, scope: !9951)
!10133 = !DILocation(line: 2150, column: 21, scope: !9951)
!10134 = !DILocation(line: 2150, column: 26, scope: !9951)
!10135 = !DILocation(line: 2150, column: 12, scope: !9951)
!10136 = !DILocation(line: 2150, column: 10, scope: !9951)
!10137 = !DILocation(line: 2151, column: 12, scope: !9951)
!10138 = !DILocation(line: 2151, column: 21, scope: !9951)
!10139 = !DILocation(line: 2151, column: 19, scope: !9951)
!10140 = !DILocation(line: 2151, column: 9, scope: !9951)
!10141 = !DILocation(line: 2152, column: 16, scope: !9951)
!10142 = !DILocation(line: 2152, column: 21, scope: !9951)
!10143 = !DILocation(line: 2152, column: 29, scope: !9951)
!10144 = !DILocation(line: 2152, column: 28, scope: !9951)
!10145 = !DILocation(line: 2152, column: 33, scope: !9951)
!10146 = !DILocation(line: 2152, column: 2, scope: !9951)
!10147 = !DILocation(line: 2155, column: 6, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2155, column: 6)
!10149 = !DILocation(line: 2155, column: 15, scope: !10148)
!10150 = !DILocation(line: 2155, column: 6, scope: !9951)
!10151 = !DILocation(line: 2163, column: 7, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 2163, column: 7)
!10153 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 2155, column: 28)
!10154 = !DILocation(line: 2163, column: 12, scope: !10152)
!10155 = !DILocation(line: 2163, column: 17, scope: !10152)
!10156 = !DILocation(line: 2163, column: 7, scope: !10153)
!10157 = !DILocation(line: 2168, column: 3, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 2163, column: 33)
!10159 = !DILocation(line: 2169, column: 2, scope: !10153)
!10160 = !DILocation(line: 2170, column: 1, scope: !9951)
!10161 = distinct !DISubprogram(name: "scan_for_ext_face_forces", scope: !3, file: !3, line: 1327, type: !5057, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!10162 = !DILocalVariable(name: "ob", arg: 1, scope: !10161, file: !3, line: 1327, type: !2154)
!10163 = !DILocation(line: 1327, column: 46, scope: !10161)
!10164 = !DILocalVariable(name: "timenow", arg: 2, scope: !10161, file: !3, line: 1327, type: !94)
!10165 = !DILocation(line: 1327, column: 56, scope: !10161)
!10166 = !DILocalVariable(name: "sb", scope: !10161, file: !3, line: 1329, type: !2192)
!10167 = !DILocation(line: 1329, column: 12, scope: !10161)
!10168 = !DILocation(line: 1329, column: 17, scope: !10161)
!10169 = !DILocation(line: 1329, column: 21, scope: !10161)
!10170 = !DILocalVariable(name: "bf", scope: !10161, file: !3, line: 1330, type: !1136)
!10171 = !DILocation(line: 1330, column: 12, scope: !10161)
!10172 = !DILocalVariable(name: "a", scope: !10161, file: !3, line: 1331, type: !92)
!10173 = !DILocation(line: 1331, column: 6, scope: !10161)
!10174 = !DILocalVariable(name: "damp", scope: !10161, file: !3, line: 1332, type: !94)
!10175 = !DILocation(line: 1332, column: 8, scope: !10161)
!10176 = !DILocalVariable(name: "choke", scope: !10161, file: !3, line: 1332, type: !94)
!10177 = !DILocation(line: 1332, column: 19, scope: !10161)
!10178 = !DILocalVariable(name: "tune", scope: !10161, file: !3, line: 1333, type: !94)
!10179 = !DILocation(line: 1333, column: 8, scope: !10161)
!10180 = !DILocalVariable(name: "feedback", scope: !10161, file: !3, line: 1334, type: !376)
!10181 = !DILocation(line: 1334, column: 8, scope: !10161)
!10182 = !DILocation(line: 1336, column: 6, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 1336, column: 6)
!10184 = !DILocation(line: 1336, column: 9, scope: !10183)
!10185 = !DILocation(line: 1336, column: 12, scope: !10183)
!10186 = !DILocation(line: 1336, column: 16, scope: !10183)
!10187 = !DILocation(line: 1336, column: 25, scope: !10183)
!10188 = !DILocation(line: 1336, column: 6, scope: !10161)
!10189 = !DILocation(line: 1339, column: 8, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 1336, column: 34)
!10191 = !DILocation(line: 1339, column: 12, scope: !10190)
!10192 = !DILocation(line: 1339, column: 21, scope: !10190)
!10193 = !DILocation(line: 1339, column: 6, scope: !10190)
!10194 = !DILocation(line: 1340, column: 9, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 1340, column: 3)
!10196 = !DILocation(line: 1340, column: 8, scope: !10195)
!10197 = !DILocation(line: 1340, column: 13, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 1340, column: 3)
!10199 = !DILocation(line: 1340, column: 15, scope: !10198)
!10200 = !DILocation(line: 1340, column: 19, scope: !10198)
!10201 = !DILocation(line: 1340, column: 28, scope: !10198)
!10202 = !DILocation(line: 1340, column: 14, scope: !10198)
!10203 = !DILocation(line: 1340, column: 3, scope: !10195)
!10204 = !DILocation(line: 1341, column: 38, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1340, column: 48)
!10206 = !DILocation(line: 1341, column: 42, scope: !10205)
!10207 = !DILocation(line: 1341, column: 54, scope: !10205)
!10208 = !DILocation(line: 1341, column: 21, scope: !10205)
!10209 = !DILocation(line: 1341, column: 25, scope: !10205)
!10210 = !DILocation(line: 1341, column: 37, scope: !10205)
!10211 = !DILocation(line: 1341, column: 4, scope: !10205)
!10212 = !DILocation(line: 1341, column: 8, scope: !10205)
!10213 = !DILocation(line: 1341, column: 20, scope: !10205)
!10214 = !DILocation(line: 1343, column: 4, scope: !10205)
!10215 = !DILocation(line: 1343, column: 8, scope: !10205)
!10216 = !DILocation(line: 1343, column: 13, scope: !10205)
!10217 = !DILocation(line: 1344, column: 28, scope: !10205)
!10218 = !DILocation(line: 1344, column: 39, scope: !10205)
!10219 = !DILocation(line: 1344, column: 16, scope: !10205)
!10220 = !DILocation(line: 1344, column: 27, scope: !10205)
!10221 = !DILocation(line: 1344, column: 4, scope: !10205)
!10222 = !DILocation(line: 1344, column: 15, scope: !10205)
!10223 = !DILocation(line: 1345, column: 39, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1345, column: 8)
!10225 = !DILocation(line: 1345, column: 43, scope: !10224)
!10226 = !DILocation(line: 1345, column: 50, scope: !10224)
!10227 = !DILocation(line: 1345, column: 54, scope: !10224)
!10228 = !DILocation(line: 1345, column: 58, scope: !10224)
!10229 = !DILocation(line: 1345, column: 63, scope: !10224)
!10230 = !DILocation(line: 1345, column: 67, scope: !10224)
!10231 = !DILocation(line: 1345, column: 74, scope: !10224)
!10232 = !DILocation(line: 1345, column: 78, scope: !10224)
!10233 = !DILocation(line: 1345, column: 82, scope: !10224)
!10234 = !DILocation(line: 1345, column: 87, scope: !10224)
!10235 = !DILocation(line: 1345, column: 91, scope: !10224)
!10236 = !DILocation(line: 1345, column: 98, scope: !10224)
!10237 = !DILocation(line: 1345, column: 102, scope: !10224)
!10238 = !DILocation(line: 1345, column: 106, scope: !10224)
!10239 = !DILocation(line: 1346, column: 46, scope: !10224)
!10240 = !DILocation(line: 1346, column: 56, scope: !10224)
!10241 = !DILocation(line: 1346, column: 60, scope: !10224)
!10242 = !DILocation(line: 1346, column: 65, scope: !10224)
!10243 = !DILocation(line: 1346, column: 69, scope: !10224)
!10244 = !DILocation(line: 1345, column: 8, scope: !10224)
!10245 = !DILocation(line: 1345, column: 8, scope: !10205)
!10246 = !DILocation(line: 1348, column: 19, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 1347, column: 4)
!10248 = !DILocation(line: 1348, column: 23, scope: !10247)
!10249 = !DILocation(line: 1348, column: 30, scope: !10247)
!10250 = !DILocation(line: 1348, column: 34, scope: !10247)
!10251 = !DILocation(line: 1348, column: 38, scope: !10247)
!10252 = !DILocation(line: 1348, column: 45, scope: !10247)
!10253 = !DILocation(line: 1348, column: 51, scope: !10247)
!10254 = !DILocation(line: 1348, column: 5, scope: !10247)
!10255 = !DILocation(line: 1349, column: 19, scope: !10247)
!10256 = !DILocation(line: 1349, column: 23, scope: !10247)
!10257 = !DILocation(line: 1349, column: 30, scope: !10247)
!10258 = !DILocation(line: 1349, column: 34, scope: !10247)
!10259 = !DILocation(line: 1349, column: 38, scope: !10247)
!10260 = !DILocation(line: 1349, column: 45, scope: !10247)
!10261 = !DILocation(line: 1349, column: 51, scope: !10247)
!10262 = !DILocation(line: 1349, column: 5, scope: !10247)
!10263 = !DILocation(line: 1350, column: 19, scope: !10247)
!10264 = !DILocation(line: 1350, column: 23, scope: !10247)
!10265 = !DILocation(line: 1350, column: 30, scope: !10247)
!10266 = !DILocation(line: 1350, column: 34, scope: !10247)
!10267 = !DILocation(line: 1350, column: 38, scope: !10247)
!10268 = !DILocation(line: 1350, column: 45, scope: !10247)
!10269 = !DILocation(line: 1350, column: 51, scope: !10247)
!10270 = !DILocation(line: 1350, column: 5, scope: !10247)
!10271 = !DILocation(line: 1352, column: 5, scope: !10247)
!10272 = !DILocation(line: 1352, column: 9, scope: !10247)
!10273 = !DILocation(line: 1352, column: 14, scope: !10247)
!10274 = !DILocation(line: 1353, column: 27, scope: !10247)
!10275 = !DILocation(line: 1353, column: 33, scope: !10247)
!10276 = !DILocation(line: 1353, column: 20, scope: !10247)
!10277 = !DILocation(line: 1353, column: 13, scope: !10247)
!10278 = !DILocation(line: 1353, column: 11, scope: !10247)
!10279 = !DILocation(line: 1354, column: 4, scope: !10247)
!10280 = !DILocation(line: 1356, column: 28, scope: !10205)
!10281 = !DILocation(line: 1356, column: 39, scope: !10205)
!10282 = !DILocation(line: 1356, column: 16, scope: !10205)
!10283 = !DILocation(line: 1356, column: 27, scope: !10205)
!10284 = !DILocation(line: 1356, column: 4, scope: !10205)
!10285 = !DILocation(line: 1356, column: 15, scope: !10205)
!10286 = !DILocation(line: 1357, column: 9, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1357, column: 8)
!10288 = !DILocation(line: 1357, column: 13, scope: !10287)
!10289 = !DILocation(line: 1357, column: 8, scope: !10287)
!10290 = !DILocation(line: 1357, column: 17, scope: !10287)
!10291 = !DILocation(line: 1357, column: 52, scope: !10287)
!10292 = !DILocation(line: 1357, column: 56, scope: !10287)
!10293 = !DILocation(line: 1357, column: 63, scope: !10287)
!10294 = !DILocation(line: 1357, column: 67, scope: !10287)
!10295 = !DILocation(line: 1357, column: 71, scope: !10287)
!10296 = !DILocation(line: 1357, column: 76, scope: !10287)
!10297 = !DILocation(line: 1357, column: 80, scope: !10287)
!10298 = !DILocation(line: 1357, column: 87, scope: !10287)
!10299 = !DILocation(line: 1357, column: 91, scope: !10287)
!10300 = !DILocation(line: 1357, column: 95, scope: !10287)
!10301 = !DILocation(line: 1357, column: 100, scope: !10287)
!10302 = !DILocation(line: 1357, column: 104, scope: !10287)
!10303 = !DILocation(line: 1357, column: 111, scope: !10287)
!10304 = !DILocation(line: 1357, column: 115, scope: !10287)
!10305 = !DILocation(line: 1357, column: 119, scope: !10287)
!10306 = !DILocation(line: 1358, column: 59, scope: !10287)
!10307 = !DILocation(line: 1358, column: 69, scope: !10287)
!10308 = !DILocation(line: 1358, column: 73, scope: !10287)
!10309 = !DILocation(line: 1358, column: 78, scope: !10287)
!10310 = !DILocation(line: 1358, column: 82, scope: !10287)
!10311 = !DILocation(line: 1357, column: 21, scope: !10287)
!10312 = !DILocation(line: 1357, column: 8, scope: !10205)
!10313 = !DILocation(line: 1360, column: 19, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1359, column: 4)
!10315 = !DILocation(line: 1360, column: 23, scope: !10314)
!10316 = !DILocation(line: 1360, column: 30, scope: !10314)
!10317 = !DILocation(line: 1360, column: 34, scope: !10314)
!10318 = !DILocation(line: 1360, column: 38, scope: !10314)
!10319 = !DILocation(line: 1360, column: 45, scope: !10314)
!10320 = !DILocation(line: 1360, column: 51, scope: !10314)
!10321 = !DILocation(line: 1360, column: 5, scope: !10314)
!10322 = !DILocation(line: 1361, column: 19, scope: !10314)
!10323 = !DILocation(line: 1361, column: 23, scope: !10314)
!10324 = !DILocation(line: 1361, column: 30, scope: !10314)
!10325 = !DILocation(line: 1361, column: 34, scope: !10314)
!10326 = !DILocation(line: 1361, column: 38, scope: !10314)
!10327 = !DILocation(line: 1361, column: 45, scope: !10314)
!10328 = !DILocation(line: 1361, column: 51, scope: !10314)
!10329 = !DILocation(line: 1361, column: 5, scope: !10314)
!10330 = !DILocation(line: 1362, column: 19, scope: !10314)
!10331 = !DILocation(line: 1362, column: 23, scope: !10314)
!10332 = !DILocation(line: 1362, column: 30, scope: !10314)
!10333 = !DILocation(line: 1362, column: 34, scope: !10314)
!10334 = !DILocation(line: 1362, column: 38, scope: !10314)
!10335 = !DILocation(line: 1362, column: 45, scope: !10314)
!10336 = !DILocation(line: 1362, column: 51, scope: !10314)
!10337 = !DILocation(line: 1362, column: 5, scope: !10314)
!10338 = !DILocation(line: 1364, column: 5, scope: !10314)
!10339 = !DILocation(line: 1364, column: 9, scope: !10314)
!10340 = !DILocation(line: 1364, column: 14, scope: !10314)
!10341 = !DILocation(line: 1365, column: 27, scope: !10314)
!10342 = !DILocation(line: 1365, column: 33, scope: !10314)
!10343 = !DILocation(line: 1365, column: 20, scope: !10314)
!10344 = !DILocation(line: 1365, column: 13, scope: !10314)
!10345 = !DILocation(line: 1365, column: 11, scope: !10314)
!10346 = !DILocation(line: 1366, column: 4, scope: !10314)
!10347 = !DILocation(line: 1370, column: 10, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1370, column: 8)
!10349 = !DILocation(line: 1370, column: 14, scope: !10348)
!10350 = !DILocation(line: 1370, column: 19, scope: !10348)
!10351 = !DILocation(line: 1370, column: 35, scope: !10348)
!10352 = !DILocation(line: 1370, column: 8, scope: !10205)
!10353 = !DILocation(line: 1371, column: 5, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 1370, column: 40)
!10355 = !DILocation(line: 1371, column: 9, scope: !10354)
!10356 = !DILocation(line: 1371, column: 14, scope: !10354)
!10357 = !DILocation(line: 1372, column: 10, scope: !10354)
!10358 = !DILocation(line: 1373, column: 29, scope: !10354)
!10359 = !DILocation(line: 1373, column: 40, scope: !10354)
!10360 = !DILocation(line: 1373, column: 17, scope: !10354)
!10361 = !DILocation(line: 1373, column: 28, scope: !10354)
!10362 = !DILocation(line: 1373, column: 5, scope: !10354)
!10363 = !DILocation(line: 1373, column: 16, scope: !10354)
!10364 = !DILocation(line: 1374, column: 36, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 1374, column: 9)
!10366 = !DILocation(line: 1374, column: 40, scope: !10365)
!10367 = !DILocation(line: 1374, column: 47, scope: !10365)
!10368 = !DILocation(line: 1374, column: 51, scope: !10365)
!10369 = !DILocation(line: 1374, column: 55, scope: !10365)
!10370 = !DILocation(line: 1374, column: 60, scope: !10365)
!10371 = !DILocation(line: 1374, column: 64, scope: !10365)
!10372 = !DILocation(line: 1374, column: 71, scope: !10365)
!10373 = !DILocation(line: 1374, column: 75, scope: !10365)
!10374 = !DILocation(line: 1374, column: 79, scope: !10365)
!10375 = !DILocation(line: 1374, column: 84, scope: !10365)
!10376 = !DILocation(line: 1374, column: 88, scope: !10365)
!10377 = !DILocation(line: 1374, column: 95, scope: !10365)
!10378 = !DILocation(line: 1374, column: 99, scope: !10365)
!10379 = !DILocation(line: 1374, column: 103, scope: !10365)
!10380 = !DILocation(line: 1375, column: 13, scope: !10365)
!10381 = !DILocation(line: 1375, column: 23, scope: !10365)
!10382 = !DILocation(line: 1375, column: 27, scope: !10365)
!10383 = !DILocation(line: 1375, column: 32, scope: !10365)
!10384 = !DILocation(line: 1375, column: 36, scope: !10365)
!10385 = !DILocation(line: 1374, column: 9, scope: !10365)
!10386 = !DILocation(line: 1374, column: 9, scope: !10354)
!10387 = !DILocation(line: 1377, column: 20, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 1376, column: 5)
!10389 = !DILocation(line: 1377, column: 24, scope: !10388)
!10390 = !DILocation(line: 1377, column: 31, scope: !10388)
!10391 = !DILocation(line: 1377, column: 35, scope: !10388)
!10392 = !DILocation(line: 1377, column: 39, scope: !10388)
!10393 = !DILocation(line: 1377, column: 46, scope: !10388)
!10394 = !DILocation(line: 1377, column: 52, scope: !10388)
!10395 = !DILocation(line: 1377, column: 6, scope: !10388)
!10396 = !DILocation(line: 1378, column: 20, scope: !10388)
!10397 = !DILocation(line: 1378, column: 24, scope: !10388)
!10398 = !DILocation(line: 1378, column: 31, scope: !10388)
!10399 = !DILocation(line: 1378, column: 35, scope: !10388)
!10400 = !DILocation(line: 1378, column: 39, scope: !10388)
!10401 = !DILocation(line: 1378, column: 46, scope: !10388)
!10402 = !DILocation(line: 1378, column: 52, scope: !10388)
!10403 = !DILocation(line: 1378, column: 6, scope: !10388)
!10404 = !DILocation(line: 1379, column: 20, scope: !10388)
!10405 = !DILocation(line: 1379, column: 24, scope: !10388)
!10406 = !DILocation(line: 1379, column: 31, scope: !10388)
!10407 = !DILocation(line: 1379, column: 35, scope: !10388)
!10408 = !DILocation(line: 1379, column: 39, scope: !10388)
!10409 = !DILocation(line: 1379, column: 46, scope: !10388)
!10410 = !DILocation(line: 1379, column: 52, scope: !10388)
!10411 = !DILocation(line: 1379, column: 6, scope: !10388)
!10412 = !DILocation(line: 1381, column: 6, scope: !10388)
!10413 = !DILocation(line: 1381, column: 10, scope: !10388)
!10414 = !DILocation(line: 1381, column: 15, scope: !10388)
!10415 = !DILocation(line: 1382, column: 28, scope: !10388)
!10416 = !DILocation(line: 1382, column: 34, scope: !10388)
!10417 = !DILocation(line: 1382, column: 21, scope: !10388)
!10418 = !DILocation(line: 1382, column: 14, scope: !10388)
!10419 = !DILocation(line: 1382, column: 12, scope: !10388)
!10420 = !DILocation(line: 1383, column: 5, scope: !10388)
!10421 = !DILocation(line: 1385, column: 29, scope: !10354)
!10422 = !DILocation(line: 1385, column: 40, scope: !10354)
!10423 = !DILocation(line: 1385, column: 17, scope: !10354)
!10424 = !DILocation(line: 1385, column: 28, scope: !10354)
!10425 = !DILocation(line: 1385, column: 5, scope: !10354)
!10426 = !DILocation(line: 1385, column: 16, scope: !10354)
!10427 = !DILocation(line: 1386, column: 10, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 1386, column: 9)
!10429 = !DILocation(line: 1386, column: 14, scope: !10428)
!10430 = !DILocation(line: 1386, column: 9, scope: !10428)
!10431 = !DILocation(line: 1386, column: 18, scope: !10428)
!10432 = !DILocation(line: 1386, column: 49, scope: !10428)
!10433 = !DILocation(line: 1386, column: 53, scope: !10428)
!10434 = !DILocation(line: 1386, column: 60, scope: !10428)
!10435 = !DILocation(line: 1386, column: 64, scope: !10428)
!10436 = !DILocation(line: 1386, column: 68, scope: !10428)
!10437 = !DILocation(line: 1386, column: 73, scope: !10428)
!10438 = !DILocation(line: 1386, column: 77, scope: !10428)
!10439 = !DILocation(line: 1386, column: 84, scope: !10428)
!10440 = !DILocation(line: 1386, column: 88, scope: !10428)
!10441 = !DILocation(line: 1386, column: 92, scope: !10428)
!10442 = !DILocation(line: 1386, column: 97, scope: !10428)
!10443 = !DILocation(line: 1386, column: 101, scope: !10428)
!10444 = !DILocation(line: 1386, column: 108, scope: !10428)
!10445 = !DILocation(line: 1386, column: 112, scope: !10428)
!10446 = !DILocation(line: 1386, column: 116, scope: !10428)
!10447 = !DILocation(line: 1387, column: 56, scope: !10428)
!10448 = !DILocation(line: 1387, column: 66, scope: !10428)
!10449 = !DILocation(line: 1387, column: 70, scope: !10428)
!10450 = !DILocation(line: 1387, column: 75, scope: !10428)
!10451 = !DILocation(line: 1387, column: 79, scope: !10428)
!10452 = !DILocation(line: 1386, column: 22, scope: !10428)
!10453 = !DILocation(line: 1386, column: 9, scope: !10354)
!10454 = !DILocation(line: 1389, column: 20, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 1388, column: 5)
!10456 = !DILocation(line: 1389, column: 24, scope: !10455)
!10457 = !DILocation(line: 1389, column: 31, scope: !10455)
!10458 = !DILocation(line: 1389, column: 35, scope: !10455)
!10459 = !DILocation(line: 1389, column: 39, scope: !10455)
!10460 = !DILocation(line: 1389, column: 46, scope: !10455)
!10461 = !DILocation(line: 1389, column: 52, scope: !10455)
!10462 = !DILocation(line: 1389, column: 6, scope: !10455)
!10463 = !DILocation(line: 1390, column: 20, scope: !10455)
!10464 = !DILocation(line: 1390, column: 24, scope: !10455)
!10465 = !DILocation(line: 1390, column: 31, scope: !10455)
!10466 = !DILocation(line: 1390, column: 35, scope: !10455)
!10467 = !DILocation(line: 1390, column: 39, scope: !10455)
!10468 = !DILocation(line: 1390, column: 46, scope: !10455)
!10469 = !DILocation(line: 1390, column: 52, scope: !10455)
!10470 = !DILocation(line: 1390, column: 6, scope: !10455)
!10471 = !DILocation(line: 1391, column: 20, scope: !10455)
!10472 = !DILocation(line: 1391, column: 24, scope: !10455)
!10473 = !DILocation(line: 1391, column: 31, scope: !10455)
!10474 = !DILocation(line: 1391, column: 35, scope: !10455)
!10475 = !DILocation(line: 1391, column: 39, scope: !10455)
!10476 = !DILocation(line: 1391, column: 46, scope: !10455)
!10477 = !DILocation(line: 1391, column: 52, scope: !10455)
!10478 = !DILocation(line: 1391, column: 6, scope: !10455)
!10479 = !DILocation(line: 1393, column: 6, scope: !10455)
!10480 = !DILocation(line: 1393, column: 10, scope: !10455)
!10481 = !DILocation(line: 1393, column: 15, scope: !10455)
!10482 = !DILocation(line: 1394, column: 28, scope: !10455)
!10483 = !DILocation(line: 1394, column: 34, scope: !10455)
!10484 = !DILocation(line: 1394, column: 21, scope: !10455)
!10485 = !DILocation(line: 1394, column: 14, scope: !10455)
!10486 = !DILocation(line: 1394, column: 12, scope: !10455)
!10487 = !DILocation(line: 1395, column: 5, scope: !10455)
!10488 = !DILocation(line: 1396, column: 4, scope: !10354)
!10489 = !DILocation(line: 1398, column: 3, scope: !10205)
!10490 = !DILocation(line: 1340, column: 38, scope: !10198)
!10491 = !DILocation(line: 1340, column: 44, scope: !10198)
!10492 = !DILocation(line: 1340, column: 3, scope: !10198)
!10493 = distinct !{!10493, !10203, !10494}
!10494 = !DILocation(line: 1398, column: 3, scope: !10195)
!10495 = !DILocation(line: 1399, column: 8, scope: !10190)
!10496 = !DILocation(line: 1399, column: 12, scope: !10190)
!10497 = !DILocation(line: 1399, column: 21, scope: !10190)
!10498 = !DILocation(line: 1399, column: 6, scope: !10190)
!10499 = !DILocation(line: 1400, column: 9, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 1400, column: 3)
!10501 = !DILocation(line: 1400, column: 8, scope: !10500)
!10502 = !DILocation(line: 1400, column: 13, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 1400, column: 3)
!10504 = !DILocation(line: 1400, column: 15, scope: !10503)
!10505 = !DILocation(line: 1400, column: 19, scope: !10503)
!10506 = !DILocation(line: 1400, column: 28, scope: !10503)
!10507 = !DILocation(line: 1400, column: 14, scope: !10503)
!10508 = !DILocation(line: 1400, column: 3, scope: !10500)
!10509 = !DILocation(line: 1401, column: 10, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1401, column: 8)
!10511 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1400, column: 48)
!10512 = !DILocation(line: 1401, column: 14, scope: !10510)
!10513 = !DILocation(line: 1401, column: 19, scope: !10510)
!10514 = !DILocation(line: 1401, column: 36, scope: !10510)
!10515 = !DILocation(line: 1401, column: 41, scope: !10510)
!10516 = !DILocation(line: 1401, column: 45, scope: !10510)
!10517 = !DILocation(line: 1401, column: 50, scope: !10510)
!10518 = !DILocation(line: 1401, column: 8, scope: !10511)
!10519 = !DILocation(line: 1402, column: 40, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 1401, column: 68)
!10521 = !DILocation(line: 1402, column: 44, scope: !10520)
!10522 = !DILocation(line: 1402, column: 51, scope: !10520)
!10523 = !DILocation(line: 1402, column: 55, scope: !10520)
!10524 = !DILocation(line: 1402, column: 59, scope: !10520)
!10525 = !DILocation(line: 1402, column: 67, scope: !10520)
!10526 = !DILocation(line: 1402, column: 33, scope: !10520)
!10527 = !DILocation(line: 1402, column: 5, scope: !10520)
!10528 = !DILocation(line: 1402, column: 9, scope: !10520)
!10529 = !DILocation(line: 1402, column: 16, scope: !10520)
!10530 = !DILocation(line: 1402, column: 20, scope: !10520)
!10531 = !DILocation(line: 1402, column: 24, scope: !10520)
!10532 = !DILocation(line: 1402, column: 31, scope: !10520)
!10533 = !DILocation(line: 1403, column: 40, scope: !10520)
!10534 = !DILocation(line: 1403, column: 44, scope: !10520)
!10535 = !DILocation(line: 1403, column: 51, scope: !10520)
!10536 = !DILocation(line: 1403, column: 55, scope: !10520)
!10537 = !DILocation(line: 1403, column: 59, scope: !10520)
!10538 = !DILocation(line: 1403, column: 67, scope: !10520)
!10539 = !DILocation(line: 1403, column: 33, scope: !10520)
!10540 = !DILocation(line: 1403, column: 5, scope: !10520)
!10541 = !DILocation(line: 1403, column: 9, scope: !10520)
!10542 = !DILocation(line: 1403, column: 16, scope: !10520)
!10543 = !DILocation(line: 1403, column: 20, scope: !10520)
!10544 = !DILocation(line: 1403, column: 24, scope: !10520)
!10545 = !DILocation(line: 1403, column: 31, scope: !10520)
!10546 = !DILocation(line: 1404, column: 40, scope: !10520)
!10547 = !DILocation(line: 1404, column: 44, scope: !10520)
!10548 = !DILocation(line: 1404, column: 51, scope: !10520)
!10549 = !DILocation(line: 1404, column: 55, scope: !10520)
!10550 = !DILocation(line: 1404, column: 59, scope: !10520)
!10551 = !DILocation(line: 1404, column: 67, scope: !10520)
!10552 = !DILocation(line: 1404, column: 33, scope: !10520)
!10553 = !DILocation(line: 1404, column: 5, scope: !10520)
!10554 = !DILocation(line: 1404, column: 9, scope: !10520)
!10555 = !DILocation(line: 1404, column: 16, scope: !10520)
!10556 = !DILocation(line: 1404, column: 20, scope: !10520)
!10557 = !DILocation(line: 1404, column: 24, scope: !10520)
!10558 = !DILocation(line: 1404, column: 31, scope: !10520)
!10559 = !DILocation(line: 1405, column: 9, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1405, column: 9)
!10561 = !DILocation(line: 1405, column: 13, scope: !10560)
!10562 = !DILocation(line: 1405, column: 9, scope: !10520)
!10563 = !DILocation(line: 1406, column: 41, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 1405, column: 17)
!10565 = !DILocation(line: 1406, column: 45, scope: !10564)
!10566 = !DILocation(line: 1406, column: 52, scope: !10564)
!10567 = !DILocation(line: 1406, column: 56, scope: !10564)
!10568 = !DILocation(line: 1406, column: 60, scope: !10564)
!10569 = !DILocation(line: 1406, column: 68, scope: !10564)
!10570 = !DILocation(line: 1406, column: 34, scope: !10564)
!10571 = !DILocation(line: 1406, column: 6, scope: !10564)
!10572 = !DILocation(line: 1406, column: 10, scope: !10564)
!10573 = !DILocation(line: 1406, column: 17, scope: !10564)
!10574 = !DILocation(line: 1406, column: 21, scope: !10564)
!10575 = !DILocation(line: 1406, column: 25, scope: !10564)
!10576 = !DILocation(line: 1406, column: 32, scope: !10564)
!10577 = !DILocation(line: 1407, column: 5, scope: !10564)
!10578 = !DILocation(line: 1408, column: 4, scope: !10520)
!10579 = !DILocation(line: 1409, column: 3, scope: !10511)
!10580 = !DILocation(line: 1400, column: 38, scope: !10503)
!10581 = !DILocation(line: 1400, column: 44, scope: !10503)
!10582 = !DILocation(line: 1400, column: 3, scope: !10503)
!10583 = distinct !{!10583, !10508, !10584}
!10584 = !DILocation(line: 1409, column: 3, scope: !10500)
!10585 = !DILocation(line: 1410, column: 2, scope: !10190)
!10586 = !DILocation(line: 1411, column: 1, scope: !10161)
!10587 = distinct !DISubprogram(name: "sb_sfesf_threads_run", scope: !3, file: !3, line: 1656, type: !10588, scopeLine: 1657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!10588 = !DISubroutineType(types: !10589)
!10589 = !{null, !2151, !525, !94, !92, !10590}
!10590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10591, size: 64)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!1059}
!10593 = !DILocalVariable(name: "scene", arg: 1, scope: !10587, file: !3, line: 1656, type: !2151)
!10594 = !DILocation(line: 1656, column: 41, scope: !10587)
!10595 = !DILocalVariable(name: "ob", arg: 2, scope: !10587, file: !3, line: 1656, type: !525)
!10596 = !DILocation(line: 1656, column: 63, scope: !10587)
!10597 = !DILocalVariable(name: "timenow", arg: 3, scope: !10587, file: !3, line: 1656, type: !94)
!10598 = !DILocation(line: 1656, column: 73, scope: !10587)
!10599 = !DILocalVariable(name: "totsprings", arg: 4, scope: !10587, file: !3, line: 1656, type: !92)
!10600 = !DILocation(line: 1656, column: 86, scope: !10587)
!10601 = !DILocalVariable(name: "UNUSED_ptr_to_break_func", arg: 5, scope: !10587, file: !3, line: 1656, type: !10590)
!10602 = !DILocation(line: 1656, column: 103, scope: !10587)
!10603 = !DILocalVariable(name: "do_effector", scope: !10587, file: !3, line: 1658, type: !1485)
!10604 = !DILocation(line: 1658, column: 12, scope: !10587)
!10605 = !DILocalVariable(name: "threads", scope: !10587, file: !3, line: 1659, type: !165)
!10606 = !DILocation(line: 1659, column: 11, scope: !10587)
!10607 = !DILocalVariable(name: "sb_threads", scope: !10587, file: !3, line: 1660, type: !2146)
!10608 = !DILocation(line: 1660, column: 21, scope: !10587)
!10609 = !DILocalVariable(name: "i", scope: !10587, file: !3, line: 1661, type: !92)
!10610 = !DILocation(line: 1661, column: 6, scope: !10587)
!10611 = !DILocalVariable(name: "totthread", scope: !10587, file: !3, line: 1661, type: !92)
!10612 = !DILocation(line: 1661, column: 9, scope: !10587)
!10613 = !DILocalVariable(name: "left", scope: !10587, file: !3, line: 1661, type: !92)
!10614 = !DILocation(line: 1661, column: 20, scope: !10587)
!10615 = !DILocalVariable(name: "dec", scope: !10587, file: !3, line: 1661, type: !92)
!10616 = !DILocation(line: 1661, column: 26, scope: !10587)
!10617 = !DILocalVariable(name: "lowsprings", scope: !10587, file: !3, line: 1662, type: !92)
!10618 = !DILocation(line: 1662, column: 6, scope: !10587)
!10619 = !DILocation(line: 1664, column: 31, scope: !10587)
!10620 = !DILocation(line: 1664, column: 38, scope: !10587)
!10621 = !DILocation(line: 1664, column: 48, scope: !10587)
!10622 = !DILocation(line: 1664, column: 52, scope: !10587)
!10623 = !DILocation(line: 1664, column: 58, scope: !10587)
!10624 = !DILocation(line: 1664, column: 15, scope: !10587)
!10625 = !DILocation(line: 1664, column: 13, scope: !10587)
!10626 = !DILocation(line: 1667, column: 35, scope: !10587)
!10627 = !DILocation(line: 1667, column: 13, scope: !10587)
!10628 = !DILocation(line: 1667, column: 11, scope: !10587)
!10629 = !DILocation(line: 1669, column: 2, scope: !10587)
!10630 = !DILocation(line: 1669, column: 10, scope: !10587)
!10631 = !DILocation(line: 1669, column: 21, scope: !10587)
!10632 = !DILocation(line: 1669, column: 20, scope: !10587)
!10633 = !DILocation(line: 1669, column: 33, scope: !10587)
!10634 = !DILocation(line: 1669, column: 31, scope: !10587)
!10635 = !DILocation(line: 1669, column: 45, scope: !10587)
!10636 = !DILocation(line: 1669, column: 49, scope: !10587)
!10637 = !DILocation(line: 1669, column: 59, scope: !10587)
!10638 = !DILocation(line: 0, scope: !10587)
!10639 = !DILocation(line: 1670, column: 12, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1669, column: 65)
!10641 = distinct !{!10641, !10629, !10642}
!10642 = !DILocation(line: 1671, column: 2, scope: !10587)
!10643 = !DILocation(line: 1673, column: 14, scope: !10587)
!10644 = !DILocation(line: 1673, column: 52, scope: !10587)
!10645 = !DILocation(line: 1673, column: 51, scope: !10587)
!10646 = !DILocation(line: 1673, column: 12, scope: !10587)
!10647 = !DILocation(line: 1674, column: 9, scope: !10587)
!10648 = !DILocation(line: 1674, column: 2, scope: !10587)
!10649 = !DILocation(line: 1674, column: 50, scope: !10587)
!10650 = !DILocation(line: 1674, column: 49, scope: !10587)
!10651 = !DILocation(line: 1675, column: 9, scope: !10587)
!10652 = !DILocation(line: 1675, column: 7, scope: !10587)
!10653 = !DILocation(line: 1676, column: 8, scope: !10587)
!10654 = !DILocation(line: 1676, column: 19, scope: !10587)
!10655 = !DILocation(line: 1676, column: 18, scope: !10587)
!10656 = !DILocation(line: 1676, column: 29, scope: !10587)
!10657 = !DILocation(line: 1676, column: 6, scope: !10587)
!10658 = !DILocation(line: 1677, column: 8, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1677, column: 2)
!10660 = !DILocation(line: 1677, column: 7, scope: !10659)
!10661 = !DILocation(line: 1677, column: 12, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 1677, column: 2)
!10663 = !DILocation(line: 1677, column: 14, scope: !10662)
!10664 = !DILocation(line: 1677, column: 13, scope: !10662)
!10665 = !DILocation(line: 1677, column: 2, scope: !10659)
!10666 = !DILocation(line: 1678, column: 25, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1677, column: 30)
!10668 = !DILocation(line: 1678, column: 3, scope: !10667)
!10669 = !DILocation(line: 1678, column: 14, scope: !10667)
!10670 = !DILocation(line: 1678, column: 17, scope: !10667)
!10671 = !DILocation(line: 1678, column: 23, scope: !10667)
!10672 = !DILocation(line: 1679, column: 22, scope: !10667)
!10673 = !DILocation(line: 1679, column: 3, scope: !10667)
!10674 = !DILocation(line: 1679, column: 14, scope: !10667)
!10675 = !DILocation(line: 1679, column: 17, scope: !10667)
!10676 = !DILocation(line: 1679, column: 20, scope: !10667)
!10677 = !DILocation(line: 1680, column: 3, scope: !10667)
!10678 = !DILocation(line: 1680, column: 14, scope: !10667)
!10679 = !DILocation(line: 1680, column: 17, scope: !10667)
!10680 = !DILocation(line: 1680, column: 27, scope: !10667)
!10681 = !DILocation(line: 1681, column: 27, scope: !10667)
!10682 = !DILocation(line: 1681, column: 3, scope: !10667)
!10683 = !DILocation(line: 1681, column: 14, scope: !10667)
!10684 = !DILocation(line: 1681, column: 17, scope: !10667)
!10685 = !DILocation(line: 1681, column: 25, scope: !10667)
!10686 = !DILocation(line: 1682, column: 27, scope: !10667)
!10687 = !DILocation(line: 1682, column: 3, scope: !10667)
!10688 = !DILocation(line: 1682, column: 14, scope: !10667)
!10689 = !DILocation(line: 1682, column: 17, scope: !10667)
!10690 = !DILocation(line: 1682, column: 25, scope: !10667)
!10691 = !DILocation(line: 1683, column: 10, scope: !10667)
!10692 = !DILocation(line: 1683, column: 17, scope: !10667)
!10693 = !DILocation(line: 1683, column: 15, scope: !10667)
!10694 = !DILocation(line: 1683, column: 8, scope: !10667)
!10695 = !DILocation(line: 1684, column: 7, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 1684, column: 7)
!10697 = !DILocation(line: 1684, column: 12, scope: !10696)
!10698 = !DILocation(line: 1684, column: 7, scope: !10667)
!10699 = !DILocation(line: 1685, column: 28, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 1684, column: 16)
!10701 = !DILocation(line: 1685, column: 4, scope: !10700)
!10702 = !DILocation(line: 1685, column: 15, scope: !10700)
!10703 = !DILocation(line: 1685, column: 18, scope: !10700)
!10704 = !DILocation(line: 1685, column: 26, scope: !10700)
!10705 = !DILocation(line: 1686, column: 3, scope: !10700)
!10706 = !DILocation(line: 1688, column: 4, scope: !10696)
!10707 = !DILocation(line: 1688, column: 15, scope: !10696)
!10708 = !DILocation(line: 1688, column: 18, scope: !10696)
!10709 = !DILocation(line: 1688, column: 26, scope: !10696)
!10710 = !DILocation(line: 1689, column: 31, scope: !10667)
!10711 = !DILocation(line: 1689, column: 3, scope: !10667)
!10712 = !DILocation(line: 1689, column: 14, scope: !10667)
!10713 = !DILocation(line: 1689, column: 17, scope: !10667)
!10714 = !DILocation(line: 1689, column: 29, scope: !10667)
!10715 = !DILocation(line: 1690, column: 3, scope: !10667)
!10716 = !DILocation(line: 1690, column: 14, scope: !10667)
!10717 = !DILocation(line: 1690, column: 17, scope: !10667)
!10718 = !DILocation(line: 1690, column: 30, scope: !10667)
!10719 = !DILocation(line: 1691, column: 3, scope: !10667)
!10720 = !DILocation(line: 1691, column: 14, scope: !10667)
!10721 = !DILocation(line: 1691, column: 17, scope: !10667)
!10722 = !DILocation(line: 1691, column: 29, scope: !10667)
!10723 = !DILocation(line: 1692, column: 3, scope: !10667)
!10724 = !DILocation(line: 1692, column: 14, scope: !10667)
!10725 = !DILocation(line: 1692, column: 17, scope: !10667)
!10726 = !DILocation(line: 1692, column: 29, scope: !10667)
!10727 = !DILocation(line: 1693, column: 21, scope: !10667)
!10728 = !DILocation(line: 1693, column: 3, scope: !10667)
!10729 = !DILocation(line: 1693, column: 14, scope: !10667)
!10730 = !DILocation(line: 1693, column: 17, scope: !10667)
!10731 = !DILocation(line: 1693, column: 19, scope: !10667)
!10732 = !DILocation(line: 1694, column: 22, scope: !10667)
!10733 = !DILocation(line: 1694, column: 3, scope: !10667)
!10734 = !DILocation(line: 1694, column: 14, scope: !10667)
!10735 = !DILocation(line: 1694, column: 17, scope: !10667)
!10736 = !DILocation(line: 1694, column: 20, scope: !10667)
!10737 = !DILocation(line: 1695, column: 2, scope: !10667)
!10738 = !DILocation(line: 1677, column: 26, scope: !10662)
!10739 = !DILocation(line: 1677, column: 2, scope: !10662)
!10740 = distinct !{!10740, !10665, !10741}
!10741 = !DILocation(line: 1695, column: 2, scope: !10659)
!10742 = !DILocation(line: 1696, column: 6, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1696, column: 6)
!10744 = !DILocation(line: 1696, column: 16, scope: !10743)
!10745 = !DILocation(line: 1696, column: 6, scope: !10587)
!10746 = !DILocation(line: 1697, column: 63, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 1696, column: 21)
!10748 = !DILocation(line: 1697, column: 3, scope: !10747)
!10749 = !DILocation(line: 1699, column: 9, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 1699, column: 3)
!10751 = !DILocation(line: 1699, column: 8, scope: !10750)
!10752 = !DILocation(line: 1699, column: 13, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 1699, column: 3)
!10754 = !DILocation(line: 1699, column: 15, scope: !10753)
!10755 = !DILocation(line: 1699, column: 14, scope: !10753)
!10756 = !DILocation(line: 1699, column: 3, scope: !10750)
!10757 = !DILocation(line: 1700, column: 33, scope: !10753)
!10758 = !DILocation(line: 1700, column: 44, scope: !10753)
!10759 = !DILocation(line: 1700, column: 32, scope: !10753)
!10760 = !DILocation(line: 1700, column: 4, scope: !10753)
!10761 = !DILocation(line: 1699, column: 27, scope: !10753)
!10762 = !DILocation(line: 1699, column: 3, scope: !10753)
!10763 = distinct !{!10763, !10756, !10764}
!10764 = !DILocation(line: 1700, column: 46, scope: !10750)
!10765 = !DILocation(line: 1702, column: 3, scope: !10747)
!10766 = !DILocation(line: 1703, column: 2, scope: !10747)
!10767 = !DILocation(line: 1705, column: 36, scope: !10743)
!10768 = !DILocation(line: 1705, column: 35, scope: !10743)
!10769 = !DILocation(line: 1705, column: 3, scope: !10743)
!10770 = !DILocation(line: 1707, column: 2, scope: !10587)
!10771 = !DILocation(line: 1707, column: 12, scope: !10587)
!10772 = !DILocation(line: 1709, column: 2, scope: !10587)
!10773 = !DILocation(line: 1710, column: 1, scope: !10587)
!10774 = distinct !DISubprogram(name: "sb_cf_threads_run", scope: !3, file: !3, line: 2387, type: !10775, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!10775 = !DISubroutineType(types: !10776)
!10776 = !{null, !2151, !2154, !94, !94, !92, !10590, !1396, !92, !94, !94}
!10777 = !DILocalVariable(name: "scene", arg: 1, scope: !10774, file: !3, line: 2387, type: !2151)
!10778 = !DILocation(line: 2387, column: 38, scope: !10774)
!10779 = !DILocalVariable(name: "ob", arg: 2, scope: !10774, file: !3, line: 2387, type: !2154)
!10780 = !DILocation(line: 2387, column: 53, scope: !10774)
!10781 = !DILocalVariable(name: "forcetime", arg: 3, scope: !10774, file: !3, line: 2387, type: !94)
!10782 = !DILocation(line: 2387, column: 63, scope: !10774)
!10783 = !DILocalVariable(name: "timenow", arg: 4, scope: !10774, file: !3, line: 2387, type: !94)
!10784 = !DILocation(line: 2387, column: 80, scope: !10774)
!10785 = !DILocalVariable(name: "totpoint", arg: 5, scope: !10774, file: !3, line: 2387, type: !92)
!10786 = !DILocation(line: 2387, column: 93, scope: !10774)
!10787 = !DILocalVariable(name: "UNUSED_ptr_to_break_func", arg: 6, scope: !10774, file: !3, line: 2387, type: !10590)
!10788 = !DILocation(line: 2387, column: 108, scope: !10774)
!10789 = !DILocalVariable(name: "do_effector", arg: 7, scope: !10774, file: !3, line: 2387, type: !1396)
!10790 = !DILocation(line: 2387, column: 158, scope: !10774)
!10791 = !DILocalVariable(name: "do_deflector", arg: 8, scope: !10774, file: !3, line: 2387, type: !92)
!10792 = !DILocation(line: 2387, column: 175, scope: !10774)
!10793 = !DILocalVariable(name: "fieldfactor", arg: 9, scope: !10774, file: !3, line: 2387, type: !94)
!10794 = !DILocation(line: 2387, column: 195, scope: !10774)
!10795 = !DILocalVariable(name: "windfactor", arg: 10, scope: !10774, file: !3, line: 2387, type: !94)
!10796 = !DILocation(line: 2387, column: 214, scope: !10774)
!10797 = !DILocalVariable(name: "threads", scope: !10774, file: !3, line: 2389, type: !165)
!10798 = !DILocation(line: 2389, column: 11, scope: !10774)
!10799 = !DILocalVariable(name: "sb_threads", scope: !10774, file: !3, line: 2390, type: !2146)
!10800 = !DILocation(line: 2390, column: 21, scope: !10774)
!10801 = !DILocalVariable(name: "i", scope: !10774, file: !3, line: 2391, type: !92)
!10802 = !DILocation(line: 2391, column: 6, scope: !10774)
!10803 = !DILocalVariable(name: "totthread", scope: !10774, file: !3, line: 2391, type: !92)
!10804 = !DILocation(line: 2391, column: 9, scope: !10774)
!10805 = !DILocalVariable(name: "left", scope: !10774, file: !3, line: 2391, type: !92)
!10806 = !DILocation(line: 2391, column: 20, scope: !10774)
!10807 = !DILocalVariable(name: "dec", scope: !10774, file: !3, line: 2391, type: !92)
!10808 = !DILocation(line: 2391, column: 26, scope: !10774)
!10809 = !DILocalVariable(name: "lowpoints", scope: !10774, file: !3, line: 2392, type: !92)
!10810 = !DILocation(line: 2392, column: 6, scope: !10774)
!10811 = !DILocation(line: 2395, column: 35, scope: !10774)
!10812 = !DILocation(line: 2395, column: 13, scope: !10774)
!10813 = !DILocation(line: 2395, column: 11, scope: !10774)
!10814 = !DILocation(line: 2397, column: 2, scope: !10774)
!10815 = !DILocation(line: 2397, column: 10, scope: !10774)
!10816 = !DILocation(line: 2397, column: 19, scope: !10774)
!10817 = !DILocation(line: 2397, column: 18, scope: !10774)
!10818 = !DILocation(line: 2397, column: 31, scope: !10774)
!10819 = !DILocation(line: 2397, column: 29, scope: !10774)
!10820 = !DILocation(line: 2397, column: 42, scope: !10774)
!10821 = !DILocation(line: 2397, column: 46, scope: !10774)
!10822 = !DILocation(line: 2397, column: 56, scope: !10774)
!10823 = !DILocation(line: 0, scope: !10774)
!10824 = !DILocation(line: 2398, column: 12, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 2397, column: 62)
!10826 = distinct !{!10826, !10814, !10827}
!10827 = !DILocation(line: 2399, column: 2, scope: !10774)
!10828 = !DILocation(line: 2403, column: 14, scope: !10774)
!10829 = !DILocation(line: 2403, column: 52, scope: !10774)
!10830 = !DILocation(line: 2403, column: 51, scope: !10774)
!10831 = !DILocation(line: 2403, column: 12, scope: !10774)
!10832 = !DILocation(line: 2404, column: 9, scope: !10774)
!10833 = !DILocation(line: 2404, column: 2, scope: !10774)
!10834 = !DILocation(line: 2404, column: 50, scope: !10774)
!10835 = !DILocation(line: 2404, column: 49, scope: !10774)
!10836 = !DILocation(line: 2405, column: 9, scope: !10774)
!10837 = !DILocation(line: 2405, column: 7, scope: !10774)
!10838 = !DILocation(line: 2406, column: 8, scope: !10774)
!10839 = !DILocation(line: 2406, column: 17, scope: !10774)
!10840 = !DILocation(line: 2406, column: 16, scope: !10774)
!10841 = !DILocation(line: 2406, column: 27, scope: !10774)
!10842 = !DILocation(line: 2406, column: 6, scope: !10774)
!10843 = !DILocation(line: 2407, column: 8, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 2407, column: 2)
!10845 = !DILocation(line: 2407, column: 7, scope: !10844)
!10846 = !DILocation(line: 2407, column: 12, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 2407, column: 2)
!10848 = !DILocation(line: 2407, column: 14, scope: !10847)
!10849 = !DILocation(line: 2407, column: 13, scope: !10847)
!10850 = !DILocation(line: 2407, column: 2, scope: !10844)
!10851 = !DILocation(line: 2408, column: 25, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 2407, column: 30)
!10853 = !DILocation(line: 2408, column: 3, scope: !10852)
!10854 = !DILocation(line: 2408, column: 14, scope: !10852)
!10855 = !DILocation(line: 2408, column: 17, scope: !10852)
!10856 = !DILocation(line: 2408, column: 23, scope: !10852)
!10857 = !DILocation(line: 2409, column: 22, scope: !10852)
!10858 = !DILocation(line: 2409, column: 3, scope: !10852)
!10859 = !DILocation(line: 2409, column: 14, scope: !10852)
!10860 = !DILocation(line: 2409, column: 17, scope: !10852)
!10861 = !DILocation(line: 2409, column: 20, scope: !10852)
!10862 = !DILocation(line: 2410, column: 29, scope: !10852)
!10863 = !DILocation(line: 2410, column: 3, scope: !10852)
!10864 = !DILocation(line: 2410, column: 14, scope: !10852)
!10865 = !DILocation(line: 2410, column: 17, scope: !10852)
!10866 = !DILocation(line: 2410, column: 27, scope: !10852)
!10867 = !DILocation(line: 2411, column: 27, scope: !10852)
!10868 = !DILocation(line: 2411, column: 3, scope: !10852)
!10869 = !DILocation(line: 2411, column: 14, scope: !10852)
!10870 = !DILocation(line: 2411, column: 17, scope: !10852)
!10871 = !DILocation(line: 2411, column: 25, scope: !10852)
!10872 = !DILocation(line: 2412, column: 27, scope: !10852)
!10873 = !DILocation(line: 2412, column: 3, scope: !10852)
!10874 = !DILocation(line: 2412, column: 14, scope: !10852)
!10875 = !DILocation(line: 2412, column: 17, scope: !10852)
!10876 = !DILocation(line: 2412, column: 25, scope: !10852)
!10877 = !DILocation(line: 2413, column: 10, scope: !10852)
!10878 = !DILocation(line: 2413, column: 17, scope: !10852)
!10879 = !DILocation(line: 2413, column: 15, scope: !10852)
!10880 = !DILocation(line: 2413, column: 8, scope: !10852)
!10881 = !DILocation(line: 2414, column: 7, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2414, column: 7)
!10883 = !DILocation(line: 2414, column: 12, scope: !10882)
!10884 = !DILocation(line: 2414, column: 7, scope: !10852)
!10885 = !DILocation(line: 2415, column: 28, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2414, column: 16)
!10887 = !DILocation(line: 2415, column: 4, scope: !10886)
!10888 = !DILocation(line: 2415, column: 15, scope: !10886)
!10889 = !DILocation(line: 2415, column: 18, scope: !10886)
!10890 = !DILocation(line: 2415, column: 26, scope: !10886)
!10891 = !DILocation(line: 2416, column: 3, scope: !10886)
!10892 = !DILocation(line: 2418, column: 4, scope: !10882)
!10893 = !DILocation(line: 2418, column: 15, scope: !10882)
!10894 = !DILocation(line: 2418, column: 18, scope: !10882)
!10895 = !DILocation(line: 2418, column: 26, scope: !10882)
!10896 = !DILocation(line: 2419, column: 31, scope: !10852)
!10897 = !DILocation(line: 2419, column: 3, scope: !10852)
!10898 = !DILocation(line: 2419, column: 14, scope: !10852)
!10899 = !DILocation(line: 2419, column: 17, scope: !10852)
!10900 = !DILocation(line: 2419, column: 29, scope: !10852)
!10901 = !DILocation(line: 2420, column: 32, scope: !10852)
!10902 = !DILocation(line: 2420, column: 3, scope: !10852)
!10903 = !DILocation(line: 2420, column: 14, scope: !10852)
!10904 = !DILocation(line: 2420, column: 17, scope: !10852)
!10905 = !DILocation(line: 2420, column: 30, scope: !10852)
!10906 = !DILocation(line: 2421, column: 31, scope: !10852)
!10907 = !DILocation(line: 2421, column: 3, scope: !10852)
!10908 = !DILocation(line: 2421, column: 14, scope: !10852)
!10909 = !DILocation(line: 2421, column: 17, scope: !10852)
!10910 = !DILocation(line: 2421, column: 29, scope: !10852)
!10911 = !DILocation(line: 2422, column: 31, scope: !10852)
!10912 = !DILocation(line: 2422, column: 3, scope: !10852)
!10913 = !DILocation(line: 2422, column: 14, scope: !10852)
!10914 = !DILocation(line: 2422, column: 17, scope: !10852)
!10915 = !DILocation(line: 2422, column: 29, scope: !10852)
!10916 = !DILocation(line: 2423, column: 21, scope: !10852)
!10917 = !DILocation(line: 2423, column: 3, scope: !10852)
!10918 = !DILocation(line: 2423, column: 14, scope: !10852)
!10919 = !DILocation(line: 2423, column: 17, scope: !10852)
!10920 = !DILocation(line: 2423, column: 19, scope: !10852)
!10921 = !DILocation(line: 2424, column: 22, scope: !10852)
!10922 = !DILocation(line: 2424, column: 3, scope: !10852)
!10923 = !DILocation(line: 2424, column: 14, scope: !10852)
!10924 = !DILocation(line: 2424, column: 17, scope: !10852)
!10925 = !DILocation(line: 2424, column: 20, scope: !10852)
!10926 = !DILocation(line: 2425, column: 2, scope: !10852)
!10927 = !DILocation(line: 2407, column: 26, scope: !10847)
!10928 = !DILocation(line: 2407, column: 2, scope: !10847)
!10929 = distinct !{!10929, !10850, !10930}
!10930 = !DILocation(line: 2425, column: 2, scope: !10844)
!10931 = !DILocation(line: 2428, column: 6, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 2428, column: 6)
!10933 = !DILocation(line: 2428, column: 16, scope: !10932)
!10934 = !DILocation(line: 2428, column: 6, scope: !10774)
!10935 = !DILocation(line: 2429, column: 57, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 2428, column: 21)
!10937 = !DILocation(line: 2429, column: 3, scope: !10936)
!10938 = !DILocation(line: 2431, column: 9, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 2431, column: 3)
!10940 = !DILocation(line: 2431, column: 8, scope: !10939)
!10941 = !DILocation(line: 2431, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 2431, column: 3)
!10943 = !DILocation(line: 2431, column: 15, scope: !10942)
!10944 = !DILocation(line: 2431, column: 14, scope: !10942)
!10945 = !DILocation(line: 2431, column: 3, scope: !10939)
!10946 = !DILocation(line: 2432, column: 33, scope: !10942)
!10947 = !DILocation(line: 2432, column: 44, scope: !10942)
!10948 = !DILocation(line: 2432, column: 32, scope: !10942)
!10949 = !DILocation(line: 2432, column: 4, scope: !10942)
!10950 = !DILocation(line: 2431, column: 27, scope: !10942)
!10951 = !DILocation(line: 2431, column: 3, scope: !10942)
!10952 = distinct !{!10952, !10945, !10953}
!10953 = !DILocation(line: 2432, column: 46, scope: !10939)
!10954 = !DILocation(line: 2434, column: 3, scope: !10936)
!10955 = !DILocation(line: 2435, column: 2, scope: !10936)
!10956 = !DILocation(line: 2437, column: 30, scope: !10932)
!10957 = !DILocation(line: 2437, column: 29, scope: !10932)
!10958 = !DILocation(line: 2437, column: 3, scope: !10932)
!10959 = !DILocation(line: 2439, column: 2, scope: !10774)
!10960 = !DILocation(line: 2439, column: 12, scope: !10774)
!10961 = !DILocation(line: 2440, column: 1, scope: !10774)
!10962 = distinct !DISubprogram(name: "exec_scan_for_ext_spring_forces", scope: !3, file: !3, line: 1649, type: !10963, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{!93, !93}
!10965 = !DILocalVariable(name: "data", arg: 1, scope: !10962, file: !3, line: 1649, type: !93)
!10966 = !DILocation(line: 1649, column: 52, scope: !10962)
!10967 = !DILocalVariable(name: "pctx", scope: !10962, file: !3, line: 1651, type: !2146)
!10968 = !DILocation(line: 1651, column: 21, scope: !10962)
!10969 = !DILocation(line: 1651, column: 48, scope: !10962)
!10970 = !DILocation(line: 1651, column: 28, scope: !10962)
!10971 = !DILocation(line: 1652, column: 30, scope: !10962)
!10972 = !DILocation(line: 1652, column: 36, scope: !10962)
!10973 = !DILocation(line: 1652, column: 43, scope: !10962)
!10974 = !DILocation(line: 1652, column: 49, scope: !10962)
!10975 = !DILocation(line: 1652, column: 53, scope: !10962)
!10976 = !DILocation(line: 1652, column: 59, scope: !10962)
!10977 = !DILocation(line: 1652, column: 68, scope: !10962)
!10978 = !DILocation(line: 1652, column: 74, scope: !10962)
!10979 = !DILocation(line: 1652, column: 82, scope: !10962)
!10980 = !DILocation(line: 1652, column: 88, scope: !10962)
!10981 = !DILocation(line: 1652, column: 95, scope: !10962)
!10982 = !DILocation(line: 1652, column: 101, scope: !10962)
!10983 = !DILocation(line: 1652, column: 2, scope: !10962)
!10984 = !DILocation(line: 1653, column: 2, scope: !10962)
!10985 = distinct !DISubprogram(name: "_scan_for_ext_spring_forces", scope: !3, file: !3, line: 1565, type: !10986, scopeLine: 1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{null, !2151, !2154, !94, !92, !92, !1396}
!10988 = !DILocalVariable(name: "scene", arg: 1, scope: !10985, file: !3, line: 1565, type: !2151)
!10989 = !DILocation(line: 1565, column: 48, scope: !10985)
!10990 = !DILocalVariable(name: "ob", arg: 2, scope: !10985, file: !3, line: 1565, type: !2154)
!10991 = !DILocation(line: 1565, column: 63, scope: !10985)
!10992 = !DILocalVariable(name: "timenow", arg: 3, scope: !10985, file: !3, line: 1565, type: !94)
!10993 = !DILocation(line: 1565, column: 73, scope: !10985)
!10994 = !DILocalVariable(name: "ifirst", arg: 4, scope: !10985, file: !3, line: 1565, type: !92)
!10995 = !DILocation(line: 1565, column: 86, scope: !10985)
!10996 = !DILocalVariable(name: "ilast", arg: 5, scope: !10985, file: !3, line: 1565, type: !92)
!10997 = !DILocation(line: 1565, column: 98, scope: !10985)
!10998 = !DILocalVariable(name: "do_effector", arg: 6, scope: !10985, file: !3, line: 1565, type: !1396)
!10999 = !DILocation(line: 1565, column: 122, scope: !10985)
!11000 = !DILocalVariable(name: "sb", scope: !10985, file: !3, line: 1567, type: !2192)
!11001 = !DILocation(line: 1567, column: 12, scope: !10985)
!11002 = !DILocation(line: 1567, column: 17, scope: !10985)
!11003 = !DILocation(line: 1567, column: 21, scope: !10985)
!11004 = !DILocalVariable(name: "a", scope: !10985, file: !3, line: 1568, type: !92)
!11005 = !DILocation(line: 1568, column: 6, scope: !10985)
!11006 = !DILocalVariable(name: "damp", scope: !10985, file: !3, line: 1569, type: !94)
!11007 = !DILocation(line: 1569, column: 8, scope: !10985)
!11008 = !DILocalVariable(name: "feedback", scope: !10985, file: !3, line: 1570, type: !376)
!11009 = !DILocation(line: 1570, column: 8, scope: !10985)
!11010 = !DILocation(line: 1572, column: 6, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 1572, column: 6)
!11012 = !DILocation(line: 1572, column: 9, scope: !11011)
!11013 = !DILocation(line: 1572, column: 12, scope: !11011)
!11014 = !DILocation(line: 1572, column: 16, scope: !11011)
!11015 = !DILocation(line: 1572, column: 6, scope: !10985)
!11016 = !DILocation(line: 1573, column: 10, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1573, column: 3)
!11018 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 1572, column: 27)
!11019 = !DILocation(line: 1573, column: 9, scope: !11017)
!11020 = !DILocation(line: 1573, column: 8, scope: !11017)
!11021 = !DILocation(line: 1573, column: 18, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 1573, column: 3)
!11023 = !DILocation(line: 1573, column: 20, scope: !11022)
!11024 = !DILocation(line: 1573, column: 19, scope: !11022)
!11025 = !DILocation(line: 1573, column: 3, scope: !11017)
!11026 = !DILocalVariable(name: "bs", scope: !11027, file: !3, line: 1574, type: !2948)
!11027 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 1573, column: 32)
!11028 = !DILocation(line: 1574, column: 16, scope: !11027)
!11029 = !DILocation(line: 1574, column: 22, scope: !11027)
!11030 = !DILocation(line: 1574, column: 26, scope: !11027)
!11031 = !DILocation(line: 1574, column: 34, scope: !11027)
!11032 = !DILocation(line: 1575, column: 38, scope: !11027)
!11033 = !DILocation(line: 1575, column: 42, scope: !11027)
!11034 = !DILocation(line: 1575, column: 54, scope: !11027)
!11035 = !DILocation(line: 1575, column: 21, scope: !11027)
!11036 = !DILocation(line: 1575, column: 25, scope: !11027)
!11037 = !DILocation(line: 1575, column: 37, scope: !11027)
!11038 = !DILocation(line: 1575, column: 4, scope: !11027)
!11039 = !DILocation(line: 1575, column: 8, scope: !11027)
!11040 = !DILocation(line: 1575, column: 20, scope: !11027)
!11041 = !DILocation(line: 1576, column: 28, scope: !11027)
!11042 = !DILocation(line: 1576, column: 39, scope: !11027)
!11043 = !DILocation(line: 1576, column: 16, scope: !11027)
!11044 = !DILocation(line: 1576, column: 27, scope: !11027)
!11045 = !DILocation(line: 1576, column: 4, scope: !11027)
!11046 = !DILocation(line: 1576, column: 15, scope: !11027)
!11047 = !DILocation(line: 1577, column: 4, scope: !11027)
!11048 = !DILocation(line: 1577, column: 8, scope: !11027)
!11049 = !DILocation(line: 1577, column: 13, scope: !11027)
!11050 = !DILocation(line: 1579, column: 8, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 1579, column: 8)
!11052 = !DILocation(line: 1579, column: 12, scope: !11051)
!11053 = !DILocation(line: 1579, column: 23, scope: !11051)
!11054 = !DILocation(line: 1579, column: 8, scope: !11027)
!11055 = !DILocation(line: 1581, column: 9, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 1581, column: 9)
!11057 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 1579, column: 35)
!11058 = !DILocation(line: 1581, column: 13, scope: !11056)
!11059 = !DILocation(line: 1581, column: 22, scope: !11056)
!11060 = !DILocation(line: 1581, column: 9, scope: !11057)
!11061 = !DILocation(line: 1582, column: 43, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 1582, column: 11)
!11063 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 1581, column: 40)
!11064 = !DILocation(line: 1582, column: 47, scope: !11062)
!11065 = !DILocation(line: 1582, column: 54, scope: !11062)
!11066 = !DILocation(line: 1582, column: 58, scope: !11062)
!11067 = !DILocation(line: 1582, column: 62, scope: !11062)
!11068 = !DILocation(line: 1582, column: 67, scope: !11062)
!11069 = !DILocation(line: 1582, column: 71, scope: !11062)
!11070 = !DILocation(line: 1582, column: 78, scope: !11062)
!11071 = !DILocation(line: 1582, column: 82, scope: !11062)
!11072 = !DILocation(line: 1582, column: 86, scope: !11062)
!11073 = !DILocation(line: 1583, column: 14, scope: !11062)
!11074 = !DILocation(line: 1583, column: 24, scope: !11062)
!11075 = !DILocation(line: 1583, column: 28, scope: !11062)
!11076 = !DILocation(line: 1583, column: 33, scope: !11062)
!11077 = !DILocation(line: 1583, column: 37, scope: !11062)
!11078 = !DILocation(line: 1582, column: 11, scope: !11062)
!11079 = !DILocation(line: 1582, column: 11, scope: !11063)
!11080 = !DILocation(line: 1584, column: 18, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 1583, column: 47)
!11082 = !DILocation(line: 1584, column: 22, scope: !11081)
!11083 = !DILocation(line: 1584, column: 33, scope: !11081)
!11084 = !DILocation(line: 1584, column: 8, scope: !11081)
!11085 = !DILocation(line: 1585, column: 8, scope: !11081)
!11086 = !DILocation(line: 1585, column: 12, scope: !11081)
!11087 = !DILocation(line: 1585, column: 17, scope: !11081)
!11088 = !DILocation(line: 1587, column: 15, scope: !11081)
!11089 = !DILocation(line: 1587, column: 19, scope: !11081)
!11090 = !DILocation(line: 1587, column: 24, scope: !11081)
!11091 = !DILocation(line: 1587, column: 8, scope: !11081)
!11092 = !DILocation(line: 1587, column: 12, scope: !11081)
!11093 = !DILocation(line: 1587, column: 14, scope: !11081)
!11094 = !DILocation(line: 1589, column: 6, scope: !11081)
!11095 = !DILocation(line: 1590, column: 5, scope: !11063)
!11096 = !DILocation(line: 1595, column: 9, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 1595, column: 9)
!11098 = !DILocation(line: 1595, column: 13, scope: !11097)
!11099 = !DILocation(line: 1595, column: 9, scope: !11057)
!11100 = !DILocalVariable(name: "vel", scope: !11101, file: !3, line: 1596, type: !376)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 1595, column: 23)
!11102 = !DILocation(line: 1596, column: 12, scope: !11101)
!11103 = !DILocalVariable(name: "sp", scope: !11101, file: !3, line: 1596, type: !376)
!11104 = !DILocation(line: 1596, column: 20, scope: !11101)
!11105 = !DILocalVariable(name: "pr", scope: !11101, file: !3, line: 1596, type: !376)
!11106 = !DILocation(line: 1596, column: 27, scope: !11101)
!11107 = !DILocalVariable(name: "force", scope: !11101, file: !3, line: 1596, type: !376)
!11108 = !DILocation(line: 1596, column: 34, scope: !11101)
!11109 = !DILocalVariable(name: "f", scope: !11101, file: !3, line: 1597, type: !94)
!11110 = !DILocation(line: 1597, column: 12, scope: !11101)
!11111 = !DILocalVariable(name: "windfactor", scope: !11101, file: !3, line: 1597, type: !94)
!11112 = !DILocation(line: 1597, column: 15, scope: !11101)
!11113 = !DILocation(line: 1599, column: 10, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 1599, column: 10)
!11115 = !DILocation(line: 1599, column: 10, scope: !11101)
!11116 = !DILocalVariable(name: "epoint", scope: !11117, file: !3, line: 1600, type: !7316)
!11117 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1599, column: 23)
!11118 = !DILocation(line: 1600, column: 21, scope: !11117)
!11119 = !DILocalVariable(name: "speed", scope: !11117, file: !3, line: 1601, type: !376)
!11120 = !DILocation(line: 1601, column: 13, scope: !11117)
!11121 = !DILocalVariable(name: "pos", scope: !11117, file: !3, line: 1602, type: !376)
!11122 = !DILocation(line: 1602, column: 13, scope: !11117)
!11123 = !DILocation(line: 1603, column: 19, scope: !11117)
!11124 = !DILocation(line: 1603, column: 24, scope: !11117)
!11125 = !DILocation(line: 1603, column: 28, scope: !11117)
!11126 = !DILocation(line: 1603, column: 35, scope: !11117)
!11127 = !DILocation(line: 1603, column: 39, scope: !11117)
!11128 = !DILocation(line: 1603, column: 43, scope: !11117)
!11129 = !DILocation(line: 1603, column: 48, scope: !11117)
!11130 = !DILocation(line: 1603, column: 52, scope: !11117)
!11131 = !DILocation(line: 1603, column: 59, scope: !11117)
!11132 = !DILocation(line: 1603, column: 63, scope: !11117)
!11133 = !DILocation(line: 1603, column: 67, scope: !11117)
!11134 = !DILocation(line: 1603, column: 7, scope: !11117)
!11135 = !DILocation(line: 1604, column: 19, scope: !11117)
!11136 = !DILocation(line: 1604, column: 24, scope: !11117)
!11137 = !DILocation(line: 1604, column: 28, scope: !11117)
!11138 = !DILocation(line: 1604, column: 35, scope: !11117)
!11139 = !DILocation(line: 1604, column: 39, scope: !11117)
!11140 = !DILocation(line: 1604, column: 43, scope: !11117)
!11141 = !DILocation(line: 1604, column: 48, scope: !11117)
!11142 = !DILocation(line: 1604, column: 52, scope: !11117)
!11143 = !DILocation(line: 1604, column: 59, scope: !11117)
!11144 = !DILocation(line: 1604, column: 63, scope: !11117)
!11145 = !DILocation(line: 1604, column: 67, scope: !11117)
!11146 = !DILocation(line: 1604, column: 7, scope: !11117)
!11147 = !DILocation(line: 1605, column: 26, scope: !11117)
!11148 = !DILocation(line: 1605, column: 33, scope: !11117)
!11149 = !DILocation(line: 1605, column: 38, scope: !11117)
!11150 = !DILocation(line: 1605, column: 7, scope: !11117)
!11151 = !DILocation(line: 1606, column: 21, scope: !11117)
!11152 = !DILocation(line: 1606, column: 40, scope: !11117)
!11153 = !DILocation(line: 1606, column: 44, scope: !11117)
!11154 = !DILocation(line: 1606, column: 71, scope: !11117)
!11155 = !DILocation(line: 1606, column: 78, scope: !11117)
!11156 = !DILocation(line: 1606, column: 7, scope: !11117)
!11157 = !DILocation(line: 1608, column: 17, scope: !11117)
!11158 = !DILocation(line: 1608, column: 24, scope: !11117)
!11159 = !DILocation(line: 1608, column: 7, scope: !11117)
!11160 = !DILocation(line: 1609, column: 17, scope: !11117)
!11161 = !DILocation(line: 1609, column: 22, scope: !11117)
!11162 = !DILocation(line: 1609, column: 7, scope: !11117)
!11163 = !DILocation(line: 1610, column: 6, scope: !11117)
!11164 = !DILocation(line: 1613, column: 19, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1612, column: 11)
!11166 = !DILocation(line: 1613, column: 24, scope: !11165)
!11167 = !DILocation(line: 1613, column: 28, scope: !11165)
!11168 = !DILocation(line: 1613, column: 35, scope: !11165)
!11169 = !DILocation(line: 1613, column: 39, scope: !11165)
!11170 = !DILocation(line: 1613, column: 43, scope: !11165)
!11171 = !DILocation(line: 1613, column: 48, scope: !11165)
!11172 = !DILocation(line: 1613, column: 52, scope: !11165)
!11173 = !DILocation(line: 1613, column: 59, scope: !11165)
!11174 = !DILocation(line: 1613, column: 63, scope: !11165)
!11175 = !DILocation(line: 1613, column: 67, scope: !11165)
!11176 = !DILocation(line: 1613, column: 7, scope: !11165)
!11177 = !DILocation(line: 1615, column: 23, scope: !11101)
!11178 = !DILocation(line: 1615, column: 10, scope: !11101)
!11179 = !DILocation(line: 1615, column: 8, scope: !11101)
!11180 = !DILocation(line: 1616, column: 19, scope: !11101)
!11181 = !DILocation(line: 1616, column: 18, scope: !11101)
!11182 = !DILocation(line: 1616, column: 21, scope: !11101)
!11183 = !DILocation(line: 1616, column: 20, scope: !11101)
!11184 = !DILocation(line: 1616, column: 23, scope: !11101)
!11185 = !DILocation(line: 1616, column: 27, scope: !11101)
!11186 = !DILocation(line: 1616, column: 22, scope: !11101)
!11187 = !DILocation(line: 1616, column: 8, scope: !11101)
!11188 = !DILocation(line: 1620, column: 18, scope: !11101)
!11189 = !DILocation(line: 1620, column: 22, scope: !11101)
!11190 = !DILocation(line: 1620, column: 26, scope: !11101)
!11191 = !DILocation(line: 1620, column: 33, scope: !11101)
!11192 = !DILocation(line: 1620, column: 37, scope: !11101)
!11193 = !DILocation(line: 1620, column: 41, scope: !11101)
!11194 = !DILocation(line: 1620, column: 46, scope: !11101)
!11195 = !DILocation(line: 1620, column: 50, scope: !11101)
!11196 = !DILocation(line: 1620, column: 57, scope: !11101)
!11197 = !DILocation(line: 1620, column: 61, scope: !11101)
!11198 = !DILocation(line: 1620, column: 65, scope: !11101)
!11199 = !DILocation(line: 1620, column: 6, scope: !11101)
!11200 = !DILocation(line: 1621, column: 22, scope: !11101)
!11201 = !DILocation(line: 1621, column: 26, scope: !11101)
!11202 = !DILocation(line: 1621, column: 31, scope: !11101)
!11203 = !DILocation(line: 1621, column: 6, scope: !11101)
!11204 = !DILocation(line: 1622, column: 16, scope: !11101)
!11205 = !DILocation(line: 1622, column: 21, scope: !11101)
!11206 = !DILocation(line: 1622, column: 6, scope: !11101)
!11207 = !DILocation(line: 1623, column: 19, scope: !11101)
!11208 = !DILocation(line: 1623, column: 6, scope: !11101)
!11209 = !DILocation(line: 1624, column: 10, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 1624, column: 10)
!11211 = !DILocation(line: 1624, column: 14, scope: !11210)
!11212 = !DILocation(line: 1624, column: 23, scope: !11210)
!11213 = !DILocation(line: 1624, column: 10, scope: !11101)
!11214 = !DILocation(line: 1625, column: 20, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 1624, column: 43)
!11216 = !DILocation(line: 1625, column: 7, scope: !11215)
!11217 = !DILocation(line: 1626, column: 21, scope: !11215)
!11218 = !DILocation(line: 1626, column: 25, scope: !11215)
!11219 = !DILocation(line: 1626, column: 36, scope: !11215)
!11220 = !DILocation(line: 1626, column: 63, scope: !11215)
!11221 = !DILocation(line: 1626, column: 68, scope: !11215)
!11222 = !DILocation(line: 1626, column: 54, scope: !11215)
!11223 = !DILocation(line: 1626, column: 48, scope: !11215)
!11224 = !DILocation(line: 1626, column: 46, scope: !11215)
!11225 = !DILocation(line: 1626, column: 38, scope: !11215)
!11226 = !DILocation(line: 1626, column: 75, scope: !11215)
!11227 = !DILocation(line: 1626, column: 7, scope: !11215)
!11228 = !DILocation(line: 1627, column: 6, scope: !11215)
!11229 = !DILocation(line: 1629, column: 21, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 1628, column: 11)
!11231 = !DILocation(line: 1629, column: 25, scope: !11230)
!11232 = !DILocation(line: 1629, column: 36, scope: !11230)
!11233 = !DILocation(line: 1629, column: 39, scope: !11230)
!11234 = !DILocation(line: 1629, column: 7, scope: !11230)
!11235 = !DILocation(line: 1631, column: 5, scope: !11101)
!11236 = !DILocation(line: 1633, column: 4, scope: !11057)
!11237 = !DILocation(line: 1634, column: 3, scope: !11027)
!11238 = !DILocation(line: 1573, column: 28, scope: !11022)
!11239 = !DILocation(line: 1573, column: 3, scope: !11022)
!11240 = distinct !{!11240, !11025, !11241}
!11241 = !DILocation(line: 1634, column: 3, scope: !11017)
!11242 = !DILocation(line: 1635, column: 2, scope: !11018)
!11243 = !DILocation(line: 1636, column: 1, scope: !10985)
!11244 = distinct !DISubprogram(name: "sb_detect_edge_collisionCached", scope: !3, file: !3, line: 1418, type: !11245, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!92, !937, !937, !937, !937, !6, !525, !94}
!11247 = !DILocalVariable(name: "edge_v1", arg: 1, scope: !11244, file: !3, line: 1418, type: !937)
!11248 = !DILocation(line: 1418, column: 49, scope: !11244)
!11249 = !DILocalVariable(name: "edge_v2", arg: 2, scope: !11244, file: !3, line: 1418, type: !937)
!11250 = !DILocation(line: 1418, column: 67, scope: !11244)
!11251 = !DILocalVariable(name: "damp", arg: 3, scope: !11244, file: !3, line: 1418, type: !937)
!11252 = !DILocation(line: 1418, column: 86, scope: !11244)
!11253 = !DILocalVariable(name: "force", arg: 4, scope: !11244, file: !3, line: 1419, type: !937)
!11254 = !DILocation(line: 1419, column: 18, scope: !11244)
!11255 = !DILocalVariable(name: "UNUSED_par_layer", arg: 5, scope: !11244, file: !3, line: 1419, type: !6)
!11256 = !DILocation(line: 1419, column: 41, scope: !11244)
!11257 = !DILocalVariable(name: "vertexowner", arg: 6, scope: !11244, file: !3, line: 1419, type: !525)
!11258 = !DILocation(line: 1419, column: 75, scope: !11244)
!11259 = !DILocalVariable(name: "time", arg: 7, scope: !11244, file: !3, line: 1419, type: !94)
!11260 = !DILocation(line: 1419, column: 94, scope: !11244)
!11261 = !DILocalVariable(name: "ob", scope: !11244, file: !3, line: 1421, type: !2154)
!11262 = !DILocation(line: 1421, column: 10, scope: !11244)
!11263 = !DILocalVariable(name: "hash", scope: !11244, file: !3, line: 1422, type: !1131)
!11264 = !DILocation(line: 1422, column: 9, scope: !11244)
!11265 = !DILocalVariable(name: "ihash", scope: !11244, file: !3, line: 1423, type: !9705)
!11266 = !DILocation(line: 1423, column: 17, scope: !11244)
!11267 = !DILocalVariable(name: "nv1", scope: !11244, file: !3, line: 1424, type: !376)
!11268 = !DILocation(line: 1424, column: 8, scope: !11244)
!11269 = !DILocalVariable(name: "nv2", scope: !11244, file: !3, line: 1424, type: !376)
!11270 = !DILocation(line: 1424, column: 16, scope: !11244)
!11271 = !DILocalVariable(name: "nv3", scope: !11244, file: !3, line: 1424, type: !376)
!11272 = !DILocation(line: 1424, column: 24, scope: !11244)
!11273 = !DILocalVariable(name: "nv4", scope: !11244, file: !3, line: 1424, type: !376)
!11274 = !DILocation(line: 1424, column: 32, scope: !11244)
!11275 = !DILocalVariable(name: "edge1", scope: !11244, file: !3, line: 1424, type: !376)
!11276 = !DILocation(line: 1424, column: 40, scope: !11244)
!11277 = !DILocalVariable(name: "edge2", scope: !11244, file: !3, line: 1424, type: !376)
!11278 = !DILocation(line: 1424, column: 50, scope: !11244)
!11279 = !DILocalVariable(name: "d_nvect", scope: !11244, file: !3, line: 1424, type: !376)
!11280 = !DILocation(line: 1424, column: 60, scope: !11244)
!11281 = !DILocalVariable(name: "aabbmin", scope: !11244, file: !3, line: 1424, type: !376)
!11282 = !DILocation(line: 1424, column: 72, scope: !11244)
!11283 = !DILocalVariable(name: "aabbmax", scope: !11244, file: !3, line: 1424, type: !376)
!11284 = !DILocation(line: 1424, column: 84, scope: !11244)
!11285 = !DILocalVariable(name: "t", scope: !11244, file: !3, line: 1425, type: !94)
!11286 = !DILocation(line: 1425, column: 8, scope: !11244)
!11287 = !DILocalVariable(name: "el", scope: !11244, file: !3, line: 1425, type: !94)
!11288 = !DILocation(line: 1425, column: 11, scope: !11244)
!11289 = !DILocalVariable(name: "a", scope: !11244, file: !3, line: 1426, type: !92)
!11290 = !DILocation(line: 1426, column: 6, scope: !11244)
!11291 = !DILocalVariable(name: "deflected", scope: !11244, file: !3, line: 1426, type: !92)
!11292 = !DILocation(line: 1426, column: 9, scope: !11244)
!11293 = !DILocation(line: 1428, column: 17, scope: !11244)
!11294 = !DILocation(line: 1428, column: 26, scope: !11244)
!11295 = !DILocation(line: 1428, column: 35, scope: !11244)
!11296 = !DILocation(line: 1428, column: 2, scope: !11244)
!11297 = !DILocation(line: 1429, column: 17, scope: !11244)
!11298 = !DILocation(line: 1429, column: 26, scope: !11244)
!11299 = !DILocation(line: 1429, column: 35, scope: !11244)
!11300 = !DILocation(line: 1429, column: 2, scope: !11244)
!11301 = !DILocation(line: 1431, column: 16, scope: !11244)
!11302 = !DILocation(line: 1431, column: 25, scope: !11244)
!11303 = !DILocation(line: 1431, column: 7, scope: !11244)
!11304 = !DILocation(line: 1431, column: 5, scope: !11244)
!11305 = !DILocation(line: 1433, column: 10, scope: !11244)
!11306 = !DILocation(line: 1433, column: 23, scope: !11244)
!11307 = !DILocation(line: 1433, column: 29, scope: !11244)
!11308 = !DILocation(line: 1433, column: 38, scope: !11244)
!11309 = !DILocation(line: 1433, column: 8, scope: !11244)
!11310 = !DILocation(line: 1434, column: 32, scope: !11244)
!11311 = !DILocation(line: 1434, column: 10, scope: !11244)
!11312 = !DILocation(line: 1434, column: 8, scope: !11244)
!11313 = !DILocation(line: 1435, column: 2, scope: !11244)
!11314 = !DILocation(line: 1435, column: 33, scope: !11244)
!11315 = !DILocation(line: 1435, column: 10, scope: !11244)
!11316 = !DILocation(line: 1435, column: 9, scope: !11244)
!11317 = !DILocalVariable(name: "ccdm", scope: !11318, file: !3, line: 1437, type: !4663)
!11318 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 1435, column: 41)
!11319 = !DILocation(line: 1437, column: 13, scope: !11318)
!11320 = !DILocation(line: 1437, column: 48, scope: !11318)
!11321 = !DILocation(line: 1437, column: 20, scope: !11318)
!11322 = !DILocation(line: 1438, column: 46, scope: !11318)
!11323 = !DILocation(line: 1438, column: 20, scope: !11318)
!11324 = !DILocation(line: 1438, column: 18, scope: !11318)
!11325 = !DILocation(line: 1440, column: 8, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 1440, column: 8)
!11327 = !DILocation(line: 1440, column: 12, scope: !11326)
!11328 = !DILocation(line: 1440, column: 15, scope: !11326)
!11329 = !DILocation(line: 1440, column: 18, scope: !11326)
!11330 = !DILocation(line: 1440, column: 22, scope: !11326)
!11331 = !DILocation(line: 1440, column: 26, scope: !11326)
!11332 = !DILocation(line: 1440, column: 8, scope: !11318)
!11333 = !DILocalVariable(name: "mface", scope: !11334, file: !3, line: 1441, type: !4672)
!11334 = distinct !DILexicalBlock(scope: !11326, file: !3, line: 1440, column: 35)
!11335 = !DILocation(line: 1441, column: 12, scope: !11334)
!11336 = !DILocalVariable(name: "mvert", scope: !11334, file: !3, line: 1442, type: !483)
!11337 = !DILocation(line: 1442, column: 12, scope: !11334)
!11338 = !DILocalVariable(name: "mprevvert", scope: !11334, file: !3, line: 1443, type: !483)
!11339 = !DILocation(line: 1443, column: 12, scope: !11334)
!11340 = !DILocalVariable(name: "mima", scope: !11334, file: !3, line: 1444, type: !4676)
!11341 = !DILocation(line: 1444, column: 18, scope: !11334)
!11342 = !DILocation(line: 1445, column: 9, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1445, column: 9)
!11344 = !DILocation(line: 1445, column: 9, scope: !11334)
!11345 = !DILocation(line: 1446, column: 13, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 1445, column: 15)
!11347 = !DILocation(line: 1446, column: 19, scope: !11346)
!11348 = !DILocation(line: 1446, column: 11, scope: !11346)
!11349 = !DILocation(line: 1447, column: 13, scope: !11346)
!11350 = !DILocation(line: 1447, column: 19, scope: !11346)
!11351 = !DILocation(line: 1447, column: 11, scope: !11346)
!11352 = !DILocation(line: 1448, column: 17, scope: !11346)
!11353 = !DILocation(line: 1448, column: 23, scope: !11346)
!11354 = !DILocation(line: 1448, column: 15, scope: !11346)
!11355 = !DILocation(line: 1449, column: 12, scope: !11346)
!11356 = !DILocation(line: 1449, column: 18, scope: !11346)
!11357 = !DILocation(line: 1449, column: 10, scope: !11346)
!11358 = !DILocation(line: 1450, column: 10, scope: !11346)
!11359 = !DILocation(line: 1450, column: 16, scope: !11346)
!11360 = !DILocation(line: 1450, column: 8, scope: !11346)
!11361 = !DILocation(line: 1452, column: 11, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 1452, column: 10)
!11363 = !DILocation(line: 1452, column: 24, scope: !11362)
!11364 = !DILocation(line: 1452, column: 30, scope: !11362)
!11365 = !DILocation(line: 1452, column: 22, scope: !11362)
!11366 = !DILocation(line: 1452, column: 40, scope: !11362)
!11367 = !DILocation(line: 1453, column: 11, scope: !11362)
!11368 = !DILocation(line: 1453, column: 24, scope: !11362)
!11369 = !DILocation(line: 1453, column: 30, scope: !11362)
!11370 = !DILocation(line: 1453, column: 22, scope: !11362)
!11371 = !DILocation(line: 1453, column: 40, scope: !11362)
!11372 = !DILocation(line: 1454, column: 11, scope: !11362)
!11373 = !DILocation(line: 1454, column: 24, scope: !11362)
!11374 = !DILocation(line: 1454, column: 30, scope: !11362)
!11375 = !DILocation(line: 1454, column: 22, scope: !11362)
!11376 = !DILocation(line: 1454, column: 40, scope: !11362)
!11377 = !DILocation(line: 1455, column: 11, scope: !11362)
!11378 = !DILocation(line: 1455, column: 24, scope: !11362)
!11379 = !DILocation(line: 1455, column: 30, scope: !11362)
!11380 = !DILocation(line: 1455, column: 22, scope: !11362)
!11381 = !DILocation(line: 1455, column: 40, scope: !11362)
!11382 = !DILocation(line: 1456, column: 11, scope: !11362)
!11383 = !DILocation(line: 1456, column: 24, scope: !11362)
!11384 = !DILocation(line: 1456, column: 30, scope: !11362)
!11385 = !DILocation(line: 1456, column: 22, scope: !11362)
!11386 = !DILocation(line: 1456, column: 40, scope: !11362)
!11387 = !DILocation(line: 1457, column: 11, scope: !11362)
!11388 = !DILocation(line: 1457, column: 24, scope: !11362)
!11389 = !DILocation(line: 1457, column: 30, scope: !11362)
!11390 = !DILocation(line: 1457, column: 22, scope: !11362)
!11391 = !DILocation(line: 1452, column: 10, scope: !11346)
!11392 = !DILocation(line: 1460, column: 30, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 1458, column: 6)
!11394 = !DILocation(line: 1460, column: 7, scope: !11393)
!11395 = !DILocation(line: 1461, column: 7, scope: !11393)
!11396 = distinct !{!11396, !11313, !11397}
!11397 = !DILocation(line: 1560, column: 2, scope: !11244)
!11398 = !DILocation(line: 1464, column: 5, scope: !11346)
!11399 = !DILocation(line: 1467, column: 6, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 1465, column: 10)
!11401 = !DILocation(line: 1468, column: 29, scope: !11400)
!11402 = !DILocation(line: 1468, column: 6, scope: !11400)
!11403 = !DILocation(line: 1469, column: 6, scope: !11400)
!11404 = !DILocation(line: 1474, column: 5, scope: !11334)
!11405 = !DILocation(line: 1474, column: 13, scope: !11334)
!11406 = !DILocation(line: 1476, column: 8, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1476, column: 7)
!11408 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1474, column: 17)
!11409 = !DILocation(line: 1476, column: 21, scope: !11407)
!11410 = !DILocation(line: 1476, column: 27, scope: !11407)
!11411 = !DILocation(line: 1476, column: 19, scope: !11407)
!11412 = !DILocation(line: 1476, column: 33, scope: !11407)
!11413 = !DILocation(line: 1477, column: 8, scope: !11407)
!11414 = !DILocation(line: 1477, column: 21, scope: !11407)
!11415 = !DILocation(line: 1477, column: 27, scope: !11407)
!11416 = !DILocation(line: 1477, column: 19, scope: !11407)
!11417 = !DILocation(line: 1477, column: 33, scope: !11407)
!11418 = !DILocation(line: 1478, column: 8, scope: !11407)
!11419 = !DILocation(line: 1478, column: 21, scope: !11407)
!11420 = !DILocation(line: 1478, column: 27, scope: !11407)
!11421 = !DILocation(line: 1478, column: 19, scope: !11407)
!11422 = !DILocation(line: 1478, column: 33, scope: !11407)
!11423 = !DILocation(line: 1479, column: 8, scope: !11407)
!11424 = !DILocation(line: 1479, column: 21, scope: !11407)
!11425 = !DILocation(line: 1479, column: 27, scope: !11407)
!11426 = !DILocation(line: 1479, column: 19, scope: !11407)
!11427 = !DILocation(line: 1479, column: 33, scope: !11407)
!11428 = !DILocation(line: 1480, column: 8, scope: !11407)
!11429 = !DILocation(line: 1480, column: 21, scope: !11407)
!11430 = !DILocation(line: 1480, column: 27, scope: !11407)
!11431 = !DILocation(line: 1480, column: 19, scope: !11407)
!11432 = !DILocation(line: 1480, column: 33, scope: !11407)
!11433 = !DILocation(line: 1481, column: 8, scope: !11407)
!11434 = !DILocation(line: 1481, column: 21, scope: !11407)
!11435 = !DILocation(line: 1481, column: 27, scope: !11407)
!11436 = !DILocation(line: 1481, column: 19, scope: !11407)
!11437 = !DILocation(line: 1476, column: 7, scope: !11408)
!11438 = !DILocation(line: 1484, column: 12, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1483, column: 6)
!11440 = !DILocation(line: 1485, column: 11, scope: !11439)
!11441 = !DILocation(line: 1486, column: 7, scope: !11439)
!11442 = distinct !{!11442, !11404, !11443}
!11443 = !DILocation(line: 1557, column: 5, scope: !11334)
!11444 = !DILocation(line: 1490, column: 10, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1490, column: 10)
!11446 = !DILocation(line: 1490, column: 10, scope: !11408)
!11447 = !DILocation(line: 1492, column: 18, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 1490, column: 17)
!11449 = !DILocation(line: 1492, column: 23, scope: !11448)
!11450 = !DILocation(line: 1492, column: 29, scope: !11448)
!11451 = !DILocation(line: 1492, column: 36, scope: !11448)
!11452 = !DILocation(line: 1492, column: 40, scope: !11448)
!11453 = !DILocation(line: 1492, column: 7, scope: !11448)
!11454 = !DILocation(line: 1493, column: 18, scope: !11448)
!11455 = !DILocation(line: 1493, column: 23, scope: !11448)
!11456 = !DILocation(line: 1493, column: 29, scope: !11448)
!11457 = !DILocation(line: 1493, column: 36, scope: !11448)
!11458 = !DILocation(line: 1493, column: 40, scope: !11448)
!11459 = !DILocation(line: 1493, column: 7, scope: !11448)
!11460 = !DILocation(line: 1494, column: 18, scope: !11448)
!11461 = !DILocation(line: 1494, column: 23, scope: !11448)
!11462 = !DILocation(line: 1494, column: 29, scope: !11448)
!11463 = !DILocation(line: 1494, column: 36, scope: !11448)
!11464 = !DILocation(line: 1494, column: 40, scope: !11448)
!11465 = !DILocation(line: 1494, column: 7, scope: !11448)
!11466 = !DILocation(line: 1495, column: 11, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1495, column: 11)
!11468 = !DILocation(line: 1495, column: 18, scope: !11467)
!11469 = !DILocation(line: 1495, column: 11, scope: !11448)
!11470 = !DILocation(line: 1496, column: 19, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 1495, column: 22)
!11472 = !DILocation(line: 1496, column: 24, scope: !11471)
!11473 = !DILocation(line: 1496, column: 30, scope: !11471)
!11474 = !DILocation(line: 1496, column: 37, scope: !11471)
!11475 = !DILocation(line: 1496, column: 41, scope: !11471)
!11476 = !DILocation(line: 1496, column: 8, scope: !11471)
!11477 = !DILocation(line: 1497, column: 7, scope: !11471)
!11478 = !DILocation(line: 1498, column: 11, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1498, column: 11)
!11480 = !DILocation(line: 1498, column: 11, scope: !11448)
!11481 = !DILocation(line: 1499, column: 18, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1498, column: 22)
!11483 = !DILocation(line: 1499, column: 23, scope: !11482)
!11484 = !DILocation(line: 1499, column: 8, scope: !11482)
!11485 = !DILocation(line: 1500, column: 22, scope: !11482)
!11486 = !DILocation(line: 1500, column: 33, scope: !11482)
!11487 = !DILocation(line: 1500, column: 32, scope: !11482)
!11488 = !DILocation(line: 1500, column: 40, scope: !11482)
!11489 = !DILocation(line: 1500, column: 50, scope: !11482)
!11490 = !DILocation(line: 1500, column: 57, scope: !11482)
!11491 = !DILocation(line: 1500, column: 61, scope: !11482)
!11492 = !DILocation(line: 1500, column: 8, scope: !11482)
!11493 = !DILocation(line: 1502, column: 18, scope: !11482)
!11494 = !DILocation(line: 1502, column: 23, scope: !11482)
!11495 = !DILocation(line: 1502, column: 8, scope: !11482)
!11496 = !DILocation(line: 1503, column: 22, scope: !11482)
!11497 = !DILocation(line: 1503, column: 33, scope: !11482)
!11498 = !DILocation(line: 1503, column: 32, scope: !11482)
!11499 = !DILocation(line: 1503, column: 40, scope: !11482)
!11500 = !DILocation(line: 1503, column: 50, scope: !11482)
!11501 = !DILocation(line: 1503, column: 57, scope: !11482)
!11502 = !DILocation(line: 1503, column: 61, scope: !11482)
!11503 = !DILocation(line: 1503, column: 8, scope: !11482)
!11504 = !DILocation(line: 1505, column: 18, scope: !11482)
!11505 = !DILocation(line: 1505, column: 23, scope: !11482)
!11506 = !DILocation(line: 1505, column: 8, scope: !11482)
!11507 = !DILocation(line: 1506, column: 22, scope: !11482)
!11508 = !DILocation(line: 1506, column: 33, scope: !11482)
!11509 = !DILocation(line: 1506, column: 32, scope: !11482)
!11510 = !DILocation(line: 1506, column: 40, scope: !11482)
!11511 = !DILocation(line: 1506, column: 50, scope: !11482)
!11512 = !DILocation(line: 1506, column: 57, scope: !11482)
!11513 = !DILocation(line: 1506, column: 61, scope: !11482)
!11514 = !DILocation(line: 1506, column: 8, scope: !11482)
!11515 = !DILocation(line: 1508, column: 12, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 1508, column: 12)
!11517 = !DILocation(line: 1508, column: 19, scope: !11516)
!11518 = !DILocation(line: 1508, column: 12, scope: !11482)
!11519 = !DILocation(line: 1509, column: 19, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 1508, column: 23)
!11521 = !DILocation(line: 1509, column: 24, scope: !11520)
!11522 = !DILocation(line: 1509, column: 9, scope: !11520)
!11523 = !DILocation(line: 1510, column: 23, scope: !11520)
!11524 = !DILocation(line: 1510, column: 34, scope: !11520)
!11525 = !DILocation(line: 1510, column: 33, scope: !11520)
!11526 = !DILocation(line: 1510, column: 41, scope: !11520)
!11527 = !DILocation(line: 1510, column: 51, scope: !11520)
!11528 = !DILocation(line: 1510, column: 58, scope: !11520)
!11529 = !DILocation(line: 1510, column: 62, scope: !11520)
!11530 = !DILocation(line: 1510, column: 9, scope: !11520)
!11531 = !DILocation(line: 1511, column: 8, scope: !11520)
!11532 = !DILocation(line: 1512, column: 7, scope: !11482)
!11533 = !DILocation(line: 1513, column: 6, scope: !11448)
!11534 = !DILocation(line: 1516, column: 18, scope: !11408)
!11535 = !DILocation(line: 1516, column: 25, scope: !11408)
!11536 = !DILocation(line: 1516, column: 30, scope: !11408)
!11537 = !DILocation(line: 1516, column: 6, scope: !11408)
!11538 = !DILocation(line: 1517, column: 18, scope: !11408)
!11539 = !DILocation(line: 1517, column: 25, scope: !11408)
!11540 = !DILocation(line: 1517, column: 30, scope: !11408)
!11541 = !DILocation(line: 1517, column: 6, scope: !11408)
!11542 = !DILocation(line: 1519, column: 20, scope: !11408)
!11543 = !DILocation(line: 1519, column: 29, scope: !11408)
!11544 = !DILocation(line: 1519, column: 36, scope: !11408)
!11545 = !DILocation(line: 1519, column: 6, scope: !11408)
!11546 = !DILocation(line: 1520, column: 19, scope: !11408)
!11547 = !DILocation(line: 1520, column: 6, scope: !11408)
!11548 = !DILocation(line: 1521, column: 29, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1521, column: 11)
!11550 = !DILocation(line: 1521, column: 38, scope: !11549)
!11551 = !DILocation(line: 1521, column: 47, scope: !11549)
!11552 = !DILocation(line: 1521, column: 52, scope: !11549)
!11553 = !DILocation(line: 1521, column: 57, scope: !11549)
!11554 = !DILocation(line: 1521, column: 11, scope: !11549)
!11555 = !DILocation(line: 1521, column: 11, scope: !11408)
!11556 = !DILocalVariable(name: "v1", scope: !11557, file: !3, line: 1522, type: !376)
!11557 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 1521, column: 73)
!11558 = !DILocation(line: 1522, column: 13, scope: !11557)
!11559 = !DILocalVariable(name: "v2", scope: !11557, file: !3, line: 1522, type: !376)
!11560 = !DILocation(line: 1522, column: 20, scope: !11557)
!11561 = !DILocalVariable(name: "intrusiondepth", scope: !11557, file: !3, line: 1523, type: !94)
!11562 = !DILocation(line: 1523, column: 13, scope: !11557)
!11563 = !DILocalVariable(name: "i1", scope: !11557, file: !3, line: 1523, type: !94)
!11564 = !DILocation(line: 1523, column: 29, scope: !11557)
!11565 = !DILocalVariable(name: "i2", scope: !11557, file: !3, line: 1523, type: !94)
!11566 = !DILocation(line: 1523, column: 33, scope: !11557)
!11567 = !DILocation(line: 1524, column: 19, scope: !11557)
!11568 = !DILocation(line: 1524, column: 23, scope: !11557)
!11569 = !DILocation(line: 1524, column: 32, scope: !11557)
!11570 = !DILocation(line: 1524, column: 7, scope: !11557)
!11571 = !DILocation(line: 1525, column: 19, scope: !11557)
!11572 = !DILocation(line: 1525, column: 23, scope: !11557)
!11573 = !DILocation(line: 1525, column: 32, scope: !11557)
!11574 = !DILocation(line: 1525, column: 7, scope: !11557)
!11575 = !DILocation(line: 1526, column: 21, scope: !11557)
!11576 = !DILocation(line: 1526, column: 25, scope: !11557)
!11577 = !DILocation(line: 1526, column: 12, scope: !11557)
!11578 = !DILocation(line: 1526, column: 10, scope: !11557)
!11579 = !DILocation(line: 1527, column: 21, scope: !11557)
!11580 = !DILocation(line: 1527, column: 25, scope: !11557)
!11581 = !DILocation(line: 1527, column: 12, scope: !11557)
!11582 = !DILocation(line: 1527, column: 10, scope: !11557)
!11583 = !DILocation(line: 1528, column: 32, scope: !11557)
!11584 = !DILocation(line: 1528, column: 36, scope: !11557)
!11585 = !DILocation(line: 1528, column: 25, scope: !11557)
!11586 = !DILocation(line: 1528, column: 24, scope: !11557)
!11587 = !DILocation(line: 1528, column: 42, scope: !11557)
!11588 = !DILocation(line: 1528, column: 40, scope: !11557)
!11589 = !DILocation(line: 1528, column: 22, scope: !11557)
!11590 = !DILocation(line: 1529, column: 21, scope: !11557)
!11591 = !DILocation(line: 1529, column: 28, scope: !11557)
!11592 = !DILocation(line: 1529, column: 44, scope: !11557)
!11593 = !DILocation(line: 1529, column: 7, scope: !11557)
!11594 = !DILocation(line: 1530, column: 13, scope: !11557)
!11595 = !DILocation(line: 1530, column: 17, scope: !11557)
!11596 = !DILocation(line: 1530, column: 21, scope: !11557)
!11597 = !DILocation(line: 1530, column: 8, scope: !11557)
!11598 = !DILocation(line: 1530, column: 12, scope: !11557)
!11599 = !DILocation(line: 1531, column: 17, scope: !11557)
!11600 = !DILocation(line: 1532, column: 6, scope: !11557)
!11601 = !DILocation(line: 1533, column: 10, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1533, column: 10)
!11603 = !DILocation(line: 1533, column: 17, scope: !11602)
!11604 = !DILocation(line: 1533, column: 10, scope: !11408)
!11605 = !DILocation(line: 1535, column: 19, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 1533, column: 21)
!11607 = !DILocation(line: 1535, column: 26, scope: !11606)
!11608 = !DILocation(line: 1535, column: 31, scope: !11606)
!11609 = !DILocation(line: 1535, column: 7, scope: !11606)
!11610 = !DILocation(line: 1536, column: 19, scope: !11606)
!11611 = !DILocation(line: 1536, column: 26, scope: !11606)
!11612 = !DILocation(line: 1536, column: 31, scope: !11606)
!11613 = !DILocation(line: 1536, column: 7, scope: !11606)
!11614 = !DILocation(line: 1538, column: 21, scope: !11606)
!11615 = !DILocation(line: 1538, column: 30, scope: !11606)
!11616 = !DILocation(line: 1538, column: 37, scope: !11606)
!11617 = !DILocation(line: 1538, column: 7, scope: !11606)
!11618 = !DILocation(line: 1539, column: 20, scope: !11606)
!11619 = !DILocation(line: 1539, column: 7, scope: !11606)
!11620 = !DILocation(line: 1540, column: 30, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1540, column: 11)
!11622 = !DILocation(line: 1540, column: 39, scope: !11621)
!11623 = !DILocation(line: 1540, column: 48, scope: !11621)
!11624 = !DILocation(line: 1540, column: 53, scope: !11621)
!11625 = !DILocation(line: 1540, column: 58, scope: !11621)
!11626 = !DILocation(line: 1540, column: 11, scope: !11621)
!11627 = !DILocation(line: 1540, column: 11, scope: !11606)
!11628 = !DILocalVariable(name: "v1", scope: !11629, file: !3, line: 1541, type: !376)
!11629 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 1540, column: 74)
!11630 = !DILocation(line: 1541, column: 14, scope: !11629)
!11631 = !DILocalVariable(name: "v2", scope: !11629, file: !3, line: 1541, type: !376)
!11632 = !DILocation(line: 1541, column: 21, scope: !11629)
!11633 = !DILocalVariable(name: "intrusiondepth", scope: !11629, file: !3, line: 1542, type: !94)
!11634 = !DILocation(line: 1542, column: 14, scope: !11629)
!11635 = !DILocalVariable(name: "i1", scope: !11629, file: !3, line: 1542, type: !94)
!11636 = !DILocation(line: 1542, column: 30, scope: !11629)
!11637 = !DILocalVariable(name: "i2", scope: !11629, file: !3, line: 1542, type: !94)
!11638 = !DILocation(line: 1542, column: 34, scope: !11629)
!11639 = !DILocation(line: 1543, column: 20, scope: !11629)
!11640 = !DILocation(line: 1543, column: 24, scope: !11629)
!11641 = !DILocation(line: 1543, column: 33, scope: !11629)
!11642 = !DILocation(line: 1543, column: 8, scope: !11629)
!11643 = !DILocation(line: 1544, column: 20, scope: !11629)
!11644 = !DILocation(line: 1544, column: 24, scope: !11629)
!11645 = !DILocation(line: 1544, column: 33, scope: !11629)
!11646 = !DILocation(line: 1544, column: 8, scope: !11629)
!11647 = !DILocation(line: 1545, column: 22, scope: !11629)
!11648 = !DILocation(line: 1545, column: 26, scope: !11629)
!11649 = !DILocation(line: 1545, column: 13, scope: !11629)
!11650 = !DILocation(line: 1545, column: 11, scope: !11629)
!11651 = !DILocation(line: 1546, column: 22, scope: !11629)
!11652 = !DILocation(line: 1546, column: 26, scope: !11629)
!11653 = !DILocation(line: 1546, column: 13, scope: !11629)
!11654 = !DILocation(line: 1546, column: 11, scope: !11629)
!11655 = !DILocation(line: 1547, column: 33, scope: !11629)
!11656 = !DILocation(line: 1547, column: 37, scope: !11629)
!11657 = !DILocation(line: 1547, column: 26, scope: !11629)
!11658 = !DILocation(line: 1547, column: 25, scope: !11629)
!11659 = !DILocation(line: 1547, column: 43, scope: !11629)
!11660 = !DILocation(line: 1547, column: 41, scope: !11629)
!11661 = !DILocation(line: 1547, column: 23, scope: !11629)
!11662 = !DILocation(line: 1550, column: 22, scope: !11629)
!11663 = !DILocation(line: 1550, column: 29, scope: !11629)
!11664 = !DILocation(line: 1550, column: 45, scope: !11629)
!11665 = !DILocation(line: 1550, column: 8, scope: !11629)
!11666 = !DILocation(line: 1551, column: 14, scope: !11629)
!11667 = !DILocation(line: 1551, column: 18, scope: !11629)
!11668 = !DILocation(line: 1551, column: 22, scope: !11629)
!11669 = !DILocation(line: 1551, column: 9, scope: !11629)
!11670 = !DILocation(line: 1551, column: 13, scope: !11629)
!11671 = !DILocation(line: 1552, column: 18, scope: !11629)
!11672 = !DILocation(line: 1553, column: 7, scope: !11629)
!11673 = !DILocation(line: 1554, column: 6, scope: !11606)
!11674 = !DILocation(line: 1555, column: 11, scope: !11408)
!11675 = !DILocation(line: 1556, column: 10, scope: !11408)
!11676 = !DILocation(line: 1558, column: 4, scope: !11334)
!11677 = !DILocation(line: 1559, column: 27, scope: !11318)
!11678 = !DILocation(line: 1559, column: 4, scope: !11318)
!11679 = !DILocation(line: 1561, column: 25, scope: !11244)
!11680 = !DILocation(line: 1561, column: 2, scope: !11244)
!11681 = !DILocation(line: 1562, column: 9, scope: !11244)
!11682 = !DILocation(line: 1562, column: 2, scope: !11244)
!11683 = distinct !DISubprogram(name: "sub_v3_v3", scope: !2608, file: !2608, line: 350, type: !2609, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11684 = !DILocalVariable(name: "r", arg: 1, scope: !11683, file: !2608, line: 350, type: !937)
!11685 = !DILocation(line: 350, column: 30, scope: !11683)
!11686 = !DILocalVariable(name: "a", arg: 2, scope: !11683, file: !2608, line: 350, type: !2611)
!11687 = !DILocation(line: 350, column: 48, scope: !11683)
!11688 = !DILocation(line: 352, column: 10, scope: !11683)
!11689 = !DILocation(line: 352, column: 2, scope: !11683)
!11690 = !DILocation(line: 352, column: 7, scope: !11683)
!11691 = !DILocation(line: 353, column: 10, scope: !11683)
!11692 = !DILocation(line: 353, column: 2, scope: !11683)
!11693 = !DILocation(line: 353, column: 7, scope: !11683)
!11694 = !DILocation(line: 354, column: 10, scope: !11683)
!11695 = !DILocation(line: 354, column: 2, scope: !11683)
!11696 = !DILocation(line: 354, column: 7, scope: !11683)
!11697 = !DILocation(line: 355, column: 1, scope: !11683)
!11698 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !96, file: !96, line: 98, type: !11699, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{!486, !9705}
!11701 = !DILocalVariable(name: "ghi", arg: 1, scope: !11698, file: !96, line: 98, type: !9705)
!11702 = !DILocation(line: 98, column: 57, scope: !11698)
!11703 = !DILocation(line: 98, column: 78, scope: !11698)
!11704 = !DILocation(line: 98, column: 83, scope: !11698)
!11705 = !DILocation(line: 98, column: 77, scope: !11698)
!11706 = !DILocation(line: 98, column: 70, scope: !11698)
!11707 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !96, file: !96, line: 96, type: !11708, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11708 = !DISubroutineType(types: !11709)
!11709 = !{!93, !9705}
!11710 = !DILocalVariable(name: "ghi", arg: 1, scope: !11707, file: !96, line: 96, type: !9705)
!11711 = !DILocation(line: 96, column: 61, scope: !11707)
!11712 = !DILocation(line: 96, column: 99, scope: !11707)
!11713 = !DILocation(line: 96, column: 104, scope: !11707)
!11714 = !DILocation(line: 96, column: 115, scope: !11707)
!11715 = !DILocation(line: 96, column: 70, scope: !11707)
!11716 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !96, file: !96, line: 95, type: !11708, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11717 = !DILocalVariable(name: "ghi", arg: 1, scope: !11716, file: !96, line: 95, type: !9705)
!11718 = !DILocation(line: 95, column: 59, scope: !11716)
!11719 = !DILocation(line: 95, column: 99, scope: !11716)
!11720 = !DILocation(line: 95, column: 104, scope: !11716)
!11721 = !DILocation(line: 95, column: 115, scope: !11716)
!11722 = !DILocation(line: 95, column: 70, scope: !11716)
!11723 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !2608, file: !2608, line: 634, type: !5766, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11724 = !DILocalVariable(name: "r", arg: 1, scope: !11723, file: !2608, line: 634, type: !937)
!11725 = !DILocation(line: 634, column: 34, scope: !11723)
!11726 = !DILocalVariable(name: "a", arg: 2, scope: !11723, file: !2608, line: 634, type: !2611)
!11727 = !DILocation(line: 634, column: 52, scope: !11723)
!11728 = !DILocalVariable(name: "b", arg: 3, scope: !11723, file: !2608, line: 634, type: !2611)
!11729 = !DILocation(line: 634, column: 70, scope: !11723)
!11730 = !DILocation(line: 637, column: 9, scope: !11723)
!11731 = !DILocation(line: 637, column: 16, scope: !11723)
!11732 = !DILocation(line: 637, column: 14, scope: !11723)
!11733 = !DILocation(line: 637, column: 23, scope: !11723)
!11734 = !DILocation(line: 637, column: 30, scope: !11723)
!11735 = !DILocation(line: 637, column: 28, scope: !11723)
!11736 = !DILocation(line: 637, column: 21, scope: !11723)
!11737 = !DILocation(line: 637, column: 2, scope: !11723)
!11738 = !DILocation(line: 637, column: 7, scope: !11723)
!11739 = !DILocation(line: 638, column: 9, scope: !11723)
!11740 = !DILocation(line: 638, column: 16, scope: !11723)
!11741 = !DILocation(line: 638, column: 14, scope: !11723)
!11742 = !DILocation(line: 638, column: 23, scope: !11723)
!11743 = !DILocation(line: 638, column: 30, scope: !11723)
!11744 = !DILocation(line: 638, column: 28, scope: !11723)
!11745 = !DILocation(line: 638, column: 21, scope: !11723)
!11746 = !DILocation(line: 638, column: 2, scope: !11723)
!11747 = !DILocation(line: 638, column: 7, scope: !11723)
!11748 = !DILocation(line: 639, column: 9, scope: !11723)
!11749 = !DILocation(line: 639, column: 16, scope: !11723)
!11750 = !DILocation(line: 639, column: 14, scope: !11723)
!11751 = !DILocation(line: 639, column: 23, scope: !11723)
!11752 = !DILocation(line: 639, column: 30, scope: !11723)
!11753 = !DILocation(line: 639, column: 28, scope: !11723)
!11754 = !DILocation(line: 639, column: 21, scope: !11723)
!11755 = !DILocation(line: 639, column: 2, scope: !11723)
!11756 = !DILocation(line: 639, column: 7, scope: !11723)
!11757 = !DILocation(line: 640, column: 1, scope: !11723)
!11758 = distinct !DISubprogram(name: "exec_softbody_calc_forces", scope: !3, file: !3, line: 2380, type: !10963, scopeLine: 2381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11759 = !DILocalVariable(name: "data", arg: 1, scope: !11758, file: !3, line: 2380, type: !93)
!11760 = !DILocation(line: 2380, column: 46, scope: !11758)
!11761 = !DILocalVariable(name: "pctx", scope: !11758, file: !3, line: 2382, type: !2146)
!11762 = !DILocation(line: 2382, column: 21, scope: !11758)
!11763 = !DILocation(line: 2382, column: 48, scope: !11758)
!11764 = !DILocation(line: 2382, column: 28, scope: !11758)
!11765 = !DILocation(line: 2383, column: 42, scope: !11758)
!11766 = !DILocation(line: 2383, column: 48, scope: !11758)
!11767 = !DILocation(line: 2383, column: 55, scope: !11758)
!11768 = !DILocation(line: 2383, column: 61, scope: !11758)
!11769 = !DILocation(line: 2383, column: 65, scope: !11758)
!11770 = !DILocation(line: 2383, column: 71, scope: !11758)
!11771 = !DILocation(line: 2383, column: 82, scope: !11758)
!11772 = !DILocation(line: 2383, column: 88, scope: !11758)
!11773 = !DILocation(line: 2383, column: 97, scope: !11758)
!11774 = !DILocation(line: 2383, column: 103, scope: !11758)
!11775 = !DILocation(line: 2383, column: 111, scope: !11758)
!11776 = !DILocation(line: 2383, column: 117, scope: !11758)
!11777 = !DILocation(line: 2383, column: 130, scope: !11758)
!11778 = !DILocation(line: 2383, column: 136, scope: !11758)
!11779 = !DILocation(line: 2383, column: 149, scope: !11758)
!11780 = !DILocation(line: 2383, column: 155, scope: !11758)
!11781 = !DILocation(line: 2383, column: 169, scope: !11758)
!11782 = !DILocation(line: 2383, column: 175, scope: !11758)
!11783 = !DILocation(line: 2383, column: 188, scope: !11758)
!11784 = !DILocation(line: 2383, column: 194, scope: !11758)
!11785 = !DILocation(line: 2383, column: 2, scope: !11758)
!11786 = !DILocation(line: 2384, column: 2, scope: !11758)
!11787 = distinct !DISubprogram(name: "_softbody_calc_forces_slice_in_a_thread", scope: !3, file: !3, line: 2176, type: !11788, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{!92, !2151, !2154, !94, !94, !92, !92, !10590, !1485, !92, !94, !94}
!11790 = !DILocalVariable(name: "scene", arg: 1, scope: !11787, file: !3, line: 2176, type: !2151)
!11791 = !DILocation(line: 2176, column: 59, scope: !11787)
!11792 = !DILocalVariable(name: "ob", arg: 2, scope: !11787, file: !3, line: 2176, type: !2154)
!11793 = !DILocation(line: 2176, column: 74, scope: !11787)
!11794 = !DILocalVariable(name: "forcetime", arg: 3, scope: !11787, file: !3, line: 2176, type: !94)
!11795 = !DILocation(line: 2176, column: 84, scope: !11787)
!11796 = !DILocalVariable(name: "timenow", arg: 4, scope: !11787, file: !3, line: 2176, type: !94)
!11797 = !DILocation(line: 2176, column: 101, scope: !11787)
!11798 = !DILocalVariable(name: "ifirst", arg: 5, scope: !11787, file: !3, line: 2176, type: !92)
!11799 = !DILocation(line: 2176, column: 114, scope: !11787)
!11800 = !DILocalVariable(name: "ilast", arg: 6, scope: !11787, file: !3, line: 2176, type: !92)
!11801 = !DILocation(line: 2176, column: 126, scope: !11787)
!11802 = !DILocalVariable(name: "UNUSED_ptr_to_break_func", arg: 7, scope: !11787, file: !3, line: 2176, type: !10590)
!11803 = !DILocation(line: 2176, column: 138, scope: !11787)
!11804 = !DILocalVariable(name: "do_effector", arg: 8, scope: !11787, file: !3, line: 2176, type: !1485)
!11805 = !DILocation(line: 2176, column: 181, scope: !11787)
!11806 = !DILocalVariable(name: "do_deflector", arg: 9, scope: !11787, file: !3, line: 2176, type: !92)
!11807 = !DILocation(line: 2176, column: 198, scope: !11787)
!11808 = !DILocalVariable(name: "fieldfactor", arg: 10, scope: !11787, file: !3, line: 2176, type: !94)
!11809 = !DILocation(line: 2176, column: 218, scope: !11787)
!11810 = !DILocalVariable(name: "windfactor", arg: 11, scope: !11787, file: !3, line: 2176, type: !94)
!11811 = !DILocation(line: 2176, column: 237, scope: !11787)
!11812 = !DILocalVariable(name: "iks", scope: !11787, file: !3, line: 2178, type: !94)
!11813 = !DILocation(line: 2178, column: 8, scope: !11787)
!11814 = !DILocalVariable(name: "bb", scope: !11787, file: !3, line: 2179, type: !92)
!11815 = !DILocation(line: 2179, column: 6, scope: !11787)
!11816 = !DILocalVariable(name: "do_selfcollision", scope: !11787, file: !3, line: 2179, type: !92)
!11817 = !DILocation(line: 2179, column: 10, scope: !11787)
!11818 = !DILocalVariable(name: "do_springcollision", scope: !11787, file: !3, line: 2179, type: !92)
!11819 = !DILocation(line: 2179, column: 28, scope: !11787)
!11820 = !DILocalVariable(name: "do_aero", scope: !11787, file: !3, line: 2179, type: !92)
!11821 = !DILocation(line: 2179, column: 48, scope: !11787)
!11822 = !DILocalVariable(name: "number_of_points_here", scope: !11787, file: !3, line: 2180, type: !92)
!11823 = !DILocation(line: 2180, column: 6, scope: !11787)
!11824 = !DILocation(line: 2180, column: 30, scope: !11787)
!11825 = !DILocation(line: 2180, column: 38, scope: !11787)
!11826 = !DILocation(line: 2180, column: 36, scope: !11787)
!11827 = !DILocalVariable(name: "sb", scope: !11787, file: !3, line: 2181, type: !2192)
!11828 = !DILocation(line: 2181, column: 12, scope: !11787)
!11829 = !DILocation(line: 2181, column: 16, scope: !11787)
!11830 = !DILocation(line: 2181, column: 20, scope: !11787)
!11831 = !DILocalVariable(name: "bp", scope: !11787, file: !3, line: 2182, type: !2386)
!11832 = !DILocation(line: 2182, column: 14, scope: !11787)
!11833 = !DILocation(line: 2185, column: 6, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2185, column: 6)
!11835 = !DILocation(line: 2185, column: 6, scope: !11787)
!11836 = !DILocation(line: 2188, column: 21, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 2185, column: 10)
!11838 = !DILocation(line: 2188, column: 25, scope: !11837)
!11839 = !DILocation(line: 2188, column: 34, scope: !11837)
!11840 = !DILocation(line: 2188, column: 49, scope: !11837)
!11841 = !DILocation(line: 2188, column: 53, scope: !11837)
!11842 = !DILocation(line: 2188, column: 57, scope: !11837)
!11843 = !DILocation(line: 2188, column: 52, scope: !11837)
!11844 = !DILocation(line: 2188, column: 65, scope: !11837)
!11845 = !DILocation(line: 2188, column: 69, scope: !11837)
!11846 = !DILocation(line: 2188, column: 73, scope: !11837)
!11847 = !DILocation(line: 2188, column: 82, scope: !11837)
!11848 = !DILocation(line: 0, scope: !11837)
!11849 = !DILocation(line: 2188, column: 18, scope: !11837)
!11850 = !DILocation(line: 2189, column: 21, scope: !11837)
!11851 = !DILocation(line: 2189, column: 34, scope: !11837)
!11852 = !DILocation(line: 2189, column: 38, scope: !11837)
!11853 = !DILocation(line: 2189, column: 42, scope: !11837)
!11854 = !DILocation(line: 2189, column: 51, scope: !11837)
!11855 = !DILocation(line: 2189, column: 66, scope: !11837)
!11856 = !DILocation(line: 2189, column: 69, scope: !11837)
!11857 = !DILocation(line: 2189, column: 73, scope: !11837)
!11858 = !DILocation(line: 2189, column: 82, scope: !11837)
!11859 = !DILocation(line: 2189, column: 20, scope: !11837)
!11860 = !DILocation(line: 2190, column: 12, scope: !11837)
!11861 = !DILocation(line: 2190, column: 16, scope: !11837)
!11862 = !DILocation(line: 2190, column: 11, scope: !11837)
!11863 = !DILocation(line: 2190, column: 25, scope: !11837)
!11864 = !DILocation(line: 2190, column: 29, scope: !11837)
!11865 = !DILocation(line: 2190, column: 33, scope: !11837)
!11866 = !DILocation(line: 2190, column: 42, scope: !11837)
!11867 = !DILocation(line: 2190, column: 9, scope: !11837)
!11868 = !DILocation(line: 2192, column: 2, scope: !11837)
!11869 = !DILocation(line: 2194, column: 3, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 2193, column: 7)
!11871 = !DILocation(line: 2195, column: 3, scope: !11870)
!11872 = !DILocation(line: 2199, column: 6, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2199, column: 6)
!11874 = !DILocation(line: 2199, column: 10, scope: !11873)
!11875 = !DILocation(line: 2199, column: 21, scope: !11873)
!11876 = !DILocation(line: 2199, column: 19, scope: !11873)
!11877 = !DILocation(line: 2199, column: 6, scope: !11787)
!11878 = !DILocation(line: 2200, column: 3, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 2199, column: 29)
!11880 = !DILocation(line: 2201, column: 3, scope: !11879)
!11881 = !DILocation(line: 2206, column: 8, scope: !11787)
!11882 = !DILocation(line: 2206, column: 12, scope: !11787)
!11883 = !DILocation(line: 2206, column: 19, scope: !11787)
!11884 = !DILocation(line: 2206, column: 5, scope: !11787)
!11885 = !DILocation(line: 2207, column: 10, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2207, column: 2)
!11887 = !DILocation(line: 2207, column: 9, scope: !11886)
!11888 = !DILocation(line: 2207, column: 7, scope: !11886)
!11889 = !DILocation(line: 2207, column: 33, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 2207, column: 2)
!11891 = !DILocation(line: 2207, column: 35, scope: !11890)
!11892 = !DILocation(line: 2207, column: 2, scope: !11886)
!11893 = !DILocation(line: 2209, column: 33, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2207, column: 51)
!11895 = !DILocation(line: 2209, column: 37, scope: !11894)
!11896 = !DILocation(line: 2209, column: 46, scope: !11894)
!11897 = !DILocation(line: 2209, column: 18, scope: !11894)
!11898 = !DILocation(line: 2209, column: 22, scope: !11894)
!11899 = !DILocation(line: 2209, column: 31, scope: !11894)
!11900 = !DILocation(line: 2209, column: 3, scope: !11894)
!11901 = !DILocation(line: 2209, column: 7, scope: !11894)
!11902 = !DILocation(line: 2209, column: 16, scope: !11894)
!11903 = !DILocation(line: 2212, column: 7, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 2212, column: 7)
!11905 = !DILocation(line: 2212, column: 7, scope: !11894)
!11906 = !DILocalVariable(name: "attached", scope: !11907, file: !3, line: 2213, type: !92)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 2212, column: 25)
!11908 = !DILocation(line: 2213, column: 8, scope: !11907)
!11909 = !DILocalVariable(name: "obp", scope: !11907, file: !3, line: 2214, type: !2386)
!11910 = !DILocation(line: 2214, column: 17, scope: !11907)
!11911 = !DILocalVariable(name: "bs", scope: !11907, file: !3, line: 2215, type: !2948)
!11912 = !DILocation(line: 2215, column: 16, scope: !11907)
!11913 = !DILocalVariable(name: "c", scope: !11907, file: !3, line: 2216, type: !92)
!11914 = !DILocation(line: 2216, column: 8, scope: !11907)
!11915 = !DILocalVariable(name: "b", scope: !11907, file: !3, line: 2216, type: !92)
!11916 = !DILocation(line: 2216, column: 11, scope: !11907)
!11917 = !DILocalVariable(name: "velcenter", scope: !11907, file: !3, line: 2217, type: !376)
!11918 = !DILocation(line: 2217, column: 10, scope: !11907)
!11919 = !DILocalVariable(name: "dvel", scope: !11907, file: !3, line: 2217, type: !376)
!11920 = !DILocation(line: 2217, column: 24, scope: !11907)
!11921 = !DILocalVariable(name: "def", scope: !11907, file: !3, line: 2217, type: !376)
!11922 = !DILocation(line: 2217, column: 33, scope: !11907)
!11923 = !DILocalVariable(name: "distance", scope: !11907, file: !3, line: 2218, type: !94)
!11924 = !DILocation(line: 2218, column: 10, scope: !11907)
!11925 = !DILocalVariable(name: "compare", scope: !11907, file: !3, line: 2219, type: !94)
!11926 = !DILocation(line: 2219, column: 10, scope: !11907)
!11927 = !DILocalVariable(name: "bstune", scope: !11907, file: !3, line: 2220, type: !94)
!11928 = !DILocation(line: 2220, column: 10, scope: !11907)
!11929 = !DILocation(line: 2220, column: 19, scope: !11907)
!11930 = !DILocation(line: 2220, column: 23, scope: !11907)
!11931 = !DILocation(line: 2222, column: 11, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 2222, column: 4)
!11933 = !DILocation(line: 2222, column: 15, scope: !11932)
!11934 = !DILocation(line: 2222, column: 10, scope: !11932)
!11935 = !DILocation(line: 2222, column: 30, scope: !11932)
!11936 = !DILocation(line: 2222, column: 34, scope: !11932)
!11937 = !DILocation(line: 2222, column: 28, scope: !11932)
!11938 = !DILocation(line: 2222, column: 9, scope: !11932)
!11939 = !DILocation(line: 2222, column: 42, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 2222, column: 4)
!11941 = !DILocation(line: 2222, column: 45, scope: !11940)
!11942 = !DILocation(line: 2222, column: 52, scope: !11940)
!11943 = !DILocation(line: 2222, column: 51, scope: !11940)
!11944 = !DILocation(line: 2222, column: 43, scope: !11940)
!11945 = !DILocation(line: 2222, column: 4, scope: !11932)
!11946 = !DILocation(line: 2223, column: 16, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2222, column: 68)
!11948 = !DILocation(line: 2223, column: 21, scope: !11947)
!11949 = !DILocation(line: 2223, column: 31, scope: !11947)
!11950 = !DILocation(line: 2223, column: 35, scope: !11947)
!11951 = !DILocation(line: 2223, column: 29, scope: !11947)
!11952 = !DILocation(line: 2223, column: 13, scope: !11947)
!11953 = !DILocation(line: 2224, column: 17, scope: !11947)
!11954 = !DILocation(line: 2224, column: 22, scope: !11947)
!11955 = !DILocation(line: 2224, column: 26, scope: !11947)
!11956 = !DILocation(line: 2224, column: 31, scope: !11947)
!11957 = !DILocation(line: 2224, column: 36, scope: !11947)
!11958 = !DILocation(line: 2224, column: 5, scope: !11947)
!11959 = !DILocation(line: 2227, column: 10, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2227, column: 9)
!11961 = !DILocation(line: 2227, column: 24, scope: !11960)
!11962 = !DILocation(line: 2227, column: 22, scope: !11960)
!11963 = !DILocation(line: 2227, column: 33, scope: !11960)
!11964 = !DILocation(line: 2227, column: 37, scope: !11960)
!11965 = !DILocation(line: 2227, column: 51, scope: !11960)
!11966 = !DILocation(line: 2227, column: 49, scope: !11960)
!11967 = !DILocation(line: 2227, column: 60, scope: !11960)
!11968 = !DILocation(line: 2227, column: 64, scope: !11960)
!11969 = !DILocation(line: 2227, column: 78, scope: !11960)
!11970 = !DILocation(line: 2227, column: 76, scope: !11960)
!11971 = !DILocation(line: 2227, column: 9, scope: !11947)
!11972 = !DILocation(line: 2227, column: 88, scope: !11960)
!11973 = !DILocation(line: 2228, column: 29, scope: !11947)
!11974 = !DILocation(line: 2228, column: 16, scope: !11947)
!11975 = !DILocation(line: 2228, column: 14, scope: !11947)
!11976 = !DILocation(line: 2229, column: 9, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2229, column: 9)
!11978 = !DILocation(line: 2229, column: 20, scope: !11977)
!11979 = !DILocation(line: 2229, column: 18, scope: !11977)
!11980 = !DILocation(line: 2229, column: 9, scope: !11947)
!11981 = !DILocation(line: 2231, column: 15, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 2229, column: 30)
!11983 = !DILocation(line: 2232, column: 13, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 2232, column: 6)
!11985 = !DILocation(line: 2232, column: 18, scope: !11984)
!11986 = !DILocation(line: 2232, column: 12, scope: !11984)
!11987 = !DILocation(line: 2232, column: 11, scope: !11984)
!11988 = !DILocation(line: 2232, column: 29, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 2232, column: 6)
!11990 = !DILocation(line: 2232, column: 30, scope: !11989)
!11991 = !DILocation(line: 2232, column: 6, scope: !11984)
!11992 = !DILocation(line: 2233, column: 12, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 2232, column: 38)
!11994 = !DILocation(line: 2233, column: 16, scope: !11993)
!11995 = !DILocation(line: 2233, column: 26, scope: !11993)
!11996 = !DILocation(line: 2233, column: 31, scope: !11993)
!11997 = !DILocation(line: 2233, column: 39, scope: !11993)
!11998 = !DILocation(line: 2233, column: 40, scope: !11993)
!11999 = !DILocation(line: 2233, column: 24, scope: !11993)
!12000 = !DILocation(line: 2233, column: 10, scope: !11993)
!12001 = !DILocation(line: 2234, column: 13, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2234, column: 11)
!12003 = !DILocation(line: 2234, column: 19, scope: !12002)
!12004 = !DILocation(line: 2234, column: 18, scope: !12002)
!12005 = !DILocation(line: 2234, column: 25, scope: !12002)
!12006 = !DILocation(line: 2234, column: 29, scope: !12002)
!12007 = !DILocation(line: 2234, column: 22, scope: !12002)
!12008 = !DILocation(line: 2234, column: 33, scope: !12002)
!12009 = !DILocation(line: 2234, column: 38, scope: !12002)
!12010 = !DILocation(line: 2234, column: 44, scope: !12002)
!12011 = !DILocation(line: 2234, column: 43, scope: !12002)
!12012 = !DILocation(line: 2234, column: 50, scope: !12002)
!12013 = !DILocation(line: 2234, column: 54, scope: !12002)
!12014 = !DILocation(line: 2234, column: 47, scope: !12002)
!12015 = !DILocation(line: 2234, column: 11, scope: !11993)
!12016 = !DILocation(line: 2235, column: 16, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 2234, column: 59)
!12018 = !DILocation(line: 2236, column: 8, scope: !12017)
!12019 = !DILocation(line: 2237, column: 6, scope: !11993)
!12020 = !DILocation(line: 2232, column: 34, scope: !11989)
!12021 = !DILocation(line: 2232, column: 6, scope: !11989)
!12022 = distinct !{!12022, !11991, !12023}
!12023 = !DILocation(line: 2237, column: 6, scope: !11984)
!12024 = !DILocation(line: 2238, column: 11, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 2238, column: 10)
!12026 = !DILocation(line: 2238, column: 10, scope: !11982)
!12027 = !DILocalVariable(name: "f", scope: !12028, file: !3, line: 2239, type: !94)
!12028 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 2238, column: 21)
!12029 = !DILocation(line: 2239, column: 13, scope: !12028)
!12030 = !DILocation(line: 2239, column: 17, scope: !12028)
!12031 = !DILocation(line: 2239, column: 27, scope: !12028)
!12032 = !DILocation(line: 2239, column: 24, scope: !12028)
!12033 = !DILocation(line: 2239, column: 39, scope: !12028)
!12034 = !DILocation(line: 2239, column: 49, scope: !12028)
!12035 = !DILocation(line: 2239, column: 59, scope: !12028)
!12036 = !DILocation(line: 2239, column: 57, scope: !12028)
!12037 = !DILocation(line: 2239, column: 46, scope: !12028)
!12038 = !DILocation(line: 2239, column: 70, scope: !12028)
!12039 = !DILocation(line: 2239, column: 68, scope: !12028)
!12040 = !DILocation(line: 2239, column: 37, scope: !12028)
!12041 = !DILocation(line: 2239, column: 88, scope: !12028)
!12042 = !DILocation(line: 2239, column: 86, scope: !12028)
!12043 = !DILocation(line: 2239, column: 97, scope: !12028)
!12044 = !DILocation(line: 2239, column: 95, scope: !12028)
!12045 = !DILocation(line: 2239, column: 79, scope: !12028)
!12046 = !DILocation(line: 2241, column: 19, scope: !12028)
!12047 = !DILocation(line: 2241, column: 30, scope: !12028)
!12048 = !DILocation(line: 2241, column: 34, scope: !12028)
!12049 = !DILocation(line: 2241, column: 39, scope: !12028)
!12050 = !DILocation(line: 2241, column: 44, scope: !12028)
!12051 = !DILocation(line: 2241, column: 7, scope: !12028)
!12052 = !DILocation(line: 2242, column: 19, scope: !12028)
!12053 = !DILocation(line: 2242, column: 25, scope: !12028)
!12054 = !DILocation(line: 2242, column: 36, scope: !12028)
!12055 = !DILocation(line: 2242, column: 40, scope: !12028)
!12056 = !DILocation(line: 2242, column: 7, scope: !12028)
!12057 = !DILocation(line: 2243, column: 17, scope: !12028)
!12058 = !DILocation(line: 2243, column: 35, scope: !12028)
!12059 = !DILocation(line: 2243, column: 39, scope: !12028)
!12060 = !DILocation(line: 2243, column: 23, scope: !12028)
!12061 = !DILocation(line: 2243, column: 7, scope: !12028)
!12062 = !DILocation(line: 2245, column: 21, scope: !12028)
!12063 = !DILocation(line: 2245, column: 25, scope: !12028)
!12064 = !DILocation(line: 2245, column: 32, scope: !12028)
!12065 = !DILocation(line: 2245, column: 40, scope: !12028)
!12066 = !DILocation(line: 2245, column: 44, scope: !12028)
!12067 = !DILocation(line: 2245, column: 39, scope: !12028)
!12068 = !DILocation(line: 2245, column: 33, scope: !12028)
!12069 = !DILocation(line: 2245, column: 55, scope: !12028)
!12070 = !DILocation(line: 2245, column: 7, scope: !12028)
!12071 = !DILocation(line: 2246, column: 21, scope: !12028)
!12072 = !DILocation(line: 2246, column: 25, scope: !12028)
!12073 = !DILocation(line: 2246, column: 32, scope: !12028)
!12074 = !DILocation(line: 2246, column: 36, scope: !12028)
!12075 = !DILocation(line: 2246, column: 46, scope: !12028)
!12076 = !DILocation(line: 2246, column: 7, scope: !12028)
!12077 = !DILocation(line: 2249, column: 19, scope: !12028)
!12078 = !DILocation(line: 2249, column: 25, scope: !12028)
!12079 = !DILocation(line: 2249, column: 36, scope: !12028)
!12080 = !DILocation(line: 2249, column: 41, scope: !12028)
!12081 = !DILocation(line: 2249, column: 7, scope: !12028)
!12082 = !DILocation(line: 2250, column: 17, scope: !12028)
!12083 = !DILocation(line: 2250, column: 35, scope: !12028)
!12084 = !DILocation(line: 2250, column: 39, scope: !12028)
!12085 = !DILocation(line: 2250, column: 23, scope: !12028)
!12086 = !DILocation(line: 2250, column: 7, scope: !12028)
!12087 = !DILocation(line: 2252, column: 21, scope: !12028)
!12088 = !DILocation(line: 2252, column: 26, scope: !12028)
!12089 = !DILocation(line: 2252, column: 33, scope: !12028)
!12090 = !DILocation(line: 2252, column: 37, scope: !12028)
!12091 = !DILocation(line: 2252, column: 47, scope: !12028)
!12092 = !DILocation(line: 2252, column: 7, scope: !12028)
!12093 = !DILocation(line: 2253, column: 21, scope: !12028)
!12094 = !DILocation(line: 2253, column: 26, scope: !12028)
!12095 = !DILocation(line: 2253, column: 34, scope: !12028)
!12096 = !DILocation(line: 2253, column: 33, scope: !12028)
!12097 = !DILocation(line: 2253, column: 42, scope: !12028)
!12098 = !DILocation(line: 2253, column: 46, scope: !12028)
!12099 = !DILocation(line: 2253, column: 41, scope: !12028)
!12100 = !DILocation(line: 2253, column: 35, scope: !12028)
!12101 = !DILocation(line: 2253, column: 57, scope: !12028)
!12102 = !DILocation(line: 2253, column: 7, scope: !12028)
!12103 = !DILocation(line: 2254, column: 6, scope: !12028)
!12104 = !DILocation(line: 2255, column: 5, scope: !11982)
!12105 = !DILocation(line: 2256, column: 4, scope: !11947)
!12106 = !DILocation(line: 2222, column: 57, scope: !11940)
!12107 = !DILocation(line: 2222, column: 64, scope: !11940)
!12108 = !DILocation(line: 2222, column: 4, scope: !11940)
!12109 = distinct !{!12109, !11945, !12110}
!12110 = !DILocation(line: 2256, column: 4, scope: !11932)
!12111 = !DILocation(line: 2257, column: 3, scope: !11907)
!12112 = !DILocation(line: 2260, column: 19, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 2260, column: 7)
!12114 = !DILocation(line: 2260, column: 23, scope: !12113)
!12115 = !DILocation(line: 2260, column: 7, scope: !12113)
!12116 = !DILocation(line: 2260, column: 27, scope: !12113)
!12117 = !DILocation(line: 2260, column: 7, scope: !11894)
!12118 = !DILocalVariable(name: "auxvect", scope: !12119, file: !3, line: 2261, type: !376)
!12119 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 2260, column: 43)
!12120 = !DILocation(line: 2261, column: 10, scope: !12119)
!12121 = !DILocalVariable(name: "velgoal", scope: !12119, file: !3, line: 2262, type: !376)
!12122 = !DILocation(line: 2262, column: 10, scope: !12119)
!12123 = !DILocation(line: 2265, column: 8, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2265, column: 8)
!12125 = !DILocation(line: 2265, column: 12, scope: !12124)
!12126 = !DILocation(line: 2265, column: 21, scope: !12124)
!12127 = !DILocation(line: 2265, column: 8, scope: !12119)
!12128 = !DILocalVariable(name: "ks", scope: !12129, file: !3, line: 2267, type: !94)
!12129 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 2265, column: 35)
!12130 = !DILocation(line: 2267, column: 11, scope: !12129)
!12131 = !DILocalVariable(name: "kd", scope: !12129, file: !3, line: 2267, type: !94)
!12132 = !DILocation(line: 2267, column: 15, scope: !12129)
!12133 = !DILocation(line: 2268, column: 17, scope: !12129)
!12134 = !DILocation(line: 2268, column: 26, scope: !12129)
!12135 = !DILocation(line: 2268, column: 30, scope: !12129)
!12136 = !DILocation(line: 2268, column: 35, scope: !12129)
!12137 = !DILocation(line: 2268, column: 39, scope: !12129)
!12138 = !DILocation(line: 2268, column: 5, scope: !12129)
!12139 = !DILocation(line: 2269, column: 38, scope: !12129)
!12140 = !DILocation(line: 2269, column: 42, scope: !12129)
!12141 = !DILocation(line: 2269, column: 26, scope: !12129)
!12142 = !DILocation(line: 2269, column: 48, scope: !12129)
!12143 = !DILocation(line: 2269, column: 52, scope: !12129)
!12144 = !DILocation(line: 2269, column: 46, scope: !12129)
!12145 = !DILocation(line: 2269, column: 24, scope: !12129)
!12146 = !DILocation(line: 2269, column: 16, scope: !12129)
!12147 = !DILocation(line: 2269, column: 64, scope: !12129)
!12148 = !DILocation(line: 2269, column: 9, scope: !12129)
!12149 = !DILocation(line: 2270, column: 21, scope: !12129)
!12150 = !DILocation(line: 2270, column: 20, scope: !12129)
!12151 = !DILocation(line: 2270, column: 25, scope: !12129)
!12152 = !DILocation(line: 2270, column: 23, scope: !12129)
!12153 = !DILocation(line: 2270, column: 5, scope: !12129)
!12154 = !DILocation(line: 2270, column: 9, scope: !12129)
!12155 = !DILocation(line: 2270, column: 17, scope: !12129)
!12156 = !DILocation(line: 2271, column: 21, scope: !12129)
!12157 = !DILocation(line: 2271, column: 20, scope: !12129)
!12158 = !DILocation(line: 2271, column: 25, scope: !12129)
!12159 = !DILocation(line: 2271, column: 23, scope: !12129)
!12160 = !DILocation(line: 2271, column: 5, scope: !12129)
!12161 = !DILocation(line: 2271, column: 9, scope: !12129)
!12162 = !DILocation(line: 2271, column: 17, scope: !12129)
!12163 = !DILocation(line: 2272, column: 21, scope: !12129)
!12164 = !DILocation(line: 2272, column: 20, scope: !12129)
!12165 = !DILocation(line: 2272, column: 25, scope: !12129)
!12166 = !DILocation(line: 2272, column: 23, scope: !12129)
!12167 = !DILocation(line: 2272, column: 5, scope: !12129)
!12168 = !DILocation(line: 2272, column: 9, scope: !12129)
!12169 = !DILocation(line: 2272, column: 17, scope: !12129)
!12170 = !DILocation(line: 2275, column: 17, scope: !12129)
!12171 = !DILocation(line: 2275, column: 26, scope: !12129)
!12172 = !DILocation(line: 2275, column: 30, scope: !12129)
!12173 = !DILocation(line: 2275, column: 37, scope: !12129)
!12174 = !DILocation(line: 2275, column: 41, scope: !12129)
!12175 = !DILocation(line: 2275, column: 5, scope: !12129)
!12176 = !DILocation(line: 2276, column: 11, scope: !12129)
!12177 = !DILocation(line: 2276, column: 15, scope: !12129)
!12178 = !DILocation(line: 2276, column: 47, scope: !12129)
!12179 = !DILocation(line: 2276, column: 27, scope: !12129)
!12180 = !DILocation(line: 2276, column: 25, scope: !12129)
!12181 = !DILocation(line: 2276, column: 8, scope: !12129)
!12182 = !DILocation(line: 2277, column: 17, scope: !12129)
!12183 = !DILocation(line: 2277, column: 26, scope: !12129)
!12184 = !DILocation(line: 2277, column: 35, scope: !12129)
!12185 = !DILocation(line: 2277, column: 39, scope: !12129)
!12186 = !DILocation(line: 2277, column: 5, scope: !12129)
!12187 = !DILocation(line: 2279, column: 9, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2279, column: 9)
!12189 = !DILocation(line: 2279, column: 19, scope: !12188)
!12190 = !DILocation(line: 2279, column: 9, scope: !12129)
!12191 = !DILocation(line: 2280, column: 21, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 2279, column: 27)
!12193 = !DILocation(line: 2280, column: 27, scope: !12192)
!12194 = !DILocation(line: 2280, column: 24, scope: !12192)
!12195 = !DILocation(line: 2280, column: 6, scope: !12192)
!12196 = !DILocation(line: 2280, column: 10, scope: !12192)
!12197 = !DILocation(line: 2280, column: 18, scope: !12192)
!12198 = !DILocation(line: 2281, column: 21, scope: !12192)
!12199 = !DILocation(line: 2281, column: 27, scope: !12192)
!12200 = !DILocation(line: 2281, column: 24, scope: !12192)
!12201 = !DILocation(line: 2281, column: 6, scope: !12192)
!12202 = !DILocation(line: 2281, column: 10, scope: !12192)
!12203 = !DILocation(line: 2281, column: 18, scope: !12192)
!12204 = !DILocation(line: 2282, column: 21, scope: !12192)
!12205 = !DILocation(line: 2282, column: 27, scope: !12192)
!12206 = !DILocation(line: 2282, column: 24, scope: !12192)
!12207 = !DILocation(line: 2282, column: 6, scope: !12192)
!12208 = !DILocation(line: 2282, column: 10, scope: !12192)
!12209 = !DILocation(line: 2282, column: 18, scope: !12192)
!12210 = !DILocation(line: 2283, column: 5, scope: !12192)
!12211 = !DILocation(line: 2285, column: 21, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 2284, column: 10)
!12213 = !DILocation(line: 2285, column: 27, scope: !12212)
!12214 = !DILocation(line: 2285, column: 40, scope: !12212)
!12215 = !DILocation(line: 2285, column: 44, scope: !12212)
!12216 = !DILocation(line: 2285, column: 38, scope: !12212)
!12217 = !DILocation(line: 2285, column: 24, scope: !12212)
!12218 = !DILocation(line: 2285, column: 6, scope: !12212)
!12219 = !DILocation(line: 2285, column: 10, scope: !12212)
!12220 = !DILocation(line: 2285, column: 18, scope: !12212)
!12221 = !DILocation(line: 2286, column: 21, scope: !12212)
!12222 = !DILocation(line: 2286, column: 27, scope: !12212)
!12223 = !DILocation(line: 2286, column: 40, scope: !12212)
!12224 = !DILocation(line: 2286, column: 44, scope: !12212)
!12225 = !DILocation(line: 2286, column: 38, scope: !12212)
!12226 = !DILocation(line: 2286, column: 24, scope: !12212)
!12227 = !DILocation(line: 2286, column: 6, scope: !12212)
!12228 = !DILocation(line: 2286, column: 10, scope: !12212)
!12229 = !DILocation(line: 2286, column: 18, scope: !12212)
!12230 = !DILocation(line: 2287, column: 21, scope: !12212)
!12231 = !DILocation(line: 2287, column: 27, scope: !12212)
!12232 = !DILocation(line: 2287, column: 40, scope: !12212)
!12233 = !DILocation(line: 2287, column: 44, scope: !12212)
!12234 = !DILocation(line: 2287, column: 38, scope: !12212)
!12235 = !DILocation(line: 2287, column: 24, scope: !12212)
!12236 = !DILocation(line: 2287, column: 6, scope: !12212)
!12237 = !DILocation(line: 2287, column: 10, scope: !12212)
!12238 = !DILocation(line: 2287, column: 18, scope: !12212)
!12239 = !DILocation(line: 2289, column: 4, scope: !12129)
!12240 = !DILocation(line: 2293, column: 8, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2293, column: 8)
!12242 = !DILocation(line: 2293, column: 15, scope: !12241)
!12243 = !DILocation(line: 2293, column: 32, scope: !12241)
!12244 = !DILocation(line: 2293, column: 37, scope: !12241)
!12245 = !DILocation(line: 2293, column: 8, scope: !12119)
!12246 = !DILocalVariable(name: "gravity", scope: !12247, file: !3, line: 2294, type: !376)
!12247 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 2293, column: 60)
!12248 = !DILocation(line: 2294, column: 11, scope: !12247)
!12249 = !DILocation(line: 2295, column: 16, scope: !12247)
!12250 = !DILocation(line: 2295, column: 25, scope: !12247)
!12251 = !DILocation(line: 2295, column: 32, scope: !12247)
!12252 = !DILocation(line: 2295, column: 49, scope: !12247)
!12253 = !DILocation(line: 2295, column: 5, scope: !12247)
!12254 = !DILocation(line: 2296, column: 15, scope: !12247)
!12255 = !DILocation(line: 2296, column: 44, scope: !12247)
!12256 = !DILocation(line: 2296, column: 24, scope: !12247)
!12257 = !DILocation(line: 2296, column: 60, scope: !12247)
!12258 = !DILocation(line: 2296, column: 64, scope: !12247)
!12259 = !DILocation(line: 2296, column: 48, scope: !12247)
!12260 = !DILocation(line: 2296, column: 47, scope: !12247)
!12261 = !DILocation(line: 2296, column: 68, scope: !12247)
!12262 = !DILocation(line: 2296, column: 72, scope: !12247)
!12263 = !DILocation(line: 2296, column: 90, scope: !12247)
!12264 = !DILocation(line: 2296, column: 67, scope: !12247)
!12265 = !DILocation(line: 2296, column: 5, scope: !12247)
!12266 = !DILocation(line: 2297, column: 15, scope: !12247)
!12267 = !DILocation(line: 2297, column: 19, scope: !12247)
!12268 = !DILocation(line: 2297, column: 26, scope: !12247)
!12269 = !DILocation(line: 2297, column: 5, scope: !12247)
!12270 = !DILocation(line: 2298, column: 4, scope: !12247)
!12271 = !DILocation(line: 2301, column: 8, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2301, column: 8)
!12273 = !DILocation(line: 2301, column: 8, scope: !12119)
!12274 = !DILocalVariable(name: "epoint", scope: !12275, file: !3, line: 2302, type: !7316)
!12275 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 2301, column: 21)
!12276 = !DILocation(line: 2302, column: 19, scope: !12275)
!12277 = !DILocalVariable(name: "kd", scope: !12275, file: !3, line: 2303, type: !94)
!12278 = !DILocation(line: 2303, column: 11, scope: !12275)
!12279 = !DILocalVariable(name: "force", scope: !12275, file: !3, line: 2304, type: !376)
!12280 = !DILocation(line: 2304, column: 11, scope: !12275)
!12281 = !DILocalVariable(name: "speed", scope: !12275, file: !3, line: 2305, type: !376)
!12282 = !DILocation(line: 2305, column: 11, scope: !12275)
!12283 = !DILocalVariable(name: "eval_sb_fric_force_scale", scope: !12275, file: !3, line: 2306, type: !94)
!12284 = !DILocation(line: 2306, column: 11, scope: !12275)
!12285 = !DILocation(line: 2306, column: 58, scope: !12275)
!12286 = !DILocation(line: 2306, column: 38, scope: !12275)
!12287 = !DILocation(line: 2307, column: 24, scope: !12275)
!12288 = !DILocation(line: 2307, column: 31, scope: !12275)
!12289 = !DILocation(line: 2307, column: 35, scope: !12275)
!12290 = !DILocation(line: 2307, column: 40, scope: !12275)
!12291 = !DILocation(line: 2307, column: 44, scope: !12275)
!12292 = !DILocation(line: 2307, column: 49, scope: !12275)
!12293 = !DILocation(line: 2307, column: 53, scope: !12275)
!12294 = !DILocation(line: 2307, column: 60, scope: !12275)
!12295 = !DILocation(line: 2307, column: 59, scope: !12275)
!12296 = !DILocation(line: 2307, column: 5, scope: !12275)
!12297 = !DILocation(line: 2308, column: 19, scope: !12275)
!12298 = !DILocation(line: 2308, column: 38, scope: !12275)
!12299 = !DILocation(line: 2308, column: 42, scope: !12275)
!12300 = !DILocation(line: 2308, column: 69, scope: !12275)
!12301 = !DILocation(line: 2308, column: 76, scope: !12275)
!12302 = !DILocation(line: 2308, column: 5, scope: !12275)
!12303 = !DILocation(line: 2311, column: 15, scope: !12275)
!12304 = !DILocation(line: 2311, column: 22, scope: !12275)
!12305 = !DILocation(line: 2311, column: 35, scope: !12275)
!12306 = !DILocation(line: 2311, column: 33, scope: !12275)
!12307 = !DILocation(line: 2311, column: 5, scope: !12275)
!12308 = !DILocation(line: 2312, column: 15, scope: !12275)
!12309 = !DILocation(line: 2312, column: 19, scope: !12275)
!12310 = !DILocation(line: 2312, column: 26, scope: !12275)
!12311 = !DILocation(line: 2312, column: 5, scope: !12275)
!12312 = !DILocation(line: 2315, column: 9, scope: !12275)
!12313 = !DILocation(line: 2315, column: 13, scope: !12275)
!12314 = !DILocation(line: 2315, column: 25, scope: !12275)
!12315 = !DILocation(line: 2315, column: 23, scope: !12275)
!12316 = !DILocation(line: 2315, column: 7, scope: !12275)
!12317 = !DILocation(line: 2316, column: 21, scope: !12275)
!12318 = !DILocation(line: 2316, column: 27, scope: !12275)
!12319 = !DILocation(line: 2316, column: 31, scope: !12275)
!12320 = !DILocation(line: 2316, column: 40, scope: !12275)
!12321 = !DILocation(line: 2316, column: 51, scope: !12275)
!12322 = !DILocation(line: 2316, column: 50, scope: !12275)
!12323 = !DILocation(line: 2316, column: 60, scope: !12275)
!12324 = !DILocation(line: 2316, column: 59, scope: !12275)
!12325 = !DILocation(line: 2316, column: 38, scope: !12275)
!12326 = !DILocation(line: 2316, column: 24, scope: !12275)
!12327 = !DILocation(line: 2316, column: 5, scope: !12275)
!12328 = !DILocation(line: 2316, column: 9, scope: !12275)
!12329 = !DILocation(line: 2316, column: 18, scope: !12275)
!12330 = !DILocation(line: 2317, column: 21, scope: !12275)
!12331 = !DILocation(line: 2317, column: 27, scope: !12275)
!12332 = !DILocation(line: 2317, column: 31, scope: !12275)
!12333 = !DILocation(line: 2317, column: 40, scope: !12275)
!12334 = !DILocation(line: 2317, column: 51, scope: !12275)
!12335 = !DILocation(line: 2317, column: 50, scope: !12275)
!12336 = !DILocation(line: 2317, column: 60, scope: !12275)
!12337 = !DILocation(line: 2317, column: 59, scope: !12275)
!12338 = !DILocation(line: 2317, column: 38, scope: !12275)
!12339 = !DILocation(line: 2317, column: 24, scope: !12275)
!12340 = !DILocation(line: 2317, column: 5, scope: !12275)
!12341 = !DILocation(line: 2317, column: 9, scope: !12275)
!12342 = !DILocation(line: 2317, column: 18, scope: !12275)
!12343 = !DILocation(line: 2318, column: 21, scope: !12275)
!12344 = !DILocation(line: 2318, column: 27, scope: !12275)
!12345 = !DILocation(line: 2318, column: 31, scope: !12275)
!12346 = !DILocation(line: 2318, column: 40, scope: !12275)
!12347 = !DILocation(line: 2318, column: 51, scope: !12275)
!12348 = !DILocation(line: 2318, column: 50, scope: !12275)
!12349 = !DILocation(line: 2318, column: 60, scope: !12275)
!12350 = !DILocation(line: 2318, column: 59, scope: !12275)
!12351 = !DILocation(line: 2318, column: 38, scope: !12275)
!12352 = !DILocation(line: 2318, column: 24, scope: !12275)
!12353 = !DILocation(line: 2318, column: 5, scope: !12275)
!12354 = !DILocation(line: 2318, column: 9, scope: !12275)
!12355 = !DILocation(line: 2318, column: 18, scope: !12275)
!12356 = !DILocation(line: 2321, column: 4, scope: !12275)
!12357 = !DILocalVariable(name: "kd", scope: !12358, file: !3, line: 2324, type: !94)
!12358 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 2322, column: 9)
!12359 = !DILocation(line: 2324, column: 11, scope: !12358)
!12360 = !DILocation(line: 2324, column: 16, scope: !12358)
!12361 = !DILocation(line: 2324, column: 20, scope: !12358)
!12362 = !DILocation(line: 2324, column: 52, scope: !12358)
!12363 = !DILocation(line: 2324, column: 32, scope: !12358)
!12364 = !DILocation(line: 2324, column: 30, scope: !12358)
!12365 = !DILocation(line: 2326, column: 20, scope: !12358)
!12366 = !DILocation(line: 2326, column: 24, scope: !12358)
!12367 = !DILocation(line: 2326, column: 31, scope: !12358)
!12368 = !DILocation(line: 2326, column: 30, scope: !12358)
!12369 = !DILocation(line: 2326, column: 5, scope: !12358)
!12370 = !DILocation(line: 2326, column: 9, scope: !12358)
!12371 = !DILocation(line: 2326, column: 17, scope: !12358)
!12372 = !DILocation(line: 2327, column: 20, scope: !12358)
!12373 = !DILocation(line: 2327, column: 24, scope: !12358)
!12374 = !DILocation(line: 2327, column: 31, scope: !12358)
!12375 = !DILocation(line: 2327, column: 30, scope: !12358)
!12376 = !DILocation(line: 2327, column: 5, scope: !12358)
!12377 = !DILocation(line: 2327, column: 9, scope: !12358)
!12378 = !DILocation(line: 2327, column: 17, scope: !12358)
!12379 = !DILocation(line: 2328, column: 20, scope: !12358)
!12380 = !DILocation(line: 2328, column: 24, scope: !12358)
!12381 = !DILocation(line: 2328, column: 31, scope: !12358)
!12382 = !DILocation(line: 2328, column: 30, scope: !12358)
!12383 = !DILocation(line: 2328, column: 5, scope: !12358)
!12384 = !DILocation(line: 2328, column: 9, scope: !12358)
!12385 = !DILocation(line: 2328, column: 17, scope: !12358)
!12386 = !DILocation(line: 2332, column: 4, scope: !12119)
!12387 = !DILocation(line: 2332, column: 8, scope: !12119)
!12388 = !DILocation(line: 2332, column: 14, scope: !12119)
!12389 = !DILocation(line: 2333, column: 4, scope: !12119)
!12390 = !DILocation(line: 2333, column: 8, scope: !12119)
!12391 = !DILocation(line: 2333, column: 15, scope: !12119)
!12392 = !DILocation(line: 2334, column: 4, scope: !12119)
!12393 = !DILocation(line: 2334, column: 8, scope: !12119)
!12394 = !DILocation(line: 2334, column: 17, scope: !12119)
!12395 = !DILocation(line: 2335, column: 8, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2335, column: 8)
!12397 = !DILocation(line: 2335, column: 21, scope: !12396)
!12398 = !DILocation(line: 2335, column: 26, scope: !12396)
!12399 = !DILocation(line: 2335, column: 30, scope: !12396)
!12400 = !DILocation(line: 2335, column: 39, scope: !12396)
!12401 = !DILocation(line: 2335, column: 8, scope: !12119)
!12402 = !DILocalVariable(name: "cfforce", scope: !12403, file: !3, line: 2336, type: !376)
!12403 = distinct !DILexicalBlock(scope: !12396, file: !3, line: 2335, column: 63)
!12404 = !DILocation(line: 2336, column: 11, scope: !12403)
!12405 = !DILocalVariable(name: "defforce", scope: !12403, file: !3, line: 2336, type: !376)
!12406 = !DILocation(line: 2336, column: 23, scope: !12403)
!12407 = !DILocalVariable(name: "vel", scope: !12403, file: !3, line: 2336, type: !376)
!12408 = !DILocation(line: 2336, column: 56, scope: !12403)
!12409 = !DILocalVariable(name: "facenormal", scope: !12403, file: !3, line: 2336, type: !376)
!12410 = !DILocation(line: 2336, column: 85, scope: !12403)
!12411 = !DILocalVariable(name: "cf", scope: !12403, file: !3, line: 2336, type: !94)
!12412 = !DILocation(line: 2336, column: 100, scope: !12403)
!12413 = !DILocalVariable(name: "intrusion", scope: !12403, file: !3, line: 2336, type: !94)
!12414 = !DILocation(line: 2336, column: 111, scope: !12403)
!12415 = !DILocalVariable(name: "kd", scope: !12403, file: !3, line: 2337, type: !94)
!12416 = !DILocation(line: 2337, column: 11, scope: !12403)
!12417 = !DILocation(line: 2339, column: 25, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 2339, column: 9)
!12419 = !DILocation(line: 2339, column: 29, scope: !12418)
!12420 = !DILocation(line: 2339, column: 33, scope: !12418)
!12421 = !DILocation(line: 2339, column: 38, scope: !12418)
!12422 = !DILocation(line: 2339, column: 50, scope: !12418)
!12423 = !DILocation(line: 2339, column: 65, scope: !12418)
!12424 = !DILocation(line: 2339, column: 74, scope: !12418)
!12425 = !DILocation(line: 2339, column: 9, scope: !12418)
!12426 = !DILocation(line: 2339, column: 9, scope: !12403)
!12427 = !DILocation(line: 2340, column: 11, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 2340, column: 11)
!12429 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 2339, column: 92)
!12430 = !DILocation(line: 2340, column: 21, scope: !12428)
!12431 = !DILocation(line: 2340, column: 11, scope: !12429)
!12432 = !DILocation(line: 2341, column: 8, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 2340, column: 29)
!12434 = !DILocation(line: 2341, column: 12, scope: !12433)
!12435 = !DILocation(line: 2341, column: 21, scope: !12433)
!12436 = !DILocation(line: 2341, column: 26, scope: !12433)
!12437 = !DILocation(line: 2342, column: 8, scope: !12433)
!12438 = !DILocation(line: 2342, column: 12, scope: !12433)
!12439 = !DILocation(line: 2342, column: 21, scope: !12433)
!12440 = !DILocation(line: 2343, column: 20, scope: !12433)
!12441 = !DILocation(line: 2343, column: 24, scope: !12433)
!12442 = !DILocation(line: 2343, column: 29, scope: !12433)
!12443 = !DILocation(line: 2343, column: 8, scope: !12433)
!12444 = !DILocation(line: 2343, column: 12, scope: !12433)
!12445 = !DILocation(line: 2343, column: 18, scope: !12433)
!12446 = !DILocation(line: 2344, column: 7, scope: !12433)
!12447 = !DILocation(line: 2346, column: 20, scope: !12429)
!12448 = !DILocation(line: 2346, column: 29, scope: !12429)
!12449 = !DILocation(line: 2346, column: 33, scope: !12429)
!12450 = !DILocation(line: 2346, column: 38, scope: !12429)
!12451 = !DILocation(line: 2346, column: 8, scope: !12429)
!12452 = !DILocation(line: 2347, column: 22, scope: !12429)
!12453 = !DILocation(line: 2347, column: 26, scope: !12429)
!12454 = !DILocation(line: 2347, column: 34, scope: !12429)
!12455 = !DILocation(line: 2347, column: 33, scope: !12429)
!12456 = !DILocation(line: 2347, column: 36, scope: !12429)
!12457 = !DILocation(line: 2347, column: 44, scope: !12429)
!12458 = !DILocation(line: 2347, column: 8, scope: !12429)
!12459 = !DILocation(line: 2349, column: 20, scope: !12429)
!12460 = !DILocation(line: 2349, column: 24, scope: !12429)
!12461 = !DILocation(line: 2349, column: 31, scope: !12429)
!12462 = !DILocation(line: 2349, column: 35, scope: !12429)
!12463 = !DILocation(line: 2349, column: 6, scope: !12429)
!12464 = !DILocation(line: 2350, column: 5, scope: !12429)
!12465 = !DILocation(line: 2352, column: 4, scope: !12403)
!12466 = !DILocation(line: 2356, column: 22, scope: !12119)
!12467 = !DILocation(line: 2356, column: 26, scope: !12119)
!12468 = !DILocation(line: 2356, column: 21, scope: !12119)
!12469 = !DILocation(line: 2356, column: 15, scope: !12119)
!12470 = !DILocation(line: 2356, column: 35, scope: !12119)
!12471 = !DILocation(line: 2356, column: 9, scope: !12119)
!12472 = !DILocation(line: 2357, column: 8, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2357, column: 8)
!12474 = !DILocation(line: 2357, column: 12, scope: !12473)
!12475 = !DILocation(line: 2357, column: 21, scope: !12473)
!12476 = !DILocation(line: 2357, column: 8, scope: !12119)
!12477 = !DILocation(line: 2358, column: 9, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 2358, column: 9)
!12479 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 2357, column: 36)
!12480 = !DILocation(line: 2358, column: 13, scope: !12478)
!12481 = !DILocation(line: 2358, column: 9, scope: !12479)
!12482 = !DILocalVariable(name: "b", scope: !12483, file: !3, line: 2359, type: !92)
!12483 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 2358, column: 22)
!12484 = !DILocation(line: 2359, column: 10, scope: !12483)
!12485 = !DILocalVariable(name: "bs", scope: !12483, file: !3, line: 2360, type: !2948)
!12486 = !DILocation(line: 2360, column: 18, scope: !12483)
!12487 = !DILocation(line: 2361, column: 13, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12483, file: !3, line: 2361, column: 6)
!12489 = !DILocation(line: 2361, column: 17, scope: !12488)
!12490 = !DILocation(line: 2361, column: 12, scope: !12488)
!12491 = !DILocation(line: 2361, column: 11, scope: !12488)
!12492 = !DILocation(line: 2361, column: 28, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 2361, column: 6)
!12494 = !DILocation(line: 2361, column: 29, scope: !12493)
!12495 = !DILocation(line: 2361, column: 6, scope: !12488)
!12496 = !DILocation(line: 2362, column: 12, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 2361, column: 37)
!12498 = !DILocation(line: 2362, column: 16, scope: !12497)
!12499 = !DILocation(line: 2362, column: 26, scope: !12497)
!12500 = !DILocation(line: 2362, column: 30, scope: !12497)
!12501 = !DILocation(line: 2362, column: 38, scope: !12497)
!12502 = !DILocation(line: 2362, column: 39, scope: !12497)
!12503 = !DILocation(line: 2362, column: 24, scope: !12497)
!12504 = !DILocation(line: 2362, column: 10, scope: !12497)
!12505 = !DILocation(line: 2363, column: 11, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 2363, column: 11)
!12507 = !DILocation(line: 2363, column: 30, scope: !12506)
!12508 = !DILocation(line: 2363, column: 33, scope: !12506)
!12509 = !DILocation(line: 2363, column: 11, scope: !12497)
!12510 = !DILocation(line: 2364, column: 18, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12506, file: !3, line: 2363, column: 42)
!12512 = !DILocation(line: 2364, column: 22, scope: !12511)
!12513 = !DILocation(line: 2364, column: 29, scope: !12511)
!12514 = !DILocation(line: 2364, column: 33, scope: !12511)
!12515 = !DILocation(line: 2364, column: 8, scope: !12511)
!12516 = !DILocation(line: 2365, column: 12, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 2365, column: 12)
!12518 = !DILocation(line: 2365, column: 16, scope: !12517)
!12519 = !DILocation(line: 2365, column: 21, scope: !12517)
!12520 = !DILocation(line: 2365, column: 12, scope: !12511)
!12521 = !DILocation(line: 2366, column: 21, scope: !12517)
!12522 = !DILocation(line: 2366, column: 25, scope: !12517)
!12523 = !DILocation(line: 2366, column: 9, scope: !12517)
!12524 = !DILocation(line: 2366, column: 13, scope: !12517)
!12525 = !DILocation(line: 2366, column: 19, scope: !12517)
!12526 = !DILocation(line: 2368, column: 7, scope: !12511)
!12527 = !DILocation(line: 2370, column: 23, scope: !12497)
!12528 = !DILocation(line: 2370, column: 27, scope: !12497)
!12529 = !DILocation(line: 2370, column: 33, scope: !12497)
!12530 = !DILocation(line: 2370, column: 32, scope: !12497)
!12531 = !DILocation(line: 2370, column: 37, scope: !12497)
!12532 = !DILocation(line: 2370, column: 41, scope: !12497)
!12533 = !DILocation(line: 2370, column: 46, scope: !12497)
!12534 = !DILocation(line: 2370, column: 7, scope: !12497)
!12535 = !DILocation(line: 2371, column: 6, scope: !12497)
!12536 = !DILocation(line: 2361, column: 33, scope: !12493)
!12537 = !DILocation(line: 2361, column: 6, scope: !12493)
!12538 = distinct !{!12538, !12495, !12539}
!12539 = !DILocation(line: 2371, column: 6, scope: !12488)
!12540 = !DILocation(line: 2372, column: 5, scope: !12483)
!12541 = !DILocation(line: 2373, column: 4, scope: !12479)
!12542 = !DILocation(line: 2375, column: 3, scope: !12119)
!12543 = !DILocation(line: 2376, column: 2, scope: !11894)
!12544 = !DILocation(line: 2207, column: 41, scope: !11890)
!12545 = !DILocation(line: 2207, column: 47, scope: !11890)
!12546 = !DILocation(line: 2207, column: 2, scope: !11890)
!12547 = distinct !{!12547, !11892, !12548}
!12548 = !DILocation(line: 2376, column: 2, scope: !11886)
!12549 = !DILocation(line: 2377, column: 2, scope: !11787)
!12550 = !DILocation(line: 2378, column: 1, scope: !11787)
!12551 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !2608, file: !2608, line: 788, type: !12552, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!12552 = !DISubroutineType(types: !12553)
!12553 = !{!94, !937, !2611}
!12554 = !DILocalVariable(name: "r", arg: 1, scope: !12551, file: !2608, line: 788, type: !937)
!12555 = !DILocation(line: 788, column: 37, scope: !12551)
!12556 = !DILocalVariable(name: "a", arg: 2, scope: !12551, file: !2608, line: 788, type: !2611)
!12557 = !DILocation(line: 788, column: 55, scope: !12551)
!12558 = !DILocalVariable(name: "d", scope: !12551, file: !2608, line: 790, type: !94)
!12559 = !DILocation(line: 790, column: 8, scope: !12551)
!12560 = !DILocation(line: 790, column: 21, scope: !12551)
!12561 = !DILocation(line: 790, column: 24, scope: !12551)
!12562 = !DILocation(line: 790, column: 12, scope: !12551)
!12563 = !DILocation(line: 794, column: 6, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12551, file: !2608, line: 794, column: 6)
!12565 = !DILocation(line: 794, column: 8, scope: !12564)
!12566 = !DILocation(line: 794, column: 6, scope: !12551)
!12567 = !DILocation(line: 795, column: 13, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12564, file: !2608, line: 794, column: 20)
!12569 = !DILocation(line: 795, column: 7, scope: !12568)
!12570 = !DILocation(line: 795, column: 5, scope: !12568)
!12571 = !DILocation(line: 796, column: 15, scope: !12568)
!12572 = !DILocation(line: 796, column: 18, scope: !12568)
!12573 = !DILocation(line: 796, column: 28, scope: !12568)
!12574 = !DILocation(line: 796, column: 26, scope: !12568)
!12575 = !DILocation(line: 796, column: 3, scope: !12568)
!12576 = !DILocation(line: 797, column: 2, scope: !12568)
!12577 = !DILocation(line: 799, column: 11, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12564, file: !2608, line: 798, column: 7)
!12579 = !DILocation(line: 799, column: 3, scope: !12578)
!12580 = !DILocation(line: 800, column: 5, scope: !12578)
!12581 = !DILocation(line: 803, column: 9, scope: !12551)
!12582 = !DILocation(line: 803, column: 2, scope: !12551)
!12583 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !2608, file: !2608, line: 399, type: !9887, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!12584 = !DILocalVariable(name: "r", arg: 1, scope: !12583, file: !2608, line: 399, type: !937)
!12585 = !DILocation(line: 399, column: 32, scope: !12583)
!12586 = !DILocalVariable(name: "a", arg: 2, scope: !12583, file: !2608, line: 399, type: !2611)
!12587 = !DILocation(line: 399, column: 50, scope: !12583)
!12588 = !DILocalVariable(name: "f", arg: 3, scope: !12583, file: !2608, line: 399, type: !94)
!12589 = !DILocation(line: 399, column: 62, scope: !12583)
!12590 = !DILocation(line: 401, column: 9, scope: !12583)
!12591 = !DILocation(line: 401, column: 16, scope: !12583)
!12592 = !DILocation(line: 401, column: 14, scope: !12583)
!12593 = !DILocation(line: 401, column: 2, scope: !12583)
!12594 = !DILocation(line: 401, column: 7, scope: !12583)
!12595 = !DILocation(line: 402, column: 9, scope: !12583)
!12596 = !DILocation(line: 402, column: 16, scope: !12583)
!12597 = !DILocation(line: 402, column: 14, scope: !12583)
!12598 = !DILocation(line: 402, column: 2, scope: !12583)
!12599 = !DILocation(line: 402, column: 7, scope: !12583)
!12600 = !DILocation(line: 403, column: 9, scope: !12583)
!12601 = !DILocation(line: 403, column: 16, scope: !12583)
!12602 = !DILocation(line: 403, column: 14, scope: !12583)
!12603 = !DILocation(line: 403, column: 2, scope: !12583)
!12604 = !DILocation(line: 403, column: 7, scope: !12583)
!12605 = !DILocation(line: 404, column: 1, scope: !12583)
!12606 = distinct !DISubprogram(name: "sb_detect_vertex_collisionCached", scope: !3, file: !3, line: 1742, type: !12607, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{!92, !937, !937, !937, !937, !6, !525, !94, !937, !937}
!12609 = !DILocalVariable(name: "opco", arg: 1, scope: !12606, file: !3, line: 1742, type: !937)
!12610 = !DILocation(line: 1742, column: 51, scope: !12606)
!12611 = !DILocalVariable(name: "facenormal", arg: 2, scope: !12606, file: !3, line: 1742, type: !937)
!12612 = !DILocation(line: 1742, column: 66, scope: !12606)
!12613 = !DILocalVariable(name: "damp", arg: 3, scope: !12606, file: !3, line: 1742, type: !937)
!12614 = !DILocation(line: 1742, column: 88, scope: !12606)
!12615 = !DILocalVariable(name: "force", arg: 4, scope: !12606, file: !3, line: 1743, type: !937)
!12616 = !DILocation(line: 1743, column: 17, scope: !12606)
!12617 = !DILocalVariable(name: "UNUSED_par_layer", arg: 5, scope: !12606, file: !3, line: 1743, type: !6)
!12618 = !DILocation(line: 1743, column: 40, scope: !12606)
!12619 = !DILocalVariable(name: "vertexowner", arg: 6, scope: !12606, file: !3, line: 1743, type: !525)
!12620 = !DILocation(line: 1743, column: 74, scope: !12606)
!12621 = !DILocalVariable(name: "time", arg: 7, scope: !12606, file: !3, line: 1744, type: !94)
!12622 = !DILocation(line: 1744, column: 17, scope: !12606)
!12623 = !DILocalVariable(name: "vel", arg: 8, scope: !12606, file: !3, line: 1744, type: !937)
!12624 = !DILocation(line: 1744, column: 29, scope: !12606)
!12625 = !DILocalVariable(name: "intrusion", arg: 9, scope: !12606, file: !3, line: 1744, type: !937)
!12626 = !DILocation(line: 1744, column: 44, scope: !12606)
!12627 = !DILocalVariable(name: "ob", scope: !12606, file: !3, line: 1746, type: !2154)
!12628 = !DILocation(line: 1746, column: 10, scope: !12606)
!12629 = !DILocalVariable(name: "hash", scope: !12606, file: !3, line: 1747, type: !1131)
!12630 = !DILocation(line: 1747, column: 9, scope: !12606)
!12631 = !DILocalVariable(name: "ihash", scope: !12606, file: !3, line: 1748, type: !9705)
!12632 = !DILocation(line: 1748, column: 17, scope: !12606)
!12633 = !DILocalVariable(name: "nv1", scope: !12606, file: !3, line: 1749, type: !376)
!12634 = !DILocation(line: 1749, column: 8, scope: !12606)
!12635 = !DILocalVariable(name: "nv2", scope: !12606, file: !3, line: 1749, type: !376)
!12636 = !DILocation(line: 1749, column: 16, scope: !12606)
!12637 = !DILocalVariable(name: "nv3", scope: !12606, file: !3, line: 1749, type: !376)
!12638 = !DILocation(line: 1749, column: 24, scope: !12606)
!12639 = !DILocalVariable(name: "nv4", scope: !12606, file: !3, line: 1749, type: !376)
!12640 = !DILocation(line: 1749, column: 32, scope: !12606)
!12641 = !DILocalVariable(name: "edge1", scope: !12606, file: !3, line: 1749, type: !376)
!12642 = !DILocation(line: 1749, column: 40, scope: !12606)
!12643 = !DILocalVariable(name: "edge2", scope: !12606, file: !3, line: 1749, type: !376)
!12644 = !DILocation(line: 1749, column: 50, scope: !12606)
!12645 = !DILocalVariable(name: "d_nvect", scope: !12606, file: !3, line: 1749, type: !376)
!12646 = !DILocation(line: 1749, column: 60, scope: !12606)
!12647 = !DILocalVariable(name: "dv1", scope: !12606, file: !3, line: 1749, type: !376)
!12648 = !DILocation(line: 1749, column: 72, scope: !12606)
!12649 = !DILocalVariable(name: "ve", scope: !12606, file: !3, line: 1749, type: !376)
!12650 = !DILocation(line: 1749, column: 80, scope: !12606)
!12651 = !DILocalVariable(name: "avel", scope: !12606, file: !3, line: 1749, type: !376)
!12652 = !DILocation(line: 1749, column: 87, scope: !12606)
!12653 = !DILocalVariable(name: "vv1", scope: !12606, file: !3, line: 1750, type: !376)
!12654 = !DILocation(line: 1750, column: 8, scope: !12606)
!12655 = !DILocalVariable(name: "vv2", scope: !12606, file: !3, line: 1750, type: !376)
!12656 = !DILocation(line: 1750, column: 16, scope: !12606)
!12657 = !DILocalVariable(name: "vv3", scope: !12606, file: !3, line: 1750, type: !376)
!12658 = !DILocation(line: 1750, column: 24, scope: !12606)
!12659 = !DILocalVariable(name: "vv4", scope: !12606, file: !3, line: 1750, type: !376)
!12660 = !DILocation(line: 1750, column: 32, scope: !12606)
!12661 = !DILocalVariable(name: "coledge", scope: !12606, file: !3, line: 1750, type: !376)
!12662 = !DILocation(line: 1750, column: 40, scope: !12606)
!12663 = !DILocalVariable(name: "mindistedge", scope: !12606, file: !3, line: 1750, type: !94)
!12664 = !DILocation(line: 1750, column: 73, scope: !12606)
!12665 = !DILocalVariable(name: "outerforceaccu", scope: !12606, file: !3, line: 1751, type: !376)
!12666 = !DILocation(line: 1751, column: 8, scope: !12606)
!12667 = !DILocalVariable(name: "innerforceaccu", scope: !12606, file: !3, line: 1751, type: !376)
!12668 = !DILocation(line: 1751, column: 27, scope: !12606)
!12669 = !DILocalVariable(name: "facedist", scope: !12606, file: !3, line: 1752, type: !94)
!12670 = !DILocation(line: 1752, column: 8, scope: !12606)
!12671 = !DILocalVariable(name: "force_mag_norm", scope: !12606, file: !3, line: 1752, type: !94)
!12672 = !DILocation(line: 1752, column: 44, scope: !12606)
!12673 = !DILocalVariable(name: "minx", scope: !12606, file: !3, line: 1752, type: !94)
!12674 = !DILocation(line: 1752, column: 60, scope: !12606)
!12675 = !DILocalVariable(name: "miny", scope: !12606, file: !3, line: 1752, type: !94)
!12676 = !DILocation(line: 1752, column: 66, scope: !12606)
!12677 = !DILocalVariable(name: "minz", scope: !12606, file: !3, line: 1752, type: !94)
!12678 = !DILocation(line: 1752, column: 72, scope: !12606)
!12679 = !DILocalVariable(name: "maxx", scope: !12606, file: !3, line: 1752, type: !94)
!12680 = !DILocation(line: 1752, column: 78, scope: !12606)
!12681 = !DILocalVariable(name: "maxy", scope: !12606, file: !3, line: 1752, type: !94)
!12682 = !DILocation(line: 1752, column: 84, scope: !12606)
!12683 = !DILocalVariable(name: "maxz", scope: !12606, file: !3, line: 1752, type: !94)
!12684 = !DILocation(line: 1752, column: 90, scope: !12606)
!12685 = !DILocalVariable(name: "innerfacethickness", scope: !12606, file: !3, line: 1753, type: !94)
!12686 = !DILocation(line: 1753, column: 8, scope: !12606)
!12687 = !DILocalVariable(name: "outerfacethickness", scope: !12606, file: !3, line: 1753, type: !94)
!12688 = !DILocation(line: 1753, column: 36, scope: !12606)
!12689 = !DILocalVariable(name: "ee", scope: !12606, file: !3, line: 1754, type: !94)
!12690 = !DILocation(line: 1754, column: 8, scope: !12606)
!12691 = !DILocalVariable(name: "ff", scope: !12606, file: !3, line: 1754, type: !94)
!12692 = !DILocation(line: 1754, column: 19, scope: !12606)
!12693 = !DILocalVariable(name: "fa", scope: !12606, file: !3, line: 1754, type: !94)
!12694 = !DILocation(line: 1754, column: 30, scope: !12606)
!12695 = !DILocalVariable(name: "a", scope: !12606, file: !3, line: 1755, type: !92)
!12696 = !DILocation(line: 1755, column: 6, scope: !12606)
!12697 = !DILocalVariable(name: "deflected", scope: !12606, file: !3, line: 1755, type: !92)
!12698 = !DILocation(line: 1755, column: 9, scope: !12606)
!12699 = !DILocalVariable(name: "cavel", scope: !12606, file: !3, line: 1755, type: !92)
!12700 = !DILocation(line: 1755, column: 22, scope: !12606)
!12701 = !DILocalVariable(name: "ci", scope: !12606, file: !3, line: 1755, type: !92)
!12702 = !DILocation(line: 1755, column: 31, scope: !12606)
!12703 = !DILocation(line: 1757, column: 3, scope: !12606)
!12704 = !DILocation(line: 1757, column: 13, scope: !12606)
!12705 = !DILocation(line: 1758, column: 10, scope: !12606)
!12706 = !DILocation(line: 1758, column: 23, scope: !12606)
!12707 = !DILocation(line: 1758, column: 29, scope: !12606)
!12708 = !DILocation(line: 1758, column: 38, scope: !12606)
!12709 = !DILocation(line: 1758, column: 8, scope: !12606)
!12710 = !DILocation(line: 1759, column: 32, scope: !12606)
!12711 = !DILocation(line: 1759, column: 10, scope: !12606)
!12712 = !DILocation(line: 1759, column: 8, scope: !12606)
!12713 = !DILocation(line: 1760, column: 38, scope: !12606)
!12714 = !DILocation(line: 1760, column: 55, scope: !12606)
!12715 = !DILocation(line: 1760, column: 20, scope: !12606)
!12716 = !DILocation(line: 1760, column: 37, scope: !12606)
!12717 = !DILocation(line: 1760, column: 2, scope: !12606)
!12718 = !DILocation(line: 1760, column: 19, scope: !12606)
!12719 = !DILocation(line: 1761, column: 38, scope: !12606)
!12720 = !DILocation(line: 1761, column: 55, scope: !12606)
!12721 = !DILocation(line: 1761, column: 20, scope: !12606)
!12722 = !DILocation(line: 1761, column: 37, scope: !12606)
!12723 = !DILocation(line: 1761, column: 2, scope: !12606)
!12724 = !DILocation(line: 1761, column: 19, scope: !12606)
!12725 = !DILocation(line: 1763, column: 2, scope: !12606)
!12726 = !DILocation(line: 1763, column: 33, scope: !12606)
!12727 = !DILocation(line: 1763, column: 10, scope: !12606)
!12728 = !DILocation(line: 1763, column: 9, scope: !12606)
!12729 = !DILocalVariable(name: "ccdm", scope: !12730, file: !3, line: 1765, type: !4663)
!12730 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 1763, column: 41)
!12731 = !DILocation(line: 1765, column: 13, scope: !12730)
!12732 = !DILocation(line: 1765, column: 48, scope: !12730)
!12733 = !DILocation(line: 1765, column: 20, scope: !12730)
!12734 = !DILocation(line: 1766, column: 46, scope: !12730)
!12735 = !DILocation(line: 1766, column: 20, scope: !12730)
!12736 = !DILocation(line: 1766, column: 18, scope: !12730)
!12737 = !DILocation(line: 1768, column: 8, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 1768, column: 8)
!12739 = !DILocation(line: 1768, column: 12, scope: !12738)
!12740 = !DILocation(line: 1768, column: 15, scope: !12738)
!12741 = !DILocation(line: 1768, column: 18, scope: !12738)
!12742 = !DILocation(line: 1768, column: 22, scope: !12738)
!12743 = !DILocation(line: 1768, column: 26, scope: !12738)
!12744 = !DILocation(line: 1768, column: 8, scope: !12730)
!12745 = !DILocalVariable(name: "mface", scope: !12746, file: !3, line: 1769, type: !4672)
!12746 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 1768, column: 35)
!12747 = !DILocation(line: 1769, column: 12, scope: !12746)
!12748 = !DILocalVariable(name: "mvert", scope: !12746, file: !3, line: 1770, type: !483)
!12749 = !DILocation(line: 1770, column: 12, scope: !12746)
!12750 = !DILocalVariable(name: "mprevvert", scope: !12746, file: !3, line: 1771, type: !483)
!12751 = !DILocation(line: 1771, column: 12, scope: !12746)
!12752 = !DILocalVariable(name: "mima", scope: !12746, file: !3, line: 1772, type: !4676)
!12753 = !DILocation(line: 1772, column: 18, scope: !12746)
!12754 = !DILocation(line: 1774, column: 9, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 1774, column: 9)
!12756 = !DILocation(line: 1774, column: 9, scope: !12746)
!12757 = !DILocation(line: 1775, column: 13, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 1774, column: 15)
!12759 = !DILocation(line: 1775, column: 19, scope: !12758)
!12760 = !DILocation(line: 1775, column: 11, scope: !12758)
!12761 = !DILocation(line: 1776, column: 13, scope: !12758)
!12762 = !DILocation(line: 1776, column: 19, scope: !12758)
!12763 = !DILocation(line: 1776, column: 11, scope: !12758)
!12764 = !DILocation(line: 1777, column: 17, scope: !12758)
!12765 = !DILocation(line: 1777, column: 23, scope: !12758)
!12766 = !DILocation(line: 1777, column: 15, scope: !12758)
!12767 = !DILocation(line: 1778, column: 12, scope: !12758)
!12768 = !DILocation(line: 1778, column: 18, scope: !12758)
!12769 = !DILocation(line: 1778, column: 10, scope: !12758)
!12770 = !DILocation(line: 1779, column: 10, scope: !12758)
!12771 = !DILocation(line: 1779, column: 16, scope: !12758)
!12772 = !DILocation(line: 1779, column: 8, scope: !12758)
!12773 = !DILocation(line: 1781, column: 13, scope: !12758)
!12774 = !DILocation(line: 1781, column: 19, scope: !12758)
!12775 = !DILocation(line: 1781, column: 11, scope: !12758)
!12776 = !DILocation(line: 1782, column: 13, scope: !12758)
!12777 = !DILocation(line: 1782, column: 19, scope: !12758)
!12778 = !DILocation(line: 1782, column: 11, scope: !12758)
!12779 = !DILocation(line: 1783, column: 13, scope: !12758)
!12780 = !DILocation(line: 1783, column: 19, scope: !12758)
!12781 = !DILocation(line: 1783, column: 11, scope: !12758)
!12782 = !DILocation(line: 1785, column: 13, scope: !12758)
!12783 = !DILocation(line: 1785, column: 19, scope: !12758)
!12784 = !DILocation(line: 1785, column: 11, scope: !12758)
!12785 = !DILocation(line: 1786, column: 13, scope: !12758)
!12786 = !DILocation(line: 1786, column: 19, scope: !12758)
!12787 = !DILocation(line: 1786, column: 11, scope: !12758)
!12788 = !DILocation(line: 1787, column: 13, scope: !12758)
!12789 = !DILocation(line: 1787, column: 19, scope: !12758)
!12790 = !DILocation(line: 1787, column: 11, scope: !12758)
!12791 = !DILocation(line: 1789, column: 11, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 1789, column: 10)
!12793 = !DILocation(line: 1789, column: 21, scope: !12792)
!12794 = !DILocation(line: 1789, column: 19, scope: !12792)
!12795 = !DILocation(line: 1789, column: 27, scope: !12792)
!12796 = !DILocation(line: 1790, column: 11, scope: !12792)
!12797 = !DILocation(line: 1790, column: 21, scope: !12792)
!12798 = !DILocation(line: 1790, column: 19, scope: !12792)
!12799 = !DILocation(line: 1790, column: 27, scope: !12792)
!12800 = !DILocation(line: 1791, column: 11, scope: !12792)
!12801 = !DILocation(line: 1791, column: 21, scope: !12792)
!12802 = !DILocation(line: 1791, column: 19, scope: !12792)
!12803 = !DILocation(line: 1791, column: 27, scope: !12792)
!12804 = !DILocation(line: 1792, column: 11, scope: !12792)
!12805 = !DILocation(line: 1792, column: 21, scope: !12792)
!12806 = !DILocation(line: 1792, column: 19, scope: !12792)
!12807 = !DILocation(line: 1792, column: 27, scope: !12792)
!12808 = !DILocation(line: 1793, column: 11, scope: !12792)
!12809 = !DILocation(line: 1793, column: 21, scope: !12792)
!12810 = !DILocation(line: 1793, column: 19, scope: !12792)
!12811 = !DILocation(line: 1793, column: 27, scope: !12792)
!12812 = !DILocation(line: 1794, column: 11, scope: !12792)
!12813 = !DILocation(line: 1794, column: 21, scope: !12792)
!12814 = !DILocation(line: 1794, column: 19, scope: !12792)
!12815 = !DILocation(line: 1789, column: 10, scope: !12758)
!12816 = !DILocation(line: 1797, column: 30, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 1795, column: 6)
!12818 = !DILocation(line: 1797, column: 7, scope: !12817)
!12819 = !DILocation(line: 1798, column: 7, scope: !12817)
!12820 = distinct !{!12820, !12725, !12821}
!12821 = !DILocation(line: 2002, column: 2, scope: !12606)
!12822 = !DILocation(line: 1800, column: 5, scope: !12758)
!12823 = !DILocation(line: 1803, column: 6, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 1801, column: 10)
!12825 = !DILocation(line: 1804, column: 30, scope: !12824)
!12826 = !DILocation(line: 1804, column: 7, scope: !12824)
!12827 = !DILocation(line: 1805, column: 6, scope: !12824)
!12828 = !DILocation(line: 1810, column: 27, scope: !12746)
!12829 = !DILocation(line: 1810, column: 31, scope: !12746)
!12830 = !DILocation(line: 1810, column: 35, scope: !12746)
!12831 = !DILocation(line: 1810, column: 26, scope: !12746)
!12832 = !DILocation(line: 1810, column: 24, scope: !12746)
!12833 = !DILocation(line: 1811, column: 27, scope: !12746)
!12834 = !DILocation(line: 1811, column: 31, scope: !12746)
!12835 = !DILocation(line: 1811, column: 35, scope: !12746)
!12836 = !DILocation(line: 1811, column: 24, scope: !12746)
!12837 = !DILocation(line: 1812, column: 11, scope: !12746)
!12838 = !DILocation(line: 1812, column: 14, scope: !12746)
!12839 = !DILocation(line: 1812, column: 13, scope: !12746)
!12840 = !DILocation(line: 1812, column: 33, scope: !12746)
!12841 = !DILocation(line: 1812, column: 32, scope: !12746)
!12842 = !DILocation(line: 1812, column: 8, scope: !12746)
!12843 = !DILocation(line: 1813, column: 11, scope: !12746)
!12844 = !DILocation(line: 1813, column: 8, scope: !12746)
!12845 = !DILocation(line: 1814, column: 15, scope: !12746)
!12846 = !DILocation(line: 1814, column: 14, scope: !12746)
!12847 = !DILocation(line: 1814, column: 8, scope: !12746)
!12848 = !DILocation(line: 1815, column: 21, scope: !12746)
!12849 = !DILocation(line: 1815, column: 28, scope: !12746)
!12850 = !DILocation(line: 1815, column: 13, scope: !12746)
!12851 = !DILocation(line: 1815, column: 20, scope: !12746)
!12852 = !DILocation(line: 1815, column: 5, scope: !12746)
!12853 = !DILocation(line: 1815, column: 12, scope: !12746)
!12854 = !DILocation(line: 1817, column: 5, scope: !12746)
!12855 = !DILocation(line: 1817, column: 13, scope: !12746)
!12856 = !DILocation(line: 1819, column: 8, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1819, column: 7)
!12858 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 1817, column: 17)
!12859 = !DILocation(line: 1819, column: 18, scope: !12857)
!12860 = !DILocation(line: 1819, column: 24, scope: !12857)
!12861 = !DILocation(line: 1819, column: 16, scope: !12857)
!12862 = !DILocation(line: 1819, column: 30, scope: !12857)
!12863 = !DILocation(line: 1820, column: 8, scope: !12857)
!12864 = !DILocation(line: 1820, column: 18, scope: !12857)
!12865 = !DILocation(line: 1820, column: 24, scope: !12857)
!12866 = !DILocation(line: 1820, column: 16, scope: !12857)
!12867 = !DILocation(line: 1820, column: 30, scope: !12857)
!12868 = !DILocation(line: 1821, column: 8, scope: !12857)
!12869 = !DILocation(line: 1821, column: 18, scope: !12857)
!12870 = !DILocation(line: 1821, column: 24, scope: !12857)
!12871 = !DILocation(line: 1821, column: 16, scope: !12857)
!12872 = !DILocation(line: 1821, column: 30, scope: !12857)
!12873 = !DILocation(line: 1822, column: 8, scope: !12857)
!12874 = !DILocation(line: 1822, column: 18, scope: !12857)
!12875 = !DILocation(line: 1822, column: 24, scope: !12857)
!12876 = !DILocation(line: 1822, column: 16, scope: !12857)
!12877 = !DILocation(line: 1822, column: 30, scope: !12857)
!12878 = !DILocation(line: 1823, column: 8, scope: !12857)
!12879 = !DILocation(line: 1823, column: 18, scope: !12857)
!12880 = !DILocation(line: 1823, column: 24, scope: !12857)
!12881 = !DILocation(line: 1823, column: 16, scope: !12857)
!12882 = !DILocation(line: 1823, column: 30, scope: !12857)
!12883 = !DILocation(line: 1824, column: 8, scope: !12857)
!12884 = !DILocation(line: 1824, column: 18, scope: !12857)
!12885 = !DILocation(line: 1824, column: 24, scope: !12857)
!12886 = !DILocation(line: 1824, column: 16, scope: !12857)
!12887 = !DILocation(line: 1819, column: 7, scope: !12858)
!12888 = !DILocation(line: 1826, column: 13, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 1825, column: 9)
!12890 = !DILocation(line: 1827, column: 12, scope: !12889)
!12891 = !DILocation(line: 1828, column: 8, scope: !12889)
!12892 = distinct !{!12892, !12854, !12893}
!12893 = !DILocation(line: 1999, column: 5, scope: !12746)
!12894 = !DILocation(line: 1831, column: 10, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1831, column: 10)
!12896 = !DILocation(line: 1831, column: 10, scope: !12858)
!12897 = !DILocation(line: 1833, column: 18, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12895, file: !3, line: 1831, column: 17)
!12899 = !DILocation(line: 1833, column: 23, scope: !12898)
!12900 = !DILocation(line: 1833, column: 29, scope: !12898)
!12901 = !DILocation(line: 1833, column: 36, scope: !12898)
!12902 = !DILocation(line: 1833, column: 40, scope: !12898)
!12903 = !DILocation(line: 1833, column: 7, scope: !12898)
!12904 = !DILocation(line: 1834, column: 18, scope: !12898)
!12905 = !DILocation(line: 1834, column: 23, scope: !12898)
!12906 = !DILocation(line: 1834, column: 29, scope: !12898)
!12907 = !DILocation(line: 1834, column: 36, scope: !12898)
!12908 = !DILocation(line: 1834, column: 40, scope: !12898)
!12909 = !DILocation(line: 1834, column: 7, scope: !12898)
!12910 = !DILocation(line: 1835, column: 18, scope: !12898)
!12911 = !DILocation(line: 1835, column: 23, scope: !12898)
!12912 = !DILocation(line: 1835, column: 29, scope: !12898)
!12913 = !DILocation(line: 1835, column: 36, scope: !12898)
!12914 = !DILocation(line: 1835, column: 40, scope: !12898)
!12915 = !DILocation(line: 1835, column: 7, scope: !12898)
!12916 = !DILocation(line: 1836, column: 11, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12898, file: !3, line: 1836, column: 11)
!12918 = !DILocation(line: 1836, column: 18, scope: !12917)
!12919 = !DILocation(line: 1836, column: 11, scope: !12898)
!12920 = !DILocation(line: 1837, column: 19, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 1836, column: 22)
!12922 = !DILocation(line: 1837, column: 24, scope: !12921)
!12923 = !DILocation(line: 1837, column: 30, scope: !12921)
!12924 = !DILocation(line: 1837, column: 37, scope: !12921)
!12925 = !DILocation(line: 1837, column: 41, scope: !12921)
!12926 = !DILocation(line: 1837, column: 8, scope: !12921)
!12927 = !DILocation(line: 1838, column: 7, scope: !12921)
!12928 = !DILocation(line: 1840, column: 11, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12898, file: !3, line: 1840, column: 11)
!12930 = !DILocation(line: 1840, column: 11, scope: !12898)
!12931 = !DILocation(line: 1847, column: 20, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 1840, column: 22)
!12933 = !DILocation(line: 1847, column: 25, scope: !12932)
!12934 = !DILocation(line: 1847, column: 30, scope: !12932)
!12935 = !DILocation(line: 1847, column: 40, scope: !12932)
!12936 = !DILocation(line: 1847, column: 47, scope: !12932)
!12937 = !DILocation(line: 1847, column: 51, scope: !12932)
!12938 = !DILocation(line: 1847, column: 8, scope: !12932)
!12939 = !DILocation(line: 1848, column: 20, scope: !12932)
!12940 = !DILocation(line: 1848, column: 25, scope: !12932)
!12941 = !DILocation(line: 1848, column: 30, scope: !12932)
!12942 = !DILocation(line: 1848, column: 40, scope: !12932)
!12943 = !DILocation(line: 1848, column: 47, scope: !12932)
!12944 = !DILocation(line: 1848, column: 51, scope: !12932)
!12945 = !DILocation(line: 1848, column: 8, scope: !12932)
!12946 = !DILocation(line: 1849, column: 20, scope: !12932)
!12947 = !DILocation(line: 1849, column: 25, scope: !12932)
!12948 = !DILocation(line: 1849, column: 30, scope: !12932)
!12949 = !DILocation(line: 1849, column: 40, scope: !12932)
!12950 = !DILocation(line: 1849, column: 47, scope: !12932)
!12951 = !DILocation(line: 1849, column: 51, scope: !12932)
!12952 = !DILocation(line: 1849, column: 8, scope: !12932)
!12953 = !DILocation(line: 1850, column: 12, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 1850, column: 12)
!12955 = !DILocation(line: 1850, column: 19, scope: !12954)
!12956 = !DILocation(line: 1850, column: 12, scope: !12932)
!12957 = !DILocation(line: 1851, column: 21, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12954, file: !3, line: 1850, column: 23)
!12959 = !DILocation(line: 1851, column: 26, scope: !12958)
!12960 = !DILocation(line: 1851, column: 31, scope: !12958)
!12961 = !DILocation(line: 1851, column: 41, scope: !12958)
!12962 = !DILocation(line: 1851, column: 48, scope: !12958)
!12963 = !DILocation(line: 1851, column: 52, scope: !12958)
!12964 = !DILocation(line: 1851, column: 9, scope: !12958)
!12965 = !DILocation(line: 1852, column: 8, scope: !12958)
!12966 = !DILocation(line: 1854, column: 18, scope: !12932)
!12967 = !DILocation(line: 1854, column: 23, scope: !12932)
!12968 = !DILocation(line: 1854, column: 8, scope: !12932)
!12969 = !DILocation(line: 1855, column: 22, scope: !12932)
!12970 = !DILocation(line: 1855, column: 33, scope: !12932)
!12971 = !DILocation(line: 1855, column: 32, scope: !12932)
!12972 = !DILocation(line: 1855, column: 40, scope: !12932)
!12973 = !DILocation(line: 1855, column: 50, scope: !12932)
!12974 = !DILocation(line: 1855, column: 57, scope: !12932)
!12975 = !DILocation(line: 1855, column: 61, scope: !12932)
!12976 = !DILocation(line: 1855, column: 8, scope: !12932)
!12977 = !DILocation(line: 1857, column: 18, scope: !12932)
!12978 = !DILocation(line: 1857, column: 23, scope: !12932)
!12979 = !DILocation(line: 1857, column: 8, scope: !12932)
!12980 = !DILocation(line: 1858, column: 22, scope: !12932)
!12981 = !DILocation(line: 1858, column: 33, scope: !12932)
!12982 = !DILocation(line: 1858, column: 32, scope: !12932)
!12983 = !DILocation(line: 1858, column: 40, scope: !12932)
!12984 = !DILocation(line: 1858, column: 50, scope: !12932)
!12985 = !DILocation(line: 1858, column: 57, scope: !12932)
!12986 = !DILocation(line: 1858, column: 61, scope: !12932)
!12987 = !DILocation(line: 1858, column: 8, scope: !12932)
!12988 = !DILocation(line: 1860, column: 18, scope: !12932)
!12989 = !DILocation(line: 1860, column: 23, scope: !12932)
!12990 = !DILocation(line: 1860, column: 8, scope: !12932)
!12991 = !DILocation(line: 1861, column: 22, scope: !12932)
!12992 = !DILocation(line: 1861, column: 33, scope: !12932)
!12993 = !DILocation(line: 1861, column: 32, scope: !12932)
!12994 = !DILocation(line: 1861, column: 40, scope: !12932)
!12995 = !DILocation(line: 1861, column: 50, scope: !12932)
!12996 = !DILocation(line: 1861, column: 57, scope: !12932)
!12997 = !DILocation(line: 1861, column: 61, scope: !12932)
!12998 = !DILocation(line: 1861, column: 8, scope: !12932)
!12999 = !DILocation(line: 1863, column: 12, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 1863, column: 12)
!13001 = !DILocation(line: 1863, column: 19, scope: !13000)
!13002 = !DILocation(line: 1863, column: 12, scope: !12932)
!13003 = !DILocation(line: 1864, column: 19, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 1863, column: 23)
!13005 = !DILocation(line: 1864, column: 24, scope: !13004)
!13006 = !DILocation(line: 1864, column: 9, scope: !13004)
!13007 = !DILocation(line: 1865, column: 23, scope: !13004)
!13008 = !DILocation(line: 1865, column: 34, scope: !13004)
!13009 = !DILocation(line: 1865, column: 33, scope: !13004)
!13010 = !DILocation(line: 1865, column: 41, scope: !13004)
!13011 = !DILocation(line: 1865, column: 51, scope: !13004)
!13012 = !DILocation(line: 1865, column: 58, scope: !13004)
!13013 = !DILocation(line: 1865, column: 62, scope: !13004)
!13014 = !DILocation(line: 1865, column: 9, scope: !13004)
!13015 = !DILocation(line: 1866, column: 8, scope: !13004)
!13016 = !DILocation(line: 1867, column: 7, scope: !12932)
!13017 = !DILocation(line: 1868, column: 6, scope: !12898)
!13018 = !DILocation(line: 1871, column: 18, scope: !12858)
!13019 = !DILocation(line: 1871, column: 25, scope: !12858)
!13020 = !DILocation(line: 1871, column: 30, scope: !12858)
!13021 = !DILocation(line: 1871, column: 6, scope: !12858)
!13022 = !DILocation(line: 1872, column: 18, scope: !12858)
!13023 = !DILocation(line: 1872, column: 25, scope: !12858)
!13024 = !DILocation(line: 1872, column: 30, scope: !12858)
!13025 = !DILocation(line: 1872, column: 6, scope: !12858)
!13026 = !DILocation(line: 1873, column: 18, scope: !12858)
!13027 = !DILocation(line: 1873, column: 23, scope: !12858)
!13028 = !DILocation(line: 1873, column: 29, scope: !12858)
!13029 = !DILocation(line: 1873, column: 6, scope: !12858)
!13030 = !DILocation(line: 1875, column: 20, scope: !12858)
!13031 = !DILocation(line: 1875, column: 29, scope: !12858)
!13032 = !DILocation(line: 1875, column: 36, scope: !12858)
!13033 = !DILocation(line: 1875, column: 6, scope: !12858)
!13034 = !DILocation(line: 1876, column: 46, scope: !12858)
!13035 = !DILocation(line: 1876, column: 33, scope: !12858)
!13036 = !DILocation(line: 1877, column: 26, scope: !12858)
!13037 = !DILocation(line: 1877, column: 31, scope: !12858)
!13038 = !DILocation(line: 1877, column: 17, scope: !12858)
!13039 = !DILocation(line: 1877, column: 15, scope: !12858)
!13040 = !DILocation(line: 1881, column: 11, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1881, column: 10)
!13042 = !DILocation(line: 1881, column: 22, scope: !13041)
!13043 = !DILocation(line: 1881, column: 20, scope: !13041)
!13044 = !DILocation(line: 1881, column: 42, scope: !13041)
!13045 = !DILocation(line: 1881, column: 46, scope: !13041)
!13046 = !DILocation(line: 1881, column: 57, scope: !13041)
!13047 = !DILocation(line: 1881, column: 55, scope: !13041)
!13048 = !DILocation(line: 1881, column: 10, scope: !12858)
!13049 = !DILocation(line: 1882, column: 36, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1882, column: 11)
!13051 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 1881, column: 78)
!13052 = !DILocation(line: 1882, column: 42, scope: !13050)
!13053 = !DILocation(line: 1882, column: 47, scope: !13050)
!13054 = !DILocation(line: 1882, column: 52, scope: !13050)
!13055 = !DILocation(line: 1882, column: 11, scope: !13050)
!13056 = !DILocation(line: 1882, column: 11, scope: !13051)
!13057 = !DILocation(line: 1883, column: 36, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13050, file: !3, line: 1882, column: 59)
!13059 = !DILocation(line: 1883, column: 35, scope: !13058)
!13060 = !DILocation(line: 1883, column: 39, scope: !13058)
!13061 = !DILocation(line: 1883, column: 38, scope: !13058)
!13062 = !DILocation(line: 1883, column: 31, scope: !13058)
!13063 = !DILocation(line: 1883, column: 24, scope: !13058)
!13064 = !DILocation(line: 1883, column: 23, scope: !13058)
!13065 = !DILocation(line: 1884, column: 12, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13058, file: !3, line: 1884, column: 12)
!13067 = !DILocation(line: 1884, column: 23, scope: !13066)
!13068 = !DILocation(line: 1884, column: 42, scope: !13066)
!13069 = !DILocation(line: 1884, column: 41, scope: !13066)
!13070 = !DILocation(line: 1884, column: 21, scope: !13066)
!13071 = !DILocation(line: 1884, column: 12, scope: !13058)
!13072 = !DILocation(line: 1885, column: 32, scope: !13066)
!13073 = !DILocation(line: 1885, column: 47, scope: !13066)
!13074 = !DILocation(line: 1885, column: 46, scope: !13066)
!13075 = !DILocation(line: 1885, column: 51, scope: !13066)
!13076 = !DILocation(line: 1885, column: 62, scope: !13066)
!13077 = !DILocation(line: 1885, column: 60, scope: !13066)
!13078 = !DILocation(line: 1885, column: 49, scope: !13066)
!13079 = !DILocation(line: 1885, column: 83, scope: !13066)
!13080 = !DILocation(line: 1885, column: 94, scope: !13066)
!13081 = !DILocation(line: 1885, column: 92, scope: !13066)
!13082 = !DILocation(line: 1885, column: 81, scope: !13066)
!13083 = !DILocation(line: 1885, column: 24, scope: !13066)
!13084 = !DILocation(line: 1885, column: 9, scope: !13066)
!13085 = !DILocation(line: 1886, column: 14, scope: !13058)
!13086 = !DILocation(line: 1886, column: 18, scope: !13058)
!13087 = !DILocation(line: 1886, column: 22, scope: !13058)
!13088 = !DILocation(line: 1886, column: 9, scope: !13058)
!13089 = !DILocation(line: 1886, column: 13, scope: !13058)
!13090 = !DILocation(line: 1887, column: 12, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13058, file: !3, line: 1887, column: 12)
!13092 = !DILocation(line: 1887, column: 21, scope: !13091)
!13093 = !DILocation(line: 1887, column: 12, scope: !13058)
!13094 = !DILocation(line: 1888, column: 26, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13091, file: !3, line: 1887, column: 29)
!13096 = !DILocation(line: 1888, column: 35, scope: !13095)
!13097 = !DILocation(line: 1888, column: 34, scope: !13095)
!13098 = !DILocation(line: 1888, column: 24, scope: !13095)
!13099 = !DILocation(line: 1888, column: 10, scope: !13095)
!13100 = !DILocation(line: 1888, column: 15, scope: !13095)
!13101 = !DILocation(line: 1889, column: 23, scope: !13095)
!13102 = !DILocation(line: 1889, column: 39, scope: !13095)
!13103 = !DILocation(line: 1889, column: 55, scope: !13095)
!13104 = !DILocation(line: 1889, column: 9, scope: !13095)
!13105 = !DILocation(line: 1890, column: 19, scope: !13095)
!13106 = !DILocation(line: 1892, column: 8, scope: !13095)
!13107 = !DILocation(line: 1894, column: 23, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13091, file: !3, line: 1893, column: 13)
!13109 = !DILocation(line: 1894, column: 39, scope: !13108)
!13110 = !DILocation(line: 1894, column: 55, scope: !13108)
!13111 = !DILocation(line: 1894, column: 9, scope: !13108)
!13112 = !DILocation(line: 1895, column: 13, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13108, file: !3, line: 1895, column: 13)
!13114 = !DILocation(line: 1895, column: 23, scope: !13113)
!13115 = !DILocation(line: 1895, column: 13, scope: !13108)
!13116 = !DILocation(line: 1895, column: 38, scope: !13113)
!13117 = !DILocation(line: 1895, column: 28, scope: !13113)
!13118 = !DILocation(line: 1897, column: 13, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13058, file: !3, line: 1897, column: 12)
!13120 = !DILocation(line: 1897, column: 12, scope: !13119)
!13121 = !DILocation(line: 1897, column: 24, scope: !13119)
!13122 = !DILocation(line: 1897, column: 29, scope: !13119)
!13123 = !DILocation(line: 1897, column: 28, scope: !13119)
!13124 = !DILocation(line: 1897, column: 34, scope: !13119)
!13125 = !DILocation(line: 1897, column: 12, scope: !13058)
!13126 = !DILocation(line: 1898, column: 23, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 1897, column: 43)
!13128 = !DILocation(line: 1898, column: 27, scope: !13127)
!13129 = !DILocation(line: 1898, column: 33, scope: !13127)
!13130 = !DILocation(line: 1898, column: 38, scope: !13127)
!13131 = !DILocation(line: 1898, column: 43, scope: !13127)
!13132 = !DILocation(line: 1898, column: 48, scope: !13127)
!13133 = !DILocation(line: 1898, column: 53, scope: !13127)
!13134 = !DILocation(line: 1898, column: 58, scope: !13127)
!13135 = !DILocation(line: 1898, column: 9, scope: !13127)
!13136 = !DILocation(line: 1899, column: 19, scope: !13127)
!13137 = !DILocation(line: 1899, column: 25, scope: !13127)
!13138 = !DILocation(line: 1899, column: 9, scope: !13127)
!13139 = !DILocation(line: 1900, column: 15, scope: !13127)
!13140 = !DILocation(line: 1901, column: 8, scope: !13127)
!13141 = !DILocation(line: 1902, column: 22, scope: !13058)
!13142 = !DILocation(line: 1902, column: 9, scope: !13058)
!13143 = !DILocation(line: 1902, column: 19, scope: !13058)
!13144 = !DILocation(line: 1903, column: 10, scope: !13058)
!13145 = !DILocation(line: 1904, column: 7, scope: !13058)
!13146 = !DILocation(line: 1905, column: 6, scope: !13051)
!13147 = !DILocation(line: 1906, column: 10, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 1906, column: 10)
!13149 = !DILocation(line: 1906, column: 17, scope: !13148)
!13150 = !DILocation(line: 1906, column: 10, scope: !12858)
!13151 = !DILocation(line: 1908, column: 19, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 1906, column: 21)
!13153 = !DILocation(line: 1908, column: 26, scope: !13152)
!13154 = !DILocation(line: 1908, column: 31, scope: !13152)
!13155 = !DILocation(line: 1908, column: 7, scope: !13152)
!13156 = !DILocation(line: 1909, column: 19, scope: !13152)
!13157 = !DILocation(line: 1909, column: 26, scope: !13152)
!13158 = !DILocation(line: 1909, column: 31, scope: !13152)
!13159 = !DILocation(line: 1909, column: 7, scope: !13152)
!13160 = !DILocation(line: 1910, column: 19, scope: !13152)
!13161 = !DILocation(line: 1910, column: 24, scope: !13152)
!13162 = !DILocation(line: 1910, column: 30, scope: !13152)
!13163 = !DILocation(line: 1910, column: 7, scope: !13152)
!13164 = !DILocation(line: 1912, column: 21, scope: !13152)
!13165 = !DILocation(line: 1912, column: 30, scope: !13152)
!13166 = !DILocation(line: 1912, column: 37, scope: !13152)
!13167 = !DILocation(line: 1912, column: 7, scope: !13152)
!13168 = !DILocation(line: 1913, column: 47, scope: !13152)
!13169 = !DILocation(line: 1913, column: 34, scope: !13152)
!13170 = !DILocation(line: 1914, column: 27, scope: !13152)
!13171 = !DILocation(line: 1914, column: 32, scope: !13152)
!13172 = !DILocation(line: 1914, column: 18, scope: !13152)
!13173 = !DILocation(line: 1914, column: 16, scope: !13152)
!13174 = !DILocation(line: 1916, column: 12, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13152, file: !3, line: 1916, column: 11)
!13176 = !DILocation(line: 1916, column: 23, scope: !13175)
!13177 = !DILocation(line: 1916, column: 21, scope: !13175)
!13178 = !DILocation(line: 1916, column: 43, scope: !13175)
!13179 = !DILocation(line: 1916, column: 47, scope: !13175)
!13180 = !DILocation(line: 1916, column: 58, scope: !13175)
!13181 = !DILocation(line: 1916, column: 56, scope: !13175)
!13182 = !DILocation(line: 1916, column: 11, scope: !13152)
!13183 = !DILocation(line: 1917, column: 37, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 1917, column: 12)
!13185 = distinct !DILexicalBlock(scope: !13175, file: !3, line: 1916, column: 79)
!13186 = !DILocation(line: 1917, column: 43, scope: !13184)
!13187 = !DILocation(line: 1917, column: 48, scope: !13184)
!13188 = !DILocation(line: 1917, column: 53, scope: !13184)
!13189 = !DILocation(line: 1917, column: 12, scope: !13184)
!13190 = !DILocation(line: 1917, column: 12, scope: !13185)
!13191 = !DILocation(line: 1918, column: 37, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 1917, column: 60)
!13193 = !DILocation(line: 1918, column: 36, scope: !13192)
!13194 = !DILocation(line: 1918, column: 40, scope: !13192)
!13195 = !DILocation(line: 1918, column: 39, scope: !13192)
!13196 = !DILocation(line: 1918, column: 32, scope: !13192)
!13197 = !DILocation(line: 1918, column: 25, scope: !13192)
!13198 = !DILocation(line: 1918, column: 24, scope: !13192)
!13199 = !DILocation(line: 1919, column: 13, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 1919, column: 13)
!13201 = !DILocation(line: 1919, column: 24, scope: !13200)
!13202 = !DILocation(line: 1919, column: 43, scope: !13200)
!13203 = !DILocation(line: 1919, column: 42, scope: !13200)
!13204 = !DILocation(line: 1919, column: 22, scope: !13200)
!13205 = !DILocation(line: 1919, column: 13, scope: !13192)
!13206 = !DILocation(line: 1920, column: 33, scope: !13200)
!13207 = !DILocation(line: 1920, column: 48, scope: !13200)
!13208 = !DILocation(line: 1920, column: 47, scope: !13200)
!13209 = !DILocation(line: 1920, column: 52, scope: !13200)
!13210 = !DILocation(line: 1920, column: 63, scope: !13200)
!13211 = !DILocation(line: 1920, column: 61, scope: !13200)
!13212 = !DILocation(line: 1920, column: 50, scope: !13200)
!13213 = !DILocation(line: 1920, column: 84, scope: !13200)
!13214 = !DILocation(line: 1920, column: 95, scope: !13200)
!13215 = !DILocation(line: 1920, column: 93, scope: !13200)
!13216 = !DILocation(line: 1920, column: 82, scope: !13200)
!13217 = !DILocation(line: 1920, column: 25, scope: !13200)
!13218 = !DILocation(line: 1920, column: 10, scope: !13200)
!13219 = !DILocation(line: 1921, column: 15, scope: !13192)
!13220 = !DILocation(line: 1921, column: 19, scope: !13192)
!13221 = !DILocation(line: 1921, column: 23, scope: !13192)
!13222 = !DILocation(line: 1921, column: 10, scope: !13192)
!13223 = !DILocation(line: 1921, column: 14, scope: !13192)
!13224 = !DILocation(line: 1922, column: 12, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 1922, column: 12)
!13226 = !DILocation(line: 1922, column: 21, scope: !13225)
!13227 = !DILocation(line: 1922, column: 12, scope: !13192)
!13228 = !DILocation(line: 1923, column: 26, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 1922, column: 29)
!13230 = !DILocation(line: 1923, column: 35, scope: !13229)
!13231 = !DILocation(line: 1923, column: 34, scope: !13229)
!13232 = !DILocation(line: 1923, column: 24, scope: !13229)
!13233 = !DILocation(line: 1923, column: 10, scope: !13229)
!13234 = !DILocation(line: 1923, column: 15, scope: !13229)
!13235 = !DILocation(line: 1924, column: 23, scope: !13229)
!13236 = !DILocation(line: 1924, column: 39, scope: !13229)
!13237 = !DILocation(line: 1924, column: 55, scope: !13229)
!13238 = !DILocation(line: 1924, column: 9, scope: !13229)
!13239 = !DILocation(line: 1925, column: 19, scope: !13229)
!13240 = !DILocation(line: 1927, column: 8, scope: !13229)
!13241 = !DILocation(line: 1929, column: 23, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 1928, column: 13)
!13243 = !DILocation(line: 1929, column: 39, scope: !13242)
!13244 = !DILocation(line: 1929, column: 55, scope: !13242)
!13245 = !DILocation(line: 1929, column: 9, scope: !13242)
!13246 = !DILocation(line: 1930, column: 13, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 1930, column: 13)
!13248 = !DILocation(line: 1930, column: 23, scope: !13247)
!13249 = !DILocation(line: 1930, column: 13, scope: !13242)
!13250 = !DILocation(line: 1930, column: 38, scope: !13247)
!13251 = !DILocation(line: 1930, column: 28, scope: !13247)
!13252 = !DILocation(line: 1933, column: 14, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 1933, column: 13)
!13254 = !DILocation(line: 1933, column: 13, scope: !13253)
!13255 = !DILocation(line: 1933, column: 25, scope: !13253)
!13256 = !DILocation(line: 1933, column: 30, scope: !13253)
!13257 = !DILocation(line: 1933, column: 29, scope: !13253)
!13258 = !DILocation(line: 1933, column: 35, scope: !13253)
!13259 = !DILocation(line: 1933, column: 13, scope: !13192)
!13260 = !DILocation(line: 1934, column: 24, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 1933, column: 44)
!13262 = !DILocation(line: 1934, column: 28, scope: !13261)
!13263 = !DILocation(line: 1934, column: 34, scope: !13261)
!13264 = !DILocation(line: 1934, column: 39, scope: !13261)
!13265 = !DILocation(line: 1934, column: 44, scope: !13261)
!13266 = !DILocation(line: 1934, column: 49, scope: !13261)
!13267 = !DILocation(line: 1934, column: 54, scope: !13261)
!13268 = !DILocation(line: 1934, column: 59, scope: !13261)
!13269 = !DILocation(line: 1934, column: 10, scope: !13261)
!13270 = !DILocation(line: 1935, column: 20, scope: !13261)
!13271 = !DILocation(line: 1935, column: 26, scope: !13261)
!13272 = !DILocation(line: 1935, column: 10, scope: !13261)
!13273 = !DILocation(line: 1936, column: 16, scope: !13261)
!13274 = !DILocation(line: 1937, column: 9, scope: !13261)
!13275 = !DILocation(line: 1938, column: 23, scope: !13192)
!13276 = !DILocation(line: 1938, column: 10, scope: !13192)
!13277 = !DILocation(line: 1938, column: 20, scope: !13192)
!13278 = !DILocation(line: 1939, column: 11, scope: !13192)
!13279 = !DILocation(line: 1940, column: 8, scope: !13192)
!13280 = !DILocation(line: 1942, column: 7, scope: !13185)
!13281 = !DILocation(line: 1943, column: 12, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13152, file: !3, line: 1943, column: 11)
!13283 = !DILocation(line: 1943, column: 22, scope: !13282)
!13284 = !DILocation(line: 1943, column: 26, scope: !13282)
!13285 = !DILocation(line: 1943, column: 32, scope: !13282)
!13286 = !DILocation(line: 1943, column: 30, scope: !13282)
!13287 = !DILocation(line: 1943, column: 44, scope: !13282)
!13288 = !DILocation(line: 1943, column: 11, scope: !13152)
!13289 = !DILocalVariable(name: "dist", scope: !13290, file: !3, line: 1945, type: !94)
!13290 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 1943, column: 53)
!13291 = !DILocation(line: 1945, column: 14, scope: !13290)
!13292 = !DILocation(line: 1947, column: 35, scope: !13290)
!13293 = !DILocation(line: 1947, column: 39, scope: !13290)
!13294 = !DILocation(line: 1947, column: 45, scope: !13290)
!13295 = !DILocation(line: 1947, column: 50, scope: !13290)
!13296 = !DILocation(line: 1947, column: 8, scope: !13290)
!13297 = !DILocation(line: 1948, column: 21, scope: !13290)
!13298 = !DILocation(line: 1948, column: 25, scope: !13290)
!13299 = !DILocation(line: 1948, column: 31, scope: !13290)
!13300 = !DILocation(line: 1948, column: 9, scope: !13290)
!13301 = !DILocation(line: 1949, column: 28, scope: !13290)
!13302 = !DILocation(line: 1949, column: 15, scope: !13290)
!13303 = !DILocation(line: 1949, column: 13, scope: !13290)
!13304 = !DILocation(line: 1950, column: 13, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 1950, column: 12)
!13306 = !DILocation(line: 1950, column: 20, scope: !13305)
!13307 = !DILocation(line: 1950, column: 18, scope: !13305)
!13308 = !DILocation(line: 1950, column: 39, scope: !13305)
!13309 = !DILocation(line: 1950, column: 42, scope: !13305)
!13310 = !DILocation(line: 1950, column: 49, scope: !13305)
!13311 = !DILocation(line: 1950, column: 47, scope: !13305)
!13312 = !DILocation(line: 1950, column: 12, scope: !13290)
!13313 = !DILocation(line: 1951, column: 20, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 1950, column: 64)
!13315 = !DILocation(line: 1951, column: 29, scope: !13314)
!13316 = !DILocation(line: 1951, column: 9, scope: !13314)
!13317 = !DILocation(line: 1952, column: 23, scope: !13314)
!13318 = !DILocation(line: 1952, column: 21, scope: !13314)
!13319 = !DILocation(line: 1953, column: 18, scope: !13314)
!13320 = !DILocation(line: 1954, column: 8, scope: !13314)
!13321 = !DILocation(line: 1956, column: 35, scope: !13290)
!13322 = !DILocation(line: 1956, column: 39, scope: !13290)
!13323 = !DILocation(line: 1956, column: 45, scope: !13290)
!13324 = !DILocation(line: 1956, column: 50, scope: !13290)
!13325 = !DILocation(line: 1956, column: 8, scope: !13290)
!13326 = !DILocation(line: 1957, column: 20, scope: !13290)
!13327 = !DILocation(line: 1957, column: 24, scope: !13290)
!13328 = !DILocation(line: 1957, column: 30, scope: !13290)
!13329 = !DILocation(line: 1957, column: 8, scope: !13290)
!13330 = !DILocation(line: 1958, column: 28, scope: !13290)
!13331 = !DILocation(line: 1958, column: 15, scope: !13290)
!13332 = !DILocation(line: 1958, column: 13, scope: !13290)
!13333 = !DILocation(line: 1959, column: 13, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 1959, column: 12)
!13335 = !DILocation(line: 1959, column: 20, scope: !13334)
!13336 = !DILocation(line: 1959, column: 18, scope: !13334)
!13337 = !DILocation(line: 1959, column: 39, scope: !13334)
!13338 = !DILocation(line: 1959, column: 42, scope: !13334)
!13339 = !DILocation(line: 1959, column: 49, scope: !13334)
!13340 = !DILocation(line: 1959, column: 47, scope: !13334)
!13341 = !DILocation(line: 1959, column: 12, scope: !13290)
!13342 = !DILocation(line: 1960, column: 20, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13334, file: !3, line: 1959, column: 64)
!13344 = !DILocation(line: 1960, column: 29, scope: !13343)
!13345 = !DILocation(line: 1960, column: 9, scope: !13343)
!13346 = !DILocation(line: 1961, column: 23, scope: !13343)
!13347 = !DILocation(line: 1961, column: 21, scope: !13343)
!13348 = !DILocation(line: 1962, column: 18, scope: !13343)
!13349 = !DILocation(line: 1963, column: 8, scope: !13343)
!13350 = !DILocation(line: 1965, column: 35, scope: !13290)
!13351 = !DILocation(line: 1965, column: 39, scope: !13290)
!13352 = !DILocation(line: 1965, column: 45, scope: !13290)
!13353 = !DILocation(line: 1965, column: 50, scope: !13290)
!13354 = !DILocation(line: 1965, column: 8, scope: !13290)
!13355 = !DILocation(line: 1966, column: 20, scope: !13290)
!13356 = !DILocation(line: 1966, column: 24, scope: !13290)
!13357 = !DILocation(line: 1966, column: 30, scope: !13290)
!13358 = !DILocation(line: 1966, column: 8, scope: !13290)
!13359 = !DILocation(line: 1967, column: 28, scope: !13290)
!13360 = !DILocation(line: 1967, column: 15, scope: !13290)
!13361 = !DILocation(line: 1967, column: 13, scope: !13290)
!13362 = !DILocation(line: 1968, column: 13, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 1968, column: 12)
!13364 = !DILocation(line: 1968, column: 20, scope: !13363)
!13365 = !DILocation(line: 1968, column: 18, scope: !13363)
!13366 = !DILocation(line: 1968, column: 39, scope: !13363)
!13367 = !DILocation(line: 1968, column: 42, scope: !13363)
!13368 = !DILocation(line: 1968, column: 49, scope: !13363)
!13369 = !DILocation(line: 1968, column: 47, scope: !13363)
!13370 = !DILocation(line: 1968, column: 12, scope: !13290)
!13371 = !DILocation(line: 1969, column: 20, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 1968, column: 64)
!13373 = !DILocation(line: 1969, column: 29, scope: !13372)
!13374 = !DILocation(line: 1969, column: 9, scope: !13372)
!13375 = !DILocation(line: 1970, column: 23, scope: !13372)
!13376 = !DILocation(line: 1970, column: 21, scope: !13372)
!13377 = !DILocation(line: 1971, column: 18, scope: !13372)
!13378 = !DILocation(line: 1972, column: 8, scope: !13372)
!13379 = !DILocation(line: 1973, column: 12, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 1973, column: 12)
!13381 = !DILocation(line: 1973, column: 19, scope: !13380)
!13382 = !DILocation(line: 1973, column: 12, scope: !13290)
!13383 = !DILocation(line: 1974, column: 36, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 1973, column: 23)
!13385 = !DILocation(line: 1974, column: 40, scope: !13384)
!13386 = !DILocation(line: 1974, column: 46, scope: !13384)
!13387 = !DILocation(line: 1974, column: 51, scope: !13384)
!13388 = !DILocation(line: 1974, column: 9, scope: !13384)
!13389 = !DILocation(line: 1975, column: 21, scope: !13384)
!13390 = !DILocation(line: 1975, column: 25, scope: !13384)
!13391 = !DILocation(line: 1975, column: 31, scope: !13384)
!13392 = !DILocation(line: 1975, column: 9, scope: !13384)
!13393 = !DILocation(line: 1976, column: 29, scope: !13384)
!13394 = !DILocation(line: 1976, column: 16, scope: !13384)
!13395 = !DILocation(line: 1976, column: 14, scope: !13384)
!13396 = !DILocation(line: 1977, column: 14, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 1977, column: 13)
!13398 = !DILocation(line: 1977, column: 21, scope: !13397)
!13399 = !DILocation(line: 1977, column: 19, scope: !13397)
!13400 = !DILocation(line: 1977, column: 40, scope: !13397)
!13401 = !DILocation(line: 1977, column: 43, scope: !13397)
!13402 = !DILocation(line: 1977, column: 50, scope: !13397)
!13403 = !DILocation(line: 1977, column: 48, scope: !13397)
!13404 = !DILocation(line: 1977, column: 13, scope: !13384)
!13405 = !DILocation(line: 1978, column: 21, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13397, file: !3, line: 1977, column: 65)
!13407 = !DILocation(line: 1978, column: 30, scope: !13406)
!13408 = !DILocation(line: 1978, column: 10, scope: !13406)
!13409 = !DILocation(line: 1979, column: 24, scope: !13406)
!13410 = !DILocation(line: 1979, column: 22, scope: !13406)
!13411 = !DILocation(line: 1980, column: 20, scope: !13406)
!13412 = !DILocation(line: 1981, column: 9, scope: !13406)
!13413 = !DILocation(line: 1983, column: 36, scope: !13384)
!13414 = !DILocation(line: 1983, column: 40, scope: !13384)
!13415 = !DILocation(line: 1983, column: 46, scope: !13384)
!13416 = !DILocation(line: 1983, column: 51, scope: !13384)
!13417 = !DILocation(line: 1983, column: 9, scope: !13384)
!13418 = !DILocation(line: 1984, column: 21, scope: !13384)
!13419 = !DILocation(line: 1984, column: 25, scope: !13384)
!13420 = !DILocation(line: 1984, column: 31, scope: !13384)
!13421 = !DILocation(line: 1984, column: 9, scope: !13384)
!13422 = !DILocation(line: 1985, column: 29, scope: !13384)
!13423 = !DILocation(line: 1985, column: 16, scope: !13384)
!13424 = !DILocation(line: 1985, column: 14, scope: !13384)
!13425 = !DILocation(line: 1986, column: 14, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 1986, column: 13)
!13427 = !DILocation(line: 1986, column: 21, scope: !13426)
!13428 = !DILocation(line: 1986, column: 19, scope: !13426)
!13429 = !DILocation(line: 1986, column: 40, scope: !13426)
!13430 = !DILocation(line: 1986, column: 43, scope: !13426)
!13431 = !DILocation(line: 1986, column: 50, scope: !13426)
!13432 = !DILocation(line: 1986, column: 48, scope: !13426)
!13433 = !DILocation(line: 1986, column: 13, scope: !13384)
!13434 = !DILocation(line: 1987, column: 21, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 1986, column: 65)
!13436 = !DILocation(line: 1987, column: 30, scope: !13435)
!13437 = !DILocation(line: 1987, column: 10, scope: !13435)
!13438 = !DILocation(line: 1988, column: 24, scope: !13435)
!13439 = !DILocation(line: 1988, column: 22, scope: !13435)
!13440 = !DILocation(line: 1989, column: 20, scope: !13435)
!13441 = !DILocation(line: 1990, column: 9, scope: !13435)
!13442 = !DILocation(line: 1992, column: 8, scope: !13384)
!13443 = !DILocation(line: 1995, column: 7, scope: !13290)
!13444 = !DILocation(line: 1996, column: 6, scope: !13152)
!13445 = !DILocation(line: 1997, column: 11, scope: !12858)
!13446 = !DILocation(line: 1998, column: 10, scope: !12858)
!13447 = !DILocation(line: 2000, column: 4, scope: !12746)
!13448 = !DILocation(line: 2001, column: 27, scope: !12730)
!13449 = !DILocation(line: 2001, column: 4, scope: !12730)
!13450 = !DILocation(line: 2004, column: 6, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2004, column: 6)
!13452 = !DILocation(line: 2004, column: 16, scope: !13451)
!13453 = !DILocation(line: 2004, column: 6, scope: !12606)
!13454 = !DILocation(line: 2005, column: 31, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 2004, column: 22)
!13456 = !DILocation(line: 2005, column: 30, scope: !13455)
!13457 = !DILocation(line: 2005, column: 34, scope: !13455)
!13458 = !DILocation(line: 2005, column: 33, scope: !13455)
!13459 = !DILocation(line: 2005, column: 26, scope: !13455)
!13460 = !DILocation(line: 2005, column: 19, scope: !13455)
!13461 = !DILocation(line: 2005, column: 18, scope: !13455)
!13462 = !DILocation(line: 2006, column: 7, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 2006, column: 7)
!13464 = !DILocation(line: 2006, column: 21, scope: !13463)
!13465 = !DILocation(line: 2006, column: 40, scope: !13463)
!13466 = !DILocation(line: 2006, column: 39, scope: !13463)
!13467 = !DILocation(line: 2006, column: 19, scope: !13463)
!13468 = !DILocation(line: 2006, column: 7, scope: !13455)
!13469 = !DILocation(line: 2007, column: 27, scope: !13463)
!13470 = !DILocation(line: 2007, column: 42, scope: !13463)
!13471 = !DILocation(line: 2007, column: 41, scope: !13463)
!13472 = !DILocation(line: 2007, column: 46, scope: !13463)
!13473 = !DILocation(line: 2007, column: 60, scope: !13463)
!13474 = !DILocation(line: 2007, column: 58, scope: !13463)
!13475 = !DILocation(line: 2007, column: 44, scope: !13463)
!13476 = !DILocation(line: 2007, column: 81, scope: !13463)
!13477 = !DILocation(line: 2007, column: 95, scope: !13463)
!13478 = !DILocation(line: 2007, column: 93, scope: !13463)
!13479 = !DILocation(line: 2007, column: 79, scope: !13463)
!13480 = !DILocation(line: 2007, column: 19, scope: !13463)
!13481 = !DILocation(line: 2007, column: 4, scope: !13463)
!13482 = !DILocation(line: 2008, column: 17, scope: !13455)
!13483 = !DILocation(line: 2008, column: 24, scope: !13455)
!13484 = !DILocation(line: 2008, column: 40, scope: !13455)
!13485 = !DILocation(line: 2008, column: 3, scope: !13455)
!13486 = !DILocation(line: 2009, column: 9, scope: !13455)
!13487 = !DILocation(line: 2009, column: 13, scope: !13455)
!13488 = !DILocation(line: 2009, column: 17, scope: !13455)
!13489 = !DILocation(line: 2009, column: 4, scope: !13455)
!13490 = !DILocation(line: 2009, column: 8, scope: !13455)
!13491 = !DILocation(line: 2010, column: 7, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 2010, column: 7)
!13493 = !DILocation(line: 2010, column: 19, scope: !13492)
!13494 = !DILocation(line: 2010, column: 7, scope: !13455)
!13495 = !DILocation(line: 2011, column: 21, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13492, file: !3, line: 2010, column: 27)
!13497 = !DILocation(line: 2011, column: 33, scope: !13496)
!13498 = !DILocation(line: 2011, column: 32, scope: !13496)
!13499 = !DILocation(line: 2011, column: 19, scope: !13496)
!13500 = !DILocation(line: 2011, column: 5, scope: !13496)
!13501 = !DILocation(line: 2011, column: 10, scope: !13496)
!13502 = !DILocation(line: 2012, column: 3, scope: !13496)
!13503 = !DILocation(line: 2014, column: 2, scope: !13455)
!13504 = !DILocation(line: 2015, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2015, column: 6)
!13506 = !DILocation(line: 2015, column: 16, scope: !13505)
!13507 = !DILocation(line: 2015, column: 6, scope: !12606)
!13508 = !DILocation(line: 2016, column: 13, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 2015, column: 22)
!13510 = !DILocation(line: 2016, column: 20, scope: !13509)
!13511 = !DILocation(line: 2016, column: 3, scope: !13509)
!13512 = !DILocation(line: 2017, column: 2, scope: !13509)
!13513 = !DILocation(line: 2018, column: 6, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2018, column: 6)
!13515 = !DILocation(line: 2018, column: 16, scope: !13514)
!13516 = !DILocation(line: 2018, column: 6, scope: !12606)
!13517 = !DILocation(line: 2019, column: 13, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13514, file: !3, line: 2018, column: 22)
!13519 = !DILocation(line: 2019, column: 20, scope: !13518)
!13520 = !DILocation(line: 2019, column: 3, scope: !13518)
!13521 = !DILocation(line: 2020, column: 2, scope: !13518)
!13522 = !DILocation(line: 2022, column: 25, scope: !12606)
!13523 = !DILocation(line: 2022, column: 2, scope: !12606)
!13524 = !DILocation(line: 2023, column: 6, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2023, column: 6)
!13526 = !DILocation(line: 2023, column: 6, scope: !12606)
!13527 = !DILocation(line: 2023, column: 23, scope: !13525)
!13528 = !DILocation(line: 2023, column: 41, scope: !13525)
!13529 = !DILocation(line: 2023, column: 34, scope: !13525)
!13530 = !DILocation(line: 2023, column: 33, scope: !13525)
!13531 = !DILocation(line: 2023, column: 13, scope: !13525)
!13532 = !DILocation(line: 2024, column: 13, scope: !12606)
!13533 = !DILocation(line: 2024, column: 18, scope: !12606)
!13534 = !DILocation(line: 2024, column: 2, scope: !12606)
!13535 = !DILocation(line: 2025, column: 6, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2025, column: 6)
!13537 = !DILocation(line: 2025, column: 6, scope: !12606)
!13538 = !DILocation(line: 2025, column: 24, scope: !13536)
!13539 = !DILocation(line: 2025, column: 11, scope: !13536)
!13540 = !DILocation(line: 2025, column: 21, scope: !13536)
!13541 = !DILocation(line: 2025, column: 10, scope: !13536)
!13542 = !DILocation(line: 2026, column: 6, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2026, column: 6)
!13544 = !DILocation(line: 2026, column: 6, scope: !12606)
!13545 = !DILocation(line: 2027, column: 19, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13543, file: !3, line: 2026, column: 17)
!13547 = !DILocation(line: 2027, column: 31, scope: !13546)
!13548 = !DILocation(line: 2027, column: 3, scope: !13546)
!13549 = !DILocation(line: 2028, column: 2, scope: !13546)
!13550 = !DILocation(line: 2029, column: 9, scope: !12606)
!13551 = !DILocation(line: 2029, column: 2, scope: !12606)
!13552 = distinct !DISubprogram(name: "choose_winner", scope: !3, file: !3, line: 1715, type: !13553, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!92, !937, !937, !937, !937, !937, !937, !937, !937}
!13555 = !DILocalVariable(name: "w", arg: 1, scope: !13552, file: !3, line: 1715, type: !937)
!13556 = !DILocation(line: 1715, column: 32, scope: !13552)
!13557 = !DILocalVariable(name: "pos", arg: 2, scope: !13552, file: !3, line: 1715, type: !937)
!13558 = !DILocation(line: 1715, column: 42, scope: !13552)
!13559 = !DILocalVariable(name: "a", arg: 3, scope: !13552, file: !3, line: 1715, type: !937)
!13560 = !DILocation(line: 1715, column: 53, scope: !13552)
!13561 = !DILocalVariable(name: "b", arg: 4, scope: !13552, file: !3, line: 1715, type: !937)
!13562 = !DILocation(line: 1715, column: 62, scope: !13552)
!13563 = !DILocalVariable(name: "c", arg: 5, scope: !13552, file: !3, line: 1715, type: !937)
!13564 = !DILocation(line: 1715, column: 71, scope: !13552)
!13565 = !DILocalVariable(name: "ca", arg: 6, scope: !13552, file: !3, line: 1715, type: !937)
!13566 = !DILocation(line: 1715, column: 80, scope: !13552)
!13567 = !DILocalVariable(name: "cb", arg: 7, scope: !13552, file: !3, line: 1715, type: !937)
!13568 = !DILocation(line: 1715, column: 90, scope: !13552)
!13569 = !DILocalVariable(name: "cc", arg: 8, scope: !13552, file: !3, line: 1715, type: !937)
!13570 = !DILocation(line: 1715, column: 100, scope: !13552)
!13571 = !DILocalVariable(name: "mindist", scope: !13552, file: !3, line: 1717, type: !94)
!13572 = !DILocation(line: 1717, column: 8, scope: !13552)
!13573 = !DILocalVariable(name: "cp", scope: !13552, file: !3, line: 1717, type: !94)
!13574 = !DILocation(line: 1717, column: 17, scope: !13552)
!13575 = !DILocalVariable(name: "winner", scope: !13552, file: !3, line: 1718, type: !92)
!13576 = !DILocation(line: 1718, column: 6, scope: !13552)
!13577 = !DILocation(line: 1719, column: 27, scope: !13552)
!13578 = !DILocation(line: 1719, column: 32, scope: !13552)
!13579 = !DILocation(line: 1719, column: 18, scope: !13552)
!13580 = !DILocation(line: 1719, column: 12, scope: !13552)
!13581 = !DILocation(line: 1719, column: 10, scope: !13552)
!13582 = !DILocation(line: 1721, column: 22, scope: !13552)
!13583 = !DILocation(line: 1721, column: 27, scope: !13552)
!13584 = !DILocation(line: 1721, column: 13, scope: !13552)
!13585 = !DILocation(line: 1721, column: 7, scope: !13552)
!13586 = !DILocation(line: 1721, column: 5, scope: !13552)
!13587 = !DILocation(line: 1722, column: 7, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13552, file: !3, line: 1722, column: 7)
!13589 = !DILocation(line: 1722, column: 17, scope: !13588)
!13590 = !DILocation(line: 1722, column: 15, scope: !13588)
!13591 = !DILocation(line: 1722, column: 7, scope: !13552)
!13592 = !DILocation(line: 1723, column: 13, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1722, column: 22)
!13594 = !DILocation(line: 1723, column: 11, scope: !13593)
!13595 = !DILocation(line: 1724, column: 10, scope: !13593)
!13596 = !DILocation(line: 1725, column: 2, scope: !13593)
!13597 = !DILocation(line: 1727, column: 22, scope: !13552)
!13598 = !DILocation(line: 1727, column: 27, scope: !13552)
!13599 = !DILocation(line: 1727, column: 13, scope: !13552)
!13600 = !DILocation(line: 1727, column: 7, scope: !13552)
!13601 = !DILocation(line: 1727, column: 5, scope: !13552)
!13602 = !DILocation(line: 1728, column: 6, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13552, file: !3, line: 1728, column: 6)
!13604 = !DILocation(line: 1728, column: 16, scope: !13603)
!13605 = !DILocation(line: 1728, column: 14, scope: !13603)
!13606 = !DILocation(line: 1728, column: 6, scope: !13552)
!13607 = !DILocation(line: 1729, column: 13, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 1728, column: 21)
!13609 = !DILocation(line: 1729, column: 11, scope: !13608)
!13610 = !DILocation(line: 1730, column: 10, scope: !13608)
!13611 = !DILocation(line: 1731, column: 2, scope: !13608)
!13612 = !DILocation(line: 1732, column: 10, scope: !13552)
!13613 = !DILocation(line: 1732, column: 2, scope: !13552)
!13614 = !DILocation(line: 1733, column: 22, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13552, file: !3, line: 1732, column: 18)
!13616 = !DILocation(line: 1733, column: 25, scope: !13615)
!13617 = !DILocation(line: 1733, column: 11, scope: !13615)
!13618 = !DILocation(line: 1733, column: 30, scope: !13615)
!13619 = !DILocation(line: 1734, column: 22, scope: !13615)
!13620 = !DILocation(line: 1734, column: 25, scope: !13615)
!13621 = !DILocation(line: 1734, column: 11, scope: !13615)
!13622 = !DILocation(line: 1734, column: 30, scope: !13615)
!13623 = !DILocation(line: 1735, column: 22, scope: !13615)
!13624 = !DILocation(line: 1735, column: 25, scope: !13615)
!13625 = !DILocation(line: 1735, column: 11, scope: !13615)
!13626 = !DILocation(line: 1736, column: 2, scope: !13615)
!13627 = !DILocation(line: 1737, column: 9, scope: !13552)
!13628 = !DILocation(line: 1737, column: 2, scope: !13552)
!13629 = distinct !DISubprogram(name: "sb_detect_face_collisionCached", scope: !3, file: !3, line: 1188, type: !13630, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!92, !937, !937, !937, !937, !937, !6, !525, !94}
!13632 = !DILocalVariable(name: "face_v1", arg: 1, scope: !13629, file: !3, line: 1188, type: !937)
!13633 = !DILocation(line: 1188, column: 49, scope: !13629)
!13634 = !DILocalVariable(name: "face_v2", arg: 2, scope: !13629, file: !3, line: 1188, type: !937)
!13635 = !DILocation(line: 1188, column: 67, scope: !13629)
!13636 = !DILocalVariable(name: "face_v3", arg: 3, scope: !13629, file: !3, line: 1188, type: !937)
!13637 = !DILocation(line: 1188, column: 85, scope: !13629)
!13638 = !DILocalVariable(name: "damp", arg: 4, scope: !13629, file: !3, line: 1188, type: !937)
!13639 = !DILocation(line: 1188, column: 104, scope: !13629)
!13640 = !DILocalVariable(name: "force", arg: 5, scope: !13629, file: !3, line: 1189, type: !937)
!13641 = !DILocation(line: 1189, column: 49, scope: !13629)
!13642 = !DILocalVariable(name: "UNUSED_par_layer", arg: 6, scope: !13629, file: !3, line: 1189, type: !6)
!13643 = !DILocation(line: 1189, column: 72, scope: !13629)
!13644 = !DILocalVariable(name: "vertexowner", arg: 7, scope: !13629, file: !3, line: 1189, type: !525)
!13645 = !DILocation(line: 1189, column: 106, scope: !13629)
!13646 = !DILocalVariable(name: "time", arg: 8, scope: !13629, file: !3, line: 1189, type: !94)
!13647 = !DILocation(line: 1189, column: 125, scope: !13629)
!13648 = !DILocalVariable(name: "ob", scope: !13629, file: !3, line: 1191, type: !2154)
!13649 = !DILocation(line: 1191, column: 10, scope: !13629)
!13650 = !DILocalVariable(name: "hash", scope: !13629, file: !3, line: 1192, type: !1131)
!13651 = !DILocation(line: 1192, column: 9, scope: !13629)
!13652 = !DILocalVariable(name: "ihash", scope: !13629, file: !3, line: 1193, type: !9705)
!13653 = !DILocation(line: 1193, column: 17, scope: !13629)
!13654 = !DILocalVariable(name: "nv1", scope: !13629, file: !3, line: 1194, type: !376)
!13655 = !DILocation(line: 1194, column: 8, scope: !13629)
!13656 = !DILocalVariable(name: "nv2", scope: !13629, file: !3, line: 1194, type: !376)
!13657 = !DILocation(line: 1194, column: 16, scope: !13629)
!13658 = !DILocalVariable(name: "nv3", scope: !13629, file: !3, line: 1194, type: !376)
!13659 = !DILocation(line: 1194, column: 24, scope: !13629)
!13660 = !DILocalVariable(name: "nv4", scope: !13629, file: !3, line: 1194, type: !376)
!13661 = !DILocation(line: 1194, column: 32, scope: !13629)
!13662 = !DILocalVariable(name: "edge1", scope: !13629, file: !3, line: 1194, type: !376)
!13663 = !DILocation(line: 1194, column: 40, scope: !13629)
!13664 = !DILocalVariable(name: "edge2", scope: !13629, file: !3, line: 1194, type: !376)
!13665 = !DILocation(line: 1194, column: 50, scope: !13629)
!13666 = !DILocalVariable(name: "d_nvect", scope: !13629, file: !3, line: 1194, type: !376)
!13667 = !DILocation(line: 1194, column: 60, scope: !13629)
!13668 = !DILocalVariable(name: "aabbmin", scope: !13629, file: !3, line: 1194, type: !376)
!13669 = !DILocation(line: 1194, column: 72, scope: !13629)
!13670 = !DILocalVariable(name: "aabbmax", scope: !13629, file: !3, line: 1194, type: !376)
!13671 = !DILocation(line: 1194, column: 84, scope: !13629)
!13672 = !DILocalVariable(name: "t", scope: !13629, file: !3, line: 1195, type: !94)
!13673 = !DILocation(line: 1195, column: 8, scope: !13629)
!13674 = !DILocalVariable(name: "tune", scope: !13629, file: !3, line: 1195, type: !94)
!13675 = !DILocation(line: 1195, column: 11, scope: !13629)
!13676 = !DILocalVariable(name: "a", scope: !13629, file: !3, line: 1196, type: !92)
!13677 = !DILocation(line: 1196, column: 6, scope: !13629)
!13678 = !DILocalVariable(name: "deflected", scope: !13629, file: !3, line: 1196, type: !92)
!13679 = !DILocation(line: 1196, column: 9, scope: !13629)
!13680 = !DILocation(line: 1198, column: 23, scope: !13629)
!13681 = !DILocation(line: 1198, column: 35, scope: !13629)
!13682 = !DILocation(line: 1198, column: 47, scope: !13629)
!13683 = !DILocation(line: 1198, column: 15, scope: !13629)
!13684 = !DILocation(line: 1198, column: 2, scope: !13629)
!13685 = !DILocation(line: 1198, column: 13, scope: !13629)
!13686 = !DILocation(line: 1199, column: 23, scope: !13629)
!13687 = !DILocation(line: 1199, column: 35, scope: !13629)
!13688 = !DILocation(line: 1199, column: 47, scope: !13629)
!13689 = !DILocation(line: 1199, column: 15, scope: !13629)
!13690 = !DILocation(line: 1199, column: 2, scope: !13629)
!13691 = !DILocation(line: 1199, column: 13, scope: !13629)
!13692 = !DILocation(line: 1200, column: 23, scope: !13629)
!13693 = !DILocation(line: 1200, column: 35, scope: !13629)
!13694 = !DILocation(line: 1200, column: 47, scope: !13629)
!13695 = !DILocation(line: 1200, column: 15, scope: !13629)
!13696 = !DILocation(line: 1200, column: 2, scope: !13629)
!13697 = !DILocation(line: 1200, column: 13, scope: !13629)
!13698 = !DILocation(line: 1201, column: 23, scope: !13629)
!13699 = !DILocation(line: 1201, column: 35, scope: !13629)
!13700 = !DILocation(line: 1201, column: 47, scope: !13629)
!13701 = !DILocation(line: 1201, column: 15, scope: !13629)
!13702 = !DILocation(line: 1201, column: 2, scope: !13629)
!13703 = !DILocation(line: 1201, column: 13, scope: !13629)
!13704 = !DILocation(line: 1202, column: 23, scope: !13629)
!13705 = !DILocation(line: 1202, column: 35, scope: !13629)
!13706 = !DILocation(line: 1202, column: 47, scope: !13629)
!13707 = !DILocation(line: 1202, column: 15, scope: !13629)
!13708 = !DILocation(line: 1202, column: 2, scope: !13629)
!13709 = !DILocation(line: 1202, column: 13, scope: !13629)
!13710 = !DILocation(line: 1203, column: 23, scope: !13629)
!13711 = !DILocation(line: 1203, column: 35, scope: !13629)
!13712 = !DILocation(line: 1203, column: 47, scope: !13629)
!13713 = !DILocation(line: 1203, column: 15, scope: !13629)
!13714 = !DILocation(line: 1203, column: 2, scope: !13629)
!13715 = !DILocation(line: 1203, column: 13, scope: !13629)
!13716 = !DILocation(line: 1205, column: 10, scope: !13629)
!13717 = !DILocation(line: 1205, column: 23, scope: !13629)
!13718 = !DILocation(line: 1205, column: 29, scope: !13629)
!13719 = !DILocation(line: 1205, column: 38, scope: !13629)
!13720 = !DILocation(line: 1205, column: 8, scope: !13629)
!13721 = !DILocation(line: 1206, column: 32, scope: !13629)
!13722 = !DILocation(line: 1206, column: 10, scope: !13629)
!13723 = !DILocation(line: 1206, column: 8, scope: !13629)
!13724 = !DILocation(line: 1207, column: 2, scope: !13629)
!13725 = !DILocation(line: 1207, column: 33, scope: !13629)
!13726 = !DILocation(line: 1207, column: 10, scope: !13629)
!13727 = !DILocation(line: 1207, column: 9, scope: !13629)
!13728 = !DILocalVariable(name: "ccdm", scope: !13729, file: !3, line: 1209, type: !4663)
!13729 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 1207, column: 41)
!13730 = !DILocation(line: 1209, column: 13, scope: !13729)
!13731 = !DILocation(line: 1209, column: 48, scope: !13729)
!13732 = !DILocation(line: 1209, column: 20, scope: !13729)
!13733 = !DILocation(line: 1210, column: 46, scope: !13729)
!13734 = !DILocation(line: 1210, column: 20, scope: !13729)
!13735 = !DILocation(line: 1210, column: 18, scope: !13729)
!13736 = !DILocation(line: 1212, column: 8, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 1212, column: 8)
!13738 = !DILocation(line: 1212, column: 12, scope: !13737)
!13739 = !DILocation(line: 1212, column: 15, scope: !13737)
!13740 = !DILocation(line: 1212, column: 18, scope: !13737)
!13741 = !DILocation(line: 1212, column: 22, scope: !13737)
!13742 = !DILocation(line: 1212, column: 26, scope: !13737)
!13743 = !DILocation(line: 1212, column: 8, scope: !13729)
!13744 = !DILocalVariable(name: "mface", scope: !13745, file: !3, line: 1213, type: !4672)
!13745 = distinct !DILexicalBlock(scope: !13737, file: !3, line: 1212, column: 35)
!13746 = !DILocation(line: 1213, column: 12, scope: !13745)
!13747 = !DILocalVariable(name: "mvert", scope: !13745, file: !3, line: 1214, type: !483)
!13748 = !DILocation(line: 1214, column: 12, scope: !13745)
!13749 = !DILocalVariable(name: "mprevvert", scope: !13745, file: !3, line: 1215, type: !483)
!13750 = !DILocation(line: 1215, column: 12, scope: !13745)
!13751 = !DILocalVariable(name: "mima", scope: !13745, file: !3, line: 1216, type: !4676)
!13752 = !DILocation(line: 1216, column: 18, scope: !13745)
!13753 = !DILocation(line: 1217, column: 9, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13745, file: !3, line: 1217, column: 9)
!13755 = !DILocation(line: 1217, column: 9, scope: !13745)
!13756 = !DILocation(line: 1218, column: 13, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 1217, column: 15)
!13758 = !DILocation(line: 1218, column: 19, scope: !13757)
!13759 = !DILocation(line: 1218, column: 11, scope: !13757)
!13760 = !DILocation(line: 1219, column: 13, scope: !13757)
!13761 = !DILocation(line: 1219, column: 19, scope: !13757)
!13762 = !DILocation(line: 1219, column: 11, scope: !13757)
!13763 = !DILocation(line: 1220, column: 17, scope: !13757)
!13764 = !DILocation(line: 1220, column: 23, scope: !13757)
!13765 = !DILocation(line: 1220, column: 15, scope: !13757)
!13766 = !DILocation(line: 1221, column: 12, scope: !13757)
!13767 = !DILocation(line: 1221, column: 18, scope: !13757)
!13768 = !DILocation(line: 1221, column: 10, scope: !13757)
!13769 = !DILocation(line: 1222, column: 10, scope: !13757)
!13770 = !DILocation(line: 1222, column: 16, scope: !13757)
!13771 = !DILocation(line: 1222, column: 8, scope: !13757)
!13772 = !DILocation(line: 1224, column: 11, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13757, file: !3, line: 1224, column: 10)
!13774 = !DILocation(line: 1224, column: 24, scope: !13773)
!13775 = !DILocation(line: 1224, column: 30, scope: !13773)
!13776 = !DILocation(line: 1224, column: 22, scope: !13773)
!13777 = !DILocation(line: 1224, column: 40, scope: !13773)
!13778 = !DILocation(line: 1225, column: 11, scope: !13773)
!13779 = !DILocation(line: 1225, column: 24, scope: !13773)
!13780 = !DILocation(line: 1225, column: 30, scope: !13773)
!13781 = !DILocation(line: 1225, column: 22, scope: !13773)
!13782 = !DILocation(line: 1225, column: 40, scope: !13773)
!13783 = !DILocation(line: 1226, column: 11, scope: !13773)
!13784 = !DILocation(line: 1226, column: 24, scope: !13773)
!13785 = !DILocation(line: 1226, column: 30, scope: !13773)
!13786 = !DILocation(line: 1226, column: 22, scope: !13773)
!13787 = !DILocation(line: 1226, column: 40, scope: !13773)
!13788 = !DILocation(line: 1227, column: 11, scope: !13773)
!13789 = !DILocation(line: 1227, column: 24, scope: !13773)
!13790 = !DILocation(line: 1227, column: 30, scope: !13773)
!13791 = !DILocation(line: 1227, column: 22, scope: !13773)
!13792 = !DILocation(line: 1227, column: 40, scope: !13773)
!13793 = !DILocation(line: 1228, column: 11, scope: !13773)
!13794 = !DILocation(line: 1228, column: 24, scope: !13773)
!13795 = !DILocation(line: 1228, column: 30, scope: !13773)
!13796 = !DILocation(line: 1228, column: 22, scope: !13773)
!13797 = !DILocation(line: 1228, column: 40, scope: !13773)
!13798 = !DILocation(line: 1229, column: 11, scope: !13773)
!13799 = !DILocation(line: 1229, column: 24, scope: !13773)
!13800 = !DILocation(line: 1229, column: 30, scope: !13773)
!13801 = !DILocation(line: 1229, column: 22, scope: !13773)
!13802 = !DILocation(line: 1224, column: 10, scope: !13757)
!13803 = !DILocation(line: 1232, column: 30, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13773, file: !3, line: 1230, column: 6)
!13805 = !DILocation(line: 1232, column: 7, scope: !13804)
!13806 = !DILocation(line: 1233, column: 7, scope: !13804)
!13807 = distinct !{!13807, !13724, !13808}
!13808 = !DILocation(line: 1320, column: 2, scope: !13629)
!13809 = !DILocation(line: 1236, column: 5, scope: !13757)
!13810 = !DILocation(line: 1239, column: 6, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 1237, column: 10)
!13812 = !DILocation(line: 1240, column: 29, scope: !13811)
!13813 = !DILocation(line: 1240, column: 6, scope: !13811)
!13814 = !DILocation(line: 1241, column: 6, scope: !13811)
!13815 = !DILocation(line: 1246, column: 5, scope: !13745)
!13816 = !DILocation(line: 1246, column: 13, scope: !13745)
!13817 = !DILocation(line: 1248, column: 8, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 1248, column: 7)
!13819 = distinct !DILexicalBlock(scope: !13745, file: !3, line: 1246, column: 17)
!13820 = !DILocation(line: 1248, column: 21, scope: !13818)
!13821 = !DILocation(line: 1248, column: 27, scope: !13818)
!13822 = !DILocation(line: 1248, column: 19, scope: !13818)
!13823 = !DILocation(line: 1248, column: 33, scope: !13818)
!13824 = !DILocation(line: 1249, column: 8, scope: !13818)
!13825 = !DILocation(line: 1249, column: 21, scope: !13818)
!13826 = !DILocation(line: 1249, column: 27, scope: !13818)
!13827 = !DILocation(line: 1249, column: 19, scope: !13818)
!13828 = !DILocation(line: 1249, column: 33, scope: !13818)
!13829 = !DILocation(line: 1250, column: 8, scope: !13818)
!13830 = !DILocation(line: 1250, column: 21, scope: !13818)
!13831 = !DILocation(line: 1250, column: 27, scope: !13818)
!13832 = !DILocation(line: 1250, column: 19, scope: !13818)
!13833 = !DILocation(line: 1250, column: 33, scope: !13818)
!13834 = !DILocation(line: 1251, column: 8, scope: !13818)
!13835 = !DILocation(line: 1251, column: 21, scope: !13818)
!13836 = !DILocation(line: 1251, column: 27, scope: !13818)
!13837 = !DILocation(line: 1251, column: 19, scope: !13818)
!13838 = !DILocation(line: 1251, column: 33, scope: !13818)
!13839 = !DILocation(line: 1252, column: 8, scope: !13818)
!13840 = !DILocation(line: 1252, column: 21, scope: !13818)
!13841 = !DILocation(line: 1252, column: 27, scope: !13818)
!13842 = !DILocation(line: 1252, column: 19, scope: !13818)
!13843 = !DILocation(line: 1252, column: 33, scope: !13818)
!13844 = !DILocation(line: 1253, column: 8, scope: !13818)
!13845 = !DILocation(line: 1253, column: 21, scope: !13818)
!13846 = !DILocation(line: 1253, column: 27, scope: !13818)
!13847 = !DILocation(line: 1253, column: 19, scope: !13818)
!13848 = !DILocation(line: 1248, column: 7, scope: !13819)
!13849 = !DILocation(line: 1255, column: 12, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 1254, column: 9)
!13851 = !DILocation(line: 1256, column: 11, scope: !13850)
!13852 = !DILocation(line: 1257, column: 7, scope: !13850)
!13853 = distinct !{!13853, !13815, !13854}
!13854 = !DILocation(line: 1317, column: 5, scope: !13745)
!13855 = !DILocation(line: 1261, column: 10, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 1261, column: 10)
!13857 = !DILocation(line: 1261, column: 10, scope: !13819)
!13858 = !DILocation(line: 1263, column: 18, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 1261, column: 17)
!13860 = !DILocation(line: 1263, column: 23, scope: !13859)
!13861 = !DILocation(line: 1263, column: 29, scope: !13859)
!13862 = !DILocation(line: 1263, column: 36, scope: !13859)
!13863 = !DILocation(line: 1263, column: 40, scope: !13859)
!13864 = !DILocation(line: 1263, column: 7, scope: !13859)
!13865 = !DILocation(line: 1264, column: 18, scope: !13859)
!13866 = !DILocation(line: 1264, column: 23, scope: !13859)
!13867 = !DILocation(line: 1264, column: 29, scope: !13859)
!13868 = !DILocation(line: 1264, column: 36, scope: !13859)
!13869 = !DILocation(line: 1264, column: 40, scope: !13859)
!13870 = !DILocation(line: 1264, column: 7, scope: !13859)
!13871 = !DILocation(line: 1265, column: 18, scope: !13859)
!13872 = !DILocation(line: 1265, column: 23, scope: !13859)
!13873 = !DILocation(line: 1265, column: 29, scope: !13859)
!13874 = !DILocation(line: 1265, column: 36, scope: !13859)
!13875 = !DILocation(line: 1265, column: 40, scope: !13859)
!13876 = !DILocation(line: 1265, column: 7, scope: !13859)
!13877 = !DILocation(line: 1266, column: 11, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 1266, column: 11)
!13879 = !DILocation(line: 1266, column: 18, scope: !13878)
!13880 = !DILocation(line: 1266, column: 11, scope: !13859)
!13881 = !DILocation(line: 1267, column: 19, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 1266, column: 22)
!13883 = !DILocation(line: 1267, column: 24, scope: !13882)
!13884 = !DILocation(line: 1267, column: 30, scope: !13882)
!13885 = !DILocation(line: 1267, column: 37, scope: !13882)
!13886 = !DILocation(line: 1267, column: 41, scope: !13882)
!13887 = !DILocation(line: 1267, column: 8, scope: !13882)
!13888 = !DILocation(line: 1268, column: 7, scope: !13882)
!13889 = !DILocation(line: 1269, column: 11, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 1269, column: 11)
!13891 = !DILocation(line: 1269, column: 11, scope: !13859)
!13892 = !DILocation(line: 1270, column: 18, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13890, file: !3, line: 1269, column: 22)
!13894 = !DILocation(line: 1270, column: 23, scope: !13893)
!13895 = !DILocation(line: 1270, column: 8, scope: !13893)
!13896 = !DILocation(line: 1271, column: 22, scope: !13893)
!13897 = !DILocation(line: 1271, column: 33, scope: !13893)
!13898 = !DILocation(line: 1271, column: 32, scope: !13893)
!13899 = !DILocation(line: 1271, column: 40, scope: !13893)
!13900 = !DILocation(line: 1271, column: 50, scope: !13893)
!13901 = !DILocation(line: 1271, column: 57, scope: !13893)
!13902 = !DILocation(line: 1271, column: 61, scope: !13893)
!13903 = !DILocation(line: 1271, column: 8, scope: !13893)
!13904 = !DILocation(line: 1273, column: 18, scope: !13893)
!13905 = !DILocation(line: 1273, column: 23, scope: !13893)
!13906 = !DILocation(line: 1273, column: 8, scope: !13893)
!13907 = !DILocation(line: 1274, column: 22, scope: !13893)
!13908 = !DILocation(line: 1274, column: 33, scope: !13893)
!13909 = !DILocation(line: 1274, column: 32, scope: !13893)
!13910 = !DILocation(line: 1274, column: 40, scope: !13893)
!13911 = !DILocation(line: 1274, column: 50, scope: !13893)
!13912 = !DILocation(line: 1274, column: 57, scope: !13893)
!13913 = !DILocation(line: 1274, column: 61, scope: !13893)
!13914 = !DILocation(line: 1274, column: 8, scope: !13893)
!13915 = !DILocation(line: 1276, column: 18, scope: !13893)
!13916 = !DILocation(line: 1276, column: 23, scope: !13893)
!13917 = !DILocation(line: 1276, column: 8, scope: !13893)
!13918 = !DILocation(line: 1277, column: 22, scope: !13893)
!13919 = !DILocation(line: 1277, column: 33, scope: !13893)
!13920 = !DILocation(line: 1277, column: 32, scope: !13893)
!13921 = !DILocation(line: 1277, column: 40, scope: !13893)
!13922 = !DILocation(line: 1277, column: 50, scope: !13893)
!13923 = !DILocation(line: 1277, column: 57, scope: !13893)
!13924 = !DILocation(line: 1277, column: 61, scope: !13893)
!13925 = !DILocation(line: 1277, column: 8, scope: !13893)
!13926 = !DILocation(line: 1279, column: 12, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 1279, column: 12)
!13928 = !DILocation(line: 1279, column: 19, scope: !13927)
!13929 = !DILocation(line: 1279, column: 12, scope: !13893)
!13930 = !DILocation(line: 1280, column: 19, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13927, file: !3, line: 1279, column: 23)
!13932 = !DILocation(line: 1280, column: 24, scope: !13931)
!13933 = !DILocation(line: 1280, column: 9, scope: !13931)
!13934 = !DILocation(line: 1281, column: 23, scope: !13931)
!13935 = !DILocation(line: 1281, column: 34, scope: !13931)
!13936 = !DILocation(line: 1281, column: 33, scope: !13931)
!13937 = !DILocation(line: 1281, column: 41, scope: !13931)
!13938 = !DILocation(line: 1281, column: 51, scope: !13931)
!13939 = !DILocation(line: 1281, column: 58, scope: !13931)
!13940 = !DILocation(line: 1281, column: 62, scope: !13931)
!13941 = !DILocation(line: 1281, column: 9, scope: !13931)
!13942 = !DILocation(line: 1282, column: 8, scope: !13931)
!13943 = !DILocation(line: 1283, column: 7, scope: !13893)
!13944 = !DILocation(line: 1284, column: 6, scope: !13859)
!13945 = !DILocation(line: 1287, column: 18, scope: !13819)
!13946 = !DILocation(line: 1287, column: 25, scope: !13819)
!13947 = !DILocation(line: 1287, column: 30, scope: !13819)
!13948 = !DILocation(line: 1287, column: 6, scope: !13819)
!13949 = !DILocation(line: 1288, column: 18, scope: !13819)
!13950 = !DILocation(line: 1288, column: 25, scope: !13819)
!13951 = !DILocation(line: 1288, column: 30, scope: !13819)
!13952 = !DILocation(line: 1288, column: 6, scope: !13819)
!13953 = !DILocation(line: 1289, column: 20, scope: !13819)
!13954 = !DILocation(line: 1289, column: 29, scope: !13819)
!13955 = !DILocation(line: 1289, column: 36, scope: !13819)
!13956 = !DILocation(line: 1289, column: 6, scope: !13819)
!13957 = !DILocation(line: 1290, column: 19, scope: !13819)
!13958 = !DILocation(line: 1290, column: 6, scope: !13819)
!13959 = !DILocation(line: 1292, column: 25, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 1292, column: 7)
!13961 = !DILocation(line: 1292, column: 30, scope: !13960)
!13962 = !DILocation(line: 1292, column: 35, scope: !13960)
!13963 = !DILocation(line: 1292, column: 44, scope: !13960)
!13964 = !DILocation(line: 1292, column: 53, scope: !13960)
!13965 = !DILocation(line: 1292, column: 7, scope: !13960)
!13966 = !DILocation(line: 1292, column: 72, scope: !13960)
!13967 = !DILocation(line: 1293, column: 25, scope: !13960)
!13968 = !DILocation(line: 1293, column: 30, scope: !13960)
!13969 = !DILocation(line: 1293, column: 35, scope: !13960)
!13970 = !DILocation(line: 1293, column: 44, scope: !13960)
!13971 = !DILocation(line: 1293, column: 53, scope: !13960)
!13972 = !DILocation(line: 1293, column: 7, scope: !13960)
!13973 = !DILocation(line: 1293, column: 72, scope: !13960)
!13974 = !DILocation(line: 1294, column: 25, scope: !13960)
!13975 = !DILocation(line: 1294, column: 30, scope: !13960)
!13976 = !DILocation(line: 1294, column: 35, scope: !13960)
!13977 = !DILocation(line: 1294, column: 44, scope: !13960)
!13978 = !DILocation(line: 1294, column: 53, scope: !13960)
!13979 = !DILocation(line: 1294, column: 7, scope: !13960)
!13980 = !DILocation(line: 1292, column: 7, scope: !13819)
!13981 = !DILocation(line: 1295, column: 21, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13960, file: !3, line: 1294, column: 74)
!13983 = !DILocation(line: 1295, column: 35, scope: !13982)
!13984 = !DILocation(line: 1295, column: 7, scope: !13982)
!13985 = !DILocation(line: 1296, column: 13, scope: !13982)
!13986 = !DILocation(line: 1296, column: 18, scope: !13982)
!13987 = !DILocation(line: 1296, column: 22, scope: !13982)
!13988 = !DILocation(line: 1296, column: 26, scope: !13982)
!13989 = !DILocation(line: 1296, column: 17, scope: !13982)
!13990 = !DILocation(line: 1296, column: 8, scope: !13982)
!13991 = !DILocation(line: 1296, column: 12, scope: !13982)
!13992 = !DILocation(line: 1297, column: 17, scope: !13982)
!13993 = !DILocation(line: 1298, column: 6, scope: !13982)
!13994 = !DILocation(line: 1299, column: 10, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 1299, column: 10)
!13996 = !DILocation(line: 1299, column: 17, scope: !13995)
!13997 = !DILocation(line: 1299, column: 10, scope: !13819)
!13998 = !DILocation(line: 1301, column: 19, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 1299, column: 21)
!14000 = !DILocation(line: 1301, column: 26, scope: !13999)
!14001 = !DILocation(line: 1301, column: 31, scope: !13999)
!14002 = !DILocation(line: 1301, column: 7, scope: !13999)
!14003 = !DILocation(line: 1302, column: 19, scope: !13999)
!14004 = !DILocation(line: 1302, column: 26, scope: !13999)
!14005 = !DILocation(line: 1302, column: 31, scope: !13999)
!14006 = !DILocation(line: 1302, column: 7, scope: !13999)
!14007 = !DILocation(line: 1303, column: 21, scope: !13999)
!14008 = !DILocation(line: 1303, column: 30, scope: !13999)
!14009 = !DILocation(line: 1303, column: 37, scope: !13999)
!14010 = !DILocation(line: 1303, column: 7, scope: !13999)
!14011 = !DILocation(line: 1304, column: 20, scope: !13999)
!14012 = !DILocation(line: 1304, column: 7, scope: !13999)
!14013 = !DILocation(line: 1308, column: 26, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !13999, file: !3, line: 1308, column: 8)
!14015 = !DILocation(line: 1308, column: 31, scope: !14014)
!14016 = !DILocation(line: 1308, column: 36, scope: !14014)
!14017 = !DILocation(line: 1308, column: 45, scope: !14014)
!14018 = !DILocation(line: 1308, column: 54, scope: !14014)
!14019 = !DILocation(line: 1308, column: 8, scope: !14014)
!14020 = !DILocation(line: 1308, column: 73, scope: !14014)
!14021 = !DILocation(line: 1309, column: 26, scope: !14014)
!14022 = !DILocation(line: 1309, column: 31, scope: !14014)
!14023 = !DILocation(line: 1309, column: 36, scope: !14014)
!14024 = !DILocation(line: 1309, column: 45, scope: !14014)
!14025 = !DILocation(line: 1309, column: 54, scope: !14014)
!14026 = !DILocation(line: 1309, column: 8, scope: !14014)
!14027 = !DILocation(line: 1308, column: 8, scope: !13999)
!14028 = !DILocation(line: 1310, column: 22, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 1309, column: 75)
!14030 = !DILocation(line: 1310, column: 36, scope: !14029)
!14031 = !DILocation(line: 1310, column: 8, scope: !14029)
!14032 = !DILocation(line: 1311, column: 14, scope: !14029)
!14033 = !DILocation(line: 1311, column: 19, scope: !14029)
!14034 = !DILocation(line: 1311, column: 23, scope: !14029)
!14035 = !DILocation(line: 1311, column: 27, scope: !14029)
!14036 = !DILocation(line: 1311, column: 18, scope: !14029)
!14037 = !DILocation(line: 1311, column: 9, scope: !14029)
!14038 = !DILocation(line: 1311, column: 13, scope: !14029)
!14039 = !DILocation(line: 1312, column: 18, scope: !14029)
!14040 = !DILocation(line: 1313, column: 7, scope: !14029)
!14041 = !DILocation(line: 1314, column: 6, scope: !13999)
!14042 = !DILocation(line: 1315, column: 11, scope: !13819)
!14043 = !DILocation(line: 1316, column: 10, scope: !13819)
!14044 = !DILocation(line: 1318, column: 4, scope: !13745)
!14045 = !DILocation(line: 1319, column: 27, scope: !13729)
!14046 = !DILocation(line: 1319, column: 4, scope: !13729)
!14047 = !DILocation(line: 1321, column: 25, scope: !13629)
!14048 = !DILocation(line: 1321, column: 2, scope: !13629)
!14049 = !DILocation(line: 1322, column: 9, scope: !13629)
!14050 = !DILocation(line: 1322, column: 2, scope: !13629)
!14051 = distinct !DISubprogram(name: "sb_detect_face_pointCached", scope: !3, file: !3, line: 1089, type: !13630, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!14052 = !DILocalVariable(name: "face_v1", arg: 1, scope: !14051, file: !3, line: 1089, type: !937)
!14053 = !DILocation(line: 1089, column: 45, scope: !14051)
!14054 = !DILocalVariable(name: "face_v2", arg: 2, scope: !14051, file: !3, line: 1089, type: !937)
!14055 = !DILocation(line: 1089, column: 63, scope: !14051)
!14056 = !DILocalVariable(name: "face_v3", arg: 3, scope: !14051, file: !3, line: 1089, type: !937)
!14057 = !DILocation(line: 1089, column: 81, scope: !14051)
!14058 = !DILocalVariable(name: "damp", arg: 4, scope: !14051, file: !3, line: 1089, type: !937)
!14059 = !DILocation(line: 1089, column: 100, scope: !14051)
!14060 = !DILocalVariable(name: "force", arg: 5, scope: !14051, file: !3, line: 1090, type: !937)
!14061 = !DILocation(line: 1090, column: 45, scope: !14051)
!14062 = !DILocalVariable(name: "UNUSED_par_layer", arg: 6, scope: !14051, file: !3, line: 1090, type: !6)
!14063 = !DILocation(line: 1090, column: 68, scope: !14051)
!14064 = !DILocalVariable(name: "vertexowner", arg: 7, scope: !14051, file: !3, line: 1090, type: !525)
!14065 = !DILocation(line: 1090, column: 102, scope: !14051)
!14066 = !DILocalVariable(name: "time", arg: 8, scope: !14051, file: !3, line: 1090, type: !94)
!14067 = !DILocation(line: 1090, column: 121, scope: !14051)
!14068 = !DILocalVariable(name: "ob", scope: !14051, file: !3, line: 1092, type: !2154)
!14069 = !DILocation(line: 1092, column: 10, scope: !14051)
!14070 = !DILocalVariable(name: "hash", scope: !14051, file: !3, line: 1093, type: !1131)
!14071 = !DILocation(line: 1093, column: 9, scope: !14051)
!14072 = !DILocalVariable(name: "ihash", scope: !14051, file: !3, line: 1094, type: !9705)
!14073 = !DILocation(line: 1094, column: 17, scope: !14051)
!14074 = !DILocalVariable(name: "nv1", scope: !14051, file: !3, line: 1095, type: !376)
!14075 = !DILocation(line: 1095, column: 8, scope: !14051)
!14076 = !DILocalVariable(name: "edge1", scope: !14051, file: !3, line: 1095, type: !376)
!14077 = !DILocation(line: 1095, column: 16, scope: !14051)
!14078 = !DILocalVariable(name: "edge2", scope: !14051, file: !3, line: 1095, type: !376)
!14079 = !DILocation(line: 1095, column: 26, scope: !14051)
!14080 = !DILocalVariable(name: "d_nvect", scope: !14051, file: !3, line: 1095, type: !376)
!14081 = !DILocation(line: 1095, column: 36, scope: !14051)
!14082 = !DILocalVariable(name: "aabbmin", scope: !14051, file: !3, line: 1095, type: !376)
!14083 = !DILocation(line: 1095, column: 48, scope: !14051)
!14084 = !DILocalVariable(name: "aabbmax", scope: !14051, file: !3, line: 1095, type: !376)
!14085 = !DILocation(line: 1095, column: 60, scope: !14051)
!14086 = !DILocalVariable(name: "facedist", scope: !14051, file: !3, line: 1096, type: !94)
!14087 = !DILocation(line: 1096, column: 8, scope: !14051)
!14088 = !DILocalVariable(name: "outerfacethickness", scope: !14051, file: !3, line: 1096, type: !94)
!14089 = !DILocation(line: 1096, column: 18, scope: !14051)
!14090 = !DILocalVariable(name: "tune", scope: !14051, file: !3, line: 1096, type: !94)
!14091 = !DILocation(line: 1096, column: 38, scope: !14051)
!14092 = !DILocalVariable(name: "a", scope: !14051, file: !3, line: 1097, type: !92)
!14093 = !DILocation(line: 1097, column: 6, scope: !14051)
!14094 = !DILocalVariable(name: "deflected", scope: !14051, file: !3, line: 1097, type: !92)
!14095 = !DILocation(line: 1097, column: 9, scope: !14051)
!14096 = !DILocation(line: 1099, column: 23, scope: !14051)
!14097 = !DILocation(line: 1099, column: 35, scope: !14051)
!14098 = !DILocation(line: 1099, column: 47, scope: !14051)
!14099 = !DILocation(line: 1099, column: 15, scope: !14051)
!14100 = !DILocation(line: 1099, column: 2, scope: !14051)
!14101 = !DILocation(line: 1099, column: 13, scope: !14051)
!14102 = !DILocation(line: 1100, column: 23, scope: !14051)
!14103 = !DILocation(line: 1100, column: 35, scope: !14051)
!14104 = !DILocation(line: 1100, column: 47, scope: !14051)
!14105 = !DILocation(line: 1100, column: 15, scope: !14051)
!14106 = !DILocation(line: 1100, column: 2, scope: !14051)
!14107 = !DILocation(line: 1100, column: 13, scope: !14051)
!14108 = !DILocation(line: 1101, column: 23, scope: !14051)
!14109 = !DILocation(line: 1101, column: 35, scope: !14051)
!14110 = !DILocation(line: 1101, column: 47, scope: !14051)
!14111 = !DILocation(line: 1101, column: 15, scope: !14051)
!14112 = !DILocation(line: 1101, column: 2, scope: !14051)
!14113 = !DILocation(line: 1101, column: 13, scope: !14051)
!14114 = !DILocation(line: 1102, column: 23, scope: !14051)
!14115 = !DILocation(line: 1102, column: 35, scope: !14051)
!14116 = !DILocation(line: 1102, column: 47, scope: !14051)
!14117 = !DILocation(line: 1102, column: 15, scope: !14051)
!14118 = !DILocation(line: 1102, column: 2, scope: !14051)
!14119 = !DILocation(line: 1102, column: 13, scope: !14051)
!14120 = !DILocation(line: 1103, column: 23, scope: !14051)
!14121 = !DILocation(line: 1103, column: 35, scope: !14051)
!14122 = !DILocation(line: 1103, column: 47, scope: !14051)
!14123 = !DILocation(line: 1103, column: 15, scope: !14051)
!14124 = !DILocation(line: 1103, column: 2, scope: !14051)
!14125 = !DILocation(line: 1103, column: 13, scope: !14051)
!14126 = !DILocation(line: 1104, column: 23, scope: !14051)
!14127 = !DILocation(line: 1104, column: 35, scope: !14051)
!14128 = !DILocation(line: 1104, column: 47, scope: !14051)
!14129 = !DILocation(line: 1104, column: 15, scope: !14051)
!14130 = !DILocation(line: 1104, column: 2, scope: !14051)
!14131 = !DILocation(line: 1104, column: 13, scope: !14051)
!14132 = !DILocation(line: 1107, column: 14, scope: !14051)
!14133 = !DILocation(line: 1107, column: 21, scope: !14051)
!14134 = !DILocation(line: 1107, column: 30, scope: !14051)
!14135 = !DILocation(line: 1107, column: 2, scope: !14051)
!14136 = !DILocation(line: 1108, column: 14, scope: !14051)
!14137 = !DILocation(line: 1108, column: 21, scope: !14051)
!14138 = !DILocation(line: 1108, column: 30, scope: !14051)
!14139 = !DILocation(line: 1108, column: 2, scope: !14051)
!14140 = !DILocation(line: 1109, column: 16, scope: !14051)
!14141 = !DILocation(line: 1109, column: 25, scope: !14051)
!14142 = !DILocation(line: 1109, column: 32, scope: !14051)
!14143 = !DILocation(line: 1109, column: 2, scope: !14051)
!14144 = !DILocation(line: 1110, column: 15, scope: !14051)
!14145 = !DILocation(line: 1110, column: 2, scope: !14051)
!14146 = !DILocation(line: 1113, column: 10, scope: !14051)
!14147 = !DILocation(line: 1113, column: 23, scope: !14051)
!14148 = !DILocation(line: 1113, column: 29, scope: !14051)
!14149 = !DILocation(line: 1113, column: 38, scope: !14051)
!14150 = !DILocation(line: 1113, column: 8, scope: !14051)
!14151 = !DILocation(line: 1114, column: 32, scope: !14051)
!14152 = !DILocation(line: 1114, column: 10, scope: !14051)
!14153 = !DILocation(line: 1114, column: 8, scope: !14051)
!14154 = !DILocation(line: 1115, column: 2, scope: !14051)
!14155 = !DILocation(line: 1115, column: 33, scope: !14051)
!14156 = !DILocation(line: 1115, column: 10, scope: !14051)
!14157 = !DILocation(line: 1115, column: 9, scope: !14051)
!14158 = !DILocalVariable(name: "ccdm", scope: !14159, file: !3, line: 1117, type: !4663)
!14159 = distinct !DILexicalBlock(scope: !14051, file: !3, line: 1115, column: 41)
!14160 = !DILocation(line: 1117, column: 13, scope: !14159)
!14161 = !DILocation(line: 1117, column: 48, scope: !14159)
!14162 = !DILocation(line: 1117, column: 20, scope: !14159)
!14163 = !DILocation(line: 1118, column: 46, scope: !14159)
!14164 = !DILocation(line: 1118, column: 20, scope: !14159)
!14165 = !DILocation(line: 1118, column: 18, scope: !14159)
!14166 = !DILocation(line: 1120, column: 8, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 1120, column: 8)
!14168 = !DILocation(line: 1120, column: 12, scope: !14167)
!14169 = !DILocation(line: 1120, column: 15, scope: !14167)
!14170 = !DILocation(line: 1120, column: 18, scope: !14167)
!14171 = !DILocation(line: 1120, column: 22, scope: !14167)
!14172 = !DILocation(line: 1120, column: 26, scope: !14167)
!14173 = !DILocation(line: 1120, column: 8, scope: !14159)
!14174 = !DILocalVariable(name: "mvert", scope: !14175, file: !3, line: 1121, type: !483)
!14175 = distinct !DILexicalBlock(scope: !14167, file: !3, line: 1120, column: 35)
!14176 = !DILocation(line: 1121, column: 12, scope: !14175)
!14177 = !DILocalVariable(name: "mprevvert", scope: !14175, file: !3, line: 1122, type: !483)
!14178 = !DILocation(line: 1122, column: 12, scope: !14175)
!14179 = !DILocation(line: 1123, column: 9, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 1123, column: 9)
!14181 = !DILocation(line: 1123, column: 9, scope: !14175)
!14182 = !DILocation(line: 1124, column: 13, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 1123, column: 15)
!14184 = !DILocation(line: 1124, column: 19, scope: !14183)
!14185 = !DILocation(line: 1124, column: 11, scope: !14183)
!14186 = !DILocation(line: 1125, column: 13, scope: !14183)
!14187 = !DILocation(line: 1125, column: 19, scope: !14183)
!14188 = !DILocation(line: 1125, column: 11, scope: !14183)
!14189 = !DILocation(line: 1126, column: 17, scope: !14183)
!14190 = !DILocation(line: 1126, column: 23, scope: !14183)
!14191 = !DILocation(line: 1126, column: 15, scope: !14183)
!14192 = !DILocation(line: 1127, column: 27, scope: !14183)
!14193 = !DILocation(line: 1127, column: 31, scope: !14183)
!14194 = !DILocation(line: 1127, column: 35, scope: !14183)
!14195 = !DILocation(line: 1127, column: 25, scope: !14183)
!14196 = !DILocation(line: 1128, column: 11, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 1128, column: 10)
!14198 = !DILocation(line: 1128, column: 24, scope: !14197)
!14199 = !DILocation(line: 1128, column: 30, scope: !14197)
!14200 = !DILocation(line: 1128, column: 22, scope: !14197)
!14201 = !DILocation(line: 1128, column: 40, scope: !14197)
!14202 = !DILocation(line: 1129, column: 11, scope: !14197)
!14203 = !DILocation(line: 1129, column: 24, scope: !14197)
!14204 = !DILocation(line: 1129, column: 30, scope: !14197)
!14205 = !DILocation(line: 1129, column: 22, scope: !14197)
!14206 = !DILocation(line: 1129, column: 40, scope: !14197)
!14207 = !DILocation(line: 1130, column: 11, scope: !14197)
!14208 = !DILocation(line: 1130, column: 24, scope: !14197)
!14209 = !DILocation(line: 1130, column: 30, scope: !14197)
!14210 = !DILocation(line: 1130, column: 22, scope: !14197)
!14211 = !DILocation(line: 1130, column: 40, scope: !14197)
!14212 = !DILocation(line: 1131, column: 11, scope: !14197)
!14213 = !DILocation(line: 1131, column: 24, scope: !14197)
!14214 = !DILocation(line: 1131, column: 30, scope: !14197)
!14215 = !DILocation(line: 1131, column: 22, scope: !14197)
!14216 = !DILocation(line: 1131, column: 40, scope: !14197)
!14217 = !DILocation(line: 1132, column: 11, scope: !14197)
!14218 = !DILocation(line: 1132, column: 24, scope: !14197)
!14219 = !DILocation(line: 1132, column: 30, scope: !14197)
!14220 = !DILocation(line: 1132, column: 22, scope: !14197)
!14221 = !DILocation(line: 1132, column: 40, scope: !14197)
!14222 = !DILocation(line: 1133, column: 11, scope: !14197)
!14223 = !DILocation(line: 1133, column: 24, scope: !14197)
!14224 = !DILocation(line: 1133, column: 30, scope: !14197)
!14225 = !DILocation(line: 1133, column: 22, scope: !14197)
!14226 = !DILocation(line: 1128, column: 10, scope: !14183)
!14227 = !DILocation(line: 1136, column: 30, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14197, file: !3, line: 1134, column: 6)
!14229 = !DILocation(line: 1136, column: 7, scope: !14228)
!14230 = !DILocation(line: 1137, column: 7, scope: !14228)
!14231 = distinct !{!14231, !14154, !14232}
!14232 = !DILocation(line: 1182, column: 2, scope: !14051)
!14233 = !DILocation(line: 1140, column: 5, scope: !14183)
!14234 = !DILocation(line: 1143, column: 6, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 1141, column: 10)
!14236 = !DILocation(line: 1144, column: 29, scope: !14235)
!14237 = !DILocation(line: 1144, column: 6, scope: !14235)
!14238 = !DILocation(line: 1145, column: 6, scope: !14235)
!14239 = !DILocation(line: 1150, column: 9, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 1150, column: 9)
!14241 = !DILocation(line: 1150, column: 9, scope: !14175)
!14242 = !DILocation(line: 1151, column: 6, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14240, file: !3, line: 1150, column: 16)
!14244 = !DILocation(line: 1151, column: 13, scope: !14243)
!14245 = !DILocation(line: 1152, column: 18, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14243, file: !3, line: 1151, column: 16)
!14247 = !DILocation(line: 1152, column: 23, scope: !14246)
!14248 = !DILocation(line: 1152, column: 29, scope: !14246)
!14249 = !DILocation(line: 1152, column: 30, scope: !14246)
!14250 = !DILocation(line: 1152, column: 34, scope: !14246)
!14251 = !DILocation(line: 1152, column: 7, scope: !14246)
!14252 = !DILocation(line: 1153, column: 11, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 1153, column: 11)
!14254 = !DILocation(line: 1153, column: 11, scope: !14246)
!14255 = !DILocation(line: 1154, column: 18, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 1153, column: 22)
!14257 = !DILocation(line: 1154, column: 23, scope: !14256)
!14258 = !DILocation(line: 1154, column: 8, scope: !14256)
!14259 = !DILocation(line: 1155, column: 22, scope: !14256)
!14260 = !DILocation(line: 1155, column: 33, scope: !14256)
!14261 = !DILocation(line: 1155, column: 32, scope: !14256)
!14262 = !DILocation(line: 1155, column: 40, scope: !14256)
!14263 = !DILocation(line: 1155, column: 50, scope: !14256)
!14264 = !DILocation(line: 1155, column: 51, scope: !14256)
!14265 = !DILocation(line: 1155, column: 55, scope: !14256)
!14266 = !DILocation(line: 1155, column: 8, scope: !14256)
!14267 = !DILocation(line: 1156, column: 7, scope: !14256)
!14268 = !DILocation(line: 1158, column: 17, scope: !14246)
!14269 = !DILocation(line: 1158, column: 22, scope: !14246)
!14270 = !DILocation(line: 1158, column: 7, scope: !14246)
!14271 = !DILocation(line: 1159, column: 27, scope: !14246)
!14272 = !DILocation(line: 1159, column: 32, scope: !14246)
!14273 = !DILocation(line: 1159, column: 18, scope: !14246)
!14274 = !DILocation(line: 1159, column: 16, scope: !14246)
!14275 = !DILocation(line: 1160, column: 11, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 1160, column: 11)
!14277 = !DILocation(line: 1160, column: 25, scope: !14276)
!14278 = !DILocation(line: 1160, column: 24, scope: !14276)
!14279 = !DILocation(line: 1160, column: 11, scope: !14246)
!14280 = !DILocation(line: 1161, column: 37, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1161, column: 12)
!14282 = distinct !DILexicalBlock(scope: !14276, file: !3, line: 1160, column: 45)
!14283 = !DILocation(line: 1161, column: 42, scope: !14281)
!14284 = !DILocation(line: 1161, column: 51, scope: !14281)
!14285 = !DILocation(line: 1161, column: 60, scope: !14281)
!14286 = !DILocation(line: 1161, column: 12, scope: !14281)
!14287 = !DILocation(line: 1161, column: 12, scope: !14282)
!14288 = !DILocalVariable(name: "df", scope: !14289, file: !3, line: 1162, type: !94)
!14289 = distinct !DILexicalBlock(scope: !14281, file: !3, line: 1161, column: 71)
!14290 = !DILocation(line: 1162, column: 15, scope: !14289)
!14291 = !DILocation(line: 1163, column: 13, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14289, file: !3, line: 1163, column: 13)
!14293 = !DILocation(line: 1163, column: 22, scope: !14292)
!14294 = !DILocation(line: 1163, column: 13, scope: !14289)
!14295 = !DILocation(line: 1164, column: 16, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 1163, column: 27)
!14297 = !DILocation(line: 1164, column: 35, scope: !14296)
!14298 = !DILocation(line: 1164, column: 34, scope: !14296)
!14299 = !DILocation(line: 1164, column: 45, scope: !14296)
!14300 = !DILocation(line: 1164, column: 44, scope: !14296)
!14301 = !DILocation(line: 1164, column: 13, scope: !14296)
!14302 = !DILocation(line: 1165, column: 9, scope: !14296)
!14303 = !DILocation(line: 1167, column: 16, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 1166, column: 14)
!14305 = !DILocation(line: 1167, column: 35, scope: !14304)
!14306 = !DILocation(line: 1167, column: 34, scope: !14304)
!14307 = !DILocation(line: 1167, column: 45, scope: !14304)
!14308 = !DILocation(line: 1167, column: 44, scope: !14304)
!14309 = !DILocation(line: 1167, column: 13, scope: !14304)
!14310 = !DILocation(line: 1170, column: 15, scope: !14289)
!14311 = !DILocation(line: 1170, column: 18, scope: !14289)
!14312 = !DILocation(line: 1170, column: 17, scope: !14289)
!14313 = !DILocation(line: 1170, column: 23, scope: !14289)
!14314 = !DILocation(line: 1170, column: 27, scope: !14289)
!14315 = !DILocation(line: 1170, column: 31, scope: !14289)
!14316 = !DILocation(line: 1170, column: 22, scope: !14289)
!14317 = !DILocation(line: 1170, column: 10, scope: !14289)
!14318 = !DILocation(line: 1170, column: 14, scope: !14289)
!14319 = !DILocation(line: 1172, column: 37, scope: !14289)
!14320 = !DILocation(line: 1172, column: 35, scope: !14289)
!14321 = !DILocation(line: 1172, column: 22, scope: !14289)
!14322 = !DILocation(line: 1172, column: 20, scope: !14289)
!14323 = !DILocation(line: 1172, column: 12, scope: !14289)
!14324 = !DILocation(line: 1173, column: 23, scope: !14289)
!14325 = !DILocation(line: 1173, column: 31, scope: !14289)
!14326 = !DILocation(line: 1173, column: 30, scope: !14289)
!14327 = !DILocation(line: 1173, column: 35, scope: !14289)
!14328 = !DILocation(line: 1173, column: 9, scope: !14289)
!14329 = !DILocation(line: 1174, column: 19, scope: !14289)
!14330 = !DILocation(line: 1175, column: 8, scope: !14289)
!14331 = !DILocation(line: 1176, column: 7, scope: !14282)
!14332 = !DILocation(line: 1177, column: 8, scope: !14246)
!14333 = distinct !{!14333, !14242, !14334}
!14334 = !DILocation(line: 1178, column: 6, scope: !14243)
!14335 = !DILocation(line: 1179, column: 5, scope: !14243)
!14336 = !DILocation(line: 1180, column: 4, scope: !14175)
!14337 = !DILocation(line: 1181, column: 27, scope: !14159)
!14338 = !DILocation(line: 1181, column: 4, scope: !14159)
!14339 = !DILocation(line: 1183, column: 25, scope: !14051)
!14340 = !DILocation(line: 1183, column: 2, scope: !14051)
!14341 = !DILocation(line: 1184, column: 9, scope: !14051)
!14342 = !DILocation(line: 1184, column: 2, scope: !14051)
!14343 = distinct !DISubprogram(name: "min_fff", scope: !5818, file: !5818, line: 220, type: !14344, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!14344 = !DISubroutineType(types: !14345)
!14345 = !{!94, !94, !94, !94}
!14346 = !DILocalVariable(name: "a", arg: 1, scope: !14343, file: !5818, line: 220, type: !94)
!14347 = !DILocation(line: 220, column: 29, scope: !14343)
!14348 = !DILocalVariable(name: "b", arg: 2, scope: !14343, file: !5818, line: 220, type: !94)
!14349 = !DILocation(line: 220, column: 38, scope: !14343)
!14350 = !DILocalVariable(name: "c", arg: 3, scope: !14343, file: !5818, line: 220, type: !94)
!14351 = !DILocation(line: 220, column: 47, scope: !14343)
!14352 = !DILocation(line: 222, column: 23, scope: !14343)
!14353 = !DILocation(line: 222, column: 26, scope: !14343)
!14354 = !DILocation(line: 222, column: 16, scope: !14343)
!14355 = !DILocation(line: 222, column: 30, scope: !14343)
!14356 = !DILocation(line: 222, column: 9, scope: !14343)
!14357 = !DILocation(line: 222, column: 2, scope: !14343)
!14358 = distinct !DISubprogram(name: "max_fff", scope: !5818, file: !5818, line: 224, type: !14344, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!14359 = !DILocalVariable(name: "a", arg: 1, scope: !14358, file: !5818, line: 224, type: !94)
!14360 = !DILocation(line: 224, column: 29, scope: !14358)
!14361 = !DILocalVariable(name: "b", arg: 2, scope: !14358, file: !5818, line: 224, type: !94)
!14362 = !DILocation(line: 224, column: 38, scope: !14358)
!14363 = !DILocalVariable(name: "c", arg: 3, scope: !14358, file: !5818, line: 224, type: !94)
!14364 = !DILocation(line: 224, column: 47, scope: !14358)
!14365 = !DILocation(line: 226, column: 23, scope: !14358)
!14366 = !DILocation(line: 226, column: 26, scope: !14358)
!14367 = !DILocation(line: 226, column: 16, scope: !14358)
!14368 = !DILocation(line: 226, column: 30, scope: !14358)
!14369 = !DILocation(line: 226, column: 9, scope: !14358)
!14370 = !DILocation(line: 226, column: 2, scope: !14358)
!14371 = distinct !DISubprogram(name: "sb_time_scale", scope: !3, file: !3, line: 197, type: !9650, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2188)
!14372 = !DILocalVariable(name: "ob", arg: 1, scope: !14371, file: !3, line: 197, type: !2154)
!14373 = !DILocation(line: 197, column: 36, scope: !14371)
!14374 = !DILocalVariable(name: "sb", scope: !14371, file: !3, line: 200, type: !2192)
!14375 = !DILocation(line: 200, column: 12, scope: !14371)
!14376 = !DILocation(line: 200, column: 16, scope: !14371)
!14377 = !DILocation(line: 200, column: 20, scope: !14371)
!14378 = !DILocation(line: 201, column: 6, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14371, file: !3, line: 201, column: 6)
!14380 = !DILocation(line: 201, column: 6, scope: !14371)
!14381 = !DILocation(line: 202, column: 10, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14379, file: !3, line: 201, column: 10)
!14383 = !DILocation(line: 202, column: 14, scope: !14382)
!14384 = !DILocation(line: 202, column: 3, scope: !14382)
!14385 = !DILocation(line: 209, column: 2, scope: !14371)
!14386 = !DILocation(line: 215, column: 1, scope: !14371)
