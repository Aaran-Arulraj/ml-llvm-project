; ModuleID = 'blender/source/blender/editors/space_text/text_draw.c'
source_filename = "blender/source/blender/editors/space_text/text_draw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.SpaceText = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.Text*, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, float, %struct.rcti, %struct.rcti, i32, i32, [256 x i8], [256 x i8], i16, i16, [4 x i8], i8*, [2 x float] }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rctf = type { float, float, float, float }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type opaque
%struct.DrawCache = type { i32*, i32, i32, i32, i32, i32, i32, i16, i8, [66 x i8], i16, i32, i32 }
%struct.TextFormatType = type { %struct.TextFormatType*, %struct.TextFormatType*, i8 (i8*)*, void (%struct.SpaceText*, %struct.TextLine*, i8)*, i8** }
%struct.FlattenString = type { [256 x i8], [256 x i32], i8*, i32*, i32, i32 }
%struct.bTheme = type { %struct.bTheme*, %struct.bTheme*, [32 x i8], %struct.ThemeUI, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, %struct.ThemeSpace, [20 x %struct.ThemeWireColor], i32, i32 }
%struct.ThemeUI = type { %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetColors, %struct.uiWidgetStateColors, %struct.uiPanelColors, [4 x i8], float, i16, [3 x i16], [256 x i8], float, [4 x i8], [4 x i8], [4 x i8] }
%struct.uiWidgetColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i16, i16, i16, i16 }
%struct.uiWidgetStateColors = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], float, float }
%struct.uiPanelColors = type { [4 x i8], [4 x i8], i16, i16, i32 }
%struct.ThemeSpace = type { [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], %struct.uiPanelColors, %struct.uiGradientColors, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [3 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8] }
%struct.uiGradientColors = type { [4 x i8], [4 x i8], i32, i32 }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.SuggItem = type { %struct.SuggItem*, %struct.SuggItem*, i8*, i8 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.SpaceType = type opaque
%struct.bContext = type opaque

@U = external dso_local global %struct.UserDef, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@blf_mono_font = external dso_local global i32, align 4
@.str = private unnamed_addr constant [4 x i8] c"%*d\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.text_update_drawcache = private unnamed_addr constant [22 x i8] c"text_update_drawcache\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"text drawcache line_height\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"text draw cache\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @wrap_width(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !274 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %winx = alloca i32, align 4
  %x = alloca i32, align 4
  %max = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !521, metadata !DIExpression()), !dbg !522
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !523, metadata !DIExpression()), !dbg !524
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !525, metadata !DIExpression()), !dbg !526
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !527
  %winx1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 5, !dbg !528
  %1 = load i16, i16* %winx1, align 8, !dbg !528
  %conv = sext i16 %1 to i32, !dbg !527
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !529
  %conv2 = sext i16 %2 to i32, !dbg !529
  %sub = sub nsw i32 %conv, %conv2, !dbg !530
  store i32 %sub, i32* %winx, align 4, !dbg !526
  call void @llvm.dbg.declare(metadata i32* %x, metadata !531, metadata !DIExpression()), !dbg !532
  call void @llvm.dbg.declare(metadata i32* %max, metadata !533, metadata !DIExpression()), !dbg !534
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !535
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 15, !dbg !536
  %4 = load i32, i32* %showlinenrs, align 4, !dbg !536
  %tobool = icmp ne i32 %4, 0, !dbg !535
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !535

cond.true:                                        ; preds = %entry
  %5 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !537
  %conv3 = sext i16 %5 to i32, !dbg !537
  %conv4 = sitofp i32 %conv3 to float, !dbg !537
  %mul = fmul float 5.000000e-01, %conv4, !dbg !537
  %conv5 = fptosi float %mul to i32, !dbg !537
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !538
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 12, !dbg !538
  %7 = load i8, i8* %cwidth, align 2, !dbg !538
  %conv6 = zext i8 %7 to i32, !dbg !538
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !538
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %8, i32 0, i32 13, !dbg !538
  %9 = load i8, i8* %linenrs_tot, align 1, !dbg !538
  %conv7 = zext i8 %9 to i32, !dbg !538
  %mul8 = mul nsw i32 %conv6, %conv7, !dbg !538
  %add = add nsw i32 %conv5, %mul8, !dbg !539
  br label %cond.end, !dbg !535

cond.false:                                       ; preds = %entry
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !540
  %conv9 = sext i16 %10 to i32, !dbg !540
  %conv10 = sitofp i32 %conv9 to float, !dbg !540
  %mul11 = fmul float 5.000000e-01, %conv10, !dbg !540
  %conv12 = fptosi float %mul11 to i32, !dbg !540
  br label %cond.end, !dbg !535

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %conv12, %cond.false ], !dbg !535
  store i32 %cond, i32* %x, align 4, !dbg !541
  %11 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !542
  %cwidth13 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %11, i32 0, i32 12, !dbg !543
  %12 = load i8, i8* %cwidth13, align 2, !dbg !543
  %conv14 = zext i8 %12 to i32, !dbg !542
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !542
  br i1 %tobool15, label %cond.true16, label %cond.false20, !dbg !542

cond.true16:                                      ; preds = %cond.end
  %13 = load i32, i32* %winx, align 4, !dbg !544
  %14 = load i32, i32* %x, align 4, !dbg !545
  %sub17 = sub nsw i32 %13, %14, !dbg !546
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !547
  %cwidth18 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 12, !dbg !548
  %16 = load i8, i8* %cwidth18, align 2, !dbg !548
  %conv19 = zext i8 %16 to i32, !dbg !547
  %div = sdiv i32 %sub17, %conv19, !dbg !549
  br label %cond.end21, !dbg !542

cond.false20:                                     ; preds = %cond.end
  br label %cond.end21, !dbg !542

cond.end21:                                       ; preds = %cond.false20, %cond.true16
  %cond22 = phi i32 [ %div, %cond.true16 ], [ 0, %cond.false20 ], !dbg !542
  store i32 %cond22, i32* %max, align 4, !dbg !550
  %17 = load i32, i32* %max, align 4, !dbg !551
  %cmp = icmp sgt i32 %17, 8, !dbg !552
  br i1 %cmp, label %cond.true24, label %cond.false25, !dbg !551

cond.true24:                                      ; preds = %cond.end21
  %18 = load i32, i32* %max, align 4, !dbg !553
  br label %cond.end26, !dbg !551

cond.false25:                                     ; preds = %cond.end21
  br label %cond.end26, !dbg !551

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ %18, %cond.true24 ], [ 8, %cond.false25 ], !dbg !551
  ret i32 %cond27, !dbg !554
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @wrap_offset(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.TextLine* %linein, i32 %cursin, i32* %offl, i32* %offc) #0 !dbg !555 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %linein.addr = alloca %struct.TextLine*, align 8
  %cursin.addr = alloca i32, align 4
  %offl.addr = alloca i32*, align 8
  %offc.addr = alloca i32*, align 8
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %max = alloca i32, align 4
  %chop = alloca i32, align 4
  %ch = alloca i8, align 1
  %lines7 = alloca i32, align 4
  %chars = alloca i32, align 4
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !558, metadata !DIExpression()), !dbg !559
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !560, metadata !DIExpression()), !dbg !561
  store %struct.TextLine* %linein, %struct.TextLine** %linein.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linein.addr, metadata !562, metadata !DIExpression()), !dbg !563
  store i32 %cursin, i32* %cursin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cursin.addr, metadata !564, metadata !DIExpression()), !dbg !565
  store i32* %offl, i32** %offl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offl.addr, metadata !566, metadata !DIExpression()), !dbg !567
  store i32* %offc, i32** %offc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offc.addr, metadata !568, metadata !DIExpression()), !dbg !569
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !570, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linep, metadata !574, metadata !DIExpression()), !dbg !575
  call void @llvm.dbg.declare(metadata i32* %i, metadata !576, metadata !DIExpression()), !dbg !577
  call void @llvm.dbg.declare(metadata i32* %j, metadata !578, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.declare(metadata i32* %start, metadata !580, metadata !DIExpression()), !dbg !581
  call void @llvm.dbg.declare(metadata i32* %end, metadata !582, metadata !DIExpression()), !dbg !583
  call void @llvm.dbg.declare(metadata i32* %max, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !586, metadata !DIExpression()), !dbg !587
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !588, metadata !DIExpression()), !dbg !589
  %0 = load i32*, i32** %offc.addr, align 8, !dbg !590
  store i32 0, i32* %0, align 4, !dbg !591
  %1 = load i32*, i32** %offl.addr, align 8, !dbg !592
  store i32 0, i32* %1, align 4, !dbg !593
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !594
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 6, !dbg !596
  %3 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !596
  %tobool = icmp ne %struct.Text* %3, null, !dbg !594
  br i1 %tobool, label %if.end, label %if.then, !dbg !597

if.then:                                          ; preds = %entry
  br label %while.end106, !dbg !598

if.end:                                           ; preds = %entry
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !599
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 24, !dbg !601
  %5 = load i32, i32* %wordwrap, align 8, !dbg !601
  %tobool2 = icmp ne i32 %5, 0, !dbg !599
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !602

if.then3:                                         ; preds = %if.end
  br label %while.end106, !dbg !603

if.end4:                                          ; preds = %if.end
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !604
  %text5 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 6, !dbg !605
  %7 = load %struct.Text*, %struct.Text** %text5, align 8, !dbg !605
  store %struct.Text* %7, %struct.Text** %text, align 8, !dbg !606
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !607
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 4, !dbg !608
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !609
  %9 = load i8*, i8** %first, align 8, !dbg !609
  %10 = bitcast i8* %9 to %struct.TextLine*, !dbg !607
  store %struct.TextLine* %10, %struct.TextLine** %linep, align 8, !dbg !610
  %11 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !611
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %11, i32 0, i32 7, !dbg !612
  %12 = load i32, i32* %top, align 8, !dbg !612
  store i32 %12, i32* %i, align 4, !dbg !613
  br label %while.cond, !dbg !614

while.cond:                                       ; preds = %if.end18, %if.end4
  %13 = load i32, i32* %i, align 4, !dbg !615
  %cmp = icmp sgt i32 %13, 0, !dbg !616
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !617

land.rhs:                                         ; preds = %while.cond
  %14 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !618
  %tobool6 = icmp ne %struct.TextLine* %14, null, !dbg !617
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %15 = phi i1 [ false, %while.cond ], [ %tobool6, %land.rhs ], !dbg !619
  br i1 %15, label %while.body, label %while.end, !dbg !614

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %lines7, metadata !620, metadata !DIExpression()), !dbg !622
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !623
  %17 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !624
  %18 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !625
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %18, i32 0, i32 2, !dbg !626
  %19 = load i8*, i8** %line, align 8, !dbg !626
  %call = call i32 @text_get_visible_lines(%struct.SpaceText* %16, %struct.ARegion* %17, i8* %19), !dbg !627
  store i32 %call, i32* %lines7, align 4, !dbg !622
  %20 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !628
  %21 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !630
  %cmp8 = icmp eq %struct.TextLine* %20, %21, !dbg !631
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !632

if.then9:                                         ; preds = %while.body
  %22 = load i32, i32* %lines7, align 4, !dbg !633
  %23 = load i32, i32* %i, align 4, !dbg !636
  %cmp10 = icmp sle i32 %22, %23, !dbg !637
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !638

if.then11:                                        ; preds = %if.then9
  br label %while.end106, !dbg !639

if.end12:                                         ; preds = %if.then9
  br label %if.end13, !dbg !640

if.end13:                                         ; preds = %if.end12, %while.body
  %24 = load i32, i32* %i, align 4, !dbg !641
  %25 = load i32, i32* %lines7, align 4, !dbg !643
  %sub = sub nsw i32 %24, %25, !dbg !644
  %cmp14 = icmp slt i32 %sub, 0, !dbg !645
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !646

if.then15:                                        ; preds = %if.end13
  br label %while.end, !dbg !647

if.else:                                          ; preds = %if.end13
  %26 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !649
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %26, i32 0, i32 0, !dbg !651
  %27 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !651
  store %struct.TextLine* %27, %struct.TextLine** %linep, align 8, !dbg !652
  %28 = load i32, i32* %lines7, align 4, !dbg !653
  %sub16 = sub nsw i32 %28, 1, !dbg !654
  %29 = load i32*, i32** %offl.addr, align 8, !dbg !655
  %30 = load i32, i32* %29, align 4, !dbg !656
  %add = add nsw i32 %30, %sub16, !dbg !656
  store i32 %add, i32* %29, align 4, !dbg !656
  %31 = load i32, i32* %lines7, align 4, !dbg !657
  %32 = load i32, i32* %i, align 4, !dbg !658
  %sub17 = sub nsw i32 %32, %31, !dbg !658
  store i32 %sub17, i32* %i, align 4, !dbg !658
  br label %if.end18

if.end18:                                         ; preds = %if.else
  br label %while.cond, !dbg !614, !llvm.loop !659

while.end:                                        ; preds = %if.then15, %land.end
  %33 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !661
  %34 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !662
  %call19 = call i32 @wrap_width(%struct.SpaceText* %33, %struct.ARegion* %34), !dbg !663
  store i32 %call19, i32* %max, align 4, !dbg !664
  %35 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !665
  %line20 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %35, i32 0, i32 2, !dbg !666
  %36 = load i8*, i8** %line20, align 8, !dbg !666
  %37 = load i32, i32* %cursin.addr, align 4, !dbg !667
  %call21 = call i32 @txt_utf8_offset_to_column(i8* %36, i32 %37), !dbg !668
  store i32 %call21, i32* %cursin.addr, align 4, !dbg !669
  br label %while.cond22, !dbg !670

while.cond22:                                     ; preds = %if.end104, %while.end
  %38 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !671
  %tobool23 = icmp ne %struct.TextLine* %38, null, !dbg !670
  br i1 %tobool23, label %while.body24, label %while.end106, !dbg !670

while.body24:                                     ; preds = %while.cond22
  store i32 0, i32* %start, align 4, !dbg !672
  %39 = load i32, i32* %max, align 4, !dbg !674
  store i32 %39, i32* %end, align 4, !dbg !675
  store i32 1, i32* %chop, align 4, !dbg !676
  %40 = load i32*, i32** %offc.addr, align 8, !dbg !677
  store i32 0, i32* %40, align 4, !dbg !678
  store i32 0, i32* %i, align 4, !dbg !679
  store i32 0, i32* %j, align 4, !dbg !681
  br label %for.cond, !dbg !682

for.cond:                                         ; preds = %for.inc, %while.body24
  %41 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !683
  %line25 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %41, i32 0, i32 2, !dbg !685
  %42 = load i8*, i8** %line25, align 8, !dbg !685
  %43 = load i32, i32* %j, align 4, !dbg !686
  %idxprom = sext i32 %43 to i64, !dbg !683
  %arrayidx = getelementptr inbounds i8, i8* %42, i64 %idxprom, !dbg !683
  %44 = load i8, i8* %arrayidx, align 1, !dbg !683
  %tobool26 = icmp ne i8 %44, 0, !dbg !687
  br i1 %tobool26, label %for.body, label %for.end, !dbg !687

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !688, metadata !DIExpression()), !dbg !690
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !691, metadata !DIExpression()), !dbg !692
  %45 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !693
  %line27 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 2, !dbg !694
  %46 = load i8*, i8** %line27, align 8, !dbg !694
  %47 = load i32, i32* %j, align 4, !dbg !695
  %idx.ext = sext i32 %47 to i64, !dbg !696
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %idx.ext, !dbg !696
  %call28 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !697
  store i32 %call28, i32* %columns, align 4, !dbg !692
  %48 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !698
  %line29 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %48, i32 0, i32 2, !dbg !699
  %49 = load i8*, i8** %line29, align 8, !dbg !699
  %50 = load i32, i32* %j, align 4, !dbg !700
  %idxprom30 = sext i32 %50 to i64, !dbg !698
  %arrayidx31 = getelementptr inbounds i8, i8* %49, i64 %idxprom30, !dbg !698
  %51 = load i8, i8* %arrayidx31, align 1, !dbg !698
  store i8 %51, i8* %ch, align 1, !dbg !701
  %52 = load i8, i8* %ch, align 1, !dbg !702
  %conv = zext i8 %52 to i32, !dbg !702
  %cmp32 = icmp eq i32 %conv, 9, !dbg !704
  br i1 %cmp32, label %if.then34, label %if.else45, !dbg !705

if.then34:                                        ; preds = %for.body
  %53 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !706
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %53, i32 0, i32 16, !dbg !708
  %54 = load i32, i32* %tabnumber, align 8, !dbg !708
  %55 = load i32, i32* %i, align 4, !dbg !709
  %56 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !710
  %tabnumber35 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %56, i32 0, i32 16, !dbg !711
  %57 = load i32, i32* %tabnumber35, align 8, !dbg !711
  %rem = srem i32 %55, %57, !dbg !712
  %sub36 = sub nsw i32 %54, %rem, !dbg !713
  store i32 %sub36, i32* %chars, align 4, !dbg !714
  %58 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !715
  %59 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !717
  %cmp37 = icmp eq %struct.TextLine* %58, %59, !dbg !718
  br i1 %cmp37, label %land.lhs.true, label %if.end44, !dbg !719

land.lhs.true:                                    ; preds = %if.then34
  %60 = load i32, i32* %i, align 4, !dbg !720
  %61 = load i32, i32* %cursin.addr, align 4, !dbg !721
  %cmp39 = icmp slt i32 %60, %61, !dbg !722
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !723

if.then41:                                        ; preds = %land.lhs.true
  %62 = load i32, i32* %chars, align 4, !dbg !724
  %sub42 = sub nsw i32 %62, 1, !dbg !725
  %63 = load i32, i32* %cursin.addr, align 4, !dbg !726
  %add43 = add nsw i32 %63, %sub42, !dbg !726
  store i32 %add43, i32* %cursin.addr, align 4, !dbg !726
  br label %if.end44, !dbg !727

if.end44:                                         ; preds = %if.then41, %land.lhs.true, %if.then34
  store i8 32, i8* %ch, align 1, !dbg !728
  br label %if.end46, !dbg !729

if.else45:                                        ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !730
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.end44
  br label %while.cond47, !dbg !732

while.cond47:                                     ; preds = %if.end93, %if.end46
  %64 = load i32, i32* %chars, align 4, !dbg !733
  %dec = add nsw i32 %64, -1, !dbg !733
  store i32 %dec, i32* %chars, align 4, !dbg !733
  %tobool48 = icmp ne i32 %64, 0, !dbg !732
  br i1 %tobool48, label %while.body49, label %while.end95, !dbg !732

while.body49:                                     ; preds = %while.cond47
  %65 = load i32, i32* %i, align 4, !dbg !734
  %66 = load i32, i32* %columns, align 4, !dbg !737
  %add50 = add nsw i32 %65, %66, !dbg !738
  %67 = load i32, i32* %start, align 4, !dbg !739
  %sub51 = sub nsw i32 %add50, %67, !dbg !740
  %68 = load i32, i32* %max, align 4, !dbg !741
  %cmp52 = icmp sgt i32 %sub51, %68, !dbg !742
  br i1 %cmp52, label %if.then54, label %if.else76, !dbg !743

if.then54:                                        ; preds = %while.body49
  %69 = load i32, i32* %end, align 4, !dbg !744
  %70 = load i32, i32* %i, align 4, !dbg !744
  %cmp55 = icmp slt i32 %69, %70, !dbg !744
  br i1 %cmp55, label %cond.true, label %cond.false, !dbg !744

cond.true:                                        ; preds = %if.then54
  %71 = load i32, i32* %end, align 4, !dbg !744
  br label %cond.end, !dbg !744

cond.false:                                       ; preds = %if.then54
  %72 = load i32, i32* %i, align 4, !dbg !744
  br label %cond.end, !dbg !744

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %71, %cond.true ], [ %72, %cond.false ], !dbg !744
  store i32 %cond, i32* %end, align 4, !dbg !746
  %73 = load i32, i32* %chop, align 4, !dbg !747
  %tobool57 = icmp ne i32 %73, 0, !dbg !747
  br i1 %tobool57, label %land.lhs.true58, label %if.end71, !dbg !749

land.lhs.true58:                                  ; preds = %cond.end
  %74 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !750
  %75 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !751
  %cmp59 = icmp eq %struct.TextLine* %74, %75, !dbg !752
  br i1 %cmp59, label %land.lhs.true61, label %if.end71, !dbg !753

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %76 = load i32, i32* %i, align 4, !dbg !754
  %77 = load i32, i32* %cursin.addr, align 4, !dbg !755
  %cmp62 = icmp sge i32 %76, %77, !dbg !756
  br i1 %cmp62, label %if.then64, label %if.end71, !dbg !757

if.then64:                                        ; preds = %land.lhs.true61
  %78 = load i32, i32* %i, align 4, !dbg !758
  %79 = load i32, i32* %cursin.addr, align 4, !dbg !761
  %cmp65 = icmp eq i32 %78, %79, !dbg !762
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !763

if.then67:                                        ; preds = %if.then64
  %80 = load i32*, i32** %offl.addr, align 8, !dbg !764
  %81 = load i32, i32* %80, align 4, !dbg !766
  %inc = add nsw i32 %81, 1, !dbg !766
  store i32 %inc, i32* %80, align 4, !dbg !766
  %82 = load i32, i32* %end, align 4, !dbg !767
  %83 = load i32, i32* %start, align 4, !dbg !768
  %sub68 = sub nsw i32 %82, %83, !dbg !769
  %84 = load i32*, i32** %offc.addr, align 8, !dbg !770
  %85 = load i32, i32* %84, align 4, !dbg !771
  %sub69 = sub nsw i32 %85, %sub68, !dbg !771
  store i32 %sub69, i32* %84, align 4, !dbg !771
  br label %if.end70, !dbg !772

if.end70:                                         ; preds = %if.then67, %if.then64
  br label %while.end106, !dbg !773

if.end71:                                         ; preds = %land.lhs.true61, %land.lhs.true58, %cond.end
  %86 = load i32*, i32** %offl.addr, align 8, !dbg !774
  %87 = load i32, i32* %86, align 4, !dbg !775
  %inc72 = add nsw i32 %87, 1, !dbg !775
  store i32 %inc72, i32* %86, align 4, !dbg !775
  %88 = load i32, i32* %end, align 4, !dbg !776
  %89 = load i32, i32* %start, align 4, !dbg !777
  %sub73 = sub nsw i32 %88, %89, !dbg !778
  %90 = load i32*, i32** %offc.addr, align 8, !dbg !779
  %91 = load i32, i32* %90, align 4, !dbg !780
  %sub74 = sub nsw i32 %91, %sub73, !dbg !780
  store i32 %sub74, i32* %90, align 4, !dbg !780
  %92 = load i32, i32* %end, align 4, !dbg !781
  store i32 %92, i32* %start, align 4, !dbg !782
  %93 = load i32, i32* %max, align 4, !dbg !783
  %94 = load i32, i32* %end, align 4, !dbg !784
  %add75 = add nsw i32 %94, %93, !dbg !784
  store i32 %add75, i32* %end, align 4, !dbg !784
  store i32 1, i32* %chop, align 4, !dbg !785
  br label %if.end93, !dbg !786

if.else76:                                        ; preds = %while.body49
  %95 = load i8, i8* %ch, align 1, !dbg !787
  %conv77 = zext i8 %95 to i32, !dbg !787
  %cmp78 = icmp eq i32 %conv77, 32, !dbg !789
  br i1 %cmp78, label %if.then83, label %lor.lhs.false, !dbg !790

lor.lhs.false:                                    ; preds = %if.else76
  %96 = load i8, i8* %ch, align 1, !dbg !791
  %conv80 = zext i8 %96 to i32, !dbg !791
  %cmp81 = icmp eq i32 %conv80, 45, !dbg !792
  br i1 %cmp81, label %if.then83, label %if.end92, !dbg !793

if.then83:                                        ; preds = %lor.lhs.false, %if.else76
  %97 = load i32, i32* %i, align 4, !dbg !794
  %add84 = add nsw i32 %97, 1, !dbg !796
  store i32 %add84, i32* %end, align 4, !dbg !797
  store i32 0, i32* %chop, align 4, !dbg !798
  %98 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !799
  %99 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !801
  %cmp85 = icmp eq %struct.TextLine* %98, %99, !dbg !802
  br i1 %cmp85, label %land.lhs.true87, label %if.end91, !dbg !803

land.lhs.true87:                                  ; preds = %if.then83
  %100 = load i32, i32* %i, align 4, !dbg !804
  %101 = load i32, i32* %cursin.addr, align 4, !dbg !805
  %cmp88 = icmp sge i32 %100, %101, !dbg !806
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !807

if.then90:                                        ; preds = %land.lhs.true87
  br label %while.end106, !dbg !808

if.end91:                                         ; preds = %land.lhs.true87, %if.then83
  br label %if.end92, !dbg !809

if.end92:                                         ; preds = %if.end91, %lor.lhs.false
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end71
  %102 = load i32, i32* %columns, align 4, !dbg !810
  %103 = load i32, i32* %i, align 4, !dbg !811
  %add94 = add nsw i32 %103, %102, !dbg !811
  store i32 %add94, i32* %i, align 4, !dbg !811
  br label %while.cond47, !dbg !732, !llvm.loop !812

while.end95:                                      ; preds = %while.cond47
  br label %for.inc, !dbg !814

for.inc:                                          ; preds = %while.end95
  %104 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !815
  %line96 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %104, i32 0, i32 2, !dbg !816
  %105 = load i8*, i8** %line96, align 8, !dbg !816
  %106 = load i32, i32* %j, align 4, !dbg !817
  %idx.ext97 = sext i32 %106 to i64, !dbg !818
  %add.ptr98 = getelementptr inbounds i8, i8* %105, i64 %idx.ext97, !dbg !818
  %call99 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr98), !dbg !819
  %107 = load i32, i32* %j, align 4, !dbg !820
  %add100 = add nsw i32 %107, %call99, !dbg !820
  store i32 %add100, i32* %j, align 4, !dbg !820
  br label %for.cond, !dbg !821, !llvm.loop !822

for.end:                                          ; preds = %for.cond
  %108 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !824
  %109 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !826
  %cmp101 = icmp eq %struct.TextLine* %108, %109, !dbg !827
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !828

if.then103:                                       ; preds = %for.end
  br label %while.end106, !dbg !829

if.end104:                                        ; preds = %for.end
  %110 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !830
  %next105 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %110, i32 0, i32 0, !dbg !831
  %111 = load %struct.TextLine*, %struct.TextLine** %next105, align 8, !dbg !831
  store %struct.TextLine* %111, %struct.TextLine** %linep, align 8, !dbg !832
  br label %while.cond22, !dbg !670, !llvm.loop !833

while.end106:                                     ; preds = %if.then, %if.then3, %if.then11, %if.end70, %if.then90, %if.then103, %while.cond22
  ret void, !dbg !835
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_get_visible_lines(%struct.SpaceText* %st, %struct.ARegion* %ar, i8* %str) #0 !dbg !836 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %max = alloca i32, align 4
  %lines = alloca i32, align 4
  %chars = alloca i32, align 4
  %ch = alloca i8, align 1
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !841, metadata !DIExpression()), !dbg !842
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !843, metadata !DIExpression()), !dbg !844
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !845, metadata !DIExpression()), !dbg !846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !847, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.declare(metadata i32* %j, metadata !849, metadata !DIExpression()), !dbg !850
  call void @llvm.dbg.declare(metadata i32* %start, metadata !851, metadata !DIExpression()), !dbg !852
  call void @llvm.dbg.declare(metadata i32* %end, metadata !853, metadata !DIExpression()), !dbg !854
  call void @llvm.dbg.declare(metadata i32* %max, metadata !855, metadata !DIExpression()), !dbg !856
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !857, metadata !DIExpression()), !dbg !858
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !859, metadata !DIExpression()), !dbg !860
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !861, metadata !DIExpression()), !dbg !862
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !863
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !864
  %call = call i32 @wrap_width(%struct.SpaceText* %0, %struct.ARegion* %1), !dbg !865
  store i32 %call, i32* %max, align 4, !dbg !866
  store i32 1, i32* %lines, align 4, !dbg !867
  store i32 0, i32* %start, align 4, !dbg !868
  %2 = load i32, i32* %max, align 4, !dbg !869
  store i32 %2, i32* %end, align 4, !dbg !870
  store i32 0, i32* %i, align 4, !dbg !871
  store i32 0, i32* %j, align 4, !dbg !873
  br label %for.cond, !dbg !874

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i8*, i8** %str.addr, align 8, !dbg !875
  %4 = load i32, i32* %j, align 4, !dbg !877
  %idxprom = sext i32 %4 to i64, !dbg !875
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !875
  %5 = load i8, i8* %arrayidx, align 1, !dbg !875
  %tobool = icmp ne i8 %5, 0, !dbg !878
  br i1 %tobool, label %for.body, label %for.end, !dbg !878

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !879, metadata !DIExpression()), !dbg !881
  %6 = load i8*, i8** %str.addr, align 8, !dbg !882
  %7 = load i32, i32* %j, align 4, !dbg !883
  %idx.ext = sext i32 %7 to i64, !dbg !884
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !884
  %call1 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !885
  store i32 %call1, i32* %columns, align 4, !dbg !881
  %8 = load i8*, i8** %str.addr, align 8, !dbg !886
  %9 = load i32, i32* %j, align 4, !dbg !887
  %idxprom2 = sext i32 %9 to i64, !dbg !886
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 %idxprom2, !dbg !886
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !886
  store i8 %10, i8* %ch, align 1, !dbg !888
  %11 = load i8, i8* %ch, align 1, !dbg !889
  %conv = zext i8 %11 to i32, !dbg !889
  %cmp = icmp eq i32 %conv, 9, !dbg !891
  br i1 %cmp, label %if.then, label %if.else, !dbg !892

if.then:                                          ; preds = %for.body
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !893
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 16, !dbg !895
  %13 = load i32, i32* %tabnumber, align 8, !dbg !895
  %14 = load i32, i32* %i, align 4, !dbg !896
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !897
  %tabnumber5 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 16, !dbg !898
  %16 = load i32, i32* %tabnumber5, align 8, !dbg !898
  %rem = srem i32 %14, %16, !dbg !899
  %sub = sub nsw i32 %13, %rem, !dbg !900
  store i32 %sub, i32* %chars, align 4, !dbg !901
  store i8 32, i8* %ch, align 1, !dbg !902
  br label %if.end, !dbg !903

if.else:                                          ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !904
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !906

while.cond:                                       ; preds = %if.end24, %if.end
  %17 = load i32, i32* %chars, align 4, !dbg !907
  %dec = add nsw i32 %17, -1, !dbg !907
  store i32 %dec, i32* %chars, align 4, !dbg !907
  %tobool6 = icmp ne i32 %17, 0, !dbg !906
  br i1 %tobool6, label %while.body, label %while.end, !dbg !906

while.body:                                       ; preds = %while.cond
  %18 = load i32, i32* %i, align 4, !dbg !908
  %19 = load i32, i32* %columns, align 4, !dbg !911
  %add = add nsw i32 %18, %19, !dbg !912
  %20 = load i32, i32* %start, align 4, !dbg !913
  %sub7 = sub nsw i32 %add, %20, !dbg !914
  %21 = load i32, i32* %max, align 4, !dbg !915
  %cmp8 = icmp sgt i32 %sub7, %21, !dbg !916
  br i1 %cmp8, label %if.then10, label %if.else14, !dbg !917

if.then10:                                        ; preds = %while.body
  %22 = load i32, i32* %lines, align 4, !dbg !918
  %inc = add nsw i32 %22, 1, !dbg !918
  store i32 %inc, i32* %lines, align 4, !dbg !918
  %23 = load i32, i32* %end, align 4, !dbg !920
  %24 = load i32, i32* %i, align 4, !dbg !920
  %cmp11 = icmp slt i32 %23, %24, !dbg !920
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !920

cond.true:                                        ; preds = %if.then10
  %25 = load i32, i32* %end, align 4, !dbg !920
  br label %cond.end, !dbg !920

cond.false:                                       ; preds = %if.then10
  %26 = load i32, i32* %i, align 4, !dbg !920
  br label %cond.end, !dbg !920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %25, %cond.true ], [ %26, %cond.false ], !dbg !920
  store i32 %cond, i32* %start, align 4, !dbg !921
  %27 = load i32, i32* %max, align 4, !dbg !922
  %28 = load i32, i32* %end, align 4, !dbg !923
  %add13 = add nsw i32 %28, %27, !dbg !923
  store i32 %add13, i32* %end, align 4, !dbg !923
  br label %if.end24, !dbg !924

if.else14:                                        ; preds = %while.body
  %29 = load i8, i8* %ch, align 1, !dbg !925
  %conv15 = zext i8 %29 to i32, !dbg !925
  %cmp16 = icmp eq i32 %conv15, 32, !dbg !927
  br i1 %cmp16, label %if.then21, label %lor.lhs.false, !dbg !928

lor.lhs.false:                                    ; preds = %if.else14
  %30 = load i8, i8* %ch, align 1, !dbg !929
  %conv18 = zext i8 %30 to i32, !dbg !929
  %cmp19 = icmp eq i32 %conv18, 45, !dbg !930
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !931

if.then21:                                        ; preds = %lor.lhs.false, %if.else14
  %31 = load i32, i32* %i, align 4, !dbg !932
  %add22 = add nsw i32 %31, 1, !dbg !934
  store i32 %add22, i32* %end, align 4, !dbg !935
  br label %if.end23, !dbg !936

if.end23:                                         ; preds = %if.then21, %lor.lhs.false
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %cond.end
  %32 = load i32, i32* %columns, align 4, !dbg !937
  %33 = load i32, i32* %i, align 4, !dbg !938
  %add25 = add nsw i32 %33, %32, !dbg !938
  store i32 %add25, i32* %i, align 4, !dbg !938
  br label %while.cond, !dbg !906, !llvm.loop !939

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !941

for.inc:                                          ; preds = %while.end
  %34 = load i8*, i8** %str.addr, align 8, !dbg !942
  %35 = load i32, i32* %j, align 4, !dbg !943
  %idx.ext26 = sext i32 %35 to i64, !dbg !944
  %add.ptr27 = getelementptr inbounds i8, i8* %34, i64 %idx.ext26, !dbg !944
  %call28 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr27), !dbg !945
  %36 = load i32, i32* %j, align 4, !dbg !946
  %add29 = add nsw i32 %36, %call28, !dbg !946
  store i32 %add29, i32* %j, align 4, !dbg !946
  br label %for.cond, !dbg !947, !llvm.loop !948

for.end:                                          ; preds = %for.cond
  %37 = load i32, i32* %lines, align 4, !dbg !950
  ret i32 %37, !dbg !951
}

declare dso_local i32 @txt_utf8_offset_to_column(i8*, i32) #2

declare dso_local i32 @BLI_str_utf8_char_width_safe(i8*) #2

declare dso_local i32 @BLI_str_utf8_size_safe(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @wrap_offset_in_line(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.TextLine* %linein, i32 %cursin, i32* %offl, i32* %offc) #0 !dbg !952 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %linein.addr = alloca %struct.TextLine*, align 8
  %cursin.addr = alloca i32, align 4
  %offl.addr = alloca i32*, align 8
  %offc.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %chars = alloca i32, align 4
  %max = alloca i32, align 4
  %chop = alloca i32, align 4
  %ch = alloca i8, align 1
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !953, metadata !DIExpression()), !dbg !954
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !955, metadata !DIExpression()), !dbg !956
  store %struct.TextLine* %linein, %struct.TextLine** %linein.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linein.addr, metadata !957, metadata !DIExpression()), !dbg !958
  store i32 %cursin, i32* %cursin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cursin.addr, metadata !959, metadata !DIExpression()), !dbg !960
  store i32* %offl, i32** %offl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offl.addr, metadata !961, metadata !DIExpression()), !dbg !962
  store i32* %offc, i32** %offc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offc.addr, metadata !963, metadata !DIExpression()), !dbg !964
  call void @llvm.dbg.declare(metadata i32* %i, metadata !965, metadata !DIExpression()), !dbg !966
  call void @llvm.dbg.declare(metadata i32* %j, metadata !967, metadata !DIExpression()), !dbg !968
  call void @llvm.dbg.declare(metadata i32* %start, metadata !969, metadata !DIExpression()), !dbg !970
  call void @llvm.dbg.declare(metadata i32* %end, metadata !971, metadata !DIExpression()), !dbg !972
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !973, metadata !DIExpression()), !dbg !974
  call void @llvm.dbg.declare(metadata i32* %max, metadata !975, metadata !DIExpression()), !dbg !976
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !977, metadata !DIExpression()), !dbg !978
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !979, metadata !DIExpression()), !dbg !980
  %0 = load i32*, i32** %offc.addr, align 8, !dbg !981
  store i32 0, i32* %0, align 4, !dbg !982
  %1 = load i32*, i32** %offl.addr, align 8, !dbg !983
  store i32 0, i32* %1, align 4, !dbg !984
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !985
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 6, !dbg !987
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !987
  %tobool = icmp ne %struct.Text* %3, null, !dbg !985
  br i1 %tobool, label %if.end, label %if.then, !dbg !988

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !989

if.end:                                           ; preds = %entry
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !990
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 24, !dbg !992
  %5 = load i32, i32* %wordwrap, align 8, !dbg !992
  %tobool1 = icmp ne i32 %5, 0, !dbg !990
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !993

if.then2:                                         ; preds = %if.end
  br label %for.end, !dbg !994

if.end3:                                          ; preds = %if.end
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !995
  %7 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !996
  %call = call i32 @wrap_width(%struct.SpaceText* %6, %struct.ARegion* %7), !dbg !997
  store i32 %call, i32* %max, align 4, !dbg !998
  store i32 0, i32* %start, align 4, !dbg !999
  %8 = load i32, i32* %max, align 4, !dbg !1000
  store i32 %8, i32* %end, align 4, !dbg !1001
  store i32 1, i32* %chop, align 4, !dbg !1002
  %9 = load i32*, i32** %offc.addr, align 8, !dbg !1003
  store i32 0, i32* %9, align 4, !dbg !1004
  %10 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !1005
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 2, !dbg !1006
  %11 = load i8*, i8** %line, align 8, !dbg !1006
  %12 = load i32, i32* %cursin.addr, align 4, !dbg !1007
  %call4 = call i32 @txt_utf8_offset_to_column(i8* %11, i32 %12), !dbg !1008
  store i32 %call4, i32* %cursin.addr, align 4, !dbg !1009
  store i32 0, i32* %i, align 4, !dbg !1010
  store i32 0, i32* %j, align 4, !dbg !1012
  br label %for.cond, !dbg !1013

for.cond:                                         ; preds = %for.inc, %if.end3
  %13 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !1014
  %line5 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %13, i32 0, i32 2, !dbg !1016
  %14 = load i8*, i8** %line5, align 8, !dbg !1016
  %15 = load i32, i32* %j, align 4, !dbg !1017
  %idxprom = sext i32 %15 to i64, !dbg !1014
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom, !dbg !1014
  %16 = load i8, i8* %arrayidx, align 1, !dbg !1014
  %tobool6 = icmp ne i8 %16, 0, !dbg !1018
  br i1 %tobool6, label %for.body, label %for.end, !dbg !1018

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !1019, metadata !DIExpression()), !dbg !1021
  %17 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !1022
  %line7 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 2, !dbg !1023
  %18 = load i8*, i8** %line7, align 8, !dbg !1023
  %19 = load i32, i32* %j, align 4, !dbg !1024
  %idx.ext = sext i32 %19 to i64, !dbg !1025
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !1025
  %call8 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !1026
  store i32 %call8, i32* %columns, align 4, !dbg !1021
  %20 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !1027
  %line9 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !1028
  %21 = load i8*, i8** %line9, align 8, !dbg !1028
  %22 = load i32, i32* %j, align 4, !dbg !1029
  %idxprom10 = sext i32 %22 to i64, !dbg !1027
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i64 %idxprom10, !dbg !1027
  %23 = load i8, i8* %arrayidx11, align 1, !dbg !1027
  store i8 %23, i8* %ch, align 1, !dbg !1030
  %24 = load i8, i8* %ch, align 1, !dbg !1031
  %conv = zext i8 %24 to i32, !dbg !1031
  %cmp = icmp eq i32 %conv, 9, !dbg !1033
  br i1 %cmp, label %if.then13, label %if.else, !dbg !1034

if.then13:                                        ; preds = %for.body
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1035
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 16, !dbg !1037
  %26 = load i32, i32* %tabnumber, align 8, !dbg !1037
  %27 = load i32, i32* %i, align 4, !dbg !1038
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1039
  %tabnumber14 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %28, i32 0, i32 16, !dbg !1040
  %29 = load i32, i32* %tabnumber14, align 8, !dbg !1040
  %rem = srem i32 %27, %29, !dbg !1041
  %sub = sub nsw i32 %26, %rem, !dbg !1042
  store i32 %sub, i32* %chars, align 4, !dbg !1043
  %30 = load i32, i32* %i, align 4, !dbg !1044
  %31 = load i32, i32* %cursin.addr, align 4, !dbg !1046
  %cmp15 = icmp slt i32 %30, %31, !dbg !1047
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !1048

if.then17:                                        ; preds = %if.then13
  %32 = load i32, i32* %chars, align 4, !dbg !1049
  %sub18 = sub nsw i32 %32, 1, !dbg !1050
  %33 = load i32, i32* %cursin.addr, align 4, !dbg !1051
  %add = add nsw i32 %33, %sub18, !dbg !1051
  store i32 %add, i32* %cursin.addr, align 4, !dbg !1051
  br label %if.end19, !dbg !1052

if.end19:                                         ; preds = %if.then17, %if.then13
  store i8 32, i8* %ch, align 1, !dbg !1053
  br label %if.end20, !dbg !1054

if.else:                                          ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !1055
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.end19
  br label %while.cond, !dbg !1056

while.cond:                                       ; preds = %if.end58, %if.end20
  %34 = load i32, i32* %chars, align 4, !dbg !1057
  %dec = add nsw i32 %34, -1, !dbg !1057
  store i32 %dec, i32* %chars, align 4, !dbg !1057
  %tobool21 = icmp ne i32 %34, 0, !dbg !1056
  br i1 %tobool21, label %while.body, label %while.end, !dbg !1056

while.body:                                       ; preds = %while.cond
  %35 = load i32, i32* %i, align 4, !dbg !1058
  %36 = load i32, i32* %columns, align 4, !dbg !1061
  %add22 = add nsw i32 %35, %36, !dbg !1062
  %37 = load i32, i32* %start, align 4, !dbg !1063
  %sub23 = sub nsw i32 %add22, %37, !dbg !1064
  %38 = load i32, i32* %max, align 4, !dbg !1065
  %cmp24 = icmp sgt i32 %sub23, %38, !dbg !1066
  br i1 %cmp24, label %if.then26, label %if.else44, !dbg !1067

if.then26:                                        ; preds = %while.body
  %39 = load i32, i32* %end, align 4, !dbg !1068
  %40 = load i32, i32* %i, align 4, !dbg !1068
  %cmp27 = icmp slt i32 %39, %40, !dbg !1068
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !1068

cond.true:                                        ; preds = %if.then26
  %41 = load i32, i32* %end, align 4, !dbg !1068
  br label %cond.end, !dbg !1068

cond.false:                                       ; preds = %if.then26
  %42 = load i32, i32* %i, align 4, !dbg !1068
  br label %cond.end, !dbg !1068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ %42, %cond.false ], !dbg !1068
  store i32 %cond, i32* %end, align 4, !dbg !1070
  %43 = load i32, i32* %chop, align 4, !dbg !1071
  %tobool29 = icmp ne i32 %43, 0, !dbg !1071
  br i1 %tobool29, label %land.lhs.true, label %if.end39, !dbg !1073

land.lhs.true:                                    ; preds = %cond.end
  %44 = load i32, i32* %i, align 4, !dbg !1074
  %45 = load i32, i32* %cursin.addr, align 4, !dbg !1075
  %cmp30 = icmp sge i32 %44, %45, !dbg !1076
  br i1 %cmp30, label %if.then32, label %if.end39, !dbg !1077

if.then32:                                        ; preds = %land.lhs.true
  %46 = load i32, i32* %i, align 4, !dbg !1078
  %47 = load i32, i32* %cursin.addr, align 4, !dbg !1081
  %cmp33 = icmp eq i32 %46, %47, !dbg !1082
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !1083

if.then35:                                        ; preds = %if.then32
  %48 = load i32*, i32** %offl.addr, align 8, !dbg !1084
  %49 = load i32, i32* %48, align 4, !dbg !1086
  %inc = add nsw i32 %49, 1, !dbg !1086
  store i32 %inc, i32* %48, align 4, !dbg !1086
  %50 = load i32, i32* %end, align 4, !dbg !1087
  %51 = load i32, i32* %start, align 4, !dbg !1088
  %sub36 = sub nsw i32 %50, %51, !dbg !1089
  %52 = load i32*, i32** %offc.addr, align 8, !dbg !1090
  %53 = load i32, i32* %52, align 4, !dbg !1091
  %sub37 = sub nsw i32 %53, %sub36, !dbg !1091
  store i32 %sub37, i32* %52, align 4, !dbg !1091
  br label %if.end38, !dbg !1092

if.end38:                                         ; preds = %if.then35, %if.then32
  br label %for.end, !dbg !1093

if.end39:                                         ; preds = %land.lhs.true, %cond.end
  %54 = load i32*, i32** %offl.addr, align 8, !dbg !1094
  %55 = load i32, i32* %54, align 4, !dbg !1095
  %inc40 = add nsw i32 %55, 1, !dbg !1095
  store i32 %inc40, i32* %54, align 4, !dbg !1095
  %56 = load i32, i32* %end, align 4, !dbg !1096
  %57 = load i32, i32* %start, align 4, !dbg !1097
  %sub41 = sub nsw i32 %56, %57, !dbg !1098
  %58 = load i32*, i32** %offc.addr, align 8, !dbg !1099
  %59 = load i32, i32* %58, align 4, !dbg !1100
  %sub42 = sub nsw i32 %59, %sub41, !dbg !1100
  store i32 %sub42, i32* %58, align 4, !dbg !1100
  %60 = load i32, i32* %end, align 4, !dbg !1101
  store i32 %60, i32* %start, align 4, !dbg !1102
  %61 = load i32, i32* %max, align 4, !dbg !1103
  %62 = load i32, i32* %end, align 4, !dbg !1104
  %add43 = add nsw i32 %62, %61, !dbg !1104
  store i32 %add43, i32* %end, align 4, !dbg !1104
  store i32 1, i32* %chop, align 4, !dbg !1105
  br label %if.end58, !dbg !1106

if.else44:                                        ; preds = %while.body
  %63 = load i8, i8* %ch, align 1, !dbg !1107
  %conv45 = zext i8 %63 to i32, !dbg !1107
  %cmp46 = icmp eq i32 %conv45, 32, !dbg !1109
  br i1 %cmp46, label %if.then51, label %lor.lhs.false, !dbg !1110

lor.lhs.false:                                    ; preds = %if.else44
  %64 = load i8, i8* %ch, align 1, !dbg !1111
  %conv48 = zext i8 %64 to i32, !dbg !1111
  %cmp49 = icmp eq i32 %conv48, 45, !dbg !1112
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !1113

if.then51:                                        ; preds = %lor.lhs.false, %if.else44
  %65 = load i32, i32* %i, align 4, !dbg !1114
  %add52 = add nsw i32 %65, 1, !dbg !1116
  store i32 %add52, i32* %end, align 4, !dbg !1117
  store i32 0, i32* %chop, align 4, !dbg !1118
  %66 = load i32, i32* %i, align 4, !dbg !1119
  %67 = load i32, i32* %cursin.addr, align 4, !dbg !1121
  %cmp53 = icmp sge i32 %66, %67, !dbg !1122
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !1123

if.then55:                                        ; preds = %if.then51
  br label %for.end, !dbg !1124

if.end56:                                         ; preds = %if.then51
  br label %if.end57, !dbg !1125

if.end57:                                         ; preds = %if.end56, %lor.lhs.false
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end39
  %68 = load i32, i32* %columns, align 4, !dbg !1126
  %69 = load i32, i32* %i, align 4, !dbg !1127
  %add59 = add nsw i32 %69, %68, !dbg !1127
  store i32 %add59, i32* %i, align 4, !dbg !1127
  br label %while.cond, !dbg !1056, !llvm.loop !1128

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !1130

for.inc:                                          ; preds = %while.end
  %70 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !1131
  %line60 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %70, i32 0, i32 2, !dbg !1132
  %71 = load i8*, i8** %line60, align 8, !dbg !1132
  %72 = load i32, i32* %j, align 4, !dbg !1133
  %idx.ext61 = sext i32 %72 to i64, !dbg !1134
  %add.ptr62 = getelementptr inbounds i8, i8* %71, i64 %idx.ext61, !dbg !1134
  %call63 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr62), !dbg !1135
  %73 = load i32, i32* %j, align 4, !dbg !1136
  %add64 = add nsw i32 %73, %call63, !dbg !1136
  store i32 %add64, i32* %j, align 4, !dbg !1136
  br label %for.cond, !dbg !1137, !llvm.loop !1138

for.end:                                          ; preds = %if.then, %if.then2, %if.end38, %if.then55, %for.cond
  ret void, !dbg !1140
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_get_char_pos(%struct.SpaceText* %st, i8* %line, i32 %cur) #0 !dbg !1141 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %line.addr = alloca i8*, align 8
  %cur.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1144, metadata !DIExpression()), !dbg !1145
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !1146, metadata !DIExpression()), !dbg !1147
  store i32 %cur, i32* %cur.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cur.addr, metadata !1148, metadata !DIExpression()), !dbg !1149
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1150, metadata !DIExpression()), !dbg !1151
  store i32 0, i32* %a, align 4, !dbg !1151
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1152, metadata !DIExpression()), !dbg !1153
  store i32 0, i32* %i, align 4, !dbg !1154
  br label %for.cond, !dbg !1156

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1157
  %1 = load i32, i32* %cur.addr, align 4, !dbg !1159
  %cmp = icmp slt i32 %0, %1, !dbg !1160
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1161

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %line.addr, align 8, !dbg !1162
  %3 = load i32, i32* %i, align 4, !dbg !1163
  %idxprom = sext i32 %3 to i64, !dbg !1162
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !1162
  %4 = load i8, i8* %arrayidx, align 1, !dbg !1162
  %conv = zext i8 %4 to i32, !dbg !1162
  %tobool = icmp ne i32 %conv, 0, !dbg !1161
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !1164
  br i1 %5, label %for.body, label %for.end, !dbg !1165

for.body:                                         ; preds = %land.end
  %6 = load i8*, i8** %line.addr, align 8, !dbg !1166
  %7 = load i32, i32* %i, align 4, !dbg !1169
  %idxprom1 = sext i32 %7 to i64, !dbg !1166
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i64 %idxprom1, !dbg !1166
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !1166
  %conv3 = zext i8 %8 to i32, !dbg !1166
  %cmp4 = icmp eq i32 %conv3, 9, !dbg !1170
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1171

if.then:                                          ; preds = %for.body
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1172
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 16, !dbg !1173
  %10 = load i32, i32* %tabnumber, align 8, !dbg !1173
  %11 = load i32, i32* %a, align 4, !dbg !1174
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1175
  %tabnumber6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 16, !dbg !1176
  %13 = load i32, i32* %tabnumber6, align 8, !dbg !1176
  %rem = srem i32 %11, %13, !dbg !1177
  %sub = sub nsw i32 %10, %rem, !dbg !1178
  %14 = load i32, i32* %a, align 4, !dbg !1179
  %add = add nsw i32 %14, %sub, !dbg !1179
  store i32 %add, i32* %a, align 4, !dbg !1179
  br label %if.end, !dbg !1180

if.else:                                          ; preds = %for.body
  %15 = load i8*, i8** %line.addr, align 8, !dbg !1181
  %16 = load i32, i32* %i, align 4, !dbg !1182
  %idx.ext = sext i32 %16 to i64, !dbg !1183
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !1183
  %call = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !1184
  %17 = load i32, i32* %a, align 4, !dbg !1185
  %add7 = add nsw i32 %17, %call, !dbg !1185
  store i32 %add7, i32* %a, align 4, !dbg !1185
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !1186

for.inc:                                          ; preds = %if.end
  %18 = load i8*, i8** %line.addr, align 8, !dbg !1187
  %19 = load i32, i32* %i, align 4, !dbg !1188
  %idx.ext8 = sext i32 %19 to i64, !dbg !1189
  %add.ptr9 = getelementptr inbounds i8, i8* %18, i64 %idx.ext8, !dbg !1189
  %call10 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr9), !dbg !1190
  %20 = load i32, i32* %i, align 4, !dbg !1191
  %add11 = add nsw i32 %20, %call10, !dbg !1191
  store i32 %add11, i32* %i, align 4, !dbg !1191
  br label %for.cond, !dbg !1192, !llvm.loop !1193

for.end:                                          ; preds = %land.end
  %21 = load i32, i32* %a, align 4, !dbg !1195
  ret i32 %21, !dbg !1196
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_drawcache_tag_update(%struct.SpaceText* %st, i32 %full) #0 !dbg !1197 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %full.addr = alloca i32, align 4
  %drawcache2 = alloca %struct.DrawCache*, align 8
  %txt = alloca %struct.Text*, align 8
  %sellno = alloca i32, align 4
  %curlno = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1200, metadata !DIExpression()), !dbg !1201
  store i32 %full, i32* %full.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %full.addr, metadata !1202, metadata !DIExpression()), !dbg !1203
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1204
  %cmp = icmp eq %struct.SpaceText* %0, null, !dbg !1206
  br i1 %cmp, label %if.then, label %if.end, !dbg !1207

if.then:                                          ; preds = %entry
  br label %if.end36, !dbg !1208

if.end:                                           ; preds = %entry
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1209
  %drawcache = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 31, !dbg !1211
  %2 = load i8*, i8** %drawcache, align 8, !dbg !1211
  %tobool = icmp ne i8* %2, null, !dbg !1209
  br i1 %tobool, label %if.then1, label %if.end36, !dbg !1212

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache2, metadata !1213, metadata !DIExpression()), !dbg !1215
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1216
  %drawcache3 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 31, !dbg !1217
  %4 = load i8*, i8** %drawcache3, align 8, !dbg !1217
  %5 = bitcast i8* %4 to %struct.DrawCache*, !dbg !1218
  store %struct.DrawCache* %5, %struct.DrawCache** %drawcache2, align 8, !dbg !1215
  call void @llvm.dbg.declare(metadata %struct.Text** %txt, metadata !1219, metadata !DIExpression()), !dbg !1220
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1221
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 6, !dbg !1222
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1222
  store %struct.Text* %7, %struct.Text** %txt, align 8, !dbg !1220
  %8 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1223
  %update_flag = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %8, i32 0, i32 10, !dbg !1225
  %9 = load i16, i16* %update_flag, align 2, !dbg !1225
  %tobool4 = icmp ne i16 %9, 0, !dbg !1223
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1226

if.then5:                                         ; preds = %if.then1
  br label %if.end36, !dbg !1227

if.end6:                                          ; preds = %if.then1
  %10 = load i32, i32* %full.addr, align 4, !dbg !1229
  %tobool7 = icmp ne i32 %10, 0, !dbg !1229
  br i1 %tobool7, label %if.else31, label %if.then8, !dbg !1231

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %sellno, metadata !1232, metadata !DIExpression()), !dbg !1234
  %11 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1235
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 4, !dbg !1236
  %12 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1237
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 6, !dbg !1238
  %13 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !1238
  %14 = bitcast %struct.TextLine* %13 to i8*, !dbg !1237
  %call = call i32 @BLI_findindex(%struct.ListBase* %lines, i8* %14), !dbg !1239
  store i32 %call, i32* %sellno, align 4, !dbg !1234
  call void @llvm.dbg.declare(metadata i32* %curlno, metadata !1240, metadata !DIExpression()), !dbg !1241
  %15 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1242
  %lines9 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 4, !dbg !1243
  %16 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1244
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 5, !dbg !1245
  %17 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !1245
  %18 = bitcast %struct.TextLine* %17 to i8*, !dbg !1244
  %call10 = call i32 @BLI_findindex(%struct.ListBase* %lines9, i8* %18), !dbg !1246
  store i32 %call10, i32* %curlno, align 4, !dbg !1241
  %19 = load i32, i32* %curlno, align 4, !dbg !1247
  %20 = load i32, i32* %sellno, align 4, !dbg !1249
  %cmp11 = icmp slt i32 %19, %20, !dbg !1250
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !1251

if.then12:                                        ; preds = %if.then8
  %21 = load i32, i32* %curlno, align 4, !dbg !1252
  %22 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1254
  %valid_head = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %22, i32 0, i32 11, !dbg !1255
  store i32 %21, i32* %valid_head, align 8, !dbg !1256
  %23 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1257
  %nlines = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %23, i32 0, i32 2, !dbg !1258
  %24 = load i32, i32* %nlines, align 4, !dbg !1258
  %25 = load i32, i32* %sellno, align 4, !dbg !1259
  %sub = sub nsw i32 %24, %25, !dbg !1260
  %sub13 = sub nsw i32 %sub, 1, !dbg !1261
  %26 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1262
  %valid_tail = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %26, i32 0, i32 12, !dbg !1263
  store i32 %sub13, i32* %valid_tail, align 4, !dbg !1264
  br label %if.end19, !dbg !1265

if.else:                                          ; preds = %if.then8
  %27 = load i32, i32* %sellno, align 4, !dbg !1266
  %28 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1268
  %valid_head14 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %28, i32 0, i32 11, !dbg !1269
  store i32 %27, i32* %valid_head14, align 8, !dbg !1270
  %29 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1271
  %nlines15 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %29, i32 0, i32 2, !dbg !1272
  %30 = load i32, i32* %nlines15, align 4, !dbg !1272
  %31 = load i32, i32* %curlno, align 4, !dbg !1273
  %sub16 = sub nsw i32 %30, %31, !dbg !1274
  %sub17 = sub nsw i32 %sub16, 1, !dbg !1275
  %32 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1276
  %valid_tail18 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %32, i32 0, i32 12, !dbg !1277
  store i32 %sub17, i32* %valid_tail18, align 4, !dbg !1278
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then12
  %33 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1279
  %valid_head20 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %33, i32 0, i32 11, !dbg !1281
  %34 = load i32, i32* %valid_head20, align 8, !dbg !1281
  %cmp21 = icmp sgt i32 %34, 0, !dbg !1282
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !1283

if.then22:                                        ; preds = %if.end19
  %35 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1284
  %valid_head23 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %35, i32 0, i32 11, !dbg !1285
  %36 = load i32, i32* %valid_head23, align 8, !dbg !1286
  %dec = add nsw i32 %36, -1, !dbg !1286
  store i32 %dec, i32* %valid_head23, align 8, !dbg !1286
  br label %if.end24, !dbg !1284

if.end24:                                         ; preds = %if.then22, %if.end19
  %37 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1287
  %valid_tail25 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %37, i32 0, i32 12, !dbg !1289
  %38 = load i32, i32* %valid_tail25, align 4, !dbg !1289
  %cmp26 = icmp sgt i32 %38, 0, !dbg !1290
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !1291

if.then27:                                        ; preds = %if.end24
  %39 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1292
  %valid_tail28 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %39, i32 0, i32 12, !dbg !1293
  %40 = load i32, i32* %valid_tail28, align 4, !dbg !1294
  %dec29 = add nsw i32 %40, -1, !dbg !1294
  store i32 %dec29, i32* %valid_tail28, align 4, !dbg !1294
  br label %if.end30, !dbg !1292

if.end30:                                         ; preds = %if.then27, %if.end24
  br label %if.end34, !dbg !1295

if.else31:                                        ; preds = %if.end6
  %41 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1296
  %valid_head32 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %41, i32 0, i32 11, !dbg !1298
  store i32 0, i32* %valid_head32, align 8, !dbg !1299
  %42 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1300
  %valid_tail33 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %42, i32 0, i32 12, !dbg !1301
  store i32 0, i32* %valid_tail33, align 4, !dbg !1302
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.end30
  %43 = load %struct.DrawCache*, %struct.DrawCache** %drawcache2, align 8, !dbg !1303
  %update_flag35 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %43, i32 0, i32 10, !dbg !1304
  store i16 1, i16* %update_flag35, align 2, !dbg !1305
  br label %if.end36, !dbg !1306

if.end36:                                         ; preds = %if.then, %if.then5, %if.end34, %if.end
  ret void, !dbg !1307
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_free_caches(%struct.SpaceText* %st) #0 !dbg !1308 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %drawcache = alloca %struct.DrawCache*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1311, metadata !DIExpression()), !dbg !1312
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache, metadata !1313, metadata !DIExpression()), !dbg !1314
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1315
  %drawcache1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 31, !dbg !1316
  %1 = load i8*, i8** %drawcache1, align 8, !dbg !1316
  %2 = bitcast i8* %1 to %struct.DrawCache*, !dbg !1317
  store %struct.DrawCache* %2, %struct.DrawCache** %drawcache, align 8, !dbg !1314
  %3 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1318
  %tobool = icmp ne %struct.DrawCache* %3, null, !dbg !1318
  br i1 %tobool, label %if.then, label %if.end5, !dbg !1320

if.then:                                          ; preds = %entry
  %4 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1321
  %line_height = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %4, i32 0, i32 0, !dbg !1324
  %5 = load i32*, i32** %line_height, align 8, !dbg !1324
  %tobool2 = icmp ne i32* %5, null, !dbg !1321
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !1325

if.then3:                                         ; preds = %if.then
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1326
  %7 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1327
  %line_height4 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %7, i32 0, i32 0, !dbg !1328
  %8 = load i32*, i32** %line_height4, align 8, !dbg !1328
  %9 = bitcast i32* %8 to i8*, !dbg !1327
  call void %6(i8* %9), !dbg !1326
  br label %if.end, !dbg !1326

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1329
  %11 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1330
  %12 = bitcast %struct.DrawCache* %11 to i8*, !dbg !1330
  call void %10(i8* %12), !dbg !1329
  br label %if.end5, !dbg !1331

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !1332
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_get_span_wrap(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.TextLine* %from, %struct.TextLine* %to) #0 !dbg !1333 {
entry:
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %from.addr = alloca %struct.TextLine*, align 8
  %to.addr = alloca %struct.TextLine*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca %struct.TextLine*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1336, metadata !DIExpression()), !dbg !1337
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !1338, metadata !DIExpression()), !dbg !1339
  store %struct.TextLine* %from, %struct.TextLine** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %from.addr, metadata !1340, metadata !DIExpression()), !dbg !1341
  store %struct.TextLine* %to, %struct.TextLine** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %to.addr, metadata !1342, metadata !DIExpression()), !dbg !1343
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1344
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 24, !dbg !1346
  %1 = load i32, i32* %wordwrap, align 8, !dbg !1346
  %tobool = icmp ne i32 %1, 0, !dbg !1344
  br i1 %tobool, label %if.then, label %if.else, !dbg !1347

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1348, metadata !DIExpression()), !dbg !1350
  store i32 0, i32* %ret, align 4, !dbg !1350
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !1351, metadata !DIExpression()), !dbg !1352
  %2 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !1353
  store %struct.TextLine* %2, %struct.TextLine** %tmp, align 8, !dbg !1352
  br label %while.cond, !dbg !1354

while.cond:                                       ; preds = %if.end, %if.then
  %3 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1355
  %tobool1 = icmp ne %struct.TextLine* %3, null, !dbg !1354
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1354

while.body:                                       ; preds = %while.cond
  %4 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1356
  %5 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !1359
  %cmp = icmp eq %struct.TextLine* %4, %5, !dbg !1360
  br i1 %cmp, label %if.then2, label %if.end, !dbg !1361

if.then2:                                         ; preds = %while.body
  %6 = load i32, i32* %ret, align 4, !dbg !1362
  store i32 %6, i32* %retval, align 4, !dbg !1363
  br label %return, !dbg !1363

if.end:                                           ; preds = %while.body
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1364
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1365
  %9 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1366
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %9, i32 0, i32 2, !dbg !1367
  %10 = load i8*, i8** %line, align 8, !dbg !1367
  %call = call i32 @text_get_visible_lines(%struct.SpaceText* %7, %struct.ARegion* %8, i8* %10), !dbg !1368
  %11 = load i32, i32* %ret, align 4, !dbg !1369
  %add = add nsw i32 %11, %call, !dbg !1369
  store i32 %add, i32* %ret, align 4, !dbg !1369
  %12 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1370
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 0, !dbg !1371
  %13 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !1371
  store %struct.TextLine* %13, %struct.TextLine** %tmp, align 8, !dbg !1372
  br label %while.cond, !dbg !1354, !llvm.loop !1373

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %ret, align 4, !dbg !1375
  store i32 %14, i32* %retval, align 4, !dbg !1376
  br label %return, !dbg !1376

if.else:                                          ; preds = %entry
  %15 = load %struct.TextLine*, %struct.TextLine** %from.addr, align 8, !dbg !1377
  %16 = load %struct.TextLine*, %struct.TextLine** %to.addr, align 8, !dbg !1379
  %call3 = call i32 @txt_get_span(%struct.TextLine* %15, %struct.TextLine* %16), !dbg !1380
  store i32 %call3, i32* %retval, align 4, !dbg !1381
  br label %return, !dbg !1381

return:                                           ; preds = %if.else, %while.end, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !1382
  ret i32 %17, !dbg !1382
}

declare dso_local i32 @txt_get_span(%struct.TextLine*, %struct.TextLine*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_get_total_lines(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !1383 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %drawcache = alloca %struct.DrawCache*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1384, metadata !DIExpression()), !dbg !1385
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !1386, metadata !DIExpression()), !dbg !1387
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache, metadata !1388, metadata !DIExpression()), !dbg !1389
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1390
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1391
  call void @text_update_drawcache(%struct.SpaceText* %0, %struct.ARegion* %1), !dbg !1392
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1393
  %drawcache1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 31, !dbg !1394
  %3 = load i8*, i8** %drawcache1, align 8, !dbg !1394
  %4 = bitcast i8* %3 to %struct.DrawCache*, !dbg !1395
  store %struct.DrawCache* %4, %struct.DrawCache** %drawcache, align 8, !dbg !1396
  %5 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1397
  %total_lines = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %5, i32 0, i32 1, !dbg !1398
  %6 = load i32, i32* %total_lines, align 8, !dbg !1398
  ret i32 %6, !dbg !1399
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_update_drawcache(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !1400 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %drawcache = alloca %struct.DrawCache*, align 8
  %full_update = alloca i32, align 4
  %nlines = alloca i32, align 4
  %txt = alloca %struct.Text*, align 8
  %line = alloca %struct.TextLine*, align 8
  %lineno = alloca i32, align 4
  %size = alloca i32, align 4
  %lines_count = alloca i32, align 4
  %fp = alloca i32*, align 8
  %new_tail = alloca i32*, align 8
  %old_tail = alloca i32*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1403, metadata !DIExpression()), !dbg !1404
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !1405, metadata !DIExpression()), !dbg !1406
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache, metadata !1407, metadata !DIExpression()), !dbg !1408
  call void @llvm.dbg.declare(metadata i32* %full_update, metadata !1409, metadata !DIExpression()), !dbg !1410
  store i32 0, i32* %full_update, align 4, !dbg !1410
  call void @llvm.dbg.declare(metadata i32* %nlines, metadata !1411, metadata !DIExpression()), !dbg !1412
  store i32 0, i32* %nlines, align 4, !dbg !1412
  call void @llvm.dbg.declare(metadata %struct.Text** %txt, metadata !1413, metadata !DIExpression()), !dbg !1414
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1415
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !1416
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1416
  store %struct.Text* %1, %struct.Text** %txt, align 8, !dbg !1414
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1417
  %drawcache1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 31, !dbg !1419
  %3 = load i8*, i8** %drawcache1, align 8, !dbg !1419
  %tobool = icmp ne i8* %3, null, !dbg !1417
  br i1 %tobool, label %if.end, label %if.then, !dbg !1420

if.then:                                          ; preds = %entry
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1421
  call void @text_drawcache_init(%struct.SpaceText* %4), !dbg !1422
  br label %if.end, !dbg !1422

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1423
  call void @text_update_character_width(%struct.SpaceText* %5), !dbg !1424
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1425
  %drawcache2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 31, !dbg !1426
  %7 = load i8*, i8** %drawcache2, align 8, !dbg !1426
  %8 = bitcast i8* %7 to %struct.DrawCache*, !dbg !1427
  store %struct.DrawCache* %8, %struct.DrawCache** %drawcache, align 8, !dbg !1428
  %9 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1429
  %nlines3 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %9, i32 0, i32 2, !dbg !1430
  %10 = load i32, i32* %nlines3, align 4, !dbg !1430
  store i32 %10, i32* %nlines, align 4, !dbg !1431
  %11 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1432
  %winx = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %11, i32 0, i32 3, !dbg !1433
  %12 = load i32, i32* %winx, align 8, !dbg !1433
  %13 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1434
  %winx4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 5, !dbg !1435
  %14 = load i16, i16* %winx4, align 8, !dbg !1435
  %conv = sext i16 %14 to i32, !dbg !1434
  %cmp = icmp ne i32 %12, %conv, !dbg !1436
  %conv5 = zext i1 %cmp to i32, !dbg !1436
  %15 = load i32, i32* %full_update, align 4, !dbg !1437
  %or = or i32 %15, %conv5, !dbg !1437
  store i32 %or, i32* %full_update, align 4, !dbg !1437
  %16 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1438
  %wordwrap = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %16, i32 0, i32 4, !dbg !1439
  %17 = load i32, i32* %wordwrap, align 4, !dbg !1439
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1440
  %wordwrap6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %18, i32 0, i32 24, !dbg !1441
  %19 = load i32, i32* %wordwrap6, align 8, !dbg !1441
  %cmp7 = icmp ne i32 %17, %19, !dbg !1442
  %conv8 = zext i1 %cmp7 to i32, !dbg !1442
  %20 = load i32, i32* %full_update, align 4, !dbg !1443
  %or9 = or i32 %20, %conv8, !dbg !1443
  store i32 %or9, i32* %full_update, align 4, !dbg !1443
  %21 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1444
  %showlinenrs = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %21, i32 0, i32 5, !dbg !1445
  %22 = load i32, i32* %showlinenrs, align 8, !dbg !1445
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1446
  %showlinenrs10 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %23, i32 0, i32 15, !dbg !1447
  %24 = load i32, i32* %showlinenrs10, align 4, !dbg !1447
  %cmp11 = icmp ne i32 %22, %24, !dbg !1448
  %conv12 = zext i1 %cmp11 to i32, !dbg !1448
  %25 = load i32, i32* %full_update, align 4, !dbg !1449
  %or13 = or i32 %25, %conv12, !dbg !1449
  store i32 %or13, i32* %full_update, align 4, !dbg !1449
  %26 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1450
  %tabnumber = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %26, i32 0, i32 6, !dbg !1451
  %27 = load i32, i32* %tabnumber, align 4, !dbg !1451
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1452
  %tabnumber14 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %28, i32 0, i32 16, !dbg !1453
  %29 = load i32, i32* %tabnumber14, align 8, !dbg !1453
  %cmp15 = icmp ne i32 %27, %29, !dbg !1454
  %conv16 = zext i1 %cmp15 to i32, !dbg !1454
  %30 = load i32, i32* %full_update, align 4, !dbg !1455
  %or17 = or i32 %30, %conv16, !dbg !1455
  store i32 %or17, i32* %full_update, align 4, !dbg !1455
  %31 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1456
  %lheight = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %31, i32 0, i32 7, !dbg !1457
  %32 = load i16, i16* %lheight, align 8, !dbg !1457
  %conv18 = sext i16 %32 to i32, !dbg !1456
  %33 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1458
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %33, i32 0, i32 29, !dbg !1459
  %34 = load i16, i16* %lheight_dpi, align 2, !dbg !1459
  %conv19 = sext i16 %34 to i32, !dbg !1458
  %cmp20 = icmp ne i32 %conv18, %conv19, !dbg !1460
  %conv21 = zext i1 %cmp20 to i32, !dbg !1460
  %35 = load i32, i32* %full_update, align 4, !dbg !1461
  %or22 = or i32 %35, %conv21, !dbg !1461
  store i32 %or22, i32* %full_update, align 4, !dbg !1461
  %36 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1462
  %cwidth = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %36, i32 0, i32 8, !dbg !1463
  %37 = load i8, i8* %cwidth, align 2, !dbg !1463
  %conv23 = zext i8 %37 to i32, !dbg !1462
  %38 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1464
  %cwidth24 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %38, i32 0, i32 12, !dbg !1465
  %39 = load i8, i8* %cwidth24, align 2, !dbg !1465
  %conv25 = zext i8 %39 to i32, !dbg !1464
  %cmp26 = icmp ne i32 %conv23, %conv25, !dbg !1466
  %conv27 = zext i1 %cmp26 to i32, !dbg !1466
  %40 = load i32, i32* %full_update, align 4, !dbg !1467
  %or28 = or i32 %40, %conv27, !dbg !1467
  store i32 %or28, i32* %full_update, align 4, !dbg !1467
  %41 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1468
  %text_id = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %41, i32 0, i32 9, !dbg !1469
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %text_id, i64 0, i64 0, !dbg !1468
  %42 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1470
  %id = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 0, !dbg !1471
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !1472
  %arraydecay29 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !1470
  %call = call i32 @strncmp(i8* %arraydecay, i8* %arraydecay29, i64 66) #6, !dbg !1473
  %43 = load i32, i32* %full_update, align 4, !dbg !1474
  %or30 = or i32 %43, %call, !dbg !1474
  store i32 %or30, i32* %full_update, align 4, !dbg !1474
  %44 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1475
  %wordwrap31 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %44, i32 0, i32 24, !dbg !1477
  %45 = load i32, i32* %wordwrap31, align 8, !dbg !1477
  %tobool32 = icmp ne i32 %45, 0, !dbg !1475
  br i1 %tobool32, label %if.then33, label %if.else100, !dbg !1478

if.then33:                                        ; preds = %if.end
  %46 = load i32, i32* %full_update, align 4, !dbg !1479
  %tobool34 = icmp ne i32 %46, 0, !dbg !1479
  br i1 %tobool34, label %if.then36, label %lor.lhs.false, !dbg !1482

lor.lhs.false:                                    ; preds = %if.then33
  %47 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1483
  %line_height = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %47, i32 0, i32 0, !dbg !1484
  %48 = load i32*, i32** %line_height, align 8, !dbg !1484
  %tobool35 = icmp ne i32* %48, null, !dbg !1483
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !1485

if.then36:                                        ; preds = %lor.lhs.false, %if.then33
  %49 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1486
  %valid_head = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %49, i32 0, i32 11, !dbg !1488
  store i32 0, i32* %valid_head, align 8, !dbg !1489
  %50 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1490
  %valid_tail = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %50, i32 0, i32 12, !dbg !1491
  store i32 0, i32* %valid_tail, align 4, !dbg !1492
  %51 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1493
  %update_flag = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %51, i32 0, i32 10, !dbg !1494
  store i16 1, i16* %update_flag, align 2, !dbg !1495
  br label %if.end37, !dbg !1496

if.end37:                                         ; preds = %if.then36, %lor.lhs.false
  %52 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1497
  %update_flag38 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %52, i32 0, i32 10, !dbg !1499
  %53 = load i16, i16* %update_flag38, align 2, !dbg !1499
  %tobool39 = icmp ne i16 %53, 0, !dbg !1497
  br i1 %tobool39, label %if.then40, label %if.end99, !dbg !1500

if.then40:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line, metadata !1501, metadata !DIExpression()), !dbg !1503
  %54 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1504
  %text41 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %54, i32 0, i32 6, !dbg !1505
  %55 = load %struct.Text*, %struct.Text** %text41, align 8, !dbg !1505
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 4, !dbg !1506
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !1507
  %56 = load i8*, i8** %first, align 8, !dbg !1507
  %57 = bitcast i8* %56 to %struct.TextLine*, !dbg !1504
  store %struct.TextLine* %57, %struct.TextLine** %line, align 8, !dbg !1503
  call void @llvm.dbg.declare(metadata i32* %lineno, metadata !1508, metadata !DIExpression()), !dbg !1509
  store i32 0, i32* %lineno, align 4, !dbg !1509
  call void @llvm.dbg.declare(metadata i32* %size, metadata !1510, metadata !DIExpression()), !dbg !1511
  call void @llvm.dbg.declare(metadata i32* %lines_count, metadata !1512, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.declare(metadata i32** %fp, metadata !1514, metadata !DIExpression()), !dbg !1515
  %58 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1516
  %line_height42 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %58, i32 0, i32 0, !dbg !1517
  %59 = load i32*, i32** %line_height42, align 8, !dbg !1517
  store i32* %59, i32** %fp, align 8, !dbg !1515
  call void @llvm.dbg.declare(metadata i32** %new_tail, metadata !1518, metadata !DIExpression()), !dbg !1519
  call void @llvm.dbg.declare(metadata i32** %old_tail, metadata !1520, metadata !DIExpression()), !dbg !1521
  %60 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1522
  %lines43 = getelementptr inbounds %struct.Text, %struct.Text* %60, i32 0, i32 4, !dbg !1523
  %call44 = call i32 @BLI_countlist(%struct.ListBase* %lines43), !dbg !1524
  store i32 %call44, i32* %nlines, align 4, !dbg !1525
  %61 = load i32, i32* %nlines, align 4, !dbg !1526
  %conv45 = sext i32 %61 to i64, !dbg !1526
  %mul = mul i64 4, %conv45, !dbg !1527
  %conv46 = trunc i64 %mul to i32, !dbg !1528
  store i32 %conv46, i32* %size, align 4, !dbg !1529
  %62 = load i32*, i32** %fp, align 8, !dbg !1530
  %tobool47 = icmp ne i32* %62, null, !dbg !1530
  br i1 %tobool47, label %if.then48, label %if.else, !dbg !1532

if.then48:                                        ; preds = %if.then40
  %63 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !1533
  %64 = load i32*, i32** %fp, align 8, !dbg !1533
  %65 = bitcast i32* %64 to i8*, !dbg !1533
  %66 = load i32, i32* %size, align 4, !dbg !1533
  %conv49 = sext i32 %66 to i64, !dbg !1533
  %call50 = call i8* %63(i8* %65, i64 %conv49, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.text_update_drawcache, i64 0, i64 0)), !dbg !1533
  %67 = bitcast i8* %call50 to i32*, !dbg !1533
  store i32* %67, i32** %fp, align 8, !dbg !1534
  br label %if.end53, !dbg !1535

if.else:                                          ; preds = %if.then40
  %68 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1536
  %69 = load i32, i32* %size, align 4, !dbg !1537
  %conv51 = sext i32 %69 to i64, !dbg !1537
  %call52 = call i8* %68(i64 %conv51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)), !dbg !1536
  %70 = bitcast i8* %call52 to i32*, !dbg !1536
  store i32* %70, i32** %fp, align 8, !dbg !1538
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then48
  %71 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1539
  %valid_head54 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %71, i32 0, i32 11, !dbg !1540
  store i32 0, i32* %valid_head54, align 8, !dbg !1541
  %72 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1542
  %valid_tail55 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %72, i32 0, i32 12, !dbg !1543
  store i32 0, i32* %valid_tail55, align 4, !dbg !1544
  %73 = load i32*, i32** %fp, align 8, !dbg !1545
  %74 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1546
  %nlines56 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %74, i32 0, i32 2, !dbg !1547
  %75 = load i32, i32* %nlines56, align 4, !dbg !1547
  %idx.ext = sext i32 %75 to i64, !dbg !1548
  %add.ptr = getelementptr inbounds i32, i32* %73, i64 %idx.ext, !dbg !1548
  %76 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1549
  %valid_tail57 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %76, i32 0, i32 12, !dbg !1550
  %77 = load i32, i32* %valid_tail57, align 4, !dbg !1550
  %idx.ext58 = sext i32 %77 to i64, !dbg !1551
  %idx.neg = sub i64 0, %idx.ext58, !dbg !1551
  %add.ptr59 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.neg, !dbg !1551
  store i32* %add.ptr59, i32** %old_tail, align 8, !dbg !1552
  %78 = load i32*, i32** %fp, align 8, !dbg !1553
  %79 = load i32, i32* %nlines, align 4, !dbg !1554
  %idx.ext60 = sext i32 %79 to i64, !dbg !1555
  %add.ptr61 = getelementptr inbounds i32, i32* %78, i64 %idx.ext60, !dbg !1555
  %80 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1556
  %valid_tail62 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %80, i32 0, i32 12, !dbg !1557
  %81 = load i32, i32* %valid_tail62, align 4, !dbg !1557
  %idx.ext63 = sext i32 %81 to i64, !dbg !1558
  %idx.neg64 = sub i64 0, %idx.ext63, !dbg !1558
  %add.ptr65 = getelementptr inbounds i32, i32* %add.ptr61, i64 %idx.neg64, !dbg !1558
  store i32* %add.ptr65, i32** %new_tail, align 8, !dbg !1559
  %82 = load i32*, i32** %new_tail, align 8, !dbg !1560
  %83 = bitcast i32* %82 to i8*, !dbg !1561
  %84 = load i32*, i32** %old_tail, align 8, !dbg !1562
  %85 = bitcast i32* %84 to i8*, !dbg !1561
  %86 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1563
  %valid_tail66 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %86, i32 0, i32 12, !dbg !1564
  %87 = load i32, i32* %valid_tail66, align 4, !dbg !1564
  %conv67 = sext i32 %87 to i64, !dbg !1563
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %85, i64 %conv67, i1 false), !dbg !1561
  %88 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1565
  %total_lines = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %88, i32 0, i32 1, !dbg !1566
  store i32 0, i32* %total_lines, align 8, !dbg !1567
  %89 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1568
  %showlinenrs68 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %89, i32 0, i32 15, !dbg !1570
  %90 = load i32, i32* %showlinenrs68, align 4, !dbg !1570
  %tobool69 = icmp ne i32 %90, 0, !dbg !1568
  br i1 %tobool69, label %if.then70, label %if.end76, !dbg !1571

if.then70:                                        ; preds = %if.end53
  %91 = load i32, i32* %nlines, align 4, !dbg !1572
  %conv71 = sitofp i32 %91 to float, !dbg !1573
  %conv72 = fpext float %conv71 to double, !dbg !1573
  %call73 = call double @log10(double %conv72) #7, !dbg !1574
  %92 = call double @llvm.floor.f64(double %call73), !dbg !1575
  %conv74 = fptosi double %92 to i32, !dbg !1576
  %add = add nsw i32 %conv74, 1, !dbg !1577
  %conv75 = trunc i32 %add to i8, !dbg !1576
  %93 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1578
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %93, i32 0, i32 13, !dbg !1579
  store i8 %conv75, i8* %linenrs_tot, align 1, !dbg !1580
  br label %if.end76, !dbg !1578

if.end76:                                         ; preds = %if.then70, %if.end53
  br label %while.cond, !dbg !1581

while.cond:                                       ; preds = %if.end93, %if.end76
  %94 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1582
  %tobool77 = icmp ne %struct.TextLine* %94, null, !dbg !1581
  br i1 %tobool77, label %while.body, label %while.end, !dbg !1581

while.body:                                       ; preds = %while.cond
  %95 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1583
  %valid_head78 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %95, i32 0, i32 11, !dbg !1586
  %96 = load i32, i32* %valid_head78, align 8, !dbg !1586
  %tobool79 = icmp ne i32 %96, 0, !dbg !1583
  br i1 %tobool79, label %if.then80, label %if.else82, !dbg !1587

if.then80:                                        ; preds = %while.body
  %97 = load i32*, i32** %fp, align 8, !dbg !1588
  %98 = load i32, i32* %lineno, align 4, !dbg !1590
  %idxprom = sext i32 %98 to i64, !dbg !1588
  %arrayidx = getelementptr inbounds i32, i32* %97, i64 %idxprom, !dbg !1588
  %99 = load i32, i32* %arrayidx, align 4, !dbg !1588
  store i32 %99, i32* %lines_count, align 4, !dbg !1591
  %100 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1592
  %valid_head81 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %100, i32 0, i32 11, !dbg !1593
  %101 = load i32, i32* %valid_head81, align 8, !dbg !1594
  %dec = add nsw i32 %101, -1, !dbg !1594
  store i32 %dec, i32* %valid_head81, align 8, !dbg !1594
  br label %if.end93, !dbg !1595

if.else82:                                        ; preds = %while.body
  %102 = load i32, i32* %lineno, align 4, !dbg !1596
  %conv83 = sext i32 %102 to i64, !dbg !1596
  %103 = load i32*, i32** %new_tail, align 8, !dbg !1598
  %104 = load i32*, i32** %fp, align 8, !dbg !1599
  %sub.ptr.lhs.cast = ptrtoint i32* %103 to i64, !dbg !1600
  %sub.ptr.rhs.cast = ptrtoint i32* %104 to i64, !dbg !1600
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1600
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !1600
  %cmp84 = icmp sgt i64 %conv83, %sub.ptr.div, !dbg !1601
  br i1 %cmp84, label %if.then86, label %if.else89, !dbg !1602

if.then86:                                        ; preds = %if.else82
  %105 = load i32*, i32** %fp, align 8, !dbg !1603
  %106 = load i32, i32* %lineno, align 4, !dbg !1605
  %idxprom87 = sext i32 %106 to i64, !dbg !1603
  %arrayidx88 = getelementptr inbounds i32, i32* %105, i64 %idxprom87, !dbg !1603
  %107 = load i32, i32* %arrayidx88, align 4, !dbg !1603
  store i32 %107, i32* %lines_count, align 4, !dbg !1606
  br label %if.end92, !dbg !1607

if.else89:                                        ; preds = %if.else82
  %108 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1608
  %109 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1610
  %110 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1611
  %line90 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %110, i32 0, i32 2, !dbg !1612
  %111 = load i8*, i8** %line90, align 8, !dbg !1612
  %call91 = call i32 @text_get_visible_lines(%struct.SpaceText* %108, %struct.ARegion* %109, i8* %111), !dbg !1613
  store i32 %call91, i32* %lines_count, align 4, !dbg !1614
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.then86
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then80
  %112 = load i32, i32* %lines_count, align 4, !dbg !1615
  %113 = load i32*, i32** %fp, align 8, !dbg !1616
  %114 = load i32, i32* %lineno, align 4, !dbg !1617
  %idxprom94 = sext i32 %114 to i64, !dbg !1616
  %arrayidx95 = getelementptr inbounds i32, i32* %113, i64 %idxprom94, !dbg !1616
  store i32 %112, i32* %arrayidx95, align 4, !dbg !1618
  %115 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !1619
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %115, i32 0, i32 0, !dbg !1620
  %116 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !1620
  store %struct.TextLine* %116, %struct.TextLine** %line, align 8, !dbg !1621
  %117 = load i32, i32* %lineno, align 4, !dbg !1622
  %inc = add nsw i32 %117, 1, !dbg !1622
  store i32 %inc, i32* %lineno, align 4, !dbg !1622
  %118 = load i32, i32* %lines_count, align 4, !dbg !1623
  %119 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1624
  %total_lines96 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %119, i32 0, i32 1, !dbg !1625
  %120 = load i32, i32* %total_lines96, align 8, !dbg !1626
  %add97 = add nsw i32 %120, %118, !dbg !1626
  store i32 %add97, i32* %total_lines96, align 8, !dbg !1626
  br label %while.cond, !dbg !1581, !llvm.loop !1627

while.end:                                        ; preds = %while.cond
  %121 = load i32*, i32** %fp, align 8, !dbg !1629
  %122 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1630
  %line_height98 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %122, i32 0, i32 0, !dbg !1631
  store i32* %121, i32** %line_height98, align 8, !dbg !1632
  br label %if.end99, !dbg !1633

if.end99:                                         ; preds = %while.end, %if.end37
  br label %if.end128, !dbg !1634

if.else100:                                       ; preds = %if.end
  %123 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1635
  %line_height101 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %123, i32 0, i32 0, !dbg !1638
  %124 = load i32*, i32** %line_height101, align 8, !dbg !1638
  %tobool102 = icmp ne i32* %124, null, !dbg !1635
  br i1 %tobool102, label %if.then103, label %if.end106, !dbg !1639

if.then103:                                       ; preds = %if.else100
  %125 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1640
  %126 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1642
  %line_height104 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %126, i32 0, i32 0, !dbg !1643
  %127 = load i32*, i32** %line_height104, align 8, !dbg !1643
  %128 = bitcast i32* %127 to i8*, !dbg !1642
  call void %125(i8* %128), !dbg !1640
  %129 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1644
  %line_height105 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %129, i32 0, i32 0, !dbg !1645
  store i32* null, i32** %line_height105, align 8, !dbg !1646
  br label %if.end106, !dbg !1647

if.end106:                                        ; preds = %if.then103, %if.else100
  %130 = load i32, i32* %full_update, align 4, !dbg !1648
  %tobool107 = icmp ne i32 %130, 0, !dbg !1648
  br i1 %tobool107, label %if.then112, label %lor.lhs.false108, !dbg !1650

lor.lhs.false108:                                 ; preds = %if.end106
  %131 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1651
  %update_flag109 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %131, i32 0, i32 10, !dbg !1652
  %132 = load i16, i16* %update_flag109, align 2, !dbg !1652
  %conv110 = sext i16 %132 to i32, !dbg !1651
  %tobool111 = icmp ne i32 %conv110, 0, !dbg !1651
  br i1 %tobool111, label %if.then112, label %if.end126, !dbg !1653

if.then112:                                       ; preds = %lor.lhs.false108, %if.end106
  %133 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1654
  %lines113 = getelementptr inbounds %struct.Text, %struct.Text* %133, i32 0, i32 4, !dbg !1656
  %call114 = call i32 @BLI_countlist(%struct.ListBase* %lines113), !dbg !1657
  store i32 %call114, i32* %nlines, align 4, !dbg !1658
  %134 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1659
  %showlinenrs115 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %134, i32 0, i32 15, !dbg !1661
  %135 = load i32, i32* %showlinenrs115, align 4, !dbg !1661
  %tobool116 = icmp ne i32 %135, 0, !dbg !1659
  br i1 %tobool116, label %if.then117, label %if.end125, !dbg !1662

if.then117:                                       ; preds = %if.then112
  %136 = load i32, i32* %nlines, align 4, !dbg !1663
  %conv118 = sitofp i32 %136 to float, !dbg !1664
  %conv119 = fpext float %conv118 to double, !dbg !1664
  %call120 = call double @log10(double %conv119) #7, !dbg !1665
  %137 = call double @llvm.floor.f64(double %call120), !dbg !1666
  %conv121 = fptosi double %137 to i32, !dbg !1667
  %add122 = add nsw i32 %conv121, 1, !dbg !1668
  %conv123 = trunc i32 %add122 to i8, !dbg !1667
  %138 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1669
  %linenrs_tot124 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %138, i32 0, i32 13, !dbg !1670
  store i8 %conv123, i8* %linenrs_tot124, align 1, !dbg !1671
  br label %if.end125, !dbg !1669

if.end125:                                        ; preds = %if.then117, %if.then112
  br label %if.end126, !dbg !1672

if.end126:                                        ; preds = %if.end125, %lor.lhs.false108
  %139 = load i32, i32* %nlines, align 4, !dbg !1673
  %140 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1674
  %total_lines127 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %140, i32 0, i32 1, !dbg !1675
  store i32 %139, i32* %total_lines127, align 8, !dbg !1676
  br label %if.end128

if.end128:                                        ; preds = %if.end126, %if.end99
  %141 = load i32, i32* %nlines, align 4, !dbg !1677
  %142 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1678
  %nlines129 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %142, i32 0, i32 2, !dbg !1679
  store i32 %141, i32* %nlines129, align 4, !dbg !1680
  %143 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1681
  %winx130 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %143, i32 0, i32 5, !dbg !1682
  %144 = load i16, i16* %winx130, align 8, !dbg !1682
  %conv131 = sext i16 %144 to i32, !dbg !1681
  %145 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1683
  %winx132 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %145, i32 0, i32 3, !dbg !1684
  store i32 %conv131, i32* %winx132, align 8, !dbg !1685
  %146 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1686
  %wordwrap133 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %146, i32 0, i32 24, !dbg !1687
  %147 = load i32, i32* %wordwrap133, align 8, !dbg !1687
  %148 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1688
  %wordwrap134 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %148, i32 0, i32 4, !dbg !1689
  store i32 %147, i32* %wordwrap134, align 4, !dbg !1690
  %149 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1691
  %lheight_dpi135 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %149, i32 0, i32 29, !dbg !1692
  %150 = load i16, i16* %lheight_dpi135, align 2, !dbg !1692
  %151 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1693
  %lheight136 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %151, i32 0, i32 7, !dbg !1694
  store i16 %150, i16* %lheight136, align 8, !dbg !1695
  %152 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1696
  %cwidth137 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %152, i32 0, i32 12, !dbg !1697
  %153 = load i8, i8* %cwidth137, align 2, !dbg !1697
  %154 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1698
  %cwidth138 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %154, i32 0, i32 8, !dbg !1699
  store i8 %153, i8* %cwidth138, align 2, !dbg !1700
  %155 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1701
  %showlinenrs139 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %155, i32 0, i32 15, !dbg !1702
  %156 = load i32, i32* %showlinenrs139, align 4, !dbg !1702
  %157 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1703
  %showlinenrs140 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %157, i32 0, i32 5, !dbg !1704
  store i32 %156, i32* %showlinenrs140, align 8, !dbg !1705
  %158 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1706
  %tabnumber141 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %158, i32 0, i32 16, !dbg !1707
  %159 = load i32, i32* %tabnumber141, align 8, !dbg !1707
  %160 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1708
  %tabnumber142 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %160, i32 0, i32 6, !dbg !1709
  store i32 %159, i32* %tabnumber142, align 4, !dbg !1710
  %161 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1711
  %text_id143 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %161, i32 0, i32 9, !dbg !1712
  %arraydecay144 = getelementptr inbounds [66 x i8], [66 x i8]* %text_id143, i64 0, i64 0, !dbg !1711
  %162 = load %struct.Text*, %struct.Text** %txt, align 8, !dbg !1713
  %id145 = getelementptr inbounds %struct.Text, %struct.Text* %162, i32 0, i32 0, !dbg !1714
  %name146 = getelementptr inbounds %struct.ID, %struct.ID* %id145, i32 0, i32 4, !dbg !1715
  %arraydecay147 = getelementptr inbounds [66 x i8], [66 x i8]* %name146, i64 0, i64 0, !dbg !1713
  %call148 = call i8* @strncpy(i8* %arraydecay144, i8* %arraydecay147, i64 66) #7, !dbg !1716
  %163 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1717
  %update_flag149 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %163, i32 0, i32 10, !dbg !1718
  store i16 0, i16* %update_flag149, align 2, !dbg !1719
  %164 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1720
  %valid_head150 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %164, i32 0, i32 11, !dbg !1721
  store i32 0, i32* %valid_head150, align 8, !dbg !1722
  %165 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !1723
  %valid_tail151 = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %165, i32 0, i32 12, !dbg !1724
  store i32 0, i32* %valid_tail151, align 4, !dbg !1725
  ret void, !dbg !1726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @draw_text_main(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !1727 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %text = alloca %struct.Text*, align 8
  %tft = alloca %struct.TextFormatType*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %scroll = alloca %struct.rcti, align 4
  %back = alloca %struct.rcti, align 4
  %linenr = alloca [12 x i8], align 1
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %winx = alloca i32, align 4
  %linecount = alloca i32, align 4
  %lineno = alloca i32, align 4
  %wraplinecount = alloca i32, align 4
  %wrap_skip = alloca i32, align 4
  %margin_column_x = alloca i32, align 4
  %lines36 = alloca i32, align 4
  %lines159 = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !1728, metadata !DIExpression()), !dbg !1729
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !1730, metadata !DIExpression()), !dbg !1731
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !1732, metadata !DIExpression()), !dbg !1733
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1734
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !1735
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !1735
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !1733
  call void @llvm.dbg.declare(metadata %struct.TextFormatType** %tft, metadata !1736, metadata !DIExpression()), !dbg !1756
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !1757, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.declare(metadata %struct.rcti* %scroll, metadata !1759, metadata !DIExpression()), !dbg !1760
  call void @llvm.dbg.declare(metadata %struct.rcti* %back, metadata !1761, metadata !DIExpression()), !dbg !1762
  call void @llvm.dbg.declare(metadata [12 x i8]* %linenr, metadata !1763, metadata !DIExpression()), !dbg !1767
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1768, metadata !DIExpression()), !dbg !1769
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1770, metadata !DIExpression()), !dbg !1771
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1772, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !1774, metadata !DIExpression()), !dbg !1775
  call void @llvm.dbg.declare(metadata i32* %linecount, metadata !1776, metadata !DIExpression()), !dbg !1777
  store i32 0, i32* %linecount, align 4, !dbg !1777
  call void @llvm.dbg.declare(metadata i32* %lineno, metadata !1778, metadata !DIExpression()), !dbg !1779
  store i32 0, i32* %lineno, align 4, !dbg !1779
  call void @llvm.dbg.declare(metadata i32* %wraplinecount, metadata !1780, metadata !DIExpression()), !dbg !1781
  store i32 0, i32* %wraplinecount, align 4, !dbg !1781
  call void @llvm.dbg.declare(metadata i32* %wrap_skip, metadata !1782, metadata !DIExpression()), !dbg !1783
  store i32 0, i32* %wrap_skip, align 4, !dbg !1783
  call void @llvm.dbg.declare(metadata i32* %margin_column_x, metadata !1784, metadata !DIExpression()), !dbg !1785
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1786
  %tobool = icmp ne %struct.Text* %2, null, !dbg !1786
  br i1 %tobool, label %if.end, label %if.then, !dbg !1788

if.then:                                          ; preds = %entry
  br label %return, !dbg !1789

if.end:                                           ; preds = %entry
  %3 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1790
  %conv = sext i16 %3 to i32, !dbg !1791
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1792
  %lheight = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 11, !dbg !1793
  %5 = load i16, i16* %lheight, align 4, !dbg !1793
  %conv2 = sext i16 %5 to i32, !dbg !1792
  %mul = mul nsw i32 %conv, %conv2, !dbg !1794
  %div = sdiv i32 %mul, 20, !dbg !1795
  %conv3 = trunc i32 %div to i16, !dbg !1796
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1797
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 29, !dbg !1798
  store i16 %conv3, i16* %lheight_dpi, align 2, !dbg !1799
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1800
  %lheight_dpi4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 29, !dbg !1801
  %8 = load i16, i16* %lheight_dpi4, align 2, !dbg !1801
  %conv5 = sext i16 %8 to i32, !dbg !1802
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !1802
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !1802

cond.true:                                        ; preds = %if.end
  %9 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1803
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 6, !dbg !1804
  %10 = load i16, i16* %winy, align 2, !dbg !1804
  %conv7 = sext i16 %10 to i32, !dbg !1805
  %11 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1806
  %lheight_dpi8 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %11, i32 0, i32 29, !dbg !1807
  %12 = load i16, i16* %lheight_dpi8, align 2, !dbg !1807
  %conv9 = sext i16 %12 to i32, !dbg !1806
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1808
  %lheight_dpi10 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 29, !dbg !1808
  %14 = load i16, i16* %lheight_dpi10, align 2, !dbg !1808
  %conv11 = sext i16 %14 to i32, !dbg !1808
  %conv12 = sitofp i32 %conv11 to float, !dbg !1808
  %mul13 = fmul float 0x3FD3333340000000, %conv12, !dbg !1808
  %conv14 = fptosi float %mul13 to i32, !dbg !1808
  %add = add nsw i32 %conv9, %conv14, !dbg !1809
  %div15 = sdiv i32 %conv7, %add, !dbg !1810
  br label %cond.end, !dbg !1802

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !1802

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div15, %cond.true ], [ 0, %cond.false ], !dbg !1802
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1811
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 8, !dbg !1812
  store i32 %cond, i32* %viewlines, align 4, !dbg !1813
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1814
  %17 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1815
  call void @text_update_drawcache(%struct.SpaceText* %16, %struct.ARegion* %17), !dbg !1816
  %18 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1817
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 5, !dbg !1819
  %19 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !1819
  %tobool16 = icmp ne %struct.TextLine* %19, null, !dbg !1817
  br i1 %tobool16, label %lor.lhs.false, label %if.then23, !dbg !1820

lor.lhs.false:                                    ; preds = %cond.end
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1821
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 6, !dbg !1822
  %21 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !1822
  %tobool17 = icmp ne %struct.TextLine* %21, null, !dbg !1821
  br i1 %tobool17, label %lor.lhs.false18, label %if.then23, !dbg !1823

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %22 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1824
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 4, !dbg !1825
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !1826
  %23 = load i8*, i8** %first, align 8, !dbg !1826
  %tobool19 = icmp ne i8* %23, null, !dbg !1824
  br i1 %tobool19, label %lor.lhs.false20, label %if.then23, !dbg !1827

lor.lhs.false20:                                  ; preds = %lor.lhs.false18
  %24 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1828
  %lines21 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 4, !dbg !1829
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines21, i32 0, i32 1, !dbg !1830
  %25 = load i8*, i8** %last, align 8, !dbg !1830
  %tobool22 = icmp ne i8* %25, null, !dbg !1828
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !1831

if.then23:                                        ; preds = %lor.lhs.false20, %lor.lhs.false18, %lor.lhs.false, %cond.end
  %26 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1832
  call void @txt_clean_text(%struct.Text* %26), !dbg !1833
  br label %if.end24, !dbg !1833

if.end24:                                         ; preds = %if.then23, %lor.lhs.false20
  %27 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1834
  %28 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1835
  call void @calc_text_rcts(%struct.SpaceText* %27, %struct.ARegion* %28, %struct.rcti* %scroll, %struct.rcti* %back), !dbg !1836
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1837
  %call = call %struct.TextFormatType* @ED_text_format_get(%struct.Text* %29), !dbg !1838
  store %struct.TextFormatType* %call, %struct.TextFormatType** %tft, align 8, !dbg !1839
  %30 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !1840
  %lines25 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 4, !dbg !1841
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines25, i32 0, i32 0, !dbg !1842
  %31 = load i8*, i8** %first26, align 8, !dbg !1842
  %32 = bitcast i8* %31 to %struct.TextLine*, !dbg !1840
  store %struct.TextLine* %32, %struct.TextLine** %tmp, align 8, !dbg !1843
  store i32 0, i32* %lineno, align 4, !dbg !1844
  store i32 0, i32* %i, align 4, !dbg !1845
  br label %for.cond, !dbg !1847

for.cond:                                         ; preds = %for.inc, %if.end24
  %33 = load i32, i32* %i, align 4, !dbg !1848
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1850
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 7, !dbg !1851
  %35 = load i32, i32* %top, align 8, !dbg !1851
  %cmp = icmp slt i32 %33, %35, !dbg !1852
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1853

land.rhs:                                         ; preds = %for.cond
  %36 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1854
  %tobool28 = icmp ne %struct.TextLine* %36, null, !dbg !1853
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %37 = phi i1 [ false, %for.cond ], [ %tobool28, %land.rhs ], !dbg !1855
  br i1 %37, label %for.body, label %for.end, !dbg !1856

for.body:                                         ; preds = %land.end
  %38 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1857
  %showsyntax = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %38, i32 0, i32 17, !dbg !1860
  %39 = load i16, i16* %showsyntax, align 4, !dbg !1860
  %conv29 = sext i16 %39 to i32, !dbg !1857
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !1857
  br i1 %tobool30, label %land.lhs.true, label %if.end33, !dbg !1861

land.lhs.true:                                    ; preds = %for.body
  %40 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1862
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %40, i32 0, i32 3, !dbg !1863
  %41 = load i8*, i8** %format, align 8, !dbg !1863
  %tobool31 = icmp ne i8* %41, null, !dbg !1862
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !1864

if.then32:                                        ; preds = %land.lhs.true
  %42 = load %struct.TextFormatType*, %struct.TextFormatType** %tft, align 8, !dbg !1865
  %format_line = getelementptr inbounds %struct.TextFormatType, %struct.TextFormatType* %42, i32 0, i32 3, !dbg !1866
  %43 = load void (%struct.SpaceText*, %struct.TextLine*, i8)*, void (%struct.SpaceText*, %struct.TextLine*, i8)** %format_line, align 8, !dbg !1866
  %44 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1867
  %45 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1868
  call void %43(%struct.SpaceText* %44, %struct.TextLine* %45, i8 zeroext 0), !dbg !1865
  br label %if.end33, !dbg !1865

if.end33:                                         ; preds = %if.then32, %land.lhs.true, %for.body
  %46 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1869
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %46, i32 0, i32 24, !dbg !1871
  %47 = load i32, i32* %wordwrap, align 8, !dbg !1871
  %tobool34 = icmp ne i32 %47, 0, !dbg !1869
  br i1 %tobool34, label %if.then35, label %if.else46, !dbg !1872

if.then35:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i32* %lines36, metadata !1873, metadata !DIExpression()), !dbg !1875
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1876
  %49 = load i32, i32* %lineno, align 4, !dbg !1877
  %call37 = call i32 @text_get_visible_lines_no(%struct.SpaceText* %48, i32 %49), !dbg !1878
  store i32 %call37, i32* %lines36, align 4, !dbg !1875
  %50 = load i32, i32* %wraplinecount, align 4, !dbg !1879
  %51 = load i32, i32* %lines36, align 4, !dbg !1881
  %add38 = add nsw i32 %50, %51, !dbg !1882
  %52 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1883
  %top39 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %52, i32 0, i32 7, !dbg !1884
  %53 = load i32, i32* %top39, align 8, !dbg !1884
  %cmp40 = icmp sgt i32 %add38, %53, !dbg !1885
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !1886

if.then42:                                        ; preds = %if.then35
  %54 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1887
  %top43 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %54, i32 0, i32 7, !dbg !1889
  %55 = load i32, i32* %top43, align 8, !dbg !1889
  %56 = load i32, i32* %wraplinecount, align 4, !dbg !1890
  %sub = sub nsw i32 %55, %56, !dbg !1891
  store i32 %sub, i32* %wrap_skip, align 4, !dbg !1892
  br label %for.end, !dbg !1893

if.else:                                          ; preds = %if.then35
  %57 = load i32, i32* %lines36, align 4, !dbg !1894
  %58 = load i32, i32* %wraplinecount, align 4, !dbg !1896
  %add44 = add nsw i32 %58, %57, !dbg !1896
  store i32 %add44, i32* %wraplinecount, align 4, !dbg !1896
  %59 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1897
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %59, i32 0, i32 0, !dbg !1898
  %60 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !1898
  store %struct.TextLine* %60, %struct.TextLine** %tmp, align 8, !dbg !1899
  %61 = load i32, i32* %linecount, align 4, !dbg !1900
  %inc = add nsw i32 %61, 1, !dbg !1900
  store i32 %inc, i32* %linecount, align 4, !dbg !1900
  br label %if.end45

if.end45:                                         ; preds = %if.else
  br label %if.end49, !dbg !1901

if.else46:                                        ; preds = %if.end33
  %62 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1902
  %next47 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %62, i32 0, i32 0, !dbg !1904
  %63 = load %struct.TextLine*, %struct.TextLine** %next47, align 8, !dbg !1904
  store %struct.TextLine* %63, %struct.TextLine** %tmp, align 8, !dbg !1905
  %64 = load i32, i32* %linecount, align 4, !dbg !1906
  %inc48 = add nsw i32 %64, 1, !dbg !1906
  store i32 %inc48, i32* %linecount, align 4, !dbg !1906
  br label %if.end49

if.end49:                                         ; preds = %if.else46, %if.end45
  %65 = load i32, i32* %lineno, align 4, !dbg !1907
  %inc50 = add nsw i32 %65, 1, !dbg !1907
  store i32 %inc50, i32* %lineno, align 4, !dbg !1907
  br label %for.inc, !dbg !1908

for.inc:                                          ; preds = %if.end49
  %66 = load i32, i32* %i, align 4, !dbg !1909
  %inc51 = add nsw i32 %66, 1, !dbg !1909
  store i32 %inc51, i32* %i, align 4, !dbg !1909
  br label %for.cond, !dbg !1910, !llvm.loop !1911

for.end:                                          ; preds = %if.then42, %land.end
  %67 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1913
  call void @text_font_begin(%struct.SpaceText* %67), !dbg !1914
  %68 = load i32, i32* @blf_mono_font, align 4, !dbg !1915
  %call52 = call float @BLF_fixed_width(i32 %68), !dbg !1916
  %conv53 = fptoui float %call52 to i8, !dbg !1916
  %69 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1917
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %69, i32 0, i32 12, !dbg !1918
  store i8 %conv53, i8* %cwidth, align 2, !dbg !1919
  %70 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1920
  %cwidth54 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %70, i32 0, i32 12, !dbg !1920
  %71 = load i8, i8* %cwidth54, align 2, !dbg !1920
  %conv55 = zext i8 %71 to i32, !dbg !1920
  %cmp56 = icmp sgt i32 %conv55, 1, !dbg !1920
  br i1 %cmp56, label %cond.true58, label %cond.false61, !dbg !1920

cond.true58:                                      ; preds = %for.end
  %72 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1920
  %cwidth59 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %72, i32 0, i32 12, !dbg !1920
  %73 = load i8, i8* %cwidth59, align 2, !dbg !1920
  %conv60 = zext i8 %73 to i32, !dbg !1920
  br label %cond.end62, !dbg !1920

cond.false61:                                     ; preds = %for.end
  br label %cond.end62, !dbg !1920

cond.end62:                                       ; preds = %cond.false61, %cond.true58
  %cond63 = phi i32 [ %conv60, %cond.true58 ], [ 1, %cond.false61 ], !dbg !1920
  %conv64 = trunc i32 %cond63 to i8, !dbg !1920
  %74 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1921
  %cwidth65 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %74, i32 0, i32 12, !dbg !1922
  store i8 %conv64, i8* %cwidth65, align 2, !dbg !1923
  %75 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1924
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %75, i32 0, i32 15, !dbg !1926
  %76 = load i32, i32* %showlinenrs, align 4, !dbg !1926
  %tobool66 = icmp ne i32 %76, 0, !dbg !1924
  br i1 %tobool66, label %if.then67, label %if.else96, !dbg !1927

if.then67:                                        ; preds = %cond.end62
  %77 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1928
  %conv68 = sext i16 %77 to i32, !dbg !1928
  %conv69 = sitofp i32 %conv68 to float, !dbg !1928
  %mul70 = fmul float 5.000000e-01, %conv69, !dbg !1928
  %conv71 = fptosi float %mul70 to i32, !dbg !1928
  %78 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1930
  %cwidth72 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %78, i32 0, i32 12, !dbg !1930
  %79 = load i8, i8* %cwidth72, align 2, !dbg !1930
  %conv73 = zext i8 %79 to i32, !dbg !1930
  %80 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1930
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %80, i32 0, i32 13, !dbg !1930
  %81 = load i8, i8* %linenrs_tot, align 1, !dbg !1930
  %conv74 = zext i8 %81 to i32, !dbg !1930
  %mul75 = mul nsw i32 %conv73, %conv74, !dbg !1930
  %add76 = add nsw i32 %conv71, %mul75, !dbg !1931
  store i32 %add76, i32* %x, align 4, !dbg !1932
  call void @UI_ThemeColor(i32 24), !dbg !1933
  %82 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1934
  %conv77 = sext i16 %82 to i32, !dbg !1934
  %conv78 = sitofp i32 %conv77 to float, !dbg !1934
  %mul79 = fmul float 5.000000e-01, %conv78, !dbg !1934
  %conv80 = fptosi float %mul79 to i32, !dbg !1934
  %sub81 = sub nsw i32 %conv80, 12, !dbg !1935
  %83 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1936
  %conv82 = sext i16 %83 to i32, !dbg !1936
  %conv83 = sitofp i32 %conv82 to float, !dbg !1936
  %mul84 = fmul float 5.000000e-01, %conv83, !dbg !1936
  %conv85 = fptosi float %mul84 to i32, !dbg !1936
  %sub86 = sub nsw i32 %conv85, 5, !dbg !1937
  %84 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1938
  %cwidth87 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %84, i32 0, i32 12, !dbg !1938
  %85 = load i8, i8* %cwidth87, align 2, !dbg !1938
  %conv88 = zext i8 %85 to i32, !dbg !1938
  %86 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1938
  %linenrs_tot89 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %86, i32 0, i32 13, !dbg !1938
  %87 = load i8, i8* %linenrs_tot89, align 1, !dbg !1938
  %conv90 = zext i8 %87 to i32, !dbg !1938
  %mul91 = mul nsw i32 %conv88, %conv90, !dbg !1938
  %add92 = add nsw i32 %sub86, %mul91, !dbg !1939
  %88 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1940
  %winy93 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %88, i32 0, i32 6, !dbg !1941
  %89 = load i16, i16* %winy93, align 2, !dbg !1941
  %conv94 = sext i16 %89 to i32, !dbg !1940
  %sub95 = sub nsw i32 %conv94, 2, !dbg !1942
  call void @glRecti(i32 %sub81, i32 0, i32 %add92, i32 %sub95), !dbg !1943
  br label %if.end102, !dbg !1944

if.else96:                                        ; preds = %cond.end62
  %90 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1945
  %linenrs_tot97 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %90, i32 0, i32 13, !dbg !1947
  store i8 0, i8* %linenrs_tot97, align 1, !dbg !1948
  %91 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1949
  %conv98 = sext i16 %91 to i32, !dbg !1949
  %conv99 = sitofp i32 %conv98 to float, !dbg !1949
  %mul100 = fmul float 5.000000e-01, %conv99, !dbg !1949
  %conv101 = fptosi float %mul100 to i32, !dbg !1949
  store i32 %conv101, i32* %x, align 4, !dbg !1950
  br label %if.end102

if.end102:                                        ; preds = %if.else96, %if.then67
  %92 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1951
  %winy103 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %92, i32 0, i32 6, !dbg !1952
  %93 = load i16, i16* %winy103, align 2, !dbg !1952
  %conv104 = sext i16 %93 to i32, !dbg !1951
  %94 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1953
  %lheight_dpi105 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %94, i32 0, i32 29, !dbg !1954
  %95 = load i16, i16* %lheight_dpi105, align 2, !dbg !1954
  %conv106 = sext i16 %95 to i32, !dbg !1953
  %sub107 = sub nsw i32 %conv104, %conv106, !dbg !1955
  store i32 %sub107, i32* %y, align 4, !dbg !1956
  %96 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1957
  %winx108 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %96, i32 0, i32 5, !dbg !1958
  %97 = load i16, i16* %winx108, align 8, !dbg !1958
  %conv109 = sext i16 %97 to i32, !dbg !1957
  %98 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !1959
  %conv110 = sext i16 %98 to i32, !dbg !1959
  %sub111 = sub nsw i32 %conv109, %conv110, !dbg !1960
  store i32 %sub111, i32* %winx, align 4, !dbg !1961
  %99 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1962
  %100 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !1963
  call void @draw_cursor(%struct.SpaceText* %99, %struct.ARegion* %100), !dbg !1964
  call void @UI_ThemeColor(i32 3), !dbg !1965
  store i32 0, i32* %i, align 4, !dbg !1966
  br label %for.cond112, !dbg !1968

for.cond112:                                      ; preds = %for.inc191, %if.end102
  %101 = load i32, i32* %y, align 4, !dbg !1969
  %cmp113 = icmp sgt i32 %101, 0, !dbg !1971
  br i1 %cmp113, label %land.lhs.true115, label %land.end121, !dbg !1972

land.lhs.true115:                                 ; preds = %for.cond112
  %102 = load i32, i32* %i, align 4, !dbg !1973
  %103 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1974
  %viewlines116 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %103, i32 0, i32 8, !dbg !1975
  %104 = load i32, i32* %viewlines116, align 4, !dbg !1975
  %cmp117 = icmp slt i32 %102, %104, !dbg !1976
  br i1 %cmp117, label %land.rhs119, label %land.end121, !dbg !1977

land.rhs119:                                      ; preds = %land.lhs.true115
  %105 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1978
  %tobool120 = icmp ne %struct.TextLine* %105, null, !dbg !1977
  br label %land.end121

land.end121:                                      ; preds = %land.rhs119, %land.lhs.true115, %for.cond112
  %106 = phi i1 [ false, %land.lhs.true115 ], [ false, %for.cond112 ], [ %tobool120, %land.rhs119 ], !dbg !1979
  br i1 %106, label %for.body122, label %for.end194, !dbg !1980

for.body122:                                      ; preds = %land.end121
  %107 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1981
  %showsyntax123 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %107, i32 0, i32 17, !dbg !1984
  %108 = load i16, i16* %showsyntax123, align 4, !dbg !1984
  %conv124 = sext i16 %108 to i32, !dbg !1981
  %tobool125 = icmp ne i32 %conv124, 0, !dbg !1981
  br i1 %tobool125, label %land.lhs.true126, label %if.end131, !dbg !1985

land.lhs.true126:                                 ; preds = %for.body122
  %109 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1986
  %format127 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %109, i32 0, i32 3, !dbg !1987
  %110 = load i8*, i8** %format127, align 8, !dbg !1987
  %tobool128 = icmp ne i8* %110, null, !dbg !1986
  br i1 %tobool128, label %if.end131, label %if.then129, !dbg !1988

if.then129:                                       ; preds = %land.lhs.true126
  %111 = load %struct.TextFormatType*, %struct.TextFormatType** %tft, align 8, !dbg !1989
  %format_line130 = getelementptr inbounds %struct.TextFormatType, %struct.TextFormatType* %111, i32 0, i32 3, !dbg !1990
  %112 = load void (%struct.SpaceText*, %struct.TextLine*, i8)*, void (%struct.SpaceText*, %struct.TextLine*, i8)** %format_line130, align 8, !dbg !1990
  %113 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1991
  %114 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1992
  call void %112(%struct.SpaceText* %113, %struct.TextLine* %114, i8 zeroext 0), !dbg !1989
  br label %if.end131, !dbg !1989

if.end131:                                        ; preds = %if.then129, %land.lhs.true126, %for.body122
  %115 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !1993
  %showlinenrs132 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %115, i32 0, i32 15, !dbg !1995
  %116 = load i32, i32* %showlinenrs132, align 4, !dbg !1995
  %tobool133 = icmp ne i32 %116, 0, !dbg !1993
  br i1 %tobool133, label %land.lhs.true134, label %if.end155, !dbg !1996

land.lhs.true134:                                 ; preds = %if.end131
  %117 = load i32, i32* %wrap_skip, align 4, !dbg !1997
  %tobool135 = icmp ne i32 %117, 0, !dbg !1997
  br i1 %tobool135, label %if.end155, label %if.then136, !dbg !1998

if.then136:                                       ; preds = %land.lhs.true134
  %118 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !1999
  %119 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2002
  %curl137 = getelementptr inbounds %struct.Text, %struct.Text* %119, i32 0, i32 5, !dbg !2003
  %120 = load %struct.TextLine*, %struct.TextLine** %curl137, align 8, !dbg !2003
  %cmp138 = icmp eq %struct.TextLine* %118, %120, !dbg !2004
  br i1 %cmp138, label %if.then140, label %if.else141, !dbg !2005

if.then140:                                       ; preds = %if.then136
  call void @UI_ThemeColor(i32 23), !dbg !2006
  br label %if.end142, !dbg !2006

if.else141:                                       ; preds = %if.then136
  call void @UI_ThemeColor(i32 3), !dbg !2007
  br label %if.end142

if.end142:                                        ; preds = %if.else141, %if.then140
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %linenr, i64 0, i64 0, !dbg !2008
  %121 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2009
  %linenrs_tot143 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %121, i32 0, i32 13, !dbg !2010
  %122 = load i8, i8* %linenrs_tot143, align 1, !dbg !2010
  %conv144 = zext i8 %122 to i32, !dbg !2009
  %123 = load i32, i32* %i, align 4, !dbg !2011
  %124 = load i32, i32* %linecount, align 4, !dbg !2012
  %add145 = add nsw i32 %123, %124, !dbg !2013
  %add146 = add nsw i32 %add145, 1, !dbg !2014
  %call147 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %conv144, i32 %add146), !dbg !2015
  %125 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2016
  %126 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2017
  %conv148 = sext i16 %126 to i32, !dbg !2017
  %conv149 = sitofp i32 %conv148 to float, !dbg !2017
  %mul150 = fmul float 5.000000e-01, %conv149, !dbg !2017
  %conv151 = fptosi float %mul150 to i32, !dbg !2017
  %sub152 = sub nsw i32 %conv151, 7, !dbg !2018
  %127 = load i32, i32* %y, align 4, !dbg !2019
  %arraydecay153 = getelementptr inbounds [12 x i8], [12 x i8]* %linenr, i64 0, i64 0, !dbg !2020
  %call154 = call i32 @text_font_draw(%struct.SpaceText* %125, i32 %sub152, i32 %127, i8* %arraydecay153), !dbg !2021
  call void @UI_ThemeColor(i32 3), !dbg !2022
  br label %if.end155, !dbg !2023

if.end155:                                        ; preds = %if.end142, %land.lhs.true134, %if.end131
  %128 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2024
  %wordwrap156 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %128, i32 0, i32 24, !dbg !2026
  %129 = load i32, i32* %wordwrap156, align 8, !dbg !2026
  %tobool157 = icmp ne i32 %129, 0, !dbg !2024
  br i1 %tobool157, label %if.then158, label %if.else173, !dbg !2027

if.then158:                                       ; preds = %if.end155
  call void @llvm.dbg.declare(metadata i32* %lines159, metadata !2028, metadata !DIExpression()), !dbg !2030
  %130 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2031
  %131 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !2032
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %131, i32 0, i32 2, !dbg !2033
  %132 = load i8*, i8** %line, align 8, !dbg !2033
  %133 = load i32, i32* %x, align 4, !dbg !2034
  %134 = load i32, i32* %y, align 4, !dbg !2035
  %135 = load i32, i32* %winx, align 4, !dbg !2036
  %136 = load i32, i32* %x, align 4, !dbg !2037
  %sub160 = sub nsw i32 %135, %136, !dbg !2038
  %137 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !2039
  %format161 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %137, i32 0, i32 3, !dbg !2040
  %138 = load i8*, i8** %format161, align 8, !dbg !2040
  %139 = load i32, i32* %wrap_skip, align 4, !dbg !2041
  %call162 = call i32 @text_draw_wrapped(%struct.SpaceText* %130, i8* %132, i32 %133, i32 %134, i32 %sub160, i8* %138, i32 %139), !dbg !2042
  store i32 %call162, i32* %lines159, align 4, !dbg !2030
  %140 = load i32, i32* %lines159, align 4, !dbg !2043
  %141 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2044
  %lheight_dpi163 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %141, i32 0, i32 29, !dbg !2045
  %142 = load i16, i16* %lheight_dpi163, align 2, !dbg !2045
  %conv164 = sext i16 %142 to i32, !dbg !2044
  %143 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2046
  %lheight_dpi165 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %143, i32 0, i32 29, !dbg !2046
  %144 = load i16, i16* %lheight_dpi165, align 2, !dbg !2046
  %conv166 = sext i16 %144 to i32, !dbg !2046
  %conv167 = sitofp i32 %conv166 to float, !dbg !2046
  %mul168 = fmul float 0x3FD3333340000000, %conv167, !dbg !2046
  %conv169 = fptosi float %mul168 to i32, !dbg !2046
  %add170 = add nsw i32 %conv164, %conv169, !dbg !2047
  %mul171 = mul nsw i32 %140, %add170, !dbg !2048
  %145 = load i32, i32* %y, align 4, !dbg !2049
  %sub172 = sub nsw i32 %145, %mul171, !dbg !2049
  store i32 %sub172, i32* %y, align 4, !dbg !2049
  br label %if.end190, !dbg !2050

if.else173:                                       ; preds = %if.end155
  %146 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2051
  %147 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !2053
  %line174 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %147, i32 0, i32 2, !dbg !2054
  %148 = load i8*, i8** %line174, align 8, !dbg !2054
  %149 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2055
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %149, i32 0, i32 14, !dbg !2056
  %150 = load i32, i32* %left, align 8, !dbg !2056
  %151 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2057
  %winx175 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %151, i32 0, i32 5, !dbg !2058
  %152 = load i16, i16* %winx175, align 8, !dbg !2058
  %conv176 = sext i16 %152 to i32, !dbg !2057
  %153 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2059
  %cwidth177 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %153, i32 0, i32 12, !dbg !2060
  %154 = load i8, i8* %cwidth177, align 2, !dbg !2060
  %conv178 = zext i8 %154 to i32, !dbg !2059
  %div179 = sdiv i32 %conv176, %conv178, !dbg !2061
  %155 = load i32, i32* %x, align 4, !dbg !2062
  %156 = load i32, i32* %y, align 4, !dbg !2063
  %157 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !2064
  %format180 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %157, i32 0, i32 3, !dbg !2065
  %158 = load i8*, i8** %format180, align 8, !dbg !2065
  call void @text_draw(%struct.SpaceText* %146, i8* %148, i32 %150, i32 %div179, i32 %155, i32 %156, i8* %158), !dbg !2066
  %159 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2067
  %lheight_dpi181 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %159, i32 0, i32 29, !dbg !2068
  %160 = load i16, i16* %lheight_dpi181, align 2, !dbg !2068
  %conv182 = sext i16 %160 to i32, !dbg !2067
  %161 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2069
  %lheight_dpi183 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %161, i32 0, i32 29, !dbg !2069
  %162 = load i16, i16* %lheight_dpi183, align 2, !dbg !2069
  %conv184 = sext i16 %162 to i32, !dbg !2069
  %conv185 = sitofp i32 %conv184 to float, !dbg !2069
  %mul186 = fmul float 0x3FD3333340000000, %conv185, !dbg !2069
  %conv187 = fptosi float %mul186 to i32, !dbg !2069
  %add188 = add nsw i32 %conv182, %conv187, !dbg !2070
  %163 = load i32, i32* %y, align 4, !dbg !2071
  %sub189 = sub nsw i32 %163, %add188, !dbg !2071
  store i32 %sub189, i32* %y, align 4, !dbg !2071
  br label %if.end190

if.end190:                                        ; preds = %if.else173, %if.then158
  store i32 0, i32* %wrap_skip, align 4, !dbg !2072
  br label %for.inc191, !dbg !2073

for.inc191:                                       ; preds = %if.end190
  %164 = load i32, i32* %i, align 4, !dbg !2074
  %inc192 = add nsw i32 %164, 1, !dbg !2074
  store i32 %inc192, i32* %i, align 4, !dbg !2074
  %165 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !2075
  %next193 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %165, i32 0, i32 0, !dbg !2076
  %166 = load %struct.TextLine*, %struct.TextLine** %next193, align 8, !dbg !2076
  store %struct.TextLine* %166, %struct.TextLine** %tmp, align 8, !dbg !2077
  br label %for.cond112, !dbg !2078, !llvm.loop !2079

for.end194:                                       ; preds = %land.end121
  %167 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2081
  %flags = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %167, i32 0, i32 9, !dbg !2083
  %168 = load i16, i16* %flags, align 8, !dbg !2083
  %conv195 = sext i16 %168 to i32, !dbg !2081
  %and = and i32 %conv195, 128, !dbg !2084
  %tobool196 = icmp ne i32 %and, 0, !dbg !2084
  br i1 %tobool196, label %if.then197, label %if.end212, !dbg !2085

if.then197:                                       ; preds = %for.end194
  call void @UI_ThemeColor(i32 23), !dbg !2086
  %169 = load i32, i32* %x, align 4, !dbg !2088
  %170 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2089
  %cwidth198 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %170, i32 0, i32 12, !dbg !2090
  %171 = load i8, i8* %cwidth198, align 2, !dbg !2090
  %conv199 = zext i8 %171 to i32, !dbg !2089
  %172 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2091
  %margin_column = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %172, i32 0, i32 28, !dbg !2092
  %173 = load i16, i16* %margin_column, align 8, !dbg !2092
  %conv200 = sext i16 %173 to i32, !dbg !2091
  %174 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2093
  %left201 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %174, i32 0, i32 14, !dbg !2094
  %175 = load i32, i32* %left201, align 8, !dbg !2094
  %sub202 = sub nsw i32 %conv200, %175, !dbg !2095
  %mul203 = mul nsw i32 %conv199, %sub202, !dbg !2096
  %add204 = add nsw i32 %169, %mul203, !dbg !2097
  store i32 %add204, i32* %margin_column_x, align 4, !dbg !2098
  %176 = load i32, i32* %margin_column_x, align 4, !dbg !2099
  %177 = load i32, i32* %x, align 4, !dbg !2101
  %cmp205 = icmp sge i32 %176, %177, !dbg !2102
  br i1 %cmp205, label %if.then207, label %if.end211, !dbg !2103

if.then207:                                       ; preds = %if.then197
  call void @glBegin(i32 1), !dbg !2104
  %178 = load i32, i32* %margin_column_x, align 4, !dbg !2106
  call void @glVertex2i(i32 %178, i32 0), !dbg !2107
  %179 = load i32, i32* %margin_column_x, align 4, !dbg !2108
  %180 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2109
  %winy208 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %180, i32 0, i32 6, !dbg !2110
  %181 = load i16, i16* %winy208, align 2, !dbg !2110
  %conv209 = sext i16 %181 to i32, !dbg !2109
  %sub210 = sub nsw i32 %conv209, 2, !dbg !2111
  call void @glVertex2i(i32 %179, i32 %sub210), !dbg !2112
  call void @glEnd(), !dbg !2113
  br label %if.end211, !dbg !2114

if.end211:                                        ; preds = %if.then207, %if.then197
  br label %if.end212, !dbg !2115

if.end212:                                        ; preds = %if.end211, %for.end194
  %182 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2116
  %183 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2117
  call void @draw_brackets(%struct.SpaceText* %182, %struct.ARegion* %183), !dbg !2118
  call void @glTranslatef(float 3.750000e-01, float 3.750000e-01, float 0.000000e+00), !dbg !2119
  %184 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2120
  call void @draw_textscroll(%struct.SpaceText* %184, %struct.rcti* %scroll, %struct.rcti* %back), !dbg !2121
  %185 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2122
  %186 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2123
  call void @draw_documentation(%struct.SpaceText* %185, %struct.ARegion* %186), !dbg !2124
  %187 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2125
  %188 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2126
  call void @draw_suggestion_list(%struct.SpaceText* %187, %struct.ARegion* %188), !dbg !2127
  %189 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2128
  call void @text_font_end(%struct.SpaceText* %189), !dbg !2129
  br label %return, !dbg !2130

return:                                           ; preds = %if.end212, %if.then
  ret void, !dbg !2130
}

declare dso_local void @txt_clean_text(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_text_rcts(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.rcti* %scroll, %struct.rcti* %back) #0 !dbg !2131 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %scroll.addr = alloca %struct.rcti*, align 8
  %back.addr = alloca %struct.rcti*, align 8
  %lhlstart = alloca i32, align 4
  %lhlend = alloca i32, align 4
  %ltexth = alloca i32, align 4
  %sell_off = alloca i32, align 4
  %curl_off = alloca i32, align 4
  %barheight = alloca i16, align 2
  %barstart = alloca i16, align 2
  %hlstart = alloca i16, align 2
  %hlend = alloca i16, align 2
  %blank_lines = alloca i16, align 2
  %pix_available = alloca i16, align 2
  %pix_top_margin = alloca i16, align 2
  %pix_bottom_margin = alloca i16, align 2
  %pix_bardiff = alloca i16, align 2
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !2135, metadata !DIExpression()), !dbg !2136
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !2137, metadata !DIExpression()), !dbg !2138
  store %struct.rcti* %scroll, %struct.rcti** %scroll.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %scroll.addr, metadata !2139, metadata !DIExpression()), !dbg !2140
  store %struct.rcti* %back, %struct.rcti** %back.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %back.addr, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata i32* %lhlstart, metadata !2143, metadata !DIExpression()), !dbg !2144
  call void @llvm.dbg.declare(metadata i32* %lhlend, metadata !2145, metadata !DIExpression()), !dbg !2146
  call void @llvm.dbg.declare(metadata i32* %ltexth, metadata !2147, metadata !DIExpression()), !dbg !2148
  call void @llvm.dbg.declare(metadata i32* %sell_off, metadata !2149, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.declare(metadata i32* %curl_off, metadata !2151, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.declare(metadata i16* %barheight, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata i16* %barstart, metadata !2155, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata i16* %hlstart, metadata !2157, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.declare(metadata i16* %hlend, metadata !2159, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.declare(metadata i16* %blank_lines, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata i16* %pix_available, metadata !2163, metadata !DIExpression()), !dbg !2164
  call void @llvm.dbg.declare(metadata i16* %pix_top_margin, metadata !2165, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.declare(metadata i16* %pix_bottom_margin, metadata !2167, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.declare(metadata i16* %pix_bardiff, metadata !2169, metadata !DIExpression()), !dbg !2170
  store i16 8, i16* %pix_top_margin, align 2, !dbg !2171
  store i16 4, i16* %pix_bottom_margin, align 2, !dbg !2172
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2173
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 6, !dbg !2174
  %1 = load i16, i16* %winy, align 2, !dbg !2174
  %conv = sext i16 %1 to i32, !dbg !2173
  %2 = load i16, i16* %pix_top_margin, align 2, !dbg !2175
  %conv1 = sext i16 %2 to i32, !dbg !2175
  %sub = sub nsw i32 %conv, %conv1, !dbg !2176
  %3 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2177
  %conv2 = sext i16 %3 to i32, !dbg !2177
  %sub3 = sub nsw i32 %sub, %conv2, !dbg !2178
  %conv4 = trunc i32 %sub3 to i16, !dbg !2173
  store i16 %conv4, i16* %pix_available, align 2, !dbg !2179
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2180
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2181
  %call = call i32 @text_get_total_lines(%struct.SpaceText* %4, %struct.ARegion* %5), !dbg !2182
  store i32 %call, i32* %ltexth, align 4, !dbg !2183
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2184
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 8, !dbg !2185
  %7 = load i32, i32* %viewlines, align 4, !dbg !2185
  %div = sdiv i32 %7, 2, !dbg !2186
  %conv5 = trunc i32 %div to i16, !dbg !2184
  store i16 %conv5, i16* %blank_lines, align 2, !dbg !2187
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2188
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 5, !dbg !2189
  %9 = load i16, i16* %winx, align 8, !dbg !2189
  %conv6 = sext i16 %9 to i32, !dbg !2188
  %conv7 = sitofp i32 %conv6 to float, !dbg !2188
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2190
  %conv8 = sext i16 %10 to i32, !dbg !2190
  %conv9 = sitofp i32 %conv8 to float, !dbg !2190
  %mul = fmul float 0x3FEB333340000000, %conv9, !dbg !2190
  %add = fadd float %mul, 1.000000e+00, !dbg !2191
  %sub10 = fsub float %conv7, %add, !dbg !2192
  %conv11 = fptosi float %sub10 to i32, !dbg !2188
  %11 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !2193
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %11, i32 0, i32 0, !dbg !2194
  store i32 %conv11, i32* %xmin, align 4, !dbg !2195
  %12 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2196
  %winx12 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 5, !dbg !2197
  %13 = load i16, i16* %winx12, align 8, !dbg !2197
  %conv13 = sext i16 %13 to i32, !dbg !2196
  %14 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !2198
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 1, !dbg !2199
  store i32 %conv13, i32* %xmax, align 4, !dbg !2200
  %15 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !2201
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %15, i32 0, i32 2, !dbg !2202
  store i32 0, i32* %ymin, align 4, !dbg !2203
  %16 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2204
  %winy14 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 6, !dbg !2205
  %17 = load i16, i16* %winy14, align 2, !dbg !2205
  %conv15 = sext i16 %17 to i32, !dbg !2204
  %18 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !2206
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 3, !dbg !2207
  store i32 %conv15, i32* %ymax, align 4, !dbg !2208
  %19 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2209
  %winx16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 5, !dbg !2210
  %20 = load i16, i16* %winx16, align 8, !dbg !2210
  %conv17 = sext i16 %20 to i32, !dbg !2209
  %conv18 = sitofp i32 %conv17 to float, !dbg !2209
  %21 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2211
  %conv19 = sext i16 %21 to i32, !dbg !2211
  %conv20 = sitofp i32 %conv19 to float, !dbg !2211
  %mul21 = fmul float 0x3FEB333340000000, %conv20, !dbg !2211
  %sub22 = fsub float %conv18, %mul21, !dbg !2212
  %conv23 = fptosi float %sub22 to i32, !dbg !2209
  %22 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2213
  %xmin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 0, !dbg !2214
  store i32 %conv23, i32* %xmin24, align 4, !dbg !2215
  %23 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2216
  %winx25 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 5, !dbg !2217
  %24 = load i16, i16* %winx25, align 8, !dbg !2217
  %conv26 = sext i16 %24 to i32, !dbg !2216
  %sub27 = sub nsw i32 %conv26, 5, !dbg !2218
  %25 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2219
  %xmax28 = getelementptr inbounds %struct.rcti, %struct.rcti* %25, i32 0, i32 1, !dbg !2220
  store i32 %sub27, i32* %xmax28, align 4, !dbg !2221
  %26 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2222
  %ymin29 = getelementptr inbounds %struct.rcti, %struct.rcti* %26, i32 0, i32 2, !dbg !2223
  store i32 4, i32* %ymin29, align 4, !dbg !2224
  %27 = load i16, i16* %pix_available, align 2, !dbg !2225
  %conv30 = sext i16 %27 to i32, !dbg !2225
  %add31 = add nsw i32 4, %conv30, !dbg !2226
  %28 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2227
  %ymax32 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 3, !dbg !2228
  store i32 %add31, i32* %ymax32, align 4, !dbg !2229
  %29 = load i32, i32* %ltexth, align 4, !dbg !2230
  %30 = load i16, i16* %blank_lines, align 2, !dbg !2232
  %conv33 = sext i16 %30 to i32, !dbg !2232
  %add34 = add nsw i32 %29, %conv33, !dbg !2233
  %31 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2234
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %31, i32 0, i32 7, !dbg !2235
  %32 = load i32, i32* %top, align 8, !dbg !2235
  %33 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2236
  %viewlines35 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %33, i32 0, i32 8, !dbg !2237
  %34 = load i32, i32* %viewlines35, align 4, !dbg !2237
  %add36 = add nsw i32 %32, %34, !dbg !2238
  %cmp = icmp slt i32 %add34, %add36, !dbg !2239
  br i1 %cmp, label %if.then, label %if.end, !dbg !2240

if.then:                                          ; preds = %entry
  %35 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2241
  %top38 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %35, i32 0, i32 7, !dbg !2243
  %36 = load i32, i32* %top38, align 8, !dbg !2243
  %37 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2244
  %viewlines39 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %37, i32 0, i32 8, !dbg !2245
  %38 = load i32, i32* %viewlines39, align 4, !dbg !2245
  %add40 = add nsw i32 %36, %38, !dbg !2246
  %39 = load i32, i32* %ltexth, align 4, !dbg !2247
  %sub41 = sub nsw i32 %add40, %39, !dbg !2248
  %conv42 = trunc i32 %sub41 to i16, !dbg !2241
  store i16 %conv42, i16* %blank_lines, align 2, !dbg !2249
  br label %if.end, !dbg !2250

if.end:                                           ; preds = %if.then, %entry
  %40 = load i16, i16* %blank_lines, align 2, !dbg !2251
  %conv43 = sext i16 %40 to i32, !dbg !2251
  %41 = load i32, i32* %ltexth, align 4, !dbg !2252
  %add44 = add nsw i32 %41, %conv43, !dbg !2252
  store i32 %add44, i32* %ltexth, align 4, !dbg !2252
  %42 = load i32, i32* %ltexth, align 4, !dbg !2253
  %cmp45 = icmp sgt i32 %42, 0, !dbg !2254
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !2255

cond.true:                                        ; preds = %if.end
  %43 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2256
  %viewlines47 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %43, i32 0, i32 8, !dbg !2257
  %44 = load i32, i32* %viewlines47, align 4, !dbg !2257
  %45 = load i16, i16* %pix_available, align 2, !dbg !2258
  %conv48 = sext i16 %45 to i32, !dbg !2258
  %mul49 = mul nsw i32 %44, %conv48, !dbg !2259
  %46 = load i32, i32* %ltexth, align 4, !dbg !2260
  %div50 = sdiv i32 %mul49, %46, !dbg !2261
  br label %cond.end, !dbg !2255

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !2255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div50, %cond.true ], [ 0, %cond.false ], !dbg !2255
  %conv51 = trunc i32 %cond to i16, !dbg !2255
  store i16 %conv51, i16* %barheight, align 2, !dbg !2262
  store i16 0, i16* %pix_bardiff, align 2, !dbg !2263
  %47 = load i16, i16* %barheight, align 2, !dbg !2264
  %conv52 = sext i16 %47 to i32, !dbg !2264
  %cmp53 = icmp slt i32 %conv52, 20, !dbg !2266
  br i1 %cmp53, label %if.then55, label %if.end59, !dbg !2267

if.then55:                                        ; preds = %cond.end
  %48 = load i16, i16* %barheight, align 2, !dbg !2268
  %conv56 = sext i16 %48 to i32, !dbg !2268
  %sub57 = sub nsw i32 20, %conv56, !dbg !2270
  %conv58 = trunc i32 %sub57 to i16, !dbg !2271
  store i16 %conv58, i16* %pix_bardiff, align 2, !dbg !2272
  store i16 20, i16* %barheight, align 2, !dbg !2273
  br label %if.end59, !dbg !2274

if.end59:                                         ; preds = %if.then55, %cond.end
  %49 = load i32, i32* %ltexth, align 4, !dbg !2275
  %cmp60 = icmp sgt i32 %49, 0, !dbg !2276
  br i1 %cmp60, label %cond.true62, label %cond.false69, !dbg !2277

cond.true62:                                      ; preds = %if.end59
  %50 = load i16, i16* %pix_available, align 2, !dbg !2278
  %conv63 = sext i16 %50 to i32, !dbg !2278
  %51 = load i16, i16* %pix_bardiff, align 2, !dbg !2279
  %conv64 = sext i16 %51 to i32, !dbg !2279
  %sub65 = sub nsw i32 %conv63, %conv64, !dbg !2280
  %52 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2281
  %top66 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %52, i32 0, i32 7, !dbg !2282
  %53 = load i32, i32* %top66, align 8, !dbg !2282
  %mul67 = mul nsw i32 %sub65, %53, !dbg !2283
  %54 = load i32, i32* %ltexth, align 4, !dbg !2284
  %div68 = sdiv i32 %mul67, %54, !dbg !2285
  br label %cond.end70, !dbg !2277

cond.false69:                                     ; preds = %if.end59
  br label %cond.end70, !dbg !2277

cond.end70:                                       ; preds = %cond.false69, %cond.true62
  %cond71 = phi i32 [ %div68, %cond.true62 ], [ 0, %cond.false69 ], !dbg !2277
  %conv72 = trunc i32 %cond71 to i16, !dbg !2277
  store i16 %conv72, i16* %barstart, align 2, !dbg !2286
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2287
  %txtbar = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %55, i32 0, i32 23, !dbg !2288
  %56 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2289
  %57 = bitcast %struct.rcti* %txtbar to i8*, !dbg !2290
  %58 = bitcast %struct.rcti* %56 to i8*, !dbg !2290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false), !dbg !2290
  %59 = load i16, i16* %barstart, align 2, !dbg !2291
  %conv73 = sext i16 %59 to i32, !dbg !2291
  %60 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2292
  %txtbar74 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %60, i32 0, i32 23, !dbg !2293
  %ymax75 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar74, i32 0, i32 3, !dbg !2294
  %61 = load i32, i32* %ymax75, align 4, !dbg !2295
  %sub76 = sub nsw i32 %61, %conv73, !dbg !2295
  store i32 %sub76, i32* %ymax75, align 4, !dbg !2295
  %62 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2296
  %txtbar77 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %62, i32 0, i32 23, !dbg !2297
  %ymax78 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar77, i32 0, i32 3, !dbg !2298
  %63 = load i32, i32* %ymax78, align 4, !dbg !2298
  %64 = load i16, i16* %barheight, align 2, !dbg !2299
  %conv79 = sext i16 %64 to i32, !dbg !2299
  %sub80 = sub nsw i32 %63, %conv79, !dbg !2300
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2301
  %txtbar81 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %65, i32 0, i32 23, !dbg !2302
  %ymin82 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar81, i32 0, i32 2, !dbg !2303
  store i32 %sub80, i32* %ymin82, align 8, !dbg !2304
  %66 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2305
  %txtbar83 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %66, i32 0, i32 23, !dbg !2305
  %ymin84 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar83, i32 0, i32 2, !dbg !2305
  %67 = load i32, i32* %ymin84, align 8, !dbg !2305
  %68 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2305
  %conv85 = sext i16 %68 to i32, !dbg !2305
  %cmp86 = icmp slt i32 %67, %conv85, !dbg !2305
  br i1 %cmp86, label %if.then88, label %if.else, !dbg !2308

if.then88:                                        ; preds = %cond.end70
  %69 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2305
  %conv89 = sext i16 %69 to i32, !dbg !2305
  %70 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2305
  %txtbar90 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %70, i32 0, i32 23, !dbg !2305
  %ymin91 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar90, i32 0, i32 2, !dbg !2305
  store i32 %conv89, i32* %ymin91, align 8, !dbg !2305
  br label %if.end108, !dbg !2305

if.else:                                          ; preds = %cond.end70
  %71 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2309
  %txtbar92 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %71, i32 0, i32 23, !dbg !2309
  %ymin93 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar92, i32 0, i32 2, !dbg !2309
  %72 = load i32, i32* %ymin93, align 8, !dbg !2309
  %73 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2309
  %winy94 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %73, i32 0, i32 6, !dbg !2309
  %74 = load i16, i16* %winy94, align 2, !dbg !2309
  %conv95 = sext i16 %74 to i32, !dbg !2309
  %75 = load i16, i16* %pix_top_margin, align 2, !dbg !2309
  %conv96 = sext i16 %75 to i32, !dbg !2309
  %sub97 = sub nsw i32 %conv95, %conv96, !dbg !2309
  %cmp98 = icmp sgt i32 %72, %sub97, !dbg !2309
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !2305

if.then100:                                       ; preds = %if.else
  %76 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2309
  %winy101 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %76, i32 0, i32 6, !dbg !2309
  %77 = load i16, i16* %winy101, align 2, !dbg !2309
  %conv102 = sext i16 %77 to i32, !dbg !2309
  %78 = load i16, i16* %pix_top_margin, align 2, !dbg !2309
  %conv103 = sext i16 %78 to i32, !dbg !2309
  %sub104 = sub nsw i32 %conv102, %conv103, !dbg !2309
  %79 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2309
  %txtbar105 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %79, i32 0, i32 23, !dbg !2309
  %ymin106 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar105, i32 0, i32 2, !dbg !2309
  store i32 %sub104, i32* %ymin106, align 8, !dbg !2309
  br label %if.end107, !dbg !2309

if.end107:                                        ; preds = %if.then100, %if.else
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then88
  %80 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2311
  %txtbar109 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %80, i32 0, i32 23, !dbg !2311
  %ymax110 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar109, i32 0, i32 3, !dbg !2311
  %81 = load i32, i32* %ymax110, align 4, !dbg !2311
  %82 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2311
  %conv111 = sext i16 %82 to i32, !dbg !2311
  %cmp112 = icmp slt i32 %81, %conv111, !dbg !2311
  br i1 %cmp112, label %if.then114, label %if.else118, !dbg !2314

if.then114:                                       ; preds = %if.end108
  %83 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2311
  %conv115 = sext i16 %83 to i32, !dbg !2311
  %84 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2311
  %txtbar116 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %84, i32 0, i32 23, !dbg !2311
  %ymax117 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar116, i32 0, i32 3, !dbg !2311
  store i32 %conv115, i32* %ymax117, align 4, !dbg !2311
  br label %if.end135, !dbg !2311

if.else118:                                       ; preds = %if.end108
  %85 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2315
  %txtbar119 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %85, i32 0, i32 23, !dbg !2315
  %ymax120 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar119, i32 0, i32 3, !dbg !2315
  %86 = load i32, i32* %ymax120, align 4, !dbg !2315
  %87 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2315
  %winy121 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %87, i32 0, i32 6, !dbg !2315
  %88 = load i16, i16* %winy121, align 2, !dbg !2315
  %conv122 = sext i16 %88 to i32, !dbg !2315
  %89 = load i16, i16* %pix_top_margin, align 2, !dbg !2315
  %conv123 = sext i16 %89 to i32, !dbg !2315
  %sub124 = sub nsw i32 %conv122, %conv123, !dbg !2315
  %cmp125 = icmp sgt i32 %86, %sub124, !dbg !2315
  br i1 %cmp125, label %if.then127, label %if.end134, !dbg !2311

if.then127:                                       ; preds = %if.else118
  %90 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2315
  %winy128 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %90, i32 0, i32 6, !dbg !2315
  %91 = load i16, i16* %winy128, align 2, !dbg !2315
  %conv129 = sext i16 %91 to i32, !dbg !2315
  %92 = load i16, i16* %pix_top_margin, align 2, !dbg !2315
  %conv130 = sext i16 %92 to i32, !dbg !2315
  %sub131 = sub nsw i32 %conv129, %conv130, !dbg !2315
  %93 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2315
  %txtbar132 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %93, i32 0, i32 23, !dbg !2315
  %ymax133 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar132, i32 0, i32 3, !dbg !2315
  store i32 %sub131, i32* %ymax133, align 4, !dbg !2315
  br label %if.end134, !dbg !2315

if.end134:                                        ; preds = %if.then127, %if.else118
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then114
  %94 = load i16, i16* %pix_available, align 2, !dbg !2317
  %conv136 = sext i16 %94 to i32, !dbg !2317
  %cmp137 = icmp sgt i32 %conv136, 0, !dbg !2318
  br i1 %cmp137, label %cond.true139, label %cond.false144, !dbg !2319

cond.true139:                                     ; preds = %if.end135
  %95 = load i32, i32* %ltexth, align 4, !dbg !2320
  %conv140 = sitofp i32 %95 to float, !dbg !2321
  %96 = load i16, i16* %pix_available, align 2, !dbg !2322
  %conv141 = sext i16 %96 to i32, !dbg !2322
  %conv142 = sitofp i32 %conv141 to float, !dbg !2322
  %div143 = fdiv float %conv140, %conv142, !dbg !2323
  br label %cond.end145, !dbg !2319

cond.false144:                                    ; preds = %if.end135
  br label %cond.end145, !dbg !2319

cond.end145:                                      ; preds = %cond.false144, %cond.true139
  %cond146 = phi float [ %div143, %cond.true139 ], [ 0.000000e+00, %cond.false144 ], !dbg !2319
  %97 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2324
  %pix_per_line = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %97, i32 0, i32 21, !dbg !2325
  store float %cond146, float* %pix_per_line, align 4, !dbg !2326
  %98 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2327
  %pix_per_line147 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %98, i32 0, i32 21, !dbg !2329
  %99 = load float, float* %pix_per_line147, align 4, !dbg !2329
  %cmp148 = fcmp olt float %99, 0x3FB99999A0000000, !dbg !2330
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !2331

if.then150:                                       ; preds = %cond.end145
  %100 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2332
  %pix_per_line151 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %100, i32 0, i32 21, !dbg !2333
  store float 0x3FB99999A0000000, float* %pix_per_line151, align 4, !dbg !2334
  br label %if.end152, !dbg !2332

if.end152:                                        ; preds = %if.then150, %cond.end145
  %101 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2335
  %102 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2336
  %103 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2337
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %103, i32 0, i32 6, !dbg !2338
  %104 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2338
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %104, i32 0, i32 4, !dbg !2339
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !2340
  %105 = load i8*, i8** %first, align 8, !dbg !2340
  %106 = bitcast i8* %105 to %struct.TextLine*, !dbg !2337
  %107 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2341
  %text153 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %107, i32 0, i32 6, !dbg !2342
  %108 = load %struct.Text*, %struct.Text** %text153, align 8, !dbg !2342
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %108, i32 0, i32 5, !dbg !2343
  %109 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !2343
  %call154 = call i32 @text_get_span_wrap(%struct.SpaceText* %101, %struct.ARegion* %102, %struct.TextLine* %106, %struct.TextLine* %109), !dbg !2344
  store i32 %call154, i32* %curl_off, align 4, !dbg !2345
  %110 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2346
  %111 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2347
  %112 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2348
  %text155 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %112, i32 0, i32 6, !dbg !2349
  %113 = load %struct.Text*, %struct.Text** %text155, align 8, !dbg !2349
  %lines156 = getelementptr inbounds %struct.Text, %struct.Text* %113, i32 0, i32 4, !dbg !2350
  %first157 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines156, i32 0, i32 0, !dbg !2351
  %114 = load i8*, i8** %first157, align 8, !dbg !2351
  %115 = bitcast i8* %114 to %struct.TextLine*, !dbg !2348
  %116 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2352
  %text158 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %116, i32 0, i32 6, !dbg !2353
  %117 = load %struct.Text*, %struct.Text** %text158, align 8, !dbg !2353
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %117, i32 0, i32 6, !dbg !2354
  %118 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !2354
  %call159 = call i32 @text_get_span_wrap(%struct.SpaceText* %110, %struct.ARegion* %111, %struct.TextLine* %115, %struct.TextLine* %118), !dbg !2355
  store i32 %call159, i32* %sell_off, align 4, !dbg !2356
  %119 = load i32, i32* %curl_off, align 4, !dbg !2357
  %120 = load i32, i32* %sell_off, align 4, !dbg !2357
  %cmp160 = icmp slt i32 %119, %120, !dbg !2357
  br i1 %cmp160, label %cond.true162, label %cond.false163, !dbg !2357

cond.true162:                                     ; preds = %if.end152
  %121 = load i32, i32* %curl_off, align 4, !dbg !2357
  br label %cond.end164, !dbg !2357

cond.false163:                                    ; preds = %if.end152
  %122 = load i32, i32* %sell_off, align 4, !dbg !2357
  br label %cond.end164, !dbg !2357

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond165 = phi i32 [ %121, %cond.true162 ], [ %122, %cond.false163 ], !dbg !2357
  store i32 %cond165, i32* %lhlstart, align 4, !dbg !2358
  %123 = load i32, i32* %curl_off, align 4, !dbg !2359
  %124 = load i32, i32* %sell_off, align 4, !dbg !2359
  %cmp166 = icmp sgt i32 %123, %124, !dbg !2359
  br i1 %cmp166, label %cond.true168, label %cond.false169, !dbg !2359

cond.true168:                                     ; preds = %cond.end164
  %125 = load i32, i32* %curl_off, align 4, !dbg !2359
  br label %cond.end170, !dbg !2359

cond.false169:                                    ; preds = %cond.end164
  %126 = load i32, i32* %sell_off, align 4, !dbg !2359
  br label %cond.end170, !dbg !2359

cond.end170:                                      ; preds = %cond.false169, %cond.true168
  %cond171 = phi i32 [ %125, %cond.true168 ], [ %126, %cond.false169 ], !dbg !2359
  store i32 %cond171, i32* %lhlend, align 4, !dbg !2360
  %127 = load i32, i32* %ltexth, align 4, !dbg !2361
  %cmp172 = icmp sgt i32 %127, 0, !dbg !2363
  br i1 %cmp172, label %if.then174, label %if.else341, !dbg !2364

if.then174:                                       ; preds = %cond.end170
  %128 = load i32, i32* %lhlstart, align 4, !dbg !2365
  %129 = load i16, i16* %pix_available, align 2, !dbg !2367
  %conv175 = sext i16 %129 to i32, !dbg !2367
  %mul176 = mul nsw i32 %128, %conv175, !dbg !2368
  %130 = load i32, i32* %ltexth, align 4, !dbg !2369
  %div177 = sdiv i32 %mul176, %130, !dbg !2370
  %conv178 = trunc i32 %div177 to i16, !dbg !2371
  store i16 %conv178, i16* %hlstart, align 2, !dbg !2372
  %131 = load i32, i32* %lhlend, align 4, !dbg !2373
  %132 = load i16, i16* %pix_available, align 2, !dbg !2374
  %conv179 = sext i16 %132 to i32, !dbg !2374
  %mul180 = mul nsw i32 %131, %conv179, !dbg !2375
  %133 = load i32, i32* %ltexth, align 4, !dbg !2376
  %div181 = sdiv i32 %mul180, %133, !dbg !2377
  %conv182 = trunc i32 %div181 to i16, !dbg !2378
  store i16 %conv182, i16* %hlend, align 2, !dbg !2379
  %134 = load i16, i16* %pix_bardiff, align 2, !dbg !2380
  %conv183 = sext i16 %134 to i32, !dbg !2380
  %cmp184 = icmp sgt i32 %conv183, 0, !dbg !2382
  br i1 %cmp184, label %if.then186, label %if.end340, !dbg !2383

if.then186:                                       ; preds = %if.then174
  %135 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2384
  %viewlines187 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %135, i32 0, i32 8, !dbg !2387
  %136 = load i32, i32* %viewlines187, align 4, !dbg !2387
  %tobool = icmp ne i32 %136, 0, !dbg !2384
  br i1 %tobool, label %land.lhs.true, label %if.else211, !dbg !2388

land.lhs.true:                                    ; preds = %if.then186
  %137 = load i32, i32* %lhlstart, align 4, !dbg !2389
  %138 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2390
  %top188 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %138, i32 0, i32 7, !dbg !2391
  %139 = load i32, i32* %top188, align 8, !dbg !2391
  %cmp189 = icmp sge i32 %137, %139, !dbg !2392
  br i1 %cmp189, label %land.lhs.true191, label %if.else211, !dbg !2393

land.lhs.true191:                                 ; preds = %land.lhs.true
  %140 = load i32, i32* %lhlstart, align 4, !dbg !2394
  %141 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2395
  %top192 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %141, i32 0, i32 7, !dbg !2396
  %142 = load i32, i32* %top192, align 8, !dbg !2396
  %143 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2397
  %viewlines193 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %143, i32 0, i32 8, !dbg !2398
  %144 = load i32, i32* %viewlines193, align 4, !dbg !2398
  %add194 = add nsw i32 %142, %144, !dbg !2399
  %cmp195 = icmp sle i32 %140, %add194, !dbg !2400
  br i1 %cmp195, label %if.then197, label %if.else211, !dbg !2401

if.then197:                                       ; preds = %land.lhs.true191
  %145 = load i16, i16* %pix_available, align 2, !dbg !2402
  %conv198 = sext i16 %145 to i32, !dbg !2402
  %146 = load i16, i16* %pix_bardiff, align 2, !dbg !2404
  %conv199 = sext i16 %146 to i32, !dbg !2404
  %sub200 = sub nsw i32 %conv198, %conv199, !dbg !2405
  %147 = load i32, i32* %lhlstart, align 4, !dbg !2406
  %mul201 = mul nsw i32 %sub200, %147, !dbg !2407
  %148 = load i32, i32* %ltexth, align 4, !dbg !2408
  %div202 = sdiv i32 %mul201, %148, !dbg !2409
  %149 = load i16, i16* %pix_bardiff, align 2, !dbg !2410
  %conv203 = sext i16 %149 to i32, !dbg !2410
  %150 = load i32, i32* %lhlstart, align 4, !dbg !2411
  %151 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2412
  %top204 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %151, i32 0, i32 7, !dbg !2413
  %152 = load i32, i32* %top204, align 8, !dbg !2413
  %sub205 = sub nsw i32 %150, %152, !dbg !2414
  %mul206 = mul nsw i32 %conv203, %sub205, !dbg !2415
  %153 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2416
  %viewlines207 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %153, i32 0, i32 8, !dbg !2417
  %154 = load i32, i32* %viewlines207, align 4, !dbg !2417
  %div208 = sdiv i32 %mul206, %154, !dbg !2418
  %add209 = add nsw i32 %div202, %div208, !dbg !2419
  %conv210 = trunc i32 %add209 to i16, !dbg !2420
  store i16 %conv210, i16* %hlstart, align 2, !dbg !2421
  br label %if.end250, !dbg !2422

if.else211:                                       ; preds = %land.lhs.true191, %land.lhs.true, %if.then186
  %155 = load i32, i32* %lhlstart, align 4, !dbg !2423
  %156 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2425
  %top212 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %156, i32 0, i32 7, !dbg !2426
  %157 = load i32, i32* %top212, align 8, !dbg !2426
  %158 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2427
  %viewlines213 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %158, i32 0, i32 8, !dbg !2428
  %159 = load i32, i32* %viewlines213, align 4, !dbg !2428
  %add214 = add nsw i32 %157, %159, !dbg !2429
  %cmp215 = icmp sgt i32 %155, %add214, !dbg !2430
  br i1 %cmp215, label %land.lhs.true217, label %if.else234, !dbg !2431

land.lhs.true217:                                 ; preds = %if.else211
  %160 = load i16, i16* %hlstart, align 2, !dbg !2432
  %conv218 = sext i16 %160 to i32, !dbg !2432
  %161 = load i16, i16* %barstart, align 2, !dbg !2433
  %conv219 = sext i16 %161 to i32, !dbg !2433
  %162 = load i16, i16* %barheight, align 2, !dbg !2434
  %conv220 = sext i16 %162 to i32, !dbg !2434
  %add221 = add nsw i32 %conv219, %conv220, !dbg !2435
  %cmp222 = icmp slt i32 %conv218, %add221, !dbg !2436
  br i1 %cmp222, label %land.lhs.true224, label %if.else234, !dbg !2437

land.lhs.true224:                                 ; preds = %land.lhs.true217
  %163 = load i16, i16* %hlstart, align 2, !dbg !2438
  %conv225 = sext i16 %163 to i32, !dbg !2438
  %164 = load i16, i16* %barstart, align 2, !dbg !2439
  %conv226 = sext i16 %164 to i32, !dbg !2439
  %cmp227 = icmp sgt i32 %conv225, %conv226, !dbg !2440
  br i1 %cmp227, label %if.then229, label %if.else234, !dbg !2441

if.then229:                                       ; preds = %land.lhs.true224
  %165 = load i16, i16* %barstart, align 2, !dbg !2442
  %conv230 = sext i16 %165 to i32, !dbg !2442
  %166 = load i16, i16* %barheight, align 2, !dbg !2444
  %conv231 = sext i16 %166 to i32, !dbg !2444
  %add232 = add nsw i32 %conv230, %conv231, !dbg !2445
  %conv233 = trunc i32 %add232 to i16, !dbg !2442
  store i16 %conv233, i16* %hlstart, align 2, !dbg !2446
  br label %if.end249, !dbg !2447

if.else234:                                       ; preds = %land.lhs.true224, %land.lhs.true217, %if.else211
  %167 = load i32, i32* %lhlend, align 4, !dbg !2448
  %168 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2450
  %top235 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %168, i32 0, i32 7, !dbg !2451
  %169 = load i32, i32* %top235, align 8, !dbg !2451
  %cmp236 = icmp sgt i32 %167, %169, !dbg !2452
  br i1 %cmp236, label %land.lhs.true238, label %if.end248, !dbg !2453

land.lhs.true238:                                 ; preds = %if.else234
  %170 = load i32, i32* %lhlstart, align 4, !dbg !2454
  %171 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2455
  %top239 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %171, i32 0, i32 7, !dbg !2456
  %172 = load i32, i32* %top239, align 8, !dbg !2456
  %cmp240 = icmp slt i32 %170, %172, !dbg !2457
  br i1 %cmp240, label %land.lhs.true242, label %if.end248, !dbg !2458

land.lhs.true242:                                 ; preds = %land.lhs.true238
  %173 = load i16, i16* %hlstart, align 2, !dbg !2459
  %conv243 = sext i16 %173 to i32, !dbg !2459
  %174 = load i16, i16* %barstart, align 2, !dbg !2460
  %conv244 = sext i16 %174 to i32, !dbg !2460
  %cmp245 = icmp sgt i32 %conv243, %conv244, !dbg !2461
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !2462

if.then247:                                       ; preds = %land.lhs.true242
  %175 = load i16, i16* %barstart, align 2, !dbg !2463
  store i16 %175, i16* %hlstart, align 2, !dbg !2465
  br label %if.end248, !dbg !2466

if.end248:                                        ; preds = %if.then247, %land.lhs.true242, %land.lhs.true238, %if.else234
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then229
  br label %if.end250

if.end250:                                        ; preds = %if.end249, %if.then197
  %176 = load i16, i16* %hlend, align 2, !dbg !2467
  %conv251 = sext i16 %176 to i32, !dbg !2467
  %177 = load i16, i16* %hlstart, align 2, !dbg !2469
  %conv252 = sext i16 %177 to i32, !dbg !2469
  %cmp253 = icmp sle i32 %conv251, %conv252, !dbg !2470
  br i1 %cmp253, label %if.then255, label %if.end259, !dbg !2471

if.then255:                                       ; preds = %if.end250
  %178 = load i16, i16* %hlstart, align 2, !dbg !2472
  %conv256 = sext i16 %178 to i32, !dbg !2472
  %add257 = add nsw i32 %conv256, 2, !dbg !2474
  %conv258 = trunc i32 %add257 to i16, !dbg !2472
  store i16 %conv258, i16* %hlend, align 2, !dbg !2475
  br label %if.end259, !dbg !2476

if.end259:                                        ; preds = %if.then255, %if.end250
  %179 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2477
  %viewlines260 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %179, i32 0, i32 8, !dbg !2479
  %180 = load i32, i32* %viewlines260, align 4, !dbg !2479
  %tobool261 = icmp ne i32 %180, 0, !dbg !2477
  br i1 %tobool261, label %land.lhs.true262, label %if.else286, !dbg !2480

land.lhs.true262:                                 ; preds = %if.end259
  %181 = load i32, i32* %lhlend, align 4, !dbg !2481
  %182 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2482
  %top263 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %182, i32 0, i32 7, !dbg !2483
  %183 = load i32, i32* %top263, align 8, !dbg !2483
  %cmp264 = icmp sge i32 %181, %183, !dbg !2484
  br i1 %cmp264, label %land.lhs.true266, label %if.else286, !dbg !2485

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %184 = load i32, i32* %lhlend, align 4, !dbg !2486
  %185 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2487
  %top267 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %185, i32 0, i32 7, !dbg !2488
  %186 = load i32, i32* %top267, align 8, !dbg !2488
  %187 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2489
  %viewlines268 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %187, i32 0, i32 8, !dbg !2490
  %188 = load i32, i32* %viewlines268, align 4, !dbg !2490
  %add269 = add nsw i32 %186, %188, !dbg !2491
  %cmp270 = icmp sle i32 %184, %add269, !dbg !2492
  br i1 %cmp270, label %if.then272, label %if.else286, !dbg !2493

if.then272:                                       ; preds = %land.lhs.true266
  %189 = load i16, i16* %pix_available, align 2, !dbg !2494
  %conv273 = sext i16 %189 to i32, !dbg !2494
  %190 = load i16, i16* %pix_bardiff, align 2, !dbg !2496
  %conv274 = sext i16 %190 to i32, !dbg !2496
  %sub275 = sub nsw i32 %conv273, %conv274, !dbg !2497
  %191 = load i32, i32* %lhlend, align 4, !dbg !2498
  %mul276 = mul nsw i32 %sub275, %191, !dbg !2499
  %192 = load i32, i32* %ltexth, align 4, !dbg !2500
  %div277 = sdiv i32 %mul276, %192, !dbg !2501
  %193 = load i16, i16* %pix_bardiff, align 2, !dbg !2502
  %conv278 = sext i16 %193 to i32, !dbg !2502
  %194 = load i32, i32* %lhlend, align 4, !dbg !2503
  %195 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2504
  %top279 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %195, i32 0, i32 7, !dbg !2505
  %196 = load i32, i32* %top279, align 8, !dbg !2505
  %sub280 = sub nsw i32 %194, %196, !dbg !2506
  %mul281 = mul nsw i32 %conv278, %sub280, !dbg !2507
  %197 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2508
  %viewlines282 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %197, i32 0, i32 8, !dbg !2509
  %198 = load i32, i32* %viewlines282, align 4, !dbg !2509
  %div283 = sdiv i32 %mul281, %198, !dbg !2510
  %add284 = add nsw i32 %div277, %div283, !dbg !2511
  %conv285 = trunc i32 %add284 to i16, !dbg !2512
  store i16 %conv285, i16* %hlend, align 2, !dbg !2513
  br label %if.end330, !dbg !2514

if.else286:                                       ; preds = %land.lhs.true266, %land.lhs.true262, %if.end259
  %199 = load i32, i32* %lhlend, align 4, !dbg !2515
  %200 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2517
  %top287 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %200, i32 0, i32 7, !dbg !2518
  %201 = load i32, i32* %top287, align 8, !dbg !2518
  %cmp288 = icmp slt i32 %199, %201, !dbg !2519
  br i1 %cmp288, label %land.lhs.true290, label %if.else304, !dbg !2520

land.lhs.true290:                                 ; preds = %if.else286
  %202 = load i16, i16* %hlend, align 2, !dbg !2521
  %conv291 = sext i16 %202 to i32, !dbg !2521
  %203 = load i16, i16* %barstart, align 2, !dbg !2522
  %conv292 = sext i16 %203 to i32, !dbg !2522
  %sub293 = sub nsw i32 %conv292, 2, !dbg !2523
  %cmp294 = icmp sge i32 %conv291, %sub293, !dbg !2524
  br i1 %cmp294, label %land.lhs.true296, label %if.else304, !dbg !2525

land.lhs.true296:                                 ; preds = %land.lhs.true290
  %204 = load i16, i16* %hlend, align 2, !dbg !2526
  %conv297 = sext i16 %204 to i32, !dbg !2526
  %205 = load i16, i16* %barstart, align 2, !dbg !2527
  %conv298 = sext i16 %205 to i32, !dbg !2527
  %206 = load i16, i16* %barheight, align 2, !dbg !2528
  %conv299 = sext i16 %206 to i32, !dbg !2528
  %add300 = add nsw i32 %conv298, %conv299, !dbg !2529
  %cmp301 = icmp slt i32 %conv297, %add300, !dbg !2530
  br i1 %cmp301, label %if.then303, label %if.else304, !dbg !2531

if.then303:                                       ; preds = %land.lhs.true296
  %207 = load i16, i16* %barstart, align 2, !dbg !2532
  store i16 %207, i16* %hlend, align 2, !dbg !2534
  br label %if.end329, !dbg !2535

if.else304:                                       ; preds = %land.lhs.true296, %land.lhs.true290, %if.else286
  %208 = load i32, i32* %lhlend, align 4, !dbg !2536
  %209 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2538
  %top305 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %209, i32 0, i32 7, !dbg !2539
  %210 = load i32, i32* %top305, align 8, !dbg !2539
  %211 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2540
  %viewlines306 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %211, i32 0, i32 8, !dbg !2541
  %212 = load i32, i32* %viewlines306, align 4, !dbg !2541
  %add307 = add nsw i32 %210, %212, !dbg !2542
  %cmp308 = icmp sgt i32 %208, %add307, !dbg !2543
  br i1 %cmp308, label %land.lhs.true310, label %if.end328, !dbg !2544

land.lhs.true310:                                 ; preds = %if.else304
  %213 = load i32, i32* %lhlstart, align 4, !dbg !2545
  %214 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2546
  %top311 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %214, i32 0, i32 7, !dbg !2547
  %215 = load i32, i32* %top311, align 8, !dbg !2547
  %216 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2548
  %viewlines312 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %216, i32 0, i32 8, !dbg !2549
  %217 = load i32, i32* %viewlines312, align 4, !dbg !2549
  %add313 = add nsw i32 %215, %217, !dbg !2550
  %cmp314 = icmp slt i32 %213, %add313, !dbg !2551
  br i1 %cmp314, label %land.lhs.true316, label %if.end328, !dbg !2552

land.lhs.true316:                                 ; preds = %land.lhs.true310
  %218 = load i16, i16* %hlend, align 2, !dbg !2553
  %conv317 = sext i16 %218 to i32, !dbg !2553
  %219 = load i16, i16* %barstart, align 2, !dbg !2554
  %conv318 = sext i16 %219 to i32, !dbg !2554
  %220 = load i16, i16* %barheight, align 2, !dbg !2555
  %conv319 = sext i16 %220 to i32, !dbg !2555
  %add320 = add nsw i32 %conv318, %conv319, !dbg !2556
  %cmp321 = icmp slt i32 %conv317, %add320, !dbg !2557
  br i1 %cmp321, label %if.then323, label %if.end328, !dbg !2558

if.then323:                                       ; preds = %land.lhs.true316
  %221 = load i16, i16* %barstart, align 2, !dbg !2559
  %conv324 = sext i16 %221 to i32, !dbg !2559
  %222 = load i16, i16* %barheight, align 2, !dbg !2561
  %conv325 = sext i16 %222 to i32, !dbg !2561
  %add326 = add nsw i32 %conv324, %conv325, !dbg !2562
  %conv327 = trunc i32 %add326 to i16, !dbg !2559
  store i16 %conv327, i16* %hlend, align 2, !dbg !2563
  br label %if.end328, !dbg !2564

if.end328:                                        ; preds = %if.then323, %land.lhs.true316, %land.lhs.true310, %if.else304
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then303
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then272
  %223 = load i16, i16* %hlend, align 2, !dbg !2565
  %conv331 = sext i16 %223 to i32, !dbg !2565
  %224 = load i16, i16* %hlstart, align 2, !dbg !2567
  %conv332 = sext i16 %224 to i32, !dbg !2567
  %cmp333 = icmp sle i32 %conv331, %conv332, !dbg !2568
  br i1 %cmp333, label %if.then335, label %if.end339, !dbg !2569

if.then335:                                       ; preds = %if.end330
  %225 = load i16, i16* %hlend, align 2, !dbg !2570
  %conv336 = sext i16 %225 to i32, !dbg !2570
  %sub337 = sub nsw i32 %conv336, 2, !dbg !2572
  %conv338 = trunc i32 %sub337 to i16, !dbg !2570
  store i16 %conv338, i16* %hlstart, align 2, !dbg !2573
  br label %if.end339, !dbg !2574

if.end339:                                        ; preds = %if.then335, %if.end330
  br label %if.end340, !dbg !2575

if.end340:                                        ; preds = %if.end339, %if.then174
  br label %if.end342, !dbg !2576

if.else341:                                       ; preds = %cond.end170
  store i16 0, i16* %hlstart, align 2, !dbg !2577
  store i16 0, i16* %hlend, align 2, !dbg !2579
  br label %if.end342

if.end342:                                        ; preds = %if.else341, %if.end340
  %226 = load i16, i16* %hlend, align 2, !dbg !2580
  %conv343 = sext i16 %226 to i32, !dbg !2580
  %227 = load i16, i16* %hlstart, align 2, !dbg !2582
  %conv344 = sext i16 %227 to i32, !dbg !2582
  %sub345 = sub nsw i32 %conv343, %conv344, !dbg !2583
  %cmp346 = icmp slt i32 %sub345, 2, !dbg !2584
  br i1 %cmp346, label %if.then348, label %if.end352, !dbg !2585

if.then348:                                       ; preds = %if.end342
  %228 = load i16, i16* %hlstart, align 2, !dbg !2586
  %conv349 = sext i16 %228 to i32, !dbg !2586
  %add350 = add nsw i32 %conv349, 2, !dbg !2588
  %conv351 = trunc i32 %add350 to i16, !dbg !2586
  store i16 %conv351, i16* %hlend, align 2, !dbg !2589
  br label %if.end352, !dbg !2590

if.end352:                                        ; preds = %if.then348, %if.end342
  %229 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2591
  %txtscroll = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %229, i32 0, i32 22, !dbg !2592
  %230 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !2593
  %231 = bitcast %struct.rcti* %txtscroll to i8*, !dbg !2594
  %232 = bitcast %struct.rcti* %230 to i8*, !dbg !2594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 4 %232, i64 16, i1 false), !dbg !2594
  %233 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2595
  %winy353 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %233, i32 0, i32 6, !dbg !2596
  %234 = load i16, i16* %winy353, align 2, !dbg !2596
  %conv354 = sext i16 %234 to i32, !dbg !2595
  %235 = load i16, i16* %pix_top_margin, align 2, !dbg !2597
  %conv355 = sext i16 %235 to i32, !dbg !2597
  %sub356 = sub nsw i32 %conv354, %conv355, !dbg !2598
  %236 = load i16, i16* %hlstart, align 2, !dbg !2599
  %conv357 = sext i16 %236 to i32, !dbg !2599
  %sub358 = sub nsw i32 %sub356, %conv357, !dbg !2600
  %237 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2601
  %txtscroll359 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %237, i32 0, i32 22, !dbg !2602
  %ymax360 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll359, i32 0, i32 3, !dbg !2603
  store i32 %sub358, i32* %ymax360, align 4, !dbg !2604
  %238 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2605
  %winy361 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %238, i32 0, i32 6, !dbg !2606
  %239 = load i16, i16* %winy361, align 2, !dbg !2606
  %conv362 = sext i16 %239 to i32, !dbg !2605
  %240 = load i16, i16* %pix_top_margin, align 2, !dbg !2607
  %conv363 = sext i16 %240 to i32, !dbg !2607
  %sub364 = sub nsw i32 %conv362, %conv363, !dbg !2608
  %241 = load i16, i16* %hlend, align 2, !dbg !2609
  %conv365 = sext i16 %241 to i32, !dbg !2609
  %sub366 = sub nsw i32 %sub364, %conv365, !dbg !2610
  %242 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2611
  %txtscroll367 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %242, i32 0, i32 22, !dbg !2612
  %ymin368 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll367, i32 0, i32 2, !dbg !2613
  store i32 %sub366, i32* %ymin368, align 8, !dbg !2614
  %243 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2615
  %txtscroll369 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %243, i32 0, i32 22, !dbg !2615
  %ymin370 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll369, i32 0, i32 2, !dbg !2615
  %244 = load i32, i32* %ymin370, align 8, !dbg !2615
  %245 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2615
  %conv371 = sext i16 %245 to i32, !dbg !2615
  %cmp372 = icmp slt i32 %244, %conv371, !dbg !2615
  br i1 %cmp372, label %if.then374, label %if.else378, !dbg !2618

if.then374:                                       ; preds = %if.end352
  %246 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2615
  %conv375 = sext i16 %246 to i32, !dbg !2615
  %247 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2615
  %txtscroll376 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %247, i32 0, i32 22, !dbg !2615
  %ymin377 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll376, i32 0, i32 2, !dbg !2615
  store i32 %conv375, i32* %ymin377, align 8, !dbg !2615
  br label %if.end395, !dbg !2615

if.else378:                                       ; preds = %if.end352
  %248 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2619
  %txtscroll379 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %248, i32 0, i32 22, !dbg !2619
  %ymin380 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll379, i32 0, i32 2, !dbg !2619
  %249 = load i32, i32* %ymin380, align 8, !dbg !2619
  %250 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2619
  %winy381 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %250, i32 0, i32 6, !dbg !2619
  %251 = load i16, i16* %winy381, align 2, !dbg !2619
  %conv382 = sext i16 %251 to i32, !dbg !2619
  %252 = load i16, i16* %pix_top_margin, align 2, !dbg !2619
  %conv383 = sext i16 %252 to i32, !dbg !2619
  %sub384 = sub nsw i32 %conv382, %conv383, !dbg !2619
  %cmp385 = icmp sgt i32 %249, %sub384, !dbg !2619
  br i1 %cmp385, label %if.then387, label %if.end394, !dbg !2615

if.then387:                                       ; preds = %if.else378
  %253 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2619
  %winy388 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %253, i32 0, i32 6, !dbg !2619
  %254 = load i16, i16* %winy388, align 2, !dbg !2619
  %conv389 = sext i16 %254 to i32, !dbg !2619
  %255 = load i16, i16* %pix_top_margin, align 2, !dbg !2619
  %conv390 = sext i16 %255 to i32, !dbg !2619
  %sub391 = sub nsw i32 %conv389, %conv390, !dbg !2619
  %256 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2619
  %txtscroll392 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %256, i32 0, i32 22, !dbg !2619
  %ymin393 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll392, i32 0, i32 2, !dbg !2619
  store i32 %sub391, i32* %ymin393, align 8, !dbg !2619
  br label %if.end394, !dbg !2619

if.end394:                                        ; preds = %if.then387, %if.else378
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %if.then374
  %257 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2621
  %txtscroll396 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %257, i32 0, i32 22, !dbg !2621
  %ymax397 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll396, i32 0, i32 3, !dbg !2621
  %258 = load i32, i32* %ymax397, align 4, !dbg !2621
  %259 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2621
  %conv398 = sext i16 %259 to i32, !dbg !2621
  %cmp399 = icmp slt i32 %258, %conv398, !dbg !2621
  br i1 %cmp399, label %if.then401, label %if.else405, !dbg !2624

if.then401:                                       ; preds = %if.end395
  %260 = load i16, i16* %pix_bottom_margin, align 2, !dbg !2621
  %conv402 = sext i16 %260 to i32, !dbg !2621
  %261 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2621
  %txtscroll403 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %261, i32 0, i32 22, !dbg !2621
  %ymax404 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll403, i32 0, i32 3, !dbg !2621
  store i32 %conv402, i32* %ymax404, align 4, !dbg !2621
  br label %if.end422, !dbg !2621

if.else405:                                       ; preds = %if.end395
  %262 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2625
  %txtscroll406 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %262, i32 0, i32 22, !dbg !2625
  %ymax407 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll406, i32 0, i32 3, !dbg !2625
  %263 = load i32, i32* %ymax407, align 4, !dbg !2625
  %264 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2625
  %winy408 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %264, i32 0, i32 6, !dbg !2625
  %265 = load i16, i16* %winy408, align 2, !dbg !2625
  %conv409 = sext i16 %265 to i32, !dbg !2625
  %266 = load i16, i16* %pix_top_margin, align 2, !dbg !2625
  %conv410 = sext i16 %266 to i32, !dbg !2625
  %sub411 = sub nsw i32 %conv409, %conv410, !dbg !2625
  %cmp412 = icmp sgt i32 %263, %sub411, !dbg !2625
  br i1 %cmp412, label %if.then414, label %if.end421, !dbg !2621

if.then414:                                       ; preds = %if.else405
  %267 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2625
  %winy415 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %267, i32 0, i32 6, !dbg !2625
  %268 = load i16, i16* %winy415, align 2, !dbg !2625
  %conv416 = sext i16 %268 to i32, !dbg !2625
  %269 = load i16, i16* %pix_top_margin, align 2, !dbg !2625
  %conv417 = sext i16 %269 to i32, !dbg !2625
  %sub418 = sub nsw i32 %conv416, %conv417, !dbg !2625
  %270 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2625
  %txtscroll419 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %270, i32 0, i32 22, !dbg !2625
  %ymax420 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll419, i32 0, i32 3, !dbg !2625
  store i32 %sub418, i32* %ymax420, align 4, !dbg !2625
  br label %if.end421, !dbg !2625

if.end421:                                        ; preds = %if.then414, %if.else405
  br label %if.end422

if.end422:                                        ; preds = %if.end421, %if.then401
  ret void, !dbg !2627
}

declare dso_local %struct.TextFormatType* @ED_text_format_get(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_get_visible_lines_no(%struct.SpaceText* %st, i32 %lineno) #0 !dbg !2628 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %lineno.addr = alloca i32, align 4
  %drawcache = alloca %struct.DrawCache*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  store i32 %lineno, i32* %lineno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lineno.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache, metadata !2635, metadata !DIExpression()), !dbg !2636
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2637
  %drawcache1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 31, !dbg !2638
  %1 = load i8*, i8** %drawcache1, align 8, !dbg !2638
  %2 = bitcast i8* %1 to %struct.DrawCache*, !dbg !2639
  store %struct.DrawCache* %2, %struct.DrawCache** %drawcache, align 8, !dbg !2636
  %3 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !2640
  %line_height = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %3, i32 0, i32 0, !dbg !2641
  %4 = load i32*, i32** %line_height, align 8, !dbg !2641
  %5 = load i32, i32* %lineno.addr, align 4, !dbg !2642
  %idxprom = sext i32 %5 to i64, !dbg !2640
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !2640
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2640
  ret i32 %6, !dbg !2643
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_font_begin(%struct.SpaceText* %st) #0 !dbg !2644 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !2645, metadata !DIExpression()), !dbg !2646
  %0 = load i32, i32* @blf_mono_font, align 4, !dbg !2647
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2648
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 29, !dbg !2649
  %2 = load i16, i16* %lheight_dpi, align 2, !dbg !2649
  %conv = sext i16 %2 to i32, !dbg !2648
  call void @BLF_size(i32 %0, i32 %conv, i32 72), !dbg !2650
  ret void, !dbg !2651
}

declare dso_local float @BLF_fixed_width(i32) #2

declare dso_local void @UI_ThemeColor(i32) #2

declare dso_local void @glRecti(i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_cursor(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !2652 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %text = alloca %struct.Text*, align 8
  %vcurl = alloca i32, align 4
  %vcurc = alloca i32, align 4
  %vsell = alloca i32, align 4
  %vselc = alloca i32, align 4
  %hidden = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %i = alloca i32, align 4
  %lheight = alloca i32, align 4
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %froml = alloca i32, align 4
  %fromc = alloca i32, align 4
  %tol = alloca i32, align 4
  %toc = alloca i32, align 4
  %offl116 = alloca i32, align 4
  %offc117 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %visible_lines = alloca i32, align 4
  %offl146 = alloca i32, align 4
  %offc147 = alloca i32, align 4
  %ch = alloca i8, align 1
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !2653, metadata !DIExpression()), !dbg !2654
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !2655, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !2657, metadata !DIExpression()), !dbg !2658
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2659
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !2660
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !2660
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %vcurl, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.declare(metadata i32* %vcurc, metadata !2663, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.declare(metadata i32* %vsell, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata i32* %vselc, metadata !2667, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.declare(metadata i32* %hidden, metadata !2669, metadata !DIExpression()), !dbg !2670
  store i32 0, i32* %hidden, align 4, !dbg !2670
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2671, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2673, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2675, metadata !DIExpression()), !dbg !2676
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2677, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.declare(metadata i32* %lheight, metadata !2679, metadata !DIExpression()), !dbg !2681
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2682
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 29, !dbg !2683
  %3 = load i16, i16* %lheight_dpi, align 2, !dbg !2683
  %conv = sext i16 %3 to i32, !dbg !2682
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2684
  %lheight_dpi2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 29, !dbg !2684
  %5 = load i16, i16* %lheight_dpi2, align 2, !dbg !2684
  %conv3 = sext i16 %5 to i32, !dbg !2684
  %conv4 = sitofp i32 %conv3 to float, !dbg !2684
  %mul = fmul float 0x3FD3333340000000, %conv4, !dbg !2684
  %conv5 = fptosi float %mul to i32, !dbg !2684
  %add = add nsw i32 %conv, %conv5, !dbg !2685
  store i32 %add, i32* %lheight, align 4, !dbg !2681
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2686
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !2688
  %7 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !2688
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2689
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 6, !dbg !2690
  %9 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !2690
  %cmp = icmp ne %struct.TextLine* %7, %9, !dbg !2691
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2692

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2693
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 7, !dbg !2694
  %11 = load i32, i32* %curc, align 8, !dbg !2694
  %12 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2695
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 8, !dbg !2696
  %13 = load i32, i32* %selc, align 4, !dbg !2696
  %cmp7 = icmp ne i32 %11, %13, !dbg !2697
  br i1 %cmp7, label %if.then, label %if.else115, !dbg !2698

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !2699, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !2702, metadata !DIExpression()), !dbg !2703
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2704
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2705
  %16 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2706
  %curl9 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 5, !dbg !2707
  %17 = load %struct.TextLine*, %struct.TextLine** %curl9, align 8, !dbg !2707
  %18 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2708
  %curc10 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 7, !dbg !2709
  %19 = load i32, i32* %curc10, align 8, !dbg !2709
  call void @wrap_offset(%struct.SpaceText* %14, %struct.ARegion* %15, %struct.TextLine* %17, i32 %19, i32* %offl, i32* %offc), !dbg !2710
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2711
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 4, !dbg !2712
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !2713
  %21 = load i8*, i8** %first, align 8, !dbg !2713
  %22 = bitcast i8* %21 to %struct.TextLine*, !dbg !2711
  %23 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2714
  %curl11 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 5, !dbg !2715
  %24 = load %struct.TextLine*, %struct.TextLine** %curl11, align 8, !dbg !2715
  %call = call i32 @txt_get_span(%struct.TextLine* %22, %struct.TextLine* %24), !dbg !2716
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2717
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 7, !dbg !2718
  %26 = load i32, i32* %top, align 8, !dbg !2718
  %sub = sub nsw i32 %call, %26, !dbg !2719
  %27 = load i32, i32* %offl, align 4, !dbg !2720
  %add12 = add nsw i32 %sub, %27, !dbg !2721
  store i32 %add12, i32* %vcurl, align 4, !dbg !2722
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2723
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2724
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %29, i32 0, i32 5, !dbg !2725
  %30 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !2725
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 2, !dbg !2726
  %31 = load i8*, i8** %line, align 8, !dbg !2726
  %32 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2727
  %curc14 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 7, !dbg !2728
  %33 = load i32, i32* %curc14, align 8, !dbg !2728
  %call15 = call i32 @text_get_char_pos(%struct.SpaceText* %28, i8* %31, i32 %33), !dbg !2729
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2730
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 14, !dbg !2731
  %35 = load i32, i32* %left, align 8, !dbg !2731
  %sub16 = sub nsw i32 %call15, %35, !dbg !2732
  %36 = load i32, i32* %offc, align 4, !dbg !2733
  %add17 = add nsw i32 %sub16, %36, !dbg !2734
  store i32 %add17, i32* %vcurc, align 4, !dbg !2735
  %37 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2736
  %38 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2737
  %39 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2738
  %sell18 = getelementptr inbounds %struct.Text, %struct.Text* %39, i32 0, i32 6, !dbg !2739
  %40 = load %struct.TextLine*, %struct.TextLine** %sell18, align 8, !dbg !2739
  %41 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2740
  %selc19 = getelementptr inbounds %struct.Text, %struct.Text* %41, i32 0, i32 8, !dbg !2741
  %42 = load i32, i32* %selc19, align 4, !dbg !2741
  call void @wrap_offset(%struct.SpaceText* %37, %struct.ARegion* %38, %struct.TextLine* %40, i32 %42, i32* %offl, i32* %offc), !dbg !2742
  %43 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2743
  %lines20 = getelementptr inbounds %struct.Text, %struct.Text* %43, i32 0, i32 4, !dbg !2744
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines20, i32 0, i32 0, !dbg !2745
  %44 = load i8*, i8** %first21, align 8, !dbg !2745
  %45 = bitcast i8* %44 to %struct.TextLine*, !dbg !2743
  %46 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2746
  %sell22 = getelementptr inbounds %struct.Text, %struct.Text* %46, i32 0, i32 6, !dbg !2747
  %47 = load %struct.TextLine*, %struct.TextLine** %sell22, align 8, !dbg !2747
  %call23 = call i32 @txt_get_span(%struct.TextLine* %45, %struct.TextLine* %47), !dbg !2748
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2749
  %top24 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %48, i32 0, i32 7, !dbg !2750
  %49 = load i32, i32* %top24, align 8, !dbg !2750
  %sub25 = sub nsw i32 %call23, %49, !dbg !2751
  %50 = load i32, i32* %offl, align 4, !dbg !2752
  %add26 = add nsw i32 %sub25, %50, !dbg !2753
  store i32 %add26, i32* %vsell, align 4, !dbg !2754
  %51 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2755
  %52 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2756
  %sell27 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 6, !dbg !2757
  %53 = load %struct.TextLine*, %struct.TextLine** %sell27, align 8, !dbg !2757
  %line28 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %53, i32 0, i32 2, !dbg !2758
  %54 = load i8*, i8** %line28, align 8, !dbg !2758
  %55 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2759
  %selc29 = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 8, !dbg !2760
  %56 = load i32, i32* %selc29, align 4, !dbg !2760
  %call30 = call i32 @text_get_char_pos(%struct.SpaceText* %51, i8* %54, i32 %56), !dbg !2761
  %57 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2762
  %left31 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %57, i32 0, i32 14, !dbg !2763
  %58 = load i32, i32* %left31, align 8, !dbg !2763
  %sub32 = sub nsw i32 %call30, %58, !dbg !2764
  %59 = load i32, i32* %offc, align 4, !dbg !2765
  %add33 = add nsw i32 %sub32, %59, !dbg !2766
  store i32 %add33, i32* %vselc, align 4, !dbg !2767
  %60 = load i32, i32* %vcurc, align 4, !dbg !2768
  %cmp34 = icmp slt i32 %60, 0, !dbg !2770
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !2771

if.then36:                                        ; preds = %if.then
  store i32 0, i32* %vcurc, align 4, !dbg !2772
  br label %if.end, !dbg !2773

if.end:                                           ; preds = %if.then36, %if.then
  %61 = load i32, i32* %vselc, align 4, !dbg !2774
  %cmp37 = icmp slt i32 %61, 0, !dbg !2776
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !2777

if.then39:                                        ; preds = %if.end
  store i32 0, i32* %vselc, align 4, !dbg !2778
  store i32 1, i32* %hidden, align 4, !dbg !2779
  br label %if.end40, !dbg !2780

if.end40:                                         ; preds = %if.then39, %if.end
  call void @UI_ThemeColor(i32 22), !dbg !2781
  %62 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2782
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %62, i32 0, i32 15, !dbg !2783
  %63 = load i32, i32* %showlinenrs, align 4, !dbg !2783
  %tobool = icmp ne i32 %63, 0, !dbg !2782
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2782

cond.true:                                        ; preds = %if.end40
  %64 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2784
  %conv41 = sext i16 %64 to i32, !dbg !2784
  %conv42 = sitofp i32 %conv41 to float, !dbg !2784
  %mul43 = fmul float 5.000000e-01, %conv42, !dbg !2784
  %conv44 = fptosi float %mul43 to i32, !dbg !2784
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2785
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %65, i32 0, i32 12, !dbg !2785
  %66 = load i8, i8* %cwidth, align 2, !dbg !2785
  %conv45 = zext i8 %66 to i32, !dbg !2785
  %67 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2785
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %67, i32 0, i32 13, !dbg !2785
  %68 = load i8, i8* %linenrs_tot, align 1, !dbg !2785
  %conv46 = zext i8 %68 to i32, !dbg !2785
  %mul47 = mul nsw i32 %conv45, %conv46, !dbg !2785
  %add48 = add nsw i32 %conv44, %mul47, !dbg !2786
  br label %cond.end, !dbg !2782

cond.false:                                       ; preds = %if.end40
  %69 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2787
  %conv49 = sext i16 %69 to i32, !dbg !2787
  %conv50 = sitofp i32 %conv49 to float, !dbg !2787
  %mul51 = fmul float 5.000000e-01, %conv50, !dbg !2787
  %conv52 = fptosi float %mul51 to i32, !dbg !2787
  br label %cond.end, !dbg !2782

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add48, %cond.true ], [ %conv52, %cond.false ], !dbg !2782
  store i32 %cond, i32* %x, align 4, !dbg !2788
  %70 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2789
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %70, i32 0, i32 6, !dbg !2790
  %71 = load i16, i16* %winy, align 2, !dbg !2790
  %conv53 = sext i16 %71 to i32, !dbg !2789
  store i32 %conv53, i32* %y, align 4, !dbg !2791
  %72 = load i32, i32* %vcurl, align 4, !dbg !2792
  %73 = load i32, i32* %vsell, align 4, !dbg !2794
  %cmp54 = icmp eq i32 %72, %73, !dbg !2795
  br i1 %cmp54, label %if.then56, label %if.else83, !dbg !2796

if.then56:                                        ; preds = %cond.end
  %74 = load i32, i32* %vcurl, align 4, !dbg !2797
  %75 = load i32, i32* %lheight, align 4, !dbg !2799
  %mul57 = mul nsw i32 %74, %75, !dbg !2800
  %76 = load i32, i32* %y, align 4, !dbg !2801
  %sub58 = sub nsw i32 %76, %mul57, !dbg !2801
  store i32 %sub58, i32* %y, align 4, !dbg !2801
  %77 = load i32, i32* %vcurc, align 4, !dbg !2802
  %78 = load i32, i32* %vselc, align 4, !dbg !2804
  %cmp59 = icmp slt i32 %77, %78, !dbg !2805
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !2806

if.then61:                                        ; preds = %if.then56
  %79 = load i32, i32* %x, align 4, !dbg !2807
  %80 = load i32, i32* %vcurc, align 4, !dbg !2808
  %81 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2809
  %cwidth62 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %81, i32 0, i32 12, !dbg !2810
  %82 = load i8, i8* %cwidth62, align 2, !dbg !2810
  %conv63 = zext i8 %82 to i32, !dbg !2809
  %mul64 = mul nsw i32 %80, %conv63, !dbg !2811
  %add65 = add nsw i32 %79, %mul64, !dbg !2812
  %sub66 = sub nsw i32 %add65, 1, !dbg !2813
  %83 = load i32, i32* %y, align 4, !dbg !2814
  %84 = load i32, i32* %x, align 4, !dbg !2815
  %85 = load i32, i32* %vselc, align 4, !dbg !2816
  %86 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2817
  %cwidth67 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %86, i32 0, i32 12, !dbg !2818
  %87 = load i8, i8* %cwidth67, align 2, !dbg !2818
  %conv68 = zext i8 %87 to i32, !dbg !2817
  %mul69 = mul nsw i32 %85, %conv68, !dbg !2819
  %add70 = add nsw i32 %84, %mul69, !dbg !2820
  %88 = load i32, i32* %y, align 4, !dbg !2821
  %89 = load i32, i32* %lheight, align 4, !dbg !2822
  %sub71 = sub nsw i32 %88, %89, !dbg !2823
  call void @glRecti(i32 %sub66, i32 %83, i32 %add70, i32 %sub71), !dbg !2824
  br label %if.end82, !dbg !2824

if.else:                                          ; preds = %if.then56
  %90 = load i32, i32* %x, align 4, !dbg !2825
  %91 = load i32, i32* %vselc, align 4, !dbg !2826
  %92 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2827
  %cwidth72 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %92, i32 0, i32 12, !dbg !2828
  %93 = load i8, i8* %cwidth72, align 2, !dbg !2828
  %conv73 = zext i8 %93 to i32, !dbg !2827
  %mul74 = mul nsw i32 %91, %conv73, !dbg !2829
  %add75 = add nsw i32 %90, %mul74, !dbg !2830
  %sub76 = sub nsw i32 %add75, 1, !dbg !2831
  %94 = load i32, i32* %y, align 4, !dbg !2832
  %95 = load i32, i32* %x, align 4, !dbg !2833
  %96 = load i32, i32* %vcurc, align 4, !dbg !2834
  %97 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2835
  %cwidth77 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %97, i32 0, i32 12, !dbg !2836
  %98 = load i8, i8* %cwidth77, align 2, !dbg !2836
  %conv78 = zext i8 %98 to i32, !dbg !2835
  %mul79 = mul nsw i32 %96, %conv78, !dbg !2837
  %add80 = add nsw i32 %95, %mul79, !dbg !2838
  %99 = load i32, i32* %y, align 4, !dbg !2839
  %100 = load i32, i32* %lheight, align 4, !dbg !2840
  %sub81 = sub nsw i32 %99, %100, !dbg !2841
  call void @glRecti(i32 %sub76, i32 %94, i32 %add80, i32 %sub81), !dbg !2842
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then61
  br label %if.end114, !dbg !2843

if.else83:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %froml, metadata !2844, metadata !DIExpression()), !dbg !2846
  call void @llvm.dbg.declare(metadata i32* %fromc, metadata !2847, metadata !DIExpression()), !dbg !2848
  call void @llvm.dbg.declare(metadata i32* %tol, metadata !2849, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %toc, metadata !2851, metadata !DIExpression()), !dbg !2852
  %101 = load i32, i32* %vcurl, align 4, !dbg !2853
  %102 = load i32, i32* %vsell, align 4, !dbg !2855
  %cmp84 = icmp slt i32 %101, %102, !dbg !2856
  br i1 %cmp84, label %if.then86, label %if.else87, !dbg !2857

if.then86:                                        ; preds = %if.else83
  %103 = load i32, i32* %vcurl, align 4, !dbg !2858
  store i32 %103, i32* %froml, align 4, !dbg !2860
  %104 = load i32, i32* %vsell, align 4, !dbg !2861
  store i32 %104, i32* %tol, align 4, !dbg !2862
  %105 = load i32, i32* %vcurc, align 4, !dbg !2863
  store i32 %105, i32* %fromc, align 4, !dbg !2864
  %106 = load i32, i32* %vselc, align 4, !dbg !2865
  store i32 %106, i32* %toc, align 4, !dbg !2866
  br label %if.end88, !dbg !2867

if.else87:                                        ; preds = %if.else83
  %107 = load i32, i32* %vsell, align 4, !dbg !2868
  store i32 %107, i32* %froml, align 4, !dbg !2870
  %108 = load i32, i32* %vcurl, align 4, !dbg !2871
  store i32 %108, i32* %tol, align 4, !dbg !2872
  %109 = load i32, i32* %vselc, align 4, !dbg !2873
  store i32 %109, i32* %fromc, align 4, !dbg !2874
  %110 = load i32, i32* %vcurc, align 4, !dbg !2875
  store i32 %110, i32* %toc, align 4, !dbg !2876
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  %111 = load i32, i32* %froml, align 4, !dbg !2877
  %112 = load i32, i32* %lheight, align 4, !dbg !2878
  %mul89 = mul nsw i32 %111, %112, !dbg !2879
  %113 = load i32, i32* %y, align 4, !dbg !2880
  %sub90 = sub nsw i32 %113, %mul89, !dbg !2880
  store i32 %sub90, i32* %y, align 4, !dbg !2880
  %114 = load i32, i32* %x, align 4, !dbg !2881
  %115 = load i32, i32* %fromc, align 4, !dbg !2882
  %116 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2883
  %cwidth91 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %116, i32 0, i32 12, !dbg !2884
  %117 = load i8, i8* %cwidth91, align 2, !dbg !2884
  %conv92 = zext i8 %117 to i32, !dbg !2883
  %mul93 = mul nsw i32 %115, %conv92, !dbg !2885
  %add94 = add nsw i32 %114, %mul93, !dbg !2886
  %sub95 = sub nsw i32 %add94, 1, !dbg !2887
  %118 = load i32, i32* %y, align 4, !dbg !2888
  %119 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2889
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %119, i32 0, i32 5, !dbg !2890
  %120 = load i16, i16* %winx, align 8, !dbg !2890
  %conv96 = sext i16 %120 to i32, !dbg !2889
  %121 = load i32, i32* %y, align 4, !dbg !2891
  %122 = load i32, i32* %lheight, align 4, !dbg !2892
  %sub97 = sub nsw i32 %121, %122, !dbg !2893
  call void @glRecti(i32 %sub95, i32 %118, i32 %conv96, i32 %sub97), !dbg !2894
  %123 = load i32, i32* %lheight, align 4, !dbg !2895
  %124 = load i32, i32* %y, align 4, !dbg !2896
  %sub98 = sub nsw i32 %124, %123, !dbg !2896
  store i32 %sub98, i32* %y, align 4, !dbg !2896
  %125 = load i32, i32* %froml, align 4, !dbg !2897
  %add99 = add nsw i32 %125, 1, !dbg !2899
  store i32 %add99, i32* %i, align 4, !dbg !2900
  br label %for.cond, !dbg !2901

for.cond:                                         ; preds = %for.inc, %if.end88
  %126 = load i32, i32* %i, align 4, !dbg !2902
  %127 = load i32, i32* %tol, align 4, !dbg !2904
  %cmp100 = icmp slt i32 %126, %127, !dbg !2905
  br i1 %cmp100, label %for.body, label %for.end, !dbg !2906

for.body:                                         ; preds = %for.cond
  %128 = load i32, i32* %x, align 4, !dbg !2907
  %sub102 = sub nsw i32 %128, 4, !dbg !2908
  %129 = load i32, i32* %y, align 4, !dbg !2909
  %130 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2910
  %winx103 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %130, i32 0, i32 5, !dbg !2911
  %131 = load i16, i16* %winx103, align 8, !dbg !2911
  %conv104 = sext i16 %131 to i32, !dbg !2910
  %132 = load i32, i32* %y, align 4, !dbg !2912
  %133 = load i32, i32* %lheight, align 4, !dbg !2913
  %sub105 = sub nsw i32 %132, %133, !dbg !2914
  call void @glRecti(i32 %sub102, i32 %129, i32 %conv104, i32 %sub105), !dbg !2915
  %134 = load i32, i32* %lheight, align 4, !dbg !2916
  %135 = load i32, i32* %y, align 4, !dbg !2917
  %sub106 = sub nsw i32 %135, %134, !dbg !2917
  store i32 %sub106, i32* %y, align 4, !dbg !2917
  br label %for.inc, !dbg !2915

for.inc:                                          ; preds = %for.body
  %136 = load i32, i32* %i, align 4, !dbg !2918
  %inc = add nsw i32 %136, 1, !dbg !2918
  store i32 %inc, i32* %i, align 4, !dbg !2918
  br label %for.cond, !dbg !2919, !llvm.loop !2920

for.end:                                          ; preds = %for.cond
  %137 = load i32, i32* %x, align 4, !dbg !2922
  %sub107 = sub nsw i32 %137, 4, !dbg !2923
  %138 = load i32, i32* %y, align 4, !dbg !2924
  %139 = load i32, i32* %x, align 4, !dbg !2925
  %140 = load i32, i32* %toc, align 4, !dbg !2926
  %141 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2927
  %cwidth108 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %141, i32 0, i32 12, !dbg !2928
  %142 = load i8, i8* %cwidth108, align 2, !dbg !2928
  %conv109 = zext i8 %142 to i32, !dbg !2927
  %mul110 = mul nsw i32 %140, %conv109, !dbg !2929
  %add111 = add nsw i32 %139, %mul110, !dbg !2930
  %143 = load i32, i32* %y, align 4, !dbg !2931
  %144 = load i32, i32* %lheight, align 4, !dbg !2932
  %sub112 = sub nsw i32 %143, %144, !dbg !2933
  call void @glRecti(i32 %sub107, i32 %138, i32 %add111, i32 %sub112), !dbg !2934
  %145 = load i32, i32* %lheight, align 4, !dbg !2935
  %146 = load i32, i32* %y, align 4, !dbg !2936
  %sub113 = sub nsw i32 %146, %145, !dbg !2936
  store i32 %sub113, i32* %y, align 4, !dbg !2936
  br label %if.end114

if.end114:                                        ; preds = %for.end, %if.end82
  br label %if.end138, !dbg !2937

if.else115:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %offl116, metadata !2938, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.declare(metadata i32* %offc117, metadata !2941, metadata !DIExpression()), !dbg !2942
  %147 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2943
  %148 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !2944
  %149 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2945
  %sell118 = getelementptr inbounds %struct.Text, %struct.Text* %149, i32 0, i32 6, !dbg !2946
  %150 = load %struct.TextLine*, %struct.TextLine** %sell118, align 8, !dbg !2946
  %151 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2947
  %selc119 = getelementptr inbounds %struct.Text, %struct.Text* %151, i32 0, i32 8, !dbg !2948
  %152 = load i32, i32* %selc119, align 4, !dbg !2948
  call void @wrap_offset(%struct.SpaceText* %147, %struct.ARegion* %148, %struct.TextLine* %150, i32 %152, i32* %offl116, i32* %offc117), !dbg !2949
  %153 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2950
  %lines120 = getelementptr inbounds %struct.Text, %struct.Text* %153, i32 0, i32 4, !dbg !2951
  %first121 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines120, i32 0, i32 0, !dbg !2952
  %154 = load i8*, i8** %first121, align 8, !dbg !2952
  %155 = bitcast i8* %154 to %struct.TextLine*, !dbg !2950
  %156 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2953
  %sell122 = getelementptr inbounds %struct.Text, %struct.Text* %156, i32 0, i32 6, !dbg !2954
  %157 = load %struct.TextLine*, %struct.TextLine** %sell122, align 8, !dbg !2954
  %call123 = call i32 @txt_get_span(%struct.TextLine* %155, %struct.TextLine* %157), !dbg !2955
  %158 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2956
  %top124 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %158, i32 0, i32 7, !dbg !2957
  %159 = load i32, i32* %top124, align 8, !dbg !2957
  %sub125 = sub nsw i32 %call123, %159, !dbg !2958
  %160 = load i32, i32* %offl116, align 4, !dbg !2959
  %add126 = add nsw i32 %sub125, %160, !dbg !2960
  store i32 %add126, i32* %vsell, align 4, !dbg !2961
  %161 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2962
  %162 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2963
  %sell127 = getelementptr inbounds %struct.Text, %struct.Text* %162, i32 0, i32 6, !dbg !2964
  %163 = load %struct.TextLine*, %struct.TextLine** %sell127, align 8, !dbg !2964
  %line128 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %163, i32 0, i32 2, !dbg !2965
  %164 = load i8*, i8** %line128, align 8, !dbg !2965
  %165 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2966
  %selc129 = getelementptr inbounds %struct.Text, %struct.Text* %165, i32 0, i32 8, !dbg !2967
  %166 = load i32, i32* %selc129, align 4, !dbg !2967
  %call130 = call i32 @text_get_char_pos(%struct.SpaceText* %161, i8* %164, i32 %166), !dbg !2968
  %167 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2969
  %left131 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %167, i32 0, i32 14, !dbg !2970
  %168 = load i32, i32* %left131, align 8, !dbg !2970
  %sub132 = sub nsw i32 %call130, %168, !dbg !2971
  %169 = load i32, i32* %offc117, align 4, !dbg !2972
  %add133 = add nsw i32 %sub132, %169, !dbg !2973
  store i32 %add133, i32* %vselc, align 4, !dbg !2974
  %170 = load i32, i32* %vselc, align 4, !dbg !2975
  %cmp134 = icmp slt i32 %170, 0, !dbg !2977
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !2978

if.then136:                                       ; preds = %if.else115
  store i32 0, i32* %vselc, align 4, !dbg !2979
  store i32 1, i32* %hidden, align 4, !dbg !2981
  br label %if.end137, !dbg !2982

if.end137:                                        ; preds = %if.then136, %if.else115
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end114
  %171 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2983
  %line_hlight = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %171, i32 0, i32 18, !dbg !2985
  %172 = load i16, i16* %line_hlight, align 2, !dbg !2985
  %tobool139 = icmp ne i16 %172, 0, !dbg !2983
  br i1 %tobool139, label %if.then140, label %if.end177, !dbg !2986

if.then140:                                       ; preds = %if.end138
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !2987, metadata !DIExpression()), !dbg !2989
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !2990, metadata !DIExpression()), !dbg !2991
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !2992, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !2994, metadata !DIExpression()), !dbg !2995
  %173 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !2996
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %173, i32 0, i32 24, !dbg !2998
  %174 = load i32, i32* %wordwrap, align 8, !dbg !2998
  %tobool141 = icmp ne i32 %174, 0, !dbg !2996
  br i1 %tobool141, label %if.then142, label %if.else157, !dbg !2999

if.then142:                                       ; preds = %if.then140
  call void @llvm.dbg.declare(metadata i32* %visible_lines, metadata !3000, metadata !DIExpression()), !dbg !3002
  %175 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3003
  %176 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3004
  %177 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3005
  %sell143 = getelementptr inbounds %struct.Text, %struct.Text* %177, i32 0, i32 6, !dbg !3006
  %178 = load %struct.TextLine*, %struct.TextLine** %sell143, align 8, !dbg !3006
  %line144 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %178, i32 0, i32 2, !dbg !3007
  %179 = load i8*, i8** %line144, align 8, !dbg !3007
  %call145 = call i32 @text_get_visible_lines(%struct.SpaceText* %175, %struct.ARegion* %176, i8* %179), !dbg !3008
  store i32 %call145, i32* %visible_lines, align 4, !dbg !3002
  call void @llvm.dbg.declare(metadata i32* %offl146, metadata !3009, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.declare(metadata i32* %offc147, metadata !3011, metadata !DIExpression()), !dbg !3012
  %180 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3013
  %181 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3014
  %182 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3015
  %sell148 = getelementptr inbounds %struct.Text, %struct.Text* %182, i32 0, i32 6, !dbg !3016
  %183 = load %struct.TextLine*, %struct.TextLine** %sell148, align 8, !dbg !3016
  %184 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3017
  %selc149 = getelementptr inbounds %struct.Text, %struct.Text* %184, i32 0, i32 8, !dbg !3018
  %185 = load i32, i32* %selc149, align 4, !dbg !3018
  call void @wrap_offset_in_line(%struct.SpaceText* %180, %struct.ARegion* %181, %struct.TextLine* %183, i32 %185, i32* %offl146, i32* %offc147), !dbg !3019
  %186 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3020
  %winy150 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %186, i32 0, i32 6, !dbg !3021
  %187 = load i16, i16* %winy150, align 2, !dbg !3021
  %conv151 = sext i16 %187 to i32, !dbg !3020
  %188 = load i32, i32* %vsell, align 4, !dbg !3022
  %189 = load i32, i32* %offl146, align 4, !dbg !3023
  %sub152 = sub nsw i32 %188, %189, !dbg !3024
  %190 = load i32, i32* %lheight, align 4, !dbg !3025
  %mul153 = mul nsw i32 %sub152, %190, !dbg !3026
  %sub154 = sub nsw i32 %conv151, %mul153, !dbg !3027
  store i32 %sub154, i32* %y1, align 4, !dbg !3028
  %191 = load i32, i32* %y1, align 4, !dbg !3029
  %192 = load i32, i32* %lheight, align 4, !dbg !3030
  %193 = load i32, i32* %visible_lines, align 4, !dbg !3031
  %mul155 = mul nsw i32 %192, %193, !dbg !3032
  %sub156 = sub nsw i32 %191, %mul155, !dbg !3033
  store i32 %sub156, i32* %y2, align 4, !dbg !3034
  br label %if.end163, !dbg !3035

if.else157:                                       ; preds = %if.then140
  %194 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3036
  %winy158 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %194, i32 0, i32 6, !dbg !3038
  %195 = load i16, i16* %winy158, align 2, !dbg !3038
  %conv159 = sext i16 %195 to i32, !dbg !3036
  %196 = load i32, i32* %vsell, align 4, !dbg !3039
  %197 = load i32, i32* %lheight, align 4, !dbg !3040
  %mul160 = mul nsw i32 %196, %197, !dbg !3041
  %sub161 = sub nsw i32 %conv159, %mul160, !dbg !3042
  store i32 %sub161, i32* %y1, align 4, !dbg !3043
  %198 = load i32, i32* %y1, align 4, !dbg !3044
  %199 = load i32, i32* %lheight, align 4, !dbg !3045
  %sub162 = sub nsw i32 %198, %199, !dbg !3046
  store i32 %sub162, i32* %y2, align 4, !dbg !3047
  br label %if.end163

if.end163:                                        ; preds = %if.else157, %if.then142
  %200 = load i32, i32* %y1, align 4, !dbg !3048
  %cmp164 = icmp slt i32 %200, 0, !dbg !3050
  br i1 %cmp164, label %if.end176, label %lor.lhs.false166, !dbg !3051

lor.lhs.false166:                                 ; preds = %if.end163
  %201 = load i32, i32* %y2, align 4, !dbg !3052
  %202 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3053
  %winy167 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %202, i32 0, i32 6, !dbg !3054
  %203 = load i16, i16* %winy167, align 2, !dbg !3054
  %conv168 = sext i16 %203 to i32, !dbg !3053
  %cmp169 = icmp sgt i32 %201, %conv168, !dbg !3055
  br i1 %cmp169, label %if.end176, label %if.then171, !dbg !3056

if.then171:                                       ; preds = %lor.lhs.false166
  store i32 0, i32* %x1, align 4, !dbg !3057
  %204 = load i32, i32* %x1, align 4, !dbg !3059
  %205 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3060
  %winx172 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %205, i32 0, i32 5, !dbg !3061
  %206 = load i16, i16* %winx172, align 8, !dbg !3061
  %conv173 = sext i16 %206 to i32, !dbg !3060
  %add174 = add nsw i32 %204, %conv173, !dbg !3062
  store i32 %add174, i32* %x2, align 4, !dbg !3063
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext -1, i8 zeroext 32), !dbg !3064
  call void @glBlendFunc(i32 770, i32 771), !dbg !3065
  call void @glEnable(i32 3042), !dbg !3066
  %207 = load i32, i32* %x1, align 4, !dbg !3067
  %sub175 = sub nsw i32 %207, 4, !dbg !3068
  %208 = load i32, i32* %y1, align 4, !dbg !3069
  %209 = load i32, i32* %x2, align 4, !dbg !3070
  %210 = load i32, i32* %y2, align 4, !dbg !3071
  call void @glRecti(i32 %sub175, i32 %208, i32 %209, i32 %210), !dbg !3072
  call void @glDisable(i32 3042), !dbg !3073
  br label %if.end176, !dbg !3074

if.end176:                                        ; preds = %if.then171, %lor.lhs.false166, %if.end163
  br label %if.end177, !dbg !3075

if.end177:                                        ; preds = %if.end176, %if.end138
  %211 = load i32, i32* %hidden, align 4, !dbg !3076
  %tobool178 = icmp ne i32 %211, 0, !dbg !3076
  br i1 %tobool178, label %if.end241, label %if.then179, !dbg !3078

if.then179:                                       ; preds = %if.end177
  %212 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3079
  %showlinenrs180 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %212, i32 0, i32 15, !dbg !3081
  %213 = load i32, i32* %showlinenrs180, align 4, !dbg !3081
  %tobool181 = icmp ne i32 %213, 0, !dbg !3079
  br i1 %tobool181, label %cond.true182, label %cond.false193, !dbg !3079

cond.true182:                                     ; preds = %if.then179
  %214 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3082
  %conv183 = sext i16 %214 to i32, !dbg !3082
  %conv184 = sitofp i32 %conv183 to float, !dbg !3082
  %mul185 = fmul float 5.000000e-01, %conv184, !dbg !3082
  %conv186 = fptosi float %mul185 to i32, !dbg !3082
  %215 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3083
  %cwidth187 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %215, i32 0, i32 12, !dbg !3083
  %216 = load i8, i8* %cwidth187, align 2, !dbg !3083
  %conv188 = zext i8 %216 to i32, !dbg !3083
  %217 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3083
  %linenrs_tot189 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %217, i32 0, i32 13, !dbg !3083
  %218 = load i8, i8* %linenrs_tot189, align 1, !dbg !3083
  %conv190 = zext i8 %218 to i32, !dbg !3083
  %mul191 = mul nsw i32 %conv188, %conv190, !dbg !3083
  %add192 = add nsw i32 %conv186, %mul191, !dbg !3084
  br label %cond.end198, !dbg !3079

cond.false193:                                    ; preds = %if.then179
  %219 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3085
  %conv194 = sext i16 %219 to i32, !dbg !3085
  %conv195 = sitofp i32 %conv194 to float, !dbg !3085
  %mul196 = fmul float 5.000000e-01, %conv195, !dbg !3085
  %conv197 = fptosi float %mul196 to i32, !dbg !3085
  br label %cond.end198, !dbg !3079

cond.end198:                                      ; preds = %cond.false193, %cond.true182
  %cond199 = phi i32 [ %add192, %cond.true182 ], [ %conv197, %cond.false193 ], !dbg !3079
  store i32 %cond199, i32* %x, align 4, !dbg !3086
  %220 = load i32, i32* %vselc, align 4, !dbg !3087
  %221 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3088
  %cwidth200 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %221, i32 0, i32 12, !dbg !3089
  %222 = load i8, i8* %cwidth200, align 2, !dbg !3089
  %conv201 = zext i8 %222 to i32, !dbg !3088
  %mul202 = mul nsw i32 %220, %conv201, !dbg !3090
  %223 = load i32, i32* %x, align 4, !dbg !3091
  %add203 = add nsw i32 %223, %mul202, !dbg !3091
  store i32 %add203, i32* %x, align 4, !dbg !3091
  %224 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3092
  %winy204 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %224, i32 0, i32 6, !dbg !3093
  %225 = load i16, i16* %winy204, align 2, !dbg !3093
  %conv205 = sext i16 %225 to i32, !dbg !3092
  %226 = load i32, i32* %vsell, align 4, !dbg !3094
  %227 = load i32, i32* %lheight, align 4, !dbg !3095
  %mul206 = mul nsw i32 %226, %227, !dbg !3096
  %sub207 = sub nsw i32 %conv205, %mul206, !dbg !3097
  store i32 %sub207, i32* %y, align 4, !dbg !3098
  %228 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3099
  %overwrite = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %228, i32 0, i32 19, !dbg !3101
  %229 = load i16, i16* %overwrite, align 8, !dbg !3101
  %tobool208 = icmp ne i16 %229, 0, !dbg !3099
  br i1 %tobool208, label %if.then209, label %if.else236, !dbg !3102

if.then209:                                       ; preds = %cond.end198
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !3103, metadata !DIExpression()), !dbg !3105
  %230 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3106
  %sell210 = getelementptr inbounds %struct.Text, %struct.Text* %230, i32 0, i32 6, !dbg !3107
  %231 = load %struct.TextLine*, %struct.TextLine** %sell210, align 8, !dbg !3107
  %line211 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %231, i32 0, i32 2, !dbg !3108
  %232 = load i8*, i8** %line211, align 8, !dbg !3108
  %233 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3109
  %selc212 = getelementptr inbounds %struct.Text, %struct.Text* %233, i32 0, i32 8, !dbg !3110
  %234 = load i32, i32* %selc212, align 4, !dbg !3110
  %idxprom = sext i32 %234 to i64, !dbg !3106
  %arrayidx = getelementptr inbounds i8, i8* %232, i64 %idxprom, !dbg !3106
  %235 = load i8, i8* %arrayidx, align 1, !dbg !3106
  store i8 %235, i8* %ch, align 1, !dbg !3105
  %236 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3111
  %lheight_dpi213 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %236, i32 0, i32 29, !dbg !3111
  %237 = load i16, i16* %lheight_dpi213, align 2, !dbg !3111
  %conv214 = sext i16 %237 to i32, !dbg !3111
  %conv215 = sitofp i32 %conv214 to float, !dbg !3111
  %mul216 = fmul float 0x3FD3333340000000, %conv215, !dbg !3111
  %conv217 = fptosi float %mul216 to i32, !dbg !3111
  %238 = load i32, i32* %y, align 4, !dbg !3112
  %add218 = add nsw i32 %238, %conv217, !dbg !3112
  store i32 %add218, i32* %y, align 4, !dbg !3112
  %239 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3113
  %cwidth219 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %239, i32 0, i32 12, !dbg !3114
  %240 = load i8, i8* %cwidth219, align 2, !dbg !3114
  %conv220 = zext i8 %240 to i32, !dbg !3113
  store i32 %conv220, i32* %w, align 4, !dbg !3115
  %241 = load i8, i8* %ch, align 1, !dbg !3116
  %conv221 = zext i8 %241 to i32, !dbg !3116
  %cmp222 = icmp eq i32 %conv221, 9, !dbg !3118
  br i1 %cmp222, label %if.then224, label %if.end230, !dbg !3119

if.then224:                                       ; preds = %if.then209
  %242 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3120
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %242, i32 0, i32 16, !dbg !3121
  %243 = load i32, i32* %tabnumber, align 8, !dbg !3121
  %244 = load i32, i32* %vselc, align 4, !dbg !3122
  %245 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3123
  %left225 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %245, i32 0, i32 14, !dbg !3124
  %246 = load i32, i32* %left225, align 8, !dbg !3124
  %add226 = add nsw i32 %244, %246, !dbg !3125
  %247 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3126
  %tabnumber227 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %247, i32 0, i32 16, !dbg !3127
  %248 = load i32, i32* %tabnumber227, align 8, !dbg !3127
  %rem = srem i32 %add226, %248, !dbg !3128
  %sub228 = sub nsw i32 %243, %rem, !dbg !3129
  %249 = load i32, i32* %w, align 4, !dbg !3130
  %mul229 = mul nsw i32 %249, %sub228, !dbg !3130
  store i32 %mul229, i32* %w, align 4, !dbg !3130
  br label %if.end230, !dbg !3131

if.end230:                                        ; preds = %if.then224, %if.then209
  call void @UI_ThemeColor(i32 23), !dbg !3132
  %250 = load i32, i32* %x, align 4, !dbg !3133
  %251 = load i32, i32* %y, align 4, !dbg !3134
  %252 = load i32, i32* %lheight, align 4, !dbg !3135
  %sub231 = sub nsw i32 %251, %252, !dbg !3136
  %sub232 = sub nsw i32 %sub231, 1, !dbg !3137
  %253 = load i32, i32* %x, align 4, !dbg !3138
  %254 = load i32, i32* %w, align 4, !dbg !3139
  %add233 = add nsw i32 %253, %254, !dbg !3140
  %255 = load i32, i32* %y, align 4, !dbg !3141
  %256 = load i32, i32* %lheight, align 4, !dbg !3142
  %sub234 = sub nsw i32 %255, %256, !dbg !3143
  %add235 = add nsw i32 %sub234, 1, !dbg !3144
  call void @glRecti(i32 %250, i32 %sub232, i32 %add233, i32 %add235), !dbg !3145
  br label %if.end240, !dbg !3146

if.else236:                                       ; preds = %cond.end198
  call void @UI_ThemeColor(i32 23), !dbg !3147
  %257 = load i32, i32* %x, align 4, !dbg !3149
  %sub237 = sub nsw i32 %257, 1, !dbg !3150
  %258 = load i32, i32* %y, align 4, !dbg !3151
  %259 = load i32, i32* %x, align 4, !dbg !3152
  %add238 = add nsw i32 %259, 1, !dbg !3153
  %260 = load i32, i32* %y, align 4, !dbg !3154
  %261 = load i32, i32* %lheight, align 4, !dbg !3155
  %sub239 = sub nsw i32 %260, %261, !dbg !3156
  call void @glRecti(i32 %sub237, i32 %258, i32 %add238, i32 %sub239), !dbg !3157
  br label %if.end240

if.end240:                                        ; preds = %if.else236, %if.end230
  br label %if.end241, !dbg !3158

if.end241:                                        ; preds = %if.end240, %if.end177
  ret void, !dbg !3159
}

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_font_draw(%struct.SpaceText* %st, i32 %x, i32 %y, i8* %str) #0 !dbg !3160 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3169, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !3171, metadata !DIExpression()), !dbg !3172
  %0 = load i32, i32* @blf_mono_font, align 4, !dbg !3173
  %1 = load i32, i32* %x.addr, align 4, !dbg !3174
  %conv = sitofp i32 %1 to float, !dbg !3174
  %2 = load i32, i32* %y.addr, align 4, !dbg !3175
  %conv1 = sitofp i32 %2 to float, !dbg !3175
  call void @BLF_position(i32 %0, float %conv, float %conv1, float 0.000000e+00), !dbg !3176
  %3 = load i32, i32* @blf_mono_font, align 4, !dbg !3177
  %4 = load i8*, i8** %str.addr, align 8, !dbg !3178
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3179
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %5, i32 0, i32 12, !dbg !3180
  %6 = load i8, i8* %cwidth, align 2, !dbg !3180
  %conv2 = zext i8 %6 to i32, !dbg !3179
  %call = call i32 @BLF_draw_mono(i32 %3, i8* %4, i64 1024, i32 %conv2), !dbg !3181
  store i32 %call, i32* %columns, align 4, !dbg !3182
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3183
  %cwidth3 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 12, !dbg !3184
  %8 = load i8, i8* %cwidth3, align 2, !dbg !3184
  %conv4 = zext i8 %8 to i32, !dbg !3183
  %9 = load i32, i32* %columns, align 4, !dbg !3185
  %mul = mul nsw i32 %conv4, %9, !dbg !3186
  ret i32 %mul, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_draw_wrapped(%struct.SpaceText* %st, i8* %str, i32 %x, i32 %y, i32 %w, i8* %format, i32 %skip) #0 !dbg !3188 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %skip.addr = alloca i32, align 4
  %use_syntax = alloca i8, align 1
  %fs = alloca %struct.FlattenString, align 8
  %basex = alloca i32, align 4
  %lines = alloca i32, align 4
  %i = alloca i32, align 4
  %wrap = alloca i32, align 4
  %end = alloca i32, align 4
  %max = alloca i32, align 4
  %columns = alloca i32, align 4
  %padding = alloca i32, align 4
  %a = alloca i32, align 4
  %fstart = alloca i32, align 4
  %fpos = alloca i32, align 4
  %mi = alloca i32, align 4
  %ma = alloca i32, align 4
  %mstart = alloca i32, align 4
  %mend = alloca i32, align 4
  %fmt_prev = alloca i8, align 1
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !3191, metadata !DIExpression()), !dbg !3192
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3193, metadata !DIExpression()), !dbg !3194
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3201, metadata !DIExpression()), !dbg !3202
  store i32 %skip, i32* %skip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip.addr, metadata !3203, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata i8* %use_syntax, metadata !3205, metadata !DIExpression()), !dbg !3206
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3207
  %showsyntax = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 17, !dbg !3208
  %1 = load i16, i16* %showsyntax, align 4, !dbg !3208
  %conv = sext i16 %1 to i32, !dbg !3207
  %tobool = icmp ne i32 %conv, 0, !dbg !3207
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3209

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %format.addr, align 8, !dbg !3210
  %tobool1 = icmp ne i8* %2, null, !dbg !3209
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !3211
  %land.ext = zext i1 %3 to i32, !dbg !3209
  %conv2 = trunc i32 %land.ext to i8, !dbg !3212
  store i8 %conv2, i8* %use_syntax, align 1, !dbg !3206
  call void @llvm.dbg.declare(metadata %struct.FlattenString* %fs, metadata !3213, metadata !DIExpression()), !dbg !3224
  call void @llvm.dbg.declare(metadata i32* %basex, metadata !3225, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !3227, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata i32* %wrap, metadata !3231, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.declare(metadata i32* %end, metadata !3233, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.declare(metadata i32* %max, metadata !3235, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !3237, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !3239, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3241, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.declare(metadata i32* %fstart, metadata !3243, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.declare(metadata i32* %fpos, metadata !3245, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.declare(metadata i32* %mi, metadata !3247, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.declare(metadata i32* %ma, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.declare(metadata i32* %mstart, metadata !3251, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.declare(metadata i32* %mend, metadata !3253, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.declare(metadata i8* %fmt_prev, metadata !3255, metadata !DIExpression()), !dbg !3256
  store i8 -1, i8* %fmt_prev, align 1, !dbg !3256
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3257
  %5 = load i8*, i8** %str.addr, align 8, !dbg !3258
  %call = call i32 @flatten_string(%struct.SpaceText* %4, %struct.FlattenString* %fs, i8* %5), !dbg !3259
  %buf = getelementptr inbounds %struct.FlattenString, %struct.FlattenString* %fs, i32 0, i32 2, !dbg !3260
  %6 = load i8*, i8** %buf, align 8, !dbg !3260
  store i8* %6, i8** %str.addr, align 8, !dbg !3261
  %7 = load i32, i32* %w.addr, align 4, !dbg !3262
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3263
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %8, i32 0, i32 12, !dbg !3264
  %9 = load i8, i8* %cwidth, align 2, !dbg !3264
  %conv3 = zext i8 %9 to i32, !dbg !3263
  %div = sdiv i32 %7, %conv3, !dbg !3265
  store i32 %div, i32* %max, align 4, !dbg !3266
  %10 = load i32, i32* %max, align 4, !dbg !3267
  %cmp = icmp slt i32 %10, 8, !dbg !3269
  br i1 %cmp, label %if.then, label %if.end, !dbg !3270

if.then:                                          ; preds = %land.end
  store i32 8, i32* %max, align 4, !dbg !3271
  br label %if.end, !dbg !3272

if.end:                                           ; preds = %if.then, %land.end
  %11 = load i32, i32* %x.addr, align 4, !dbg !3273
  store i32 %11, i32* %basex, align 4, !dbg !3274
  store i32 1, i32* %lines, align 4, !dbg !3275
  store i32 0, i32* %fstart, align 4, !dbg !3276
  store i32 0, i32* %fpos, align 4, !dbg !3277
  store i32 0, i32* %mstart, align 4, !dbg !3278
  %12 = load i8*, i8** %str.addr, align 8, !dbg !3279
  %13 = load i32, i32* %max, align 4, !dbg !3280
  %call5 = call i8* @txt_utf8_forward_columns(i8* %12, i32 %13, i32* %padding), !dbg !3281
  %14 = load i8*, i8** %str.addr, align 8, !dbg !3282
  %sub.ptr.lhs.cast = ptrtoint i8* %call5 to i64, !dbg !3283
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64, !dbg !3283
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3283
  %conv6 = trunc i64 %sub.ptr.sub to i32, !dbg !3281
  store i32 %conv6, i32* %mend, align 4, !dbg !3284
  %15 = load i32, i32* %max, align 4, !dbg !3285
  %16 = load i32, i32* %padding, align 4, !dbg !3286
  %sub = sub nsw i32 %15, %16, !dbg !3287
  store i32 %sub, i32* %wrap, align 4, !dbg !3288
  store i32 %sub, i32* %end, align 4, !dbg !3289
  store i32 0, i32* %i, align 4, !dbg !3290
  store i32 0, i32* %mi, align 4, !dbg !3292
  br label %for.cond, !dbg !3293

for.cond:                                         ; preds = %for.inc97, %if.end
  %17 = load i8*, i8** %str.addr, align 8, !dbg !3294
  %18 = load i32, i32* %mi, align 4, !dbg !3296
  %idxprom = sext i32 %18 to i64, !dbg !3294
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !3294
  %19 = load i8, i8* %arrayidx, align 1, !dbg !3294
  %tobool7 = icmp ne i8 %19, 0, !dbg !3297
  br i1 %tobool7, label %for.body, label %for.end103, !dbg !3297

for.body:                                         ; preds = %for.cond
  %20 = load i8*, i8** %str.addr, align 8, !dbg !3298
  %21 = load i32, i32* %mi, align 4, !dbg !3300
  %idx.ext = sext i32 %21 to i64, !dbg !3301
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !3301
  %call8 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !3302
  store i32 %call8, i32* %columns, align 4, !dbg !3303
  %22 = load i32, i32* %i, align 4, !dbg !3304
  %23 = load i32, i32* %columns, align 4, !dbg !3306
  %add = add nsw i32 %22, %23, !dbg !3307
  %24 = load i32, i32* %end, align 4, !dbg !3308
  %cmp9 = icmp sgt i32 %add, %24, !dbg !3309
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3310

if.then11:                                        ; preds = %for.body
  %25 = load i32, i32* %skip.addr, align 4, !dbg !3311
  %tobool12 = icmp ne i32 %25, 0, !dbg !3311
  br i1 %tobool12, label %if.then13, label %if.end34, !dbg !3314

if.then13:                                        ; preds = %if.then11
  %26 = load i32, i32* %skip.addr, align 4, !dbg !3315
  %dec = add nsw i32 %26, -1, !dbg !3315
  store i32 %dec, i32* %skip.addr, align 4, !dbg !3315
  %27 = load i8, i8* %use_syntax, align 1, !dbg !3317
  %tobool14 = icmp ne i8 %27, 0, !dbg !3317
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !3319

if.then15:                                        ; preds = %if.then13
  %28 = load i8*, i8** %str.addr, align 8, !dbg !3320
  %29 = load i32, i32* %mstart, align 4, !dbg !3322
  %idx.ext16 = sext i32 %29 to i64, !dbg !3323
  %add.ptr17 = getelementptr inbounds i8, i8* %28, i64 %idx.ext16, !dbg !3323
  %30 = load i32, i32* %mend, align 4, !dbg !3324
  %31 = load i32, i32* %mstart, align 4, !dbg !3325
  %sub18 = sub nsw i32 %30, %31, !dbg !3326
  %conv19 = sext i32 %sub18 to i64, !dbg !3324
  %call20 = call i64 @BLI_strnlen_utf8(i8* %add.ptr17, i64 %conv19), !dbg !3327
  %32 = load i32, i32* %fpos, align 4, !dbg !3328
  %conv21 = sext i32 %32 to i64, !dbg !3328
  %add22 = add i64 %conv21, %call20, !dbg !3328
  %conv23 = trunc i64 %add22 to i32, !dbg !3328
  store i32 %conv23, i32* %fpos, align 4, !dbg !3328
  br label %if.end24, !dbg !3329

if.end24:                                         ; preds = %if.then15, %if.then13
  %33 = load i32, i32* %fpos, align 4, !dbg !3330
  store i32 %33, i32* %fstart, align 4, !dbg !3331
  %34 = load i32, i32* %mend, align 4, !dbg !3332
  store i32 %34, i32* %mstart, align 4, !dbg !3333
  %35 = load i8*, i8** %str.addr, align 8, !dbg !3334
  %36 = load i32, i32* %mend, align 4, !dbg !3335
  %idx.ext25 = sext i32 %36 to i64, !dbg !3336
  %add.ptr26 = getelementptr inbounds i8, i8* %35, i64 %idx.ext25, !dbg !3336
  %37 = load i32, i32* %max, align 4, !dbg !3337
  %call27 = call i8* @txt_utf8_forward_columns(i8* %add.ptr26, i32 %37, i32* %padding), !dbg !3338
  %38 = load i8*, i8** %str.addr, align 8, !dbg !3339
  %sub.ptr.lhs.cast28 = ptrtoint i8* %call27 to i64, !dbg !3340
  %sub.ptr.rhs.cast29 = ptrtoint i8* %38 to i64, !dbg !3340
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !3340
  %conv31 = trunc i64 %sub.ptr.sub30 to i32, !dbg !3338
  store i32 %conv31, i32* %mend, align 4, !dbg !3341
  %39 = load i32, i32* %max, align 4, !dbg !3342
  %40 = load i32, i32* %padding, align 4, !dbg !3343
  %sub32 = sub nsw i32 %39, %40, !dbg !3344
  %41 = load i32, i32* %wrap, align 4, !dbg !3345
  %add33 = add nsw i32 %41, %sub32, !dbg !3345
  store i32 %add33, i32* %wrap, align 4, !dbg !3345
  store i32 %add33, i32* %end, align 4, !dbg !3346
  br label %for.inc97, !dbg !3347

if.end34:                                         ; preds = %if.then11
  %42 = load i32, i32* %fstart, align 4, !dbg !3348
  store i32 %42, i32* %a, align 4, !dbg !3350
  %43 = load i32, i32* %mstart, align 4, !dbg !3351
  store i32 %43, i32* %ma, align 4, !dbg !3352
  br label %for.cond35, !dbg !3353

for.cond35:                                       ; preds = %for.inc, %if.end34
  %44 = load i32, i32* %ma, align 4, !dbg !3354
  %45 = load i32, i32* %mend, align 4, !dbg !3356
  %cmp36 = icmp slt i32 %44, %45, !dbg !3357
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !3358

for.body38:                                       ; preds = %for.cond35
  %46 = load i8, i8* %use_syntax, align 1, !dbg !3359
  %tobool39 = icmp ne i8 %46, 0, !dbg !3359
  br i1 %tobool39, label %if.then40, label %if.end51, !dbg !3362

if.then40:                                        ; preds = %for.body38
  %47 = load i8, i8* %fmt_prev, align 1, !dbg !3363
  %conv41 = zext i8 %47 to i32, !dbg !3363
  %48 = load i8*, i8** %format.addr, align 8, !dbg !3366
  %49 = load i32, i32* %a, align 4, !dbg !3367
  %idxprom42 = sext i32 %49 to i64, !dbg !3366
  %arrayidx43 = getelementptr inbounds i8, i8* %48, i64 %idxprom42, !dbg !3366
  %50 = load i8, i8* %arrayidx43, align 1, !dbg !3366
  %conv44 = zext i8 %50 to i32, !dbg !3366
  %cmp45 = icmp ne i32 %conv41, %conv44, !dbg !3368
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !3369

if.then47:                                        ; preds = %if.then40
  %51 = load i8*, i8** %format.addr, align 8, !dbg !3370
  %52 = load i32, i32* %a, align 4, !dbg !3371
  %idxprom48 = sext i32 %52 to i64, !dbg !3370
  %arrayidx49 = getelementptr inbounds i8, i8* %51, i64 %idxprom48, !dbg !3370
  %53 = load i8, i8* %arrayidx49, align 1, !dbg !3370
  store i8 %53, i8* %fmt_prev, align 1, !dbg !3372
  call void @format_draw_color(i8 zeroext %53), !dbg !3373
  br label %if.end50, !dbg !3373

if.end50:                                         ; preds = %if.then47, %if.then40
  br label %if.end51, !dbg !3374

if.end51:                                         ; preds = %if.end50, %for.body38
  %54 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3375
  %55 = load i32, i32* %x.addr, align 4, !dbg !3376
  %56 = load i32, i32* %y.addr, align 4, !dbg !3377
  %57 = load i8*, i8** %str.addr, align 8, !dbg !3378
  %58 = load i32, i32* %ma, align 4, !dbg !3379
  %idx.ext52 = sext i32 %58 to i64, !dbg !3380
  %add.ptr53 = getelementptr inbounds i8, i8* %57, i64 %idx.ext52, !dbg !3380
  %call54 = call i32 @text_font_draw_character_utf8(%struct.SpaceText* %54, i32 %55, i32 %56, i8* %add.ptr53), !dbg !3381
  %59 = load i32, i32* %x.addr, align 4, !dbg !3382
  %add55 = add nsw i32 %59, %call54, !dbg !3382
  store i32 %add55, i32* %x.addr, align 4, !dbg !3382
  %60 = load i32, i32* %fpos, align 4, !dbg !3383
  %inc = add nsw i32 %60, 1, !dbg !3383
  store i32 %inc, i32* %fpos, align 4, !dbg !3383
  br label %for.inc, !dbg !3384

for.inc:                                          ; preds = %if.end51
  %61 = load i32, i32* %a, align 4, !dbg !3385
  %inc56 = add nsw i32 %61, 1, !dbg !3385
  store i32 %inc56, i32* %a, align 4, !dbg !3385
  %62 = load i8*, i8** %str.addr, align 8, !dbg !3386
  %63 = load i32, i32* %ma, align 4, !dbg !3387
  %idx.ext57 = sext i32 %63 to i64, !dbg !3388
  %add.ptr58 = getelementptr inbounds i8, i8* %62, i64 %idx.ext57, !dbg !3388
  %call59 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr58), !dbg !3389
  %64 = load i32, i32* %ma, align 4, !dbg !3390
  %add60 = add nsw i32 %64, %call59, !dbg !3390
  store i32 %add60, i32* %ma, align 4, !dbg !3390
  br label %for.cond35, !dbg !3391, !llvm.loop !3392

for.end:                                          ; preds = %for.cond35
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3394
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %65, i32 0, i32 29, !dbg !3395
  %66 = load i16, i16* %lheight_dpi, align 2, !dbg !3395
  %conv61 = sext i16 %66 to i32, !dbg !3394
  %67 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3396
  %lheight_dpi62 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %67, i32 0, i32 29, !dbg !3396
  %68 = load i16, i16* %lheight_dpi62, align 2, !dbg !3396
  %conv63 = sext i16 %68 to i32, !dbg !3396
  %conv64 = sitofp i32 %conv63 to float, !dbg !3396
  %mul = fmul float 0x3FD3333340000000, %conv64, !dbg !3396
  %conv65 = fptosi float %mul to i32, !dbg !3396
  %add66 = add nsw i32 %conv61, %conv65, !dbg !3397
  %69 = load i32, i32* %y.addr, align 4, !dbg !3398
  %sub67 = sub nsw i32 %69, %add66, !dbg !3398
  store i32 %sub67, i32* %y.addr, align 4, !dbg !3398
  %70 = load i32, i32* %basex, align 4, !dbg !3399
  store i32 %70, i32* %x.addr, align 4, !dbg !3400
  %71 = load i32, i32* %lines, align 4, !dbg !3401
  %inc68 = add nsw i32 %71, 1, !dbg !3401
  store i32 %inc68, i32* %lines, align 4, !dbg !3401
  %72 = load i32, i32* %fpos, align 4, !dbg !3402
  store i32 %72, i32* %fstart, align 4, !dbg !3403
  %73 = load i32, i32* %mend, align 4, !dbg !3404
  store i32 %73, i32* %mstart, align 4, !dbg !3405
  %74 = load i8*, i8** %str.addr, align 8, !dbg !3406
  %75 = load i32, i32* %mend, align 4, !dbg !3407
  %idx.ext69 = sext i32 %75 to i64, !dbg !3408
  %add.ptr70 = getelementptr inbounds i8, i8* %74, i64 %idx.ext69, !dbg !3408
  %76 = load i32, i32* %max, align 4, !dbg !3409
  %call71 = call i8* @txt_utf8_forward_columns(i8* %add.ptr70, i32 %76, i32* %padding), !dbg !3410
  %77 = load i8*, i8** %str.addr, align 8, !dbg !3411
  %sub.ptr.lhs.cast72 = ptrtoint i8* %call71 to i64, !dbg !3412
  %sub.ptr.rhs.cast73 = ptrtoint i8* %77 to i64, !dbg !3412
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !3412
  %conv75 = trunc i64 %sub.ptr.sub74 to i32, !dbg !3410
  store i32 %conv75, i32* %mend, align 4, !dbg !3413
  %78 = load i32, i32* %max, align 4, !dbg !3414
  %79 = load i32, i32* %padding, align 4, !dbg !3415
  %sub76 = sub nsw i32 %78, %79, !dbg !3416
  %80 = load i32, i32* %wrap, align 4, !dbg !3417
  %add77 = add nsw i32 %80, %sub76, !dbg !3417
  store i32 %add77, i32* %wrap, align 4, !dbg !3417
  store i32 %add77, i32* %end, align 4, !dbg !3418
  %81 = load i32, i32* %y.addr, align 4, !dbg !3419
  %cmp78 = icmp sle i32 %81, 0, !dbg !3421
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !3422

if.then80:                                        ; preds = %for.end
  br label %for.end103, !dbg !3423

if.end81:                                         ; preds = %for.end
  br label %if.end96, !dbg !3424

if.else:                                          ; preds = %for.body
  %82 = load i8*, i8** %str.addr, align 8, !dbg !3425
  %83 = load i32, i32* %mi, align 4, !dbg !3427
  %idxprom82 = sext i32 %83 to i64, !dbg !3425
  %arrayidx83 = getelementptr inbounds i8, i8* %82, i64 %idxprom82, !dbg !3425
  %84 = load i8, i8* %arrayidx83, align 1, !dbg !3425
  %conv84 = zext i8 %84 to i32, !dbg !3425
  %cmp85 = icmp eq i32 %conv84, 32, !dbg !3428
  br i1 %cmp85, label %if.then92, label %lor.lhs.false, !dbg !3429

lor.lhs.false:                                    ; preds = %if.else
  %85 = load i8*, i8** %str.addr, align 8, !dbg !3430
  %86 = load i32, i32* %mi, align 4, !dbg !3431
  %idxprom87 = sext i32 %86 to i64, !dbg !3430
  %arrayidx88 = getelementptr inbounds i8, i8* %85, i64 %idxprom87, !dbg !3430
  %87 = load i8, i8* %arrayidx88, align 1, !dbg !3430
  %conv89 = zext i8 %87 to i32, !dbg !3430
  %cmp90 = icmp eq i32 %conv89, 45, !dbg !3432
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !3433

if.then92:                                        ; preds = %lor.lhs.false, %if.else
  %88 = load i32, i32* %i, align 4, !dbg !3434
  %add93 = add nsw i32 %88, 1, !dbg !3436
  store i32 %add93, i32* %wrap, align 4, !dbg !3437
  %89 = load i32, i32* %mi, align 4, !dbg !3438
  %add94 = add nsw i32 %89, 1, !dbg !3439
  store i32 %add94, i32* %mend, align 4, !dbg !3440
  br label %if.end95, !dbg !3441

if.end95:                                         ; preds = %if.then92, %lor.lhs.false
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end81
  br label %for.inc97, !dbg !3442

for.inc97:                                        ; preds = %if.end96, %if.end24
  %90 = load i32, i32* %columns, align 4, !dbg !3443
  %91 = load i32, i32* %i, align 4, !dbg !3444
  %add98 = add nsw i32 %91, %90, !dbg !3444
  store i32 %add98, i32* %i, align 4, !dbg !3444
  %92 = load i8*, i8** %str.addr, align 8, !dbg !3445
  %93 = load i32, i32* %mi, align 4, !dbg !3446
  %idx.ext99 = sext i32 %93 to i64, !dbg !3447
  %add.ptr100 = getelementptr inbounds i8, i8* %92, i64 %idx.ext99, !dbg !3447
  %call101 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr100), !dbg !3448
  %94 = load i32, i32* %mi, align 4, !dbg !3449
  %add102 = add nsw i32 %94, %call101, !dbg !3449
  store i32 %add102, i32* %mi, align 4, !dbg !3449
  br label %for.cond, !dbg !3450, !llvm.loop !3451

for.end103:                                       ; preds = %if.then80, %for.cond
  %95 = load i32, i32* %fstart, align 4, !dbg !3453
  store i32 %95, i32* %a, align 4, !dbg !3455
  %96 = load i32, i32* %mstart, align 4, !dbg !3456
  store i32 %96, i32* %ma, align 4, !dbg !3457
  br label %for.cond104, !dbg !3458

for.cond104:                                      ; preds = %for.inc132, %for.end103
  %97 = load i8*, i8** %str.addr, align 8, !dbg !3459
  %98 = load i32, i32* %ma, align 4, !dbg !3461
  %idxprom105 = sext i32 %98 to i64, !dbg !3459
  %arrayidx106 = getelementptr inbounds i8, i8* %97, i64 %idxprom105, !dbg !3459
  %99 = load i8, i8* %arrayidx106, align 1, !dbg !3459
  %conv107 = zext i8 %99 to i32, !dbg !3459
  %tobool108 = icmp ne i32 %conv107, 0, !dbg !3459
  br i1 %tobool108, label %land.rhs109, label %land.end112, !dbg !3462

land.rhs109:                                      ; preds = %for.cond104
  %100 = load i32, i32* %y.addr, align 4, !dbg !3463
  %cmp110 = icmp sgt i32 %100, 0, !dbg !3464
  br label %land.end112

land.end112:                                      ; preds = %land.rhs109, %for.cond104
  %101 = phi i1 [ false, %for.cond104 ], [ %cmp110, %land.rhs109 ], !dbg !3465
  br i1 %101, label %for.body114, label %for.end138, !dbg !3466

for.body114:                                      ; preds = %land.end112
  %102 = load i8, i8* %use_syntax, align 1, !dbg !3467
  %tobool115 = icmp ne i8 %102, 0, !dbg !3467
  br i1 %tobool115, label %if.then116, label %if.end127, !dbg !3470

if.then116:                                       ; preds = %for.body114
  %103 = load i8, i8* %fmt_prev, align 1, !dbg !3471
  %conv117 = zext i8 %103 to i32, !dbg !3471
  %104 = load i8*, i8** %format.addr, align 8, !dbg !3474
  %105 = load i32, i32* %a, align 4, !dbg !3475
  %idxprom118 = sext i32 %105 to i64, !dbg !3474
  %arrayidx119 = getelementptr inbounds i8, i8* %104, i64 %idxprom118, !dbg !3474
  %106 = load i8, i8* %arrayidx119, align 1, !dbg !3474
  %conv120 = zext i8 %106 to i32, !dbg !3474
  %cmp121 = icmp ne i32 %conv117, %conv120, !dbg !3476
  br i1 %cmp121, label %if.then123, label %if.end126, !dbg !3477

if.then123:                                       ; preds = %if.then116
  %107 = load i8*, i8** %format.addr, align 8, !dbg !3478
  %108 = load i32, i32* %a, align 4, !dbg !3479
  %idxprom124 = sext i32 %108 to i64, !dbg !3478
  %arrayidx125 = getelementptr inbounds i8, i8* %107, i64 %idxprom124, !dbg !3478
  %109 = load i8, i8* %arrayidx125, align 1, !dbg !3478
  store i8 %109, i8* %fmt_prev, align 1, !dbg !3480
  call void @format_draw_color(i8 zeroext %109), !dbg !3481
  br label %if.end126, !dbg !3481

if.end126:                                        ; preds = %if.then123, %if.then116
  br label %if.end127, !dbg !3482

if.end127:                                        ; preds = %if.end126, %for.body114
  %110 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3483
  %111 = load i32, i32* %x.addr, align 4, !dbg !3484
  %112 = load i32, i32* %y.addr, align 4, !dbg !3485
  %113 = load i8*, i8** %str.addr, align 8, !dbg !3486
  %114 = load i32, i32* %ma, align 4, !dbg !3487
  %idx.ext128 = sext i32 %114 to i64, !dbg !3488
  %add.ptr129 = getelementptr inbounds i8, i8* %113, i64 %idx.ext128, !dbg !3488
  %call130 = call i32 @text_font_draw_character_utf8(%struct.SpaceText* %110, i32 %111, i32 %112, i8* %add.ptr129), !dbg !3489
  %115 = load i32, i32* %x.addr, align 4, !dbg !3490
  %add131 = add nsw i32 %115, %call130, !dbg !3490
  store i32 %add131, i32* %x.addr, align 4, !dbg !3490
  br label %for.inc132, !dbg !3491

for.inc132:                                       ; preds = %if.end127
  %116 = load i32, i32* %a, align 4, !dbg !3492
  %inc133 = add nsw i32 %116, 1, !dbg !3492
  store i32 %inc133, i32* %a, align 4, !dbg !3492
  %117 = load i8*, i8** %str.addr, align 8, !dbg !3493
  %118 = load i32, i32* %ma, align 4, !dbg !3494
  %idx.ext134 = sext i32 %118 to i64, !dbg !3495
  %add.ptr135 = getelementptr inbounds i8, i8* %117, i64 %idx.ext134, !dbg !3495
  %call136 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr135), !dbg !3496
  %119 = load i32, i32* %ma, align 4, !dbg !3497
  %add137 = add nsw i32 %119, %call136, !dbg !3497
  store i32 %add137, i32* %ma, align 4, !dbg !3497
  br label %for.cond104, !dbg !3498, !llvm.loop !3499

for.end138:                                       ; preds = %land.end112
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !3501
  %120 = load i32, i32* %lines, align 4, !dbg !3502
  ret i32 %120, !dbg !3503
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_draw(%struct.SpaceText* %st, i8* %str, i32 %cshift, i32 %maxwidth, i32 %x, i32 %y, i8* %format) #0 !dbg !3504 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %str.addr = alloca i8*, align 8
  %cshift.addr = alloca i32, align 4
  %maxwidth.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %use_syntax = alloca i8, align 1
  %fs = alloca %struct.FlattenString, align 8
  %columns = alloca i32, align 4
  %size = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %padding = alloca i32, align 4
  %amount = alloca i32, align 4
  %in = alloca i8*, align 8
  %a = alloca i32, align 4
  %str_shift = alloca i32, align 4
  %fmt_prev = alloca i8, align 1
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  store i32 %cshift, i32* %cshift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cshift.addr, metadata !3511, metadata !DIExpression()), !dbg !3512
  store i32 %maxwidth, i32* %maxwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxwidth.addr, metadata !3513, metadata !DIExpression()), !dbg !3514
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3519, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.declare(metadata i8* %use_syntax, metadata !3521, metadata !DIExpression()), !dbg !3522
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3523
  %showsyntax = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 17, !dbg !3524
  %1 = load i16, i16* %showsyntax, align 4, !dbg !3524
  %conv = sext i16 %1 to i32, !dbg !3523
  %tobool = icmp ne i32 %conv, 0, !dbg !3523
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3525

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %format.addr, align 8, !dbg !3526
  %tobool1 = icmp ne i8* %2, null, !dbg !3525
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !3527
  %land.ext = zext i1 %3 to i32, !dbg !3525
  %conv2 = trunc i32 %land.ext to i8, !dbg !3528
  store i8 %conv2, i8* %use_syntax, align 1, !dbg !3522
  call void @llvm.dbg.declare(metadata %struct.FlattenString* %fs, metadata !3529, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !3531, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3533, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3535, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3537, metadata !DIExpression()), !dbg !3538
  store i32 0, i32* %w, align 4, !dbg !3538
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !3539, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.declare(metadata i32* %amount, metadata !3541, metadata !DIExpression()), !dbg !3542
  store i32 0, i32* %amount, align 4, !dbg !3542
  call void @llvm.dbg.declare(metadata i8** %in, metadata !3543, metadata !DIExpression()), !dbg !3544
  store i8* null, i8** %in, align 8, !dbg !3544
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3545
  %5 = load i8*, i8** %str.addr, align 8, !dbg !3547
  %call = call i32 @flatten_string(%struct.SpaceText* %4, %struct.FlattenString* %fs, i8* %5), !dbg !3548
  store i32 %call, i32* %n, align 4, !dbg !3549
  %buf = getelementptr inbounds %struct.FlattenString, %struct.FlattenString* %fs, i32 0, i32 2, !dbg !3550
  %6 = load i8*, i8** %buf, align 8, !dbg !3550
  store i8* %6, i8** %str.addr, align 8, !dbg !3551
  br label %for.cond, !dbg !3552

for.cond:                                         ; preds = %for.inc, %land.end
  %7 = load i32, i32* %n, align 4, !dbg !3553
  %cmp = icmp sgt i32 %7, 0, !dbg !3555
  br i1 %cmp, label %for.body, label %for.end, !dbg !3556

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %str.addr, align 8, !dbg !3557
  %call4 = call i32 @BLI_str_utf8_char_width_safe(i8* %8), !dbg !3559
  store i32 %call4, i32* %columns, align 4, !dbg !3560
  %9 = load i8*, i8** %str.addr, align 8, !dbg !3561
  %call5 = call i32 @BLI_str_utf8_size_safe(i8* %9), !dbg !3562
  store i32 %call5, i32* %size, align 4, !dbg !3563
  %10 = load i8*, i8** %in, align 8, !dbg !3564
  %tobool6 = icmp ne i8* %10, null, !dbg !3564
  br i1 %tobool6, label %if.end13, label %if.then, !dbg !3566

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %w, align 4, !dbg !3567
  %12 = load i32, i32* %cshift.addr, align 4, !dbg !3570
  %cmp7 = icmp sge i32 %11, %12, !dbg !3571
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !3572

if.then9:                                         ; preds = %if.then
  %13 = load i32, i32* %w, align 4, !dbg !3573
  %14 = load i32, i32* %cshift.addr, align 4, !dbg !3575
  %sub = sub nsw i32 %13, %14, !dbg !3576
  store i32 %sub, i32* %padding, align 4, !dbg !3577
  %15 = load i8*, i8** %str.addr, align 8, !dbg !3578
  store i8* %15, i8** %in, align 8, !dbg !3579
  br label %if.end12, !dbg !3580

if.else:                                          ; preds = %if.then
  %16 = load i8*, i8** %format.addr, align 8, !dbg !3581
  %tobool10 = icmp ne i8* %16, null, !dbg !3581
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3583

if.then11:                                        ; preds = %if.else
  %17 = load i8*, i8** %format.addr, align 8, !dbg !3584
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1, !dbg !3584
  store i8* %incdec.ptr, i8** %format.addr, align 8, !dbg !3584
  br label %if.end, !dbg !3585

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then9
  br label %if.end13, !dbg !3586

if.end13:                                         ; preds = %if.end12, %for.body
  %18 = load i8*, i8** %in, align 8, !dbg !3587
  %tobool14 = icmp ne i8* %18, null, !dbg !3587
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !3589

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %maxwidth.addr, align 4, !dbg !3590
  %tobool16 = icmp ne i32 %19, 0, !dbg !3590
  br i1 %tobool16, label %land.lhs.true, label %if.end21, !dbg !3593

land.lhs.true:                                    ; preds = %if.then15
  %20 = load i32, i32* %w, align 4, !dbg !3594
  %21 = load i32, i32* %columns, align 4, !dbg !3595
  %add = add nsw i32 %20, %21, !dbg !3596
  %22 = load i32, i32* %cshift.addr, align 4, !dbg !3597
  %23 = load i32, i32* %maxwidth.addr, align 4, !dbg !3598
  %add17 = add nsw i32 %22, %23, !dbg !3599
  %cmp18 = icmp sgt i32 %add, %add17, !dbg !3600
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3601

if.then20:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !3602

if.end21:                                         ; preds = %land.lhs.true, %if.then15
  %24 = load i32, i32* %amount, align 4, !dbg !3603
  %inc = add nsw i32 %24, 1, !dbg !3603
  store i32 %inc, i32* %amount, align 4, !dbg !3603
  br label %if.end22, !dbg !3604

if.end22:                                         ; preds = %if.end21, %if.end13
  %25 = load i32, i32* %columns, align 4, !dbg !3605
  %26 = load i32, i32* %w, align 4, !dbg !3606
  %add23 = add nsw i32 %26, %25, !dbg !3606
  store i32 %add23, i32* %w, align 4, !dbg !3606
  %27 = load i32, i32* %size, align 4, !dbg !3607
  %28 = load i8*, i8** %str.addr, align 8, !dbg !3608
  %idx.ext = sext i32 %27 to i64, !dbg !3608
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !3608
  store i8* %add.ptr, i8** %str.addr, align 8, !dbg !3608
  br label %for.inc, !dbg !3609

for.inc:                                          ; preds = %if.end22
  %29 = load i32, i32* %n, align 4, !dbg !3610
  %dec = add nsw i32 %29, -1, !dbg !3610
  store i32 %dec, i32* %n, align 4, !dbg !3610
  br label %for.cond, !dbg !3611, !llvm.loop !3612

for.end:                                          ; preds = %if.then20, %for.cond
  %30 = load i8*, i8** %in, align 8, !dbg !3614
  %tobool24 = icmp ne i8* %30, null, !dbg !3614
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !3616

if.then25:                                        ; preds = %for.end
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !3617
  br label %return, !dbg !3619

if.end26:                                         ; preds = %for.end
  %31 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3620
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %31, i32 0, i32 12, !dbg !3621
  %32 = load i8, i8* %cwidth, align 2, !dbg !3621
  %conv27 = zext i8 %32 to i32, !dbg !3620
  %33 = load i32, i32* %padding, align 4, !dbg !3622
  %mul = mul nsw i32 %conv27, %33, !dbg !3623
  %34 = load i32, i32* %x.addr, align 4, !dbg !3624
  %add28 = add nsw i32 %34, %mul, !dbg !3624
  store i32 %add28, i32* %x.addr, align 4, !dbg !3624
  %35 = load i8, i8* %use_syntax, align 1, !dbg !3625
  %tobool29 = icmp ne i8 %35, 0, !dbg !3625
  br i1 %tobool29, label %if.then30, label %if.else54, !dbg !3627

if.then30:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3628, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.declare(metadata i32* %str_shift, metadata !3631, metadata !DIExpression()), !dbg !3632
  store i32 0, i32* %str_shift, align 4, !dbg !3632
  call void @llvm.dbg.declare(metadata i8* %fmt_prev, metadata !3633, metadata !DIExpression()), !dbg !3634
  store i8 -1, i8* %fmt_prev, align 1, !dbg !3634
  store i32 0, i32* %a, align 4, !dbg !3635
  br label %for.cond31, !dbg !3637

for.cond31:                                       ; preds = %for.inc51, %if.then30
  %36 = load i32, i32* %a, align 4, !dbg !3638
  %37 = load i32, i32* %amount, align 4, !dbg !3640
  %cmp32 = icmp slt i32 %36, %37, !dbg !3641
  br i1 %cmp32, label %for.body34, label %for.end53, !dbg !3642

for.body34:                                       ; preds = %for.cond31
  %38 = load i8*, i8** %format.addr, align 8, !dbg !3643
  %39 = load i32, i32* %a, align 4, !dbg !3646
  %idxprom = sext i32 %39 to i64, !dbg !3643
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %idxprom, !dbg !3643
  %40 = load i8, i8* %arrayidx, align 1, !dbg !3643
  %conv35 = zext i8 %40 to i32, !dbg !3643
  %41 = load i8, i8* %fmt_prev, align 1, !dbg !3647
  %conv36 = zext i8 %41 to i32, !dbg !3647
  %cmp37 = icmp ne i32 %conv35, %conv36, !dbg !3648
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !3649

if.then39:                                        ; preds = %for.body34
  %42 = load i8*, i8** %format.addr, align 8, !dbg !3650
  %43 = load i32, i32* %a, align 4, !dbg !3651
  %idxprom40 = sext i32 %43 to i64, !dbg !3650
  %arrayidx41 = getelementptr inbounds i8, i8* %42, i64 %idxprom40, !dbg !3650
  %44 = load i8, i8* %arrayidx41, align 1, !dbg !3650
  store i8 %44, i8* %fmt_prev, align 1, !dbg !3652
  call void @format_draw_color(i8 zeroext %44), !dbg !3653
  br label %if.end42, !dbg !3653

if.end42:                                         ; preds = %if.then39, %for.body34
  %45 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3654
  %46 = load i32, i32* %x.addr, align 4, !dbg !3655
  %47 = load i32, i32* %y.addr, align 4, !dbg !3656
  %48 = load i8*, i8** %in, align 8, !dbg !3657
  %49 = load i32, i32* %str_shift, align 4, !dbg !3658
  %idx.ext43 = sext i32 %49 to i64, !dbg !3659
  %add.ptr44 = getelementptr inbounds i8, i8* %48, i64 %idx.ext43, !dbg !3659
  %call45 = call i32 @text_font_draw_character_utf8(%struct.SpaceText* %45, i32 %46, i32 %47, i8* %add.ptr44), !dbg !3660
  %50 = load i32, i32* %x.addr, align 4, !dbg !3661
  %add46 = add nsw i32 %50, %call45, !dbg !3661
  store i32 %add46, i32* %x.addr, align 4, !dbg !3661
  %51 = load i8*, i8** %in, align 8, !dbg !3662
  %52 = load i32, i32* %str_shift, align 4, !dbg !3663
  %idx.ext47 = sext i32 %52 to i64, !dbg !3664
  %add.ptr48 = getelementptr inbounds i8, i8* %51, i64 %idx.ext47, !dbg !3664
  %call49 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr48), !dbg !3665
  %53 = load i32, i32* %str_shift, align 4, !dbg !3666
  %add50 = add nsw i32 %53, %call49, !dbg !3666
  store i32 %add50, i32* %str_shift, align 4, !dbg !3666
  br label %for.inc51, !dbg !3667

for.inc51:                                        ; preds = %if.end42
  %54 = load i32, i32* %a, align 4, !dbg !3668
  %inc52 = add nsw i32 %54, 1, !dbg !3668
  store i32 %inc52, i32* %a, align 4, !dbg !3668
  br label %for.cond31, !dbg !3669, !llvm.loop !3670

for.end53:                                        ; preds = %for.cond31
  br label %if.end56, !dbg !3672

if.else54:                                        ; preds = %if.end26
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3673
  %56 = load i32, i32* %x.addr, align 4, !dbg !3675
  %57 = load i32, i32* %y.addr, align 4, !dbg !3676
  %58 = load i8*, i8** %in, align 8, !dbg !3677
  %call55 = call i32 @text_font_draw(%struct.SpaceText* %55, i32 %56, i32 %57, i8* %58), !dbg !3678
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %for.end53
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !3679
  br label %return, !dbg !3680

return:                                           ; preds = %if.end56, %if.then25
  ret void, !dbg !3680
}

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex2i(i32, i32) #2

declare dso_local void @glEnd() #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_brackets(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !3681 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %startl = alloca %struct.TextLine*, align 8
  %endl = alloca %struct.TextLine*, align 8
  %linep = alloca %struct.TextLine*, align 8
  %text = alloca %struct.Text*, align 8
  %b = alloca i32, align 4
  %fc = alloca i32, align 4
  %find = alloca i32, align 4
  %stack = alloca i32, align 4
  %viewc = alloca i32, align 4
  %viewl = alloca i32, align 4
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %startc = alloca i32, align 4
  %endc = alloca i32, align 4
  %c = alloca i32, align 4
  %ch = alloca i8, align 1
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3684, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.declare(metadata %struct.TextLine** %startl, metadata !3686, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata %struct.TextLine** %endl, metadata !3688, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linep, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3692, metadata !DIExpression()), !dbg !3693
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3694
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !3695
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !3695
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !3693
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3696, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %fc, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata i32* %find, metadata !3700, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.declare(metadata i32* %stack, metadata !3702, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.declare(metadata i32* %viewc, metadata !3704, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.declare(metadata i32* %viewl, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !3708, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !3710, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %startc, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata i32* %endc, metadata !3718, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3720, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !3722, metadata !DIExpression()), !dbg !3723
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3724
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 5, !dbg !3726
  %3 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !3726
  %tobool = icmp ne %struct.TextLine* %3, null, !dbg !3724
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3727

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !3728
  %showsyntax = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 17, !dbg !3729
  %5 = load i16, i16* %showsyntax, align 4, !dbg !3729
  %tobool2 = icmp ne i16 %5, 0, !dbg !3728
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3730

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end315, !dbg !3731

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3732
  %curl3 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !3733
  %7 = load %struct.TextLine*, %struct.TextLine** %curl3, align 8, !dbg !3733
  store %struct.TextLine* %7, %struct.TextLine** %startl, align 8, !dbg !3734
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3735
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 7, !dbg !3736
  %9 = load i32, i32* %curc, align 8, !dbg !3736
  store i32 %9, i32* %startc, align 4, !dbg !3737
  %10 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !3738
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 2, !dbg !3739
  %11 = load i8*, i8** %line, align 8, !dbg !3739
  %12 = load i32, i32* %startc, align 4, !dbg !3740
  %idxprom = sext i32 %12 to i64, !dbg !3738
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom, !dbg !3738
  %13 = load i8, i8* %arrayidx, align 1, !dbg !3738
  %call = call i32 @text_check_bracket(i8 zeroext %13), !dbg !3741
  store i32 %call, i32* %b, align 4, !dbg !3742
  %14 = load i32, i32* %b, align 4, !dbg !3743
  %cmp = icmp eq i32 %14, 0, !dbg !3745
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !3746

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32, i32* %startc, align 4, !dbg !3747
  %cmp4 = icmp sgt i32 %15, 0, !dbg !3748
  br i1 %cmp4, label %if.then5, label %if.end10, !dbg !3749

if.then5:                                         ; preds = %land.lhs.true
  %16 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !3750
  %line6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 2, !dbg !3751
  %17 = load i8*, i8** %line6, align 8, !dbg !3751
  %18 = load i32, i32* %startc, align 4, !dbg !3752
  %dec = add nsw i32 %18, -1, !dbg !3752
  store i32 %dec, i32* %startc, align 4, !dbg !3752
  %idxprom7 = sext i32 %dec to i64, !dbg !3750
  %arrayidx8 = getelementptr inbounds i8, i8* %17, i64 %idxprom7, !dbg !3750
  %19 = load i8, i8* %arrayidx8, align 1, !dbg !3750
  %call9 = call i32 @text_check_bracket(i8 zeroext %19), !dbg !3753
  store i32 %call9, i32* %b, align 4, !dbg !3754
  br label %if.end10, !dbg !3755

if.end10:                                         ; preds = %if.then5, %land.lhs.true, %if.end
  %20 = load i32, i32* %b, align 4, !dbg !3756
  %cmp11 = icmp eq i32 %20, 0, !dbg !3758
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !3759

if.then12:                                        ; preds = %if.end10
  br label %if.end315, !dbg !3760

if.end13:                                         ; preds = %if.end10
  %21 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !3761
  store %struct.TextLine* %21, %struct.TextLine** %linep, align 8, !dbg !3762
  %22 = load i32, i32* %startc, align 4, !dbg !3763
  store i32 %22, i32* %c, align 4, !dbg !3764
  %23 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3765
  %line14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 2, !dbg !3766
  %24 = load i8*, i8** %line14, align 8, !dbg !3766
  %25 = load i32, i32* %startc, align 4, !dbg !3767
  %call15 = call i32 @txt_utf8_offset_to_index(i8* %24, i32 %25), !dbg !3768
  store i32 %call15, i32* %fc, align 4, !dbg !3769
  store %struct.TextLine* null, %struct.TextLine** %endl, align 8, !dbg !3770
  store i32 -1, i32* %endc, align 4, !dbg !3771
  %26 = load i32, i32* %b, align 4, !dbg !3772
  %sub = sub nsw i32 0, %26, !dbg !3773
  store i32 %sub, i32* %find, align 4, !dbg !3774
  store i32 0, i32* %stack, align 4, !dbg !3775
  %27 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3776
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 3, !dbg !3778
  %28 = load i8*, i8** %format, align 8, !dbg !3778
  %tobool16 = icmp ne i8* %28, null, !dbg !3776
  br i1 %tobool16, label %lor.lhs.false17, label %if.then30, !dbg !3779

lor.lhs.false17:                                  ; preds = %if.end13
  %29 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3780
  %format18 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %29, i32 0, i32 3, !dbg !3781
  %30 = load i8*, i8** %format18, align 8, !dbg !3781
  %31 = load i32, i32* %fc, align 4, !dbg !3782
  %idxprom19 = sext i32 %31 to i64, !dbg !3780
  %arrayidx20 = getelementptr inbounds i8, i8* %30, i64 %idxprom19, !dbg !3780
  %32 = load i8, i8* %arrayidx20, align 1, !dbg !3780
  %conv = zext i8 %32 to i32, !dbg !3780
  %cmp21 = icmp eq i32 %conv, 108, !dbg !3783
  br i1 %cmp21, label %if.then30, label %lor.lhs.false23, !dbg !3784

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %33 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3785
  %format24 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %33, i32 0, i32 3, !dbg !3786
  %34 = load i8*, i8** %format24, align 8, !dbg !3786
  %35 = load i32, i32* %fc, align 4, !dbg !3787
  %idxprom25 = sext i32 %35 to i64, !dbg !3785
  %arrayidx26 = getelementptr inbounds i8, i8* %34, i64 %idxprom25, !dbg !3785
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !3785
  %conv27 = zext i8 %36 to i32, !dbg !3785
  %cmp28 = icmp eq i32 %conv27, 35, !dbg !3788
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !3789

if.then30:                                        ; preds = %lor.lhs.false23, %lor.lhs.false17, %if.end13
  br label %if.end315, !dbg !3790

if.end31:                                         ; preds = %lor.lhs.false23
  %37 = load i32, i32* %b, align 4, !dbg !3791
  %cmp32 = icmp sgt i32 %37, 0, !dbg !3793
  br i1 %cmp32, label %if.then34, label %if.else89, !dbg !3794

if.then34:                                        ; preds = %if.end31
  %38 = load i32, i32* %fc, align 4, !dbg !3795
  %inc = add nsw i32 %38, 1, !dbg !3795
  store i32 %inc, i32* %fc, align 4, !dbg !3795
  %39 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3797
  %line35 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %39, i32 0, i32 2, !dbg !3798
  %40 = load i8*, i8** %line35, align 8, !dbg !3798
  %41 = load i32, i32* %c, align 4, !dbg !3799
  %idx.ext = sext i32 %41 to i64, !dbg !3800
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %idx.ext, !dbg !3800
  %call36 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr), !dbg !3801
  %42 = load i32, i32* %c, align 4, !dbg !3802
  %add = add nsw i32 %42, %call36, !dbg !3802
  store i32 %add, i32* %c, align 4, !dbg !3802
  br label %while.cond, !dbg !3803

while.cond:                                       ; preds = %if.end87, %if.then34
  %43 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3804
  %tobool37 = icmp ne %struct.TextLine* %43, null, !dbg !3803
  br i1 %tobool37, label %while.body, label %while.end88, !dbg !3803

while.body:                                       ; preds = %while.cond
  br label %while.cond38, !dbg !3805

while.cond38:                                     ; preds = %if.end78, %while.body
  %44 = load i32, i32* %c, align 4, !dbg !3807
  %45 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3808
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 4, !dbg !3809
  %46 = load i32, i32* %len, align 8, !dbg !3809
  %cmp39 = icmp slt i32 %44, %46, !dbg !3810
  br i1 %cmp39, label %while.body41, label %while.end, !dbg !3805

while.body41:                                     ; preds = %while.cond38
  %47 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3811
  %format42 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %47, i32 0, i32 3, !dbg !3814
  %48 = load i8*, i8** %format42, align 8, !dbg !3814
  %tobool43 = icmp ne i8* %48, null, !dbg !3811
  br i1 %tobool43, label %land.lhs.true44, label %if.end78, !dbg !3815

land.lhs.true44:                                  ; preds = %while.body41
  %49 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3816
  %format45 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 3, !dbg !3817
  %50 = load i8*, i8** %format45, align 8, !dbg !3817
  %51 = load i32, i32* %fc, align 4, !dbg !3818
  %idxprom46 = sext i32 %51 to i64, !dbg !3816
  %arrayidx47 = getelementptr inbounds i8, i8* %50, i64 %idxprom46, !dbg !3816
  %52 = load i8, i8* %arrayidx47, align 1, !dbg !3816
  %conv48 = zext i8 %52 to i32, !dbg !3816
  %cmp49 = icmp ne i32 %conv48, 108, !dbg !3819
  br i1 %cmp49, label %land.lhs.true51, label %if.end78, !dbg !3820

land.lhs.true51:                                  ; preds = %land.lhs.true44
  %53 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3821
  %format52 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %53, i32 0, i32 3, !dbg !3822
  %54 = load i8*, i8** %format52, align 8, !dbg !3822
  %55 = load i32, i32* %fc, align 4, !dbg !3823
  %idxprom53 = sext i32 %55 to i64, !dbg !3821
  %arrayidx54 = getelementptr inbounds i8, i8* %54, i64 %idxprom53, !dbg !3821
  %56 = load i8, i8* %arrayidx54, align 1, !dbg !3821
  %conv55 = zext i8 %56 to i32, !dbg !3821
  %cmp56 = icmp ne i32 %conv55, 35, !dbg !3824
  br i1 %cmp56, label %if.then58, label %if.end78, !dbg !3825

if.then58:                                        ; preds = %land.lhs.true51
  %57 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3826
  %line59 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %57, i32 0, i32 2, !dbg !3828
  %58 = load i8*, i8** %line59, align 8, !dbg !3828
  %59 = load i32, i32* %c, align 4, !dbg !3829
  %idxprom60 = sext i32 %59 to i64, !dbg !3826
  %arrayidx61 = getelementptr inbounds i8, i8* %58, i64 %idxprom60, !dbg !3826
  %60 = load i8, i8* %arrayidx61, align 1, !dbg !3826
  %call62 = call i32 @text_check_bracket(i8 zeroext %60), !dbg !3830
  store i32 %call62, i32* %b, align 4, !dbg !3831
  %61 = load i32, i32* %b, align 4, !dbg !3832
  %62 = load i32, i32* %find, align 4, !dbg !3834
  %cmp63 = icmp eq i32 %61, %62, !dbg !3835
  br i1 %cmp63, label %if.then65, label %if.else, !dbg !3836

if.then65:                                        ; preds = %if.then58
  %63 = load i32, i32* %stack, align 4, !dbg !3837
  %cmp66 = icmp eq i32 %63, 0, !dbg !3840
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !3841

if.then68:                                        ; preds = %if.then65
  %64 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3842
  store %struct.TextLine* %64, %struct.TextLine** %endl, align 8, !dbg !3844
  %65 = load i32, i32* %c, align 4, !dbg !3845
  store i32 %65, i32* %endc, align 4, !dbg !3846
  br label %while.end, !dbg !3847

if.end69:                                         ; preds = %if.then65
  %66 = load i32, i32* %stack, align 4, !dbg !3848
  %dec70 = add nsw i32 %66, -1, !dbg !3848
  store i32 %dec70, i32* %stack, align 4, !dbg !3848
  br label %if.end77, !dbg !3849

if.else:                                          ; preds = %if.then58
  %67 = load i32, i32* %b, align 4, !dbg !3850
  %68 = load i32, i32* %find, align 4, !dbg !3852
  %sub71 = sub nsw i32 0, %68, !dbg !3853
  %cmp72 = icmp eq i32 %67, %sub71, !dbg !3854
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !3855

if.then74:                                        ; preds = %if.else
  %69 = load i32, i32* %stack, align 4, !dbg !3856
  %inc75 = add nsw i32 %69, 1, !dbg !3856
  store i32 %inc75, i32* %stack, align 4, !dbg !3856
  br label %if.end76, !dbg !3858

if.end76:                                         ; preds = %if.then74, %if.else
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end69
  br label %if.end78, !dbg !3859

if.end78:                                         ; preds = %if.end77, %land.lhs.true51, %land.lhs.true44, %while.body41
  %70 = load i32, i32* %fc, align 4, !dbg !3860
  %inc79 = add nsw i32 %70, 1, !dbg !3860
  store i32 %inc79, i32* %fc, align 4, !dbg !3860
  %71 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3861
  %line80 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %71, i32 0, i32 2, !dbg !3862
  %72 = load i8*, i8** %line80, align 8, !dbg !3862
  %73 = load i32, i32* %c, align 4, !dbg !3863
  %idx.ext81 = sext i32 %73 to i64, !dbg !3864
  %add.ptr82 = getelementptr inbounds i8, i8* %72, i64 %idx.ext81, !dbg !3864
  %call83 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr82), !dbg !3865
  %74 = load i32, i32* %c, align 4, !dbg !3866
  %add84 = add nsw i32 %74, %call83, !dbg !3866
  store i32 %add84, i32* %c, align 4, !dbg !3866
  br label %while.cond38, !dbg !3805, !llvm.loop !3867

while.end:                                        ; preds = %if.then68, %while.cond38
  %75 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !3869
  %tobool85 = icmp ne %struct.TextLine* %75, null, !dbg !3869
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !3871

if.then86:                                        ; preds = %while.end
  br label %while.end88, !dbg !3872

if.end87:                                         ; preds = %while.end
  %76 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3873
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %76, i32 0, i32 0, !dbg !3874
  %77 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !3874
  store %struct.TextLine* %77, %struct.TextLine** %linep, align 8, !dbg !3875
  store i32 0, i32* %c, align 4, !dbg !3876
  store i32 0, i32* %fc, align 4, !dbg !3877
  br label %while.cond, !dbg !3803, !llvm.loop !3878

while.end88:                                      ; preds = %if.then86, %while.cond
  br label %if.end200, !dbg !3880

if.else89:                                        ; preds = %if.end31
  %78 = load i32, i32* %fc, align 4, !dbg !3881
  %dec90 = add nsw i32 %78, -1, !dbg !3881
  store i32 %dec90, i32* %fc, align 4, !dbg !3881
  %79 = load i32, i32* %c, align 4, !dbg !3883
  %cmp91 = icmp sgt i32 %79, 0, !dbg !3885
  br i1 %cmp91, label %if.then93, label %if.end104, !dbg !3886

if.then93:                                        ; preds = %if.else89
  %80 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3887
  %line94 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %80, i32 0, i32 2, !dbg !3888
  %81 = load i8*, i8** %line94, align 8, !dbg !3888
  %82 = load i32, i32* %c, align 4, !dbg !3889
  %idx.ext95 = sext i32 %82 to i64, !dbg !3890
  %add.ptr96 = getelementptr inbounds i8, i8* %81, i64 %idx.ext95, !dbg !3890
  %83 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3891
  %line97 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %83, i32 0, i32 2, !dbg !3892
  %84 = load i8*, i8** %line97, align 8, !dbg !3892
  %85 = load i32, i32* %c, align 4, !dbg !3893
  %idx.ext98 = sext i32 %85 to i64, !dbg !3894
  %add.ptr99 = getelementptr inbounds i8, i8* %84, i64 %idx.ext98, !dbg !3894
  %call100 = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr99), !dbg !3895
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr96 to i64, !dbg !3896
  %sub.ptr.rhs.cast = ptrtoint i8* %call100 to i64, !dbg !3896
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3896
  %86 = load i32, i32* %c, align 4, !dbg !3897
  %conv101 = sext i32 %86 to i64, !dbg !3897
  %sub102 = sub nsw i64 %conv101, %sub.ptr.sub, !dbg !3897
  %conv103 = trunc i64 %sub102 to i32, !dbg !3897
  store i32 %conv103, i32* %c, align 4, !dbg !3897
  br label %if.end104, !dbg !3898

if.end104:                                        ; preds = %if.then93, %if.else89
  br label %while.cond105, !dbg !3899

while.cond105:                                    ; preds = %if.end198, %if.end104
  %87 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3900
  %tobool106 = icmp ne %struct.TextLine* %87, null, !dbg !3899
  br i1 %tobool106, label %while.body107, label %while.end199, !dbg !3899

while.body107:                                    ; preds = %while.cond105
  br label %while.cond108, !dbg !3901

while.cond108:                                    ; preds = %if.end167, %while.body107
  %88 = load i32, i32* %fc, align 4, !dbg !3903
  %cmp109 = icmp sge i32 %88, 0, !dbg !3904
  br i1 %cmp109, label %while.body111, label %while.end168, !dbg !3901

while.body111:                                    ; preds = %while.cond108
  %89 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3905
  %format112 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %89, i32 0, i32 3, !dbg !3908
  %90 = load i8*, i8** %format112, align 8, !dbg !3908
  %tobool113 = icmp ne i8* %90, null, !dbg !3905
  br i1 %tobool113, label %land.lhs.true114, label %if.end149, !dbg !3909

land.lhs.true114:                                 ; preds = %while.body111
  %91 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3910
  %format115 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %91, i32 0, i32 3, !dbg !3911
  %92 = load i8*, i8** %format115, align 8, !dbg !3911
  %93 = load i32, i32* %fc, align 4, !dbg !3912
  %idxprom116 = sext i32 %93 to i64, !dbg !3910
  %arrayidx117 = getelementptr inbounds i8, i8* %92, i64 %idxprom116, !dbg !3910
  %94 = load i8, i8* %arrayidx117, align 1, !dbg !3910
  %conv118 = zext i8 %94 to i32, !dbg !3910
  %cmp119 = icmp ne i32 %conv118, 108, !dbg !3913
  br i1 %cmp119, label %land.lhs.true121, label %if.end149, !dbg !3914

land.lhs.true121:                                 ; preds = %land.lhs.true114
  %95 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3915
  %format122 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %95, i32 0, i32 3, !dbg !3916
  %96 = load i8*, i8** %format122, align 8, !dbg !3916
  %97 = load i32, i32* %fc, align 4, !dbg !3917
  %idxprom123 = sext i32 %97 to i64, !dbg !3915
  %arrayidx124 = getelementptr inbounds i8, i8* %96, i64 %idxprom123, !dbg !3915
  %98 = load i8, i8* %arrayidx124, align 1, !dbg !3915
  %conv125 = zext i8 %98 to i32, !dbg !3915
  %cmp126 = icmp ne i32 %conv125, 35, !dbg !3918
  br i1 %cmp126, label %if.then128, label %if.end149, !dbg !3919

if.then128:                                       ; preds = %land.lhs.true121
  %99 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3920
  %line129 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %99, i32 0, i32 2, !dbg !3922
  %100 = load i8*, i8** %line129, align 8, !dbg !3922
  %101 = load i32, i32* %c, align 4, !dbg !3923
  %idxprom130 = sext i32 %101 to i64, !dbg !3920
  %arrayidx131 = getelementptr inbounds i8, i8* %100, i64 %idxprom130, !dbg !3920
  %102 = load i8, i8* %arrayidx131, align 1, !dbg !3920
  %call132 = call i32 @text_check_bracket(i8 zeroext %102), !dbg !3924
  store i32 %call132, i32* %b, align 4, !dbg !3925
  %103 = load i32, i32* %b, align 4, !dbg !3926
  %104 = load i32, i32* %find, align 4, !dbg !3928
  %cmp133 = icmp eq i32 %103, %104, !dbg !3929
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !3930

if.then135:                                       ; preds = %if.then128
  %105 = load i32, i32* %stack, align 4, !dbg !3931
  %cmp136 = icmp eq i32 %105, 0, !dbg !3934
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !3935

if.then138:                                       ; preds = %if.then135
  %106 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3936
  store %struct.TextLine* %106, %struct.TextLine** %endl, align 8, !dbg !3938
  %107 = load i32, i32* %c, align 4, !dbg !3939
  store i32 %107, i32* %endc, align 4, !dbg !3940
  br label %while.end168, !dbg !3941

if.end139:                                        ; preds = %if.then135
  %108 = load i32, i32* %stack, align 4, !dbg !3942
  %dec140 = add nsw i32 %108, -1, !dbg !3942
  store i32 %dec140, i32* %stack, align 4, !dbg !3942
  br label %if.end148, !dbg !3943

if.else141:                                       ; preds = %if.then128
  %109 = load i32, i32* %b, align 4, !dbg !3944
  %110 = load i32, i32* %find, align 4, !dbg !3946
  %sub142 = sub nsw i32 0, %110, !dbg !3947
  %cmp143 = icmp eq i32 %109, %sub142, !dbg !3948
  br i1 %cmp143, label %if.then145, label %if.end147, !dbg !3949

if.then145:                                       ; preds = %if.else141
  %111 = load i32, i32* %stack, align 4, !dbg !3950
  %inc146 = add nsw i32 %111, 1, !dbg !3950
  store i32 %inc146, i32* %stack, align 4, !dbg !3950
  br label %if.end147, !dbg !3952

if.end147:                                        ; preds = %if.then145, %if.else141
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end139
  br label %if.end149, !dbg !3953

if.end149:                                        ; preds = %if.end148, %land.lhs.true121, %land.lhs.true114, %while.body111
  %112 = load i32, i32* %fc, align 4, !dbg !3954
  %dec150 = add nsw i32 %112, -1, !dbg !3954
  store i32 %dec150, i32* %fc, align 4, !dbg !3954
  %113 = load i32, i32* %c, align 4, !dbg !3955
  %cmp151 = icmp sgt i32 %113, 0, !dbg !3957
  br i1 %cmp151, label %if.then153, label %if.end167, !dbg !3958

if.then153:                                       ; preds = %if.end149
  %114 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3959
  %line154 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %114, i32 0, i32 2, !dbg !3960
  %115 = load i8*, i8** %line154, align 8, !dbg !3960
  %116 = load i32, i32* %c, align 4, !dbg !3961
  %idx.ext155 = sext i32 %116 to i64, !dbg !3962
  %add.ptr156 = getelementptr inbounds i8, i8* %115, i64 %idx.ext155, !dbg !3962
  %117 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3963
  %line157 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %117, i32 0, i32 2, !dbg !3964
  %118 = load i8*, i8** %line157, align 8, !dbg !3964
  %119 = load i32, i32* %c, align 4, !dbg !3965
  %idx.ext158 = sext i32 %119 to i64, !dbg !3966
  %add.ptr159 = getelementptr inbounds i8, i8* %118, i64 %idx.ext158, !dbg !3966
  %call160 = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr159), !dbg !3967
  %sub.ptr.lhs.cast161 = ptrtoint i8* %add.ptr156 to i64, !dbg !3968
  %sub.ptr.rhs.cast162 = ptrtoint i8* %call160 to i64, !dbg !3968
  %sub.ptr.sub163 = sub i64 %sub.ptr.lhs.cast161, %sub.ptr.rhs.cast162, !dbg !3968
  %120 = load i32, i32* %c, align 4, !dbg !3969
  %conv164 = sext i32 %120 to i64, !dbg !3969
  %sub165 = sub nsw i64 %conv164, %sub.ptr.sub163, !dbg !3969
  %conv166 = trunc i64 %sub165 to i32, !dbg !3969
  store i32 %conv166, i32* %c, align 4, !dbg !3969
  br label %if.end167, !dbg !3970

if.end167:                                        ; preds = %if.then153, %if.end149
  br label %while.cond108, !dbg !3901, !llvm.loop !3971

while.end168:                                     ; preds = %if.then138, %while.cond108
  %121 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !3973
  %tobool169 = icmp ne %struct.TextLine* %121, null, !dbg !3973
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !3975

if.then170:                                       ; preds = %while.end168
  br label %while.end199, !dbg !3976

if.end171:                                        ; preds = %while.end168
  %122 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3977
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %122, i32 0, i32 1, !dbg !3978
  %123 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !3978
  store %struct.TextLine* %123, %struct.TextLine** %linep, align 8, !dbg !3979
  %124 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3980
  %tobool172 = icmp ne %struct.TextLine* %124, null, !dbg !3980
  br i1 %tobool172, label %if.then173, label %if.end198, !dbg !3982

if.then173:                                       ; preds = %if.end171
  %125 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3983
  %format174 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %125, i32 0, i32 3, !dbg !3986
  %126 = load i8*, i8** %format174, align 8, !dbg !3986
  %tobool175 = icmp ne i8* %126, null, !dbg !3983
  br i1 %tobool175, label %if.then176, label %if.else181, !dbg !3987

if.then176:                                       ; preds = %if.then173
  %127 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3988
  %format177 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %127, i32 0, i32 3, !dbg !3989
  %128 = load i8*, i8** %format177, align 8, !dbg !3989
  %call178 = call i64 @strlen(i8* %128) #6, !dbg !3990
  %sub179 = sub i64 %call178, 1, !dbg !3991
  %conv180 = trunc i64 %sub179 to i32, !dbg !3990
  store i32 %conv180, i32* %fc, align 4, !dbg !3992
  br label %if.end182, !dbg !3993

if.else181:                                       ; preds = %if.then173
  store i32 -1, i32* %fc, align 4, !dbg !3994
  br label %if.end182

if.end182:                                        ; preds = %if.else181, %if.then176
  %129 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3995
  %len183 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %129, i32 0, i32 4, !dbg !3997
  %130 = load i32, i32* %len183, align 8, !dbg !3997
  %tobool184 = icmp ne i32 %130, 0, !dbg !3995
  br i1 %tobool184, label %if.then185, label %if.else196, !dbg !3998

if.then185:                                       ; preds = %if.end182
  %131 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !3999
  %line186 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %131, i32 0, i32 2, !dbg !4000
  %132 = load i8*, i8** %line186, align 8, !dbg !4000
  %133 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !4001
  %len187 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %133, i32 0, i32 4, !dbg !4002
  %134 = load i32, i32* %len187, align 8, !dbg !4002
  %idx.ext188 = sext i32 %134 to i64, !dbg !4003
  %add.ptr189 = getelementptr inbounds i8, i8* %132, i64 %idx.ext188, !dbg !4003
  %call190 = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr189), !dbg !4004
  %135 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !4005
  %line191 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %135, i32 0, i32 2, !dbg !4006
  %136 = load i8*, i8** %line191, align 8, !dbg !4006
  %sub.ptr.lhs.cast192 = ptrtoint i8* %call190 to i64, !dbg !4007
  %sub.ptr.rhs.cast193 = ptrtoint i8* %136 to i64, !dbg !4007
  %sub.ptr.sub194 = sub i64 %sub.ptr.lhs.cast192, %sub.ptr.rhs.cast193, !dbg !4007
  %conv195 = trunc i64 %sub.ptr.sub194 to i32, !dbg !4004
  store i32 %conv195, i32* %c, align 4, !dbg !4008
  br label %if.end197, !dbg !4009

if.else196:                                       ; preds = %if.end182
  store i32 -1, i32* %fc, align 4, !dbg !4010
  br label %if.end197

if.end197:                                        ; preds = %if.else196, %if.then185
  br label %if.end198, !dbg !4011

if.end198:                                        ; preds = %if.end197, %if.end171
  br label %while.cond105, !dbg !3899, !llvm.loop !4012

while.end199:                                     ; preds = %if.then170, %while.cond105
  br label %if.end200

if.end200:                                        ; preds = %while.end199, %while.end88
  %137 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !4014
  %tobool201 = icmp ne %struct.TextLine* %137, null, !dbg !4014
  br i1 %tobool201, label %lor.lhs.false202, label %if.then205, !dbg !4016

lor.lhs.false202:                                 ; preds = %if.end200
  %138 = load i32, i32* %endc, align 4, !dbg !4017
  %cmp203 = icmp eq i32 %138, -1, !dbg !4018
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !4019

if.then205:                                       ; preds = %lor.lhs.false202, %if.end200
  br label %if.end315, !dbg !4020

if.end206:                                        ; preds = %lor.lhs.false202
  call void @UI_ThemeColor(i32 23), !dbg !4021
  %139 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4022
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %139, i32 0, i32 15, !dbg !4023
  %140 = load i32, i32* %showlinenrs, align 4, !dbg !4023
  %tobool207 = icmp ne i32 %140, 0, !dbg !4022
  br i1 %tobool207, label %cond.true, label %cond.false, !dbg !4022

cond.true:                                        ; preds = %if.end206
  %141 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4024
  %conv208 = sext i16 %141 to i32, !dbg !4024
  %conv209 = sitofp i32 %conv208 to float, !dbg !4024
  %mul = fmul float 5.000000e-01, %conv209, !dbg !4024
  %conv210 = fptosi float %mul to i32, !dbg !4024
  %142 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4025
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %142, i32 0, i32 12, !dbg !4025
  %143 = load i8, i8* %cwidth, align 2, !dbg !4025
  %conv211 = zext i8 %143 to i32, !dbg !4025
  %144 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4025
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %144, i32 0, i32 13, !dbg !4025
  %145 = load i8, i8* %linenrs_tot, align 1, !dbg !4025
  %conv212 = zext i8 %145 to i32, !dbg !4025
  %mul213 = mul nsw i32 %conv211, %conv212, !dbg !4025
  %add214 = add nsw i32 %conv210, %mul213, !dbg !4026
  br label %cond.end, !dbg !4022

cond.false:                                       ; preds = %if.end206
  %146 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4027
  %conv215 = sext i16 %146 to i32, !dbg !4027
  %conv216 = sitofp i32 %conv215 to float, !dbg !4027
  %mul217 = fmul float 5.000000e-01, %conv216, !dbg !4027
  %conv218 = fptosi float %mul217 to i32, !dbg !4027
  br label %cond.end, !dbg !4022

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add214, %cond.true ], [ %conv218, %cond.false ], !dbg !4022
  store i32 %cond, i32* %x, align 4, !dbg !4028
  %147 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4029
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %147, i32 0, i32 6, !dbg !4030
  %148 = load i16, i16* %winy, align 2, !dbg !4030
  %conv219 = sext i16 %148 to i32, !dbg !4029
  %149 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4031
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %149, i32 0, i32 29, !dbg !4032
  %150 = load i16, i16* %lheight_dpi, align 2, !dbg !4032
  %conv220 = sext i16 %150 to i32, !dbg !4031
  %sub221 = sub nsw i32 %conv219, %conv220, !dbg !4033
  store i32 %sub221, i32* %y, align 4, !dbg !4034
  %151 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !4035
  %line222 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %151, i32 0, i32 2, !dbg !4036
  %152 = load i8*, i8** %line222, align 8, !dbg !4036
  %153 = load i32, i32* %startc, align 4, !dbg !4037
  %idxprom223 = sext i32 %153 to i64, !dbg !4035
  %arrayidx224 = getelementptr inbounds i8, i8* %152, i64 %idxprom223, !dbg !4035
  %154 = load i8, i8* %arrayidx224, align 1, !dbg !4035
  store i8 %154, i8* %ch, align 1, !dbg !4038
  %155 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4039
  %156 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4040
  %157 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !4041
  %158 = load i32, i32* %startc, align 4, !dbg !4042
  call void @wrap_offset(%struct.SpaceText* %155, %struct.ARegion* %156, %struct.TextLine* %157, i32 %158, i32* %offl, i32* %offc), !dbg !4043
  %159 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4044
  %160 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !4045
  %line225 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %160, i32 0, i32 2, !dbg !4046
  %161 = load i8*, i8** %line225, align 8, !dbg !4046
  %162 = load i32, i32* %startc, align 4, !dbg !4047
  %call226 = call i32 @text_get_char_pos(%struct.SpaceText* %159, i8* %161, i32 %162), !dbg !4048
  %163 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4049
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %163, i32 0, i32 14, !dbg !4050
  %164 = load i32, i32* %left, align 8, !dbg !4050
  %sub227 = sub nsw i32 %call226, %164, !dbg !4051
  %165 = load i32, i32* %offc, align 4, !dbg !4052
  %add228 = add nsw i32 %sub227, %165, !dbg !4053
  store i32 %add228, i32* %viewc, align 4, !dbg !4054
  %166 = load i32, i32* %viewc, align 4, !dbg !4055
  %cmp229 = icmp sge i32 %166, 0, !dbg !4057
  br i1 %cmp229, label %if.then231, label %if.end266, !dbg !4058

if.then231:                                       ; preds = %cond.end
  %167 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4059
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %167, i32 0, i32 4, !dbg !4061
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !4062
  %168 = load i8*, i8** %first, align 8, !dbg !4062
  %169 = bitcast i8* %168 to %struct.TextLine*, !dbg !4059
  %170 = load %struct.TextLine*, %struct.TextLine** %startl, align 8, !dbg !4063
  %call232 = call i32 @txt_get_span(%struct.TextLine* %169, %struct.TextLine* %170), !dbg !4064
  %171 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4065
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %171, i32 0, i32 7, !dbg !4066
  %172 = load i32, i32* %top, align 8, !dbg !4066
  %sub233 = sub nsw i32 %call232, %172, !dbg !4067
  %173 = load i32, i32* %offl, align 4, !dbg !4068
  %add234 = add nsw i32 %sub233, %173, !dbg !4069
  store i32 %add234, i32* %viewl, align 4, !dbg !4070
  %174 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4071
  %175 = load i32, i32* %x, align 4, !dbg !4072
  %176 = load i32, i32* %viewc, align 4, !dbg !4073
  %177 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4074
  %cwidth235 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %177, i32 0, i32 12, !dbg !4075
  %178 = load i8, i8* %cwidth235, align 2, !dbg !4075
  %conv236 = zext i8 %178 to i32, !dbg !4074
  %mul237 = mul nsw i32 %176, %conv236, !dbg !4076
  %add238 = add nsw i32 %175, %mul237, !dbg !4077
  %179 = load i32, i32* %y, align 4, !dbg !4078
  %180 = load i32, i32* %viewl, align 4, !dbg !4079
  %181 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4080
  %lheight_dpi239 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %181, i32 0, i32 29, !dbg !4081
  %182 = load i16, i16* %lheight_dpi239, align 2, !dbg !4081
  %conv240 = sext i16 %182 to i32, !dbg !4080
  %183 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4082
  %lheight_dpi241 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %183, i32 0, i32 29, !dbg !4082
  %184 = load i16, i16* %lheight_dpi241, align 2, !dbg !4082
  %conv242 = sext i16 %184 to i32, !dbg !4082
  %conv243 = sitofp i32 %conv242 to float, !dbg !4082
  %mul244 = fmul float 0x3FD3333340000000, %conv243, !dbg !4082
  %conv245 = fptosi float %mul244 to i32, !dbg !4082
  %add246 = add nsw i32 %conv240, %conv245, !dbg !4083
  %mul247 = mul nsw i32 %180, %add246, !dbg !4084
  %sub248 = sub nsw i32 %179, %mul247, !dbg !4085
  %185 = load i8, i8* %ch, align 1, !dbg !4086
  %call249 = call i32 @text_font_draw_character(%struct.SpaceText* %174, i32 %add238, i32 %sub248, i8 zeroext %185), !dbg !4087
  %186 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4088
  %187 = load i32, i32* %x, align 4, !dbg !4089
  %188 = load i32, i32* %viewc, align 4, !dbg !4090
  %189 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4091
  %cwidth250 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %189, i32 0, i32 12, !dbg !4092
  %190 = load i8, i8* %cwidth250, align 2, !dbg !4092
  %conv251 = zext i8 %190 to i32, !dbg !4091
  %mul252 = mul nsw i32 %188, %conv251, !dbg !4093
  %add253 = add nsw i32 %187, %mul252, !dbg !4094
  %add254 = add nsw i32 %add253, 1, !dbg !4095
  %191 = load i32, i32* %y, align 4, !dbg !4096
  %192 = load i32, i32* %viewl, align 4, !dbg !4097
  %193 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4098
  %lheight_dpi255 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %193, i32 0, i32 29, !dbg !4099
  %194 = load i16, i16* %lheight_dpi255, align 2, !dbg !4099
  %conv256 = sext i16 %194 to i32, !dbg !4098
  %195 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4100
  %lheight_dpi257 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %195, i32 0, i32 29, !dbg !4100
  %196 = load i16, i16* %lheight_dpi257, align 2, !dbg !4100
  %conv258 = sext i16 %196 to i32, !dbg !4100
  %conv259 = sitofp i32 %conv258 to float, !dbg !4100
  %mul260 = fmul float 0x3FD3333340000000, %conv259, !dbg !4100
  %conv261 = fptosi float %mul260 to i32, !dbg !4100
  %add262 = add nsw i32 %conv256, %conv261, !dbg !4101
  %mul263 = mul nsw i32 %192, %add262, !dbg !4102
  %sub264 = sub nsw i32 %191, %mul263, !dbg !4103
  %197 = load i8, i8* %ch, align 1, !dbg !4104
  %call265 = call i32 @text_font_draw_character(%struct.SpaceText* %186, i32 %add254, i32 %sub264, i8 zeroext %197), !dbg !4105
  br label %if.end266, !dbg !4106

if.end266:                                        ; preds = %if.then231, %cond.end
  %198 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !4107
  %line267 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %198, i32 0, i32 2, !dbg !4108
  %199 = load i8*, i8** %line267, align 8, !dbg !4108
  %200 = load i32, i32* %endc, align 4, !dbg !4109
  %idxprom268 = sext i32 %200 to i64, !dbg !4107
  %arrayidx269 = getelementptr inbounds i8, i8* %199, i64 %idxprom268, !dbg !4107
  %201 = load i8, i8* %arrayidx269, align 1, !dbg !4107
  store i8 %201, i8* %ch, align 1, !dbg !4110
  %202 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4111
  %203 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4112
  %204 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !4113
  %205 = load i32, i32* %endc, align 4, !dbg !4114
  call void @wrap_offset(%struct.SpaceText* %202, %struct.ARegion* %203, %struct.TextLine* %204, i32 %205, i32* %offl, i32* %offc), !dbg !4115
  %206 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4116
  %207 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !4117
  %line270 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %207, i32 0, i32 2, !dbg !4118
  %208 = load i8*, i8** %line270, align 8, !dbg !4118
  %209 = load i32, i32* %endc, align 4, !dbg !4119
  %call271 = call i32 @text_get_char_pos(%struct.SpaceText* %206, i8* %208, i32 %209), !dbg !4120
  %210 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4121
  %left272 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %210, i32 0, i32 14, !dbg !4122
  %211 = load i32, i32* %left272, align 8, !dbg !4122
  %sub273 = sub nsw i32 %call271, %211, !dbg !4123
  %212 = load i32, i32* %offc, align 4, !dbg !4124
  %add274 = add nsw i32 %sub273, %212, !dbg !4125
  store i32 %add274, i32* %viewc, align 4, !dbg !4126
  %213 = load i32, i32* %viewc, align 4, !dbg !4127
  %cmp275 = icmp sge i32 %213, 0, !dbg !4129
  br i1 %cmp275, label %if.then277, label %if.end315, !dbg !4130

if.then277:                                       ; preds = %if.end266
  %214 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4131
  %lines278 = getelementptr inbounds %struct.Text, %struct.Text* %214, i32 0, i32 4, !dbg !4133
  %first279 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines278, i32 0, i32 0, !dbg !4134
  %215 = load i8*, i8** %first279, align 8, !dbg !4134
  %216 = bitcast i8* %215 to %struct.TextLine*, !dbg !4131
  %217 = load %struct.TextLine*, %struct.TextLine** %endl, align 8, !dbg !4135
  %call280 = call i32 @txt_get_span(%struct.TextLine* %216, %struct.TextLine* %217), !dbg !4136
  %218 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4137
  %top281 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %218, i32 0, i32 7, !dbg !4138
  %219 = load i32, i32* %top281, align 8, !dbg !4138
  %sub282 = sub nsw i32 %call280, %219, !dbg !4139
  %220 = load i32, i32* %offl, align 4, !dbg !4140
  %add283 = add nsw i32 %sub282, %220, !dbg !4141
  store i32 %add283, i32* %viewl, align 4, !dbg !4142
  %221 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4143
  %222 = load i32, i32* %x, align 4, !dbg !4144
  %223 = load i32, i32* %viewc, align 4, !dbg !4145
  %224 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4146
  %cwidth284 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %224, i32 0, i32 12, !dbg !4147
  %225 = load i8, i8* %cwidth284, align 2, !dbg !4147
  %conv285 = zext i8 %225 to i32, !dbg !4146
  %mul286 = mul nsw i32 %223, %conv285, !dbg !4148
  %add287 = add nsw i32 %222, %mul286, !dbg !4149
  %226 = load i32, i32* %y, align 4, !dbg !4150
  %227 = load i32, i32* %viewl, align 4, !dbg !4151
  %228 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4152
  %lheight_dpi288 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %228, i32 0, i32 29, !dbg !4153
  %229 = load i16, i16* %lheight_dpi288, align 2, !dbg !4153
  %conv289 = sext i16 %229 to i32, !dbg !4152
  %230 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4154
  %lheight_dpi290 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %230, i32 0, i32 29, !dbg !4154
  %231 = load i16, i16* %lheight_dpi290, align 2, !dbg !4154
  %conv291 = sext i16 %231 to i32, !dbg !4154
  %conv292 = sitofp i32 %conv291 to float, !dbg !4154
  %mul293 = fmul float 0x3FD3333340000000, %conv292, !dbg !4154
  %conv294 = fptosi float %mul293 to i32, !dbg !4154
  %add295 = add nsw i32 %conv289, %conv294, !dbg !4155
  %mul296 = mul nsw i32 %227, %add295, !dbg !4156
  %sub297 = sub nsw i32 %226, %mul296, !dbg !4157
  %232 = load i8, i8* %ch, align 1, !dbg !4158
  %call298 = call i32 @text_font_draw_character(%struct.SpaceText* %221, i32 %add287, i32 %sub297, i8 zeroext %232), !dbg !4159
  %233 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4160
  %234 = load i32, i32* %x, align 4, !dbg !4161
  %235 = load i32, i32* %viewc, align 4, !dbg !4162
  %236 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4163
  %cwidth299 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %236, i32 0, i32 12, !dbg !4164
  %237 = load i8, i8* %cwidth299, align 2, !dbg !4164
  %conv300 = zext i8 %237 to i32, !dbg !4163
  %mul301 = mul nsw i32 %235, %conv300, !dbg !4165
  %add302 = add nsw i32 %234, %mul301, !dbg !4166
  %add303 = add nsw i32 %add302, 1, !dbg !4167
  %238 = load i32, i32* %y, align 4, !dbg !4168
  %239 = load i32, i32* %viewl, align 4, !dbg !4169
  %240 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4170
  %lheight_dpi304 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %240, i32 0, i32 29, !dbg !4171
  %241 = load i16, i16* %lheight_dpi304, align 2, !dbg !4171
  %conv305 = sext i16 %241 to i32, !dbg !4170
  %242 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4172
  %lheight_dpi306 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %242, i32 0, i32 29, !dbg !4172
  %243 = load i16, i16* %lheight_dpi306, align 2, !dbg !4172
  %conv307 = sext i16 %243 to i32, !dbg !4172
  %conv308 = sitofp i32 %conv307 to float, !dbg !4172
  %mul309 = fmul float 0x3FD3333340000000, %conv308, !dbg !4172
  %conv310 = fptosi float %mul309 to i32, !dbg !4172
  %add311 = add nsw i32 %conv305, %conv310, !dbg !4173
  %mul312 = mul nsw i32 %239, %add311, !dbg !4174
  %sub313 = sub nsw i32 %238, %mul312, !dbg !4175
  %244 = load i8, i8* %ch, align 1, !dbg !4176
  %call314 = call i32 @text_font_draw_character(%struct.SpaceText* %233, i32 %add303, i32 %sub313, i8 zeroext %244), !dbg !4177
  br label %if.end315, !dbg !4178

if.end315:                                        ; preds = %if.then, %if.then12, %if.then30, %if.then205, %if.then277, %if.end266
  ret void, !dbg !4179
}

declare dso_local void @glTranslatef(float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_textscroll(%struct.SpaceText* %st, %struct.rcti* %scroll, %struct.rcti* %back) #0 !dbg !4180 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %scroll.addr = alloca %struct.rcti*, align 8
  %back.addr = alloca %struct.rcti*, align 8
  %btheme = alloca %struct.bTheme*, align 8
  %wcol = alloca %struct.uiWidgetColors, align 2
  %col = alloca [4 x i8], align 1
  %rad = alloca float, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  store %struct.rcti* %scroll, %struct.rcti** %scroll.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %scroll.addr, metadata !4185, metadata !DIExpression()), !dbg !4186
  store %struct.rcti* %back, %struct.rcti** %back.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %back.addr, metadata !4187, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.declare(metadata %struct.bTheme** %btheme, metadata !4189, metadata !DIExpression()), !dbg !4490
  %call = call %struct.bTheme* @UI_GetTheme(), !dbg !4491
  store %struct.bTheme* %call, %struct.bTheme** %btheme, align 8, !dbg !4490
  call void @llvm.dbg.declare(metadata %struct.uiWidgetColors* %wcol, metadata !4492, metadata !DIExpression()), !dbg !4493
  %0 = load %struct.bTheme*, %struct.bTheme** %btheme, align 8, !dbg !4494
  %tui = getelementptr inbounds %struct.bTheme, %struct.bTheme* %0, i32 0, i32 3, !dbg !4495
  %wcol_scroll = getelementptr inbounds %struct.ThemeUI, %struct.ThemeUI* %tui, i32 0, i32 14, !dbg !4496
  %1 = bitcast %struct.uiWidgetColors* %wcol to i8*, !dbg !4496
  %2 = bitcast %struct.uiWidgetColors* %wcol_scroll to i8*, !dbg !4496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 8 %2, i64 32, i1 false), !dbg !4496
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !4497, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.declare(metadata float* %rad, metadata !4500, metadata !DIExpression()), !dbg !4501
  call void @UI_ThemeColor(i32 2), !dbg !4502
  %3 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !4503
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %3, i32 0, i32 0, !dbg !4504
  %4 = load i32, i32* %xmin, align 4, !dbg !4504
  %5 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !4505
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %5, i32 0, i32 2, !dbg !4506
  %6 = load i32, i32* %ymin, align 4, !dbg !4506
  %7 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !4507
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 1, !dbg !4508
  %8 = load i32, i32* %xmax, align 4, !dbg !4508
  %9 = load %struct.rcti*, %struct.rcti** %back.addr, align 8, !dbg !4509
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %9, i32 0, i32 3, !dbg !4510
  %10 = load i32, i32* %ymax, align 4, !dbg !4510
  call void @glRecti(i32 %4, i32 %6, i32 %8, i32 %10), !dbg !4511
  %11 = load %struct.rcti*, %struct.rcti** %scroll.addr, align 8, !dbg !4512
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4513
  %txtbar = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 23, !dbg !4514
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4515
  %flags = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 9, !dbg !4516
  %14 = load i16, i16* %flags, align 8, !dbg !4516
  %conv = sext i16 %14 to i32, !dbg !4515
  %and = and i32 %conv, 1, !dbg !4517
  %tobool = icmp ne i32 %and, 0, !dbg !4518
  %15 = zext i1 %tobool to i64, !dbg !4518
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !4518
  call void @uiWidgetScrollDraw(%struct.uiWidgetColors* %wcol, %struct.rcti* %11, %struct.rcti* %txtbar, i32 %cond), !dbg !4519
  call void @uiSetRoundBox(i32 15), !dbg !4520
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4521
  %txtscroll = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %16, i32 0, i32 22, !dbg !4522
  %call1 = call i32 @BLI_rcti_size_x(%struct.rcti* %txtscroll), !dbg !4523
  %17 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4524
  %txtscroll2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %17, i32 0, i32 22, !dbg !4525
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %txtscroll2), !dbg !4526
  %call4 = call i32 @min_ii(i32 %call1, i32 %call3), !dbg !4527
  %conv5 = sitofp i32 %call4 to float, !dbg !4527
  %mul = fmul float 0x3FD99999A0000000, %conv5, !dbg !4528
  store float %mul, float* %rad, align 4, !dbg !4529
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4530
  call void @UI_GetThemeColor3ubv(i32 23, i8* %arraydecay), !dbg !4531
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !4532
  store i8 48, i8* %arrayidx, align 1, !dbg !4533
  %arraydecay6 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !4534
  call void @glColor4ubv(i8* %arraydecay6), !dbg !4535
  call void @glEnable(i32 3042), !dbg !4536
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4537
  %txtscroll7 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %18, i32 0, i32 22, !dbg !4538
  %xmin8 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll7, i32 0, i32 0, !dbg !4539
  %19 = load i32, i32* %xmin8, align 8, !dbg !4539
  %add = add nsw i32 %19, 1, !dbg !4540
  %conv9 = sitofp i32 %add to float, !dbg !4537
  %20 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4541
  %txtscroll10 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %20, i32 0, i32 22, !dbg !4542
  %ymin11 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll10, i32 0, i32 2, !dbg !4543
  %21 = load i32, i32* %ymin11, align 8, !dbg !4543
  %conv12 = sitofp i32 %21 to float, !dbg !4541
  %22 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4544
  %txtscroll13 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %22, i32 0, i32 22, !dbg !4545
  %xmax14 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll13, i32 0, i32 1, !dbg !4546
  %23 = load i32, i32* %xmax14, align 4, !dbg !4546
  %sub = sub nsw i32 %23, 1, !dbg !4547
  %conv15 = sitofp i32 %sub to float, !dbg !4544
  %24 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4548
  %txtscroll16 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %24, i32 0, i32 22, !dbg !4549
  %ymax17 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtscroll16, i32 0, i32 3, !dbg !4550
  %25 = load i32, i32* %ymax17, align 4, !dbg !4550
  %conv18 = sitofp i32 %25 to float, !dbg !4548
  %26 = load float, float* %rad, align 4, !dbg !4551
  call void @uiRoundBox(float %conv9, float %conv12, float %conv15, float %conv18, float %26), !dbg !4552
  call void @glDisable(i32 3042), !dbg !4553
  ret void, !dbg !4554
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_documentation(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !4555 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %docs = alloca i8*, align 8
  %buf = alloca [41 x i8], align 16
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %br = alloca i32, align 4
  %lines = alloca i32, align 4
  %boxw = alloca i32, align 4
  %boxh = alloca i32, align 4
  %l = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !4556, metadata !DIExpression()), !dbg !4557
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !4560, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.declare(metadata i8** %docs, metadata !4562, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.declare(metadata [41 x i8]* %buf, metadata !4564, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4569, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4571, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata i32* %br, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !4575, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.declare(metadata i32* %boxw, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.declare(metadata i32* %boxh, metadata !4579, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4581, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4583, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4585, metadata !DIExpression()), !dbg !4586
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4587
  %tobool = icmp ne %struct.SpaceText* %0, null, !dbg !4587
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4589

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4590
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 6, !dbg !4591
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4591
  %tobool1 = icmp ne %struct.Text* %2, null, !dbg !4590
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4592

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end161, !dbg !4593

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4594
  %text2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 6, !dbg !4596
  %4 = load %struct.Text*, %struct.Text** %text2, align 8, !dbg !4596
  %call = call signext i16 @texttool_text_is_active(%struct.Text* %4), !dbg !4597
  %tobool3 = icmp ne i16 %call, 0, !dbg !4597
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4598

if.then4:                                         ; preds = %if.end
  br label %for.end161, !dbg !4599

if.end5:                                          ; preds = %if.end
  %call6 = call i8* @texttool_docs_get(), !dbg !4600
  store i8* %call6, i8** %docs, align 8, !dbg !4601
  %5 = load i8*, i8** %docs, align 8, !dbg !4602
  %tobool7 = icmp ne i8* %5, null, !dbg !4602
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4604

if.then8:                                         ; preds = %if.end5
  br label %for.end161, !dbg !4605

if.end9:                                          ; preds = %if.end5
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4606
  %text10 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 6, !dbg !4608
  %7 = load %struct.Text*, %struct.Text** %text10, align 8, !dbg !4608
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 5, !dbg !4609
  %8 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !4609
  store %struct.TextLine* %8, %struct.TextLine** %tmp, align 8, !dbg !4610
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4611
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 7, !dbg !4612
  %10 = load i32, i32* %top, align 8, !dbg !4612
  %sub = sub nsw i32 0, %10, !dbg !4613
  store i32 %sub, i32* %l, align 4, !dbg !4614
  br label %for.cond, !dbg !4615

for.cond:                                         ; preds = %for.inc, %if.end9
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4616
  %tobool11 = icmp ne %struct.TextLine* %11, null, !dbg !4618
  br i1 %tobool11, label %for.body, label %for.end, !dbg !4618

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !4618

for.inc:                                          ; preds = %for.body
  %12 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4619
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %12, i32 0, i32 1, !dbg !4620
  %13 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !4620
  store %struct.TextLine* %13, %struct.TextLine** %tmp, align 8, !dbg !4621
  %14 = load i32, i32* %l, align 4, !dbg !4622
  %inc = add nsw i32 %14, 1, !dbg !4622
  store i32 %inc, i32* %l, align 4, !dbg !4622
  br label %for.cond, !dbg !4623, !llvm.loop !4624

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %l, align 4, !dbg !4626
  %cmp = icmp slt i32 %15, 0, !dbg !4628
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !4629

if.then12:                                        ; preds = %for.end
  br label %for.end161, !dbg !4630

if.end13:                                         ; preds = %for.end
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4631
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %16, i32 0, i32 15, !dbg !4633
  %17 = load i32, i32* %showlinenrs, align 4, !dbg !4633
  %tobool14 = icmp ne i32 %17, 0, !dbg !4631
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4634

if.then15:                                        ; preds = %if.end13
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4635
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %18, i32 0, i32 12, !dbg !4637
  %19 = load i8, i8* %cwidth, align 2, !dbg !4637
  %conv = zext i8 %19 to i32, !dbg !4635
  %20 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4638
  %text16 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %20, i32 0, i32 6, !dbg !4639
  %21 = load %struct.Text*, %struct.Text** %text16, align 8, !dbg !4639
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 7, !dbg !4640
  %22 = load i32, i32* %curc, align 8, !dbg !4640
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4641
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %23, i32 0, i32 14, !dbg !4642
  %24 = load i32, i32* %left, align 8, !dbg !4642
  %sub17 = sub nsw i32 %22, %24, !dbg !4643
  %mul = mul nsw i32 %conv, %sub17, !dbg !4644
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4645
  %conv18 = sext i16 %25 to i32, !dbg !4645
  %conv19 = sitofp i32 %conv18 to float, !dbg !4645
  %mul20 = fmul float 5.000000e-01, %conv19, !dbg !4645
  %conv21 = fptosi float %mul20 to i32, !dbg !4645
  %add = add nsw i32 %mul, %conv21, !dbg !4646
  %26 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4647
  %cwidth22 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %26, i32 0, i32 12, !dbg !4647
  %27 = load i8, i8* %cwidth22, align 2, !dbg !4647
  %conv23 = zext i8 %27 to i32, !dbg !4647
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4647
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %28, i32 0, i32 13, !dbg !4647
  %29 = load i8, i8* %linenrs_tot, align 1, !dbg !4647
  %conv24 = zext i8 %29 to i32, !dbg !4647
  %mul25 = mul nsw i32 %conv23, %conv24, !dbg !4647
  %add26 = add nsw i32 %add, %mul25, !dbg !4648
  %sub27 = sub nsw i32 %add26, 4, !dbg !4649
  store i32 %sub27, i32* %x, align 4, !dbg !4650
  br label %if.end41, !dbg !4651

if.else:                                          ; preds = %if.end13
  %30 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4652
  %cwidth28 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %30, i32 0, i32 12, !dbg !4654
  %31 = load i8, i8* %cwidth28, align 2, !dbg !4654
  %conv29 = zext i8 %31 to i32, !dbg !4652
  %32 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4655
  %text30 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %32, i32 0, i32 6, !dbg !4656
  %33 = load %struct.Text*, %struct.Text** %text30, align 8, !dbg !4656
  %curc31 = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 7, !dbg !4657
  %34 = load i32, i32* %curc31, align 8, !dbg !4657
  %35 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4658
  %left32 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %35, i32 0, i32 14, !dbg !4659
  %36 = load i32, i32* %left32, align 8, !dbg !4659
  %sub33 = sub nsw i32 %34, %36, !dbg !4660
  %mul34 = mul nsw i32 %conv29, %sub33, !dbg !4661
  %37 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4662
  %conv35 = sext i16 %37 to i32, !dbg !4662
  %conv36 = sitofp i32 %conv35 to float, !dbg !4662
  %mul37 = fmul float 5.000000e-01, %conv36, !dbg !4662
  %conv38 = fptosi float %mul37 to i32, !dbg !4662
  %add39 = add nsw i32 %mul34, %conv38, !dbg !4663
  %sub40 = sub nsw i32 %add39, 4, !dbg !4664
  store i32 %sub40, i32* %x, align 4, !dbg !4665
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then15
  %call42 = call %struct.SuggItem* @texttool_suggest_first(), !dbg !4666
  %tobool43 = icmp ne %struct.SuggItem* %call42, null, !dbg !4666
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !4668

if.then44:                                        ; preds = %if.end41
  %38 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4669
  %cwidth45 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %38, i32 0, i32 12, !dbg !4671
  %39 = load i8, i8* %cwidth45, align 2, !dbg !4671
  %conv46 = zext i8 %39 to i32, !dbg !4669
  %mul47 = mul nsw i32 20, %conv46, !dbg !4672
  %add48 = add nsw i32 %mul47, 50, !dbg !4673
  %40 = load i32, i32* %x, align 4, !dbg !4674
  %add49 = add nsw i32 %40, %add48, !dbg !4674
  store i32 %add49, i32* %x, align 4, !dbg !4674
  br label %if.end50, !dbg !4675

if.end50:                                         ; preds = %if.then44, %if.end41
  %41 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4676
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %41, i32 0, i32 6, !dbg !4677
  %42 = load i16, i16* %winy, align 2, !dbg !4677
  %conv51 = sext i16 %42 to i32, !dbg !4676
  %43 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4678
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %43, i32 0, i32 29, !dbg !4679
  %44 = load i16, i16* %lheight_dpi, align 2, !dbg !4679
  %conv52 = sext i16 %44 to i32, !dbg !4678
  %45 = load i32, i32* %l, align 4, !dbg !4680
  %mul53 = mul nsw i32 %conv52, %45, !dbg !4681
  %sub54 = sub nsw i32 %conv51, %mul53, !dbg !4682
  %sub55 = sub nsw i32 %sub54, 2, !dbg !4683
  store i32 %sub55, i32* %y, align 4, !dbg !4684
  %46 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4685
  %cwidth56 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %46, i32 0, i32 12, !dbg !4686
  %47 = load i8, i8* %cwidth56, align 2, !dbg !4686
  %conv57 = zext i8 %47 to i32, !dbg !4685
  %mul58 = mul nsw i32 40, %conv57, !dbg !4687
  %add59 = add nsw i32 %mul58, 20, !dbg !4688
  store i32 %add59, i32* %boxw, align 4, !dbg !4689
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4690
  %lheight_dpi60 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %48, i32 0, i32 29, !dbg !4691
  %49 = load i16, i16* %lheight_dpi60, align 2, !dbg !4691
  %conv61 = sext i16 %49 to i32, !dbg !4690
  %50 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4692
  %lheight_dpi62 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %50, i32 0, i32 29, !dbg !4692
  %51 = load i16, i16* %lheight_dpi62, align 2, !dbg !4692
  %conv63 = sext i16 %51 to i32, !dbg !4692
  %conv64 = sitofp i32 %conv63 to float, !dbg !4692
  %mul65 = fmul float 0x3FD3333340000000, %conv64, !dbg !4692
  %conv66 = fptosi float %mul65 to i32, !dbg !4692
  %add67 = add nsw i32 %conv61, %conv66, !dbg !4693
  %mul68 = mul nsw i32 11, %add67, !dbg !4694
  store i32 %mul68, i32* %boxh, align 4, !dbg !4695
  call void @UI_ThemeColor(i32 2), !dbg !4696
  %52 = load i32, i32* %x, align 4, !dbg !4697
  %53 = load i32, i32* %y, align 4, !dbg !4698
  %54 = load i32, i32* %x, align 4, !dbg !4699
  %55 = load i32, i32* %boxw, align 4, !dbg !4700
  %add69 = add nsw i32 %54, %55, !dbg !4701
  %56 = load i32, i32* %y, align 4, !dbg !4702
  %57 = load i32, i32* %boxh, align 4, !dbg !4703
  %sub70 = sub nsw i32 %56, %57, !dbg !4704
  call void @glRecti(i32 %52, i32 %53, i32 %add69, i32 %sub70), !dbg !4705
  call void @UI_ThemeColor(i32 21), !dbg !4706
  call void @glBegin(i32 2), !dbg !4707
  %58 = load i32, i32* %x, align 4, !dbg !4708
  %59 = load i32, i32* %y, align 4, !dbg !4709
  call void @glVertex2i(i32 %58, i32 %59), !dbg !4710
  %60 = load i32, i32* %x, align 4, !dbg !4711
  %61 = load i32, i32* %boxw, align 4, !dbg !4712
  %add71 = add nsw i32 %60, %61, !dbg !4713
  %62 = load i32, i32* %y, align 4, !dbg !4714
  call void @glVertex2i(i32 %add71, i32 %62), !dbg !4715
  %63 = load i32, i32* %x, align 4, !dbg !4716
  %64 = load i32, i32* %boxw, align 4, !dbg !4717
  %add72 = add nsw i32 %63, %64, !dbg !4718
  %65 = load i32, i32* %y, align 4, !dbg !4719
  %66 = load i32, i32* %boxh, align 4, !dbg !4720
  %sub73 = sub nsw i32 %65, %66, !dbg !4721
  call void @glVertex2i(i32 %add72, i32 %sub73), !dbg !4722
  %67 = load i32, i32* %x, align 4, !dbg !4723
  %68 = load i32, i32* %y, align 4, !dbg !4724
  %69 = load i32, i32* %boxh, align 4, !dbg !4725
  %sub74 = sub nsw i32 %68, %69, !dbg !4726
  call void @glVertex2i(i32 %67, i32 %sub74), !dbg !4727
  call void @glEnd(), !dbg !4728
  call void @glBegin(i32 2), !dbg !4729
  %70 = load i32, i32* %x, align 4, !dbg !4730
  %71 = load i32, i32* %boxw, align 4, !dbg !4731
  %add75 = add nsw i32 %70, %71, !dbg !4732
  %sub76 = sub nsw i32 %add75, 10, !dbg !4733
  %72 = load i32, i32* %y, align 4, !dbg !4734
  %sub77 = sub nsw i32 %72, 7, !dbg !4735
  call void @glVertex2i(i32 %sub76, i32 %sub77), !dbg !4736
  %73 = load i32, i32* %x, align 4, !dbg !4737
  %74 = load i32, i32* %boxw, align 4, !dbg !4738
  %add78 = add nsw i32 %73, %74, !dbg !4739
  %sub79 = sub nsw i32 %add78, 4, !dbg !4740
  %75 = load i32, i32* %y, align 4, !dbg !4741
  %sub80 = sub nsw i32 %75, 7, !dbg !4742
  call void @glVertex2i(i32 %sub79, i32 %sub80), !dbg !4743
  %76 = load i32, i32* %x, align 4, !dbg !4744
  %77 = load i32, i32* %boxw, align 4, !dbg !4745
  %add81 = add nsw i32 %76, %77, !dbg !4746
  %sub82 = sub nsw i32 %add81, 7, !dbg !4747
  %78 = load i32, i32* %y, align 4, !dbg !4748
  %sub83 = sub nsw i32 %78, 2, !dbg !4749
  call void @glVertex2i(i32 %sub82, i32 %sub83), !dbg !4750
  call void @glEnd(), !dbg !4751
  call void @glBegin(i32 2), !dbg !4752
  %79 = load i32, i32* %x, align 4, !dbg !4753
  %80 = load i32, i32* %boxw, align 4, !dbg !4754
  %add84 = add nsw i32 %79, %80, !dbg !4755
  %sub85 = sub nsw i32 %add84, 10, !dbg !4756
  %81 = load i32, i32* %y, align 4, !dbg !4757
  %82 = load i32, i32* %boxh, align 4, !dbg !4758
  %sub86 = sub nsw i32 %81, %82, !dbg !4759
  %add87 = add nsw i32 %sub86, 7, !dbg !4760
  call void @glVertex2i(i32 %sub85, i32 %add87), !dbg !4761
  %83 = load i32, i32* %x, align 4, !dbg !4762
  %84 = load i32, i32* %boxw, align 4, !dbg !4763
  %add88 = add nsw i32 %83, %84, !dbg !4764
  %sub89 = sub nsw i32 %add88, 4, !dbg !4765
  %85 = load i32, i32* %y, align 4, !dbg !4766
  %86 = load i32, i32* %boxh, align 4, !dbg !4767
  %sub90 = sub nsw i32 %85, %86, !dbg !4768
  %add91 = add nsw i32 %sub90, 7, !dbg !4769
  call void @glVertex2i(i32 %sub89, i32 %add91), !dbg !4770
  %87 = load i32, i32* %x, align 4, !dbg !4771
  %88 = load i32, i32* %boxw, align 4, !dbg !4772
  %add92 = add nsw i32 %87, %88, !dbg !4773
  %sub93 = sub nsw i32 %add92, 7, !dbg !4774
  %89 = load i32, i32* %y, align 4, !dbg !4775
  %90 = load i32, i32* %boxh, align 4, !dbg !4776
  %sub94 = sub nsw i32 %89, %90, !dbg !4777
  %add95 = add nsw i32 %sub94, 2, !dbg !4778
  call void @glVertex2i(i32 %sub93, i32 %add95), !dbg !4779
  call void @glEnd(), !dbg !4780
  call void @UI_ThemeColor(i32 3), !dbg !4781
  store i32 0, i32* %i, align 4, !dbg !4782
  store i32 40, i32* %br, align 4, !dbg !4783
  store i32 0, i32* %lines, align 4, !dbg !4784
  %91 = load i8*, i8** %docs, align 8, !dbg !4785
  store i8* %91, i8** %p, align 8, !dbg !4787
  br label %for.cond96, !dbg !4788

for.cond96:                                       ; preds = %for.inc159, %if.end50
  %92 = load i8*, i8** %p, align 8, !dbg !4789
  %93 = load i8, i8* %92, align 1, !dbg !4791
  %tobool97 = icmp ne i8 %93, 0, !dbg !4792
  br i1 %tobool97, label %for.body98, label %for.end161, !dbg !4792

for.body98:                                       ; preds = %for.cond96
  %94 = load i8*, i8** %p, align 8, !dbg !4793
  %95 = load i8, i8* %94, align 1, !dbg !4796
  %conv99 = zext i8 %95 to i32, !dbg !4796
  %cmp100 = icmp eq i32 %conv99, 13, !dbg !4797
  br i1 %cmp100, label %land.lhs.true, label %if.end107, !dbg !4798

land.lhs.true:                                    ; preds = %for.body98
  %96 = load i8*, i8** %p, align 8, !dbg !4799
  %incdec.ptr = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4799
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !4799
  %97 = load i8, i8* %incdec.ptr, align 1, !dbg !4800
  %conv102 = zext i8 %97 to i32, !dbg !4800
  %cmp103 = icmp ne i32 %conv102, 10, !dbg !4801
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !4802

if.then105:                                       ; preds = %land.lhs.true
  %98 = load i8*, i8** %p, align 8, !dbg !4803
  %incdec.ptr106 = getelementptr inbounds i8, i8* %98, i32 -1, !dbg !4803
  store i8* %incdec.ptr106, i8** %p, align 8, !dbg !4803
  store i8 10, i8* %incdec.ptr106, align 1, !dbg !4804
  br label %if.end107, !dbg !4805

if.end107:                                        ; preds = %if.then105, %land.lhs.true, %for.body98
  %99 = load i8*, i8** %p, align 8, !dbg !4806
  %100 = load i8, i8* %99, align 1, !dbg !4808
  %conv108 = zext i8 %100 to i32, !dbg !4808
  %cmp109 = icmp eq i32 %conv108, 32, !dbg !4809
  br i1 %cmp109, label %if.then115, label %lor.lhs.false111, !dbg !4810

lor.lhs.false111:                                 ; preds = %if.end107
  %101 = load i8*, i8** %p, align 8, !dbg !4811
  %102 = load i8, i8* %101, align 1, !dbg !4812
  %conv112 = zext i8 %102 to i32, !dbg !4812
  %cmp113 = icmp eq i32 %conv112, 9, !dbg !4813
  br i1 %cmp113, label %if.then115, label %if.else116, !dbg !4814

if.then115:                                       ; preds = %lor.lhs.false111, %if.end107
  %103 = load i32, i32* %i, align 4, !dbg !4815
  store i32 %103, i32* %br, align 4, !dbg !4816
  br label %if.end132, !dbg !4817

if.else116:                                       ; preds = %lor.lhs.false111
  %104 = load i8*, i8** %p, align 8, !dbg !4818
  %105 = load i8, i8* %104, align 1, !dbg !4820
  %conv117 = zext i8 %105 to i32, !dbg !4820
  %cmp118 = icmp eq i32 %conv117, 10, !dbg !4821
  br i1 %cmp118, label %if.then120, label %if.end131, !dbg !4822

if.then120:                                       ; preds = %if.else116
  %106 = load i32, i32* %i, align 4, !dbg !4823
  %idxprom = sext i32 %106 to i64, !dbg !4825
  %arrayidx = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 %idxprom, !dbg !4825
  store i8 0, i8* %arrayidx, align 1, !dbg !4826
  %107 = load i32, i32* %lines, align 4, !dbg !4827
  %cmp121 = icmp sge i32 %107, 0, !dbg !4829
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !4830

if.then123:                                       ; preds = %if.then120
  %108 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4831
  %lheight_dpi124 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %108, i32 0, i32 29, !dbg !4833
  %109 = load i16, i16* %lheight_dpi124, align 2, !dbg !4833
  %conv125 = sext i16 %109 to i32, !dbg !4831
  %110 = load i32, i32* %y, align 4, !dbg !4834
  %sub126 = sub nsw i32 %110, %conv125, !dbg !4834
  store i32 %sub126, i32* %y, align 4, !dbg !4834
  %111 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4835
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !4836
  %112 = load i32, i32* %x, align 4, !dbg !4837
  %add127 = add nsw i32 %112, 4, !dbg !4838
  %113 = load i32, i32* %y, align 4, !dbg !4839
  %sub128 = sub nsw i32 %113, 3, !dbg !4840
  call void @text_draw(%struct.SpaceText* %111, i8* %arraydecay, i32 0, i32 0, i32 %add127, i32 %sub128, i8* null), !dbg !4841
  br label %if.end129, !dbg !4842

if.end129:                                        ; preds = %if.then123, %if.then120
  store i32 0, i32* %i, align 4, !dbg !4843
  store i32 40, i32* %br, align 4, !dbg !4844
  %114 = load i32, i32* %lines, align 4, !dbg !4845
  %inc130 = add nsw i32 %114, 1, !dbg !4845
  store i32 %inc130, i32* %lines, align 4, !dbg !4845
  br label %if.end131, !dbg !4846

if.end131:                                        ; preds = %if.end129, %if.else116
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then115
  %115 = load i8*, i8** %p, align 8, !dbg !4847
  %116 = load i8, i8* %115, align 1, !dbg !4848
  %117 = load i32, i32* %i, align 4, !dbg !4849
  %inc133 = add nsw i32 %117, 1, !dbg !4849
  store i32 %inc133, i32* %i, align 4, !dbg !4849
  %idxprom134 = sext i32 %117 to i64, !dbg !4850
  %arrayidx135 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 %idxprom134, !dbg !4850
  store i8 %116, i8* %arrayidx135, align 1, !dbg !4851
  %118 = load i32, i32* %i, align 4, !dbg !4852
  %cmp136 = icmp eq i32 %118, 40, !dbg !4854
  br i1 %cmp136, label %if.then138, label %if.end154, !dbg !4855

if.then138:                                       ; preds = %if.end132
  %119 = load i32, i32* %br, align 4, !dbg !4856
  %idxprom139 = sext i32 %119 to i64, !dbg !4858
  %arrayidx140 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 %idxprom139, !dbg !4858
  store i8 0, i8* %arrayidx140, align 1, !dbg !4859
  %120 = load i32, i32* %lines, align 4, !dbg !4860
  %cmp141 = icmp sge i32 %120, 0, !dbg !4862
  br i1 %cmp141, label %if.then143, label %if.end150, !dbg !4863

if.then143:                                       ; preds = %if.then138
  %121 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4864
  %lheight_dpi144 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %121, i32 0, i32 29, !dbg !4866
  %122 = load i16, i16* %lheight_dpi144, align 2, !dbg !4866
  %conv145 = sext i16 %122 to i32, !dbg !4864
  %123 = load i32, i32* %y, align 4, !dbg !4867
  %sub146 = sub nsw i32 %123, %conv145, !dbg !4867
  store i32 %sub146, i32* %y, align 4, !dbg !4867
  %124 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4868
  %arraydecay147 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !4869
  %125 = load i32, i32* %x, align 4, !dbg !4870
  %add148 = add nsw i32 %125, 4, !dbg !4871
  %126 = load i32, i32* %y, align 4, !dbg !4872
  %sub149 = sub nsw i32 %126, 3, !dbg !4873
  call void @text_draw(%struct.SpaceText* %124, i8* %arraydecay147, i32 0, i32 0, i32 %add148, i32 %sub149, i8* null), !dbg !4874
  br label %if.end150, !dbg !4875

if.end150:                                        ; preds = %if.then143, %if.then138
  %127 = load i32, i32* %i, align 4, !dbg !4876
  %128 = load i32, i32* %br, align 4, !dbg !4877
  %sub151 = sub nsw i32 %127, %128, !dbg !4878
  %sub152 = sub nsw i32 %sub151, 1, !dbg !4879
  %129 = load i8*, i8** %p, align 8, !dbg !4880
  %idx.ext = sext i32 %sub152 to i64, !dbg !4880
  %idx.neg = sub i64 0, %idx.ext, !dbg !4880
  %add.ptr = getelementptr inbounds i8, i8* %129, i64 %idx.neg, !dbg !4880
  store i8* %add.ptr, i8** %p, align 8, !dbg !4880
  store i32 0, i32* %i, align 4, !dbg !4881
  store i32 40, i32* %br, align 4, !dbg !4882
  %130 = load i32, i32* %lines, align 4, !dbg !4883
  %inc153 = add nsw i32 %130, 1, !dbg !4883
  store i32 %inc153, i32* %lines, align 4, !dbg !4883
  br label %if.end154, !dbg !4884

if.end154:                                        ; preds = %if.end150, %if.end132
  %131 = load i32, i32* %lines, align 4, !dbg !4885
  %cmp155 = icmp sge i32 %131, 10, !dbg !4887
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !4888

if.then157:                                       ; preds = %if.end154
  br label %for.end161, !dbg !4889

if.end158:                                        ; preds = %if.end154
  br label %for.inc159, !dbg !4890

for.inc159:                                       ; preds = %if.end158
  %132 = load i8*, i8** %p, align 8, !dbg !4891
  %incdec.ptr160 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !4891
  store i8* %incdec.ptr160, i8** %p, align 8, !dbg !4891
  br label %for.cond96, !dbg !4892, !llvm.loop !4893

for.end161:                                       ; preds = %if.then, %if.then4, %if.then8, %if.then12, %if.then157, %for.cond96
  ret void, !dbg !4895
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_suggestion_list(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !4896 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %item = alloca %struct.SuggItem*, align 8
  %first = alloca %struct.SuggItem*, align 8
  %last = alloca %struct.SuggItem*, align 8
  %sel = alloca %struct.SuggItem*, align 8
  %str = alloca [121 x i8], align 16
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %vcurl = alloca i32, align 4
  %vcurc = alloca i32, align 4
  %w = alloca i32, align 4
  %boxw = alloca i32, align 4
  %boxh = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %top = alloca i32*, align 8
  %lheight = alloca i32, align 4
  %margin_x = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata %struct.SuggItem** %item, metadata !4901, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.declare(metadata %struct.SuggItem** %first, metadata !4913, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.declare(metadata %struct.SuggItem** %last, metadata !4915, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.declare(metadata %struct.SuggItem** %sel, metadata !4917, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.declare(metadata [121 x i8]* %str, metadata !4919, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !4924, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i32* %vcurl, metadata !4928, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %vcurc, metadata !4930, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4932, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata i32* %boxw, metadata !4934, metadata !DIExpression()), !dbg !4935
  store i32 0, i32* %boxw, align 4, !dbg !4935
  call void @llvm.dbg.declare(metadata i32* %boxh, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4938, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4940, metadata !DIExpression()), !dbg !4941
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata i32** %top, metadata !4944, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.declare(metadata i32* %lheight, metadata !4946, metadata !DIExpression()), !dbg !4947
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4948
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 29, !dbg !4949
  %1 = load i16, i16* %lheight_dpi, align 2, !dbg !4949
  %conv = sext i16 %1 to i32, !dbg !4948
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4950
  %lheight_dpi1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 29, !dbg !4950
  %3 = load i16, i16* %lheight_dpi1, align 2, !dbg !4950
  %conv2 = sext i16 %3 to i32, !dbg !4950
  %conv3 = sitofp i32 %conv2 to float, !dbg !4950
  %mul = fmul float 0x3FD3333340000000, %conv3, !dbg !4950
  %conv4 = fptosi float %mul to i32, !dbg !4950
  %add = add nsw i32 %conv, %conv4, !dbg !4951
  store i32 %add, i32* %lheight, align 4, !dbg !4947
  call void @llvm.dbg.declare(metadata i32* %margin_x, metadata !4952, metadata !DIExpression()), !dbg !4953
  store i32 2, i32* %margin_x, align 4, !dbg !4953
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4954
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 6, !dbg !4956
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4956
  %tobool = icmp ne %struct.Text* %5, null, !dbg !4954
  br i1 %tobool, label %if.end, label %if.then, !dbg !4957

if.then:                                          ; preds = %entry
  br label %for.end150, !dbg !4958

if.end:                                           ; preds = %entry
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4959
  %text5 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 6, !dbg !4961
  %7 = load %struct.Text*, %struct.Text** %text5, align 8, !dbg !4961
  %call = call signext i16 @texttool_text_is_active(%struct.Text* %7), !dbg !4962
  %tobool6 = icmp ne i16 %call, 0, !dbg !4962
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4963

if.then7:                                         ; preds = %if.end
  br label %for.end150, !dbg !4964

if.end8:                                          ; preds = %if.end
  %call9 = call %struct.SuggItem* @texttool_suggest_first(), !dbg !4965
  store %struct.SuggItem* %call9, %struct.SuggItem** %first, align 8, !dbg !4966
  %call10 = call %struct.SuggItem* @texttool_suggest_last(), !dbg !4967
  store %struct.SuggItem* %call10, %struct.SuggItem** %last, align 8, !dbg !4968
  %8 = load %struct.SuggItem*, %struct.SuggItem** %first, align 8, !dbg !4969
  %tobool11 = icmp ne %struct.SuggItem* %8, null, !dbg !4969
  br i1 %tobool11, label %lor.lhs.false, label %if.then13, !dbg !4971

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load %struct.SuggItem*, %struct.SuggItem** %last, align 8, !dbg !4972
  %tobool12 = icmp ne %struct.SuggItem* %9, null, !dbg !4972
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !4973

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  br label %for.end150, !dbg !4974

if.end14:                                         ; preds = %lor.lhs.false
  call void @text_pop_suggest_list(), !dbg !4975
  %call15 = call %struct.SuggItem* @texttool_suggest_selected(), !dbg !4976
  store %struct.SuggItem* %call15, %struct.SuggItem** %sel, align 8, !dbg !4977
  %call16 = call i32* @texttool_suggest_top(), !dbg !4978
  store i32* %call16, i32** %top, align 8, !dbg !4979
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4980
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4981
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4982
  %text17 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 6, !dbg !4983
  %13 = load %struct.Text*, %struct.Text** %text17, align 8, !dbg !4983
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %13, i32 0, i32 5, !dbg !4984
  %14 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !4984
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4985
  %text18 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 6, !dbg !4986
  %16 = load %struct.Text*, %struct.Text** %text18, align 8, !dbg !4986
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 7, !dbg !4987
  %17 = load i32, i32* %curc, align 8, !dbg !4987
  call void @wrap_offset(%struct.SpaceText* %10, %struct.ARegion* %11, %struct.TextLine* %14, i32 %17, i32* %offl, i32* %offc), !dbg !4988
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4989
  %text19 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %18, i32 0, i32 6, !dbg !4990
  %19 = load %struct.Text*, %struct.Text** %text19, align 8, !dbg !4990
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 4, !dbg !4991
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !4992
  %20 = load i8*, i8** %first20, align 8, !dbg !4992
  %21 = bitcast i8* %20 to %struct.TextLine*, !dbg !4989
  %22 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4993
  %text21 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %22, i32 0, i32 6, !dbg !4994
  %23 = load %struct.Text*, %struct.Text** %text21, align 8, !dbg !4994
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 5, !dbg !4995
  %24 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !4995
  %call23 = call i32 @txt_get_span(%struct.TextLine* %21, %struct.TextLine* %24), !dbg !4996
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !4997
  %top24 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 7, !dbg !4998
  %26 = load i32, i32* %top24, align 8, !dbg !4998
  %sub = sub nsw i32 %call23, %26, !dbg !4999
  %27 = load i32, i32* %offl, align 4, !dbg !5000
  %add25 = add nsw i32 %sub, %27, !dbg !5001
  store i32 %add25, i32* %vcurl, align 4, !dbg !5002
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5003
  %29 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5004
  %text26 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %29, i32 0, i32 6, !dbg !5005
  %30 = load %struct.Text*, %struct.Text** %text26, align 8, !dbg !5005
  %curl27 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 5, !dbg !5006
  %31 = load %struct.TextLine*, %struct.TextLine** %curl27, align 8, !dbg !5006
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %31, i32 0, i32 2, !dbg !5007
  %32 = load i8*, i8** %line, align 8, !dbg !5007
  %33 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5008
  %text28 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %33, i32 0, i32 6, !dbg !5009
  %34 = load %struct.Text*, %struct.Text** %text28, align 8, !dbg !5009
  %curc29 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !5010
  %35 = load i32, i32* %curc29, align 8, !dbg !5010
  %call30 = call i32 @text_get_char_pos(%struct.SpaceText* %28, i8* %32, i32 %35), !dbg !5011
  %36 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5012
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %36, i32 0, i32 14, !dbg !5013
  %37 = load i32, i32* %left, align 8, !dbg !5013
  %sub31 = sub nsw i32 %call30, %37, !dbg !5014
  %38 = load i32, i32* %offc, align 4, !dbg !5015
  %add32 = add nsw i32 %sub31, %38, !dbg !5016
  store i32 %add32, i32* %vcurc, align 4, !dbg !5017
  %39 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5018
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %39, i32 0, i32 15, !dbg !5019
  %40 = load i32, i32* %showlinenrs, align 4, !dbg !5019
  %tobool33 = icmp ne i32 %40, 0, !dbg !5018
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !5018

cond.true:                                        ; preds = %if.end14
  %41 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5020
  %conv34 = sext i16 %41 to i32, !dbg !5020
  %conv35 = sitofp i32 %conv34 to float, !dbg !5020
  %mul36 = fmul float 5.000000e-01, %conv35, !dbg !5020
  %conv37 = fptosi float %mul36 to i32, !dbg !5020
  %42 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5021
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %42, i32 0, i32 12, !dbg !5021
  %43 = load i8, i8* %cwidth, align 2, !dbg !5021
  %conv38 = zext i8 %43 to i32, !dbg !5021
  %44 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5021
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %44, i32 0, i32 13, !dbg !5021
  %45 = load i8, i8* %linenrs_tot, align 1, !dbg !5021
  %conv39 = zext i8 %45 to i32, !dbg !5021
  %mul40 = mul nsw i32 %conv38, %conv39, !dbg !5021
  %add41 = add nsw i32 %conv37, %mul40, !dbg !5022
  br label %cond.end, !dbg !5018

cond.false:                                       ; preds = %if.end14
  %46 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5023
  %conv42 = sext i16 %46 to i32, !dbg !5023
  %conv43 = sitofp i32 %conv42 to float, !dbg !5023
  %mul44 = fmul float 5.000000e-01, %conv43, !dbg !5023
  %conv45 = fptosi float %mul44 to i32, !dbg !5023
  br label %cond.end, !dbg !5018

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add41, %cond.true ], [ %conv45, %cond.false ], !dbg !5018
  store i32 %cond, i32* %x, align 4, !dbg !5024
  %47 = load i32, i32* %vcurc, align 4, !dbg !5025
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5026
  %cwidth46 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %48, i32 0, i32 12, !dbg !5027
  %49 = load i8, i8* %cwidth46, align 2, !dbg !5027
  %conv47 = zext i8 %49 to i32, !dbg !5026
  %mul48 = mul nsw i32 %47, %conv47, !dbg !5028
  %sub49 = sub nsw i32 %mul48, 4, !dbg !5029
  %50 = load i32, i32* %x, align 4, !dbg !5030
  %add50 = add nsw i32 %50, %sub49, !dbg !5030
  store i32 %add50, i32* %x, align 4, !dbg !5030
  %51 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5031
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %51, i32 0, i32 6, !dbg !5032
  %52 = load i16, i16* %winy, align 2, !dbg !5032
  %conv51 = sext i16 %52 to i32, !dbg !5031
  %53 = load i32, i32* %vcurl, align 4, !dbg !5033
  %add52 = add nsw i32 %53, 1, !dbg !5034
  %54 = load i32, i32* %lheight, align 4, !dbg !5035
  %mul53 = mul nsw i32 %add52, %54, !dbg !5036
  %sub54 = sub nsw i32 %conv51, %mul53, !dbg !5037
  %sub55 = sub nsw i32 %sub54, 2, !dbg !5038
  store i32 %sub55, i32* %y, align 4, !dbg !5039
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5040
  %cwidth56 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %55, i32 0, i32 12, !dbg !5041
  %56 = load i8, i8* %cwidth56, align 2, !dbg !5041
  %conv57 = zext i8 %56 to i32, !dbg !5040
  %57 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5042
  %text58 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %57, i32 0, i32 6, !dbg !5043
  %58 = load %struct.Text*, %struct.Text** %text58, align 8, !dbg !5043
  %curc59 = getelementptr inbounds %struct.Text, %struct.Text* %58, i32 0, i32 7, !dbg !5044
  %59 = load i32, i32* %curc59, align 8, !dbg !5044
  %60 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5045
  %text60 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %60, i32 0, i32 6, !dbg !5046
  %61 = load %struct.Text*, %struct.Text** %text60, align 8, !dbg !5046
  %curl61 = getelementptr inbounds %struct.Text, %struct.Text* %61, i32 0, i32 5, !dbg !5047
  %62 = load %struct.TextLine*, %struct.TextLine** %curl61, align 8, !dbg !5047
  %line62 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %62, i32 0, i32 2, !dbg !5048
  %63 = load i8*, i8** %line62, align 8, !dbg !5048
  %64 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5049
  %text63 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %64, i32 0, i32 6, !dbg !5050
  %65 = load %struct.Text*, %struct.Text** %text63, align 8, !dbg !5050
  %curc64 = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 7, !dbg !5051
  %66 = load i32, i32* %curc64, align 8, !dbg !5051
  %call65 = call i32 @text_find_identifier_start(i8* %63, i32 %66), !dbg !5052
  %sub66 = sub nsw i32 %59, %call65, !dbg !5053
  %mul67 = mul nsw i32 %conv57, %sub66, !dbg !5054
  %67 = load i32, i32* %x, align 4, !dbg !5055
  %sub68 = sub nsw i32 %67, %mul67, !dbg !5055
  store i32 %sub68, i32* %x, align 4, !dbg !5055
  %68 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5056
  %cwidth69 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %68, i32 0, i32 12, !dbg !5057
  %69 = load i8, i8* %cwidth69, align 2, !dbg !5057
  %conv70 = zext i8 %69 to i32, !dbg !5056
  %mul71 = mul nsw i32 20, %conv70, !dbg !5058
  %add72 = add nsw i32 %mul71, 20, !dbg !5059
  store i32 %add72, i32* %boxw, align 4, !dbg !5060
  %70 = load i32, i32* %lheight, align 4, !dbg !5061
  %mul73 = mul nsw i32 7, %70, !dbg !5062
  %add74 = add nsw i32 %mul73, 8, !dbg !5063
  store i32 %add74, i32* %boxh, align 4, !dbg !5064
  %71 = load i32, i32* %x, align 4, !dbg !5065
  %72 = load i32, i32* %boxw, align 4, !dbg !5067
  %add75 = add nsw i32 %71, %72, !dbg !5068
  %73 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5069
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %73, i32 0, i32 5, !dbg !5070
  %74 = load i16, i16* %winx, align 8, !dbg !5070
  %conv76 = sext i16 %74 to i32, !dbg !5069
  %cmp = icmp sgt i32 %add75, %conv76, !dbg !5071
  br i1 %cmp, label %if.then78, label %if.end91, !dbg !5072

if.then78:                                        ; preds = %cond.end
  %75 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5073
  %winx79 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %75, i32 0, i32 5, !dbg !5073
  %76 = load i16, i16* %winx79, align 8, !dbg !5073
  %conv80 = sext i16 %76 to i32, !dbg !5073
  %77 = load i32, i32* %boxw, align 4, !dbg !5073
  %sub81 = sub nsw i32 %conv80, %77, !dbg !5073
  %cmp82 = icmp sgt i32 0, %sub81, !dbg !5073
  br i1 %cmp82, label %cond.true84, label %cond.false85, !dbg !5073

cond.true84:                                      ; preds = %if.then78
  br label %cond.end89, !dbg !5073

cond.false85:                                     ; preds = %if.then78
  %78 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5073
  %winx86 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %78, i32 0, i32 5, !dbg !5073
  %79 = load i16, i16* %winx86, align 8, !dbg !5073
  %conv87 = sext i16 %79 to i32, !dbg !5073
  %80 = load i32, i32* %boxw, align 4, !dbg !5073
  %sub88 = sub nsw i32 %conv87, %80, !dbg !5073
  br label %cond.end89, !dbg !5073

cond.end89:                                       ; preds = %cond.false85, %cond.true84
  %cond90 = phi i32 [ 0, %cond.true84 ], [ %sub88, %cond.false85 ], !dbg !5073
  store i32 %cond90, i32* %x, align 4, !dbg !5074
  br label %if.end91, !dbg !5075

if.end91:                                         ; preds = %cond.end89, %cond.end
  %81 = load i32, i32* %x, align 4, !dbg !5076
  %conv92 = sitofp i32 %81 to float, !dbg !5076
  %82 = load i32, i32* %y, align 4, !dbg !5077
  %83 = load i32, i32* %boxh, align 4, !dbg !5078
  %sub93 = sub nsw i32 %82, %83, !dbg !5079
  %conv94 = sitofp i32 %sub93 to float, !dbg !5077
  %84 = load i32, i32* %x, align 4, !dbg !5080
  %85 = load i32, i32* %boxw, align 4, !dbg !5081
  %add95 = add nsw i32 %84, %85, !dbg !5082
  %conv96 = sitofp i32 %add95 to float, !dbg !5080
  %86 = load i32, i32* %y, align 4, !dbg !5083
  %conv97 = sitofp i32 %86 to float, !dbg !5083
  call void @uiDrawBoxShadow(i8 zeroext -36, float %conv92, float %conv94, float %conv96, float %conv97), !dbg !5084
  call void @UI_ThemeColor(i32 21), !dbg !5085
  %87 = load i32, i32* %x, align 4, !dbg !5086
  %sub98 = sub nsw i32 %87, 1, !dbg !5087
  %88 = load i32, i32* %y, align 4, !dbg !5088
  %add99 = add nsw i32 %88, 1, !dbg !5089
  %89 = load i32, i32* %x, align 4, !dbg !5090
  %90 = load i32, i32* %boxw, align 4, !dbg !5091
  %add100 = add nsw i32 %89, %90, !dbg !5092
  %add101 = add nsw i32 %add100, 1, !dbg !5093
  %91 = load i32, i32* %y, align 4, !dbg !5094
  %92 = load i32, i32* %boxh, align 4, !dbg !5095
  %sub102 = sub nsw i32 %91, %92, !dbg !5096
  %sub103 = sub nsw i32 %sub102, 1, !dbg !5097
  call void @glRecti(i32 %sub98, i32 %add99, i32 %add101, i32 %sub103), !dbg !5098
  call void @UI_ThemeColorShade(i32 2, i32 16), !dbg !5099
  %93 = load i32, i32* %x, align 4, !dbg !5100
  %94 = load i32, i32* %y, align 4, !dbg !5101
  %95 = load i32, i32* %x, align 4, !dbg !5102
  %96 = load i32, i32* %boxw, align 4, !dbg !5103
  %add104 = add nsw i32 %95, %96, !dbg !5104
  %97 = load i32, i32* %y, align 4, !dbg !5105
  %98 = load i32, i32* %boxh, align 4, !dbg !5106
  %sub105 = sub nsw i32 %97, %98, !dbg !5107
  call void @glRecti(i32 %93, i32 %94, i32 %add104, i32 %sub105), !dbg !5108
  store i32 0, i32* %i, align 4, !dbg !5109
  %99 = load %struct.SuggItem*, %struct.SuggItem** %first, align 8, !dbg !5111
  store %struct.SuggItem* %99, %struct.SuggItem** %item, align 8, !dbg !5112
  br label %for.cond, !dbg !5113

for.cond:                                         ; preds = %for.inc, %if.end91
  %100 = load i32, i32* %i, align 4, !dbg !5114
  %101 = load i32*, i32** %top, align 8, !dbg !5116
  %102 = load i32, i32* %101, align 4, !dbg !5117
  %cmp106 = icmp slt i32 %100, %102, !dbg !5118
  br i1 %cmp106, label %land.rhs, label %land.end, !dbg !5119

land.rhs:                                         ; preds = %for.cond
  %103 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5120
  %next = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %103, i32 0, i32 1, !dbg !5121
  %104 = load %struct.SuggItem*, %struct.SuggItem** %next, align 8, !dbg !5121
  %tobool108 = icmp ne %struct.SuggItem* %104, null, !dbg !5119
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %105 = phi i1 [ false, %for.cond ], [ %tobool108, %land.rhs ], !dbg !5122
  br i1 %105, label %for.body, label %for.end, !dbg !5123

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !5123

for.inc:                                          ; preds = %for.body
  %106 = load i32, i32* %i, align 4, !dbg !5124
  %inc = add nsw i32 %106, 1, !dbg !5124
  store i32 %inc, i32* %i, align 4, !dbg !5124
  %107 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5125
  %next109 = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %107, i32 0, i32 1, !dbg !5126
  %108 = load %struct.SuggItem*, %struct.SuggItem** %next109, align 8, !dbg !5126
  store %struct.SuggItem* %108, %struct.SuggItem** %item, align 8, !dbg !5127
  br label %for.cond, !dbg !5128, !llvm.loop !5129

for.end:                                          ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !5131
  br label %for.cond110, !dbg !5133

for.cond110:                                      ; preds = %for.inc147, %for.end
  %109 = load i32, i32* %i, align 4, !dbg !5134
  %cmp111 = icmp slt i32 %109, 7, !dbg !5136
  br i1 %cmp111, label %land.rhs113, label %land.end115, !dbg !5137

land.rhs113:                                      ; preds = %for.cond110
  %110 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5138
  %tobool114 = icmp ne %struct.SuggItem* %110, null, !dbg !5137
  br label %land.end115

land.end115:                                      ; preds = %land.rhs113, %for.cond110
  %111 = phi i1 [ false, %for.cond110 ], [ %tobool114, %land.rhs113 ], !dbg !5139
  br i1 %111, label %for.body116, label %for.end150, !dbg !5140

for.body116:                                      ; preds = %land.end115
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5141, metadata !DIExpression()), !dbg !5143
  %112 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5144
  %name = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %112, i32 0, i32 2, !dbg !5145
  %113 = load i8*, i8** %name, align 8, !dbg !5145
  %call117 = call i8* @txt_utf8_forward_columns(i8* %113, i32 20, i32* null), !dbg !5146
  %114 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5147
  %name118 = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %114, i32 0, i32 2, !dbg !5148
  %115 = load i8*, i8** %name118, align 8, !dbg !5148
  %sub.ptr.lhs.cast = ptrtoint i8* %call117 to i64, !dbg !5149
  %sub.ptr.rhs.cast = ptrtoint i8* %115 to i64, !dbg !5149
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5149
  %conv119 = trunc i64 %sub.ptr.sub to i32, !dbg !5146
  store i32 %conv119, i32* %len, align 4, !dbg !5143
  %116 = load i32, i32* %lheight, align 4, !dbg !5150
  %117 = load i32, i32* %y, align 4, !dbg !5151
  %sub120 = sub nsw i32 %117, %116, !dbg !5151
  store i32 %sub120, i32* %y, align 4, !dbg !5151
  %arraydecay = getelementptr inbounds [121 x i8], [121 x i8]* %str, i64 0, i64 0, !dbg !5152
  %118 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5153
  %name121 = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %118, i32 0, i32 2, !dbg !5154
  %119 = load i8*, i8** %name121, align 8, !dbg !5154
  %120 = load i32, i32* %len, align 4, !dbg !5155
  %add122 = add nsw i32 %120, 1, !dbg !5156
  %conv123 = sext i32 %add122 to i64, !dbg !5155
  %call124 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %119, i64 %conv123), !dbg !5157
  %121 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5158
  %cwidth125 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %121, i32 0, i32 12, !dbg !5159
  %122 = load i8, i8* %cwidth125, align 2, !dbg !5159
  %conv126 = zext i8 %122 to i32, !dbg !5158
  %123 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5160
  %arraydecay127 = getelementptr inbounds [121 x i8], [121 x i8]* %str, i64 0, i64 0, !dbg !5161
  %124 = load i32, i32* %len, align 4, !dbg !5162
  %call128 = call i32 @text_get_char_pos(%struct.SpaceText* %123, i8* %arraydecay127, i32 %124), !dbg !5163
  %mul129 = mul nsw i32 %conv126, %call128, !dbg !5164
  store i32 %mul129, i32* %w, align 4, !dbg !5165
  %125 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5166
  %126 = load %struct.SuggItem*, %struct.SuggItem** %sel, align 8, !dbg !5168
  %cmp130 = icmp eq %struct.SuggItem* %125, %126, !dbg !5169
  br i1 %cmp130, label %if.then132, label %if.end139, !dbg !5170

if.then132:                                       ; preds = %for.body116
  call void @UI_ThemeColor(i32 22), !dbg !5171
  %127 = load i32, i32* %x, align 4, !dbg !5173
  %add133 = add nsw i32 %127, 2, !dbg !5174
  %128 = load i32, i32* %y, align 4, !dbg !5175
  %sub134 = sub nsw i32 %128, 3, !dbg !5176
  %129 = load i32, i32* %x, align 4, !dbg !5177
  %add135 = add nsw i32 %129, 2, !dbg !5178
  %130 = load i32, i32* %w, align 4, !dbg !5179
  %add136 = add nsw i32 %add135, %130, !dbg !5180
  %131 = load i32, i32* %y, align 4, !dbg !5181
  %132 = load i32, i32* %lheight, align 4, !dbg !5182
  %add137 = add nsw i32 %131, %132, !dbg !5183
  %sub138 = sub nsw i32 %add137, 3, !dbg !5184
  call void @glRecti(i32 %add133, i32 %sub134, i32 %add136, i32 %sub138), !dbg !5185
  br label %if.end139, !dbg !5186

if.end139:                                        ; preds = %if.then132, %for.body116
  %133 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5187
  %type = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %133, i32 0, i32 3, !dbg !5188
  %134 = load i8, i8* %type, align 8, !dbg !5188
  call void @format_draw_color(i8 zeroext %134), !dbg !5189
  %135 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5190
  %arraydecay140 = getelementptr inbounds [121 x i8], [121 x i8]* %str, i64 0, i64 0, !dbg !5191
  %136 = load i32, i32* %x, align 4, !dbg !5192
  %add141 = add nsw i32 %136, 2, !dbg !5193
  %137 = load i32, i32* %y, align 4, !dbg !5194
  %sub142 = sub nsw i32 %137, 1, !dbg !5195
  call void @text_draw(%struct.SpaceText* %135, i8* %arraydecay140, i32 0, i32 0, i32 %add141, i32 %sub142, i8* null), !dbg !5196
  %138 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5197
  %139 = load %struct.SuggItem*, %struct.SuggItem** %last, align 8, !dbg !5199
  %cmp143 = icmp eq %struct.SuggItem* %138, %139, !dbg !5200
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !5201

if.then145:                                       ; preds = %if.end139
  br label %for.end150, !dbg !5202

if.end146:                                        ; preds = %if.end139
  br label %for.inc147, !dbg !5203

for.inc147:                                       ; preds = %if.end146
  %140 = load i32, i32* %i, align 4, !dbg !5204
  %inc148 = add nsw i32 %140, 1, !dbg !5204
  store i32 %inc148, i32* %i, align 4, !dbg !5204
  %141 = load %struct.SuggItem*, %struct.SuggItem** %item, align 8, !dbg !5205
  %next149 = getelementptr inbounds %struct.SuggItem, %struct.SuggItem* %141, i32 0, i32 1, !dbg !5206
  %142 = load %struct.SuggItem*, %struct.SuggItem** %next149, align 8, !dbg !5206
  store %struct.SuggItem* %142, %struct.SuggItem** %item, align 8, !dbg !5207
  br label %for.cond110, !dbg !5208, !llvm.loop !5209

for.end150:                                       ; preds = %if.then, %if.then7, %if.then13, %if.then145, %land.end115
  ret void, !dbg !5211
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_font_end(%struct.SpaceText* %UNUSED_st) #0 !dbg !5212 {
entry:
  %UNUSED_st.addr = alloca %struct.SpaceText*, align 8
  store %struct.SpaceText* %UNUSED_st, %struct.SpaceText** %UNUSED_st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %UNUSED_st.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  ret void, !dbg !5215
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_update_character_width(%struct.SpaceText* %st) #0 !dbg !5216 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5219
  call void @text_font_begin(%struct.SpaceText* %0), !dbg !5220
  %1 = load i32, i32* @blf_mono_font, align 4, !dbg !5221
  %call = call float @BLF_fixed_width(i32 %1), !dbg !5222
  %conv = fptoui float %call to i8, !dbg !5222
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5223
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 12, !dbg !5224
  store i8 %conv, i8* %cwidth, align 2, !dbg !5225
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5226
  %cwidth1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 12, !dbg !5226
  %4 = load i8, i8* %cwidth1, align 2, !dbg !5226
  %conv2 = zext i8 %4 to i32, !dbg !5226
  %cmp = icmp sgt i32 %conv2, 1, !dbg !5226
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5226

cond.true:                                        ; preds = %entry
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5226
  %cwidth4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %5, i32 0, i32 12, !dbg !5226
  %6 = load i8, i8* %cwidth4, align 2, !dbg !5226
  %conv5 = zext i8 %6 to i32, !dbg !5226
  br label %cond.end, !dbg !5226

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ 1, %cond.false ], !dbg !5226
  %conv6 = trunc i32 %cond to i8, !dbg !5226
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5227
  %cwidth7 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 12, !dbg !5228
  store i8 %conv6, i8* %cwidth7, align 2, !dbg !5229
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !5230
  call void @text_font_end(%struct.SpaceText* %8), !dbg !5231
  ret void, !dbg !5232
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_scroll_to_cursor(%struct.SpaceText* %st, %struct.ScrArea* %sa) #0 !dbg !5233 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %winx = alloca i32, align 4
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !6471, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6473, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6475, metadata !DIExpression()), !dbg !6476
  store %struct.ARegion* null, %struct.ARegion** %ar, align 8, !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6479, metadata !DIExpression()), !dbg !6480
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !6481, metadata !DIExpression()), !dbg !6482
  store i32 0, i32* %winx, align 4, !dbg !6482
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6483
  %cmp = icmp eq %struct.SpaceText* null, %0, !dbg !6483
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6483

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6483
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 6, !dbg !6483
  %2 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !6483
  %cmp2 = icmp eq %struct.Text* null, %2, !dbg !6483
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !6483

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6483
  %text4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 6, !dbg !6483
  %4 = load %struct.Text*, %struct.Text** %text4, align 8, !dbg !6483
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 5, !dbg !6483
  %5 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6483
  %cmp5 = icmp eq %struct.TextLine* null, %5, !dbg !6483
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6485

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  br label %return, !dbg !6486

if.end:                                           ; preds = %lor.lhs.false3
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6487
  %text6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 6, !dbg !6488
  %7 = load %struct.Text*, %struct.Text** %text6, align 8, !dbg !6488
  store %struct.Text* %7, %struct.Text** %text, align 8, !dbg !6489
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6490
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 20, !dbg !6492
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !6493
  %9 = load i8*, i8** %first, align 8, !dbg !6493
  %10 = bitcast i8* %9 to %struct.ARegion*, !dbg !6490
  store %struct.ARegion* %10, %struct.ARegion** %ar, align 8, !dbg !6494
  br label %for.cond, !dbg !6495

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6496
  %tobool = icmp ne %struct.ARegion* %11, null, !dbg !6498
  br i1 %tobool, label %for.body, label %for.end, !dbg !6498

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6499
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 8, !dbg !6501
  %13 = load i16, i16* %regiontype, align 2, !dbg !6501
  %conv = sext i16 %13 to i32, !dbg !6499
  %cmp7 = icmp eq i32 %conv, 0, !dbg !6502
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !6503

if.then9:                                         ; preds = %for.body
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6504
  %winx10 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %14, i32 0, i32 5, !dbg !6506
  %15 = load i16, i16* %winx10, align 8, !dbg !6506
  %conv11 = sext i16 %15 to i32, !dbg !6504
  store i32 %conv11, i32* %winx, align 4, !dbg !6507
  br label %for.end, !dbg !6508

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !6509

for.inc:                                          ; preds = %if.end12
  %16 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6510
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 0, !dbg !6511
  %17 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !6511
  store %struct.ARegion* %17, %struct.ARegion** %ar, align 8, !dbg !6512
  br label %for.cond, !dbg !6513, !llvm.loop !6514

for.end:                                          ; preds = %if.then9, %for.cond
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6516
  call void @text_update_character_width(%struct.SpaceText* %18), !dbg !6517
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6518
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 4, !dbg !6519
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6520
  %20 = load i8*, i8** %first13, align 8, !dbg !6520
  %21 = bitcast i8* %20 to %struct.TextLine*, !dbg !6518
  %22 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6521
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 6, !dbg !6522
  %23 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !6522
  %call = call i32 @txt_get_span(%struct.TextLine* %21, %struct.TextLine* %23), !dbg !6523
  store i32 %call, i32* %i, align 4, !dbg !6524
  %24 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6525
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %24, i32 0, i32 24, !dbg !6527
  %25 = load i32, i32* %wordwrap, align 8, !dbg !6527
  %tobool14 = icmp ne i32 %25, 0, !dbg !6525
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !6528

if.then15:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !6529, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !6532, metadata !DIExpression()), !dbg !6533
  %26 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6534
  %27 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6535
  %28 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6536
  %sell16 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 6, !dbg !6537
  %29 = load %struct.TextLine*, %struct.TextLine** %sell16, align 8, !dbg !6537
  %30 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6538
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 8, !dbg !6539
  %31 = load i32, i32* %selc, align 4, !dbg !6539
  call void @wrap_offset(%struct.SpaceText* %26, %struct.ARegion* %27, %struct.TextLine* %29, i32 %31, i32* %offl, i32* %offc), !dbg !6540
  %32 = load i32, i32* %offl, align 4, !dbg !6541
  %33 = load i32, i32* %i, align 4, !dbg !6542
  %add = add nsw i32 %33, %32, !dbg !6542
  store i32 %add, i32* %i, align 4, !dbg !6542
  br label %if.end17, !dbg !6543

if.end17:                                         ; preds = %if.then15, %for.end
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6544
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 7, !dbg !6546
  %35 = load i32, i32* %top, align 8, !dbg !6546
  %36 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6547
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %36, i32 0, i32 8, !dbg !6548
  %37 = load i32, i32* %viewlines, align 4, !dbg !6548
  %add18 = add nsw i32 %35, %37, !dbg !6549
  %38 = load i32, i32* %i, align 4, !dbg !6550
  %cmp19 = icmp sle i32 %add18, %38, !dbg !6551
  br i1 %cmp19, label %if.then25, label %lor.lhs.false21, !dbg !6552

lor.lhs.false21:                                  ; preds = %if.end17
  %39 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6553
  %top22 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %39, i32 0, i32 7, !dbg !6554
  %40 = load i32, i32* %top22, align 8, !dbg !6554
  %41 = load i32, i32* %i, align 4, !dbg !6555
  %cmp23 = icmp sgt i32 %40, %41, !dbg !6556
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !6557

if.then25:                                        ; preds = %lor.lhs.false21, %if.end17
  %42 = load i32, i32* %i, align 4, !dbg !6558
  %43 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6559
  %viewlines26 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %43, i32 0, i32 8, !dbg !6560
  %44 = load i32, i32* %viewlines26, align 4, !dbg !6560
  %div = sdiv i32 %44, 2, !dbg !6561
  %sub = sub nsw i32 %42, %div, !dbg !6562
  %45 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6563
  %top27 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %45, i32 0, i32 7, !dbg !6564
  store i32 %sub, i32* %top27, align 8, !dbg !6565
  br label %if.end28, !dbg !6563

if.end28:                                         ; preds = %if.then25, %lor.lhs.false21
  %46 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6566
  %wordwrap29 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %46, i32 0, i32 24, !dbg !6568
  %47 = load i32, i32* %wordwrap29, align 8, !dbg !6568
  %tobool30 = icmp ne i32 %47, 0, !dbg !6566
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !6569

if.then31:                                        ; preds = %if.end28
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6570
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %48, i32 0, i32 14, !dbg !6572
  store i32 0, i32* %left, align 8, !dbg !6573
  br label %if.end65, !dbg !6574

if.else:                                          ; preds = %if.end28
  %49 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6575
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %49, i32 0, i32 12, !dbg !6577
  %50 = load i8, i8* %cwidth, align 2, !dbg !6577
  %conv32 = zext i8 %50 to i32, !dbg !6575
  %51 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6578
  %52 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6579
  %sell33 = getelementptr inbounds %struct.Text, %struct.Text* %52, i32 0, i32 6, !dbg !6580
  %53 = load %struct.TextLine*, %struct.TextLine** %sell33, align 8, !dbg !6580
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %53, i32 0, i32 2, !dbg !6581
  %54 = load i8*, i8** %line, align 8, !dbg !6581
  %55 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6582
  %selc34 = getelementptr inbounds %struct.Text, %struct.Text* %55, i32 0, i32 8, !dbg !6583
  %56 = load i32, i32* %selc34, align 4, !dbg !6583
  %call35 = call i32 @text_get_char_pos(%struct.SpaceText* %51, i8* %54, i32 %56), !dbg !6584
  %57 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6585
  %left36 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %57, i32 0, i32 14, !dbg !6586
  %58 = load i32, i32* %left36, align 8, !dbg !6586
  %sub37 = sub nsw i32 %call35, %58, !dbg !6587
  %mul = mul nsw i32 %conv32, %sub37, !dbg !6588
  store i32 %mul, i32* %x, align 4, !dbg !6589
  %59 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6590
  %conv38 = sext i16 %59 to i32, !dbg !6590
  %conv39 = sitofp i32 %conv38 to float, !dbg !6590
  %mul40 = fmul float 5.000000e-01, %conv39, !dbg !6590
  %conv41 = fptosi float %mul40 to i32, !dbg !6590
  %60 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6591
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %60, i32 0, i32 15, !dbg !6592
  %61 = load i32, i32* %showlinenrs, align 4, !dbg !6592
  %tobool42 = icmp ne i32 %61, 0, !dbg !6591
  br i1 %tobool42, label %cond.true, label %cond.false, !dbg !6591

cond.true:                                        ; preds = %if.else
  %62 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6593
  %cwidth43 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %62, i32 0, i32 12, !dbg !6593
  %63 = load i8, i8* %cwidth43, align 2, !dbg !6593
  %conv44 = zext i8 %63 to i32, !dbg !6593
  %64 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6593
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %64, i32 0, i32 13, !dbg !6593
  %65 = load i8, i8* %linenrs_tot, align 1, !dbg !6593
  %conv45 = zext i8 %65 to i32, !dbg !6593
  %mul46 = mul nsw i32 %conv44, %conv45, !dbg !6593
  br label %cond.end, !dbg !6591

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !6591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul46, %cond.true ], [ 0, %cond.false ], !dbg !6591
  %add47 = add nsw i32 %conv41, %cond, !dbg !6594
  %66 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6595
  %conv48 = sext i16 %66 to i32, !dbg !6595
  %add49 = add nsw i32 %add47, %conv48, !dbg !6596
  %67 = load i32, i32* %winx, align 4, !dbg !6597
  %sub50 = sub nsw i32 %67, %add49, !dbg !6597
  store i32 %sub50, i32* %winx, align 4, !dbg !6597
  %68 = load i32, i32* %x, align 4, !dbg !6598
  %cmp51 = icmp sle i32 %68, 0, !dbg !6600
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !6601

lor.lhs.false53:                                  ; preds = %cond.end
  %69 = load i32, i32* %x, align 4, !dbg !6602
  %70 = load i32, i32* %winx, align 4, !dbg !6603
  %cmp54 = icmp sgt i32 %69, %70, !dbg !6604
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !6605

if.then56:                                        ; preds = %lor.lhs.false53, %cond.end
  %71 = load i32, i32* %x, align 4, !dbg !6606
  %72 = load i32, i32* %winx, align 4, !dbg !6607
  %div57 = sdiv i32 %72, 2, !dbg !6608
  %sub58 = sub nsw i32 %71, %div57, !dbg !6609
  %73 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6610
  %cwidth59 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %73, i32 0, i32 12, !dbg !6611
  %74 = load i8, i8* %cwidth59, align 2, !dbg !6611
  %conv60 = zext i8 %74 to i32, !dbg !6610
  %div61 = sdiv i32 %sub58, %conv60, !dbg !6612
  %75 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6613
  %left62 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %75, i32 0, i32 14, !dbg !6614
  %76 = load i32, i32* %left62, align 8, !dbg !6615
  %add63 = add nsw i32 %76, %div61, !dbg !6615
  store i32 %add63, i32* %left62, align 8, !dbg !6615
  br label %if.end64, !dbg !6613

if.end64:                                         ; preds = %if.then56, %lor.lhs.false53
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then31
  %77 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6616
  %top66 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %77, i32 0, i32 7, !dbg !6618
  %78 = load i32, i32* %top66, align 8, !dbg !6618
  %cmp67 = icmp slt i32 %78, 0, !dbg !6619
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !6620

if.then69:                                        ; preds = %if.end65
  %79 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6621
  %top70 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %79, i32 0, i32 7, !dbg !6622
  store i32 0, i32* %top70, align 8, !dbg !6623
  br label %if.end71, !dbg !6621

if.end71:                                         ; preds = %if.then69, %if.end65
  %80 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6624
  %left72 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %80, i32 0, i32 14, !dbg !6626
  %81 = load i32, i32* %left72, align 8, !dbg !6626
  %cmp73 = icmp slt i32 %81, 0, !dbg !6627
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !6628

if.then75:                                        ; preds = %if.end71
  %82 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6629
  %left76 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %82, i32 0, i32 14, !dbg !6630
  store i32 0, i32* %left76, align 8, !dbg !6631
  br label %if.end77, !dbg !6629

if.end77:                                         ; preds = %if.then75, %if.end71
  %83 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6632
  %scroll_accum = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %83, i32 0, i32 32, !dbg !6633
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum, i64 0, i64 0, !dbg !6632
  store float 0.000000e+00, float* %arrayidx, align 8, !dbg !6634
  %84 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6635
  %scroll_accum78 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %84, i32 0, i32 32, !dbg !6636
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum78, i64 0, i64 1, !dbg !6635
  store float 0.000000e+00, float* %arrayidx79, align 4, !dbg !6637
  br label %return, !dbg !6638

return:                                           ; preds = %if.end77, %if.then
  ret void, !dbg !6638
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_update_cursor_moved(%struct.bContext* %C) #0 !dbg !6639 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %st = alloca %struct.SpaceText*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6649, metadata !DIExpression()), !dbg !6650
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6651
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !6652
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !6650
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !6653, metadata !DIExpression()), !dbg !6654
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6655
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !6656
  store %struct.SpaceText* %call1, %struct.SpaceText** %st, align 8, !dbg !6654
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6657
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6658
  call void @text_scroll_to_cursor(%struct.SpaceText* %2, %struct.ScrArea* %3), !dbg !6659
  ret void, !dbg !6660
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local %struct.SpaceText* @CTX_wm_space_text(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @text_drawcache_init(%struct.SpaceText* %st) #0 !dbg !6661 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %drawcache = alloca %struct.DrawCache*, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata %struct.DrawCache** %drawcache, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6666
  %call = call i8* %0(i64 112, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !6666
  %1 = bitcast i8* %call to %struct.DrawCache*, !dbg !6666
  store %struct.DrawCache* %1, %struct.DrawCache** %drawcache, align 8, !dbg !6665
  %2 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !6667
  %winx = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %2, i32 0, i32 3, !dbg !6668
  store i32 -1, i32* %winx, align 8, !dbg !6669
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6670
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 6, !dbg !6671
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6671
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 4, !dbg !6672
  %call1 = call i32 @BLI_countlist(%struct.ListBase* %lines), !dbg !6673
  %5 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !6674
  %nlines = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %5, i32 0, i32 2, !dbg !6675
  store i32 %call1, i32* %nlines, align 4, !dbg !6676
  %6 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !6677
  %text_id = getelementptr inbounds %struct.DrawCache, %struct.DrawCache* %6, i32 0, i32 9, !dbg !6678
  %arrayidx = getelementptr inbounds [66 x i8], [66 x i8]* %text_id, i64 0, i64 0, !dbg !6677
  store i8 0, i8* %arrayidx, align 1, !dbg !6679
  %7 = load %struct.DrawCache*, %struct.DrawCache** %drawcache, align 8, !dbg !6680
  %8 = bitcast %struct.DrawCache* %7 to i8*, !dbg !6680
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6681
  %drawcache2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 31, !dbg !6682
  store i8* %8, i8** %drawcache2, align 8, !dbg !6683
  ret void, !dbg !6684
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare dso_local double @log10(double) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local void @BLF_size(i32, i32, i32) #2

declare dso_local void @glColor4ub(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @glBlendFunc(i32, i32) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @BLF_position(i32, float, float, float) #2

declare dso_local i32 @BLF_draw_mono(i32, i8*, i64, i32) #2

declare dso_local i32 @flatten_string(%struct.SpaceText*, %struct.FlattenString*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @txt_utf8_forward_columns(i8* %str, i32 %columns, i32* %padding) #0 !dbg !6685 {
entry:
  %str.addr = alloca i8*, align 8
  %columns.addr = alloca i32, align 4
  %padding.addr = alloca i32*, align 8
  %col = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  store i32 %columns, i32* %columns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %columns.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  store i32* %padding, i32** %padding.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %padding.addr, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %col, metadata !6694, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6696, metadata !DIExpression()), !dbg !6697
  %0 = load i8*, i8** %str.addr, align 8, !dbg !6698
  store i8* %0, i8** %p, align 8, !dbg !6697
  br label %while.cond, !dbg !6699

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !6700
  %2 = load i8, i8* %1, align 1, !dbg !6701
  %tobool = icmp ne i8 %2, 0, !dbg !6699
  br i1 %tobool, label %while.body, label %while.end, !dbg !6699

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !6702
  %call = call i32 @BLI_str_utf8_char_width(i8* %3), !dbg !6704
  store i32 %call, i32* %col, align 4, !dbg !6705
  %4 = load i32, i32* %columns.addr, align 4, !dbg !6706
  %5 = load i32, i32* %col, align 4, !dbg !6708
  %sub = sub nsw i32 %4, %5, !dbg !6709
  %cmp = icmp slt i32 %sub, 0, !dbg !6710
  br i1 %cmp, label %if.then, label %if.end, !dbg !6711

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6712

if.end:                                           ; preds = %while.body
  %6 = load i32, i32* %col, align 4, !dbg !6713
  %7 = load i32, i32* %columns.addr, align 4, !dbg !6714
  %sub1 = sub nsw i32 %7, %6, !dbg !6714
  store i32 %sub1, i32* %columns.addr, align 4, !dbg !6714
  %8 = load i8*, i8** %p, align 8, !dbg !6715
  %call2 = call i32 @BLI_str_utf8_size_safe(i8* %8), !dbg !6716
  %9 = load i8*, i8** %p, align 8, !dbg !6717
  %idx.ext = sext i32 %call2 to i64, !dbg !6717
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext, !dbg !6717
  store i8* %add.ptr, i8** %p, align 8, !dbg !6717
  %10 = load i32, i32* %columns.addr, align 4, !dbg !6718
  %cmp3 = icmp eq i32 %10, 0, !dbg !6720
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6721

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !6722

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !6699, !llvm.loop !6723

while.end:                                        ; preds = %if.then4, %if.then, %while.cond
  %11 = load i32*, i32** %padding.addr, align 8, !dbg !6725
  %tobool6 = icmp ne i32* %11, null, !dbg !6725
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !6727

if.then7:                                         ; preds = %while.end
  %12 = load i8*, i8** %p, align 8, !dbg !6728
  %13 = load i8, i8* %12, align 1, !dbg !6729
  %conv = zext i8 %13 to i32, !dbg !6729
  %tobool8 = icmp ne i32 %conv, 0, !dbg !6729
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !6729

cond.true:                                        ; preds = %if.then7
  %14 = load i32, i32* %columns.addr, align 4, !dbg !6730
  br label %cond.end, !dbg !6729

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !6729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %cond.false ], !dbg !6729
  %15 = load i32*, i32** %padding.addr, align 8, !dbg !6731
  store i32 %cond, i32* %15, align 4, !dbg !6732
  br label %if.end9, !dbg !6733

if.end9:                                          ; preds = %cond.end, %while.end
  %16 = load i8*, i8** %p, align 8, !dbg !6734
  ret i8* %16, !dbg !6735
}

declare dso_local i64 @BLI_strnlen_utf8(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @format_draw_color(i8 zeroext %formatchar) #0 !dbg !6736 {
entry:
  %formatchar.addr = alloca i8, align 1
  store i8 %formatchar, i8* %formatchar.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %formatchar.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load i8, i8* %formatchar.addr, align 1, !dbg !6741
  %conv = zext i8 %0 to i32, !dbg !6741
  switch i32 %conv, label %sw.default [
    i32 95, label %sw.bb
    i32 33, label %sw.bb1
    i32 35, label %sw.bb2
    i32 110, label %sw.bb3
    i32 108, label %sw.bb4
    i32 100, label %sw.bb5
    i32 118, label %sw.bb6
    i32 114, label %sw.bb7
    i32 98, label %sw.bb8
    i32 113, label %sw.bb9
  ], !dbg !6742

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !6743

sw.bb1:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 73), !dbg !6745
  br label %sw.epilog, !dbg !6746

sw.bb2:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 69), !dbg !6747
  br label %sw.epilog, !dbg !6748

sw.bb3:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 72), !dbg !6749
  br label %sw.epilog, !dbg !6750

sw.bb4:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 70), !dbg !6751
  br label %sw.epilog, !dbg !6752

sw.bb5:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 71), !dbg !6753
  br label %sw.epilog, !dbg !6754

sw.bb6:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 67), !dbg !6755
  br label %sw.epilog, !dbg !6756

sw.bb7:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 68), !dbg !6757
  br label %sw.epilog, !dbg !6758

sw.bb8:                                           ; preds = %entry
  call void @UI_ThemeColor(i32 66), !dbg !6759
  br label %sw.epilog, !dbg !6760

sw.bb9:                                           ; preds = %entry
  br label %sw.default, !dbg !6760

sw.default:                                       ; preds = %entry, %sw.bb9
  call void @UI_ThemeColor(i32 3), !dbg !6761
  br label %sw.epilog, !dbg !6762

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !6763
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_font_draw_character_utf8(%struct.SpaceText* %st, i32 %x, i32 %y, i8* %c) #0 !dbg !6764 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %c.addr = alloca i8*, align 8
  %columns = alloca i32, align 4
  %len = alloca i64, align 8
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6769, metadata !DIExpression()), !dbg !6770
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !6773, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6775, metadata !DIExpression()), !dbg !6779
  %0 = load i8*, i8** %c.addr, align 8, !dbg !6780
  %call = call i32 @BLI_str_utf8_size_safe(i8* %0), !dbg !6781
  %conv = sext i32 %call to i64, !dbg !6781
  store i64 %conv, i64* %len, align 8, !dbg !6779
  %1 = load i32, i32* @blf_mono_font, align 4, !dbg !6782
  %2 = load i32, i32* %x.addr, align 4, !dbg !6783
  %conv1 = sitofp i32 %2 to float, !dbg !6783
  %3 = load i32, i32* %y.addr, align 4, !dbg !6784
  %conv2 = sitofp i32 %3 to float, !dbg !6784
  call void @BLF_position(i32 %1, float %conv1, float %conv2, float 0.000000e+00), !dbg !6785
  %4 = load i32, i32* @blf_mono_font, align 4, !dbg !6786
  %5 = load i8*, i8** %c.addr, align 8, !dbg !6787
  %6 = load i64, i64* %len, align 8, !dbg !6788
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6789
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 12, !dbg !6790
  %8 = load i8, i8* %cwidth, align 2, !dbg !6790
  %conv3 = zext i8 %8 to i32, !dbg !6789
  %call4 = call i32 @BLF_draw_mono(i32 %4, i8* %5, i64 %6, i32 %conv3), !dbg !6791
  store i32 %call4, i32* %columns, align 4, !dbg !6792
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6793
  %cwidth5 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 12, !dbg !6794
  %10 = load i8, i8* %cwidth5, align 2, !dbg !6794
  %conv6 = zext i8 %10 to i32, !dbg !6793
  %11 = load i32, i32* %columns, align 4, !dbg !6795
  %mul = mul nsw i32 %conv6, %11, !dbg !6796
  ret i32 %mul, !dbg !6797
}

declare dso_local void @flatten_string_free(%struct.FlattenString*) #2

declare dso_local i32 @BLI_str_utf8_char_width(i8*) #2

declare dso_local i32 @text_check_bracket(i8 zeroext) #2

declare dso_local i32 @txt_utf8_offset_to_index(i8*, i32) #2

declare dso_local i8* @BLI_str_prev_char_utf8(i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_font_draw_character(%struct.SpaceText* %st, i32 %x, i32 %y, i8 zeroext %c) #0 !dbg !6798 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6805, metadata !DIExpression()), !dbg !6806
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  %0 = load i32, i32* @blf_mono_font, align 4, !dbg !6809
  %1 = load i32, i32* %x.addr, align 4, !dbg !6810
  %conv = sitofp i32 %1 to float, !dbg !6810
  %2 = load i32, i32* %y.addr, align 4, !dbg !6811
  %conv1 = sitofp i32 %2 to float, !dbg !6811
  call void @BLF_position(i32 %0, float %conv, float %conv1, float 0.000000e+00), !dbg !6812
  %3 = load i32, i32* @blf_mono_font, align 4, !dbg !6813
  call void @BLF_draw(i32 %3, i8* %c.addr, i64 1), !dbg !6814
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6815
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 12, !dbg !6816
  %5 = load i8, i8* %cwidth, align 2, !dbg !6816
  %conv2 = zext i8 %5 to i32, !dbg !6815
  ret i32 %conv2, !dbg !6817
}

declare dso_local void @BLF_draw(i32, i8*, i64) #2

declare dso_local %struct.bTheme* @UI_GetTheme() #2

declare dso_local void @uiWidgetScrollDraw(%struct.uiWidgetColors*, %struct.rcti*, %struct.rcti*, i32) #2

declare dso_local void @uiSetRoundBox(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !6818 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  %0 = load i32, i32* %a.addr, align 4, !dbg !6826
  %1 = load i32, i32* %b.addr, align 4, !dbg !6827
  %cmp = icmp slt i32 %0, %1, !dbg !6828
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6829

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !6830
  br label %cond.end, !dbg !6829

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !6831
  br label %cond.end, !dbg !6829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6829
  ret i32 %cond, !dbg !6832
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !6833 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !6841
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !6842
  %1 = load i32, i32* %xmax, align 4, !dbg !6842
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !6843
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !6844
  %3 = load i32, i32* %xmin, align 4, !dbg !6844
  %sub = sub nsw i32 %1, %3, !dbg !6845
  ret i32 %sub, !dbg !6846
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !6847 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !6850
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !6851
  %1 = load i32, i32* %ymax, align 4, !dbg !6851
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !6852
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !6853
  %3 = load i32, i32* %ymin, align 4, !dbg !6853
  %sub = sub nsw i32 %1, %3, !dbg !6854
  ret i32 %sub, !dbg !6855
}

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #2

declare dso_local void @glColor4ubv(i8*) #2

declare dso_local void @uiRoundBox(float, float, float, float, float) #2

declare dso_local signext i16 @texttool_text_is_active(%struct.Text*) #2

declare dso_local i8* @texttool_docs_get() #2

declare dso_local %struct.SuggItem* @texttool_suggest_first() #2

declare dso_local %struct.SuggItem* @texttool_suggest_last() #2

declare dso_local void @text_pop_suggest_list() #2

declare dso_local %struct.SuggItem* @texttool_suggest_selected() #2

declare dso_local i32* @texttool_suggest_top() #2

declare dso_local i32 @text_find_identifier_start(i8*, i32) #2

declare dso_local void @uiDrawBoxShadow(i8 zeroext, float, float, float, float) #2

declare dso_local void @UI_ThemeColorShade(i32, i32) #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!270, !271, !272}
!llvm.ident = !{!273}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !243, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/editors/space_text/text_draw.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !200, !210, !221, !234}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 54, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199}
!7 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!96 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!97 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!98 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!99 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!100 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!101 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!102 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!103 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!104 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!105 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!106 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!107 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!108 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!109 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!110 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!111 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!112 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!113 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!114 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!115 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!116 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!117 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!118 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!119 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!120 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!121 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!122 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!123 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!124 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!125 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!126 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!127 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!128 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!129 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!130 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!131 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!132 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!133 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!134 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!135 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!136 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!137 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!138 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!139 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!140 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!141 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!142 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!143 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!144 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!145 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!146 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!147 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!148 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!149 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!150 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!151 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!152 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!153 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!154 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!155 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!156 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!157 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!158 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!159 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!160 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!161 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!162 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!163 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!164 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!165 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!166 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!167 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!168 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!169 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!170 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!171 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!172 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!173 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!174 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!175 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!176 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!177 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!178 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!179 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!180 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!181 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!182 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!183 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!184 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!185 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!186 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!187 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!188 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!189 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!190 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!191 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!192 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!193 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!194 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!195 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!196 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!197 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!198 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!199 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceText_Flags", file: !201, line: 860, baseType: !5, size: 32, elements: !202)
!201 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!202 = !{!203, !204, !205, !206, !207, !208, !209}
!203 = !DIEnumerator(name: "ST_SCROLL_SELECT", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "ST_CLEAR_NAMESPACE", value: 16, isUnsigned: true)
!205 = !DIEnumerator(name: "ST_FIND_WRAP", value: 32, isUnsigned: true)
!206 = !DIEnumerator(name: "ST_FIND_ALL", value: 64, isUnsigned: true)
!207 = !DIEnumerator(name: "ST_SHOW_MARGIN", value: 128, isUnsigned: true)
!208 = !DIEnumerator(name: "ST_MATCH_CASE", value: 256, isUnsigned: true)
!209 = !DIEnumerator(name: "ST_FIND_ACTIVATE", value: 512, isUnsigned: true)
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !211, line: 361, baseType: !5, size: 32, elements: !212)
!211 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220}
!213 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!214 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!215 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!216 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!217 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!218 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!219 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!220 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 85, baseType: !5, size: 32, elements: !223)
!222 = !DIFile(filename: "blender/source/blender/editors/space_text/text_format.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!223 = !{!224, !225, !226, !227, !228, !229, !230, !231, !232, !233}
!224 = !DIEnumerator(name: "FMT_TYPE_WHITESPACE", value: 95, isUnsigned: true)
!225 = !DIEnumerator(name: "FMT_TYPE_COMMENT", value: 35, isUnsigned: true)
!226 = !DIEnumerator(name: "FMT_TYPE_SYMBOL", value: 33, isUnsigned: true)
!227 = !DIEnumerator(name: "FMT_TYPE_NUMERAL", value: 110, isUnsigned: true)
!228 = !DIEnumerator(name: "FMT_TYPE_STRING", value: 108, isUnsigned: true)
!229 = !DIEnumerator(name: "FMT_TYPE_DIRECTIVE", value: 100, isUnsigned: true)
!230 = !DIEnumerator(name: "FMT_TYPE_SPECIAL", value: 118, isUnsigned: true)
!231 = !DIEnumerator(name: "FMT_TYPE_RESERVED", value: 114, isUnsigned: true)
!232 = !DIEnumerator(name: "FMT_TYPE_KEYWORD", value: 98, isUnsigned: true)
!233 = !DIEnumerator(name: "FMT_TYPE_DEFAULT", value: 113, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !235, line: 787, baseType: !5, size: 32, elements: !236)
!235 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!236 = !{!237, !238, !239, !240, !241, !242}
!237 = !DIEnumerator(name: "UI_CNR_TOP_LEFT", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "UI_CNR_TOP_RIGHT", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "UI_CNR_BOTTOM_RIGHT", value: 4, isUnsigned: true)
!240 = !DIEnumerator(name: "UI_CNR_BOTTOM_LEFT", value: 8, isUnsigned: true)
!241 = !DIEnumerator(name: "UI_CNR_NONE", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UI_CNR_ALL", value: 15, isUnsigned: true)
!243 = !{!244, !245, !246, !261, !269}
!244 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawCache", file: !1, line: 515, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DrawCache", file: !1, line: 502, size: 896, elements: !249)
!249 = !{!250, !252, !253, !254, !255, !256, !257, !258, !260, !262, !266, !267, !268}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "line_height", scope: !248, file: !1, line: 503, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "total_lines", scope: !248, file: !1, line: 504, baseType: !244, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !248, file: !1, line: 504, baseType: !244, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !248, file: !1, line: 507, baseType: !244, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "wordwrap", scope: !248, file: !1, line: 507, baseType: !244, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "showlinenrs", scope: !248, file: !1, line: 507, baseType: !244, size: 32, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tabnumber", scope: !248, file: !1, line: 507, baseType: !244, size: 32, offset: 224)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "lheight", scope: !248, file: !1, line: 508, baseType: !259, size: 16, offset: 256)
!259 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "cwidth", scope: !248, file: !1, line: 509, baseType: !261, size: 8, offset: 272)
!261 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "text_id", scope: !248, file: !1, line: 510, baseType: !263, size: 528, offset: 280)
!263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 528, elements: !264)
!264 = !{!265}
!265 = !DISubrange(count: 66)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "update_flag", scope: !248, file: !1, line: 513, baseType: !259, size: 16, offset: 816)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "valid_head", scope: !248, file: !1, line: 514, baseType: !244, size: 32, offset: 832)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "valid_tail", scope: !248, file: !1, line: 514, baseType: !244, size: 32, offset: 864)
!269 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!270 = !{i32 7, !"Dwarf Version", i32 4}
!271 = !{i32 2, !"Debug Info Version", i32 3}
!272 = !{i32 1, !"wchar_size", i32 4}
!273 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!274 = distinct !DISubprogram(name: "wrap_width", scope: !1, file: !1, line: 175, type: !275, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!275 = !DISubroutineType(types: !276)
!276 = !{!244, !277, !439}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceText", file: !201, line: 856, baseType: !279)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceText", file: !201, line: 818, size: 5440, elements: !280)
!280 = !{!281, !302, !303, !304, !305, !306, !307, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !420, !421, !422, !423, !427, !428, !429, !430, !434, !435}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !201, line: 819, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !201, line: 91, baseType: !284)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !201, line: 85, size: 448, elements: !285)
!285 = !{!286, !288, !289, !296, !297, !298}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !201, line: 86, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !201, line: 86, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !284, file: !201, line: 87, baseType: !290, size: 128, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !291, line: 71, baseType: !292)
!291 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !291, line: 69, size: 128, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !292, file: !291, line: 70, baseType: !245, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !292, file: !291, line: 70, baseType: !245, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !284, file: !201, line: 88, baseType: !244, size: 32, offset: 256)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !284, file: !201, line: 89, baseType: !269, size: 32, offset: 288)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !284, file: !201, line: 90, baseType: !299, size: 128, offset: 320)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 128, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 8)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !279, file: !201, line: 819, baseType: !282, size: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !279, file: !201, line: 820, baseType: !290, size: 128, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !279, file: !201, line: 821, baseType: !244, size: 32, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !279, file: !201, line: 822, baseType: !269, size: 32, offset: 288)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !279, file: !201, line: 823, baseType: !299, size: 128, offset: 320)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !279, file: !201, line: 825, baseType: !308, size: 64, offset: 448)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !310, line: 50, size: 1664, elements: !311)
!310 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!311 = !{!312, !371, !373, !374, !375, !376, !388, !389, !390, !391, !392, !393, !394, !395}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !309, file: !310, line: 51, baseType: !313, size: 960)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !314, line: 130, baseType: !315)
!314 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !314, line: 117, size: 960, elements: !316)
!316 = !{!317, !318, !319, !321, !340, !341, !342, !343, !344, !345}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !315, file: !314, line: 118, baseType: !245, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !315, file: !314, line: 118, baseType: !245, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !315, file: !314, line: 119, baseType: !320, size: 64, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !315, file: !314, line: 120, baseType: !322, size: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !314, line: 136, size: 17600, elements: !324)
!324 = !{!325, !326, !328, !331, !335, !336, !337}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !323, file: !314, line: 137, baseType: !313, size: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !323, file: !314, line: 138, baseType: !327, size: 64, offset: 960)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !323, file: !314, line: 139, baseType: !329, size: 64, offset: 1024)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !314, line: 43, flags: DIFlagFwdDecl)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !323, file: !314, line: 140, baseType: !332, size: 8192, offset: 1088)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 8192, elements: !333)
!333 = !{!334}
!334 = !DISubrange(count: 1024)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !323, file: !314, line: 141, baseType: !332, size: 8192, offset: 9280)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !323, file: !314, line: 148, baseType: !322, size: 64, offset: 17472)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !323, file: !314, line: 150, baseType: !338, size: 64, offset: 17536)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !314, line: 45, flags: DIFlagFwdDecl)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !315, file: !314, line: 121, baseType: !263, size: 528, offset: 256)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !315, file: !314, line: 126, baseType: !259, size: 16, offset: 784)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !315, file: !314, line: 127, baseType: !244, size: 32, offset: 800)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !315, file: !314, line: 128, baseType: !244, size: 32, offset: 832)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !315, file: !314, line: 128, baseType: !244, size: 32, offset: 864)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !315, file: !314, line: 129, baseType: !346, size: 64, offset: 896)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !314, line: 75, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !314, line: 62, size: 1024, elements: !349)
!349 = !{!350, !352, !353, !354, !355, !356, !360, !361, !369, !370}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !348, file: !314, line: 63, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !348, file: !314, line: 63, baseType: !351, size: 64, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !348, file: !314, line: 64, baseType: !261, size: 8, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !348, file: !314, line: 64, baseType: !261, size: 8, offset: 136)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !348, file: !314, line: 65, baseType: !259, size: 16, offset: 144)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !348, file: !314, line: 66, baseType: !357, size: 512, offset: 160)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 512, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !348, file: !314, line: 67, baseType: !244, size: 32, offset: 672)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !348, file: !314, line: 69, baseType: !362, size: 256, offset: 704)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !314, line: 60, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !314, line: 48, size: 256, elements: !364)
!364 = !{!365, !366, !367, !368}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !363, file: !314, line: 49, baseType: !245, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !363, file: !314, line: 58, baseType: !290, size: 128, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !363, file: !314, line: 59, baseType: !244, size: 32, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !363, file: !314, line: 59, baseType: !244, size: 32, offset: 224)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !348, file: !314, line: 70, baseType: !244, size: 32, offset: 960)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !348, file: !314, line: 74, baseType: !244, size: 32, offset: 992)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !310, line: 53, baseType: !372, size: 64, offset: 960)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !309, file: !310, line: 55, baseType: !244, size: 32, offset: 1024)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !309, file: !310, line: 55, baseType: !244, size: 32, offset: 1056)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !309, file: !310, line: 57, baseType: !290, size: 128, offset: 1088)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !309, file: !310, line: 58, baseType: !377, size: 64, offset: 1216)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !310, line: 48, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !310, line: 42, size: 320, elements: !380)
!380 = !{!381, !383, !384, !385, !386, !387}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !379, file: !310, line: 43, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !379, file: !310, line: 43, baseType: !382, size: 64, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !379, file: !310, line: 45, baseType: !372, size: 64, offset: 128)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !379, file: !310, line: 46, baseType: !372, size: 64, offset: 192)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !379, file: !310, line: 47, baseType: !244, size: 32, offset: 256)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !379, file: !310, line: 47, baseType: !244, size: 32, offset: 288)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !309, file: !310, line: 58, baseType: !377, size: 64, offset: 1280)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !309, file: !310, line: 59, baseType: !244, size: 32, offset: 1344)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !309, file: !310, line: 59, baseType: !244, size: 32, offset: 1376)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !309, file: !310, line: 61, baseType: !372, size: 64, offset: 1408)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !309, file: !310, line: 62, baseType: !244, size: 32, offset: 1472)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !309, file: !310, line: 62, baseType: !244, size: 32, offset: 1504)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !309, file: !310, line: 64, baseType: !245, size: 64, offset: 1536)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !309, file: !310, line: 65, baseType: !396, size: 64, offset: 1600)
!396 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !279, file: !201, line: 827, baseType: !244, size: 32, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "viewlines", scope: !279, file: !201, line: 827, baseType: !244, size: 32, offset: 544)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !279, file: !201, line: 828, baseType: !259, size: 16, offset: 576)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !279, file: !201, line: 828, baseType: !259, size: 16, offset: 592)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "lheight", scope: !279, file: !201, line: 830, baseType: !259, size: 16, offset: 608)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "cwidth", scope: !279, file: !201, line: 831, baseType: !261, size: 8, offset: 624)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "linenrs_tot", scope: !279, file: !201, line: 831, baseType: !261, size: 8, offset: 632)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !279, file: !201, line: 832, baseType: !244, size: 32, offset: 640)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "showlinenrs", scope: !279, file: !201, line: 833, baseType: !244, size: 32, offset: 672)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "tabnumber", scope: !279, file: !201, line: 834, baseType: !244, size: 32, offset: 704)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "showsyntax", scope: !279, file: !201, line: 836, baseType: !259, size: 16, offset: 736)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "line_hlight", scope: !279, file: !201, line: 837, baseType: !259, size: 16, offset: 752)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite", scope: !279, file: !201, line: 838, baseType: !259, size: 16, offset: 768)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "live_edit", scope: !279, file: !201, line: 839, baseType: !259, size: 16, offset: 784)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pix_per_line", scope: !279, file: !201, line: 840, baseType: !269, size: 32, offset: 800)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "txtscroll", scope: !279, file: !201, line: 842, baseType: !413, size: 128, offset: 832)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !414, line: 86, size: 128, elements: !415)
!414 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!415 = !{!416, !417, !418, !419}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !413, file: !414, line: 87, baseType: !244, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !413, file: !414, line: 87, baseType: !244, size: 32, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !413, file: !414, line: 88, baseType: !244, size: 32, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !413, file: !414, line: 88, baseType: !244, size: 32, offset: 96)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "txtbar", scope: !279, file: !201, line: 842, baseType: !413, size: 128, offset: 960)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "wordwrap", scope: !279, file: !201, line: 844, baseType: !244, size: 32, offset: 1088)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "doplugins", scope: !279, file: !201, line: 844, baseType: !244, size: 32, offset: 1120)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "findstr", scope: !279, file: !201, line: 846, baseType: !424, size: 2048, offset: 1152)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 2048, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 256)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "replacestr", scope: !279, file: !201, line: 847, baseType: !424, size: 2048, offset: 3200)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "margin_column", scope: !279, file: !201, line: 849, baseType: !259, size: 16, offset: 5248)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "lheight_dpi", scope: !279, file: !201, line: 850, baseType: !259, size: 16, offset: 5264)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !279, file: !201, line: 851, baseType: !431, size: 32, offset: 5280)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 32, elements: !432)
!432 = !{!433}
!433 = !DISubrange(count: 4)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "drawcache", scope: !279, file: !201, line: 853, baseType: !245, size: 64, offset: 5312)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_accum", scope: !279, file: !201, line: 855, baseType: !436, size: 64, offset: 5376)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 64, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 2)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !211, line: 267, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !211, line: 230, size: 3072, elements: !442)
!442 = !{!443, !445, !446, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !441, file: !211, line: 231, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !441, file: !211, line: 231, baseType: !444, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !441, file: !211, line: 233, baseType: !447, size: 1280, offset: 128)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !448, line: 71, baseType: !449)
!448 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !448, line: 40, size: 1280, elements: !450)
!450 = !{!451, !459, !460, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !482, !483, !484, !487}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !449, file: !448, line: 41, baseType: !452, size: 128)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !414, line: 95, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !414, line: 92, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !453, file: !414, line: 93, baseType: !269, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !453, file: !414, line: 93, baseType: !269, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !453, file: !414, line: 94, baseType: !269, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !453, file: !414, line: 94, baseType: !269, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !449, file: !448, line: 41, baseType: !452, size: 128, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !449, file: !448, line: 42, baseType: !461, size: 128, offset: 256)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !414, line: 89, baseType: !413)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !449, file: !448, line: 42, baseType: !461, size: 128, offset: 384)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !449, file: !448, line: 43, baseType: !461, size: 128, offset: 512)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !449, file: !448, line: 45, baseType: !436, size: 64, offset: 640)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !449, file: !448, line: 45, baseType: !436, size: 64, offset: 704)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !449, file: !448, line: 46, baseType: !269, size: 32, offset: 768)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !449, file: !448, line: 46, baseType: !269, size: 32, offset: 800)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !449, file: !448, line: 48, baseType: !259, size: 16, offset: 832)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !449, file: !448, line: 49, baseType: !259, size: 16, offset: 848)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !449, file: !448, line: 51, baseType: !259, size: 16, offset: 864)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !449, file: !448, line: 52, baseType: !259, size: 16, offset: 880)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !449, file: !448, line: 53, baseType: !259, size: 16, offset: 896)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !449, file: !448, line: 55, baseType: !259, size: 16, offset: 912)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !449, file: !448, line: 56, baseType: !259, size: 16, offset: 928)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !449, file: !448, line: 58, baseType: !259, size: 16, offset: 944)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !449, file: !448, line: 58, baseType: !259, size: 16, offset: 960)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !449, file: !448, line: 59, baseType: !259, size: 16, offset: 976)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !449, file: !448, line: 59, baseType: !259, size: 16, offset: 992)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !449, file: !448, line: 61, baseType: !259, size: 16, offset: 1008)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !449, file: !448, line: 63, baseType: !481, size: 64, offset: 1024)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !449, file: !448, line: 64, baseType: !244, size: 32, offset: 1088)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !449, file: !448, line: 65, baseType: !244, size: 32, offset: 1120)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !449, file: !448, line: 68, baseType: !485, size: 64, offset: 1152)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !448, line: 68, flags: DIFlagFwdDecl)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !449, file: !448, line: 69, baseType: !488, size: 64, offset: 1216)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !448, line: 69, flags: DIFlagFwdDecl)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !441, file: !211, line: 234, baseType: !461, size: 128, offset: 1408)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !441, file: !211, line: 235, baseType: !461, size: 128, offset: 1536)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !441, file: !211, line: 236, baseType: !259, size: 16, offset: 1664)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !441, file: !211, line: 236, baseType: !259, size: 16, offset: 1680)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !441, file: !211, line: 238, baseType: !259, size: 16, offset: 1696)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !441, file: !211, line: 239, baseType: !259, size: 16, offset: 1712)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !441, file: !211, line: 240, baseType: !259, size: 16, offset: 1728)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !441, file: !211, line: 241, baseType: !259, size: 16, offset: 1744)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !441, file: !211, line: 243, baseType: !269, size: 32, offset: 1760)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !441, file: !211, line: 244, baseType: !259, size: 16, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !441, file: !211, line: 244, baseType: !259, size: 16, offset: 1808)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !441, file: !211, line: 246, baseType: !259, size: 16, offset: 1824)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !441, file: !211, line: 247, baseType: !259, size: 16, offset: 1840)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !441, file: !211, line: 248, baseType: !259, size: 16, offset: 1856)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !441, file: !211, line: 249, baseType: !259, size: 16, offset: 1872)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !441, file: !211, line: 250, baseType: !259, size: 16, offset: 1888)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !441, file: !211, line: 251, baseType: !259, size: 16, offset: 1904)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !441, file: !211, line: 253, baseType: !508, size: 64, offset: 1920)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !211, line: 42, flags: DIFlagFwdDecl)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !441, file: !211, line: 255, baseType: !290, size: 128, offset: 1984)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !441, file: !211, line: 256, baseType: !290, size: 128, offset: 2112)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !441, file: !211, line: 257, baseType: !290, size: 128, offset: 2240)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !441, file: !211, line: 258, baseType: !290, size: 128, offset: 2368)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !441, file: !211, line: 259, baseType: !290, size: 128, offset: 2496)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !441, file: !211, line: 260, baseType: !290, size: 128, offset: 2624)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !441, file: !211, line: 261, baseType: !290, size: 128, offset: 2752)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !441, file: !211, line: 263, baseType: !488, size: 64, offset: 2880)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !441, file: !211, line: 265, baseType: !372, size: 64, offset: 2944)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !441, file: !211, line: 266, baseType: !245, size: 64, offset: 3008)
!520 = !{}
!521 = !DILocalVariable(name: "st", arg: 1, scope: !274, file: !1, line: 175, type: !277)
!522 = !DILocation(line: 175, column: 27, scope: !274)
!523 = !DILocalVariable(name: "ar", arg: 2, scope: !274, file: !1, line: 175, type: !439)
!524 = !DILocation(line: 175, column: 40, scope: !274)
!525 = !DILocalVariable(name: "winx", scope: !274, file: !1, line: 177, type: !244)
!526 = !DILocation(line: 177, column: 6, scope: !274)
!527 = !DILocation(line: 177, column: 13, scope: !274)
!528 = !DILocation(line: 177, column: 17, scope: !274)
!529 = !DILocation(line: 177, column: 24, scope: !274)
!530 = !DILocation(line: 177, column: 22, scope: !274)
!531 = !DILocalVariable(name: "x", scope: !274, file: !1, line: 178, type: !244)
!532 = !DILocation(line: 178, column: 6, scope: !274)
!533 = !DILocalVariable(name: "max", scope: !274, file: !1, line: 178, type: !244)
!534 = !DILocation(line: 178, column: 9, scope: !274)
!535 = !DILocation(line: 180, column: 6, scope: !274)
!536 = !DILocation(line: 180, column: 10, scope: !274)
!537 = !DILocation(line: 180, column: 24, scope: !274)
!538 = !DILocation(line: 180, column: 37, scope: !274)
!539 = !DILocation(line: 180, column: 35, scope: !274)
!540 = !DILocation(line: 180, column: 48, scope: !274)
!541 = !DILocation(line: 180, column: 4, scope: !274)
!542 = !DILocation(line: 181, column: 8, scope: !274)
!543 = !DILocation(line: 181, column: 12, scope: !274)
!544 = !DILocation(line: 181, column: 22, scope: !274)
!545 = !DILocation(line: 181, column: 29, scope: !274)
!546 = !DILocation(line: 181, column: 27, scope: !274)
!547 = !DILocation(line: 181, column: 34, scope: !274)
!548 = !DILocation(line: 181, column: 38, scope: !274)
!549 = !DILocation(line: 181, column: 32, scope: !274)
!550 = !DILocation(line: 181, column: 6, scope: !274)
!551 = !DILocation(line: 182, column: 9, scope: !274)
!552 = !DILocation(line: 182, column: 13, scope: !274)
!553 = !DILocation(line: 182, column: 19, scope: !274)
!554 = !DILocation(line: 182, column: 2, scope: !274)
!555 = distinct !DISubprogram(name: "wrap_offset", scope: !1, file: !1, line: 186, type: !556, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !277, !439, !377, !244, !251, !251}
!558 = !DILocalVariable(name: "st", arg: 1, scope: !555, file: !1, line: 186, type: !277)
!559 = !DILocation(line: 186, column: 29, scope: !555)
!560 = !DILocalVariable(name: "ar", arg: 2, scope: !555, file: !1, line: 186, type: !439)
!561 = !DILocation(line: 186, column: 42, scope: !555)
!562 = !DILocalVariable(name: "linein", arg: 3, scope: !555, file: !1, line: 186, type: !377)
!563 = !DILocation(line: 186, column: 56, scope: !555)
!564 = !DILocalVariable(name: "cursin", arg: 4, scope: !555, file: !1, line: 186, type: !244)
!565 = !DILocation(line: 186, column: 68, scope: !555)
!566 = !DILocalVariable(name: "offl", arg: 5, scope: !555, file: !1, line: 186, type: !251)
!567 = !DILocation(line: 186, column: 81, scope: !555)
!568 = !DILocalVariable(name: "offc", arg: 6, scope: !555, file: !1, line: 186, type: !251)
!569 = !DILocation(line: 186, column: 92, scope: !555)
!570 = !DILocalVariable(name: "text", scope: !555, file: !1, line: 188, type: !571)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "Text", file: !310, line: 66, baseType: !309)
!573 = !DILocation(line: 188, column: 8, scope: !555)
!574 = !DILocalVariable(name: "linep", scope: !555, file: !1, line: 189, type: !377)
!575 = !DILocation(line: 189, column: 12, scope: !555)
!576 = !DILocalVariable(name: "i", scope: !555, file: !1, line: 190, type: !244)
!577 = !DILocation(line: 190, column: 6, scope: !555)
!578 = !DILocalVariable(name: "j", scope: !555, file: !1, line: 190, type: !244)
!579 = !DILocation(line: 190, column: 9, scope: !555)
!580 = !DILocalVariable(name: "start", scope: !555, file: !1, line: 190, type: !244)
!581 = !DILocation(line: 190, column: 12, scope: !555)
!582 = !DILocalVariable(name: "end", scope: !555, file: !1, line: 190, type: !244)
!583 = !DILocation(line: 190, column: 19, scope: !555)
!584 = !DILocalVariable(name: "max", scope: !555, file: !1, line: 190, type: !244)
!585 = !DILocation(line: 190, column: 24, scope: !555)
!586 = !DILocalVariable(name: "chop", scope: !555, file: !1, line: 190, type: !244)
!587 = !DILocation(line: 190, column: 29, scope: !555)
!588 = !DILocalVariable(name: "ch", scope: !555, file: !1, line: 191, type: !261)
!589 = !DILocation(line: 191, column: 7, scope: !555)
!590 = !DILocation(line: 193, column: 11, scope: !555)
!591 = !DILocation(line: 193, column: 16, scope: !555)
!592 = !DILocation(line: 193, column: 3, scope: !555)
!593 = !DILocation(line: 193, column: 8, scope: !555)
!594 = !DILocation(line: 195, column: 7, scope: !595)
!595 = distinct !DILexicalBlock(scope: !555, file: !1, line: 195, column: 6)
!596 = !DILocation(line: 195, column: 11, scope: !595)
!597 = !DILocation(line: 195, column: 6, scope: !555)
!598 = !DILocation(line: 195, column: 17, scope: !595)
!599 = !DILocation(line: 196, column: 7, scope: !600)
!600 = distinct !DILexicalBlock(scope: !555, file: !1, line: 196, column: 6)
!601 = !DILocation(line: 196, column: 11, scope: !600)
!602 = !DILocation(line: 196, column: 6, scope: !555)
!603 = !DILocation(line: 196, column: 21, scope: !600)
!604 = !DILocation(line: 198, column: 9, scope: !555)
!605 = !DILocation(line: 198, column: 13, scope: !555)
!606 = !DILocation(line: 198, column: 7, scope: !555)
!607 = !DILocation(line: 201, column: 10, scope: !555)
!608 = !DILocation(line: 201, column: 16, scope: !555)
!609 = !DILocation(line: 201, column: 22, scope: !555)
!610 = !DILocation(line: 201, column: 8, scope: !555)
!611 = !DILocation(line: 202, column: 6, scope: !555)
!612 = !DILocation(line: 202, column: 10, scope: !555)
!613 = !DILocation(line: 202, column: 4, scope: !555)
!614 = !DILocation(line: 203, column: 2, scope: !555)
!615 = !DILocation(line: 203, column: 9, scope: !555)
!616 = !DILocation(line: 203, column: 11, scope: !555)
!617 = !DILocation(line: 203, column: 15, scope: !555)
!618 = !DILocation(line: 203, column: 18, scope: !555)
!619 = !DILocation(line: 0, scope: !555)
!620 = !DILocalVariable(name: "lines", scope: !621, file: !1, line: 204, type: !244)
!621 = distinct !DILexicalBlock(scope: !555, file: !1, line: 203, column: 25)
!622 = !DILocation(line: 204, column: 7, scope: !621)
!623 = !DILocation(line: 204, column: 38, scope: !621)
!624 = !DILocation(line: 204, column: 42, scope: !621)
!625 = !DILocation(line: 204, column: 46, scope: !621)
!626 = !DILocation(line: 204, column: 53, scope: !621)
!627 = !DILocation(line: 204, column: 15, scope: !621)
!628 = !DILocation(line: 207, column: 7, scope: !629)
!629 = distinct !DILexicalBlock(scope: !621, file: !1, line: 207, column: 7)
!630 = !DILocation(line: 207, column: 16, scope: !629)
!631 = !DILocation(line: 207, column: 13, scope: !629)
!632 = !DILocation(line: 207, column: 7, scope: !621)
!633 = !DILocation(line: 208, column: 8, scope: !634)
!634 = distinct !DILexicalBlock(scope: !635, file: !1, line: 208, column: 8)
!635 = distinct !DILexicalBlock(scope: !629, file: !1, line: 207, column: 24)
!636 = !DILocation(line: 208, column: 17, scope: !634)
!637 = !DILocation(line: 208, column: 14, scope: !634)
!638 = !DILocation(line: 208, column: 8, scope: !635)
!639 = !DILocation(line: 210, column: 5, scope: !634)
!640 = !DILocation(line: 211, column: 3, scope: !635)
!641 = !DILocation(line: 213, column: 7, scope: !642)
!642 = distinct !DILexicalBlock(scope: !621, file: !1, line: 213, column: 7)
!643 = !DILocation(line: 213, column: 11, scope: !642)
!644 = !DILocation(line: 213, column: 9, scope: !642)
!645 = !DILocation(line: 213, column: 17, scope: !642)
!646 = !DILocation(line: 213, column: 7, scope: !621)
!647 = !DILocation(line: 214, column: 4, scope: !648)
!648 = distinct !DILexicalBlock(scope: !642, file: !1, line: 213, column: 22)
!649 = !DILocation(line: 217, column: 12, scope: !650)
!650 = distinct !DILexicalBlock(scope: !642, file: !1, line: 216, column: 8)
!651 = !DILocation(line: 217, column: 19, scope: !650)
!652 = !DILocation(line: 217, column: 10, scope: !650)
!653 = !DILocation(line: 218, column: 15, scope: !650)
!654 = !DILocation(line: 218, column: 21, scope: !650)
!655 = !DILocation(line: 218, column: 6, scope: !650)
!656 = !DILocation(line: 218, column: 12, scope: !650)
!657 = !DILocation(line: 219, column: 9, scope: !650)
!658 = !DILocation(line: 219, column: 6, scope: !650)
!659 = distinct !{!659, !614, !660}
!660 = !DILocation(line: 221, column: 2, scope: !555)
!661 = !DILocation(line: 223, column: 19, scope: !555)
!662 = !DILocation(line: 223, column: 23, scope: !555)
!663 = !DILocation(line: 223, column: 8, scope: !555)
!664 = !DILocation(line: 223, column: 6, scope: !555)
!665 = !DILocation(line: 224, column: 37, scope: !555)
!666 = !DILocation(line: 224, column: 45, scope: !555)
!667 = !DILocation(line: 224, column: 51, scope: !555)
!668 = !DILocation(line: 224, column: 11, scope: !555)
!669 = !DILocation(line: 224, column: 9, scope: !555)
!670 = !DILocation(line: 226, column: 2, scope: !555)
!671 = !DILocation(line: 226, column: 9, scope: !555)
!672 = !DILocation(line: 227, column: 9, scope: !673)
!673 = distinct !DILexicalBlock(scope: !555, file: !1, line: 226, column: 16)
!674 = !DILocation(line: 228, column: 9, scope: !673)
!675 = !DILocation(line: 228, column: 7, scope: !673)
!676 = !DILocation(line: 229, column: 8, scope: !673)
!677 = !DILocation(line: 230, column: 4, scope: !673)
!678 = !DILocation(line: 230, column: 9, scope: !673)
!679 = !DILocation(line: 231, column: 10, scope: !680)
!680 = distinct !DILexicalBlock(scope: !673, file: !1, line: 231, column: 3)
!681 = !DILocation(line: 231, column: 17, scope: !680)
!682 = !DILocation(line: 231, column: 8, scope: !680)
!683 = !DILocation(line: 231, column: 22, scope: !684)
!684 = distinct !DILexicalBlock(scope: !680, file: !1, line: 231, column: 3)
!685 = !DILocation(line: 231, column: 29, scope: !684)
!686 = !DILocation(line: 231, column: 34, scope: !684)
!687 = !DILocation(line: 231, column: 3, scope: !680)
!688 = !DILocalVariable(name: "chars", scope: !689, file: !1, line: 232, type: !244)
!689 = distinct !DILexicalBlock(scope: !684, file: !1, line: 231, column: 84)
!690 = !DILocation(line: 232, column: 8, scope: !689)
!691 = !DILocalVariable(name: "columns", scope: !689, file: !1, line: 233, type: !244)
!692 = !DILocation(line: 233, column: 8, scope: !689)
!693 = !DILocation(line: 233, column: 47, scope: !689)
!694 = !DILocation(line: 233, column: 54, scope: !689)
!695 = !DILocation(line: 233, column: 61, scope: !689)
!696 = !DILocation(line: 233, column: 59, scope: !689)
!697 = !DILocation(line: 233, column: 18, scope: !689)
!698 = !DILocation(line: 236, column: 9, scope: !689)
!699 = !DILocation(line: 236, column: 16, scope: !689)
!700 = !DILocation(line: 236, column: 21, scope: !689)
!701 = !DILocation(line: 236, column: 7, scope: !689)
!702 = !DILocation(line: 237, column: 8, scope: !703)
!703 = distinct !DILexicalBlock(scope: !689, file: !1, line: 237, column: 8)
!704 = !DILocation(line: 237, column: 11, scope: !703)
!705 = !DILocation(line: 237, column: 8, scope: !689)
!706 = !DILocation(line: 238, column: 13, scope: !707)
!707 = distinct !DILexicalBlock(scope: !703, file: !1, line: 237, column: 20)
!708 = !DILocation(line: 238, column: 17, scope: !707)
!709 = !DILocation(line: 238, column: 29, scope: !707)
!710 = !DILocation(line: 238, column: 33, scope: !707)
!711 = !DILocation(line: 238, column: 37, scope: !707)
!712 = !DILocation(line: 238, column: 31, scope: !707)
!713 = !DILocation(line: 238, column: 27, scope: !707)
!714 = !DILocation(line: 238, column: 11, scope: !707)
!715 = !DILocation(line: 239, column: 9, scope: !716)
!716 = distinct !DILexicalBlock(scope: !707, file: !1, line: 239, column: 9)
!717 = !DILocation(line: 239, column: 18, scope: !716)
!718 = !DILocation(line: 239, column: 15, scope: !716)
!719 = !DILocation(line: 239, column: 25, scope: !716)
!720 = !DILocation(line: 239, column: 28, scope: !716)
!721 = !DILocation(line: 239, column: 32, scope: !716)
!722 = !DILocation(line: 239, column: 30, scope: !716)
!723 = !DILocation(line: 239, column: 9, scope: !707)
!724 = !DILocation(line: 239, column: 50, scope: !716)
!725 = !DILocation(line: 239, column: 56, scope: !716)
!726 = !DILocation(line: 239, column: 47, scope: !716)
!727 = !DILocation(line: 239, column: 40, scope: !716)
!728 = !DILocation(line: 240, column: 8, scope: !707)
!729 = !DILocation(line: 241, column: 4, scope: !707)
!730 = !DILocation(line: 243, column: 11, scope: !731)
!731 = distinct !DILexicalBlock(scope: !703, file: !1, line: 242, column: 9)
!732 = !DILocation(line: 246, column: 4, scope: !689)
!733 = !DILocation(line: 246, column: 16, scope: !689)
!734 = !DILocation(line: 247, column: 9, scope: !735)
!735 = distinct !DILexicalBlock(scope: !736, file: !1, line: 247, column: 9)
!736 = distinct !DILexicalBlock(scope: !689, file: !1, line: 246, column: 20)
!737 = !DILocation(line: 247, column: 13, scope: !735)
!738 = !DILocation(line: 247, column: 11, scope: !735)
!739 = !DILocation(line: 247, column: 23, scope: !735)
!740 = !DILocation(line: 247, column: 21, scope: !735)
!741 = !DILocation(line: 247, column: 31, scope: !735)
!742 = !DILocation(line: 247, column: 29, scope: !735)
!743 = !DILocation(line: 247, column: 9, scope: !736)
!744 = !DILocation(line: 248, column: 12, scope: !745)
!745 = distinct !DILexicalBlock(scope: !735, file: !1, line: 247, column: 36)
!746 = !DILocation(line: 248, column: 10, scope: !745)
!747 = !DILocation(line: 250, column: 10, scope: !748)
!748 = distinct !DILexicalBlock(scope: !745, file: !1, line: 250, column: 10)
!749 = !DILocation(line: 250, column: 15, scope: !748)
!750 = !DILocation(line: 250, column: 18, scope: !748)
!751 = !DILocation(line: 250, column: 27, scope: !748)
!752 = !DILocation(line: 250, column: 24, scope: !748)
!753 = !DILocation(line: 250, column: 34, scope: !748)
!754 = !DILocation(line: 250, column: 37, scope: !748)
!755 = !DILocation(line: 250, column: 42, scope: !748)
!756 = !DILocation(line: 250, column: 39, scope: !748)
!757 = !DILocation(line: 250, column: 10, scope: !745)
!758 = !DILocation(line: 251, column: 11, scope: !759)
!759 = distinct !DILexicalBlock(scope: !760, file: !1, line: 251, column: 11)
!760 = distinct !DILexicalBlock(scope: !748, file: !1, line: 250, column: 50)
!761 = !DILocation(line: 251, column: 16, scope: !759)
!762 = !DILocation(line: 251, column: 13, scope: !759)
!763 = !DILocation(line: 251, column: 11, scope: !760)
!764 = !DILocation(line: 252, column: 10, scope: !765)
!765 = distinct !DILexicalBlock(scope: !759, file: !1, line: 251, column: 24)
!766 = !DILocation(line: 252, column: 15, scope: !765)
!767 = !DILocation(line: 253, column: 17, scope: !765)
!768 = !DILocation(line: 253, column: 23, scope: !765)
!769 = !DILocation(line: 253, column: 21, scope: !765)
!770 = !DILocation(line: 253, column: 9, scope: !765)
!771 = !DILocation(line: 253, column: 14, scope: !765)
!772 = !DILocation(line: 254, column: 7, scope: !765)
!773 = !DILocation(line: 256, column: 7, scope: !760)
!774 = !DILocation(line: 259, column: 8, scope: !745)
!775 = !DILocation(line: 259, column: 13, scope: !745)
!776 = !DILocation(line: 260, column: 15, scope: !745)
!777 = !DILocation(line: 260, column: 21, scope: !745)
!778 = !DILocation(line: 260, column: 19, scope: !745)
!779 = !DILocation(line: 260, column: 7, scope: !745)
!780 = !DILocation(line: 260, column: 12, scope: !745)
!781 = !DILocation(line: 262, column: 14, scope: !745)
!782 = !DILocation(line: 262, column: 12, scope: !745)
!783 = !DILocation(line: 263, column: 13, scope: !745)
!784 = !DILocation(line: 263, column: 10, scope: !745)
!785 = !DILocation(line: 264, column: 11, scope: !745)
!786 = !DILocation(line: 265, column: 5, scope: !745)
!787 = !DILocation(line: 266, column: 14, scope: !788)
!788 = distinct !DILexicalBlock(scope: !735, file: !1, line: 266, column: 14)
!789 = !DILocation(line: 266, column: 17, scope: !788)
!790 = !DILocation(line: 266, column: 24, scope: !788)
!791 = !DILocation(line: 266, column: 27, scope: !788)
!792 = !DILocation(line: 266, column: 30, scope: !788)
!793 = !DILocation(line: 266, column: 14, scope: !735)
!794 = !DILocation(line: 267, column: 12, scope: !795)
!795 = distinct !DILexicalBlock(scope: !788, file: !1, line: 266, column: 38)
!796 = !DILocation(line: 267, column: 14, scope: !795)
!797 = !DILocation(line: 267, column: 10, scope: !795)
!798 = !DILocation(line: 268, column: 11, scope: !795)
!799 = !DILocation(line: 269, column: 10, scope: !800)
!800 = distinct !DILexicalBlock(scope: !795, file: !1, line: 269, column: 10)
!801 = !DILocation(line: 269, column: 19, scope: !800)
!802 = !DILocation(line: 269, column: 16, scope: !800)
!803 = !DILocation(line: 269, column: 26, scope: !800)
!804 = !DILocation(line: 269, column: 29, scope: !800)
!805 = !DILocation(line: 269, column: 34, scope: !800)
!806 = !DILocation(line: 269, column: 31, scope: !800)
!807 = !DILocation(line: 269, column: 10, scope: !795)
!808 = !DILocation(line: 270, column: 7, scope: !800)
!809 = !DILocation(line: 271, column: 5, scope: !795)
!810 = !DILocation(line: 272, column: 10, scope: !736)
!811 = !DILocation(line: 272, column: 7, scope: !736)
!812 = distinct !{!812, !732, !813}
!813 = !DILocation(line: 273, column: 4, scope: !689)
!814 = !DILocation(line: 274, column: 3, scope: !689)
!815 = !DILocation(line: 231, column: 66, scope: !684)
!816 = !DILocation(line: 231, column: 73, scope: !684)
!817 = !DILocation(line: 231, column: 80, scope: !684)
!818 = !DILocation(line: 231, column: 78, scope: !684)
!819 = !DILocation(line: 231, column: 43, scope: !684)
!820 = !DILocation(line: 231, column: 40, scope: !684)
!821 = !DILocation(line: 231, column: 3, scope: !684)
!822 = distinct !{!822, !687, !823}
!823 = !DILocation(line: 274, column: 3, scope: !680)
!824 = !DILocation(line: 275, column: 7, scope: !825)
!825 = distinct !DILexicalBlock(scope: !673, file: !1, line: 275, column: 7)
!826 = !DILocation(line: 275, column: 16, scope: !825)
!827 = !DILocation(line: 275, column: 13, scope: !825)
!828 = !DILocation(line: 275, column: 7, scope: !673)
!829 = !DILocation(line: 275, column: 24, scope: !825)
!830 = !DILocation(line: 276, column: 11, scope: !673)
!831 = !DILocation(line: 276, column: 18, scope: !673)
!832 = !DILocation(line: 276, column: 9, scope: !673)
!833 = distinct !{!833, !670, !834}
!834 = !DILocation(line: 277, column: 2, scope: !555)
!835 = !DILocation(line: 278, column: 1, scope: !555)
!836 = distinct !DISubprogram(name: "text_get_visible_lines", scope: !1, file: !1, line: 701, type: !837, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!837 = !DISubroutineType(types: !838)
!838 = !{!244, !277, !439, !839}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!841 = !DILocalVariable(name: "st", arg: 1, scope: !836, file: !1, line: 701, type: !277)
!842 = !DILocation(line: 701, column: 39, scope: !836)
!843 = !DILocalVariable(name: "ar", arg: 2, scope: !836, file: !1, line: 701, type: !439)
!844 = !DILocation(line: 701, column: 52, scope: !836)
!845 = !DILocalVariable(name: "str", arg: 3, scope: !836, file: !1, line: 701, type: !839)
!846 = !DILocation(line: 701, column: 68, scope: !836)
!847 = !DILocalVariable(name: "i", scope: !836, file: !1, line: 703, type: !244)
!848 = !DILocation(line: 703, column: 6, scope: !836)
!849 = !DILocalVariable(name: "j", scope: !836, file: !1, line: 703, type: !244)
!850 = !DILocation(line: 703, column: 9, scope: !836)
!851 = !DILocalVariable(name: "start", scope: !836, file: !1, line: 703, type: !244)
!852 = !DILocation(line: 703, column: 12, scope: !836)
!853 = !DILocalVariable(name: "end", scope: !836, file: !1, line: 703, type: !244)
!854 = !DILocation(line: 703, column: 19, scope: !836)
!855 = !DILocalVariable(name: "max", scope: !836, file: !1, line: 703, type: !244)
!856 = !DILocation(line: 703, column: 24, scope: !836)
!857 = !DILocalVariable(name: "lines", scope: !836, file: !1, line: 703, type: !244)
!858 = !DILocation(line: 703, column: 29, scope: !836)
!859 = !DILocalVariable(name: "chars", scope: !836, file: !1, line: 703, type: !244)
!860 = !DILocation(line: 703, column: 36, scope: !836)
!861 = !DILocalVariable(name: "ch", scope: !836, file: !1, line: 704, type: !261)
!862 = !DILocation(line: 704, column: 7, scope: !836)
!863 = !DILocation(line: 706, column: 19, scope: !836)
!864 = !DILocation(line: 706, column: 23, scope: !836)
!865 = !DILocation(line: 706, column: 8, scope: !836)
!866 = !DILocation(line: 706, column: 6, scope: !836)
!867 = !DILocation(line: 707, column: 8, scope: !836)
!868 = !DILocation(line: 708, column: 8, scope: !836)
!869 = !DILocation(line: 709, column: 8, scope: !836)
!870 = !DILocation(line: 709, column: 6, scope: !836)
!871 = !DILocation(line: 710, column: 9, scope: !872)
!872 = distinct !DILexicalBlock(scope: !836, file: !1, line: 710, column: 2)
!873 = !DILocation(line: 710, column: 16, scope: !872)
!874 = !DILocation(line: 710, column: 7, scope: !872)
!875 = !DILocation(line: 710, column: 21, scope: !876)
!876 = distinct !DILexicalBlock(scope: !872, file: !1, line: 710, column: 2)
!877 = !DILocation(line: 710, column: 25, scope: !876)
!878 = !DILocation(line: 710, column: 2, scope: !872)
!879 = !DILocalVariable(name: "columns", scope: !880, file: !1, line: 711, type: !244)
!880 = distinct !DILexicalBlock(scope: !876, file: !1, line: 710, column: 67)
!881 = !DILocation(line: 711, column: 7, scope: !880)
!882 = !DILocation(line: 711, column: 46, scope: !880)
!883 = !DILocation(line: 711, column: 52, scope: !880)
!884 = !DILocation(line: 711, column: 50, scope: !880)
!885 = !DILocation(line: 711, column: 17, scope: !880)
!886 = !DILocation(line: 714, column: 8, scope: !880)
!887 = !DILocation(line: 714, column: 12, scope: !880)
!888 = !DILocation(line: 714, column: 6, scope: !880)
!889 = !DILocation(line: 715, column: 7, scope: !890)
!890 = distinct !DILexicalBlock(scope: !880, file: !1, line: 715, column: 7)
!891 = !DILocation(line: 715, column: 10, scope: !890)
!892 = !DILocation(line: 715, column: 7, scope: !880)
!893 = !DILocation(line: 716, column: 12, scope: !894)
!894 = distinct !DILexicalBlock(scope: !890, file: !1, line: 715, column: 19)
!895 = !DILocation(line: 716, column: 16, scope: !894)
!896 = !DILocation(line: 716, column: 28, scope: !894)
!897 = !DILocation(line: 716, column: 32, scope: !894)
!898 = !DILocation(line: 716, column: 36, scope: !894)
!899 = !DILocation(line: 716, column: 30, scope: !894)
!900 = !DILocation(line: 716, column: 26, scope: !894)
!901 = !DILocation(line: 716, column: 10, scope: !894)
!902 = !DILocation(line: 717, column: 7, scope: !894)
!903 = !DILocation(line: 718, column: 3, scope: !894)
!904 = !DILocation(line: 720, column: 10, scope: !905)
!905 = distinct !DILexicalBlock(scope: !890, file: !1, line: 719, column: 8)
!906 = !DILocation(line: 723, column: 3, scope: !880)
!907 = !DILocation(line: 723, column: 15, scope: !880)
!908 = !DILocation(line: 724, column: 8, scope: !909)
!909 = distinct !DILexicalBlock(scope: !910, file: !1, line: 724, column: 8)
!910 = distinct !DILexicalBlock(scope: !880, file: !1, line: 723, column: 19)
!911 = !DILocation(line: 724, column: 12, scope: !909)
!912 = !DILocation(line: 724, column: 10, scope: !909)
!913 = !DILocation(line: 724, column: 22, scope: !909)
!914 = !DILocation(line: 724, column: 20, scope: !909)
!915 = !DILocation(line: 724, column: 30, scope: !909)
!916 = !DILocation(line: 724, column: 28, scope: !909)
!917 = !DILocation(line: 724, column: 8, scope: !910)
!918 = !DILocation(line: 725, column: 10, scope: !919)
!919 = distinct !DILexicalBlock(scope: !909, file: !1, line: 724, column: 35)
!920 = !DILocation(line: 726, column: 13, scope: !919)
!921 = !DILocation(line: 726, column: 11, scope: !919)
!922 = !DILocation(line: 727, column: 12, scope: !919)
!923 = !DILocation(line: 727, column: 9, scope: !919)
!924 = !DILocation(line: 728, column: 4, scope: !919)
!925 = !DILocation(line: 729, column: 13, scope: !926)
!926 = distinct !DILexicalBlock(scope: !909, file: !1, line: 729, column: 13)
!927 = !DILocation(line: 729, column: 16, scope: !926)
!928 = !DILocation(line: 729, column: 23, scope: !926)
!929 = !DILocation(line: 729, column: 26, scope: !926)
!930 = !DILocation(line: 729, column: 29, scope: !926)
!931 = !DILocation(line: 729, column: 13, scope: !909)
!932 = !DILocation(line: 730, column: 11, scope: !933)
!933 = distinct !DILexicalBlock(scope: !926, file: !1, line: 729, column: 37)
!934 = !DILocation(line: 730, column: 13, scope: !933)
!935 = !DILocation(line: 730, column: 9, scope: !933)
!936 = !DILocation(line: 731, column: 4, scope: !933)
!937 = !DILocation(line: 733, column: 9, scope: !910)
!938 = !DILocation(line: 733, column: 6, scope: !910)
!939 = distinct !{!939, !906, !940}
!940 = !DILocation(line: 734, column: 3, scope: !880)
!941 = !DILocation(line: 735, column: 2, scope: !880)
!942 = !DILocation(line: 710, column: 57, scope: !876)
!943 = !DILocation(line: 710, column: 63, scope: !876)
!944 = !DILocation(line: 710, column: 61, scope: !876)
!945 = !DILocation(line: 710, column: 34, scope: !876)
!946 = !DILocation(line: 710, column: 31, scope: !876)
!947 = !DILocation(line: 710, column: 2, scope: !876)
!948 = distinct !{!948, !878, !949}
!949 = !DILocation(line: 735, column: 2, scope: !872)
!950 = !DILocation(line: 737, column: 9, scope: !836)
!951 = !DILocation(line: 737, column: 2, scope: !836)
!952 = distinct !DISubprogram(name: "wrap_offset_in_line", scope: !1, file: !1, line: 281, type: !556, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!953 = !DILocalVariable(name: "st", arg: 1, scope: !952, file: !1, line: 281, type: !277)
!954 = !DILocation(line: 281, column: 37, scope: !952)
!955 = !DILocalVariable(name: "ar", arg: 2, scope: !952, file: !1, line: 281, type: !439)
!956 = !DILocation(line: 281, column: 50, scope: !952)
!957 = !DILocalVariable(name: "linein", arg: 3, scope: !952, file: !1, line: 281, type: !377)
!958 = !DILocation(line: 281, column: 64, scope: !952)
!959 = !DILocalVariable(name: "cursin", arg: 4, scope: !952, file: !1, line: 281, type: !244)
!960 = !DILocation(line: 281, column: 76, scope: !952)
!961 = !DILocalVariable(name: "offl", arg: 5, scope: !952, file: !1, line: 281, type: !251)
!962 = !DILocation(line: 281, column: 89, scope: !952)
!963 = !DILocalVariable(name: "offc", arg: 6, scope: !952, file: !1, line: 281, type: !251)
!964 = !DILocation(line: 281, column: 100, scope: !952)
!965 = !DILocalVariable(name: "i", scope: !952, file: !1, line: 283, type: !244)
!966 = !DILocation(line: 283, column: 6, scope: !952)
!967 = !DILocalVariable(name: "j", scope: !952, file: !1, line: 283, type: !244)
!968 = !DILocation(line: 283, column: 9, scope: !952)
!969 = !DILocalVariable(name: "start", scope: !952, file: !1, line: 283, type: !244)
!970 = !DILocation(line: 283, column: 12, scope: !952)
!971 = !DILocalVariable(name: "end", scope: !952, file: !1, line: 283, type: !244)
!972 = !DILocation(line: 283, column: 19, scope: !952)
!973 = !DILocalVariable(name: "chars", scope: !952, file: !1, line: 283, type: !244)
!974 = !DILocation(line: 283, column: 24, scope: !952)
!975 = !DILocalVariable(name: "max", scope: !952, file: !1, line: 283, type: !244)
!976 = !DILocation(line: 283, column: 31, scope: !952)
!977 = !DILocalVariable(name: "chop", scope: !952, file: !1, line: 283, type: !244)
!978 = !DILocation(line: 283, column: 36, scope: !952)
!979 = !DILocalVariable(name: "ch", scope: !952, file: !1, line: 284, type: !261)
!980 = !DILocation(line: 284, column: 7, scope: !952)
!981 = !DILocation(line: 286, column: 11, scope: !952)
!982 = !DILocation(line: 286, column: 16, scope: !952)
!983 = !DILocation(line: 286, column: 3, scope: !952)
!984 = !DILocation(line: 286, column: 8, scope: !952)
!985 = !DILocation(line: 288, column: 7, scope: !986)
!986 = distinct !DILexicalBlock(scope: !952, file: !1, line: 288, column: 6)
!987 = !DILocation(line: 288, column: 11, scope: !986)
!988 = !DILocation(line: 288, column: 6, scope: !952)
!989 = !DILocation(line: 288, column: 17, scope: !986)
!990 = !DILocation(line: 289, column: 7, scope: !991)
!991 = distinct !DILexicalBlock(scope: !952, file: !1, line: 289, column: 6)
!992 = !DILocation(line: 289, column: 11, scope: !991)
!993 = !DILocation(line: 289, column: 6, scope: !952)
!994 = !DILocation(line: 289, column: 21, scope: !991)
!995 = !DILocation(line: 291, column: 19, scope: !952)
!996 = !DILocation(line: 291, column: 23, scope: !952)
!997 = !DILocation(line: 291, column: 8, scope: !952)
!998 = !DILocation(line: 291, column: 6, scope: !952)
!999 = !DILocation(line: 293, column: 8, scope: !952)
!1000 = !DILocation(line: 294, column: 8, scope: !952)
!1001 = !DILocation(line: 294, column: 6, scope: !952)
!1002 = !DILocation(line: 295, column: 7, scope: !952)
!1003 = !DILocation(line: 296, column: 3, scope: !952)
!1004 = !DILocation(line: 296, column: 8, scope: !952)
!1005 = !DILocation(line: 297, column: 37, scope: !952)
!1006 = !DILocation(line: 297, column: 45, scope: !952)
!1007 = !DILocation(line: 297, column: 51, scope: !952)
!1008 = !DILocation(line: 297, column: 11, scope: !952)
!1009 = !DILocation(line: 297, column: 9, scope: !952)
!1010 = !DILocation(line: 299, column: 9, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !952, file: !1, line: 299, column: 2)
!1012 = !DILocation(line: 299, column: 16, scope: !1011)
!1013 = !DILocation(line: 299, column: 7, scope: !1011)
!1014 = !DILocation(line: 299, column: 21, scope: !1015)
!1015 = distinct !DILexicalBlock(scope: !1011, file: !1, line: 299, column: 2)
!1016 = !DILocation(line: 299, column: 29, scope: !1015)
!1017 = !DILocation(line: 299, column: 34, scope: !1015)
!1018 = !DILocation(line: 299, column: 2, scope: !1011)
!1019 = !DILocalVariable(name: "columns", scope: !1020, file: !1, line: 300, type: !244)
!1020 = distinct !DILexicalBlock(scope: !1015, file: !1, line: 299, column: 85)
!1021 = !DILocation(line: 300, column: 7, scope: !1020)
!1022 = !DILocation(line: 300, column: 46, scope: !1020)
!1023 = !DILocation(line: 300, column: 54, scope: !1020)
!1024 = !DILocation(line: 300, column: 61, scope: !1020)
!1025 = !DILocation(line: 300, column: 59, scope: !1020)
!1026 = !DILocation(line: 300, column: 17, scope: !1020)
!1027 = !DILocation(line: 303, column: 8, scope: !1020)
!1028 = !DILocation(line: 303, column: 16, scope: !1020)
!1029 = !DILocation(line: 303, column: 21, scope: !1020)
!1030 = !DILocation(line: 303, column: 6, scope: !1020)
!1031 = !DILocation(line: 304, column: 7, scope: !1032)
!1032 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 304, column: 7)
!1033 = !DILocation(line: 304, column: 10, scope: !1032)
!1034 = !DILocation(line: 304, column: 7, scope: !1020)
!1035 = !DILocation(line: 305, column: 12, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1032, file: !1, line: 304, column: 19)
!1037 = !DILocation(line: 305, column: 16, scope: !1036)
!1038 = !DILocation(line: 305, column: 28, scope: !1036)
!1039 = !DILocation(line: 305, column: 32, scope: !1036)
!1040 = !DILocation(line: 305, column: 36, scope: !1036)
!1041 = !DILocation(line: 305, column: 30, scope: !1036)
!1042 = !DILocation(line: 305, column: 26, scope: !1036)
!1043 = !DILocation(line: 305, column: 10, scope: !1036)
!1044 = !DILocation(line: 306, column: 8, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1036, file: !1, line: 306, column: 8)
!1046 = !DILocation(line: 306, column: 12, scope: !1045)
!1047 = !DILocation(line: 306, column: 10, scope: !1045)
!1048 = !DILocation(line: 306, column: 8, scope: !1036)
!1049 = !DILocation(line: 306, column: 30, scope: !1045)
!1050 = !DILocation(line: 306, column: 36, scope: !1045)
!1051 = !DILocation(line: 306, column: 27, scope: !1045)
!1052 = !DILocation(line: 306, column: 20, scope: !1045)
!1053 = !DILocation(line: 307, column: 7, scope: !1036)
!1054 = !DILocation(line: 308, column: 3, scope: !1036)
!1055 = !DILocation(line: 310, column: 10, scope: !1032)
!1056 = !DILocation(line: 312, column: 3, scope: !1020)
!1057 = !DILocation(line: 312, column: 15, scope: !1020)
!1058 = !DILocation(line: 313, column: 8, scope: !1059)
!1059 = distinct !DILexicalBlock(scope: !1060, file: !1, line: 313, column: 8)
!1060 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 312, column: 19)
!1061 = !DILocation(line: 313, column: 12, scope: !1059)
!1062 = !DILocation(line: 313, column: 10, scope: !1059)
!1063 = !DILocation(line: 313, column: 22, scope: !1059)
!1064 = !DILocation(line: 313, column: 20, scope: !1059)
!1065 = !DILocation(line: 313, column: 30, scope: !1059)
!1066 = !DILocation(line: 313, column: 28, scope: !1059)
!1067 = !DILocation(line: 313, column: 8, scope: !1060)
!1068 = !DILocation(line: 314, column: 11, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 313, column: 35)
!1070 = !DILocation(line: 314, column: 9, scope: !1069)
!1071 = !DILocation(line: 316, column: 9, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1069, file: !1, line: 316, column: 9)
!1073 = !DILocation(line: 316, column: 14, scope: !1072)
!1074 = !DILocation(line: 316, column: 17, scope: !1072)
!1075 = !DILocation(line: 316, column: 22, scope: !1072)
!1076 = !DILocation(line: 316, column: 19, scope: !1072)
!1077 = !DILocation(line: 316, column: 9, scope: !1069)
!1078 = !DILocation(line: 317, column: 10, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1080, file: !1, line: 317, column: 10)
!1080 = distinct !DILexicalBlock(scope: !1072, file: !1, line: 316, column: 30)
!1081 = !DILocation(line: 317, column: 15, scope: !1079)
!1082 = !DILocation(line: 317, column: 12, scope: !1079)
!1083 = !DILocation(line: 317, column: 10, scope: !1080)
!1084 = !DILocation(line: 318, column: 9, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1079, file: !1, line: 317, column: 23)
!1086 = !DILocation(line: 318, column: 14, scope: !1085)
!1087 = !DILocation(line: 319, column: 16, scope: !1085)
!1088 = !DILocation(line: 319, column: 22, scope: !1085)
!1089 = !DILocation(line: 319, column: 20, scope: !1085)
!1090 = !DILocation(line: 319, column: 8, scope: !1085)
!1091 = !DILocation(line: 319, column: 13, scope: !1085)
!1092 = !DILocation(line: 320, column: 6, scope: !1085)
!1093 = !DILocation(line: 322, column: 6, scope: !1080)
!1094 = !DILocation(line: 325, column: 7, scope: !1069)
!1095 = !DILocation(line: 325, column: 12, scope: !1069)
!1096 = !DILocation(line: 326, column: 14, scope: !1069)
!1097 = !DILocation(line: 326, column: 20, scope: !1069)
!1098 = !DILocation(line: 326, column: 18, scope: !1069)
!1099 = !DILocation(line: 326, column: 6, scope: !1069)
!1100 = !DILocation(line: 326, column: 11, scope: !1069)
!1101 = !DILocation(line: 328, column: 13, scope: !1069)
!1102 = !DILocation(line: 328, column: 11, scope: !1069)
!1103 = !DILocation(line: 329, column: 12, scope: !1069)
!1104 = !DILocation(line: 329, column: 9, scope: !1069)
!1105 = !DILocation(line: 330, column: 10, scope: !1069)
!1106 = !DILocation(line: 331, column: 4, scope: !1069)
!1107 = !DILocation(line: 332, column: 13, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 332, column: 13)
!1109 = !DILocation(line: 332, column: 16, scope: !1108)
!1110 = !DILocation(line: 332, column: 23, scope: !1108)
!1111 = !DILocation(line: 332, column: 26, scope: !1108)
!1112 = !DILocation(line: 332, column: 29, scope: !1108)
!1113 = !DILocation(line: 332, column: 13, scope: !1059)
!1114 = !DILocation(line: 333, column: 11, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1108, file: !1, line: 332, column: 37)
!1116 = !DILocation(line: 333, column: 13, scope: !1115)
!1117 = !DILocation(line: 333, column: 9, scope: !1115)
!1118 = !DILocation(line: 334, column: 10, scope: !1115)
!1119 = !DILocation(line: 335, column: 9, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1115, file: !1, line: 335, column: 9)
!1121 = !DILocation(line: 335, column: 14, scope: !1120)
!1122 = !DILocation(line: 335, column: 11, scope: !1120)
!1123 = !DILocation(line: 335, column: 9, scope: !1115)
!1124 = !DILocation(line: 336, column: 6, scope: !1120)
!1125 = !DILocation(line: 337, column: 4, scope: !1115)
!1126 = !DILocation(line: 338, column: 9, scope: !1060)
!1127 = !DILocation(line: 338, column: 6, scope: !1060)
!1128 = distinct !{!1128, !1056, !1129}
!1129 = !DILocation(line: 339, column: 3, scope: !1020)
!1130 = !DILocation(line: 340, column: 2, scope: !1020)
!1131 = !DILocation(line: 299, column: 66, scope: !1015)
!1132 = !DILocation(line: 299, column: 74, scope: !1015)
!1133 = !DILocation(line: 299, column: 81, scope: !1015)
!1134 = !DILocation(line: 299, column: 79, scope: !1015)
!1135 = !DILocation(line: 299, column: 43, scope: !1015)
!1136 = !DILocation(line: 299, column: 40, scope: !1015)
!1137 = !DILocation(line: 299, column: 2, scope: !1015)
!1138 = distinct !{!1138, !1018, !1139}
!1139 = !DILocation(line: 340, column: 2, scope: !1011)
!1140 = !DILocation(line: 341, column: 1, scope: !952)
!1141 = distinct !DISubprogram(name: "text_get_char_pos", scope: !1, file: !1, line: 343, type: !1142, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!244, !277, !839, !244}
!1144 = !DILocalVariable(name: "st", arg: 1, scope: !1141, file: !1, line: 343, type: !277)
!1145 = !DILocation(line: 343, column: 34, scope: !1141)
!1146 = !DILocalVariable(name: "line", arg: 2, scope: !1141, file: !1, line: 343, type: !839)
!1147 = !DILocation(line: 343, column: 50, scope: !1141)
!1148 = !DILocalVariable(name: "cur", arg: 3, scope: !1141, file: !1, line: 343, type: !244)
!1149 = !DILocation(line: 343, column: 60, scope: !1141)
!1150 = !DILocalVariable(name: "a", scope: !1141, file: !1, line: 345, type: !244)
!1151 = !DILocation(line: 345, column: 6, scope: !1141)
!1152 = !DILocalVariable(name: "i", scope: !1141, file: !1, line: 345, type: !244)
!1153 = !DILocation(line: 345, column: 13, scope: !1141)
!1154 = !DILocation(line: 347, column: 9, scope: !1155)
!1155 = distinct !DILexicalBlock(scope: !1141, file: !1, line: 347, column: 2)
!1156 = !DILocation(line: 347, column: 7, scope: !1155)
!1157 = !DILocation(line: 347, column: 14, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1155, file: !1, line: 347, column: 2)
!1159 = !DILocation(line: 347, column: 18, scope: !1158)
!1160 = !DILocation(line: 347, column: 16, scope: !1158)
!1161 = !DILocation(line: 347, column: 22, scope: !1158)
!1162 = !DILocation(line: 347, column: 25, scope: !1158)
!1163 = !DILocation(line: 347, column: 30, scope: !1158)
!1164 = !DILocation(line: 0, scope: !1158)
!1165 = !DILocation(line: 347, column: 2, scope: !1155)
!1166 = !DILocation(line: 348, column: 7, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !1, line: 348, column: 7)
!1168 = distinct !DILexicalBlock(scope: !1158, file: !1, line: 347, column: 73)
!1169 = !DILocation(line: 348, column: 12, scope: !1167)
!1170 = !DILocation(line: 348, column: 15, scope: !1167)
!1171 = !DILocation(line: 348, column: 7, scope: !1168)
!1172 = !DILocation(line: 349, column: 9, scope: !1167)
!1173 = !DILocation(line: 349, column: 13, scope: !1167)
!1174 = !DILocation(line: 349, column: 25, scope: !1167)
!1175 = !DILocation(line: 349, column: 29, scope: !1167)
!1176 = !DILocation(line: 349, column: 33, scope: !1167)
!1177 = !DILocation(line: 349, column: 27, scope: !1167)
!1178 = !DILocation(line: 349, column: 23, scope: !1167)
!1179 = !DILocation(line: 349, column: 6, scope: !1167)
!1180 = !DILocation(line: 349, column: 4, scope: !1167)
!1181 = !DILocation(line: 351, column: 38, scope: !1167)
!1182 = !DILocation(line: 351, column: 45, scope: !1167)
!1183 = !DILocation(line: 351, column: 43, scope: !1167)
!1184 = !DILocation(line: 351, column: 9, scope: !1167)
!1185 = !DILocation(line: 351, column: 6, scope: !1167)
!1186 = !DILocation(line: 352, column: 2, scope: !1168)
!1187 = !DILocation(line: 347, column: 62, scope: !1158)
!1188 = !DILocation(line: 347, column: 69, scope: !1158)
!1189 = !DILocation(line: 347, column: 67, scope: !1158)
!1190 = !DILocation(line: 347, column: 39, scope: !1158)
!1191 = !DILocation(line: 347, column: 36, scope: !1158)
!1192 = !DILocation(line: 347, column: 2, scope: !1158)
!1193 = distinct !{!1193, !1165, !1194}
!1194 = !DILocation(line: 352, column: 2, scope: !1155)
!1195 = !DILocation(line: 353, column: 9, scope: !1141)
!1196 = !DILocation(line: 353, column: 2, scope: !1141)
!1197 = distinct !DISubprogram(name: "text_drawcache_tag_update", scope: !1, file: !1, line: 635, type: !1198, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{null, !277, !244}
!1200 = !DILocalVariable(name: "st", arg: 1, scope: !1197, file: !1, line: 635, type: !277)
!1201 = !DILocation(line: 635, column: 43, scope: !1197)
!1202 = !DILocalVariable(name: "full", arg: 2, scope: !1197, file: !1, line: 635, type: !244)
!1203 = !DILocation(line: 635, column: 51, scope: !1197)
!1204 = !DILocation(line: 638, column: 6, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1197, file: !1, line: 638, column: 6)
!1206 = !DILocation(line: 638, column: 9, scope: !1205)
!1207 = !DILocation(line: 638, column: 6, scope: !1197)
!1208 = !DILocation(line: 639, column: 3, scope: !1205)
!1209 = !DILocation(line: 641, column: 6, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1197, file: !1, line: 641, column: 6)
!1211 = !DILocation(line: 641, column: 10, scope: !1210)
!1212 = !DILocation(line: 641, column: 6, scope: !1197)
!1213 = !DILocalVariable(name: "drawcache", scope: !1214, file: !1, line: 642, type: !246)
!1214 = distinct !DILexicalBlock(scope: !1210, file: !1, line: 641, column: 21)
!1215 = !DILocation(line: 642, column: 14, scope: !1214)
!1216 = !DILocation(line: 642, column: 39, scope: !1214)
!1217 = !DILocation(line: 642, column: 43, scope: !1214)
!1218 = !DILocation(line: 642, column: 26, scope: !1214)
!1219 = !DILocalVariable(name: "txt", scope: !1214, file: !1, line: 643, type: !571)
!1220 = !DILocation(line: 643, column: 9, scope: !1214)
!1221 = !DILocation(line: 643, column: 15, scope: !1214)
!1222 = !DILocation(line: 643, column: 19, scope: !1214)
!1223 = !DILocation(line: 645, column: 7, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1214, file: !1, line: 645, column: 7)
!1225 = !DILocation(line: 645, column: 18, scope: !1224)
!1226 = !DILocation(line: 645, column: 7, scope: !1214)
!1227 = !DILocation(line: 648, column: 4, scope: !1228)
!1228 = distinct !DILexicalBlock(scope: !1224, file: !1, line: 645, column: 31)
!1229 = !DILocation(line: 651, column: 8, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1214, file: !1, line: 651, column: 7)
!1231 = !DILocation(line: 651, column: 7, scope: !1214)
!1232 = !DILocalVariable(name: "sellno", scope: !1233, file: !1, line: 652, type: !244)
!1233 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 651, column: 14)
!1234 = !DILocation(line: 652, column: 8, scope: !1233)
!1235 = !DILocation(line: 652, column: 32, scope: !1233)
!1236 = !DILocation(line: 652, column: 37, scope: !1233)
!1237 = !DILocation(line: 652, column: 44, scope: !1233)
!1238 = !DILocation(line: 652, column: 49, scope: !1233)
!1239 = !DILocation(line: 652, column: 17, scope: !1233)
!1240 = !DILocalVariable(name: "curlno", scope: !1233, file: !1, line: 653, type: !244)
!1241 = !DILocation(line: 653, column: 8, scope: !1233)
!1242 = !DILocation(line: 653, column: 32, scope: !1233)
!1243 = !DILocation(line: 653, column: 37, scope: !1233)
!1244 = !DILocation(line: 653, column: 44, scope: !1233)
!1245 = !DILocation(line: 653, column: 49, scope: !1233)
!1246 = !DILocation(line: 653, column: 17, scope: !1233)
!1247 = !DILocation(line: 655, column: 8, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 655, column: 8)
!1249 = !DILocation(line: 655, column: 17, scope: !1248)
!1250 = !DILocation(line: 655, column: 15, scope: !1248)
!1251 = !DILocation(line: 655, column: 8, scope: !1233)
!1252 = !DILocation(line: 656, column: 29, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1248, file: !1, line: 655, column: 25)
!1254 = !DILocation(line: 656, column: 5, scope: !1253)
!1255 = !DILocation(line: 656, column: 16, scope: !1253)
!1256 = !DILocation(line: 656, column: 27, scope: !1253)
!1257 = !DILocation(line: 657, column: 29, scope: !1253)
!1258 = !DILocation(line: 657, column: 40, scope: !1253)
!1259 = !DILocation(line: 657, column: 49, scope: !1253)
!1260 = !DILocation(line: 657, column: 47, scope: !1253)
!1261 = !DILocation(line: 657, column: 56, scope: !1253)
!1262 = !DILocation(line: 657, column: 5, scope: !1253)
!1263 = !DILocation(line: 657, column: 16, scope: !1253)
!1264 = !DILocation(line: 657, column: 27, scope: !1253)
!1265 = !DILocation(line: 658, column: 4, scope: !1253)
!1266 = !DILocation(line: 660, column: 29, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1248, file: !1, line: 659, column: 9)
!1268 = !DILocation(line: 660, column: 5, scope: !1267)
!1269 = !DILocation(line: 660, column: 16, scope: !1267)
!1270 = !DILocation(line: 660, column: 27, scope: !1267)
!1271 = !DILocation(line: 661, column: 29, scope: !1267)
!1272 = !DILocation(line: 661, column: 40, scope: !1267)
!1273 = !DILocation(line: 661, column: 49, scope: !1267)
!1274 = !DILocation(line: 661, column: 47, scope: !1267)
!1275 = !DILocation(line: 661, column: 56, scope: !1267)
!1276 = !DILocation(line: 661, column: 5, scope: !1267)
!1277 = !DILocation(line: 661, column: 16, scope: !1267)
!1278 = !DILocation(line: 661, column: 27, scope: !1267)
!1279 = !DILocation(line: 667, column: 8, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 667, column: 8)
!1281 = !DILocation(line: 667, column: 19, scope: !1280)
!1282 = !DILocation(line: 667, column: 30, scope: !1280)
!1283 = !DILocation(line: 667, column: 8, scope: !1233)
!1284 = !DILocation(line: 667, column: 35, scope: !1280)
!1285 = !DILocation(line: 667, column: 46, scope: !1280)
!1286 = !DILocation(line: 667, column: 56, scope: !1280)
!1287 = !DILocation(line: 668, column: 8, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 668, column: 8)
!1289 = !DILocation(line: 668, column: 19, scope: !1288)
!1290 = !DILocation(line: 668, column: 30, scope: !1288)
!1291 = !DILocation(line: 668, column: 8, scope: !1233)
!1292 = !DILocation(line: 668, column: 35, scope: !1288)
!1293 = !DILocation(line: 668, column: 46, scope: !1288)
!1294 = !DILocation(line: 668, column: 56, scope: !1288)
!1295 = !DILocation(line: 669, column: 3, scope: !1233)
!1296 = !DILocation(line: 671, column: 4, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 670, column: 8)
!1298 = !DILocation(line: 671, column: 15, scope: !1297)
!1299 = !DILocation(line: 671, column: 26, scope: !1297)
!1300 = !DILocation(line: 672, column: 4, scope: !1297)
!1301 = !DILocation(line: 672, column: 15, scope: !1297)
!1302 = !DILocation(line: 672, column: 26, scope: !1297)
!1303 = !DILocation(line: 675, column: 3, scope: !1214)
!1304 = !DILocation(line: 675, column: 14, scope: !1214)
!1305 = !DILocation(line: 675, column: 26, scope: !1214)
!1306 = !DILocation(line: 676, column: 2, scope: !1214)
!1307 = !DILocation(line: 677, column: 1, scope: !1197)
!1308 = distinct !DISubprogram(name: "text_free_caches", scope: !1, file: !1, line: 679, type: !1309, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{null, !277}
!1311 = !DILocalVariable(name: "st", arg: 1, scope: !1308, file: !1, line: 679, type: !277)
!1312 = !DILocation(line: 679, column: 34, scope: !1308)
!1313 = !DILocalVariable(name: "drawcache", scope: !1308, file: !1, line: 681, type: !246)
!1314 = !DILocation(line: 681, column: 13, scope: !1308)
!1315 = !DILocation(line: 681, column: 38, scope: !1308)
!1316 = !DILocation(line: 681, column: 42, scope: !1308)
!1317 = !DILocation(line: 681, column: 25, scope: !1308)
!1318 = !DILocation(line: 683, column: 6, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1308, file: !1, line: 683, column: 6)
!1320 = !DILocation(line: 683, column: 6, scope: !1308)
!1321 = !DILocation(line: 684, column: 7, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1323, file: !1, line: 684, column: 7)
!1323 = distinct !DILexicalBlock(scope: !1319, file: !1, line: 683, column: 17)
!1324 = !DILocation(line: 684, column: 18, scope: !1322)
!1325 = !DILocation(line: 684, column: 7, scope: !1323)
!1326 = !DILocation(line: 685, column: 4, scope: !1322)
!1327 = !DILocation(line: 685, column: 14, scope: !1322)
!1328 = !DILocation(line: 685, column: 25, scope: !1322)
!1329 = !DILocation(line: 687, column: 3, scope: !1323)
!1330 = !DILocation(line: 687, column: 13, scope: !1323)
!1331 = !DILocation(line: 688, column: 2, scope: !1323)
!1332 = !DILocation(line: 689, column: 1, scope: !1308)
!1333 = distinct !DISubprogram(name: "text_get_span_wrap", scope: !1, file: !1, line: 740, type: !1334, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!244, !277, !439, !377, !377}
!1336 = !DILocalVariable(name: "st", arg: 1, scope: !1333, file: !1, line: 740, type: !277)
!1337 = !DILocation(line: 740, column: 35, scope: !1333)
!1338 = !DILocalVariable(name: "ar", arg: 2, scope: !1333, file: !1, line: 740, type: !439)
!1339 = !DILocation(line: 740, column: 48, scope: !1333)
!1340 = !DILocalVariable(name: "from", arg: 3, scope: !1333, file: !1, line: 740, type: !377)
!1341 = !DILocation(line: 740, column: 62, scope: !1333)
!1342 = !DILocalVariable(name: "to", arg: 4, scope: !1333, file: !1, line: 740, type: !377)
!1343 = !DILocation(line: 740, column: 78, scope: !1333)
!1344 = !DILocation(line: 742, column: 6, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1333, file: !1, line: 742, column: 6)
!1346 = !DILocation(line: 742, column: 10, scope: !1345)
!1347 = !DILocation(line: 742, column: 6, scope: !1333)
!1348 = !DILocalVariable(name: "ret", scope: !1349, file: !1, line: 743, type: !244)
!1349 = distinct !DILexicalBlock(scope: !1345, file: !1, line: 742, column: 20)
!1350 = !DILocation(line: 743, column: 7, scope: !1349)
!1351 = !DILocalVariable(name: "tmp", scope: !1349, file: !1, line: 744, type: !377)
!1352 = !DILocation(line: 744, column: 13, scope: !1349)
!1353 = !DILocation(line: 744, column: 19, scope: !1349)
!1354 = !DILocation(line: 747, column: 3, scope: !1349)
!1355 = !DILocation(line: 747, column: 10, scope: !1349)
!1356 = !DILocation(line: 748, column: 8, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1358, file: !1, line: 748, column: 8)
!1358 = distinct !DILexicalBlock(scope: !1349, file: !1, line: 747, column: 15)
!1359 = !DILocation(line: 748, column: 15, scope: !1357)
!1360 = !DILocation(line: 748, column: 12, scope: !1357)
!1361 = !DILocation(line: 748, column: 8, scope: !1358)
!1362 = !DILocation(line: 748, column: 26, scope: !1357)
!1363 = !DILocation(line: 748, column: 19, scope: !1357)
!1364 = !DILocation(line: 749, column: 34, scope: !1358)
!1365 = !DILocation(line: 749, column: 38, scope: !1358)
!1366 = !DILocation(line: 749, column: 42, scope: !1358)
!1367 = !DILocation(line: 749, column: 47, scope: !1358)
!1368 = !DILocation(line: 749, column: 11, scope: !1358)
!1369 = !DILocation(line: 749, column: 8, scope: !1358)
!1370 = !DILocation(line: 750, column: 10, scope: !1358)
!1371 = !DILocation(line: 750, column: 15, scope: !1358)
!1372 = !DILocation(line: 750, column: 8, scope: !1358)
!1373 = distinct !{!1373, !1354, !1374}
!1374 = !DILocation(line: 751, column: 3, scope: !1349)
!1375 = !DILocation(line: 753, column: 10, scope: !1349)
!1376 = !DILocation(line: 753, column: 3, scope: !1349)
!1377 = !DILocation(line: 756, column: 23, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1345, file: !1, line: 755, column: 7)
!1379 = !DILocation(line: 756, column: 29, scope: !1378)
!1380 = !DILocation(line: 756, column: 10, scope: !1378)
!1381 = !DILocation(line: 756, column: 3, scope: !1378)
!1382 = !DILocation(line: 758, column: 1, scope: !1333)
!1383 = distinct !DISubprogram(name: "text_get_total_lines", scope: !1, file: !1, line: 760, type: !275, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1384 = !DILocalVariable(name: "st", arg: 1, scope: !1383, file: !1, line: 760, type: !277)
!1385 = !DILocation(line: 760, column: 37, scope: !1383)
!1386 = !DILocalVariable(name: "ar", arg: 2, scope: !1383, file: !1, line: 760, type: !439)
!1387 = !DILocation(line: 760, column: 50, scope: !1383)
!1388 = !DILocalVariable(name: "drawcache", scope: !1383, file: !1, line: 762, type: !246)
!1389 = !DILocation(line: 762, column: 13, scope: !1383)
!1390 = !DILocation(line: 764, column: 24, scope: !1383)
!1391 = !DILocation(line: 764, column: 28, scope: !1383)
!1392 = !DILocation(line: 764, column: 2, scope: !1383)
!1393 = !DILocation(line: 765, column: 27, scope: !1383)
!1394 = !DILocation(line: 765, column: 31, scope: !1383)
!1395 = !DILocation(line: 765, column: 14, scope: !1383)
!1396 = !DILocation(line: 765, column: 12, scope: !1383)
!1397 = !DILocation(line: 767, column: 9, scope: !1383)
!1398 = !DILocation(line: 767, column: 20, scope: !1383)
!1399 = !DILocation(line: 767, column: 2, scope: !1383)
!1400 = distinct !DISubprogram(name: "text_update_drawcache", scope: !1, file: !1, line: 528, type: !1401, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{null, !277, !439}
!1403 = !DILocalVariable(name: "st", arg: 1, scope: !1400, file: !1, line: 528, type: !277)
!1404 = !DILocation(line: 528, column: 46, scope: !1400)
!1405 = !DILocalVariable(name: "ar", arg: 2, scope: !1400, file: !1, line: 528, type: !439)
!1406 = !DILocation(line: 528, column: 59, scope: !1400)
!1407 = !DILocalVariable(name: "drawcache", scope: !1400, file: !1, line: 530, type: !246)
!1408 = !DILocation(line: 530, column: 13, scope: !1400)
!1409 = !DILocalVariable(name: "full_update", scope: !1400, file: !1, line: 531, type: !244)
!1410 = !DILocation(line: 531, column: 6, scope: !1400)
!1411 = !DILocalVariable(name: "nlines", scope: !1400, file: !1, line: 531, type: !244)
!1412 = !DILocation(line: 531, column: 23, scope: !1400)
!1413 = !DILocalVariable(name: "txt", scope: !1400, file: !1, line: 532, type: !571)
!1414 = !DILocation(line: 532, column: 8, scope: !1400)
!1415 = !DILocation(line: 532, column: 14, scope: !1400)
!1416 = !DILocation(line: 532, column: 18, scope: !1400)
!1417 = !DILocation(line: 534, column: 7, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 534, column: 6)
!1419 = !DILocation(line: 534, column: 11, scope: !1418)
!1420 = !DILocation(line: 534, column: 6, scope: !1400)
!1421 = !DILocation(line: 534, column: 42, scope: !1418)
!1422 = !DILocation(line: 534, column: 22, scope: !1418)
!1423 = !DILocation(line: 536, column: 30, scope: !1400)
!1424 = !DILocation(line: 536, column: 2, scope: !1400)
!1425 = !DILocation(line: 538, column: 27, scope: !1400)
!1426 = !DILocation(line: 538, column: 31, scope: !1400)
!1427 = !DILocation(line: 538, column: 14, scope: !1400)
!1428 = !DILocation(line: 538, column: 12, scope: !1400)
!1429 = !DILocation(line: 539, column: 11, scope: !1400)
!1430 = !DILocation(line: 539, column: 22, scope: !1400)
!1431 = !DILocation(line: 539, column: 9, scope: !1400)
!1432 = !DILocation(line: 542, column: 17, scope: !1400)
!1433 = !DILocation(line: 542, column: 28, scope: !1400)
!1434 = !DILocation(line: 542, column: 36, scope: !1400)
!1435 = !DILocation(line: 542, column: 40, scope: !1400)
!1436 = !DILocation(line: 542, column: 33, scope: !1400)
!1437 = !DILocation(line: 542, column: 14, scope: !1400)
!1438 = !DILocation(line: 543, column: 17, scope: !1400)
!1439 = !DILocation(line: 543, column: 28, scope: !1400)
!1440 = !DILocation(line: 543, column: 40, scope: !1400)
!1441 = !DILocation(line: 543, column: 44, scope: !1400)
!1442 = !DILocation(line: 543, column: 37, scope: !1400)
!1443 = !DILocation(line: 543, column: 14, scope: !1400)
!1444 = !DILocation(line: 544, column: 17, scope: !1400)
!1445 = !DILocation(line: 544, column: 28, scope: !1400)
!1446 = !DILocation(line: 544, column: 43, scope: !1400)
!1447 = !DILocation(line: 544, column: 47, scope: !1400)
!1448 = !DILocation(line: 544, column: 40, scope: !1400)
!1449 = !DILocation(line: 544, column: 14, scope: !1400)
!1450 = !DILocation(line: 545, column: 17, scope: !1400)
!1451 = !DILocation(line: 545, column: 28, scope: !1400)
!1452 = !DILocation(line: 545, column: 41, scope: !1400)
!1453 = !DILocation(line: 545, column: 45, scope: !1400)
!1454 = !DILocation(line: 545, column: 38, scope: !1400)
!1455 = !DILocation(line: 545, column: 14, scope: !1400)
!1456 = !DILocation(line: 546, column: 17, scope: !1400)
!1457 = !DILocation(line: 546, column: 28, scope: !1400)
!1458 = !DILocation(line: 546, column: 39, scope: !1400)
!1459 = !DILocation(line: 546, column: 43, scope: !1400)
!1460 = !DILocation(line: 546, column: 36, scope: !1400)
!1461 = !DILocation(line: 546, column: 14, scope: !1400)
!1462 = !DILocation(line: 547, column: 17, scope: !1400)
!1463 = !DILocation(line: 547, column: 28, scope: !1400)
!1464 = !DILocation(line: 547, column: 38, scope: !1400)
!1465 = !DILocation(line: 547, column: 42, scope: !1400)
!1466 = !DILocation(line: 547, column: 35, scope: !1400)
!1467 = !DILocation(line: 547, column: 14, scope: !1400)
!1468 = !DILocation(line: 548, column: 25, scope: !1400)
!1469 = !DILocation(line: 548, column: 36, scope: !1400)
!1470 = !DILocation(line: 548, column: 45, scope: !1400)
!1471 = !DILocation(line: 548, column: 50, scope: !1400)
!1472 = !DILocation(line: 548, column: 53, scope: !1400)
!1473 = !DILocation(line: 548, column: 17, scope: !1400)
!1474 = !DILocation(line: 548, column: 14, scope: !1400)
!1475 = !DILocation(line: 550, column: 6, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 550, column: 6)
!1477 = !DILocation(line: 550, column: 10, scope: !1476)
!1478 = !DILocation(line: 550, column: 6, scope: !1400)
!1479 = !DILocation(line: 552, column: 7, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !1, line: 552, column: 7)
!1481 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 550, column: 20)
!1482 = !DILocation(line: 552, column: 19, scope: !1480)
!1483 = !DILocation(line: 552, column: 23, scope: !1480)
!1484 = !DILocation(line: 552, column: 34, scope: !1480)
!1485 = !DILocation(line: 552, column: 7, scope: !1481)
!1486 = !DILocation(line: 553, column: 4, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 552, column: 47)
!1488 = !DILocation(line: 553, column: 15, scope: !1487)
!1489 = !DILocation(line: 553, column: 27, scope: !1487)
!1490 = !DILocation(line: 554, column: 4, scope: !1487)
!1491 = !DILocation(line: 554, column: 15, scope: !1487)
!1492 = !DILocation(line: 554, column: 27, scope: !1487)
!1493 = !DILocation(line: 555, column: 4, scope: !1487)
!1494 = !DILocation(line: 555, column: 15, scope: !1487)
!1495 = !DILocation(line: 555, column: 27, scope: !1487)
!1496 = !DILocation(line: 556, column: 3, scope: !1487)
!1497 = !DILocation(line: 558, column: 7, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1481, file: !1, line: 558, column: 7)
!1499 = !DILocation(line: 558, column: 18, scope: !1498)
!1500 = !DILocation(line: 558, column: 7, scope: !1481)
!1501 = !DILocalVariable(name: "line", scope: !1502, file: !1, line: 559, type: !377)
!1502 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 558, column: 31)
!1503 = !DILocation(line: 559, column: 14, scope: !1502)
!1504 = !DILocation(line: 559, column: 21, scope: !1502)
!1505 = !DILocation(line: 559, column: 25, scope: !1502)
!1506 = !DILocation(line: 559, column: 31, scope: !1502)
!1507 = !DILocation(line: 559, column: 37, scope: !1502)
!1508 = !DILocalVariable(name: "lineno", scope: !1502, file: !1, line: 560, type: !244)
!1509 = !DILocation(line: 560, column: 8, scope: !1502)
!1510 = !DILocalVariable(name: "size", scope: !1502, file: !1, line: 560, type: !244)
!1511 = !DILocation(line: 560, column: 20, scope: !1502)
!1512 = !DILocalVariable(name: "lines_count", scope: !1502, file: !1, line: 560, type: !244)
!1513 = !DILocation(line: 560, column: 26, scope: !1502)
!1514 = !DILocalVariable(name: "fp", scope: !1502, file: !1, line: 561, type: !251)
!1515 = !DILocation(line: 561, column: 9, scope: !1502)
!1516 = !DILocation(line: 561, column: 14, scope: !1502)
!1517 = !DILocation(line: 561, column: 25, scope: !1502)
!1518 = !DILocalVariable(name: "new_tail", scope: !1502, file: !1, line: 561, type: !251)
!1519 = !DILocation(line: 561, column: 39, scope: !1502)
!1520 = !DILocalVariable(name: "old_tail", scope: !1502, file: !1, line: 561, type: !251)
!1521 = !DILocation(line: 561, column: 50, scope: !1502)
!1522 = !DILocation(line: 563, column: 28, scope: !1502)
!1523 = !DILocation(line: 563, column: 33, scope: !1502)
!1524 = !DILocation(line: 563, column: 13, scope: !1502)
!1525 = !DILocation(line: 563, column: 11, scope: !1502)
!1526 = !DILocation(line: 564, column: 25, scope: !1502)
!1527 = !DILocation(line: 564, column: 23, scope: !1502)
!1528 = !DILocation(line: 564, column: 11, scope: !1502)
!1529 = !DILocation(line: 564, column: 9, scope: !1502)
!1530 = !DILocation(line: 566, column: 8, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1502, file: !1, line: 566, column: 8)
!1532 = !DILocation(line: 566, column: 8, scope: !1502)
!1533 = !DILocation(line: 566, column: 17, scope: !1531)
!1534 = !DILocation(line: 566, column: 15, scope: !1531)
!1535 = !DILocation(line: 566, column: 12, scope: !1531)
!1536 = !DILocation(line: 567, column: 14, scope: !1531)
!1537 = !DILocation(line: 567, column: 26, scope: !1531)
!1538 = !DILocation(line: 567, column: 12, scope: !1531)
!1539 = !DILocation(line: 569, column: 28, scope: !1502)
!1540 = !DILocation(line: 569, column: 39, scope: !1502)
!1541 = !DILocation(line: 569, column: 50, scope: !1502)
!1542 = !DILocation(line: 569, column: 4, scope: !1502)
!1543 = !DILocation(line: 569, column: 15, scope: !1502)
!1544 = !DILocation(line: 569, column: 26, scope: !1502)
!1545 = !DILocation(line: 570, column: 15, scope: !1502)
!1546 = !DILocation(line: 570, column: 20, scope: !1502)
!1547 = !DILocation(line: 570, column: 31, scope: !1502)
!1548 = !DILocation(line: 570, column: 18, scope: !1502)
!1549 = !DILocation(line: 570, column: 40, scope: !1502)
!1550 = !DILocation(line: 570, column: 51, scope: !1502)
!1551 = !DILocation(line: 570, column: 38, scope: !1502)
!1552 = !DILocation(line: 570, column: 13, scope: !1502)
!1553 = !DILocation(line: 571, column: 15, scope: !1502)
!1554 = !DILocation(line: 571, column: 20, scope: !1502)
!1555 = !DILocation(line: 571, column: 18, scope: !1502)
!1556 = !DILocation(line: 571, column: 29, scope: !1502)
!1557 = !DILocation(line: 571, column: 40, scope: !1502)
!1558 = !DILocation(line: 571, column: 27, scope: !1502)
!1559 = !DILocation(line: 571, column: 13, scope: !1502)
!1560 = !DILocation(line: 572, column: 12, scope: !1502)
!1561 = !DILocation(line: 572, column: 4, scope: !1502)
!1562 = !DILocation(line: 572, column: 22, scope: !1502)
!1563 = !DILocation(line: 572, column: 32, scope: !1502)
!1564 = !DILocation(line: 572, column: 43, scope: !1502)
!1565 = !DILocation(line: 574, column: 4, scope: !1502)
!1566 = !DILocation(line: 574, column: 15, scope: !1502)
!1567 = !DILocation(line: 574, column: 27, scope: !1502)
!1568 = !DILocation(line: 576, column: 8, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1502, file: !1, line: 576, column: 8)
!1570 = !DILocation(line: 576, column: 12, scope: !1569)
!1571 = !DILocation(line: 576, column: 8, scope: !1502)
!1572 = !DILocation(line: 577, column: 47, scope: !1569)
!1573 = !DILocation(line: 577, column: 40, scope: !1569)
!1574 = !DILocation(line: 577, column: 34, scope: !1569)
!1575 = !DILocation(line: 577, column: 28, scope: !1569)
!1576 = !DILocation(line: 577, column: 23, scope: !1569)
!1577 = !DILocation(line: 577, column: 56, scope: !1569)
!1578 = !DILocation(line: 577, column: 5, scope: !1569)
!1579 = !DILocation(line: 577, column: 9, scope: !1569)
!1580 = !DILocation(line: 577, column: 21, scope: !1569)
!1581 = !DILocation(line: 579, column: 4, scope: !1502)
!1582 = !DILocation(line: 579, column: 11, scope: !1502)
!1583 = !DILocation(line: 580, column: 9, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !1, line: 580, column: 9)
!1585 = distinct !DILexicalBlock(scope: !1502, file: !1, line: 579, column: 17)
!1586 = !DILocation(line: 580, column: 20, scope: !1584)
!1587 = !DILocation(line: 580, column: 9, scope: !1585)
!1588 = !DILocation(line: 581, column: 20, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1584, file: !1, line: 580, column: 32)
!1590 = !DILocation(line: 581, column: 23, scope: !1589)
!1591 = !DILocation(line: 581, column: 18, scope: !1589)
!1592 = !DILocation(line: 582, column: 6, scope: !1589)
!1593 = !DILocation(line: 582, column: 17, scope: !1589)
!1594 = !DILocation(line: 582, column: 27, scope: !1589)
!1595 = !DILocation(line: 583, column: 5, scope: !1589)
!1596 = !DILocation(line: 584, column: 14, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1584, file: !1, line: 584, column: 14)
!1598 = !DILocation(line: 584, column: 23, scope: !1597)
!1599 = !DILocation(line: 584, column: 34, scope: !1597)
!1600 = !DILocation(line: 584, column: 32, scope: !1597)
!1601 = !DILocation(line: 584, column: 21, scope: !1597)
!1602 = !DILocation(line: 584, column: 14, scope: !1584)
!1603 = !DILocation(line: 585, column: 20, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1597, file: !1, line: 584, column: 38)
!1605 = !DILocation(line: 585, column: 23, scope: !1604)
!1606 = !DILocation(line: 585, column: 18, scope: !1604)
!1607 = !DILocation(line: 586, column: 5, scope: !1604)
!1608 = !DILocation(line: 588, column: 43, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1597, file: !1, line: 587, column: 10)
!1610 = !DILocation(line: 588, column: 47, scope: !1609)
!1611 = !DILocation(line: 588, column: 51, scope: !1609)
!1612 = !DILocation(line: 588, column: 57, scope: !1609)
!1613 = !DILocation(line: 588, column: 20, scope: !1609)
!1614 = !DILocation(line: 588, column: 18, scope: !1609)
!1615 = !DILocation(line: 591, column: 18, scope: !1585)
!1616 = !DILocation(line: 591, column: 5, scope: !1585)
!1617 = !DILocation(line: 591, column: 8, scope: !1585)
!1618 = !DILocation(line: 591, column: 16, scope: !1585)
!1619 = !DILocation(line: 593, column: 12, scope: !1585)
!1620 = !DILocation(line: 593, column: 18, scope: !1585)
!1621 = !DILocation(line: 593, column: 10, scope: !1585)
!1622 = !DILocation(line: 594, column: 11, scope: !1585)
!1623 = !DILocation(line: 595, column: 31, scope: !1585)
!1624 = !DILocation(line: 595, column: 5, scope: !1585)
!1625 = !DILocation(line: 595, column: 16, scope: !1585)
!1626 = !DILocation(line: 595, column: 28, scope: !1585)
!1627 = distinct !{!1627, !1581, !1628}
!1628 = !DILocation(line: 596, column: 4, scope: !1502)
!1629 = !DILocation(line: 598, column: 29, scope: !1502)
!1630 = !DILocation(line: 598, column: 4, scope: !1502)
!1631 = !DILocation(line: 598, column: 15, scope: !1502)
!1632 = !DILocation(line: 598, column: 27, scope: !1502)
!1633 = !DILocation(line: 599, column: 3, scope: !1502)
!1634 = !DILocation(line: 600, column: 2, scope: !1481)
!1635 = !DILocation(line: 602, column: 7, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 602, column: 7)
!1637 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 601, column: 7)
!1638 = !DILocation(line: 602, column: 18, scope: !1636)
!1639 = !DILocation(line: 602, column: 7, scope: !1637)
!1640 = !DILocation(line: 603, column: 4, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1636, file: !1, line: 602, column: 31)
!1642 = !DILocation(line: 603, column: 14, scope: !1641)
!1643 = !DILocation(line: 603, column: 25, scope: !1641)
!1644 = !DILocation(line: 604, column: 4, scope: !1641)
!1645 = !DILocation(line: 604, column: 15, scope: !1641)
!1646 = !DILocation(line: 604, column: 27, scope: !1641)
!1647 = !DILocation(line: 605, column: 3, scope: !1641)
!1648 = !DILocation(line: 607, column: 7, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 607, column: 7)
!1650 = !DILocation(line: 607, column: 19, scope: !1649)
!1651 = !DILocation(line: 607, column: 22, scope: !1649)
!1652 = !DILocation(line: 607, column: 33, scope: !1649)
!1653 = !DILocation(line: 607, column: 7, scope: !1637)
!1654 = !DILocation(line: 608, column: 28, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1649, file: !1, line: 607, column: 46)
!1656 = !DILocation(line: 608, column: 33, scope: !1655)
!1657 = !DILocation(line: 608, column: 13, scope: !1655)
!1658 = !DILocation(line: 608, column: 11, scope: !1655)
!1659 = !DILocation(line: 610, column: 8, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 610, column: 8)
!1661 = !DILocation(line: 610, column: 12, scope: !1660)
!1662 = !DILocation(line: 610, column: 8, scope: !1655)
!1663 = !DILocation(line: 611, column: 47, scope: !1660)
!1664 = !DILocation(line: 611, column: 40, scope: !1660)
!1665 = !DILocation(line: 611, column: 34, scope: !1660)
!1666 = !DILocation(line: 611, column: 28, scope: !1660)
!1667 = !DILocation(line: 611, column: 23, scope: !1660)
!1668 = !DILocation(line: 611, column: 56, scope: !1660)
!1669 = !DILocation(line: 611, column: 5, scope: !1660)
!1670 = !DILocation(line: 611, column: 9, scope: !1660)
!1671 = !DILocation(line: 611, column: 21, scope: !1660)
!1672 = !DILocation(line: 612, column: 3, scope: !1655)
!1673 = !DILocation(line: 614, column: 28, scope: !1637)
!1674 = !DILocation(line: 614, column: 3, scope: !1637)
!1675 = !DILocation(line: 614, column: 14, scope: !1637)
!1676 = !DILocation(line: 614, column: 26, scope: !1637)
!1677 = !DILocation(line: 617, column: 22, scope: !1400)
!1678 = !DILocation(line: 617, column: 2, scope: !1400)
!1679 = !DILocation(line: 617, column: 13, scope: !1400)
!1680 = !DILocation(line: 617, column: 20, scope: !1400)
!1681 = !DILocation(line: 620, column: 27, scope: !1400)
!1682 = !DILocation(line: 620, column: 31, scope: !1400)
!1683 = !DILocation(line: 620, column: 2, scope: !1400)
!1684 = !DILocation(line: 620, column: 13, scope: !1400)
!1685 = !DILocation(line: 620, column: 25, scope: !1400)
!1686 = !DILocation(line: 621, column: 27, scope: !1400)
!1687 = !DILocation(line: 621, column: 31, scope: !1400)
!1688 = !DILocation(line: 621, column: 2, scope: !1400)
!1689 = !DILocation(line: 621, column: 13, scope: !1400)
!1690 = !DILocation(line: 621, column: 25, scope: !1400)
!1691 = !DILocation(line: 622, column: 27, scope: !1400)
!1692 = !DILocation(line: 622, column: 31, scope: !1400)
!1693 = !DILocation(line: 622, column: 2, scope: !1400)
!1694 = !DILocation(line: 622, column: 13, scope: !1400)
!1695 = !DILocation(line: 622, column: 25, scope: !1400)
!1696 = !DILocation(line: 623, column: 27, scope: !1400)
!1697 = !DILocation(line: 623, column: 31, scope: !1400)
!1698 = !DILocation(line: 623, column: 2, scope: !1400)
!1699 = !DILocation(line: 623, column: 13, scope: !1400)
!1700 = !DILocation(line: 623, column: 25, scope: !1400)
!1701 = !DILocation(line: 624, column: 27, scope: !1400)
!1702 = !DILocation(line: 624, column: 31, scope: !1400)
!1703 = !DILocation(line: 624, column: 2, scope: !1400)
!1704 = !DILocation(line: 624, column: 13, scope: !1400)
!1705 = !DILocation(line: 624, column: 25, scope: !1400)
!1706 = !DILocation(line: 625, column: 27, scope: !1400)
!1707 = !DILocation(line: 625, column: 31, scope: !1400)
!1708 = !DILocation(line: 625, column: 2, scope: !1400)
!1709 = !DILocation(line: 625, column: 13, scope: !1400)
!1710 = !DILocation(line: 625, column: 25, scope: !1400)
!1711 = !DILocation(line: 627, column: 10, scope: !1400)
!1712 = !DILocation(line: 627, column: 21, scope: !1400)
!1713 = !DILocation(line: 627, column: 30, scope: !1400)
!1714 = !DILocation(line: 627, column: 35, scope: !1400)
!1715 = !DILocation(line: 627, column: 38, scope: !1400)
!1716 = !DILocation(line: 627, column: 2, scope: !1400)
!1717 = !DILocation(line: 630, column: 2, scope: !1400)
!1718 = !DILocation(line: 630, column: 13, scope: !1400)
!1719 = !DILocation(line: 630, column: 25, scope: !1400)
!1720 = !DILocation(line: 631, column: 2, scope: !1400)
!1721 = !DILocation(line: 631, column: 13, scope: !1400)
!1722 = !DILocation(line: 631, column: 25, scope: !1400)
!1723 = !DILocation(line: 632, column: 2, scope: !1400)
!1724 = !DILocation(line: 632, column: 13, scope: !1400)
!1725 = !DILocation(line: 632, column: 25, scope: !1400)
!1726 = !DILocation(line: 633, column: 1, scope: !1400)
!1727 = distinct !DISubprogram(name: "draw_text_main", scope: !1, file: !1, line: 1316, type: !1401, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!1728 = !DILocalVariable(name: "st", arg: 1, scope: !1727, file: !1, line: 1316, type: !277)
!1729 = !DILocation(line: 1316, column: 32, scope: !1727)
!1730 = !DILocalVariable(name: "ar", arg: 2, scope: !1727, file: !1, line: 1316, type: !439)
!1731 = !DILocation(line: 1316, column: 45, scope: !1727)
!1732 = !DILocalVariable(name: "text", scope: !1727, file: !1, line: 1318, type: !571)
!1733 = !DILocation(line: 1318, column: 8, scope: !1727)
!1734 = !DILocation(line: 1318, column: 15, scope: !1727)
!1735 = !DILocation(line: 1318, column: 19, scope: !1727)
!1736 = !DILocalVariable(name: "tft", scope: !1727, file: !1, line: 1319, type: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextFormatType", file: !222, line: 83, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextFormatType", file: !222, line: 66, size: 320, elements: !1740)
!1740 = !{!1741, !1743, !1744, !1748, !1754}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1739, file: !222, line: 67, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1739, file: !222, line: 67, baseType: !1742, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "format_identifier", scope: !1739, file: !222, line: 69, baseType: !1745, size: 64, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!261, !839}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "format_line", scope: !1739, file: !222, line: 80, baseType: !1749, size: 64, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{null, !277, !377, !1752}
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1753 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1739, file: !222, line: 82, baseType: !1755, size: 64, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!1756 = !DILocation(line: 1319, column: 18, scope: !1727)
!1757 = !DILocalVariable(name: "tmp", scope: !1727, file: !1, line: 1320, type: !377)
!1758 = !DILocation(line: 1320, column: 12, scope: !1727)
!1759 = !DILocalVariable(name: "scroll", scope: !1727, file: !1, line: 1321, type: !461)
!1760 = !DILocation(line: 1321, column: 7, scope: !1727)
!1761 = !DILocalVariable(name: "back", scope: !1727, file: !1, line: 1321, type: !461)
!1762 = !DILocation(line: 1321, column: 15, scope: !1727)
!1763 = !DILocalVariable(name: "linenr", scope: !1727, file: !1, line: 1322, type: !1764)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1765)
!1765 = !{!1766}
!1766 = !DISubrange(count: 12)
!1767 = !DILocation(line: 1322, column: 7, scope: !1727)
!1768 = !DILocalVariable(name: "i", scope: !1727, file: !1, line: 1323, type: !244)
!1769 = !DILocation(line: 1323, column: 6, scope: !1727)
!1770 = !DILocalVariable(name: "x", scope: !1727, file: !1, line: 1323, type: !244)
!1771 = !DILocation(line: 1323, column: 9, scope: !1727)
!1772 = !DILocalVariable(name: "y", scope: !1727, file: !1, line: 1323, type: !244)
!1773 = !DILocation(line: 1323, column: 12, scope: !1727)
!1774 = !DILocalVariable(name: "winx", scope: !1727, file: !1, line: 1323, type: !244)
!1775 = !DILocation(line: 1323, column: 15, scope: !1727)
!1776 = !DILocalVariable(name: "linecount", scope: !1727, file: !1, line: 1323, type: !244)
!1777 = !DILocation(line: 1323, column: 21, scope: !1727)
!1778 = !DILocalVariable(name: "lineno", scope: !1727, file: !1, line: 1323, type: !244)
!1779 = !DILocation(line: 1323, column: 36, scope: !1727)
!1780 = !DILocalVariable(name: "wraplinecount", scope: !1727, file: !1, line: 1324, type: !244)
!1781 = !DILocation(line: 1324, column: 6, scope: !1727)
!1782 = !DILocalVariable(name: "wrap_skip", scope: !1727, file: !1, line: 1324, type: !244)
!1783 = !DILocation(line: 1324, column: 25, scope: !1727)
!1784 = !DILocalVariable(name: "margin_column_x", scope: !1727, file: !1, line: 1325, type: !244)
!1785 = !DILocation(line: 1325, column: 6, scope: !1727)
!1786 = !DILocation(line: 1328, column: 7, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1328, column: 6)
!1788 = !DILocation(line: 1328, column: 6, scope: !1727)
!1789 = !DILocation(line: 1329, column: 3, scope: !1787)
!1790 = !DILocation(line: 1332, column: 23, scope: !1727)
!1791 = !DILocation(line: 1332, column: 21, scope: !1727)
!1792 = !DILocation(line: 1332, column: 37, scope: !1727)
!1793 = !DILocation(line: 1332, column: 41, scope: !1727)
!1794 = !DILocation(line: 1332, column: 35, scope: !1727)
!1795 = !DILocation(line: 1332, column: 50, scope: !1727)
!1796 = !DILocation(line: 1332, column: 20, scope: !1727)
!1797 = !DILocation(line: 1332, column: 2, scope: !1727)
!1798 = !DILocation(line: 1332, column: 6, scope: !1727)
!1799 = !DILocation(line: 1332, column: 18, scope: !1727)
!1800 = !DILocation(line: 1333, column: 19, scope: !1727)
!1801 = !DILocation(line: 1333, column: 23, scope: !1727)
!1802 = !DILocation(line: 1333, column: 18, scope: !1727)
!1803 = !DILocation(line: 1333, column: 43, scope: !1727)
!1804 = !DILocation(line: 1333, column: 47, scope: !1727)
!1805 = !DILocation(line: 1333, column: 38, scope: !1727)
!1806 = !DILocation(line: 1333, column: 55, scope: !1727)
!1807 = !DILocation(line: 1333, column: 59, scope: !1727)
!1808 = !DILocation(line: 1333, column: 73, scope: !1727)
!1809 = !DILocation(line: 1333, column: 71, scope: !1727)
!1810 = !DILocation(line: 1333, column: 52, scope: !1727)
!1811 = !DILocation(line: 1333, column: 2, scope: !1727)
!1812 = !DILocation(line: 1333, column: 6, scope: !1727)
!1813 = !DILocation(line: 1333, column: 16, scope: !1727)
!1814 = !DILocation(line: 1335, column: 24, scope: !1727)
!1815 = !DILocation(line: 1335, column: 28, scope: !1727)
!1816 = !DILocation(line: 1335, column: 2, scope: !1727)
!1817 = !DILocation(line: 1338, column: 7, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1338, column: 6)
!1819 = !DILocation(line: 1338, column: 13, scope: !1818)
!1820 = !DILocation(line: 1338, column: 18, scope: !1818)
!1821 = !DILocation(line: 1338, column: 22, scope: !1818)
!1822 = !DILocation(line: 1338, column: 28, scope: !1818)
!1823 = !DILocation(line: 1338, column: 33, scope: !1818)
!1824 = !DILocation(line: 1338, column: 37, scope: !1818)
!1825 = !DILocation(line: 1338, column: 43, scope: !1818)
!1826 = !DILocation(line: 1338, column: 49, scope: !1818)
!1827 = !DILocation(line: 1338, column: 55, scope: !1818)
!1828 = !DILocation(line: 1338, column: 59, scope: !1818)
!1829 = !DILocation(line: 1338, column: 65, scope: !1818)
!1830 = !DILocation(line: 1338, column: 71, scope: !1818)
!1831 = !DILocation(line: 1338, column: 6, scope: !1727)
!1832 = !DILocation(line: 1339, column: 18, scope: !1818)
!1833 = !DILocation(line: 1339, column: 3, scope: !1818)
!1834 = !DILocation(line: 1342, column: 17, scope: !1727)
!1835 = !DILocation(line: 1342, column: 21, scope: !1727)
!1836 = !DILocation(line: 1342, column: 2, scope: !1727)
!1837 = !DILocation(line: 1345, column: 27, scope: !1727)
!1838 = !DILocation(line: 1345, column: 8, scope: !1727)
!1839 = !DILocation(line: 1345, column: 6, scope: !1727)
!1840 = !DILocation(line: 1346, column: 8, scope: !1727)
!1841 = !DILocation(line: 1346, column: 14, scope: !1727)
!1842 = !DILocation(line: 1346, column: 20, scope: !1727)
!1843 = !DILocation(line: 1346, column: 6, scope: !1727)
!1844 = !DILocation(line: 1347, column: 9, scope: !1727)
!1845 = !DILocation(line: 1348, column: 9, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1348, column: 2)
!1847 = !DILocation(line: 1348, column: 7, scope: !1846)
!1848 = !DILocation(line: 1348, column: 14, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 1348, column: 2)
!1850 = !DILocation(line: 1348, column: 18, scope: !1849)
!1851 = !DILocation(line: 1348, column: 22, scope: !1849)
!1852 = !DILocation(line: 1348, column: 16, scope: !1849)
!1853 = !DILocation(line: 1348, column: 26, scope: !1849)
!1854 = !DILocation(line: 1348, column: 29, scope: !1849)
!1855 = !DILocation(line: 0, scope: !1849)
!1856 = !DILocation(line: 1348, column: 2, scope: !1846)
!1857 = !DILocation(line: 1349, column: 7, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 1349, column: 7)
!1859 = distinct !DILexicalBlock(scope: !1849, file: !1, line: 1348, column: 39)
!1860 = !DILocation(line: 1349, column: 11, scope: !1858)
!1861 = !DILocation(line: 1349, column: 22, scope: !1858)
!1862 = !DILocation(line: 1349, column: 26, scope: !1858)
!1863 = !DILocation(line: 1349, column: 31, scope: !1858)
!1864 = !DILocation(line: 1349, column: 7, scope: !1859)
!1865 = !DILocation(line: 1350, column: 4, scope: !1858)
!1866 = !DILocation(line: 1350, column: 9, scope: !1858)
!1867 = !DILocation(line: 1350, column: 21, scope: !1858)
!1868 = !DILocation(line: 1350, column: 25, scope: !1858)
!1869 = !DILocation(line: 1352, column: 7, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 1352, column: 7)
!1871 = !DILocation(line: 1352, column: 11, scope: !1870)
!1872 = !DILocation(line: 1352, column: 7, scope: !1859)
!1873 = !DILocalVariable(name: "lines", scope: !1874, file: !1, line: 1353, type: !244)
!1874 = distinct !DILexicalBlock(scope: !1870, file: !1, line: 1352, column: 21)
!1875 = !DILocation(line: 1353, column: 8, scope: !1874)
!1876 = !DILocation(line: 1353, column: 42, scope: !1874)
!1877 = !DILocation(line: 1353, column: 46, scope: !1874)
!1878 = !DILocation(line: 1353, column: 16, scope: !1874)
!1879 = !DILocation(line: 1355, column: 8, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1874, file: !1, line: 1355, column: 8)
!1881 = !DILocation(line: 1355, column: 24, scope: !1880)
!1882 = !DILocation(line: 1355, column: 22, scope: !1880)
!1883 = !DILocation(line: 1355, column: 32, scope: !1880)
!1884 = !DILocation(line: 1355, column: 36, scope: !1880)
!1885 = !DILocation(line: 1355, column: 30, scope: !1880)
!1886 = !DILocation(line: 1355, column: 8, scope: !1874)
!1887 = !DILocation(line: 1356, column: 17, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1880, file: !1, line: 1355, column: 41)
!1889 = !DILocation(line: 1356, column: 21, scope: !1888)
!1890 = !DILocation(line: 1356, column: 27, scope: !1888)
!1891 = !DILocation(line: 1356, column: 25, scope: !1888)
!1892 = !DILocation(line: 1356, column: 15, scope: !1888)
!1893 = !DILocation(line: 1357, column: 5, scope: !1888)
!1894 = !DILocation(line: 1360, column: 22, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1880, file: !1, line: 1359, column: 9)
!1896 = !DILocation(line: 1360, column: 19, scope: !1895)
!1897 = !DILocation(line: 1361, column: 11, scope: !1895)
!1898 = !DILocation(line: 1361, column: 16, scope: !1895)
!1899 = !DILocation(line: 1361, column: 9, scope: !1895)
!1900 = !DILocation(line: 1362, column: 14, scope: !1895)
!1901 = !DILocation(line: 1364, column: 3, scope: !1874)
!1902 = !DILocation(line: 1366, column: 10, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1870, file: !1, line: 1365, column: 8)
!1904 = !DILocation(line: 1366, column: 15, scope: !1903)
!1905 = !DILocation(line: 1366, column: 8, scope: !1903)
!1906 = !DILocation(line: 1367, column: 13, scope: !1903)
!1907 = !DILocation(line: 1370, column: 9, scope: !1859)
!1908 = !DILocation(line: 1371, column: 2, scope: !1859)
!1909 = !DILocation(line: 1348, column: 35, scope: !1849)
!1910 = !DILocation(line: 1348, column: 2, scope: !1849)
!1911 = distinct !{!1911, !1856, !1912}
!1912 = !DILocation(line: 1371, column: 2, scope: !1846)
!1913 = !DILocation(line: 1373, column: 18, scope: !1727)
!1914 = !DILocation(line: 1373, column: 2, scope: !1727)
!1915 = !DILocation(line: 1374, column: 31, scope: !1727)
!1916 = !DILocation(line: 1374, column: 15, scope: !1727)
!1917 = !DILocation(line: 1374, column: 2, scope: !1727)
!1918 = !DILocation(line: 1374, column: 6, scope: !1727)
!1919 = !DILocation(line: 1374, column: 13, scope: !1727)
!1920 = !DILocation(line: 1375, column: 15, scope: !1727)
!1921 = !DILocation(line: 1375, column: 2, scope: !1727)
!1922 = !DILocation(line: 1375, column: 6, scope: !1727)
!1923 = !DILocation(line: 1375, column: 13, scope: !1727)
!1924 = !DILocation(line: 1378, column: 6, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1378, column: 6)
!1926 = !DILocation(line: 1378, column: 10, scope: !1925)
!1927 = !DILocation(line: 1378, column: 6, scope: !1727)
!1928 = !DILocation(line: 1379, column: 7, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 1378, column: 23)
!1930 = !DILocation(line: 1379, column: 20, scope: !1929)
!1931 = !DILocation(line: 1379, column: 18, scope: !1929)
!1932 = !DILocation(line: 1379, column: 5, scope: !1929)
!1933 = !DILocation(line: 1381, column: 3, scope: !1929)
!1934 = !DILocation(line: 1382, column: 12, scope: !1929)
!1935 = !DILocation(line: 1382, column: 23, scope: !1929)
!1936 = !DILocation(line: 1382, column: 34, scope: !1929)
!1937 = !DILocation(line: 1382, column: 45, scope: !1929)
!1938 = !DILocation(line: 1382, column: 52, scope: !1929)
!1939 = !DILocation(line: 1382, column: 50, scope: !1929)
!1940 = !DILocation(line: 1382, column: 62, scope: !1929)
!1941 = !DILocation(line: 1382, column: 66, scope: !1929)
!1942 = !DILocation(line: 1382, column: 71, scope: !1929)
!1943 = !DILocation(line: 1382, column: 3, scope: !1929)
!1944 = !DILocation(line: 1383, column: 2, scope: !1929)
!1945 = !DILocation(line: 1385, column: 3, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 1384, column: 7)
!1947 = !DILocation(line: 1385, column: 7, scope: !1946)
!1948 = !DILocation(line: 1385, column: 19, scope: !1946)
!1949 = !DILocation(line: 1386, column: 7, scope: !1946)
!1950 = !DILocation(line: 1386, column: 5, scope: !1946)
!1951 = !DILocation(line: 1388, column: 6, scope: !1727)
!1952 = !DILocation(line: 1388, column: 10, scope: !1727)
!1953 = !DILocation(line: 1388, column: 17, scope: !1727)
!1954 = !DILocation(line: 1388, column: 21, scope: !1727)
!1955 = !DILocation(line: 1388, column: 15, scope: !1727)
!1956 = !DILocation(line: 1388, column: 4, scope: !1727)
!1957 = !DILocation(line: 1389, column: 9, scope: !1727)
!1958 = !DILocation(line: 1389, column: 13, scope: !1727)
!1959 = !DILocation(line: 1389, column: 20, scope: !1727)
!1960 = !DILocation(line: 1389, column: 18, scope: !1727)
!1961 = !DILocation(line: 1389, column: 7, scope: !1727)
!1962 = !DILocation(line: 1392, column: 14, scope: !1727)
!1963 = !DILocation(line: 1392, column: 18, scope: !1727)
!1964 = !DILocation(line: 1392, column: 2, scope: !1727)
!1965 = !DILocation(line: 1395, column: 2, scope: !1727)
!1966 = !DILocation(line: 1397, column: 9, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1397, column: 2)
!1968 = !DILocation(line: 1397, column: 7, scope: !1967)
!1969 = !DILocation(line: 1397, column: 14, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1967, file: !1, line: 1397, column: 2)
!1971 = !DILocation(line: 1397, column: 16, scope: !1970)
!1972 = !DILocation(line: 1397, column: 20, scope: !1970)
!1973 = !DILocation(line: 1397, column: 23, scope: !1970)
!1974 = !DILocation(line: 1397, column: 27, scope: !1970)
!1975 = !DILocation(line: 1397, column: 31, scope: !1970)
!1976 = !DILocation(line: 1397, column: 25, scope: !1970)
!1977 = !DILocation(line: 1397, column: 41, scope: !1970)
!1978 = !DILocation(line: 1397, column: 44, scope: !1970)
!1979 = !DILocation(line: 0, scope: !1970)
!1980 = !DILocation(line: 1397, column: 2, scope: !1967)
!1981 = !DILocation(line: 1398, column: 7, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 1398, column: 7)
!1983 = distinct !DILexicalBlock(scope: !1970, file: !1, line: 1397, column: 71)
!1984 = !DILocation(line: 1398, column: 11, scope: !1982)
!1985 = !DILocation(line: 1398, column: 22, scope: !1982)
!1986 = !DILocation(line: 1398, column: 26, scope: !1982)
!1987 = !DILocation(line: 1398, column: 31, scope: !1982)
!1988 = !DILocation(line: 1398, column: 7, scope: !1983)
!1989 = !DILocation(line: 1399, column: 4, scope: !1982)
!1990 = !DILocation(line: 1399, column: 9, scope: !1982)
!1991 = !DILocation(line: 1399, column: 21, scope: !1982)
!1992 = !DILocation(line: 1399, column: 25, scope: !1982)
!1993 = !DILocation(line: 1401, column: 7, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 1401, column: 7)
!1995 = !DILocation(line: 1401, column: 11, scope: !1994)
!1996 = !DILocation(line: 1401, column: 23, scope: !1994)
!1997 = !DILocation(line: 1401, column: 27, scope: !1994)
!1998 = !DILocation(line: 1401, column: 7, scope: !1983)
!1999 = !DILocation(line: 1403, column: 8, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !1, line: 1403, column: 8)
!2001 = distinct !DILexicalBlock(scope: !1994, file: !1, line: 1401, column: 38)
!2002 = !DILocation(line: 1403, column: 15, scope: !2000)
!2003 = !DILocation(line: 1403, column: 21, scope: !2000)
!2004 = !DILocation(line: 1403, column: 12, scope: !2000)
!2005 = !DILocation(line: 1403, column: 8, scope: !2001)
!2006 = !DILocation(line: 1404, column: 5, scope: !2000)
!2007 = !DILocation(line: 1406, column: 5, scope: !2000)
!2008 = !DILocation(line: 1408, column: 17, scope: !2001)
!2009 = !DILocation(line: 1408, column: 48, scope: !2001)
!2010 = !DILocation(line: 1408, column: 52, scope: !2001)
!2011 = !DILocation(line: 1408, column: 65, scope: !2001)
!2012 = !DILocation(line: 1408, column: 69, scope: !2001)
!2013 = !DILocation(line: 1408, column: 67, scope: !2001)
!2014 = !DILocation(line: 1408, column: 79, scope: !2001)
!2015 = !DILocation(line: 1408, column: 4, scope: !2001)
!2016 = !DILocation(line: 1410, column: 19, scope: !2001)
!2017 = !DILocation(line: 1410, column: 23, scope: !2001)
!2018 = !DILocation(line: 1410, column: 34, scope: !2001)
!2019 = !DILocation(line: 1410, column: 39, scope: !2001)
!2020 = !DILocation(line: 1410, column: 42, scope: !2001)
!2021 = !DILocation(line: 1410, column: 4, scope: !2001)
!2022 = !DILocation(line: 1412, column: 4, scope: !2001)
!2023 = !DILocation(line: 1413, column: 3, scope: !2001)
!2024 = !DILocation(line: 1415, column: 7, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 1415, column: 7)
!2026 = !DILocation(line: 1415, column: 11, scope: !2025)
!2027 = !DILocation(line: 1415, column: 7, scope: !1983)
!2028 = !DILocalVariable(name: "lines", scope: !2029, file: !1, line: 1417, type: !244)
!2029 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 1415, column: 21)
!2030 = !DILocation(line: 1417, column: 8, scope: !2029)
!2031 = !DILocation(line: 1417, column: 34, scope: !2029)
!2032 = !DILocation(line: 1417, column: 38, scope: !2029)
!2033 = !DILocation(line: 1417, column: 43, scope: !2029)
!2034 = !DILocation(line: 1417, column: 49, scope: !2029)
!2035 = !DILocation(line: 1417, column: 52, scope: !2029)
!2036 = !DILocation(line: 1417, column: 55, scope: !2029)
!2037 = !DILocation(line: 1417, column: 62, scope: !2029)
!2038 = !DILocation(line: 1417, column: 60, scope: !2029)
!2039 = !DILocation(line: 1417, column: 65, scope: !2029)
!2040 = !DILocation(line: 1417, column: 70, scope: !2029)
!2041 = !DILocation(line: 1417, column: 78, scope: !2029)
!2042 = !DILocation(line: 1417, column: 16, scope: !2029)
!2043 = !DILocation(line: 1418, column: 9, scope: !2029)
!2044 = !DILocation(line: 1418, column: 18, scope: !2029)
!2045 = !DILocation(line: 1418, column: 22, scope: !2029)
!2046 = !DILocation(line: 1418, column: 36, scope: !2029)
!2047 = !DILocation(line: 1418, column: 34, scope: !2029)
!2048 = !DILocation(line: 1418, column: 15, scope: !2029)
!2049 = !DILocation(line: 1418, column: 6, scope: !2029)
!2050 = !DILocation(line: 1419, column: 3, scope: !2029)
!2051 = !DILocation(line: 1422, column: 14, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 1420, column: 8)
!2053 = !DILocation(line: 1422, column: 18, scope: !2052)
!2054 = !DILocation(line: 1422, column: 23, scope: !2052)
!2055 = !DILocation(line: 1422, column: 29, scope: !2052)
!2056 = !DILocation(line: 1422, column: 33, scope: !2052)
!2057 = !DILocation(line: 1422, column: 39, scope: !2052)
!2058 = !DILocation(line: 1422, column: 43, scope: !2052)
!2059 = !DILocation(line: 1422, column: 50, scope: !2052)
!2060 = !DILocation(line: 1422, column: 54, scope: !2052)
!2061 = !DILocation(line: 1422, column: 48, scope: !2052)
!2062 = !DILocation(line: 1422, column: 62, scope: !2052)
!2063 = !DILocation(line: 1422, column: 65, scope: !2052)
!2064 = !DILocation(line: 1422, column: 68, scope: !2052)
!2065 = !DILocation(line: 1422, column: 73, scope: !2052)
!2066 = !DILocation(line: 1422, column: 4, scope: !2052)
!2067 = !DILocation(line: 1423, column: 9, scope: !2052)
!2068 = !DILocation(line: 1423, column: 13, scope: !2052)
!2069 = !DILocation(line: 1423, column: 27, scope: !2052)
!2070 = !DILocation(line: 1423, column: 25, scope: !2052)
!2071 = !DILocation(line: 1423, column: 6, scope: !2052)
!2072 = !DILocation(line: 1426, column: 13, scope: !1983)
!2073 = !DILocation(line: 1427, column: 2, scope: !1983)
!2074 = !DILocation(line: 1397, column: 50, scope: !1970)
!2075 = !DILocation(line: 1397, column: 60, scope: !1970)
!2076 = !DILocation(line: 1397, column: 65, scope: !1970)
!2077 = !DILocation(line: 1397, column: 58, scope: !1970)
!2078 = !DILocation(line: 1397, column: 2, scope: !1970)
!2079 = distinct !{!2079, !1980, !2080}
!2080 = !DILocation(line: 1427, column: 2, scope: !1967)
!2081 = !DILocation(line: 1429, column: 6, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 1429, column: 6)
!2083 = !DILocation(line: 1429, column: 10, scope: !2082)
!2084 = !DILocation(line: 1429, column: 16, scope: !2082)
!2085 = !DILocation(line: 1429, column: 6, scope: !1727)
!2086 = !DILocation(line: 1430, column: 3, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !2082, file: !1, line: 1429, column: 34)
!2088 = !DILocation(line: 1432, column: 21, scope: !2087)
!2089 = !DILocation(line: 1432, column: 25, scope: !2087)
!2090 = !DILocation(line: 1432, column: 29, scope: !2087)
!2091 = !DILocation(line: 1432, column: 39, scope: !2087)
!2092 = !DILocation(line: 1432, column: 43, scope: !2087)
!2093 = !DILocation(line: 1432, column: 59, scope: !2087)
!2094 = !DILocation(line: 1432, column: 63, scope: !2087)
!2095 = !DILocation(line: 1432, column: 57, scope: !2087)
!2096 = !DILocation(line: 1432, column: 36, scope: !2087)
!2097 = !DILocation(line: 1432, column: 23, scope: !2087)
!2098 = !DILocation(line: 1432, column: 19, scope: !2087)
!2099 = !DILocation(line: 1434, column: 7, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 1434, column: 7)
!2101 = !DILocation(line: 1434, column: 26, scope: !2100)
!2102 = !DILocation(line: 1434, column: 23, scope: !2100)
!2103 = !DILocation(line: 1434, column: 7, scope: !2087)
!2104 = !DILocation(line: 1435, column: 4, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2100, file: !1, line: 1434, column: 29)
!2106 = !DILocation(line: 1436, column: 15, scope: !2105)
!2107 = !DILocation(line: 1436, column: 4, scope: !2105)
!2108 = !DILocation(line: 1437, column: 15, scope: !2105)
!2109 = !DILocation(line: 1437, column: 32, scope: !2105)
!2110 = !DILocation(line: 1437, column: 36, scope: !2105)
!2111 = !DILocation(line: 1437, column: 41, scope: !2105)
!2112 = !DILocation(line: 1437, column: 4, scope: !2105)
!2113 = !DILocation(line: 1438, column: 4, scope: !2105)
!2114 = !DILocation(line: 1439, column: 3, scope: !2105)
!2115 = !DILocation(line: 1440, column: 2, scope: !2087)
!2116 = !DILocation(line: 1443, column: 16, scope: !1727)
!2117 = !DILocation(line: 1443, column: 20, scope: !1727)
!2118 = !DILocation(line: 1443, column: 2, scope: !1727)
!2119 = !DILocation(line: 1444, column: 2, scope: !1727)
!2120 = !DILocation(line: 1445, column: 18, scope: !1727)
!2121 = !DILocation(line: 1445, column: 2, scope: !1727)
!2122 = !DILocation(line: 1446, column: 21, scope: !1727)
!2123 = !DILocation(line: 1446, column: 25, scope: !1727)
!2124 = !DILocation(line: 1446, column: 2, scope: !1727)
!2125 = !DILocation(line: 1447, column: 23, scope: !1727)
!2126 = !DILocation(line: 1447, column: 27, scope: !1727)
!2127 = !DILocation(line: 1447, column: 2, scope: !1727)
!2128 = !DILocation(line: 1449, column: 16, scope: !1727)
!2129 = !DILocation(line: 1449, column: 2, scope: !1727)
!2130 = !DILocation(line: 1450, column: 1, scope: !1727)
!2131 = distinct !DISubprogram(name: "calc_text_rcts", scope: !1, file: !1, line: 772, type: !2132, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !277, !439, !2134, !2134}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!2135 = !DILocalVariable(name: "st", arg: 1, scope: !2131, file: !1, line: 772, type: !277)
!2136 = !DILocation(line: 772, column: 39, scope: !2131)
!2137 = !DILocalVariable(name: "ar", arg: 2, scope: !2131, file: !1, line: 772, type: !439)
!2138 = !DILocation(line: 772, column: 52, scope: !2131)
!2139 = !DILocalVariable(name: "scroll", arg: 3, scope: !2131, file: !1, line: 772, type: !2134)
!2140 = !DILocation(line: 772, column: 62, scope: !2131)
!2141 = !DILocalVariable(name: "back", arg: 4, scope: !2131, file: !1, line: 772, type: !2134)
!2142 = !DILocation(line: 772, column: 76, scope: !2131)
!2143 = !DILocalVariable(name: "lhlstart", scope: !2131, file: !1, line: 774, type: !244)
!2144 = !DILocation(line: 774, column: 6, scope: !2131)
!2145 = !DILocalVariable(name: "lhlend", scope: !2131, file: !1, line: 774, type: !244)
!2146 = !DILocation(line: 774, column: 16, scope: !2131)
!2147 = !DILocalVariable(name: "ltexth", scope: !2131, file: !1, line: 774, type: !244)
!2148 = !DILocation(line: 774, column: 24, scope: !2131)
!2149 = !DILocalVariable(name: "sell_off", scope: !2131, file: !1, line: 774, type: !244)
!2150 = !DILocation(line: 774, column: 32, scope: !2131)
!2151 = !DILocalVariable(name: "curl_off", scope: !2131, file: !1, line: 774, type: !244)
!2152 = !DILocation(line: 774, column: 42, scope: !2131)
!2153 = !DILocalVariable(name: "barheight", scope: !2131, file: !1, line: 775, type: !259)
!2154 = !DILocation(line: 775, column: 8, scope: !2131)
!2155 = !DILocalVariable(name: "barstart", scope: !2131, file: !1, line: 775, type: !259)
!2156 = !DILocation(line: 775, column: 19, scope: !2131)
!2157 = !DILocalVariable(name: "hlstart", scope: !2131, file: !1, line: 775, type: !259)
!2158 = !DILocation(line: 775, column: 29, scope: !2131)
!2159 = !DILocalVariable(name: "hlend", scope: !2131, file: !1, line: 775, type: !259)
!2160 = !DILocation(line: 775, column: 38, scope: !2131)
!2161 = !DILocalVariable(name: "blank_lines", scope: !2131, file: !1, line: 775, type: !259)
!2162 = !DILocation(line: 775, column: 45, scope: !2131)
!2163 = !DILocalVariable(name: "pix_available", scope: !2131, file: !1, line: 776, type: !259)
!2164 = !DILocation(line: 776, column: 8, scope: !2131)
!2165 = !DILocalVariable(name: "pix_top_margin", scope: !2131, file: !1, line: 776, type: !259)
!2166 = !DILocation(line: 776, column: 23, scope: !2131)
!2167 = !DILocalVariable(name: "pix_bottom_margin", scope: !2131, file: !1, line: 776, type: !259)
!2168 = !DILocation(line: 776, column: 39, scope: !2131)
!2169 = !DILocalVariable(name: "pix_bardiff", scope: !2131, file: !1, line: 776, type: !259)
!2170 = !DILocation(line: 776, column: 58, scope: !2131)
!2171 = !DILocation(line: 778, column: 17, scope: !2131)
!2172 = !DILocation(line: 779, column: 20, scope: !2131)
!2173 = !DILocation(line: 780, column: 18, scope: !2131)
!2174 = !DILocation(line: 780, column: 22, scope: !2131)
!2175 = !DILocation(line: 780, column: 29, scope: !2131)
!2176 = !DILocation(line: 780, column: 27, scope: !2131)
!2177 = !DILocation(line: 780, column: 46, scope: !2131)
!2178 = !DILocation(line: 780, column: 44, scope: !2131)
!2179 = !DILocation(line: 780, column: 16, scope: !2131)
!2180 = !DILocation(line: 781, column: 32, scope: !2131)
!2181 = !DILocation(line: 781, column: 36, scope: !2131)
!2182 = !DILocation(line: 781, column: 11, scope: !2131)
!2183 = !DILocation(line: 781, column: 9, scope: !2131)
!2184 = !DILocation(line: 782, column: 16, scope: !2131)
!2185 = !DILocation(line: 782, column: 20, scope: !2131)
!2186 = !DILocation(line: 782, column: 30, scope: !2131)
!2187 = !DILocation(line: 782, column: 14, scope: !2131)
!2188 = !DILocation(line: 785, column: 15, scope: !2131)
!2189 = !DILocation(line: 785, column: 19, scope: !2131)
!2190 = !DILocation(line: 785, column: 27, scope: !2131)
!2191 = !DILocation(line: 785, column: 44, scope: !2131)
!2192 = !DILocation(line: 785, column: 24, scope: !2131)
!2193 = !DILocation(line: 785, column: 2, scope: !2131)
!2194 = !DILocation(line: 785, column: 8, scope: !2131)
!2195 = !DILocation(line: 785, column: 13, scope: !2131)
!2196 = !DILocation(line: 786, column: 15, scope: !2131)
!2197 = !DILocation(line: 786, column: 19, scope: !2131)
!2198 = !DILocation(line: 786, column: 2, scope: !2131)
!2199 = !DILocation(line: 786, column: 8, scope: !2131)
!2200 = !DILocation(line: 786, column: 13, scope: !2131)
!2201 = !DILocation(line: 787, column: 2, scope: !2131)
!2202 = !DILocation(line: 787, column: 8, scope: !2131)
!2203 = !DILocation(line: 787, column: 13, scope: !2131)
!2204 = !DILocation(line: 788, column: 15, scope: !2131)
!2205 = !DILocation(line: 788, column: 19, scope: !2131)
!2206 = !DILocation(line: 788, column: 2, scope: !2131)
!2207 = !DILocation(line: 788, column: 8, scope: !2131)
!2208 = !DILocation(line: 788, column: 13, scope: !2131)
!2209 = !DILocation(line: 790, column: 17, scope: !2131)
!2210 = !DILocation(line: 790, column: 21, scope: !2131)
!2211 = !DILocation(line: 790, column: 28, scope: !2131)
!2212 = !DILocation(line: 790, column: 26, scope: !2131)
!2213 = !DILocation(line: 790, column: 2, scope: !2131)
!2214 = !DILocation(line: 790, column: 10, scope: !2131)
!2215 = !DILocation(line: 790, column: 15, scope: !2131)
!2216 = !DILocation(line: 791, column: 17, scope: !2131)
!2217 = !DILocation(line: 791, column: 21, scope: !2131)
!2218 = !DILocation(line: 791, column: 26, scope: !2131)
!2219 = !DILocation(line: 791, column: 2, scope: !2131)
!2220 = !DILocation(line: 791, column: 10, scope: !2131)
!2221 = !DILocation(line: 791, column: 15, scope: !2131)
!2222 = !DILocation(line: 792, column: 2, scope: !2131)
!2223 = !DILocation(line: 792, column: 10, scope: !2131)
!2224 = !DILocation(line: 792, column: 15, scope: !2131)
!2225 = !DILocation(line: 793, column: 21, scope: !2131)
!2226 = !DILocation(line: 793, column: 19, scope: !2131)
!2227 = !DILocation(line: 793, column: 2, scope: !2131)
!2228 = !DILocation(line: 793, column: 10, scope: !2131)
!2229 = !DILocation(line: 793, column: 15, scope: !2131)
!2230 = !DILocation(line: 796, column: 6, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 796, column: 6)
!2232 = !DILocation(line: 796, column: 15, scope: !2231)
!2233 = !DILocation(line: 796, column: 13, scope: !2231)
!2234 = !DILocation(line: 796, column: 29, scope: !2231)
!2235 = !DILocation(line: 796, column: 33, scope: !2231)
!2236 = !DILocation(line: 796, column: 39, scope: !2231)
!2237 = !DILocation(line: 796, column: 43, scope: !2231)
!2238 = !DILocation(line: 796, column: 37, scope: !2231)
!2239 = !DILocation(line: 796, column: 27, scope: !2231)
!2240 = !DILocation(line: 796, column: 6, scope: !2131)
!2241 = !DILocation(line: 797, column: 17, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 796, column: 54)
!2243 = !DILocation(line: 797, column: 21, scope: !2242)
!2244 = !DILocation(line: 797, column: 27, scope: !2242)
!2245 = !DILocation(line: 797, column: 31, scope: !2242)
!2246 = !DILocation(line: 797, column: 25, scope: !2242)
!2247 = !DILocation(line: 797, column: 43, scope: !2242)
!2248 = !DILocation(line: 797, column: 41, scope: !2242)
!2249 = !DILocation(line: 797, column: 15, scope: !2242)
!2250 = !DILocation(line: 798, column: 2, scope: !2242)
!2251 = !DILocation(line: 800, column: 12, scope: !2131)
!2252 = !DILocation(line: 800, column: 9, scope: !2131)
!2253 = !DILocation(line: 802, column: 15, scope: !2131)
!2254 = !DILocation(line: 802, column: 22, scope: !2131)
!2255 = !DILocation(line: 802, column: 14, scope: !2131)
!2256 = !DILocation(line: 802, column: 30, scope: !2131)
!2257 = !DILocation(line: 802, column: 34, scope: !2131)
!2258 = !DILocation(line: 802, column: 46, scope: !2131)
!2259 = !DILocation(line: 802, column: 44, scope: !2131)
!2260 = !DILocation(line: 802, column: 63, scope: !2131)
!2261 = !DILocation(line: 802, column: 61, scope: !2131)
!2262 = !DILocation(line: 802, column: 12, scope: !2131)
!2263 = !DILocation(line: 803, column: 14, scope: !2131)
!2264 = !DILocation(line: 804, column: 6, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 804, column: 6)
!2266 = !DILocation(line: 804, column: 16, scope: !2265)
!2267 = !DILocation(line: 804, column: 6, scope: !2131)
!2268 = !DILocation(line: 805, column: 22, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2265, file: !1, line: 804, column: 22)
!2270 = !DILocation(line: 805, column: 20, scope: !2269)
!2271 = !DILocation(line: 805, column: 17, scope: !2269)
!2272 = !DILocation(line: 805, column: 15, scope: !2269)
!2273 = !DILocation(line: 806, column: 13, scope: !2269)
!2274 = !DILocation(line: 807, column: 2, scope: !2269)
!2275 = !DILocation(line: 808, column: 14, scope: !2131)
!2276 = !DILocation(line: 808, column: 21, scope: !2131)
!2277 = !DILocation(line: 808, column: 13, scope: !2131)
!2278 = !DILocation(line: 808, column: 30, scope: !2131)
!2279 = !DILocation(line: 808, column: 46, scope: !2131)
!2280 = !DILocation(line: 808, column: 44, scope: !2131)
!2281 = !DILocation(line: 808, column: 61, scope: !2131)
!2282 = !DILocation(line: 808, column: 65, scope: !2131)
!2283 = !DILocation(line: 808, column: 59, scope: !2131)
!2284 = !DILocation(line: 808, column: 72, scope: !2131)
!2285 = !DILocation(line: 808, column: 70, scope: !2131)
!2286 = !DILocation(line: 808, column: 11, scope: !2131)
!2287 = !DILocation(line: 810, column: 2, scope: !2131)
!2288 = !DILocation(line: 810, column: 6, scope: !2131)
!2289 = !DILocation(line: 810, column: 16, scope: !2131)
!2290 = !DILocation(line: 810, column: 15, scope: !2131)
!2291 = !DILocation(line: 811, column: 21, scope: !2131)
!2292 = !DILocation(line: 811, column: 2, scope: !2131)
!2293 = !DILocation(line: 811, column: 6, scope: !2131)
!2294 = !DILocation(line: 811, column: 13, scope: !2131)
!2295 = !DILocation(line: 811, column: 18, scope: !2131)
!2296 = !DILocation(line: 812, column: 20, scope: !2131)
!2297 = !DILocation(line: 812, column: 24, scope: !2131)
!2298 = !DILocation(line: 812, column: 31, scope: !2131)
!2299 = !DILocation(line: 812, column: 38, scope: !2131)
!2300 = !DILocation(line: 812, column: 36, scope: !2131)
!2301 = !DILocation(line: 812, column: 2, scope: !2131)
!2302 = !DILocation(line: 812, column: 6, scope: !2131)
!2303 = !DILocation(line: 812, column: 13, scope: !2131)
!2304 = !DILocation(line: 812, column: 18, scope: !2131)
!2305 = !DILocation(line: 814, column: 2, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !1, line: 814, column: 2)
!2307 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 814, column: 2)
!2308 = !DILocation(line: 814, column: 2, scope: !2307)
!2309 = !DILocation(line: 814, column: 2, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2306, file: !1, line: 814, column: 2)
!2311 = !DILocation(line: 815, column: 2, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2313, file: !1, line: 815, column: 2)
!2313 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 815, column: 2)
!2314 = !DILocation(line: 815, column: 2, scope: !2313)
!2315 = !DILocation(line: 815, column: 2, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2312, file: !1, line: 815, column: 2)
!2317 = !DILocation(line: 817, column: 22, scope: !2131)
!2318 = !DILocation(line: 817, column: 36, scope: !2131)
!2319 = !DILocation(line: 817, column: 21, scope: !2131)
!2320 = !DILocation(line: 817, column: 51, scope: !2131)
!2321 = !DILocation(line: 817, column: 43, scope: !2131)
!2322 = !DILocation(line: 817, column: 60, scope: !2131)
!2323 = !DILocation(line: 817, column: 58, scope: !2131)
!2324 = !DILocation(line: 817, column: 2, scope: !2131)
!2325 = !DILocation(line: 817, column: 6, scope: !2131)
!2326 = !DILocation(line: 817, column: 19, scope: !2131)
!2327 = !DILocation(line: 818, column: 6, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 818, column: 6)
!2329 = !DILocation(line: 818, column: 10, scope: !2328)
!2330 = !DILocation(line: 818, column: 23, scope: !2328)
!2331 = !DILocation(line: 818, column: 6, scope: !2131)
!2332 = !DILocation(line: 818, column: 31, scope: !2328)
!2333 = !DILocation(line: 818, column: 35, scope: !2328)
!2334 = !DILocation(line: 818, column: 48, scope: !2328)
!2335 = !DILocation(line: 820, column: 32, scope: !2131)
!2336 = !DILocation(line: 820, column: 36, scope: !2131)
!2337 = !DILocation(line: 820, column: 40, scope: !2131)
!2338 = !DILocation(line: 820, column: 44, scope: !2131)
!2339 = !DILocation(line: 820, column: 50, scope: !2131)
!2340 = !DILocation(line: 820, column: 56, scope: !2131)
!2341 = !DILocation(line: 820, column: 63, scope: !2131)
!2342 = !DILocation(line: 820, column: 67, scope: !2131)
!2343 = !DILocation(line: 820, column: 73, scope: !2131)
!2344 = !DILocation(line: 820, column: 13, scope: !2131)
!2345 = !DILocation(line: 820, column: 11, scope: !2131)
!2346 = !DILocation(line: 821, column: 32, scope: !2131)
!2347 = !DILocation(line: 821, column: 36, scope: !2131)
!2348 = !DILocation(line: 821, column: 40, scope: !2131)
!2349 = !DILocation(line: 821, column: 44, scope: !2131)
!2350 = !DILocation(line: 821, column: 50, scope: !2131)
!2351 = !DILocation(line: 821, column: 56, scope: !2131)
!2352 = !DILocation(line: 821, column: 63, scope: !2131)
!2353 = !DILocation(line: 821, column: 67, scope: !2131)
!2354 = !DILocation(line: 821, column: 73, scope: !2131)
!2355 = !DILocation(line: 821, column: 13, scope: !2131)
!2356 = !DILocation(line: 821, column: 11, scope: !2131)
!2357 = !DILocation(line: 822, column: 13, scope: !2131)
!2358 = !DILocation(line: 822, column: 11, scope: !2131)
!2359 = !DILocation(line: 823, column: 11, scope: !2131)
!2360 = !DILocation(line: 823, column: 9, scope: !2131)
!2361 = !DILocation(line: 825, column: 6, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 825, column: 6)
!2363 = !DILocation(line: 825, column: 13, scope: !2362)
!2364 = !DILocation(line: 825, column: 6, scope: !2131)
!2365 = !DILocation(line: 826, column: 14, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2362, file: !1, line: 825, column: 18)
!2367 = !DILocation(line: 826, column: 25, scope: !2366)
!2368 = !DILocation(line: 826, column: 23, scope: !2366)
!2369 = !DILocation(line: 826, column: 42, scope: !2366)
!2370 = !DILocation(line: 826, column: 40, scope: !2366)
!2371 = !DILocation(line: 826, column: 13, scope: !2366)
!2372 = !DILocation(line: 826, column: 11, scope: !2366)
!2373 = !DILocation(line: 827, column: 12, scope: !2366)
!2374 = !DILocation(line: 827, column: 21, scope: !2366)
!2375 = !DILocation(line: 827, column: 19, scope: !2366)
!2376 = !DILocation(line: 827, column: 38, scope: !2366)
!2377 = !DILocation(line: 827, column: 36, scope: !2366)
!2378 = !DILocation(line: 827, column: 11, scope: !2366)
!2379 = !DILocation(line: 827, column: 9, scope: !2366)
!2380 = !DILocation(line: 830, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2366, file: !1, line: 830, column: 7)
!2382 = !DILocation(line: 830, column: 19, scope: !2381)
!2383 = !DILocation(line: 830, column: 7, scope: !2366)
!2384 = !DILocation(line: 832, column: 8, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 832, column: 8)
!2386 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 830, column: 24)
!2387 = !DILocation(line: 832, column: 12, scope: !2385)
!2388 = !DILocation(line: 832, column: 22, scope: !2385)
!2389 = !DILocation(line: 832, column: 25, scope: !2385)
!2390 = !DILocation(line: 832, column: 37, scope: !2385)
!2391 = !DILocation(line: 832, column: 41, scope: !2385)
!2392 = !DILocation(line: 832, column: 34, scope: !2385)
!2393 = !DILocation(line: 832, column: 45, scope: !2385)
!2394 = !DILocation(line: 832, column: 48, scope: !2385)
!2395 = !DILocation(line: 832, column: 60, scope: !2385)
!2396 = !DILocation(line: 832, column: 64, scope: !2385)
!2397 = !DILocation(line: 832, column: 70, scope: !2385)
!2398 = !DILocation(line: 832, column: 74, scope: !2385)
!2399 = !DILocation(line: 832, column: 68, scope: !2385)
!2400 = !DILocation(line: 832, column: 57, scope: !2385)
!2401 = !DILocation(line: 832, column: 8, scope: !2386)
!2402 = !DILocation(line: 834, column: 20, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2385, file: !1, line: 832, column: 85)
!2404 = !DILocation(line: 834, column: 36, scope: !2403)
!2405 = !DILocation(line: 834, column: 34, scope: !2403)
!2406 = !DILocation(line: 834, column: 51, scope: !2403)
!2407 = !DILocation(line: 834, column: 49, scope: !2403)
!2408 = !DILocation(line: 834, column: 63, scope: !2403)
!2409 = !DILocation(line: 834, column: 61, scope: !2403)
!2410 = !DILocation(line: 834, column: 74, scope: !2403)
!2411 = !DILocation(line: 834, column: 89, scope: !2403)
!2412 = !DILocation(line: 834, column: 100, scope: !2403)
!2413 = !DILocation(line: 834, column: 104, scope: !2403)
!2414 = !DILocation(line: 834, column: 98, scope: !2403)
!2415 = !DILocation(line: 834, column: 86, scope: !2403)
!2416 = !DILocation(line: 834, column: 111, scope: !2403)
!2417 = !DILocation(line: 834, column: 115, scope: !2403)
!2418 = !DILocation(line: 834, column: 109, scope: !2403)
!2419 = !DILocation(line: 834, column: 71, scope: !2403)
!2420 = !DILocation(line: 834, column: 15, scope: !2403)
!2421 = !DILocation(line: 834, column: 13, scope: !2403)
!2422 = !DILocation(line: 835, column: 4, scope: !2403)
!2423 = !DILocation(line: 836, column: 13, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2385, file: !1, line: 836, column: 13)
!2425 = !DILocation(line: 836, column: 24, scope: !2424)
!2426 = !DILocation(line: 836, column: 28, scope: !2424)
!2427 = !DILocation(line: 836, column: 34, scope: !2424)
!2428 = !DILocation(line: 836, column: 38, scope: !2424)
!2429 = !DILocation(line: 836, column: 32, scope: !2424)
!2430 = !DILocation(line: 836, column: 22, scope: !2424)
!2431 = !DILocation(line: 836, column: 48, scope: !2424)
!2432 = !DILocation(line: 836, column: 51, scope: !2424)
!2433 = !DILocation(line: 836, column: 61, scope: !2424)
!2434 = !DILocation(line: 836, column: 72, scope: !2424)
!2435 = !DILocation(line: 836, column: 70, scope: !2424)
!2436 = !DILocation(line: 836, column: 59, scope: !2424)
!2437 = !DILocation(line: 836, column: 82, scope: !2424)
!2438 = !DILocation(line: 836, column: 85, scope: !2424)
!2439 = !DILocation(line: 836, column: 95, scope: !2424)
!2440 = !DILocation(line: 836, column: 93, scope: !2424)
!2441 = !DILocation(line: 836, column: 13, scope: !2385)
!2442 = !DILocation(line: 838, column: 15, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2424, file: !1, line: 836, column: 105)
!2444 = !DILocation(line: 838, column: 26, scope: !2443)
!2445 = !DILocation(line: 838, column: 24, scope: !2443)
!2446 = !DILocation(line: 838, column: 13, scope: !2443)
!2447 = !DILocation(line: 839, column: 4, scope: !2443)
!2448 = !DILocation(line: 840, column: 13, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2424, file: !1, line: 840, column: 13)
!2450 = !DILocation(line: 840, column: 22, scope: !2449)
!2451 = !DILocation(line: 840, column: 26, scope: !2449)
!2452 = !DILocation(line: 840, column: 20, scope: !2449)
!2453 = !DILocation(line: 840, column: 30, scope: !2449)
!2454 = !DILocation(line: 840, column: 33, scope: !2449)
!2455 = !DILocation(line: 840, column: 44, scope: !2449)
!2456 = !DILocation(line: 840, column: 48, scope: !2449)
!2457 = !DILocation(line: 840, column: 42, scope: !2449)
!2458 = !DILocation(line: 840, column: 52, scope: !2449)
!2459 = !DILocation(line: 840, column: 55, scope: !2449)
!2460 = !DILocation(line: 840, column: 65, scope: !2449)
!2461 = !DILocation(line: 840, column: 63, scope: !2449)
!2462 = !DILocation(line: 840, column: 13, scope: !2424)
!2463 = !DILocation(line: 842, column: 15, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2449, file: !1, line: 840, column: 75)
!2465 = !DILocation(line: 842, column: 13, scope: !2464)
!2466 = !DILocation(line: 843, column: 4, scope: !2464)
!2467 = !DILocation(line: 845, column: 8, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 845, column: 8)
!2469 = !DILocation(line: 845, column: 17, scope: !2468)
!2470 = !DILocation(line: 845, column: 14, scope: !2468)
!2471 = !DILocation(line: 845, column: 8, scope: !2386)
!2472 = !DILocation(line: 846, column: 13, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2468, file: !1, line: 845, column: 26)
!2474 = !DILocation(line: 846, column: 21, scope: !2473)
!2475 = !DILocation(line: 846, column: 11, scope: !2473)
!2476 = !DILocation(line: 847, column: 4, scope: !2473)
!2477 = !DILocation(line: 850, column: 8, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 850, column: 8)
!2479 = !DILocation(line: 850, column: 12, scope: !2478)
!2480 = !DILocation(line: 850, column: 22, scope: !2478)
!2481 = !DILocation(line: 850, column: 25, scope: !2478)
!2482 = !DILocation(line: 850, column: 35, scope: !2478)
!2483 = !DILocation(line: 850, column: 39, scope: !2478)
!2484 = !DILocation(line: 850, column: 32, scope: !2478)
!2485 = !DILocation(line: 850, column: 43, scope: !2478)
!2486 = !DILocation(line: 850, column: 46, scope: !2478)
!2487 = !DILocation(line: 850, column: 56, scope: !2478)
!2488 = !DILocation(line: 850, column: 60, scope: !2478)
!2489 = !DILocation(line: 850, column: 66, scope: !2478)
!2490 = !DILocation(line: 850, column: 70, scope: !2478)
!2491 = !DILocation(line: 850, column: 64, scope: !2478)
!2492 = !DILocation(line: 850, column: 53, scope: !2478)
!2493 = !DILocation(line: 850, column: 8, scope: !2386)
!2494 = !DILocation(line: 852, column: 16, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 850, column: 81)
!2496 = !DILocation(line: 852, column: 32, scope: !2495)
!2497 = !DILocation(line: 852, column: 30, scope: !2495)
!2498 = !DILocation(line: 852, column: 47, scope: !2495)
!2499 = !DILocation(line: 852, column: 45, scope: !2495)
!2500 = !DILocation(line: 852, column: 57, scope: !2495)
!2501 = !DILocation(line: 852, column: 55, scope: !2495)
!2502 = !DILocation(line: 852, column: 68, scope: !2495)
!2503 = !DILocation(line: 852, column: 83, scope: !2495)
!2504 = !DILocation(line: 852, column: 92, scope: !2495)
!2505 = !DILocation(line: 852, column: 96, scope: !2495)
!2506 = !DILocation(line: 852, column: 90, scope: !2495)
!2507 = !DILocation(line: 852, column: 80, scope: !2495)
!2508 = !DILocation(line: 852, column: 103, scope: !2495)
!2509 = !DILocation(line: 852, column: 107, scope: !2495)
!2510 = !DILocation(line: 852, column: 101, scope: !2495)
!2511 = !DILocation(line: 852, column: 65, scope: !2495)
!2512 = !DILocation(line: 852, column: 13, scope: !2495)
!2513 = !DILocation(line: 852, column: 11, scope: !2495)
!2514 = !DILocation(line: 853, column: 4, scope: !2495)
!2515 = !DILocation(line: 854, column: 13, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 854, column: 13)
!2517 = !DILocation(line: 854, column: 22, scope: !2516)
!2518 = !DILocation(line: 854, column: 26, scope: !2516)
!2519 = !DILocation(line: 854, column: 20, scope: !2516)
!2520 = !DILocation(line: 854, column: 30, scope: !2516)
!2521 = !DILocation(line: 854, column: 33, scope: !2516)
!2522 = !DILocation(line: 854, column: 42, scope: !2516)
!2523 = !DILocation(line: 854, column: 51, scope: !2516)
!2524 = !DILocation(line: 854, column: 39, scope: !2516)
!2525 = !DILocation(line: 854, column: 55, scope: !2516)
!2526 = !DILocation(line: 854, column: 58, scope: !2516)
!2527 = !DILocation(line: 854, column: 66, scope: !2516)
!2528 = !DILocation(line: 854, column: 77, scope: !2516)
!2529 = !DILocation(line: 854, column: 75, scope: !2516)
!2530 = !DILocation(line: 854, column: 64, scope: !2516)
!2531 = !DILocation(line: 854, column: 13, scope: !2478)
!2532 = !DILocation(line: 856, column: 13, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2516, file: !1, line: 854, column: 88)
!2534 = !DILocation(line: 856, column: 11, scope: !2533)
!2535 = !DILocation(line: 857, column: 4, scope: !2533)
!2536 = !DILocation(line: 858, column: 13, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2516, file: !1, line: 858, column: 13)
!2538 = !DILocation(line: 858, column: 22, scope: !2537)
!2539 = !DILocation(line: 858, column: 26, scope: !2537)
!2540 = !DILocation(line: 858, column: 32, scope: !2537)
!2541 = !DILocation(line: 858, column: 36, scope: !2537)
!2542 = !DILocation(line: 858, column: 30, scope: !2537)
!2543 = !DILocation(line: 858, column: 20, scope: !2537)
!2544 = !DILocation(line: 858, column: 46, scope: !2537)
!2545 = !DILocation(line: 858, column: 49, scope: !2537)
!2546 = !DILocation(line: 858, column: 60, scope: !2537)
!2547 = !DILocation(line: 858, column: 64, scope: !2537)
!2548 = !DILocation(line: 858, column: 70, scope: !2537)
!2549 = !DILocation(line: 858, column: 74, scope: !2537)
!2550 = !DILocation(line: 858, column: 68, scope: !2537)
!2551 = !DILocation(line: 858, column: 58, scope: !2537)
!2552 = !DILocation(line: 858, column: 84, scope: !2537)
!2553 = !DILocation(line: 858, column: 87, scope: !2537)
!2554 = !DILocation(line: 858, column: 95, scope: !2537)
!2555 = !DILocation(line: 858, column: 106, scope: !2537)
!2556 = !DILocation(line: 858, column: 104, scope: !2537)
!2557 = !DILocation(line: 858, column: 93, scope: !2537)
!2558 = !DILocation(line: 858, column: 13, scope: !2516)
!2559 = !DILocation(line: 860, column: 13, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 858, column: 117)
!2561 = !DILocation(line: 860, column: 24, scope: !2560)
!2562 = !DILocation(line: 860, column: 22, scope: !2560)
!2563 = !DILocation(line: 860, column: 11, scope: !2560)
!2564 = !DILocation(line: 861, column: 4, scope: !2560)
!2565 = !DILocation(line: 863, column: 8, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 863, column: 8)
!2567 = !DILocation(line: 863, column: 17, scope: !2566)
!2568 = !DILocation(line: 863, column: 14, scope: !2566)
!2569 = !DILocation(line: 863, column: 8, scope: !2386)
!2570 = !DILocation(line: 864, column: 15, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2566, file: !1, line: 863, column: 26)
!2572 = !DILocation(line: 864, column: 21, scope: !2571)
!2573 = !DILocation(line: 864, column: 13, scope: !2571)
!2574 = !DILocation(line: 865, column: 4, scope: !2571)
!2575 = !DILocation(line: 866, column: 3, scope: !2386)
!2576 = !DILocation(line: 867, column: 2, scope: !2366)
!2577 = !DILocation(line: 869, column: 11, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2362, file: !1, line: 868, column: 7)
!2579 = !DILocation(line: 870, column: 9, scope: !2578)
!2580 = !DILocation(line: 873, column: 6, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 873, column: 6)
!2582 = !DILocation(line: 873, column: 14, scope: !2581)
!2583 = !DILocation(line: 873, column: 12, scope: !2581)
!2584 = !DILocation(line: 873, column: 22, scope: !2581)
!2585 = !DILocation(line: 873, column: 6, scope: !2131)
!2586 = !DILocation(line: 874, column: 11, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2581, file: !1, line: 873, column: 27)
!2588 = !DILocation(line: 874, column: 19, scope: !2587)
!2589 = !DILocation(line: 874, column: 9, scope: !2587)
!2590 = !DILocation(line: 875, column: 2, scope: !2587)
!2591 = !DILocation(line: 877, column: 2, scope: !2131)
!2592 = !DILocation(line: 877, column: 6, scope: !2131)
!2593 = !DILocation(line: 877, column: 19, scope: !2131)
!2594 = !DILocation(line: 877, column: 18, scope: !2131)
!2595 = !DILocation(line: 878, column: 23, scope: !2131)
!2596 = !DILocation(line: 878, column: 27, scope: !2131)
!2597 = !DILocation(line: 878, column: 34, scope: !2131)
!2598 = !DILocation(line: 878, column: 32, scope: !2131)
!2599 = !DILocation(line: 878, column: 51, scope: !2131)
!2600 = !DILocation(line: 878, column: 49, scope: !2131)
!2601 = !DILocation(line: 878, column: 2, scope: !2131)
!2602 = !DILocation(line: 878, column: 6, scope: !2131)
!2603 = !DILocation(line: 878, column: 16, scope: !2131)
!2604 = !DILocation(line: 878, column: 21, scope: !2131)
!2605 = !DILocation(line: 879, column: 23, scope: !2131)
!2606 = !DILocation(line: 879, column: 27, scope: !2131)
!2607 = !DILocation(line: 879, column: 34, scope: !2131)
!2608 = !DILocation(line: 879, column: 32, scope: !2131)
!2609 = !DILocation(line: 879, column: 51, scope: !2131)
!2610 = !DILocation(line: 879, column: 49, scope: !2131)
!2611 = !DILocation(line: 879, column: 2, scope: !2131)
!2612 = !DILocation(line: 879, column: 6, scope: !2131)
!2613 = !DILocation(line: 879, column: 16, scope: !2131)
!2614 = !DILocation(line: 879, column: 21, scope: !2131)
!2615 = !DILocation(line: 881, column: 2, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2617, file: !1, line: 881, column: 2)
!2617 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 881, column: 2)
!2618 = !DILocation(line: 881, column: 2, scope: !2617)
!2619 = !DILocation(line: 881, column: 2, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2616, file: !1, line: 881, column: 2)
!2621 = !DILocation(line: 882, column: 2, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !1, line: 882, column: 2)
!2623 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 882, column: 2)
!2624 = !DILocation(line: 882, column: 2, scope: !2623)
!2625 = !DILocation(line: 882, column: 2, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 882, column: 2)
!2627 = !DILocation(line: 883, column: 1, scope: !2131)
!2628 = distinct !DISubprogram(name: "text_get_visible_lines_no", scope: !1, file: !1, line: 694, type: !2629, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!244, !277, !244}
!2631 = !DILocalVariable(name: "st", arg: 1, scope: !2628, file: !1, line: 694, type: !277)
!2632 = !DILocation(line: 694, column: 49, scope: !2628)
!2633 = !DILocalVariable(name: "lineno", arg: 2, scope: !2628, file: !1, line: 694, type: !244)
!2634 = !DILocation(line: 694, column: 57, scope: !2628)
!2635 = !DILocalVariable(name: "drawcache", scope: !2628, file: !1, line: 696, type: !246)
!2636 = !DILocation(line: 696, column: 13, scope: !2628)
!2637 = !DILocation(line: 696, column: 38, scope: !2628)
!2638 = !DILocation(line: 696, column: 42, scope: !2628)
!2639 = !DILocation(line: 696, column: 25, scope: !2628)
!2640 = !DILocation(line: 698, column: 9, scope: !2628)
!2641 = !DILocation(line: 698, column: 20, scope: !2628)
!2642 = !DILocation(line: 698, column: 32, scope: !2628)
!2643 = !DILocation(line: 698, column: 2, scope: !2628)
!2644 = distinct !DISubprogram(name: "text_font_begin", scope: !1, file: !1, line: 61, type: !1309, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!2645 = !DILocalVariable(name: "st", arg: 1, scope: !2644, file: !1, line: 61, type: !277)
!2646 = !DILocation(line: 61, column: 40, scope: !2644)
!2647 = !DILocation(line: 63, column: 11, scope: !2644)
!2648 = !DILocation(line: 63, column: 17, scope: !2644)
!2649 = !DILocation(line: 63, column: 21, scope: !2644)
!2650 = !DILocation(line: 63, column: 2, scope: !2644)
!2651 = !DILocation(line: 64, column: 1, scope: !2644)
!2652 = distinct !DISubprogram(name: "draw_cursor", scope: !1, file: !1, line: 1070, type: !1401, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!2653 = !DILocalVariable(name: "st", arg: 1, scope: !2652, file: !1, line: 1070, type: !277)
!2654 = !DILocation(line: 1070, column: 36, scope: !2652)
!2655 = !DILocalVariable(name: "ar", arg: 2, scope: !2652, file: !1, line: 1070, type: !439)
!2656 = !DILocation(line: 1070, column: 49, scope: !2652)
!2657 = !DILocalVariable(name: "text", scope: !2652, file: !1, line: 1072, type: !571)
!2658 = !DILocation(line: 1072, column: 8, scope: !2652)
!2659 = !DILocation(line: 1072, column: 15, scope: !2652)
!2660 = !DILocation(line: 1072, column: 19, scope: !2652)
!2661 = !DILocalVariable(name: "vcurl", scope: !2652, file: !1, line: 1073, type: !244)
!2662 = !DILocation(line: 1073, column: 6, scope: !2652)
!2663 = !DILocalVariable(name: "vcurc", scope: !2652, file: !1, line: 1073, type: !244)
!2664 = !DILocation(line: 1073, column: 13, scope: !2652)
!2665 = !DILocalVariable(name: "vsell", scope: !2652, file: !1, line: 1073, type: !244)
!2666 = !DILocation(line: 1073, column: 20, scope: !2652)
!2667 = !DILocalVariable(name: "vselc", scope: !2652, file: !1, line: 1073, type: !244)
!2668 = !DILocation(line: 1073, column: 27, scope: !2652)
!2669 = !DILocalVariable(name: "hidden", scope: !2652, file: !1, line: 1073, type: !244)
!2670 = !DILocation(line: 1073, column: 34, scope: !2652)
!2671 = !DILocalVariable(name: "x", scope: !2652, file: !1, line: 1074, type: !244)
!2672 = !DILocation(line: 1074, column: 6, scope: !2652)
!2673 = !DILocalVariable(name: "y", scope: !2652, file: !1, line: 1074, type: !244)
!2674 = !DILocation(line: 1074, column: 9, scope: !2652)
!2675 = !DILocalVariable(name: "w", scope: !2652, file: !1, line: 1074, type: !244)
!2676 = !DILocation(line: 1074, column: 12, scope: !2652)
!2677 = !DILocalVariable(name: "i", scope: !2652, file: !1, line: 1074, type: !244)
!2678 = !DILocation(line: 1074, column: 15, scope: !2652)
!2679 = !DILocalVariable(name: "lheight", scope: !2652, file: !1, line: 1075, type: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!2681 = !DILocation(line: 1075, column: 12, scope: !2652)
!2682 = !DILocation(line: 1075, column: 22, scope: !2652)
!2683 = !DILocation(line: 1075, column: 26, scope: !2652)
!2684 = !DILocation(line: 1075, column: 40, scope: !2652)
!2685 = !DILocation(line: 1075, column: 38, scope: !2652)
!2686 = !DILocation(line: 1078, column: 6, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 1078, column: 6)
!2688 = !DILocation(line: 1078, column: 12, scope: !2687)
!2689 = !DILocation(line: 1078, column: 20, scope: !2687)
!2690 = !DILocation(line: 1078, column: 26, scope: !2687)
!2691 = !DILocation(line: 1078, column: 17, scope: !2687)
!2692 = !DILocation(line: 1078, column: 31, scope: !2687)
!2693 = !DILocation(line: 1078, column: 34, scope: !2687)
!2694 = !DILocation(line: 1078, column: 40, scope: !2687)
!2695 = !DILocation(line: 1078, column: 48, scope: !2687)
!2696 = !DILocation(line: 1078, column: 54, scope: !2687)
!2697 = !DILocation(line: 1078, column: 45, scope: !2687)
!2698 = !DILocation(line: 1078, column: 6, scope: !2652)
!2699 = !DILocalVariable(name: "offl", scope: !2700, file: !1, line: 1079, type: !244)
!2700 = distinct !DILexicalBlock(scope: !2687, file: !1, line: 1078, column: 60)
!2701 = !DILocation(line: 1079, column: 7, scope: !2700)
!2702 = !DILocalVariable(name: "offc", scope: !2700, file: !1, line: 1079, type: !244)
!2703 = !DILocation(line: 1079, column: 13, scope: !2700)
!2704 = !DILocation(line: 1081, column: 15, scope: !2700)
!2705 = !DILocation(line: 1081, column: 19, scope: !2700)
!2706 = !DILocation(line: 1081, column: 23, scope: !2700)
!2707 = !DILocation(line: 1081, column: 29, scope: !2700)
!2708 = !DILocation(line: 1081, column: 35, scope: !2700)
!2709 = !DILocation(line: 1081, column: 41, scope: !2700)
!2710 = !DILocation(line: 1081, column: 3, scope: !2700)
!2711 = !DILocation(line: 1082, column: 24, scope: !2700)
!2712 = !DILocation(line: 1082, column: 30, scope: !2700)
!2713 = !DILocation(line: 1082, column: 36, scope: !2700)
!2714 = !DILocation(line: 1082, column: 43, scope: !2700)
!2715 = !DILocation(line: 1082, column: 49, scope: !2700)
!2716 = !DILocation(line: 1082, column: 11, scope: !2700)
!2717 = !DILocation(line: 1082, column: 57, scope: !2700)
!2718 = !DILocation(line: 1082, column: 61, scope: !2700)
!2719 = !DILocation(line: 1082, column: 55, scope: !2700)
!2720 = !DILocation(line: 1082, column: 67, scope: !2700)
!2721 = !DILocation(line: 1082, column: 65, scope: !2700)
!2722 = !DILocation(line: 1082, column: 9, scope: !2700)
!2723 = !DILocation(line: 1083, column: 29, scope: !2700)
!2724 = !DILocation(line: 1083, column: 33, scope: !2700)
!2725 = !DILocation(line: 1083, column: 39, scope: !2700)
!2726 = !DILocation(line: 1083, column: 45, scope: !2700)
!2727 = !DILocation(line: 1083, column: 51, scope: !2700)
!2728 = !DILocation(line: 1083, column: 57, scope: !2700)
!2729 = !DILocation(line: 1083, column: 11, scope: !2700)
!2730 = !DILocation(line: 1083, column: 65, scope: !2700)
!2731 = !DILocation(line: 1083, column: 69, scope: !2700)
!2732 = !DILocation(line: 1083, column: 63, scope: !2700)
!2733 = !DILocation(line: 1083, column: 76, scope: !2700)
!2734 = !DILocation(line: 1083, column: 74, scope: !2700)
!2735 = !DILocation(line: 1083, column: 9, scope: !2700)
!2736 = !DILocation(line: 1084, column: 15, scope: !2700)
!2737 = !DILocation(line: 1084, column: 19, scope: !2700)
!2738 = !DILocation(line: 1084, column: 23, scope: !2700)
!2739 = !DILocation(line: 1084, column: 29, scope: !2700)
!2740 = !DILocation(line: 1084, column: 35, scope: !2700)
!2741 = !DILocation(line: 1084, column: 41, scope: !2700)
!2742 = !DILocation(line: 1084, column: 3, scope: !2700)
!2743 = !DILocation(line: 1085, column: 24, scope: !2700)
!2744 = !DILocation(line: 1085, column: 30, scope: !2700)
!2745 = !DILocation(line: 1085, column: 36, scope: !2700)
!2746 = !DILocation(line: 1085, column: 43, scope: !2700)
!2747 = !DILocation(line: 1085, column: 49, scope: !2700)
!2748 = !DILocation(line: 1085, column: 11, scope: !2700)
!2749 = !DILocation(line: 1085, column: 57, scope: !2700)
!2750 = !DILocation(line: 1085, column: 61, scope: !2700)
!2751 = !DILocation(line: 1085, column: 55, scope: !2700)
!2752 = !DILocation(line: 1085, column: 67, scope: !2700)
!2753 = !DILocation(line: 1085, column: 65, scope: !2700)
!2754 = !DILocation(line: 1085, column: 9, scope: !2700)
!2755 = !DILocation(line: 1086, column: 29, scope: !2700)
!2756 = !DILocation(line: 1086, column: 33, scope: !2700)
!2757 = !DILocation(line: 1086, column: 39, scope: !2700)
!2758 = !DILocation(line: 1086, column: 45, scope: !2700)
!2759 = !DILocation(line: 1086, column: 51, scope: !2700)
!2760 = !DILocation(line: 1086, column: 57, scope: !2700)
!2761 = !DILocation(line: 1086, column: 11, scope: !2700)
!2762 = !DILocation(line: 1086, column: 65, scope: !2700)
!2763 = !DILocation(line: 1086, column: 69, scope: !2700)
!2764 = !DILocation(line: 1086, column: 63, scope: !2700)
!2765 = !DILocation(line: 1086, column: 76, scope: !2700)
!2766 = !DILocation(line: 1086, column: 74, scope: !2700)
!2767 = !DILocation(line: 1086, column: 9, scope: !2700)
!2768 = !DILocation(line: 1088, column: 7, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1088, column: 7)
!2770 = !DILocation(line: 1088, column: 13, scope: !2769)
!2771 = !DILocation(line: 1088, column: 7, scope: !2700)
!2772 = !DILocation(line: 1088, column: 24, scope: !2769)
!2773 = !DILocation(line: 1088, column: 18, scope: !2769)
!2774 = !DILocation(line: 1089, column: 7, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1089, column: 7)
!2776 = !DILocation(line: 1089, column: 13, scope: !2775)
!2777 = !DILocation(line: 1089, column: 7, scope: !2700)
!2778 = !DILocation(line: 1089, column: 24, scope: !2775)
!2779 = !DILocation(line: 1089, column: 36, scope: !2775)
!2780 = !DILocation(line: 1089, column: 18, scope: !2775)
!2781 = !DILocation(line: 1091, column: 3, scope: !2700)
!2782 = !DILocation(line: 1092, column: 7, scope: !2700)
!2783 = !DILocation(line: 1092, column: 11, scope: !2700)
!2784 = !DILocation(line: 1092, column: 25, scope: !2700)
!2785 = !DILocation(line: 1092, column: 38, scope: !2700)
!2786 = !DILocation(line: 1092, column: 36, scope: !2700)
!2787 = !DILocation(line: 1092, column: 49, scope: !2700)
!2788 = !DILocation(line: 1092, column: 5, scope: !2700)
!2789 = !DILocation(line: 1093, column: 7, scope: !2700)
!2790 = !DILocation(line: 1093, column: 11, scope: !2700)
!2791 = !DILocation(line: 1093, column: 5, scope: !2700)
!2792 = !DILocation(line: 1095, column: 7, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1095, column: 7)
!2794 = !DILocation(line: 1095, column: 16, scope: !2793)
!2795 = !DILocation(line: 1095, column: 13, scope: !2793)
!2796 = !DILocation(line: 1095, column: 7, scope: !2700)
!2797 = !DILocation(line: 1096, column: 9, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2793, file: !1, line: 1095, column: 23)
!2799 = !DILocation(line: 1096, column: 17, scope: !2798)
!2800 = !DILocation(line: 1096, column: 15, scope: !2798)
!2801 = !DILocation(line: 1096, column: 6, scope: !2798)
!2802 = !DILocation(line: 1097, column: 8, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2798, file: !1, line: 1097, column: 8)
!2804 = !DILocation(line: 1097, column: 16, scope: !2803)
!2805 = !DILocation(line: 1097, column: 14, scope: !2803)
!2806 = !DILocation(line: 1097, column: 8, scope: !2798)
!2807 = !DILocation(line: 1098, column: 13, scope: !2803)
!2808 = !DILocation(line: 1098, column: 17, scope: !2803)
!2809 = !DILocation(line: 1098, column: 25, scope: !2803)
!2810 = !DILocation(line: 1098, column: 29, scope: !2803)
!2811 = !DILocation(line: 1098, column: 23, scope: !2803)
!2812 = !DILocation(line: 1098, column: 15, scope: !2803)
!2813 = !DILocation(line: 1098, column: 36, scope: !2803)
!2814 = !DILocation(line: 1098, column: 41, scope: !2803)
!2815 = !DILocation(line: 1098, column: 44, scope: !2803)
!2816 = !DILocation(line: 1098, column: 48, scope: !2803)
!2817 = !DILocation(line: 1098, column: 56, scope: !2803)
!2818 = !DILocation(line: 1098, column: 60, scope: !2803)
!2819 = !DILocation(line: 1098, column: 54, scope: !2803)
!2820 = !DILocation(line: 1098, column: 46, scope: !2803)
!2821 = !DILocation(line: 1098, column: 68, scope: !2803)
!2822 = !DILocation(line: 1098, column: 72, scope: !2803)
!2823 = !DILocation(line: 1098, column: 70, scope: !2803)
!2824 = !DILocation(line: 1098, column: 5, scope: !2803)
!2825 = !DILocation(line: 1100, column: 13, scope: !2803)
!2826 = !DILocation(line: 1100, column: 17, scope: !2803)
!2827 = !DILocation(line: 1100, column: 25, scope: !2803)
!2828 = !DILocation(line: 1100, column: 29, scope: !2803)
!2829 = !DILocation(line: 1100, column: 23, scope: !2803)
!2830 = !DILocation(line: 1100, column: 15, scope: !2803)
!2831 = !DILocation(line: 1100, column: 36, scope: !2803)
!2832 = !DILocation(line: 1100, column: 41, scope: !2803)
!2833 = !DILocation(line: 1100, column: 44, scope: !2803)
!2834 = !DILocation(line: 1100, column: 48, scope: !2803)
!2835 = !DILocation(line: 1100, column: 56, scope: !2803)
!2836 = !DILocation(line: 1100, column: 60, scope: !2803)
!2837 = !DILocation(line: 1100, column: 54, scope: !2803)
!2838 = !DILocation(line: 1100, column: 46, scope: !2803)
!2839 = !DILocation(line: 1100, column: 68, scope: !2803)
!2840 = !DILocation(line: 1100, column: 72, scope: !2803)
!2841 = !DILocation(line: 1100, column: 70, scope: !2803)
!2842 = !DILocation(line: 1100, column: 5, scope: !2803)
!2843 = !DILocation(line: 1101, column: 3, scope: !2798)
!2844 = !DILocalVariable(name: "froml", scope: !2845, file: !1, line: 1103, type: !244)
!2845 = distinct !DILexicalBlock(scope: !2793, file: !1, line: 1102, column: 8)
!2846 = !DILocation(line: 1103, column: 8, scope: !2845)
!2847 = !DILocalVariable(name: "fromc", scope: !2845, file: !1, line: 1103, type: !244)
!2848 = !DILocation(line: 1103, column: 15, scope: !2845)
!2849 = !DILocalVariable(name: "tol", scope: !2845, file: !1, line: 1103, type: !244)
!2850 = !DILocation(line: 1103, column: 22, scope: !2845)
!2851 = !DILocalVariable(name: "toc", scope: !2845, file: !1, line: 1103, type: !244)
!2852 = !DILocation(line: 1103, column: 27, scope: !2845)
!2853 = !DILocation(line: 1105, column: 8, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2845, file: !1, line: 1105, column: 8)
!2855 = !DILocation(line: 1105, column: 16, scope: !2854)
!2856 = !DILocation(line: 1105, column: 14, scope: !2854)
!2857 = !DILocation(line: 1105, column: 8, scope: !2845)
!2858 = !DILocation(line: 1106, column: 13, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2854, file: !1, line: 1105, column: 23)
!2860 = !DILocation(line: 1106, column: 11, scope: !2859)
!2861 = !DILocation(line: 1106, column: 26, scope: !2859)
!2862 = !DILocation(line: 1106, column: 24, scope: !2859)
!2863 = !DILocation(line: 1107, column: 13, scope: !2859)
!2864 = !DILocation(line: 1107, column: 11, scope: !2859)
!2865 = !DILocation(line: 1107, column: 26, scope: !2859)
!2866 = !DILocation(line: 1107, column: 24, scope: !2859)
!2867 = !DILocation(line: 1108, column: 4, scope: !2859)
!2868 = !DILocation(line: 1110, column: 13, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2854, file: !1, line: 1109, column: 9)
!2870 = !DILocation(line: 1110, column: 11, scope: !2869)
!2871 = !DILocation(line: 1110, column: 26, scope: !2869)
!2872 = !DILocation(line: 1110, column: 24, scope: !2869)
!2873 = !DILocation(line: 1111, column: 13, scope: !2869)
!2874 = !DILocation(line: 1111, column: 11, scope: !2869)
!2875 = !DILocation(line: 1111, column: 26, scope: !2869)
!2876 = !DILocation(line: 1111, column: 24, scope: !2869)
!2877 = !DILocation(line: 1114, column: 9, scope: !2845)
!2878 = !DILocation(line: 1114, column: 17, scope: !2845)
!2879 = !DILocation(line: 1114, column: 15, scope: !2845)
!2880 = !DILocation(line: 1114, column: 6, scope: !2845)
!2881 = !DILocation(line: 1115, column: 12, scope: !2845)
!2882 = !DILocation(line: 1115, column: 16, scope: !2845)
!2883 = !DILocation(line: 1115, column: 24, scope: !2845)
!2884 = !DILocation(line: 1115, column: 28, scope: !2845)
!2885 = !DILocation(line: 1115, column: 22, scope: !2845)
!2886 = !DILocation(line: 1115, column: 14, scope: !2845)
!2887 = !DILocation(line: 1115, column: 35, scope: !2845)
!2888 = !DILocation(line: 1115, column: 40, scope: !2845)
!2889 = !DILocation(line: 1115, column: 43, scope: !2845)
!2890 = !DILocation(line: 1115, column: 47, scope: !2845)
!2891 = !DILocation(line: 1115, column: 53, scope: !2845)
!2892 = !DILocation(line: 1115, column: 57, scope: !2845)
!2893 = !DILocation(line: 1115, column: 55, scope: !2845)
!2894 = !DILocation(line: 1115, column: 4, scope: !2845)
!2895 = !DILocation(line: 1115, column: 72, scope: !2845)
!2896 = !DILocation(line: 1115, column: 69, scope: !2845)
!2897 = !DILocation(line: 1116, column: 13, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2845, file: !1, line: 1116, column: 4)
!2899 = !DILocation(line: 1116, column: 19, scope: !2898)
!2900 = !DILocation(line: 1116, column: 11, scope: !2898)
!2901 = !DILocation(line: 1116, column: 9, scope: !2898)
!2902 = !DILocation(line: 1116, column: 24, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2898, file: !1, line: 1116, column: 4)
!2904 = !DILocation(line: 1116, column: 28, scope: !2903)
!2905 = !DILocation(line: 1116, column: 26, scope: !2903)
!2906 = !DILocation(line: 1116, column: 4, scope: !2898)
!2907 = !DILocation(line: 1117, column: 13, scope: !2903)
!2908 = !DILocation(line: 1117, column: 15, scope: !2903)
!2909 = !DILocation(line: 1117, column: 20, scope: !2903)
!2910 = !DILocation(line: 1117, column: 23, scope: !2903)
!2911 = !DILocation(line: 1117, column: 27, scope: !2903)
!2912 = !DILocation(line: 1117, column: 33, scope: !2903)
!2913 = !DILocation(line: 1117, column: 37, scope: !2903)
!2914 = !DILocation(line: 1117, column: 35, scope: !2903)
!2915 = !DILocation(line: 1117, column: 5, scope: !2903)
!2916 = !DILocation(line: 1117, column: 53, scope: !2903)
!2917 = !DILocation(line: 1117, column: 50, scope: !2903)
!2918 = !DILocation(line: 1116, column: 34, scope: !2903)
!2919 = !DILocation(line: 1116, column: 4, scope: !2903)
!2920 = distinct !{!2920, !2906, !2921}
!2921 = !DILocation(line: 1117, column: 53, scope: !2898)
!2922 = !DILocation(line: 1119, column: 12, scope: !2845)
!2923 = !DILocation(line: 1119, column: 14, scope: !2845)
!2924 = !DILocation(line: 1119, column: 19, scope: !2845)
!2925 = !DILocation(line: 1119, column: 22, scope: !2845)
!2926 = !DILocation(line: 1119, column: 26, scope: !2845)
!2927 = !DILocation(line: 1119, column: 32, scope: !2845)
!2928 = !DILocation(line: 1119, column: 36, scope: !2845)
!2929 = !DILocation(line: 1119, column: 30, scope: !2845)
!2930 = !DILocation(line: 1119, column: 24, scope: !2845)
!2931 = !DILocation(line: 1119, column: 44, scope: !2845)
!2932 = !DILocation(line: 1119, column: 48, scope: !2845)
!2933 = !DILocation(line: 1119, column: 46, scope: !2845)
!2934 = !DILocation(line: 1119, column: 4, scope: !2845)
!2935 = !DILocation(line: 1119, column: 64, scope: !2845)
!2936 = !DILocation(line: 1119, column: 61, scope: !2845)
!2937 = !DILocation(line: 1121, column: 2, scope: !2700)
!2938 = !DILocalVariable(name: "offl", scope: !2939, file: !1, line: 1123, type: !244)
!2939 = distinct !DILexicalBlock(scope: !2687, file: !1, line: 1122, column: 7)
!2940 = !DILocation(line: 1123, column: 7, scope: !2939)
!2941 = !DILocalVariable(name: "offc", scope: !2939, file: !1, line: 1123, type: !244)
!2942 = !DILocation(line: 1123, column: 13, scope: !2939)
!2943 = !DILocation(line: 1124, column: 15, scope: !2939)
!2944 = !DILocation(line: 1124, column: 19, scope: !2939)
!2945 = !DILocation(line: 1124, column: 23, scope: !2939)
!2946 = !DILocation(line: 1124, column: 29, scope: !2939)
!2947 = !DILocation(line: 1124, column: 35, scope: !2939)
!2948 = !DILocation(line: 1124, column: 41, scope: !2939)
!2949 = !DILocation(line: 1124, column: 3, scope: !2939)
!2950 = !DILocation(line: 1125, column: 24, scope: !2939)
!2951 = !DILocation(line: 1125, column: 30, scope: !2939)
!2952 = !DILocation(line: 1125, column: 36, scope: !2939)
!2953 = !DILocation(line: 1125, column: 43, scope: !2939)
!2954 = !DILocation(line: 1125, column: 49, scope: !2939)
!2955 = !DILocation(line: 1125, column: 11, scope: !2939)
!2956 = !DILocation(line: 1125, column: 57, scope: !2939)
!2957 = !DILocation(line: 1125, column: 61, scope: !2939)
!2958 = !DILocation(line: 1125, column: 55, scope: !2939)
!2959 = !DILocation(line: 1125, column: 67, scope: !2939)
!2960 = !DILocation(line: 1125, column: 65, scope: !2939)
!2961 = !DILocation(line: 1125, column: 9, scope: !2939)
!2962 = !DILocation(line: 1126, column: 29, scope: !2939)
!2963 = !DILocation(line: 1126, column: 33, scope: !2939)
!2964 = !DILocation(line: 1126, column: 39, scope: !2939)
!2965 = !DILocation(line: 1126, column: 45, scope: !2939)
!2966 = !DILocation(line: 1126, column: 51, scope: !2939)
!2967 = !DILocation(line: 1126, column: 57, scope: !2939)
!2968 = !DILocation(line: 1126, column: 11, scope: !2939)
!2969 = !DILocation(line: 1126, column: 65, scope: !2939)
!2970 = !DILocation(line: 1126, column: 69, scope: !2939)
!2971 = !DILocation(line: 1126, column: 63, scope: !2939)
!2972 = !DILocation(line: 1126, column: 76, scope: !2939)
!2973 = !DILocation(line: 1126, column: 74, scope: !2939)
!2974 = !DILocation(line: 1126, column: 9, scope: !2939)
!2975 = !DILocation(line: 1128, column: 7, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 1128, column: 7)
!2977 = !DILocation(line: 1128, column: 13, scope: !2976)
!2978 = !DILocation(line: 1128, column: 7, scope: !2939)
!2979 = !DILocation(line: 1129, column: 10, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 1128, column: 18)
!2981 = !DILocation(line: 1130, column: 11, scope: !2980)
!2982 = !DILocation(line: 1131, column: 3, scope: !2980)
!2983 = !DILocation(line: 1134, column: 6, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 1134, column: 6)
!2985 = !DILocation(line: 1134, column: 10, scope: !2984)
!2986 = !DILocation(line: 1134, column: 6, scope: !2652)
!2987 = !DILocalVariable(name: "x1", scope: !2988, file: !1, line: 1135, type: !244)
!2988 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 1134, column: 23)
!2989 = !DILocation(line: 1135, column: 7, scope: !2988)
!2990 = !DILocalVariable(name: "x2", scope: !2988, file: !1, line: 1135, type: !244)
!2991 = !DILocation(line: 1135, column: 11, scope: !2988)
!2992 = !DILocalVariable(name: "y1", scope: !2988, file: !1, line: 1135, type: !244)
!2993 = !DILocation(line: 1135, column: 15, scope: !2988)
!2994 = !DILocalVariable(name: "y2", scope: !2988, file: !1, line: 1135, type: !244)
!2995 = !DILocation(line: 1135, column: 19, scope: !2988)
!2996 = !DILocation(line: 1137, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2988, file: !1, line: 1137, column: 7)
!2998 = !DILocation(line: 1137, column: 11, scope: !2997)
!2999 = !DILocation(line: 1137, column: 7, scope: !2988)
!3000 = !DILocalVariable(name: "visible_lines", scope: !3001, file: !1, line: 1138, type: !244)
!3001 = distinct !DILexicalBlock(scope: !2997, file: !1, line: 1137, column: 21)
!3002 = !DILocation(line: 1138, column: 8, scope: !3001)
!3003 = !DILocation(line: 1138, column: 47, scope: !3001)
!3004 = !DILocation(line: 1138, column: 51, scope: !3001)
!3005 = !DILocation(line: 1138, column: 55, scope: !3001)
!3006 = !DILocation(line: 1138, column: 61, scope: !3001)
!3007 = !DILocation(line: 1138, column: 67, scope: !3001)
!3008 = !DILocation(line: 1138, column: 24, scope: !3001)
!3009 = !DILocalVariable(name: "offl", scope: !3001, file: !1, line: 1139, type: !244)
!3010 = !DILocation(line: 1139, column: 8, scope: !3001)
!3011 = !DILocalVariable(name: "offc", scope: !3001, file: !1, line: 1139, type: !244)
!3012 = !DILocation(line: 1139, column: 14, scope: !3001)
!3013 = !DILocation(line: 1141, column: 24, scope: !3001)
!3014 = !DILocation(line: 1141, column: 28, scope: !3001)
!3015 = !DILocation(line: 1141, column: 32, scope: !3001)
!3016 = !DILocation(line: 1141, column: 38, scope: !3001)
!3017 = !DILocation(line: 1141, column: 44, scope: !3001)
!3018 = !DILocation(line: 1141, column: 50, scope: !3001)
!3019 = !DILocation(line: 1141, column: 4, scope: !3001)
!3020 = !DILocation(line: 1143, column: 9, scope: !3001)
!3021 = !DILocation(line: 1143, column: 13, scope: !3001)
!3022 = !DILocation(line: 1143, column: 21, scope: !3001)
!3023 = !DILocation(line: 1143, column: 29, scope: !3001)
!3024 = !DILocation(line: 1143, column: 27, scope: !3001)
!3025 = !DILocation(line: 1143, column: 37, scope: !3001)
!3026 = !DILocation(line: 1143, column: 35, scope: !3001)
!3027 = !DILocation(line: 1143, column: 18, scope: !3001)
!3028 = !DILocation(line: 1143, column: 7, scope: !3001)
!3029 = !DILocation(line: 1144, column: 9, scope: !3001)
!3030 = !DILocation(line: 1144, column: 15, scope: !3001)
!3031 = !DILocation(line: 1144, column: 25, scope: !3001)
!3032 = !DILocation(line: 1144, column: 23, scope: !3001)
!3033 = !DILocation(line: 1144, column: 12, scope: !3001)
!3034 = !DILocation(line: 1144, column: 7, scope: !3001)
!3035 = !DILocation(line: 1145, column: 3, scope: !3001)
!3036 = !DILocation(line: 1147, column: 9, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !2997, file: !1, line: 1146, column: 8)
!3038 = !DILocation(line: 1147, column: 13, scope: !3037)
!3039 = !DILocation(line: 1147, column: 20, scope: !3037)
!3040 = !DILocation(line: 1147, column: 28, scope: !3037)
!3041 = !DILocation(line: 1147, column: 26, scope: !3037)
!3042 = !DILocation(line: 1147, column: 18, scope: !3037)
!3043 = !DILocation(line: 1147, column: 7, scope: !3037)
!3044 = !DILocation(line: 1148, column: 9, scope: !3037)
!3045 = !DILocation(line: 1148, column: 15, scope: !3037)
!3046 = !DILocation(line: 1148, column: 12, scope: !3037)
!3047 = !DILocation(line: 1148, column: 7, scope: !3037)
!3048 = !DILocation(line: 1151, column: 9, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !2988, file: !1, line: 1151, column: 7)
!3050 = !DILocation(line: 1151, column: 12, scope: !3049)
!3051 = !DILocation(line: 1151, column: 16, scope: !3049)
!3052 = !DILocation(line: 1151, column: 19, scope: !3049)
!3053 = !DILocation(line: 1151, column: 24, scope: !3049)
!3054 = !DILocation(line: 1151, column: 28, scope: !3049)
!3055 = !DILocation(line: 1151, column: 22, scope: !3049)
!3056 = !DILocation(line: 1151, column: 7, scope: !2988)
!3057 = !DILocation(line: 1152, column: 7, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 1151, column: 35)
!3059 = !DILocation(line: 1153, column: 9, scope: !3058)
!3060 = !DILocation(line: 1153, column: 14, scope: !3058)
!3061 = !DILocation(line: 1153, column: 18, scope: !3058)
!3062 = !DILocation(line: 1153, column: 12, scope: !3058)
!3063 = !DILocation(line: 1153, column: 7, scope: !3058)
!3064 = !DILocation(line: 1155, column: 4, scope: !3058)
!3065 = !DILocation(line: 1157, column: 4, scope: !3058)
!3066 = !DILocation(line: 1158, column: 4, scope: !3058)
!3067 = !DILocation(line: 1159, column: 12, scope: !3058)
!3068 = !DILocation(line: 1159, column: 15, scope: !3058)
!3069 = !DILocation(line: 1159, column: 20, scope: !3058)
!3070 = !DILocation(line: 1159, column: 24, scope: !3058)
!3071 = !DILocation(line: 1159, column: 28, scope: !3058)
!3072 = !DILocation(line: 1159, column: 4, scope: !3058)
!3073 = !DILocation(line: 1160, column: 4, scope: !3058)
!3074 = !DILocation(line: 1161, column: 3, scope: !3058)
!3075 = !DILocation(line: 1162, column: 2, scope: !2988)
!3076 = !DILocation(line: 1164, column: 7, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 1164, column: 6)
!3078 = !DILocation(line: 1164, column: 6, scope: !2652)
!3079 = !DILocation(line: 1166, column: 7, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3077, file: !1, line: 1164, column: 15)
!3081 = !DILocation(line: 1166, column: 11, scope: !3080)
!3082 = !DILocation(line: 1166, column: 25, scope: !3080)
!3083 = !DILocation(line: 1166, column: 38, scope: !3080)
!3084 = !DILocation(line: 1166, column: 36, scope: !3080)
!3085 = !DILocation(line: 1166, column: 49, scope: !3080)
!3086 = !DILocation(line: 1166, column: 5, scope: !3080)
!3087 = !DILocation(line: 1167, column: 8, scope: !3080)
!3088 = !DILocation(line: 1167, column: 16, scope: !3080)
!3089 = !DILocation(line: 1167, column: 20, scope: !3080)
!3090 = !DILocation(line: 1167, column: 14, scope: !3080)
!3091 = !DILocation(line: 1167, column: 5, scope: !3080)
!3092 = !DILocation(line: 1168, column: 7, scope: !3080)
!3093 = !DILocation(line: 1168, column: 11, scope: !3080)
!3094 = !DILocation(line: 1168, column: 18, scope: !3080)
!3095 = !DILocation(line: 1168, column: 26, scope: !3080)
!3096 = !DILocation(line: 1168, column: 24, scope: !3080)
!3097 = !DILocation(line: 1168, column: 16, scope: !3080)
!3098 = !DILocation(line: 1168, column: 5, scope: !3080)
!3099 = !DILocation(line: 1170, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3080, file: !1, line: 1170, column: 7)
!3101 = !DILocation(line: 1170, column: 11, scope: !3100)
!3102 = !DILocation(line: 1170, column: 7, scope: !3080)
!3103 = !DILocalVariable(name: "ch", scope: !3104, file: !1, line: 1171, type: !261)
!3104 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 1170, column: 22)
!3105 = !DILocation(line: 1171, column: 9, scope: !3104)
!3106 = !DILocation(line: 1171, column: 14, scope: !3104)
!3107 = !DILocation(line: 1171, column: 20, scope: !3104)
!3108 = !DILocation(line: 1171, column: 26, scope: !3104)
!3109 = !DILocation(line: 1171, column: 31, scope: !3104)
!3110 = !DILocation(line: 1171, column: 37, scope: !3104)
!3111 = !DILocation(line: 1173, column: 9, scope: !3104)
!3112 = !DILocation(line: 1173, column: 6, scope: !3104)
!3113 = !DILocation(line: 1174, column: 8, scope: !3104)
!3114 = !DILocation(line: 1174, column: 12, scope: !3104)
!3115 = !DILocation(line: 1174, column: 6, scope: !3104)
!3116 = !DILocation(line: 1175, column: 8, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3104, file: !1, line: 1175, column: 8)
!3118 = !DILocation(line: 1175, column: 11, scope: !3117)
!3119 = !DILocation(line: 1175, column: 8, scope: !3104)
!3120 = !DILocation(line: 1175, column: 25, scope: !3117)
!3121 = !DILocation(line: 1175, column: 29, scope: !3117)
!3122 = !DILocation(line: 1175, column: 42, scope: !3117)
!3123 = !DILocation(line: 1175, column: 50, scope: !3117)
!3124 = !DILocation(line: 1175, column: 54, scope: !3117)
!3125 = !DILocation(line: 1175, column: 48, scope: !3117)
!3126 = !DILocation(line: 1175, column: 62, scope: !3117)
!3127 = !DILocation(line: 1175, column: 66, scope: !3117)
!3128 = !DILocation(line: 1175, column: 60, scope: !3117)
!3129 = !DILocation(line: 1175, column: 39, scope: !3117)
!3130 = !DILocation(line: 1175, column: 22, scope: !3117)
!3131 = !DILocation(line: 1175, column: 20, scope: !3117)
!3132 = !DILocation(line: 1177, column: 4, scope: !3104)
!3133 = !DILocation(line: 1178, column: 12, scope: !3104)
!3134 = !DILocation(line: 1178, column: 15, scope: !3104)
!3135 = !DILocation(line: 1178, column: 19, scope: !3104)
!3136 = !DILocation(line: 1178, column: 17, scope: !3104)
!3137 = !DILocation(line: 1178, column: 27, scope: !3104)
!3138 = !DILocation(line: 1178, column: 32, scope: !3104)
!3139 = !DILocation(line: 1178, column: 36, scope: !3104)
!3140 = !DILocation(line: 1178, column: 34, scope: !3104)
!3141 = !DILocation(line: 1178, column: 39, scope: !3104)
!3142 = !DILocation(line: 1178, column: 43, scope: !3104)
!3143 = !DILocation(line: 1178, column: 41, scope: !3104)
!3144 = !DILocation(line: 1178, column: 51, scope: !3104)
!3145 = !DILocation(line: 1178, column: 4, scope: !3104)
!3146 = !DILocation(line: 1179, column: 3, scope: !3104)
!3147 = !DILocation(line: 1181, column: 4, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 1180, column: 8)
!3149 = !DILocation(line: 1182, column: 12, scope: !3148)
!3150 = !DILocation(line: 1182, column: 14, scope: !3148)
!3151 = !DILocation(line: 1182, column: 19, scope: !3148)
!3152 = !DILocation(line: 1182, column: 22, scope: !3148)
!3153 = !DILocation(line: 1182, column: 24, scope: !3148)
!3154 = !DILocation(line: 1182, column: 29, scope: !3148)
!3155 = !DILocation(line: 1182, column: 33, scope: !3148)
!3156 = !DILocation(line: 1182, column: 31, scope: !3148)
!3157 = !DILocation(line: 1182, column: 4, scope: !3148)
!3158 = !DILocation(line: 1184, column: 2, scope: !3080)
!3159 = !DILocation(line: 1185, column: 1, scope: !2652)
!3160 = distinct !DISubprogram(name: "text_font_draw", scope: !1, file: !1, line: 70, type: !3161, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!244, !277, !244, !244, !839}
!3163 = !DILocalVariable(name: "st", arg: 1, scope: !3160, file: !1, line: 70, type: !277)
!3164 = !DILocation(line: 70, column: 38, scope: !3160)
!3165 = !DILocalVariable(name: "x", arg: 2, scope: !3160, file: !1, line: 70, type: !244)
!3166 = !DILocation(line: 70, column: 46, scope: !3160)
!3167 = !DILocalVariable(name: "y", arg: 3, scope: !3160, file: !1, line: 70, type: !244)
!3168 = !DILocation(line: 70, column: 53, scope: !3160)
!3169 = !DILocalVariable(name: "str", arg: 4, scope: !3160, file: !1, line: 70, type: !839)
!3170 = !DILocation(line: 70, column: 68, scope: !3160)
!3171 = !DILocalVariable(name: "columns", scope: !3160, file: !1, line: 72, type: !244)
!3172 = !DILocation(line: 72, column: 6, scope: !3160)
!3173 = !DILocation(line: 74, column: 15, scope: !3160)
!3174 = !DILocation(line: 74, column: 21, scope: !3160)
!3175 = !DILocation(line: 74, column: 24, scope: !3160)
!3176 = !DILocation(line: 74, column: 2, scope: !3160)
!3177 = !DILocation(line: 75, column: 26, scope: !3160)
!3178 = !DILocation(line: 75, column: 32, scope: !3160)
!3179 = !DILocation(line: 75, column: 61, scope: !3160)
!3180 = !DILocation(line: 75, column: 65, scope: !3160)
!3181 = !DILocation(line: 75, column: 12, scope: !3160)
!3182 = !DILocation(line: 75, column: 10, scope: !3160)
!3183 = !DILocation(line: 77, column: 9, scope: !3160)
!3184 = !DILocation(line: 77, column: 13, scope: !3160)
!3185 = !DILocation(line: 77, column: 22, scope: !3160)
!3186 = !DILocation(line: 77, column: 20, scope: !3160)
!3187 = !DILocation(line: 77, column: 2, scope: !3160)
!3188 = distinct !DISubprogram(name: "text_draw_wrapped", scope: !1, file: !1, line: 374, type: !3189, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!244, !277, !839, !244, !244, !244, !839, !244}
!3191 = !DILocalVariable(name: "st", arg: 1, scope: !3188, file: !1, line: 374, type: !277)
!3192 = !DILocation(line: 374, column: 41, scope: !3188)
!3193 = !DILocalVariable(name: "str", arg: 2, scope: !3188, file: !1, line: 374, type: !839)
!3194 = !DILocation(line: 374, column: 57, scope: !3188)
!3195 = !DILocalVariable(name: "x", arg: 3, scope: !3188, file: !1, line: 374, type: !244)
!3196 = !DILocation(line: 374, column: 66, scope: !3188)
!3197 = !DILocalVariable(name: "y", arg: 4, scope: !3188, file: !1, line: 374, type: !244)
!3198 = !DILocation(line: 374, column: 73, scope: !3188)
!3199 = !DILocalVariable(name: "w", arg: 5, scope: !3188, file: !1, line: 374, type: !244)
!3200 = !DILocation(line: 374, column: 80, scope: !3188)
!3201 = !DILocalVariable(name: "format", arg: 6, scope: !3188, file: !1, line: 374, type: !839)
!3202 = !DILocation(line: 374, column: 95, scope: !3188)
!3203 = !DILocalVariable(name: "skip", arg: 7, scope: !3188, file: !1, line: 374, type: !244)
!3204 = !DILocation(line: 374, column: 107, scope: !3188)
!3205 = !DILocalVariable(name: "use_syntax", scope: !3188, file: !1, line: 376, type: !1752)
!3206 = !DILocation(line: 376, column: 13, scope: !3188)
!3207 = !DILocation(line: 376, column: 27, scope: !3188)
!3208 = !DILocation(line: 376, column: 31, scope: !3188)
!3209 = !DILocation(line: 376, column: 42, scope: !3188)
!3210 = !DILocation(line: 376, column: 45, scope: !3188)
!3211 = !DILocation(line: 0, scope: !3188)
!3212 = !DILocation(line: 376, column: 26, scope: !3188)
!3213 = !DILocalVariable(name: "fs", scope: !3188, file: !1, line: 377, type: !3214)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlattenString", file: !222, line: 42, baseType: !3215)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlattenString", file: !222, line: 35, size: 10432, elements: !3216)
!3216 = !{!3217, !3218, !3220, !3221, !3222, !3223}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "fixedbuf", scope: !3215, file: !222, line: 36, baseType: !424, size: 2048)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "fixedaccum", scope: !3215, file: !222, line: 37, baseType: !3219, size: 8192, offset: 2048)
!3219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 8192, elements: !425)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3215, file: !222, line: 39, baseType: !372, size: 64, offset: 10240)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !3215, file: !222, line: 40, baseType: !251, size: 64, offset: 10304)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3215, file: !222, line: 41, baseType: !244, size: 32, offset: 10368)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3215, file: !222, line: 41, baseType: !244, size: 32, offset: 10400)
!3224 = !DILocation(line: 377, column: 16, scope: !3188)
!3225 = !DILocalVariable(name: "basex", scope: !3188, file: !1, line: 378, type: !244)
!3226 = !DILocation(line: 378, column: 6, scope: !3188)
!3227 = !DILocalVariable(name: "lines", scope: !3188, file: !1, line: 378, type: !244)
!3228 = !DILocation(line: 378, column: 13, scope: !3188)
!3229 = !DILocalVariable(name: "i", scope: !3188, file: !1, line: 379, type: !244)
!3230 = !DILocation(line: 379, column: 6, scope: !3188)
!3231 = !DILocalVariable(name: "wrap", scope: !3188, file: !1, line: 379, type: !244)
!3232 = !DILocation(line: 379, column: 9, scope: !3188)
!3233 = !DILocalVariable(name: "end", scope: !3188, file: !1, line: 379, type: !244)
!3234 = !DILocation(line: 379, column: 15, scope: !3188)
!3235 = !DILocalVariable(name: "max", scope: !3188, file: !1, line: 379, type: !244)
!3236 = !DILocation(line: 379, column: 20, scope: !3188)
!3237 = !DILocalVariable(name: "columns", scope: !3188, file: !1, line: 379, type: !244)
!3238 = !DILocation(line: 379, column: 25, scope: !3188)
!3239 = !DILocalVariable(name: "padding", scope: !3188, file: !1, line: 379, type: !244)
!3240 = !DILocation(line: 379, column: 34, scope: !3188)
!3241 = !DILocalVariable(name: "a", scope: !3188, file: !1, line: 381, type: !244)
!3242 = !DILocation(line: 381, column: 6, scope: !3188)
!3243 = !DILocalVariable(name: "fstart", scope: !3188, file: !1, line: 381, type: !244)
!3244 = !DILocation(line: 381, column: 9, scope: !3188)
!3245 = !DILocalVariable(name: "fpos", scope: !3188, file: !1, line: 381, type: !244)
!3246 = !DILocation(line: 381, column: 17, scope: !3188)
!3247 = !DILocalVariable(name: "mi", scope: !3188, file: !1, line: 382, type: !244)
!3248 = !DILocation(line: 382, column: 6, scope: !3188)
!3249 = !DILocalVariable(name: "ma", scope: !3188, file: !1, line: 382, type: !244)
!3250 = !DILocation(line: 382, column: 10, scope: !3188)
!3251 = !DILocalVariable(name: "mstart", scope: !3188, file: !1, line: 382, type: !244)
!3252 = !DILocation(line: 382, column: 14, scope: !3188)
!3253 = !DILocalVariable(name: "mend", scope: !3188, file: !1, line: 382, type: !244)
!3254 = !DILocation(line: 382, column: 22, scope: !3188)
!3255 = !DILocalVariable(name: "fmt_prev", scope: !3188, file: !1, line: 383, type: !261)
!3256 = !DILocation(line: 383, column: 7, scope: !3188)
!3257 = !DILocation(line: 385, column: 17, scope: !3188)
!3258 = !DILocation(line: 385, column: 26, scope: !3188)
!3259 = !DILocation(line: 385, column: 2, scope: !3188)
!3260 = !DILocation(line: 386, column: 11, scope: !3188)
!3261 = !DILocation(line: 386, column: 6, scope: !3188)
!3262 = !DILocation(line: 387, column: 8, scope: !3188)
!3263 = !DILocation(line: 387, column: 12, scope: !3188)
!3264 = !DILocation(line: 387, column: 16, scope: !3188)
!3265 = !DILocation(line: 387, column: 10, scope: !3188)
!3266 = !DILocation(line: 387, column: 6, scope: !3188)
!3267 = !DILocation(line: 388, column: 6, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3188, file: !1, line: 388, column: 6)
!3269 = !DILocation(line: 388, column: 10, scope: !3268)
!3270 = !DILocation(line: 388, column: 6, scope: !3188)
!3271 = !DILocation(line: 388, column: 19, scope: !3268)
!3272 = !DILocation(line: 388, column: 15, scope: !3268)
!3273 = !DILocation(line: 389, column: 10, scope: !3188)
!3274 = !DILocation(line: 389, column: 8, scope: !3188)
!3275 = !DILocation(line: 390, column: 8, scope: !3188)
!3276 = !DILocation(line: 392, column: 16, scope: !3188)
!3277 = !DILocation(line: 392, column: 7, scope: !3188)
!3278 = !DILocation(line: 392, column: 28, scope: !3188)
!3279 = !DILocation(line: 393, column: 34, scope: !3188)
!3280 = !DILocation(line: 393, column: 39, scope: !3188)
!3281 = !DILocation(line: 393, column: 9, scope: !3188)
!3282 = !DILocation(line: 393, column: 56, scope: !3188)
!3283 = !DILocation(line: 393, column: 54, scope: !3188)
!3284 = !DILocation(line: 393, column: 7, scope: !3188)
!3285 = !DILocation(line: 394, column: 15, scope: !3188)
!3286 = !DILocation(line: 394, column: 21, scope: !3188)
!3287 = !DILocation(line: 394, column: 19, scope: !3188)
!3288 = !DILocation(line: 394, column: 13, scope: !3188)
!3289 = !DILocation(line: 394, column: 6, scope: !3188)
!3290 = !DILocation(line: 396, column: 9, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3188, file: !1, line: 396, column: 2)
!3292 = !DILocation(line: 396, column: 17, scope: !3291)
!3293 = !DILocation(line: 396, column: 7, scope: !3291)
!3294 = !DILocation(line: 396, column: 22, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !1, line: 396, column: 2)
!3296 = !DILocation(line: 396, column: 26, scope: !3295)
!3297 = !DILocation(line: 396, column: 2, scope: !3291)
!3298 = !DILocation(line: 397, column: 42, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !1, line: 396, column: 85)
!3300 = !DILocation(line: 397, column: 48, scope: !3299)
!3301 = !DILocation(line: 397, column: 46, scope: !3299)
!3302 = !DILocation(line: 397, column: 13, scope: !3299)
!3303 = !DILocation(line: 397, column: 11, scope: !3299)
!3304 = !DILocation(line: 398, column: 7, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !1, line: 398, column: 7)
!3306 = !DILocation(line: 398, column: 11, scope: !3305)
!3307 = !DILocation(line: 398, column: 9, scope: !3305)
!3308 = !DILocation(line: 398, column: 21, scope: !3305)
!3309 = !DILocation(line: 398, column: 19, scope: !3305)
!3310 = !DILocation(line: 398, column: 7, scope: !3299)
!3311 = !DILocation(line: 400, column: 8, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !1, line: 400, column: 8)
!3313 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 398, column: 26)
!3314 = !DILocation(line: 400, column: 8, scope: !3313)
!3315 = !DILocation(line: 401, column: 9, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3312, file: !1, line: 400, column: 14)
!3317 = !DILocation(line: 402, column: 9, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3316, file: !1, line: 402, column: 9)
!3319 = !DILocation(line: 402, column: 9, scope: !3316)
!3320 = !DILocation(line: 404, column: 31, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 402, column: 21)
!3322 = !DILocation(line: 404, column: 37, scope: !3321)
!3323 = !DILocation(line: 404, column: 35, scope: !3321)
!3324 = !DILocation(line: 404, column: 45, scope: !3321)
!3325 = !DILocation(line: 404, column: 52, scope: !3321)
!3326 = !DILocation(line: 404, column: 50, scope: !3321)
!3327 = !DILocation(line: 404, column: 14, scope: !3321)
!3328 = !DILocation(line: 404, column: 11, scope: !3321)
!3329 = !DILocation(line: 405, column: 5, scope: !3321)
!3330 = !DILocation(line: 406, column: 14, scope: !3316)
!3331 = !DILocation(line: 406, column: 12, scope: !3316)
!3332 = !DILocation(line: 406, column: 29, scope: !3316)
!3333 = !DILocation(line: 406, column: 27, scope: !3316)
!3334 = !DILocation(line: 407, column: 37, scope: !3316)
!3335 = !DILocation(line: 407, column: 43, scope: !3316)
!3336 = !DILocation(line: 407, column: 41, scope: !3316)
!3337 = !DILocation(line: 407, column: 49, scope: !3316)
!3338 = !DILocation(line: 407, column: 12, scope: !3316)
!3339 = !DILocation(line: 407, column: 66, scope: !3316)
!3340 = !DILocation(line: 407, column: 64, scope: !3316)
!3341 = !DILocation(line: 407, column: 10, scope: !3316)
!3342 = !DILocation(line: 408, column: 20, scope: !3316)
!3343 = !DILocation(line: 408, column: 26, scope: !3316)
!3344 = !DILocation(line: 408, column: 24, scope: !3316)
!3345 = !DILocation(line: 408, column: 17, scope: !3316)
!3346 = !DILocation(line: 408, column: 9, scope: !3316)
!3347 = !DILocation(line: 409, column: 5, scope: !3316)
!3348 = !DILocation(line: 413, column: 13, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3313, file: !1, line: 413, column: 4)
!3350 = !DILocation(line: 413, column: 11, scope: !3349)
!3351 = !DILocation(line: 413, column: 26, scope: !3349)
!3352 = !DILocation(line: 413, column: 24, scope: !3349)
!3353 = !DILocation(line: 413, column: 9, scope: !3349)
!3354 = !DILocation(line: 413, column: 34, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 413, column: 4)
!3356 = !DILocation(line: 413, column: 39, scope: !3355)
!3357 = !DILocation(line: 413, column: 37, scope: !3355)
!3358 = !DILocation(line: 413, column: 4, scope: !3349)
!3359 = !DILocation(line: 414, column: 9, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !1, line: 414, column: 9)
!3361 = distinct !DILexicalBlock(scope: !3355, file: !1, line: 413, column: 90)
!3362 = !DILocation(line: 414, column: 9, scope: !3361)
!3363 = !DILocation(line: 415, column: 10, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !1, line: 415, column: 10)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !1, line: 414, column: 21)
!3366 = !DILocation(line: 415, column: 22, scope: !3364)
!3367 = !DILocation(line: 415, column: 29, scope: !3364)
!3368 = !DILocation(line: 415, column: 19, scope: !3364)
!3369 = !DILocation(line: 415, column: 10, scope: !3365)
!3370 = !DILocation(line: 415, column: 62, scope: !3364)
!3371 = !DILocation(line: 415, column: 69, scope: !3364)
!3372 = !DILocation(line: 415, column: 60, scope: !3364)
!3373 = !DILocation(line: 415, column: 33, scope: !3364)
!3374 = !DILocation(line: 416, column: 5, scope: !3365)
!3375 = !DILocation(line: 417, column: 40, scope: !3361)
!3376 = !DILocation(line: 417, column: 44, scope: !3361)
!3377 = !DILocation(line: 417, column: 47, scope: !3361)
!3378 = !DILocation(line: 417, column: 50, scope: !3361)
!3379 = !DILocation(line: 417, column: 56, scope: !3361)
!3380 = !DILocation(line: 417, column: 54, scope: !3361)
!3381 = !DILocation(line: 417, column: 10, scope: !3361)
!3382 = !DILocation(line: 417, column: 7, scope: !3361)
!3383 = !DILocation(line: 418, column: 9, scope: !3361)
!3384 = !DILocation(line: 419, column: 4, scope: !3361)
!3385 = !DILocation(line: 413, column: 46, scope: !3355)
!3386 = !DILocation(line: 413, column: 79, scope: !3355)
!3387 = !DILocation(line: 413, column: 85, scope: !3355)
!3388 = !DILocation(line: 413, column: 83, scope: !3355)
!3389 = !DILocation(line: 413, column: 56, scope: !3355)
!3390 = !DILocation(line: 413, column: 53, scope: !3355)
!3391 = !DILocation(line: 413, column: 4, scope: !3355)
!3392 = distinct !{!3392, !3358, !3393}
!3393 = !DILocation(line: 419, column: 4, scope: !3349)
!3394 = !DILocation(line: 420, column: 9, scope: !3313)
!3395 = !DILocation(line: 420, column: 13, scope: !3313)
!3396 = !DILocation(line: 420, column: 27, scope: !3313)
!3397 = !DILocation(line: 420, column: 25, scope: !3313)
!3398 = !DILocation(line: 420, column: 6, scope: !3313)
!3399 = !DILocation(line: 421, column: 8, scope: !3313)
!3400 = !DILocation(line: 421, column: 6, scope: !3313)
!3401 = !DILocation(line: 422, column: 9, scope: !3313)
!3402 = !DILocation(line: 423, column: 13, scope: !3313)
!3403 = !DILocation(line: 423, column: 11, scope: !3313)
!3404 = !DILocation(line: 423, column: 28, scope: !3313)
!3405 = !DILocation(line: 423, column: 26, scope: !3313)
!3406 = !DILocation(line: 424, column: 36, scope: !3313)
!3407 = !DILocation(line: 424, column: 42, scope: !3313)
!3408 = !DILocation(line: 424, column: 40, scope: !3313)
!3409 = !DILocation(line: 424, column: 48, scope: !3313)
!3410 = !DILocation(line: 424, column: 11, scope: !3313)
!3411 = !DILocation(line: 424, column: 65, scope: !3313)
!3412 = !DILocation(line: 424, column: 63, scope: !3313)
!3413 = !DILocation(line: 424, column: 9, scope: !3313)
!3414 = !DILocation(line: 425, column: 19, scope: !3313)
!3415 = !DILocation(line: 425, column: 25, scope: !3313)
!3416 = !DILocation(line: 425, column: 23, scope: !3313)
!3417 = !DILocation(line: 425, column: 16, scope: !3313)
!3418 = !DILocation(line: 425, column: 8, scope: !3313)
!3419 = !DILocation(line: 427, column: 8, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3313, file: !1, line: 427, column: 8)
!3421 = !DILocation(line: 427, column: 10, scope: !3420)
!3422 = !DILocation(line: 427, column: 8, scope: !3313)
!3423 = !DILocation(line: 427, column: 16, scope: !3420)
!3424 = !DILocation(line: 428, column: 3, scope: !3313)
!3425 = !DILocation(line: 429, column: 12, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 429, column: 12)
!3427 = !DILocation(line: 429, column: 16, scope: !3426)
!3428 = !DILocation(line: 429, column: 20, scope: !3426)
!3429 = !DILocation(line: 429, column: 27, scope: !3426)
!3430 = !DILocation(line: 429, column: 30, scope: !3426)
!3431 = !DILocation(line: 429, column: 34, scope: !3426)
!3432 = !DILocation(line: 429, column: 38, scope: !3426)
!3433 = !DILocation(line: 429, column: 12, scope: !3305)
!3434 = !DILocation(line: 430, column: 11, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3426, file: !1, line: 429, column: 46)
!3436 = !DILocation(line: 430, column: 13, scope: !3435)
!3437 = !DILocation(line: 430, column: 9, scope: !3435)
!3438 = !DILocation(line: 430, column: 25, scope: !3435)
!3439 = !DILocation(line: 430, column: 28, scope: !3435)
!3440 = !DILocation(line: 430, column: 23, scope: !3435)
!3441 = !DILocation(line: 431, column: 3, scope: !3435)
!3442 = !DILocation(line: 432, column: 2, scope: !3299)
!3443 = !DILocation(line: 396, column: 36, scope: !3295)
!3444 = !DILocation(line: 396, column: 33, scope: !3295)
!3445 = !DILocation(line: 396, column: 74, scope: !3295)
!3446 = !DILocation(line: 396, column: 80, scope: !3295)
!3447 = !DILocation(line: 396, column: 78, scope: !3295)
!3448 = !DILocation(line: 396, column: 51, scope: !3295)
!3449 = !DILocation(line: 396, column: 48, scope: !3295)
!3450 = !DILocation(line: 396, column: 2, scope: !3295)
!3451 = distinct !{!3451, !3297, !3452}
!3452 = !DILocation(line: 432, column: 2, scope: !3291)
!3453 = !DILocation(line: 435, column: 11, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3188, file: !1, line: 435, column: 2)
!3455 = !DILocation(line: 435, column: 9, scope: !3454)
!3456 = !DILocation(line: 435, column: 24, scope: !3454)
!3457 = !DILocation(line: 435, column: 22, scope: !3454)
!3458 = !DILocation(line: 435, column: 7, scope: !3454)
!3459 = !DILocation(line: 435, column: 32, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3454, file: !1, line: 435, column: 2)
!3461 = !DILocation(line: 435, column: 36, scope: !3460)
!3462 = !DILocation(line: 435, column: 40, scope: !3460)
!3463 = !DILocation(line: 435, column: 43, scope: !3460)
!3464 = !DILocation(line: 435, column: 45, scope: !3460)
!3465 = !DILocation(line: 0, scope: !3460)
!3466 = !DILocation(line: 435, column: 2, scope: !3454)
!3467 = !DILocation(line: 436, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !1, line: 436, column: 7)
!3469 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 435, column: 95)
!3470 = !DILocation(line: 436, column: 7, scope: !3469)
!3471 = !DILocation(line: 437, column: 8, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !1, line: 437, column: 8)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !1, line: 436, column: 19)
!3474 = !DILocation(line: 437, column: 20, scope: !3472)
!3475 = !DILocation(line: 437, column: 27, scope: !3472)
!3476 = !DILocation(line: 437, column: 17, scope: !3472)
!3477 = !DILocation(line: 437, column: 8, scope: !3473)
!3478 = !DILocation(line: 437, column: 60, scope: !3472)
!3479 = !DILocation(line: 437, column: 67, scope: !3472)
!3480 = !DILocation(line: 437, column: 58, scope: !3472)
!3481 = !DILocation(line: 437, column: 31, scope: !3472)
!3482 = !DILocation(line: 438, column: 3, scope: !3473)
!3483 = !DILocation(line: 440, column: 38, scope: !3469)
!3484 = !DILocation(line: 440, column: 42, scope: !3469)
!3485 = !DILocation(line: 440, column: 45, scope: !3469)
!3486 = !DILocation(line: 440, column: 48, scope: !3469)
!3487 = !DILocation(line: 440, column: 54, scope: !3469)
!3488 = !DILocation(line: 440, column: 52, scope: !3469)
!3489 = !DILocation(line: 440, column: 8, scope: !3469)
!3490 = !DILocation(line: 440, column: 5, scope: !3469)
!3491 = !DILocation(line: 441, column: 2, scope: !3469)
!3492 = !DILocation(line: 435, column: 51, scope: !3460)
!3493 = !DILocation(line: 435, column: 84, scope: !3460)
!3494 = !DILocation(line: 435, column: 90, scope: !3460)
!3495 = !DILocation(line: 435, column: 88, scope: !3460)
!3496 = !DILocation(line: 435, column: 61, scope: !3460)
!3497 = !DILocation(line: 435, column: 58, scope: !3460)
!3498 = !DILocation(line: 435, column: 2, scope: !3460)
!3499 = distinct !{!3499, !3466, !3500}
!3500 = !DILocation(line: 441, column: 2, scope: !3454)
!3501 = !DILocation(line: 443, column: 2, scope: !3188)
!3502 = !DILocation(line: 445, column: 9, scope: !3188)
!3503 = !DILocation(line: 445, column: 2, scope: !3188)
!3504 = distinct !DISubprogram(name: "text_draw", scope: !1, file: !1, line: 448, type: !3505, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{null, !277, !372, !244, !244, !244, !244, !839}
!3507 = !DILocalVariable(name: "st", arg: 1, scope: !3504, file: !1, line: 448, type: !277)
!3508 = !DILocation(line: 448, column: 34, scope: !3504)
!3509 = !DILocalVariable(name: "str", arg: 2, scope: !3504, file: !1, line: 448, type: !372)
!3510 = !DILocation(line: 448, column: 44, scope: !3504)
!3511 = !DILocalVariable(name: "cshift", arg: 3, scope: !3504, file: !1, line: 448, type: !244)
!3512 = !DILocation(line: 448, column: 53, scope: !3504)
!3513 = !DILocalVariable(name: "maxwidth", arg: 4, scope: !3504, file: !1, line: 448, type: !244)
!3514 = !DILocation(line: 448, column: 65, scope: !3504)
!3515 = !DILocalVariable(name: "x", arg: 5, scope: !3504, file: !1, line: 448, type: !244)
!3516 = !DILocation(line: 448, column: 79, scope: !3504)
!3517 = !DILocalVariable(name: "y", arg: 6, scope: !3504, file: !1, line: 448, type: !244)
!3518 = !DILocation(line: 448, column: 86, scope: !3504)
!3519 = !DILocalVariable(name: "format", arg: 7, scope: !3504, file: !1, line: 448, type: !839)
!3520 = !DILocation(line: 448, column: 101, scope: !3504)
!3521 = !DILocalVariable(name: "use_syntax", scope: !3504, file: !1, line: 450, type: !1752)
!3522 = !DILocation(line: 450, column: 13, scope: !3504)
!3523 = !DILocation(line: 450, column: 27, scope: !3504)
!3524 = !DILocation(line: 450, column: 31, scope: !3504)
!3525 = !DILocation(line: 450, column: 42, scope: !3504)
!3526 = !DILocation(line: 450, column: 45, scope: !3504)
!3527 = !DILocation(line: 0, scope: !3504)
!3528 = !DILocation(line: 450, column: 26, scope: !3504)
!3529 = !DILocalVariable(name: "fs", scope: !3504, file: !1, line: 451, type: !3214)
!3530 = !DILocation(line: 451, column: 16, scope: !3504)
!3531 = !DILocalVariable(name: "columns", scope: !3504, file: !1, line: 452, type: !244)
!3532 = !DILocation(line: 452, column: 6, scope: !3504)
!3533 = !DILocalVariable(name: "size", scope: !3504, file: !1, line: 452, type: !244)
!3534 = !DILocation(line: 452, column: 15, scope: !3504)
!3535 = !DILocalVariable(name: "n", scope: !3504, file: !1, line: 452, type: !244)
!3536 = !DILocation(line: 452, column: 21, scope: !3504)
!3537 = !DILocalVariable(name: "w", scope: !3504, file: !1, line: 452, type: !244)
!3538 = !DILocation(line: 452, column: 24, scope: !3504)
!3539 = !DILocalVariable(name: "padding", scope: !3504, file: !1, line: 452, type: !244)
!3540 = !DILocation(line: 452, column: 31, scope: !3504)
!3541 = !DILocalVariable(name: "amount", scope: !3504, file: !1, line: 452, type: !244)
!3542 = !DILocation(line: 452, column: 40, scope: !3504)
!3543 = !DILocalVariable(name: "in", scope: !3504, file: !1, line: 453, type: !839)
!3544 = !DILocation(line: 453, column: 14, scope: !3504)
!3545 = !DILocation(line: 455, column: 26, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 455, column: 2)
!3547 = !DILocation(line: 455, column: 35, scope: !3546)
!3548 = !DILocation(line: 455, column: 11, scope: !3546)
!3549 = !DILocation(line: 455, column: 9, scope: !3546)
!3550 = !DILocation(line: 455, column: 50, scope: !3546)
!3551 = !DILocation(line: 455, column: 45, scope: !3546)
!3552 = !DILocation(line: 455, column: 7, scope: !3546)
!3553 = !DILocation(line: 455, column: 55, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3546, file: !1, line: 455, column: 2)
!3555 = !DILocation(line: 455, column: 57, scope: !3554)
!3556 = !DILocation(line: 455, column: 2, scope: !3546)
!3557 = !DILocation(line: 456, column: 42, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3554, file: !1, line: 455, column: 67)
!3559 = !DILocation(line: 456, column: 13, scope: !3558)
!3560 = !DILocation(line: 456, column: 11, scope: !3558)
!3561 = !DILocation(line: 457, column: 33, scope: !3558)
!3562 = !DILocation(line: 457, column: 10, scope: !3558)
!3563 = !DILocation(line: 457, column: 8, scope: !3558)
!3564 = !DILocation(line: 459, column: 8, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 459, column: 7)
!3566 = !DILocation(line: 459, column: 7, scope: !3558)
!3567 = !DILocation(line: 460, column: 8, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !1, line: 460, column: 8)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !1, line: 459, column: 12)
!3570 = !DILocation(line: 460, column: 13, scope: !3568)
!3571 = !DILocation(line: 460, column: 10, scope: !3568)
!3572 = !DILocation(line: 460, column: 8, scope: !3569)
!3573 = !DILocation(line: 461, column: 15, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3568, file: !1, line: 460, column: 21)
!3575 = !DILocation(line: 461, column: 19, scope: !3574)
!3576 = !DILocation(line: 461, column: 17, scope: !3574)
!3577 = !DILocation(line: 461, column: 13, scope: !3574)
!3578 = !DILocation(line: 462, column: 10, scope: !3574)
!3579 = !DILocation(line: 462, column: 8, scope: !3574)
!3580 = !DILocation(line: 463, column: 4, scope: !3574)
!3581 = !DILocation(line: 464, column: 13, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3568, file: !1, line: 464, column: 13)
!3583 = !DILocation(line: 464, column: 13, scope: !3568)
!3584 = !DILocation(line: 465, column: 11, scope: !3582)
!3585 = !DILocation(line: 465, column: 5, scope: !3582)
!3586 = !DILocation(line: 466, column: 3, scope: !3569)
!3587 = !DILocation(line: 467, column: 7, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 467, column: 7)
!3589 = !DILocation(line: 467, column: 7, scope: !3558)
!3590 = !DILocation(line: 468, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !1, line: 468, column: 8)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 467, column: 11)
!3593 = !DILocation(line: 468, column: 17, scope: !3591)
!3594 = !DILocation(line: 468, column: 20, scope: !3591)
!3595 = !DILocation(line: 468, column: 24, scope: !3591)
!3596 = !DILocation(line: 468, column: 22, scope: !3591)
!3597 = !DILocation(line: 468, column: 34, scope: !3591)
!3598 = !DILocation(line: 468, column: 43, scope: !3591)
!3599 = !DILocation(line: 468, column: 41, scope: !3591)
!3600 = !DILocation(line: 468, column: 32, scope: !3591)
!3601 = !DILocation(line: 468, column: 8, scope: !3592)
!3602 = !DILocation(line: 469, column: 5, scope: !3591)
!3603 = !DILocation(line: 470, column: 10, scope: !3592)
!3604 = !DILocation(line: 471, column: 3, scope: !3592)
!3605 = !DILocation(line: 473, column: 8, scope: !3558)
!3606 = !DILocation(line: 473, column: 5, scope: !3558)
!3607 = !DILocation(line: 474, column: 10, scope: !3558)
!3608 = !DILocation(line: 474, column: 7, scope: !3558)
!3609 = !DILocation(line: 475, column: 2, scope: !3558)
!3610 = !DILocation(line: 455, column: 63, scope: !3554)
!3611 = !DILocation(line: 455, column: 2, scope: !3554)
!3612 = distinct !{!3612, !3556, !3613}
!3613 = !DILocation(line: 475, column: 2, scope: !3546)
!3614 = !DILocation(line: 476, column: 7, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 476, column: 6)
!3616 = !DILocation(line: 476, column: 6, scope: !3504)
!3617 = !DILocation(line: 477, column: 3, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 476, column: 11)
!3619 = !DILocation(line: 478, column: 3, scope: !3618)
!3620 = !DILocation(line: 481, column: 7, scope: !3504)
!3621 = !DILocation(line: 481, column: 11, scope: !3504)
!3622 = !DILocation(line: 481, column: 20, scope: !3504)
!3623 = !DILocation(line: 481, column: 18, scope: !3504)
!3624 = !DILocation(line: 481, column: 4, scope: !3504)
!3625 = !DILocation(line: 483, column: 6, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 483, column: 6)
!3627 = !DILocation(line: 483, column: 6, scope: !3504)
!3628 = !DILocalVariable(name: "a", scope: !3629, file: !1, line: 484, type: !244)
!3629 = distinct !DILexicalBlock(scope: !3626, file: !1, line: 483, column: 18)
!3630 = !DILocation(line: 484, column: 7, scope: !3629)
!3631 = !DILocalVariable(name: "str_shift", scope: !3629, file: !1, line: 484, type: !244)
!3632 = !DILocation(line: 484, column: 10, scope: !3629)
!3633 = !DILocalVariable(name: "fmt_prev", scope: !3629, file: !1, line: 485, type: !261)
!3634 = !DILocation(line: 485, column: 8, scope: !3629)
!3635 = !DILocation(line: 487, column: 10, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3629, file: !1, line: 487, column: 3)
!3637 = !DILocation(line: 487, column: 8, scope: !3636)
!3638 = !DILocation(line: 487, column: 15, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 487, column: 3)
!3640 = !DILocation(line: 487, column: 19, scope: !3639)
!3641 = !DILocation(line: 487, column: 17, scope: !3639)
!3642 = !DILocation(line: 487, column: 3, scope: !3636)
!3643 = !DILocation(line: 488, column: 8, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !1, line: 488, column: 8)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !1, line: 487, column: 32)
!3646 = !DILocation(line: 488, column: 15, scope: !3644)
!3647 = !DILocation(line: 488, column: 21, scope: !3644)
!3648 = !DILocation(line: 488, column: 18, scope: !3644)
!3649 = !DILocation(line: 488, column: 8, scope: !3645)
!3650 = !DILocation(line: 488, column: 60, scope: !3644)
!3651 = !DILocation(line: 488, column: 67, scope: !3644)
!3652 = !DILocation(line: 488, column: 58, scope: !3644)
!3653 = !DILocation(line: 488, column: 31, scope: !3644)
!3654 = !DILocation(line: 489, column: 39, scope: !3645)
!3655 = !DILocation(line: 489, column: 43, scope: !3645)
!3656 = !DILocation(line: 489, column: 46, scope: !3645)
!3657 = !DILocation(line: 489, column: 49, scope: !3645)
!3658 = !DILocation(line: 489, column: 54, scope: !3645)
!3659 = !DILocation(line: 489, column: 52, scope: !3645)
!3660 = !DILocation(line: 489, column: 9, scope: !3645)
!3661 = !DILocation(line: 489, column: 6, scope: !3645)
!3662 = !DILocation(line: 490, column: 40, scope: !3645)
!3663 = !DILocation(line: 490, column: 45, scope: !3645)
!3664 = !DILocation(line: 490, column: 43, scope: !3645)
!3665 = !DILocation(line: 490, column: 17, scope: !3645)
!3666 = !DILocation(line: 490, column: 14, scope: !3645)
!3667 = !DILocation(line: 491, column: 3, scope: !3645)
!3668 = !DILocation(line: 487, column: 28, scope: !3639)
!3669 = !DILocation(line: 487, column: 3, scope: !3639)
!3670 = distinct !{!3670, !3642, !3671}
!3671 = !DILocation(line: 491, column: 3, scope: !3636)
!3672 = !DILocation(line: 492, column: 2, scope: !3629)
!3673 = !DILocation(line: 494, column: 18, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3626, file: !1, line: 493, column: 7)
!3675 = !DILocation(line: 494, column: 22, scope: !3674)
!3676 = !DILocation(line: 494, column: 25, scope: !3674)
!3677 = !DILocation(line: 494, column: 28, scope: !3674)
!3678 = !DILocation(line: 494, column: 3, scope: !3674)
!3679 = !DILocation(line: 497, column: 2, scope: !3504)
!3680 = !DILocation(line: 498, column: 1, scope: !3504)
!3681 = distinct !DISubprogram(name: "draw_brackets", scope: !1, file: !1, line: 1189, type: !1401, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!3682 = !DILocalVariable(name: "st", arg: 1, scope: !3681, file: !1, line: 1189, type: !277)
!3683 = !DILocation(line: 1189, column: 38, scope: !3681)
!3684 = !DILocalVariable(name: "ar", arg: 2, scope: !3681, file: !1, line: 1189, type: !439)
!3685 = !DILocation(line: 1189, column: 51, scope: !3681)
!3686 = !DILocalVariable(name: "startl", scope: !3681, file: !1, line: 1191, type: !377)
!3687 = !DILocation(line: 1191, column: 12, scope: !3681)
!3688 = !DILocalVariable(name: "endl", scope: !3681, file: !1, line: 1191, type: !377)
!3689 = !DILocation(line: 1191, column: 21, scope: !3681)
!3690 = !DILocalVariable(name: "linep", scope: !3681, file: !1, line: 1191, type: !377)
!3691 = !DILocation(line: 1191, column: 28, scope: !3681)
!3692 = !DILocalVariable(name: "text", scope: !3681, file: !1, line: 1192, type: !571)
!3693 = !DILocation(line: 1192, column: 8, scope: !3681)
!3694 = !DILocation(line: 1192, column: 15, scope: !3681)
!3695 = !DILocation(line: 1192, column: 19, scope: !3681)
!3696 = !DILocalVariable(name: "b", scope: !3681, file: !1, line: 1193, type: !244)
!3697 = !DILocation(line: 1193, column: 6, scope: !3681)
!3698 = !DILocalVariable(name: "fc", scope: !3681, file: !1, line: 1193, type: !244)
!3699 = !DILocation(line: 1193, column: 9, scope: !3681)
!3700 = !DILocalVariable(name: "find", scope: !3681, file: !1, line: 1193, type: !244)
!3701 = !DILocation(line: 1193, column: 13, scope: !3681)
!3702 = !DILocalVariable(name: "stack", scope: !3681, file: !1, line: 1193, type: !244)
!3703 = !DILocation(line: 1193, column: 19, scope: !3681)
!3704 = !DILocalVariable(name: "viewc", scope: !3681, file: !1, line: 1193, type: !244)
!3705 = !DILocation(line: 1193, column: 26, scope: !3681)
!3706 = !DILocalVariable(name: "viewl", scope: !3681, file: !1, line: 1193, type: !244)
!3707 = !DILocation(line: 1193, column: 33, scope: !3681)
!3708 = !DILocalVariable(name: "offl", scope: !3681, file: !1, line: 1193, type: !244)
!3709 = !DILocation(line: 1193, column: 40, scope: !3681)
!3710 = !DILocalVariable(name: "offc", scope: !3681, file: !1, line: 1193, type: !244)
!3711 = !DILocation(line: 1193, column: 46, scope: !3681)
!3712 = !DILocalVariable(name: "x", scope: !3681, file: !1, line: 1193, type: !244)
!3713 = !DILocation(line: 1193, column: 52, scope: !3681)
!3714 = !DILocalVariable(name: "y", scope: !3681, file: !1, line: 1193, type: !244)
!3715 = !DILocation(line: 1193, column: 55, scope: !3681)
!3716 = !DILocalVariable(name: "startc", scope: !3681, file: !1, line: 1194, type: !244)
!3717 = !DILocation(line: 1194, column: 6, scope: !3681)
!3718 = !DILocalVariable(name: "endc", scope: !3681, file: !1, line: 1194, type: !244)
!3719 = !DILocation(line: 1194, column: 14, scope: !3681)
!3720 = !DILocalVariable(name: "c", scope: !3681, file: !1, line: 1194, type: !244)
!3721 = !DILocation(line: 1194, column: 20, scope: !3681)
!3722 = !DILocalVariable(name: "ch", scope: !3681, file: !1, line: 1196, type: !261)
!3723 = !DILocation(line: 1196, column: 7, scope: !3681)
!3724 = !DILocation(line: 1199, column: 7, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1199, column: 6)
!3726 = !DILocation(line: 1199, column: 13, scope: !3725)
!3727 = !DILocation(line: 1199, column: 18, scope: !3725)
!3728 = !DILocation(line: 1199, column: 22, scope: !3725)
!3729 = !DILocation(line: 1199, column: 26, scope: !3725)
!3730 = !DILocation(line: 1199, column: 6, scope: !3681)
!3731 = !DILocation(line: 1199, column: 38, scope: !3725)
!3732 = !DILocation(line: 1201, column: 11, scope: !3681)
!3733 = !DILocation(line: 1201, column: 17, scope: !3681)
!3734 = !DILocation(line: 1201, column: 9, scope: !3681)
!3735 = !DILocation(line: 1202, column: 11, scope: !3681)
!3736 = !DILocation(line: 1202, column: 17, scope: !3681)
!3737 = !DILocation(line: 1202, column: 9, scope: !3681)
!3738 = !DILocation(line: 1203, column: 25, scope: !3681)
!3739 = !DILocation(line: 1203, column: 33, scope: !3681)
!3740 = !DILocation(line: 1203, column: 38, scope: !3681)
!3741 = !DILocation(line: 1203, column: 6, scope: !3681)
!3742 = !DILocation(line: 1203, column: 4, scope: !3681)
!3743 = !DILocation(line: 1204, column: 6, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1204, column: 6)
!3745 = !DILocation(line: 1204, column: 8, scope: !3744)
!3746 = !DILocation(line: 1204, column: 13, scope: !3744)
!3747 = !DILocation(line: 1204, column: 16, scope: !3744)
!3748 = !DILocation(line: 1204, column: 23, scope: !3744)
!3749 = !DILocation(line: 1204, column: 6, scope: !3681)
!3750 = !DILocation(line: 1204, column: 51, scope: !3744)
!3751 = !DILocation(line: 1204, column: 59, scope: !3744)
!3752 = !DILocation(line: 1204, column: 64, scope: !3744)
!3753 = !DILocation(line: 1204, column: 32, scope: !3744)
!3754 = !DILocation(line: 1204, column: 30, scope: !3744)
!3755 = !DILocation(line: 1204, column: 28, scope: !3744)
!3756 = !DILocation(line: 1205, column: 6, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1205, column: 6)
!3758 = !DILocation(line: 1205, column: 8, scope: !3757)
!3759 = !DILocation(line: 1205, column: 6, scope: !3681)
!3760 = !DILocation(line: 1205, column: 14, scope: !3757)
!3761 = !DILocation(line: 1207, column: 10, scope: !3681)
!3762 = !DILocation(line: 1207, column: 8, scope: !3681)
!3763 = !DILocation(line: 1208, column: 6, scope: !3681)
!3764 = !DILocation(line: 1208, column: 4, scope: !3681)
!3765 = !DILocation(line: 1209, column: 32, scope: !3681)
!3766 = !DILocation(line: 1209, column: 39, scope: !3681)
!3767 = !DILocation(line: 1209, column: 45, scope: !3681)
!3768 = !DILocation(line: 1209, column: 7, scope: !3681)
!3769 = !DILocation(line: 1209, column: 5, scope: !3681)
!3770 = !DILocation(line: 1210, column: 7, scope: !3681)
!3771 = !DILocation(line: 1211, column: 7, scope: !3681)
!3772 = !DILocation(line: 1212, column: 10, scope: !3681)
!3773 = !DILocation(line: 1212, column: 9, scope: !3681)
!3774 = !DILocation(line: 1212, column: 7, scope: !3681)
!3775 = !DILocation(line: 1213, column: 8, scope: !3681)
!3776 = !DILocation(line: 1216, column: 7, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1216, column: 6)
!3778 = !DILocation(line: 1216, column: 14, scope: !3777)
!3779 = !DILocation(line: 1216, column: 21, scope: !3777)
!3780 = !DILocation(line: 1216, column: 24, scope: !3777)
!3781 = !DILocation(line: 1216, column: 31, scope: !3777)
!3782 = !DILocation(line: 1216, column: 38, scope: !3777)
!3783 = !DILocation(line: 1216, column: 42, scope: !3777)
!3784 = !DILocation(line: 1216, column: 61, scope: !3777)
!3785 = !DILocation(line: 1216, column: 64, scope: !3777)
!3786 = !DILocation(line: 1216, column: 71, scope: !3777)
!3787 = !DILocation(line: 1216, column: 78, scope: !3777)
!3788 = !DILocation(line: 1216, column: 82, scope: !3777)
!3789 = !DILocation(line: 1216, column: 6, scope: !3681)
!3790 = !DILocation(line: 1217, column: 3, scope: !3777)
!3791 = !DILocation(line: 1219, column: 6, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1219, column: 6)
!3793 = !DILocation(line: 1219, column: 8, scope: !3792)
!3794 = !DILocation(line: 1219, column: 6, scope: !3681)
!3795 = !DILocation(line: 1221, column: 5, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !1, line: 1219, column: 13)
!3797 = !DILocation(line: 1222, column: 31, scope: !3796)
!3798 = !DILocation(line: 1222, column: 38, scope: !3796)
!3799 = !DILocation(line: 1222, column: 45, scope: !3796)
!3800 = !DILocation(line: 1222, column: 43, scope: !3796)
!3801 = !DILocation(line: 1222, column: 8, scope: !3796)
!3802 = !DILocation(line: 1222, column: 5, scope: !3796)
!3803 = !DILocation(line: 1223, column: 3, scope: !3796)
!3804 = !DILocation(line: 1223, column: 10, scope: !3796)
!3805 = !DILocation(line: 1224, column: 4, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3796, file: !1, line: 1223, column: 17)
!3807 = !DILocation(line: 1224, column: 11, scope: !3806)
!3808 = !DILocation(line: 1224, column: 15, scope: !3806)
!3809 = !DILocation(line: 1224, column: 22, scope: !3806)
!3810 = !DILocation(line: 1224, column: 13, scope: !3806)
!3811 = !DILocation(line: 1225, column: 9, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 1225, column: 9)
!3813 = distinct !DILexicalBlock(scope: !3806, file: !1, line: 1224, column: 27)
!3814 = !DILocation(line: 1225, column: 16, scope: !3812)
!3815 = !DILocation(line: 1225, column: 23, scope: !3812)
!3816 = !DILocation(line: 1225, column: 26, scope: !3812)
!3817 = !DILocation(line: 1225, column: 33, scope: !3812)
!3818 = !DILocation(line: 1225, column: 40, scope: !3812)
!3819 = !DILocation(line: 1225, column: 44, scope: !3812)
!3820 = !DILocation(line: 1225, column: 63, scope: !3812)
!3821 = !DILocation(line: 1225, column: 66, scope: !3812)
!3822 = !DILocation(line: 1225, column: 73, scope: !3812)
!3823 = !DILocation(line: 1225, column: 80, scope: !3812)
!3824 = !DILocation(line: 1225, column: 84, scope: !3812)
!3825 = !DILocation(line: 1225, column: 9, scope: !3813)
!3826 = !DILocation(line: 1226, column: 29, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3812, file: !1, line: 1225, column: 105)
!3828 = !DILocation(line: 1226, column: 36, scope: !3827)
!3829 = !DILocation(line: 1226, column: 41, scope: !3827)
!3830 = !DILocation(line: 1226, column: 10, scope: !3827)
!3831 = !DILocation(line: 1226, column: 8, scope: !3827)
!3832 = !DILocation(line: 1227, column: 10, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 1227, column: 10)
!3834 = !DILocation(line: 1227, column: 15, scope: !3833)
!3835 = !DILocation(line: 1227, column: 12, scope: !3833)
!3836 = !DILocation(line: 1227, column: 10, scope: !3827)
!3837 = !DILocation(line: 1228, column: 11, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !1, line: 1228, column: 11)
!3839 = distinct !DILexicalBlock(scope: !3833, file: !1, line: 1227, column: 21)
!3840 = !DILocation(line: 1228, column: 17, scope: !3838)
!3841 = !DILocation(line: 1228, column: 11, scope: !3839)
!3842 = !DILocation(line: 1229, column: 15, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3838, file: !1, line: 1228, column: 23)
!3844 = !DILocation(line: 1229, column: 13, scope: !3843)
!3845 = !DILocation(line: 1230, column: 15, scope: !3843)
!3846 = !DILocation(line: 1230, column: 13, scope: !3843)
!3847 = !DILocation(line: 1231, column: 8, scope: !3843)
!3848 = !DILocation(line: 1233, column: 12, scope: !3839)
!3849 = !DILocation(line: 1234, column: 6, scope: !3839)
!3850 = !DILocation(line: 1235, column: 15, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3833, file: !1, line: 1235, column: 15)
!3852 = !DILocation(line: 1235, column: 21, scope: !3851)
!3853 = !DILocation(line: 1235, column: 20, scope: !3851)
!3854 = !DILocation(line: 1235, column: 17, scope: !3851)
!3855 = !DILocation(line: 1235, column: 15, scope: !3833)
!3856 = !DILocation(line: 1236, column: 12, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3851, file: !1, line: 1235, column: 27)
!3858 = !DILocation(line: 1237, column: 6, scope: !3857)
!3859 = !DILocation(line: 1238, column: 5, scope: !3827)
!3860 = !DILocation(line: 1239, column: 7, scope: !3813)
!3861 = !DILocation(line: 1240, column: 33, scope: !3813)
!3862 = !DILocation(line: 1240, column: 40, scope: !3813)
!3863 = !DILocation(line: 1240, column: 47, scope: !3813)
!3864 = !DILocation(line: 1240, column: 45, scope: !3813)
!3865 = !DILocation(line: 1240, column: 10, scope: !3813)
!3866 = !DILocation(line: 1240, column: 7, scope: !3813)
!3867 = distinct !{!3867, !3805, !3868}
!3868 = !DILocation(line: 1241, column: 4, scope: !3806)
!3869 = !DILocation(line: 1242, column: 8, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3806, file: !1, line: 1242, column: 8)
!3871 = !DILocation(line: 1242, column: 8, scope: !3806)
!3872 = !DILocation(line: 1242, column: 14, scope: !3870)
!3873 = !DILocation(line: 1243, column: 12, scope: !3806)
!3874 = !DILocation(line: 1243, column: 19, scope: !3806)
!3875 = !DILocation(line: 1243, column: 10, scope: !3806)
!3876 = !DILocation(line: 1244, column: 6, scope: !3806)
!3877 = !DILocation(line: 1245, column: 7, scope: !3806)
!3878 = distinct !{!3878, !3803, !3879}
!3879 = !DILocation(line: 1246, column: 3, scope: !3796)
!3880 = !DILocation(line: 1247, column: 2, scope: !3796)
!3881 = !DILocation(line: 1250, column: 5, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3792, file: !1, line: 1248, column: 7)
!3883 = !DILocation(line: 1251, column: 7, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 1251, column: 7)
!3885 = !DILocation(line: 1251, column: 9, scope: !3884)
!3886 = !DILocation(line: 1251, column: 7, scope: !3882)
!3887 = !DILocation(line: 1251, column: 19, scope: !3884)
!3888 = !DILocation(line: 1251, column: 26, scope: !3884)
!3889 = !DILocation(line: 1251, column: 33, scope: !3884)
!3890 = !DILocation(line: 1251, column: 31, scope: !3884)
!3891 = !DILocation(line: 1251, column: 60, scope: !3884)
!3892 = !DILocation(line: 1251, column: 67, scope: !3884)
!3893 = !DILocation(line: 1251, column: 74, scope: !3884)
!3894 = !DILocation(line: 1251, column: 72, scope: !3884)
!3895 = !DILocation(line: 1251, column: 37, scope: !3884)
!3896 = !DILocation(line: 1251, column: 35, scope: !3884)
!3897 = !DILocation(line: 1251, column: 16, scope: !3884)
!3898 = !DILocation(line: 1251, column: 14, scope: !3884)
!3899 = !DILocation(line: 1252, column: 3, scope: !3882)
!3900 = !DILocation(line: 1252, column: 10, scope: !3882)
!3901 = !DILocation(line: 1253, column: 4, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 1252, column: 17)
!3903 = !DILocation(line: 1253, column: 11, scope: !3902)
!3904 = !DILocation(line: 1253, column: 14, scope: !3902)
!3905 = !DILocation(line: 1254, column: 9, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !1, line: 1254, column: 9)
!3907 = distinct !DILexicalBlock(scope: !3902, file: !1, line: 1253, column: 20)
!3908 = !DILocation(line: 1254, column: 16, scope: !3906)
!3909 = !DILocation(line: 1254, column: 23, scope: !3906)
!3910 = !DILocation(line: 1254, column: 26, scope: !3906)
!3911 = !DILocation(line: 1254, column: 33, scope: !3906)
!3912 = !DILocation(line: 1254, column: 40, scope: !3906)
!3913 = !DILocation(line: 1254, column: 44, scope: !3906)
!3914 = !DILocation(line: 1254, column: 63, scope: !3906)
!3915 = !DILocation(line: 1254, column: 66, scope: !3906)
!3916 = !DILocation(line: 1254, column: 73, scope: !3906)
!3917 = !DILocation(line: 1254, column: 80, scope: !3906)
!3918 = !DILocation(line: 1254, column: 84, scope: !3906)
!3919 = !DILocation(line: 1254, column: 9, scope: !3907)
!3920 = !DILocation(line: 1255, column: 29, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 1254, column: 105)
!3922 = !DILocation(line: 1255, column: 36, scope: !3921)
!3923 = !DILocation(line: 1255, column: 41, scope: !3921)
!3924 = !DILocation(line: 1255, column: 10, scope: !3921)
!3925 = !DILocation(line: 1255, column: 8, scope: !3921)
!3926 = !DILocation(line: 1256, column: 10, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3921, file: !1, line: 1256, column: 10)
!3928 = !DILocation(line: 1256, column: 15, scope: !3927)
!3929 = !DILocation(line: 1256, column: 12, scope: !3927)
!3930 = !DILocation(line: 1256, column: 10, scope: !3921)
!3931 = !DILocation(line: 1257, column: 11, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !1, line: 1257, column: 11)
!3933 = distinct !DILexicalBlock(scope: !3927, file: !1, line: 1256, column: 21)
!3934 = !DILocation(line: 1257, column: 17, scope: !3932)
!3935 = !DILocation(line: 1257, column: 11, scope: !3933)
!3936 = !DILocation(line: 1258, column: 15, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 1257, column: 23)
!3938 = !DILocation(line: 1258, column: 13, scope: !3937)
!3939 = !DILocation(line: 1259, column: 15, scope: !3937)
!3940 = !DILocation(line: 1259, column: 13, scope: !3937)
!3941 = !DILocation(line: 1260, column: 8, scope: !3937)
!3942 = !DILocation(line: 1262, column: 12, scope: !3933)
!3943 = !DILocation(line: 1263, column: 6, scope: !3933)
!3944 = !DILocation(line: 1264, column: 15, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3927, file: !1, line: 1264, column: 15)
!3946 = !DILocation(line: 1264, column: 21, scope: !3945)
!3947 = !DILocation(line: 1264, column: 20, scope: !3945)
!3948 = !DILocation(line: 1264, column: 17, scope: !3945)
!3949 = !DILocation(line: 1264, column: 15, scope: !3927)
!3950 = !DILocation(line: 1265, column: 12, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3945, file: !1, line: 1264, column: 27)
!3952 = !DILocation(line: 1266, column: 6, scope: !3951)
!3953 = !DILocation(line: 1267, column: 5, scope: !3921)
!3954 = !DILocation(line: 1268, column: 7, scope: !3907)
!3955 = !DILocation(line: 1269, column: 9, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3907, file: !1, line: 1269, column: 9)
!3957 = !DILocation(line: 1269, column: 11, scope: !3956)
!3958 = !DILocation(line: 1269, column: 9, scope: !3907)
!3959 = !DILocation(line: 1269, column: 21, scope: !3956)
!3960 = !DILocation(line: 1269, column: 28, scope: !3956)
!3961 = !DILocation(line: 1269, column: 35, scope: !3956)
!3962 = !DILocation(line: 1269, column: 33, scope: !3956)
!3963 = !DILocation(line: 1269, column: 62, scope: !3956)
!3964 = !DILocation(line: 1269, column: 69, scope: !3956)
!3965 = !DILocation(line: 1269, column: 76, scope: !3956)
!3966 = !DILocation(line: 1269, column: 74, scope: !3956)
!3967 = !DILocation(line: 1269, column: 39, scope: !3956)
!3968 = !DILocation(line: 1269, column: 37, scope: !3956)
!3969 = !DILocation(line: 1269, column: 18, scope: !3956)
!3970 = !DILocation(line: 1269, column: 16, scope: !3956)
!3971 = distinct !{!3971, !3901, !3972}
!3972 = !DILocation(line: 1270, column: 4, scope: !3902)
!3973 = !DILocation(line: 1271, column: 8, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3902, file: !1, line: 1271, column: 8)
!3975 = !DILocation(line: 1271, column: 8, scope: !3902)
!3976 = !DILocation(line: 1271, column: 14, scope: !3974)
!3977 = !DILocation(line: 1272, column: 12, scope: !3902)
!3978 = !DILocation(line: 1272, column: 19, scope: !3902)
!3979 = !DILocation(line: 1272, column: 10, scope: !3902)
!3980 = !DILocation(line: 1273, column: 8, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3902, file: !1, line: 1273, column: 8)
!3982 = !DILocation(line: 1273, column: 8, scope: !3902)
!3983 = !DILocation(line: 1274, column: 9, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 1274, column: 9)
!3985 = distinct !DILexicalBlock(scope: !3981, file: !1, line: 1273, column: 15)
!3986 = !DILocation(line: 1274, column: 16, scope: !3984)
!3987 = !DILocation(line: 1274, column: 9, scope: !3985)
!3988 = !DILocation(line: 1274, column: 36, scope: !3984)
!3989 = !DILocation(line: 1274, column: 43, scope: !3984)
!3990 = !DILocation(line: 1274, column: 29, scope: !3984)
!3991 = !DILocation(line: 1274, column: 51, scope: !3984)
!3992 = !DILocation(line: 1274, column: 27, scope: !3984)
!3993 = !DILocation(line: 1274, column: 24, scope: !3984)
!3994 = !DILocation(line: 1275, column: 13, scope: !3984)
!3995 = !DILocation(line: 1276, column: 9, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 1276, column: 9)
!3997 = !DILocation(line: 1276, column: 16, scope: !3996)
!3998 = !DILocation(line: 1276, column: 9, scope: !3985)
!3999 = !DILocation(line: 1276, column: 48, scope: !3996)
!4000 = !DILocation(line: 1276, column: 55, scope: !3996)
!4001 = !DILocation(line: 1276, column: 62, scope: !3996)
!4002 = !DILocation(line: 1276, column: 69, scope: !3996)
!4003 = !DILocation(line: 1276, column: 60, scope: !3996)
!4004 = !DILocation(line: 1276, column: 25, scope: !3996)
!4005 = !DILocation(line: 1276, column: 76, scope: !3996)
!4006 = !DILocation(line: 1276, column: 83, scope: !3996)
!4007 = !DILocation(line: 1276, column: 74, scope: !3996)
!4008 = !DILocation(line: 1276, column: 23, scope: !3996)
!4009 = !DILocation(line: 1276, column: 21, scope: !3996)
!4010 = !DILocation(line: 1277, column: 13, scope: !3996)
!4011 = !DILocation(line: 1278, column: 4, scope: !3985)
!4012 = distinct !{!4012, !3899, !4013}
!4013 = !DILocation(line: 1279, column: 3, scope: !3882)
!4014 = !DILocation(line: 1282, column: 7, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1282, column: 6)
!4016 = !DILocation(line: 1282, column: 12, scope: !4015)
!4017 = !DILocation(line: 1282, column: 15, scope: !4015)
!4018 = !DILocation(line: 1282, column: 20, scope: !4015)
!4019 = !DILocation(line: 1282, column: 6, scope: !3681)
!4020 = !DILocation(line: 1283, column: 3, scope: !4015)
!4021 = !DILocation(line: 1285, column: 2, scope: !3681)
!4022 = !DILocation(line: 1286, column: 6, scope: !3681)
!4023 = !DILocation(line: 1286, column: 10, scope: !3681)
!4024 = !DILocation(line: 1286, column: 24, scope: !3681)
!4025 = !DILocation(line: 1286, column: 37, scope: !3681)
!4026 = !DILocation(line: 1286, column: 35, scope: !3681)
!4027 = !DILocation(line: 1286, column: 48, scope: !3681)
!4028 = !DILocation(line: 1286, column: 4, scope: !3681)
!4029 = !DILocation(line: 1287, column: 6, scope: !3681)
!4030 = !DILocation(line: 1287, column: 10, scope: !3681)
!4031 = !DILocation(line: 1287, column: 17, scope: !3681)
!4032 = !DILocation(line: 1287, column: 21, scope: !3681)
!4033 = !DILocation(line: 1287, column: 15, scope: !3681)
!4034 = !DILocation(line: 1287, column: 4, scope: !3681)
!4035 = !DILocation(line: 1290, column: 7, scope: !3681)
!4036 = !DILocation(line: 1290, column: 15, scope: !3681)
!4037 = !DILocation(line: 1290, column: 20, scope: !3681)
!4038 = !DILocation(line: 1290, column: 5, scope: !3681)
!4039 = !DILocation(line: 1291, column: 14, scope: !3681)
!4040 = !DILocation(line: 1291, column: 18, scope: !3681)
!4041 = !DILocation(line: 1291, column: 22, scope: !3681)
!4042 = !DILocation(line: 1291, column: 30, scope: !3681)
!4043 = !DILocation(line: 1291, column: 2, scope: !3681)
!4044 = !DILocation(line: 1292, column: 28, scope: !3681)
!4045 = !DILocation(line: 1292, column: 32, scope: !3681)
!4046 = !DILocation(line: 1292, column: 40, scope: !3681)
!4047 = !DILocation(line: 1292, column: 46, scope: !3681)
!4048 = !DILocation(line: 1292, column: 10, scope: !3681)
!4049 = !DILocation(line: 1292, column: 56, scope: !3681)
!4050 = !DILocation(line: 1292, column: 60, scope: !3681)
!4051 = !DILocation(line: 1292, column: 54, scope: !3681)
!4052 = !DILocation(line: 1292, column: 67, scope: !3681)
!4053 = !DILocation(line: 1292, column: 65, scope: !3681)
!4054 = !DILocation(line: 1292, column: 8, scope: !3681)
!4055 = !DILocation(line: 1294, column: 6, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1294, column: 6)
!4057 = !DILocation(line: 1294, column: 12, scope: !4056)
!4058 = !DILocation(line: 1294, column: 6, scope: !3681)
!4059 = !DILocation(line: 1295, column: 24, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4056, file: !1, line: 1294, column: 18)
!4061 = !DILocation(line: 1295, column: 30, scope: !4060)
!4062 = !DILocation(line: 1295, column: 36, scope: !4060)
!4063 = !DILocation(line: 1295, column: 43, scope: !4060)
!4064 = !DILocation(line: 1295, column: 11, scope: !4060)
!4065 = !DILocation(line: 1295, column: 53, scope: !4060)
!4066 = !DILocation(line: 1295, column: 57, scope: !4060)
!4067 = !DILocation(line: 1295, column: 51, scope: !4060)
!4068 = !DILocation(line: 1295, column: 63, scope: !4060)
!4069 = !DILocation(line: 1295, column: 61, scope: !4060)
!4070 = !DILocation(line: 1295, column: 9, scope: !4060)
!4071 = !DILocation(line: 1297, column: 28, scope: !4060)
!4072 = !DILocation(line: 1297, column: 32, scope: !4060)
!4073 = !DILocation(line: 1297, column: 36, scope: !4060)
!4074 = !DILocation(line: 1297, column: 44, scope: !4060)
!4075 = !DILocation(line: 1297, column: 48, scope: !4060)
!4076 = !DILocation(line: 1297, column: 42, scope: !4060)
!4077 = !DILocation(line: 1297, column: 34, scope: !4060)
!4078 = !DILocation(line: 1297, column: 56, scope: !4060)
!4079 = !DILocation(line: 1297, column: 60, scope: !4060)
!4080 = !DILocation(line: 1297, column: 69, scope: !4060)
!4081 = !DILocation(line: 1297, column: 73, scope: !4060)
!4082 = !DILocation(line: 1297, column: 87, scope: !4060)
!4083 = !DILocation(line: 1297, column: 85, scope: !4060)
!4084 = !DILocation(line: 1297, column: 66, scope: !4060)
!4085 = !DILocation(line: 1297, column: 58, scope: !4060)
!4086 = !DILocation(line: 1297, column: 106, scope: !4060)
!4087 = !DILocation(line: 1297, column: 3, scope: !4060)
!4088 = !DILocation(line: 1298, column: 28, scope: !4060)
!4089 = !DILocation(line: 1298, column: 32, scope: !4060)
!4090 = !DILocation(line: 1298, column: 36, scope: !4060)
!4091 = !DILocation(line: 1298, column: 44, scope: !4060)
!4092 = !DILocation(line: 1298, column: 48, scope: !4060)
!4093 = !DILocation(line: 1298, column: 42, scope: !4060)
!4094 = !DILocation(line: 1298, column: 34, scope: !4060)
!4095 = !DILocation(line: 1298, column: 55, scope: !4060)
!4096 = !DILocation(line: 1298, column: 60, scope: !4060)
!4097 = !DILocation(line: 1298, column: 64, scope: !4060)
!4098 = !DILocation(line: 1298, column: 73, scope: !4060)
!4099 = !DILocation(line: 1298, column: 77, scope: !4060)
!4100 = !DILocation(line: 1298, column: 91, scope: !4060)
!4101 = !DILocation(line: 1298, column: 89, scope: !4060)
!4102 = !DILocation(line: 1298, column: 70, scope: !4060)
!4103 = !DILocation(line: 1298, column: 62, scope: !4060)
!4104 = !DILocation(line: 1298, column: 110, scope: !4060)
!4105 = !DILocation(line: 1298, column: 3, scope: !4060)
!4106 = !DILocation(line: 1299, column: 2, scope: !4060)
!4107 = !DILocation(line: 1302, column: 7, scope: !3681)
!4108 = !DILocation(line: 1302, column: 13, scope: !3681)
!4109 = !DILocation(line: 1302, column: 18, scope: !3681)
!4110 = !DILocation(line: 1302, column: 5, scope: !3681)
!4111 = !DILocation(line: 1303, column: 14, scope: !3681)
!4112 = !DILocation(line: 1303, column: 18, scope: !3681)
!4113 = !DILocation(line: 1303, column: 22, scope: !3681)
!4114 = !DILocation(line: 1303, column: 28, scope: !3681)
!4115 = !DILocation(line: 1303, column: 2, scope: !3681)
!4116 = !DILocation(line: 1304, column: 28, scope: !3681)
!4117 = !DILocation(line: 1304, column: 32, scope: !3681)
!4118 = !DILocation(line: 1304, column: 38, scope: !3681)
!4119 = !DILocation(line: 1304, column: 44, scope: !3681)
!4120 = !DILocation(line: 1304, column: 10, scope: !3681)
!4121 = !DILocation(line: 1304, column: 52, scope: !3681)
!4122 = !DILocation(line: 1304, column: 56, scope: !3681)
!4123 = !DILocation(line: 1304, column: 50, scope: !3681)
!4124 = !DILocation(line: 1304, column: 63, scope: !3681)
!4125 = !DILocation(line: 1304, column: 61, scope: !3681)
!4126 = !DILocation(line: 1304, column: 8, scope: !3681)
!4127 = !DILocation(line: 1306, column: 6, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1306, column: 6)
!4129 = !DILocation(line: 1306, column: 12, scope: !4128)
!4130 = !DILocation(line: 1306, column: 6, scope: !3681)
!4131 = !DILocation(line: 1307, column: 24, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !1, line: 1306, column: 18)
!4133 = !DILocation(line: 1307, column: 30, scope: !4132)
!4134 = !DILocation(line: 1307, column: 36, scope: !4132)
!4135 = !DILocation(line: 1307, column: 43, scope: !4132)
!4136 = !DILocation(line: 1307, column: 11, scope: !4132)
!4137 = !DILocation(line: 1307, column: 51, scope: !4132)
!4138 = !DILocation(line: 1307, column: 55, scope: !4132)
!4139 = !DILocation(line: 1307, column: 49, scope: !4132)
!4140 = !DILocation(line: 1307, column: 61, scope: !4132)
!4141 = !DILocation(line: 1307, column: 59, scope: !4132)
!4142 = !DILocation(line: 1307, column: 9, scope: !4132)
!4143 = !DILocation(line: 1309, column: 28, scope: !4132)
!4144 = !DILocation(line: 1309, column: 32, scope: !4132)
!4145 = !DILocation(line: 1309, column: 36, scope: !4132)
!4146 = !DILocation(line: 1309, column: 44, scope: !4132)
!4147 = !DILocation(line: 1309, column: 48, scope: !4132)
!4148 = !DILocation(line: 1309, column: 42, scope: !4132)
!4149 = !DILocation(line: 1309, column: 34, scope: !4132)
!4150 = !DILocation(line: 1309, column: 56, scope: !4132)
!4151 = !DILocation(line: 1309, column: 60, scope: !4132)
!4152 = !DILocation(line: 1309, column: 69, scope: !4132)
!4153 = !DILocation(line: 1309, column: 73, scope: !4132)
!4154 = !DILocation(line: 1309, column: 87, scope: !4132)
!4155 = !DILocation(line: 1309, column: 85, scope: !4132)
!4156 = !DILocation(line: 1309, column: 66, scope: !4132)
!4157 = !DILocation(line: 1309, column: 58, scope: !4132)
!4158 = !DILocation(line: 1309, column: 106, scope: !4132)
!4159 = !DILocation(line: 1309, column: 3, scope: !4132)
!4160 = !DILocation(line: 1310, column: 28, scope: !4132)
!4161 = !DILocation(line: 1310, column: 32, scope: !4132)
!4162 = !DILocation(line: 1310, column: 36, scope: !4132)
!4163 = !DILocation(line: 1310, column: 44, scope: !4132)
!4164 = !DILocation(line: 1310, column: 48, scope: !4132)
!4165 = !DILocation(line: 1310, column: 42, scope: !4132)
!4166 = !DILocation(line: 1310, column: 34, scope: !4132)
!4167 = !DILocation(line: 1310, column: 55, scope: !4132)
!4168 = !DILocation(line: 1310, column: 60, scope: !4132)
!4169 = !DILocation(line: 1310, column: 64, scope: !4132)
!4170 = !DILocation(line: 1310, column: 73, scope: !4132)
!4171 = !DILocation(line: 1310, column: 77, scope: !4132)
!4172 = !DILocation(line: 1310, column: 91, scope: !4132)
!4173 = !DILocation(line: 1310, column: 89, scope: !4132)
!4174 = !DILocation(line: 1310, column: 70, scope: !4132)
!4175 = !DILocation(line: 1310, column: 62, scope: !4132)
!4176 = !DILocation(line: 1310, column: 110, scope: !4132)
!4177 = !DILocation(line: 1310, column: 3, scope: !4132)
!4178 = !DILocation(line: 1311, column: 2, scope: !4132)
!4179 = !DILocation(line: 1312, column: 1, scope: !3681)
!4180 = distinct !DISubprogram(name: "draw_textscroll", scope: !1, file: !1, line: 885, type: !4181, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{null, !277, !2134, !2134}
!4183 = !DILocalVariable(name: "st", arg: 1, scope: !4180, file: !1, line: 885, type: !277)
!4184 = !DILocation(line: 885, column: 40, scope: !4180)
!4185 = !DILocalVariable(name: "scroll", arg: 2, scope: !4180, file: !1, line: 885, type: !2134)
!4186 = !DILocation(line: 885, column: 50, scope: !4180)
!4187 = !DILocalVariable(name: "back", arg: 3, scope: !4180, file: !1, line: 885, type: !2134)
!4188 = !DILocation(line: 885, column: 64, scope: !4180)
!4189 = !DILocalVariable(name: "btheme", scope: !4180, file: !1, line: 887, type: !4190)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_typedef, name: "bTheme", file: !4192, line: 387, baseType: !4193)
!4192 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bTheme", file: !4192, line: 356, size: 108224, elements: !4194)
!4194 = !{!4195, !4197, !4198, !4202, !4270, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4488, !4489}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4193, file: !4192, line: 357, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4193, file: !4192, line: 357, baseType: !4196, size: 64, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4193, file: !4192, line: 358, baseType: !4199, size: 256, offset: 128)
!4199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 256, elements: !4200)
!4200 = !{!4201}
!4201 = !DISubrange(count: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "tui", scope: !4193, file: !4192, line: 360, baseType: !4203, size: 7296, offset: 384)
!4203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeUI", file: !4192, line: 184, baseType: !4204)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeUI", file: !4192, line: 159, size: 7296, elements: !4205)
!4205 = !{!4206, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4249, !4258, !4259, !4260, !4261, !4265, !4266, !4267, !4268, !4269}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_regular", scope: !4204, file: !4192, line: 161, baseType: !4207, size: 256)
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetColors", file: !4192, line: 132, baseType: !4208)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetColors", file: !4192, line: 122, size: 256, elements: !4209)
!4209 = !{!4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "outline", scope: !4208, file: !4192, line: 123, baseType: !431, size: 32)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !4208, file: !4192, line: 124, baseType: !431, size: 32, offset: 32)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "inner_sel", scope: !4208, file: !4192, line: 125, baseType: !431, size: 32, offset: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !4208, file: !4192, line: 126, baseType: !431, size: 32, offset: 96)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4208, file: !4192, line: 127, baseType: !431, size: 32, offset: 128)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "text_sel", scope: !4208, file: !4192, line: 128, baseType: !431, size: 32, offset: 160)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "shaded", scope: !4208, file: !4192, line: 129, baseType: !259, size: 16, offset: 192)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "shadetop", scope: !4208, file: !4192, line: 130, baseType: !259, size: 16, offset: 208)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "shadedown", scope: !4208, file: !4192, line: 130, baseType: !259, size: 16, offset: 224)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_check", scope: !4208, file: !4192, line: 131, baseType: !259, size: 16, offset: 240)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tool", scope: !4204, file: !4192, line: 161, baseType: !4207, size: 256, offset: 256)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_text", scope: !4204, file: !4192, line: 161, baseType: !4207, size: 256, offset: 512)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_radio", scope: !4204, file: !4192, line: 162, baseType: !4207, size: 256, offset: 768)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_option", scope: !4204, file: !4192, line: 162, baseType: !4207, size: 256, offset: 1024)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_toggle", scope: !4204, file: !4192, line: 162, baseType: !4207, size: 256, offset: 1280)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_num", scope: !4204, file: !4192, line: 163, baseType: !4207, size: 256, offset: 1536)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_numslider", scope: !4204, file: !4192, line: 163, baseType: !4207, size: 256, offset: 1792)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu", scope: !4204, file: !4192, line: 164, baseType: !4207, size: 256, offset: 2048)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pulldown", scope: !4204, file: !4192, line: 164, baseType: !4207, size: 256, offset: 2304)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_back", scope: !4204, file: !4192, line: 164, baseType: !4207, size: 256, offset: 2560)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_menu_item", scope: !4204, file: !4192, line: 164, baseType: !4207, size: 256, offset: 2816)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_tooltip", scope: !4204, file: !4192, line: 164, baseType: !4207, size: 256, offset: 3072)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_box", scope: !4204, file: !4192, line: 165, baseType: !4207, size: 256, offset: 3328)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_scroll", scope: !4204, file: !4192, line: 165, baseType: !4207, size: 256, offset: 3584)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_progress", scope: !4204, file: !4192, line: 165, baseType: !4207, size: 256, offset: 3840)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_list_item", scope: !4204, file: !4192, line: 165, baseType: !4207, size: 256, offset: 4096)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_pie_menu", scope: !4204, file: !4192, line: 165, baseType: !4207, size: 256, offset: 4352)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "wcol_state", scope: !4204, file: !4192, line: 167, baseType: !4238, size: 256, offset: 4608)
!4238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiWidgetStateColors", file: !4192, line: 142, baseType: !4239)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiWidgetStateColors", file: !4192, line: 134, size: 256, elements: !4240)
!4240 = !{!4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim", scope: !4239, file: !4192, line: 135, baseType: !431, size: 32)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "inner_anim_sel", scope: !4239, file: !4192, line: 136, baseType: !431, size: 32, offset: 32)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key", scope: !4239, file: !4192, line: 137, baseType: !431, size: 32, offset: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "inner_key_sel", scope: !4239, file: !4192, line: 138, baseType: !431, size: 32, offset: 96)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven", scope: !4239, file: !4192, line: 139, baseType: !431, size: 32, offset: 128)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "inner_driven_sel", scope: !4239, file: !4192, line: 140, baseType: !431, size: 32, offset: 160)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !4239, file: !4192, line: 141, baseType: !269, size: 32, offset: 192)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4239, file: !4192, line: 141, baseType: !269, size: 32, offset: 224)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !4204, file: !4192, line: 169, baseType: !4250, size: 128, offset: 4864)
!4250 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPanelColors", file: !4192, line: 150, baseType: !4251)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPanelColors", file: !4192, line: 144, size: 128, elements: !4252)
!4252 = !{!4253, !4254, !4255, !4256, !4257}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4251, file: !4192, line: 145, baseType: !431, size: 32)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !4251, file: !4192, line: 146, baseType: !431, size: 32, offset: 32)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "show_header", scope: !4251, file: !4192, line: 147, baseType: !259, size: 16, offset: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "show_back", scope: !4251, file: !4192, line: 148, baseType: !259, size: 16, offset: 80)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4251, file: !4192, line: 149, baseType: !244, size: 32, offset: 96)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "emboss", scope: !4204, file: !4192, line: 171, baseType: !431, size: 32, offset: 4992)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_fac", scope: !4204, file: !4192, line: 174, baseType: !269, size: 32, offset: 5024)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "menu_shadow_width", scope: !4204, file: !4192, line: 175, baseType: !259, size: 16, offset: 5056)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4204, file: !4192, line: 177, baseType: !4262, size: 48, offset: 5072)
!4262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 48, elements: !4263)
!4263 = !{!4264}
!4264 = !DISubrange(count: 3)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "iconfile", scope: !4204, file: !4192, line: 179, baseType: !424, size: 2048, offset: 5120)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alpha", scope: !4204, file: !4192, line: 180, baseType: !269, size: 32, offset: 7168)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "xaxis", scope: !4204, file: !4192, line: 183, baseType: !431, size: 32, offset: 7200)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "yaxis", scope: !4204, file: !4192, line: 183, baseType: !431, size: 32, offset: 7232)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "zaxis", scope: !4204, file: !4192, line: 183, baseType: !431, size: 32, offset: 7264)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "tbuts", scope: !4193, file: !4192, line: 364, baseType: !4271, size: 5760, offset: 7680)
!4271 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeSpace", file: !4192, line: 336, baseType: !4272)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeSpace", file: !4192, line: 189, size: 5760, elements: !4273)
!4273 = !{!4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !4272, file: !4192, line: 191, baseType: !431, size: 32)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !4272, file: !4192, line: 192, baseType: !431, size: 32, offset: 32)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4272, file: !4192, line: 193, baseType: !431, size: 32, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "text_hi", scope: !4272, file: !4192, line: 194, baseType: !431, size: 32, offset: 96)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4272, file: !4192, line: 197, baseType: !431, size: 32, offset: 128)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "header_title", scope: !4272, file: !4192, line: 198, baseType: !431, size: 32, offset: 160)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "header_text", scope: !4272, file: !4192, line: 199, baseType: !431, size: 32, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "header_text_hi", scope: !4272, file: !4192, line: 200, baseType: !431, size: 32, offset: 224)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "tab_active", scope: !4272, file: !4192, line: 203, baseType: !431, size: 32, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "tab_inactive", scope: !4272, file: !4192, line: 204, baseType: !431, size: 32, offset: 288)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "tab_back", scope: !4272, file: !4192, line: 205, baseType: !431, size: 32, offset: 320)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "tab_outline", scope: !4272, file: !4192, line: 206, baseType: !431, size: 32, offset: 352)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !4272, file: !4192, line: 209, baseType: !431, size: 32, offset: 384)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "button_title", scope: !4272, file: !4192, line: 210, baseType: !431, size: 32, offset: 416)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "button_text", scope: !4272, file: !4192, line: 211, baseType: !431, size: 32, offset: 448)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "button_text_hi", scope: !4272, file: !4192, line: 212, baseType: !431, size: 32, offset: 480)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4272, file: !4192, line: 215, baseType: !431, size: 32, offset: 512)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "list_title", scope: !4272, file: !4192, line: 216, baseType: !431, size: 32, offset: 544)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "list_text", scope: !4272, file: !4192, line: 217, baseType: !431, size: 32, offset: 576)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "list_text_hi", scope: !4272, file: !4192, line: 218, baseType: !431, size: 32, offset: 608)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "panelcolors", scope: !4272, file: !4192, line: 227, baseType: !4250, size: 128, offset: 640)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "gradients", scope: !4272, file: !4192, line: 229, baseType: !4296, size: 128, offset: 768)
!4296 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiGradientColors", file: !4192, line: 157, baseType: !4297)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiGradientColors", file: !4192, line: 152, size: 128, elements: !4298)
!4298 = !{!4299, !4300, !4301, !4302}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !4297, file: !4192, line: 153, baseType: !431, size: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "high_gradient", scope: !4297, file: !4192, line: 154, baseType: !431, size: 32, offset: 32)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "show_grad", scope: !4297, file: !4192, line: 155, baseType: !244, size: 32, offset: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4297, file: !4192, line: 156, baseType: !244, size: 32, offset: 96)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "shade1", scope: !4272, file: !4192, line: 231, baseType: !431, size: 32, offset: 896)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "shade2", scope: !4272, file: !4192, line: 232, baseType: !431, size: 32, offset: 928)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "hilite", scope: !4272, file: !4192, line: 234, baseType: !431, size: 32, offset: 960)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !4272, file: !4192, line: 235, baseType: !431, size: 32, offset: 992)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "view_overlay", scope: !4272, file: !4192, line: 237, baseType: !431, size: 32, offset: 1024)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !4272, file: !4192, line: 239, baseType: !431, size: 32, offset: 1056)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "wire_edit", scope: !4272, file: !4192, line: 239, baseType: !431, size: 32, offset: 1088)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4272, file: !4192, line: 239, baseType: !431, size: 32, offset: 1120)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !4272, file: !4192, line: 240, baseType: !431, size: 32, offset: 1152)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !4272, file: !4192, line: 240, baseType: !431, size: 32, offset: 1184)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !4272, file: !4192, line: 240, baseType: !431, size: 32, offset: 1216)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4272, file: !4192, line: 240, baseType: !431, size: 32, offset: 1248)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4272, file: !4192, line: 241, baseType: !431, size: 32, offset: 1280)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4272, file: !4192, line: 241, baseType: !431, size: 32, offset: 1312)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "group_active", scope: !4272, file: !4192, line: 241, baseType: !431, size: 32, offset: 1344)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !4272, file: !4192, line: 241, baseType: !431, size: 32, offset: 1376)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "vertex", scope: !4272, file: !4192, line: 242, baseType: !431, size: 32, offset: 1408)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_select", scope: !4272, file: !4192, line: 242, baseType: !431, size: 32, offset: 1440)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_unreferenced", scope: !4272, file: !4192, line: 242, baseType: !431, size: 32, offset: 1472)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !4272, file: !4192, line: 243, baseType: !431, size: 32, offset: 1504)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "edge_select", scope: !4272, file: !4192, line: 243, baseType: !431, size: 32, offset: 1536)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "edge_seam", scope: !4272, file: !4192, line: 244, baseType: !431, size: 32, offset: 1568)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "edge_sharp", scope: !4272, file: !4192, line: 244, baseType: !431, size: 32, offset: 1600)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "edge_facesel", scope: !4272, file: !4192, line: 244, baseType: !431, size: 32, offset: 1632)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "edge_crease", scope: !4272, file: !4192, line: 244, baseType: !431, size: 32, offset: 1664)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !4272, file: !4192, line: 245, baseType: !431, size: 32, offset: 1696)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "face_select", scope: !4272, file: !4192, line: 245, baseType: !431, size: 32, offset: 1728)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "face_dot", scope: !4272, file: !4192, line: 246, baseType: !431, size: 32, offset: 1760)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_len", scope: !4272, file: !4192, line: 247, baseType: !431, size: 32, offset: 1792)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "extra_edge_angle", scope: !4272, file: !4192, line: 247, baseType: !431, size: 32, offset: 1824)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_angle", scope: !4272, file: !4192, line: 247, baseType: !431, size: 32, offset: 1856)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "extra_face_area", scope: !4272, file: !4192, line: 247, baseType: !431, size: 32, offset: 1888)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !4272, file: !4192, line: 248, baseType: !431, size: 32, offset: 1920)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_normal", scope: !4272, file: !4192, line: 249, baseType: !431, size: 32, offset: 1952)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "loop_normal", scope: !4272, file: !4192, line: 250, baseType: !431, size: 32, offset: 1984)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "bone_solid", scope: !4272, file: !4192, line: 251, baseType: !431, size: 32, offset: 2016)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose", scope: !4272, file: !4192, line: 251, baseType: !431, size: 32, offset: 2048)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "bone_pose_active", scope: !4272, file: !4192, line: 251, baseType: !431, size: 32, offset: 2080)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !4272, file: !4192, line: 252, baseType: !431, size: 32, offset: 2112)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "strip_select", scope: !4272, file: !4192, line: 252, baseType: !431, size: 32, offset: 2144)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !4272, file: !4192, line: 253, baseType: !431, size: 32, offset: 2176)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_edge_mark", scope: !4272, file: !4192, line: 254, baseType: !431, size: 32, offset: 2208)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "freestyle_face_mark", scope: !4272, file: !4192, line: 254, baseType: !431, size: 32, offset: 2240)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_uline", scope: !4272, file: !4192, line: 256, baseType: !431, size: 32, offset: 2272)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_vline", scope: !4272, file: !4192, line: 256, baseType: !431, size: 32, offset: 2304)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !4272, file: !4192, line: 257, baseType: !431, size: 32, offset: 2336)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_uline", scope: !4272, file: !4192, line: 257, baseType: !431, size: 32, offset: 2368)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "nurb_sel_vline", scope: !4272, file: !4192, line: 257, baseType: !431, size: 32, offset: 2400)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "lastsel_point", scope: !4272, file: !4192, line: 257, baseType: !431, size: 32, offset: 2432)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "handle_free", scope: !4272, file: !4192, line: 259, baseType: !431, size: 32, offset: 2464)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto", scope: !4272, file: !4192, line: 259, baseType: !431, size: 32, offset: 2496)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vect", scope: !4272, file: !4192, line: 259, baseType: !431, size: 32, offset: 2528)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "handle_align", scope: !4272, file: !4192, line: 259, baseType: !431, size: 32, offset: 2560)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "handle_auto_clamped", scope: !4272, file: !4192, line: 259, baseType: !431, size: 32, offset: 2592)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_free", scope: !4272, file: !4192, line: 260, baseType: !431, size: 32, offset: 2624)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto", scope: !4272, file: !4192, line: 260, baseType: !431, size: 32, offset: 2656)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_vect", scope: !4272, file: !4192, line: 260, baseType: !431, size: 32, offset: 2688)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_align", scope: !4272, file: !4192, line: 260, baseType: !431, size: 32, offset: 2720)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "handle_sel_auto_clamped", scope: !4272, file: !4192, line: 260, baseType: !431, size: 32, offset: 2752)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "ds_channel", scope: !4272, file: !4192, line: 262, baseType: !431, size: 32, offset: 2784)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "ds_subchannel", scope: !4272, file: !4192, line: 262, baseType: !431, size: 32, offset: 2816)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe", scope: !4272, file: !4192, line: 263, baseType: !431, size: 32, offset: 2848)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme", scope: !4272, file: !4192, line: 263, baseType: !431, size: 32, offset: 2880)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown", scope: !4272, file: !4192, line: 263, baseType: !431, size: 32, offset: 2912)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter", scope: !4272, file: !4192, line: 263, baseType: !431, size: 32, offset: 2944)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_keyframe_select", scope: !4272, file: !4192, line: 264, baseType: !431, size: 32, offset: 2976)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_extreme_select", scope: !4272, file: !4192, line: 264, baseType: !431, size: 32, offset: 3008)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_breakdown_select", scope: !4272, file: !4192, line: 264, baseType: !431, size: 32, offset: 3040)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "keytype_jitter_select", scope: !4272, file: !4192, line: 264, baseType: !431, size: 32, offset: 3072)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder", scope: !4272, file: !4192, line: 265, baseType: !431, size: 32, offset: 3104)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "keyborder_select", scope: !4272, file: !4192, line: 265, baseType: !431, size: 32, offset: 3136)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "console_output", scope: !4272, file: !4192, line: 267, baseType: !431, size: 32, offset: 3168)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "console_input", scope: !4272, file: !4192, line: 267, baseType: !431, size: 32, offset: 3200)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "console_info", scope: !4272, file: !4192, line: 267, baseType: !431, size: 32, offset: 3232)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "console_error", scope: !4272, file: !4192, line: 267, baseType: !431, size: 32, offset: 3264)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "console_cursor", scope: !4272, file: !4192, line: 268, baseType: !431, size: 32, offset: 3296)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "console_select", scope: !4272, file: !4192, line: 268, baseType: !431, size: 32, offset: 3328)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_size", scope: !4272, file: !4192, line: 270, baseType: !261, size: 8, offset: 3360)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "outline_width", scope: !4272, file: !4192, line: 270, baseType: !261, size: 8, offset: 3368)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "facedot_size", scope: !4272, file: !4192, line: 270, baseType: !261, size: 8, offset: 3376)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "noodle_curving", scope: !4272, file: !4192, line: 271, baseType: !261, size: 8, offset: 3384)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxl", scope: !4272, file: !4192, line: 274, baseType: !431, size: 32, offset: 3392)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxs", scope: !4272, file: !4192, line: 274, baseType: !431, size: 32, offset: 3424)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxb", scope: !4272, file: !4192, line: 275, baseType: !431, size: 32, offset: 3456)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxn", scope: !4272, file: !4192, line: 275, baseType: !431, size: 32, offset: 3488)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxv", scope: !4272, file: !4192, line: 276, baseType: !431, size: 32, offset: 3520)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxc", scope: !4272, file: !4192, line: 276, baseType: !431, size: 32, offset: 3552)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxd", scope: !4272, file: !4192, line: 277, baseType: !431, size: 32, offset: 3584)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxr", scope: !4272, file: !4192, line: 277, baseType: !431, size: 32, offset: 3616)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_output", scope: !4272, file: !4192, line: 279, baseType: !431, size: 32, offset: 3648)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_filter", scope: !4272, file: !4192, line: 279, baseType: !431, size: 32, offset: 3680)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_vector", scope: !4272, file: !4192, line: 280, baseType: !431, size: 32, offset: 3712)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_texture", scope: !4272, file: !4192, line: 280, baseType: !431, size: 32, offset: 3744)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_shader", scope: !4272, file: !4192, line: 281, baseType: !431, size: 32, offset: 3776)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_script", scope: !4272, file: !4192, line: 281, baseType: !431, size: 32, offset: 3808)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_pattern", scope: !4272, file: !4192, line: 282, baseType: !431, size: 32, offset: 3840)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "nodeclass_layout", scope: !4272, file: !4192, line: 282, baseType: !431, size: 32, offset: 3872)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "movie", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 3904)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 3936)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 3968)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 4000)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 4032)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !4272, file: !4192, line: 284, baseType: !431, size: 32, offset: 4064)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !4272, file: !4192, line: 285, baseType: !431, size: 32, offset: 4096)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "transition", scope: !4272, file: !4192, line: 285, baseType: !431, size: 32, offset: 4128)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "meta", scope: !4272, file: !4192, line: 285, baseType: !431, size: 32, offset: 4160)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "editmesh_active", scope: !4272, file: !4192, line: 286, baseType: !431, size: 32, offset: 4192)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex", scope: !4272, file: !4192, line: 288, baseType: !431, size: 32, offset: 4224)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_select", scope: !4272, file: !4192, line: 289, baseType: !431, size: 32, offset: 4256)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4272, file: !4192, line: 290, baseType: !431, size: 32, offset: 4288)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "handle_vertex_size", scope: !4272, file: !4192, line: 292, baseType: !261, size: 8, offset: 4320)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "marker_outline", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4328)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4360)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "act_marker", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4392)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "sel_marker", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4424)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "dis_marker", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4456)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "lock_marker", scope: !4272, file: !4192, line: 294, baseType: !431, size: 32, offset: 4488)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_solid", scope: !4272, file: !4192, line: 295, baseType: !431, size: 32, offset: 4520)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "path_before", scope: !4272, file: !4192, line: 296, baseType: !431, size: 32, offset: 4552)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "path_after", scope: !4272, file: !4192, line: 296, baseType: !431, size: 32, offset: 4584)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "camera_path", scope: !4272, file: !4192, line: 297, baseType: !431, size: 32, offset: 4616)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "hpad", scope: !4272, file: !4192, line: 298, baseType: !4425, size: 24, offset: 4648)
!4425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 24, elements: !4263)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "preview_back", scope: !4272, file: !4192, line: 300, baseType: !431, size: 32, offset: 4672)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_face", scope: !4272, file: !4192, line: 301, baseType: !431, size: 32, offset: 4704)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_edge", scope: !4272, file: !4192, line: 302, baseType: !431, size: 32, offset: 4736)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_vert", scope: !4272, file: !4192, line: 303, baseType: !431, size: 32, offset: 4768)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_stitchable", scope: !4272, file: !4192, line: 304, baseType: !431, size: 32, offset: 4800)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_unstitchable", scope: !4272, file: !4192, line: 305, baseType: !431, size: 32, offset: 4832)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitch_active", scope: !4272, file: !4192, line: 306, baseType: !431, size: 32, offset: 4864)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "uv_shadow", scope: !4272, file: !4192, line: 308, baseType: !431, size: 32, offset: 4896)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "uv_others", scope: !4272, file: !4192, line: 309, baseType: !431, size: 32, offset: 4928)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4272, file: !4192, line: 311, baseType: !431, size: 32, offset: 4960)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "selected_highlight", scope: !4272, file: !4192, line: 312, baseType: !431, size: 32, offset: 4992)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "skin_root", scope: !4272, file: !4192, line: 314, baseType: !431, size: 32, offset: 5024)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "anim_active", scope: !4272, file: !4192, line: 317, baseType: !431, size: 32, offset: 5056)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "anim_non_active", scope: !4272, file: !4192, line: 318, baseType: !431, size: 32, offset: 5088)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweaking", scope: !4272, file: !4192, line: 320, baseType: !431, size: 32, offset: 5120)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tweakdupli", scope: !4272, file: !4192, line: 321, baseType: !431, size: 32, offset: 5152)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition", scope: !4272, file: !4192, line: 323, baseType: !431, size: 32, offset: 5184)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "nla_transition_sel", scope: !4272, file: !4192, line: 323, baseType: !431, size: 32, offset: 5216)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta", scope: !4272, file: !4192, line: 324, baseType: !431, size: 32, offset: 5248)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "nla_meta_sel", scope: !4272, file: !4192, line: 324, baseType: !431, size: 32, offset: 5280)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound", scope: !4272, file: !4192, line: 325, baseType: !431, size: 32, offset: 5312)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "nla_sound_sel", scope: !4272, file: !4192, line: 325, baseType: !431, size: 32, offset: 5344)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected", scope: !4272, file: !4192, line: 328, baseType: !431, size: 32, offset: 5376)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "info_selected_text", scope: !4272, file: !4192, line: 328, baseType: !431, size: 32, offset: 5408)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "info_error", scope: !4272, file: !4192, line: 329, baseType: !431, size: 32, offset: 5440)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "info_error_text", scope: !4272, file: !4192, line: 329, baseType: !431, size: 32, offset: 5472)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning", scope: !4272, file: !4192, line: 330, baseType: !431, size: 32, offset: 5504)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "info_warning_text", scope: !4272, file: !4192, line: 330, baseType: !431, size: 32, offset: 5536)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "info_info", scope: !4272, file: !4192, line: 331, baseType: !431, size: 32, offset: 5568)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "info_info_text", scope: !4272, file: !4192, line: 331, baseType: !431, size: 32, offset: 5600)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug", scope: !4272, file: !4192, line: 332, baseType: !431, size: 32, offset: 5632)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "info_debug_text", scope: !4272, file: !4192, line: 332, baseType: !431, size: 32, offset: 5664)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_pivot", scope: !4272, file: !4192, line: 334, baseType: !431, size: 32, offset: 5696)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve_handle", scope: !4272, file: !4192, line: 335, baseType: !431, size: 32, offset: 5728)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "tv3d", scope: !4193, file: !4192, line: 365, baseType: !4271, size: 5760, offset: 13440)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "tfile", scope: !4193, file: !4192, line: 366, baseType: !4271, size: 5760, offset: 19200)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "tipo", scope: !4193, file: !4192, line: 367, baseType: !4271, size: 5760, offset: 24960)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "tinfo", scope: !4193, file: !4192, line: 368, baseType: !4271, size: 5760, offset: 30720)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "tact", scope: !4193, file: !4192, line: 369, baseType: !4271, size: 5760, offset: 36480)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "tnla", scope: !4193, file: !4192, line: 370, baseType: !4271, size: 5760, offset: 42240)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "tseq", scope: !4193, file: !4192, line: 371, baseType: !4271, size: 5760, offset: 48000)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "tima", scope: !4193, file: !4192, line: 372, baseType: !4271, size: 5760, offset: 53760)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4193, file: !4192, line: 373, baseType: !4271, size: 5760, offset: 59520)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "toops", scope: !4193, file: !4192, line: 374, baseType: !4271, size: 5760, offset: 65280)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "ttime", scope: !4193, file: !4192, line: 375, baseType: !4271, size: 5760, offset: 71040)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !4193, file: !4192, line: 376, baseType: !4271, size: 5760, offset: 76800)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "tlogic", scope: !4193, file: !4192, line: 377, baseType: !4271, size: 5760, offset: 82560)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "tuserpref", scope: !4193, file: !4192, line: 378, baseType: !4271, size: 5760, offset: 88320)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "tconsole", scope: !4193, file: !4192, line: 379, baseType: !4271, size: 5760, offset: 94080)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "tclip", scope: !4193, file: !4192, line: 380, baseType: !4271, size: 5760, offset: 99840)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "tarm", scope: !4193, file: !4192, line: 383, baseType: !4477, size: 2560, offset: 105600)
!4477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4478, size: 2560, elements: !4486)
!4478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !4192, line: 347, baseType: !4479)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !4192, line: 340, size: 128, elements: !4480)
!4480 = !{!4481, !4482, !4483, !4484, !4485}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !4479, file: !4192, line: 341, baseType: !431, size: 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4479, file: !4192, line: 342, baseType: !431, size: 32, offset: 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4479, file: !4192, line: 343, baseType: !431, size: 32, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4479, file: !4192, line: 345, baseType: !259, size: 16, offset: 96)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4479, file: !4192, line: 346, baseType: !259, size: 16, offset: 112)
!4486 = !{!4487}
!4487 = !DISubrange(count: 20)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "active_theme_area", scope: !4193, file: !4192, line: 386, baseType: !244, size: 32, offset: 108160)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4193, file: !4192, line: 386, baseType: !244, size: 32, offset: 108192)
!4490 = !DILocation(line: 887, column: 10, scope: !4180)
!4491 = !DILocation(line: 887, column: 19, scope: !4180)
!4492 = !DILocalVariable(name: "wcol", scope: !4180, file: !1, line: 888, type: !4207)
!4493 = !DILocation(line: 888, column: 17, scope: !4180)
!4494 = !DILocation(line: 888, column: 24, scope: !4180)
!4495 = !DILocation(line: 888, column: 32, scope: !4180)
!4496 = !DILocation(line: 888, column: 36, scope: !4180)
!4497 = !DILocalVariable(name: "col", scope: !4180, file: !1, line: 889, type: !4498)
!4498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 32, elements: !432)
!4499 = !DILocation(line: 889, column: 16, scope: !4180)
!4500 = !DILocalVariable(name: "rad", scope: !4180, file: !1, line: 890, type: !269)
!4501 = !DILocation(line: 890, column: 8, scope: !4180)
!4502 = !DILocation(line: 892, column: 2, scope: !4180)
!4503 = !DILocation(line: 893, column: 10, scope: !4180)
!4504 = !DILocation(line: 893, column: 16, scope: !4180)
!4505 = !DILocation(line: 893, column: 22, scope: !4180)
!4506 = !DILocation(line: 893, column: 28, scope: !4180)
!4507 = !DILocation(line: 893, column: 34, scope: !4180)
!4508 = !DILocation(line: 893, column: 40, scope: !4180)
!4509 = !DILocation(line: 893, column: 46, scope: !4180)
!4510 = !DILocation(line: 893, column: 52, scope: !4180)
!4511 = !DILocation(line: 893, column: 2, scope: !4180)
!4512 = !DILocation(line: 895, column: 28, scope: !4180)
!4513 = !DILocation(line: 895, column: 37, scope: !4180)
!4514 = !DILocation(line: 895, column: 41, scope: !4180)
!4515 = !DILocation(line: 895, column: 50, scope: !4180)
!4516 = !DILocation(line: 895, column: 54, scope: !4180)
!4517 = !DILocation(line: 895, column: 60, scope: !4180)
!4518 = !DILocation(line: 895, column: 49, scope: !4180)
!4519 = !DILocation(line: 895, column: 2, scope: !4180)
!4520 = !DILocation(line: 897, column: 2, scope: !4180)
!4521 = !DILocation(line: 898, column: 39, scope: !4180)
!4522 = !DILocation(line: 898, column: 43, scope: !4180)
!4523 = !DILocation(line: 898, column: 22, scope: !4180)
!4524 = !DILocation(line: 898, column: 72, scope: !4180)
!4525 = !DILocation(line: 898, column: 76, scope: !4180)
!4526 = !DILocation(line: 898, column: 55, scope: !4180)
!4527 = !DILocation(line: 898, column: 15, scope: !4180)
!4528 = !DILocation(line: 898, column: 13, scope: !4180)
!4529 = !DILocation(line: 898, column: 6, scope: !4180)
!4530 = !DILocation(line: 899, column: 34, scope: !4180)
!4531 = !DILocation(line: 899, column: 2, scope: !4180)
!4532 = !DILocation(line: 900, column: 2, scope: !4180)
!4533 = !DILocation(line: 900, column: 9, scope: !4180)
!4534 = !DILocation(line: 901, column: 14, scope: !4180)
!4535 = !DILocation(line: 901, column: 2, scope: !4180)
!4536 = !DILocation(line: 902, column: 2, scope: !4180)
!4537 = !DILocation(line: 903, column: 13, scope: !4180)
!4538 = !DILocation(line: 903, column: 17, scope: !4180)
!4539 = !DILocation(line: 903, column: 27, scope: !4180)
!4540 = !DILocation(line: 903, column: 32, scope: !4180)
!4541 = !DILocation(line: 903, column: 37, scope: !4180)
!4542 = !DILocation(line: 903, column: 41, scope: !4180)
!4543 = !DILocation(line: 903, column: 51, scope: !4180)
!4544 = !DILocation(line: 903, column: 57, scope: !4180)
!4545 = !DILocation(line: 903, column: 61, scope: !4180)
!4546 = !DILocation(line: 903, column: 71, scope: !4180)
!4547 = !DILocation(line: 903, column: 76, scope: !4180)
!4548 = !DILocation(line: 903, column: 81, scope: !4180)
!4549 = !DILocation(line: 903, column: 85, scope: !4180)
!4550 = !DILocation(line: 903, column: 95, scope: !4180)
!4551 = !DILocation(line: 903, column: 101, scope: !4180)
!4552 = !DILocation(line: 903, column: 2, scope: !4180)
!4553 = !DILocation(line: 904, column: 2, scope: !4180)
!4554 = !DILocation(line: 905, column: 1, scope: !4180)
!4555 = distinct !DISubprogram(name: "draw_documentation", scope: !1, file: !1, line: 909, type: !1401, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!4556 = !DILocalVariable(name: "st", arg: 1, scope: !4555, file: !1, line: 909, type: !277)
!4557 = !DILocation(line: 909, column: 43, scope: !4555)
!4558 = !DILocalVariable(name: "ar", arg: 2, scope: !4555, file: !1, line: 909, type: !439)
!4559 = !DILocation(line: 909, column: 56, scope: !4555)
!4560 = !DILocalVariable(name: "tmp", scope: !4555, file: !1, line: 911, type: !377)
!4561 = !DILocation(line: 911, column: 12, scope: !4555)
!4562 = !DILocalVariable(name: "docs", scope: !4555, file: !1, line: 912, type: !372)
!4563 = !DILocation(line: 912, column: 8, scope: !4555)
!4564 = !DILocalVariable(name: "buf", scope: !4555, file: !1, line: 912, type: !4565)
!4565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 328, elements: !4566)
!4566 = !{!4567}
!4567 = !DISubrange(count: 41)
!4568 = !DILocation(line: 912, column: 14, scope: !4555)
!4569 = !DILocalVariable(name: "p", scope: !4555, file: !1, line: 912, type: !372)
!4570 = !DILocation(line: 912, column: 35, scope: !4555)
!4571 = !DILocalVariable(name: "i", scope: !4555, file: !1, line: 913, type: !244)
!4572 = !DILocation(line: 913, column: 6, scope: !4555)
!4573 = !DILocalVariable(name: "br", scope: !4555, file: !1, line: 913, type: !244)
!4574 = !DILocation(line: 913, column: 9, scope: !4555)
!4575 = !DILocalVariable(name: "lines", scope: !4555, file: !1, line: 913, type: !244)
!4576 = !DILocation(line: 913, column: 13, scope: !4555)
!4577 = !DILocalVariable(name: "boxw", scope: !4555, file: !1, line: 914, type: !244)
!4578 = !DILocation(line: 914, column: 6, scope: !4555)
!4579 = !DILocalVariable(name: "boxh", scope: !4555, file: !1, line: 914, type: !244)
!4580 = !DILocation(line: 914, column: 12, scope: !4555)
!4581 = !DILocalVariable(name: "l", scope: !4555, file: !1, line: 914, type: !244)
!4582 = !DILocation(line: 914, column: 18, scope: !4555)
!4583 = !DILocalVariable(name: "x", scope: !4555, file: !1, line: 914, type: !244)
!4584 = !DILocation(line: 914, column: 21, scope: !4555)
!4585 = !DILocalVariable(name: "y", scope: !4555, file: !1, line: 914, type: !244)
!4586 = !DILocation(line: 914, column: 24, scope: !4555)
!4587 = !DILocation(line: 916, column: 7, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 916, column: 6)
!4589 = !DILocation(line: 916, column: 10, scope: !4588)
!4590 = !DILocation(line: 916, column: 14, scope: !4588)
!4591 = !DILocation(line: 916, column: 18, scope: !4588)
!4592 = !DILocation(line: 916, column: 6, scope: !4555)
!4593 = !DILocation(line: 916, column: 24, scope: !4588)
!4594 = !DILocation(line: 917, column: 31, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 917, column: 6)
!4596 = !DILocation(line: 917, column: 35, scope: !4595)
!4597 = !DILocation(line: 917, column: 7, scope: !4595)
!4598 = !DILocation(line: 917, column: 6, scope: !4555)
!4599 = !DILocation(line: 917, column: 42, scope: !4595)
!4600 = !DILocation(line: 919, column: 9, scope: !4555)
!4601 = !DILocation(line: 919, column: 7, scope: !4555)
!4602 = !DILocation(line: 921, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 921, column: 6)
!4604 = !DILocation(line: 921, column: 6, scope: !4555)
!4605 = !DILocation(line: 921, column: 13, scope: !4603)
!4606 = !DILocation(line: 924, column: 13, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 924, column: 2)
!4608 = !DILocation(line: 924, column: 17, scope: !4607)
!4609 = !DILocation(line: 924, column: 23, scope: !4607)
!4610 = !DILocation(line: 924, column: 11, scope: !4607)
!4611 = !DILocation(line: 924, column: 34, scope: !4607)
!4612 = !DILocation(line: 924, column: 38, scope: !4607)
!4613 = !DILocation(line: 924, column: 33, scope: !4607)
!4614 = !DILocation(line: 924, column: 31, scope: !4607)
!4615 = !DILocation(line: 924, column: 7, scope: !4607)
!4616 = !DILocation(line: 924, column: 43, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4607, file: !1, line: 924, column: 2)
!4618 = !DILocation(line: 924, column: 2, scope: !4607)
!4619 = !DILocation(line: 924, column: 54, scope: !4617)
!4620 = !DILocation(line: 924, column: 59, scope: !4617)
!4621 = !DILocation(line: 924, column: 52, scope: !4617)
!4622 = !DILocation(line: 924, column: 66, scope: !4617)
!4623 = !DILocation(line: 924, column: 2, scope: !4617)
!4624 = distinct !{!4624, !4618, !4625}
!4625 = !DILocation(line: 924, column: 70, scope: !4607)
!4626 = !DILocation(line: 925, column: 6, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 925, column: 6)
!4628 = !DILocation(line: 925, column: 8, scope: !4627)
!4629 = !DILocation(line: 925, column: 6, scope: !4555)
!4630 = !DILocation(line: 925, column: 13, scope: !4627)
!4631 = !DILocation(line: 927, column: 6, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 927, column: 6)
!4633 = !DILocation(line: 927, column: 10, scope: !4632)
!4634 = !DILocation(line: 927, column: 6, scope: !4555)
!4635 = !DILocation(line: 928, column: 7, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 927, column: 23)
!4637 = !DILocation(line: 928, column: 11, scope: !4636)
!4638 = !DILocation(line: 928, column: 21, scope: !4636)
!4639 = !DILocation(line: 928, column: 25, scope: !4636)
!4640 = !DILocation(line: 928, column: 31, scope: !4636)
!4641 = !DILocation(line: 928, column: 38, scope: !4636)
!4642 = !DILocation(line: 928, column: 42, scope: !4636)
!4643 = !DILocation(line: 928, column: 36, scope: !4636)
!4644 = !DILocation(line: 928, column: 18, scope: !4636)
!4645 = !DILocation(line: 928, column: 50, scope: !4636)
!4646 = !DILocation(line: 928, column: 48, scope: !4636)
!4647 = !DILocation(line: 928, column: 63, scope: !4636)
!4648 = !DILocation(line: 928, column: 61, scope: !4636)
!4649 = !DILocation(line: 928, column: 72, scope: !4636)
!4650 = !DILocation(line: 928, column: 5, scope: !4636)
!4651 = !DILocation(line: 929, column: 2, scope: !4636)
!4652 = !DILocation(line: 931, column: 7, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 930, column: 7)
!4654 = !DILocation(line: 931, column: 11, scope: !4653)
!4655 = !DILocation(line: 931, column: 21, scope: !4653)
!4656 = !DILocation(line: 931, column: 25, scope: !4653)
!4657 = !DILocation(line: 931, column: 31, scope: !4653)
!4658 = !DILocation(line: 931, column: 38, scope: !4653)
!4659 = !DILocation(line: 931, column: 42, scope: !4653)
!4660 = !DILocation(line: 931, column: 36, scope: !4653)
!4661 = !DILocation(line: 931, column: 18, scope: !4653)
!4662 = !DILocation(line: 931, column: 50, scope: !4653)
!4663 = !DILocation(line: 931, column: 48, scope: !4653)
!4664 = !DILocation(line: 931, column: 61, scope: !4653)
!4665 = !DILocation(line: 931, column: 5, scope: !4653)
!4666 = !DILocation(line: 933, column: 6, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 933, column: 6)
!4668 = !DILocation(line: 933, column: 6, scope: !4555)
!4669 = !DILocation(line: 934, column: 26, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !1, line: 933, column: 32)
!4671 = !DILocation(line: 934, column: 30, scope: !4670)
!4672 = !DILocation(line: 934, column: 24, scope: !4670)
!4673 = !DILocation(line: 934, column: 37, scope: !4670)
!4674 = !DILocation(line: 934, column: 5, scope: !4670)
!4675 = !DILocation(line: 935, column: 2, scope: !4670)
!4676 = !DILocation(line: 937, column: 31, scope: !4555)
!4677 = !DILocation(line: 937, column: 35, scope: !4555)
!4678 = !DILocation(line: 937, column: 42, scope: !4555)
!4679 = !DILocation(line: 937, column: 46, scope: !4555)
!4680 = !DILocation(line: 937, column: 60, scope: !4555)
!4681 = !DILocation(line: 937, column: 58, scope: !4555)
!4682 = !DILocation(line: 937, column: 40, scope: !4555)
!4683 = !DILocation(line: 937, column: 62, scope: !4555)
!4684 = !DILocation(line: 937, column: 29, scope: !4555)
!4685 = !DILocation(line: 938, column: 21, scope: !4555)
!4686 = !DILocation(line: 938, column: 25, scope: !4555)
!4687 = !DILocation(line: 938, column: 19, scope: !4555)
!4688 = !DILocation(line: 938, column: 32, scope: !4555)
!4689 = !DILocation(line: 938, column: 7, scope: !4555)
!4690 = !DILocation(line: 939, column: 29, scope: !4555)
!4691 = !DILocation(line: 939, column: 33, scope: !4555)
!4692 = !DILocation(line: 939, column: 47, scope: !4555)
!4693 = !DILocation(line: 939, column: 45, scope: !4555)
!4694 = !DILocation(line: 939, column: 26, scope: !4555)
!4695 = !DILocation(line: 939, column: 7, scope: !4555)
!4696 = !DILocation(line: 942, column: 2, scope: !4555)
!4697 = !DILocation(line: 943, column: 10, scope: !4555)
!4698 = !DILocation(line: 943, column: 13, scope: !4555)
!4699 = !DILocation(line: 943, column: 16, scope: !4555)
!4700 = !DILocation(line: 943, column: 20, scope: !4555)
!4701 = !DILocation(line: 943, column: 18, scope: !4555)
!4702 = !DILocation(line: 943, column: 26, scope: !4555)
!4703 = !DILocation(line: 943, column: 30, scope: !4555)
!4704 = !DILocation(line: 943, column: 28, scope: !4555)
!4705 = !DILocation(line: 943, column: 2, scope: !4555)
!4706 = !DILocation(line: 944, column: 2, scope: !4555)
!4707 = !DILocation(line: 945, column: 2, scope: !4555)
!4708 = !DILocation(line: 946, column: 13, scope: !4555)
!4709 = !DILocation(line: 946, column: 16, scope: !4555)
!4710 = !DILocation(line: 946, column: 2, scope: !4555)
!4711 = !DILocation(line: 947, column: 13, scope: !4555)
!4712 = !DILocation(line: 947, column: 17, scope: !4555)
!4713 = !DILocation(line: 947, column: 15, scope: !4555)
!4714 = !DILocation(line: 947, column: 23, scope: !4555)
!4715 = !DILocation(line: 947, column: 2, scope: !4555)
!4716 = !DILocation(line: 948, column: 13, scope: !4555)
!4717 = !DILocation(line: 948, column: 17, scope: !4555)
!4718 = !DILocation(line: 948, column: 15, scope: !4555)
!4719 = !DILocation(line: 948, column: 23, scope: !4555)
!4720 = !DILocation(line: 948, column: 27, scope: !4555)
!4721 = !DILocation(line: 948, column: 25, scope: !4555)
!4722 = !DILocation(line: 948, column: 2, scope: !4555)
!4723 = !DILocation(line: 949, column: 13, scope: !4555)
!4724 = !DILocation(line: 949, column: 16, scope: !4555)
!4725 = !DILocation(line: 949, column: 20, scope: !4555)
!4726 = !DILocation(line: 949, column: 18, scope: !4555)
!4727 = !DILocation(line: 949, column: 2, scope: !4555)
!4728 = !DILocation(line: 950, column: 2, scope: !4555)
!4729 = !DILocation(line: 951, column: 2, scope: !4555)
!4730 = !DILocation(line: 952, column: 13, scope: !4555)
!4731 = !DILocation(line: 952, column: 17, scope: !4555)
!4732 = !DILocation(line: 952, column: 15, scope: !4555)
!4733 = !DILocation(line: 952, column: 22, scope: !4555)
!4734 = !DILocation(line: 952, column: 28, scope: !4555)
!4735 = !DILocation(line: 952, column: 30, scope: !4555)
!4736 = !DILocation(line: 952, column: 2, scope: !4555)
!4737 = !DILocation(line: 953, column: 13, scope: !4555)
!4738 = !DILocation(line: 953, column: 17, scope: !4555)
!4739 = !DILocation(line: 953, column: 15, scope: !4555)
!4740 = !DILocation(line: 953, column: 22, scope: !4555)
!4741 = !DILocation(line: 953, column: 27, scope: !4555)
!4742 = !DILocation(line: 953, column: 29, scope: !4555)
!4743 = !DILocation(line: 953, column: 2, scope: !4555)
!4744 = !DILocation(line: 954, column: 13, scope: !4555)
!4745 = !DILocation(line: 954, column: 17, scope: !4555)
!4746 = !DILocation(line: 954, column: 15, scope: !4555)
!4747 = !DILocation(line: 954, column: 22, scope: !4555)
!4748 = !DILocation(line: 954, column: 27, scope: !4555)
!4749 = !DILocation(line: 954, column: 29, scope: !4555)
!4750 = !DILocation(line: 954, column: 2, scope: !4555)
!4751 = !DILocation(line: 955, column: 2, scope: !4555)
!4752 = !DILocation(line: 956, column: 2, scope: !4555)
!4753 = !DILocation(line: 957, column: 13, scope: !4555)
!4754 = !DILocation(line: 957, column: 17, scope: !4555)
!4755 = !DILocation(line: 957, column: 15, scope: !4555)
!4756 = !DILocation(line: 957, column: 22, scope: !4555)
!4757 = !DILocation(line: 957, column: 28, scope: !4555)
!4758 = !DILocation(line: 957, column: 32, scope: !4555)
!4759 = !DILocation(line: 957, column: 30, scope: !4555)
!4760 = !DILocation(line: 957, column: 37, scope: !4555)
!4761 = !DILocation(line: 957, column: 2, scope: !4555)
!4762 = !DILocation(line: 958, column: 13, scope: !4555)
!4763 = !DILocation(line: 958, column: 17, scope: !4555)
!4764 = !DILocation(line: 958, column: 15, scope: !4555)
!4765 = !DILocation(line: 958, column: 22, scope: !4555)
!4766 = !DILocation(line: 958, column: 27, scope: !4555)
!4767 = !DILocation(line: 958, column: 31, scope: !4555)
!4768 = !DILocation(line: 958, column: 29, scope: !4555)
!4769 = !DILocation(line: 958, column: 36, scope: !4555)
!4770 = !DILocation(line: 958, column: 2, scope: !4555)
!4771 = !DILocation(line: 959, column: 13, scope: !4555)
!4772 = !DILocation(line: 959, column: 17, scope: !4555)
!4773 = !DILocation(line: 959, column: 15, scope: !4555)
!4774 = !DILocation(line: 959, column: 22, scope: !4555)
!4775 = !DILocation(line: 959, column: 27, scope: !4555)
!4776 = !DILocation(line: 959, column: 31, scope: !4555)
!4777 = !DILocation(line: 959, column: 29, scope: !4555)
!4778 = !DILocation(line: 959, column: 36, scope: !4555)
!4779 = !DILocation(line: 959, column: 2, scope: !4555)
!4780 = !DILocation(line: 960, column: 2, scope: !4555)
!4781 = !DILocation(line: 961, column: 2, scope: !4555)
!4782 = !DILocation(line: 963, column: 4, scope: !4555)
!4783 = !DILocation(line: 963, column: 12, scope: !4555)
!4784 = !DILocation(line: 963, column: 31, scope: !4555)
!4785 = !DILocation(line: 964, column: 11, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 964, column: 2)
!4787 = !DILocation(line: 964, column: 9, scope: !4786)
!4788 = !DILocation(line: 964, column: 7, scope: !4786)
!4789 = !DILocation(line: 964, column: 18, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 964, column: 2)
!4791 = !DILocation(line: 964, column: 17, scope: !4790)
!4792 = !DILocation(line: 964, column: 2, scope: !4786)
!4793 = !DILocation(line: 965, column: 8, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 965, column: 7)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !1, line: 964, column: 26)
!4796 = !DILocation(line: 965, column: 7, scope: !4794)
!4797 = !DILocation(line: 965, column: 10, scope: !4794)
!4798 = !DILocation(line: 965, column: 18, scope: !4794)
!4799 = !DILocation(line: 965, column: 23, scope: !4794)
!4800 = !DILocation(line: 965, column: 21, scope: !4794)
!4801 = !DILocation(line: 965, column: 28, scope: !4794)
!4802 = !DILocation(line: 965, column: 7, scope: !4795)
!4803 = !DILocation(line: 965, column: 39, scope: !4794)
!4804 = !DILocation(line: 965, column: 44, scope: !4794)
!4805 = !DILocation(line: 965, column: 37, scope: !4794)
!4806 = !DILocation(line: 966, column: 8, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 966, column: 7)
!4808 = !DILocation(line: 966, column: 7, scope: !4807)
!4809 = !DILocation(line: 966, column: 10, scope: !4807)
!4810 = !DILocation(line: 966, column: 17, scope: !4807)
!4811 = !DILocation(line: 966, column: 21, scope: !4807)
!4812 = !DILocation(line: 966, column: 20, scope: !4807)
!4813 = !DILocation(line: 966, column: 23, scope: !4807)
!4814 = !DILocation(line: 966, column: 7, scope: !4795)
!4815 = !DILocation(line: 967, column: 9, scope: !4807)
!4816 = !DILocation(line: 967, column: 7, scope: !4807)
!4817 = !DILocation(line: 967, column: 4, scope: !4807)
!4818 = !DILocation(line: 968, column: 13, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4807, file: !1, line: 968, column: 12)
!4820 = !DILocation(line: 968, column: 12, scope: !4819)
!4821 = !DILocation(line: 968, column: 15, scope: !4819)
!4822 = !DILocation(line: 968, column: 12, scope: !4807)
!4823 = !DILocation(line: 969, column: 8, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4819, file: !1, line: 968, column: 24)
!4825 = !DILocation(line: 969, column: 4, scope: !4824)
!4826 = !DILocation(line: 969, column: 11, scope: !4824)
!4827 = !DILocation(line: 970, column: 8, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4824, file: !1, line: 970, column: 8)
!4829 = !DILocation(line: 970, column: 14, scope: !4828)
!4830 = !DILocation(line: 970, column: 8, scope: !4824)
!4831 = !DILocation(line: 971, column: 10, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4828, file: !1, line: 970, column: 20)
!4833 = !DILocation(line: 971, column: 14, scope: !4832)
!4834 = !DILocation(line: 971, column: 7, scope: !4832)
!4835 = !DILocation(line: 972, column: 15, scope: !4832)
!4836 = !DILocation(line: 972, column: 19, scope: !4832)
!4837 = !DILocation(line: 972, column: 30, scope: !4832)
!4838 = !DILocation(line: 972, column: 32, scope: !4832)
!4839 = !DILocation(line: 972, column: 37, scope: !4832)
!4840 = !DILocation(line: 972, column: 39, scope: !4832)
!4841 = !DILocation(line: 972, column: 5, scope: !4832)
!4842 = !DILocation(line: 973, column: 4, scope: !4832)
!4843 = !DILocation(line: 974, column: 6, scope: !4824)
!4844 = !DILocation(line: 974, column: 14, scope: !4824)
!4845 = !DILocation(line: 974, column: 32, scope: !4824)
!4846 = !DILocation(line: 975, column: 3, scope: !4824)
!4847 = !DILocation(line: 976, column: 15, scope: !4795)
!4848 = !DILocation(line: 976, column: 14, scope: !4795)
!4849 = !DILocation(line: 976, column: 8, scope: !4795)
!4850 = !DILocation(line: 976, column: 3, scope: !4795)
!4851 = !DILocation(line: 976, column: 12, scope: !4795)
!4852 = !DILocation(line: 977, column: 7, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 977, column: 7)
!4854 = !DILocation(line: 977, column: 9, scope: !4853)
!4855 = !DILocation(line: 977, column: 7, scope: !4795)
!4856 = !DILocation(line: 978, column: 8, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !1, line: 977, column: 23)
!4858 = !DILocation(line: 978, column: 4, scope: !4857)
!4859 = !DILocation(line: 978, column: 12, scope: !4857)
!4860 = !DILocation(line: 979, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !1, line: 979, column: 8)
!4862 = !DILocation(line: 979, column: 14, scope: !4861)
!4863 = !DILocation(line: 979, column: 8, scope: !4857)
!4864 = !DILocation(line: 980, column: 10, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4861, file: !1, line: 979, column: 20)
!4866 = !DILocation(line: 980, column: 14, scope: !4865)
!4867 = !DILocation(line: 980, column: 7, scope: !4865)
!4868 = !DILocation(line: 981, column: 15, scope: !4865)
!4869 = !DILocation(line: 981, column: 19, scope: !4865)
!4870 = !DILocation(line: 981, column: 30, scope: !4865)
!4871 = !DILocation(line: 981, column: 32, scope: !4865)
!4872 = !DILocation(line: 981, column: 37, scope: !4865)
!4873 = !DILocation(line: 981, column: 39, scope: !4865)
!4874 = !DILocation(line: 981, column: 5, scope: !4865)
!4875 = !DILocation(line: 982, column: 4, scope: !4865)
!4876 = !DILocation(line: 983, column: 9, scope: !4857)
!4877 = !DILocation(line: 983, column: 13, scope: !4857)
!4878 = !DILocation(line: 983, column: 11, scope: !4857)
!4879 = !DILocation(line: 983, column: 16, scope: !4857)
!4880 = !DILocation(line: 983, column: 6, scope: !4857)
!4881 = !DILocation(line: 984, column: 6, scope: !4857)
!4882 = !DILocation(line: 984, column: 14, scope: !4857)
!4883 = !DILocation(line: 984, column: 32, scope: !4857)
!4884 = !DILocation(line: 985, column: 3, scope: !4857)
!4885 = !DILocation(line: 986, column: 7, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 986, column: 7)
!4887 = !DILocation(line: 986, column: 13, scope: !4886)
!4888 = !DILocation(line: 986, column: 7, scope: !4795)
!4889 = !DILocation(line: 986, column: 28, scope: !4886)
!4890 = !DILocation(line: 987, column: 2, scope: !4795)
!4891 = !DILocation(line: 964, column: 22, scope: !4790)
!4892 = !DILocation(line: 964, column: 2, scope: !4790)
!4893 = distinct !{!4893, !4792, !4894}
!4894 = !DILocation(line: 987, column: 2, scope: !4786)
!4895 = !DILocation(line: 993, column: 1, scope: !4555)
!4896 = distinct !DISubprogram(name: "draw_suggestion_list", scope: !1, file: !1, line: 997, type: !1401, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!4897 = !DILocalVariable(name: "st", arg: 1, scope: !4896, file: !1, line: 997, type: !277)
!4898 = !DILocation(line: 997, column: 45, scope: !4896)
!4899 = !DILocalVariable(name: "ar", arg: 2, scope: !4896, file: !1, line: 997, type: !439)
!4900 = !DILocation(line: 997, column: 58, scope: !4896)
!4901 = !DILocalVariable(name: "item", scope: !4896, file: !1, line: 999, type: !4902)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DIDerivedType(tag: DW_TAG_typedef, name: "SuggItem", file: !4904, line: 59, baseType: !4905)
!4904 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_suggestions.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SuggItem", file: !4904, line: 55, size: 256, elements: !4906)
!4906 = !{!4907, !4909, !4910, !4911}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4905, file: !4904, line: 56, baseType: !4908, size: 64)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4905, file: !4904, line: 56, baseType: !4908, size: 64, offset: 64)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4905, file: !4904, line: 57, baseType: !372, size: 64, offset: 128)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4905, file: !4904, line: 58, baseType: !261, size: 8, offset: 192)
!4912 = !DILocation(line: 999, column: 12, scope: !4896)
!4913 = !DILocalVariable(name: "first", scope: !4896, file: !1, line: 999, type: !4902)
!4914 = !DILocation(line: 999, column: 19, scope: !4896)
!4915 = !DILocalVariable(name: "last", scope: !4896, file: !1, line: 999, type: !4902)
!4916 = !DILocation(line: 999, column: 27, scope: !4896)
!4917 = !DILocalVariable(name: "sel", scope: !4896, file: !1, line: 999, type: !4902)
!4918 = !DILocation(line: 999, column: 34, scope: !4896)
!4919 = !DILocalVariable(name: "str", scope: !4896, file: !1, line: 1000, type: !4920)
!4920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 968, elements: !4921)
!4921 = !{!4922}
!4922 = !DISubrange(count: 121)
!4923 = !DILocation(line: 1000, column: 7, scope: !4896)
!4924 = !DILocalVariable(name: "offl", scope: !4896, file: !1, line: 1001, type: !244)
!4925 = !DILocation(line: 1001, column: 6, scope: !4896)
!4926 = !DILocalVariable(name: "offc", scope: !4896, file: !1, line: 1001, type: !244)
!4927 = !DILocation(line: 1001, column: 12, scope: !4896)
!4928 = !DILocalVariable(name: "vcurl", scope: !4896, file: !1, line: 1001, type: !244)
!4929 = !DILocation(line: 1001, column: 18, scope: !4896)
!4930 = !DILocalVariable(name: "vcurc", scope: !4896, file: !1, line: 1001, type: !244)
!4931 = !DILocation(line: 1001, column: 25, scope: !4896)
!4932 = !DILocalVariable(name: "w", scope: !4896, file: !1, line: 1002, type: !244)
!4933 = !DILocation(line: 1002, column: 6, scope: !4896)
!4934 = !DILocalVariable(name: "boxw", scope: !4896, file: !1, line: 1002, type: !244)
!4935 = !DILocation(line: 1002, column: 9, scope: !4896)
!4936 = !DILocalVariable(name: "boxh", scope: !4896, file: !1, line: 1002, type: !244)
!4937 = !DILocation(line: 1002, column: 19, scope: !4896)
!4938 = !DILocalVariable(name: "i", scope: !4896, file: !1, line: 1002, type: !244)
!4939 = !DILocation(line: 1002, column: 25, scope: !4896)
!4940 = !DILocalVariable(name: "x", scope: !4896, file: !1, line: 1002, type: !244)
!4941 = !DILocation(line: 1002, column: 28, scope: !4896)
!4942 = !DILocalVariable(name: "y", scope: !4896, file: !1, line: 1002, type: !244)
!4943 = !DILocation(line: 1002, column: 31, scope: !4896)
!4944 = !DILocalVariable(name: "top", scope: !4896, file: !1, line: 1002, type: !251)
!4945 = !DILocation(line: 1002, column: 35, scope: !4896)
!4946 = !DILocalVariable(name: "lheight", scope: !4896, file: !1, line: 1003, type: !2680)
!4947 = !DILocation(line: 1003, column: 12, scope: !4896)
!4948 = !DILocation(line: 1003, column: 22, scope: !4896)
!4949 = !DILocation(line: 1003, column: 26, scope: !4896)
!4950 = !DILocation(line: 1003, column: 40, scope: !4896)
!4951 = !DILocation(line: 1003, column: 38, scope: !4896)
!4952 = !DILocalVariable(name: "margin_x", scope: !4896, file: !1, line: 1004, type: !2680)
!4953 = !DILocation(line: 1004, column: 12, scope: !4896)
!4954 = !DILocation(line: 1006, column: 7, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1006, column: 6)
!4956 = !DILocation(line: 1006, column: 11, scope: !4955)
!4957 = !DILocation(line: 1006, column: 6, scope: !4896)
!4958 = !DILocation(line: 1006, column: 17, scope: !4955)
!4959 = !DILocation(line: 1007, column: 31, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1007, column: 6)
!4961 = !DILocation(line: 1007, column: 35, scope: !4960)
!4962 = !DILocation(line: 1007, column: 7, scope: !4960)
!4963 = !DILocation(line: 1007, column: 6, scope: !4896)
!4964 = !DILocation(line: 1007, column: 42, scope: !4960)
!4965 = !DILocation(line: 1009, column: 10, scope: !4896)
!4966 = !DILocation(line: 1009, column: 8, scope: !4896)
!4967 = !DILocation(line: 1010, column: 9, scope: !4896)
!4968 = !DILocation(line: 1010, column: 7, scope: !4896)
!4969 = !DILocation(line: 1012, column: 7, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1012, column: 6)
!4971 = !DILocation(line: 1012, column: 13, scope: !4970)
!4972 = !DILocation(line: 1012, column: 17, scope: !4970)
!4973 = !DILocation(line: 1012, column: 6, scope: !4896)
!4974 = !DILocation(line: 1012, column: 23, scope: !4970)
!4975 = !DILocation(line: 1014, column: 2, scope: !4896)
!4976 = !DILocation(line: 1015, column: 8, scope: !4896)
!4977 = !DILocation(line: 1015, column: 6, scope: !4896)
!4978 = !DILocation(line: 1016, column: 8, scope: !4896)
!4979 = !DILocation(line: 1016, column: 6, scope: !4896)
!4980 = !DILocation(line: 1018, column: 14, scope: !4896)
!4981 = !DILocation(line: 1018, column: 18, scope: !4896)
!4982 = !DILocation(line: 1018, column: 22, scope: !4896)
!4983 = !DILocation(line: 1018, column: 26, scope: !4896)
!4984 = !DILocation(line: 1018, column: 32, scope: !4896)
!4985 = !DILocation(line: 1018, column: 38, scope: !4896)
!4986 = !DILocation(line: 1018, column: 42, scope: !4896)
!4987 = !DILocation(line: 1018, column: 48, scope: !4896)
!4988 = !DILocation(line: 1018, column: 2, scope: !4896)
!4989 = !DILocation(line: 1019, column: 23, scope: !4896)
!4990 = !DILocation(line: 1019, column: 27, scope: !4896)
!4991 = !DILocation(line: 1019, column: 33, scope: !4896)
!4992 = !DILocation(line: 1019, column: 39, scope: !4896)
!4993 = !DILocation(line: 1019, column: 46, scope: !4896)
!4994 = !DILocation(line: 1019, column: 50, scope: !4896)
!4995 = !DILocation(line: 1019, column: 56, scope: !4896)
!4996 = !DILocation(line: 1019, column: 10, scope: !4896)
!4997 = !DILocation(line: 1019, column: 64, scope: !4896)
!4998 = !DILocation(line: 1019, column: 68, scope: !4896)
!4999 = !DILocation(line: 1019, column: 62, scope: !4896)
!5000 = !DILocation(line: 1019, column: 74, scope: !4896)
!5001 = !DILocation(line: 1019, column: 72, scope: !4896)
!5002 = !DILocation(line: 1019, column: 8, scope: !4896)
!5003 = !DILocation(line: 1020, column: 28, scope: !4896)
!5004 = !DILocation(line: 1020, column: 32, scope: !4896)
!5005 = !DILocation(line: 1020, column: 36, scope: !4896)
!5006 = !DILocation(line: 1020, column: 42, scope: !4896)
!5007 = !DILocation(line: 1020, column: 48, scope: !4896)
!5008 = !DILocation(line: 1020, column: 54, scope: !4896)
!5009 = !DILocation(line: 1020, column: 58, scope: !4896)
!5010 = !DILocation(line: 1020, column: 64, scope: !4896)
!5011 = !DILocation(line: 1020, column: 10, scope: !4896)
!5012 = !DILocation(line: 1020, column: 72, scope: !4896)
!5013 = !DILocation(line: 1020, column: 76, scope: !4896)
!5014 = !DILocation(line: 1020, column: 70, scope: !4896)
!5015 = !DILocation(line: 1020, column: 83, scope: !4896)
!5016 = !DILocation(line: 1020, column: 81, scope: !4896)
!5017 = !DILocation(line: 1020, column: 8, scope: !4896)
!5018 = !DILocation(line: 1022, column: 6, scope: !4896)
!5019 = !DILocation(line: 1022, column: 10, scope: !4896)
!5020 = !DILocation(line: 1022, column: 24, scope: !4896)
!5021 = !DILocation(line: 1022, column: 37, scope: !4896)
!5022 = !DILocation(line: 1022, column: 35, scope: !4896)
!5023 = !DILocation(line: 1022, column: 48, scope: !4896)
!5024 = !DILocation(line: 1022, column: 4, scope: !4896)
!5025 = !DILocation(line: 1023, column: 7, scope: !4896)
!5026 = !DILocation(line: 1023, column: 15, scope: !4896)
!5027 = !DILocation(line: 1023, column: 19, scope: !4896)
!5028 = !DILocation(line: 1023, column: 13, scope: !4896)
!5029 = !DILocation(line: 1023, column: 26, scope: !4896)
!5030 = !DILocation(line: 1023, column: 4, scope: !4896)
!5031 = !DILocation(line: 1024, column: 6, scope: !4896)
!5032 = !DILocation(line: 1024, column: 10, scope: !4896)
!5033 = !DILocation(line: 1024, column: 18, scope: !4896)
!5034 = !DILocation(line: 1024, column: 24, scope: !4896)
!5035 = !DILocation(line: 1024, column: 31, scope: !4896)
!5036 = !DILocation(line: 1024, column: 29, scope: !4896)
!5037 = !DILocation(line: 1024, column: 15, scope: !4896)
!5038 = !DILocation(line: 1024, column: 39, scope: !4896)
!5039 = !DILocation(line: 1024, column: 4, scope: !4896)
!5040 = !DILocation(line: 1028, column: 7, scope: !4896)
!5041 = !DILocation(line: 1028, column: 11, scope: !4896)
!5042 = !DILocation(line: 1028, column: 21, scope: !4896)
!5043 = !DILocation(line: 1028, column: 25, scope: !4896)
!5044 = !DILocation(line: 1028, column: 31, scope: !4896)
!5045 = !DILocation(line: 1028, column: 65, scope: !4896)
!5046 = !DILocation(line: 1028, column: 69, scope: !4896)
!5047 = !DILocation(line: 1028, column: 75, scope: !4896)
!5048 = !DILocation(line: 1028, column: 81, scope: !4896)
!5049 = !DILocation(line: 1028, column: 87, scope: !4896)
!5050 = !DILocation(line: 1028, column: 91, scope: !4896)
!5051 = !DILocation(line: 1028, column: 97, scope: !4896)
!5052 = !DILocation(line: 1028, column: 38, scope: !4896)
!5053 = !DILocation(line: 1028, column: 36, scope: !4896)
!5054 = !DILocation(line: 1028, column: 18, scope: !4896)
!5055 = !DILocation(line: 1028, column: 4, scope: !4896)
!5056 = !DILocation(line: 1030, column: 27, scope: !4896)
!5057 = !DILocation(line: 1030, column: 31, scope: !4896)
!5058 = !DILocation(line: 1030, column: 25, scope: !4896)
!5059 = !DILocation(line: 1030, column: 38, scope: !4896)
!5060 = !DILocation(line: 1030, column: 7, scope: !4896)
!5061 = !DILocation(line: 1031, column: 26, scope: !4896)
!5062 = !DILocation(line: 1031, column: 24, scope: !4896)
!5063 = !DILocation(line: 1031, column: 34, scope: !4896)
!5064 = !DILocation(line: 1031, column: 7, scope: !4896)
!5065 = !DILocation(line: 1033, column: 6, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1033, column: 6)
!5067 = !DILocation(line: 1033, column: 10, scope: !5066)
!5068 = !DILocation(line: 1033, column: 8, scope: !5066)
!5069 = !DILocation(line: 1033, column: 17, scope: !5066)
!5070 = !DILocation(line: 1033, column: 21, scope: !5066)
!5071 = !DILocation(line: 1033, column: 15, scope: !5066)
!5072 = !DILocation(line: 1033, column: 6, scope: !4896)
!5073 = !DILocation(line: 1034, column: 7, scope: !5066)
!5074 = !DILocation(line: 1034, column: 5, scope: !5066)
!5075 = !DILocation(line: 1034, column: 3, scope: !5066)
!5076 = !DILocation(line: 1037, column: 23, scope: !4896)
!5077 = !DILocation(line: 1037, column: 26, scope: !4896)
!5078 = !DILocation(line: 1037, column: 30, scope: !4896)
!5079 = !DILocation(line: 1037, column: 28, scope: !4896)
!5080 = !DILocation(line: 1037, column: 36, scope: !4896)
!5081 = !DILocation(line: 1037, column: 40, scope: !4896)
!5082 = !DILocation(line: 1037, column: 38, scope: !4896)
!5083 = !DILocation(line: 1037, column: 46, scope: !4896)
!5084 = !DILocation(line: 1037, column: 2, scope: !4896)
!5085 = !DILocation(line: 1039, column: 2, scope: !4896)
!5086 = !DILocation(line: 1040, column: 10, scope: !4896)
!5087 = !DILocation(line: 1040, column: 12, scope: !4896)
!5088 = !DILocation(line: 1040, column: 17, scope: !4896)
!5089 = !DILocation(line: 1040, column: 19, scope: !4896)
!5090 = !DILocation(line: 1040, column: 24, scope: !4896)
!5091 = !DILocation(line: 1040, column: 28, scope: !4896)
!5092 = !DILocation(line: 1040, column: 26, scope: !4896)
!5093 = !DILocation(line: 1040, column: 33, scope: !4896)
!5094 = !DILocation(line: 1040, column: 38, scope: !4896)
!5095 = !DILocation(line: 1040, column: 42, scope: !4896)
!5096 = !DILocation(line: 1040, column: 40, scope: !4896)
!5097 = !DILocation(line: 1040, column: 47, scope: !4896)
!5098 = !DILocation(line: 1040, column: 2, scope: !4896)
!5099 = !DILocation(line: 1041, column: 2, scope: !4896)
!5100 = !DILocation(line: 1042, column: 10, scope: !4896)
!5101 = !DILocation(line: 1042, column: 13, scope: !4896)
!5102 = !DILocation(line: 1042, column: 16, scope: !4896)
!5103 = !DILocation(line: 1042, column: 20, scope: !4896)
!5104 = !DILocation(line: 1042, column: 18, scope: !4896)
!5105 = !DILocation(line: 1042, column: 26, scope: !4896)
!5106 = !DILocation(line: 1042, column: 30, scope: !4896)
!5107 = !DILocation(line: 1042, column: 28, scope: !4896)
!5108 = !DILocation(line: 1042, column: 2, scope: !4896)
!5109 = !DILocation(line: 1045, column: 9, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1045, column: 2)
!5111 = !DILocation(line: 1045, column: 21, scope: !5110)
!5112 = !DILocation(line: 1045, column: 19, scope: !5110)
!5113 = !DILocation(line: 1045, column: 7, scope: !5110)
!5114 = !DILocation(line: 1045, column: 28, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 1045, column: 2)
!5116 = !DILocation(line: 1045, column: 33, scope: !5115)
!5117 = !DILocation(line: 1045, column: 32, scope: !5115)
!5118 = !DILocation(line: 1045, column: 30, scope: !5115)
!5119 = !DILocation(line: 1045, column: 37, scope: !5115)
!5120 = !DILocation(line: 1045, column: 40, scope: !5115)
!5121 = !DILocation(line: 1045, column: 46, scope: !5115)
!5122 = !DILocation(line: 0, scope: !5115)
!5123 = !DILocation(line: 1045, column: 2, scope: !5110)
!5124 = !DILocation(line: 1045, column: 53, scope: !5115)
!5125 = !DILocation(line: 1045, column: 64, scope: !5115)
!5126 = !DILocation(line: 1045, column: 70, scope: !5115)
!5127 = !DILocation(line: 1045, column: 62, scope: !5115)
!5128 = !DILocation(line: 1045, column: 2, scope: !5115)
!5129 = distinct !{!5129, !5123, !5130}
!5130 = !DILocation(line: 1045, column: 76, scope: !5110)
!5131 = !DILocation(line: 1047, column: 9, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1047, column: 2)
!5133 = !DILocation(line: 1047, column: 7, scope: !5132)
!5134 = !DILocation(line: 1047, column: 14, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !1, line: 1047, column: 2)
!5136 = !DILocation(line: 1047, column: 16, scope: !5135)
!5137 = !DILocation(line: 1047, column: 33, scope: !5135)
!5138 = !DILocation(line: 1047, column: 36, scope: !5135)
!5139 = !DILocation(line: 0, scope: !5135)
!5140 = !DILocation(line: 1047, column: 2, scope: !5132)
!5141 = !DILocalVariable(name: "len", scope: !5142, file: !1, line: 1048, type: !244)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !1, line: 1047, column: 66)
!5143 = !DILocation(line: 1048, column: 7, scope: !5142)
!5144 = !DILocation(line: 1048, column: 38, scope: !5142)
!5145 = !DILocation(line: 1048, column: 44, scope: !5142)
!5146 = !DILocation(line: 1048, column: 13, scope: !5142)
!5147 = !DILocation(line: 1048, column: 75, scope: !5142)
!5148 = !DILocation(line: 1048, column: 81, scope: !5142)
!5149 = !DILocation(line: 1048, column: 73, scope: !5142)
!5150 = !DILocation(line: 1050, column: 8, scope: !5142)
!5151 = !DILocation(line: 1050, column: 5, scope: !5142)
!5152 = !DILocation(line: 1052, column: 15, scope: !5142)
!5153 = !DILocation(line: 1052, column: 20, scope: !5142)
!5154 = !DILocation(line: 1052, column: 26, scope: !5142)
!5155 = !DILocation(line: 1052, column: 32, scope: !5142)
!5156 = !DILocation(line: 1052, column: 36, scope: !5142)
!5157 = !DILocation(line: 1052, column: 3, scope: !5142)
!5158 = !DILocation(line: 1054, column: 7, scope: !5142)
!5159 = !DILocation(line: 1054, column: 11, scope: !5142)
!5160 = !DILocation(line: 1054, column: 38, scope: !5142)
!5161 = !DILocation(line: 1054, column: 42, scope: !5142)
!5162 = !DILocation(line: 1054, column: 47, scope: !5142)
!5163 = !DILocation(line: 1054, column: 20, scope: !5142)
!5164 = !DILocation(line: 1054, column: 18, scope: !5142)
!5165 = !DILocation(line: 1054, column: 5, scope: !5142)
!5166 = !DILocation(line: 1056, column: 7, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5142, file: !1, line: 1056, column: 7)
!5168 = !DILocation(line: 1056, column: 15, scope: !5167)
!5169 = !DILocation(line: 1056, column: 12, scope: !5167)
!5170 = !DILocation(line: 1056, column: 7, scope: !5142)
!5171 = !DILocation(line: 1057, column: 4, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5167, file: !1, line: 1056, column: 20)
!5173 = !DILocation(line: 1058, column: 12, scope: !5172)
!5174 = !DILocation(line: 1058, column: 14, scope: !5172)
!5175 = !DILocation(line: 1058, column: 26, scope: !5172)
!5176 = !DILocation(line: 1058, column: 28, scope: !5172)
!5177 = !DILocation(line: 1058, column: 33, scope: !5172)
!5178 = !DILocation(line: 1058, column: 35, scope: !5172)
!5179 = !DILocation(line: 1058, column: 48, scope: !5172)
!5180 = !DILocation(line: 1058, column: 46, scope: !5172)
!5181 = !DILocation(line: 1058, column: 51, scope: !5172)
!5182 = !DILocation(line: 1058, column: 55, scope: !5172)
!5183 = !DILocation(line: 1058, column: 53, scope: !5172)
!5184 = !DILocation(line: 1058, column: 63, scope: !5172)
!5185 = !DILocation(line: 1058, column: 4, scope: !5172)
!5186 = !DILocation(line: 1059, column: 3, scope: !5172)
!5187 = !DILocation(line: 1061, column: 21, scope: !5142)
!5188 = !DILocation(line: 1061, column: 27, scope: !5142)
!5189 = !DILocation(line: 1061, column: 3, scope: !5142)
!5190 = !DILocation(line: 1062, column: 13, scope: !5142)
!5191 = !DILocation(line: 1062, column: 17, scope: !5142)
!5192 = !DILocation(line: 1062, column: 28, scope: !5142)
!5193 = !DILocation(line: 1062, column: 30, scope: !5142)
!5194 = !DILocation(line: 1062, column: 42, scope: !5142)
!5195 = !DILocation(line: 1062, column: 44, scope: !5142)
!5196 = !DILocation(line: 1062, column: 3, scope: !5142)
!5197 = !DILocation(line: 1064, column: 7, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5142, file: !1, line: 1064, column: 7)
!5199 = !DILocation(line: 1064, column: 15, scope: !5198)
!5200 = !DILocation(line: 1064, column: 12, scope: !5198)
!5201 = !DILocation(line: 1064, column: 7, scope: !5142)
!5202 = !DILocation(line: 1064, column: 21, scope: !5198)
!5203 = !DILocation(line: 1065, column: 2, scope: !5142)
!5204 = !DILocation(line: 1047, column: 43, scope: !5135)
!5205 = !DILocation(line: 1047, column: 54, scope: !5135)
!5206 = !DILocation(line: 1047, column: 60, scope: !5135)
!5207 = !DILocation(line: 1047, column: 52, scope: !5135)
!5208 = !DILocation(line: 1047, column: 2, scope: !5135)
!5209 = distinct !{!5209, !5140, !5210}
!5210 = !DILocation(line: 1065, column: 2, scope: !5132)
!5211 = !DILocation(line: 1066, column: 1, scope: !4896)
!5212 = distinct !DISubprogram(name: "text_font_end", scope: !1, file: !1, line: 66, type: !1309, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!5213 = !DILocalVariable(name: "UNUSED_st", arg: 1, scope: !5212, file: !1, line: 66, type: !277)
!5214 = !DILocation(line: 66, column: 38, scope: !5212)
!5215 = !DILocation(line: 68, column: 1, scope: !5212)
!5216 = distinct !DISubprogram(name: "text_update_character_width", scope: !1, file: !1, line: 1454, type: !1309, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!5217 = !DILocalVariable(name: "st", arg: 1, scope: !5216, file: !1, line: 1454, type: !277)
!5218 = !DILocation(line: 1454, column: 45, scope: !5216)
!5219 = !DILocation(line: 1456, column: 18, scope: !5216)
!5220 = !DILocation(line: 1456, column: 2, scope: !5216)
!5221 = !DILocation(line: 1457, column: 31, scope: !5216)
!5222 = !DILocation(line: 1457, column: 15, scope: !5216)
!5223 = !DILocation(line: 1457, column: 2, scope: !5216)
!5224 = !DILocation(line: 1457, column: 6, scope: !5216)
!5225 = !DILocation(line: 1457, column: 13, scope: !5216)
!5226 = !DILocation(line: 1458, column: 15, scope: !5216)
!5227 = !DILocation(line: 1458, column: 2, scope: !5216)
!5228 = !DILocation(line: 1458, column: 6, scope: !5216)
!5229 = !DILocation(line: 1458, column: 13, scope: !5216)
!5230 = !DILocation(line: 1459, column: 16, scope: !5216)
!5231 = !DILocation(line: 1459, column: 2, scope: !5216)
!5232 = !DILocation(line: 1460, column: 1, scope: !5216)
!5233 = distinct !DISubprogram(name: "text_scroll_to_cursor", scope: !1, file: !1, line: 1464, type: !5234, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{null, !277, !5236}
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !211, line: 228, baseType: !5238)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !211, line: 203, size: 1280, elements: !5239)
!5239 = !{!5240, !5242, !5243, !5260, !5261, !5262, !5263, !6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462, !6465, !6466, !6467, !6468}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5238, file: !211, line: 204, baseType: !5241, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5238, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5238, file: !211, line: 204, baseType: !5241, size: 64, offset: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5238, file: !211, line: 206, baseType: !5244, size: 64, offset: 128)
!5244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 64)
!5245 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !211, line: 87, baseType: !5246)
!5246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !211, line: 82, size: 256, elements: !5247)
!5247 = !{!5248, !5250, !5251, !5252, !5258, !5259}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5246, file: !211, line: 83, baseType: !5249, size: 64)
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5246, size: 64)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5246, file: !211, line: 83, baseType: !5249, size: 64, offset: 64)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !5246, file: !211, line: 83, baseType: !5249, size: 64, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5246, file: !211, line: 84, baseType: !5253, size: 32, offset: 192)
!5253 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !414, line: 43, baseType: !5254)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !414, line: 41, size: 32, elements: !5255)
!5255 = !{!5256, !5257}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5254, file: !414, line: 42, baseType: !259, size: 16)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5254, file: !414, line: 42, baseType: !259, size: 16, offset: 16)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5246, file: !211, line: 86, baseType: !259, size: 16, offset: 224)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5246, file: !211, line: 86, baseType: !259, size: 16, offset: 240)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5238, file: !211, line: 206, baseType: !5244, size: 64, offset: 192)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5238, file: !211, line: 206, baseType: !5244, size: 64, offset: 256)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5238, file: !211, line: 206, baseType: !5244, size: 64, offset: 320)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !5238, file: !211, line: 207, baseType: !5264, size: 64, offset: 384)
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 64)
!5265 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !211, line: 80, baseType: !5266)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !211, line: 49, size: 1984, elements: !5267)
!5267 = !{!5268, !5269, !5270, !5271, !5272, !5273, !6434, !6435, !6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5266, file: !211, line: 50, baseType: !313, size: 960)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !5266, file: !211, line: 52, baseType: !290, size: 128, offset: 960)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !5266, file: !211, line: 53, baseType: !290, size: 128, offset: 1088)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !5266, file: !211, line: 54, baseType: !290, size: 128, offset: 1216)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5266, file: !211, line: 55, baseType: !290, size: 128, offset: 1344)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5266, file: !211, line: 57, baseType: !5274, size: 64, offset: 1472)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 64)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !5276, line: 1216, size: 39680, elements: !5277)
!5276 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5277 = !{!5278, !5279, !5283, !5287, !5290, !5291, !5292, !5304, !5305, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5319, !5387, !5813, !6026, !6029, !6305, !6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6327, !6328, !6329, !6330, !6331, !6339, !6405, !6412, !6413, !6420, !6421, !6427, !6428, !6429, !6430, !6431}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5275, file: !5276, line: 1217, baseType: !313, size: 960)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5275, file: !5276, line: 1218, baseType: !5280, size: 64, offset: 960)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !5282, line: 43, flags: DIFlagFwdDecl)
!5282 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !5275, file: !5276, line: 1220, baseType: !5284, size: 64, offset: 1024)
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !5286, line: 152, flags: DIFlagFwdDecl)
!5286 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !5275, file: !5276, line: 1221, baseType: !5288, size: 64, offset: 1088)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 64)
!5289 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !5276, line: 52, flags: DIFlagFwdDecl)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5275, file: !5276, line: 1223, baseType: !5274, size: 64, offset: 1152)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5275, file: !5276, line: 1225, baseType: !290, size: 128, offset: 1216)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !5275, file: !5276, line: 1226, baseType: !5293, size: 64, offset: 1344)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !5276, line: 69, size: 320, elements: !5295)
!5295 = !{!5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5294, file: !5276, line: 70, baseType: !5293, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5294, file: !5276, line: 70, baseType: !5293, size: 64, offset: 64)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5294, file: !5276, line: 71, baseType: !5, size: 32, offset: 128)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !5294, file: !5276, line: 71, baseType: !5, size: 32, offset: 160)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5294, file: !5276, line: 72, baseType: !244, size: 32, offset: 192)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !5294, file: !5276, line: 73, baseType: !259, size: 16, offset: 224)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !5294, file: !5276, line: 73, baseType: !259, size: 16, offset: 240)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5294, file: !5276, line: 74, baseType: !5284, size: 64, offset: 256)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !5275, file: !5276, line: 1227, baseType: !5284, size: 64, offset: 1408)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !5275, file: !5276, line: 1229, baseType: !5306, size: 96, offset: 1472)
!5306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 96, elements: !4263)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !5275, file: !5276, line: 1230, baseType: !5306, size: 96, offset: 1568)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !5275, file: !5276, line: 1231, baseType: !5306, size: 96, offset: 1664)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !5275, file: !5276, line: 1231, baseType: !5306, size: 96, offset: 1760)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5275, file: !5276, line: 1233, baseType: !5, size: 32, offset: 1856)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !5275, file: !5276, line: 1234, baseType: !244, size: 32, offset: 1888)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !5275, file: !5276, line: 1235, baseType: !5, size: 32, offset: 1920)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5275, file: !5276, line: 1237, baseType: !259, size: 16, offset: 1952)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !5275, file: !5276, line: 1239, baseType: !261, size: 8, offset: 1968)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5275, file: !5276, line: 1240, baseType: !5316, size: 8, offset: 1976)
!5316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 8, elements: !5317)
!5317 = !{!5318}
!5318 = !DISubrange(count: 1)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5275, file: !5276, line: 1242, baseType: !5320, size: 64, offset: 1984)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !5322, line: 328, size: 3456, elements: !5323)
!5322 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5323 = !{!5324, !5325, !5326, !5329, !5330, !5333, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5358, !5363, !5364, !5367, !5371, !5375, !5379, !5383, !5384, !5385, !5386}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5321, file: !5322, line: 329, baseType: !313, size: 960)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5321, file: !5322, line: 330, baseType: !5280, size: 64, offset: 960)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !5321, file: !5322, line: 332, baseType: !5327, size: 64, offset: 1024)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !5322, line: 332, flags: DIFlagFwdDecl)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !5321, file: !5322, line: 333, baseType: !357, size: 512, offset: 1088)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !5321, file: !5322, line: 335, baseType: !5331, size: 64, offset: 1600)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !5322, line: 335, flags: DIFlagFwdDecl)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5321, file: !5322, line: 337, baseType: !5334, size: 64, offset: 1664)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !5336, line: 45, flags: DIFlagFwdDecl)
!5336 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !5321, file: !5322, line: 338, baseType: !436, size: 64, offset: 1728)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !5321, file: !5322, line: 340, baseType: !290, size: 128, offset: 1792)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !5321, file: !5322, line: 340, baseType: !290, size: 128, offset: 1920)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5321, file: !5322, line: 342, baseType: !244, size: 32, offset: 2048)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5321, file: !5322, line: 342, baseType: !244, size: 32, offset: 2080)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !5321, file: !5322, line: 343, baseType: !244, size: 32, offset: 2112)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5321, file: !5322, line: 345, baseType: !244, size: 32, offset: 2144)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !5321, file: !5322, line: 346, baseType: !244, size: 32, offset: 2176)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !5321, file: !5322, line: 347, baseType: !259, size: 16, offset: 2208)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5321, file: !5322, line: 348, baseType: !259, size: 16, offset: 2224)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5321, file: !5322, line: 349, baseType: !244, size: 32, offset: 2240)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !5321, file: !5322, line: 351, baseType: !244, size: 32, offset: 2272)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !5321, file: !5322, line: 353, baseType: !259, size: 16, offset: 2304)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !5321, file: !5322, line: 354, baseType: !259, size: 16, offset: 2320)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !5321, file: !5322, line: 355, baseType: !244, size: 32, offset: 2336)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !5321, file: !5322, line: 357, baseType: !452, size: 128, offset: 2368)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !5321, file: !5322, line: 363, baseType: !290, size: 128, offset: 2496)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !5321, file: !5322, line: 363, baseType: !290, size: 128, offset: 2624)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !5321, file: !5322, line: 368, baseType: !5356, size: 64, offset: 2752)
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 64)
!5357 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !5322, line: 48, flags: DIFlagFwdDecl)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !5321, file: !5322, line: 372, baseType: !5359, size: 32, offset: 2816)
!5359 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !5322, line: 274, baseType: !5360)
!5360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !5322, line: 271, size: 32, elements: !5361)
!5361 = !{!5362}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5360, file: !5322, line: 273, baseType: !5, size: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5321, file: !5322, line: 373, baseType: !244, size: 32, offset: 2848)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !5321, file: !5322, line: 382, baseType: !5365, size: 64, offset: 2880)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !5322, line: 46, flags: DIFlagFwdDecl)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !5321, file: !5322, line: 385, baseType: !5368, size: 64, offset: 2944)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{null, !245, !269}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !5321, file: !5322, line: 386, baseType: !5372, size: 64, offset: 3008)
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 64)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !245, !372}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !5321, file: !5322, line: 387, baseType: !5376, size: 64, offset: 3072)
!5376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 64)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!244, !245}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !5321, file: !5322, line: 388, baseType: !5380, size: 64, offset: 3136)
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 64)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{null, !245}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !5321, file: !5322, line: 389, baseType: !245, size: 64, offset: 3200)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !5321, file: !5322, line: 389, baseType: !245, size: 64, offset: 3264)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !5321, file: !5322, line: 389, baseType: !245, size: 64, offset: 3328)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !5321, file: !5322, line: 389, baseType: !245, size: 64, offset: 3392)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !5275, file: !5276, line: 1244, baseType: !5388, size: 64, offset: 2048)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !5286, line: 200, size: 17024, elements: !5390)
!5390 = !{!5391, !5393, !5394, !5395, !5806, !5807, !5808, !5809, !5810, !5811, !5812}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !5389, file: !5286, line: 201, baseType: !5392, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !5389, file: !5286, line: 202, baseType: !290, size: 128, offset: 64)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !5389, file: !5286, line: 203, baseType: !290, size: 128, offset: 192)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !5389, file: !5286, line: 206, baseType: !5396, size: 64, offset: 320)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !5286, line: 190, baseType: !5398)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !5286, line: 126, size: 2816, elements: !5399)
!5399 = !{!5400, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5496, !5499, !5500, !5501, !5779, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5398, file: !5286, line: 127, baseType: !5401, size: 64)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5398, file: !5286, line: 127, baseType: !5401, size: 64, offset: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !5398, file: !5286, line: 128, baseType: !245, size: 64, offset: 128)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !5398, file: !5286, line: 129, baseType: !245, size: 64, offset: 192)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5398, file: !5286, line: 130, baseType: !357, size: 512, offset: 256)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5398, file: !5286, line: 132, baseType: !244, size: 32, offset: 768)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5398, file: !5286, line: 132, baseType: !244, size: 32, offset: 800)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5398, file: !5286, line: 133, baseType: !244, size: 32, offset: 832)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5398, file: !5286, line: 134, baseType: !244, size: 32, offset: 864)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !5398, file: !5286, line: 134, baseType: !244, size: 32, offset: 896)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !5398, file: !5286, line: 134, baseType: !244, size: 32, offset: 928)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !5398, file: !5286, line: 135, baseType: !244, size: 32, offset: 960)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !5398, file: !5286, line: 135, baseType: !244, size: 32, offset: 992)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !5398, file: !5286, line: 136, baseType: !244, size: 32, offset: 1024)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5398, file: !5286, line: 136, baseType: !244, size: 32, offset: 1056)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !5398, file: !5286, line: 137, baseType: !244, size: 32, offset: 1088)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !5398, file: !5286, line: 137, baseType: !244, size: 32, offset: 1120)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !5398, file: !5286, line: 138, baseType: !269, size: 32, offset: 1152)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !5398, file: !5286, line: 139, baseType: !269, size: 32, offset: 1184)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !5398, file: !5286, line: 139, baseType: !269, size: 32, offset: 1216)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !5398, file: !5286, line: 141, baseType: !259, size: 16, offset: 1248)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !5398, file: !5286, line: 142, baseType: !259, size: 16, offset: 1264)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !5398, file: !5286, line: 143, baseType: !244, size: 32, offset: 1280)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !5398, file: !5286, line: 144, baseType: !244, size: 32, offset: 1312)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !5398, file: !5286, line: 146, baseType: !5426, size: 64, offset: 1344)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !5286, line: 114, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !5286, line: 99, size: 7232, elements: !5429)
!5429 = !{!5430, !5432, !5433, !5434, !5435, !5436, !5437, !5445, !5449, !5464, !5473, !5480, !5490}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5428, file: !5286, line: 100, baseType: !5431, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5428, file: !5286, line: 100, baseType: !5431, size: 64, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !5428, file: !5286, line: 101, baseType: !244, size: 32, offset: 128)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5428, file: !5286, line: 101, baseType: !244, size: 32, offset: 160)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !5428, file: !5286, line: 102, baseType: !244, size: 32, offset: 192)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !5428, file: !5286, line: 102, baseType: !244, size: 32, offset: 224)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !5428, file: !5286, line: 103, baseType: !5438, size: 64, offset: 256)
!5438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5439, size: 64)
!5439 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !5286, line: 59, baseType: !5440)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !5286, line: 56, size: 2112, elements: !5441)
!5441 = !{!5442, !5443, !5444}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5440, file: !5286, line: 57, baseType: !424, size: 2048)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !5440, file: !5286, line: 58, baseType: !244, size: 32, offset: 2048)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !5440, file: !5286, line: 58, baseType: !244, size: 32, offset: 2080)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5428, file: !5286, line: 106, baseType: !5446, size: 6144, offset: 320)
!5446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 6144, elements: !5447)
!5447 = !{!5448}
!5448 = !DISubrange(count: 768)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !5428, file: !5286, line: 107, baseType: !5450, size: 64, offset: 6464)
!5450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!5451 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !5286, line: 97, baseType: !5452)
!5452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !5286, line: 83, size: 8320, elements: !5453)
!5453 = !{!5454, !5455, !5456, !5460, !5461, !5462, !5463}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5452, file: !5286, line: 84, baseType: !5446, size: 6144)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5452, file: !5286, line: 87, baseType: !424, size: 2048, offset: 6144)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !5452, file: !5286, line: 88, baseType: !5457, size: 64, offset: 8192)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !5459, line: 41, flags: DIFlagFwdDecl)
!5459 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !5452, file: !5286, line: 90, baseType: !259, size: 16, offset: 8256)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !5452, file: !5286, line: 92, baseType: !259, size: 16, offset: 8272)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !5452, file: !5286, line: 93, baseType: !259, size: 16, offset: 8288)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !5452, file: !5286, line: 95, baseType: !259, size: 16, offset: 8304)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !5428, file: !5286, line: 108, baseType: !5465, size: 64, offset: 6528)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !5286, line: 66, baseType: !5467)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !5286, line: 61, size: 128, elements: !5468)
!5468 = !{!5469, !5470, !5471, !5472}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !5467, file: !5286, line: 62, baseType: !244, size: 32)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !5467, file: !5286, line: 63, baseType: !244, size: 32, offset: 32)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !5467, file: !5286, line: 64, baseType: !244, size: 32, offset: 64)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !5467, file: !5286, line: 65, baseType: !244, size: 32, offset: 96)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !5428, file: !5286, line: 109, baseType: !5474, size: 64, offset: 6592)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5475, size: 64)
!5475 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !5286, line: 71, baseType: !5476)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !5286, line: 68, size: 64, elements: !5477)
!5477 = !{!5478, !5479}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !5476, file: !5286, line: 69, baseType: !244, size: 32)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !5476, file: !5286, line: 70, baseType: !244, size: 32, offset: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !5428, file: !5286, line: 110, baseType: !5481, size: 64, offset: 6656)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !5286, line: 81, baseType: !5483)
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !5286, line: 73, size: 352, elements: !5484)
!5484 = !{!5485, !5486, !5487, !5488, !5489}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !5483, file: !5286, line: 74, baseType: !5306, size: 96)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !5483, file: !5286, line: 75, baseType: !5306, size: 96, offset: 96)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !5483, file: !5286, line: 76, baseType: !5306, size: 96, offset: 192)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5483, file: !5286, line: 77, baseType: !244, size: 32, offset: 288)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5483, file: !5286, line: 78, baseType: !244, size: 32, offset: 320)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !5428, file: !5286, line: 113, baseType: !5491, size: 512, offset: 6720)
!5491 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !5492, line: 182, baseType: !5493)
!5492 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !5492, line: 180, size: 512, elements: !5494)
!5494 = !{!5495}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5493, file: !5492, line: 181, baseType: !357, size: 512)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5398, file: !5286, line: 148, baseType: !5497, size: 64, offset: 1408)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !5286, line: 49, flags: DIFlagFwdDecl)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5398, file: !5286, line: 151, baseType: !5274, size: 64, offset: 1472)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !5398, file: !5286, line: 152, baseType: !5284, size: 64, offset: 1536)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !5398, file: !5286, line: 153, baseType: !5502, size: 64, offset: 1600)
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5503, size: 64)
!5503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !5282, line: 64, size: 19136, elements: !5504)
!5504 = !{!5505, !5506, !5507, !5508, !5509, !5510, !5512, !5513, !5514, !5515, !5518, !5519, !5765, !5766, !5774, !5775, !5776, !5777, !5778}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5503, file: !5282, line: 65, baseType: !313, size: 960)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5503, file: !5282, line: 66, baseType: !5280, size: 64, offset: 960)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5503, file: !5282, line: 68, baseType: !332, size: 8192, offset: 1024)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5503, file: !5282, line: 70, baseType: !244, size: 32, offset: 9216)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !5503, file: !5282, line: 71, baseType: !244, size: 32, offset: 9248)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !5503, file: !5282, line: 72, baseType: !5511, size: 64, offset: 9280)
!5511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 64, elements: !437)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !5503, file: !5282, line: 74, baseType: !269, size: 32, offset: 9344)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !5503, file: !5282, line: 74, baseType: !269, size: 32, offset: 9376)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !5503, file: !5282, line: 76, baseType: !5457, size: 64, offset: 9408)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !5503, file: !5282, line: 77, baseType: !5516, size: 64, offset: 9472)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !5282, line: 77, flags: DIFlagFwdDecl)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5503, file: !5282, line: 78, baseType: !5334, size: 64, offset: 9536)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !5503, file: !5282, line: 80, baseType: !5520, size: 2624, offset: 9600)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !5336, line: 340, size: 2624, elements: !5521)
!5521 = !{!5522, !5550, !5568, !5569, !5570, !5587, !5645, !5646, !5745, !5746, !5747, !5748, !5754}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !5520, file: !5336, line: 341, baseType: !5523, size: 576)
!5523 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !5336, line: 251, baseType: !5524)
!5524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !5336, line: 207, size: 576, elements: !5525)
!5525 = !{!5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5524, file: !5336, line: 208, baseType: !244, size: 32)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !5524, file: !5336, line: 211, baseType: !259, size: 16, offset: 32)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !5524, file: !5336, line: 212, baseType: !259, size: 16, offset: 48)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !5524, file: !5336, line: 213, baseType: !269, size: 32, offset: 64)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !5524, file: !5336, line: 214, baseType: !259, size: 16, offset: 96)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !5524, file: !5336, line: 215, baseType: !259, size: 16, offset: 112)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !5524, file: !5336, line: 216, baseType: !259, size: 16, offset: 128)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !5524, file: !5336, line: 217, baseType: !259, size: 16, offset: 144)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !5524, file: !5336, line: 218, baseType: !259, size: 16, offset: 160)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !5524, file: !5336, line: 219, baseType: !259, size: 16, offset: 176)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !5524, file: !5336, line: 220, baseType: !269, size: 32, offset: 192)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !5524, file: !5336, line: 222, baseType: !259, size: 16, offset: 224)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5524, file: !5336, line: 225, baseType: !259, size: 16, offset: 240)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !5524, file: !5336, line: 228, baseType: !244, size: 32, offset: 256)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !5524, file: !5336, line: 229, baseType: !244, size: 32, offset: 288)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !5524, file: !5336, line: 233, baseType: !244, size: 32, offset: 320)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !5524, file: !5336, line: 236, baseType: !259, size: 16, offset: 352)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5524, file: !5336, line: 236, baseType: !259, size: 16, offset: 368)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !5524, file: !5336, line: 241, baseType: !269, size: 32, offset: 384)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !5524, file: !5336, line: 244, baseType: !244, size: 32, offset: 416)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !5524, file: !5336, line: 244, baseType: !244, size: 32, offset: 448)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !5524, file: !5336, line: 245, baseType: !269, size: 32, offset: 480)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !5524, file: !5336, line: 248, baseType: !269, size: 32, offset: 512)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5524, file: !5336, line: 250, baseType: !244, size: 32, offset: 544)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !5520, file: !5336, line: 342, baseType: !5551, size: 448, offset: 576)
!5551 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !5336, line: 79, baseType: !5552)
!5552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !5336, line: 61, size: 448, elements: !5553)
!5553 = !{!5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !5552, file: !5336, line: 62, baseType: !245, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !5552, file: !5336, line: 64, baseType: !259, size: 16, offset: 64)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5552, file: !5336, line: 65, baseType: !259, size: 16, offset: 80)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !5552, file: !5336, line: 67, baseType: !269, size: 32, offset: 96)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !5552, file: !5336, line: 68, baseType: !269, size: 32, offset: 128)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !5552, file: !5336, line: 69, baseType: !269, size: 32, offset: 160)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5552, file: !5336, line: 70, baseType: !259, size: 16, offset: 192)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5552, file: !5336, line: 71, baseType: !259, size: 16, offset: 208)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !5552, file: !5336, line: 72, baseType: !436, size: 64, offset: 224)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !5552, file: !5336, line: 75, baseType: !269, size: 32, offset: 288)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !5552, file: !5336, line: 75, baseType: !269, size: 32, offset: 320)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !5552, file: !5336, line: 75, baseType: !269, size: 32, offset: 352)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !5552, file: !5336, line: 78, baseType: !269, size: 32, offset: 384)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !5552, file: !5336, line: 78, baseType: !269, size: 32, offset: 416)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !5520, file: !5336, line: 343, baseType: !290, size: 128, offset: 1024)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !5520, file: !5336, line: 344, baseType: !290, size: 128, offset: 1152)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !5520, file: !5336, line: 345, baseType: !5571, size: 192, offset: 1280)
!5571 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !5336, line: 278, baseType: !5572)
!5572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !5336, line: 270, size: 192, elements: !5573)
!5573 = !{!5574, !5575, !5576, !5577, !5578}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5572, file: !5336, line: 271, baseType: !244, size: 32)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5572, file: !5336, line: 273, baseType: !269, size: 32, offset: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !5572, file: !5336, line: 275, baseType: !244, size: 32, offset: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !5572, file: !5336, line: 276, baseType: !244, size: 32, offset: 96)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !5572, file: !5336, line: 277, baseType: !5579, size: 64, offset: 128)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !5336, line: 55, size: 576, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5580, file: !5336, line: 56, baseType: !244, size: 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5580, file: !5336, line: 57, baseType: !269, size: 32, offset: 32)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5580, file: !5336, line: 58, baseType: !5585, size: 512, offset: 64)
!5585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 512, elements: !5586)
!5586 = !{!433, !433}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !5520, file: !5336, line: 346, baseType: !5588, size: 384, offset: 1472)
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !5336, line: 268, baseType: !5589)
!5589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !5336, line: 253, size: 384, elements: !5590)
!5590 = !{!5591, !5592, !5593, !5594, !5595, !5639, !5640, !5641, !5642, !5643, !5644}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5589, file: !5336, line: 254, baseType: !244, size: 32)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !5589, file: !5336, line: 255, baseType: !244, size: 32, offset: 32)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !5589, file: !5336, line: 255, baseType: !244, size: 32, offset: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !5589, file: !5336, line: 258, baseType: !269, size: 32, offset: 96)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !5589, file: !5336, line: 259, baseType: !5596, size: 64, offset: 128)
!5596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5597, size: 64)
!5597 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !5336, line: 164, baseType: !5598)
!5598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !5336, line: 108, size: 1664, elements: !5599)
!5599 = !{!5600, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5598, file: !5336, line: 109, baseType: !5601, size: 64)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5598, file: !5336, line: 109, baseType: !5601, size: 64, offset: 64)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5598, file: !5336, line: 111, baseType: !357, size: 512, offset: 128)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !5598, file: !5336, line: 119, baseType: !436, size: 64, offset: 640)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !5598, file: !5336, line: 119, baseType: !436, size: 64, offset: 704)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !5598, file: !5336, line: 125, baseType: !436, size: 64, offset: 768)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !5598, file: !5336, line: 125, baseType: !436, size: 64, offset: 832)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5598, file: !5336, line: 127, baseType: !436, size: 64, offset: 896)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !5598, file: !5336, line: 130, baseType: !244, size: 32, offset: 960)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !5598, file: !5336, line: 131, baseType: !244, size: 32, offset: 992)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !5598, file: !5336, line: 132, baseType: !5612, size: 64, offset: 1024)
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 64)
!5613 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !5336, line: 106, baseType: !5614)
!5614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !5336, line: 81, size: 512, elements: !5615)
!5615 = !{!5616, !5617, !5620, !5621, !5622, !5623}
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !5614, file: !5336, line: 82, baseType: !436, size: 64)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !5614, file: !5336, line: 97, baseType: !5618, size: 256, offset: 64)
!5618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !5619)
!5619 = !{!433, !438}
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !5614, file: !5336, line: 102, baseType: !436, size: 64, offset: 320)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !5614, file: !5336, line: 102, baseType: !436, size: 64, offset: 384)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5614, file: !5336, line: 104, baseType: !244, size: 32, offset: 448)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5614, file: !5336, line: 105, baseType: !244, size: 32, offset: 480)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !5598, file: !5336, line: 135, baseType: !5306, size: 96, offset: 1088)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5598, file: !5336, line: 136, baseType: !269, size: 32, offset: 1184)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5598, file: !5336, line: 139, baseType: !244, size: 32, offset: 1216)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !5598, file: !5336, line: 139, baseType: !244, size: 32, offset: 1248)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !5598, file: !5336, line: 139, baseType: !244, size: 32, offset: 1280)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !5598, file: !5336, line: 140, baseType: !5306, size: 96, offset: 1312)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !5598, file: !5336, line: 143, baseType: !259, size: 16, offset: 1408)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !5598, file: !5336, line: 144, baseType: !259, size: 16, offset: 1424)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !5598, file: !5336, line: 145, baseType: !259, size: 16, offset: 1440)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !5598, file: !5336, line: 148, baseType: !259, size: 16, offset: 1456)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !5598, file: !5336, line: 149, baseType: !244, size: 32, offset: 1472)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !5598, file: !5336, line: 150, baseType: !269, size: 32, offset: 1504)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5598, file: !5336, line: 152, baseType: !5334, size: 64, offset: 1536)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5598, file: !5336, line: 163, baseType: !269, size: 32, offset: 1600)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5598, file: !5336, line: 163, baseType: !269, size: 32, offset: 1632)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !5589, file: !5336, line: 261, baseType: !269, size: 32, offset: 192)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !5589, file: !5336, line: 261, baseType: !269, size: 32, offset: 224)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !5589, file: !5336, line: 261, baseType: !269, size: 32, offset: 256)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5589, file: !5336, line: 263, baseType: !244, size: 32, offset: 288)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !5589, file: !5336, line: 266, baseType: !244, size: 32, offset: 320)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !5589, file: !5336, line: 267, baseType: !269, size: 32, offset: 352)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !5520, file: !5336, line: 347, baseType: !5596, size: 64, offset: 1856)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !5520, file: !5336, line: 348, baseType: !5647, size: 64, offset: 1920)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !5336, line: 205, baseType: !5649)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !5336, line: 186, size: 1024, elements: !5650)
!5650 = !{!5651, !5653, !5654, !5655, !5657, !5658, !5659, !5667, !5668, !5669, !5743, !5744}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5649, file: !5336, line: 187, baseType: !5652, size: 64)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5649, file: !5336, line: 187, baseType: !5652, size: 64, offset: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5649, file: !5336, line: 189, baseType: !357, size: 512, offset: 128)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !5649, file: !5336, line: 191, baseType: !5656, size: 64, offset: 640)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5596, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !5649, file: !5336, line: 193, baseType: !244, size: 32, offset: 704)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5649, file: !5336, line: 193, baseType: !244, size: 32, offset: 736)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !5649, file: !5336, line: 195, baseType: !5660, size: 64, offset: 768)
!5660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5661, size: 64)
!5661 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !5336, line: 184, baseType: !5662)
!5662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !5336, line: 166, size: 320, elements: !5663)
!5663 = !{!5664, !5665, !5666}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !5662, file: !5336, line: 180, baseType: !5618, size: 256)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5662, file: !5336, line: 182, baseType: !244, size: 32, offset: 256)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5662, file: !5336, line: 183, baseType: !244, size: 32, offset: 288)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !5649, file: !5336, line: 196, baseType: !244, size: 32, offset: 832)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5649, file: !5336, line: 198, baseType: !244, size: 32, offset: 864)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5649, file: !5336, line: 200, baseType: !5670, size: 64, offset: 896)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !5459, line: 77, size: 15424, elements: !5672)
!5672 = !{!5673, !5674, !5675, !5678, !5681, !5682, !5685, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5703, !5704, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5729, !5730, !5731, !5732, !5733, !5737}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5671, file: !5459, line: 78, baseType: !313, size: 960)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5671, file: !5459, line: 80, baseType: !332, size: 8192, offset: 960)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !5671, file: !5459, line: 82, baseType: !5676, size: 64, offset: 9152)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !5459, line: 43, flags: DIFlagFwdDecl)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !5671, file: !5459, line: 83, baseType: !5679, size: 64, offset: 9216)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !314, line: 46, flags: DIFlagFwdDecl)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !5671, file: !5459, line: 86, baseType: !5457, size: 64, offset: 9280)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !5671, file: !5459, line: 87, baseType: !5683, size: 64, offset: 9344)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !5459, line: 44, flags: DIFlagFwdDecl)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !5671, file: !5459, line: 89, baseType: !5686, size: 512, offset: 9408)
!5686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5683, size: 512, elements: !300)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !5671, file: !5459, line: 90, baseType: !259, size: 16, offset: 9920)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !5671, file: !5459, line: 90, baseType: !259, size: 16, offset: 9936)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !5671, file: !5459, line: 92, baseType: !259, size: 16, offset: 9952)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5671, file: !5459, line: 92, baseType: !259, size: 16, offset: 9968)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5671, file: !5459, line: 93, baseType: !259, size: 16, offset: 9984)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5671, file: !5459, line: 93, baseType: !259, size: 16, offset: 10000)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !5671, file: !5459, line: 94, baseType: !244, size: 32, offset: 10016)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !5671, file: !5459, line: 97, baseType: !259, size: 16, offset: 10048)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !5671, file: !5459, line: 97, baseType: !259, size: 16, offset: 10064)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !5671, file: !5459, line: 98, baseType: !259, size: 16, offset: 10080)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !5671, file: !5459, line: 98, baseType: !259, size: 16, offset: 10096)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !5671, file: !5459, line: 99, baseType: !259, size: 16, offset: 10112)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !5671, file: !5459, line: 99, baseType: !259, size: 16, offset: 10128)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !5671, file: !5459, line: 100, baseType: !5, size: 32, offset: 10144)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !5671, file: !5459, line: 101, baseType: !5702, size: 64, offset: 10176)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !5671, file: !5459, line: 103, baseType: !338, size: 64, offset: 10240)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !5671, file: !5459, line: 104, baseType: !5705, size: 64, offset: 10304)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !314, line: 159, size: 448, elements: !5707)
!5707 = !{!5708, !5710, !5711, !5713, !5714, !5716}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !5706, file: !314, line: 161, baseType: !5709, size: 64)
!5709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !437)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !5706, file: !314, line: 162, baseType: !5709, size: 64, offset: 64)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5706, file: !314, line: 163, baseType: !5712, size: 32, offset: 128)
!5712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 32, elements: !437)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !5706, file: !314, line: 164, baseType: !5712, size: 32, offset: 160)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !5706, file: !314, line: 165, baseType: !5715, size: 128, offset: 192)
!5715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5702, size: 128, elements: !437)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !5706, file: !314, line: 166, baseType: !5717, size: 128, offset: 320)
!5717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5679, size: 128, elements: !437)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !5671, file: !5459, line: 107, baseType: !269, size: 32, offset: 10368)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !5671, file: !5459, line: 108, baseType: !244, size: 32, offset: 10400)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !5671, file: !5459, line: 109, baseType: !259, size: 16, offset: 10432)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5671, file: !5459, line: 110, baseType: !259, size: 16, offset: 10448)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !5671, file: !5459, line: 113, baseType: !244, size: 32, offset: 10464)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !5671, file: !5459, line: 113, baseType: !244, size: 32, offset: 10496)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !5671, file: !5459, line: 114, baseType: !261, size: 8, offset: 10528)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !5671, file: !5459, line: 114, baseType: !261, size: 8, offset: 10536)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !5671, file: !5459, line: 115, baseType: !259, size: 16, offset: 10544)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !5671, file: !5459, line: 116, baseType: !5728, size: 128, offset: 10560)
!5728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 128, elements: !432)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !5671, file: !5459, line: 119, baseType: !269, size: 32, offset: 10688)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !5671, file: !5459, line: 119, baseType: !269, size: 32, offset: 10720)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !5671, file: !5459, line: 122, baseType: !5491, size: 512, offset: 10752)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !5671, file: !5459, line: 123, baseType: !261, size: 8, offset: 11264)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5671, file: !5459, line: 125, baseType: !5734, size: 56, offset: 11272)
!5734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 56, elements: !5735)
!5735 = !{!5736}
!5736 = !DISubrange(count: 7)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !5671, file: !5459, line: 126, baseType: !5738, size: 4096, offset: 11328)
!5738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5739, size: 4096, elements: !300)
!5739 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !5459, line: 69, baseType: !5740)
!5740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !5459, line: 67, size: 512, elements: !5741)
!5741 = !{!5742}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5740, file: !5459, line: 68, baseType: !357, size: 512)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !5649, file: !5336, line: 201, baseType: !269, size: 32, offset: 960)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !5649, file: !5336, line: 204, baseType: !244, size: 32, offset: 992)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !5520, file: !5336, line: 350, baseType: !290, size: 128, offset: 1984)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !5520, file: !5336, line: 351, baseType: !244, size: 32, offset: 2112)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !5520, file: !5336, line: 351, baseType: !244, size: 32, offset: 2144)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5520, file: !5336, line: 353, baseType: !5749, size: 64, offset: 2176)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !5336, line: 297, baseType: !5751)
!5751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !5336, line: 295, size: 2048, elements: !5752)
!5752 = !{!5753}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !5751, file: !5336, line: 296, baseType: !424, size: 2048)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !5520, file: !5336, line: 355, baseType: !5755, size: 384, offset: 2240)
!5755 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !5336, line: 338, baseType: !5756)
!5756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !5336, line: 322, size: 384, elements: !5757)
!5757 = !{!5758, !5759, !5760, !5761, !5762, !5763, !5764}
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !5756, file: !5336, line: 323, baseType: !244, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !5756, file: !5336, line: 325, baseType: !259, size: 16, offset: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5756, file: !5336, line: 326, baseType: !259, size: 16, offset: 48)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !5756, file: !5336, line: 331, baseType: !290, size: 128, offset: 64)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !5756, file: !5336, line: 334, baseType: !290, size: 128, offset: 192)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !5756, file: !5336, line: 335, baseType: !244, size: 32, offset: 320)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5756, file: !5336, line: 337, baseType: !244, size: 32, offset: 352)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !5503, file: !5282, line: 81, baseType: !245, size: 64, offset: 12224)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !5503, file: !5282, line: 85, baseType: !5767, size: 6208, offset: 12288)
!5767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !5282, line: 55, size: 6208, elements: !5768)
!5768 = !{!5769, !5770, !5771, !5772, !5773}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5767, file: !5282, line: 56, baseType: !5446, size: 6144)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !5767, file: !5282, line: 58, baseType: !259, size: 16, offset: 6144)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !5767, file: !5282, line: 59, baseType: !259, size: 16, offset: 6160)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !5767, file: !5282, line: 60, baseType: !259, size: 16, offset: 6176)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !5767, file: !5282, line: 61, baseType: !259, size: 16, offset: 6192)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5503, file: !5282, line: 86, baseType: !244, size: 32, offset: 18496)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5503, file: !5282, line: 88, baseType: !244, size: 32, offset: 18528)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !5503, file: !5282, line: 90, baseType: !244, size: 32, offset: 18560)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !5503, file: !5282, line: 94, baseType: !244, size: 32, offset: 18592)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !5503, file: !5282, line: 100, baseType: !5491, size: 512, offset: 18624)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5398, file: !5286, line: 154, baseType: !5780, size: 64, offset: 1664)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !5286, line: 154, flags: DIFlagFwdDecl)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !5398, file: !5286, line: 156, baseType: !5457, size: 64, offset: 1728)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !5398, file: !5286, line: 158, baseType: !269, size: 32, offset: 1792)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !5398, file: !5286, line: 159, baseType: !269, size: 32, offset: 1824)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !5398, file: !5286, line: 162, baseType: !5401, size: 64, offset: 1856)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !5398, file: !5286, line: 162, baseType: !5401, size: 64, offset: 1920)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !5398, file: !5286, line: 162, baseType: !5401, size: 64, offset: 1984)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !5398, file: !5286, line: 164, baseType: !290, size: 128, offset: 2048)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !5398, file: !5286, line: 166, baseType: !5790, size: 64, offset: 2176)
!5790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5791, size: 64)
!5791 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !5286, line: 51, flags: DIFlagFwdDecl)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !5398, file: !5286, line: 167, baseType: !245, size: 64, offset: 2240)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !5398, file: !5286, line: 168, baseType: !269, size: 32, offset: 2304)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !5398, file: !5286, line: 170, baseType: !269, size: 32, offset: 2336)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !5398, file: !5286, line: 170, baseType: !269, size: 32, offset: 2368)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !5398, file: !5286, line: 171, baseType: !269, size: 32, offset: 2400)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !5398, file: !5286, line: 173, baseType: !245, size: 64, offset: 2432)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !5398, file: !5286, line: 175, baseType: !244, size: 32, offset: 2496)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !5398, file: !5286, line: 176, baseType: !244, size: 32, offset: 2528)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !5398, file: !5286, line: 179, baseType: !244, size: 32, offset: 2560)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !5398, file: !5286, line: 180, baseType: !269, size: 32, offset: 2592)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !5398, file: !5286, line: 183, baseType: !244, size: 32, offset: 2624)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !5398, file: !5286, line: 185, baseType: !261, size: 8, offset: 2656)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5398, file: !5286, line: 186, baseType: !4425, size: 24, offset: 2664)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !5398, file: !5286, line: 189, baseType: !290, size: 128, offset: 2688)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !5389, file: !5286, line: 207, baseType: !332, size: 8192, offset: 384)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !5389, file: !5286, line: 208, baseType: !332, size: 8192, offset: 8576)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !5389, file: !5286, line: 210, baseType: !244, size: 32, offset: 16768)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !5389, file: !5286, line: 210, baseType: !244, size: 32, offset: 16800)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !5389, file: !5286, line: 211, baseType: !244, size: 32, offset: 16832)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5389, file: !5286, line: 211, baseType: !244, size: 32, offset: 16864)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !5389, file: !5286, line: 212, baseType: !452, size: 128, offset: 16896)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !5275, file: !5276, line: 1246, baseType: !5814, size: 64, offset: 2112)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5815, size: 64)
!5815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !5276, line: 1067, size: 5184, elements: !5816)
!5816 = !{!5817, !5845, !5846, !5861, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5883, !5899, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !6009}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !5815, file: !5276, line: 1068, baseType: !5818, size: 64)
!5818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5819, size: 64)
!5819 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !5276, line: 934, baseType: !5820)
!5820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !5276, line: 925, size: 576, elements: !5821)
!5821 = !{!5822, !5837, !5838, !5839, !5840, !5841, !5844}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !5820, file: !5276, line: 926, baseType: !5823, size: 320)
!5823 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !5276, line: 830, baseType: !5824)
!5824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !5276, line: 813, size: 320, elements: !5825)
!5825 = !{!5826, !5829, !5832, !5833, !5834, !5835, !5836}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !5824, file: !5276, line: 814, baseType: !5827, size: 64)
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5828, size: 64)
!5828 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !5276, line: 51, flags: DIFlagFwdDecl)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !5824, file: !5276, line: 815, baseType: !5830, size: 64, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !5276, line: 815, flags: DIFlagFwdDecl)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !5824, file: !5276, line: 818, baseType: !245, size: 64, offset: 128)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !5824, file: !5276, line: 819, baseType: !4498, size: 32, offset: 192)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5824, file: !5276, line: 822, baseType: !244, size: 32, offset: 224)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !5824, file: !5276, line: 826, baseType: !244, size: 32, offset: 256)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !5824, file: !5276, line: 829, baseType: !244, size: 32, offset: 288)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5820, file: !5276, line: 928, baseType: !259, size: 16, offset: 320)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5820, file: !5276, line: 928, baseType: !259, size: 16, offset: 336)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !5820, file: !5276, line: 929, baseType: !244, size: 32, offset: 352)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !5820, file: !5276, line: 930, baseType: !5702, size: 64, offset: 384)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !5820, file: !5276, line: 931, baseType: !5842, size: 64, offset: 448)
!5842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5843, size: 64)
!5843 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !5276, line: 931, flags: DIFlagFwdDecl)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !5820, file: !5276, line: 933, baseType: !245, size: 64, offset: 512)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !5815, file: !5276, line: 1069, baseType: !5818, size: 64, offset: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !5815, file: !5276, line: 1070, baseType: !5847, size: 64, offset: 128)
!5847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 64)
!5848 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !5276, line: 916, baseType: !5849)
!5849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !5276, line: 891, size: 704, elements: !5850)
!5850 = !{!5851, !5852, !5853, !5855, !5856, !5857, !5858, !5859, !5860}
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !5849, file: !5276, line: 892, baseType: !5823, size: 320)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5849, file: !5276, line: 896, baseType: !244, size: 32, offset: 320)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !5849, file: !5276, line: 900, baseType: !5854, size: 96, offset: 352)
!5854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 96, elements: !4263)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !5849, file: !5276, line: 903, baseType: !269, size: 32, offset: 448)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !5849, file: !5276, line: 906, baseType: !244, size: 32, offset: 480)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !5849, file: !5276, line: 909, baseType: !269, size: 32, offset: 512)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !5849, file: !5276, line: 912, baseType: !269, size: 32, offset: 544)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !5849, file: !5276, line: 914, baseType: !5284, size: 64, offset: 576)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5849, file: !5276, line: 915, baseType: !245, size: 64, offset: 640)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !5815, file: !5276, line: 1071, baseType: !5862, size: 64, offset: 192)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !5276, line: 920, baseType: !5864)
!5864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !5276, line: 918, size: 320, elements: !5865)
!5865 = !{!5866}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !5864, file: !5276, line: 919, baseType: !5823, size: 320)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !5815, file: !5276, line: 1075, baseType: !269, size: 32, offset: 256)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !5815, file: !5276, line: 1077, baseType: !269, size: 32, offset: 288)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !5815, file: !5276, line: 1078, baseType: !269, size: 32, offset: 320)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !5815, file: !5276, line: 1079, baseType: !259, size: 16, offset: 352)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !5815, file: !5276, line: 1082, baseType: !259, size: 16, offset: 368)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !5815, file: !5276, line: 1085, baseType: !261, size: 8, offset: 384)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !5815, file: !5276, line: 1086, baseType: !261, size: 8, offset: 392)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !5815, file: !5276, line: 1087, baseType: !261, size: 8, offset: 400)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !5815, file: !5276, line: 1088, baseType: !261, size: 8, offset: 408)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !5815, file: !5276, line: 1090, baseType: !269, size: 32, offset: 416)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !5815, file: !5276, line: 1093, baseType: !259, size: 16, offset: 448)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !5815, file: !5276, line: 1096, baseType: !261, size: 8, offset: 464)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5815, file: !5276, line: 1098, baseType: !5880, size: 40, offset: 472)
!5880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 40, elements: !5881)
!5881 = !{!5882}
!5882 = !DISubrange(count: 5)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !5815, file: !5276, line: 1101, baseType: !5884, size: 832, offset: 512)
!5884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !5276, line: 836, size: 832, elements: !5885)
!5885 = !{!5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !5884, file: !5276, line: 837, baseType: !5823, size: 320)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5884, file: !5276, line: 839, baseType: !259, size: 16, offset: 320)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !5884, file: !5276, line: 839, baseType: !259, size: 16, offset: 336)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !5884, file: !5276, line: 842, baseType: !259, size: 16, offset: 352)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !5884, file: !5276, line: 842, baseType: !259, size: 16, offset: 368)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !5884, file: !5276, line: 843, baseType: !5712, size: 32, offset: 384)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5884, file: !5276, line: 845, baseType: !244, size: 32, offset: 416)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !5884, file: !5276, line: 847, baseType: !245, size: 64, offset: 448)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !5884, file: !5276, line: 848, baseType: !5670, size: 64, offset: 512)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !5884, file: !5276, line: 849, baseType: !5670, size: 64, offset: 576)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !5884, file: !5276, line: 850, baseType: !5670, size: 64, offset: 640)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !5884, file: !5276, line: 851, baseType: !5306, size: 96, offset: 704)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5884, file: !5276, line: 852, baseType: !269, size: 32, offset: 800)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !5815, file: !5276, line: 1104, baseType: !5900, size: 1344, offset: 1344)
!5900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !5276, line: 867, size: 1344, elements: !5901)
!5901 = !{!5902, !5903, !5904, !5905, !5906, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5900, file: !5276, line: 868, baseType: !259, size: 16)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !5900, file: !5276, line: 869, baseType: !259, size: 16, offset: 16)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !5900, file: !5276, line: 870, baseType: !259, size: 16, offset: 32)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !5900, file: !5276, line: 871, baseType: !259, size: 16, offset: 48)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !5900, file: !5276, line: 873, baseType: !5907, size: 896, offset: 64)
!5907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5908, size: 896, elements: !5735)
!5908 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !5276, line: 864, baseType: !5909)
!5909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !5276, line: 859, size: 128, elements: !5910)
!5910 = !{!5911, !5912, !5913, !5914, !5915, !5916}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5909, file: !5276, line: 860, baseType: !259, size: 16)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !5909, file: !5276, line: 861, baseType: !259, size: 16, offset: 16)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !5909, file: !5276, line: 861, baseType: !259, size: 16, offset: 32)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5909, file: !5276, line: 861, baseType: !259, size: 16, offset: 48)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5909, file: !5276, line: 862, baseType: !244, size: 32, offset: 64)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !5909, file: !5276, line: 863, baseType: !269, size: 32, offset: 96)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !5900, file: !5276, line: 874, baseType: !245, size: 64, offset: 960)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !5900, file: !5276, line: 876, baseType: !269, size: 32, offset: 1024)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5900, file: !5276, line: 876, baseType: !269, size: 32, offset: 1056)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !5900, file: !5276, line: 878, baseType: !244, size: 32, offset: 1088)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !5900, file: !5276, line: 879, baseType: !244, size: 32, offset: 1120)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !5900, file: !5276, line: 881, baseType: !244, size: 32, offset: 1152)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !5900, file: !5276, line: 881, baseType: !244, size: 32, offset: 1184)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5900, file: !5276, line: 883, baseType: !5274, size: 64, offset: 1216)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5900, file: !5276, line: 884, baseType: !5284, size: 64, offset: 1280)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !5815, file: !5276, line: 1107, baseType: !269, size: 32, offset: 2688)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !5815, file: !5276, line: 1110, baseType: !269, size: 32, offset: 2720)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !5815, file: !5276, line: 1113, baseType: !259, size: 16, offset: 2752)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !5815, file: !5276, line: 1113, baseType: !259, size: 16, offset: 2768)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !5815, file: !5276, line: 1116, baseType: !261, size: 8, offset: 2784)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5815, file: !5276, line: 1117, baseType: !5316, size: 8, offset: 2792)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !5815, file: !5276, line: 1120, baseType: !259, size: 16, offset: 2800)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !5815, file: !5276, line: 1121, baseType: !269, size: 32, offset: 2816)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !5815, file: !5276, line: 1122, baseType: !269, size: 32, offset: 2848)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !5815, file: !5276, line: 1123, baseType: !269, size: 32, offset: 2880)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !5815, file: !5276, line: 1124, baseType: !269, size: 32, offset: 2912)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !5815, file: !5276, line: 1125, baseType: !269, size: 32, offset: 2944)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !5815, file: !5276, line: 1126, baseType: !269, size: 32, offset: 2976)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !5815, file: !5276, line: 1127, baseType: !269, size: 32, offset: 3008)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !5815, file: !5276, line: 1128, baseType: !269, size: 32, offset: 3040)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !5815, file: !5276, line: 1129, baseType: !269, size: 32, offset: 3072)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !5815, file: !5276, line: 1130, baseType: !269, size: 32, offset: 3104)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !5815, file: !5276, line: 1131, baseType: !259, size: 16, offset: 3136)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !5815, file: !5276, line: 1132, baseType: !261, size: 8, offset: 3152)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !5815, file: !5276, line: 1133, baseType: !261, size: 8, offset: 3160)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !5815, file: !5276, line: 1134, baseType: !4425, size: 24, offset: 3168)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !5815, file: !5276, line: 1135, baseType: !261, size: 8, offset: 3192)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !5815, file: !5276, line: 1138, baseType: !5284, size: 64, offset: 3200)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !5815, file: !5276, line: 1139, baseType: !261, size: 8, offset: 3264)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !5815, file: !5276, line: 1140, baseType: !261, size: 8, offset: 3272)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !5815, file: !5276, line: 1141, baseType: !261, size: 8, offset: 3280)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !5815, file: !5276, line: 1142, baseType: !261, size: 8, offset: 3288)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !5815, file: !5276, line: 1143, baseType: !261, size: 8, offset: 3296)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !5815, file: !5276, line: 1144, baseType: !5955, size: 64, offset: 3304)
!5955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !300)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !5815, file: !5276, line: 1145, baseType: !5955, size: 64, offset: 3368)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !5815, file: !5276, line: 1148, baseType: !261, size: 8, offset: 3432)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !5815, file: !5276, line: 1149, baseType: !261, size: 8, offset: 3440)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !5815, file: !5276, line: 1152, baseType: !261, size: 8, offset: 3448)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !5815, file: !5276, line: 1152, baseType: !261, size: 8, offset: 3456)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !5815, file: !5276, line: 1153, baseType: !261, size: 8, offset: 3464)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !5815, file: !5276, line: 1154, baseType: !259, size: 16, offset: 3472)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !5815, file: !5276, line: 1154, baseType: !259, size: 16, offset: 3488)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !5815, file: !5276, line: 1155, baseType: !259, size: 16, offset: 3504)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !5815, file: !5276, line: 1155, baseType: !259, size: 16, offset: 3520)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !5815, file: !5276, line: 1156, baseType: !261, size: 8, offset: 3536)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !5815, file: !5276, line: 1157, baseType: !261, size: 8, offset: 3544)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !5815, file: !5276, line: 1159, baseType: !261, size: 8, offset: 3552)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !5815, file: !5276, line: 1160, baseType: !261, size: 8, offset: 3560)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !5815, file: !5276, line: 1161, baseType: !261, size: 8, offset: 3568)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !5815, file: !5276, line: 1162, baseType: !261, size: 8, offset: 3576)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !5815, file: !5276, line: 1165, baseType: !244, size: 32, offset: 3584)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !5815, file: !5276, line: 1166, baseType: !244, size: 32, offset: 3616)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !5815, file: !5276, line: 1167, baseType: !244, size: 32, offset: 3648)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !5815, file: !5276, line: 1168, baseType: !244, size: 32, offset: 3680)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !5815, file: !5276, line: 1171, baseType: !259, size: 16, offset: 3712)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !5815, file: !5276, line: 1171, baseType: !259, size: 16, offset: 3728)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !5815, file: !5276, line: 1172, baseType: !244, size: 32, offset: 3744)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !5815, file: !5276, line: 1173, baseType: !269, size: 32, offset: 3776)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !5815, file: !5276, line: 1174, baseType: !269, size: 32, offset: 3808)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !5815, file: !5276, line: 1177, baseType: !5982, size: 1024, offset: 3840)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !5276, line: 963, size: 1024, elements: !5983)
!5983 = !{!5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6007, !6008}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5982, file: !5276, line: 965, baseType: !244, size: 32)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !5982, file: !5276, line: 968, baseType: !269, size: 32, offset: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5982, file: !5276, line: 971, baseType: !269, size: 32, offset: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5982, file: !5276, line: 974, baseType: !269, size: 32, offset: 96)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !5982, file: !5276, line: 977, baseType: !5306, size: 96, offset: 128)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !5982, file: !5276, line: 979, baseType: !5306, size: 96, offset: 224)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5982, file: !5276, line: 982, baseType: !244, size: 32, offset: 320)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !5982, file: !5276, line: 987, baseType: !436, size: 64, offset: 352)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !5982, file: !5276, line: 989, baseType: !269, size: 32, offset: 416)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !5982, file: !5276, line: 994, baseType: !244, size: 32, offset: 448)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !5982, file: !5276, line: 995, baseType: !244, size: 32, offset: 480)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !5982, file: !5276, line: 997, baseType: !261, size: 8, offset: 512)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5982, file: !5276, line: 998, baseType: !5734, size: 56, offset: 520)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !5982, file: !5276, line: 1000, baseType: !269, size: 32, offset: 576)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !5982, file: !5276, line: 1003, baseType: !436, size: 64, offset: 608)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !5982, file: !5276, line: 1006, baseType: !244, size: 32, offset: 672)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !5982, file: !5276, line: 1009, baseType: !269, size: 32, offset: 704)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !5982, file: !5276, line: 1012, baseType: !436, size: 64, offset: 736)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !5982, file: !5276, line: 1015, baseType: !436, size: 64, offset: 800)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !5982, file: !5276, line: 1018, baseType: !244, size: 32, offset: 864)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !5982, file: !5276, line: 1019, baseType: !6005, size: 64, offset: 896)
!6005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6006, size: 64)
!6006 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !5276, line: 63, flags: DIFlagFwdDecl)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !5982, file: !5276, line: 1023, baseType: !269, size: 32, offset: 960)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !5982, file: !5276, line: 1024, baseType: !244, size: 32, offset: 992)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !5815, file: !5276, line: 1179, baseType: !6010, size: 320, offset: 4864)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !5276, line: 1043, size: 320, elements: !6011)
!6011 = !{!6012, !6013, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6010, file: !5276, line: 1044, baseType: !261, size: 8)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !6010, file: !5276, line: 1045, baseType: !6014, size: 16, offset: 8)
!6014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 16, elements: !437)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !6010, file: !5276, line: 1048, baseType: !261, size: 8, offset: 24)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !6010, file: !5276, line: 1049, baseType: !269, size: 32, offset: 32)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !6010, file: !5276, line: 1049, baseType: !269, size: 32, offset: 64)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !6010, file: !5276, line: 1052, baseType: !269, size: 32, offset: 96)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !6010, file: !5276, line: 1052, baseType: !269, size: 32, offset: 128)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !6010, file: !5276, line: 1053, baseType: !261, size: 8, offset: 160)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !6010, file: !5276, line: 1054, baseType: !4425, size: 24, offset: 168)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !6010, file: !5276, line: 1057, baseType: !269, size: 32, offset: 192)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !6010, file: !5276, line: 1057, baseType: !269, size: 32, offset: 224)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !6010, file: !5276, line: 1060, baseType: !269, size: 32, offset: 256)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !6010, file: !5276, line: 1060, baseType: !269, size: 32, offset: 288)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5275, file: !5276, line: 1247, baseType: !6027, size: 64, offset: 2176)
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!6028 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !5276, line: 60, flags: DIFlagFwdDecl)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5275, file: !5276, line: 1251, baseType: !6030, size: 31872, offset: 2240)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !5276, line: 403, size: 31872, elements: !6031)
!6031 = !{!6032, !6107, !6127, !6136, !6156, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6303, !6304}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !6030, file: !5276, line: 404, baseType: !6033, size: 1984)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !5276, line: 259, size: 1984, elements: !6034)
!6034 = !{!6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6052, !6102}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !6033, file: !5276, line: 260, baseType: !261, size: 8)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6033, file: !5276, line: 263, baseType: !261, size: 8, offset: 8)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !6033, file: !5276, line: 266, baseType: !261, size: 8, offset: 16)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6033, file: !5276, line: 267, baseType: !261, size: 8, offset: 24)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !6033, file: !5276, line: 269, baseType: !261, size: 8, offset: 32)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !6033, file: !5276, line: 270, baseType: !261, size: 8, offset: 40)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !6033, file: !5276, line: 276, baseType: !261, size: 8, offset: 48)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !6033, file: !5276, line: 279, baseType: !261, size: 8, offset: 56)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !6033, file: !5276, line: 280, baseType: !259, size: 16, offset: 64)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !6033, file: !5276, line: 280, baseType: !259, size: 16, offset: 80)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !6033, file: !5276, line: 281, baseType: !269, size: 32, offset: 96)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !6033, file: !5276, line: 284, baseType: !261, size: 8, offset: 128)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !6033, file: !5276, line: 285, baseType: !261, size: 8, offset: 136)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6033, file: !5276, line: 287, baseType: !6049, size: 48, offset: 144)
!6049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !6050)
!6050 = !{!6051}
!6051 = !DISubrange(count: 6)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !6033, file: !5276, line: 290, baseType: !6053, size: 1280, offset: 192)
!6053 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !5492, line: 174, baseType: !6054)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !5492, line: 166, size: 1280, elements: !6055)
!6055 = !{!6056, !6057, !6058, !6059, !6060, !6061, !6062, !6101}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6054, file: !5492, line: 167, baseType: !244, size: 32)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6054, file: !5492, line: 167, baseType: !244, size: 32, offset: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !6054, file: !5492, line: 168, baseType: !357, size: 512, offset: 64)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !6054, file: !5492, line: 169, baseType: !357, size: 512, offset: 576)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !6054, file: !5492, line: 170, baseType: !269, size: 32, offset: 1088)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !6054, file: !5492, line: 171, baseType: !269, size: 32, offset: 1120)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !6054, file: !5492, line: 172, baseType: !6063, size: 64, offset: 1152)
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !5492, line: 72, size: 3072, elements: !6065)
!6065 = !{!6066, !6067, !6068, !6069, !6070, !6071, !6072, !6097, !6098, !6099, !6100}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6064, file: !5492, line: 73, baseType: !244, size: 32)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !6064, file: !5492, line: 73, baseType: !244, size: 32, offset: 32)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !6064, file: !5492, line: 74, baseType: !244, size: 32, offset: 64)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !6064, file: !5492, line: 75, baseType: !244, size: 32, offset: 96)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !6064, file: !5492, line: 77, baseType: !452, size: 128, offset: 128)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !6064, file: !5492, line: 77, baseType: !452, size: 128, offset: 256)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !6064, file: !5492, line: 79, baseType: !6073, size: 2304, offset: 384)
!6073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6074, size: 2304, elements: !432)
!6074 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !5492, line: 67, baseType: !6075)
!6075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !5492, line: 55, size: 576, elements: !6076)
!6076 = !{!6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6093, !6094, !6095, !6096}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !6075, file: !5492, line: 56, baseType: !259, size: 16)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6075, file: !5492, line: 56, baseType: !259, size: 16, offset: 16)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6075, file: !5492, line: 58, baseType: !269, size: 32, offset: 32)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !6075, file: !5492, line: 59, baseType: !269, size: 32, offset: 64)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !6075, file: !5492, line: 59, baseType: !269, size: 32, offset: 96)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !6075, file: !5492, line: 60, baseType: !436, size: 64, offset: 128)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !6075, file: !5492, line: 60, baseType: !436, size: 64, offset: 192)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !6075, file: !5492, line: 61, baseType: !6085, size: 64, offset: 256)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !5492, line: 47, baseType: !6087)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !5492, line: 44, size: 96, elements: !6088)
!6088 = !{!6089, !6090, !6091, !6092}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6087, file: !5492, line: 45, baseType: !269, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6087, file: !5492, line: 45, baseType: !269, size: 32, offset: 32)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6087, file: !5492, line: 46, baseType: !259, size: 16, offset: 64)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !6087, file: !5492, line: 46, baseType: !259, size: 16, offset: 80)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !6075, file: !5492, line: 62, baseType: !6085, size: 64, offset: 320)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !6075, file: !5492, line: 64, baseType: !6085, size: 64, offset: 384)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !6075, file: !5492, line: 65, baseType: !436, size: 64, offset: 448)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !6075, file: !5492, line: 66, baseType: !436, size: 64, offset: 512)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !6064, file: !5492, line: 80, baseType: !5306, size: 96, offset: 2688)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !6064, file: !5492, line: 80, baseType: !5306, size: 96, offset: 2784)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !6064, file: !5492, line: 81, baseType: !5306, size: 96, offset: 2880)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !6064, file: !5492, line: 83, baseType: !5306, size: 96, offset: 2976)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6054, file: !5492, line: 173, baseType: !245, size: 64, offset: 1216)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !6033, file: !5276, line: 291, baseType: !6103, size: 512, offset: 1472)
!6103 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !5492, line: 178, baseType: !6104)
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !5492, line: 176, size: 512, elements: !6105)
!6105 = !{!6106}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !6104, file: !5492, line: 177, baseType: !357, size: 512)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !6030, file: !5276, line: 406, baseType: !6108, size: 64, offset: 1984)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !5276, line: 80, size: 1472, elements: !6110)
!6110 = !{!6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !6109, file: !5276, line: 81, baseType: !245, size: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !6109, file: !5276, line: 82, baseType: !245, size: 64, offset: 64)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !6109, file: !5276, line: 83, baseType: !5, size: 32, offset: 128)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !6109, file: !5276, line: 84, baseType: !5, size: 32, offset: 160)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !6109, file: !5276, line: 86, baseType: !5, size: 32, offset: 192)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !6109, file: !5276, line: 87, baseType: !5, size: 32, offset: 224)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !6109, file: !5276, line: 88, baseType: !5, size: 32, offset: 256)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !6109, file: !5276, line: 89, baseType: !5, size: 32, offset: 288)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !6109, file: !5276, line: 90, baseType: !5, size: 32, offset: 320)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !6109, file: !5276, line: 91, baseType: !5, size: 32, offset: 352)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !6109, file: !5276, line: 92, baseType: !5, size: 32, offset: 384)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6109, file: !5276, line: 93, baseType: !5, size: 32, offset: 416)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !6109, file: !5276, line: 95, baseType: !6124, size: 1024, offset: 448)
!6124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 1024, elements: !6125)
!6125 = !{!6126}
!6126 = !DISubrange(count: 128)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !6030, file: !5276, line: 407, baseType: !6128, size: 64, offset: 2048)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !5276, line: 98, size: 1216, elements: !6130)
!6130 = !{!6131, !6132, !6133, !6134, !6135}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !6129, file: !5276, line: 100, baseType: !245, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6129, file: !5276, line: 101, baseType: !245, size: 64, offset: 64)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !6129, file: !5276, line: 103, baseType: !5, size: 32, offset: 128)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6129, file: !5276, line: 104, baseType: !5, size: 32, offset: 160)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !6129, file: !5276, line: 106, baseType: !6124, size: 1024, offset: 192)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !6030, file: !5276, line: 408, baseType: !6137, size: 512, offset: 2112)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !5276, line: 109, size: 512, elements: !6138)
!6138 = !{!6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !6137, file: !5276, line: 111, baseType: !244, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !6137, file: !5276, line: 112, baseType: !244, size: 32, offset: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !6137, file: !5276, line: 115, baseType: !244, size: 32, offset: 64)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !6137, file: !5276, line: 116, baseType: !244, size: 32, offset: 96)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !6137, file: !5276, line: 117, baseType: !244, size: 32, offset: 128)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !6137, file: !5276, line: 118, baseType: !244, size: 32, offset: 160)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !6137, file: !5276, line: 119, baseType: !244, size: 32, offset: 192)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !6137, file: !5276, line: 120, baseType: !244, size: 32, offset: 224)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !6137, file: !5276, line: 121, baseType: !244, size: 32, offset: 256)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !6137, file: !5276, line: 122, baseType: !244, size: 32, offset: 288)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !6137, file: !5276, line: 125, baseType: !244, size: 32, offset: 320)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !6137, file: !5276, line: 126, baseType: !244, size: 32, offset: 352)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !6137, file: !5276, line: 127, baseType: !259, size: 16, offset: 384)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !6137, file: !5276, line: 128, baseType: !259, size: 16, offset: 400)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !6137, file: !5276, line: 129, baseType: !244, size: 32, offset: 416)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !6137, file: !5276, line: 130, baseType: !244, size: 32, offset: 448)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6137, file: !5276, line: 131, baseType: !244, size: 32, offset: 480)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !6030, file: !5276, line: 409, baseType: !6157, size: 576, offset: 2624)
!6157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !5276, line: 134, size: 576, elements: !6158)
!6158 = !{!6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6157, file: !5276, line: 135, baseType: !244, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !6157, file: !5276, line: 136, baseType: !244, size: 32, offset: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !6157, file: !5276, line: 137, baseType: !244, size: 32, offset: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !6157, file: !5276, line: 138, baseType: !244, size: 32, offset: 96)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !6157, file: !5276, line: 139, baseType: !244, size: 32, offset: 128)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !6157, file: !5276, line: 140, baseType: !244, size: 32, offset: 160)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !6157, file: !5276, line: 141, baseType: !244, size: 32, offset: 192)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !6157, file: !5276, line: 142, baseType: !244, size: 32, offset: 224)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !6157, file: !5276, line: 143, baseType: !269, size: 32, offset: 256)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !6157, file: !5276, line: 144, baseType: !244, size: 32, offset: 288)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6157, file: !5276, line: 145, baseType: !244, size: 32, offset: 320)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !6157, file: !5276, line: 147, baseType: !244, size: 32, offset: 352)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !6157, file: !5276, line: 148, baseType: !244, size: 32, offset: 384)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !6157, file: !5276, line: 149, baseType: !244, size: 32, offset: 416)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !6157, file: !5276, line: 150, baseType: !244, size: 32, offset: 448)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !6157, file: !5276, line: 151, baseType: !244, size: 32, offset: 480)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !6157, file: !5276, line: 152, baseType: !346, size: 64, offset: 512)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !6030, file: !5276, line: 411, baseType: !244, size: 32, offset: 3200)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !6030, file: !5276, line: 411, baseType: !244, size: 32, offset: 3232)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !6030, file: !5276, line: 411, baseType: !244, size: 32, offset: 3264)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !6030, file: !5276, line: 412, baseType: !269, size: 32, offset: 3296)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !6030, file: !5276, line: 413, baseType: !244, size: 32, offset: 3328)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !6030, file: !5276, line: 413, baseType: !244, size: 32, offset: 3360)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !6030, file: !5276, line: 415, baseType: !244, size: 32, offset: 3392)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !6030, file: !5276, line: 415, baseType: !244, size: 32, offset: 3424)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6030, file: !5276, line: 416, baseType: !259, size: 16, offset: 3456)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !6030, file: !5276, line: 416, baseType: !259, size: 16, offset: 3472)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !6030, file: !5276, line: 418, baseType: !269, size: 32, offset: 3488)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !6030, file: !5276, line: 418, baseType: !269, size: 32, offset: 3520)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !6030, file: !5276, line: 421, baseType: !269, size: 32, offset: 3552)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !6030, file: !5276, line: 421, baseType: !269, size: 32, offset: 3584)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !6030, file: !5276, line: 421, baseType: !269, size: 32, offset: 3616)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !6030, file: !5276, line: 425, baseType: !259, size: 16, offset: 3648)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !6030, file: !5276, line: 425, baseType: !259, size: 16, offset: 3664)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !6030, file: !5276, line: 425, baseType: !259, size: 16, offset: 3680)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !6030, file: !5276, line: 426, baseType: !259, size: 16, offset: 3696)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6030, file: !5276, line: 428, baseType: !259, size: 16, offset: 3712)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !6030, file: !5276, line: 428, baseType: !259, size: 16, offset: 3728)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !6030, file: !5276, line: 431, baseType: !244, size: 32, offset: 3744)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !6030, file: !5276, line: 433, baseType: !259, size: 16, offset: 3776)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !6030, file: !5276, line: 435, baseType: !259, size: 16, offset: 3792)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !6030, file: !5276, line: 437, baseType: !259, size: 16, offset: 3808)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6030, file: !5276, line: 439, baseType: !259, size: 16, offset: 3824)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !6030, file: !5276, line: 441, baseType: !259, size: 16, offset: 3840)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !6030, file: !5276, line: 443, baseType: !259, size: 16, offset: 3856)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !6030, file: !5276, line: 449, baseType: !244, size: 32, offset: 3872)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !6030, file: !5276, line: 453, baseType: !244, size: 32, offset: 3904)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !6030, file: !5276, line: 458, baseType: !259, size: 16, offset: 3936)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !6030, file: !5276, line: 462, baseType: !259, size: 16, offset: 3952)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !6030, file: !5276, line: 467, baseType: !244, size: 32, offset: 3968)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !6030, file: !5276, line: 467, baseType: !244, size: 32, offset: 4000)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !6030, file: !5276, line: 469, baseType: !259, size: 16, offset: 4032)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !6030, file: !5276, line: 469, baseType: !259, size: 16, offset: 4048)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !6030, file: !5276, line: 469, baseType: !259, size: 16, offset: 4064)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !6030, file: !5276, line: 469, baseType: !259, size: 16, offset: 4080)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !6030, file: !5276, line: 474, baseType: !259, size: 16, offset: 4096)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !6030, file: !5276, line: 475, baseType: !261, size: 8, offset: 4112)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !6030, file: !5276, line: 476, baseType: !261, size: 8, offset: 4120)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !6030, file: !5276, line: 481, baseType: !244, size: 32, offset: 4128)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6030, file: !5276, line: 486, baseType: !244, size: 32, offset: 4160)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !6030, file: !5276, line: 491, baseType: !244, size: 32, offset: 4192)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !6030, file: !5276, line: 496, baseType: !259, size: 16, offset: 4224)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6030, file: !5276, line: 498, baseType: !259, size: 16, offset: 4240)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !6030, file: !5276, line: 501, baseType: !259, size: 16, offset: 4256)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !6030, file: !5276, line: 502, baseType: !259, size: 16, offset: 4272)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !6030, file: !5276, line: 508, baseType: !259, size: 16, offset: 4288)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !6030, file: !5276, line: 513, baseType: !259, size: 16, offset: 4304)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !6030, file: !5276, line: 515, baseType: !259, size: 16, offset: 4320)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !6030, file: !5276, line: 515, baseType: !259, size: 16, offset: 4336)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !6030, file: !5276, line: 519, baseType: !452, size: 128, offset: 4352)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !6030, file: !5276, line: 519, baseType: !452, size: 128, offset: 4480)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !6030, file: !5276, line: 520, baseType: !461, size: 128, offset: 4608)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !6030, file: !5276, line: 523, baseType: !290, size: 128, offset: 4736)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !6030, file: !5276, line: 524, baseType: !259, size: 16, offset: 4864)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !6030, file: !5276, line: 527, baseType: !259, size: 16, offset: 4880)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !6030, file: !5276, line: 532, baseType: !269, size: 32, offset: 4896)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !6030, file: !5276, line: 532, baseType: !269, size: 32, offset: 4928)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !6030, file: !5276, line: 534, baseType: !269, size: 32, offset: 4960)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !6030, file: !5276, line: 538, baseType: !269, size: 32, offset: 4992)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !6030, file: !5276, line: 542, baseType: !244, size: 32, offset: 5024)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !6030, file: !5276, line: 545, baseType: !269, size: 32, offset: 5056)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !6030, file: !5276, line: 545, baseType: !269, size: 32, offset: 5088)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !6030, file: !5276, line: 545, baseType: !269, size: 32, offset: 5120)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !6030, file: !5276, line: 548, baseType: !269, size: 32, offset: 5152)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !6030, file: !5276, line: 551, baseType: !259, size: 16, offset: 5184)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !6030, file: !5276, line: 551, baseType: !259, size: 16, offset: 5200)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !6030, file: !5276, line: 551, baseType: !259, size: 16, offset: 5216)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !6030, file: !5276, line: 551, baseType: !259, size: 16, offset: 5232)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !6030, file: !5276, line: 552, baseType: !259, size: 16, offset: 5248)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !6030, file: !5276, line: 552, baseType: !259, size: 16, offset: 5264)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !6030, file: !5276, line: 553, baseType: !269, size: 32, offset: 5280)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !6030, file: !5276, line: 553, baseType: !269, size: 32, offset: 5312)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !6030, file: !5276, line: 554, baseType: !259, size: 16, offset: 5344)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !6030, file: !5276, line: 554, baseType: !259, size: 16, offset: 5360)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !6030, file: !5276, line: 555, baseType: !269, size: 32, offset: 5376)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !6030, file: !5276, line: 555, baseType: !269, size: 32, offset: 5408)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !6030, file: !5276, line: 558, baseType: !332, size: 8192, offset: 5440)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !6030, file: !5276, line: 561, baseType: !244, size: 32, offset: 13632)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !6030, file: !5276, line: 562, baseType: !259, size: 16, offset: 13664)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !6030, file: !5276, line: 562, baseType: !259, size: 16, offset: 13680)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !6030, file: !5276, line: 565, baseType: !5446, size: 6144, offset: 13696)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !6030, file: !5276, line: 568, baseType: !5728, size: 128, offset: 19840)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !6030, file: !5276, line: 569, baseType: !5728, size: 128, offset: 19968)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !6030, file: !5276, line: 572, baseType: !261, size: 8, offset: 20096)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !6030, file: !5276, line: 573, baseType: !261, size: 8, offset: 20104)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !6030, file: !5276, line: 574, baseType: !261, size: 8, offset: 20112)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !6030, file: !5276, line: 575, baseType: !5880, size: 40, offset: 20120)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !6030, file: !5276, line: 578, baseType: !244, size: 32, offset: 20160)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !6030, file: !5276, line: 579, baseType: !259, size: 16, offset: 20192)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !6030, file: !5276, line: 580, baseType: !259, size: 16, offset: 20208)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !6030, file: !5276, line: 581, baseType: !269, size: 32, offset: 20224)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !6030, file: !5276, line: 582, baseType: !269, size: 32, offset: 20256)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !6030, file: !5276, line: 585, baseType: !259, size: 16, offset: 20288)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !6030, file: !5276, line: 585, baseType: !259, size: 16, offset: 20304)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !6030, file: !5276, line: 586, baseType: !269, size: 32, offset: 20320)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !6030, file: !5276, line: 589, baseType: !259, size: 16, offset: 20352)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !6030, file: !5276, line: 589, baseType: !259, size: 16, offset: 20368)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !6030, file: !5276, line: 590, baseType: !244, size: 32, offset: 20384)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !6030, file: !5276, line: 593, baseType: !259, size: 16, offset: 20416)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !6030, file: !5276, line: 593, baseType: !259, size: 16, offset: 20432)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !6030, file: !5276, line: 594, baseType: !259, size: 16, offset: 20448)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !6030, file: !5276, line: 594, baseType: !259, size: 16, offset: 20464)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !6030, file: !5276, line: 595, baseType: !269, size: 32, offset: 20480)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6030, file: !5276, line: 596, baseType: !269, size: 32, offset: 20512)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !6030, file: !5276, line: 597, baseType: !308, size: 64, offset: 20544)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !6030, file: !5276, line: 600, baseType: !244, size: 32, offset: 20608)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !6030, file: !5276, line: 601, baseType: !269, size: 32, offset: 20640)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !6030, file: !5276, line: 604, baseType: !4199, size: 256, offset: 20672)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !6030, file: !5276, line: 607, baseType: !6288, size: 10880, offset: 20928)
!6288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !5276, line: 364, size: 10880, elements: !6289)
!6289 = !{!6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !6288, file: !5276, line: 365, baseType: !6033, size: 1984)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !6288, file: !5276, line: 367, baseType: !332, size: 8192, offset: 1984)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6288, file: !5276, line: 369, baseType: !259, size: 16, offset: 10176)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !6288, file: !5276, line: 369, baseType: !259, size: 16, offset: 10192)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !6288, file: !5276, line: 370, baseType: !259, size: 16, offset: 10208)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6288, file: !5276, line: 370, baseType: !259, size: 16, offset: 10224)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !6288, file: !5276, line: 372, baseType: !269, size: 32, offset: 10240)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6288, file: !5276, line: 373, baseType: !269, size: 32, offset: 10272)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !6288, file: !5276, line: 375, baseType: !4425, size: 24, offset: 10304)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !6288, file: !5276, line: 376, baseType: !261, size: 8, offset: 10328)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !6288, file: !5276, line: 378, baseType: !261, size: 8, offset: 10336)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6288, file: !5276, line: 379, baseType: !4425, size: 24, offset: 10344)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !6288, file: !5276, line: 381, baseType: !357, size: 512, offset: 10368)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !6030, file: !5276, line: 609, baseType: !244, size: 32, offset: 31808)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6030, file: !5276, line: 610, baseType: !244, size: 32, offset: 31840)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !5275, file: !5276, line: 1252, baseType: !6306, size: 256, offset: 34112)
!6306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !5276, line: 158, size: 256, elements: !6307)
!6307 = !{!6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !6306, file: !5276, line: 159, baseType: !244, size: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !6306, file: !5276, line: 160, baseType: !269, size: 32, offset: 32)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !6306, file: !5276, line: 161, baseType: !269, size: 32, offset: 64)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !6306, file: !5276, line: 162, baseType: !269, size: 32, offset: 96)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !6306, file: !5276, line: 163, baseType: !244, size: 32, offset: 128)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6306, file: !5276, line: 164, baseType: !259, size: 16, offset: 160)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6306, file: !5276, line: 165, baseType: !259, size: 16, offset: 176)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !6306, file: !5276, line: 166, baseType: !269, size: 32, offset: 192)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6306, file: !5276, line: 167, baseType: !269, size: 32, offset: 224)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !5275, file: !5276, line: 1254, baseType: !290, size: 128, offset: 34368)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !5275, file: !5276, line: 1255, baseType: !290, size: 128, offset: 34496)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !5275, file: !5276, line: 1257, baseType: !245, size: 64, offset: 34624)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !5275, file: !5276, line: 1258, baseType: !245, size: 64, offset: 34688)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !5275, file: !5276, line: 1259, baseType: !245, size: 64, offset: 34752)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !5275, file: !5276, line: 1260, baseType: !245, size: 64, offset: 34816)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !5275, file: !5276, line: 1262, baseType: !245, size: 64, offset: 34880)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !5275, file: !5276, line: 1265, baseType: !6325, size: 64, offset: 34944)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !5276, line: 1265, flags: DIFlagFwdDecl)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !5275, file: !5276, line: 1266, baseType: !259, size: 16, offset: 35008)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !5275, file: !5276, line: 1267, baseType: !259, size: 16, offset: 35024)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !5275, file: !5276, line: 1270, baseType: !244, size: 32, offset: 35040)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !5275, file: !5276, line: 1271, baseType: !290, size: 128, offset: 35072)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !5275, file: !5276, line: 1274, baseType: !6332, size: 128, offset: 35200)
!6332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !5276, line: 650, size: 128, elements: !6333)
!6333 = !{!6334, !6335, !6336, !6337, !6338}
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !6332, file: !5276, line: 651, baseType: !5306, size: 96)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6332, file: !5276, line: 652, baseType: !261, size: 8, offset: 96)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6332, file: !5276, line: 652, baseType: !261, size: 8, offset: 104)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6332, file: !5276, line: 652, baseType: !261, size: 8, offset: 112)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !6332, file: !5276, line: 652, baseType: !261, size: 8, offset: 120)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !5275, file: !5276, line: 1275, baseType: !6340, size: 1472, offset: 35328)
!6340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !5276, line: 676, size: 1472, elements: !6341)
!6341 = !{!6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352, !6353, !6363, !6364, !6365, !6366, !6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !6340, file: !5276, line: 679, baseType: !6332, size: 128)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !6340, file: !5276, line: 680, baseType: !259, size: 16, offset: 128)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !6340, file: !5276, line: 680, baseType: !259, size: 16, offset: 144)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !6340, file: !5276, line: 680, baseType: !259, size: 16, offset: 160)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !6340, file: !5276, line: 680, baseType: !259, size: 16, offset: 176)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6340, file: !5276, line: 681, baseType: !259, size: 16, offset: 192)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !6340, file: !5276, line: 681, baseType: !259, size: 16, offset: 208)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !6340, file: !5276, line: 681, baseType: !259, size: 16, offset: 224)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !6340, file: !5276, line: 681, baseType: !259, size: 16, offset: 240)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !6340, file: !5276, line: 682, baseType: !259, size: 16, offset: 256)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !6340, file: !5276, line: 682, baseType: !4262, size: 48, offset: 272)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !6340, file: !5276, line: 685, baseType: !6354, size: 192, offset: 320)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !5276, line: 633, size: 192, elements: !6355)
!6355 = !{!6356, !6357, !6358, !6359, !6360, !6361, !6362}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !6354, file: !5276, line: 634, baseType: !259, size: 16)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6354, file: !5276, line: 634, baseType: !259, size: 16, offset: 16)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !6354, file: !5276, line: 635, baseType: !259, size: 16, offset: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !6354, file: !5276, line: 635, baseType: !259, size: 16, offset: 48)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !6354, file: !5276, line: 636, baseType: !269, size: 32, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6354, file: !5276, line: 636, baseType: !269, size: 32, offset: 96)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !6354, file: !5276, line: 637, baseType: !308, size: 64, offset: 128)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !6340, file: !5276, line: 686, baseType: !259, size: 16, offset: 512)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !6340, file: !5276, line: 686, baseType: !259, size: 16, offset: 528)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !6340, file: !5276, line: 687, baseType: !269, size: 32, offset: 544)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !6340, file: !5276, line: 688, baseType: !6367, size: 448, offset: 576)
!6367 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !5276, line: 674, baseType: !6368)
!6368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !5276, line: 659, size: 448, elements: !6369)
!6369 = !{!6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382, !6383, !6384}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !6368, file: !5276, line: 660, baseType: !269, size: 32)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !6368, file: !5276, line: 661, baseType: !269, size: 32, offset: 32)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !6368, file: !5276, line: 662, baseType: !269, size: 32, offset: 64)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !6368, file: !5276, line: 663, baseType: !269, size: 32, offset: 96)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !6368, file: !5276, line: 664, baseType: !269, size: 32, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !6368, file: !5276, line: 665, baseType: !269, size: 32, offset: 160)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !6368, file: !5276, line: 666, baseType: !269, size: 32, offset: 192)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !6368, file: !5276, line: 667, baseType: !269, size: 32, offset: 224)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !6368, file: !5276, line: 668, baseType: !269, size: 32, offset: 256)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !6368, file: !5276, line: 669, baseType: !269, size: 32, offset: 288)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !6368, file: !5276, line: 670, baseType: !244, size: 32, offset: 320)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !6368, file: !5276, line: 671, baseType: !269, size: 32, offset: 352)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !6368, file: !5276, line: 672, baseType: !269, size: 32, offset: 384)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6368, file: !5276, line: 673, baseType: !259, size: 16, offset: 416)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6368, file: !5276, line: 673, baseType: !259, size: 16, offset: 432)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !6340, file: !5276, line: 692, baseType: !269, size: 32, offset: 1024)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !6340, file: !5276, line: 697, baseType: !269, size: 32, offset: 1056)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6340, file: !5276, line: 703, baseType: !244, size: 32, offset: 1088)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6340, file: !5276, line: 704, baseType: !259, size: 16, offset: 1120)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !6340, file: !5276, line: 704, baseType: !259, size: 16, offset: 1136)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !6340, file: !5276, line: 705, baseType: !259, size: 16, offset: 1152)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !6340, file: !5276, line: 706, baseType: !259, size: 16, offset: 1168)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !6340, file: !5276, line: 707, baseType: !259, size: 16, offset: 1184)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !6340, file: !5276, line: 708, baseType: !259, size: 16, offset: 1200)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !6340, file: !5276, line: 709, baseType: !259, size: 16, offset: 1216)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !6340, file: !5276, line: 709, baseType: !259, size: 16, offset: 1232)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !6340, file: !5276, line: 709, baseType: !259, size: 16, offset: 1248)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !6340, file: !5276, line: 709, baseType: !259, size: 16, offset: 1264)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !6340, file: !5276, line: 710, baseType: !259, size: 16, offset: 1280)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !6340, file: !5276, line: 711, baseType: !259, size: 16, offset: 1296)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !6340, file: !5276, line: 712, baseType: !269, size: 32, offset: 1312)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !6340, file: !5276, line: 713, baseType: !269, size: 32, offset: 1344)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !6340, file: !5276, line: 713, baseType: !269, size: 32, offset: 1376)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !6340, file: !5276, line: 713, baseType: !269, size: 32, offset: 1408)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6340, file: !5276, line: 713, baseType: !269, size: 32, offset: 1440)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !5275, file: !5276, line: 1278, baseType: !6406, size: 64, offset: 36800)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !5276, line: 1197, size: 64, elements: !6407)
!6407 = !{!6408, !6409, !6410, !6411}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !6406, file: !5276, line: 1199, baseType: !269, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !6406, file: !5276, line: 1200, baseType: !261, size: 8, offset: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !6406, file: !5276, line: 1201, baseType: !261, size: 8, offset: 40)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6406, file: !5276, line: 1202, baseType: !259, size: 16, offset: 48)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5275, file: !5276, line: 1281, baseType: !5334, size: 64, offset: 36864)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !5275, file: !5276, line: 1284, baseType: !6414, size: 192, offset: 36928)
!6414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !5276, line: 1208, size: 192, elements: !6415)
!6415 = !{!6416, !6417, !6418, !6419}
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !6414, file: !5276, line: 1209, baseType: !5306, size: 96)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6414, file: !5276, line: 1210, baseType: !244, size: 32, offset: 96)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !6414, file: !5276, line: 1210, baseType: !244, size: 32, offset: 128)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !6414, file: !5276, line: 1210, baseType: !244, size: 32, offset: 160)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !5275, file: !5276, line: 1287, baseType: !5502, size: 64, offset: 37120)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !5275, file: !5276, line: 1289, baseType: !6422, size: 64, offset: 37184)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !6423, line: 27, baseType: !6424)
!6423 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!6424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !6425, line: 45, baseType: !6426)
!6425 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!6426 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !5275, file: !5276, line: 1290, baseType: !6422, size: 64, offset: 37248)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !5275, file: !5276, line: 1293, baseType: !6053, size: 1280, offset: 37312)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !5275, file: !5276, line: 1294, baseType: !6103, size: 512, offset: 38592)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !5275, file: !5276, line: 1295, baseType: !5491, size: 512, offset: 39104)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !5275, file: !5276, line: 1298, baseType: !6432, size: 64, offset: 39616)
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 64)
!6433 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !5276, line: 1298, flags: DIFlagFwdDecl)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !5266, file: !211, line: 58, baseType: !5274, size: 64, offset: 1536)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !5266, file: !211, line: 60, baseType: !244, size: 32, offset: 1600)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5266, file: !211, line: 61, baseType: !244, size: 32, offset: 1632)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5266, file: !211, line: 63, baseType: !259, size: 16, offset: 1664)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5266, file: !211, line: 64, baseType: !259, size: 16, offset: 1680)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !5266, file: !211, line: 65, baseType: !259, size: 16, offset: 1696)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !5266, file: !211, line: 66, baseType: !259, size: 16, offset: 1712)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !5266, file: !211, line: 67, baseType: !259, size: 16, offset: 1728)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !5266, file: !211, line: 68, baseType: !259, size: 16, offset: 1744)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !5266, file: !211, line: 69, baseType: !259, size: 16, offset: 1760)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !5266, file: !211, line: 70, baseType: !259, size: 16, offset: 1776)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !5266, file: !211, line: 71, baseType: !259, size: 16, offset: 1792)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !5266, file: !211, line: 73, baseType: !259, size: 16, offset: 1808)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !5266, file: !211, line: 74, baseType: !259, size: 16, offset: 1824)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5266, file: !211, line: 76, baseType: !259, size: 16, offset: 1840)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !5266, file: !211, line: 78, baseType: !488, size: 64, offset: 1856)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5266, file: !211, line: 79, baseType: !245, size: 64, offset: 1920)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !5238, file: !211, line: 209, baseType: !461, size: 128, offset: 448)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5238, file: !211, line: 211, baseType: !261, size: 8, offset: 576)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !5238, file: !211, line: 211, baseType: !261, size: 8, offset: 584)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5238, file: !211, line: 212, baseType: !259, size: 16, offset: 592)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5238, file: !211, line: 212, baseType: !259, size: 16, offset: 608)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !5238, file: !211, line: 214, baseType: !259, size: 16, offset: 624)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !5238, file: !211, line: 215, baseType: !259, size: 16, offset: 640)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5238, file: !211, line: 216, baseType: !259, size: 16, offset: 656)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !5238, file: !211, line: 217, baseType: !259, size: 16, offset: 672)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5238, file: !211, line: 219, baseType: !261, size: 8, offset: 688)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5238, file: !211, line: 219, baseType: !261, size: 8, offset: 696)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5238, file: !211, line: 221, baseType: !6463, size: 64, offset: 704)
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6464, size: 64)
!6464 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !211, line: 39, flags: DIFlagFwdDecl)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !5238, file: !211, line: 223, baseType: !290, size: 128, offset: 768)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5238, file: !211, line: 224, baseType: !290, size: 128, offset: 896)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !5238, file: !211, line: 225, baseType: !290, size: 128, offset: 1024)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !5238, file: !211, line: 227, baseType: !290, size: 128, offset: 1152)
!6469 = !DILocalVariable(name: "st", arg: 1, scope: !5233, file: !1, line: 1464, type: !277)
!6470 = !DILocation(line: 1464, column: 39, scope: !5233)
!6471 = !DILocalVariable(name: "sa", arg: 2, scope: !5233, file: !1, line: 1464, type: !5236)
!6472 = !DILocation(line: 1464, column: 52, scope: !5233)
!6473 = !DILocalVariable(name: "text", scope: !5233, file: !1, line: 1466, type: !571)
!6474 = !DILocation(line: 1466, column: 8, scope: !5233)
!6475 = !DILocalVariable(name: "ar", scope: !5233, file: !1, line: 1467, type: !439)
!6476 = !DILocation(line: 1467, column: 11, scope: !5233)
!6477 = !DILocalVariable(name: "i", scope: !5233, file: !1, line: 1468, type: !244)
!6478 = !DILocation(line: 1468, column: 6, scope: !5233)
!6479 = !DILocalVariable(name: "x", scope: !5233, file: !1, line: 1468, type: !244)
!6480 = !DILocation(line: 1468, column: 9, scope: !5233)
!6481 = !DILocalVariable(name: "winx", scope: !5233, file: !1, line: 1468, type: !244)
!6482 = !DILocation(line: 1468, column: 12, scope: !5233)
!6483 = !DILocation(line: 1470, column: 6, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1470, column: 6)
!6485 = !DILocation(line: 1470, column: 6, scope: !5233)
!6486 = !DILocation(line: 1470, column: 48, scope: !6484)
!6487 = !DILocation(line: 1472, column: 9, scope: !5233)
!6488 = !DILocation(line: 1472, column: 13, scope: !5233)
!6489 = !DILocation(line: 1472, column: 7, scope: !5233)
!6490 = !DILocation(line: 1474, column: 12, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1474, column: 2)
!6492 = !DILocation(line: 1474, column: 16, scope: !6491)
!6493 = !DILocation(line: 1474, column: 27, scope: !6491)
!6494 = !DILocation(line: 1474, column: 10, scope: !6491)
!6495 = !DILocation(line: 1474, column: 7, scope: !6491)
!6496 = !DILocation(line: 1474, column: 34, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6491, file: !1, line: 1474, column: 2)
!6498 = !DILocation(line: 1474, column: 2, scope: !6491)
!6499 = !DILocation(line: 1475, column: 7, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6497, file: !1, line: 1475, column: 7)
!6501 = !DILocation(line: 1475, column: 11, scope: !6500)
!6502 = !DILocation(line: 1475, column: 22, scope: !6500)
!6503 = !DILocation(line: 1475, column: 7, scope: !6497)
!6504 = !DILocation(line: 1476, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !1, line: 1475, column: 42)
!6506 = !DILocation(line: 1476, column: 15, scope: !6505)
!6507 = !DILocation(line: 1476, column: 9, scope: !6505)
!6508 = !DILocation(line: 1477, column: 4, scope: !6505)
!6509 = !DILocation(line: 1475, column: 25, scope: !6500)
!6510 = !DILocation(line: 1474, column: 43, scope: !6497)
!6511 = !DILocation(line: 1474, column: 47, scope: !6497)
!6512 = !DILocation(line: 1474, column: 41, scope: !6497)
!6513 = !DILocation(line: 1474, column: 2, scope: !6497)
!6514 = distinct !{!6514, !6498, !6515}
!6515 = !DILocation(line: 1478, column: 3, scope: !6491)
!6516 = !DILocation(line: 1480, column: 30, scope: !5233)
!6517 = !DILocation(line: 1480, column: 2, scope: !5233)
!6518 = !DILocation(line: 1482, column: 19, scope: !5233)
!6519 = !DILocation(line: 1482, column: 25, scope: !5233)
!6520 = !DILocation(line: 1482, column: 31, scope: !5233)
!6521 = !DILocation(line: 1482, column: 38, scope: !5233)
!6522 = !DILocation(line: 1482, column: 44, scope: !5233)
!6523 = !DILocation(line: 1482, column: 6, scope: !5233)
!6524 = !DILocation(line: 1482, column: 4, scope: !5233)
!6525 = !DILocation(line: 1483, column: 6, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1483, column: 6)
!6527 = !DILocation(line: 1483, column: 10, scope: !6526)
!6528 = !DILocation(line: 1483, column: 6, scope: !5233)
!6529 = !DILocalVariable(name: "offl", scope: !6530, file: !1, line: 1484, type: !244)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !1, line: 1483, column: 20)
!6531 = !DILocation(line: 1484, column: 7, scope: !6530)
!6532 = !DILocalVariable(name: "offc", scope: !6530, file: !1, line: 1484, type: !244)
!6533 = !DILocation(line: 1484, column: 13, scope: !6530)
!6534 = !DILocation(line: 1485, column: 15, scope: !6530)
!6535 = !DILocation(line: 1485, column: 19, scope: !6530)
!6536 = !DILocation(line: 1485, column: 23, scope: !6530)
!6537 = !DILocation(line: 1485, column: 29, scope: !6530)
!6538 = !DILocation(line: 1485, column: 35, scope: !6530)
!6539 = !DILocation(line: 1485, column: 41, scope: !6530)
!6540 = !DILocation(line: 1485, column: 3, scope: !6530)
!6541 = !DILocation(line: 1486, column: 8, scope: !6530)
!6542 = !DILocation(line: 1486, column: 5, scope: !6530)
!6543 = !DILocation(line: 1487, column: 2, scope: !6530)
!6544 = !DILocation(line: 1489, column: 6, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1489, column: 6)
!6546 = !DILocation(line: 1489, column: 10, scope: !6545)
!6547 = !DILocation(line: 1489, column: 16, scope: !6545)
!6548 = !DILocation(line: 1489, column: 20, scope: !6545)
!6549 = !DILocation(line: 1489, column: 14, scope: !6545)
!6550 = !DILocation(line: 1489, column: 33, scope: !6545)
!6551 = !DILocation(line: 1489, column: 30, scope: !6545)
!6552 = !DILocation(line: 1489, column: 35, scope: !6545)
!6553 = !DILocation(line: 1489, column: 38, scope: !6545)
!6554 = !DILocation(line: 1489, column: 42, scope: !6545)
!6555 = !DILocation(line: 1489, column: 48, scope: !6545)
!6556 = !DILocation(line: 1489, column: 46, scope: !6545)
!6557 = !DILocation(line: 1489, column: 6, scope: !5233)
!6558 = !DILocation(line: 1490, column: 13, scope: !6545)
!6559 = !DILocation(line: 1490, column: 17, scope: !6545)
!6560 = !DILocation(line: 1490, column: 21, scope: !6545)
!6561 = !DILocation(line: 1490, column: 31, scope: !6545)
!6562 = !DILocation(line: 1490, column: 15, scope: !6545)
!6563 = !DILocation(line: 1490, column: 3, scope: !6545)
!6564 = !DILocation(line: 1490, column: 7, scope: !6545)
!6565 = !DILocation(line: 1490, column: 11, scope: !6545)
!6566 = !DILocation(line: 1492, column: 6, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1492, column: 6)
!6568 = !DILocation(line: 1492, column: 10, scope: !6567)
!6569 = !DILocation(line: 1492, column: 6, scope: !5233)
!6570 = !DILocation(line: 1493, column: 3, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6567, file: !1, line: 1492, column: 20)
!6572 = !DILocation(line: 1493, column: 7, scope: !6571)
!6573 = !DILocation(line: 1493, column: 12, scope: !6571)
!6574 = !DILocation(line: 1494, column: 2, scope: !6571)
!6575 = !DILocation(line: 1496, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6567, file: !1, line: 1495, column: 7)
!6577 = !DILocation(line: 1496, column: 11, scope: !6576)
!6578 = !DILocation(line: 1496, column: 39, scope: !6576)
!6579 = !DILocation(line: 1496, column: 43, scope: !6576)
!6580 = !DILocation(line: 1496, column: 49, scope: !6576)
!6581 = !DILocation(line: 1496, column: 55, scope: !6576)
!6582 = !DILocation(line: 1496, column: 61, scope: !6576)
!6583 = !DILocation(line: 1496, column: 67, scope: !6576)
!6584 = !DILocation(line: 1496, column: 21, scope: !6576)
!6585 = !DILocation(line: 1496, column: 75, scope: !6576)
!6586 = !DILocation(line: 1496, column: 79, scope: !6576)
!6587 = !DILocation(line: 1496, column: 73, scope: !6576)
!6588 = !DILocation(line: 1496, column: 18, scope: !6576)
!6589 = !DILocation(line: 1496, column: 5, scope: !6576)
!6590 = !DILocation(line: 1497, column: 11, scope: !6576)
!6591 = !DILocation(line: 1497, column: 25, scope: !6576)
!6592 = !DILocation(line: 1497, column: 29, scope: !6576)
!6593 = !DILocation(line: 1497, column: 43, scope: !6576)
!6594 = !DILocation(line: 1497, column: 22, scope: !6576)
!6595 = !DILocation(line: 1497, column: 59, scope: !6576)
!6596 = !DILocation(line: 1497, column: 57, scope: !6576)
!6597 = !DILocation(line: 1497, column: 8, scope: !6576)
!6598 = !DILocation(line: 1499, column: 7, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6576, file: !1, line: 1499, column: 7)
!6600 = !DILocation(line: 1499, column: 9, scope: !6599)
!6601 = !DILocation(line: 1499, column: 14, scope: !6599)
!6602 = !DILocation(line: 1499, column: 17, scope: !6599)
!6603 = !DILocation(line: 1499, column: 21, scope: !6599)
!6604 = !DILocation(line: 1499, column: 19, scope: !6599)
!6605 = !DILocation(line: 1499, column: 7, scope: !6576)
!6606 = !DILocation(line: 1500, column: 17, scope: !6599)
!6607 = !DILocation(line: 1500, column: 21, scope: !6599)
!6608 = !DILocation(line: 1500, column: 26, scope: !6599)
!6609 = !DILocation(line: 1500, column: 19, scope: !6599)
!6610 = !DILocation(line: 1500, column: 33, scope: !6599)
!6611 = !DILocation(line: 1500, column: 37, scope: !6599)
!6612 = !DILocation(line: 1500, column: 31, scope: !6599)
!6613 = !DILocation(line: 1500, column: 4, scope: !6599)
!6614 = !DILocation(line: 1500, column: 8, scope: !6599)
!6615 = !DILocation(line: 1500, column: 13, scope: !6599)
!6616 = !DILocation(line: 1503, column: 6, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1503, column: 6)
!6618 = !DILocation(line: 1503, column: 10, scope: !6617)
!6619 = !DILocation(line: 1503, column: 14, scope: !6617)
!6620 = !DILocation(line: 1503, column: 6, scope: !5233)
!6621 = !DILocation(line: 1503, column: 19, scope: !6617)
!6622 = !DILocation(line: 1503, column: 23, scope: !6617)
!6623 = !DILocation(line: 1503, column: 27, scope: !6617)
!6624 = !DILocation(line: 1504, column: 6, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1504, column: 6)
!6626 = !DILocation(line: 1504, column: 10, scope: !6625)
!6627 = !DILocation(line: 1504, column: 15, scope: !6625)
!6628 = !DILocation(line: 1504, column: 6, scope: !5233)
!6629 = !DILocation(line: 1504, column: 20, scope: !6625)
!6630 = !DILocation(line: 1504, column: 24, scope: !6625)
!6631 = !DILocation(line: 1504, column: 29, scope: !6625)
!6632 = !DILocation(line: 1506, column: 2, scope: !5233)
!6633 = !DILocation(line: 1506, column: 6, scope: !5233)
!6634 = !DILocation(line: 1506, column: 22, scope: !5233)
!6635 = !DILocation(line: 1507, column: 2, scope: !5233)
!6636 = !DILocation(line: 1507, column: 6, scope: !5233)
!6637 = !DILocation(line: 1507, column: 22, scope: !5233)
!6638 = !DILocation(line: 1508, column: 1, scope: !5233)
!6639 = distinct !DISubprogram(name: "text_update_cursor_moved", scope: !1, file: !1, line: 1510, type: !6640, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{null, !6642}
!6642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6643, size: 64)
!6643 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !6644, line: 69, baseType: !6645)
!6644 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6645 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !6646, line: 44, flags: DIFlagFwdDecl)
!6646 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6647 = !DILocalVariable(name: "C", arg: 1, scope: !6639, file: !1, line: 1510, type: !6642)
!6648 = !DILocation(line: 1510, column: 41, scope: !6639)
!6649 = !DILocalVariable(name: "sa", scope: !6639, file: !1, line: 1512, type: !5236)
!6650 = !DILocation(line: 1512, column: 11, scope: !6639)
!6651 = !DILocation(line: 1512, column: 28, scope: !6639)
!6652 = !DILocation(line: 1512, column: 16, scope: !6639)
!6653 = !DILocalVariable(name: "st", scope: !6639, file: !1, line: 1513, type: !277)
!6654 = !DILocation(line: 1513, column: 13, scope: !6639)
!6655 = !DILocation(line: 1513, column: 36, scope: !6639)
!6656 = !DILocation(line: 1513, column: 18, scope: !6639)
!6657 = !DILocation(line: 1515, column: 24, scope: !6639)
!6658 = !DILocation(line: 1515, column: 28, scope: !6639)
!6659 = !DILocation(line: 1515, column: 2, scope: !6639)
!6660 = !DILocation(line: 1516, column: 1, scope: !6639)
!6661 = distinct !DISubprogram(name: "text_drawcache_init", scope: !1, file: !1, line: 517, type: !1309, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6662 = !DILocalVariable(name: "st", arg: 1, scope: !6661, file: !1, line: 517, type: !277)
!6663 = !DILocation(line: 517, column: 44, scope: !6661)
!6664 = !DILocalVariable(name: "drawcache", scope: !6661, file: !1, line: 519, type: !246)
!6665 = !DILocation(line: 519, column: 13, scope: !6661)
!6666 = !DILocation(line: 519, column: 25, scope: !6661)
!6667 = !DILocation(line: 521, column: 2, scope: !6661)
!6668 = !DILocation(line: 521, column: 13, scope: !6661)
!6669 = !DILocation(line: 521, column: 18, scope: !6661)
!6670 = !DILocation(line: 522, column: 37, scope: !6661)
!6671 = !DILocation(line: 522, column: 41, scope: !6661)
!6672 = !DILocation(line: 522, column: 47, scope: !6661)
!6673 = !DILocation(line: 522, column: 22, scope: !6661)
!6674 = !DILocation(line: 522, column: 2, scope: !6661)
!6675 = !DILocation(line: 522, column: 13, scope: !6661)
!6676 = !DILocation(line: 522, column: 20, scope: !6661)
!6677 = !DILocation(line: 523, column: 2, scope: !6661)
!6678 = !DILocation(line: 523, column: 13, scope: !6661)
!6679 = !DILocation(line: 523, column: 24, scope: !6661)
!6680 = !DILocation(line: 525, column: 18, scope: !6661)
!6681 = !DILocation(line: 525, column: 2, scope: !6661)
!6682 = !DILocation(line: 525, column: 6, scope: !6661)
!6683 = !DILocation(line: 525, column: 16, scope: !6661)
!6684 = !DILocation(line: 526, column: 1, scope: !6661)
!6685 = distinct !DISubprogram(name: "txt_utf8_forward_columns", scope: !1, file: !1, line: 356, type: !6686, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!839, !839, !244, !251}
!6688 = !DILocalVariable(name: "str", arg: 1, scope: !6685, file: !1, line: 356, type: !839)
!6689 = !DILocation(line: 356, column: 57, scope: !6685)
!6690 = !DILocalVariable(name: "columns", arg: 2, scope: !6685, file: !1, line: 356, type: !244)
!6691 = !DILocation(line: 356, column: 66, scope: !6685)
!6692 = !DILocalVariable(name: "padding", arg: 3, scope: !6685, file: !1, line: 356, type: !251)
!6693 = !DILocation(line: 356, column: 80, scope: !6685)
!6694 = !DILocalVariable(name: "col", scope: !6685, file: !1, line: 358, type: !244)
!6695 = !DILocation(line: 358, column: 6, scope: !6685)
!6696 = !DILocalVariable(name: "p", scope: !6685, file: !1, line: 359, type: !839)
!6697 = !DILocation(line: 359, column: 14, scope: !6685)
!6698 = !DILocation(line: 359, column: 18, scope: !6685)
!6699 = !DILocation(line: 360, column: 2, scope: !6685)
!6700 = !DILocation(line: 360, column: 10, scope: !6685)
!6701 = !DILocation(line: 360, column: 9, scope: !6685)
!6702 = !DILocation(line: 361, column: 33, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 360, column: 13)
!6704 = !DILocation(line: 361, column: 9, scope: !6703)
!6705 = !DILocation(line: 361, column: 7, scope: !6703)
!6706 = !DILocation(line: 362, column: 7, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 362, column: 7)
!6708 = !DILocation(line: 362, column: 17, scope: !6707)
!6709 = !DILocation(line: 362, column: 15, scope: !6707)
!6710 = !DILocation(line: 362, column: 21, scope: !6707)
!6711 = !DILocation(line: 362, column: 7, scope: !6703)
!6712 = !DILocation(line: 363, column: 4, scope: !6707)
!6713 = !DILocation(line: 364, column: 14, scope: !6703)
!6714 = !DILocation(line: 364, column: 11, scope: !6703)
!6715 = !DILocation(line: 365, column: 31, scope: !6703)
!6716 = !DILocation(line: 365, column: 8, scope: !6703)
!6717 = !DILocation(line: 365, column: 5, scope: !6703)
!6718 = !DILocation(line: 366, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 366, column: 7)
!6720 = !DILocation(line: 366, column: 15, scope: !6719)
!6721 = !DILocation(line: 366, column: 7, scope: !6703)
!6722 = !DILocation(line: 367, column: 4, scope: !6719)
!6723 = distinct !{!6723, !6699, !6724}
!6724 = !DILocation(line: 368, column: 2, scope: !6685)
!6725 = !DILocation(line: 369, column: 6, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 369, column: 6)
!6727 = !DILocation(line: 369, column: 6, scope: !6685)
!6728 = !DILocation(line: 370, column: 15, scope: !6726)
!6729 = !DILocation(line: 370, column: 14, scope: !6726)
!6730 = !DILocation(line: 370, column: 19, scope: !6726)
!6731 = !DILocation(line: 370, column: 4, scope: !6726)
!6732 = !DILocation(line: 370, column: 12, scope: !6726)
!6733 = !DILocation(line: 370, column: 3, scope: !6726)
!6734 = !DILocation(line: 371, column: 9, scope: !6685)
!6735 = !DILocation(line: 371, column: 2, scope: !6685)
!6736 = distinct !DISubprogram(name: "format_draw_color", scope: !1, file: !1, line: 113, type: !6737, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{null, !261}
!6739 = !DILocalVariable(name: "formatchar", arg: 1, scope: !6736, file: !1, line: 113, type: !261)
!6740 = !DILocation(line: 113, column: 36, scope: !6736)
!6741 = !DILocation(line: 115, column: 10, scope: !6736)
!6742 = !DILocation(line: 115, column: 2, scope: !6736)
!6743 = !DILocation(line: 117, column: 4, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6736, file: !1, line: 115, column: 22)
!6745 = !DILocation(line: 119, column: 4, scope: !6744)
!6746 = !DILocation(line: 120, column: 4, scope: !6744)
!6747 = !DILocation(line: 122, column: 4, scope: !6744)
!6748 = !DILocation(line: 123, column: 4, scope: !6744)
!6749 = !DILocation(line: 125, column: 4, scope: !6744)
!6750 = !DILocation(line: 126, column: 4, scope: !6744)
!6751 = !DILocation(line: 128, column: 4, scope: !6744)
!6752 = !DILocation(line: 129, column: 4, scope: !6744)
!6753 = !DILocation(line: 131, column: 4, scope: !6744)
!6754 = !DILocation(line: 132, column: 4, scope: !6744)
!6755 = !DILocation(line: 134, column: 4, scope: !6744)
!6756 = !DILocation(line: 135, column: 4, scope: !6744)
!6757 = !DILocation(line: 137, column: 4, scope: !6744)
!6758 = !DILocation(line: 138, column: 4, scope: !6744)
!6759 = !DILocation(line: 140, column: 4, scope: !6744)
!6760 = !DILocation(line: 141, column: 4, scope: !6744)
!6761 = !DILocation(line: 144, column: 4, scope: !6744)
!6762 = !DILocation(line: 145, column: 4, scope: !6744)
!6763 = !DILocation(line: 147, column: 1, scope: !6736)
!6764 = distinct !DISubprogram(name: "text_font_draw_character_utf8", scope: !1, file: !1, line: 88, type: !3161, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6765 = !DILocalVariable(name: "st", arg: 1, scope: !6764, file: !1, line: 88, type: !277)
!6766 = !DILocation(line: 88, column: 53, scope: !6764)
!6767 = !DILocalVariable(name: "x", arg: 2, scope: !6764, file: !1, line: 88, type: !244)
!6768 = !DILocation(line: 88, column: 61, scope: !6764)
!6769 = !DILocalVariable(name: "y", arg: 3, scope: !6764, file: !1, line: 88, type: !244)
!6770 = !DILocation(line: 88, column: 68, scope: !6764)
!6771 = !DILocalVariable(name: "c", arg: 4, scope: !6764, file: !1, line: 88, type: !839)
!6772 = !DILocation(line: 88, column: 83, scope: !6764)
!6773 = !DILocalVariable(name: "columns", scope: !6764, file: !1, line: 90, type: !244)
!6774 = !DILocation(line: 90, column: 6, scope: !6764)
!6775 = !DILocalVariable(name: "len", scope: !6764, file: !1, line: 92, type: !6776)
!6776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6777)
!6777 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !6778, line: 46, baseType: !6426)
!6778 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!6779 = !DILocation(line: 92, column: 15, scope: !6764)
!6780 = !DILocation(line: 92, column: 44, scope: !6764)
!6781 = !DILocation(line: 92, column: 21, scope: !6764)
!6782 = !DILocation(line: 93, column: 15, scope: !6764)
!6783 = !DILocation(line: 93, column: 21, scope: !6764)
!6784 = !DILocation(line: 93, column: 24, scope: !6764)
!6785 = !DILocation(line: 93, column: 2, scope: !6764)
!6786 = !DILocation(line: 94, column: 26, scope: !6764)
!6787 = !DILocation(line: 94, column: 32, scope: !6764)
!6788 = !DILocation(line: 94, column: 35, scope: !6764)
!6789 = !DILocation(line: 94, column: 40, scope: !6764)
!6790 = !DILocation(line: 94, column: 44, scope: !6764)
!6791 = !DILocation(line: 94, column: 12, scope: !6764)
!6792 = !DILocation(line: 94, column: 10, scope: !6764)
!6793 = !DILocation(line: 96, column: 9, scope: !6764)
!6794 = !DILocation(line: 96, column: 13, scope: !6764)
!6795 = !DILocation(line: 96, column: 22, scope: !6764)
!6796 = !DILocation(line: 96, column: 20, scope: !6764)
!6797 = !DILocation(line: 96, column: 2, scope: !6764)
!6798 = distinct !DISubprogram(name: "text_font_draw_character", scope: !1, file: !1, line: 80, type: !6799, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!244, !277, !244, !244, !261}
!6801 = !DILocalVariable(name: "st", arg: 1, scope: !6798, file: !1, line: 80, type: !277)
!6802 = !DILocation(line: 80, column: 48, scope: !6798)
!6803 = !DILocalVariable(name: "x", arg: 2, scope: !6798, file: !1, line: 80, type: !244)
!6804 = !DILocation(line: 80, column: 56, scope: !6798)
!6805 = !DILocalVariable(name: "y", arg: 3, scope: !6798, file: !1, line: 80, type: !244)
!6806 = !DILocation(line: 80, column: 63, scope: !6798)
!6807 = !DILocalVariable(name: "c", arg: 4, scope: !6798, file: !1, line: 80, type: !261)
!6808 = !DILocation(line: 80, column: 71, scope: !6798)
!6809 = !DILocation(line: 82, column: 15, scope: !6798)
!6810 = !DILocation(line: 82, column: 21, scope: !6798)
!6811 = !DILocation(line: 82, column: 24, scope: !6798)
!6812 = !DILocation(line: 82, column: 2, scope: !6798)
!6813 = !DILocation(line: 83, column: 11, scope: !6798)
!6814 = !DILocation(line: 83, column: 2, scope: !6798)
!6815 = !DILocation(line: 85, column: 9, scope: !6798)
!6816 = !DILocation(line: 85, column: 13, scope: !6798)
!6817 = !DILocation(line: 85, column: 2, scope: !6798)
!6818 = distinct !DISubprogram(name: "min_ii", scope: !6819, file: !6819, line: 211, type: !6820, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6819 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6820 = !DISubroutineType(types: !6821)
!6821 = !{!244, !244, !244}
!6822 = !DILocalVariable(name: "a", arg: 1, scope: !6818, file: !6819, line: 211, type: !244)
!6823 = !DILocation(line: 211, column: 24, scope: !6818)
!6824 = !DILocalVariable(name: "b", arg: 2, scope: !6818, file: !6819, line: 211, type: !244)
!6825 = !DILocation(line: 211, column: 31, scope: !6818)
!6826 = !DILocation(line: 213, column: 10, scope: !6818)
!6827 = !DILocation(line: 213, column: 14, scope: !6818)
!6828 = !DILocation(line: 213, column: 12, scope: !6818)
!6829 = !DILocation(line: 213, column: 9, scope: !6818)
!6830 = !DILocation(line: 213, column: 19, scope: !6818)
!6831 = !DILocation(line: 213, column: 23, scope: !6818)
!6832 = !DILocation(line: 213, column: 2, scope: !6818)
!6833 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !6834, file: !6834, line: 105, type: !6835, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6834 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6835 = !DISubroutineType(types: !6836)
!6836 = !{!244, !6837}
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!6839 = !DILocalVariable(name: "rct", arg: 1, scope: !6833, file: !6834, line: 105, type: !6837)
!6840 = !DILocation(line: 105, column: 53, scope: !6833)
!6841 = !DILocation(line: 105, column: 68, scope: !6833)
!6842 = !DILocation(line: 105, column: 73, scope: !6833)
!6843 = !DILocation(line: 105, column: 80, scope: !6833)
!6844 = !DILocation(line: 105, column: 85, scope: !6833)
!6845 = !DILocation(line: 105, column: 78, scope: !6833)
!6846 = !DILocation(line: 105, column: 60, scope: !6833)
!6847 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !6834, file: !6834, line: 106, type: !6835, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !520)
!6848 = !DILocalVariable(name: "rct", arg: 1, scope: !6847, file: !6834, line: 106, type: !6837)
!6849 = !DILocation(line: 106, column: 53, scope: !6847)
!6850 = !DILocation(line: 106, column: 68, scope: !6847)
!6851 = !DILocation(line: 106, column: 73, scope: !6847)
!6852 = !DILocation(line: 106, column: 80, scope: !6847)
!6853 = !DILocation(line: 106, column: 85, scope: !6847)
!6854 = !DILocation(line: 106, column: 78, scope: !6847)
!6855 = !DILocation(line: 106, column: 60, scope: !6847)
