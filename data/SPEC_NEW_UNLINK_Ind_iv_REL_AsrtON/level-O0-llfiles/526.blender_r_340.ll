; ModuleID = 'blender/source/blender/render/intern/source/shadeoutput.c'
source_filename = "blender/source/blender/render/intern/source/shadeoutput.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type opaque
%struct.VlakTableNode = type opaque
%struct.StrandTableNode = type opaque
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type { i16*, %struct.ISBShadfacA**, %struct.MemArena*, i32, i32, i32, i32 }
%struct.ISBShadfacA = type { %struct.ISBShadfacA*, i32, i32, float }
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }

@R = external dso_local global %struct.Render, align 8
@.str = private unnamed_addr constant [9 x i8] c"Lamp.002\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @get_lights(%struct.ShadeInput* %shi) #0 !dbg !1826 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !2186, metadata !DIExpression()), !dbg !2187
  %0 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !2188
  %and = and i32 %0, 8, !dbg !2190
  %tobool = icmp ne i32 %and, 0, !dbg !2190
  br i1 %tobool, label %if.then, label %if.end, !dbg !2191

if.then:                                          ; preds = %entry
  store %struct.ListBase* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66), %struct.ListBase** %retval, align 8, !dbg !2192
  br label %return, !dbg !2192

if.end:                                           ; preds = %entry
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2193
  %light_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 121, !dbg !2195
  %2 = load %struct.Group*, %struct.Group** %light_override, align 8, !dbg !2195
  %tobool1 = icmp ne %struct.Group* %2, null, !dbg !2193
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !2196

if.then2:                                         ; preds = %if.end
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2197
  %light_override3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 121, !dbg !2198
  %4 = load %struct.Group*, %struct.Group** %light_override3, align 8, !dbg !2198
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %4, i32 0, i32 1, !dbg !2199
  store %struct.ListBase* %gobject, %struct.ListBase** %retval, align 8, !dbg !2200
  br label %return, !dbg !2200

if.end4:                                          ; preds = %if.end
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2201
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 0, !dbg !2203
  %6 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !2203
  %tobool5 = icmp ne %struct.Material* %6, null, !dbg !2201
  br i1 %tobool5, label %land.lhs.true, label %if.end12, !dbg !2204

land.lhs.true:                                    ; preds = %if.end4
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2205
  %mat6 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 0, !dbg !2206
  %8 = load %struct.Material*, %struct.Material** %mat6, align 8, !dbg !2206
  %group = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 105, !dbg !2207
  %9 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !2207
  %tobool7 = icmp ne %struct.Group* %9, null, !dbg !2205
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !2208

if.then8:                                         ; preds = %land.lhs.true
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2209
  %mat9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 0, !dbg !2210
  %11 = load %struct.Material*, %struct.Material** %mat9, align 8, !dbg !2210
  %group10 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 105, !dbg !2211
  %12 = load %struct.Group*, %struct.Group** %group10, align 8, !dbg !2211
  %gobject11 = getelementptr inbounds %struct.Group, %struct.Group* %12, i32 0, i32 1, !dbg !2212
  store %struct.ListBase* %gobject11, %struct.ListBase** %retval, align 8, !dbg !2213
  br label %return, !dbg !2213

if.end12:                                         ; preds = %land.lhs.true, %if.end4
  store %struct.ListBase* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66), %struct.ListBase** %retval, align 8, !dbg !2214
  br label %return, !dbg !2214

return:                                           ; preds = %if.end12, %if.then8, %if.then2, %if.then
  %13 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !2215
  ret %struct.ListBase* %13, !dbg !2215
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local float @mistfactor(float %zcor, float* %co) #0 !dbg !2216 {
entry:
  %zcor.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %fac = alloca float, align 4
  %hi = alloca float, align 4
  store float %zcor, float* %zcor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %zcor.addr, metadata !2221, metadata !DIExpression()), !dbg !2222
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !2223, metadata !DIExpression()), !dbg !2224
  call void @llvm.dbg.declare(metadata float* %fac, metadata !2225, metadata !DIExpression()), !dbg !2226
  call void @llvm.dbg.declare(metadata float* %hi, metadata !2227, metadata !DIExpression()), !dbg !2228
  %0 = load float, float* %zcor.addr, align 4, !dbg !2229
  %1 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 31), align 4, !dbg !2230
  %sub = fsub float %0, %1, !dbg !2231
  store float %sub, float* %fac, align 4, !dbg !2232
  %2 = load float, float* %fac, align 4, !dbg !2233
  %cmp = fcmp ogt float %2, 0.000000e+00, !dbg !2235
  br i1 %cmp, label %if.then, label %if.else14, !dbg !2236

if.then:                                          ; preds = %entry
  %3 = load float, float* %fac, align 4, !dbg !2237
  %4 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 32), align 8, !dbg !2240
  %cmp1 = fcmp olt float %3, %4, !dbg !2241
  br i1 %cmp1, label %if.then2, label %if.else12, !dbg !2242

if.then2:                                         ; preds = %if.then
  %5 = load float, float* %fac, align 4, !dbg !2243
  %6 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 32), align 8, !dbg !2245
  %div = fdiv float %5, %6, !dbg !2246
  store float %div, float* %fac, align 4, !dbg !2247
  %7 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 5), align 2, !dbg !2248
  %conv = sext i16 %7 to i32, !dbg !2250
  %cmp3 = icmp eq i32 %conv, 0, !dbg !2251
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !2252

if.then5:                                         ; preds = %if.then2
  %8 = load float, float* %fac, align 4, !dbg !2253
  %9 = load float, float* %fac, align 4, !dbg !2255
  %mul = fmul float %9, %8, !dbg !2255
  store float %mul, float* %fac, align 4, !dbg !2255
  br label %if.end11, !dbg !2256

if.else:                                          ; preds = %if.then2
  %10 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 5), align 2, !dbg !2257
  %conv6 = sext i16 %10 to i32, !dbg !2259
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !2260
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !2261

if.then9:                                         ; preds = %if.else
  br label %if.end, !dbg !2262

if.else10:                                        ; preds = %if.else
  %11 = load float, float* %fac, align 4, !dbg !2264
  %call = call float @sqrtf(float %11) #6, !dbg !2266
  store float %call, float* %fac, align 4, !dbg !2267
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then9
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then5
  br label %if.end13, !dbg !2268

if.else12:                                        ; preds = %if.then
  store float 1.000000e+00, float* %fac, align 4, !dbg !2269
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.end11
  br label %if.end15, !dbg !2271

if.else14:                                        ; preds = %entry
  store float 0.000000e+00, float* %fac, align 4, !dbg !2272
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.end13
  %12 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 33), align 4, !dbg !2274
  %cmp16 = fcmp une float %12, 0.000000e+00, !dbg !2276
  br i1 %cmp16, label %land.lhs.true, label %if.end41, !dbg !2277

land.lhs.true:                                    ; preds = %if.end15
  %13 = load float, float* %fac, align 4, !dbg !2278
  %cmp18 = fcmp une float %13, 0.000000e+00, !dbg !2279
  br i1 %cmp18, label %if.then20, label %if.end41, !dbg !2280

if.then20:                                        ; preds = %land.lhs.true
  %14 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0, i64 2), align 8, !dbg !2281
  %15 = load float*, float** %co.addr, align 8, !dbg !2283
  %arrayidx = getelementptr inbounds float, float* %15, i64 0, !dbg !2283
  %16 = load float, float* %arrayidx, align 4, !dbg !2283
  %mul21 = fmul float %14, %16, !dbg !2284
  %17 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 1, i64 2), align 8, !dbg !2285
  %18 = load float*, float** %co.addr, align 8, !dbg !2286
  %arrayidx22 = getelementptr inbounds float, float* %18, i64 1, !dbg !2286
  %19 = load float, float* %arrayidx22, align 4, !dbg !2286
  %mul23 = fmul float %17, %19, !dbg !2287
  %add = fadd float %mul21, %mul23, !dbg !2288
  %20 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 2, i64 2), align 8, !dbg !2289
  %21 = load float*, float** %co.addr, align 8, !dbg !2290
  %arrayidx24 = getelementptr inbounds float, float* %21, i64 2, !dbg !2290
  %22 = load float, float* %arrayidx24, align 4, !dbg !2290
  %mul25 = fmul float %20, %22, !dbg !2291
  %add26 = fadd float %add, %mul25, !dbg !2292
  %23 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 3, i64 2), align 8, !dbg !2293
  %add27 = fadd float %add26, %23, !dbg !2294
  store float %add27, float* %hi, align 4, !dbg !2295
  %24 = load float, float* %hi, align 4, !dbg !2296
  %25 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 33), align 4, !dbg !2298
  %cmp28 = fcmp ogt float %24, %25, !dbg !2299
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !2300

if.then30:                                        ; preds = %if.then20
  store float 0.000000e+00, float* %fac, align 4, !dbg !2301
  br label %if.end40, !dbg !2303

if.else31:                                        ; preds = %if.then20
  %26 = load float, float* %hi, align 4, !dbg !2304
  %cmp32 = fcmp ogt float %26, 0.000000e+00, !dbg !2306
  br i1 %cmp32, label %if.then34, label %if.end39, !dbg !2307

if.then34:                                        ; preds = %if.else31
  %27 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 33), align 4, !dbg !2308
  %28 = load float, float* %hi, align 4, !dbg !2310
  %sub35 = fsub float %27, %28, !dbg !2311
  %29 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 33), align 4, !dbg !2312
  %div36 = fdiv float %sub35, %29, !dbg !2313
  store float %div36, float* %hi, align 4, !dbg !2314
  %30 = load float, float* %hi, align 4, !dbg !2315
  %31 = load float, float* %hi, align 4, !dbg !2316
  %mul37 = fmul float %30, %31, !dbg !2317
  %32 = load float, float* %fac, align 4, !dbg !2318
  %mul38 = fmul float %32, %mul37, !dbg !2318
  store float %mul38, float* %fac, align 4, !dbg !2318
  br label %if.end39, !dbg !2319

if.end39:                                         ; preds = %if.then34, %if.else31
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then30
  br label %if.end41, !dbg !2320

if.end41:                                         ; preds = %if.end40, %land.lhs.true, %if.end15
  %33 = load float, float* %fac, align 4, !dbg !2321
  %sub42 = fsub float 1.000000e+00, %33, !dbg !2322
  %34 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 30), align 8, !dbg !2323
  %sub43 = fsub float 1.000000e+00, %34, !dbg !2324
  %mul44 = fmul float %sub42, %sub43, !dbg !2325
  ret float %mul44, !dbg !2326
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @renderspothalo(%struct.ShadeInput* %shi, float* %col, float %alpha) #0 !dbg !2327 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %col.addr = alloca float*, align 8
  %alpha.addr = alloca float, align 4
  %lights = alloca %struct.ListBase*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %i = alloca float, align 4
  %i_alpha = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !2330, metadata !DIExpression()), !dbg !2331
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !2332, metadata !DIExpression()), !dbg !2333
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !2334, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lights, metadata !2336, metadata !DIExpression()), !dbg !2337
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !2338, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !2351, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.declare(metadata float* %i, metadata !2529, metadata !DIExpression()), !dbg !2530
  %0 = load float, float* %alpha.addr, align 4, !dbg !2531
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !2533
  br i1 %cmp, label %if.then, label %if.end, !dbg !2534

if.then:                                          ; preds = %entry
  br label %if.end54, !dbg !2535

if.end:                                           ; preds = %entry
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2536
  %call = call %struct.ListBase* @get_lights(%struct.ShadeInput* %1), !dbg !2537
  store %struct.ListBase* %call, %struct.ListBase** %lights, align 8, !dbg !2538
  %2 = load %struct.ListBase*, %struct.ListBase** %lights, align 8, !dbg !2539
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !2541
  %3 = load i8*, i8** %first, align 8, !dbg !2541
  %4 = bitcast i8* %3 to %struct.GroupObject*, !dbg !2539
  store %struct.GroupObject* %4, %struct.GroupObject** %go, align 8, !dbg !2542
  br label %for.cond, !dbg !2543

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !2544
  %tobool = icmp ne %struct.GroupObject* %5, null, !dbg !2546
  br i1 %tobool, label %for.body, label %for.end, !dbg !2546

for.body:                                         ; preds = %for.cond
  %6 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !2547
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %6, i32 0, i32 3, !dbg !2549
  %7 = load i8*, i8** %lampren, align 8, !dbg !2549
  %8 = bitcast i8* %7 to %struct.LampRen*, !dbg !2547
  store %struct.LampRen* %8, %struct.LampRen** %lar, align 8, !dbg !2550
  %9 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2551
  %cmp1 = icmp eq %struct.LampRen* %9, null, !dbg !2553
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2554

if.then2:                                         ; preds = %for.body
  br label %for.inc, !dbg !2555

if.end3:                                          ; preds = %for.body
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2556
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 6, !dbg !2558
  %11 = load i16, i16* %type, align 8, !dbg !2558
  %conv = sext i16 %11 to i32, !dbg !2556
  %cmp4 = icmp eq i32 %conv, 2, !dbg !2559
  br i1 %cmp4, label %land.lhs.true, label %if.end48, !dbg !2560

land.lhs.true:                                    ; preds = %if.end3
  %12 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2561
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 7, !dbg !2562
  %13 = load i32, i32* %mode, align 4, !dbg !2562
  %and = and i32 %13, 2, !dbg !2563
  %tobool6 = icmp ne i32 %and, 0, !dbg !2563
  br i1 %tobool6, label %land.lhs.true7, label %if.end48, !dbg !2564

land.lhs.true7:                                   ; preds = %land.lhs.true
  %14 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2565
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 36, !dbg !2566
  %15 = load i16, i16* %buftype, align 4, !dbg !2566
  %conv8 = sext i16 %15 to i32, !dbg !2565
  %cmp9 = icmp ne i32 %conv8, 3, !dbg !2567
  br i1 %cmp9, label %land.lhs.true11, label %if.end48, !dbg !2568

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %16 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2569
  %haint = getelementptr inbounds %struct.LampRen, %struct.LampRen* %16, i32 0, i32 16, !dbg !2570
  %17 = load float, float* %haint, align 8, !dbg !2570
  %cmp12 = fcmp ogt float %17, 0.000000e+00, !dbg !2571
  br i1 %cmp12, label %if.then14, label %if.end48, !dbg !2572

if.then14:                                        ; preds = %land.lhs.true11
  %18 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2573
  %mode15 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 7, !dbg !2576
  %19 = load i32, i32* %mode15, align 4, !dbg !2576
  %and16 = and i32 %19, 4, !dbg !2577
  %tobool17 = icmp ne i32 %and16, 0, !dbg !2577
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !2578

if.then18:                                        ; preds = %if.then14
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2579
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 1, !dbg !2581
  %21 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !2581
  %tobool19 = icmp ne %struct.VlakRen* %21, null, !dbg !2579
  br i1 %tobool19, label %land.lhs.true20, label %if.end26, !dbg !2582

land.lhs.true20:                                  ; preds = %if.then18
  %22 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2583
  %lay = getelementptr inbounds %struct.LampRen, %struct.LampRen* %22, i32 0, i32 17, !dbg !2584
  %23 = load i32, i32* %lay, align 4, !dbg !2584
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2585
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 3, !dbg !2586
  %25 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !2586
  %lay21 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %25, i32 0, i32 7, !dbg !2587
  %26 = load i32, i32* %lay21, align 8, !dbg !2587
  %and22 = and i32 %23, %26, !dbg !2588
  %cmp23 = icmp eq i32 %and22, 0, !dbg !2589
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2590

if.then25:                                        ; preds = %land.lhs.true20
  br label %for.inc, !dbg !2591

if.end26:                                         ; preds = %land.lhs.true20, %if.then18
  br label %if.end27, !dbg !2592

if.end27:                                         ; preds = %if.end26, %if.then14
  %27 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2593
  %lay28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %27, i32 0, i32 17, !dbg !2595
  %28 = load i32, i32* %lay28, align 4, !dbg !2595
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2596
  %lay29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 117, !dbg !2597
  %30 = load i32, i32* %lay29, align 8, !dbg !2597
  %and30 = and i32 %28, %30, !dbg !2598
  %cmp31 = icmp eq i32 %and30, 0, !dbg !2599
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !2600

if.then33:                                        ; preds = %if.end27
  br label %for.inc, !dbg !2601

if.end34:                                         ; preds = %if.end27
  %31 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2602
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2603
  call void @spothalo(%struct.LampRen* %31, %struct.ShadeInput* %32, float* %i), !dbg !2604
  %33 = load float, float* %i, align 4, !dbg !2605
  %cmp35 = fcmp ogt float %33, 0.000000e+00, !dbg !2607
  br i1 %cmp35, label %if.then37, label %if.end47, !dbg !2608

if.then37:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata float* %i_alpha, metadata !2609, metadata !DIExpression()), !dbg !2611
  %34 = load float, float* %i, align 4, !dbg !2612
  %35 = load float, float* %alpha.addr, align 4, !dbg !2613
  %mul = fmul float %34, %35, !dbg !2614
  store float %mul, float* %i_alpha, align 4, !dbg !2611
  %36 = load float, float* %i_alpha, align 4, !dbg !2615
  %37 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2616
  %r = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 8, !dbg !2617
  %38 = load float, float* %r, align 8, !dbg !2617
  %mul38 = fmul float %36, %38, !dbg !2618
  %39 = load float*, float** %col.addr, align 8, !dbg !2619
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !2619
  %40 = load float, float* %arrayidx, align 4, !dbg !2620
  %add = fadd float %40, %mul38, !dbg !2620
  store float %add, float* %arrayidx, align 4, !dbg !2620
  %41 = load float, float* %i_alpha, align 4, !dbg !2621
  %42 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2622
  %g = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 9, !dbg !2623
  %43 = load float, float* %g, align 4, !dbg !2623
  %mul39 = fmul float %41, %43, !dbg !2624
  %44 = load float*, float** %col.addr, align 8, !dbg !2625
  %arrayidx40 = getelementptr inbounds float, float* %44, i64 1, !dbg !2625
  %45 = load float, float* %arrayidx40, align 4, !dbg !2626
  %add41 = fadd float %45, %mul39, !dbg !2626
  store float %add41, float* %arrayidx40, align 4, !dbg !2626
  %46 = load float, float* %i_alpha, align 4, !dbg !2627
  %47 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !2628
  %b = getelementptr inbounds %struct.LampRen, %struct.LampRen* %47, i32 0, i32 10, !dbg !2629
  %48 = load float, float* %b, align 8, !dbg !2629
  %mul42 = fmul float %46, %48, !dbg !2630
  %49 = load float*, float** %col.addr, align 8, !dbg !2631
  %arrayidx43 = getelementptr inbounds float, float* %49, i64 2, !dbg !2631
  %50 = load float, float* %arrayidx43, align 4, !dbg !2632
  %add44 = fadd float %50, %mul42, !dbg !2632
  store float %add44, float* %arrayidx43, align 4, !dbg !2632
  %51 = load float, float* %i_alpha, align 4, !dbg !2633
  %52 = load float*, float** %col.addr, align 8, !dbg !2634
  %arrayidx45 = getelementptr inbounds float, float* %52, i64 3, !dbg !2634
  %53 = load float, float* %arrayidx45, align 4, !dbg !2635
  %add46 = fadd float %53, %51, !dbg !2635
  store float %add46, float* %arrayidx45, align 4, !dbg !2635
  br label %if.end47, !dbg !2636

if.end47:                                         ; preds = %if.then37, %if.end34
  br label %if.end48, !dbg !2637

if.end48:                                         ; preds = %if.end47, %land.lhs.true11, %land.lhs.true7, %land.lhs.true, %if.end3
  br label %for.inc, !dbg !2638

for.inc:                                          ; preds = %if.end48, %if.then33, %if.then25, %if.then2
  %54 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !2639
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %54, i32 0, i32 0, !dbg !2640
  %55 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !2640
  store %struct.GroupObject* %55, %struct.GroupObject** %go, align 8, !dbg !2641
  br label %for.cond, !dbg !2642, !llvm.loop !2643

for.end:                                          ; preds = %for.cond
  %56 = load float*, float** %col.addr, align 8, !dbg !2645
  %arrayidx49 = getelementptr inbounds float, float* %56, i64 3, !dbg !2645
  %57 = load float, float* %arrayidx49, align 4, !dbg !2645
  %cmp50 = fcmp ogt float %57, 1.000000e+00, !dbg !2647
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !2648

if.then52:                                        ; preds = %for.end
  %58 = load float*, float** %col.addr, align 8, !dbg !2649
  %arrayidx53 = getelementptr inbounds float, float* %58, i64 3, !dbg !2649
  store float 1.000000e+00, float* %arrayidx53, align 4, !dbg !2650
  br label %if.end54, !dbg !2649

if.end54:                                         ; preds = %if.then, %if.then52, %for.end
  ret void, !dbg !2651
}

; Function Attrs: noinline nounwind uwtable
define internal void @spothalo(%struct.LampRen* %lar, %struct.ShadeInput* %shi, float* %intens) #0 !dbg !2652 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %intens.addr = alloca float*, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %disc = alloca double, align 8
  %nray = alloca [3 x double], align 16
  %npos = alloca [3 x double], align 16
  %t0 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %p1 = alloca [3 x float], align 4
  %p2 = alloca [3 x float], align 4
  %ladist = alloca float, align 4
  %maxz = alloca float, align 4
  %maxy = alloca float, align 4
  %haint = alloca float, align 4
  %cuts = alloca i32, align 4
  %do_clip = alloca i8, align 1
  %use_yco = alloca i8, align 1
  %ok1 = alloca i32, align 4
  %ok2 = alloca i32, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !2655, metadata !DIExpression()), !dbg !2656
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !2657, metadata !DIExpression()), !dbg !2658
  store float* %intens, float** %intens.addr, align 8
  call void @llvm.dbg.declare(metadata float** %intens.addr, metadata !2659, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.declare(metadata double* %a, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.declare(metadata double* %b, metadata !2663, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.declare(metadata double* %c, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata double* %disc, metadata !2667, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.declare(metadata [3 x double]* %nray, metadata !2669, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata [3 x double]* %npos, metadata !2672, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.declare(metadata double* %t0, metadata !2674, metadata !DIExpression()), !dbg !2675
  call void @llvm.dbg.declare(metadata double* %t1, metadata !2676, metadata !DIExpression()), !dbg !2677
  store double 0.000000e+00, double* %t1, align 8, !dbg !2677
  call void @llvm.dbg.declare(metadata double* %t2, metadata !2678, metadata !DIExpression()), !dbg !2679
  store double 0.000000e+00, double* %t2, align 8, !dbg !2679
  call void @llvm.dbg.declare(metadata double* %t3, metadata !2680, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.declare(metadata [3 x float]* %p1, metadata !2682, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.declare(metadata [3 x float]* %p2, metadata !2684, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.declare(metadata float* %ladist, metadata !2686, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.declare(metadata float* %maxz, metadata !2688, metadata !DIExpression()), !dbg !2689
  store float 0.000000e+00, float* %maxz, align 4, !dbg !2689
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !2690, metadata !DIExpression()), !dbg !2691
  store float 0.000000e+00, float* %maxy, align 4, !dbg !2691
  call void @llvm.dbg.declare(metadata float* %haint, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i32* %cuts, metadata !2694, metadata !DIExpression()), !dbg !2695
  call void @llvm.dbg.declare(metadata i8* %do_clip, metadata !2696, metadata !DIExpression()), !dbg !2697
  store i8 1, i8* %do_clip, align 1, !dbg !2697
  call void @llvm.dbg.declare(metadata i8* %use_yco, metadata !2698, metadata !DIExpression()), !dbg !2699
  store i8 0, i8* %use_yco, align 1, !dbg !2699
  %0 = load float*, float** %intens.addr, align 8, !dbg !2700
  store float 0.000000e+00, float* %0, align 4, !dbg !2701
  %1 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2702
  %haint1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %1, i32 0, i32 16, !dbg !2703
  %2 = load float, float* %haint1, align 8, !dbg !2703
  store float %2, float* %haint, align 4, !dbg !2704
  %3 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !2705
  %and = and i32 %3, 8, !dbg !2707
  %tobool = icmp ne i32 %and, 0, !dbg !2707
  br i1 %tobool, label %if.then, label %if.else, !dbg !2708

if.then:                                          ; preds = %entry
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2709
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 29, !dbg !2711
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2709
  %5 = load float, float* %arrayidx, align 8, !dbg !2709
  %6 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2712
  %co2 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 5, !dbg !2713
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !2712
  %7 = load float, float* %arrayidx3, align 4, !dbg !2712
  %sub = fsub float %5, %7, !dbg !2714
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2715
  store float %sub, float* %arrayidx4, align 4, !dbg !2716
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2717
  %co5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 29, !dbg !2718
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 1, !dbg !2717
  %9 = load float, float* %arrayidx6, align 4, !dbg !2717
  %10 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2719
  %co7 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 5, !dbg !2720
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 1, !dbg !2719
  %11 = load float, float* %arrayidx8, align 4, !dbg !2719
  %sub9 = fsub float %9, %11, !dbg !2721
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !2722
  store float %sub9, float* %arrayidx10, align 4, !dbg !2723
  %12 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2724
  %co11 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 5, !dbg !2725
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 2, !dbg !2724
  %13 = load float, float* %arrayidx12, align 4, !dbg !2724
  %fneg = fneg float %13, !dbg !2726
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2727
  store float %fneg, float* %arrayidx13, align 4, !dbg !2728
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2729
  %imat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 59, !dbg !2730
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !2729
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2731
  call void @mul_m3_v3([3 x float]* %arraydecay, float* %arraydecay14), !dbg !2732
  %arraydecay15 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !2733
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2734
  call void @copy_v3db_v3fl(double* %arraydecay15, float* %arraydecay16), !dbg !2735
  %15 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2736
  %sh_zfac = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 62, !dbg !2737
  %16 = load float, float* %sh_zfac, align 4, !dbg !2737
  %conv = fpext float %16 to double, !dbg !2738
  %arrayidx17 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2739
  %17 = load double, double* %arrayidx17, align 16, !dbg !2740
  %mul = fmul double %17, %conv, !dbg !2740
  store double %mul, double* %arrayidx17, align 16, !dbg !2740
  br label %if.end, !dbg !2741

if.else:                                          ; preds = %entry
  %arraydecay18 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !2742
  %18 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2744
  %sh_invcampos = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 61, !dbg !2745
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos, i64 0, i64 0, !dbg !2744
  call void @copy_v3db_v3fl(double* %arraydecay18, float* %arraydecay19), !dbg !2746
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay20 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !2747
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2748
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 30, !dbg !2749
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !2748
  call void @copy_v3db_v3fl(double* %arraydecay20, float* %arraydecay21), !dbg !2750
  %20 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2751
  %imat22 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %20, i32 0, i32 59, !dbg !2752
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat22, i64 0, i64 0, !dbg !2751
  %arraydecay24 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !2753
  call void @mul_m3_v3_double([3 x float]* %arraydecay23, double* %arraydecay24), !dbg !2754
  %21 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !2755
  %conv25 = sext i16 %21 to i32, !dbg !2757
  %and26 = and i32 %conv25, 1, !dbg !2758
  %tobool27 = icmp ne i32 %and26, 0, !dbg !2758
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !2759

if.then28:                                        ; preds = %if.end
  %22 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2760
  %co29 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %22, i32 0, i32 5, !dbg !2762
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co29, i64 0, i64 2, !dbg !2760
  %23 = load float, float* %arrayidx30, align 4, !dbg !2760
  %fneg31 = fneg float %23, !dbg !2763
  %24 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2764
  %co32 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %24, i32 0, i32 5, !dbg !2765
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !2764
  %call = call float @mistfactor(float %fneg31, float* %arraydecay33), !dbg !2766
  %25 = load float, float* %haint, align 4, !dbg !2767
  %mul34 = fmul float %25, %call, !dbg !2767
  store float %mul34, float* %haint, align 4, !dbg !2767
  %26 = load float, float* %haint, align 4, !dbg !2768
  %cmp = fcmp oeq float %26, 0.000000e+00, !dbg !2770
  br i1 %cmp, label %if.then36, label %if.end37, !dbg !2771

if.then36:                                        ; preds = %if.then28
  br label %if.end369, !dbg !2772

if.end37:                                         ; preds = %if.then28
  br label %if.end38, !dbg !2774

if.end38:                                         ; preds = %if.end37, %if.end
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2775
  %co39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 29, !dbg !2777
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 2, !dbg !2775
  %28 = load float, float* %arrayidx40, align 8, !dbg !2775
  %cmp41 = fcmp oeq float %28, 0.000000e+00, !dbg !2778
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !2779

if.then43:                                        ; preds = %if.end38
  store i8 0, i8* %do_clip, align 1, !dbg !2780
  br label %if.end103, !dbg !2782

if.else44:                                        ; preds = %if.end38
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2783
  %co45 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 29, !dbg !2785
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !2783
  %30 = load float, float* %arrayidx46, align 8, !dbg !2783
  %31 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2786
  %co47 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 5, !dbg !2787
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %co47, i64 0, i64 0, !dbg !2786
  %32 = load float, float* %arrayidx48, align 4, !dbg !2786
  %sub49 = fsub float %30, %32, !dbg !2788
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2789
  store float %sub49, float* %arrayidx50, align 4, !dbg !2790
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2791
  %co51 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 29, !dbg !2792
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 1, !dbg !2791
  %34 = load float, float* %arrayidx52, align 4, !dbg !2791
  %35 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2793
  %co53 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %35, i32 0, i32 5, !dbg !2794
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 1, !dbg !2793
  %36 = load float, float* %arrayidx54, align 4, !dbg !2793
  %sub55 = fsub float %34, %36, !dbg !2795
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !2796
  store float %sub55, float* %arrayidx56, align 4, !dbg !2797
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !2798
  %co57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 29, !dbg !2799
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %co57, i64 0, i64 2, !dbg !2798
  %38 = load float, float* %arrayidx58, align 8, !dbg !2798
  %39 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2800
  %co59 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %39, i32 0, i32 5, !dbg !2801
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 2, !dbg !2800
  %40 = load float, float* %arrayidx60, align 4, !dbg !2800
  %sub61 = fsub float %38, %40, !dbg !2802
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2803
  store float %sub61, float* %arrayidx62, align 4, !dbg !2804
  %41 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2805
  %imat63 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %41, i32 0, i32 59, !dbg !2806
  %arrayidx64 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat63, i64 0, i64 0, !dbg !2805
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 2, !dbg !2805
  %42 = load float, float* %arrayidx65, align 8, !dbg !2805
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2807
  %43 = load float, float* %arrayidx66, align 4, !dbg !2807
  %mul67 = fmul float %42, %43, !dbg !2808
  %44 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2809
  %imat68 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %44, i32 0, i32 59, !dbg !2810
  %arrayidx69 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat68, i64 0, i64 1, !dbg !2809
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 2, !dbg !2809
  %45 = load float, float* %arrayidx70, align 4, !dbg !2809
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !2811
  %46 = load float, float* %arrayidx71, align 4, !dbg !2811
  %mul72 = fmul float %45, %46, !dbg !2812
  %add = fadd float %mul67, %mul72, !dbg !2813
  %47 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2814
  %imat73 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %47, i32 0, i32 59, !dbg !2815
  %arrayidx74 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat73, i64 0, i64 2, !dbg !2814
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 2, !dbg !2814
  %48 = load float, float* %arrayidx75, align 8, !dbg !2814
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2816
  %49 = load float, float* %arrayidx76, align 4, !dbg !2816
  %mul77 = fmul float %48, %49, !dbg !2817
  %add78 = fadd float %add, %mul77, !dbg !2818
  store float %add78, float* %maxz, align 4, !dbg !2819
  %50 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2820
  %sh_zfac79 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %50, i32 0, i32 62, !dbg !2821
  %51 = load float, float* %sh_zfac79, align 4, !dbg !2821
  %52 = load float, float* %maxz, align 4, !dbg !2822
  %mul80 = fmul float %52, %51, !dbg !2822
  store float %mul80, float* %maxz, align 4, !dbg !2822
  %53 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2823
  %imat81 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %53, i32 0, i32 59, !dbg !2824
  %arrayidx82 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat81, i64 0, i64 0, !dbg !2823
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx82, i64 0, i64 1, !dbg !2823
  %54 = load float, float* %arrayidx83, align 4, !dbg !2823
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2825
  %55 = load float, float* %arrayidx84, align 4, !dbg !2825
  %mul85 = fmul float %54, %55, !dbg !2826
  %56 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2827
  %imat86 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %56, i32 0, i32 59, !dbg !2828
  %arrayidx87 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat86, i64 0, i64 1, !dbg !2827
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx87, i64 0, i64 1, !dbg !2827
  %57 = load float, float* %arrayidx88, align 4, !dbg !2827
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !2829
  %58 = load float, float* %arrayidx89, align 4, !dbg !2829
  %mul90 = fmul float %57, %58, !dbg !2830
  %add91 = fadd float %mul85, %mul90, !dbg !2831
  %59 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2832
  %imat92 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %59, i32 0, i32 59, !dbg !2833
  %arrayidx93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat92, i64 0, i64 2, !dbg !2832
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 1, !dbg !2832
  %60 = load float, float* %arrayidx94, align 4, !dbg !2832
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2834
  %61 = load float, float* %arrayidx95, align 4, !dbg !2834
  %mul96 = fmul float %60, %61, !dbg !2835
  %add97 = fadd float %add91, %mul96, !dbg !2836
  store float %add97, float* %maxy, align 4, !dbg !2837
  %arrayidx98 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2838
  %62 = load double, double* %arrayidx98, align 16, !dbg !2838
  %63 = call double @llvm.fabs.f64(double %62), !dbg !2840
  %cmp99 = fcmp olt double %63, 0x3E80000000000000, !dbg !2841
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !2842

if.then101:                                       ; preds = %if.else44
  store i8 1, i8* %use_yco, align 1, !dbg !2843
  br label %if.end102, !dbg !2845

if.end102:                                        ; preds = %if.then101, %if.else44
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then43
  %64 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2846
  %sh_zfac104 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %64, i32 0, i32 62, !dbg !2847
  %65 = load float, float* %sh_zfac104, align 4, !dbg !2847
  %conv105 = fpext float %65 to double, !dbg !2848
  %arrayidx106 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2849
  %66 = load double, double* %arrayidx106, align 16, !dbg !2850
  %mul107 = fmul double %66, %conv105, !dbg !2850
  store double %mul107, double* %arrayidx106, align 16, !dbg !2850
  %67 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2851
  %sh_zfac108 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %67, i32 0, i32 62, !dbg !2852
  %68 = load float, float* %sh_zfac108, align 4, !dbg !2852
  %69 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !2853
  %dist = getelementptr inbounds %struct.LampRen, %struct.LampRen* %69, i32 0, i32 4, !dbg !2854
  %70 = load float, float* %dist, align 8, !dbg !2854
  %mul109 = fmul float %68, %70, !dbg !2855
  store float %mul109, float* %ladist, align 4, !dbg !2856
  %arrayidx110 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !2857
  %71 = load double, double* %arrayidx110, align 16, !dbg !2857
  %arrayidx111 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !2858
  %72 = load double, double* %arrayidx111, align 16, !dbg !2858
  %mul112 = fmul double %71, %72, !dbg !2859
  %arrayidx113 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !2860
  %73 = load double, double* %arrayidx113, align 8, !dbg !2860
  %arrayidx114 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !2861
  %74 = load double, double* %arrayidx114, align 8, !dbg !2861
  %mul115 = fmul double %73, %74, !dbg !2862
  %add116 = fadd double %mul112, %mul115, !dbg !2863
  %arrayidx117 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2864
  %75 = load double, double* %arrayidx117, align 16, !dbg !2864
  %arrayidx118 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2865
  %76 = load double, double* %arrayidx118, align 16, !dbg !2865
  %mul119 = fmul double %75, %76, !dbg !2866
  %sub120 = fsub double %add116, %mul119, !dbg !2867
  store double %sub120, double* %a, align 8, !dbg !2868
  %arrayidx121 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !2869
  %77 = load double, double* %arrayidx121, align 16, !dbg !2869
  %arrayidx122 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !2870
  %78 = load double, double* %arrayidx122, align 16, !dbg !2870
  %mul123 = fmul double %77, %78, !dbg !2871
  %arrayidx124 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !2872
  %79 = load double, double* %arrayidx124, align 8, !dbg !2872
  %arrayidx125 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !2873
  %80 = load double, double* %arrayidx125, align 8, !dbg !2873
  %mul126 = fmul double %79, %80, !dbg !2874
  %add127 = fadd double %mul123, %mul126, !dbg !2875
  %arrayidx128 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2876
  %81 = load double, double* %arrayidx128, align 16, !dbg !2876
  %arrayidx129 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2877
  %82 = load double, double* %arrayidx129, align 16, !dbg !2877
  %mul130 = fmul double %81, %82, !dbg !2878
  %sub131 = fsub double %add127, %mul130, !dbg !2879
  store double %sub131, double* %b, align 8, !dbg !2880
  %arrayidx132 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !2881
  %83 = load double, double* %arrayidx132, align 16, !dbg !2881
  %arrayidx133 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !2882
  %84 = load double, double* %arrayidx133, align 16, !dbg !2882
  %mul134 = fmul double %83, %84, !dbg !2883
  %arrayidx135 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !2884
  %85 = load double, double* %arrayidx135, align 8, !dbg !2884
  %arrayidx136 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !2885
  %86 = load double, double* %arrayidx136, align 8, !dbg !2885
  %mul137 = fmul double %85, %86, !dbg !2886
  %add138 = fadd double %mul134, %mul137, !dbg !2887
  %arrayidx139 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2888
  %87 = load double, double* %arrayidx139, align 16, !dbg !2888
  %arrayidx140 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2889
  %88 = load double, double* %arrayidx140, align 16, !dbg !2889
  %mul141 = fmul double %87, %88, !dbg !2890
  %sub142 = fsub double %add138, %mul141, !dbg !2891
  store double %sub142, double* %c, align 8, !dbg !2892
  store i32 0, i32* %cuts, align 4, !dbg !2893
  %89 = load double, double* %a, align 8, !dbg !2894
  %90 = call double @llvm.fabs.f64(double %89), !dbg !2896
  %cmp143 = fcmp olt double %90, 0x3CB0000000000000, !dbg !2897
  br i1 %cmp143, label %if.then145, label %if.else146, !dbg !2898

if.then145:                                       ; preds = %if.end103
  br label %if.end369, !dbg !2899

if.else146:                                       ; preds = %if.end103
  %91 = load double, double* %b, align 8, !dbg !2901
  %92 = load double, double* %b, align 8, !dbg !2903
  %mul147 = fmul double %91, %92, !dbg !2904
  %93 = load double, double* %a, align 8, !dbg !2905
  %94 = load double, double* %c, align 8, !dbg !2906
  %mul148 = fmul double %93, %94, !dbg !2907
  %sub149 = fsub double %mul147, %mul148, !dbg !2908
  store double %sub149, double* %disc, align 8, !dbg !2909
  %95 = load double, double* %disc, align 8, !dbg !2910
  %cmp150 = fcmp oeq double %95, 0.000000e+00, !dbg !2912
  br i1 %cmp150, label %if.then152, label %if.else154, !dbg !2913

if.then152:                                       ; preds = %if.else146
  %96 = load double, double* %b, align 8, !dbg !2914
  %fneg153 = fneg double %96, !dbg !2916
  %97 = load double, double* %a, align 8, !dbg !2917
  %div = fdiv double %fneg153, %97, !dbg !2918
  store double %div, double* %t2, align 8, !dbg !2919
  store double %div, double* %t1, align 8, !dbg !2920
  store i32 2, i32* %cuts, align 4, !dbg !2921
  br label %if.end166, !dbg !2922

if.else154:                                       ; preds = %if.else146
  %98 = load double, double* %disc, align 8, !dbg !2923
  %cmp155 = fcmp ogt double %98, 0.000000e+00, !dbg !2925
  br i1 %cmp155, label %if.then157, label %if.end165, !dbg !2926

if.then157:                                       ; preds = %if.else154
  %99 = load double, double* %disc, align 8, !dbg !2927
  %call158 = call double @sqrt(double %99) #6, !dbg !2929
  store double %call158, double* %disc, align 8, !dbg !2930
  %100 = load double, double* %b, align 8, !dbg !2931
  %fneg159 = fneg double %100, !dbg !2932
  %101 = load double, double* %disc, align 8, !dbg !2933
  %add160 = fadd double %fneg159, %101, !dbg !2934
  %102 = load double, double* %a, align 8, !dbg !2935
  %div161 = fdiv double %add160, %102, !dbg !2936
  store double %div161, double* %t1, align 8, !dbg !2937
  %103 = load double, double* %b, align 8, !dbg !2938
  %fneg162 = fneg double %103, !dbg !2939
  %104 = load double, double* %disc, align 8, !dbg !2940
  %sub163 = fsub double %fneg162, %104, !dbg !2941
  %105 = load double, double* %a, align 8, !dbg !2942
  %div164 = fdiv double %sub163, %105, !dbg !2943
  store double %div164, double* %t2, align 8, !dbg !2944
  store i32 2, i32* %cuts, align 4, !dbg !2945
  br label %if.end165, !dbg !2946

if.end165:                                        ; preds = %if.then157, %if.else154
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then152
  br label %if.end167

if.end167:                                        ; preds = %if.end166
  %106 = load i32, i32* %cuts, align 4, !dbg !2947
  %cmp168 = icmp eq i32 %106, 2, !dbg !2949
  br i1 %cmp168, label %if.then170, label %if.end369, !dbg !2950

if.then170:                                       ; preds = %if.end167
  call void @llvm.dbg.declare(metadata i32* %ok1, metadata !2951, metadata !DIExpression()), !dbg !2953
  store i32 0, i32* %ok1, align 4, !dbg !2953
  call void @llvm.dbg.declare(metadata i32* %ok2, metadata !2954, metadata !DIExpression()), !dbg !2955
  store i32 0, i32* %ok2, align 4, !dbg !2955
  %107 = load double, double* %t1, align 8, !dbg !2956
  %108 = load double, double* %t2, align 8, !dbg !2958
  %cmp171 = fcmp ogt double %107, %108, !dbg !2959
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !2960

if.then173:                                       ; preds = %if.then170
  %109 = load double, double* %t1, align 8, !dbg !2961
  store double %109, double* %a, align 8, !dbg !2963
  %110 = load double, double* %t2, align 8, !dbg !2964
  store double %110, double* %t1, align 8, !dbg !2965
  %111 = load double, double* %a, align 8, !dbg !2966
  store double %111, double* %t2, align 8, !dbg !2967
  br label %if.end174, !dbg !2968

if.end174:                                        ; preds = %if.then173, %if.then170
  %arrayidx175 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2969
  %112 = load double, double* %arrayidx175, align 16, !dbg !2969
  %113 = load double, double* %t1, align 8, !dbg !2970
  %arrayidx176 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2971
  %114 = load double, double* %arrayidx176, align 16, !dbg !2971
  %mul177 = fmul double %113, %114, !dbg !2972
  %add178 = fadd double %112, %mul177, !dbg !2973
  %conv179 = fptrunc double %add178 to float, !dbg !2969
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2974
  store float %conv179, float* %arrayidx180, align 4, !dbg !2975
  %arrayidx181 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !2976
  %115 = load double, double* %arrayidx181, align 16, !dbg !2976
  %116 = load double, double* %t2, align 8, !dbg !2977
  %arrayidx182 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !2978
  %117 = load double, double* %arrayidx182, align 16, !dbg !2978
  %mul183 = fmul double %116, %117, !dbg !2979
  %add184 = fadd double %115, %mul183, !dbg !2980
  %conv185 = fptrunc double %add184 to float, !dbg !2976
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 2, !dbg !2981
  store float %conv185, float* %arrayidx186, align 4, !dbg !2982
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !2983
  %118 = load float, float* %arrayidx187, align 4, !dbg !2983
  %cmp188 = fcmp ole float %118, 0.000000e+00, !dbg !2985
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !2986

if.then190:                                       ; preds = %if.end174
  store i32 1, i32* %ok1, align 4, !dbg !2987
  br label %if.end191, !dbg !2988

if.end191:                                        ; preds = %if.then190, %if.end174
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 2, !dbg !2989
  %119 = load float, float* %arrayidx192, align 4, !dbg !2989
  %cmp193 = fcmp ole float %119, 0.000000e+00, !dbg !2991
  br i1 %cmp193, label %land.lhs.true, label %if.end198, !dbg !2992

land.lhs.true:                                    ; preds = %if.end191
  %120 = load double, double* %t1, align 8, !dbg !2993
  %121 = load double, double* %t2, align 8, !dbg !2994
  %cmp195 = fcmp une double %120, %121, !dbg !2995
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !2996

if.then197:                                       ; preds = %land.lhs.true
  store i32 1, i32* %ok2, align 4, !dbg !2997
  br label %if.end198, !dbg !2998

if.end198:                                        ; preds = %if.then197, %land.lhs.true, %if.end191
  %122 = load i32, i32* %ok1, align 4, !dbg !2999
  %cmp199 = icmp eq i32 %122, 0, !dbg !3001
  br i1 %cmp199, label %land.lhs.true201, label %if.end205, !dbg !3002

land.lhs.true201:                                 ; preds = %if.end198
  %123 = load i32, i32* %ok2, align 4, !dbg !3003
  %cmp202 = icmp eq i32 %123, 0, !dbg !3004
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !3005

if.then204:                                       ; preds = %land.lhs.true201
  br label %if.end369, !dbg !3006

if.end205:                                        ; preds = %land.lhs.true201, %if.end198
  %124 = load i8, i8* %use_yco, align 1, !dbg !3007
  %conv206 = zext i8 %124 to i32, !dbg !3007
  %cmp207 = icmp eq i32 %conv206, 0, !dbg !3009
  br i1 %cmp207, label %if.then209, label %if.else236, !dbg !3010

if.then209:                                       ; preds = %if.end205
  %125 = load float, float* %ladist, align 4, !dbg !3011
  %fneg210 = fneg float %125, !dbg !3013
  %conv211 = fpext float %fneg210 to double, !dbg !3014
  %arrayidx212 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !3015
  %126 = load double, double* %arrayidx212, align 16, !dbg !3015
  %sub213 = fsub double %conv211, %126, !dbg !3016
  %arrayidx214 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !3017
  %127 = load double, double* %arrayidx214, align 16, !dbg !3017
  %div215 = fdiv double %sub213, %127, !dbg !3018
  store double %div215, double* %t3, align 8, !dbg !3019
  %128 = load i32, i32* %ok1, align 4, !dbg !3020
  %tobool216 = icmp ne i32 %128, 0, !dbg !3020
  br i1 %tobool216, label %if.then217, label %if.else224, !dbg !3022

if.then217:                                       ; preds = %if.then209
  %arrayidx218 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !3023
  %129 = load float, float* %arrayidx218, align 4, !dbg !3023
  %130 = load float, float* %ladist, align 4, !dbg !3026
  %fneg219 = fneg float %130, !dbg !3027
  %cmp220 = fcmp olt float %129, %fneg219, !dbg !3028
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !3029

if.then222:                                       ; preds = %if.then217
  %131 = load double, double* %t3, align 8, !dbg !3030
  store double %131, double* %t1, align 8, !dbg !3031
  br label %if.end223, !dbg !3032

if.end223:                                        ; preds = %if.then222, %if.then217
  br label %if.end225, !dbg !3033

if.else224:                                       ; preds = %if.then209
  %132 = load double, double* %t3, align 8, !dbg !3034
  store double %132, double* %t1, align 8, !dbg !3036
  br label %if.end225

if.end225:                                        ; preds = %if.else224, %if.end223
  %133 = load i32, i32* %ok2, align 4, !dbg !3037
  %tobool226 = icmp ne i32 %133, 0, !dbg !3037
  br i1 %tobool226, label %if.then227, label %if.else234, !dbg !3039

if.then227:                                       ; preds = %if.end225
  %arrayidx228 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 2, !dbg !3040
  %134 = load float, float* %arrayidx228, align 4, !dbg !3040
  %135 = load float, float* %ladist, align 4, !dbg !3043
  %fneg229 = fneg float %135, !dbg !3044
  %cmp230 = fcmp olt float %134, %fneg229, !dbg !3045
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !3046

if.then232:                                       ; preds = %if.then227
  %136 = load double, double* %t3, align 8, !dbg !3047
  store double %136, double* %t2, align 8, !dbg !3048
  br label %if.end233, !dbg !3049

if.end233:                                        ; preds = %if.then232, %if.then227
  br label %if.end235, !dbg !3050

if.else234:                                       ; preds = %if.end225
  %137 = load double, double* %t3, align 8, !dbg !3051
  store double %137, double* %t2, align 8, !dbg !3053
  br label %if.end235

if.end235:                                        ; preds = %if.else234, %if.end233
  br label %if.end243, !dbg !3054

if.else236:                                       ; preds = %if.end205
  %138 = load i32, i32* %ok1, align 4, !dbg !3055
  %cmp237 = icmp eq i32 %138, 0, !dbg !3057
  br i1 %cmp237, label %if.then241, label %lor.lhs.false, !dbg !3058

lor.lhs.false:                                    ; preds = %if.else236
  %139 = load i32, i32* %ok2, align 4, !dbg !3059
  %cmp239 = icmp eq i32 %139, 0, !dbg !3060
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !3061

if.then241:                                       ; preds = %lor.lhs.false, %if.else236
  br label %if.end369, !dbg !3062

if.end242:                                        ; preds = %lor.lhs.false
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.end235
  %140 = load double, double* %t1, align 8, !dbg !3063
  %cmp244 = fcmp olt double %140, 0.000000e+00, !dbg !3065
  br i1 %cmp244, label %land.lhs.true246, label %if.end250, !dbg !3066

land.lhs.true246:                                 ; preds = %if.end243
  %141 = load double, double* %t2, align 8, !dbg !3067
  %cmp247 = fcmp olt double %141, 0.000000e+00, !dbg !3068
  br i1 %cmp247, label %if.then249, label %if.end250, !dbg !3069

if.then249:                                       ; preds = %land.lhs.true246
  br label %if.end369, !dbg !3070

if.end250:                                        ; preds = %land.lhs.true246, %if.end243
  %142 = load double, double* %t1, align 8, !dbg !3071
  %cmp251 = fcmp olt double %142, 0.000000e+00, !dbg !3073
  br i1 %cmp251, label %if.then253, label %if.end254, !dbg !3074

if.then253:                                       ; preds = %if.end250
  store double 0.000000e+00, double* %t1, align 8, !dbg !3075
  br label %if.end254, !dbg !3076

if.end254:                                        ; preds = %if.then253, %if.end250
  %143 = load double, double* %t2, align 8, !dbg !3077
  %cmp255 = fcmp olt double %143, 0.000000e+00, !dbg !3079
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !3080

if.then257:                                       ; preds = %if.end254
  store double 0.000000e+00, double* %t2, align 8, !dbg !3081
  br label %if.end258, !dbg !3082

if.end258:                                        ; preds = %if.then257, %if.end254
  %144 = load double, double* %t1, align 8, !dbg !3083
  %145 = load double, double* %t2, align 8, !dbg !3085
  %cmp259 = fcmp oeq double %144, %145, !dbg !3086
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !3087

if.then261:                                       ; preds = %if.end258
  br label %if.end369, !dbg !3088

if.end262:                                        ; preds = %if.end258
  %146 = load double, double* %t1, align 8, !dbg !3089
  %147 = load double, double* %t2, align 8, !dbg !3091
  %cmp263 = fcmp ogt double %146, %147, !dbg !3092
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !3093

if.then265:                                       ; preds = %if.end262
  %148 = load double, double* %t1, align 8, !dbg !3094
  store double %148, double* %a, align 8, !dbg !3096
  %149 = load double, double* %t2, align 8, !dbg !3097
  store double %149, double* %t1, align 8, !dbg !3098
  %150 = load double, double* %a, align 8, !dbg !3099
  store double %150, double* %t2, align 8, !dbg !3100
  br label %if.end266, !dbg !3101

if.end266:                                        ; preds = %if.then265, %if.end262
  %151 = load i8, i8* %do_clip, align 1, !dbg !3102
  %tobool267 = icmp ne i8 %151, 0, !dbg !3102
  br i1 %tobool267, label %if.then268, label %if.end293, !dbg !3104

if.then268:                                       ; preds = %if.end266
  %152 = load i8, i8* %use_yco, align 1, !dbg !3105
  %conv269 = zext i8 %152 to i32, !dbg !3105
  %cmp270 = icmp eq i32 %conv269, 0, !dbg !3108
  br i1 %cmp270, label %if.then272, label %if.else278, !dbg !3109

if.then272:                                       ; preds = %if.then268
  %153 = load float, float* %maxz, align 4, !dbg !3110
  %conv273 = fpext float %153 to double, !dbg !3111
  %arrayidx274 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !3112
  %154 = load double, double* %arrayidx274, align 16, !dbg !3112
  %sub275 = fsub double %conv273, %154, !dbg !3113
  %arrayidx276 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !3114
  %155 = load double, double* %arrayidx276, align 16, !dbg !3114
  %div277 = fdiv double %sub275, %155, !dbg !3115
  store double %div277, double* %t0, align 8, !dbg !3116
  br label %if.end284, !dbg !3117

if.else278:                                       ; preds = %if.then268
  %156 = load float, float* %maxy, align 4, !dbg !3118
  %conv279 = fpext float %156 to double, !dbg !3119
  %arrayidx280 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !3120
  %157 = load double, double* %arrayidx280, align 8, !dbg !3120
  %sub281 = fsub double %conv279, %157, !dbg !3121
  %arrayidx282 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !3122
  %158 = load double, double* %arrayidx282, align 8, !dbg !3122
  %div283 = fdiv double %sub281, %158, !dbg !3123
  store double %div283, double* %t0, align 8, !dbg !3124
  br label %if.end284

if.end284:                                        ; preds = %if.else278, %if.then272
  %159 = load double, double* %t0, align 8, !dbg !3125
  %160 = load double, double* %t1, align 8, !dbg !3127
  %cmp285 = fcmp olt double %159, %160, !dbg !3128
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !3129

if.then287:                                       ; preds = %if.end284
  br label %if.end369, !dbg !3130

if.end288:                                        ; preds = %if.end284
  %161 = load double, double* %t0, align 8, !dbg !3131
  %162 = load double, double* %t2, align 8, !dbg !3133
  %cmp289 = fcmp olt double %161, %162, !dbg !3134
  br i1 %cmp289, label %if.then291, label %if.end292, !dbg !3135

if.then291:                                       ; preds = %if.end288
  %163 = load double, double* %t0, align 8, !dbg !3136
  store double %163, double* %t2, align 8, !dbg !3137
  br label %if.end292, !dbg !3138

if.end292:                                        ; preds = %if.then291, %if.end288
  br label %if.end293, !dbg !3139

if.end293:                                        ; preds = %if.end292, %if.end266
  %arrayidx294 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !3140
  %164 = load double, double* %arrayidx294, align 16, !dbg !3140
  %165 = load double, double* %t1, align 8, !dbg !3141
  %arrayidx295 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !3142
  %166 = load double, double* %arrayidx295, align 16, !dbg !3142
  %mul296 = fmul double %165, %166, !dbg !3143
  %add297 = fadd double %164, %mul296, !dbg !3144
  %conv298 = fptrunc double %add297 to float, !dbg !3140
  %arrayidx299 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3145
  store float %conv298, float* %arrayidx299, align 4, !dbg !3146
  %arrayidx300 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !3147
  %167 = load double, double* %arrayidx300, align 8, !dbg !3147
  %168 = load double, double* %t1, align 8, !dbg !3148
  %arrayidx301 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !3149
  %169 = load double, double* %arrayidx301, align 8, !dbg !3149
  %mul302 = fmul double %168, %169, !dbg !3150
  %add303 = fadd double %167, %mul302, !dbg !3151
  %conv304 = fptrunc double %add303 to float, !dbg !3147
  %arrayidx305 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !3152
  store float %conv304, float* %arrayidx305, align 4, !dbg !3153
  %arrayidx306 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !3154
  %170 = load double, double* %arrayidx306, align 16, !dbg !3154
  %171 = load double, double* %t1, align 8, !dbg !3155
  %arrayidx307 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !3156
  %172 = load double, double* %arrayidx307, align 16, !dbg !3156
  %mul308 = fmul double %171, %172, !dbg !3157
  %add309 = fadd double %170, %mul308, !dbg !3158
  %conv310 = fptrunc double %add309 to float, !dbg !3154
  %arrayidx311 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 2, !dbg !3159
  store float %conv310, float* %arrayidx311, align 4, !dbg !3160
  %arrayidx312 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 0, !dbg !3161
  %173 = load double, double* %arrayidx312, align 16, !dbg !3161
  %174 = load double, double* %t2, align 8, !dbg !3162
  %arrayidx313 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 0, !dbg !3163
  %175 = load double, double* %arrayidx313, align 16, !dbg !3163
  %mul314 = fmul double %174, %175, !dbg !3164
  %add315 = fadd double %173, %mul314, !dbg !3165
  %conv316 = fptrunc double %add315 to float, !dbg !3161
  %arrayidx317 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !3166
  store float %conv316, float* %arrayidx317, align 4, !dbg !3167
  %arrayidx318 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 1, !dbg !3168
  %176 = load double, double* %arrayidx318, align 8, !dbg !3168
  %177 = load double, double* %t2, align 8, !dbg !3169
  %arrayidx319 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 1, !dbg !3170
  %178 = load double, double* %arrayidx319, align 8, !dbg !3170
  %mul320 = fmul double %177, %178, !dbg !3171
  %add321 = fadd double %176, %mul320, !dbg !3172
  %conv322 = fptrunc double %add321 to float, !dbg !3168
  %arrayidx323 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 1, !dbg !3173
  store float %conv322, float* %arrayidx323, align 4, !dbg !3174
  %arrayidx324 = getelementptr inbounds [3 x double], [3 x double]* %npos, i64 0, i64 2, !dbg !3175
  %179 = load double, double* %arrayidx324, align 16, !dbg !3175
  %180 = load double, double* %t2, align 8, !dbg !3176
  %arrayidx325 = getelementptr inbounds [3 x double], [3 x double]* %nray, i64 0, i64 2, !dbg !3177
  %181 = load double, double* %arrayidx325, align 16, !dbg !3177
  %mul326 = fmul double %180, %181, !dbg !3178
  %add327 = fadd double %179, %mul326, !dbg !3179
  %conv328 = fptrunc double %add327 to float, !dbg !3175
  %arrayidx329 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 2, !dbg !3180
  store float %conv328, float* %arrayidx329, align 4, !dbg !3181
  %arraydecay330 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3182
  %call331 = call float @len_v3(float* %arraydecay330), !dbg !3183
  %conv332 = fpext float %call331 to double, !dbg !3183
  store double %conv332, double* %a, align 8, !dbg !3184
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !3185
  %call334 = call float @len_v3(float* %arraydecay333), !dbg !3186
  %conv335 = fpext float %call334 to double, !dbg !3186
  store double %conv335, double* %b, align 8, !dbg !3187
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3188
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !3189
  %call338 = call float @len_v3v3(float* %arraydecay336, float* %arraydecay337), !dbg !3190
  %conv339 = fpext float %call338 to double, !dbg !3190
  store double %conv339, double* %c, align 8, !dbg !3191
  %182 = load float, float* %ladist, align 4, !dbg !3192
  %conv340 = fpext float %182 to double, !dbg !3192
  %183 = load double, double* %a, align 8, !dbg !3193
  %div341 = fdiv double %183, %conv340, !dbg !3193
  store double %div341, double* %a, align 8, !dbg !3193
  %184 = load double, double* %a, align 8, !dbg !3194
  %call342 = call double @sqrt(double %184) #6, !dbg !3195
  store double %call342, double* %a, align 8, !dbg !3196
  %185 = load float, float* %ladist, align 4, !dbg !3197
  %conv343 = fpext float %185 to double, !dbg !3197
  %186 = load double, double* %b, align 8, !dbg !3198
  %div344 = fdiv double %186, %conv343, !dbg !3198
  store double %div344, double* %b, align 8, !dbg !3198
  %187 = load double, double* %b, align 8, !dbg !3199
  %call345 = call double @sqrt(double %187) #6, !dbg !3200
  store double %call345, double* %b, align 8, !dbg !3201
  %188 = load float, float* %ladist, align 4, !dbg !3202
  %conv346 = fpext float %188 to double, !dbg !3202
  %189 = load double, double* %c, align 8, !dbg !3203
  %div347 = fdiv double %189, %conv346, !dbg !3203
  store double %div347, double* %c, align 8, !dbg !3203
  %190 = load double, double* %c, align 8, !dbg !3204
  %191 = load double, double* %a, align 8, !dbg !3205
  %sub348 = fsub double 1.000000e+00, %191, !dbg !3206
  %192 = load double, double* %b, align 8, !dbg !3207
  %sub349 = fsub double 1.000000e+00, %192, !dbg !3208
  %add350 = fadd double %sub348, %sub349, !dbg !3209
  %mul351 = fmul double %190, %add350, !dbg !3210
  %conv352 = fptrunc double %mul351 to float, !dbg !3204
  %193 = load float*, float** %intens.addr, align 8, !dbg !3211
  store float %conv352, float* %193, align 4, !dbg !3212
  %194 = load float*, float** %intens.addr, align 8, !dbg !3213
  %195 = load float, float* %194, align 4, !dbg !3215
  %cmp353 = fcmp ole float %195, 0.000000e+00, !dbg !3216
  br i1 %cmp353, label %if.then355, label %if.end356, !dbg !3217

if.then355:                                       ; preds = %if.end293
  br label %if.end369, !dbg !3218

if.end356:                                        ; preds = %if.end293
  %196 = load float, float* %haint, align 4, !dbg !3219
  %197 = load float*, float** %intens.addr, align 8, !dbg !3220
  %198 = load float, float* %197, align 4, !dbg !3221
  %mul357 = fmul float %198, %196, !dbg !3221
  store float %mul357, float* %197, align 4, !dbg !3221
  %199 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3222
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %199, i32 0, i32 57, !dbg !3224
  %200 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !3224
  %tobool358 = icmp ne %struct.ShadBuf* %200, null, !dbg !3222
  br i1 %tobool358, label %land.lhs.true359, label %if.end368, !dbg !3225

land.lhs.true359:                                 ; preds = %if.end356
  %201 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3226
  %shb360 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %201, i32 0, i32 57, !dbg !3227
  %202 = load %struct.ShadBuf*, %struct.ShadBuf** %shb360, align 8, !dbg !3227
  %shadhalostep = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %202, i32 0, i32 1, !dbg !3228
  %203 = load i16, i16* %shadhalostep, align 2, !dbg !3228
  %conv361 = sext i16 %203 to i32, !dbg !3226
  %tobool362 = icmp ne i32 %conv361, 0, !dbg !3226
  br i1 %tobool362, label %if.then363, label %if.end368, !dbg !3229

if.then363:                                       ; preds = %land.lhs.true359
  %204 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !3230
  %arraydecay364 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3232
  %arraydecay365 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !3233
  %call366 = call float @shadow_halo(%struct.LampRen* %204, float* %arraydecay364, float* %arraydecay365), !dbg !3234
  %205 = load float*, float** %intens.addr, align 8, !dbg !3235
  %206 = load float, float* %205, align 4, !dbg !3236
  %mul367 = fmul float %206, %call366, !dbg !3236
  store float %mul367, float* %205, align 4, !dbg !3236
  br label %if.end368, !dbg !3237

if.end368:                                        ; preds = %if.then363, %land.lhs.true359, %if.end356
  br label %if.end369, !dbg !3238

if.end369:                                        ; preds = %if.then36, %if.then145, %if.then204, %if.then241, %if.then249, %if.then261, %if.then287, %if.then355, %if.end368, %if.end167
  ret void, !dbg !3239
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @fresnel_fac(float* %view, float* %vn, float %grad, float %fac) #0 !dbg !3240 {
entry:
  %retval = alloca float, align 4
  %view.addr = alloca float*, align 8
  %vn.addr = alloca float*, align 8
  %grad.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !3243, metadata !DIExpression()), !dbg !3244
  store float* %vn, float** %vn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vn.addr, metadata !3245, metadata !DIExpression()), !dbg !3246
  store float %grad, float* %grad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %grad.addr, metadata !3247, metadata !DIExpression()), !dbg !3248
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.declare(metadata float* %t1, metadata !3251, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.declare(metadata float* %t2, metadata !3253, metadata !DIExpression()), !dbg !3254
  %0 = load float, float* %fac.addr, align 4, !dbg !3255
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !3257
  br i1 %cmp, label %if.then, label %if.end, !dbg !3258

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !3259
  br label %return, !dbg !3259

if.end:                                           ; preds = %entry
  %1 = load float*, float** %view.addr, align 8, !dbg !3260
  %2 = load float*, float** %vn.addr, align 8, !dbg !3261
  %call = call float @dot_v3v3(float* %1, float* %2), !dbg !3262
  store float %call, float* %t1, align 4, !dbg !3263
  %3 = load float, float* %t1, align 4, !dbg !3264
  %cmp1 = fcmp ogt float %3, 0.000000e+00, !dbg !3266
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3267

if.then2:                                         ; preds = %if.end
  %4 = load float, float* %t1, align 4, !dbg !3268
  %add = fadd float 1.000000e+00, %4, !dbg !3269
  store float %add, float* %t2, align 4, !dbg !3270
  br label %if.end3, !dbg !3271

if.else:                                          ; preds = %if.end
  %5 = load float, float* %t1, align 4, !dbg !3272
  %sub = fsub float 1.000000e+00, %5, !dbg !3273
  store float %sub, float* %t2, align 4, !dbg !3274
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %6 = load float, float* %grad.addr, align 4, !dbg !3275
  %7 = load float, float* %grad.addr, align 4, !dbg !3276
  %sub4 = fsub float 1.000000e+00, %7, !dbg !3277
  %8 = load float, float* %t2, align 4, !dbg !3278
  %9 = load float, float* %fac.addr, align 4, !dbg !3279
  %call5 = call float @powf(float %8, float %9) #6, !dbg !3280
  %mul = fmul float %sub4, %call5, !dbg !3281
  %add6 = fadd float %6, %mul, !dbg !3282
  store float %add6, float* %t2, align 4, !dbg !3283
  %10 = load float, float* %t2, align 4, !dbg !3284
  %cmp7 = fcmp olt float %10, 0.000000e+00, !dbg !3286
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3287

if.then8:                                         ; preds = %if.end3
  store float 0.000000e+00, float* %retval, align 4, !dbg !3288
  br label %return, !dbg !3288

if.else9:                                         ; preds = %if.end3
  %11 = load float, float* %t2, align 4, !dbg !3289
  %cmp10 = fcmp ogt float %11, 1.000000e+00, !dbg !3291
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3292

if.then11:                                        ; preds = %if.else9
  store float 1.000000e+00, float* %retval, align 4, !dbg !3293
  br label %return, !dbg !3293

if.end12:                                         ; preds = %if.else9
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  %12 = load float, float* %t2, align 4, !dbg !3294
  store float %12, float* %retval, align 4, !dbg !3295
  br label %return, !dbg !3295

return:                                           ; preds = %if.end13, %if.then11, %if.then8, %if.then
  %13 = load float, float* %retval, align 4, !dbg !3296
  ret float %13, !dbg !3296
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !3297 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3301, metadata !DIExpression()), !dbg !3302
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3303, metadata !DIExpression()), !dbg !3304
  %0 = load float*, float** %a.addr, align 8, !dbg !3305
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3305
  %1 = load float, float* %arrayidx, align 4, !dbg !3305
  %2 = load float*, float** %b.addr, align 8, !dbg !3306
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3306
  %3 = load float, float* %arrayidx1, align 4, !dbg !3306
  %mul = fmul float %1, %3, !dbg !3307
  %4 = load float*, float** %a.addr, align 8, !dbg !3308
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3308
  %5 = load float, float* %arrayidx2, align 4, !dbg !3308
  %6 = load float*, float** %b.addr, align 8, !dbg !3309
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3309
  %7 = load float, float* %arrayidx3, align 4, !dbg !3309
  %mul4 = fmul float %5, %7, !dbg !3310
  %add = fadd float %mul, %mul4, !dbg !3311
  %8 = load float*, float** %a.addr, align 8, !dbg !3312
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3312
  %9 = load float, float* %arrayidx5, align 4, !dbg !3312
  %10 = load float*, float** %b.addr, align 8, !dbg !3313
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !3313
  %11 = load float, float* %arrayidx6, align 4, !dbg !3313
  %mul7 = fmul float %9, %11, !dbg !3314
  %add8 = fadd float %add, %mul7, !dbg !3315
  ret float %add8, !dbg !3316
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_R_ref(%struct.ShadeInput* %shi) #0 !dbg !3317 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %i = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3320, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.declare(metadata float* %i, metadata !3322, metadata !DIExpression()), !dbg !3323
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3324
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 16, !dbg !3325
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !3324
  %1 = load float, float* %arrayidx, align 4, !dbg !3324
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3326
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 30, !dbg !3327
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !3326
  %3 = load float, float* %arrayidx1, align 4, !dbg !3326
  %mul = fmul float %1, %3, !dbg !3328
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3329
  %vn2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 16, !dbg !3330
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %vn2, i64 0, i64 1, !dbg !3329
  %5 = load float, float* %arrayidx3, align 4, !dbg !3329
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3331
  %view4 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 30, !dbg !3332
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %view4, i64 0, i64 1, !dbg !3331
  %7 = load float, float* %arrayidx5, align 4, !dbg !3331
  %mul6 = fmul float %5, %7, !dbg !3333
  %add = fadd float %mul, %mul6, !dbg !3334
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3335
  %vn7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 16, !dbg !3336
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %vn7, i64 0, i64 2, !dbg !3335
  %9 = load float, float* %arrayidx8, align 4, !dbg !3335
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3337
  %view9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 30, !dbg !3338
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %view9, i64 0, i64 2, !dbg !3337
  %11 = load float, float* %arrayidx10, align 4, !dbg !3337
  %mul11 = fmul float %9, %11, !dbg !3339
  %add12 = fadd float %add, %mul11, !dbg !3340
  %mul13 = fmul float -2.000000e+00, %add12, !dbg !3341
  store float %mul13, float* %i, align 4, !dbg !3342
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3343
  %view14 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 30, !dbg !3344
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %view14, i64 0, i64 0, !dbg !3343
  %13 = load float, float* %arrayidx15, align 4, !dbg !3343
  %14 = load float, float* %i, align 4, !dbg !3345
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3346
  %vn16 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 16, !dbg !3347
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %vn16, i64 0, i64 0, !dbg !3346
  %16 = load float, float* %arrayidx17, align 4, !dbg !3346
  %mul18 = fmul float %14, %16, !dbg !3348
  %add19 = fadd float %13, %mul18, !dbg !3349
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3350
  %ref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 58, !dbg !3351
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %ref, i64 0, i64 0, !dbg !3350
  store float %add19, float* %arrayidx20, align 4, !dbg !3352
  %18 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3353
  %view21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %18, i32 0, i32 30, !dbg !3354
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %view21, i64 0, i64 1, !dbg !3353
  %19 = load float, float* %arrayidx22, align 4, !dbg !3353
  %20 = load float, float* %i, align 4, !dbg !3355
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3356
  %vn23 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 16, !dbg !3357
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %vn23, i64 0, i64 1, !dbg !3356
  %22 = load float, float* %arrayidx24, align 4, !dbg !3356
  %mul25 = fmul float %20, %22, !dbg !3358
  %add26 = fadd float %19, %mul25, !dbg !3359
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3360
  %ref27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 58, !dbg !3361
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %ref27, i64 0, i64 1, !dbg !3360
  store float %add26, float* %arrayidx28, align 4, !dbg !3362
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3363
  %view29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 30, !dbg !3364
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %view29, i64 0, i64 2, !dbg !3363
  %25 = load float, float* %arrayidx30, align 4, !dbg !3363
  %26 = load float, float* %i, align 4, !dbg !3365
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3366
  %vn31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 16, !dbg !3367
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %vn31, i64 0, i64 2, !dbg !3366
  %28 = load float, float* %arrayidx32, align 4, !dbg !3366
  %mul33 = fmul float %26, %28, !dbg !3368
  %add34 = fadd float %25, %mul33, !dbg !3369
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3370
  %ref35 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 58, !dbg !3371
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %ref35, i64 0, i64 2, !dbg !3370
  store float %add34, float* %arrayidx36, align 4, !dbg !3372
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3373
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 15, !dbg !3375
  %31 = load i16, i16* %osatex, align 8, !dbg !3375
  %tobool = icmp ne i16 %31, 0, !dbg !3373
  br i1 %tobool, label %if.then, label %if.end288, !dbg !3376

if.then:                                          ; preds = %entry
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3377
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 1, !dbg !3380
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3380
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 7, !dbg !3381
  %34 = load i8, i8* %flag, align 1, !dbg !3381
  %conv = zext i8 %34 to i32, !dbg !3377
  %and = and i32 %conv, 1, !dbg !3382
  %tobool37 = icmp ne i32 %and, 0, !dbg !3382
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !3383

if.then38:                                        ; preds = %if.then
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3384
  %vn39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 16, !dbg !3386
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %vn39, i64 0, i64 0, !dbg !3384
  %36 = load float, float* %arrayidx40, align 4, !dbg !3384
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3387
  %dxno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 88, !dbg !3388
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %dxno, i64 0, i64 0, !dbg !3387
  %38 = load float, float* %arrayidx41, align 8, !dbg !3387
  %add42 = fadd float %36, %38, !dbg !3389
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3390
  %view43 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 30, !dbg !3391
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %view43, i64 0, i64 0, !dbg !3390
  %40 = load float, float* %arrayidx44, align 4, !dbg !3390
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3392
  %dxview = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 90, !dbg !3393
  %42 = load float, float* %dxview, align 8, !dbg !3393
  %add45 = fadd float %40, %42, !dbg !3394
  %mul46 = fmul float %add42, %add45, !dbg !3395
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3396
  %vn47 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 16, !dbg !3397
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %vn47, i64 0, i64 1, !dbg !3396
  %44 = load float, float* %arrayidx48, align 4, !dbg !3396
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3398
  %dxno49 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 88, !dbg !3399
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %dxno49, i64 0, i64 1, !dbg !3398
  %46 = load float, float* %arrayidx50, align 4, !dbg !3398
  %add51 = fadd float %44, %46, !dbg !3400
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3401
  %view52 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 30, !dbg !3402
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %view52, i64 0, i64 1, !dbg !3401
  %48 = load float, float* %arrayidx53, align 4, !dbg !3401
  %mul54 = fmul float %add51, %48, !dbg !3403
  %add55 = fadd float %mul46, %mul54, !dbg !3404
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3405
  %vn56 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 16, !dbg !3406
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %vn56, i64 0, i64 2, !dbg !3405
  %50 = load float, float* %arrayidx57, align 4, !dbg !3405
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3407
  %dxno58 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 88, !dbg !3408
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %dxno58, i64 0, i64 2, !dbg !3407
  %52 = load float, float* %arrayidx59, align 8, !dbg !3407
  %add60 = fadd float %50, %52, !dbg !3409
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3410
  %view61 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 30, !dbg !3411
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %view61, i64 0, i64 2, !dbg !3410
  %54 = load float, float* %arrayidx62, align 4, !dbg !3410
  %mul63 = fmul float %add60, %54, !dbg !3412
  %add64 = fadd float %add55, %mul63, !dbg !3413
  %mul65 = fmul float -2.000000e+00, %add64, !dbg !3414
  store float %mul65, float* %i, align 4, !dbg !3415
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3416
  %ref66 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 58, !dbg !3417
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %ref66, i64 0, i64 0, !dbg !3416
  %56 = load float, float* %arrayidx67, align 4, !dbg !3416
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3418
  %view68 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 30, !dbg !3419
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %view68, i64 0, i64 0, !dbg !3418
  %58 = load float, float* %arrayidx69, align 4, !dbg !3418
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3420
  %dxview70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 90, !dbg !3421
  %60 = load float, float* %dxview70, align 8, !dbg !3421
  %add71 = fadd float %58, %60, !dbg !3422
  %61 = load float, float* %i, align 4, !dbg !3423
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3424
  %vn72 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 16, !dbg !3425
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %vn72, i64 0, i64 0, !dbg !3424
  %63 = load float, float* %arrayidx73, align 4, !dbg !3424
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3426
  %dxno74 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 88, !dbg !3427
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %dxno74, i64 0, i64 0, !dbg !3426
  %65 = load float, float* %arrayidx75, align 8, !dbg !3426
  %add76 = fadd float %63, %65, !dbg !3428
  %mul77 = fmul float %61, %add76, !dbg !3429
  %add78 = fadd float %add71, %mul77, !dbg !3430
  %sub = fsub float %56, %add78, !dbg !3431
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3432
  %dxref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 84, !dbg !3433
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %dxref, i64 0, i64 0, !dbg !3432
  store float %sub, float* %arrayidx79, align 8, !dbg !3434
  %67 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3435
  %ref80 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %67, i32 0, i32 58, !dbg !3436
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %ref80, i64 0, i64 1, !dbg !3435
  %68 = load float, float* %arrayidx81, align 4, !dbg !3435
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3437
  %view82 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 30, !dbg !3438
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %view82, i64 0, i64 1, !dbg !3437
  %70 = load float, float* %arrayidx83, align 4, !dbg !3437
  %71 = load float, float* %i, align 4, !dbg !3439
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3440
  %vn84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %72, i32 0, i32 16, !dbg !3441
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %vn84, i64 0, i64 1, !dbg !3440
  %73 = load float, float* %arrayidx85, align 4, !dbg !3440
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3442
  %dxno86 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %74, i32 0, i32 88, !dbg !3443
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %dxno86, i64 0, i64 1, !dbg !3442
  %75 = load float, float* %arrayidx87, align 4, !dbg !3442
  %add88 = fadd float %73, %75, !dbg !3444
  %mul89 = fmul float %71, %add88, !dbg !3445
  %add90 = fadd float %70, %mul89, !dbg !3446
  %sub91 = fsub float %68, %add90, !dbg !3447
  %76 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3448
  %dxref92 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %76, i32 0, i32 84, !dbg !3449
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %dxref92, i64 0, i64 1, !dbg !3448
  store float %sub91, float* %arrayidx93, align 4, !dbg !3450
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3451
  %ref94 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 58, !dbg !3452
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %ref94, i64 0, i64 2, !dbg !3451
  %78 = load float, float* %arrayidx95, align 4, !dbg !3451
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3453
  %view96 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 0, i32 30, !dbg !3454
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %view96, i64 0, i64 2, !dbg !3453
  %80 = load float, float* %arrayidx97, align 4, !dbg !3453
  %81 = load float, float* %i, align 4, !dbg !3455
  %82 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3456
  %vn98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %82, i32 0, i32 16, !dbg !3457
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %vn98, i64 0, i64 2, !dbg !3456
  %83 = load float, float* %arrayidx99, align 4, !dbg !3456
  %84 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3458
  %dxno100 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %84, i32 0, i32 88, !dbg !3459
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %dxno100, i64 0, i64 2, !dbg !3458
  %85 = load float, float* %arrayidx101, align 8, !dbg !3458
  %add102 = fadd float %83, %85, !dbg !3460
  %mul103 = fmul float %81, %add102, !dbg !3461
  %add104 = fadd float %80, %mul103, !dbg !3462
  %sub105 = fsub float %78, %add104, !dbg !3463
  %86 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3464
  %dxref106 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %86, i32 0, i32 84, !dbg !3465
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %dxref106, i64 0, i64 2, !dbg !3464
  store float %sub105, float* %arrayidx107, align 8, !dbg !3466
  %87 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3467
  %vn108 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %87, i32 0, i32 16, !dbg !3468
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %vn108, i64 0, i64 0, !dbg !3467
  %88 = load float, float* %arrayidx109, align 4, !dbg !3467
  %89 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3469
  %dyno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %89, i32 0, i32 89, !dbg !3470
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %dyno, i64 0, i64 0, !dbg !3469
  %90 = load float, float* %arrayidx110, align 4, !dbg !3469
  %add111 = fadd float %88, %90, !dbg !3471
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3472
  %view112 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %91, i32 0, i32 30, !dbg !3473
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %view112, i64 0, i64 0, !dbg !3472
  %92 = load float, float* %arrayidx113, align 4, !dbg !3472
  %mul114 = fmul float %add111, %92, !dbg !3474
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3475
  %vn115 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 16, !dbg !3476
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %vn115, i64 0, i64 1, !dbg !3475
  %94 = load float, float* %arrayidx116, align 4, !dbg !3475
  %95 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3477
  %dyno117 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %95, i32 0, i32 89, !dbg !3478
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %dyno117, i64 0, i64 1, !dbg !3477
  %96 = load float, float* %arrayidx118, align 4, !dbg !3477
  %add119 = fadd float %94, %96, !dbg !3479
  %97 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3480
  %view120 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %97, i32 0, i32 30, !dbg !3481
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %view120, i64 0, i64 1, !dbg !3480
  %98 = load float, float* %arrayidx121, align 4, !dbg !3480
  %99 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3482
  %dyview = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %99, i32 0, i32 91, !dbg !3483
  %100 = load float, float* %dyview, align 4, !dbg !3483
  %add122 = fadd float %98, %100, !dbg !3484
  %mul123 = fmul float %add119, %add122, !dbg !3485
  %add124 = fadd float %mul114, %mul123, !dbg !3486
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3487
  %vn125 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 16, !dbg !3488
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %vn125, i64 0, i64 2, !dbg !3487
  %102 = load float, float* %arrayidx126, align 4, !dbg !3487
  %103 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3489
  %dyno127 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %103, i32 0, i32 89, !dbg !3490
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %dyno127, i64 0, i64 2, !dbg !3489
  %104 = load float, float* %arrayidx128, align 4, !dbg !3489
  %add129 = fadd float %102, %104, !dbg !3491
  %105 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3492
  %view130 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %105, i32 0, i32 30, !dbg !3493
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %view130, i64 0, i64 2, !dbg !3492
  %106 = load float, float* %arrayidx131, align 4, !dbg !3492
  %mul132 = fmul float %add129, %106, !dbg !3494
  %add133 = fadd float %add124, %mul132, !dbg !3495
  %mul134 = fmul float -2.000000e+00, %add133, !dbg !3496
  store float %mul134, float* %i, align 4, !dbg !3497
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3498
  %ref135 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 58, !dbg !3499
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %ref135, i64 0, i64 0, !dbg !3498
  %108 = load float, float* %arrayidx136, align 4, !dbg !3498
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3500
  %view137 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 30, !dbg !3501
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %view137, i64 0, i64 0, !dbg !3500
  %110 = load float, float* %arrayidx138, align 4, !dbg !3500
  %111 = load float, float* %i, align 4, !dbg !3502
  %112 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3503
  %vn139 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %112, i32 0, i32 16, !dbg !3504
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %vn139, i64 0, i64 0, !dbg !3503
  %113 = load float, float* %arrayidx140, align 4, !dbg !3503
  %114 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3505
  %dyno141 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %114, i32 0, i32 89, !dbg !3506
  %arrayidx142 = getelementptr inbounds [3 x float], [3 x float]* %dyno141, i64 0, i64 0, !dbg !3505
  %115 = load float, float* %arrayidx142, align 4, !dbg !3505
  %add143 = fadd float %113, %115, !dbg !3507
  %mul144 = fmul float %111, %add143, !dbg !3508
  %add145 = fadd float %110, %mul144, !dbg !3509
  %sub146 = fsub float %108, %add145, !dbg !3510
  %116 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3511
  %dyref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %116, i32 0, i32 85, !dbg !3512
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %dyref, i64 0, i64 0, !dbg !3511
  store float %sub146, float* %arrayidx147, align 4, !dbg !3513
  %117 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3514
  %ref148 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %117, i32 0, i32 58, !dbg !3515
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %ref148, i64 0, i64 1, !dbg !3514
  %118 = load float, float* %arrayidx149, align 4, !dbg !3514
  %119 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3516
  %view150 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %119, i32 0, i32 30, !dbg !3517
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %view150, i64 0, i64 1, !dbg !3516
  %120 = load float, float* %arrayidx151, align 4, !dbg !3516
  %121 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3518
  %dyview152 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %121, i32 0, i32 91, !dbg !3519
  %122 = load float, float* %dyview152, align 4, !dbg !3519
  %add153 = fadd float %120, %122, !dbg !3520
  %123 = load float, float* %i, align 4, !dbg !3521
  %124 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3522
  %vn154 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %124, i32 0, i32 16, !dbg !3523
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %vn154, i64 0, i64 1, !dbg !3522
  %125 = load float, float* %arrayidx155, align 4, !dbg !3522
  %126 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3524
  %dyno156 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %126, i32 0, i32 89, !dbg !3525
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %dyno156, i64 0, i64 1, !dbg !3524
  %127 = load float, float* %arrayidx157, align 4, !dbg !3524
  %add158 = fadd float %125, %127, !dbg !3526
  %mul159 = fmul float %123, %add158, !dbg !3527
  %add160 = fadd float %add153, %mul159, !dbg !3528
  %sub161 = fsub float %118, %add160, !dbg !3529
  %128 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3530
  %dyref162 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %128, i32 0, i32 85, !dbg !3531
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %dyref162, i64 0, i64 1, !dbg !3530
  store float %sub161, float* %arrayidx163, align 4, !dbg !3532
  %129 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3533
  %ref164 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %129, i32 0, i32 58, !dbg !3534
  %arrayidx165 = getelementptr inbounds [3 x float], [3 x float]* %ref164, i64 0, i64 2, !dbg !3533
  %130 = load float, float* %arrayidx165, align 4, !dbg !3533
  %131 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3535
  %view166 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %131, i32 0, i32 30, !dbg !3536
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %view166, i64 0, i64 2, !dbg !3535
  %132 = load float, float* %arrayidx167, align 4, !dbg !3535
  %133 = load float, float* %i, align 4, !dbg !3537
  %134 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3538
  %vn168 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %134, i32 0, i32 16, !dbg !3539
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %vn168, i64 0, i64 2, !dbg !3538
  %135 = load float, float* %arrayidx169, align 4, !dbg !3538
  %136 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3540
  %dyno170 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %136, i32 0, i32 89, !dbg !3541
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %dyno170, i64 0, i64 2, !dbg !3540
  %137 = load float, float* %arrayidx171, align 4, !dbg !3540
  %add172 = fadd float %135, %137, !dbg !3542
  %mul173 = fmul float %133, %add172, !dbg !3543
  %add174 = fadd float %132, %mul173, !dbg !3544
  %sub175 = fsub float %130, %add174, !dbg !3545
  %138 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3546
  %dyref176 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %138, i32 0, i32 85, !dbg !3547
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %dyref176, i64 0, i64 2, !dbg !3546
  store float %sub175, float* %arrayidx177, align 4, !dbg !3548
  br label %if.end, !dbg !3549

if.else:                                          ; preds = %if.then
  %139 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3550
  %vn178 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %139, i32 0, i32 16, !dbg !3552
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %vn178, i64 0, i64 0, !dbg !3550
  %140 = load float, float* %arrayidx179, align 4, !dbg !3550
  %141 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3553
  %view180 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %141, i32 0, i32 30, !dbg !3554
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %view180, i64 0, i64 0, !dbg !3553
  %142 = load float, float* %arrayidx181, align 4, !dbg !3553
  %143 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3555
  %dxview182 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %143, i32 0, i32 90, !dbg !3556
  %144 = load float, float* %dxview182, align 8, !dbg !3556
  %add183 = fadd float %142, %144, !dbg !3557
  %mul184 = fmul float %140, %add183, !dbg !3558
  %145 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3559
  %vn185 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %145, i32 0, i32 16, !dbg !3560
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %vn185, i64 0, i64 1, !dbg !3559
  %146 = load float, float* %arrayidx186, align 4, !dbg !3559
  %147 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3561
  %view187 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %147, i32 0, i32 30, !dbg !3562
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %view187, i64 0, i64 1, !dbg !3561
  %148 = load float, float* %arrayidx188, align 4, !dbg !3561
  %mul189 = fmul float %146, %148, !dbg !3563
  %add190 = fadd float %mul184, %mul189, !dbg !3564
  %149 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3565
  %vn191 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %149, i32 0, i32 16, !dbg !3566
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %vn191, i64 0, i64 2, !dbg !3565
  %150 = load float, float* %arrayidx192, align 4, !dbg !3565
  %151 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3567
  %view193 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %151, i32 0, i32 30, !dbg !3568
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %view193, i64 0, i64 2, !dbg !3567
  %152 = load float, float* %arrayidx194, align 4, !dbg !3567
  %mul195 = fmul float %150, %152, !dbg !3569
  %add196 = fadd float %add190, %mul195, !dbg !3570
  %mul197 = fmul float -2.000000e+00, %add196, !dbg !3571
  store float %mul197, float* %i, align 4, !dbg !3572
  %153 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3573
  %ref198 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %153, i32 0, i32 58, !dbg !3574
  %arrayidx199 = getelementptr inbounds [3 x float], [3 x float]* %ref198, i64 0, i64 0, !dbg !3573
  %154 = load float, float* %arrayidx199, align 4, !dbg !3573
  %155 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3575
  %view200 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %155, i32 0, i32 30, !dbg !3576
  %arrayidx201 = getelementptr inbounds [3 x float], [3 x float]* %view200, i64 0, i64 0, !dbg !3575
  %156 = load float, float* %arrayidx201, align 4, !dbg !3575
  %157 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3577
  %dxview202 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %157, i32 0, i32 90, !dbg !3578
  %158 = load float, float* %dxview202, align 8, !dbg !3578
  %add203 = fadd float %156, %158, !dbg !3579
  %159 = load float, float* %i, align 4, !dbg !3580
  %160 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3581
  %vn204 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %160, i32 0, i32 16, !dbg !3582
  %arrayidx205 = getelementptr inbounds [3 x float], [3 x float]* %vn204, i64 0, i64 0, !dbg !3581
  %161 = load float, float* %arrayidx205, align 4, !dbg !3581
  %mul206 = fmul float %159, %161, !dbg !3583
  %add207 = fadd float %add203, %mul206, !dbg !3584
  %sub208 = fsub float %154, %add207, !dbg !3585
  %162 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3586
  %dxref209 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %162, i32 0, i32 84, !dbg !3587
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %dxref209, i64 0, i64 0, !dbg !3586
  store float %sub208, float* %arrayidx210, align 8, !dbg !3588
  %163 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3589
  %ref211 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %163, i32 0, i32 58, !dbg !3590
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %ref211, i64 0, i64 1, !dbg !3589
  %164 = load float, float* %arrayidx212, align 4, !dbg !3589
  %165 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3591
  %view213 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %165, i32 0, i32 30, !dbg !3592
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %view213, i64 0, i64 1, !dbg !3591
  %166 = load float, float* %arrayidx214, align 4, !dbg !3591
  %167 = load float, float* %i, align 4, !dbg !3593
  %168 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3594
  %vn215 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %168, i32 0, i32 16, !dbg !3595
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %vn215, i64 0, i64 1, !dbg !3594
  %169 = load float, float* %arrayidx216, align 4, !dbg !3594
  %mul217 = fmul float %167, %169, !dbg !3596
  %add218 = fadd float %166, %mul217, !dbg !3597
  %sub219 = fsub float %164, %add218, !dbg !3598
  %170 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3599
  %dxref220 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %170, i32 0, i32 84, !dbg !3600
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %dxref220, i64 0, i64 1, !dbg !3599
  store float %sub219, float* %arrayidx221, align 4, !dbg !3601
  %171 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3602
  %ref222 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %171, i32 0, i32 58, !dbg !3603
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %ref222, i64 0, i64 2, !dbg !3602
  %172 = load float, float* %arrayidx223, align 4, !dbg !3602
  %173 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3604
  %view224 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %173, i32 0, i32 30, !dbg !3605
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %view224, i64 0, i64 2, !dbg !3604
  %174 = load float, float* %arrayidx225, align 4, !dbg !3604
  %175 = load float, float* %i, align 4, !dbg !3606
  %176 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3607
  %vn226 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %176, i32 0, i32 16, !dbg !3608
  %arrayidx227 = getelementptr inbounds [3 x float], [3 x float]* %vn226, i64 0, i64 2, !dbg !3607
  %177 = load float, float* %arrayidx227, align 4, !dbg !3607
  %mul228 = fmul float %175, %177, !dbg !3609
  %add229 = fadd float %174, %mul228, !dbg !3610
  %sub230 = fsub float %172, %add229, !dbg !3611
  %178 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3612
  %dxref231 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %178, i32 0, i32 84, !dbg !3613
  %arrayidx232 = getelementptr inbounds [3 x float], [3 x float]* %dxref231, i64 0, i64 2, !dbg !3612
  store float %sub230, float* %arrayidx232, align 8, !dbg !3614
  %179 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3615
  %vn233 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %179, i32 0, i32 16, !dbg !3616
  %arrayidx234 = getelementptr inbounds [3 x float], [3 x float]* %vn233, i64 0, i64 0, !dbg !3615
  %180 = load float, float* %arrayidx234, align 4, !dbg !3615
  %181 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3617
  %view235 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %181, i32 0, i32 30, !dbg !3618
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %view235, i64 0, i64 0, !dbg !3617
  %182 = load float, float* %arrayidx236, align 4, !dbg !3617
  %mul237 = fmul float %180, %182, !dbg !3619
  %183 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3620
  %vn238 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %183, i32 0, i32 16, !dbg !3621
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %vn238, i64 0, i64 1, !dbg !3620
  %184 = load float, float* %arrayidx239, align 4, !dbg !3620
  %185 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3622
  %view240 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %185, i32 0, i32 30, !dbg !3623
  %arrayidx241 = getelementptr inbounds [3 x float], [3 x float]* %view240, i64 0, i64 1, !dbg !3622
  %186 = load float, float* %arrayidx241, align 4, !dbg !3622
  %187 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3624
  %dyview242 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %187, i32 0, i32 91, !dbg !3625
  %188 = load float, float* %dyview242, align 4, !dbg !3625
  %add243 = fadd float %186, %188, !dbg !3626
  %mul244 = fmul float %184, %add243, !dbg !3627
  %add245 = fadd float %mul237, %mul244, !dbg !3628
  %189 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3629
  %vn246 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %189, i32 0, i32 16, !dbg !3630
  %arrayidx247 = getelementptr inbounds [3 x float], [3 x float]* %vn246, i64 0, i64 2, !dbg !3629
  %190 = load float, float* %arrayidx247, align 4, !dbg !3629
  %191 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3631
  %view248 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %191, i32 0, i32 30, !dbg !3632
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %view248, i64 0, i64 2, !dbg !3631
  %192 = load float, float* %arrayidx249, align 4, !dbg !3631
  %mul250 = fmul float %190, %192, !dbg !3633
  %add251 = fadd float %add245, %mul250, !dbg !3634
  %mul252 = fmul float -2.000000e+00, %add251, !dbg !3635
  store float %mul252, float* %i, align 4, !dbg !3636
  %193 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3637
  %ref253 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %193, i32 0, i32 58, !dbg !3638
  %arrayidx254 = getelementptr inbounds [3 x float], [3 x float]* %ref253, i64 0, i64 0, !dbg !3637
  %194 = load float, float* %arrayidx254, align 4, !dbg !3637
  %195 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3639
  %view255 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %195, i32 0, i32 30, !dbg !3640
  %arrayidx256 = getelementptr inbounds [3 x float], [3 x float]* %view255, i64 0, i64 0, !dbg !3639
  %196 = load float, float* %arrayidx256, align 4, !dbg !3639
  %197 = load float, float* %i, align 4, !dbg !3641
  %198 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3642
  %vn257 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %198, i32 0, i32 16, !dbg !3643
  %arrayidx258 = getelementptr inbounds [3 x float], [3 x float]* %vn257, i64 0, i64 0, !dbg !3642
  %199 = load float, float* %arrayidx258, align 4, !dbg !3642
  %mul259 = fmul float %197, %199, !dbg !3644
  %add260 = fadd float %196, %mul259, !dbg !3645
  %sub261 = fsub float %194, %add260, !dbg !3646
  %200 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3647
  %dyref262 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %200, i32 0, i32 85, !dbg !3648
  %arrayidx263 = getelementptr inbounds [3 x float], [3 x float]* %dyref262, i64 0, i64 0, !dbg !3647
  store float %sub261, float* %arrayidx263, align 4, !dbg !3649
  %201 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3650
  %ref264 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %201, i32 0, i32 58, !dbg !3651
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %ref264, i64 0, i64 1, !dbg !3650
  %202 = load float, float* %arrayidx265, align 4, !dbg !3650
  %203 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3652
  %view266 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %203, i32 0, i32 30, !dbg !3653
  %arrayidx267 = getelementptr inbounds [3 x float], [3 x float]* %view266, i64 0, i64 1, !dbg !3652
  %204 = load float, float* %arrayidx267, align 4, !dbg !3652
  %205 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3654
  %dyview268 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %205, i32 0, i32 91, !dbg !3655
  %206 = load float, float* %dyview268, align 4, !dbg !3655
  %add269 = fadd float %204, %206, !dbg !3656
  %207 = load float, float* %i, align 4, !dbg !3657
  %208 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3658
  %vn270 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %208, i32 0, i32 16, !dbg !3659
  %arrayidx271 = getelementptr inbounds [3 x float], [3 x float]* %vn270, i64 0, i64 1, !dbg !3658
  %209 = load float, float* %arrayidx271, align 4, !dbg !3658
  %mul272 = fmul float %207, %209, !dbg !3660
  %add273 = fadd float %add269, %mul272, !dbg !3661
  %sub274 = fsub float %202, %add273, !dbg !3662
  %210 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3663
  %dyref275 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %210, i32 0, i32 85, !dbg !3664
  %arrayidx276 = getelementptr inbounds [3 x float], [3 x float]* %dyref275, i64 0, i64 1, !dbg !3663
  store float %sub274, float* %arrayidx276, align 4, !dbg !3665
  %211 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3666
  %ref277 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %211, i32 0, i32 58, !dbg !3667
  %arrayidx278 = getelementptr inbounds [3 x float], [3 x float]* %ref277, i64 0, i64 2, !dbg !3666
  %212 = load float, float* %arrayidx278, align 4, !dbg !3666
  %213 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3668
  %view279 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %213, i32 0, i32 30, !dbg !3669
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %view279, i64 0, i64 2, !dbg !3668
  %214 = load float, float* %arrayidx280, align 4, !dbg !3668
  %215 = load float, float* %i, align 4, !dbg !3670
  %216 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3671
  %vn281 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %216, i32 0, i32 16, !dbg !3672
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %vn281, i64 0, i64 2, !dbg !3671
  %217 = load float, float* %arrayidx282, align 4, !dbg !3671
  %mul283 = fmul float %215, %217, !dbg !3673
  %add284 = fadd float %214, %mul283, !dbg !3674
  %sub285 = fsub float %212, %add284, !dbg !3675
  %218 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3676
  %dyref286 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %218, i32 0, i32 85, !dbg !3677
  %arrayidx287 = getelementptr inbounds [3 x float], [3 x float]* %dyref286, i64 0, i64 2, !dbg !3676
  store float %sub285, float* %arrayidx287, align 4, !dbg !3678
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then38
  br label %if.end288, !dbg !3679

if.end288:                                        ; preds = %if.end, %entry
  ret void, !dbg !3680
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @shade_color(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !3681 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %ma = alloca %struct.Material*, align 8
  %neg_alpha = alloca float, align 4
  %obcol = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !3708, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3710, metadata !DIExpression()), !dbg !3713
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3714
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !3715
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !3715
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !3713
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3716
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 51, !dbg !3718
  %3 = load i32, i32* %mode, align 4, !dbg !3718
  %and = and i32 %3, 2048, !dbg !3719
  %tobool = icmp ne i32 %and, 0, !dbg !3719
  br i1 %tobool, label %if.then, label %if.else, !dbg !3720

if.then:                                          ; preds = %entry
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3721
  %vcol = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 61, !dbg !3723
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %vcol, i64 0, i64 0, !dbg !3721
  %5 = load float, float* %arrayidx, align 8, !dbg !3721
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3724
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 32, !dbg !3725
  store float %5, float* %r, align 4, !dbg !3726
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3727
  %vcol1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 61, !dbg !3728
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %vcol1, i64 0, i64 1, !dbg !3727
  %8 = load float, float* %arrayidx2, align 4, !dbg !3727
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3729
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 33, !dbg !3730
  store float %8, float* %g, align 8, !dbg !3731
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3732
  %vcol3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 61, !dbg !3733
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %vcol3, i64 0, i64 2, !dbg !3732
  %11 = load float, float* %arrayidx4, align 8, !dbg !3732
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3734
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 34, !dbg !3735
  store float %11, float* %b, align 4, !dbg !3736
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3737
  %mode5 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 51, !dbg !3739
  %14 = load i32, i32* %mode5, align 4, !dbg !3739
  %and6 = and i32 %14, 536870912, !dbg !3740
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3740
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3741

if.then8:                                         ; preds = %if.then
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3742
  %vcol9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 61, !dbg !3743
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %vcol9, i64 0, i64 3, !dbg !3742
  %16 = load float, float* %arrayidx10, align 4, !dbg !3742
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3744
  %alpha = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 49, !dbg !3745
  store float %16, float* %alpha, align 8, !dbg !3746
  br label %if.end, !dbg !3744

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end43, !dbg !3747

if.else:                                          ; preds = %entry
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3748
  %mode11 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 51, !dbg !3750
  %19 = load i32, i32* %mode11, align 4, !dbg !3750
  %and12 = and i32 %19, 128, !dbg !3751
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3751
  br i1 %tobool13, label %if.then14, label %if.end42, !dbg !3752

if.then14:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %neg_alpha, metadata !3753, metadata !DIExpression()), !dbg !3755
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3756
  %vcol15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 61, !dbg !3757
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %vcol15, i64 0, i64 3, !dbg !3756
  %21 = load float, float* %arrayidx16, align 4, !dbg !3756
  %sub = fsub float 1.000000e+00, %21, !dbg !3758
  store float %sub, float* %neg_alpha, align 4, !dbg !3755
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3759
  %r17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 32, !dbg !3760
  %23 = load float, float* %r17, align 4, !dbg !3760
  %24 = load float, float* %neg_alpha, align 4, !dbg !3761
  %mul = fmul float %23, %24, !dbg !3762
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3763
  %vcol18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 61, !dbg !3764
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %vcol18, i64 0, i64 0, !dbg !3763
  %26 = load float, float* %arrayidx19, align 8, !dbg !3763
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3765
  %vcol20 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 61, !dbg !3766
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %vcol20, i64 0, i64 3, !dbg !3765
  %28 = load float, float* %arrayidx21, align 4, !dbg !3765
  %mul22 = fmul float %26, %28, !dbg !3767
  %add = fadd float %mul, %mul22, !dbg !3768
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3769
  %r23 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 32, !dbg !3770
  store float %add, float* %r23, align 4, !dbg !3771
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3772
  %g24 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 33, !dbg !3773
  %31 = load float, float* %g24, align 8, !dbg !3773
  %32 = load float, float* %neg_alpha, align 4, !dbg !3774
  %mul25 = fmul float %31, %32, !dbg !3775
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3776
  %vcol26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 61, !dbg !3777
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %vcol26, i64 0, i64 1, !dbg !3776
  %34 = load float, float* %arrayidx27, align 4, !dbg !3776
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3778
  %vcol28 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 61, !dbg !3779
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %vcol28, i64 0, i64 3, !dbg !3778
  %36 = load float, float* %arrayidx29, align 4, !dbg !3778
  %mul30 = fmul float %34, %36, !dbg !3780
  %add31 = fadd float %mul25, %mul30, !dbg !3781
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3782
  %g32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 33, !dbg !3783
  store float %add31, float* %g32, align 8, !dbg !3784
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3785
  %b33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 34, !dbg !3786
  %39 = load float, float* %b33, align 4, !dbg !3786
  %40 = load float, float* %neg_alpha, align 4, !dbg !3787
  %mul34 = fmul float %39, %40, !dbg !3788
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3789
  %vcol35 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 61, !dbg !3790
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %vcol35, i64 0, i64 2, !dbg !3789
  %42 = load float, float* %arrayidx36, align 8, !dbg !3789
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3791
  %vcol37 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 61, !dbg !3792
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %vcol37, i64 0, i64 3, !dbg !3791
  %44 = load float, float* %arrayidx38, align 4, !dbg !3791
  %mul39 = fmul float %42, %44, !dbg !3793
  %add40 = fadd float %mul34, %mul39, !dbg !3794
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3795
  %b41 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 34, !dbg !3796
  store float %add40, float* %b41, align 4, !dbg !3797
  br label %if.end42, !dbg !3798

if.end42:                                         ; preds = %if.then14, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end
  %46 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3799
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %46, i32 0, i32 90, !dbg !3801
  %47 = load i16, i16* %texco, align 4, !dbg !3801
  %tobool44 = icmp ne i16 %47, 0, !dbg !3799
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !3802

if.then45:                                        ; preds = %if.end43
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3803
  call void @do_material_tex(%struct.ShadeInput* %48, %struct.Render* @R), !dbg !3804
  br label %if.end46, !dbg !3804

if.end46:                                         ; preds = %if.then45, %if.end43
  %49 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3805
  %fresnel_tra = getelementptr inbounds %struct.Material, %struct.Material* %49, i32 0, i32 31, !dbg !3807
  %50 = load float, float* %fresnel_tra, align 8, !dbg !3807
  %cmp = fcmp une float %50, 0.000000e+00, !dbg !3808
  br i1 %cmp, label %if.then47, label %if.end52, !dbg !3809

if.then47:                                        ; preds = %if.end46
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3810
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 30, !dbg !3811
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !3810
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3812
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 16, !dbg !3813
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !3812
  %53 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3814
  %fresnel_tra_i = getelementptr inbounds %struct.Material, %struct.Material* %53, i32 0, i32 32, !dbg !3815
  %54 = load float, float* %fresnel_tra_i, align 4, !dbg !3815
  %55 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3816
  %fresnel_tra49 = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 31, !dbg !3817
  %56 = load float, float* %fresnel_tra49, align 8, !dbg !3817
  %call = call float @fresnel_fac(float* %arraydecay, float* %arraydecay48, float %54, float %56), !dbg !3818
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3819
  %alpha50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 49, !dbg !3820
  %58 = load float, float* %alpha50, align 8, !dbg !3821
  %mul51 = fmul float %58, %call, !dbg !3821
  store float %mul51, float* %alpha50, align 8, !dbg !3821
  br label %if.end52, !dbg !3819

if.end52:                                         ; preds = %if.then47, %if.end46
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3822
  %mode53 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 21, !dbg !3824
  %60 = load i32, i32* %mode53, align 8, !dbg !3824
  %and54 = and i32 %60, 65536, !dbg !3825
  %tobool55 = icmp ne i32 %and54, 0, !dbg !3825
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !3826

if.then56:                                        ; preds = %if.end52
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3827
  %alpha57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 49, !dbg !3828
  store float 1.000000e+00, float* %alpha57, align 8, !dbg !3829
  br label %if.end58, !dbg !3827

if.end58:                                         ; preds = %if.then56, %if.end52
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3830
  %r59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 32, !dbg !3831
  %63 = load float, float* %r59, align 4, !dbg !3831
  %64 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3832
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %64, i32 0, i32 6, !dbg !3833
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !3832
  store float %63, float* %arrayidx60, align 4, !dbg !3834
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3835
  %g61 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 33, !dbg !3836
  %66 = load float, float* %g61, align 8, !dbg !3836
  %67 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3837
  %diff62 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %67, i32 0, i32 6, !dbg !3838
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %diff62, i64 0, i64 1, !dbg !3837
  store float %66, float* %arrayidx63, align 4, !dbg !3839
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3840
  %b64 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 34, !dbg !3841
  %69 = load float, float* %b64, align 4, !dbg !3841
  %70 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3842
  %diff65 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %70, i32 0, i32 6, !dbg !3843
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %diff65, i64 0, i64 2, !dbg !3842
  store float %69, float* %arrayidx66, align 4, !dbg !3844
  %71 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3845
  %alpha67 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %71, i32 0, i32 49, !dbg !3846
  %72 = load float, float* %alpha67, align 8, !dbg !3846
  %73 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3847
  %alpha68 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %73, i32 0, i32 2, !dbg !3848
  store float %72, float* %alpha68, align 4, !dbg !3849
  %74 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3850
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 50, !dbg !3852
  %75 = load i16, i16* %shade_flag, align 2, !dbg !3852
  %conv = sext i16 %75 to i32, !dbg !3850
  %and69 = and i32 %conv, 2, !dbg !3853
  %tobool70 = icmp ne i32 %and69, 0, !dbg !3853
  br i1 %tobool70, label %land.lhs.true, label %if.end110, !dbg !3854

land.lhs.true:                                    ; preds = %if.end58
  %76 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3855
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %76, i32 0, i32 4, !dbg !3856
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3856
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %77, i32 0, i32 2, !dbg !3857
  %78 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3857
  %tobool71 = icmp ne %struct.Object* %78, null, !dbg !3855
  br i1 %tobool71, label %if.then72, label %if.end110, !dbg !3858

if.then72:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x float]* %obcol, metadata !3859, metadata !DIExpression()), !dbg !3861
  %arraydecay73 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 0, !dbg !3862
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3863
  %obr74 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 0, i32 4, !dbg !3864
  %80 = load %struct.ObjectRen*, %struct.ObjectRen** %obr74, align 8, !dbg !3864
  %ob75 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %80, i32 0, i32 2, !dbg !3865
  %81 = load %struct.Object*, %struct.Object** %ob75, align 8, !dbg !3865
  %col = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 98, !dbg !3866
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3863
  call void @copy_v4_v4(float* %arraydecay73, float* %arraydecay76), !dbg !3867
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !3868
  %82 = load float, float* %arrayidx77, align 4, !dbg !3868
  %cmp78 = fcmp olt float %82, 0.000000e+00, !dbg !3868
  br i1 %cmp78, label %if.then80, label %if.else82, !dbg !3871

if.then80:                                        ; preds = %if.then72
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !3868
  store float 0.000000e+00, float* %arrayidx81, align 4, !dbg !3868
  br label %if.end89, !dbg !3868

if.else82:                                        ; preds = %if.then72
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !3872
  %83 = load float, float* %arrayidx83, align 4, !dbg !3872
  %cmp84 = fcmp ogt float %83, 1.000000e+00, !dbg !3872
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !3868

if.then86:                                        ; preds = %if.else82
  %arrayidx87 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !3872
  store float 1.000000e+00, float* %arrayidx87, align 4, !dbg !3872
  br label %if.end88, !dbg !3872

if.end88:                                         ; preds = %if.then86, %if.else82
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then80
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 0, !dbg !3874
  %84 = load float, float* %arrayidx90, align 16, !dbg !3874
  %85 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3875
  %diff91 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %85, i32 0, i32 6, !dbg !3876
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %diff91, i64 0, i64 0, !dbg !3875
  %86 = load float, float* %arrayidx92, align 4, !dbg !3877
  %mul93 = fmul float %86, %84, !dbg !3877
  store float %mul93, float* %arrayidx92, align 4, !dbg !3877
  %arrayidx94 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 1, !dbg !3878
  %87 = load float, float* %arrayidx94, align 4, !dbg !3878
  %88 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3879
  %diff95 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %88, i32 0, i32 6, !dbg !3880
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %diff95, i64 0, i64 1, !dbg !3879
  %89 = load float, float* %arrayidx96, align 4, !dbg !3881
  %mul97 = fmul float %89, %87, !dbg !3881
  store float %mul97, float* %arrayidx96, align 4, !dbg !3881
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 2, !dbg !3882
  %90 = load float, float* %arrayidx98, align 8, !dbg !3882
  %91 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3883
  %diff99 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %91, i32 0, i32 6, !dbg !3884
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %diff99, i64 0, i64 2, !dbg !3883
  %92 = load float, float* %arrayidx100, align 4, !dbg !3885
  %mul101 = fmul float %92, %90, !dbg !3885
  store float %mul101, float* %arrayidx100, align 4, !dbg !3885
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3886
  %mode102 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 21, !dbg !3888
  %94 = load i32, i32* %mode102, align 8, !dbg !3888
  %and103 = and i32 %94, 65536, !dbg !3889
  %tobool104 = icmp ne i32 %and103, 0, !dbg !3889
  br i1 %tobool104, label %if.then105, label %if.end109, !dbg !3890

if.then105:                                       ; preds = %if.end89
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !3891
  %95 = load float, float* %arrayidx106, align 4, !dbg !3891
  %96 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3892
  %alpha107 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %96, i32 0, i32 2, !dbg !3893
  %97 = load float, float* %alpha107, align 4, !dbg !3894
  %mul108 = fmul float %97, %95, !dbg !3894
  store float %mul108, float* %alpha107, align 4, !dbg !3894
  br label %if.end109, !dbg !3892

if.end109:                                        ; preds = %if.then105, %if.end89
  br label %if.end110, !dbg !3895

if.end110:                                        ; preds = %if.end109, %land.lhs.true, %if.end58
  %98 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3896
  %diffshad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %98, i32 0, i32 7, !dbg !3897
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %diffshad, i64 0, i64 0, !dbg !3896
  %99 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !3898
  %diff112 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %99, i32 0, i32 6, !dbg !3899
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %diff112, i64 0, i64 0, !dbg !3898
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay113), !dbg !3900
  ret void, !dbg !3901
}

declare dso_local void @do_material_tex(%struct.ShadeInput*, %struct.Render*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !3902 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3905, metadata !DIExpression()), !dbg !3906
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3907, metadata !DIExpression()), !dbg !3908
  %0 = load float*, float** %a.addr, align 8, !dbg !3909
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3909
  %1 = load float, float* %arrayidx, align 4, !dbg !3909
  %2 = load float*, float** %r.addr, align 8, !dbg !3910
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3910
  store float %1, float* %arrayidx1, align 4, !dbg !3911
  %3 = load float*, float** %a.addr, align 8, !dbg !3912
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3912
  %4 = load float, float* %arrayidx2, align 4, !dbg !3912
  %5 = load float*, float** %r.addr, align 8, !dbg !3913
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3913
  store float %4, float* %arrayidx3, align 4, !dbg !3914
  %6 = load float*, float** %a.addr, align 8, !dbg !3915
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3915
  %7 = load float, float* %arrayidx4, align 4, !dbg !3915
  %8 = load float*, float** %r.addr, align 8, !dbg !3916
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3916
  store float %7, float* %arrayidx5, align 4, !dbg !3917
  %9 = load float*, float** %a.addr, align 8, !dbg !3918
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !3918
  %10 = load float, float* %arrayidx6, align 4, !dbg !3918
  %11 = load float*, float** %r.addr, align 8, !dbg !3919
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !3919
  store float %10, float* %arrayidx7, align 4, !dbg !3920
  ret void, !dbg !3921
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3922 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3923, metadata !DIExpression()), !dbg !3924
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3925, metadata !DIExpression()), !dbg !3926
  %0 = load float*, float** %a.addr, align 8, !dbg !3927
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3927
  %1 = load float, float* %arrayidx, align 4, !dbg !3927
  %2 = load float*, float** %r.addr, align 8, !dbg !3928
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3928
  store float %1, float* %arrayidx1, align 4, !dbg !3929
  %3 = load float*, float** %a.addr, align 8, !dbg !3930
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3930
  %4 = load float, float* %arrayidx2, align 4, !dbg !3930
  %5 = load float*, float** %r.addr, align 8, !dbg !3931
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3931
  store float %4, float* %arrayidx3, align 4, !dbg !3932
  %6 = load float*, float** %a.addr, align 8, !dbg !3933
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3933
  %7 = load float, float* %arrayidx4, align 4, !dbg !3933
  %8 = load float*, float** %r.addr, align 8, !dbg !3934
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3934
  store float %7, float* %arrayidx5, align 4, !dbg !3935
  ret void, !dbg !3936
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ambient_occlusion(%struct.ShadeInput* %shi) #0 !dbg !3937 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3938, metadata !DIExpression()), !dbg !3939
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 64), align 2, !dbg !3940
  %conv = sext i16 %0 to i32, !dbg !3942
  %cmp = icmp eq i32 %conv, 1, !dbg !3943
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3944

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3945
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 0, !dbg !3946
  %2 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !3946
  %amb = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 16, !dbg !3947
  %3 = load float, float* %amb, align 4, !dbg !3947
  %cmp2 = fcmp une float %3, 0.000000e+00, !dbg !3948
  br i1 %cmp2, label %if.then, label %if.else, !dbg !3949

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3950
  call void @sample_occ(%struct.Render* @R, %struct.ShadeInput* %4), !dbg !3952
  br label %if.end20, !dbg !3953

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !3954
  %and = and i32 %5, 65536, !dbg !3956
  %tobool = icmp ne i32 %and, 0, !dbg !3956
  br i1 %tobool, label %land.lhs.true4, label %if.else11, !dbg !3957

land.lhs.true4:                                   ; preds = %if.else
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3958
  %mat5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 0, !dbg !3959
  %7 = load %struct.Material*, %struct.Material** %mat5, align 8, !dbg !3959
  %amb6 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 16, !dbg !3960
  %8 = load float, float* %amb6, align 4, !dbg !3960
  %cmp7 = fcmp une float %8, 0.000000e+00, !dbg !3961
  br i1 %cmp7, label %if.then9, label %if.else11, !dbg !3962

if.then9:                                         ; preds = %land.lhs.true4
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3963
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3965
  %ao = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 100, !dbg !3966
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3965
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3967
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 102, !dbg !3968
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3967
  call void @ray_ao(%struct.ShadeInput* %9, float* %arraydecay, float* %arraydecay10), !dbg !3969
  br label %if.end, !dbg !3970

if.else11:                                        ; preds = %land.lhs.true4, %if.else
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3971
  %ao12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 100, !dbg !3973
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %ao12, i64 0, i64 2, !dbg !3971
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !3974
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3975
  %ao13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 100, !dbg !3976
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %ao13, i64 0, i64 1, !dbg !3975
  store float 1.000000e+00, float* %arrayidx14, align 4, !dbg !3977
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3978
  %ao15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 100, !dbg !3979
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %ao15, i64 0, i64 0, !dbg !3978
  store float 1.000000e+00, float* %arrayidx16, align 8, !dbg !3980
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3981
  %env17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 102, !dbg !3982
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %env17, i64 0, i64 0, !dbg !3981
  call void @zero_v3(float* %arraydecay18), !dbg !3983
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3984
  %indirect = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 101, !dbg !3985
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3984
  call void @zero_v3(float* %arraydecay19), !dbg !3986
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then
  ret void, !dbg !3987
}

declare dso_local void @sample_occ(%struct.Render*, %struct.ShadeInput*) #3

declare dso_local void @ray_ao(%struct.ShadeInput*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !3988 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load float*, float** %r.addr, align 8, !dbg !3993
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3993
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3994
  %1 = load float*, float** %r.addr, align 8, !dbg !3995
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !3995
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !3996
  %2 = load float*, float** %r.addr, align 8, !dbg !3997
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !3997
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !3998
  ret void, !dbg !3999
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @environment_lighting_apply(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !4000 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %f = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4001, metadata !DIExpression()), !dbg !4002
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !4003, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.declare(metadata float* %f, metadata !4005, metadata !DIExpression()), !dbg !4006
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 59), align 4, !dbg !4007
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4008
  %amb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 44, !dbg !4009
  %2 = load float, float* %amb, align 4, !dbg !4009
  %mul = fmul float %0, %2, !dbg !4010
  store float %mul, float* %f, align 4, !dbg !4006
  %3 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !4011
  %and = and i32 %3, 65536, !dbg !4013
  %tobool = icmp ne i32 %and, 0, !dbg !4013
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !4014

lor.lhs.false:                                    ; preds = %entry
  %4 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 64), align 2, !dbg !4015
  %conv = sext i16 %4 to i32, !dbg !4016
  %cmp = icmp eq i32 %conv, 1, !dbg !4017
  br i1 %cmp, label %if.end, label %if.then, !dbg !4018

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !4019

if.end:                                           ; preds = %lor.lhs.false, %entry
  %5 = load float, float* %f, align 4, !dbg !4020
  %cmp2 = fcmp oeq float %5, 0.000000e+00, !dbg !4022
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !4023

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !4024

if.end5:                                          ; preds = %if.end
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4025
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 102, !dbg !4026
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !4025
  %7 = load float, float* %arrayidx, align 8, !dbg !4025
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4027
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 32, !dbg !4028
  %9 = load float, float* %r, align 4, !dbg !4028
  %mul6 = fmul float %7, %9, !dbg !4029
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4030
  %refl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 50, !dbg !4031
  %11 = load float, float* %refl, align 4, !dbg !4031
  %mul7 = fmul float %mul6, %11, !dbg !4032
  %12 = load float, float* %f, align 4, !dbg !4033
  %mul8 = fmul float %mul7, %12, !dbg !4034
  %13 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4035
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %13, i32 0, i32 0, !dbg !4036
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !4035
  %14 = load float, float* %arrayidx9, align 4, !dbg !4037
  %add = fadd float %14, %mul8, !dbg !4037
  store float %add, float* %arrayidx9, align 4, !dbg !4037
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4038
  %env10 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 102, !dbg !4039
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %env10, i64 0, i64 1, !dbg !4038
  %16 = load float, float* %arrayidx11, align 4, !dbg !4038
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4040
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 33, !dbg !4041
  %18 = load float, float* %g, align 8, !dbg !4041
  %mul12 = fmul float %16, %18, !dbg !4042
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4043
  %refl13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 50, !dbg !4044
  %20 = load float, float* %refl13, align 4, !dbg !4044
  %mul14 = fmul float %mul12, %20, !dbg !4045
  %21 = load float, float* %f, align 4, !dbg !4046
  %mul15 = fmul float %mul14, %21, !dbg !4047
  %22 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4048
  %combined16 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %22, i32 0, i32 0, !dbg !4049
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %combined16, i64 0, i64 1, !dbg !4048
  %23 = load float, float* %arrayidx17, align 4, !dbg !4050
  %add18 = fadd float %23, %mul15, !dbg !4050
  store float %add18, float* %arrayidx17, align 4, !dbg !4050
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4051
  %env19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 102, !dbg !4052
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %env19, i64 0, i64 2, !dbg !4051
  %25 = load float, float* %arrayidx20, align 8, !dbg !4051
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4053
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 34, !dbg !4054
  %27 = load float, float* %b, align 4, !dbg !4054
  %mul21 = fmul float %25, %27, !dbg !4055
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4056
  %refl22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 50, !dbg !4057
  %29 = load float, float* %refl22, align 4, !dbg !4057
  %mul23 = fmul float %mul21, %29, !dbg !4058
  %30 = load float, float* %f, align 4, !dbg !4059
  %mul24 = fmul float %mul23, %30, !dbg !4060
  %31 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4061
  %combined25 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %31, i32 0, i32 0, !dbg !4062
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %combined25, i64 0, i64 2, !dbg !4061
  %32 = load float, float* %arrayidx26, align 4, !dbg !4063
  %add27 = fadd float %32, %mul24, !dbg !4063
  store float %add27, float* %arrayidx26, align 4, !dbg !4063
  br label %return, !dbg !4064

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !4064
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @lamp_get_shadow(%struct.LampRen* %lar, %struct.ShadeInput* %shi, float %inp, float* %shadfac, i32 %do_real) #0 !dbg !4065 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %inp.addr = alloca float, align 4
  %shadfac.addr = alloca float*, align 8
  %do_real.addr = alloca i32, align 4
  %lss = alloca %struct.LampShadowSubSample*, align 8
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  store float %inp, float* %inp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %inp.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  store float* %shadfac, float** %shadfac.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadfac.addr, metadata !4074, metadata !DIExpression()), !dbg !4075
  store i32 %do_real, i32* %do_real.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_real.addr, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.LampShadowSubSample** %lss, metadata !4078, metadata !DIExpression()), !dbg !4080
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4081
  %shadsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 67, !dbg !4082
  %1 = load %struct.LampShadowSample*, %struct.LampShadowSample** %shadsamp, align 8, !dbg !4082
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4083
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 114, !dbg !4084
  %3 = load i16, i16* %thread, align 2, !dbg !4084
  %idxprom = sext i16 %3 to i64, !dbg !4081
  %arrayidx = getelementptr inbounds %struct.LampShadowSample, %struct.LampShadowSample* %1, i64 %idxprom, !dbg !4081
  %s = getelementptr inbounds %struct.LampShadowSample, %struct.LampShadowSample* %arrayidx, i32 0, i32 0, !dbg !4085
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4086
  %sample = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 115, !dbg !4087
  %5 = load i16, i16* %sample, align 4, !dbg !4087
  %idxprom1 = sext i16 %5 to i64, !dbg !4081
  %arrayidx2 = getelementptr inbounds [16 x %struct.LampShadowSubSample], [16 x %struct.LampShadowSubSample]* %s, i64 0, i64 %idxprom1, !dbg !4081
  store %struct.LampShadowSubSample* %arrayidx2, %struct.LampShadowSubSample** %lss, align 8, !dbg !4080
  %6 = load i32, i32* %do_real.addr, align 4, !dbg !4088
  %tobool = icmp ne i32 %6, 0, !dbg !4088
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4090

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !4091
  %samplenr = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %7, i32 0, i32 0, !dbg !4092
  %8 = load i32, i32* %samplenr, align 4, !dbg !4092
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4093
  %samplenr3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 107, !dbg !4094
  %10 = load i32, i32* %samplenr3, align 4, !dbg !4094
  %cmp = icmp ne i32 %8, %10, !dbg !4095
  br i1 %cmp, label %if.then, label %if.else33, !dbg !4096

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load float*, float** %shadfac.addr, align 8, !dbg !4097
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 3, !dbg !4097
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !4099
  %12 = load float*, float** %shadfac.addr, align 8, !dbg !4100
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 2, !dbg !4100
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !4101
  %13 = load float*, float** %shadfac.addr, align 8, !dbg !4102
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 1, !dbg !4102
  store float 1.000000e+00, float* %arrayidx6, align 4, !dbg !4103
  %14 = load float*, float** %shadfac.addr, align 8, !dbg !4104
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 0, !dbg !4104
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !4105
  %15 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4106
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 57, !dbg !4108
  %16 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !4108
  %tobool8 = icmp ne %struct.ShadBuf* %16, null, !dbg !4106
  br i1 %tobool8, label %if.then9, label %if.else20, !dbg !4109

if.then9:                                         ; preds = %if.then
  %17 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4110
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %17, i32 0, i32 36, !dbg !4113
  %18 = load i16, i16* %buftype, align 4, !dbg !4113
  %conv = sext i16 %18 to i32, !dbg !4110
  %cmp10 = icmp eq i32 %conv, 1, !dbg !4114
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !4115

if.then12:                                        ; preds = %if.then9
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4116
  %20 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4117
  %shb13 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %20, i32 0, i32 57, !dbg !4118
  %21 = load %struct.ShadBuf*, %struct.ShadBuf** %shb13, align 8, !dbg !4118
  %call = call float @ISB_getshadow(%struct.ShadeInput* %19, %struct.ShadBuf* %21), !dbg !4119
  %22 = load float*, float** %shadfac.addr, align 8, !dbg !4120
  %arrayidx14 = getelementptr inbounds float, float* %22, i64 3, !dbg !4120
  store float %call, float* %arrayidx14, align 4, !dbg !4121
  br label %if.end, !dbg !4120

if.else:                                          ; preds = %if.then9
  %23 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4122
  %shb15 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %23, i32 0, i32 57, !dbg !4123
  %24 = load %struct.ShadBuf*, %struct.ShadBuf** %shb15, align 8, !dbg !4123
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4124
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 29, !dbg !4125
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4124
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4126
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 78, !dbg !4127
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !4126
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4128
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 79, !dbg !4129
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !4128
  %28 = load float, float* %inp.addr, align 4, !dbg !4130
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4131
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 0, !dbg !4132
  %30 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4132
  %lbias = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 71, !dbg !4133
  %31 = load float, float* %lbias, align 8, !dbg !4133
  %call18 = call float @testshadowbuf(%struct.Render* @R, %struct.ShadBuf* %24, float* %arraydecay, float* %arraydecay16, float* %arraydecay17, float %28, float %31), !dbg !4134
  %32 = load float*, float** %shadfac.addr, align 8, !dbg !4135
  %arrayidx19 = getelementptr inbounds float, float* %32, i64 3, !dbg !4135
  store float %call18, float* %arrayidx19, align 4, !dbg !4136
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %if.end24, !dbg !4137

if.else20:                                        ; preds = %if.then
  %33 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4138
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %33, i32 0, i32 7, !dbg !4140
  %34 = load i32, i32* %mode, align 4, !dbg !4140
  %and = and i32 %34, 8192, !dbg !4141
  %tobool21 = icmp ne i32 %and, 0, !dbg !4141
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4142

if.then22:                                        ; preds = %if.else20
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4143
  %36 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4145
  %37 = load float*, float** %shadfac.addr, align 8, !dbg !4146
  call void @ray_shadow(%struct.ShadeInput* %35, %struct.LampRen* %36, float* %37), !dbg !4147
  br label %if.end23, !dbg !4148

if.end23:                                         ; preds = %if.then22, %if.else20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4149
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 108, !dbg !4151
  %39 = load i32, i32* %depth, align 8, !dbg !4151
  %cmp25 = icmp eq i32 %39, 0, !dbg !4152
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !4153

if.then27:                                        ; preds = %if.end24
  %40 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !4154
  %shadfac28 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %40, i32 0, i32 1, !dbg !4156
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %shadfac28, i64 0, i64 0, !dbg !4154
  %41 = load float*, float** %shadfac.addr, align 8, !dbg !4157
  call void @copy_v4_v4(float* %arraydecay29, float* %41), !dbg !4158
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4159
  %samplenr30 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 107, !dbg !4160
  %43 = load i32, i32* %samplenr30, align 4, !dbg !4160
  %44 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !4161
  %samplenr31 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %44, i32 0, i32 0, !dbg !4162
  store i32 %43, i32* %samplenr31, align 4, !dbg !4163
  br label %if.end32, !dbg !4164

if.end32:                                         ; preds = %if.then27, %if.end24
  br label %if.end36, !dbg !4165

if.else33:                                        ; preds = %lor.lhs.false
  %45 = load float*, float** %shadfac.addr, align 8, !dbg !4166
  %46 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !4168
  %shadfac34 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %46, i32 0, i32 1, !dbg !4169
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %shadfac34, i64 0, i64 0, !dbg !4168
  call void @copy_v4_v4(float* %45, float* %arraydecay35), !dbg !4170
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.end32
  ret void, !dbg !4171
}

declare dso_local float @ISB_getshadow(%struct.ShadeInput*, %struct.ShadBuf*) #3

declare dso_local float @testshadowbuf(%struct.Render*, %struct.ShadBuf*, float*, float*, float*, float, float) #3

declare dso_local void @ray_shadow(%struct.ShadeInput*, %struct.LampRen*, float*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local float @lamp_get_visibility(%struct.LampRen* %lar, float* %co, float* %lv, float* %dist) #0 !dbg !4172 {
entry:
  %retval = alloca float, align 4
  %lar.addr = alloca %struct.LampRen*, align 8
  %co.addr = alloca float*, align 8
  %lv.addr = alloca float*, align 8
  %dist.addr = alloca float*, align 8
  %visifac = alloca float, align 4
  %t = alloca float, align 4
  %t56 = alloca float, align 4
  %inpr = alloca float, align 4
  %lvrot = alloca [3 x float], align 4
  %x = alloca float, align 4
  %i = alloca float, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  store float* %lv, float** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lv.addr, metadata !4179, metadata !DIExpression()), !dbg !4180
  store float* %dist, float** %dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dist.addr, metadata !4181, metadata !DIExpression()), !dbg !4182
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4183
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 6, !dbg !4185
  %1 = load i16, i16* %type, align 8, !dbg !4185
  %conv = sext i16 %1 to i32, !dbg !4183
  %cmp = icmp eq i32 %conv, 1, !dbg !4186
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4187

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4188
  %type2 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 6, !dbg !4189
  %3 = load i16, i16* %type2, align 8, !dbg !4189
  %conv3 = sext i16 %3 to i32, !dbg !4188
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !4190
  br i1 %cmp4, label %if.then, label %if.else, !dbg !4191

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load float*, float** %dist.addr, align 8, !dbg !4192
  store float 1.000000e+00, float* %4, align 4, !dbg !4194
  %5 = load float*, float** %lv.addr, align 8, !dbg !4195
  %6 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4196
  %vec = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 20, !dbg !4197
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4196
  call void @copy_v3_v3(float* %5, float* %arraydecay), !dbg !4198
  store float 1.000000e+00, float* %retval, align 4, !dbg !4199
  br label %return, !dbg !4199

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %visifac, metadata !4200, metadata !DIExpression()), !dbg !4202
  store float 1.000000e+00, float* %visifac, align 4, !dbg !4202
  call void @llvm.dbg.declare(metadata float* %t, metadata !4203, metadata !DIExpression()), !dbg !4204
  %7 = load float*, float** %lv.addr, align 8, !dbg !4205
  %8 = load float*, float** %co.addr, align 8, !dbg !4206
  %9 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4207
  %co6 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %9, i32 0, i32 5, !dbg !4208
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !4207
  call void @sub_v3_v3v3(float* %7, float* %8, float* %arraydecay7), !dbg !4209
  %10 = load float*, float** %lv.addr, align 8, !dbg !4210
  %call = call float @len_v3(float* %10), !dbg !4211
  %11 = load float*, float** %dist.addr, align 8, !dbg !4212
  store float %call, float* %11, align 4, !dbg !4213
  %12 = load float*, float** %dist.addr, align 8, !dbg !4214
  %13 = load float, float* %12, align 4, !dbg !4215
  %div = fdiv float 1.000000e+00, %13, !dbg !4216
  store float %div, float* %t, align 4, !dbg !4217
  %14 = load float*, float** %lv.addr, align 8, !dbg !4218
  %15 = load float, float* %t, align 4, !dbg !4219
  call void @mul_v3_fl(float* %14, float %15), !dbg !4220
  %16 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4221
  %type8 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %16, i32 0, i32 6, !dbg !4223
  %17 = load i16, i16* %type8, align 8, !dbg !4223
  %conv9 = sext i16 %17 to i32, !dbg !4221
  %cmp10 = icmp eq i32 %conv9, 4, !dbg !4224
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !4225

if.then12:                                        ; preds = %if.else
  br label %if.end142, !dbg !4226

if.else13:                                        ; preds = %if.else
  %18 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4228
  %falloff_type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 27, !dbg !4230
  %19 = load i16, i16* %falloff_type, align 4, !dbg !4230
  %conv14 = sext i16 %19 to i32, !dbg !4228
  switch i32 %conv14, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb15
    i32 2, label %sw.bb19
    i32 4, label %sw.bb26
    i32 3, label %sw.bb50
  ], !dbg !4231

sw.bb:                                            ; preds = %if.else13
  store float 1.000000e+00, float* %visifac, align 4, !dbg !4232
  br label %sw.epilog, !dbg !4234

sw.bb15:                                          ; preds = %if.else13
  %20 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4235
  %dist16 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %20, i32 0, i32 4, !dbg !4236
  %21 = load float, float* %dist16, align 8, !dbg !4236
  %22 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4237
  %dist17 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %22, i32 0, i32 4, !dbg !4238
  %23 = load float, float* %dist17, align 8, !dbg !4238
  %24 = load float*, float** %dist.addr, align 8, !dbg !4239
  %arrayidx = getelementptr inbounds float, float* %24, i64 0, !dbg !4239
  %25 = load float, float* %arrayidx, align 4, !dbg !4239
  %add = fadd float %23, %25, !dbg !4240
  %div18 = fdiv float %21, %add, !dbg !4241
  store float %div18, float* %visifac, align 4, !dbg !4242
  br label %sw.epilog, !dbg !4243

sw.bb19:                                          ; preds = %if.else13
  %26 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4244
  %dist20 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %26, i32 0, i32 4, !dbg !4245
  %27 = load float, float* %dist20, align 8, !dbg !4245
  %28 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4246
  %dist21 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %28, i32 0, i32 4, !dbg !4247
  %29 = load float, float* %dist21, align 8, !dbg !4247
  %30 = load float*, float** %dist.addr, align 8, !dbg !4248
  %arrayidx22 = getelementptr inbounds float, float* %30, i64 0, !dbg !4248
  %31 = load float, float* %arrayidx22, align 4, !dbg !4248
  %32 = load float*, float** %dist.addr, align 8, !dbg !4249
  %arrayidx23 = getelementptr inbounds float, float* %32, i64 0, !dbg !4249
  %33 = load float, float* %arrayidx23, align 4, !dbg !4249
  %mul = fmul float %31, %33, !dbg !4250
  %add24 = fadd float %29, %mul, !dbg !4251
  %div25 = fdiv float %27, %add24, !dbg !4252
  store float %div25, float* %visifac, align 4, !dbg !4253
  br label %sw.epilog, !dbg !4254

sw.bb26:                                          ; preds = %if.else13
  %34 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4255
  %ld1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %34, i32 0, i32 28, !dbg !4257
  %35 = load float, float* %ld1, align 8, !dbg !4257
  %cmp27 = fcmp ogt float %35, 0.000000e+00, !dbg !4258
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !4259

if.then29:                                        ; preds = %sw.bb26
  %36 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4260
  %dist30 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %36, i32 0, i32 4, !dbg !4261
  %37 = load float, float* %dist30, align 8, !dbg !4261
  %38 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4262
  %dist31 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %38, i32 0, i32 4, !dbg !4263
  %39 = load float, float* %dist31, align 8, !dbg !4263
  %40 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4264
  %ld132 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %40, i32 0, i32 28, !dbg !4265
  %41 = load float, float* %ld132, align 8, !dbg !4265
  %42 = load float*, float** %dist.addr, align 8, !dbg !4266
  %arrayidx33 = getelementptr inbounds float, float* %42, i64 0, !dbg !4266
  %43 = load float, float* %arrayidx33, align 4, !dbg !4266
  %mul34 = fmul float %41, %43, !dbg !4267
  %add35 = fadd float %39, %mul34, !dbg !4268
  %div36 = fdiv float %37, %add35, !dbg !4269
  store float %div36, float* %visifac, align 4, !dbg !4270
  br label %if.end, !dbg !4271

if.end:                                           ; preds = %if.then29, %sw.bb26
  %44 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4272
  %ld2 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %44, i32 0, i32 29, !dbg !4274
  %45 = load float, float* %ld2, align 4, !dbg !4274
  %cmp37 = fcmp ogt float %45, 0.000000e+00, !dbg !4275
  br i1 %cmp37, label %if.then39, label %if.end49, !dbg !4276

if.then39:                                        ; preds = %if.end
  %46 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4277
  %distkw = getelementptr inbounds %struct.LampRen, %struct.LampRen* %46, i32 0, i32 23, !dbg !4278
  %47 = load float, float* %distkw, align 4, !dbg !4278
  %48 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4279
  %distkw40 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %48, i32 0, i32 23, !dbg !4280
  %49 = load float, float* %distkw40, align 4, !dbg !4280
  %50 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4281
  %ld241 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %50, i32 0, i32 29, !dbg !4282
  %51 = load float, float* %ld241, align 4, !dbg !4282
  %52 = load float*, float** %dist.addr, align 8, !dbg !4283
  %arrayidx42 = getelementptr inbounds float, float* %52, i64 0, !dbg !4283
  %53 = load float, float* %arrayidx42, align 4, !dbg !4283
  %mul43 = fmul float %51, %53, !dbg !4284
  %54 = load float*, float** %dist.addr, align 8, !dbg !4285
  %arrayidx44 = getelementptr inbounds float, float* %54, i64 0, !dbg !4285
  %55 = load float, float* %arrayidx44, align 4, !dbg !4285
  %mul45 = fmul float %mul43, %55, !dbg !4286
  %add46 = fadd float %49, %mul45, !dbg !4287
  %div47 = fdiv float %47, %add46, !dbg !4288
  %56 = load float, float* %visifac, align 4, !dbg !4289
  %mul48 = fmul float %56, %div47, !dbg !4289
  store float %mul48, float* %visifac, align 4, !dbg !4289
  br label %if.end49, !dbg !4290

if.end49:                                         ; preds = %if.then39, %if.end
  br label %sw.epilog, !dbg !4291

sw.bb50:                                          ; preds = %if.else13
  %57 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4292
  %curfalloff = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 30, !dbg !4293
  %58 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff, align 8, !dbg !4293
  %59 = load float*, float** %dist.addr, align 8, !dbg !4294
  %arrayidx51 = getelementptr inbounds float, float* %59, i64 0, !dbg !4294
  %60 = load float, float* %arrayidx51, align 4, !dbg !4294
  %61 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4295
  %dist52 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %61, i32 0, i32 4, !dbg !4296
  %62 = load float, float* %dist52, align 8, !dbg !4296
  %div53 = fdiv float %60, %62, !dbg !4297
  %call54 = call float @curvemapping_evaluateF(%struct.CurveMapping* %58, i32 0, float %div53), !dbg !4298
  store float %call54, float* %visifac, align 4, !dbg !4299
  br label %sw.epilog, !dbg !4300

sw.epilog:                                        ; preds = %if.else13, %sw.bb50, %if.end49, %sw.bb19, %sw.bb15, %sw.bb
  %63 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4301
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %63, i32 0, i32 7, !dbg !4303
  %64 = load i32, i32* %mode, align 4, !dbg !4303
  %and = and i32 %64, 64, !dbg !4304
  %tobool = icmp ne i32 %and, 0, !dbg !4304
  br i1 %tobool, label %if.then55, label %if.end67, !dbg !4305

if.then55:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata float* %t56, metadata !4306, metadata !DIExpression()), !dbg !4308
  %65 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4309
  %dist57 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %65, i32 0, i32 4, !dbg !4310
  %66 = load float, float* %dist57, align 8, !dbg !4310
  %67 = load float*, float** %dist.addr, align 8, !dbg !4311
  %arrayidx58 = getelementptr inbounds float, float* %67, i64 0, !dbg !4311
  %68 = load float, float* %arrayidx58, align 4, !dbg !4311
  %sub = fsub float %66, %68, !dbg !4312
  store float %sub, float* %t56, align 4, !dbg !4308
  %69 = load float, float* %t56, align 4, !dbg !4313
  %cmp59 = fcmp ole float %69, 0.000000e+00, !dbg !4315
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !4316

if.then61:                                        ; preds = %if.then55
  store float 0.000000e+00, float* %visifac, align 4, !dbg !4317
  br label %if.end66, !dbg !4318

if.else62:                                        ; preds = %if.then55
  %70 = load float, float* %t56, align 4, !dbg !4319
  %71 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4320
  %dist63 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %71, i32 0, i32 4, !dbg !4321
  %72 = load float, float* %dist63, align 8, !dbg !4321
  %div64 = fdiv float %70, %72, !dbg !4322
  %73 = load float, float* %visifac, align 4, !dbg !4323
  %mul65 = fmul float %73, %div64, !dbg !4323
  store float %mul65, float* %visifac, align 4, !dbg !4323
  br label %if.end66

if.end66:                                         ; preds = %if.else62, %if.then61
  br label %if.end67, !dbg !4324

if.end67:                                         ; preds = %if.end66, %sw.epilog
  %74 = load float, float* %visifac, align 4, !dbg !4325
  %cmp68 = fcmp ogt float %74, 0.000000e+00, !dbg !4327
  br i1 %cmp68, label %if.then70, label %if.end141, !dbg !4328

if.then70:                                        ; preds = %if.end67
  %75 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4329
  %type71 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %75, i32 0, i32 6, !dbg !4332
  %76 = load i16, i16* %type71, align 8, !dbg !4332
  %conv72 = sext i16 %76 to i32, !dbg !4329
  %cmp73 = icmp eq i32 %conv72, 2, !dbg !4333
  br i1 %cmp73, label %if.then75, label %if.end140, !dbg !4334

if.then75:                                        ; preds = %if.then70
  call void @llvm.dbg.declare(metadata float* %inpr, metadata !4335, metadata !DIExpression()), !dbg !4337
  %77 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4338
  %mode76 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %77, i32 0, i32 7, !dbg !4340
  %78 = load i32, i32* %mode76, align 4, !dbg !4340
  %and77 = and i32 %78, 128, !dbg !4341
  %tobool78 = icmp ne i32 %and77, 0, !dbg !4341
  br i1 %tobool78, label %if.then79, label %if.else102, !dbg !4342

if.then79:                                        ; preds = %if.then75
  %79 = load float*, float** %lv.addr, align 8, !dbg !4343
  %80 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4346
  %vec80 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %80, i32 0, i32 20, !dbg !4347
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %vec80, i64 0, i64 0, !dbg !4346
  %call82 = call float @dot_v3v3(float* %79, float* %arraydecay81), !dbg !4348
  %cmp83 = fcmp ogt float %call82, 0.000000e+00, !dbg !4349
  br i1 %cmp83, label %if.then85, label %if.else100, !dbg !4350

if.then85:                                        ; preds = %if.then79
  call void @llvm.dbg.declare(metadata [3 x float]* %lvrot, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.declare(metadata float* %x, metadata !4354, metadata !DIExpression()), !dbg !4355
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 0, !dbg !4356
  %81 = load float*, float** %lv.addr, align 8, !dbg !4357
  call void @copy_v3_v3(float* %arraydecay86, float* %81), !dbg !4358
  %82 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4359
  %imat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %82, i32 0, i32 59, !dbg !4360
  %arraydecay87 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !4359
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 0, !dbg !4361
  call void @mul_m3_v3([3 x float]* %arraydecay87, float* %arraydecay88), !dbg !4362
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 0, !dbg !4363
  %83 = load float, float* %arrayidx89, align 4, !dbg !4363
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 2, !dbg !4364
  %84 = load float, float* %arrayidx90, align 4, !dbg !4364
  %div91 = fdiv float %83, %84, !dbg !4365
  %85 = call float @llvm.fabs.f32(float %div91), !dbg !4366
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 1, !dbg !4367
  %86 = load float, float* %arrayidx92, align 4, !dbg !4367
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %lvrot, i64 0, i64 2, !dbg !4368
  %87 = load float, float* %arrayidx93, align 4, !dbg !4368
  %div94 = fdiv float %86, %87, !dbg !4369
  %88 = call float @llvm.fabs.f32(float %div94), !dbg !4370
  %call95 = call float @max_ff(float %85, float %88), !dbg !4371
  store float %call95, float* %x, align 4, !dbg !4372
  %89 = load float, float* %x, align 4, !dbg !4373
  %90 = load float, float* %x, align 4, !dbg !4374
  %mul96 = fmul float %89, %90, !dbg !4375
  %add97 = fadd float 1.000000e+00, %mul96, !dbg !4376
  %call98 = call float @sqrtf(float %add97) #6, !dbg !4377
  %div99 = fdiv float 1.000000e+00, %call98, !dbg !4378
  store float %div99, float* %inpr, align 4, !dbg !4379
  br label %if.end101, !dbg !4380

if.else100:                                       ; preds = %if.then79
  store float 0.000000e+00, float* %inpr, align 4, !dbg !4381
  br label %if.end101

if.end101:                                        ; preds = %if.else100, %if.then85
  br label %if.end117, !dbg !4382

if.else102:                                       ; preds = %if.then75
  %91 = load float*, float** %lv.addr, align 8, !dbg !4383
  %arrayidx103 = getelementptr inbounds float, float* %91, i64 0, !dbg !4383
  %92 = load float, float* %arrayidx103, align 4, !dbg !4383
  %93 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4385
  %vec104 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %93, i32 0, i32 20, !dbg !4386
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %vec104, i64 0, i64 0, !dbg !4385
  %94 = load float, float* %arrayidx105, align 8, !dbg !4385
  %mul106 = fmul float %92, %94, !dbg !4387
  %95 = load float*, float** %lv.addr, align 8, !dbg !4388
  %arrayidx107 = getelementptr inbounds float, float* %95, i64 1, !dbg !4388
  %96 = load float, float* %arrayidx107, align 4, !dbg !4388
  %97 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4389
  %vec108 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %97, i32 0, i32 20, !dbg !4390
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %vec108, i64 0, i64 1, !dbg !4389
  %98 = load float, float* %arrayidx109, align 4, !dbg !4389
  %mul110 = fmul float %96, %98, !dbg !4391
  %add111 = fadd float %mul106, %mul110, !dbg !4392
  %99 = load float*, float** %lv.addr, align 8, !dbg !4393
  %arrayidx112 = getelementptr inbounds float, float* %99, i64 2, !dbg !4393
  %100 = load float, float* %arrayidx112, align 4, !dbg !4393
  %101 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4394
  %vec113 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %101, i32 0, i32 20, !dbg !4395
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %vec113, i64 0, i64 2, !dbg !4394
  %102 = load float, float* %arrayidx114, align 8, !dbg !4394
  %mul115 = fmul float %100, %102, !dbg !4396
  %add116 = fadd float %add111, %mul115, !dbg !4397
  store float %add116, float* %inpr, align 4, !dbg !4398
  br label %if.end117

if.end117:                                        ; preds = %if.else102, %if.end101
  %103 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4399
  %spotsi = getelementptr inbounds %struct.LampRen, %struct.LampRen* %103, i32 0, i32 18, !dbg !4400
  %104 = load float, float* %spotsi, align 8, !dbg !4400
  store float %104, float* %t, align 4, !dbg !4401
  %105 = load float, float* %inpr, align 4, !dbg !4402
  %106 = load float, float* %t, align 4, !dbg !4404
  %cmp118 = fcmp ole float %105, %106, !dbg !4405
  br i1 %cmp118, label %if.then120, label %if.else121, !dbg !4406

if.then120:                                       ; preds = %if.end117
  store float 0.000000e+00, float* %visifac, align 4, !dbg !4407
  br label %if.end139, !dbg !4408

if.else121:                                       ; preds = %if.end117
  %107 = load float, float* %inpr, align 4, !dbg !4409
  %108 = load float, float* %t, align 4, !dbg !4411
  %sub122 = fsub float %107, %108, !dbg !4412
  store float %sub122, float* %t, align 4, !dbg !4413
  %109 = load float, float* %t, align 4, !dbg !4414
  %110 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4416
  %spotbl = getelementptr inbounds %struct.LampRen, %struct.LampRen* %110, i32 0, i32 19, !dbg !4417
  %111 = load float, float* %spotbl, align 4, !dbg !4417
  %cmp123 = fcmp olt float %109, %111, !dbg !4418
  br i1 %cmp123, label %land.lhs.true, label %if.end137, !dbg !4419

land.lhs.true:                                    ; preds = %if.else121
  %112 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4420
  %spotbl125 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %112, i32 0, i32 19, !dbg !4421
  %113 = load float, float* %spotbl125, align 4, !dbg !4421
  %cmp126 = fcmp une float %113, 0.000000e+00, !dbg !4422
  br i1 %cmp126, label %if.then128, label %if.end137, !dbg !4423

if.then128:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %i, metadata !4424, metadata !DIExpression()), !dbg !4426
  %114 = load float, float* %t, align 4, !dbg !4427
  %115 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4428
  %spotbl129 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %115, i32 0, i32 19, !dbg !4429
  %116 = load float, float* %spotbl129, align 4, !dbg !4429
  %div130 = fdiv float %114, %116, !dbg !4430
  store float %div130, float* %i, align 4, !dbg !4426
  %117 = load float, float* %i, align 4, !dbg !4431
  %118 = load float, float* %i, align 4, !dbg !4432
  %mul131 = fmul float %117, %118, !dbg !4433
  store float %mul131, float* %t, align 4, !dbg !4434
  %119 = load float, float* %t, align 4, !dbg !4435
  %mul132 = fmul float 3.000000e+00, %119, !dbg !4436
  %120 = load float, float* %t, align 4, !dbg !4437
  %mul133 = fmul float 2.000000e+00, %120, !dbg !4438
  %121 = load float, float* %i, align 4, !dbg !4439
  %mul134 = fmul float %mul133, %121, !dbg !4440
  %sub135 = fsub float %mul132, %mul134, !dbg !4441
  %122 = load float, float* %inpr, align 4, !dbg !4442
  %mul136 = fmul float %122, %sub135, !dbg !4442
  store float %mul136, float* %inpr, align 4, !dbg !4442
  br label %if.end137, !dbg !4443

if.end137:                                        ; preds = %if.then128, %land.lhs.true, %if.else121
  %123 = load float, float* %inpr, align 4, !dbg !4444
  %124 = load float, float* %visifac, align 4, !dbg !4445
  %mul138 = fmul float %124, %123, !dbg !4445
  store float %mul138, float* %visifac, align 4, !dbg !4445
  br label %if.end139

if.end139:                                        ; preds = %if.end137, %if.then120
  br label %if.end140, !dbg !4446

if.end140:                                        ; preds = %if.end139, %if.then70
  br label %if.end141, !dbg !4447

if.end141:                                        ; preds = %if.end140, %if.end67
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then12
  %125 = load float, float* %visifac, align 4, !dbg !4448
  %cmp143 = fcmp ole float %125, 0x3F50624DE0000000, !dbg !4450
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !4451

if.then145:                                       ; preds = %if.end142
  store float 0.000000e+00, float* %visifac, align 4, !dbg !4452
  br label %if.end146, !dbg !4453

if.end146:                                        ; preds = %if.then145, %if.end142
  %126 = load float, float* %visifac, align 4, !dbg !4454
  store float %126, float* %retval, align 4, !dbg !4455
  br label %return, !dbg !4455

return:                                           ; preds = %if.end146, %if.then
  %127 = load float, float* %retval, align 4, !dbg !4456
  ret float %127, !dbg !4456
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !4457 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4460, metadata !DIExpression()), !dbg !4461
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4464, metadata !DIExpression()), !dbg !4465
  %0 = load float*, float** %a.addr, align 8, !dbg !4466
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4466
  %1 = load float, float* %arrayidx, align 4, !dbg !4466
  %2 = load float*, float** %b.addr, align 8, !dbg !4467
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4467
  %3 = load float, float* %arrayidx1, align 4, !dbg !4467
  %sub = fsub float %1, %3, !dbg !4468
  %4 = load float*, float** %r.addr, align 8, !dbg !4469
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !4469
  store float %sub, float* %arrayidx2, align 4, !dbg !4470
  %5 = load float*, float** %a.addr, align 8, !dbg !4471
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4471
  %6 = load float, float* %arrayidx3, align 4, !dbg !4471
  %7 = load float*, float** %b.addr, align 8, !dbg !4472
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !4472
  %8 = load float, float* %arrayidx4, align 4, !dbg !4472
  %sub5 = fsub float %6, %8, !dbg !4473
  %9 = load float*, float** %r.addr, align 8, !dbg !4474
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !4474
  store float %sub5, float* %arrayidx6, align 4, !dbg !4475
  %10 = load float*, float** %a.addr, align 8, !dbg !4476
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !4476
  %11 = load float, float* %arrayidx7, align 4, !dbg !4476
  %12 = load float*, float** %b.addr, align 8, !dbg !4477
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !4477
  %13 = load float, float* %arrayidx8, align 4, !dbg !4477
  %sub9 = fsub float %11, %13, !dbg !4478
  %14 = load float*, float** %r.addr, align 8, !dbg !4479
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !4479
  store float %sub9, float* %arrayidx10, align 4, !dbg !4480
  ret void, !dbg !4481
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !4482 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  %0 = load float*, float** %a.addr, align 8, !dbg !4487
  %1 = load float*, float** %a.addr, align 8, !dbg !4488
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !4489
  %call1 = call float @sqrtf(float %call) #6, !dbg !4490
  ret float %call1, !dbg !4491
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !4492 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4495, metadata !DIExpression()), !dbg !4496
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4497, metadata !DIExpression()), !dbg !4498
  %0 = load float, float* %f.addr, align 4, !dbg !4499
  %1 = load float*, float** %r.addr, align 8, !dbg !4500
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4500
  %2 = load float, float* %arrayidx, align 4, !dbg !4501
  %mul = fmul float %2, %0, !dbg !4501
  store float %mul, float* %arrayidx, align 4, !dbg !4501
  %3 = load float, float* %f.addr, align 4, !dbg !4502
  %4 = load float*, float** %r.addr, align 8, !dbg !4503
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4503
  %5 = load float, float* %arrayidx1, align 4, !dbg !4504
  %mul2 = fmul float %5, %3, !dbg !4504
  store float %mul2, float* %arrayidx1, align 4, !dbg !4504
  %6 = load float, float* %f.addr, align 4, !dbg !4505
  %7 = load float*, float** %r.addr, align 8, !dbg !4506
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !4506
  %8 = load float, float* %arrayidx3, align 4, !dbg !4507
  %mul4 = fmul float %8, %6, !dbg !4507
  store float %mul4, float* %arrayidx3, align 4, !dbg !4507
  ret void, !dbg !4508
}

declare dso_local float @curvemapping_evaluateF(%struct.CurveMapping*, i32, float) #3

declare dso_local void @mul_m3_v3([3 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !4509 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  %0 = load float, float* %a.addr, align 4, !dbg !4517
  %1 = load float, float* %b.addr, align 4, !dbg !4518
  %cmp = fcmp ogt float %0, %1, !dbg !4519
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4520

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4521
  br label %cond.end, !dbg !4520

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4522
  br label %cond.end, !dbg !4520

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4520
  ret float %cond, !dbg !4523
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @shade_lamp_loop(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !4524 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %color_passes = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  %passflag = alloca i32, align 4
  %neg_alpha = alloca float, align 4
  %go = alloca %struct.GroupObject*, align 8
  %lights = alloca %struct.ListBase*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %sss = alloca [3 x float], align 4
  %col379 = alloca [3 x float], align 4
  %invalpha = alloca float, align 4
  %texfac = alloca float, align 4
  %t = alloca float, align 4
  %result = alloca [3 x float], align 4
  %obcol = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata i32* %color_passes, metadata !4529, metadata !DIExpression()), !dbg !4531
  store i32 67005, i32* %color_passes, align 4, !dbg !4531
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !4532, metadata !DIExpression()), !dbg !4533
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4534
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !4535
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4535
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !4533
  call void @llvm.dbg.declare(metadata i32* %passflag, metadata !4536, metadata !DIExpression()), !dbg !4537
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4538
  %passflag1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 119, !dbg !4539
  %3 = load i32, i32* %passflag1, align 8, !dbg !4539
  store i32 %3, i32* %passflag, align 4, !dbg !4537
  %4 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4540
  %5 = bitcast %struct.ShadeResult* %4 to i8*, !dbg !4541
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 212, i1 false), !dbg !4541
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4542
  %mode = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 21, !dbg !4544
  %7 = load i32, i32* %mode, align 8, !dbg !4544
  %and = and i32 %7, 65536, !dbg !4545
  %tobool = icmp ne i32 %and, 0, !dbg !4545
  br i1 %tobool, label %if.end, label %if.then, !dbg !4546

if.then:                                          ; preds = %entry
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4547
  %alpha = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 49, !dbg !4548
  store float 1.000000e+00, float* %alpha, align 8, !dbg !4549
  br label %if.end, !dbg !4547

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4550
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 51, !dbg !4552
  %10 = load i32, i32* %mode2, align 4, !dbg !4552
  %and3 = and i32 %10, 1024, !dbg !4553
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4553
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4554

if.then5:                                         ; preds = %if.end
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4555
  %12 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4557
  call void @shade_lamp_loop_only_shadow(%struct.ShadeInput* %11, %struct.ShadeResult* %12), !dbg !4558
  br label %return, !dbg !4559

if.end6:                                          ; preds = %if.end
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4560
  %refcol = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 62, !dbg !4561
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %refcol, i64 0, i64 3, !dbg !4560
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !4562
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4563
  %refcol7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 62, !dbg !4564
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %refcol7, i64 0, i64 2, !dbg !4563
  store float 0.000000e+00, float* %arrayidx8, align 8, !dbg !4565
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4566
  %refcol9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 62, !dbg !4567
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %refcol9, i64 0, i64 1, !dbg !4566
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !4568
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4569
  %refcol11 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 62, !dbg !4570
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %refcol11, i64 0, i64 0, !dbg !4569
  store float 0.000000e+00, float* %arrayidx12, align 8, !dbg !4571
  %17 = load i32, i32* %passflag, align 4, !dbg !4572
  %and13 = and i32 %17, 67005, !dbg !4574
  %tobool14 = icmp ne i32 %and13, 0, !dbg !4574
  br i1 %tobool14, label %if.then15, label %if.end185, !dbg !4575

if.then15:                                        ; preds = %if.end6
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4576
  %mode16 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 51, !dbg !4579
  %19 = load i32, i32* %mode16, align 4, !dbg !4579
  %and17 = and i32 %19, 2048, !dbg !4580
  %tobool18 = icmp ne i32 %and17, 0, !dbg !4580
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !4581

if.then19:                                        ; preds = %if.then15
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4582
  %vcol = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 61, !dbg !4584
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %vcol, i64 0, i64 0, !dbg !4582
  %21 = load float, float* %arrayidx20, align 8, !dbg !4582
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4585
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 32, !dbg !4586
  store float %21, float* %r, align 4, !dbg !4587
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4588
  %vcol21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 61, !dbg !4589
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %vcol21, i64 0, i64 1, !dbg !4588
  %24 = load float, float* %arrayidx22, align 4, !dbg !4588
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4590
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 33, !dbg !4591
  store float %24, float* %g, align 8, !dbg !4592
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4593
  %vcol23 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 61, !dbg !4594
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %vcol23, i64 0, i64 2, !dbg !4593
  %27 = load float, float* %arrayidx24, align 8, !dbg !4593
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4595
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 34, !dbg !4596
  store float %27, float* %b, align 4, !dbg !4597
  %29 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4598
  %mode25 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 51, !dbg !4600
  %30 = load i32, i32* %mode25, align 4, !dbg !4600
  %and26 = and i32 %30, 536870912, !dbg !4601
  %tobool27 = icmp ne i32 %and26, 0, !dbg !4601
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !4602

if.then28:                                        ; preds = %if.then19
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4603
  %vcol29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 61, !dbg !4604
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %vcol29, i64 0, i64 3, !dbg !4603
  %32 = load float, float* %arrayidx30, align 4, !dbg !4603
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4605
  %alpha31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 49, !dbg !4606
  store float %32, float* %alpha31, align 8, !dbg !4607
  br label %if.end32, !dbg !4605

if.end32:                                         ; preds = %if.then28, %if.then19
  br label %if.end65, !dbg !4608

if.else:                                          ; preds = %if.then15
  %34 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4609
  %mode33 = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 51, !dbg !4611
  %35 = load i32, i32* %mode33, align 4, !dbg !4611
  %and34 = and i32 %35, 128, !dbg !4612
  %tobool35 = icmp ne i32 %and34, 0, !dbg !4612
  br i1 %tobool35, label %if.then36, label %if.end64, !dbg !4613

if.then36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %neg_alpha, metadata !4614, metadata !DIExpression()), !dbg !4616
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4617
  %vcol37 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 61, !dbg !4618
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %vcol37, i64 0, i64 3, !dbg !4617
  %37 = load float, float* %arrayidx38, align 4, !dbg !4617
  %sub = fsub float 1.000000e+00, %37, !dbg !4619
  store float %sub, float* %neg_alpha, align 4, !dbg !4616
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4620
  %r39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 32, !dbg !4621
  %39 = load float, float* %r39, align 4, !dbg !4621
  %40 = load float, float* %neg_alpha, align 4, !dbg !4622
  %mul = fmul float %39, %40, !dbg !4623
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4624
  %vcol40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 61, !dbg !4625
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %vcol40, i64 0, i64 0, !dbg !4624
  %42 = load float, float* %arrayidx41, align 8, !dbg !4624
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4626
  %vcol42 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 61, !dbg !4627
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %vcol42, i64 0, i64 3, !dbg !4626
  %44 = load float, float* %arrayidx43, align 4, !dbg !4626
  %mul44 = fmul float %42, %44, !dbg !4628
  %add = fadd float %mul, %mul44, !dbg !4629
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4630
  %r45 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 32, !dbg !4631
  store float %add, float* %r45, align 4, !dbg !4632
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4633
  %g46 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 33, !dbg !4634
  %47 = load float, float* %g46, align 8, !dbg !4634
  %48 = load float, float* %neg_alpha, align 4, !dbg !4635
  %mul47 = fmul float %47, %48, !dbg !4636
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4637
  %vcol48 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 61, !dbg !4638
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %vcol48, i64 0, i64 1, !dbg !4637
  %50 = load float, float* %arrayidx49, align 4, !dbg !4637
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4639
  %vcol50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 61, !dbg !4640
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %vcol50, i64 0, i64 3, !dbg !4639
  %52 = load float, float* %arrayidx51, align 4, !dbg !4639
  %mul52 = fmul float %50, %52, !dbg !4641
  %add53 = fadd float %mul47, %mul52, !dbg !4642
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4643
  %g54 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 33, !dbg !4644
  store float %add53, float* %g54, align 8, !dbg !4645
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4646
  %b55 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 34, !dbg !4647
  %55 = load float, float* %b55, align 4, !dbg !4647
  %56 = load float, float* %neg_alpha, align 4, !dbg !4648
  %mul56 = fmul float %55, %56, !dbg !4649
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4650
  %vcol57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 61, !dbg !4651
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %vcol57, i64 0, i64 2, !dbg !4650
  %58 = load float, float* %arrayidx58, align 8, !dbg !4650
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4652
  %vcol59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 61, !dbg !4653
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %vcol59, i64 0, i64 3, !dbg !4652
  %60 = load float, float* %arrayidx60, align 4, !dbg !4652
  %mul61 = fmul float %58, %60, !dbg !4654
  %add62 = fadd float %mul56, %mul61, !dbg !4655
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4656
  %b63 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 34, !dbg !4657
  store float %add62, float* %b63, align 4, !dbg !4658
  br label %if.end64, !dbg !4659

if.end64:                                         ; preds = %if.then36, %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end32
  %62 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4660
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %62, i32 0, i32 90, !dbg !4662
  %63 = load i16, i16* %texco, align 4, !dbg !4662
  %tobool66 = icmp ne i16 %63, 0, !dbg !4660
  br i1 %tobool66, label %if.then67, label %if.end74, !dbg !4663

if.then67:                                        ; preds = %if.end65
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4664
  call void @do_material_tex(%struct.ShadeInput* %64, %struct.Render* @R), !dbg !4666
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4667
  %mode68 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 21, !dbg !4669
  %66 = load i32, i32* %mode68, align 8, !dbg !4669
  %and69 = and i32 %66, 65536, !dbg !4670
  %tobool70 = icmp ne i32 %and69, 0, !dbg !4670
  br i1 %tobool70, label %if.end73, label %if.then71, !dbg !4671

if.then71:                                        ; preds = %if.then67
  %67 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4672
  %alpha72 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %67, i32 0, i32 49, !dbg !4673
  store float 1.000000e+00, float* %alpha72, align 8, !dbg !4674
  br label %if.end73, !dbg !4672

if.end73:                                         ; preds = %if.then71, %if.then67
  br label %if.end74, !dbg !4675

if.end74:                                         ; preds = %if.end73, %if.end65
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4676
  %r75 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 32, !dbg !4677
  %69 = load float, float* %r75, align 4, !dbg !4677
  %70 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4678
  %alpha76 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %70, i32 0, i32 49, !dbg !4679
  %71 = load float, float* %alpha76, align 8, !dbg !4679
  %mul77 = fmul float %69, %71, !dbg !4680
  %72 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4681
  %col = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %72, i32 0, i32 1, !dbg !4682
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4681
  store float %mul77, float* %arrayidx78, align 4, !dbg !4683
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4684
  %g79 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 33, !dbg !4685
  %74 = load float, float* %g79, align 8, !dbg !4685
  %75 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4686
  %alpha80 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %75, i32 0, i32 49, !dbg !4687
  %76 = load float, float* %alpha80, align 8, !dbg !4687
  %mul81 = fmul float %74, %76, !dbg !4688
  %77 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4689
  %col82 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %77, i32 0, i32 1, !dbg !4690
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %col82, i64 0, i64 1, !dbg !4689
  store float %mul81, float* %arrayidx83, align 4, !dbg !4691
  %78 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4692
  %b84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %78, i32 0, i32 34, !dbg !4693
  %79 = load float, float* %b84, align 4, !dbg !4693
  %80 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4694
  %alpha85 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %80, i32 0, i32 49, !dbg !4695
  %81 = load float, float* %alpha85, align 8, !dbg !4695
  %mul86 = fmul float %79, %81, !dbg !4696
  %82 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4697
  %col87 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %82, i32 0, i32 1, !dbg !4698
  %arrayidx88 = getelementptr inbounds [4 x float], [4 x float]* %col87, i64 0, i64 2, !dbg !4697
  store float %mul86, float* %arrayidx88, align 4, !dbg !4699
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4700
  %alpha89 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %83, i32 0, i32 49, !dbg !4701
  %84 = load float, float* %alpha89, align 8, !dbg !4701
  %85 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4702
  %col90 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %85, i32 0, i32 1, !dbg !4703
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %col90, i64 0, i64 3, !dbg !4702
  store float %84, float* %arrayidx91, align 4, !dbg !4704
  %86 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4705
  %sss_flag = getelementptr inbounds %struct.Material, %struct.Material* %86, i32 0, i32 123, !dbg !4707
  %87 = load i16, i16* %sss_flag, align 4, !dbg !4707
  %conv = sext i16 %87 to i32, !dbg !4705
  %and92 = and i32 %conv, 1, !dbg !4708
  %tobool93 = icmp ne i32 %and92, 0, !dbg !4708
  br i1 %tobool93, label %land.lhs.true, label %if.end184, !dbg !4709

land.lhs.true:                                    ; preds = %if.end74
  %88 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4710
  %call = call i32 @sss_pass_done(%struct.Render* @R, %struct.Material* %88), !dbg !4711
  %tobool94 = icmp ne i32 %call, 0, !dbg !4711
  br i1 %tobool94, label %if.end184, label %if.then95, !dbg !4712

if.then95:                                        ; preds = %land.lhs.true
  %89 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4713
  %sss_texfac = getelementptr inbounds %struct.Material, %struct.Material* %89, i32 0, i32 120, !dbg !4716
  %90 = load float, float* %sss_texfac, align 8, !dbg !4716
  %cmp = fcmp oeq float %90, 0.000000e+00, !dbg !4717
  br i1 %cmp, label %if.then97, label %if.else110, !dbg !4718

if.then97:                                        ; preds = %if.then95
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4719
  %alpha98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %91, i32 0, i32 49, !dbg !4721
  store float 1.000000e+00, float* %alpha98, align 8, !dbg !4722
  %92 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4723
  %b99 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %92, i32 0, i32 34, !dbg !4724
  store float 1.000000e+00, float* %b99, align 4, !dbg !4725
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4726
  %g100 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 33, !dbg !4727
  store float 1.000000e+00, float* %g100, align 8, !dbg !4728
  %94 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4729
  %r101 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %94, i32 0, i32 32, !dbg !4730
  store float 1.000000e+00, float* %r101, align 4, !dbg !4731
  %95 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4732
  %col102 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %95, i32 0, i32 1, !dbg !4733
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %col102, i64 0, i64 3, !dbg !4732
  store float 1.000000e+00, float* %arrayidx103, align 4, !dbg !4734
  %96 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4735
  %col104 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %96, i32 0, i32 1, !dbg !4736
  %arrayidx105 = getelementptr inbounds [4 x float], [4 x float]* %col104, i64 0, i64 2, !dbg !4735
  store float 1.000000e+00, float* %arrayidx105, align 4, !dbg !4737
  %97 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4738
  %col106 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %97, i32 0, i32 1, !dbg !4739
  %arrayidx107 = getelementptr inbounds [4 x float], [4 x float]* %col106, i64 0, i64 1, !dbg !4738
  store float 1.000000e+00, float* %arrayidx107, align 4, !dbg !4740
  %98 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4741
  %col108 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %98, i32 0, i32 1, !dbg !4742
  %arrayidx109 = getelementptr inbounds [4 x float], [4 x float]* %col108, i64 0, i64 0, !dbg !4741
  store float 1.000000e+00, float* %arrayidx109, align 4, !dbg !4743
  br label %if.end183, !dbg !4744

if.else110:                                       ; preds = %if.then95
  %99 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4745
  %r111 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %99, i32 0, i32 32, !dbg !4747
  %100 = load float, float* %r111, align 4, !dbg !4747
  %call112 = call float @max_ff(float %100, float 0.000000e+00), !dbg !4748
  %conv113 = fpext float %call112 to double, !dbg !4748
  %101 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4749
  %sss_texfac114 = getelementptr inbounds %struct.Material, %struct.Material* %101, i32 0, i32 120, !dbg !4750
  %102 = load float, float* %sss_texfac114, align 8, !dbg !4750
  %conv115 = fpext float %102 to double, !dbg !4749
  %call116 = call double @pow(double %conv113, double %conv115) #6, !dbg !4751
  %conv117 = fptrunc double %call116 to float, !dbg !4751
  %103 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4752
  %r118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %103, i32 0, i32 32, !dbg !4753
  store float %conv117, float* %r118, align 4, !dbg !4754
  %104 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4755
  %g119 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %104, i32 0, i32 33, !dbg !4756
  %105 = load float, float* %g119, align 8, !dbg !4756
  %call120 = call float @max_ff(float %105, float 0.000000e+00), !dbg !4757
  %conv121 = fpext float %call120 to double, !dbg !4757
  %106 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4758
  %sss_texfac122 = getelementptr inbounds %struct.Material, %struct.Material* %106, i32 0, i32 120, !dbg !4759
  %107 = load float, float* %sss_texfac122, align 8, !dbg !4759
  %conv123 = fpext float %107 to double, !dbg !4758
  %call124 = call double @pow(double %conv121, double %conv123) #6, !dbg !4760
  %conv125 = fptrunc double %call124 to float, !dbg !4760
  %108 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4761
  %g126 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %108, i32 0, i32 33, !dbg !4762
  store float %conv125, float* %g126, align 8, !dbg !4763
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4764
  %b127 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 34, !dbg !4765
  %110 = load float, float* %b127, align 4, !dbg !4765
  %call128 = call float @max_ff(float %110, float 0.000000e+00), !dbg !4766
  %conv129 = fpext float %call128 to double, !dbg !4766
  %111 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4767
  %sss_texfac130 = getelementptr inbounds %struct.Material, %struct.Material* %111, i32 0, i32 120, !dbg !4768
  %112 = load float, float* %sss_texfac130, align 8, !dbg !4768
  %conv131 = fpext float %112 to double, !dbg !4767
  %call132 = call double @pow(double %conv129, double %conv131) #6, !dbg !4769
  %conv133 = fptrunc double %call132 to float, !dbg !4769
  %113 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4770
  %b134 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %113, i32 0, i32 34, !dbg !4771
  store float %conv133, float* %b134, align 4, !dbg !4772
  %114 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4773
  %alpha135 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %114, i32 0, i32 49, !dbg !4774
  %115 = load float, float* %alpha135, align 8, !dbg !4774
  %call136 = call float @max_ff(float %115, float 0.000000e+00), !dbg !4775
  %conv137 = fpext float %call136 to double, !dbg !4775
  %116 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4776
  %sss_texfac138 = getelementptr inbounds %struct.Material, %struct.Material* %116, i32 0, i32 120, !dbg !4777
  %117 = load float, float* %sss_texfac138, align 8, !dbg !4777
  %conv139 = fpext float %117 to double, !dbg !4776
  %call140 = call double @pow(double %conv137, double %conv139) #6, !dbg !4778
  %conv141 = fptrunc double %call140 to float, !dbg !4778
  %118 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4779
  %alpha142 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %118, i32 0, i32 49, !dbg !4780
  store float %conv141, float* %alpha142, align 8, !dbg !4781
  %119 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4782
  %col143 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %119, i32 0, i32 1, !dbg !4783
  %arrayidx144 = getelementptr inbounds [4 x float], [4 x float]* %col143, i64 0, i64 0, !dbg !4782
  %120 = load float, float* %arrayidx144, align 4, !dbg !4782
  %call145 = call float @max_ff(float %120, float 0.000000e+00), !dbg !4784
  %conv146 = fpext float %call145 to double, !dbg !4784
  %121 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4785
  %sss_texfac147 = getelementptr inbounds %struct.Material, %struct.Material* %121, i32 0, i32 120, !dbg !4786
  %122 = load float, float* %sss_texfac147, align 8, !dbg !4786
  %conv148 = fpext float %122 to double, !dbg !4785
  %call149 = call double @pow(double %conv146, double %conv148) #6, !dbg !4787
  %conv150 = fptrunc double %call149 to float, !dbg !4787
  %123 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4788
  %col151 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %123, i32 0, i32 1, !dbg !4789
  %arrayidx152 = getelementptr inbounds [4 x float], [4 x float]* %col151, i64 0, i64 0, !dbg !4788
  store float %conv150, float* %arrayidx152, align 4, !dbg !4790
  %124 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4791
  %col153 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %124, i32 0, i32 1, !dbg !4792
  %arrayidx154 = getelementptr inbounds [4 x float], [4 x float]* %col153, i64 0, i64 1, !dbg !4791
  %125 = load float, float* %arrayidx154, align 4, !dbg !4791
  %call155 = call float @max_ff(float %125, float 0.000000e+00), !dbg !4793
  %conv156 = fpext float %call155 to double, !dbg !4793
  %126 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4794
  %sss_texfac157 = getelementptr inbounds %struct.Material, %struct.Material* %126, i32 0, i32 120, !dbg !4795
  %127 = load float, float* %sss_texfac157, align 8, !dbg !4795
  %conv158 = fpext float %127 to double, !dbg !4794
  %call159 = call double @pow(double %conv156, double %conv158) #6, !dbg !4796
  %conv160 = fptrunc double %call159 to float, !dbg !4796
  %128 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4797
  %col161 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %128, i32 0, i32 1, !dbg !4798
  %arrayidx162 = getelementptr inbounds [4 x float], [4 x float]* %col161, i64 0, i64 1, !dbg !4797
  store float %conv160, float* %arrayidx162, align 4, !dbg !4799
  %129 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4800
  %col163 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %129, i32 0, i32 1, !dbg !4801
  %arrayidx164 = getelementptr inbounds [4 x float], [4 x float]* %col163, i64 0, i64 2, !dbg !4800
  %130 = load float, float* %arrayidx164, align 4, !dbg !4800
  %call165 = call float @max_ff(float %130, float 0.000000e+00), !dbg !4802
  %conv166 = fpext float %call165 to double, !dbg !4802
  %131 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4803
  %sss_texfac167 = getelementptr inbounds %struct.Material, %struct.Material* %131, i32 0, i32 120, !dbg !4804
  %132 = load float, float* %sss_texfac167, align 8, !dbg !4804
  %conv168 = fpext float %132 to double, !dbg !4803
  %call169 = call double @pow(double %conv166, double %conv168) #6, !dbg !4805
  %conv170 = fptrunc double %call169 to float, !dbg !4805
  %133 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4806
  %col171 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %133, i32 0, i32 1, !dbg !4807
  %arrayidx172 = getelementptr inbounds [4 x float], [4 x float]* %col171, i64 0, i64 2, !dbg !4806
  store float %conv170, float* %arrayidx172, align 4, !dbg !4808
  %134 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4809
  %col173 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %134, i32 0, i32 1, !dbg !4810
  %arrayidx174 = getelementptr inbounds [4 x float], [4 x float]* %col173, i64 0, i64 3, !dbg !4809
  %135 = load float, float* %arrayidx174, align 4, !dbg !4809
  %call175 = call float @max_ff(float %135, float 0.000000e+00), !dbg !4811
  %conv176 = fpext float %call175 to double, !dbg !4811
  %136 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4812
  %sss_texfac177 = getelementptr inbounds %struct.Material, %struct.Material* %136, i32 0, i32 120, !dbg !4813
  %137 = load float, float* %sss_texfac177, align 8, !dbg !4813
  %conv178 = fpext float %137 to double, !dbg !4812
  %call179 = call double @pow(double %conv176, double %conv178) #6, !dbg !4814
  %conv180 = fptrunc double %call179 to float, !dbg !4814
  %138 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4815
  %col181 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %138, i32 0, i32 1, !dbg !4816
  %arrayidx182 = getelementptr inbounds [4 x float], [4 x float]* %col181, i64 0, i64 3, !dbg !4815
  store float %conv180, float* %arrayidx182, align 4, !dbg !4817
  br label %if.end183

if.end183:                                        ; preds = %if.else110, %if.then97
  br label %if.end184, !dbg !4818

if.end184:                                        ; preds = %if.end183, %land.lhs.true, %if.end74
  br label %if.end185, !dbg !4819

if.end185:                                        ; preds = %if.end184, %if.end6
  %139 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4820
  %mode186 = getelementptr inbounds %struct.Material, %struct.Material* %139, i32 0, i32 51, !dbg !4822
  %140 = load i32, i32* %mode186, align 4, !dbg !4822
  %and187 = and i32 %140, 4, !dbg !4823
  %tobool188 = icmp ne i32 %and187, 0, !dbg !4823
  br i1 %tobool188, label %if.then189, label %if.end200, !dbg !4824

if.then189:                                       ; preds = %if.end185
  %141 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4825
  %r190 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %141, i32 0, i32 32, !dbg !4827
  %142 = load float, float* %r190, align 4, !dbg !4827
  %143 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4828
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %143, i32 0, i32 0, !dbg !4829
  %arrayidx191 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !4828
  store float %142, float* %arrayidx191, align 4, !dbg !4830
  %144 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4831
  %g192 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %144, i32 0, i32 33, !dbg !4832
  %145 = load float, float* %g192, align 8, !dbg !4832
  %146 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4833
  %combined193 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %146, i32 0, i32 0, !dbg !4834
  %arrayidx194 = getelementptr inbounds [4 x float], [4 x float]* %combined193, i64 0, i64 1, !dbg !4833
  store float %145, float* %arrayidx194, align 4, !dbg !4835
  %147 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4836
  %b195 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %147, i32 0, i32 34, !dbg !4837
  %148 = load float, float* %b195, align 4, !dbg !4837
  %149 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4838
  %combined196 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %149, i32 0, i32 0, !dbg !4839
  %arrayidx197 = getelementptr inbounds [4 x float], [4 x float]* %combined196, i64 0, i64 2, !dbg !4838
  store float %148, float* %arrayidx197, align 4, !dbg !4840
  %150 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4841
  %alpha198 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %150, i32 0, i32 49, !dbg !4842
  %151 = load float, float* %alpha198, align 8, !dbg !4842
  %152 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4843
  %alpha199 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %152, i32 0, i32 2, !dbg !4844
  store float %151, float* %alpha199, align 4, !dbg !4845
  br label %return, !dbg !4846

if.end200:                                        ; preds = %if.end185
  %153 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4847
  %mode201 = getelementptr inbounds %struct.Material, %struct.Material* %153, i32 0, i32 51, !dbg !4849
  %154 = load i32, i32* %mode201, align 4, !dbg !4849
  %and202 = and i32 %154, 144, !dbg !4850
  %cmp203 = icmp eq i32 %and202, 16, !dbg !4851
  br i1 %cmp203, label %if.then205, label %if.else238, !dbg !4852

if.then205:                                       ; preds = %if.end200
  %155 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4853
  %r206 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %155, i32 0, i32 32, !dbg !4855
  %156 = load float, float* %r206, align 4, !dbg !4855
  %157 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4856
  %emit = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %157, i32 0, i32 45, !dbg !4857
  %158 = load float, float* %emit, align 8, !dbg !4857
  %159 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4858
  %vcol207 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %159, i32 0, i32 61, !dbg !4859
  %arrayidx208 = getelementptr inbounds [4 x float], [4 x float]* %vcol207, i64 0, i64 0, !dbg !4858
  %160 = load float, float* %arrayidx208, align 8, !dbg !4858
  %161 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4860
  %vcol209 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %161, i32 0, i32 61, !dbg !4861
  %arrayidx210 = getelementptr inbounds [4 x float], [4 x float]* %vcol209, i64 0, i64 3, !dbg !4860
  %162 = load float, float* %arrayidx210, align 4, !dbg !4860
  %mul211 = fmul float %160, %162, !dbg !4862
  %add212 = fadd float %158, %mul211, !dbg !4863
  %mul213 = fmul float %156, %add212, !dbg !4864
  %163 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4865
  %emit214 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %163, i32 0, i32 5, !dbg !4866
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %emit214, i64 0, i64 0, !dbg !4865
  store float %mul213, float* %arrayidx215, align 4, !dbg !4867
  %164 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4868
  %g216 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %164, i32 0, i32 33, !dbg !4869
  %165 = load float, float* %g216, align 8, !dbg !4869
  %166 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4870
  %emit217 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %166, i32 0, i32 45, !dbg !4871
  %167 = load float, float* %emit217, align 8, !dbg !4871
  %168 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4872
  %vcol218 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %168, i32 0, i32 61, !dbg !4873
  %arrayidx219 = getelementptr inbounds [4 x float], [4 x float]* %vcol218, i64 0, i64 1, !dbg !4872
  %169 = load float, float* %arrayidx219, align 4, !dbg !4872
  %170 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4874
  %vcol220 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %170, i32 0, i32 61, !dbg !4875
  %arrayidx221 = getelementptr inbounds [4 x float], [4 x float]* %vcol220, i64 0, i64 3, !dbg !4874
  %171 = load float, float* %arrayidx221, align 4, !dbg !4874
  %mul222 = fmul float %169, %171, !dbg !4876
  %add223 = fadd float %167, %mul222, !dbg !4877
  %mul224 = fmul float %165, %add223, !dbg !4878
  %172 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4879
  %emit225 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %172, i32 0, i32 5, !dbg !4880
  %arrayidx226 = getelementptr inbounds [3 x float], [3 x float]* %emit225, i64 0, i64 1, !dbg !4879
  store float %mul224, float* %arrayidx226, align 4, !dbg !4881
  %173 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4882
  %b227 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %173, i32 0, i32 34, !dbg !4883
  %174 = load float, float* %b227, align 4, !dbg !4883
  %175 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4884
  %emit228 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %175, i32 0, i32 45, !dbg !4885
  %176 = load float, float* %emit228, align 8, !dbg !4885
  %177 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4886
  %vcol229 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %177, i32 0, i32 61, !dbg !4887
  %arrayidx230 = getelementptr inbounds [4 x float], [4 x float]* %vcol229, i64 0, i64 2, !dbg !4886
  %178 = load float, float* %arrayidx230, align 8, !dbg !4886
  %179 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4888
  %vcol231 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %179, i32 0, i32 61, !dbg !4889
  %arrayidx232 = getelementptr inbounds [4 x float], [4 x float]* %vcol231, i64 0, i64 3, !dbg !4888
  %180 = load float, float* %arrayidx232, align 4, !dbg !4888
  %mul233 = fmul float %178, %180, !dbg !4890
  %add234 = fadd float %176, %mul233, !dbg !4891
  %mul235 = fmul float %174, %add234, !dbg !4892
  %181 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4893
  %emit236 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %181, i32 0, i32 5, !dbg !4894
  %arrayidx237 = getelementptr inbounds [3 x float], [3 x float]* %emit236, i64 0, i64 2, !dbg !4893
  store float %mul235, float* %arrayidx237, align 4, !dbg !4895
  br label %if.end254, !dbg !4896

if.else238:                                       ; preds = %if.end200
  %182 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4897
  %r239 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %182, i32 0, i32 32, !dbg !4899
  %183 = load float, float* %r239, align 4, !dbg !4899
  %184 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4900
  %emit240 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %184, i32 0, i32 45, !dbg !4901
  %185 = load float, float* %emit240, align 8, !dbg !4901
  %mul241 = fmul float %183, %185, !dbg !4902
  %186 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4903
  %emit242 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %186, i32 0, i32 5, !dbg !4904
  %arrayidx243 = getelementptr inbounds [3 x float], [3 x float]* %emit242, i64 0, i64 0, !dbg !4903
  store float %mul241, float* %arrayidx243, align 4, !dbg !4905
  %187 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4906
  %g244 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %187, i32 0, i32 33, !dbg !4907
  %188 = load float, float* %g244, align 8, !dbg !4907
  %189 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4908
  %emit245 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %189, i32 0, i32 45, !dbg !4909
  %190 = load float, float* %emit245, align 8, !dbg !4909
  %mul246 = fmul float %188, %190, !dbg !4910
  %191 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4911
  %emit247 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %191, i32 0, i32 5, !dbg !4912
  %arrayidx248 = getelementptr inbounds [3 x float], [3 x float]* %emit247, i64 0, i64 1, !dbg !4911
  store float %mul246, float* %arrayidx248, align 4, !dbg !4913
  %192 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4914
  %b249 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %192, i32 0, i32 34, !dbg !4915
  %193 = load float, float* %b249, align 4, !dbg !4915
  %194 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4916
  %emit250 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %194, i32 0, i32 45, !dbg !4917
  %195 = load float, float* %emit250, align 8, !dbg !4917
  %mul251 = fmul float %193, %195, !dbg !4918
  %196 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4919
  %emit252 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %196, i32 0, i32 5, !dbg !4920
  %arrayidx253 = getelementptr inbounds [3 x float], [3 x float]* %emit252, i64 0, i64 2, !dbg !4919
  store float %mul251, float* %arrayidx253, align 4, !dbg !4921
  br label %if.end254

if.end254:                                        ; preds = %if.else238, %if.then205
  %197 = load i32, i32* %passflag, align 4, !dbg !4922
  %and255 = and i32 %197, 1, !dbg !4924
  %tobool256 = icmp ne i32 %and255, 0, !dbg !4924
  br i1 %tobool256, label %land.lhs.true257, label %lor.lhs.false, !dbg !4925

land.lhs.true257:                                 ; preds = %if.end254
  %198 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4926
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %198, i32 0, i32 120, !dbg !4927
  %199 = load i32, i32* %combinedflag, align 4, !dbg !4927
  %and258 = and i32 %199, 139328, !dbg !4928
  %tobool259 = icmp ne i32 %and258, 0, !dbg !4928
  br i1 %tobool259, label %if.then262, label %lor.lhs.false, !dbg !4929

lor.lhs.false:                                    ; preds = %land.lhs.true257, %if.end254
  %200 = load i32, i32* %passflag, align 4, !dbg !4930
  %and260 = and i32 %200, 139328, !dbg !4931
  %tobool261 = icmp ne i32 %and260, 0, !dbg !4931
  br i1 %tobool261, label %if.then262, label %if.end295, !dbg !4932

if.then262:                                       ; preds = %lor.lhs.false, %land.lhs.true257
  %201 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !4933
  %conv263 = sext i16 %201 to i32, !dbg !4936
  %and264 = and i32 %conv263, 208, !dbg !4937
  %tobool265 = icmp ne i32 %and264, 0, !dbg !4937
  br i1 %tobool265, label %land.lhs.true266, label %if.else283, !dbg !4938

land.lhs.true266:                                 ; preds = %if.then262
  %202 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !4939
  %and267 = and i32 %202, 2, !dbg !4940
  %tobool268 = icmp ne i32 %and267, 0, !dbg !4940
  br i1 %tobool268, label %if.then269, label %if.else283, !dbg !4941

if.then269:                                       ; preds = %land.lhs.true266
  %203 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4942
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %203, i32 0, i32 108, !dbg !4945
  %204 = load i32, i32* %depth, align 8, !dbg !4945
  %tobool270 = icmp ne i32 %204, 0, !dbg !4942
  br i1 %tobool270, label %if.then273, label %lor.lhs.false271, !dbg !4946

lor.lhs.false271:                                 ; preds = %if.then269
  %205 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4947
  %volume_depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %205, i32 0, i32 109, !dbg !4948
  %206 = load i32, i32* %volume_depth, align 4, !dbg !4948
  %tobool272 = icmp ne i32 %206, 0, !dbg !4947
  br i1 %tobool272, label %if.then273, label %if.end274, !dbg !4949

if.then273:                                       ; preds = %lor.lhs.false271, %if.then269
  %207 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4950
  call void @ambient_occlusion(%struct.ShadeInput* %207), !dbg !4951
  br label %if.end274, !dbg !4951

if.end274:                                        ; preds = %if.then273, %lor.lhs.false271
  %208 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4952
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %208, i32 0, i32 10, !dbg !4953
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !4952
  %209 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4954
  %ao275 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %209, i32 0, i32 100, !dbg !4955
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %ao275, i64 0, i64 0, !dbg !4954
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay276), !dbg !4956
  %210 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4957
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %210, i32 0, i32 11, !dbg !4958
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !4957
  %211 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4959
  %env278 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %211, i32 0, i32 102, !dbg !4960
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %env278, i64 0, i64 0, !dbg !4959
  call void @copy_v3_v3(float* %arraydecay277, float* %arraydecay279), !dbg !4961
  %212 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4962
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %212, i32 0, i32 12, !dbg !4963
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !4962
  %213 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4964
  %indirect281 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %213, i32 0, i32 101, !dbg !4965
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %indirect281, i64 0, i64 0, !dbg !4964
  call void @copy_v3_v3(float* %arraydecay280, float* %arraydecay282), !dbg !4966
  br label %if.end294, !dbg !4967

if.else283:                                       ; preds = %land.lhs.true266, %if.then262
  %214 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4968
  %ao284 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %214, i32 0, i32 10, !dbg !4970
  %arrayidx285 = getelementptr inbounds [3 x float], [3 x float]* %ao284, i64 0, i64 2, !dbg !4968
  store float 1.000000e+00, float* %arrayidx285, align 4, !dbg !4971
  %215 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4972
  %ao286 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %215, i32 0, i32 10, !dbg !4973
  %arrayidx287 = getelementptr inbounds [3 x float], [3 x float]* %ao286, i64 0, i64 1, !dbg !4972
  store float 1.000000e+00, float* %arrayidx287, align 4, !dbg !4974
  %216 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4975
  %ao288 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %216, i32 0, i32 10, !dbg !4976
  %arrayidx289 = getelementptr inbounds [3 x float], [3 x float]* %ao288, i64 0, i64 0, !dbg !4975
  store float 1.000000e+00, float* %arrayidx289, align 4, !dbg !4977
  %217 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4978
  %env290 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %217, i32 0, i32 11, !dbg !4979
  %arraydecay291 = getelementptr inbounds [3 x float], [3 x float]* %env290, i64 0, i64 0, !dbg !4978
  call void @zero_v3(float* %arraydecay291), !dbg !4980
  %218 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !4981
  %indirect292 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %218, i32 0, i32 12, !dbg !4982
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %indirect292, i64 0, i64 0, !dbg !4981
  call void @zero_v3(float* %arraydecay293), !dbg !4983
  br label %if.end294

if.end294:                                        ; preds = %if.else283, %if.end274
  br label %if.end295, !dbg !4984

if.end295:                                        ; preds = %if.end294, %lor.lhs.false
  %219 = load i32, i32* %passflag, align 4, !dbg !4985
  %and296 = and i32 %219, 57, !dbg !4987
  %tobool297 = icmp ne i32 %and296, 0, !dbg !4987
  br i1 %tobool297, label %if.then298, label %if.end592, !dbg !4988

if.then298:                                       ; preds = %if.end295
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !4989, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lights, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !4994, metadata !DIExpression()), !dbg !4995
  %220 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4996
  %call299 = call %struct.ListBase* @get_lights(%struct.ShadeInput* %220), !dbg !4997
  store %struct.ListBase* %call299, %struct.ListBase** %lights, align 8, !dbg !4998
  %221 = load %struct.ListBase*, %struct.ListBase** %lights, align 8, !dbg !4999
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %221, i32 0, i32 0, !dbg !5001
  %222 = load i8*, i8** %first, align 8, !dbg !5001
  %223 = bitcast i8* %222 to %struct.GroupObject*, !dbg !4999
  store %struct.GroupObject* %223, %struct.GroupObject** %go, align 8, !dbg !5002
  br label %for.cond, !dbg !5003

for.cond:                                         ; preds = %for.inc, %if.then298
  %224 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5004
  %tobool300 = icmp ne %struct.GroupObject* %224, null, !dbg !5006
  br i1 %tobool300, label %for.body, label %for.end, !dbg !5006

for.body:                                         ; preds = %for.cond
  %225 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5007
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %225, i32 0, i32 3, !dbg !5009
  %226 = load i8*, i8** %lampren, align 8, !dbg !5009
  %227 = bitcast i8* %226 to %struct.LampRen*, !dbg !5007
  store %struct.LampRen* %227, %struct.LampRen** %lar, align 8, !dbg !5010
  %228 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5011
  %cmp301 = icmp eq %struct.LampRen* %228, null, !dbg !5013
  br i1 %cmp301, label %if.then303, label %if.end304, !dbg !5014

if.then303:                                       ; preds = %for.body
  br label %for.inc, !dbg !5015

if.end304:                                        ; preds = %for.body
  %229 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5016
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %229, i32 0, i32 6, !dbg !5018
  %230 = load i16, i16* %type, align 8, !dbg !5018
  %conv305 = sext i16 %230 to i32, !dbg !5016
  %cmp306 = icmp eq i32 %conv305, 5, !dbg !5019
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !5020

if.then308:                                       ; preds = %if.end304
  br label %for.inc, !dbg !5021

if.end309:                                        ; preds = %if.end304
  %231 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5022
  %mode310 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %231, i32 0, i32 7, !dbg !5024
  %232 = load i32, i32* %mode310, align 4, !dbg !5024
  %and311 = and i32 %232, 4, !dbg !5025
  %tobool312 = icmp ne i32 %and311, 0, !dbg !5025
  br i1 %tobool312, label %if.then313, label %if.end320, !dbg !5026

if.then313:                                       ; preds = %if.end309
  %233 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5027
  %lay = getelementptr inbounds %struct.LampRen, %struct.LampRen* %233, i32 0, i32 17, !dbg !5029
  %234 = load i32, i32* %lay, align 4, !dbg !5029
  %235 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5030
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %235, i32 0, i32 3, !dbg !5031
  %236 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5031
  %lay314 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %236, i32 0, i32 7, !dbg !5032
  %237 = load i32, i32* %lay314, align 8, !dbg !5032
  %and315 = and i32 %234, %237, !dbg !5033
  %cmp316 = icmp eq i32 %and315, 0, !dbg !5034
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !5035

if.then318:                                       ; preds = %if.then313
  br label %for.inc, !dbg !5036

if.end319:                                        ; preds = %if.then313
  br label %if.end320, !dbg !5037

if.end320:                                        ; preds = %if.end319, %if.end309
  %238 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5038
  %lay321 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %238, i32 0, i32 17, !dbg !5040
  %239 = load i32, i32* %lay321, align 4, !dbg !5040
  %240 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5041
  %lay322 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %240, i32 0, i32 117, !dbg !5042
  %241 = load i32, i32* %lay322, align 8, !dbg !5042
  %and323 = and i32 %239, %241, !dbg !5043
  %cmp324 = icmp eq i32 %and323, 0, !dbg !5044
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !5045

if.then326:                                       ; preds = %if.end320
  br label %for.inc, !dbg !5046

if.end327:                                        ; preds = %if.end320
  %242 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5047
  %243 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5048
  %244 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5049
  %245 = load i32, i32* %passflag, align 4, !dbg !5050
  call void @shade_one_light(%struct.LampRen* %242, %struct.ShadeInput* %243, %struct.ShadeResult* %244, i32 %245), !dbg !5051
  br label %for.inc, !dbg !5052

for.inc:                                          ; preds = %if.end327, %if.then326, %if.then318, %if.then308, %if.then303
  %246 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5053
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %246, i32 0, i32 0, !dbg !5054
  %247 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !5054
  store %struct.GroupObject* %247, %struct.GroupObject** %go, align 8, !dbg !5055
  br label %for.cond, !dbg !5056, !llvm.loop !5057

for.end:                                          ; preds = %for.cond
  %248 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5059
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %248, i32 0, i32 8, !dbg !5061
  %arrayidx328 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !5059
  %249 = load float, float* %arrayidx328, align 4, !dbg !5059
  %cmp329 = fcmp olt float %249, 0.000000e+00, !dbg !5062
  br i1 %cmp329, label %if.then331, label %if.end334, !dbg !5063

if.then331:                                       ; preds = %for.end
  %250 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5064
  %spec332 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %250, i32 0, i32 8, !dbg !5065
  %arrayidx333 = getelementptr inbounds [3 x float], [3 x float]* %spec332, i64 0, i64 0, !dbg !5064
  store float 0.000000e+00, float* %arrayidx333, align 4, !dbg !5066
  br label %if.end334, !dbg !5064

if.end334:                                        ; preds = %if.then331, %for.end
  %251 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5067
  %spec335 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %251, i32 0, i32 8, !dbg !5069
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %spec335, i64 0, i64 1, !dbg !5067
  %252 = load float, float* %arrayidx336, align 4, !dbg !5067
  %cmp337 = fcmp olt float %252, 0.000000e+00, !dbg !5070
  br i1 %cmp337, label %if.then339, label %if.end342, !dbg !5071

if.then339:                                       ; preds = %if.end334
  %253 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5072
  %spec340 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %253, i32 0, i32 8, !dbg !5073
  %arrayidx341 = getelementptr inbounds [3 x float], [3 x float]* %spec340, i64 0, i64 1, !dbg !5072
  store float 0.000000e+00, float* %arrayidx341, align 4, !dbg !5074
  br label %if.end342, !dbg !5072

if.end342:                                        ; preds = %if.then339, %if.end334
  %254 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5075
  %spec343 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %254, i32 0, i32 8, !dbg !5077
  %arrayidx344 = getelementptr inbounds [3 x float], [3 x float]* %spec343, i64 0, i64 2, !dbg !5075
  %255 = load float, float* %arrayidx344, align 4, !dbg !5075
  %cmp345 = fcmp olt float %255, 0.000000e+00, !dbg !5078
  br i1 %cmp345, label %if.then347, label %if.end350, !dbg !5079

if.then347:                                       ; preds = %if.end342
  %256 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5080
  %spec348 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %256, i32 0, i32 8, !dbg !5081
  %arrayidx349 = getelementptr inbounds [3 x float], [3 x float]* %spec348, i64 0, i64 2, !dbg !5080
  store float 0.000000e+00, float* %arrayidx349, align 4, !dbg !5082
  br label %if.end350, !dbg !5080

if.end350:                                        ; preds = %if.then347, %if.end342
  %257 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5083
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %257, i32 0, i32 9, !dbg !5085
  %arrayidx351 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !5083
  %258 = load float, float* %arrayidx351, align 4, !dbg !5083
  %cmp352 = fcmp olt float %258, 0.000000e+00, !dbg !5086
  br i1 %cmp352, label %if.then354, label %if.end357, !dbg !5087

if.then354:                                       ; preds = %if.end350
  %259 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5088
  %shad355 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %259, i32 0, i32 9, !dbg !5089
  %arrayidx356 = getelementptr inbounds [4 x float], [4 x float]* %shad355, i64 0, i64 0, !dbg !5088
  store float 0.000000e+00, float* %arrayidx356, align 4, !dbg !5090
  br label %if.end357, !dbg !5088

if.end357:                                        ; preds = %if.then354, %if.end350
  %260 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5091
  %shad358 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %260, i32 0, i32 9, !dbg !5093
  %arrayidx359 = getelementptr inbounds [4 x float], [4 x float]* %shad358, i64 0, i64 1, !dbg !5091
  %261 = load float, float* %arrayidx359, align 4, !dbg !5091
  %cmp360 = fcmp olt float %261, 0.000000e+00, !dbg !5094
  br i1 %cmp360, label %if.then362, label %if.end365, !dbg !5095

if.then362:                                       ; preds = %if.end357
  %262 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5096
  %shad363 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %262, i32 0, i32 9, !dbg !5097
  %arrayidx364 = getelementptr inbounds [4 x float], [4 x float]* %shad363, i64 0, i64 1, !dbg !5096
  store float 0.000000e+00, float* %arrayidx364, align 4, !dbg !5098
  br label %if.end365, !dbg !5096

if.end365:                                        ; preds = %if.then362, %if.end357
  %263 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5099
  %shad366 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %263, i32 0, i32 9, !dbg !5101
  %arrayidx367 = getelementptr inbounds [4 x float], [4 x float]* %shad366, i64 0, i64 2, !dbg !5099
  %264 = load float, float* %arrayidx367, align 4, !dbg !5099
  %cmp368 = fcmp olt float %264, 0.000000e+00, !dbg !5102
  br i1 %cmp368, label %if.then370, label %if.end373, !dbg !5103

if.then370:                                       ; preds = %if.end365
  %265 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5104
  %shad371 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %265, i32 0, i32 9, !dbg !5105
  %arrayidx372 = getelementptr inbounds [4 x float], [4 x float]* %shad371, i64 0, i64 2, !dbg !5104
  store float 0.000000e+00, float* %arrayidx372, align 4, !dbg !5106
  br label %if.end373, !dbg !5104

if.end373:                                        ; preds = %if.then370, %if.end365
  %266 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5107
  %sss_flag374 = getelementptr inbounds %struct.Material, %struct.Material* %266, i32 0, i32 123, !dbg !5109
  %267 = load i16, i16* %sss_flag374, align 4, !dbg !5109
  %conv375 = sext i16 %267 to i32, !dbg !5107
  %and376 = and i32 %conv375, 1, !dbg !5110
  %tobool377 = icmp ne i32 %and376, 0, !dbg !5110
  br i1 %tobool377, label %if.then378, label %if.end470, !dbg !5111

if.then378:                                       ; preds = %if.end373
  call void @llvm.dbg.declare(metadata [3 x float]* %sss, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.declare(metadata [3 x float]* %col379, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.declare(metadata float* %invalpha, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata float* %texfac, metadata !5119, metadata !DIExpression()), !dbg !5120
  %268 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5121
  %sss_texfac380 = getelementptr inbounds %struct.Material, %struct.Material* %268, i32 0, i32 120, !dbg !5122
  %269 = load float, float* %sss_texfac380, align 8, !dbg !5122
  store float %269, float* %texfac, align 4, !dbg !5120
  %270 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5123
  %271 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5125
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %271, i32 0, i32 29, !dbg !5126
  %arraydecay381 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5125
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %sss, i64 0, i64 0, !dbg !5127
  %call383 = call i32 @sample_sss(%struct.Render* @R, %struct.Material* %270, float* %arraydecay381, float* %arraydecay382), !dbg !5128
  %tobool384 = icmp ne i32 %call383, 0, !dbg !5128
  br i1 %tobool384, label %if.then385, label %if.end469, !dbg !5129

if.then385:                                       ; preds = %if.then378
  %272 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5130
  %col386 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %272, i32 0, i32 1, !dbg !5132
  %arrayidx387 = getelementptr inbounds [4 x float], [4 x float]* %col386, i64 0, i64 3, !dbg !5130
  %273 = load float, float* %arrayidx387, align 4, !dbg !5130
  %cmp388 = fcmp ogt float %273, 0x3E80000000000000, !dbg !5133
  br i1 %cmp388, label %cond.true, label %cond.false, !dbg !5134

cond.true:                                        ; preds = %if.then385
  %274 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5135
  %col390 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %274, i32 0, i32 1, !dbg !5136
  %arrayidx391 = getelementptr inbounds [4 x float], [4 x float]* %col390, i64 0, i64 3, !dbg !5135
  %275 = load float, float* %arrayidx391, align 4, !dbg !5135
  %div = fdiv float 1.000000e+00, %275, !dbg !5137
  br label %cond.end, !dbg !5134

cond.false:                                       ; preds = %if.then385
  br label %cond.end, !dbg !5134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !5134
  store float %cond, float* %invalpha, align 4, !dbg !5138
  %276 = load float, float* %texfac, align 4, !dbg !5139
  %cmp392 = fcmp oeq float %276, 0.000000e+00, !dbg !5141
  br i1 %cmp392, label %if.then394, label %if.else399, !dbg !5142

if.then394:                                       ; preds = %cond.end
  %arraydecay395 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5143
  %277 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5145
  %col396 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %277, i32 0, i32 1, !dbg !5146
  %arraydecay397 = getelementptr inbounds [4 x float], [4 x float]* %col396, i64 0, i64 0, !dbg !5145
  call void @copy_v3_v3(float* %arraydecay395, float* %arraydecay397), !dbg !5147
  %arraydecay398 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5148
  %278 = load float, float* %invalpha, align 4, !dbg !5149
  call void @mul_v3_fl(float* %arraydecay398, float %278), !dbg !5150
  br label %if.end437, !dbg !5151

if.else399:                                       ; preds = %cond.end
  %279 = load float, float* %texfac, align 4, !dbg !5152
  %cmp400 = fcmp oeq float %279, 1.000000e+00, !dbg !5154
  br i1 %cmp400, label %if.then402, label %if.else407, !dbg !5155

if.then402:                                       ; preds = %if.else399
  %arrayidx403 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 2, !dbg !5156
  store float 1.000000e+00, float* %arrayidx403, align 4, !dbg !5158
  %arrayidx404 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 1, !dbg !5159
  store float 1.000000e+00, float* %arrayidx404, align 4, !dbg !5160
  %arrayidx405 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5161
  store float 1.000000e+00, float* %arrayidx405, align 4, !dbg !5162
  %arraydecay406 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5163
  %280 = load float, float* %invalpha, align 4, !dbg !5164
  call void @mul_v3_fl(float* %arraydecay406, float %280), !dbg !5165
  br label %if.end436, !dbg !5166

if.else407:                                       ; preds = %if.else399
  %arraydecay408 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5167
  %281 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5169
  %col409 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %281, i32 0, i32 1, !dbg !5170
  %arraydecay410 = getelementptr inbounds [4 x float], [4 x float]* %col409, i64 0, i64 0, !dbg !5169
  call void @copy_v3_v3(float* %arraydecay408, float* %arraydecay410), !dbg !5171
  %arraydecay411 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5172
  %282 = load float, float* %invalpha, align 4, !dbg !5173
  call void @mul_v3_fl(float* %arraydecay411, float %282), !dbg !5174
  %arrayidx412 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5175
  %283 = load float, float* %arrayidx412, align 4, !dbg !5175
  %call413 = call float @max_ff(float %283, float 0.000000e+00), !dbg !5176
  %conv414 = fpext float %call413 to double, !dbg !5176
  %284 = load float, float* %texfac, align 4, !dbg !5177
  %sub415 = fsub float 1.000000e+00, %284, !dbg !5178
  %conv416 = fpext float %sub415 to double, !dbg !5179
  %call417 = call double @pow(double %conv414, double %conv416) #6, !dbg !5180
  %conv418 = fptrunc double %call417 to float, !dbg !5180
  %arrayidx419 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5181
  store float %conv418, float* %arrayidx419, align 4, !dbg !5182
  %arrayidx420 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 1, !dbg !5183
  %285 = load float, float* %arrayidx420, align 4, !dbg !5183
  %call421 = call float @max_ff(float %285, float 0.000000e+00), !dbg !5184
  %conv422 = fpext float %call421 to double, !dbg !5184
  %286 = load float, float* %texfac, align 4, !dbg !5185
  %sub423 = fsub float 1.000000e+00, %286, !dbg !5186
  %conv424 = fpext float %sub423 to double, !dbg !5187
  %call425 = call double @pow(double %conv422, double %conv424) #6, !dbg !5188
  %conv426 = fptrunc double %call425 to float, !dbg !5188
  %arrayidx427 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 1, !dbg !5189
  store float %conv426, float* %arrayidx427, align 4, !dbg !5190
  %arrayidx428 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 2, !dbg !5191
  %287 = load float, float* %arrayidx428, align 4, !dbg !5191
  %call429 = call float @max_ff(float %287, float 0.000000e+00), !dbg !5192
  %conv430 = fpext float %call429 to double, !dbg !5192
  %288 = load float, float* %texfac, align 4, !dbg !5193
  %sub431 = fsub float 1.000000e+00, %288, !dbg !5194
  %conv432 = fpext float %sub431 to double, !dbg !5195
  %call433 = call double @pow(double %conv430, double %conv432) #6, !dbg !5196
  %conv434 = fptrunc double %call433 to float, !dbg !5196
  %arrayidx435 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 2, !dbg !5197
  store float %conv434, float* %arrayidx435, align 4, !dbg !5198
  br label %if.end436

if.end436:                                        ; preds = %if.else407, %if.then402
  br label %if.end437

if.end437:                                        ; preds = %if.end436, %if.then394
  %arrayidx438 = getelementptr inbounds [3 x float], [3 x float]* %sss, i64 0, i64 0, !dbg !5199
  %289 = load float, float* %arrayidx438, align 4, !dbg !5199
  %arrayidx439 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 0, !dbg !5200
  %290 = load float, float* %arrayidx439, align 4, !dbg !5200
  %mul440 = fmul float %289, %290, !dbg !5201
  %291 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5202
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %291, i32 0, i32 6, !dbg !5203
  %arrayidx441 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !5202
  store float %mul440, float* %arrayidx441, align 4, !dbg !5204
  %arrayidx442 = getelementptr inbounds [3 x float], [3 x float]* %sss, i64 0, i64 1, !dbg !5205
  %292 = load float, float* %arrayidx442, align 4, !dbg !5205
  %arrayidx443 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 1, !dbg !5206
  %293 = load float, float* %arrayidx443, align 4, !dbg !5206
  %mul444 = fmul float %292, %293, !dbg !5207
  %294 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5208
  %diff445 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %294, i32 0, i32 6, !dbg !5209
  %arrayidx446 = getelementptr inbounds [3 x float], [3 x float]* %diff445, i64 0, i64 1, !dbg !5208
  store float %mul444, float* %arrayidx446, align 4, !dbg !5210
  %arrayidx447 = getelementptr inbounds [3 x float], [3 x float]* %sss, i64 0, i64 2, !dbg !5211
  %295 = load float, float* %arrayidx447, align 4, !dbg !5211
  %arrayidx448 = getelementptr inbounds [3 x float], [3 x float]* %col379, i64 0, i64 2, !dbg !5212
  %296 = load float, float* %arrayidx448, align 4, !dbg !5212
  %mul449 = fmul float %295, %296, !dbg !5213
  %297 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5214
  %diff450 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %297, i32 0, i32 6, !dbg !5215
  %arrayidx451 = getelementptr inbounds [3 x float], [3 x float]* %diff450, i64 0, i64 2, !dbg !5214
  store float %mul449, float* %arrayidx451, align 4, !dbg !5216
  %298 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5217
  %combinedflag452 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %298, i32 0, i32 120, !dbg !5219
  %299 = load i32, i32* %combinedflag452, align 4, !dbg !5219
  %and453 = and i32 %299, 32, !dbg !5220
  %tobool454 = icmp ne i32 %and453, 0, !dbg !5220
  br i1 %tobool454, label %if.then455, label %if.end468, !dbg !5221

if.then455:                                       ; preds = %if.end437
  %300 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5222
  %diff456 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %300, i32 0, i32 6, !dbg !5224
  %arrayidx457 = getelementptr inbounds [3 x float], [3 x float]* %diff456, i64 0, i64 0, !dbg !5222
  %301 = load float, float* %arrayidx457, align 4, !dbg !5222
  %302 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5225
  %shad458 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %302, i32 0, i32 9, !dbg !5226
  %arrayidx459 = getelementptr inbounds [4 x float], [4 x float]* %shad458, i64 0, i64 0, !dbg !5225
  store float %301, float* %arrayidx459, align 4, !dbg !5227
  %303 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5228
  %diff460 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %303, i32 0, i32 6, !dbg !5229
  %arrayidx461 = getelementptr inbounds [3 x float], [3 x float]* %diff460, i64 0, i64 1, !dbg !5228
  %304 = load float, float* %arrayidx461, align 4, !dbg !5228
  %305 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5230
  %shad462 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %305, i32 0, i32 9, !dbg !5231
  %arrayidx463 = getelementptr inbounds [4 x float], [4 x float]* %shad462, i64 0, i64 1, !dbg !5230
  store float %304, float* %arrayidx463, align 4, !dbg !5232
  %306 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5233
  %diff464 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %306, i32 0, i32 6, !dbg !5234
  %arrayidx465 = getelementptr inbounds [3 x float], [3 x float]* %diff464, i64 0, i64 2, !dbg !5233
  %307 = load float, float* %arrayidx465, align 4, !dbg !5233
  %308 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5235
  %shad466 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %308, i32 0, i32 9, !dbg !5236
  %arrayidx467 = getelementptr inbounds [4 x float], [4 x float]* %shad466, i64 0, i64 2, !dbg !5235
  store float %307, float* %arrayidx467, align 4, !dbg !5237
  br label %if.end468, !dbg !5238

if.end468:                                        ; preds = %if.then455, %if.end437
  br label %if.end469, !dbg !5239

if.end469:                                        ; preds = %if.end468, %if.then378
  br label %if.end470, !dbg !5240

if.end470:                                        ; preds = %if.end469, %if.end373
  %309 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5241
  %combinedflag471 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %309, i32 0, i32 120, !dbg !5243
  %310 = load i32, i32* %combinedflag471, align 4, !dbg !5243
  %and472 = and i32 %310, 32, !dbg !5244
  %tobool473 = icmp ne i32 %and472, 0, !dbg !5244
  br i1 %tobool473, label %if.then474, label %if.else478, !dbg !5245

if.then474:                                       ; preds = %if.end470
  %311 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5246
  %diffshad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %311, i32 0, i32 7, !dbg !5247
  %arraydecay475 = getelementptr inbounds [3 x float], [3 x float]* %diffshad, i64 0, i64 0, !dbg !5246
  %312 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5248
  %shad476 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %312, i32 0, i32 9, !dbg !5249
  %arraydecay477 = getelementptr inbounds [4 x float], [4 x float]* %shad476, i64 0, i64 0, !dbg !5248
  call void @copy_v3_v3(float* %arraydecay475, float* %arraydecay477), !dbg !5250
  br label %if.end483, !dbg !5250

if.else478:                                       ; preds = %if.end470
  %313 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5251
  %diffshad479 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %313, i32 0, i32 7, !dbg !5252
  %arraydecay480 = getelementptr inbounds [3 x float], [3 x float]* %diffshad479, i64 0, i64 0, !dbg !5251
  %314 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5253
  %diff481 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %314, i32 0, i32 6, !dbg !5254
  %arraydecay482 = getelementptr inbounds [3 x float], [3 x float]* %diff481, i64 0, i64 0, !dbg !5253
  call void @copy_v3_v3(float* %arraydecay480, float* %arraydecay482), !dbg !5255
  br label %if.end483

if.end483:                                        ; preds = %if.else478, %if.then474
  %315 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5256
  %combined484 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %315, i32 0, i32 0, !dbg !5257
  %arraydecay485 = getelementptr inbounds [4 x float], [4 x float]* %combined484, i64 0, i64 0, !dbg !5256
  %316 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5258
  %diffshad486 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %316, i32 0, i32 7, !dbg !5259
  %arraydecay487 = getelementptr inbounds [3 x float], [3 x float]* %diffshad486, i64 0, i64 0, !dbg !5258
  call void @copy_v3_v3(float* %arraydecay485, float* %arraydecay487), !dbg !5260
  %317 = load i32, i32* %passflag, align 4, !dbg !5261
  %and488 = and i32 %317, 32, !dbg !5263
  %tobool489 = icmp ne i32 %and488, 0, !dbg !5263
  br i1 %tobool489, label %land.lhs.true490, label %if.end578, !dbg !5264

land.lhs.true490:                                 ; preds = %if.end483
  %318 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5265
  %diff491 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %318, i32 0, i32 6, !dbg !5266
  %arrayidx492 = getelementptr inbounds [3 x float], [3 x float]* %diff491, i64 0, i64 0, !dbg !5265
  %319 = load float, float* %arrayidx492, align 4, !dbg !5265
  %cmp493 = fcmp oeq float %319, 0.000000e+00, !dbg !5267
  br i1 %cmp493, label %land.lhs.true495, label %if.then505, !dbg !5268

land.lhs.true495:                                 ; preds = %land.lhs.true490
  %320 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5269
  %diff496 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %320, i32 0, i32 6, !dbg !5270
  %arrayidx497 = getelementptr inbounds [3 x float], [3 x float]* %diff496, i64 0, i64 1, !dbg !5269
  %321 = load float, float* %arrayidx497, align 4, !dbg !5269
  %cmp498 = fcmp oeq float %321, 0.000000e+00, !dbg !5271
  br i1 %cmp498, label %land.lhs.true500, label %if.then505, !dbg !5272

land.lhs.true500:                                 ; preds = %land.lhs.true495
  %322 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5273
  %diff501 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %322, i32 0, i32 6, !dbg !5274
  %arrayidx502 = getelementptr inbounds [3 x float], [3 x float]* %diff501, i64 0, i64 2, !dbg !5273
  %323 = load float, float* %arrayidx502, align 4, !dbg !5273
  %cmp503 = fcmp oeq float %323, 0.000000e+00, !dbg !5275
  br i1 %cmp503, label %if.end578, label %if.then505, !dbg !5276

if.then505:                                       ; preds = %land.lhs.true500, %land.lhs.true495, %land.lhs.true490
  %324 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5277
  %diff506 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %324, i32 0, i32 6, !dbg !5280
  %arrayidx507 = getelementptr inbounds [3 x float], [3 x float]* %diff506, i64 0, i64 0, !dbg !5277
  %325 = load float, float* %arrayidx507, align 4, !dbg !5277
  %cmp508 = fcmp une float %325, 0.000000e+00, !dbg !5281
  br i1 %cmp508, label %if.then510, label %if.else518, !dbg !5282

if.then510:                                       ; preds = %if.then505
  %326 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5283
  %shad511 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %326, i32 0, i32 9, !dbg !5284
  %arrayidx512 = getelementptr inbounds [4 x float], [4 x float]* %shad511, i64 0, i64 0, !dbg !5283
  %327 = load float, float* %arrayidx512, align 4, !dbg !5283
  %328 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5285
  %diff513 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %328, i32 0, i32 6, !dbg !5286
  %arrayidx514 = getelementptr inbounds [3 x float], [3 x float]* %diff513, i64 0, i64 0, !dbg !5285
  %329 = load float, float* %arrayidx514, align 4, !dbg !5285
  %div515 = fdiv float %327, %329, !dbg !5287
  %330 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5288
  %shad516 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %330, i32 0, i32 9, !dbg !5289
  %arrayidx517 = getelementptr inbounds [4 x float], [4 x float]* %shad516, i64 0, i64 0, !dbg !5288
  store float %div515, float* %arrayidx517, align 4, !dbg !5290
  br label %if.end529, !dbg !5288

if.else518:                                       ; preds = %if.then505
  %331 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5291
  %shad519 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %331, i32 0, i32 9, !dbg !5293
  %arrayidx520 = getelementptr inbounds [4 x float], [4 x float]* %shad519, i64 0, i64 0, !dbg !5291
  %332 = load float, float* %arrayidx520, align 4, !dbg !5291
  %cmp521 = fcmp oeq float %332, 0.000000e+00, !dbg !5294
  br i1 %cmp521, label %if.then523, label %if.end528, !dbg !5295

if.then523:                                       ; preds = %if.else518
  %333 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5296
  %shad524 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %333, i32 0, i32 9, !dbg !5297
  %arrayidx525 = getelementptr inbounds [4 x float], [4 x float]* %shad524, i64 0, i64 3, !dbg !5296
  %334 = load float, float* %arrayidx525, align 4, !dbg !5296
  %335 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5298
  %shad526 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %335, i32 0, i32 9, !dbg !5299
  %arrayidx527 = getelementptr inbounds [4 x float], [4 x float]* %shad526, i64 0, i64 0, !dbg !5298
  store float %334, float* %arrayidx527, align 4, !dbg !5300
  br label %if.end528, !dbg !5298

if.end528:                                        ; preds = %if.then523, %if.else518
  br label %if.end529

if.end529:                                        ; preds = %if.end528, %if.then510
  %336 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5301
  %diff530 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %336, i32 0, i32 6, !dbg !5303
  %arrayidx531 = getelementptr inbounds [3 x float], [3 x float]* %diff530, i64 0, i64 1, !dbg !5301
  %337 = load float, float* %arrayidx531, align 4, !dbg !5301
  %cmp532 = fcmp une float %337, 0.000000e+00, !dbg !5304
  br i1 %cmp532, label %if.then534, label %if.else542, !dbg !5305

if.then534:                                       ; preds = %if.end529
  %338 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5306
  %shad535 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %338, i32 0, i32 9, !dbg !5307
  %arrayidx536 = getelementptr inbounds [4 x float], [4 x float]* %shad535, i64 0, i64 1, !dbg !5306
  %339 = load float, float* %arrayidx536, align 4, !dbg !5306
  %340 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5308
  %diff537 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %340, i32 0, i32 6, !dbg !5309
  %arrayidx538 = getelementptr inbounds [3 x float], [3 x float]* %diff537, i64 0, i64 1, !dbg !5308
  %341 = load float, float* %arrayidx538, align 4, !dbg !5308
  %div539 = fdiv float %339, %341, !dbg !5310
  %342 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5311
  %shad540 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %342, i32 0, i32 9, !dbg !5312
  %arrayidx541 = getelementptr inbounds [4 x float], [4 x float]* %shad540, i64 0, i64 1, !dbg !5311
  store float %div539, float* %arrayidx541, align 4, !dbg !5313
  br label %if.end553, !dbg !5311

if.else542:                                       ; preds = %if.end529
  %343 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5314
  %shad543 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %343, i32 0, i32 9, !dbg !5316
  %arrayidx544 = getelementptr inbounds [4 x float], [4 x float]* %shad543, i64 0, i64 1, !dbg !5314
  %344 = load float, float* %arrayidx544, align 4, !dbg !5314
  %cmp545 = fcmp oeq float %344, 0.000000e+00, !dbg !5317
  br i1 %cmp545, label %if.then547, label %if.end552, !dbg !5318

if.then547:                                       ; preds = %if.else542
  %345 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5319
  %shad548 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %345, i32 0, i32 9, !dbg !5320
  %arrayidx549 = getelementptr inbounds [4 x float], [4 x float]* %shad548, i64 0, i64 3, !dbg !5319
  %346 = load float, float* %arrayidx549, align 4, !dbg !5319
  %347 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5321
  %shad550 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %347, i32 0, i32 9, !dbg !5322
  %arrayidx551 = getelementptr inbounds [4 x float], [4 x float]* %shad550, i64 0, i64 1, !dbg !5321
  store float %346, float* %arrayidx551, align 4, !dbg !5323
  br label %if.end552, !dbg !5321

if.end552:                                        ; preds = %if.then547, %if.else542
  br label %if.end553

if.end553:                                        ; preds = %if.end552, %if.then534
  %348 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5324
  %diff554 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %348, i32 0, i32 6, !dbg !5326
  %arrayidx555 = getelementptr inbounds [3 x float], [3 x float]* %diff554, i64 0, i64 2, !dbg !5324
  %349 = load float, float* %arrayidx555, align 4, !dbg !5324
  %cmp556 = fcmp une float %349, 0.000000e+00, !dbg !5327
  br i1 %cmp556, label %if.then558, label %if.else566, !dbg !5328

if.then558:                                       ; preds = %if.end553
  %350 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5329
  %shad559 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %350, i32 0, i32 9, !dbg !5330
  %arrayidx560 = getelementptr inbounds [4 x float], [4 x float]* %shad559, i64 0, i64 2, !dbg !5329
  %351 = load float, float* %arrayidx560, align 4, !dbg !5329
  %352 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5331
  %diff561 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %352, i32 0, i32 6, !dbg !5332
  %arrayidx562 = getelementptr inbounds [3 x float], [3 x float]* %diff561, i64 0, i64 2, !dbg !5331
  %353 = load float, float* %arrayidx562, align 4, !dbg !5331
  %div563 = fdiv float %351, %353, !dbg !5333
  %354 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5334
  %shad564 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %354, i32 0, i32 9, !dbg !5335
  %arrayidx565 = getelementptr inbounds [4 x float], [4 x float]* %shad564, i64 0, i64 2, !dbg !5334
  store float %div563, float* %arrayidx565, align 4, !dbg !5336
  br label %if.end577, !dbg !5334

if.else566:                                       ; preds = %if.end553
  %355 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5337
  %shad567 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %355, i32 0, i32 9, !dbg !5339
  %arrayidx568 = getelementptr inbounds [4 x float], [4 x float]* %shad567, i64 0, i64 2, !dbg !5337
  %356 = load float, float* %arrayidx568, align 4, !dbg !5337
  %cmp569 = fcmp oeq float %356, 0.000000e+00, !dbg !5340
  br i1 %cmp569, label %if.then571, label %if.end576, !dbg !5341

if.then571:                                       ; preds = %if.else566
  %357 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5342
  %shad572 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %357, i32 0, i32 9, !dbg !5343
  %arrayidx573 = getelementptr inbounds [4 x float], [4 x float]* %shad572, i64 0, i64 3, !dbg !5342
  %358 = load float, float* %arrayidx573, align 4, !dbg !5342
  %359 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5344
  %shad574 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %359, i32 0, i32 9, !dbg !5345
  %arrayidx575 = getelementptr inbounds [4 x float], [4 x float]* %shad574, i64 0, i64 2, !dbg !5344
  store float %358, float* %arrayidx575, align 4, !dbg !5346
  br label %if.end576, !dbg !5344

if.end576:                                        ; preds = %if.then571, %if.else566
  br label %if.end577

if.end577:                                        ; preds = %if.end576, %if.then558
  br label %if.end578, !dbg !5347

if.end578:                                        ; preds = %if.end577, %land.lhs.true500, %if.end483
  %360 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 16), align 8, !dbg !5348
  %cmp579 = fcmp une float %360, 0.000000e+00, !dbg !5350
  br i1 %cmp579, label %land.lhs.true584, label %lor.lhs.false581, !dbg !5351

lor.lhs.false581:                                 ; preds = %if.end578
  %361 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 17), align 4, !dbg !5352
  %cmp582 = fcmp une float %361, 1.000000e+00, !dbg !5353
  br i1 %cmp582, label %land.lhs.true584, label %if.end591, !dbg !5354

land.lhs.true584:                                 ; preds = %lor.lhs.false581, %if.end578
  %362 = load %struct.ListBase*, %struct.ListBase** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 75), align 8, !dbg !5355
  %tobool585 = icmp ne %struct.ListBase* %362, null, !dbg !5356
  br i1 %tobool585, label %if.end591, label %if.then586, !dbg !5357

if.then586:                                       ; preds = %land.lhs.true584
  %363 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5358
  %combined587 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %363, i32 0, i32 0, !dbg !5360
  %arraydecay588 = getelementptr inbounds [4 x float], [4 x float]* %combined587, i64 0, i64 0, !dbg !5358
  call void @wrld_exposure_correct(float* %arraydecay588), !dbg !5361
  %364 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5362
  %spec589 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %364, i32 0, i32 8, !dbg !5363
  %arraydecay590 = getelementptr inbounds [3 x float], [3 x float]* %spec589, i64 0, i64 0, !dbg !5362
  call void @wrld_exposure_correct(float* %arraydecay590), !dbg !5364
  br label %if.end591, !dbg !5365

if.end591:                                        ; preds = %if.then586, %land.lhs.true584, %lor.lhs.false581
  br label %if.end592, !dbg !5366

if.end592:                                        ; preds = %if.end591, %if.end295
  %365 = load i32, i32* %passflag, align 4, !dbg !5367
  %and593 = and i32 %365, 1, !dbg !5369
  %tobool594 = icmp ne i32 %and593, 0, !dbg !5369
  br i1 %tobool594, label %if.then595, label %if.end641, !dbg !5370

if.then595:                                       ; preds = %if.end592
  %366 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5371
  %fresnel_tra = getelementptr inbounds %struct.Material, %struct.Material* %366, i32 0, i32 31, !dbg !5374
  %367 = load float, float* %fresnel_tra, align 8, !dbg !5374
  %cmp596 = fcmp une float %367, 0.000000e+00, !dbg !5375
  br i1 %cmp596, label %land.lhs.true598, label %if.end609, !dbg !5376

land.lhs.true598:                                 ; preds = %if.then595
  %368 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5377
  %mode599 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %368, i32 0, i32 21, !dbg !5378
  %369 = load i32, i32* %mode599, align 8, !dbg !5378
  %and600 = and i32 %369, 65536, !dbg !5379
  %tobool601 = icmp ne i32 %and600, 0, !dbg !5379
  br i1 %tobool601, label %if.then602, label %if.end609, !dbg !5380

if.then602:                                       ; preds = %land.lhs.true598
  %370 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5381
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %370, i32 0, i32 30, !dbg !5382
  %arraydecay603 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !5381
  %371 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5383
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %371, i32 0, i32 16, !dbg !5384
  %arraydecay604 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5383
  %372 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5385
  %fresnel_tra_i = getelementptr inbounds %struct.Material, %struct.Material* %372, i32 0, i32 32, !dbg !5386
  %373 = load float, float* %fresnel_tra_i, align 4, !dbg !5386
  %374 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5387
  %fresnel_tra605 = getelementptr inbounds %struct.Material, %struct.Material* %374, i32 0, i32 31, !dbg !5388
  %375 = load float, float* %fresnel_tra605, align 8, !dbg !5388
  %call606 = call float @fresnel_fac(float* %arraydecay603, float* %arraydecay604, float %373, float %375), !dbg !5389
  %376 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5390
  %alpha607 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %376, i32 0, i32 49, !dbg !5391
  %377 = load float, float* %alpha607, align 8, !dbg !5392
  %mul608 = fmul float %377, %call606, !dbg !5392
  store float %mul608, float* %alpha607, align 8, !dbg !5392
  br label %if.end609, !dbg !5390

if.end609:                                        ; preds = %if.then602, %land.lhs.true598, %if.then595
  %378 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5393
  %mode610 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %378, i32 0, i32 21, !dbg !5395
  %379 = load i32, i32* %mode610, align 8, !dbg !5395
  %and611 = and i32 %379, 65536, !dbg !5396
  %tobool612 = icmp ne i32 %and611, 0, !dbg !5396
  br i1 %tobool612, label %land.lhs.true613, label %if.end640, !dbg !5397

land.lhs.true613:                                 ; preds = %if.end609
  %380 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5398
  %mode614 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %380, i32 0, i32 21, !dbg !5399
  %381 = load i32, i32* %mode614, align 8, !dbg !5399
  %and615 = and i32 %381, 131136, !dbg !5400
  %tobool616 = icmp ne i32 %and615, 0, !dbg !5400
  br i1 %tobool616, label %if.then617, label %if.end640, !dbg !5401

if.then617:                                       ; preds = %land.lhs.true613
  %382 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5402
  %spectra = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %382, i32 0, i32 47, !dbg !5405
  %383 = load float, float* %spectra, align 8, !dbg !5405
  %cmp618 = fcmp une float %383, 0.000000e+00, !dbg !5406
  br i1 %cmp618, label %if.then620, label %if.end639, !dbg !5407

if.then620:                                       ; preds = %if.then617
  call void @llvm.dbg.declare(metadata float* %t, metadata !5408, metadata !DIExpression()), !dbg !5410
  %384 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5411
  %spec621 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %384, i32 0, i32 8, !dbg !5412
  %arrayidx622 = getelementptr inbounds [3 x float], [3 x float]* %spec621, i64 0, i64 0, !dbg !5411
  %385 = load float, float* %arrayidx622, align 4, !dbg !5411
  %386 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5413
  %spec623 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %386, i32 0, i32 8, !dbg !5414
  %arrayidx624 = getelementptr inbounds [3 x float], [3 x float]* %spec623, i64 0, i64 1, !dbg !5413
  %387 = load float, float* %arrayidx624, align 4, !dbg !5413
  %388 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5415
  %spec625 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %388, i32 0, i32 8, !dbg !5416
  %arrayidx626 = getelementptr inbounds [3 x float], [3 x float]* %spec625, i64 0, i64 2, !dbg !5415
  %389 = load float, float* %arrayidx626, align 4, !dbg !5415
  %call627 = call float @max_fff(float %385, float %387, float %389), !dbg !5417
  store float %call627, float* %t, align 4, !dbg !5410
  %390 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5418
  %spectra628 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %390, i32 0, i32 47, !dbg !5419
  %391 = load float, float* %spectra628, align 8, !dbg !5419
  %392 = load float, float* %t, align 4, !dbg !5420
  %mul629 = fmul float %392, %391, !dbg !5420
  store float %mul629, float* %t, align 4, !dbg !5420
  %393 = load float, float* %t, align 4, !dbg !5421
  %cmp630 = fcmp ogt float %393, 1.000000e+00, !dbg !5423
  br i1 %cmp630, label %if.then632, label %if.end633, !dbg !5424

if.then632:                                       ; preds = %if.then620
  store float 1.000000e+00, float* %t, align 4, !dbg !5425
  br label %if.end633, !dbg !5426

if.end633:                                        ; preds = %if.then632, %if.then620
  %394 = load float, float* %t, align 4, !dbg !5427
  %sub634 = fsub float 1.000000e+00, %394, !dbg !5428
  %395 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5429
  %alpha635 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %395, i32 0, i32 49, !dbg !5430
  %396 = load float, float* %alpha635, align 8, !dbg !5430
  %mul636 = fmul float %sub634, %396, !dbg !5431
  %397 = load float, float* %t, align 4, !dbg !5432
  %add637 = fadd float %mul636, %397, !dbg !5433
  %398 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5434
  %alpha638 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %398, i32 0, i32 49, !dbg !5435
  store float %add637, float* %alpha638, align 8, !dbg !5436
  br label %if.end639, !dbg !5437

if.end639:                                        ; preds = %if.end633, %if.then617
  br label %if.end640, !dbg !5438

if.end640:                                        ; preds = %if.end639, %land.lhs.true613, %if.end609
  br label %if.end641, !dbg !5439

if.end641:                                        ; preds = %if.end640, %if.end592
  %399 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5440
  %alpha642 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %399, i32 0, i32 49, !dbg !5441
  %400 = load float, float* %alpha642, align 8, !dbg !5441
  %401 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5442
  %alpha643 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %401, i32 0, i32 2, !dbg !5443
  store float %400, float* %alpha643, align 4, !dbg !5444
  %402 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5445
  %sss_flag644 = getelementptr inbounds %struct.Material, %struct.Material* %402, i32 0, i32 123, !dbg !5447
  %403 = load i16, i16* %sss_flag644, align 4, !dbg !5447
  %conv645 = sext i16 %403 to i32, !dbg !5445
  %and646 = and i32 %conv645, 1, !dbg !5448
  %tobool647 = icmp ne i32 %and646, 0, !dbg !5448
  br i1 %tobool647, label %lor.lhs.false648, label %if.then651, !dbg !5449

lor.lhs.false648:                                 ; preds = %if.end641
  %404 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5450
  %call649 = call i32 @sss_pass_done(%struct.Render* @R, %struct.Material* %404), !dbg !5451
  %tobool650 = icmp ne i32 %call649, 0, !dbg !5451
  br i1 %tobool650, label %if.end702, label %if.then651, !dbg !5452

if.then651:                                       ; preds = %lor.lhs.false648, %if.end641
  %405 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !5453
  %and652 = and i32 %405, 2, !dbg !5456
  %tobool653 = icmp ne i32 %and652, 0, !dbg !5456
  br i1 %tobool653, label %if.then654, label %if.end685, !dbg !5457

if.then654:                                       ; preds = %if.then651
  %406 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !5458
  %conv655 = sext i16 %406 to i32, !dbg !5461
  %and656 = and i32 %conv655, 64, !dbg !5462
  %tobool657 = icmp ne i32 %and656, 0, !dbg !5462
  br i1 %tobool657, label %if.then658, label %if.end664, !dbg !5463

if.then658:                                       ; preds = %if.then654
  %407 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5464
  %combinedflag659 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %407, i32 0, i32 120, !dbg !5466
  %408 = load i32, i32* %combinedflag659, align 4, !dbg !5466
  %and660 = and i32 %408, 64, !dbg !5467
  %tobool661 = icmp ne i32 %and660, 0, !dbg !5467
  br i1 %tobool661, label %if.then662, label %if.end663, !dbg !5468

if.then662:                                       ; preds = %if.then658
  %409 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5469
  %410 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5470
  call void @ambient_occlusion_apply(%struct.ShadeInput* %409, %struct.ShadeResult* %410), !dbg !5471
  br label %if.end663, !dbg !5471

if.end663:                                        ; preds = %if.then662, %if.then658
  br label %if.end664, !dbg !5472

if.end664:                                        ; preds = %if.end663, %if.then654
  %411 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !5473
  %conv665 = sext i16 %411 to i32, !dbg !5475
  %and666 = and i32 %conv665, 16, !dbg !5476
  %tobool667 = icmp ne i32 %and666, 0, !dbg !5476
  br i1 %tobool667, label %if.then668, label %if.end674, !dbg !5477

if.then668:                                       ; preds = %if.end664
  %412 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5478
  %combinedflag669 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %412, i32 0, i32 120, !dbg !5480
  %413 = load i32, i32* %combinedflag669, align 4, !dbg !5480
  %and670 = and i32 %413, 131072, !dbg !5481
  %tobool671 = icmp ne i32 %and670, 0, !dbg !5481
  br i1 %tobool671, label %if.then672, label %if.end673, !dbg !5482

if.then672:                                       ; preds = %if.then668
  %414 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5483
  %415 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5484
  call void @environment_lighting_apply(%struct.ShadeInput* %414, %struct.ShadeResult* %415), !dbg !5485
  br label %if.end673, !dbg !5485

if.end673:                                        ; preds = %if.then672, %if.then668
  br label %if.end674, !dbg !5486

if.end674:                                        ; preds = %if.end673, %if.end664
  %416 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !5487
  %conv675 = sext i16 %416 to i32, !dbg !5489
  %and676 = and i32 %conv675, 128, !dbg !5490
  %tobool677 = icmp ne i32 %and676, 0, !dbg !5490
  br i1 %tobool677, label %if.then678, label %if.end684, !dbg !5491

if.then678:                                       ; preds = %if.end674
  %417 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5492
  %combinedflag679 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %417, i32 0, i32 120, !dbg !5494
  %418 = load i32, i32* %combinedflag679, align 4, !dbg !5494
  %and680 = and i32 %418, 8192, !dbg !5495
  %tobool681 = icmp ne i32 %and680, 0, !dbg !5495
  br i1 %tobool681, label %if.then682, label %if.end683, !dbg !5496

if.then682:                                       ; preds = %if.then678
  %419 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5497
  %420 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5498
  call void @indirect_lighting_apply(%struct.ShadeInput* %419, %struct.ShadeResult* %420), !dbg !5499
  br label %if.end683, !dbg !5499

if.end683:                                        ; preds = %if.then682, %if.then678
  br label %if.end684, !dbg !5500

if.end684:                                        ; preds = %if.end683, %if.end674
  br label %if.end685, !dbg !5501

if.end685:                                        ; preds = %if.end684, %if.then651
  %421 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5502
  %ambr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %421, i32 0, i32 41, !dbg !5503
  %422 = load float, float* %ambr, align 8, !dbg !5503
  %423 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5504
  %combined686 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %423, i32 0, i32 0, !dbg !5505
  %arrayidx687 = getelementptr inbounds [4 x float], [4 x float]* %combined686, i64 0, i64 0, !dbg !5504
  %424 = load float, float* %arrayidx687, align 4, !dbg !5506
  %add688 = fadd float %424, %422, !dbg !5506
  store float %add688, float* %arrayidx687, align 4, !dbg !5506
  %425 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5507
  %ambg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %425, i32 0, i32 43, !dbg !5508
  %426 = load float, float* %ambg, align 8, !dbg !5508
  %427 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5509
  %combined689 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %427, i32 0, i32 0, !dbg !5510
  %arrayidx690 = getelementptr inbounds [4 x float], [4 x float]* %combined689, i64 0, i64 1, !dbg !5509
  %428 = load float, float* %arrayidx690, align 4, !dbg !5511
  %add691 = fadd float %428, %426, !dbg !5511
  store float %add691, float* %arrayidx690, align 4, !dbg !5511
  %429 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5512
  %ambb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %429, i32 0, i32 42, !dbg !5513
  %430 = load float, float* %ambb, align 4, !dbg !5513
  %431 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5514
  %combined692 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %431, i32 0, i32 0, !dbg !5515
  %arrayidx693 = getelementptr inbounds [4 x float], [4 x float]* %combined692, i64 0, i64 2, !dbg !5514
  %432 = load float, float* %arrayidx693, align 4, !dbg !5516
  %add694 = fadd float %432, %430, !dbg !5516
  store float %add694, float* %arrayidx693, align 4, !dbg !5516
  %433 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5517
  %mode695 = getelementptr inbounds %struct.Material, %struct.Material* %433, i32 0, i32 51, !dbg !5519
  %434 = load i32, i32* %mode695, align 4, !dbg !5519
  %and696 = and i32 %434, 1048576, !dbg !5520
  %tobool697 = icmp ne i32 %and696, 0, !dbg !5520
  br i1 %tobool697, label %if.then698, label %if.end701, !dbg !5521

if.then698:                                       ; preds = %if.end685
  %435 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5522
  %combined699 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %435, i32 0, i32 0, !dbg !5523
  %arraydecay700 = getelementptr inbounds [4 x float], [4 x float]* %combined699, i64 0, i64 0, !dbg !5522
  %436 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5524
  call void @ramp_diffuse_result(float* %arraydecay700, %struct.ShadeInput* %436), !dbg !5525
  br label %if.end701, !dbg !5525

if.end701:                                        ; preds = %if.then698, %if.end685
  br label %if.end702, !dbg !5526

if.end702:                                        ; preds = %if.end701, %lor.lhs.false648
  %437 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5527
  %mode703 = getelementptr inbounds %struct.Material, %struct.Material* %437, i32 0, i32 51, !dbg !5529
  %438 = load i32, i32* %mode703, align 4, !dbg !5529
  %and704 = and i32 %438, 2097152, !dbg !5530
  %tobool705 = icmp ne i32 %and704, 0, !dbg !5530
  br i1 %tobool705, label %if.then706, label %if.end709, !dbg !5531

if.then706:                                       ; preds = %if.end702
  %439 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5532
  %spec707 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %439, i32 0, i32 8, !dbg !5533
  %arraydecay708 = getelementptr inbounds [3 x float], [3 x float]* %spec707, i64 0, i64 0, !dbg !5532
  %440 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5534
  call void @ramp_spec_result(float* %arraydecay708, %struct.ShadeInput* %440), !dbg !5535
  br label %if.end709, !dbg !5535

if.end709:                                        ; preds = %if.then706, %if.end702
  %441 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5536
  %refcol710 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %441, i32 0, i32 62, !dbg !5538
  %arrayidx711 = getelementptr inbounds [4 x float], [4 x float]* %refcol710, i64 0, i64 0, !dbg !5536
  %442 = load float, float* %arrayidx711, align 8, !dbg !5536
  %cmp712 = fcmp une float %442, 0.000000e+00, !dbg !5539
  br i1 %cmp712, label %if.then714, label %if.end770, !dbg !5540

if.then714:                                       ; preds = %if.end709
  call void @llvm.dbg.declare(metadata [3 x float]* %result, metadata !5541, metadata !DIExpression()), !dbg !5543
  %443 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5544
  %mirr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %443, i32 0, i32 38, !dbg !5545
  %444 = load float, float* %mirr, align 4, !dbg !5545
  %445 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5546
  %refcol715 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %445, i32 0, i32 62, !dbg !5547
  %arrayidx716 = getelementptr inbounds [4 x float], [4 x float]* %refcol715, i64 0, i64 1, !dbg !5546
  %446 = load float, float* %arrayidx716, align 4, !dbg !5546
  %mul717 = fmul float %444, %446, !dbg !5548
  %447 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5549
  %mirr718 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %447, i32 0, i32 38, !dbg !5550
  %448 = load float, float* %mirr718, align 4, !dbg !5550
  %449 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5551
  %refcol719 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %449, i32 0, i32 62, !dbg !5552
  %arrayidx720 = getelementptr inbounds [4 x float], [4 x float]* %refcol719, i64 0, i64 0, !dbg !5551
  %450 = load float, float* %arrayidx720, align 8, !dbg !5551
  %mul721 = fmul float %448, %450, !dbg !5553
  %sub722 = fsub float 1.000000e+00, %mul721, !dbg !5554
  %451 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5555
  %combined723 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %451, i32 0, i32 0, !dbg !5556
  %arrayidx724 = getelementptr inbounds [4 x float], [4 x float]* %combined723, i64 0, i64 0, !dbg !5555
  %452 = load float, float* %arrayidx724, align 4, !dbg !5555
  %mul725 = fmul float %sub722, %452, !dbg !5557
  %add726 = fadd float %mul717, %mul725, !dbg !5558
  %arrayidx727 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !5559
  store float %add726, float* %arrayidx727, align 4, !dbg !5560
  %453 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5561
  %mirg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %453, i32 0, i32 39, !dbg !5562
  %454 = load float, float* %mirg, align 8, !dbg !5562
  %455 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5563
  %refcol728 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %455, i32 0, i32 62, !dbg !5564
  %arrayidx729 = getelementptr inbounds [4 x float], [4 x float]* %refcol728, i64 0, i64 2, !dbg !5563
  %456 = load float, float* %arrayidx729, align 8, !dbg !5563
  %mul730 = fmul float %454, %456, !dbg !5565
  %457 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5566
  %mirg731 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %457, i32 0, i32 39, !dbg !5567
  %458 = load float, float* %mirg731, align 8, !dbg !5567
  %459 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5568
  %refcol732 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %459, i32 0, i32 62, !dbg !5569
  %arrayidx733 = getelementptr inbounds [4 x float], [4 x float]* %refcol732, i64 0, i64 0, !dbg !5568
  %460 = load float, float* %arrayidx733, align 8, !dbg !5568
  %mul734 = fmul float %458, %460, !dbg !5570
  %sub735 = fsub float 1.000000e+00, %mul734, !dbg !5571
  %461 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5572
  %combined736 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %461, i32 0, i32 0, !dbg !5573
  %arrayidx737 = getelementptr inbounds [4 x float], [4 x float]* %combined736, i64 0, i64 1, !dbg !5572
  %462 = load float, float* %arrayidx737, align 4, !dbg !5572
  %mul738 = fmul float %sub735, %462, !dbg !5574
  %add739 = fadd float %mul730, %mul738, !dbg !5575
  %arrayidx740 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 1, !dbg !5576
  store float %add739, float* %arrayidx740, align 4, !dbg !5577
  %463 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5578
  %mirb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %463, i32 0, i32 40, !dbg !5579
  %464 = load float, float* %mirb, align 4, !dbg !5579
  %465 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5580
  %refcol741 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %465, i32 0, i32 62, !dbg !5581
  %arrayidx742 = getelementptr inbounds [4 x float], [4 x float]* %refcol741, i64 0, i64 3, !dbg !5580
  %466 = load float, float* %arrayidx742, align 4, !dbg !5580
  %mul743 = fmul float %464, %466, !dbg !5582
  %467 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5583
  %mirb744 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %467, i32 0, i32 40, !dbg !5584
  %468 = load float, float* %mirb744, align 4, !dbg !5584
  %469 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5585
  %refcol745 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %469, i32 0, i32 62, !dbg !5586
  %arrayidx746 = getelementptr inbounds [4 x float], [4 x float]* %refcol745, i64 0, i64 0, !dbg !5585
  %470 = load float, float* %arrayidx746, align 8, !dbg !5585
  %mul747 = fmul float %468, %470, !dbg !5587
  %sub748 = fsub float 1.000000e+00, %mul747, !dbg !5588
  %471 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5589
  %combined749 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %471, i32 0, i32 0, !dbg !5590
  %arrayidx750 = getelementptr inbounds [4 x float], [4 x float]* %combined749, i64 0, i64 2, !dbg !5589
  %472 = load float, float* %arrayidx750, align 4, !dbg !5589
  %mul751 = fmul float %sub748, %472, !dbg !5591
  %add752 = fadd float %mul743, %mul751, !dbg !5592
  %arrayidx753 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 2, !dbg !5593
  store float %add752, float* %arrayidx753, align 4, !dbg !5594
  %473 = load i32, i32* %passflag, align 4, !dbg !5595
  %and754 = and i32 %473, 128, !dbg !5597
  %tobool755 = icmp ne i32 %and754, 0, !dbg !5597
  br i1 %tobool755, label %if.then756, label %if.end761, !dbg !5598

if.then756:                                       ; preds = %if.then714
  %474 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5599
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %474, i32 0, i32 13, !dbg !5600
  %arraydecay757 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !5599
  %arraydecay758 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !5601
  %475 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5602
  %combined759 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %475, i32 0, i32 0, !dbg !5603
  %arraydecay760 = getelementptr inbounds [4 x float], [4 x float]* %combined759, i64 0, i64 0, !dbg !5602
  call void @sub_v3_v3v3(float* %arraydecay757, float* %arraydecay758, float* %arraydecay760), !dbg !5604
  br label %if.end761, !dbg !5604

if.end761:                                        ; preds = %if.then756, %if.then714
  %476 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5605
  %combinedflag762 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %476, i32 0, i32 120, !dbg !5607
  %477 = load i32, i32* %combinedflag762, align 4, !dbg !5607
  %and763 = and i32 %477, 128, !dbg !5608
  %tobool764 = icmp ne i32 %and763, 0, !dbg !5608
  br i1 %tobool764, label %if.then765, label %if.end769, !dbg !5609

if.then765:                                       ; preds = %if.end761
  %478 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5610
  %combined766 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %478, i32 0, i32 0, !dbg !5611
  %arraydecay767 = getelementptr inbounds [4 x float], [4 x float]* %combined766, i64 0, i64 0, !dbg !5610
  %arraydecay768 = getelementptr inbounds [3 x float], [3 x float]* %result, i64 0, i64 0, !dbg !5612
  call void @copy_v3_v3(float* %arraydecay767, float* %arraydecay768), !dbg !5613
  br label %if.end769, !dbg !5613

if.end769:                                        ; preds = %if.then765, %if.end761
  br label %if.end770, !dbg !5614

if.end770:                                        ; preds = %if.end769, %if.end709
  %479 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5615
  %combinedflag771 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %479, i32 0, i32 120, !dbg !5617
  %480 = load i32, i32* %combinedflag771, align 4, !dbg !5617
  %and772 = and i32 %480, 65536, !dbg !5618
  %tobool773 = icmp ne i32 %and772, 0, !dbg !5618
  br i1 %tobool773, label %if.then774, label %if.end779, !dbg !5619

if.then774:                                       ; preds = %if.end770
  %481 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5620
  %combined775 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %481, i32 0, i32 0, !dbg !5621
  %arraydecay776 = getelementptr inbounds [4 x float], [4 x float]* %combined775, i64 0, i64 0, !dbg !5620
  %482 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5622
  %emit777 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %482, i32 0, i32 5, !dbg !5623
  %arraydecay778 = getelementptr inbounds [3 x float], [3 x float]* %emit777, i64 0, i64 0, !dbg !5622
  call void @add_v3_v3(float* %arraydecay776, float* %arraydecay778), !dbg !5624
  br label %if.end779, !dbg !5624

if.end779:                                        ; preds = %if.then774, %if.end770
  %483 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5625
  %combinedflag780 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %483, i32 0, i32 120, !dbg !5627
  %484 = load i32, i32* %combinedflag780, align 4, !dbg !5627
  %and781 = and i32 %484, 16, !dbg !5628
  %tobool782 = icmp ne i32 %and781, 0, !dbg !5628
  br i1 %tobool782, label %if.then783, label %if.end788, !dbg !5629

if.then783:                                       ; preds = %if.end779
  %485 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5630
  %combined784 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %485, i32 0, i32 0, !dbg !5631
  %arraydecay785 = getelementptr inbounds [4 x float], [4 x float]* %combined784, i64 0, i64 0, !dbg !5630
  %486 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5632
  %spec786 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %486, i32 0, i32 8, !dbg !5633
  %arraydecay787 = getelementptr inbounds [3 x float], [3 x float]* %spec786, i64 0, i64 0, !dbg !5632
  call void @add_v3_v3(float* %arraydecay785, float* %arraydecay787), !dbg !5634
  br label %if.end788, !dbg !5634

if.end788:                                        ; preds = %if.then783, %if.end779
  %487 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5635
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %487, i32 0, i32 50, !dbg !5637
  %488 = load i16, i16* %shade_flag, align 2, !dbg !5637
  %conv789 = sext i16 %488 to i32, !dbg !5635
  %and790 = and i32 %conv789, 2, !dbg !5638
  %tobool791 = icmp ne i32 %and790, 0, !dbg !5638
  br i1 %tobool791, label %land.lhs.true792, label %if.end842, !dbg !5639

land.lhs.true792:                                 ; preds = %if.end788
  %489 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5640
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %489, i32 0, i32 4, !dbg !5641
  %490 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5641
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %490, i32 0, i32 2, !dbg !5642
  %491 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5642
  %tobool793 = icmp ne %struct.Object* %491, null, !dbg !5640
  br i1 %tobool793, label %if.then794, label %if.end842, !dbg !5643

if.then794:                                       ; preds = %land.lhs.true792
  %492 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5644
  %sss_flag795 = getelementptr inbounds %struct.Material, %struct.Material* %492, i32 0, i32 123, !dbg !5647
  %493 = load i16, i16* %sss_flag795, align 4, !dbg !5647
  %conv796 = sext i16 %493 to i32, !dbg !5644
  %and797 = and i32 %conv796, 1, !dbg !5648
  %tobool798 = icmp ne i32 %and797, 0, !dbg !5648
  br i1 %tobool798, label %lor.lhs.false799, label %if.then802, !dbg !5649

lor.lhs.false799:                                 ; preds = %if.then794
  %494 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5650
  %call800 = call i32 @sss_pass_done(%struct.Render* @R, %struct.Material* %494), !dbg !5651
  %tobool801 = icmp ne i32 %call800, 0, !dbg !5651
  br i1 %tobool801, label %if.end841, label %if.then802, !dbg !5652

if.then802:                                       ; preds = %lor.lhs.false799, %if.then794
  call void @llvm.dbg.declare(metadata [4 x float]* %obcol, metadata !5653, metadata !DIExpression()), !dbg !5655
  %arraydecay803 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 0, !dbg !5656
  %495 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5657
  %obr804 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %495, i32 0, i32 4, !dbg !5658
  %496 = load %struct.ObjectRen*, %struct.ObjectRen** %obr804, align 8, !dbg !5658
  %ob805 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %496, i32 0, i32 2, !dbg !5659
  %497 = load %struct.Object*, %struct.Object** %ob805, align 8, !dbg !5659
  %col806 = getelementptr inbounds %struct.Object, %struct.Object* %497, i32 0, i32 98, !dbg !5660
  %arraydecay807 = getelementptr inbounds [4 x float], [4 x float]* %col806, i64 0, i64 0, !dbg !5657
  call void @copy_v4_v4(float* %arraydecay803, float* %arraydecay807), !dbg !5661
  %arrayidx808 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !5662
  %498 = load float, float* %arrayidx808, align 4, !dbg !5662
  %cmp809 = fcmp olt float %498, 0.000000e+00, !dbg !5662
  br i1 %cmp809, label %if.then811, label %if.else813, !dbg !5665

if.then811:                                       ; preds = %if.then802
  %arrayidx812 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !5662
  store float 0.000000e+00, float* %arrayidx812, align 4, !dbg !5662
  br label %if.end820, !dbg !5662

if.else813:                                       ; preds = %if.then802
  %arrayidx814 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !5666
  %499 = load float, float* %arrayidx814, align 4, !dbg !5666
  %cmp815 = fcmp ogt float %499, 1.000000e+00, !dbg !5666
  br i1 %cmp815, label %if.then817, label %if.end819, !dbg !5662

if.then817:                                       ; preds = %if.else813
  %arrayidx818 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !5666
  store float 1.000000e+00, float* %arrayidx818, align 4, !dbg !5666
  br label %if.end819, !dbg !5666

if.end819:                                        ; preds = %if.then817, %if.else813
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.then811
  %arrayidx821 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 0, !dbg !5668
  %500 = load float, float* %arrayidx821, align 16, !dbg !5668
  %501 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5669
  %combined822 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %501, i32 0, i32 0, !dbg !5670
  %arrayidx823 = getelementptr inbounds [4 x float], [4 x float]* %combined822, i64 0, i64 0, !dbg !5669
  %502 = load float, float* %arrayidx823, align 4, !dbg !5671
  %mul824 = fmul float %502, %500, !dbg !5671
  store float %mul824, float* %arrayidx823, align 4, !dbg !5671
  %arrayidx825 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 1, !dbg !5672
  %503 = load float, float* %arrayidx825, align 4, !dbg !5672
  %504 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5673
  %combined826 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %504, i32 0, i32 0, !dbg !5674
  %arrayidx827 = getelementptr inbounds [4 x float], [4 x float]* %combined826, i64 0, i64 1, !dbg !5673
  %505 = load float, float* %arrayidx827, align 4, !dbg !5675
  %mul828 = fmul float %505, %503, !dbg !5675
  store float %mul828, float* %arrayidx827, align 4, !dbg !5675
  %arrayidx829 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 2, !dbg !5676
  %506 = load float, float* %arrayidx829, align 8, !dbg !5676
  %507 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5677
  %combined830 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %507, i32 0, i32 0, !dbg !5678
  %arrayidx831 = getelementptr inbounds [4 x float], [4 x float]* %combined830, i64 0, i64 2, !dbg !5677
  %508 = load float, float* %arrayidx831, align 4, !dbg !5679
  %mul832 = fmul float %508, %506, !dbg !5679
  store float %mul832, float* %arrayidx831, align 4, !dbg !5679
  %509 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5680
  %mode833 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %509, i32 0, i32 21, !dbg !5682
  %510 = load i32, i32* %mode833, align 8, !dbg !5682
  %and834 = and i32 %510, 65536, !dbg !5683
  %tobool835 = icmp ne i32 %and834, 0, !dbg !5683
  br i1 %tobool835, label %if.then836, label %if.end840, !dbg !5684

if.then836:                                       ; preds = %if.end820
  %arrayidx837 = getelementptr inbounds [4 x float], [4 x float]* %obcol, i64 0, i64 3, !dbg !5685
  %511 = load float, float* %arrayidx837, align 4, !dbg !5685
  %512 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5686
  %alpha838 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %512, i32 0, i32 2, !dbg !5687
  %513 = load float, float* %alpha838, align 4, !dbg !5688
  %mul839 = fmul float %513, %511, !dbg !5688
  store float %mul839, float* %alpha838, align 4, !dbg !5688
  br label %if.end840, !dbg !5686

if.end840:                                        ; preds = %if.then836, %if.end820
  br label %if.end841, !dbg !5689

if.end841:                                        ; preds = %if.end840, %lor.lhs.false799
  br label %if.end842, !dbg !5690

if.end842:                                        ; preds = %if.end841, %land.lhs.true792, %if.end788
  %514 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5691
  %alpha843 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %514, i32 0, i32 2, !dbg !5692
  %515 = load float, float* %alpha843, align 4, !dbg !5692
  %516 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5693
  %combined844 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %516, i32 0, i32 0, !dbg !5694
  %arrayidx845 = getelementptr inbounds [4 x float], [4 x float]* %combined844, i64 0, i64 3, !dbg !5693
  store float %515, float* %arrayidx845, align 4, !dbg !5695
  br label %return, !dbg !5696

return:                                           ; preds = %if.end842, %if.then189, %if.then5
  ret void, !dbg !5696
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal void @shade_lamp_loop_only_shadow(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !5697 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %lights = alloca %struct.ListBase*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %inpr = alloca float, align 4
  %lv = alloca [3 x float], align 4
  %shadfac = alloca [4 x float], align 16
  %ir = alloca float, align 4
  %accum = alloca float, align 4
  %visifac = alloca float, align 4
  %lampdist = alloca float, align 4
  %shaded = alloca float, align 4
  %lightness = alloca float, align 4
  %f = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !5698, metadata !DIExpression()), !dbg !5699
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  %0 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !5702
  %and = and i32 %0, 2, !dbg !5704
  %tobool = icmp ne i32 %and, 0, !dbg !5704
  br i1 %tobool, label %if.then, label %if.end136, !dbg !5705

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lights, metadata !5706, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !5709, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !5711, metadata !DIExpression()), !dbg !5712
  call void @llvm.dbg.declare(metadata float* %inpr, metadata !5713, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.declare(metadata [3 x float]* %lv, metadata !5715, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata [4 x float]* %shadfac, metadata !5717, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.declare(metadata float* %ir, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata float* %accum, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata float* %visifac, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata float* %lampdist, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata float* %shaded, metadata !5727, metadata !DIExpression()), !dbg !5728
  store float 0.000000e+00, float* %shaded, align 4, !dbg !5728
  call void @llvm.dbg.declare(metadata float* %lightness, metadata !5729, metadata !DIExpression()), !dbg !5730
  store float 0.000000e+00, float* %lightness, align 4, !dbg !5730
  store float 0.000000e+00, float* %ir, align 4, !dbg !5731
  store float 0.000000e+00, float* %accum, align 4, !dbg !5732
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5733
  %call = call %struct.ListBase* @get_lights(%struct.ShadeInput* %1), !dbg !5734
  store %struct.ListBase* %call, %struct.ListBase** %lights, align 8, !dbg !5735
  %2 = load %struct.ListBase*, %struct.ListBase** %lights, align 8, !dbg !5736
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !5738
  %3 = load i8*, i8** %first, align 8, !dbg !5738
  %4 = bitcast i8* %3 to %struct.GroupObject*, !dbg !5736
  store %struct.GroupObject* %4, %struct.GroupObject** %go, align 8, !dbg !5739
  br label %for.cond, !dbg !5740

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5741
  %tobool1 = icmp ne %struct.GroupObject* %5, null, !dbg !5743
  br i1 %tobool1, label %for.body, label %for.end, !dbg !5743

for.body:                                         ; preds = %for.cond
  %6 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5744
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %6, i32 0, i32 3, !dbg !5746
  %7 = load i8*, i8** %lampren, align 8, !dbg !5746
  %8 = bitcast i8* %7 to %struct.LampRen*, !dbg !5744
  store %struct.LampRen* %8, %struct.LampRen** %lar, align 8, !dbg !5747
  %9 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5748
  %cmp = icmp eq %struct.LampRen* %9, null, !dbg !5750
  br i1 %cmp, label %if.then2, label %if.end, !dbg !5751

if.then2:                                         ; preds = %for.body
  br label %for.inc, !dbg !5752

if.end:                                           ; preds = %for.body
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5753
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 6, !dbg !5755
  %11 = load i16, i16* %type, align 8, !dbg !5755
  %conv = sext i16 %11 to i32, !dbg !5753
  %cmp3 = icmp eq i32 %conv, 5, !dbg !5756
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5757

if.then5:                                         ; preds = %if.end
  br label %for.inc, !dbg !5758

if.end6:                                          ; preds = %if.end
  %12 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5759
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 7, !dbg !5761
  %13 = load i32, i32* %mode, align 4, !dbg !5761
  %and7 = and i32 %13, 4, !dbg !5762
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5762
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !5763

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5764
  %lay = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 17, !dbg !5766
  %15 = load i32, i32* %lay, align 4, !dbg !5766
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5767
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 3, !dbg !5768
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5768
  %lay10 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 7, !dbg !5769
  %18 = load i32, i32* %lay10, align 8, !dbg !5769
  %and11 = and i32 %15, %18, !dbg !5770
  %cmp12 = icmp eq i32 %and11, 0, !dbg !5771
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5772

if.then14:                                        ; preds = %if.then9
  br label %for.inc, !dbg !5773

if.end15:                                         ; preds = %if.then9
  br label %if.end16, !dbg !5774

if.end16:                                         ; preds = %if.end15, %if.end6
  %19 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5775
  %lay17 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %19, i32 0, i32 17, !dbg !5777
  %20 = load i32, i32* %lay17, align 4, !dbg !5777
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5778
  %lay18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 117, !dbg !5779
  %22 = load i32, i32* %lay18, align 8, !dbg !5779
  %and19 = and i32 %20, %22, !dbg !5780
  %cmp20 = icmp eq i32 %and19, 0, !dbg !5781
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5782

if.then22:                                        ; preds = %if.end16
  br label %for.inc, !dbg !5783

if.end23:                                         ; preds = %if.end16
  %23 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5784
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %23, i32 0, i32 57, !dbg !5786
  %24 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !5786
  %tobool24 = icmp ne %struct.ShadBuf* %24, null, !dbg !5784
  br i1 %tobool24, label %if.then28, label %lor.lhs.false, !dbg !5787

lor.lhs.false:                                    ; preds = %if.end23
  %25 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5788
  %mode25 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %25, i32 0, i32 7, !dbg !5789
  %26 = load i32, i32* %mode25, align 4, !dbg !5789
  %and26 = and i32 %26, 8192, !dbg !5790
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5790
  br i1 %tobool27, label %if.then28, label %if.end86, !dbg !5791

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  %27 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5792
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5794
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 29, !dbg !5795
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5794
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !5796
  %call30 = call float @lamp_get_visibility(%struct.LampRen* %27, float* %arraydecay, float* %arraydecay29, float* %lampdist), !dbg !5797
  store float %call30, float* %visifac, align 4, !dbg !5798
  %29 = load float, float* %ir, align 4, !dbg !5799
  %add = fadd float %29, 1.000000e+00, !dbg !5799
  store float %add, float* %ir, align 4, !dbg !5799
  %30 = load float, float* %visifac, align 4, !dbg !5800
  %cmp31 = fcmp ole float %30, 0.000000e+00, !dbg !5802
  br i1 %cmp31, label %if.then33, label %if.end40, !dbg !5803

if.then33:                                        ; preds = %if.then28
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5804
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 0, !dbg !5807
  %32 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !5807
  %shadowonly_flag = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 126, !dbg !5808
  %33 = load i16, i16* %shadowonly_flag, align 4, !dbg !5808
  %conv34 = sext i16 %33 to i32, !dbg !5804
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !5809
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !5810

if.then37:                                        ; preds = %if.then33
  %34 = load float, float* %accum, align 4, !dbg !5811
  %add38 = fadd float %34, 1.000000e+00, !dbg !5811
  store float %add38, float* %accum, align 4, !dbg !5811
  br label %if.end39, !dbg !5812

if.end39:                                         ; preds = %if.then37, %if.then33
  br label %for.inc, !dbg !5813

if.end40:                                         ; preds = %if.then28
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5814
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 16, !dbg !5815
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5814
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !5816
  %call43 = call float @dot_v3v3(float* %arraydecay41, float* %arraydecay42), !dbg !5817
  store float %call43, float* %inpr, align 4, !dbg !5818
  %36 = load float, float* %inpr, align 4, !dbg !5819
  %cmp44 = fcmp ole float %36, 0.000000e+00, !dbg !5821
  br i1 %cmp44, label %if.then46, label %if.end55, !dbg !5822

if.then46:                                        ; preds = %if.end40
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5823
  %mat47 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 0, !dbg !5826
  %38 = load %struct.Material*, %struct.Material** %mat47, align 8, !dbg !5826
  %shadowonly_flag48 = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 126, !dbg !5827
  %39 = load i16, i16* %shadowonly_flag48, align 4, !dbg !5827
  %conv49 = sext i16 %39 to i32, !dbg !5823
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !5828
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !5829

if.then52:                                        ; preds = %if.then46
  %40 = load float, float* %accum, align 4, !dbg !5830
  %add53 = fadd float %40, 1.000000e+00, !dbg !5830
  store float %add53, float* %accum, align 4, !dbg !5830
  br label %if.end54, !dbg !5831

if.end54:                                         ; preds = %if.then52, %if.then46
  br label %for.inc, !dbg !5832

if.end55:                                         ; preds = %if.end40
  %41 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5833
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5834
  %43 = load float, float* %inpr, align 4, !dbg !5835
  %arraydecay56 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !5836
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5837
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 108, !dbg !5838
  %45 = load i32, i32* %depth, align 8, !dbg !5838
  call void @lamp_get_shadow(%struct.LampRen* %41, %struct.ShadeInput* %42, float %43, float* %arraydecay56, i32 %45), !dbg !5839
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5840
  %mat57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 0, !dbg !5842
  %47 = load %struct.Material*, %struct.Material** %mat57, align 8, !dbg !5842
  %shadowonly_flag58 = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 126, !dbg !5843
  %48 = load i16, i16* %shadowonly_flag58, align 4, !dbg !5843
  %conv59 = sext i16 %48 to i32, !dbg !5840
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !5844
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !5845

if.then62:                                        ; preds = %if.end55
  %49 = load float, float* %visifac, align 4, !dbg !5846
  %sub = fsub float 1.000000e+00, %49, !dbg !5848
  %50 = load float, float* %visifac, align 4, !dbg !5849
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !5850
  %call64 = call float @rgb_to_grayscale(float* %arraydecay63), !dbg !5851
  %mul = fmul float %50, %call64, !dbg !5852
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !5853
  %51 = load float, float* %arrayidx, align 4, !dbg !5853
  %mul65 = fmul float %mul, %51, !dbg !5854
  %add66 = fadd float %sub, %mul65, !dbg !5855
  %52 = load float, float* %accum, align 4, !dbg !5856
  %add67 = fadd float %52, %add66, !dbg !5856
  store float %add67, float* %accum, align 4, !dbg !5856
  br label %if.end85, !dbg !5857

if.else:                                          ; preds = %if.end55
  %arraydecay68 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !5858
  %call69 = call float @rgb_to_grayscale(float* %arraydecay68), !dbg !5860
  %arrayidx70 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !5861
  %53 = load float, float* %arrayidx70, align 4, !dbg !5861
  %mul71 = fmul float %call69, %53, !dbg !5862
  %54 = load float, float* %visifac, align 4, !dbg !5863
  %mul72 = fmul float %mul71, %54, !dbg !5864
  %55 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5865
  %energy = getelementptr inbounds %struct.LampRen, %struct.LampRen* %55, i32 0, i32 15, !dbg !5866
  %56 = load float, float* %energy, align 4, !dbg !5866
  %mul73 = fmul float %mul72, %56, !dbg !5867
  %57 = load float, float* %shaded, align 4, !dbg !5868
  %add74 = fadd float %57, %mul73, !dbg !5868
  store float %add74, float* %shaded, align 4, !dbg !5868
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5869
  %mat75 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %58, i32 0, i32 0, !dbg !5871
  %59 = load %struct.Material*, %struct.Material** %mat75, align 8, !dbg !5871
  %shadowonly_flag76 = getelementptr inbounds %struct.Material, %struct.Material* %59, i32 0, i32 126, !dbg !5872
  %60 = load i16, i16* %shadowonly_flag76, align 4, !dbg !5872
  %conv77 = sext i16 %60 to i32, !dbg !5869
  %cmp78 = icmp eq i32 %conv77, 1, !dbg !5873
  br i1 %cmp78, label %if.then80, label %if.end84, !dbg !5874

if.then80:                                        ; preds = %if.else
  %61 = load float, float* %visifac, align 4, !dbg !5875
  %62 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5877
  %energy81 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %62, i32 0, i32 15, !dbg !5878
  %63 = load float, float* %energy81, align 4, !dbg !5878
  %mul82 = fmul float %61, %63, !dbg !5879
  %64 = load float, float* %lightness, align 4, !dbg !5880
  %add83 = fadd float %64, %mul82, !dbg !5880
  store float %add83, float* %lightness, align 4, !dbg !5880
  br label %if.end84, !dbg !5881

if.end84:                                         ; preds = %if.then80, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then62
  br label %if.end86, !dbg !5882

if.end86:                                         ; preds = %if.end85, %lor.lhs.false
  br label %for.inc, !dbg !5883

for.inc:                                          ; preds = %if.end86, %if.end54, %if.end39, %if.then22, %if.then14, %if.then5, %if.then2
  %65 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5884
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %65, i32 0, i32 0, !dbg !5885
  %66 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !5885
  store %struct.GroupObject* %66, %struct.GroupObject** %go, align 8, !dbg !5886
  br label %for.cond, !dbg !5887, !llvm.loop !5888

for.end:                                          ; preds = %for.cond
  %67 = load float, float* %ir, align 4, !dbg !5890
  %cmp87 = fcmp ogt float %67, 0.000000e+00, !dbg !5892
  br i1 %cmp87, label %if.then89, label %if.else123, !dbg !5893

if.then89:                                        ; preds = %for.end
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5894
  %mat90 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 0, !dbg !5897
  %69 = load %struct.Material*, %struct.Material** %mat90, align 8, !dbg !5897
  %shadowonly_flag91 = getelementptr inbounds %struct.Material, %struct.Material* %69, i32 0, i32 126, !dbg !5898
  %70 = load i16, i16* %shadowonly_flag91, align 4, !dbg !5898
  %conv92 = sext i16 %70 to i32, !dbg !5894
  %cmp93 = icmp eq i32 %conv92, 0, !dbg !5899
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !5900

if.then95:                                        ; preds = %if.then89
  %71 = load float, float* %accum, align 4, !dbg !5901
  %72 = load float, float* %ir, align 4, !dbg !5903
  %div = fdiv float %71, %72, !dbg !5904
  %sub96 = fsub float 1.000000e+00, %div, !dbg !5905
  store float %sub96, float* %accum, align 4, !dbg !5906
  br label %if.end114, !dbg !5907

if.else97:                                        ; preds = %if.then89
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5908
  %mat98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 0, !dbg !5911
  %74 = load %struct.Material*, %struct.Material** %mat98, align 8, !dbg !5911
  %shadowonly_flag99 = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 126, !dbg !5912
  %75 = load i16, i16* %shadowonly_flag99, align 4, !dbg !5912
  %conv100 = sext i16 %75 to i32, !dbg !5908
  %cmp101 = icmp eq i32 %conv100, 1, !dbg !5913
  br i1 %cmp101, label %if.then103, label %if.else111, !dbg !5914

if.then103:                                       ; preds = %if.else97
  %76 = load float, float* %lightness, align 4, !dbg !5915
  %cmp104 = fcmp ogt float %76, 0.000000e+00, !dbg !5918
  br i1 %cmp104, label %if.then106, label %if.else109, !dbg !5919

if.then106:                                       ; preds = %if.then103
  %77 = load float, float* %lightness, align 4, !dbg !5920
  %78 = load float, float* %shaded, align 4, !dbg !5922
  %sub107 = fsub float %77, %78, !dbg !5923
  %79 = load float, float* %lightness, align 4, !dbg !5924
  %div108 = fdiv float %sub107, %79, !dbg !5925
  store float %div108, float* %accum, align 4, !dbg !5926
  br label %if.end110, !dbg !5927

if.else109:                                       ; preds = %if.then103
  store float 0.000000e+00, float* %accum, align 4, !dbg !5928
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then106
  br label %if.end113, !dbg !5930

if.else111:                                       ; preds = %if.else97
  %80 = load float, float* %shaded, align 4, !dbg !5931
  %sub112 = fsub float 1.000000e+00, %80, !dbg !5933
  store float %sub112, float* %accum, align 4, !dbg !5934
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.end110
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then95
  %81 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5935
  %alpha = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %81, i32 0, i32 49, !dbg !5936
  %82 = load float, float* %alpha, align 8, !dbg !5936
  %83 = load float, float* %accum, align 4, !dbg !5937
  %mul115 = fmul float %82, %83, !dbg !5938
  %84 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5939
  %alpha116 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %84, i32 0, i32 2, !dbg !5940
  store float %mul115, float* %alpha116, align 4, !dbg !5941
  %85 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5942
  %alpha117 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %85, i32 0, i32 2, !dbg !5944
  %86 = load float, float* %alpha117, align 4, !dbg !5944
  %cmp118 = fcmp olt float %86, 0.000000e+00, !dbg !5945
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !5946

if.then120:                                       ; preds = %if.end114
  %87 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5947
  %alpha121 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %87, i32 0, i32 2, !dbg !5948
  store float 0.000000e+00, float* %alpha121, align 4, !dbg !5949
  br label %if.end122, !dbg !5947

if.end122:                                        ; preds = %if.then120, %if.end114
  br label %if.end135, !dbg !5950

if.else123:                                       ; preds = %for.end
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5951
  %mat124 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %88, i32 0, i32 0, !dbg !5954
  %89 = load %struct.Material*, %struct.Material** %mat124, align 8, !dbg !5954
  %shadowonly_flag125 = getelementptr inbounds %struct.Material, %struct.Material* %89, i32 0, i32 126, !dbg !5955
  %90 = load i16, i16* %shadowonly_flag125, align 4, !dbg !5955
  %conv126 = sext i16 %90 to i32, !dbg !5951
  %cmp127 = icmp eq i32 %conv126, 2, !dbg !5956
  br i1 %cmp127, label %if.then129, label %if.else132, !dbg !5957

if.then129:                                       ; preds = %if.else123
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5958
  %alpha130 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %91, i32 0, i32 49, !dbg !5959
  %92 = load float, float* %alpha130, align 8, !dbg !5959
  %93 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5960
  %alpha131 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %93, i32 0, i32 2, !dbg !5961
  store float %92, float* %alpha131, align 4, !dbg !5962
  br label %if.end134, !dbg !5960

if.else132:                                       ; preds = %if.else123
  %94 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !5963
  %alpha133 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %94, i32 0, i32 2, !dbg !5964
  store float 0.000000e+00, float* %alpha133, align 4, !dbg !5965
  br label %if.end134

if.end134:                                        ; preds = %if.else132, %if.then129
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end122
  br label %if.end136, !dbg !5966

if.end136:                                        ; preds = %if.end135, %entry
  %95 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !5967
  %conv137 = sext i16 %95 to i32, !dbg !5969
  %and138 = and i32 %conv137, 80, !dbg !5970
  %tobool139 = icmp ne i32 %and138, 0, !dbg !5970
  br i1 %tobool139, label %land.lhs.true, label %if.end234, !dbg !5971

land.lhs.true:                                    ; preds = %if.end136
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5972
  %amb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 44, !dbg !5973
  %97 = load float, float* %amb, align 4, !dbg !5973
  %cmp140 = fcmp une float %97, 0.000000e+00, !dbg !5974
  br i1 %cmp140, label %if.then142, label %if.end234, !dbg !5975

if.then142:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %f, metadata !5976, metadata !DIExpression()), !dbg !5978
  %98 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !5979
  %conv143 = sext i16 %98 to i32, !dbg !5981
  %and144 = and i32 %conv143, 64, !dbg !5982
  %tobool145 = icmp ne i32 %and144, 0, !dbg !5982
  br i1 %tobool145, label %if.then146, label %if.end196, !dbg !5983

if.then146:                                       ; preds = %if.then142
  %99 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 48), align 8, !dbg !5984
  %100 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5986
  %amb147 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %100, i32 0, i32 44, !dbg !5987
  %101 = load float, float* %amb147, align 4, !dbg !5987
  %mul148 = fmul float %99, %101, !dbg !5988
  store float %mul148, float* %f, align 4, !dbg !5989
  %102 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 52), align 4, !dbg !5990
  %conv149 = sext i16 %102 to i32, !dbg !5992
  %cmp150 = icmp eq i32 %conv149, 0, !dbg !5993
  br i1 %cmp150, label %if.then152, label %if.else181, !dbg !5994

if.then152:                                       ; preds = %if.then146
  %103 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5995
  %mat153 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %103, i32 0, i32 0, !dbg !5998
  %104 = load %struct.Material*, %struct.Material** %mat153, align 8, !dbg !5998
  %shadowonly_flag154 = getelementptr inbounds %struct.Material, %struct.Material* %104, i32 0, i32 126, !dbg !5999
  %105 = load i16, i16* %shadowonly_flag154, align 4, !dbg !5999
  %conv155 = sext i16 %105 to i32, !dbg !5995
  %cmp156 = icmp eq i32 %conv155, 0, !dbg !6000
  br i1 %cmp156, label %if.then158, label %if.else167, !dbg !6001

if.then158:                                       ; preds = %if.then152
  %106 = load float, float* %f, align 4, !dbg !6002
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6004
  %ao = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 100, !dbg !6005
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !6004
  %call160 = call float @rgb_to_grayscale(float* %arraydecay159), !dbg !6006
  %sub161 = fsub float 1.000000e+00, %call160, !dbg !6007
  %mul162 = fmul float %106, %sub161, !dbg !6008
  store float %mul162, float* %f, align 4, !dbg !6009
  %108 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6010
  %alpha163 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %108, i32 0, i32 2, !dbg !6011
  %109 = load float, float* %alpha163, align 4, !dbg !6011
  %110 = load float, float* %f, align 4, !dbg !6012
  %add164 = fadd float %109, %110, !dbg !6013
  %111 = load float, float* %f, align 4, !dbg !6014
  %mul165 = fmul float %add164, %111, !dbg !6015
  %112 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6016
  %alpha166 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %112, i32 0, i32 2, !dbg !6017
  store float %mul165, float* %alpha166, align 4, !dbg !6018
  br label %if.end180, !dbg !6019

if.else167:                                       ; preds = %if.then152
  %113 = load float, float* %f, align 4, !dbg !6020
  %114 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6022
  %ao168 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %114, i32 0, i32 100, !dbg !6023
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %ao168, i64 0, i64 0, !dbg !6022
  %call170 = call float @rgb_to_grayscale(float* %arraydecay169), !dbg !6024
  %mul171 = fmul float %113, %call170, !dbg !6025
  %115 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6026
  %alpha172 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %115, i32 0, i32 2, !dbg !6027
  %116 = load float, float* %alpha172, align 4, !dbg !6028
  %sub173 = fsub float %116, %mul171, !dbg !6028
  store float %sub173, float* %alpha172, align 4, !dbg !6028
  %117 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6029
  %alpha174 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %117, i32 0, i32 2, !dbg !6031
  %118 = load float, float* %alpha174, align 4, !dbg !6031
  %cmp175 = fcmp olt float %118, 0.000000e+00, !dbg !6032
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !6033

if.then177:                                       ; preds = %if.else167
  %119 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6034
  %alpha178 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %119, i32 0, i32 2, !dbg !6035
  store float 0.000000e+00, float* %alpha178, align 4, !dbg !6036
  br label %if.end179, !dbg !6034

if.end179:                                        ; preds = %if.then177, %if.else167
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then158
  br label %if.end195, !dbg !6037

if.else181:                                       ; preds = %if.then146
  %120 = load float, float* %f, align 4, !dbg !6038
  %sub182 = fsub float 1.000000e+00, %120, !dbg !6039
  %121 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6040
  %alpha183 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %121, i32 0, i32 2, !dbg !6041
  %122 = load float, float* %alpha183, align 4, !dbg !6041
  %mul184 = fmul float %sub182, %122, !dbg !6042
  %123 = load float, float* %f, align 4, !dbg !6043
  %124 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6044
  %alpha185 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %124, i32 0, i32 2, !dbg !6045
  %125 = load float, float* %alpha185, align 4, !dbg !6045
  %sub186 = fsub float 1.000000e+00, %125, !dbg !6046
  %126 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6047
  %ao187 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %126, i32 0, i32 100, !dbg !6048
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %ao187, i64 0, i64 0, !dbg !6047
  %call189 = call float @rgb_to_grayscale(float* %arraydecay188), !dbg !6049
  %mul190 = fmul float %sub186, %call189, !dbg !6050
  %sub191 = fsub float 1.000000e+00, %mul190, !dbg !6051
  %mul192 = fmul float %123, %sub191, !dbg !6052
  %add193 = fadd float %mul184, %mul192, !dbg !6053
  %127 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6054
  %alpha194 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %127, i32 0, i32 2, !dbg !6055
  store float %add193, float* %alpha194, align 4, !dbg !6056
  br label %if.end195

if.end195:                                        ; preds = %if.else181, %if.end180
  br label %if.end196, !dbg !6057

if.end196:                                        ; preds = %if.end195, %if.then142
  %128 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 23), align 2, !dbg !6058
  %conv197 = sext i16 %128 to i32, !dbg !6060
  %and198 = and i32 %conv197, 16, !dbg !6061
  %tobool199 = icmp ne i32 %and198, 0, !dbg !6061
  br i1 %tobool199, label %if.then200, label %if.end233, !dbg !6062

if.then200:                                       ; preds = %if.end196
  %129 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6063
  %mat201 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %129, i32 0, i32 0, !dbg !6066
  %130 = load %struct.Material*, %struct.Material** %mat201, align 8, !dbg !6066
  %shadowonly_flag202 = getelementptr inbounds %struct.Material, %struct.Material* %130, i32 0, i32 126, !dbg !6067
  %131 = load i16, i16* %shadowonly_flag202, align 4, !dbg !6067
  %conv203 = sext i16 %131 to i32, !dbg !6063
  %cmp204 = icmp eq i32 %conv203, 0, !dbg !6068
  br i1 %cmp204, label %if.then206, label %if.else217, !dbg !6069

if.then206:                                       ; preds = %if.then200
  %132 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 59), align 4, !dbg !6070
  %133 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6072
  %amb207 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %133, i32 0, i32 44, !dbg !6073
  %134 = load float, float* %amb207, align 4, !dbg !6073
  %mul208 = fmul float %132, %134, !dbg !6074
  %135 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6075
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %135, i32 0, i32 102, !dbg !6076
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !6075
  %call210 = call float @rgb_to_grayscale(float* %arraydecay209), !dbg !6077
  %sub211 = fsub float 1.000000e+00, %call210, !dbg !6078
  %mul212 = fmul float %mul208, %sub211, !dbg !6079
  store float %mul212, float* %f, align 4, !dbg !6080
  %136 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6081
  %alpha213 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %136, i32 0, i32 2, !dbg !6082
  %137 = load float, float* %alpha213, align 4, !dbg !6082
  %138 = load float, float* %f, align 4, !dbg !6083
  %add214 = fadd float %137, %138, !dbg !6084
  %139 = load float, float* %f, align 4, !dbg !6085
  %mul215 = fmul float %add214, %139, !dbg !6086
  %140 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6087
  %alpha216 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %140, i32 0, i32 2, !dbg !6088
  store float %mul215, float* %alpha216, align 4, !dbg !6089
  br label %if.end232, !dbg !6090

if.else217:                                       ; preds = %if.then200
  %141 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 59), align 4, !dbg !6091
  %142 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6093
  %amb218 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %142, i32 0, i32 44, !dbg !6094
  %143 = load float, float* %amb218, align 4, !dbg !6094
  %mul219 = fmul float %141, %143, !dbg !6095
  store float %mul219, float* %f, align 4, !dbg !6096
  %144 = load float, float* %f, align 4, !dbg !6097
  %145 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6098
  %env220 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %145, i32 0, i32 102, !dbg !6099
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %env220, i64 0, i64 0, !dbg !6098
  %call222 = call float @rgb_to_grayscale(float* %arraydecay221), !dbg !6100
  %mul223 = fmul float %144, %call222, !dbg !6101
  %146 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6102
  %alpha224 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %146, i32 0, i32 2, !dbg !6103
  %147 = load float, float* %alpha224, align 4, !dbg !6104
  %sub225 = fsub float %147, %mul223, !dbg !6104
  store float %sub225, float* %alpha224, align 4, !dbg !6104
  %148 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6105
  %alpha226 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %148, i32 0, i32 2, !dbg !6107
  %149 = load float, float* %alpha226, align 4, !dbg !6107
  %cmp227 = fcmp olt float %149, 0.000000e+00, !dbg !6108
  br i1 %cmp227, label %if.then229, label %if.end231, !dbg !6109

if.then229:                                       ; preds = %if.else217
  %150 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6110
  %alpha230 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %150, i32 0, i32 2, !dbg !6111
  store float 0.000000e+00, float* %alpha230, align 4, !dbg !6112
  br label %if.end231, !dbg !6110

if.end231:                                        ; preds = %if.then229, %if.else217
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.then206
  br label %if.end233, !dbg !6113

if.end233:                                        ; preds = %if.end232, %if.end196
  br label %if.end234, !dbg !6114

if.end234:                                        ; preds = %if.end233, %land.lhs.true, %if.end136
  ret void, !dbg !6115
}

declare dso_local i32 @sss_pass_done(%struct.Render*, %struct.Material*) #3

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shade_one_light(%struct.LampRen* %lar, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr, i32 %passflag) #0 !dbg !6116 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %passflag.addr = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %lv = alloca [3 x float], align 4
  %lampdist = alloca float, align 4
  %lacol = alloca [3 x float], align 4
  %shadfac = alloca [4 x float], align 16
  %lashdw = alloca [3 x float], align 4
  %i = alloca float, align 4
  %is = alloca float, align 4
  %i_noshad = alloca float, align 4
  %inp = alloca float, align 4
  %vn = alloca float*, align 8
  %view = alloca float*, align 8
  %vnor = alloca [3 x float], align 4
  %phongcorr = alloca float, align 4
  %visifac = alloca float, align 4
  %cross = alloca [3 x float], align 4
  %nstrand = alloca [3 x float], align 4
  %blend = alloca float, align 4
  %cross201 = alloca [3 x float], align 4
  %thresh = alloca float, align 4
  %t = alloca float, align 4
  %specfac = alloca float, align 4
  %t679 = alloca float, align 4
  %spec788 = alloca [3 x float], align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !6119, metadata !DIExpression()), !dbg !6120
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6121, metadata !DIExpression()), !dbg !6122
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i32 %passflag, i32* %passflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %passflag.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !6127, metadata !DIExpression()), !dbg !6128
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6129
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !6130
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6130
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !6131, metadata !DIExpression()), !dbg !6134
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6135
  %vlr1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 1, !dbg !6136
  %3 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !6136
  store %struct.VlakRen* %3, %struct.VlakRen** %vlr, align 8, !dbg !6134
  call void @llvm.dbg.declare(metadata [3 x float]* %lv, metadata !6137, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.declare(metadata float* %lampdist, metadata !6139, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.declare(metadata [3 x float]* %lacol, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata [4 x float]* %shadfac, metadata !6143, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.declare(metadata [3 x float]* %lashdw, metadata !6145, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.declare(metadata float* %i, metadata !6147, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.declare(metadata float* %is, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.declare(metadata float* %i_noshad, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.declare(metadata float* %inp, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata float** %vn, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.declare(metadata float** %view, metadata !6157, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.declare(metadata [3 x float]* %vnor, metadata !6159, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.declare(metadata float* %phongcorr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store float 1.000000e+00, float* %phongcorr, align 4, !dbg !6162
  call void @llvm.dbg.declare(metadata float* %visifac, metadata !6163, metadata !DIExpression()), !dbg !6164
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6165
  %vn2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 16, !dbg !6166
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vn2, i64 0, i64 0, !dbg !6165
  store float* %arraydecay, float** %vn, align 8, !dbg !6167
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6168
  %view3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 30, !dbg !6169
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %view3, i64 0, i64 0, !dbg !6168
  store float* %arraydecay4, float** %view, align 8, !dbg !6170
  %6 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6171
  %energy = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 15, !dbg !6173
  %7 = load float, float* %energy, align 4, !dbg !6173
  %cmp = fcmp oeq float %7, 0.000000e+00, !dbg !6174
  br i1 %cmp, label %if.then, label %if.end, !dbg !6175

if.then:                                          ; preds = %entry
  br label %if.end837, !dbg !6176

if.end:                                           ; preds = %entry
  %8 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6177
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 7, !dbg !6179
  %9 = load i32, i32* %mode, align 4, !dbg !6179
  %and = and i32 %9, 32, !dbg !6180
  %tobool = icmp ne i32 %and, 0, !dbg !6180
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !6181

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6182
  %mode5 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 51, !dbg !6183
  %11 = load i32, i32* %mode5, align 4, !dbg !6183
  %and6 = and i32 %11, 2, !dbg !6184
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6184
  br i1 %tobool7, label %lor.lhs.false, label %if.then10, !dbg !6185

lor.lhs.false:                                    ; preds = %land.lhs.true
  %12 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !6186
  %and8 = and i32 %12, 2, !dbg !6187
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6187
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6188

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end837, !dbg !6189

if.end11:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6190
  %mode12 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %13, i32 0, i32 7, !dbg !6192
  %14 = load i32, i32* %mode12, align 4, !dbg !6192
  %and13 = and i32 %14, 256, !dbg !6193
  %tobool14 = icmp ne i32 %and13, 0, !dbg !6193
  br i1 %tobool14, label %if.end19, label %land.lhs.true15, !dbg !6194

land.lhs.true15:                                  ; preds = %if.end11
  %15 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6195
  %r = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 8, !dbg !6196
  %16 = load float, float* %r, align 8, !dbg !6196
  %17 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6197
  %g = getelementptr inbounds %struct.LampRen, %struct.LampRen* %17, i32 0, i32 9, !dbg !6198
  %18 = load float, float* %g, align 4, !dbg !6198
  %add = fadd float %16, %18, !dbg !6199
  %19 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6200
  %b = getelementptr inbounds %struct.LampRen, %struct.LampRen* %19, i32 0, i32 10, !dbg !6201
  %20 = load float, float* %b, align 8, !dbg !6201
  %add16 = fadd float %add, %20, !dbg !6202
  %cmp17 = fcmp oeq float %add16, 0.000000e+00, !dbg !6203
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6204

if.then18:                                        ; preds = %land.lhs.true15
  br label %if.end837, !dbg !6205

if.end19:                                         ; preds = %land.lhs.true15, %if.end11
  %21 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6206
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6207
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 29, !dbg !6208
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6207
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6209
  %call = call float @lamp_get_visibility(%struct.LampRen* %21, float* %arraydecay20, float* %arraydecay21, float* %lampdist), !dbg !6210
  store float %call, float* %visifac, align 4, !dbg !6211
  %23 = load float, float* %visifac, align 4, !dbg !6212
  %cmp22 = fcmp oeq float %23, 0.000000e+00, !dbg !6214
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !6215

if.then23:                                        ; preds = %if.end19
  br label %if.end837, !dbg !6216

if.end24:                                         ; preds = %if.end19
  %24 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6217
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %24, i32 0, i32 6, !dbg !6219
  %25 = load i16, i16* %type, align 8, !dbg !6219
  %conv = sext i16 %25 to i32, !dbg !6217
  %cmp25 = icmp eq i32 %conv, 2, !dbg !6220
  br i1 %cmp25, label %if.then27, label %if.end104, !dbg !6221

if.then27:                                        ; preds = %if.end24
  %26 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6222
  %mode28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %26, i32 0, i32 7, !dbg !6225
  %27 = load i32, i32* %mode28, align 4, !dbg !6225
  %and29 = and i32 %27, 512, !dbg !6226
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6226
  br i1 %tobool30, label %if.then31, label %if.end103, !dbg !6227

if.then31:                                        ; preds = %if.then27
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6228
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 15, !dbg !6230
  store i16 1, i16* %osatex, align 8, !dbg !6231
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6232
  %29 = load float, float* %arrayidx, align 4, !dbg !6232
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6233
  %co32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 29, !dbg !6234
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !6233
  %31 = load float, float* %arrayidx33, align 8, !dbg !6233
  %32 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6235
  %co34 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %32, i32 0, i32 5, !dbg !6236
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !6235
  %33 = load float, float* %arrayidx35, align 4, !dbg !6235
  %sub = fsub float %31, %33, !dbg !6237
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6238
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 78, !dbg !6239
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !6238
  %35 = load float, float* %arrayidx36, align 8, !dbg !6238
  %add37 = fadd float %sub, %35, !dbg !6240
  %36 = load float, float* %lampdist, align 4, !dbg !6241
  %div = fdiv float %add37, %36, !dbg !6242
  %sub38 = fsub float %29, %div, !dbg !6243
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6244
  %dxlv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 92, !dbg !6245
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %dxlv, i64 0, i64 0, !dbg !6244
  store float %sub38, float* %arrayidx39, align 8, !dbg !6246
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 1, !dbg !6247
  %38 = load float, float* %arrayidx40, align 4, !dbg !6247
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6248
  %co41 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 29, !dbg !6249
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 1, !dbg !6248
  %40 = load float, float* %arrayidx42, align 4, !dbg !6248
  %41 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6250
  %co43 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %41, i32 0, i32 5, !dbg !6251
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 1, !dbg !6250
  %42 = load float, float* %arrayidx44, align 4, !dbg !6250
  %sub45 = fsub float %40, %42, !dbg !6252
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6253
  %dxco46 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %43, i32 0, i32 78, !dbg !6254
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %dxco46, i64 0, i64 1, !dbg !6253
  %44 = load float, float* %arrayidx47, align 4, !dbg !6253
  %add48 = fadd float %sub45, %44, !dbg !6255
  %45 = load float, float* %lampdist, align 4, !dbg !6256
  %div49 = fdiv float %add48, %45, !dbg !6257
  %sub50 = fsub float %38, %div49, !dbg !6258
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6259
  %dxlv51 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 92, !dbg !6260
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %dxlv51, i64 0, i64 1, !dbg !6259
  store float %sub50, float* %arrayidx52, align 4, !dbg !6261
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 2, !dbg !6262
  %47 = load float, float* %arrayidx53, align 4, !dbg !6262
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6263
  %co54 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %48, i32 0, i32 29, !dbg !6264
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %co54, i64 0, i64 2, !dbg !6263
  %49 = load float, float* %arrayidx55, align 8, !dbg !6263
  %50 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6265
  %co56 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %50, i32 0, i32 5, !dbg !6266
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 2, !dbg !6265
  %51 = load float, float* %arrayidx57, align 4, !dbg !6265
  %sub58 = fsub float %49, %51, !dbg !6267
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6268
  %dxco59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 78, !dbg !6269
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %dxco59, i64 0, i64 2, !dbg !6268
  %53 = load float, float* %arrayidx60, align 8, !dbg !6268
  %add61 = fadd float %sub58, %53, !dbg !6270
  %54 = load float, float* %lampdist, align 4, !dbg !6271
  %div62 = fdiv float %add61, %54, !dbg !6272
  %sub63 = fsub float %47, %div62, !dbg !6273
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6274
  %dxlv64 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 92, !dbg !6275
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %dxlv64, i64 0, i64 2, !dbg !6274
  store float %sub63, float* %arrayidx65, align 8, !dbg !6276
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6277
  %56 = load float, float* %arrayidx66, align 4, !dbg !6277
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6278
  %co67 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 29, !dbg !6279
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !6278
  %58 = load float, float* %arrayidx68, align 8, !dbg !6278
  %59 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6280
  %co69 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %59, i32 0, i32 5, !dbg !6281
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %co69, i64 0, i64 0, !dbg !6280
  %60 = load float, float* %arrayidx70, align 4, !dbg !6280
  %sub71 = fsub float %58, %60, !dbg !6282
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6283
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 79, !dbg !6284
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !6283
  %62 = load float, float* %arrayidx72, align 4, !dbg !6283
  %add73 = fadd float %sub71, %62, !dbg !6285
  %63 = load float, float* %lampdist, align 4, !dbg !6286
  %div74 = fdiv float %add73, %63, !dbg !6287
  %sub75 = fsub float %56, %div74, !dbg !6288
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6289
  %dylv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 93, !dbg !6290
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %dylv, i64 0, i64 0, !dbg !6289
  store float %sub75, float* %arrayidx76, align 4, !dbg !6291
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 1, !dbg !6292
  %65 = load float, float* %arrayidx77, align 4, !dbg !6292
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6293
  %co78 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 29, !dbg !6294
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %co78, i64 0, i64 1, !dbg !6293
  %67 = load float, float* %arrayidx79, align 4, !dbg !6293
  %68 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6295
  %co80 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %68, i32 0, i32 5, !dbg !6296
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 1, !dbg !6295
  %69 = load float, float* %arrayidx81, align 4, !dbg !6295
  %sub82 = fsub float %67, %69, !dbg !6297
  %70 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6298
  %dyco83 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %70, i32 0, i32 79, !dbg !6299
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %dyco83, i64 0, i64 1, !dbg !6298
  %71 = load float, float* %arrayidx84, align 4, !dbg !6298
  %add85 = fadd float %sub82, %71, !dbg !6300
  %72 = load float, float* %lampdist, align 4, !dbg !6301
  %div86 = fdiv float %add85, %72, !dbg !6302
  %sub87 = fsub float %65, %div86, !dbg !6303
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6304
  %dylv88 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 93, !dbg !6305
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %dylv88, i64 0, i64 1, !dbg !6304
  store float %sub87, float* %arrayidx89, align 4, !dbg !6306
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 2, !dbg !6307
  %74 = load float, float* %arrayidx90, align 4, !dbg !6307
  %75 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6308
  %co91 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %75, i32 0, i32 29, !dbg !6309
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %co91, i64 0, i64 2, !dbg !6308
  %76 = load float, float* %arrayidx92, align 8, !dbg !6308
  %77 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6310
  %co93 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %77, i32 0, i32 5, !dbg !6311
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 2, !dbg !6310
  %78 = load float, float* %arrayidx94, align 4, !dbg !6310
  %sub95 = fsub float %76, %78, !dbg !6312
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6313
  %dyco96 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 0, i32 79, !dbg !6314
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %dyco96, i64 0, i64 2, !dbg !6313
  %80 = load float, float* %arrayidx97, align 4, !dbg !6313
  %add98 = fadd float %sub95, %80, !dbg !6315
  %81 = load float, float* %lampdist, align 4, !dbg !6316
  %div99 = fdiv float %add98, %81, !dbg !6317
  %sub100 = fsub float %74, %div99, !dbg !6318
  %82 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6319
  %dylv101 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %82, i32 0, i32 93, !dbg !6320
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %dylv101, i64 0, i64 2, !dbg !6319
  store float %sub100, float* %arrayidx102, align 4, !dbg !6321
  br label %if.end103, !dbg !6322

if.end103:                                        ; preds = %if.then31, %if.then27
  br label %if.end104, !dbg !6323

if.end104:                                        ; preds = %if.end103, %if.end24
  %83 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6324
  %r105 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %83, i32 0, i32 8, !dbg !6325
  %84 = load float, float* %r105, align 8, !dbg !6325
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !6326
  store float %84, float* %arrayidx106, align 4, !dbg !6327
  %85 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6328
  %g107 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %85, i32 0, i32 9, !dbg !6329
  %86 = load float, float* %g107, align 4, !dbg !6329
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !6330
  store float %86, float* %arrayidx108, align 4, !dbg !6331
  %87 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6332
  %b109 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %87, i32 0, i32 10, !dbg !6333
  %88 = load float, float* %b109, align 8, !dbg !6333
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !6334
  store float %88, float* %arrayidx110, align 4, !dbg !6335
  %89 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6336
  %shdwr = getelementptr inbounds %struct.LampRen, %struct.LampRen* %89, i32 0, i32 12, !dbg !6337
  %90 = load float, float* %shdwr, align 8, !dbg !6337
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6338
  store float %90, float* %arrayidx111, align 4, !dbg !6339
  %91 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6340
  %shdwg = getelementptr inbounds %struct.LampRen, %struct.LampRen* %91, i32 0, i32 13, !dbg !6341
  %92 = load float, float* %shdwg, align 4, !dbg !6341
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 1, !dbg !6342
  store float %92, float* %arrayidx112, align 4, !dbg !6343
  %93 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6344
  %shdwb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %93, i32 0, i32 14, !dbg !6345
  %94 = load float, float* %shdwb, align 8, !dbg !6345
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 2, !dbg !6346
  store float %94, float* %arrayidx113, align 4, !dbg !6347
  %95 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6348
  %mode114 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %95, i32 0, i32 7, !dbg !6350
  %96 = load i32, i32* %mode114, align 4, !dbg !6350
  %and115 = and i32 %96, 256, !dbg !6351
  %tobool116 = icmp ne i32 %and115, 0, !dbg !6351
  br i1 %tobool116, label %if.then117, label %if.end120, !dbg !6352

if.then117:                                       ; preds = %if.end104
  %97 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6353
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6354
  %98 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6355
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !6356
  call void @do_lamp_tex(%struct.LampRen* %97, float* %arraydecay118, %struct.ShadeInput* %98, float* %arraydecay119, i32 256), !dbg !6357
  br label %if.end120, !dbg !6357

if.end120:                                        ; preds = %if.then117, %if.end104
  %99 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6358
  %mode121 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %99, i32 0, i32 7, !dbg !6360
  %100 = load i32, i32* %mode121, align 4, !dbg !6360
  %and122 = and i32 %100, 65536, !dbg !6361
  %tobool123 = icmp ne i32 %and122, 0, !dbg !6361
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !6362

if.then124:                                       ; preds = %if.end120
  %101 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6363
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6364
  %102 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6365
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6366
  call void @do_lamp_tex(%struct.LampRen* %101, float* %arraydecay125, %struct.ShadeInput* %102, float* %arraydecay126, i32 65536), !dbg !6367
  br label %if.end127, !dbg !6367

if.end127:                                        ; preds = %if.then124, %if.end120
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6368
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 7, !dbg !6370
  %104 = load i8, i8* %flag, align 1, !dbg !6370
  %conv128 = zext i8 %104 to i32, !dbg !6368
  %and129 = and i32 %conv128, 64, !dbg !6371
  %tobool130 = icmp ne i32 %and129, 0, !dbg !6371
  br i1 %tobool130, label %if.then131, label %if.else196, !dbg !6372

if.then131:                                       ; preds = %if.end127
  call void @llvm.dbg.declare(metadata [3 x float]* %cross, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.declare(metadata [3 x float]* %nstrand, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata float* %blend, metadata !6378, metadata !DIExpression()), !dbg !6379
  %105 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6380
  %mode132 = getelementptr inbounds %struct.Material, %struct.Material* %105, i32 0, i32 51, !dbg !6382
  %106 = load i32, i32* %mode132, align 4, !dbg !6382
  %and133 = and i32 %106, -2147483648, !dbg !6383
  %tobool134 = icmp ne i32 %and133, 0, !dbg !6383
  br i1 %tobool134, label %if.then135, label %if.else159, !dbg !6384

if.then135:                                       ; preds = %if.then131
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !6385
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6387
  %surfnor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 110, !dbg !6388
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %surfnor, i64 0, i64 0, !dbg !6387
  %108 = load float*, float** %vn, align 8, !dbg !6389
  call void @cross_v3_v3v3(float* %arraydecay136, float* %arraydecay137, float* %108), !dbg !6390
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %nstrand, i64 0, i64 0, !dbg !6391
  %109 = load float*, float** %vn, align 8, !dbg !6392
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !6393
  call void @cross_v3_v3v3(float* %arraydecay138, float* %109, float* %arraydecay139), !dbg !6394
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %nstrand, i64 0, i64 0, !dbg !6395
  %110 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6396
  %surfnor141 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %110, i32 0, i32 110, !dbg !6397
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %surfnor141, i64 0, i64 0, !dbg !6396
  %call143 = call float @dot_v3v3(float* %arraydecay140, float* %arraydecay142), !dbg !6398
  store float %call143, float* %blend, align 4, !dbg !6399
  %111 = load float, float* %blend, align 4, !dbg !6400
  %sub144 = fsub float 1.000000e+00, %111, !dbg !6401
  store float %sub144, float* %blend, align 4, !dbg !6402
  %112 = load float, float* %blend, align 4, !dbg !6403
  %cmp145 = fcmp olt float %112, 0.000000e+00, !dbg !6403
  br i1 %cmp145, label %if.then147, label %if.else, !dbg !6406

if.then147:                                       ; preds = %if.then135
  store float 0.000000e+00, float* %blend, align 4, !dbg !6403
  br label %if.end152, !dbg !6403

if.else:                                          ; preds = %if.then135
  %113 = load float, float* %blend, align 4, !dbg !6407
  %cmp148 = fcmp ogt float %113, 1.000000e+00, !dbg !6407
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !6403

if.then150:                                       ; preds = %if.else
  store float 1.000000e+00, float* %blend, align 4, !dbg !6407
  br label %if.end151, !dbg !6407

if.end151:                                        ; preds = %if.then150, %if.else
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then147
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6409
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %nstrand, i64 0, i64 0, !dbg !6410
  %114 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6411
  %surfnor155 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %114, i32 0, i32 110, !dbg !6412
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %surfnor155, i64 0, i64 0, !dbg !6411
  %115 = load float, float* %blend, align 4, !dbg !6413
  call void @interp_v3_v3v3(float* %arraydecay153, float* %arraydecay154, float* %arraydecay156, float %115), !dbg !6414
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6415
  %call158 = call float @normalize_v3(float* %arraydecay157), !dbg !6416
  br label %if.end166, !dbg !6417

if.else159:                                       ; preds = %if.then131
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !6418
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6420
  %116 = load float*, float** %vn, align 8, !dbg !6421
  call void @cross_v3_v3v3(float* %arraydecay160, float* %arraydecay161, float* %116), !dbg !6422
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6423
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !6424
  %117 = load float*, float** %vn, align 8, !dbg !6425
  call void @cross_v3_v3v3(float* %arraydecay162, float* %arraydecay163, float* %117), !dbg !6426
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6427
  %call165 = call float @normalize_v3(float* %arraydecay164), !dbg !6428
  br label %if.end166

if.end166:                                        ; preds = %if.else159, %if.end152
  %118 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6429
  %strand_surfnor = getelementptr inbounds %struct.Material, %struct.Material* %118, i32 0, i32 66, !dbg !6431
  %119 = load float, float* %strand_surfnor, align 8, !dbg !6431
  %cmp167 = fcmp ogt float %119, 0.000000e+00, !dbg !6432
  br i1 %cmp167, label %if.then169, label %if.end186, !dbg !6433

if.then169:                                       ; preds = %if.end166
  %120 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6434
  %strand_surfnor170 = getelementptr inbounds %struct.Material, %struct.Material* %120, i32 0, i32 66, !dbg !6437
  %121 = load float, float* %strand_surfnor170, align 8, !dbg !6437
  %122 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6438
  %surfdist = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %122, i32 0, i32 111, !dbg !6439
  %123 = load float, float* %surfdist, align 4, !dbg !6439
  %cmp171 = fcmp ogt float %121, %123, !dbg !6440
  br i1 %cmp171, label %if.then173, label %if.end185, !dbg !6441

if.then173:                                       ; preds = %if.then169
  %124 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6442
  %strand_surfnor174 = getelementptr inbounds %struct.Material, %struct.Material* %124, i32 0, i32 66, !dbg !6444
  %125 = load float, float* %strand_surfnor174, align 8, !dbg !6444
  %126 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6445
  %surfdist175 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %126, i32 0, i32 111, !dbg !6446
  %127 = load float, float* %surfdist175, align 4, !dbg !6446
  %sub176 = fsub float %125, %127, !dbg !6447
  %128 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6448
  %strand_surfnor177 = getelementptr inbounds %struct.Material, %struct.Material* %128, i32 0, i32 66, !dbg !6449
  %129 = load float, float* %strand_surfnor177, align 8, !dbg !6449
  %div178 = fdiv float %sub176, %129, !dbg !6450
  store float %div178, float* %blend, align 4, !dbg !6451
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6452
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6453
  %130 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6454
  %surfnor181 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %130, i32 0, i32 110, !dbg !6455
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %surfnor181, i64 0, i64 0, !dbg !6454
  %131 = load float, float* %blend, align 4, !dbg !6456
  call void @interp_v3_v3v3(float* %arraydecay179, float* %arraydecay180, float* %arraydecay182, float %131), !dbg !6457
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6458
  %call184 = call float @normalize_v3(float* %arraydecay183), !dbg !6459
  br label %if.end185, !dbg !6460

if.end185:                                        ; preds = %if.then173, %if.then169
  br label %if.end186, !dbg !6461

if.end186:                                        ; preds = %if.end185, %if.end166
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6462
  %132 = load float, float* %arrayidx187, align 4, !dbg !6462
  %fneg = fneg float %132, !dbg !6463
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6464
  store float %fneg, float* %arrayidx188, align 4, !dbg !6465
  %arrayidx189 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 1, !dbg !6466
  %133 = load float, float* %arrayidx189, align 4, !dbg !6466
  %fneg190 = fneg float %133, !dbg !6467
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 1, !dbg !6468
  store float %fneg190, float* %arrayidx191, align 4, !dbg !6469
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 2, !dbg !6470
  %134 = load float, float* %arrayidx192, align 4, !dbg !6470
  %fneg193 = fneg float %134, !dbg !6471
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 2, !dbg !6472
  store float %fneg193, float* %arrayidx194, align 4, !dbg !6473
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6474
  store float* %arraydecay195, float** %vn, align 8, !dbg !6475
  br label %if.end222, !dbg !6476

if.else196:                                       ; preds = %if.end127
  %135 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6477
  %mode197 = getelementptr inbounds %struct.Material, %struct.Material* %135, i32 0, i32 51, !dbg !6479
  %136 = load i32, i32* %mode197, align 4, !dbg !6479
  %and198 = and i32 %136, 67108864, !dbg !6480
  %tobool199 = icmp ne i32 %and198, 0, !dbg !6480
  br i1 %tobool199, label %if.then200, label %if.end221, !dbg !6481

if.then200:                                       ; preds = %if.else196
  call void @llvm.dbg.declare(metadata [3 x float]* %cross201, metadata !6482, metadata !DIExpression()), !dbg !6484
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %cross201, i64 0, i64 0, !dbg !6485
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6486
  %137 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6487
  %tang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %137, i32 0, i32 65, !dbg !6488
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !6487
  call void @cross_v3_v3v3(float* %arraydecay202, float* %arraydecay203, float* %arraydecay204), !dbg !6489
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6490
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %cross201, i64 0, i64 0, !dbg !6491
  %138 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6492
  %tang207 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %138, i32 0, i32 65, !dbg !6493
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %tang207, i64 0, i64 0, !dbg !6492
  call void @cross_v3_v3v3(float* %arraydecay205, float* %arraydecay206, float* %arraydecay208), !dbg !6494
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6495
  %call210 = call float @normalize_v3(float* %arraydecay209), !dbg !6496
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6497
  %139 = load float, float* %arrayidx211, align 4, !dbg !6497
  %fneg212 = fneg float %139, !dbg !6498
  %arrayidx213 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6499
  store float %fneg212, float* %arrayidx213, align 4, !dbg !6500
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 1, !dbg !6501
  %140 = load float, float* %arrayidx214, align 4, !dbg !6501
  %fneg215 = fneg float %140, !dbg !6502
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 1, !dbg !6503
  store float %fneg215, float* %arrayidx216, align 4, !dbg !6504
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 2, !dbg !6505
  %141 = load float, float* %arrayidx217, align 4, !dbg !6505
  %fneg218 = fneg float %141, !dbg !6506
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 2, !dbg !6507
  store float %fneg218, float* %arrayidx219, align 4, !dbg !6508
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6509
  store float* %arraydecay220, float** %vn, align 8, !dbg !6510
  br label %if.end221, !dbg !6511

if.end221:                                        ; preds = %if.then200, %if.else196
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end186
  %142 = load float*, float** %vn, align 8, !dbg !6512
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6513
  %call224 = call float @dot_v3v3(float* %142, float* %arraydecay223), !dbg !6514
  store float %call224, float* %inp, align 4, !dbg !6515
  %143 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !6516
  %and225 = and i32 %143, 2, !dbg !6518
  %tobool226 = icmp ne i32 %and225, 0, !dbg !6518
  br i1 %tobool226, label %if.then227, label %if.end290, !dbg !6519

if.then227:                                       ; preds = %if.end222
  %144 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6520
  %mode228 = getelementptr inbounds %struct.Material, %struct.Material* %144, i32 0, i32 51, !dbg !6523
  %145 = load i32, i32* %mode228, align 4, !dbg !6523
  %and229 = and i32 %145, 2, !dbg !6524
  %tobool230 = icmp ne i32 %and229, 0, !dbg !6524
  br i1 %tobool230, label %if.then231, label %if.end289, !dbg !6525

if.then231:                                       ; preds = %if.then227
  %146 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6526
  %type232 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %146, i32 0, i32 6, !dbg !6529
  %147 = load i16, i16* %type232, align 8, !dbg !6529
  %conv233 = sext i16 %147 to i32, !dbg !6526
  %cmp234 = icmp eq i32 %conv233, 3, !dbg !6530
  br i1 %cmp234, label %if.then241, label %lor.lhs.false236, !dbg !6531

lor.lhs.false236:                                 ; preds = %if.then231
  %148 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6532
  %type237 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %148, i32 0, i32 6, !dbg !6533
  %149 = load i16, i16* %type237, align 8, !dbg !6533
  %conv238 = sext i16 %149 to i32, !dbg !6532
  %cmp239 = icmp eq i32 %conv238, 4, !dbg !6534
  br i1 %cmp239, label %if.then241, label %if.else242, !dbg !6535

if.then241:                                       ; preds = %lor.lhs.false236, %if.then231
  br label %if.end288, !dbg !6536

if.else242:                                       ; preds = %lor.lhs.false236
  %150 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6538
  %mode243 = getelementptr inbounds %struct.Material, %struct.Material* %150, i32 0, i32 51, !dbg !6540
  %151 = load i32, i32* %mode243, align 4, !dbg !6540
  %and244 = and i32 %151, 4194304, !dbg !6541
  %tobool245 = icmp ne i32 %and244, 0, !dbg !6541
  br i1 %tobool245, label %land.lhs.true246, label %if.else264, !dbg !6542

land.lhs.true246:                                 ; preds = %if.else242
  %152 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6543
  %mode247 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %152, i32 0, i32 7, !dbg !6544
  %153 = load i32, i32* %mode247, align 4, !dbg !6544
  %and248 = and i32 %153, 8192, !dbg !6545
  %tobool249 = icmp ne i32 %and248, 0, !dbg !6545
  br i1 %tobool249, label %land.lhs.true250, label %if.else264, !dbg !6546

land.lhs.true250:                                 ; preds = %land.lhs.true246
  %154 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6547
  %flag251 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %154, i32 0, i32 7, !dbg !6548
  %155 = load i8, i8* %flag251, align 1, !dbg !6548
  %conv252 = zext i8 %155 to i32, !dbg !6547
  %and253 = and i32 %conv252, 1, !dbg !6549
  %tobool254 = icmp ne i32 %and253, 0, !dbg !6549
  br i1 %tobool254, label %if.then255, label %if.else264, !dbg !6550

if.then255:                                       ; preds = %land.lhs.true250
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !6551, metadata !DIExpression()), !dbg !6553
  %156 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6554
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %156, i32 0, i32 4, !dbg !6555
  %157 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6555
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %157, i32 0, i32 2, !dbg !6556
  %158 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6556
  %smoothresh = getelementptr inbounds %struct.Object, %struct.Object* %158, i32 0, i32 116, !dbg !6557
  %159 = load float, float* %smoothresh, align 4, !dbg !6557
  store float %159, float* %thresh, align 4, !dbg !6553
  %160 = load float, float* %inp, align 4, !dbg !6558
  %161 = load float, float* %thresh, align 4, !dbg !6560
  %cmp256 = fcmp ogt float %160, %161, !dbg !6561
  br i1 %cmp256, label %if.then258, label %if.else262, !dbg !6562

if.then258:                                       ; preds = %if.then255
  %162 = load float, float* %inp, align 4, !dbg !6563
  %163 = load float, float* %thresh, align 4, !dbg !6564
  %sub259 = fsub float %162, %163, !dbg !6565
  %164 = load float, float* %inp, align 4, !dbg !6566
  %165 = load float, float* %thresh, align 4, !dbg !6567
  %sub260 = fsub float 1.000000e+00, %165, !dbg !6568
  %mul = fmul float %164, %sub260, !dbg !6569
  %div261 = fdiv float %sub259, %mul, !dbg !6570
  store float %div261, float* %phongcorr, align 4, !dbg !6571
  br label %if.end263, !dbg !6572

if.else262:                                       ; preds = %if.then255
  store float 0.000000e+00, float* %phongcorr, align 4, !dbg !6573
  br label %if.end263

if.end263:                                        ; preds = %if.else262, %if.then258
  br label %if.end287, !dbg !6574

if.else264:                                       ; preds = %land.lhs.true250, %land.lhs.true246, %if.else242
  %166 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6575
  %sbias = getelementptr inbounds %struct.Material, %struct.Material* %166, i32 0, i32 70, !dbg !6577
  %167 = load float, float* %sbias, align 4, !dbg !6577
  %cmp265 = fcmp une float %167, 0.000000e+00, !dbg !6578
  br i1 %cmp265, label %land.lhs.true267, label %if.end286, !dbg !6579

land.lhs.true267:                                 ; preds = %if.else264
  %168 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6580
  %mode268 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %168, i32 0, i32 7, !dbg !6581
  %169 = load i32, i32* %mode268, align 4, !dbg !6581
  %and269 = and i32 %169, 8192, !dbg !6582
  %tobool270 = icmp ne i32 %and269, 0, !dbg !6582
  br i1 %tobool270, label %if.then273, label %lor.lhs.false271, !dbg !6583

lor.lhs.false271:                                 ; preds = %land.lhs.true267
  %170 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6584
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %170, i32 0, i32 57, !dbg !6585
  %171 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !6585
  %tobool272 = icmp ne %struct.ShadBuf* %171, null, !dbg !6584
  br i1 %tobool272, label %if.then273, label %if.end286, !dbg !6586

if.then273:                                       ; preds = %lor.lhs.false271, %land.lhs.true267
  %172 = load float, float* %inp, align 4, !dbg !6587
  %173 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6590
  %sbias274 = getelementptr inbounds %struct.Material, %struct.Material* %173, i32 0, i32 70, !dbg !6591
  %174 = load float, float* %sbias274, align 4, !dbg !6591
  %cmp275 = fcmp ogt float %172, %174, !dbg !6592
  br i1 %cmp275, label %if.then277, label %if.else284, !dbg !6593

if.then277:                                       ; preds = %if.then273
  %175 = load float, float* %inp, align 4, !dbg !6594
  %176 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6595
  %sbias278 = getelementptr inbounds %struct.Material, %struct.Material* %176, i32 0, i32 70, !dbg !6596
  %177 = load float, float* %sbias278, align 4, !dbg !6596
  %sub279 = fsub float %175, %177, !dbg !6597
  %178 = load float, float* %inp, align 4, !dbg !6598
  %179 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6599
  %sbias280 = getelementptr inbounds %struct.Material, %struct.Material* %179, i32 0, i32 70, !dbg !6600
  %180 = load float, float* %sbias280, align 4, !dbg !6600
  %sub281 = fsub float 1.000000e+00, %180, !dbg !6601
  %mul282 = fmul float %178, %sub281, !dbg !6602
  %div283 = fdiv float %sub279, %mul282, !dbg !6603
  store float %div283, float* %phongcorr, align 4, !dbg !6604
  br label %if.end285, !dbg !6605

if.else284:                                       ; preds = %if.then273
  store float 0.000000e+00, float* %phongcorr, align 4, !dbg !6606
  br label %if.end285

if.end285:                                        ; preds = %if.else284, %if.then277
  br label %if.end286, !dbg !6607

if.end286:                                        ; preds = %if.end285, %lor.lhs.false271, %if.else264
  br label %if.end287

if.end287:                                        ; preds = %if.end286, %if.end263
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.then241
  br label %if.end289, !dbg !6608

if.end289:                                        ; preds = %if.end288, %if.then227
  br label %if.end290, !dbg !6609

if.end290:                                        ; preds = %if.end289, %if.end222
  %181 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6610
  %mode291 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %181, i32 0, i32 7, !dbg !6612
  %182 = load i32, i32* %mode291, align 4, !dbg !6612
  %and292 = and i32 %182, 2048, !dbg !6613
  %tobool293 = icmp ne i32 %and292, 0, !dbg !6613
  br i1 %tobool293, label %if.then294, label %if.else295, !dbg !6614

if.then294:                                       ; preds = %if.end290
  store float 0.000000e+00, float* %is, align 4, !dbg !6615
  br label %if.end355, !dbg !6617

if.else295:                                       ; preds = %if.end290
  %183 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6618
  %type296 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %183, i32 0, i32 6, !dbg !6620
  %184 = load i16, i16* %type296, align 8, !dbg !6620
  %conv297 = sext i16 %184 to i32, !dbg !6618
  %cmp298 = icmp eq i32 %conv297, 3, !dbg !6621
  br i1 %cmp298, label %if.then300, label %if.else303, !dbg !6622

if.then300:                                       ; preds = %if.else295
  %185 = load float, float* %inp, align 4, !dbg !6623
  %mul301 = fmul float 5.000000e-01, %185, !dbg !6625
  %add302 = fadd float %mul301, 5.000000e-01, !dbg !6626
  store float %add302, float* %is, align 4, !dbg !6627
  br label %if.end354, !dbg !6628

if.else303:                                       ; preds = %if.else295
  %186 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6629
  %type304 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %186, i32 0, i32 6, !dbg !6632
  %187 = load i16, i16* %type304, align 8, !dbg !6632
  %conv305 = sext i16 %187 to i32, !dbg !6629
  %cmp306 = icmp eq i32 %conv305, 4, !dbg !6633
  br i1 %cmp306, label %if.then308, label %if.end312, !dbg !6634

if.then308:                                       ; preds = %if.else303
  %188 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6635
  %189 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6636
  %co309 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %189, i32 0, i32 29, !dbg !6637
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %co309, i64 0, i64 0, !dbg !6636
  %190 = load float*, float** %vn, align 8, !dbg !6638
  %call311 = call float @area_lamp_energy_multisample(%struct.LampRen* %188, float* %arraydecay310, float* %190), !dbg !6639
  store float %call311, float* %inp, align 4, !dbg !6640
  br label %if.end312, !dbg !6641

if.end312:                                        ; preds = %if.then308, %if.else303
  %191 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6642
  %diff_shader = getelementptr inbounds %struct.Material, %struct.Material* %191, i32 0, i32 83, !dbg !6644
  %192 = load i16, i16* %diff_shader, align 8, !dbg !6644
  %conv313 = sext i16 %192 to i32, !dbg !6642
  %cmp314 = icmp eq i32 %conv313, 1, !dbg !6645
  br i1 %cmp314, label %if.then316, label %if.else319, !dbg !6646

if.then316:                                       ; preds = %if.end312
  %193 = load float, float* %inp, align 4, !dbg !6647
  %194 = load float*, float** %vn, align 8, !dbg !6648
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6649
  %195 = load float*, float** %view, align 8, !dbg !6650
  %196 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6651
  %roughness = getelementptr inbounds %struct.Material, %struct.Material* %196, i32 0, i32 85, !dbg !6652
  %197 = load float, float* %roughness, align 4, !dbg !6652
  %call318 = call float @OrenNayar_Diff(float %193, float* %194, float* %arraydecay317, float* %195, float %197), !dbg !6653
  store float %call318, float* %is, align 4, !dbg !6654
  br label %if.end353, !dbg !6655

if.else319:                                       ; preds = %if.end312
  %198 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6656
  %diff_shader320 = getelementptr inbounds %struct.Material, %struct.Material* %198, i32 0, i32 83, !dbg !6658
  %199 = load i16, i16* %diff_shader320, align 8, !dbg !6658
  %conv321 = sext i16 %199 to i32, !dbg !6656
  %cmp322 = icmp eq i32 %conv321, 2, !dbg !6659
  br i1 %cmp322, label %if.then324, label %if.else330, !dbg !6660

if.then324:                                       ; preds = %if.else319
  %200 = load float*, float** %vn, align 8, !dbg !6661
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6662
  %201 = load float*, float** %view, align 8, !dbg !6663
  %202 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6664
  %param = getelementptr inbounds %struct.Material, %struct.Material* %202, i32 0, i32 87, !dbg !6665
  %arrayidx326 = getelementptr inbounds [4 x float], [4 x float]* %param, i64 0, i64 0, !dbg !6664
  %203 = load float, float* %arrayidx326, align 4, !dbg !6664
  %204 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6666
  %param327 = getelementptr inbounds %struct.Material, %struct.Material* %204, i32 0, i32 87, !dbg !6667
  %arrayidx328 = getelementptr inbounds [4 x float], [4 x float]* %param327, i64 0, i64 1, !dbg !6666
  %205 = load float, float* %arrayidx328, align 4, !dbg !6666
  %call329 = call float @Toon_Diff(float* %200, float* %arraydecay325, float* %201, float %203, float %205), !dbg !6668
  store float %call329, float* %is, align 4, !dbg !6669
  br label %if.end352, !dbg !6670

if.else330:                                       ; preds = %if.else319
  %206 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6671
  %diff_shader331 = getelementptr inbounds %struct.Material, %struct.Material* %206, i32 0, i32 83, !dbg !6673
  %207 = load i16, i16* %diff_shader331, align 8, !dbg !6673
  %conv332 = sext i16 %207 to i32, !dbg !6671
  %cmp333 = icmp eq i32 %conv332, 3, !dbg !6674
  br i1 %cmp333, label %if.then335, label %if.else337, !dbg !6675

if.then335:                                       ; preds = %if.else330
  %208 = load float, float* %inp, align 4, !dbg !6676
  %209 = load float*, float** %vn, align 8, !dbg !6677
  %210 = load float*, float** %view, align 8, !dbg !6678
  %211 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6679
  %darkness = getelementptr inbounds %struct.Material, %struct.Material* %211, i32 0, i32 89, !dbg !6680
  %212 = load float, float* %darkness, align 8, !dbg !6680
  %call336 = call float @Minnaert_Diff(float %208, float* %209, float* %210, float %212), !dbg !6681
  store float %call336, float* %is, align 4, !dbg !6682
  br label %if.end351, !dbg !6683

if.else337:                                       ; preds = %if.else330
  %213 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6684
  %diff_shader338 = getelementptr inbounds %struct.Material, %struct.Material* %213, i32 0, i32 83, !dbg !6686
  %214 = load i16, i16* %diff_shader338, align 8, !dbg !6686
  %conv339 = sext i16 %214 to i32, !dbg !6684
  %cmp340 = icmp eq i32 %conv339, 4, !dbg !6687
  br i1 %cmp340, label %if.then342, label %if.else349, !dbg !6688

if.then342:                                       ; preds = %if.else337
  %215 = load float*, float** %vn, align 8, !dbg !6689
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6690
  %216 = load float*, float** %view, align 8, !dbg !6691
  %217 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6692
  %param344 = getelementptr inbounds %struct.Material, %struct.Material* %217, i32 0, i32 87, !dbg !6693
  %arrayidx345 = getelementptr inbounds [4 x float], [4 x float]* %param344, i64 0, i64 0, !dbg !6692
  %218 = load float, float* %arrayidx345, align 4, !dbg !6692
  %219 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6694
  %param346 = getelementptr inbounds %struct.Material, %struct.Material* %219, i32 0, i32 87, !dbg !6695
  %arrayidx347 = getelementptr inbounds [4 x float], [4 x float]* %param346, i64 0, i64 1, !dbg !6694
  %220 = load float, float* %arrayidx347, align 4, !dbg !6694
  %call348 = call float @Fresnel_Diff(float* %215, float* %arraydecay343, float* %216, float %218, float %220), !dbg !6696
  store float %call348, float* %is, align 4, !dbg !6697
  br label %if.end350, !dbg !6698

if.else349:                                       ; preds = %if.else337
  %221 = load float, float* %inp, align 4, !dbg !6699
  store float %221, float* %is, align 4, !dbg !6700
  br label %if.end350

if.end350:                                        ; preds = %if.else349, %if.then342
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.then335
  br label %if.end352

if.end352:                                        ; preds = %if.end351, %if.then324
  br label %if.end353

if.end353:                                        ; preds = %if.end352, %if.then316
  br label %if.end354

if.end354:                                        ; preds = %if.end353, %if.then300
  br label %if.end355

if.end355:                                        ; preds = %if.end354, %if.then294
  %222 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6701
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %222, i32 0, i32 50, !dbg !6703
  %223 = load i16, i16* %shade_flag, align 2, !dbg !6703
  %conv356 = sext i16 %223 to i32, !dbg !6701
  %and357 = and i32 %conv356, 1, !dbg !6704
  %tobool358 = icmp ne i32 %and357, 0, !dbg !6704
  br i1 %tobool358, label %land.lhs.true359, label %if.end372, !dbg !6705

land.lhs.true359:                                 ; preds = %if.end355
  %224 = load float, float* %is, align 4, !dbg !6706
  %cmp360 = fcmp ogt float %224, 0.000000e+00, !dbg !6707
  br i1 %cmp360, label %land.lhs.true362, label %if.end372, !dbg !6708

land.lhs.true362:                                 ; preds = %land.lhs.true359
  %225 = load float, float* %is, align 4, !dbg !6709
  %cmp363 = fcmp olt float %225, 1.000000e+00, !dbg !6710
  br i1 %cmp363, label %if.then365, label %if.end372, !dbg !6711

if.then365:                                       ; preds = %land.lhs.true362
  %226 = load float, float* %is, align 4, !dbg !6712
  %mul366 = fmul float 3.000000e+00, %226, !dbg !6714
  %227 = load float, float* %is, align 4, !dbg !6715
  %mul367 = fmul float %mul366, %227, !dbg !6716
  %228 = load float, float* %is, align 4, !dbg !6717
  %mul368 = fmul float 2.000000e+00, %228, !dbg !6718
  %229 = load float, float* %is, align 4, !dbg !6719
  %mul369 = fmul float %mul368, %229, !dbg !6720
  %230 = load float, float* %is, align 4, !dbg !6721
  %mul370 = fmul float %mul369, %230, !dbg !6722
  %sub371 = fsub float %mul367, %mul370, !dbg !6723
  store float %sub371, float* %is, align 4, !dbg !6724
  br label %if.end372, !dbg !6725

if.end372:                                        ; preds = %if.then365, %land.lhs.true362, %land.lhs.true359, %if.end355
  %231 = load float, float* %is, align 4, !dbg !6726
  %232 = load float, float* %phongcorr, align 4, !dbg !6727
  %mul373 = fmul float %231, %232, !dbg !6728
  store float %mul373, float* %i, align 4, !dbg !6729
  %233 = load float, float* %i, align 4, !dbg !6730
  %cmp374 = fcmp ogt float %233, 0.000000e+00, !dbg !6732
  br i1 %cmp374, label %if.then376, label %if.end379, !dbg !6733

if.then376:                                       ; preds = %if.end372
  %234 = load float, float* %visifac, align 4, !dbg !6734
  %235 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6736
  %refl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %235, i32 0, i32 50, !dbg !6737
  %236 = load float, float* %refl, align 4, !dbg !6737
  %mul377 = fmul float %234, %236, !dbg !6738
  %237 = load float, float* %i, align 4, !dbg !6739
  %mul378 = fmul float %237, %mul377, !dbg !6739
  store float %mul378, float* %i, align 4, !dbg !6739
  br label %if.end379, !dbg !6740

if.end379:                                        ; preds = %if.then376, %if.end372
  %238 = load float, float* %i, align 4, !dbg !6741
  store float %238, float* %i_noshad, align 4, !dbg !6742
  %239 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6743
  %vn380 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %239, i32 0, i32 16, !dbg !6744
  %arraydecay381 = getelementptr inbounds [3 x float], [3 x float]* %vn380, i64 0, i64 0, !dbg !6743
  store float* %arraydecay381, float** %vn, align 8, !dbg !6745
  %240 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6746
  %mode382 = getelementptr inbounds %struct.Material, %struct.Material* %240, i32 0, i32 51, !dbg !6748
  %241 = load i32, i32* %mode382, align 4, !dbg !6748
  %and383 = and i32 %241, 67108864, !dbg !6749
  %tobool384 = icmp ne i32 %and383, 0, !dbg !6749
  br i1 %tobool384, label %if.then385, label %if.end388, !dbg !6750

if.then385:                                       ; preds = %if.end379
  %242 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6751
  %tang386 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %242, i32 0, i32 65, !dbg !6752
  %arraydecay387 = getelementptr inbounds [3 x float], [3 x float]* %tang386, i64 0, i64 0, !dbg !6751
  store float* %arraydecay387, float** %vn, align 8, !dbg !6753
  br label %if.end388, !dbg !6754

if.end388:                                        ; preds = %if.then385, %if.end379
  %arrayidx389 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6755
  store float 1.000000e+00, float* %arrayidx389, align 4, !dbg !6756
  %arrayidx390 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 2, !dbg !6757
  store float 1.000000e+00, float* %arrayidx390, align 8, !dbg !6758
  %arrayidx391 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 1, !dbg !6759
  store float 1.000000e+00, float* %arrayidx391, align 4, !dbg !6760
  %arrayidx392 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !6761
  store float 1.000000e+00, float* %arrayidx392, align 16, !dbg !6762
  %243 = load float, float* %visifac, align 4, !dbg !6763
  %cmp393 = fcmp ogt float %243, 0.000000e+00, !dbg !6765
  br i1 %cmp393, label %if.then395, label %if.end837, !dbg !6766

if.then395:                                       ; preds = %if.end388
  %244 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !6767
  %and396 = and i32 %244, 2, !dbg !6770
  %tobool397 = icmp ne i32 %and396, 0, !dbg !6770
  br i1 %tobool397, label %if.then398, label %if.end498, !dbg !6771

if.then398:                                       ; preds = %if.then395
  %245 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6772
  %mode399 = getelementptr inbounds %struct.Material, %struct.Material* %245, i32 0, i32 51, !dbg !6775
  %246 = load i32, i32* %mode399, align 4, !dbg !6775
  %and400 = and i32 %246, 2, !dbg !6776
  %tobool401 = icmp ne i32 %and400, 0, !dbg !6776
  br i1 %tobool401, label %if.then402, label %if.end497, !dbg !6777

if.then402:                                       ; preds = %if.then398
  %247 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6778
  %shb403 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %247, i32 0, i32 57, !dbg !6781
  %248 = load %struct.ShadBuf*, %struct.ShadBuf** %shb403, align 8, !dbg !6781
  %tobool404 = icmp ne %struct.ShadBuf* %248, null, !dbg !6778
  br i1 %tobool404, label %if.then409, label %lor.lhs.false405, !dbg !6782

lor.lhs.false405:                                 ; preds = %if.then402
  %249 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6783
  %mode406 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %249, i32 0, i32 7, !dbg !6784
  %250 = load i32, i32* %mode406, align 4, !dbg !6784
  %and407 = and i32 %250, 8192, !dbg !6785
  %tobool408 = icmp ne i32 %and407, 0, !dbg !6785
  br i1 %tobool408, label %if.then409, label %if.end496, !dbg !6786

if.then409:                                       ; preds = %lor.lhs.false405, %if.then402
  %251 = load float*, float** %vn, align 8, !dbg !6787
  %arraydecay410 = getelementptr inbounds [3 x float], [3 x float]* %vnor, i64 0, i64 0, !dbg !6790
  %cmp411 = icmp eq float* %251, %arraydecay410, !dbg !6791
  br i1 %cmp411, label %if.then413, label %if.else419, !dbg !6792

if.then413:                                       ; preds = %if.then409
  %252 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6793
  %253 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6794
  %254 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6795
  %vn414 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %254, i32 0, i32 16, !dbg !6796
  %arraydecay415 = getelementptr inbounds [3 x float], [3 x float]* %vn414, i64 0, i64 0, !dbg !6795
  %arraydecay416 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !6797
  %call417 = call float @dot_v3v3(float* %arraydecay415, float* %arraydecay416), !dbg !6798
  %arraydecay418 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !6799
  %255 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6800
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %255, i32 0, i32 108, !dbg !6801
  %256 = load i32, i32* %depth, align 8, !dbg !6801
  call void @lamp_get_shadow(%struct.LampRen* %252, %struct.ShadeInput* %253, float %call417, float* %arraydecay418, i32 %256), !dbg !6802
  br label %if.end422, !dbg !6802

if.else419:                                       ; preds = %if.then409
  %257 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6803
  %258 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6804
  %259 = load float, float* %inp, align 4, !dbg !6805
  %arraydecay420 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !6806
  %260 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6807
  %depth421 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %260, i32 0, i32 108, !dbg !6808
  %261 = load i32, i32* %depth421, align 8, !dbg !6808
  call void @lamp_get_shadow(%struct.LampRen* %257, %struct.ShadeInput* %258, float %259, float* %arraydecay420, i32 %261), !dbg !6809
  br label %if.end422

if.end422:                                        ; preds = %if.else419, %if.then413
  %262 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6810
  %mode423 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %262, i32 0, i32 7, !dbg !6812
  %263 = load i32, i32* %mode423, align 4, !dbg !6812
  %and424 = and i32 %263, 32, !dbg !6813
  %tobool425 = icmp ne i32 %and424, 0, !dbg !6813
  br i1 %tobool425, label %land.lhs.true426, label %if.end490, !dbg !6814

land.lhs.true426:                                 ; preds = %if.end422
  %264 = load float, float* %i, align 4, !dbg !6815
  %cmp427 = fcmp ogt float %264, 0.000000e+00, !dbg !6816
  br i1 %cmp427, label %if.then429, label %if.end490, !dbg !6817

if.then429:                                       ; preds = %land.lhs.true426
  %265 = load float, float* %i, align 4, !dbg !6818
  %266 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6820
  %energy430 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %266, i32 0, i32 15, !dbg !6821
  %267 = load float, float* %energy430, align 4, !dbg !6821
  %mul431 = fmul float %265, %267, !dbg !6822
  %arrayidx432 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6823
  %268 = load float, float* %arrayidx432, align 4, !dbg !6823
  %sub433 = fsub float 1.000000e+00, %268, !dbg !6824
  %mul434 = fmul float %mul431, %sub433, !dbg !6825
  %arrayidx435 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6826
  store float %mul434, float* %arrayidx435, align 4, !dbg !6827
  %arrayidx436 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6828
  %269 = load float, float* %arrayidx436, align 4, !dbg !6828
  %270 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6829
  %r437 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %270, i32 0, i32 32, !dbg !6830
  %271 = load float, float* %r437, align 4, !dbg !6830
  %mul438 = fmul float %269, %271, !dbg !6831
  %arrayidx439 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6832
  %272 = load float, float* %arrayidx439, align 4, !dbg !6832
  %sub440 = fsub float 1.000000e+00, %272, !dbg !6833
  %mul441 = fmul float %mul438, %sub440, !dbg !6834
  %273 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6835
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %273, i32 0, i32 9, !dbg !6836
  %arrayidx442 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !6835
  %274 = load float, float* %arrayidx442, align 4, !dbg !6837
  %sub443 = fsub float %274, %mul441, !dbg !6837
  store float %sub443, float* %arrayidx442, align 4, !dbg !6837
  %arrayidx444 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6838
  %275 = load float, float* %arrayidx444, align 4, !dbg !6838
  %276 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6839
  %g445 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %276, i32 0, i32 33, !dbg !6840
  %277 = load float, float* %g445, align 8, !dbg !6840
  %mul446 = fmul float %275, %277, !dbg !6841
  %arrayidx447 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 1, !dbg !6842
  %278 = load float, float* %arrayidx447, align 4, !dbg !6842
  %sub448 = fsub float 1.000000e+00, %278, !dbg !6843
  %mul449 = fmul float %mul446, %sub448, !dbg !6844
  %279 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6845
  %shad450 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %279, i32 0, i32 9, !dbg !6846
  %arrayidx451 = getelementptr inbounds [4 x float], [4 x float]* %shad450, i64 0, i64 1, !dbg !6845
  %280 = load float, float* %arrayidx451, align 4, !dbg !6847
  %sub452 = fsub float %280, %mul449, !dbg !6847
  store float %sub452, float* %arrayidx451, align 4, !dbg !6847
  %arrayidx453 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6848
  %281 = load float, float* %arrayidx453, align 4, !dbg !6848
  %282 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6849
  %b454 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %282, i32 0, i32 34, !dbg !6850
  %283 = load float, float* %b454, align 4, !dbg !6850
  %mul455 = fmul float %281, %283, !dbg !6851
  %arrayidx456 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 2, !dbg !6852
  %284 = load float, float* %arrayidx456, align 4, !dbg !6852
  %sub457 = fsub float 1.000000e+00, %284, !dbg !6853
  %mul458 = fmul float %mul455, %sub457, !dbg !6854
  %285 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6855
  %shad459 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %285, i32 0, i32 9, !dbg !6856
  %arrayidx460 = getelementptr inbounds [4 x float], [4 x float]* %shad459, i64 0, i64 2, !dbg !6855
  %286 = load float, float* %arrayidx460, align 4, !dbg !6857
  %sub461 = fsub float %286, %mul458, !dbg !6857
  store float %sub461, float* %arrayidx460, align 4, !dbg !6857
  %287 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6858
  %mode462 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %287, i32 0, i32 7, !dbg !6860
  %288 = load i32, i32* %mode462, align 4, !dbg !6860
  %and463 = and i32 %288, 4096, !dbg !6861
  %tobool464 = icmp ne i32 %and463, 0, !dbg !6861
  br i1 %tobool464, label %if.end489, label %if.then465, !dbg !6862

if.then465:                                       ; preds = %if.then429
  %arrayidx466 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6863
  %289 = load float, float* %arrayidx466, align 4, !dbg !6863
  %290 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6865
  %specr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %290, i32 0, i32 35, !dbg !6866
  %291 = load float, float* %specr, align 8, !dbg !6866
  %mul467 = fmul float %289, %291, !dbg !6867
  %arrayidx468 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6868
  %292 = load float, float* %arrayidx468, align 4, !dbg !6868
  %sub469 = fsub float 1.000000e+00, %292, !dbg !6869
  %mul470 = fmul float %mul467, %sub469, !dbg !6870
  %293 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6871
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %293, i32 0, i32 8, !dbg !6872
  %arrayidx471 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !6871
  %294 = load float, float* %arrayidx471, align 4, !dbg !6873
  %sub472 = fsub float %294, %mul470, !dbg !6873
  store float %sub472, float* %arrayidx471, align 4, !dbg !6873
  %arrayidx473 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6874
  %295 = load float, float* %arrayidx473, align 4, !dbg !6874
  %296 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6875
  %specg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %296, i32 0, i32 36, !dbg !6876
  %297 = load float, float* %specg, align 4, !dbg !6876
  %mul474 = fmul float %295, %297, !dbg !6877
  %arrayidx475 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 1, !dbg !6878
  %298 = load float, float* %arrayidx475, align 4, !dbg !6878
  %sub476 = fsub float 1.000000e+00, %298, !dbg !6879
  %mul477 = fmul float %mul474, %sub476, !dbg !6880
  %299 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6881
  %spec478 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %299, i32 0, i32 8, !dbg !6882
  %arrayidx479 = getelementptr inbounds [3 x float], [3 x float]* %spec478, i64 0, i64 1, !dbg !6881
  %300 = load float, float* %arrayidx479, align 4, !dbg !6883
  %sub480 = fsub float %300, %mul477, !dbg !6883
  store float %sub480, float* %arrayidx479, align 4, !dbg !6883
  %arrayidx481 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6884
  %301 = load float, float* %arrayidx481, align 4, !dbg !6884
  %302 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6885
  %specb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %302, i32 0, i32 37, !dbg !6886
  %303 = load float, float* %specb, align 8, !dbg !6886
  %mul482 = fmul float %301, %303, !dbg !6887
  %arrayidx483 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 2, !dbg !6888
  %304 = load float, float* %arrayidx483, align 4, !dbg !6888
  %sub484 = fsub float 1.000000e+00, %304, !dbg !6889
  %mul485 = fmul float %mul482, %sub484, !dbg !6890
  %305 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6891
  %spec486 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %305, i32 0, i32 8, !dbg !6892
  %arrayidx487 = getelementptr inbounds [3 x float], [3 x float]* %spec486, i64 0, i64 2, !dbg !6891
  %306 = load float, float* %arrayidx487, align 4, !dbg !6893
  %sub488 = fsub float %306, %mul485, !dbg !6893
  store float %sub488, float* %arrayidx487, align 4, !dbg !6893
  br label %if.end489, !dbg !6894

if.end489:                                        ; preds = %if.then465, %if.then429
  br label %if.end837, !dbg !6895

if.end490:                                        ; preds = %land.lhs.true426, %if.end422
  %arrayidx491 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6896
  %307 = load float, float* %arrayidx491, align 4, !dbg !6896
  %308 = load float, float* %i, align 4, !dbg !6897
  %mul492 = fmul float %308, %307, !dbg !6897
  store float %mul492, float* %i, align 4, !dbg !6897
  %arrayidx493 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !6898
  %309 = load float, float* %arrayidx493, align 4, !dbg !6898
  %310 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6899
  %shad494 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %310, i32 0, i32 9, !dbg !6900
  %arrayidx495 = getelementptr inbounds [4 x float], [4 x float]* %shad494, i64 0, i64 3, !dbg !6899
  store float %309, float* %arrayidx495, align 4, !dbg !6901
  br label %if.end496, !dbg !6902

if.end496:                                        ; preds = %if.end490, %lor.lhs.false405
  br label %if.end497, !dbg !6903

if.end497:                                        ; preds = %if.end496, %if.then398
  br label %if.end498, !dbg !6904

if.end498:                                        ; preds = %if.end497, %if.then395
  %311 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !6905
  %mode499 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %311, i32 0, i32 7, !dbg !6907
  %312 = load i32, i32* %mode499, align 4, !dbg !6907
  %and500 = and i32 %312, 2048, !dbg !6908
  %tobool501 = icmp ne i32 %and500, 0, !dbg !6908
  br i1 %tobool501, label %if.end594, label %if.then502, !dbg !6909

if.then502:                                       ; preds = %if.end498
  %313 = load float, float* %i, align 4, !dbg !6910
  %cmp503 = fcmp ogt float %313, 0.000000e+00, !dbg !6913
  br i1 %cmp503, label %if.then505, label %if.end534, !dbg !6914

if.then505:                                       ; preds = %if.then502
  %314 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6915
  %mode506 = getelementptr inbounds %struct.Material, %struct.Material* %314, i32 0, i32 51, !dbg !6918
  %315 = load i32, i32* %mode506, align 4, !dbg !6918
  %and507 = and i32 %315, 524288, !dbg !6919
  %tobool508 = icmp ne i32 %and507, 0, !dbg !6919
  br i1 %tobool508, label %if.then509, label %if.else524, !dbg !6920

if.then509:                                       ; preds = %if.then505
  %316 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6921
  %shad510 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %316, i32 0, i32 9, !dbg !6922
  %arraydecay511 = getelementptr inbounds [4 x float], [4 x float]* %shad510, i64 0, i64 0, !dbg !6921
  %317 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6923
  %318 = load float, float* %is, align 4, !dbg !6924
  %319 = load float, float* %i, align 4, !dbg !6925
  %arrayidx512 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !6926
  %320 = load float, float* %arrayidx512, align 16, !dbg !6926
  %mul513 = fmul float %319, %320, !dbg !6927
  %arrayidx514 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !6928
  %321 = load float, float* %arrayidx514, align 4, !dbg !6928
  %mul515 = fmul float %mul513, %321, !dbg !6929
  %322 = load float, float* %i, align 4, !dbg !6930
  %arrayidx516 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 1, !dbg !6931
  %323 = load float, float* %arrayidx516, align 4, !dbg !6931
  %mul517 = fmul float %322, %323, !dbg !6932
  %arrayidx518 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !6933
  %324 = load float, float* %arrayidx518, align 4, !dbg !6933
  %mul519 = fmul float %mul517, %324, !dbg !6934
  %325 = load float, float* %i, align 4, !dbg !6935
  %arrayidx520 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 2, !dbg !6936
  %326 = load float, float* %arrayidx520, align 8, !dbg !6936
  %mul521 = fmul float %325, %326, !dbg !6937
  %arrayidx522 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !6938
  %327 = load float, float* %arrayidx522, align 4, !dbg !6938
  %mul523 = fmul float %mul521, %327, !dbg !6939
  call void @add_to_diffuse(float* %arraydecay511, %struct.ShadeInput* %317, float %318, float %mul515, float %mul519, float %mul523), !dbg !6940
  br label %if.end533, !dbg !6940

if.else524:                                       ; preds = %if.then505
  %328 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6941
  %shad525 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %328, i32 0, i32 9, !dbg !6942
  %arraydecay526 = getelementptr inbounds [4 x float], [4 x float]* %shad525, i64 0, i64 0, !dbg !6941
  %329 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6943
  %330 = load float, float* %is, align 4, !dbg !6944
  %331 = load float, float* %i, align 4, !dbg !6945
  %arrayidx527 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !6946
  %332 = load float, float* %arrayidx527, align 4, !dbg !6946
  %mul528 = fmul float %331, %332, !dbg !6947
  %333 = load float, float* %i, align 4, !dbg !6948
  %arrayidx529 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !6949
  %334 = load float, float* %arrayidx529, align 4, !dbg !6949
  %mul530 = fmul float %333, %334, !dbg !6950
  %335 = load float, float* %i, align 4, !dbg !6951
  %arrayidx531 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !6952
  %336 = load float, float* %arrayidx531, align 4, !dbg !6952
  %mul532 = fmul float %335, %336, !dbg !6953
  call void @add_to_diffuse(float* %arraydecay526, %struct.ShadeInput* %329, float %330, float %mul528, float %mul530, float %mul532), !dbg !6954
  br label %if.end533

if.end533:                                        ; preds = %if.else524, %if.then509
  br label %if.end534, !dbg !6955

if.end534:                                        ; preds = %if.end533, %if.then502
  %337 = load float, float* %i_noshad, align 4, !dbg !6956
  %338 = load float, float* %i, align 4, !dbg !6958
  %cmp535 = fcmp ogt float %337, %338, !dbg !6959
  br i1 %cmp535, label %land.lhs.true537, label %if.end567, !dbg !6960

land.lhs.true537:                                 ; preds = %if.end534
  %arrayidx538 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6961
  %339 = load float, float* %arrayidx538, align 4, !dbg !6961
  %cmp539 = fcmp oeq float %339, 0.000000e+00, !dbg !6962
  br i1 %cmp539, label %land.lhs.true541, label %if.then549, !dbg !6963

land.lhs.true541:                                 ; preds = %land.lhs.true537
  %arrayidx542 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 1, !dbg !6964
  %340 = load float, float* %arrayidx542, align 4, !dbg !6964
  %cmp543 = fcmp oeq float %340, 0.000000e+00, !dbg !6965
  br i1 %cmp543, label %land.lhs.true545, label %if.then549, !dbg !6966

land.lhs.true545:                                 ; preds = %land.lhs.true541
  %arrayidx546 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 2, !dbg !6967
  %341 = load float, float* %arrayidx546, align 4, !dbg !6967
  %cmp547 = fcmp oeq float %341, 0.000000e+00, !dbg !6968
  br i1 %cmp547, label %if.end567, label %if.then549, !dbg !6969

if.then549:                                       ; preds = %land.lhs.true545, %land.lhs.true541, %land.lhs.true537
  %342 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6970
  %shad550 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %342, i32 0, i32 9, !dbg !6972
  %arraydecay551 = getelementptr inbounds [4 x float], [4 x float]* %shad550, i64 0, i64 0, !dbg !6970
  %343 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6973
  %344 = load float, float* %is, align 4, !dbg !6974
  %arrayidx552 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 0, !dbg !6975
  %345 = load float, float* %arrayidx552, align 4, !dbg !6975
  %346 = load float, float* %i_noshad, align 4, !dbg !6976
  %347 = load float, float* %i, align 4, !dbg !6977
  %sub553 = fsub float %346, %347, !dbg !6978
  %mul554 = fmul float %345, %sub553, !dbg !6979
  %arrayidx555 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !6980
  %348 = load float, float* %arrayidx555, align 4, !dbg !6980
  %mul556 = fmul float %mul554, %348, !dbg !6981
  %arrayidx557 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 1, !dbg !6982
  %349 = load float, float* %arrayidx557, align 4, !dbg !6982
  %350 = load float, float* %i_noshad, align 4, !dbg !6983
  %351 = load float, float* %i, align 4, !dbg !6984
  %sub558 = fsub float %350, %351, !dbg !6985
  %mul559 = fmul float %349, %sub558, !dbg !6986
  %arrayidx560 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !6987
  %352 = load float, float* %arrayidx560, align 4, !dbg !6987
  %mul561 = fmul float %mul559, %352, !dbg !6988
  %arrayidx562 = getelementptr inbounds [3 x float], [3 x float]* %lashdw, i64 0, i64 2, !dbg !6989
  %353 = load float, float* %arrayidx562, align 4, !dbg !6989
  %354 = load float, float* %i_noshad, align 4, !dbg !6990
  %355 = load float, float* %i, align 4, !dbg !6991
  %sub563 = fsub float %354, %355, !dbg !6992
  %mul564 = fmul float %353, %sub563, !dbg !6993
  %arrayidx565 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !6994
  %356 = load float, float* %arrayidx565, align 4, !dbg !6994
  %mul566 = fmul float %mul564, %356, !dbg !6995
  call void @add_to_diffuse(float* %arraydecay551, %struct.ShadeInput* %343, float %344, float %mul556, float %mul561, float %mul566), !dbg !6996
  br label %if.end567, !dbg !6997

if.end567:                                        ; preds = %if.then549, %land.lhs.true545, %if.end534
  %357 = load float, float* %i_noshad, align 4, !dbg !6998
  %cmp568 = fcmp ogt float %357, 0.000000e+00, !dbg !7000
  br i1 %cmp568, label %if.then570, label %if.end593, !dbg !7001

if.then570:                                       ; preds = %if.end567
  %358 = load i32, i32* %passflag.addr, align 4, !dbg !7002
  %and571 = and i32 %358, 40, !dbg !7005
  %tobool572 = icmp ne i32 %and571, 0, !dbg !7005
  br i1 %tobool572, label %if.then579, label %lor.lhs.false573, !dbg !7006

lor.lhs.false573:                                 ; preds = %if.then570
  %359 = load i32, i32* %passflag.addr, align 4, !dbg !7007
  %and574 = and i32 %359, 1, !dbg !7008
  %tobool575 = icmp ne i32 %and574, 0, !dbg !7008
  br i1 %tobool575, label %land.lhs.true576, label %if.else587, !dbg !7009

land.lhs.true576:                                 ; preds = %lor.lhs.false573
  %360 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7010
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %360, i32 0, i32 120, !dbg !7011
  %361 = load i32, i32* %combinedflag, align 4, !dbg !7011
  %and577 = and i32 %361, 32, !dbg !7012
  %tobool578 = icmp ne i32 %and577, 0, !dbg !7012
  br i1 %tobool578, label %if.else587, label %if.then579, !dbg !7013

if.then579:                                       ; preds = %land.lhs.true576, %if.then570
  %362 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7014
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %362, i32 0, i32 6, !dbg !7016
  %arraydecay580 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !7014
  %363 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7017
  %364 = load float, float* %is, align 4, !dbg !7018
  %365 = load float, float* %i_noshad, align 4, !dbg !7019
  %arrayidx581 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !7020
  %366 = load float, float* %arrayidx581, align 4, !dbg !7020
  %mul582 = fmul float %365, %366, !dbg !7021
  %367 = load float, float* %i_noshad, align 4, !dbg !7022
  %arrayidx583 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !7023
  %368 = load float, float* %arrayidx583, align 4, !dbg !7023
  %mul584 = fmul float %367, %368, !dbg !7024
  %369 = load float, float* %i_noshad, align 4, !dbg !7025
  %arrayidx585 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !7026
  %370 = load float, float* %arrayidx585, align 4, !dbg !7026
  %mul586 = fmul float %369, %370, !dbg !7027
  call void @add_to_diffuse(float* %arraydecay580, %struct.ShadeInput* %363, float %364, float %mul582, float %mul584, float %mul586), !dbg !7028
  br label %if.end592, !dbg !7029

if.else587:                                       ; preds = %land.lhs.true576, %lor.lhs.false573
  %371 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7030
  %diff588 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %371, i32 0, i32 6, !dbg !7032
  %arraydecay589 = getelementptr inbounds [3 x float], [3 x float]* %diff588, i64 0, i64 0, !dbg !7030
  %372 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7033
  %shad590 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %372, i32 0, i32 9, !dbg !7034
  %arraydecay591 = getelementptr inbounds [4 x float], [4 x float]* %shad590, i64 0, i64 0, !dbg !7033
  call void @copy_v3_v3(float* %arraydecay589, float* %arraydecay591), !dbg !7035
  br label %if.end592

if.end592:                                        ; preds = %if.else587, %if.then579
  br label %if.end593, !dbg !7036

if.end593:                                        ; preds = %if.end592, %if.end567
  br label %if.end594, !dbg !7037

if.end594:                                        ; preds = %if.end593, %if.end498
  %373 = load float, float* %phongcorr, align 4, !dbg !7038
  %arrayidx595 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !7039
  %374 = load float, float* %arrayidx595, align 4, !dbg !7040
  %mul596 = fmul float %374, %373, !dbg !7040
  store float %mul596, float* %arrayidx595, align 4, !dbg !7040
  %arrayidx597 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !7041
  %375 = load float, float* %arrayidx597, align 4, !dbg !7041
  %cmp598 = fcmp ogt float %375, 0.000000e+00, !dbg !7043
  br i1 %cmp598, label %land.lhs.true600, label %if.end836, !dbg !7044

land.lhs.true600:                                 ; preds = %if.end594
  %376 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7045
  %spec601 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %376, i32 0, i32 51, !dbg !7046
  %377 = load float, float* %spec601, align 8, !dbg !7046
  %cmp602 = fcmp une float %377, 0.000000e+00, !dbg !7047
  br i1 %cmp602, label %land.lhs.true604, label %if.end836, !dbg !7048

land.lhs.true604:                                 ; preds = %land.lhs.true600
  %378 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7049
  %mode605 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %378, i32 0, i32 7, !dbg !7050
  %379 = load i32, i32* %mode605, align 4, !dbg !7050
  %and606 = and i32 %379, 4096, !dbg !7051
  %tobool607 = icmp ne i32 %and606, 0, !dbg !7051
  br i1 %tobool607, label %if.end836, label %land.lhs.true608, !dbg !7052

land.lhs.true608:                                 ; preds = %land.lhs.true604
  %380 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7053
  %mode609 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %380, i32 0, i32 7, !dbg !7054
  %381 = load i32, i32* %mode609, align 4, !dbg !7054
  %and610 = and i32 %381, 32, !dbg !7055
  %tobool611 = icmp ne i32 %and610, 0, !dbg !7055
  br i1 %tobool611, label %if.end836, label %if.then612, !dbg !7056

if.then612:                                       ; preds = %land.lhs.true608
  %382 = load i32, i32* %passflag.addr, align 4, !dbg !7057
  %and613 = and i32 %382, 17, !dbg !7060
  %tobool614 = icmp ne i32 %and613, 0, !dbg !7060
  br i1 %tobool614, label %if.else616, label %if.then615, !dbg !7061

if.then615:                                       ; preds = %if.then612
  br label %if.end835, !dbg !7062

if.else616:                                       ; preds = %if.then612
  %383 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7064
  %type617 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %383, i32 0, i32 6, !dbg !7066
  %384 = load i16, i16* %type617, align 8, !dbg !7066
  %conv618 = sext i16 %384 to i32, !dbg !7064
  %cmp619 = icmp eq i32 %conv618, 3, !dbg !7067
  br i1 %cmp619, label %if.then621, label %if.else678, !dbg !7068

if.then621:                                       ; preds = %if.else616
  call void @llvm.dbg.declare(metadata float* %t, metadata !7069, metadata !DIExpression()), !dbg !7071
  %385 = load float*, float** %view, align 8, !dbg !7072
  %arrayidx622 = getelementptr inbounds float, float* %385, i64 0, !dbg !7072
  %386 = load float, float* %arrayidx622, align 4, !dbg !7072
  %arrayidx623 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7073
  %387 = load float, float* %arrayidx623, align 4, !dbg !7074
  %add624 = fadd float %387, %386, !dbg !7074
  store float %add624, float* %arrayidx623, align 4, !dbg !7074
  %388 = load float*, float** %view, align 8, !dbg !7075
  %arrayidx625 = getelementptr inbounds float, float* %388, i64 1, !dbg !7075
  %389 = load float, float* %arrayidx625, align 4, !dbg !7075
  %arrayidx626 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 1, !dbg !7076
  %390 = load float, float* %arrayidx626, align 4, !dbg !7077
  %add627 = fadd float %390, %389, !dbg !7077
  store float %add627, float* %arrayidx626, align 4, !dbg !7077
  %391 = load float*, float** %view, align 8, !dbg !7078
  %arrayidx628 = getelementptr inbounds float, float* %391, i64 2, !dbg !7078
  %392 = load float, float* %arrayidx628, align 4, !dbg !7078
  %arrayidx629 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 2, !dbg !7079
  %393 = load float, float* %arrayidx629, align 4, !dbg !7080
  %add630 = fadd float %393, %392, !dbg !7080
  store float %add630, float* %arrayidx629, align 4, !dbg !7080
  %arraydecay631 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7081
  %call632 = call float @normalize_v3(float* %arraydecay631), !dbg !7082
  %394 = load float*, float** %vn, align 8, !dbg !7083
  %arrayidx633 = getelementptr inbounds float, float* %394, i64 0, !dbg !7083
  %395 = load float, float* %arrayidx633, align 4, !dbg !7083
  %arrayidx634 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7084
  %396 = load float, float* %arrayidx634, align 4, !dbg !7084
  %mul635 = fmul float %395, %396, !dbg !7085
  %397 = load float*, float** %vn, align 8, !dbg !7086
  %arrayidx636 = getelementptr inbounds float, float* %397, i64 1, !dbg !7086
  %398 = load float, float* %arrayidx636, align 4, !dbg !7086
  %arrayidx637 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 1, !dbg !7087
  %399 = load float, float* %arrayidx637, align 4, !dbg !7087
  %mul638 = fmul float %398, %399, !dbg !7088
  %add639 = fadd float %mul635, %mul638, !dbg !7089
  %400 = load float*, float** %vn, align 8, !dbg !7090
  %arrayidx640 = getelementptr inbounds float, float* %400, i64 2, !dbg !7090
  %401 = load float, float* %arrayidx640, align 4, !dbg !7090
  %arrayidx641 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 2, !dbg !7091
  %402 = load float, float* %arrayidx641, align 4, !dbg !7091
  %mul642 = fmul float %401, %402, !dbg !7092
  %add643 = fadd float %add639, %mul642, !dbg !7093
  store float %add643, float* %t, align 4, !dbg !7094
  %403 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7095
  %type644 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %403, i32 0, i32 6, !dbg !7097
  %404 = load i16, i16* %type644, align 8, !dbg !7097
  %conv645 = sext i16 %404 to i32, !dbg !7095
  %cmp646 = icmp eq i32 %conv645, 3, !dbg !7098
  br i1 %cmp646, label %if.then648, label %if.end651, !dbg !7099

if.then648:                                       ; preds = %if.then621
  %405 = load float, float* %t, align 4, !dbg !7100
  %mul649 = fmul float 5.000000e-01, %405, !dbg !7102
  %add650 = fadd float %mul649, 5.000000e-01, !dbg !7103
  store float %add650, float* %t, align 4, !dbg !7104
  br label %if.end651, !dbg !7105

if.end651:                                        ; preds = %if.then648, %if.then621
  %arrayidx652 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !7106
  %406 = load float, float* %arrayidx652, align 4, !dbg !7106
  %407 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7107
  %spec653 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %407, i32 0, i32 51, !dbg !7108
  %408 = load float, float* %spec653, align 8, !dbg !7108
  %mul654 = fmul float %406, %408, !dbg !7109
  %409 = load float, float* %t, align 4, !dbg !7110
  %410 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7111
  %har = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %410, i32 0, i32 55, !dbg !7112
  %411 = load i32, i32* %har, align 8, !dbg !7112
  %call655 = call float @spec(float %409, i32 %411), !dbg !7113
  %mul656 = fmul float %mul654, %call655, !dbg !7114
  store float %mul656, float* %t, align 4, !dbg !7115
  %412 = load float, float* %t, align 4, !dbg !7116
  %arrayidx657 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !7117
  %413 = load float, float* %arrayidx657, align 4, !dbg !7117
  %414 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7118
  %specr658 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %414, i32 0, i32 35, !dbg !7119
  %415 = load float, float* %specr658, align 8, !dbg !7119
  %mul659 = fmul float %413, %415, !dbg !7120
  %mul660 = fmul float %412, %mul659, !dbg !7121
  %416 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7122
  %spec661 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %416, i32 0, i32 8, !dbg !7123
  %arrayidx662 = getelementptr inbounds [3 x float], [3 x float]* %spec661, i64 0, i64 0, !dbg !7122
  %417 = load float, float* %arrayidx662, align 4, !dbg !7124
  %add663 = fadd float %417, %mul660, !dbg !7124
  store float %add663, float* %arrayidx662, align 4, !dbg !7124
  %418 = load float, float* %t, align 4, !dbg !7125
  %arrayidx664 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !7126
  %419 = load float, float* %arrayidx664, align 4, !dbg !7126
  %420 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7127
  %specg665 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %420, i32 0, i32 36, !dbg !7128
  %421 = load float, float* %specg665, align 4, !dbg !7128
  %mul666 = fmul float %419, %421, !dbg !7129
  %mul667 = fmul float %418, %mul666, !dbg !7130
  %422 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7131
  %spec668 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %422, i32 0, i32 8, !dbg !7132
  %arrayidx669 = getelementptr inbounds [3 x float], [3 x float]* %spec668, i64 0, i64 1, !dbg !7131
  %423 = load float, float* %arrayidx669, align 4, !dbg !7133
  %add670 = fadd float %423, %mul667, !dbg !7133
  store float %add670, float* %arrayidx669, align 4, !dbg !7133
  %424 = load float, float* %t, align 4, !dbg !7134
  %arrayidx671 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !7135
  %425 = load float, float* %arrayidx671, align 4, !dbg !7135
  %426 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7136
  %specb672 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %426, i32 0, i32 37, !dbg !7137
  %427 = load float, float* %specb672, align 8, !dbg !7137
  %mul673 = fmul float %425, %427, !dbg !7138
  %mul674 = fmul float %424, %mul673, !dbg !7139
  %428 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7140
  %spec675 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %428, i32 0, i32 8, !dbg !7141
  %arrayidx676 = getelementptr inbounds [3 x float], [3 x float]* %spec675, i64 0, i64 2, !dbg !7140
  %429 = load float, float* %arrayidx676, align 4, !dbg !7142
  %add677 = fadd float %429, %mul674, !dbg !7142
  store float %add677, float* %arrayidx676, align 4, !dbg !7142
  br label %if.end834, !dbg !7143

if.else678:                                       ; preds = %if.else616
  call void @llvm.dbg.declare(metadata float* %specfac, metadata !7144, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata float* %t679, metadata !7147, metadata !DIExpression()), !dbg !7148
  %430 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7149
  %spec_shader = getelementptr inbounds %struct.Material, %struct.Material* %430, i32 0, i32 84, !dbg !7151
  %431 = load i16, i16* %spec_shader, align 2, !dbg !7151
  %conv680 = sext i16 %431 to i32, !dbg !7149
  %cmp681 = icmp eq i32 %conv680, 1, !dbg !7152
  br i1 %cmp681, label %if.then683, label %if.else694, !dbg !7153

if.then683:                                       ; preds = %if.else678
  %432 = load float*, float** %vn, align 8, !dbg !7154
  %arraydecay684 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7155
  %433 = load float*, float** %view, align 8, !dbg !7156
  %434 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7157
  %har685 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %434, i32 0, i32 55, !dbg !7158
  %435 = load i32, i32* %har685, align 8, !dbg !7158
  %436 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7159
  %flag686 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %436, i32 0, i32 7, !dbg !7160
  %437 = load i8, i8* %flag686, align 1, !dbg !7160
  %conv687 = zext i8 %437 to i32, !dbg !7159
  %and688 = and i32 %conv687, 64, !dbg !7161
  %tobool689 = icmp ne i32 %and688, 0, !dbg !7161
  br i1 %tobool689, label %lor.end, label %lor.rhs, !dbg !7162

lor.rhs:                                          ; preds = %if.then683
  %438 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7163
  %mode690 = getelementptr inbounds %struct.Material, %struct.Material* %438, i32 0, i32 51, !dbg !7164
  %439 = load i32, i32* %mode690, align 4, !dbg !7164
  %and691 = and i32 %439, 67108864, !dbg !7165
  %tobool692 = icmp ne i32 %and691, 0, !dbg !7162
  br label %lor.end, !dbg !7162

lor.end:                                          ; preds = %lor.rhs, %if.then683
  %440 = phi i1 [ true, %if.then683 ], [ %tobool692, %lor.rhs ]
  %lor.ext = zext i1 %440 to i32, !dbg !7162
  %call693 = call float @Phong_Spec(float* %432, float* %arraydecay684, float* %433, i32 %435, i32 %lor.ext), !dbg !7166
  store float %call693, float* %specfac, align 4, !dbg !7167
  br label %if.end771, !dbg !7168

if.else694:                                       ; preds = %if.else678
  %441 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7169
  %spec_shader695 = getelementptr inbounds %struct.Material, %struct.Material* %441, i32 0, i32 84, !dbg !7171
  %442 = load i16, i16* %spec_shader695, align 2, !dbg !7171
  %conv696 = sext i16 %442 to i32, !dbg !7169
  %cmp697 = icmp eq i32 %conv696, 0, !dbg !7172
  br i1 %cmp697, label %if.then699, label %if.else713, !dbg !7173

if.then699:                                       ; preds = %if.else694
  %443 = load float*, float** %vn, align 8, !dbg !7174
  %arraydecay700 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7175
  %444 = load float*, float** %view, align 8, !dbg !7176
  %445 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7177
  %har701 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %445, i32 0, i32 55, !dbg !7178
  %446 = load i32, i32* %har701, align 8, !dbg !7178
  %447 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7179
  %flag702 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %447, i32 0, i32 7, !dbg !7180
  %448 = load i8, i8* %flag702, align 1, !dbg !7180
  %conv703 = zext i8 %448 to i32, !dbg !7179
  %and704 = and i32 %conv703, 64, !dbg !7181
  %tobool705 = icmp ne i32 %and704, 0, !dbg !7181
  br i1 %tobool705, label %lor.end710, label %lor.rhs706, !dbg !7182

lor.rhs706:                                       ; preds = %if.then699
  %449 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7183
  %mode707 = getelementptr inbounds %struct.Material, %struct.Material* %449, i32 0, i32 51, !dbg !7184
  %450 = load i32, i32* %mode707, align 4, !dbg !7184
  %and708 = and i32 %450, 67108864, !dbg !7185
  %tobool709 = icmp ne i32 %and708, 0, !dbg !7182
  br label %lor.end710, !dbg !7182

lor.end710:                                       ; preds = %lor.rhs706, %if.then699
  %451 = phi i1 [ true, %if.then699 ], [ %tobool709, %lor.rhs706 ]
  %lor.ext711 = zext i1 %451 to i32, !dbg !7182
  %call712 = call float @CookTorr_Spec(float* %443, float* %arraydecay700, float* %444, i32 %446, i32 %lor.ext711), !dbg !7186
  store float %call712, float* %specfac, align 4, !dbg !7187
  br label %if.end770, !dbg !7188

if.else713:                                       ; preds = %if.else694
  %452 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7189
  %spec_shader714 = getelementptr inbounds %struct.Material, %struct.Material* %452, i32 0, i32 84, !dbg !7191
  %453 = load i16, i16* %spec_shader714, align 2, !dbg !7191
  %conv715 = sext i16 %453 to i32, !dbg !7189
  %cmp716 = icmp eq i32 %conv715, 2, !dbg !7192
  br i1 %cmp716, label %if.then718, label %if.else733, !dbg !7193

if.then718:                                       ; preds = %if.else713
  %454 = load float*, float** %vn, align 8, !dbg !7194
  %arraydecay719 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7195
  %455 = load float*, float** %view, align 8, !dbg !7196
  %456 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7197
  %refrac = getelementptr inbounds %struct.Material, %struct.Material* %456, i32 0, i32 86, !dbg !7198
  %457 = load float, float* %refrac, align 8, !dbg !7198
  %458 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7199
  %har720 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %458, i32 0, i32 55, !dbg !7200
  %459 = load i32, i32* %har720, align 8, !dbg !7200
  %conv721 = sitofp i32 %459 to float, !dbg !7201
  %460 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7202
  %flag722 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %460, i32 0, i32 7, !dbg !7203
  %461 = load i8, i8* %flag722, align 1, !dbg !7203
  %conv723 = zext i8 %461 to i32, !dbg !7202
  %and724 = and i32 %conv723, 64, !dbg !7204
  %tobool725 = icmp ne i32 %and724, 0, !dbg !7204
  br i1 %tobool725, label %lor.end730, label %lor.rhs726, !dbg !7205

lor.rhs726:                                       ; preds = %if.then718
  %462 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7206
  %mode727 = getelementptr inbounds %struct.Material, %struct.Material* %462, i32 0, i32 51, !dbg !7207
  %463 = load i32, i32* %mode727, align 4, !dbg !7207
  %and728 = and i32 %463, 67108864, !dbg !7208
  %tobool729 = icmp ne i32 %and728, 0, !dbg !7205
  br label %lor.end730, !dbg !7205

lor.end730:                                       ; preds = %lor.rhs726, %if.then718
  %464 = phi i1 [ true, %if.then718 ], [ %tobool729, %lor.rhs726 ]
  %lor.ext731 = zext i1 %464 to i32, !dbg !7205
  %call732 = call float @Blinn_Spec(float* %454, float* %arraydecay719, float* %455, float %457, float %conv721, i32 %lor.ext731), !dbg !7209
  store float %call732, float* %specfac, align 4, !dbg !7210
  br label %if.end769, !dbg !7211

if.else733:                                       ; preds = %if.else713
  %465 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7212
  %spec_shader734 = getelementptr inbounds %struct.Material, %struct.Material* %465, i32 0, i32 84, !dbg !7214
  %466 = load i16, i16* %spec_shader734, align 2, !dbg !7214
  %conv735 = sext i16 %466 to i32, !dbg !7212
  %cmp736 = icmp eq i32 %conv735, 4, !dbg !7215
  br i1 %cmp736, label %if.then738, label %if.else751, !dbg !7216

if.then738:                                       ; preds = %if.else733
  %467 = load float*, float** %vn, align 8, !dbg !7217
  %arraydecay739 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7218
  %468 = load float*, float** %view, align 8, !dbg !7219
  %469 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7220
  %rms = getelementptr inbounds %struct.Material, %struct.Material* %469, i32 0, i32 88, !dbg !7221
  %470 = load float, float* %rms, align 4, !dbg !7221
  %471 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7222
  %flag740 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %471, i32 0, i32 7, !dbg !7223
  %472 = load i8, i8* %flag740, align 1, !dbg !7223
  %conv741 = zext i8 %472 to i32, !dbg !7222
  %and742 = and i32 %conv741, 64, !dbg !7224
  %tobool743 = icmp ne i32 %and742, 0, !dbg !7224
  br i1 %tobool743, label %lor.end748, label %lor.rhs744, !dbg !7225

lor.rhs744:                                       ; preds = %if.then738
  %473 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7226
  %mode745 = getelementptr inbounds %struct.Material, %struct.Material* %473, i32 0, i32 51, !dbg !7227
  %474 = load i32, i32* %mode745, align 4, !dbg !7227
  %and746 = and i32 %474, 67108864, !dbg !7228
  %tobool747 = icmp ne i32 %and746, 0, !dbg !7225
  br label %lor.end748, !dbg !7225

lor.end748:                                       ; preds = %lor.rhs744, %if.then738
  %475 = phi i1 [ true, %if.then738 ], [ %tobool747, %lor.rhs744 ]
  %lor.ext749 = zext i1 %475 to i32, !dbg !7225
  %call750 = call float @WardIso_Spec(float* %467, float* %arraydecay739, float* %468, float %470, i32 %lor.ext749), !dbg !7229
  store float %call750, float* %specfac, align 4, !dbg !7230
  br label %if.end768, !dbg !7231

if.else751:                                       ; preds = %if.else733
  %476 = load float*, float** %vn, align 8, !dbg !7232
  %arraydecay752 = getelementptr inbounds [3 x float], [3 x float]* %lv, i64 0, i64 0, !dbg !7233
  %477 = load float*, float** %view, align 8, !dbg !7234
  %478 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7235
  %param753 = getelementptr inbounds %struct.Material, %struct.Material* %478, i32 0, i32 87, !dbg !7236
  %arrayidx754 = getelementptr inbounds [4 x float], [4 x float]* %param753, i64 0, i64 2, !dbg !7235
  %479 = load float, float* %arrayidx754, align 4, !dbg !7235
  %480 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7237
  %param755 = getelementptr inbounds %struct.Material, %struct.Material* %480, i32 0, i32 87, !dbg !7238
  %arrayidx756 = getelementptr inbounds [4 x float], [4 x float]* %param755, i64 0, i64 3, !dbg !7237
  %481 = load float, float* %arrayidx756, align 4, !dbg !7237
  %482 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7239
  %flag757 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %482, i32 0, i32 7, !dbg !7240
  %483 = load i8, i8* %flag757, align 1, !dbg !7240
  %conv758 = zext i8 %483 to i32, !dbg !7239
  %and759 = and i32 %conv758, 64, !dbg !7241
  %tobool760 = icmp ne i32 %and759, 0, !dbg !7241
  br i1 %tobool760, label %lor.end765, label %lor.rhs761, !dbg !7242

lor.rhs761:                                       ; preds = %if.else751
  %484 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7243
  %mode762 = getelementptr inbounds %struct.Material, %struct.Material* %484, i32 0, i32 51, !dbg !7244
  %485 = load i32, i32* %mode762, align 4, !dbg !7244
  %and763 = and i32 %485, 67108864, !dbg !7245
  %tobool764 = icmp ne i32 %and763, 0, !dbg !7242
  br label %lor.end765, !dbg !7242

lor.end765:                                       ; preds = %lor.rhs761, %if.else751
  %486 = phi i1 [ true, %if.else751 ], [ %tobool764, %lor.rhs761 ]
  %lor.ext766 = zext i1 %486 to i32, !dbg !7242
  %call767 = call float @Toon_Spec(float* %476, float* %arraydecay752, float* %477, float %479, float %481, i32 %lor.ext766), !dbg !7246
  store float %call767, float* %specfac, align 4, !dbg !7247
  br label %if.end768

if.end768:                                        ; preds = %lor.end765, %lor.end748
  br label %if.end769

if.end769:                                        ; preds = %if.end768, %lor.end730
  br label %if.end770

if.end770:                                        ; preds = %if.end769, %lor.end710
  br label %if.end771

if.end771:                                        ; preds = %if.end770, %lor.end
  %487 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !7248
  %type772 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %487, i32 0, i32 6, !dbg !7250
  %488 = load i16, i16* %type772, align 8, !dbg !7250
  %conv773 = sext i16 %488 to i32, !dbg !7248
  %cmp774 = icmp eq i32 %conv773, 4, !dbg !7251
  br i1 %cmp774, label %if.then776, label %if.end778, !dbg !7252

if.then776:                                       ; preds = %if.end771
  %489 = load float, float* %inp, align 4, !dbg !7253
  %490 = load float, float* %specfac, align 4, !dbg !7254
  %mul777 = fmul float %490, %489, !dbg !7254
  store float %mul777, float* %specfac, align 4, !dbg !7254
  br label %if.end778, !dbg !7255

if.end778:                                        ; preds = %if.then776, %if.end771
  %arrayidx779 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !7256
  %491 = load float, float* %arrayidx779, align 4, !dbg !7256
  %492 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7257
  %spec780 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %492, i32 0, i32 51, !dbg !7258
  %493 = load float, float* %spec780, align 8, !dbg !7258
  %mul781 = fmul float %491, %493, !dbg !7259
  %494 = load float, float* %visifac, align 4, !dbg !7260
  %mul782 = fmul float %mul781, %494, !dbg !7261
  %495 = load float, float* %specfac, align 4, !dbg !7262
  %mul783 = fmul float %mul782, %495, !dbg !7263
  store float %mul783, float* %t679, align 4, !dbg !7264
  %496 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7265
  %mode784 = getelementptr inbounds %struct.Material, %struct.Material* %496, i32 0, i32 51, !dbg !7267
  %497 = load i32, i32* %mode784, align 4, !dbg !7267
  %and785 = and i32 %497, 2097152, !dbg !7268
  %tobool786 = icmp ne i32 %and785, 0, !dbg !7268
  br i1 %tobool786, label %if.then787, label %if.else811, !dbg !7269

if.then787:                                       ; preds = %if.end778
  call void @llvm.dbg.declare(metadata [3 x float]* %spec788, metadata !7270, metadata !DIExpression()), !dbg !7272
  %498 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7273
  %499 = load float, float* %specfac, align 4, !dbg !7274
  %500 = load float, float* %t679, align 4, !dbg !7275
  %arraydecay789 = getelementptr inbounds [3 x float], [3 x float]* %spec788, i64 0, i64 0, !dbg !7276
  call void @do_specular_ramp(%struct.ShadeInput* %498, float %499, float %500, float* %arraydecay789), !dbg !7277
  %501 = load float, float* %t679, align 4, !dbg !7278
  %arrayidx790 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !7279
  %502 = load float, float* %arrayidx790, align 4, !dbg !7279
  %arrayidx791 = getelementptr inbounds [3 x float], [3 x float]* %spec788, i64 0, i64 0, !dbg !7280
  %503 = load float, float* %arrayidx791, align 4, !dbg !7280
  %mul792 = fmul float %502, %503, !dbg !7281
  %mul793 = fmul float %501, %mul792, !dbg !7282
  %504 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7283
  %spec794 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %504, i32 0, i32 8, !dbg !7284
  %arrayidx795 = getelementptr inbounds [3 x float], [3 x float]* %spec794, i64 0, i64 0, !dbg !7283
  %505 = load float, float* %arrayidx795, align 4, !dbg !7285
  %add796 = fadd float %505, %mul793, !dbg !7285
  store float %add796, float* %arrayidx795, align 4, !dbg !7285
  %506 = load float, float* %t679, align 4, !dbg !7286
  %arrayidx797 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !7287
  %507 = load float, float* %arrayidx797, align 4, !dbg !7287
  %arrayidx798 = getelementptr inbounds [3 x float], [3 x float]* %spec788, i64 0, i64 1, !dbg !7288
  %508 = load float, float* %arrayidx798, align 4, !dbg !7288
  %mul799 = fmul float %507, %508, !dbg !7289
  %mul800 = fmul float %506, %mul799, !dbg !7290
  %509 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7291
  %spec801 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %509, i32 0, i32 8, !dbg !7292
  %arrayidx802 = getelementptr inbounds [3 x float], [3 x float]* %spec801, i64 0, i64 1, !dbg !7291
  %510 = load float, float* %arrayidx802, align 4, !dbg !7293
  %add803 = fadd float %510, %mul800, !dbg !7293
  store float %add803, float* %arrayidx802, align 4, !dbg !7293
  %511 = load float, float* %t679, align 4, !dbg !7294
  %arrayidx804 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !7295
  %512 = load float, float* %arrayidx804, align 4, !dbg !7295
  %arrayidx805 = getelementptr inbounds [3 x float], [3 x float]* %spec788, i64 0, i64 2, !dbg !7296
  %513 = load float, float* %arrayidx805, align 4, !dbg !7296
  %mul806 = fmul float %512, %513, !dbg !7297
  %mul807 = fmul float %511, %mul806, !dbg !7298
  %514 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7299
  %spec808 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %514, i32 0, i32 8, !dbg !7300
  %arrayidx809 = getelementptr inbounds [3 x float], [3 x float]* %spec808, i64 0, i64 2, !dbg !7299
  %515 = load float, float* %arrayidx809, align 4, !dbg !7301
  %add810 = fadd float %515, %mul807, !dbg !7301
  store float %add810, float* %arrayidx809, align 4, !dbg !7301
  br label %if.end833, !dbg !7302

if.else811:                                       ; preds = %if.end778
  %516 = load float, float* %t679, align 4, !dbg !7303
  %arrayidx812 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 0, !dbg !7305
  %517 = load float, float* %arrayidx812, align 4, !dbg !7305
  %518 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7306
  %specr813 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %518, i32 0, i32 35, !dbg !7307
  %519 = load float, float* %specr813, align 8, !dbg !7307
  %mul814 = fmul float %517, %519, !dbg !7308
  %mul815 = fmul float %516, %mul814, !dbg !7309
  %520 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7310
  %spec816 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %520, i32 0, i32 8, !dbg !7311
  %arrayidx817 = getelementptr inbounds [3 x float], [3 x float]* %spec816, i64 0, i64 0, !dbg !7310
  %521 = load float, float* %arrayidx817, align 4, !dbg !7312
  %add818 = fadd float %521, %mul815, !dbg !7312
  store float %add818, float* %arrayidx817, align 4, !dbg !7312
  %522 = load float, float* %t679, align 4, !dbg !7313
  %arrayidx819 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 1, !dbg !7314
  %523 = load float, float* %arrayidx819, align 4, !dbg !7314
  %524 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7315
  %specg820 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %524, i32 0, i32 36, !dbg !7316
  %525 = load float, float* %specg820, align 4, !dbg !7316
  %mul821 = fmul float %523, %525, !dbg !7317
  %mul822 = fmul float %522, %mul821, !dbg !7318
  %526 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7319
  %spec823 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %526, i32 0, i32 8, !dbg !7320
  %arrayidx824 = getelementptr inbounds [3 x float], [3 x float]* %spec823, i64 0, i64 1, !dbg !7319
  %527 = load float, float* %arrayidx824, align 4, !dbg !7321
  %add825 = fadd float %527, %mul822, !dbg !7321
  store float %add825, float* %arrayidx824, align 4, !dbg !7321
  %528 = load float, float* %t679, align 4, !dbg !7322
  %arrayidx826 = getelementptr inbounds [3 x float], [3 x float]* %lacol, i64 0, i64 2, !dbg !7323
  %529 = load float, float* %arrayidx826, align 4, !dbg !7323
  %530 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7324
  %specb827 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %530, i32 0, i32 37, !dbg !7325
  %531 = load float, float* %specb827, align 8, !dbg !7325
  %mul828 = fmul float %529, %531, !dbg !7326
  %mul829 = fmul float %528, %mul828, !dbg !7327
  %532 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7328
  %spec830 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %532, i32 0, i32 8, !dbg !7329
  %arrayidx831 = getelementptr inbounds [3 x float], [3 x float]* %spec830, i64 0, i64 2, !dbg !7328
  %533 = load float, float* %arrayidx831, align 4, !dbg !7330
  %add832 = fadd float %533, %mul829, !dbg !7330
  store float %add832, float* %arrayidx831, align 4, !dbg !7330
  br label %if.end833

if.end833:                                        ; preds = %if.else811, %if.then787
  br label %if.end834

if.end834:                                        ; preds = %if.end833, %if.end651
  br label %if.end835

if.end835:                                        ; preds = %if.end834, %if.then615
  br label %if.end836, !dbg !7331

if.end836:                                        ; preds = %if.end835, %land.lhs.true608, %land.lhs.true604, %land.lhs.true600, %if.end594
  br label %if.end837, !dbg !7332

if.end837:                                        ; preds = %if.then, %if.then10, %if.then18, %if.then23, %if.end489, %if.end836, %if.end388
  ret void, !dbg !7333
}

declare dso_local i32 @sample_sss(%struct.Render*, %struct.Material*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wrld_exposure_correct(float* %diff) #0 !dbg !7334 {
entry:
  %diff.addr = alloca float*, align 8
  store float* %diff, float** %diff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diff.addr, metadata !7335, metadata !DIExpression()), !dbg !7336
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 18), align 8, !dbg !7337
  %1 = load float*, float** %diff.addr, align 8, !dbg !7338
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7338
  %2 = load float, float* %arrayidx, align 4, !dbg !7338
  %3 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 19), align 4, !dbg !7339
  %mul = fmul float %2, %3, !dbg !7340
  %call = call float @expf(float %mul) #6, !dbg !7341
  %sub = fsub float 1.000000e+00, %call, !dbg !7342
  %mul1 = fmul float %0, %sub, !dbg !7343
  %4 = load float*, float** %diff.addr, align 8, !dbg !7344
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7344
  store float %mul1, float* %arrayidx2, align 4, !dbg !7345
  %5 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 18), align 8, !dbg !7346
  %6 = load float*, float** %diff.addr, align 8, !dbg !7347
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7347
  %7 = load float, float* %arrayidx3, align 4, !dbg !7347
  %8 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 19), align 4, !dbg !7348
  %mul4 = fmul float %7, %8, !dbg !7349
  %call5 = call float @expf(float %mul4) #6, !dbg !7350
  %sub6 = fsub float 1.000000e+00, %call5, !dbg !7351
  %mul7 = fmul float %5, %sub6, !dbg !7352
  %9 = load float*, float** %diff.addr, align 8, !dbg !7353
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 1, !dbg !7353
  store float %mul7, float* %arrayidx8, align 4, !dbg !7354
  %10 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 18), align 8, !dbg !7355
  %11 = load float*, float** %diff.addr, align 8, !dbg !7356
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 2, !dbg !7356
  %12 = load float, float* %arrayidx9, align 4, !dbg !7356
  %13 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 19), align 4, !dbg !7357
  %mul10 = fmul float %12, %13, !dbg !7358
  %call11 = call float @expf(float %mul10) #6, !dbg !7359
  %sub12 = fsub float 1.000000e+00, %call11, !dbg !7360
  %mul13 = fmul float %10, %sub12, !dbg !7361
  %14 = load float*, float** %diff.addr, align 8, !dbg !7362
  %arrayidx14 = getelementptr inbounds float, float* %14, i64 2, !dbg !7362
  store float %mul13, float* %arrayidx14, align 4, !dbg !7363
  ret void, !dbg !7364
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !7365 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  %0 = load float, float* %a.addr, align 4, !dbg !7374
  %1 = load float, float* %b.addr, align 4, !dbg !7375
  %call = call float @max_ff(float %0, float %1), !dbg !7376
  %2 = load float, float* %c.addr, align 4, !dbg !7377
  %call1 = call float @max_ff(float %call, float %2), !dbg !7378
  ret float %call1, !dbg !7379
}

; Function Attrs: noinline nounwind uwtable
define internal void @ambient_occlusion_apply(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !7380 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %f = alloca float, align 4
  %tmp = alloca [3 x float], align 4
  %tmpspec = alloca [3 x float], align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.declare(metadata float* %f, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 48), align 8, !dbg !7387
  store float %0, float* %f, align 4, !dbg !7386
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.declare(metadata [3 x float]* %tmpspec, metadata !7390, metadata !DIExpression()), !dbg !7391
  %1 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7392
  %and = and i32 %1, 65536, !dbg !7394
  %tobool = icmp ne i32 %and, 0, !dbg !7394
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !7395

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 64), align 2, !dbg !7396
  %conv = sext i16 %2 to i32, !dbg !7397
  %cmp = icmp eq i32 %conv, 1, !dbg !7398
  br i1 %cmp, label %if.end, label %if.then, !dbg !7399

if.then:                                          ; preds = %lor.lhs.false
  br label %if.end65, !dbg !7400

if.end:                                           ; preds = %lor.lhs.false, %entry
  %3 = load float, float* %f, align 4, !dbg !7401
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !7403
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !7404

if.then4:                                         ; preds = %if.end
  br label %if.end65, !dbg !7405

if.end5:                                          ; preds = %if.end
  %4 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 52), align 4, !dbg !7406
  %conv6 = sext i16 %4 to i32, !dbg !7408
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !7409
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !7410

if.then9:                                         ; preds = %if.end5
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7411
  %ao = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 100, !dbg !7413
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !7411
  %6 = load float, float* %arrayidx, align 8, !dbg !7411
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7414
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 32, !dbg !7415
  %8 = load float, float* %r, align 4, !dbg !7415
  %mul = fmul float %6, %8, !dbg !7416
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7417
  %refl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 50, !dbg !7418
  %10 = load float, float* %refl, align 4, !dbg !7418
  %mul10 = fmul float %mul, %10, !dbg !7419
  %11 = load float, float* %f, align 4, !dbg !7420
  %mul11 = fmul float %mul10, %11, !dbg !7421
  %12 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7422
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %12, i32 0, i32 0, !dbg !7423
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !7422
  %13 = load float, float* %arrayidx12, align 4, !dbg !7424
  %add = fadd float %13, %mul11, !dbg !7424
  store float %add, float* %arrayidx12, align 4, !dbg !7424
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7425
  %ao13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 100, !dbg !7426
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %ao13, i64 0, i64 1, !dbg !7425
  %15 = load float, float* %arrayidx14, align 4, !dbg !7425
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7427
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 33, !dbg !7428
  %17 = load float, float* %g, align 8, !dbg !7428
  %mul15 = fmul float %15, %17, !dbg !7429
  %18 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7430
  %refl16 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %18, i32 0, i32 50, !dbg !7431
  %19 = load float, float* %refl16, align 4, !dbg !7431
  %mul17 = fmul float %mul15, %19, !dbg !7432
  %20 = load float, float* %f, align 4, !dbg !7433
  %mul18 = fmul float %mul17, %20, !dbg !7434
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7435
  %combined19 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 0, !dbg !7436
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %combined19, i64 0, i64 1, !dbg !7435
  %22 = load float, float* %arrayidx20, align 4, !dbg !7437
  %add21 = fadd float %22, %mul18, !dbg !7437
  store float %add21, float* %arrayidx20, align 4, !dbg !7437
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7438
  %ao22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 100, !dbg !7439
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %ao22, i64 0, i64 2, !dbg !7438
  %24 = load float, float* %arrayidx23, align 8, !dbg !7438
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7440
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 34, !dbg !7441
  %26 = load float, float* %b, align 4, !dbg !7441
  %mul24 = fmul float %24, %26, !dbg !7442
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7443
  %refl25 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 50, !dbg !7444
  %28 = load float, float* %refl25, align 4, !dbg !7444
  %mul26 = fmul float %mul24, %28, !dbg !7445
  %29 = load float, float* %f, align 4, !dbg !7446
  %mul27 = fmul float %mul26, %29, !dbg !7447
  %30 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7448
  %combined28 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %30, i32 0, i32 0, !dbg !7449
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %combined28, i64 0, i64 2, !dbg !7448
  %31 = load float, float* %arrayidx29, align 4, !dbg !7450
  %add30 = fadd float %31, %mul27, !dbg !7450
  store float %add30, float* %arrayidx29, align 4, !dbg !7450
  br label %if.end65, !dbg !7451

if.else:                                          ; preds = %if.end5
  %32 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 52), align 4, !dbg !7452
  %conv31 = sext i16 %32 to i32, !dbg !7454
  %cmp32 = icmp eq i32 %conv31, 3, !dbg !7455
  br i1 %cmp32, label %if.then34, label %if.end64, !dbg !7456

if.then34:                                        ; preds = %if.else
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !7457
  %33 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7459
  %combined35 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %33, i32 0, i32 0, !dbg !7460
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %combined35, i64 0, i64 0, !dbg !7459
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7461
  %ao37 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 100, !dbg !7462
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %ao37, i64 0, i64 0, !dbg !7461
  call void @mul_v3_v3v3(float* %arraydecay, float* %arraydecay36, float* %arraydecay38), !dbg !7463
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %tmpspec, i64 0, i64 0, !dbg !7464
  %35 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7465
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %35, i32 0, i32 8, !dbg !7466
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !7465
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7467
  %ao41 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 100, !dbg !7468
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %ao41, i64 0, i64 0, !dbg !7467
  call void @mul_v3_v3v3(float* %arraydecay39, float* %arraydecay40, float* %arraydecay42), !dbg !7469
  %37 = load float, float* %f, align 4, !dbg !7470
  %cmp43 = fcmp oeq float %37, 1.000000e+00, !dbg !7472
  br i1 %cmp43, label %if.then45, label %if.else52, !dbg !7473

if.then45:                                        ; preds = %if.then34
  %38 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7474
  %combined46 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %38, i32 0, i32 0, !dbg !7476
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %combined46, i64 0, i64 0, !dbg !7474
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !7477
  call void @copy_v3_v3(float* %arraydecay47, float* %arraydecay48), !dbg !7478
  %39 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7479
  %spec49 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %39, i32 0, i32 8, !dbg !7480
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %spec49, i64 0, i64 0, !dbg !7479
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %tmpspec, i64 0, i64 0, !dbg !7481
  call void @copy_v3_v3(float* %arraydecay50, float* %arraydecay51), !dbg !7482
  br label %if.end63, !dbg !7483

if.else52:                                        ; preds = %if.then34
  %40 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7484
  %combined53 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %40, i32 0, i32 0, !dbg !7486
  %arraydecay54 = getelementptr inbounds [4 x float], [4 x float]* %combined53, i64 0, i64 0, !dbg !7484
  %41 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7487
  %combined55 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %41, i32 0, i32 0, !dbg !7488
  %arraydecay56 = getelementptr inbounds [4 x float], [4 x float]* %combined55, i64 0, i64 0, !dbg !7487
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !7489
  %42 = load float, float* %f, align 4, !dbg !7490
  call void @interp_v3_v3v3(float* %arraydecay54, float* %arraydecay56, float* %arraydecay57, float %42), !dbg !7491
  %43 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7492
  %spec58 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %43, i32 0, i32 8, !dbg !7493
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %spec58, i64 0, i64 0, !dbg !7492
  %44 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7494
  %spec60 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %44, i32 0, i32 8, !dbg !7495
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %spec60, i64 0, i64 0, !dbg !7494
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %tmpspec, i64 0, i64 0, !dbg !7496
  %45 = load float, float* %f, align 4, !dbg !7497
  call void @interp_v3_v3v3(float* %arraydecay59, float* %arraydecay61, float* %arraydecay62, float %45), !dbg !7498
  br label %if.end63

if.end63:                                         ; preds = %if.else52, %if.then45
  br label %if.end64, !dbg !7499

if.end64:                                         ; preds = %if.end63, %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.then, %if.then4, %if.end64, %if.then9
  ret void, !dbg !7500
}

; Function Attrs: noinline nounwind uwtable
define internal void @indirect_lighting_apply(%struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !7501 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %f = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata float* %f, metadata !7506, metadata !DIExpression()), !dbg !7507
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 58), align 8, !dbg !7508
  store float %0, float* %f, align 4, !dbg !7507
  %1 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7509
  %and = and i32 %1, 65536, !dbg !7511
  %tobool = icmp ne i32 %and, 0, !dbg !7511
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !7512

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 64), align 2, !dbg !7513
  %conv = sext i16 %2 to i32, !dbg !7514
  %cmp = icmp eq i32 %conv, 1, !dbg !7515
  br i1 %cmp, label %if.end, label %if.then, !dbg !7516

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !7517

if.end:                                           ; preds = %lor.lhs.false, %entry
  %3 = load float, float* %f, align 4, !dbg !7518
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !7520
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !7521

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !7522

if.end5:                                          ; preds = %if.end
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7523
  %indirect = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 101, !dbg !7524
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !7523
  %5 = load float, float* %arrayidx, align 4, !dbg !7523
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7525
  %r = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 32, !dbg !7526
  %7 = load float, float* %r, align 4, !dbg !7526
  %mul = fmul float %5, %7, !dbg !7527
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7528
  %refl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 50, !dbg !7529
  %9 = load float, float* %refl, align 4, !dbg !7529
  %mul6 = fmul float %mul, %9, !dbg !7530
  %10 = load float, float* %f, align 4, !dbg !7531
  %mul7 = fmul float %mul6, %10, !dbg !7532
  %11 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7533
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %11, i32 0, i32 0, !dbg !7534
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !7533
  %12 = load float, float* %arrayidx8, align 4, !dbg !7535
  %add = fadd float %12, %mul7, !dbg !7535
  store float %add, float* %arrayidx8, align 4, !dbg !7535
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7536
  %indirect9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 101, !dbg !7537
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %indirect9, i64 0, i64 1, !dbg !7536
  %14 = load float, float* %arrayidx10, align 4, !dbg !7536
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7538
  %g = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 33, !dbg !7539
  %16 = load float, float* %g, align 8, !dbg !7539
  %mul11 = fmul float %14, %16, !dbg !7540
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7541
  %refl12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 50, !dbg !7542
  %18 = load float, float* %refl12, align 4, !dbg !7542
  %mul13 = fmul float %mul11, %18, !dbg !7543
  %19 = load float, float* %f, align 4, !dbg !7544
  %mul14 = fmul float %mul13, %19, !dbg !7545
  %20 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7546
  %combined15 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %20, i32 0, i32 0, !dbg !7547
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %combined15, i64 0, i64 1, !dbg !7546
  %21 = load float, float* %arrayidx16, align 4, !dbg !7548
  %add17 = fadd float %21, %mul14, !dbg !7548
  store float %add17, float* %arrayidx16, align 4, !dbg !7548
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7549
  %indirect18 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 101, !dbg !7550
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %indirect18, i64 0, i64 2, !dbg !7549
  %23 = load float, float* %arrayidx19, align 4, !dbg !7549
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7551
  %b = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 34, !dbg !7552
  %25 = load float, float* %b, align 4, !dbg !7552
  %mul20 = fmul float %23, %25, !dbg !7553
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7554
  %refl21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 50, !dbg !7555
  %27 = load float, float* %refl21, align 4, !dbg !7555
  %mul22 = fmul float %mul20, %27, !dbg !7556
  %28 = load float, float* %f, align 4, !dbg !7557
  %mul23 = fmul float %mul22, %28, !dbg !7558
  %29 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !7559
  %combined24 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %29, i32 0, i32 0, !dbg !7560
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %combined24, i64 0, i64 2, !dbg !7559
  %30 = load float, float* %arrayidx25, align 4, !dbg !7561
  %add26 = fadd float %30, %mul23, !dbg !7561
  store float %add26, float* %arrayidx25, align 4, !dbg !7561
  br label %return, !dbg !7562

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind uwtable
define internal void @ramp_diffuse_result(float* %diff, %struct.ShadeInput* %shi) #0 !dbg !7563 {
entry:
  %diff.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ma = alloca %struct.Material*, align 8
  %col = alloca [4 x float], align 16
  %fac = alloca float, align 4
  store float* %diff, float** %diff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diff.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7570, metadata !DIExpression()), !dbg !7571
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7572
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !7573
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7573
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !7571
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !7574, metadata !DIExpression()), !dbg !7575
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7576
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 92, !dbg !7578
  %3 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !7578
  %tobool = icmp ne %struct.ColorBand* %3, null, !dbg !7576
  br i1 %tobool, label %if.then, label %if.end7, !dbg !7579

if.then:                                          ; preds = %entry
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7580
  %rampin_col = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 94, !dbg !7583
  %5 = load i8, i8* %rampin_col, align 8, !dbg !7583
  %conv = zext i8 %5 to i32, !dbg !7580
  %cmp = icmp eq i32 %conv, 3, !dbg !7584
  br i1 %cmp, label %if.then2, label %if.end, !dbg !7585

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7586, metadata !DIExpression()), !dbg !7588
  %6 = load float*, float** %diff.addr, align 8, !dbg !7589
  %call = call float @rgb_to_grayscale(float* %6), !dbg !7590
  store float %call, float* %fac, align 4, !dbg !7588
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7591
  %ramp_col3 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 92, !dbg !7592
  %8 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col3, align 8, !dbg !7592
  %9 = load float, float* %fac, align 4, !dbg !7593
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7594
  %call4 = call zeroext i8 @do_colorband(%struct.ColorBand* %8, float %9, float* %arraydecay), !dbg !7595
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7596
  %10 = load float, float* %arrayidx, align 4, !dbg !7596
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7597
  %rampfac_col = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 100, !dbg !7598
  %12 = load float, float* %rampfac_col, align 8, !dbg !7598
  %mul = fmul float %10, %12, !dbg !7599
  store float %mul, float* %fac, align 4, !dbg !7600
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7601
  %rampblend_col = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 96, !dbg !7602
  %14 = load i8, i8* %rampblend_col, align 2, !dbg !7602
  %conv5 = zext i8 %14 to i32, !dbg !7601
  %15 = load float*, float** %diff.addr, align 8, !dbg !7603
  %16 = load float, float* %fac, align 4, !dbg !7604
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7605
  call void @ramp_blend(i32 %conv5, float* %15, float %16, float* %arraydecay6), !dbg !7606
  br label %if.end, !dbg !7607

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !7608

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !7609
}

; Function Attrs: noinline nounwind uwtable
define internal void @ramp_spec_result(float* %spec_col, %struct.ShadeInput* %shi) #0 !dbg !7610 {
entry:
  %spec_col.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ma = alloca %struct.Material*, align 8
  %col = alloca [4 x float], align 16
  %fac = alloca float, align 4
  store float* %spec_col, float** %spec_col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %spec_col.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7613, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7615, metadata !DIExpression()), !dbg !7616
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7617
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !7618
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7618
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !7616
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7619
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 93, !dbg !7621
  %3 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !7621
  %tobool = icmp ne %struct.ColorBand* %3, null, !dbg !7619
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7622

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7623
  %rampin_spec = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 95, !dbg !7624
  %5 = load i8, i8* %rampin_spec, align 1, !dbg !7624
  %conv = zext i8 %5 to i32, !dbg !7623
  %cmp = icmp eq i32 %conv, 3, !dbg !7625
  br i1 %cmp, label %if.then, label %if.end, !dbg !7626

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !7627, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7630, metadata !DIExpression()), !dbg !7631
  %6 = load float*, float** %spec_col.addr, align 8, !dbg !7632
  %call = call float @rgb_to_grayscale(float* %6), !dbg !7633
  store float %call, float* %fac, align 4, !dbg !7631
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7634
  %ramp_spec2 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 93, !dbg !7635
  %8 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec2, align 8, !dbg !7635
  %9 = load float, float* %fac, align 4, !dbg !7636
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7637
  %call3 = call zeroext i8 @do_colorband(%struct.ColorBand* %8, float %9, float* %arraydecay), !dbg !7638
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !7639
  %10 = load float, float* %arrayidx, align 4, !dbg !7639
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7640
  %rampfac_spec = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 101, !dbg !7641
  %12 = load float, float* %rampfac_spec, align 4, !dbg !7641
  %mul = fmul float %10, %12, !dbg !7642
  store float %mul, float* %fac, align 4, !dbg !7643
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7644
  %rampblend_spec = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 97, !dbg !7645
  %14 = load i8, i8* %rampblend_spec, align 1, !dbg !7645
  %conv4 = zext i8 %14 to i32, !dbg !7644
  %15 = load float*, float** %spec_col.addr, align 8, !dbg !7646
  %16 = load float, float* %fac, align 4, !dbg !7647
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !7648
  call void @ramp_blend(i32 %conv4, float* %15, float %16, float* %arraydecay5), !dbg !7649
  br label %if.end, !dbg !7650

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7651
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !7652 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  %0 = load float*, float** %a.addr, align 8, !dbg !7657
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7657
  %1 = load float, float* %arrayidx, align 4, !dbg !7657
  %2 = load float*, float** %r.addr, align 8, !dbg !7658
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7658
  %3 = load float, float* %arrayidx1, align 4, !dbg !7659
  %add = fadd float %3, %1, !dbg !7659
  store float %add, float* %arrayidx1, align 4, !dbg !7659
  %4 = load float*, float** %a.addr, align 8, !dbg !7660
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7660
  %5 = load float, float* %arrayidx2, align 4, !dbg !7660
  %6 = load float*, float** %r.addr, align 8, !dbg !7661
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7661
  %7 = load float, float* %arrayidx3, align 4, !dbg !7662
  %add4 = fadd float %7, %5, !dbg !7662
  store float %add4, float* %arrayidx3, align 4, !dbg !7662
  %8 = load float*, float** %a.addr, align 8, !dbg !7663
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7663
  %9 = load float, float* %arrayidx5, align 4, !dbg !7663
  %10 = load float*, float** %r.addr, align 8, !dbg !7664
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7664
  %11 = load float, float* %arrayidx6, align 4, !dbg !7665
  %add7 = fadd float %11, %9, !dbg !7665
  store float %add7, float* %arrayidx6, align 4, !dbg !7665
  ret void, !dbg !7666
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RE_lamp_get_data(%struct.ShadeInput* %shi, %struct.Object* %lamp_obj, float* %col, float* %lv, float* %dist, float* %shadow) #0 !dbg !7667 {
entry:
  %retval = alloca float, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %lamp_obj.addr = alloca %struct.Object*, align 8
  %col.addr = alloca float*, align 8
  %lv.addr = alloca float*, align 8
  %dist.addr = alloca float*, align 8
  %shadow.addr = alloca float*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %lamp = alloca %struct.Lamp*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  store %struct.Object* %lamp_obj, %struct.Object** %lamp_obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %lamp_obj.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store float* %lv, float** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lv.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  store float* %dist, float** %dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dist.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store float* %shadow, float** %shadow.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadow.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  %0 = load float*, float** %col.addr, align 8, !dbg !7682
  %arrayidx = getelementptr inbounds float, float* %0, i64 2, !dbg !7682
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7683
  %1 = load float*, float** %col.addr, align 8, !dbg !7684
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7684
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7685
  %2 = load float*, float** %col.addr, align 8, !dbg !7686
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !7686
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7687
  %3 = load float*, float** %col.addr, align 8, !dbg !7688
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !7688
  store float 1.000000e+00, float* %arrayidx3, align 4, !dbg !7689
  %4 = load float*, float** %lv.addr, align 8, !dbg !7690
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7691
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 16, !dbg !7692
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7691
  call void @copy_v3_v3(float* %4, float* %arraydecay), !dbg !7693
  %6 = load float*, float** %dist.addr, align 8, !dbg !7694
  store float 1.000000e+00, float* %6, align 4, !dbg !7695
  %7 = load float*, float** %shadow.addr, align 8, !dbg !7696
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 3, !dbg !7696
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !7697
  %8 = load float*, float** %shadow.addr, align 8, !dbg !7698
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7698
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !7699
  %9 = load float*, float** %shadow.addr, align 8, !dbg !7700
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7700
  store float 1.000000e+00, float* %arrayidx6, align 4, !dbg !7701
  %10 = load float*, float** %shadow.addr, align 8, !dbg !7702
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 0, !dbg !7702
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !7703
  %11 = load %struct.Object*, %struct.Object** %lamp_obj.addr, align 8, !dbg !7704
  %type = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !7706
  %12 = load i16, i16* %type, align 8, !dbg !7706
  %conv = sext i16 %12 to i32, !dbg !7704
  %cmp = icmp eq i32 %conv, 10, !dbg !7707
  br i1 %cmp, label %if.then, label %if.end73, !dbg !7708

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !7709, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata %struct.Lamp** %lamp, metadata !7712, metadata !DIExpression()), !dbg !7713
  %13 = load %struct.Object*, %struct.Object** %lamp_obj.addr, align 8, !dbg !7714
  %data = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !7715
  %14 = load i8*, i8** %data, align 8, !dbg !7715
  %15 = bitcast i8* %14 to %struct.Lamp*, !dbg !7716
  store %struct.Lamp* %15, %struct.Lamp** %lamp, align 8, !dbg !7713
  %16 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7717
  %r = getelementptr inbounds %struct.Lamp, %struct.Lamp* %16, i32 0, i32 7, !dbg !7718
  %17 = load float, float* %r, align 4, !dbg !7718
  %18 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7719
  %energy = getelementptr inbounds %struct.Lamp, %struct.Lamp* %18, i32 0, i32 15, !dbg !7720
  %19 = load float, float* %energy, align 4, !dbg !7720
  %mul = fmul float %17, %19, !dbg !7721
  %20 = load float*, float** %col.addr, align 8, !dbg !7722
  %arrayidx9 = getelementptr inbounds float, float* %20, i64 0, !dbg !7722
  store float %mul, float* %arrayidx9, align 4, !dbg !7723
  %21 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7724
  %g = getelementptr inbounds %struct.Lamp, %struct.Lamp* %21, i32 0, i32 8, !dbg !7725
  %22 = load float, float* %g, align 8, !dbg !7725
  %23 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7726
  %energy10 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %23, i32 0, i32 15, !dbg !7727
  %24 = load float, float* %energy10, align 4, !dbg !7727
  %mul11 = fmul float %22, %24, !dbg !7728
  %25 = load float*, float** %col.addr, align 8, !dbg !7729
  %arrayidx12 = getelementptr inbounds float, float* %25, i64 1, !dbg !7729
  store float %mul11, float* %arrayidx12, align 4, !dbg !7730
  %26 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7731
  %b = getelementptr inbounds %struct.Lamp, %struct.Lamp* %26, i32 0, i32 9, !dbg !7732
  %27 = load float, float* %b, align 4, !dbg !7732
  %28 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !7733
  %energy13 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %28, i32 0, i32 15, !dbg !7734
  %29 = load float, float* %energy13, align 4, !dbg !7734
  %mul14 = fmul float %27, %29, !dbg !7735
  %30 = load float*, float** %col.addr, align 8, !dbg !7736
  %arrayidx15 = getelementptr inbounds float, float* %30, i64 2, !dbg !7736
  store float %mul14, float* %arrayidx15, align 4, !dbg !7737
  %31 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !7738
  %and = and i32 %31, 8, !dbg !7740
  %tobool = icmp ne i32 %and, 0, !dbg !7740
  br i1 %tobool, label %if.then16, label %if.end23, !dbg !7741

if.then16:                                        ; preds = %if.then
  %32 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !7742
  %33 = bitcast i8* %32 to %struct.GroupObject*, !dbg !7745
  store %struct.GroupObject* %33, %struct.GroupObject** %go, align 8, !dbg !7746
  br label %for.cond, !dbg !7747

for.cond:                                         ; preds = %for.inc, %if.then16
  %34 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7748
  %tobool17 = icmp ne %struct.GroupObject* %34, null, !dbg !7750
  br i1 %tobool17, label %for.body, label %for.end, !dbg !7750

for.body:                                         ; preds = %for.cond
  %35 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7751
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %35, i32 0, i32 2, !dbg !7754
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7754
  %id = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 0, !dbg !7755
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7756
  %arraydecay18 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7751
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay18, i64 2, !dbg !7757
  %call = call i32 @strcmp(i8* %add.ptr, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #7, !dbg !7758
  %cmp19 = icmp eq i32 %call, 0, !dbg !7759
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !7760

if.then21:                                        ; preds = %for.body
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7761
  %38 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7762
  %39 = load float*, float** %col.addr, align 8, !dbg !7763
  %40 = load float*, float** %lv.addr, align 8, !dbg !7764
  %41 = load float*, float** %dist.addr, align 8, !dbg !7765
  %42 = load float*, float** %shadow.addr, align 8, !dbg !7766
  %call22 = call float @lamp_get_data_internal(%struct.ShadeInput* %37, %struct.GroupObject* %38, float* %39, float* %40, float* %41, float* %42), !dbg !7767
  store float %call22, float* %retval, align 4, !dbg !7768
  br label %return, !dbg !7768

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7769

for.inc:                                          ; preds = %if.end
  %43 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7770
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %43, i32 0, i32 0, !dbg !7771
  %44 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !7771
  store %struct.GroupObject* %44, %struct.GroupObject** %go, align 8, !dbg !7772
  br label %for.cond, !dbg !7773, !llvm.loop !7774

for.end:                                          ; preds = %for.cond
  store float 0.000000e+00, float* %retval, align 4, !dbg !7776
  br label %return, !dbg !7776

if.end23:                                         ; preds = %if.then
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7777
  %light_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 121, !dbg !7779
  %46 = load %struct.Group*, %struct.Group** %light_override, align 8, !dbg !7779
  %tobool24 = icmp ne %struct.Group* %46, null, !dbg !7777
  br i1 %tobool24, label %if.then25, label %if.end39, !dbg !7780

if.then25:                                        ; preds = %if.end23
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7781
  %light_override26 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 121, !dbg !7784
  %48 = load %struct.Group*, %struct.Group** %light_override26, align 8, !dbg !7784
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %48, i32 0, i32 1, !dbg !7785
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !7786
  %49 = load i8*, i8** %first, align 8, !dbg !7786
  %50 = bitcast i8* %49 to %struct.GroupObject*, !dbg !7781
  store %struct.GroupObject* %50, %struct.GroupObject** %go, align 8, !dbg !7787
  br label %for.cond27, !dbg !7788

for.cond27:                                       ; preds = %for.inc36, %if.then25
  %51 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7789
  %tobool28 = icmp ne %struct.GroupObject* %51, null, !dbg !7791
  br i1 %tobool28, label %for.body29, label %for.end38, !dbg !7791

for.body29:                                       ; preds = %for.cond27
  %52 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7792
  %ob30 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %52, i32 0, i32 2, !dbg !7795
  %53 = load %struct.Object*, %struct.Object** %ob30, align 8, !dbg !7795
  %54 = load %struct.Object*, %struct.Object** %lamp_obj.addr, align 8, !dbg !7796
  %cmp31 = icmp eq %struct.Object* %53, %54, !dbg !7797
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !7798

if.then33:                                        ; preds = %for.body29
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7799
  %56 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7800
  %57 = load float*, float** %col.addr, align 8, !dbg !7801
  %58 = load float*, float** %lv.addr, align 8, !dbg !7802
  %59 = load float*, float** %dist.addr, align 8, !dbg !7803
  %60 = load float*, float** %shadow.addr, align 8, !dbg !7804
  %call34 = call float @lamp_get_data_internal(%struct.ShadeInput* %55, %struct.GroupObject* %56, float* %57, float* %58, float* %59, float* %60), !dbg !7805
  store float %call34, float* %retval, align 4, !dbg !7806
  br label %return, !dbg !7806

if.end35:                                         ; preds = %for.body29
  br label %for.inc36, !dbg !7807

for.inc36:                                        ; preds = %if.end35
  %61 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7808
  %next37 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %61, i32 0, i32 0, !dbg !7809
  %62 = load %struct.GroupObject*, %struct.GroupObject** %next37, align 8, !dbg !7809
  store %struct.GroupObject* %62, %struct.GroupObject** %go, align 8, !dbg !7810
  br label %for.cond27, !dbg !7811, !llvm.loop !7812

for.end38:                                        ; preds = %for.cond27
  br label %if.end39, !dbg !7814

if.end39:                                         ; preds = %for.end38, %if.end23
  %63 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7815
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %63, i32 0, i32 0, !dbg !7817
  %64 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7817
  %tobool40 = icmp ne %struct.Material* %64, null, !dbg !7815
  br i1 %tobool40, label %land.lhs.true, label %if.end60, !dbg !7818

land.lhs.true:                                    ; preds = %if.end39
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7819
  %mat41 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 0, !dbg !7820
  %66 = load %struct.Material*, %struct.Material** %mat41, align 8, !dbg !7820
  %group = getelementptr inbounds %struct.Material, %struct.Material* %66, i32 0, i32 105, !dbg !7821
  %67 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !7821
  %tobool42 = icmp ne %struct.Group* %67, null, !dbg !7819
  br i1 %tobool42, label %if.then43, label %if.end60, !dbg !7822

if.then43:                                        ; preds = %land.lhs.true
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7823
  %mat44 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 0, !dbg !7826
  %69 = load %struct.Material*, %struct.Material** %mat44, align 8, !dbg !7826
  %group45 = getelementptr inbounds %struct.Material, %struct.Material* %69, i32 0, i32 105, !dbg !7827
  %70 = load %struct.Group*, %struct.Group** %group45, align 8, !dbg !7827
  %gobject46 = getelementptr inbounds %struct.Group, %struct.Group* %70, i32 0, i32 1, !dbg !7828
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject46, i32 0, i32 0, !dbg !7829
  %71 = load i8*, i8** %first47, align 8, !dbg !7829
  %72 = bitcast i8* %71 to %struct.GroupObject*, !dbg !7823
  store %struct.GroupObject* %72, %struct.GroupObject** %go, align 8, !dbg !7830
  br label %for.cond48, !dbg !7831

for.cond48:                                       ; preds = %for.inc57, %if.then43
  %73 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7832
  %tobool49 = icmp ne %struct.GroupObject* %73, null, !dbg !7834
  br i1 %tobool49, label %for.body50, label %for.end59, !dbg !7834

for.body50:                                       ; preds = %for.cond48
  %74 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7835
  %ob51 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %74, i32 0, i32 2, !dbg !7838
  %75 = load %struct.Object*, %struct.Object** %ob51, align 8, !dbg !7838
  %76 = load %struct.Object*, %struct.Object** %lamp_obj.addr, align 8, !dbg !7839
  %cmp52 = icmp eq %struct.Object* %75, %76, !dbg !7840
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !7841

if.then54:                                        ; preds = %for.body50
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7842
  %78 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7843
  %79 = load float*, float** %col.addr, align 8, !dbg !7844
  %80 = load float*, float** %lv.addr, align 8, !dbg !7845
  %81 = load float*, float** %dist.addr, align 8, !dbg !7846
  %82 = load float*, float** %shadow.addr, align 8, !dbg !7847
  %call55 = call float @lamp_get_data_internal(%struct.ShadeInput* %77, %struct.GroupObject* %78, float* %79, float* %80, float* %81, float* %82), !dbg !7848
  store float %call55, float* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

if.end56:                                         ; preds = %for.body50
  br label %for.inc57, !dbg !7850

for.inc57:                                        ; preds = %if.end56
  %83 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7851
  %next58 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %83, i32 0, i32 0, !dbg !7852
  %84 = load %struct.GroupObject*, %struct.GroupObject** %next58, align 8, !dbg !7852
  store %struct.GroupObject* %84, %struct.GroupObject** %go, align 8, !dbg !7853
  br label %for.cond48, !dbg !7854, !llvm.loop !7855

for.end59:                                        ; preds = %for.cond48
  br label %if.end60, !dbg !7857

if.end60:                                         ; preds = %for.end59, %land.lhs.true, %if.end39
  %85 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !7858
  %86 = bitcast i8* %85 to %struct.GroupObject*, !dbg !7860
  store %struct.GroupObject* %86, %struct.GroupObject** %go, align 8, !dbg !7861
  br label %for.cond61, !dbg !7862

for.cond61:                                       ; preds = %for.inc70, %if.end60
  %87 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7863
  %tobool62 = icmp ne %struct.GroupObject* %87, null, !dbg !7865
  br i1 %tobool62, label %for.body63, label %for.end72, !dbg !7865

for.body63:                                       ; preds = %for.cond61
  %88 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7866
  %ob64 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %88, i32 0, i32 2, !dbg !7869
  %89 = load %struct.Object*, %struct.Object** %ob64, align 8, !dbg !7869
  %90 = load %struct.Object*, %struct.Object** %lamp_obj.addr, align 8, !dbg !7870
  %cmp65 = icmp eq %struct.Object* %89, %90, !dbg !7871
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !7872

if.then67:                                        ; preds = %for.body63
  %91 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7873
  %92 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7874
  %93 = load float*, float** %col.addr, align 8, !dbg !7875
  %94 = load float*, float** %lv.addr, align 8, !dbg !7876
  %95 = load float*, float** %dist.addr, align 8, !dbg !7877
  %96 = load float*, float** %shadow.addr, align 8, !dbg !7878
  %call68 = call float @lamp_get_data_internal(%struct.ShadeInput* %91, %struct.GroupObject* %92, float* %93, float* %94, float* %95, float* %96), !dbg !7879
  store float %call68, float* %retval, align 4, !dbg !7880
  br label %return, !dbg !7880

if.end69:                                         ; preds = %for.body63
  br label %for.inc70, !dbg !7881

for.inc70:                                        ; preds = %if.end69
  %97 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7882
  %next71 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %97, i32 0, i32 0, !dbg !7883
  %98 = load %struct.GroupObject*, %struct.GroupObject** %next71, align 8, !dbg !7883
  store %struct.GroupObject* %98, %struct.GroupObject** %go, align 8, !dbg !7884
  br label %for.cond61, !dbg !7885, !llvm.loop !7886

for.end72:                                        ; preds = %for.cond61
  br label %if.end73, !dbg !7888

if.end73:                                         ; preds = %for.end72, %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !7889
  br label %return, !dbg !7889

return:                                           ; preds = %if.end73, %if.then67, %if.then54, %if.then33, %for.end, %if.then21
  %99 = load float, float* %retval, align 4, !dbg !7890
  ret float %99, !dbg !7890
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal float @lamp_get_data_internal(%struct.ShadeInput* %shi, %struct.GroupObject* %go, float* %col, float* %lv, float* %dist, float* %shadow) #0 !dbg !7891 {
entry:
  %retval = alloca float, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %go.addr = alloca %struct.GroupObject*, align 8
  %col.addr = alloca float*, align 8
  %lv.addr = alloca float*, align 8
  %dist.addr = alloca float*, align 8
  %shadow.addr = alloca float*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %visifac = alloca float, align 4
  %inp = alloca float, align 4
  %shadfac = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7894, metadata !DIExpression()), !dbg !7895
  store %struct.GroupObject* %go, %struct.GroupObject** %go.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  store float* %lv, float** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lv.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  store float* %dist, float** %dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dist.addr, metadata !7902, metadata !DIExpression()), !dbg !7903
  store float* %shadow, float** %shadow.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shadow.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !7906, metadata !DIExpression()), !dbg !7907
  %0 = load %struct.GroupObject*, %struct.GroupObject** %go.addr, align 8, !dbg !7908
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %0, i32 0, i32 3, !dbg !7909
  %1 = load i8*, i8** %lampren, align 8, !dbg !7909
  %2 = bitcast i8* %1 to %struct.LampRen*, !dbg !7908
  store %struct.LampRen* %2, %struct.LampRen** %lar, align 8, !dbg !7907
  call void @llvm.dbg.declare(metadata float* %visifac, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.declare(metadata float* %inp, metadata !7912, metadata !DIExpression()), !dbg !7913
  %3 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7914
  %tobool = icmp ne %struct.LampRen* %3, null, !dbg !7914
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7916

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7917
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %4, i32 0, i32 6, !dbg !7918
  %5 = load i16, i16* %type, align 8, !dbg !7918
  %conv = sext i16 %5 to i32, !dbg !7917
  %cmp = icmp eq i32 %conv, 5, !dbg !7919
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !7920

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7921
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 7, !dbg !7922
  %7 = load i32, i32* %mode, align 4, !dbg !7922
  %and = and i32 %7, 4, !dbg !7923
  %tobool3 = icmp ne i32 %and, 0, !dbg !7923
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false8, !dbg !7924

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %8 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7925
  %lay = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 17, !dbg !7926
  %9 = load i32, i32* %lay, align 4, !dbg !7926
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7927
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 3, !dbg !7928
  %11 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7928
  %lay4 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %11, i32 0, i32 7, !dbg !7929
  %12 = load i32, i32* %lay4, align 8, !dbg !7929
  %and5 = and i32 %9, %12, !dbg !7930
  %cmp6 = icmp eq i32 %and5, 0, !dbg !7931
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !7932

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false2
  %13 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7933
  %lay9 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %13, i32 0, i32 17, !dbg !7934
  %14 = load i32, i32* %lay9, align 4, !dbg !7934
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7935
  %lay10 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 117, !dbg !7936
  %16 = load i32, i32* %lay10, align 8, !dbg !7936
  %and11 = and i32 %14, %16, !dbg !7937
  %cmp12 = icmp eq i32 %and11, 0, !dbg !7938
  br i1 %cmp12, label %if.then, label %if.end, !dbg !7939

if.then:                                          ; preds = %lor.lhs.false8, %land.lhs.true, %lor.lhs.false, %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !7940
  br label %return, !dbg !7940

if.end:                                           ; preds = %lor.lhs.false8
  %17 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7941
  %mode14 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %17, i32 0, i32 7, !dbg !7943
  %18 = load i32, i32* %mode14, align 4, !dbg !7943
  %and15 = and i32 %18, 256, !dbg !7944
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7944
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !7945

if.then17:                                        ; preds = %if.end
  %19 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7946
  %20 = load float*, float** %lv.addr, align 8, !dbg !7947
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7948
  %22 = load float*, float** %col.addr, align 8, !dbg !7949
  call void @do_lamp_tex(%struct.LampRen* %19, float* %20, %struct.ShadeInput* %21, float* %22, i32 256), !dbg !7950
  br label %if.end18, !dbg !7950

if.end18:                                         ; preds = %if.then17, %if.end
  %23 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7951
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7952
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 29, !dbg !7953
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7952
  %25 = load float*, float** %lv.addr, align 8, !dbg !7954
  %26 = load float*, float** %dist.addr, align 8, !dbg !7955
  %call = call float @lamp_get_visibility(%struct.LampRen* %23, float* %arraydecay, float* %25, float* %26), !dbg !7956
  store float %call, float* %visifac, align 4, !dbg !7957
  %27 = load float, float* %visifac, align 4, !dbg !7958
  %cmp19 = fcmp oeq float %27, 0.000000e+00, !dbg !7960
  br i1 %cmp19, label %if.then38, label %lor.lhs.false21, !dbg !7961

lor.lhs.false21:                                  ; preds = %if.end18
  %28 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7962
  %type22 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %28, i32 0, i32 6, !dbg !7963
  %29 = load i16, i16* %type22, align 8, !dbg !7963
  %conv23 = sext i16 %29 to i32, !dbg !7962
  %cmp24 = icmp eq i32 %conv23, 3, !dbg !7964
  br i1 %cmp24, label %if.then38, label %lor.lhs.false26, !dbg !7965

lor.lhs.false26:                                  ; preds = %lor.lhs.false21
  %30 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7966
  %type27 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %30, i32 0, i32 6, !dbg !7967
  %31 = load i16, i16* %type27, align 8, !dbg !7967
  %conv28 = sext i16 %31 to i32, !dbg !7966
  %cmp29 = icmp ne i32 %conv28, 2, !dbg !7968
  br i1 %cmp29, label %land.lhs.true31, label %lor.lhs.false35, !dbg !7969

land.lhs.true31:                                  ; preds = %lor.lhs.false26
  %32 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7970
  %mode32 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %32, i32 0, i32 7, !dbg !7971
  %33 = load i32, i32* %mode32, align 4, !dbg !7971
  %and33 = and i32 %33, 8192, !dbg !7972
  %tobool34 = icmp ne i32 %and33, 0, !dbg !7972
  br i1 %tobool34, label %lor.lhs.false35, label %if.then38, !dbg !7973

lor.lhs.false35:                                  ; preds = %land.lhs.true31, %lor.lhs.false26
  %34 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !7974
  %and36 = and i32 %34, 8, !dbg !7975
  %tobool37 = icmp ne i32 %and36, 0, !dbg !7975
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !7976

if.then38:                                        ; preds = %lor.lhs.false35, %land.lhs.true31, %lor.lhs.false21, %if.end18
  %35 = load float, float* %visifac, align 4, !dbg !7977
  store float %35, float* %retval, align 4, !dbg !7978
  br label %return, !dbg !7978

if.end39:                                         ; preds = %lor.lhs.false35
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7979
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 16, !dbg !7980
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7979
  %37 = load float*, float** %lv.addr, align 8, !dbg !7981
  %call41 = call float @dot_v3v3(float* %arraydecay40, float* %37), !dbg !7982
  store float %call41, float* %inp, align 4, !dbg !7983
  %38 = load float, float* %inp, align 4, !dbg !7984
  %cmp42 = fcmp ogt float %38, 0.000000e+00, !dbg !7986
  br i1 %cmp42, label %if.then44, label %if.end78, !dbg !7987

if.then44:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata [4 x float]* %shadfac, metadata !7988, metadata !DIExpression()), !dbg !7990
  %39 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7991
  %shdwr = getelementptr inbounds %struct.LampRen, %struct.LampRen* %39, i32 0, i32 12, !dbg !7992
  %40 = load float, float* %shdwr, align 8, !dbg !7992
  %41 = load float*, float** %shadow.addr, align 8, !dbg !7993
  %arrayidx = getelementptr inbounds float, float* %41, i64 0, !dbg !7993
  store float %40, float* %arrayidx, align 4, !dbg !7994
  %42 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7995
  %shdwg = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 13, !dbg !7996
  %43 = load float, float* %shdwg, align 4, !dbg !7996
  %44 = load float*, float** %shadow.addr, align 8, !dbg !7997
  %arrayidx45 = getelementptr inbounds float, float* %44, i64 1, !dbg !7997
  store float %43, float* %arrayidx45, align 4, !dbg !7998
  %45 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !7999
  %shdwb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %45, i32 0, i32 14, !dbg !8000
  %46 = load float, float* %shdwb, align 8, !dbg !8000
  %47 = load float*, float** %shadow.addr, align 8, !dbg !8001
  %arrayidx46 = getelementptr inbounds float, float* %47, i64 2, !dbg !8001
  store float %46, float* %arrayidx46, align 4, !dbg !8002
  %48 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !8003
  %mode47 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %48, i32 0, i32 7, !dbg !8005
  %49 = load i32, i32* %mode47, align 4, !dbg !8005
  %and48 = and i32 %49, 65536, !dbg !8006
  %tobool49 = icmp ne i32 %and48, 0, !dbg !8006
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !8007

if.then50:                                        ; preds = %if.then44
  %50 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !8008
  %51 = load float*, float** %lv.addr, align 8, !dbg !8009
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8010
  %53 = load float*, float** %shadow.addr, align 8, !dbg !8011
  call void @do_lamp_tex(%struct.LampRen* %50, float* %51, %struct.ShadeInput* %52, float* %53, i32 65536), !dbg !8012
  br label %if.end51, !dbg !8012

if.end51:                                         ; preds = %if.then50, %if.then44
  %54 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !8013
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8014
  %56 = load float, float* %inp, align 4, !dbg !8015
  %arraydecay52 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !8016
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8017
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 108, !dbg !8018
  %58 = load i32, i32* %depth, align 8, !dbg !8018
  call void @lamp_get_shadow(%struct.LampRen* %54, %struct.ShadeInput* %55, float %56, float* %arraydecay52, i32 %58), !dbg !8019
  %arrayidx53 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !8020
  %59 = load float, float* %arrayidx53, align 16, !dbg !8020
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !8021
  %60 = load float, float* %arrayidx54, align 4, !dbg !8021
  %mul = fmul float %59, %60, !dbg !8022
  %sub = fsub float 1.000000e+00, %mul, !dbg !8023
  %61 = load float*, float** %shadow.addr, align 8, !dbg !8024
  %arrayidx55 = getelementptr inbounds float, float* %61, i64 0, !dbg !8024
  %62 = load float, float* %arrayidx55, align 4, !dbg !8024
  %sub56 = fsub float 1.000000e+00, %62, !dbg !8025
  %mul57 = fmul float %sub, %sub56, !dbg !8026
  %sub58 = fsub float 1.000000e+00, %mul57, !dbg !8027
  %63 = load float*, float** %shadow.addr, align 8, !dbg !8028
  %arrayidx59 = getelementptr inbounds float, float* %63, i64 0, !dbg !8028
  store float %sub58, float* %arrayidx59, align 4, !dbg !8029
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 1, !dbg !8030
  %64 = load float, float* %arrayidx60, align 4, !dbg !8030
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !8031
  %65 = load float, float* %arrayidx61, align 4, !dbg !8031
  %mul62 = fmul float %64, %65, !dbg !8032
  %sub63 = fsub float 1.000000e+00, %mul62, !dbg !8033
  %66 = load float*, float** %shadow.addr, align 8, !dbg !8034
  %arrayidx64 = getelementptr inbounds float, float* %66, i64 1, !dbg !8034
  %67 = load float, float* %arrayidx64, align 4, !dbg !8034
  %sub65 = fsub float 1.000000e+00, %67, !dbg !8035
  %mul66 = fmul float %sub63, %sub65, !dbg !8036
  %sub67 = fsub float 1.000000e+00, %mul66, !dbg !8037
  %68 = load float*, float** %shadow.addr, align 8, !dbg !8038
  %arrayidx68 = getelementptr inbounds float, float* %68, i64 1, !dbg !8038
  store float %sub67, float* %arrayidx68, align 4, !dbg !8039
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 2, !dbg !8040
  %69 = load float, float* %arrayidx69, align 8, !dbg !8040
  %arrayidx70 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 3, !dbg !8041
  %70 = load float, float* %arrayidx70, align 4, !dbg !8041
  %mul71 = fmul float %69, %70, !dbg !8042
  %sub72 = fsub float 1.000000e+00, %mul71, !dbg !8043
  %71 = load float*, float** %shadow.addr, align 8, !dbg !8044
  %arrayidx73 = getelementptr inbounds float, float* %71, i64 2, !dbg !8044
  %72 = load float, float* %arrayidx73, align 4, !dbg !8044
  %sub74 = fsub float 1.000000e+00, %72, !dbg !8045
  %mul75 = fmul float %sub72, %sub74, !dbg !8046
  %sub76 = fsub float 1.000000e+00, %mul75, !dbg !8047
  %73 = load float*, float** %shadow.addr, align 8, !dbg !8048
  %arrayidx77 = getelementptr inbounds float, float* %73, i64 2, !dbg !8048
  store float %sub76, float* %arrayidx77, align 4, !dbg !8049
  br label %if.end78, !dbg !8050

if.end78:                                         ; preds = %if.end51, %if.end39
  %74 = load float, float* %visifac, align 4, !dbg !8051
  store float %74, float* %retval, align 4, !dbg !8052
  br label %return, !dbg !8052

return:                                           ; preds = %if.end78, %if.then38, %if.then
  %75 = load float, float* %retval, align 4, !dbg !8053
  ret float %75, !dbg !8053
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3db_v3fl(double* %r, float* %a) #0 !dbg !8054 {
entry:
  %r.addr = alloca double*, align 8
  %a.addr = alloca float*, align 8
  store double* %r, double** %r.addr, align 8
  call void @llvm.dbg.declare(metadata double** %r.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load float*, float** %a.addr, align 8, !dbg !8062
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8062
  %1 = load float, float* %arrayidx, align 4, !dbg !8062
  %conv = fpext float %1 to double, !dbg !8063
  %2 = load double*, double** %r.addr, align 8, !dbg !8064
  %arrayidx1 = getelementptr inbounds double, double* %2, i64 0, !dbg !8064
  store double %conv, double* %arrayidx1, align 8, !dbg !8065
  %3 = load float*, float** %a.addr, align 8, !dbg !8066
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8066
  %4 = load float, float* %arrayidx2, align 4, !dbg !8066
  %conv3 = fpext float %4 to double, !dbg !8067
  %5 = load double*, double** %r.addr, align 8, !dbg !8068
  %arrayidx4 = getelementptr inbounds double, double* %5, i64 1, !dbg !8068
  store double %conv3, double* %arrayidx4, align 8, !dbg !8069
  %6 = load float*, float** %a.addr, align 8, !dbg !8070
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !8070
  %7 = load float, float* %arrayidx5, align 4, !dbg !8070
  %conv6 = fpext float %7 to double, !dbg !8071
  %8 = load double*, double** %r.addr, align 8, !dbg !8072
  %arrayidx7 = getelementptr inbounds double, double* %8, i64 2, !dbg !8072
  store double %conv6, double* %arrayidx7, align 8, !dbg !8073
  ret void, !dbg !8074
}

declare dso_local void @mul_m3_v3_double([3 x float]*, double*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !8075 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8076, metadata !DIExpression()), !dbg !8077
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8078, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !8080, metadata !DIExpression()), !dbg !8081
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8082
  %0 = load float*, float** %b.addr, align 8, !dbg !8083
  %1 = load float*, float** %a.addr, align 8, !dbg !8084
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8085
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8086
  %call = call float @len_v3(float* %arraydecay1), !dbg !8087
  ret float %call, !dbg !8088
}

declare dso_local float @shadow_halo(%struct.LampRen*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_grayscale(float* %rgb) #0 !dbg !8089 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  %0 = load float*, float** %rgb.addr, align 8, !dbg !8093
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8093
  %1 = load float, float* %arrayidx, align 4, !dbg !8093
  %mul = fmul float 0x3FD3333340000000, %1, !dbg !8094
  %2 = load float*, float** %rgb.addr, align 8, !dbg !8095
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !8095
  %3 = load float, float* %arrayidx1, align 4, !dbg !8095
  %mul2 = fmul float 0x3FE28F5C20000000, %3, !dbg !8096
  %add = fadd float %mul, %mul2, !dbg !8097
  %4 = load float*, float** %rgb.addr, align 8, !dbg !8098
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !8098
  %5 = load float, float* %arrayidx3, align 4, !dbg !8098
  %mul4 = fmul float 0x3FBEB851E0000000, %5, !dbg !8099
  %add5 = fadd float %add, %mul4, !dbg !8100
  ret float %add5, !dbg !8101
}

declare dso_local void @do_lamp_tex(%struct.LampRen*, float*, %struct.ShadeInput*, float*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8102 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8103, metadata !DIExpression()), !dbg !8104
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8105, metadata !DIExpression()), !dbg !8106
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8107, metadata !DIExpression()), !dbg !8108
  %0 = load float*, float** %a.addr, align 8, !dbg !8109
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !8109
  %1 = load float, float* %arrayidx, align 4, !dbg !8109
  %2 = load float*, float** %b.addr, align 8, !dbg !8110
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !8110
  %3 = load float, float* %arrayidx1, align 4, !dbg !8110
  %mul = fmul float %1, %3, !dbg !8111
  %4 = load float*, float** %a.addr, align 8, !dbg !8112
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !8112
  %5 = load float, float* %arrayidx2, align 4, !dbg !8112
  %6 = load float*, float** %b.addr, align 8, !dbg !8113
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8113
  %7 = load float, float* %arrayidx3, align 4, !dbg !8113
  %mul4 = fmul float %5, %7, !dbg !8114
  %sub = fsub float %mul, %mul4, !dbg !8115
  %8 = load float*, float** %r.addr, align 8, !dbg !8116
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !8116
  store float %sub, float* %arrayidx5, align 4, !dbg !8117
  %9 = load float*, float** %a.addr, align 8, !dbg !8118
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !8118
  %10 = load float, float* %arrayidx6, align 4, !dbg !8118
  %11 = load float*, float** %b.addr, align 8, !dbg !8119
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !8119
  %12 = load float, float* %arrayidx7, align 4, !dbg !8119
  %mul8 = fmul float %10, %12, !dbg !8120
  %13 = load float*, float** %a.addr, align 8, !dbg !8121
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !8121
  %14 = load float, float* %arrayidx9, align 4, !dbg !8121
  %15 = load float*, float** %b.addr, align 8, !dbg !8122
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !8122
  %16 = load float, float* %arrayidx10, align 4, !dbg !8122
  %mul11 = fmul float %14, %16, !dbg !8123
  %sub12 = fsub float %mul8, %mul11, !dbg !8124
  %17 = load float*, float** %r.addr, align 8, !dbg !8125
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !8125
  store float %sub12, float* %arrayidx13, align 4, !dbg !8126
  %18 = load float*, float** %a.addr, align 8, !dbg !8127
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !8127
  %19 = load float, float* %arrayidx14, align 4, !dbg !8127
  %20 = load float*, float** %b.addr, align 8, !dbg !8128
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !8128
  %21 = load float, float* %arrayidx15, align 4, !dbg !8128
  %mul16 = fmul float %19, %21, !dbg !8129
  %22 = load float*, float** %a.addr, align 8, !dbg !8130
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !8130
  %23 = load float, float* %arrayidx17, align 4, !dbg !8130
  %24 = load float*, float** %b.addr, align 8, !dbg !8131
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !8131
  %25 = load float, float* %arrayidx18, align 4, !dbg !8131
  %mul19 = fmul float %23, %25, !dbg !8132
  %sub20 = fsub float %mul16, %mul19, !dbg !8133
  %26 = load float*, float** %r.addr, align 8, !dbg !8134
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !8134
  store float %sub20, float* %arrayidx21, align 4, !dbg !8135
  ret void, !dbg !8136
}

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !8137 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  %0 = load float*, float** %n.addr, align 8, !dbg !8142
  %1 = load float*, float** %n.addr, align 8, !dbg !8143
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !8144
  ret float %call, !dbg !8145
}

; Function Attrs: noinline nounwind uwtable
define internal float @area_lamp_energy_multisample(%struct.LampRen* %lar, float* %co, float* %vn) #0 !dbg !8146 {
entry:
  %retval = alloca float, align 4
  %lar.addr = alloca %struct.LampRen*, align 8
  %co.addr = alloca float*, align 8
  %vn.addr = alloca float*, align 8
  %jitlamp = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  %area = alloca [4 x [3 x float]], align 16
  %intens = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  store float* %vn, float** %vn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vn.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata float** %jitlamp, metadata !8155, metadata !DIExpression()), !dbg !8156
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8157
  %jitter = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 58, !dbg !8158
  %1 = load float*, float** %jitter, align 8, !dbg !8158
  store float* %1, float** %jitlamp, align 8, !dbg !8156
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !8159, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %area, metadata !8161, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.declare(metadata float* %intens, metadata !8165, metadata !DIExpression()), !dbg !8166
  store float 0.000000e+00, float* %intens, align 4, !dbg !8166
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8167, metadata !DIExpression()), !dbg !8168
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8169
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 49, !dbg !8170
  %3 = load i16, i16* %ray_totsamp, align 8, !dbg !8170
  %conv = sext i16 %3 to i32, !dbg !8169
  store i32 %conv, i32* %a, align 4, !dbg !8168
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8171
  %4 = load float*, float** %co.addr, align 8, !dbg !8172
  %5 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8173
  %co1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %5, i32 0, i32 5, !dbg !8174
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !8173
  call void @sub_v3_v3v3(float* %arraydecay, float* %4, float* %arraydecay2), !dbg !8175
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8176
  %6 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8178
  %vec4 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 20, !dbg !8179
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec4, i64 0, i64 0, !dbg !8178
  %call = call float @dot_v3v3(float* %arraydecay3, float* %arraydecay5), !dbg !8180
  %cmp = fcmp olt float %call, 0.000000e+00, !dbg !8181
  br i1 %cmp, label %if.then, label %if.end, !dbg !8182

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !8183
  br label %return, !dbg !8183

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8184

while.cond:                                       ; preds = %while.body, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !8185
  %dec = add nsw i32 %7, -1, !dbg !8185
  store i32 %dec, i32* %a, align 4, !dbg !8185
  %tobool = icmp ne i32 %7, 0, !dbg !8184
  br i1 %tobool, label %while.body, label %while.end, !dbg !8184

while.body:                                       ; preds = %while.cond
  %8 = load float*, float** %jitlamp, align 8, !dbg !8186
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !8186
  %9 = load float, float* %arrayidx, align 4, !dbg !8186
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8188
  store float %9, float* %arrayidx7, align 4, !dbg !8189
  %10 = load float*, float** %jitlamp, align 8, !dbg !8190
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 1, !dbg !8190
  %11 = load float, float* %arrayidx8, align 4, !dbg !8190
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8191
  store float %11, float* %arrayidx9, align 4, !dbg !8192
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8193
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !8194
  %12 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8195
  %mat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 64, !dbg !8196
  %arraydecay11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !8195
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8197
  call void @mul_m3_v3([3 x float]* %arraydecay11, float* %arraydecay12), !dbg !8198
  %arrayidx13 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %area, i64 0, i64 0, !dbg !8199
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !8199
  %13 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8200
  %area15 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %13, i32 0, i32 65, !dbg !8201
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area15, i64 0, i64 0, !dbg !8200
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !8200
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8202
  call void @add_v3_v3v3(float* %arraydecay14, float* %arraydecay17, float* %arraydecay18), !dbg !8203
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %area, i64 0, i64 1, !dbg !8204
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !8204
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8205
  %area21 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 65, !dbg !8206
  %arrayidx22 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area21, i64 0, i64 1, !dbg !8205
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !8205
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8207
  call void @add_v3_v3v3(float* %arraydecay20, float* %arraydecay23, float* %arraydecay24), !dbg !8208
  %arrayidx25 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %area, i64 0, i64 2, !dbg !8209
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !8209
  %15 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8210
  %area27 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 65, !dbg !8211
  %arrayidx28 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area27, i64 0, i64 2, !dbg !8210
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !8210
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8212
  call void @add_v3_v3v3(float* %arraydecay26, float* %arraydecay29, float* %arraydecay30), !dbg !8213
  %arrayidx31 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %area, i64 0, i64 3, !dbg !8214
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !8214
  %16 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8215
  %area33 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %16, i32 0, i32 65, !dbg !8216
  %arrayidx34 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area33, i64 0, i64 3, !dbg !8215
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !8215
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8217
  call void @add_v3_v3v3(float* %arraydecay32, float* %arraydecay35, float* %arraydecay36), !dbg !8218
  %arraydecay37 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %area, i64 0, i64 0, !dbg !8219
  %17 = load float*, float** %co.addr, align 8, !dbg !8220
  %18 = load float*, float** %vn.addr, align 8, !dbg !8221
  %call38 = call float @area_lamp_energy([3 x float]* %arraydecay37, float* %17, float* %18), !dbg !8222
  %19 = load float, float* %intens, align 4, !dbg !8223
  %add = fadd float %19, %call38, !dbg !8223
  store float %add, float* %intens, align 4, !dbg !8223
  %20 = load float*, float** %jitlamp, align 8, !dbg !8224
  %add.ptr = getelementptr inbounds float, float* %20, i64 2, !dbg !8224
  store float* %add.ptr, float** %jitlamp, align 8, !dbg !8224
  br label %while.cond, !dbg !8184, !llvm.loop !8225

while.end:                                        ; preds = %while.cond
  %21 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8227
  %ray_totsamp39 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %21, i32 0, i32 49, !dbg !8228
  %22 = load i16, i16* %ray_totsamp39, align 8, !dbg !8228
  %conv40 = sitofp i16 %22 to float, !dbg !8229
  %23 = load float, float* %intens, align 4, !dbg !8230
  %div = fdiv float %23, %conv40, !dbg !8230
  store float %div, float* %intens, align 4, !dbg !8230
  %24 = load float, float* %intens, align 4, !dbg !8231
  %25 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8232
  %areasize = getelementptr inbounds %struct.LampRen, %struct.LampRen* %25, i32 0, i32 66, !dbg !8233
  %26 = load float, float* %areasize, align 4, !dbg !8233
  %mul = fmul float %24, %26, !dbg !8234
  %conv41 = fpext float %mul to double, !dbg !8231
  %27 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8235
  %k = getelementptr inbounds %struct.LampRen, %struct.LampRen* %27, i32 0, i32 11, !dbg !8236
  %28 = load float, float* %k, align 4, !dbg !8236
  %conv42 = fpext float %28 to double, !dbg !8235
  %call43 = call double @pow(double %conv41, double %conv42) #6, !dbg !8237
  %conv44 = fptrunc double %call43 to float, !dbg !8237
  store float %conv44, float* %retval, align 4, !dbg !8238
  br label %return, !dbg !8238

return:                                           ; preds = %while.end, %if.then
  %29 = load float, float* %retval, align 4, !dbg !8239
  ret float %29, !dbg !8239
}

; Function Attrs: noinline nounwind uwtable
define internal float @OrenNayar_Diff(float %nl, float* %n, float* %l, float* %v, float %rough) #0 !dbg !8240 {
entry:
  %retval = alloca float, align 4
  %nl.addr = alloca float, align 4
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %rough.addr = alloca float, align 4
  %i = alloca float, align 4
  %nv = alloca float, align 4
  %realnl = alloca float, align 4
  %h = alloca [3 x float], align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %t = alloca float, align 4
  %A = alloca float, align 4
  %B = alloca float, align 4
  %Lit_A = alloca float, align 4
  %View_A = alloca float, align 4
  %Lit_B = alloca [3 x float], align 4
  %View_B = alloca [3 x float], align 4
  store float %nl, float* %nl.addr, align 4
  call void @llvm.dbg.declare(metadata float* %nl.addr, metadata !8243, metadata !DIExpression()), !dbg !8244
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8245, metadata !DIExpression()), !dbg !8246
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !8247, metadata !DIExpression()), !dbg !8248
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8249, metadata !DIExpression()), !dbg !8250
  store float %rough, float* %rough.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rough.addr, metadata !8251, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.declare(metadata float* %i, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata float* %nv, metadata !8255, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.declare(metadata float* %realnl, metadata !8257, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !8259, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.declare(metadata float* %a, metadata !8261, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.declare(metadata float* %b, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata float* %t, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata float* %A, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata float* %B, metadata !8269, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.declare(metadata float* %Lit_A, metadata !8271, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.declare(metadata float* %View_A, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata [3 x float]* %Lit_B, metadata !8275, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.declare(metadata [3 x float]* %View_B, metadata !8277, metadata !DIExpression()), !dbg !8278
  %0 = load float*, float** %v.addr, align 8, !dbg !8279
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8279
  %1 = load float, float* %arrayidx, align 4, !dbg !8279
  %2 = load float*, float** %l.addr, align 8, !dbg !8280
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8280
  %3 = load float, float* %arrayidx1, align 4, !dbg !8280
  %add = fadd float %1, %3, !dbg !8281
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8282
  store float %add, float* %arrayidx2, align 4, !dbg !8283
  %4 = load float*, float** %v.addr, align 8, !dbg !8284
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !8284
  %5 = load float, float* %arrayidx3, align 4, !dbg !8284
  %6 = load float*, float** %l.addr, align 8, !dbg !8285
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !8285
  %7 = load float, float* %arrayidx4, align 4, !dbg !8285
  %add5 = fadd float %5, %7, !dbg !8286
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !8287
  store float %add5, float* %arrayidx6, align 4, !dbg !8288
  %8 = load float*, float** %v.addr, align 8, !dbg !8289
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !8289
  %9 = load float, float* %arrayidx7, align 4, !dbg !8289
  %10 = load float*, float** %l.addr, align 8, !dbg !8290
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !8290
  %11 = load float, float* %arrayidx8, align 4, !dbg !8290
  %add9 = fadd float %9, %11, !dbg !8291
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !8292
  store float %add9, float* %arrayidx10, align 4, !dbg !8293
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8294
  %call = call float @normalize_v3(float* %arraydecay), !dbg !8295
  %12 = load float*, float** %n.addr, align 8, !dbg !8296
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0, !dbg !8296
  %13 = load float, float* %arrayidx11, align 4, !dbg !8296
  %14 = load float*, float** %v.addr, align 8, !dbg !8297
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 0, !dbg !8297
  %15 = load float, float* %arrayidx12, align 4, !dbg !8297
  %mul = fmul float %13, %15, !dbg !8298
  %16 = load float*, float** %n.addr, align 8, !dbg !8299
  %arrayidx13 = getelementptr inbounds float, float* %16, i64 1, !dbg !8299
  %17 = load float, float* %arrayidx13, align 4, !dbg !8299
  %18 = load float*, float** %v.addr, align 8, !dbg !8300
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 1, !dbg !8300
  %19 = load float, float* %arrayidx14, align 4, !dbg !8300
  %mul15 = fmul float %17, %19, !dbg !8301
  %add16 = fadd float %mul, %mul15, !dbg !8302
  %20 = load float*, float** %n.addr, align 8, !dbg !8303
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 2, !dbg !8303
  %21 = load float, float* %arrayidx17, align 4, !dbg !8303
  %22 = load float*, float** %v.addr, align 8, !dbg !8304
  %arrayidx18 = getelementptr inbounds float, float* %22, i64 2, !dbg !8304
  %23 = load float, float* %arrayidx18, align 4, !dbg !8304
  %mul19 = fmul float %21, %23, !dbg !8305
  %add20 = fadd float %add16, %mul19, !dbg !8306
  store float %add20, float* %nv, align 4, !dbg !8307
  %24 = load float, float* %nv, align 4, !dbg !8308
  %cmp = fcmp ole float %24, 0.000000e+00, !dbg !8310
  br i1 %cmp, label %if.then, label %if.end, !dbg !8311

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %nv, align 4, !dbg !8312
  br label %if.end, !dbg !8313

if.end:                                           ; preds = %if.then, %entry
  %25 = load float*, float** %n.addr, align 8, !dbg !8314
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 0, !dbg !8314
  %26 = load float, float* %arrayidx21, align 4, !dbg !8314
  %27 = load float*, float** %l.addr, align 8, !dbg !8315
  %arrayidx22 = getelementptr inbounds float, float* %27, i64 0, !dbg !8315
  %28 = load float, float* %arrayidx22, align 4, !dbg !8315
  %mul23 = fmul float %26, %28, !dbg !8316
  %29 = load float*, float** %n.addr, align 8, !dbg !8317
  %arrayidx24 = getelementptr inbounds float, float* %29, i64 1, !dbg !8317
  %30 = load float, float* %arrayidx24, align 4, !dbg !8317
  %31 = load float*, float** %l.addr, align 8, !dbg !8318
  %arrayidx25 = getelementptr inbounds float, float* %31, i64 1, !dbg !8318
  %32 = load float, float* %arrayidx25, align 4, !dbg !8318
  %mul26 = fmul float %30, %32, !dbg !8319
  %add27 = fadd float %mul23, %mul26, !dbg !8320
  %33 = load float*, float** %n.addr, align 8, !dbg !8321
  %arrayidx28 = getelementptr inbounds float, float* %33, i64 2, !dbg !8321
  %34 = load float, float* %arrayidx28, align 4, !dbg !8321
  %35 = load float*, float** %l.addr, align 8, !dbg !8322
  %arrayidx29 = getelementptr inbounds float, float* %35, i64 2, !dbg !8322
  %36 = load float, float* %arrayidx29, align 4, !dbg !8322
  %mul30 = fmul float %34, %36, !dbg !8323
  %add31 = fadd float %add27, %mul30, !dbg !8324
  store float %add31, float* %realnl, align 4, !dbg !8325
  %37 = load float, float* %realnl, align 4, !dbg !8326
  %cmp32 = fcmp ole float %37, 0.000000e+00, !dbg !8328
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !8329

if.then33:                                        ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !8330
  br label %return, !dbg !8330

if.end34:                                         ; preds = %if.end
  %38 = load float, float* %nl.addr, align 4, !dbg !8331
  %cmp35 = fcmp olt float %38, 0.000000e+00, !dbg !8333
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !8334

if.then36:                                        ; preds = %if.end34
  store float 0.000000e+00, float* %retval, align 4, !dbg !8335
  br label %return, !dbg !8335

if.end37:                                         ; preds = %if.end34
  %39 = load float, float* %realnl, align 4, !dbg !8336
  %call38 = call float @saacos(float %39), !dbg !8337
  store float %call38, float* %Lit_A, align 4, !dbg !8338
  %40 = load float, float* %nv, align 4, !dbg !8339
  %call39 = call float @saacos(float %40), !dbg !8340
  store float %call39, float* %View_A, align 4, !dbg !8341
  %41 = load float*, float** %l.addr, align 8, !dbg !8342
  %arrayidx40 = getelementptr inbounds float, float* %41, i64 0, !dbg !8342
  %42 = load float, float* %arrayidx40, align 4, !dbg !8342
  %43 = load float, float* %realnl, align 4, !dbg !8343
  %44 = load float*, float** %n.addr, align 8, !dbg !8344
  %arrayidx41 = getelementptr inbounds float, float* %44, i64 0, !dbg !8344
  %45 = load float, float* %arrayidx41, align 4, !dbg !8344
  %mul42 = fmul float %43, %45, !dbg !8345
  %sub = fsub float %42, %mul42, !dbg !8346
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 0, !dbg !8347
  store float %sub, float* %arrayidx43, align 4, !dbg !8348
  %46 = load float*, float** %l.addr, align 8, !dbg !8349
  %arrayidx44 = getelementptr inbounds float, float* %46, i64 1, !dbg !8349
  %47 = load float, float* %arrayidx44, align 4, !dbg !8349
  %48 = load float, float* %realnl, align 4, !dbg !8350
  %49 = load float*, float** %n.addr, align 8, !dbg !8351
  %arrayidx45 = getelementptr inbounds float, float* %49, i64 1, !dbg !8351
  %50 = load float, float* %arrayidx45, align 4, !dbg !8351
  %mul46 = fmul float %48, %50, !dbg !8352
  %sub47 = fsub float %47, %mul46, !dbg !8353
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 1, !dbg !8354
  store float %sub47, float* %arrayidx48, align 4, !dbg !8355
  %51 = load float*, float** %l.addr, align 8, !dbg !8356
  %arrayidx49 = getelementptr inbounds float, float* %51, i64 2, !dbg !8356
  %52 = load float, float* %arrayidx49, align 4, !dbg !8356
  %53 = load float, float* %realnl, align 4, !dbg !8357
  %54 = load float*, float** %n.addr, align 8, !dbg !8358
  %arrayidx50 = getelementptr inbounds float, float* %54, i64 2, !dbg !8358
  %55 = load float, float* %arrayidx50, align 4, !dbg !8358
  %mul51 = fmul float %53, %55, !dbg !8359
  %sub52 = fsub float %52, %mul51, !dbg !8360
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 2, !dbg !8361
  store float %sub52, float* %arrayidx53, align 4, !dbg !8362
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 0, !dbg !8363
  %call55 = call float @normalize_v3(float* %arraydecay54), !dbg !8364
  %56 = load float*, float** %v.addr, align 8, !dbg !8365
  %arrayidx56 = getelementptr inbounds float, float* %56, i64 0, !dbg !8365
  %57 = load float, float* %arrayidx56, align 4, !dbg !8365
  %58 = load float, float* %nv, align 4, !dbg !8366
  %59 = load float*, float** %n.addr, align 8, !dbg !8367
  %arrayidx57 = getelementptr inbounds float, float* %59, i64 0, !dbg !8367
  %60 = load float, float* %arrayidx57, align 4, !dbg !8367
  %mul58 = fmul float %58, %60, !dbg !8368
  %sub59 = fsub float %57, %mul58, !dbg !8369
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 0, !dbg !8370
  store float %sub59, float* %arrayidx60, align 4, !dbg !8371
  %61 = load float*, float** %v.addr, align 8, !dbg !8372
  %arrayidx61 = getelementptr inbounds float, float* %61, i64 1, !dbg !8372
  %62 = load float, float* %arrayidx61, align 4, !dbg !8372
  %63 = load float, float* %nv, align 4, !dbg !8373
  %64 = load float*, float** %n.addr, align 8, !dbg !8374
  %arrayidx62 = getelementptr inbounds float, float* %64, i64 1, !dbg !8374
  %65 = load float, float* %arrayidx62, align 4, !dbg !8374
  %mul63 = fmul float %63, %65, !dbg !8375
  %sub64 = fsub float %62, %mul63, !dbg !8376
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 1, !dbg !8377
  store float %sub64, float* %arrayidx65, align 4, !dbg !8378
  %66 = load float*, float** %v.addr, align 8, !dbg !8379
  %arrayidx66 = getelementptr inbounds float, float* %66, i64 2, !dbg !8379
  %67 = load float, float* %arrayidx66, align 4, !dbg !8379
  %68 = load float, float* %nv, align 4, !dbg !8380
  %69 = load float*, float** %n.addr, align 8, !dbg !8381
  %arrayidx67 = getelementptr inbounds float, float* %69, i64 2, !dbg !8381
  %70 = load float, float* %arrayidx67, align 4, !dbg !8381
  %mul68 = fmul float %68, %70, !dbg !8382
  %sub69 = fsub float %67, %mul68, !dbg !8383
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 2, !dbg !8384
  store float %sub69, float* %arrayidx70, align 4, !dbg !8385
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 0, !dbg !8386
  %call72 = call float @normalize_v3(float* %arraydecay71), !dbg !8387
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 0, !dbg !8388
  %71 = load float, float* %arrayidx73, align 4, !dbg !8388
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 0, !dbg !8389
  %72 = load float, float* %arrayidx74, align 4, !dbg !8389
  %mul75 = fmul float %71, %72, !dbg !8390
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 1, !dbg !8391
  %73 = load float, float* %arrayidx76, align 4, !dbg !8391
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 1, !dbg !8392
  %74 = load float, float* %arrayidx77, align 4, !dbg !8392
  %mul78 = fmul float %73, %74, !dbg !8393
  %add79 = fadd float %mul75, %mul78, !dbg !8394
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %Lit_B, i64 0, i64 2, !dbg !8395
  %75 = load float, float* %arrayidx80, align 4, !dbg !8395
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %View_B, i64 0, i64 2, !dbg !8396
  %76 = load float, float* %arrayidx81, align 4, !dbg !8396
  %mul82 = fmul float %75, %76, !dbg !8397
  %add83 = fadd float %add79, %mul82, !dbg !8398
  store float %add83, float* %t, align 4, !dbg !8399
  %77 = load float, float* %t, align 4, !dbg !8400
  %cmp84 = fcmp olt float %77, 0.000000e+00, !dbg !8402
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !8403

if.then85:                                        ; preds = %if.end37
  store float 0.000000e+00, float* %t, align 4, !dbg !8404
  br label %if.end86, !dbg !8405

if.end86:                                         ; preds = %if.then85, %if.end37
  %78 = load float, float* %Lit_A, align 4, !dbg !8406
  %79 = load float, float* %View_A, align 4, !dbg !8408
  %cmp87 = fcmp ogt float %78, %79, !dbg !8409
  br i1 %cmp87, label %if.then88, label %if.else, !dbg !8410

if.then88:                                        ; preds = %if.end86
  %80 = load float, float* %Lit_A, align 4, !dbg !8411
  store float %80, float* %a, align 4, !dbg !8413
  %81 = load float, float* %View_A, align 4, !dbg !8414
  store float %81, float* %b, align 4, !dbg !8415
  br label %if.end89, !dbg !8416

if.else:                                          ; preds = %if.end86
  %82 = load float, float* %View_A, align 4, !dbg !8417
  store float %82, float* %a, align 4, !dbg !8419
  %83 = load float, float* %Lit_A, align 4, !dbg !8420
  store float %83, float* %b, align 4, !dbg !8421
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then88
  %84 = load float, float* %rough.addr, align 4, !dbg !8422
  %85 = load float, float* %rough.addr, align 4, !dbg !8423
  %mul90 = fmul float %84, %85, !dbg !8424
  %86 = load float, float* %rough.addr, align 4, !dbg !8425
  %87 = load float, float* %rough.addr, align 4, !dbg !8426
  %mul91 = fmul float %86, %87, !dbg !8427
  %add92 = fadd float %mul91, 0x3FD51EB860000000, !dbg !8428
  %div = fdiv float %mul90, %add92, !dbg !8429
  %mul93 = fmul float 5.000000e-01, %div, !dbg !8430
  %sub94 = fsub float 1.000000e+00, %mul93, !dbg !8431
  store float %sub94, float* %A, align 4, !dbg !8432
  %88 = load float, float* %rough.addr, align 4, !dbg !8433
  %89 = load float, float* %rough.addr, align 4, !dbg !8434
  %mul95 = fmul float %88, %89, !dbg !8435
  %90 = load float, float* %rough.addr, align 4, !dbg !8436
  %91 = load float, float* %rough.addr, align 4, !dbg !8437
  %mul96 = fmul float %90, %91, !dbg !8438
  %add97 = fadd float %mul96, 0x3FB70A3D80000000, !dbg !8439
  %div98 = fdiv float %mul95, %add97, !dbg !8440
  %mul99 = fmul float 0x3FDCCCCCC0000000, %div98, !dbg !8441
  store float %mul99, float* %B, align 4, !dbg !8442
  %92 = load float, float* %b, align 4, !dbg !8443
  %mul100 = fmul float %92, 0x3FEE666660000000, !dbg !8443
  store float %mul100, float* %b, align 4, !dbg !8443
  %93 = load float, float* %nl.addr, align 4, !dbg !8444
  %94 = load float, float* %A, align 4, !dbg !8445
  %95 = load float, float* %B, align 4, !dbg !8446
  %96 = load float, float* %t, align 4, !dbg !8447
  %mul101 = fmul float %95, %96, !dbg !8448
  %97 = load float, float* %a, align 4, !dbg !8449
  %call102 = call float @sinf(float %97) #6, !dbg !8450
  %mul103 = fmul float %mul101, %call102, !dbg !8451
  %98 = load float, float* %b, align 4, !dbg !8452
  %call104 = call float @tanf(float %98) #6, !dbg !8453
  %mul105 = fmul float %mul103, %call104, !dbg !8454
  %add106 = fadd float %94, %mul105, !dbg !8455
  %mul107 = fmul float %93, %add106, !dbg !8456
  store float %mul107, float* %i, align 4, !dbg !8457
  %99 = load float, float* %i, align 4, !dbg !8458
  store float %99, float* %retval, align 4, !dbg !8459
  br label %return, !dbg !8459

return:                                           ; preds = %if.end89, %if.then36, %if.then33
  %100 = load float, float* %retval, align 4, !dbg !8460
  ret float %100, !dbg !8460
}

; Function Attrs: noinline nounwind uwtable
define internal float @Toon_Diff(float* %n, float* %l, float* %UNUSED_v, float %size, float %smooth) #0 !dbg !8461 {
entry:
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %UNUSED_v.addr = alloca float*, align 8
  %size.addr = alloca float, align 4
  %smooth.addr = alloca float, align 4
  %rslt = alloca float, align 4
  %ang = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !8466, metadata !DIExpression()), !dbg !8467
  store float* %UNUSED_v, float** %UNUSED_v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_v.addr, metadata !8468, metadata !DIExpression()), !dbg !8469
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !8470, metadata !DIExpression()), !dbg !8471
  store float %smooth, float* %smooth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %smooth.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.declare(metadata float* %rslt, metadata !8474, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.declare(metadata float* %ang, metadata !8476, metadata !DIExpression()), !dbg !8477
  %0 = load float*, float** %n.addr, align 8, !dbg !8478
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8478
  %1 = load float, float* %arrayidx, align 4, !dbg !8478
  %2 = load float*, float** %l.addr, align 8, !dbg !8479
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8479
  %3 = load float, float* %arrayidx1, align 4, !dbg !8479
  %mul = fmul float %1, %3, !dbg !8480
  %4 = load float*, float** %n.addr, align 8, !dbg !8481
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8481
  %5 = load float, float* %arrayidx2, align 4, !dbg !8481
  %6 = load float*, float** %l.addr, align 8, !dbg !8482
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8482
  %7 = load float, float* %arrayidx3, align 4, !dbg !8482
  %mul4 = fmul float %5, %7, !dbg !8483
  %add = fadd float %mul, %mul4, !dbg !8484
  %8 = load float*, float** %n.addr, align 8, !dbg !8485
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8485
  %9 = load float, float* %arrayidx5, align 4, !dbg !8485
  %10 = load float*, float** %l.addr, align 8, !dbg !8486
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8486
  %11 = load float, float* %arrayidx6, align 4, !dbg !8486
  %mul7 = fmul float %9, %11, !dbg !8487
  %add8 = fadd float %add, %mul7, !dbg !8488
  store float %add8, float* %rslt, align 4, !dbg !8489
  %12 = load float, float* %rslt, align 4, !dbg !8490
  %call = call float @saacos(float %12), !dbg !8491
  store float %call, float* %ang, align 4, !dbg !8492
  %13 = load float, float* %ang, align 4, !dbg !8493
  %14 = load float, float* %size.addr, align 4, !dbg !8495
  %cmp = fcmp olt float %13, %14, !dbg !8496
  br i1 %cmp, label %if.then, label %if.else, !dbg !8497

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %rslt, align 4, !dbg !8498
  br label %if.end15, !dbg !8499

if.else:                                          ; preds = %entry
  %15 = load float, float* %ang, align 4, !dbg !8500
  %16 = load float, float* %size.addr, align 4, !dbg !8502
  %17 = load float, float* %smooth.addr, align 4, !dbg !8503
  %add9 = fadd float %16, %17, !dbg !8504
  %cmp10 = fcmp oge float %15, %add9, !dbg !8505
  br i1 %cmp10, label %if.then12, label %lor.lhs.false, !dbg !8506

lor.lhs.false:                                    ; preds = %if.else
  %18 = load float, float* %smooth.addr, align 4, !dbg !8507
  %cmp11 = fcmp oeq float %18, 0.000000e+00, !dbg !8508
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !8509

if.then12:                                        ; preds = %lor.lhs.false, %if.else
  store float 0.000000e+00, float* %rslt, align 4, !dbg !8510
  br label %if.end, !dbg !8511

if.else13:                                        ; preds = %lor.lhs.false
  %19 = load float, float* %ang, align 4, !dbg !8512
  %20 = load float, float* %size.addr, align 4, !dbg !8513
  %sub = fsub float %19, %20, !dbg !8514
  %21 = load float, float* %smooth.addr, align 4, !dbg !8515
  %div = fdiv float %sub, %21, !dbg !8516
  %sub14 = fsub float 1.000000e+00, %div, !dbg !8517
  store float %sub14, float* %rslt, align 4, !dbg !8518
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then12
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %22 = load float, float* %rslt, align 4, !dbg !8519
  ret float %22, !dbg !8520
}

; Function Attrs: noinline nounwind uwtable
define internal float @Minnaert_Diff(float %nl, float* %n, float* %v, float %darkness) #0 !dbg !8521 {
entry:
  %retval = alloca float, align 4
  %nl.addr = alloca float, align 4
  %n.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %darkness.addr = alloca float, align 4
  %i = alloca float, align 4
  %nv = alloca float, align 4
  store float %nl, float* %nl.addr, align 4
  call void @llvm.dbg.declare(metadata float* %nl.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  store float %darkness, float* %darkness.addr, align 4
  call void @llvm.dbg.declare(metadata float* %darkness.addr, metadata !8530, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.declare(metadata float* %i, metadata !8532, metadata !DIExpression()), !dbg !8533
  call void @llvm.dbg.declare(metadata float* %nv, metadata !8534, metadata !DIExpression()), !dbg !8535
  %0 = load float, float* %nl.addr, align 4, !dbg !8536
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !8538
  br i1 %cmp, label %if.then, label %if.end, !dbg !8539

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !8540
  br label %return, !dbg !8540

if.end:                                           ; preds = %entry
  %1 = load float*, float** %n.addr, align 8, !dbg !8541
  %2 = load float*, float** %v.addr, align 8, !dbg !8542
  %call = call float @dot_v3v3(float* %1, float* %2), !dbg !8543
  store float %call, float* %nv, align 4, !dbg !8544
  %3 = load float, float* %nv, align 4, !dbg !8545
  %cmp1 = fcmp olt float %3, 0.000000e+00, !dbg !8547
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8548

if.then2:                                         ; preds = %if.end
  store float 0.000000e+00, float* %nv, align 4, !dbg !8549
  br label %if.end3, !dbg !8550

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load float, float* %darkness.addr, align 4, !dbg !8551
  %cmp4 = fcmp ole float %4, 1.000000e+00, !dbg !8553
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !8554

if.then5:                                         ; preds = %if.end3
  %5 = load float, float* %nl.addr, align 4, !dbg !8555
  %conv = fpext float %5 to double, !dbg !8555
  %6 = load float, float* %nv, align 4, !dbg !8556
  %7 = load float, float* %nl.addr, align 4, !dbg !8557
  %mul = fmul float %6, %7, !dbg !8558
  %call6 = call float @max_ff(float %mul, float 0x3FB99999A0000000), !dbg !8559
  %conv7 = fpext float %call6 to double, !dbg !8559
  %8 = load float, float* %darkness.addr, align 4, !dbg !8560
  %sub = fsub float %8, 1.000000e+00, !dbg !8561
  %conv8 = fpext float %sub to double, !dbg !8562
  %call9 = call double @pow(double %conv7, double %conv8) #6, !dbg !8563
  %mul10 = fmul double %conv, %call9, !dbg !8564
  %conv11 = fptrunc double %mul10 to float, !dbg !8555
  store float %conv11, float* %i, align 4, !dbg !8565
  br label %if.end20, !dbg !8566

if.else:                                          ; preds = %if.end3
  %9 = load float, float* %nl.addr, align 4, !dbg !8567
  %conv12 = fpext float %9 to double, !dbg !8567
  %10 = load float, float* %nv, align 4, !dbg !8568
  %sub13 = fsub float 0x3FF00418A0000000, %10, !dbg !8569
  %conv14 = fpext float %sub13 to double, !dbg !8570
  %11 = load float, float* %darkness.addr, align 4, !dbg !8571
  %sub15 = fsub float %11, 1.000000e+00, !dbg !8572
  %conv16 = fpext float %sub15 to double, !dbg !8573
  %call17 = call double @pow(double %conv14, double %conv16) #6, !dbg !8574
  %mul18 = fmul double %conv12, %call17, !dbg !8575
  %conv19 = fptrunc double %mul18 to float, !dbg !8567
  store float %conv19, float* %i, align 4, !dbg !8576
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then5
  %12 = load float, float* %i, align 4, !dbg !8577
  store float %12, float* %retval, align 4, !dbg !8578
  br label %return, !dbg !8578

return:                                           ; preds = %if.end20, %if.then
  %13 = load float, float* %retval, align 4, !dbg !8579
  ret float %13, !dbg !8579
}

; Function Attrs: noinline nounwind uwtable
define internal float @Fresnel_Diff(float* %vn, float* %lv, float* %UNUSED_view, float %fac_i, float %fac) #0 !dbg !8580 {
entry:
  %vn.addr = alloca float*, align 8
  %lv.addr = alloca float*, align 8
  %UNUSED_view.addr = alloca float*, align 8
  %fac_i.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float* %vn, float** %vn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vn.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  store float* %lv, float** %lv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lv.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  store float* %UNUSED_view, float** %UNUSED_view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_view.addr, metadata !8587, metadata !DIExpression()), !dbg !8588
  store float %fac_i, float* %fac_i.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac_i.addr, metadata !8589, metadata !DIExpression()), !dbg !8590
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  %0 = load float*, float** %lv.addr, align 8, !dbg !8593
  %1 = load float*, float** %vn.addr, align 8, !dbg !8594
  %2 = load float, float* %fac_i.addr, align 4, !dbg !8595
  %3 = load float, float* %fac.addr, align 4, !dbg !8596
  %call = call float @fresnel_fac(float* %0, float* %1, float %2, float %3), !dbg !8597
  ret float %call, !dbg !8598
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_to_diffuse(float* %diff, %struct.ShadeInput* %shi, float %is, float %r, float %g, float %b) #0 !dbg !8599 {
entry:
  %diff.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %is.addr = alloca float, align 4
  %r.addr = alloca float, align 4
  %g.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %ma = alloca %struct.Material*, align 8
  %colt = alloca [3 x float], align 4
  %col = alloca [4 x float], align 16
  %fac = alloca float, align 4
  store float* %diff, float** %diff.addr, align 8
  call void @llvm.dbg.declare(metadata float** %diff.addr, metadata !8602, metadata !DIExpression()), !dbg !8603
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !8604, metadata !DIExpression()), !dbg !8605
  store float %is, float* %is.addr, align 4
  call void @llvm.dbg.declare(metadata float* %is.addr, metadata !8606, metadata !DIExpression()), !dbg !8607
  store float %r, float* %r.addr, align 4
  call void @llvm.dbg.declare(metadata float* %r.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store float %g, float* %g.addr, align 4
  call void @llvm.dbg.declare(metadata float* %g.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8614, metadata !DIExpression()), !dbg !8615
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8616
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !8617
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !8617
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !8615
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8618
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 92, !dbg !8620
  %3 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !8620
  %tobool = icmp ne %struct.ColorBand* %3, null, !dbg !8618
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !8621

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8622
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 51, !dbg !8623
  %5 = load i32, i32* %mode, align 4, !dbg !8623
  %and = and i32 %5, 1048576, !dbg !8624
  %tobool1 = icmp ne i32 %and, 0, !dbg !8624
  br i1 %tobool1, label %if.then, label %if.else61, !dbg !8625

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8626
  %rampin_col = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 94, !dbg !8629
  %7 = load i8, i8* %rampin_col, align 8, !dbg !8629
  %conv = zext i8 %7 to i32, !dbg !8626
  %cmp = icmp eq i32 %conv, 3, !dbg !8630
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8631

if.then3:                                         ; preds = %if.then
  %8 = load float, float* %r.addr, align 4, !dbg !8632
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8634
  %r4 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 32, !dbg !8635
  %10 = load float, float* %r4, align 4, !dbg !8635
  %mul = fmul float %8, %10, !dbg !8636
  %11 = load float*, float** %diff.addr, align 8, !dbg !8637
  %arrayidx = getelementptr inbounds float, float* %11, i64 0, !dbg !8637
  %12 = load float, float* %arrayidx, align 4, !dbg !8638
  %add = fadd float %12, %mul, !dbg !8638
  store float %add, float* %arrayidx, align 4, !dbg !8638
  %13 = load float, float* %g.addr, align 4, !dbg !8639
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8640
  %g5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 33, !dbg !8641
  %15 = load float, float* %g5, align 8, !dbg !8641
  %mul6 = fmul float %13, %15, !dbg !8642
  %16 = load float*, float** %diff.addr, align 8, !dbg !8643
  %arrayidx7 = getelementptr inbounds float, float* %16, i64 1, !dbg !8643
  %17 = load float, float* %arrayidx7, align 4, !dbg !8644
  %add8 = fadd float %17, %mul6, !dbg !8644
  store float %add8, float* %arrayidx7, align 4, !dbg !8644
  %18 = load float, float* %b.addr, align 4, !dbg !8645
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8646
  %b9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 34, !dbg !8647
  %20 = load float, float* %b9, align 4, !dbg !8647
  %mul10 = fmul float %18, %20, !dbg !8648
  %21 = load float*, float** %diff.addr, align 8, !dbg !8649
  %arrayidx11 = getelementptr inbounds float, float* %21, i64 2, !dbg !8649
  %22 = load float, float* %arrayidx11, align 4, !dbg !8650
  %add12 = fadd float %22, %mul10, !dbg !8650
  store float %add12, float* %arrayidx11, align 4, !dbg !8650
  br label %if.end, !dbg !8651

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %colt, metadata !8652, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !8655, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8657, metadata !DIExpression()), !dbg !8658
  %23 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8659
  %rampin_col13 = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 94, !dbg !8660
  %24 = load i8, i8* %rampin_col13, align 8, !dbg !8660
  %conv14 = zext i8 %24 to i32, !dbg !8659
  switch i32 %conv14, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb20
    i32 2, label %sw.bb21
  ], !dbg !8661

sw.bb:                                            ; preds = %if.else
  %25 = load float, float* %r.addr, align 4, !dbg !8662
  %mul15 = fmul float 0x3FD3333340000000, %25, !dbg !8664
  %26 = load float, float* %g.addr, align 4, !dbg !8665
  %mul16 = fmul float 0x3FE28F5C20000000, %26, !dbg !8666
  %add17 = fadd float %mul15, %mul16, !dbg !8667
  %27 = load float, float* %b.addr, align 4, !dbg !8668
  %mul18 = fmul float 0x3FBEB851E0000000, %27, !dbg !8669
  %add19 = fadd float %add17, %mul18, !dbg !8670
  store float %add19, float* %fac, align 4, !dbg !8671
  br label %sw.epilog, !dbg !8672

sw.bb20:                                          ; preds = %if.else
  %28 = load float, float* %is.addr, align 4, !dbg !8673
  store float %28, float* %fac, align 4, !dbg !8674
  br label %sw.epilog, !dbg !8675

sw.bb21:                                          ; preds = %if.else
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8676
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 30, !dbg !8677
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !8676
  %30 = load float, float* %arrayidx22, align 4, !dbg !8676
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8678
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 16, !dbg !8679
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !8678
  %32 = load float, float* %arrayidx23, align 4, !dbg !8678
  %mul24 = fmul float %30, %32, !dbg !8680
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8681
  %view25 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 30, !dbg !8682
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %view25, i64 0, i64 1, !dbg !8681
  %34 = load float, float* %arrayidx26, align 4, !dbg !8681
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8683
  %vn27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 16, !dbg !8684
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %vn27, i64 0, i64 1, !dbg !8683
  %36 = load float, float* %arrayidx28, align 4, !dbg !8683
  %mul29 = fmul float %34, %36, !dbg !8685
  %add30 = fadd float %mul24, %mul29, !dbg !8686
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8687
  %view31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 30, !dbg !8688
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %view31, i64 0, i64 2, !dbg !8687
  %38 = load float, float* %arrayidx32, align 4, !dbg !8687
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8689
  %vn33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 16, !dbg !8690
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %vn33, i64 0, i64 2, !dbg !8689
  %40 = load float, float* %arrayidx34, align 4, !dbg !8689
  %mul35 = fmul float %38, %40, !dbg !8691
  %add36 = fadd float %add30, %mul35, !dbg !8692
  store float %add36, float* %fac, align 4, !dbg !8693
  br label %sw.epilog, !dbg !8694

sw.default:                                       ; preds = %if.else
  store float 0.000000e+00, float* %fac, align 4, !dbg !8695
  br label %sw.epilog, !dbg !8696

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb20, %sw.bb
  %41 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8697
  %ramp_col37 = getelementptr inbounds %struct.Material, %struct.Material* %41, i32 0, i32 92, !dbg !8698
  %42 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col37, align 8, !dbg !8698
  %43 = load float, float* %fac, align 4, !dbg !8699
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8700
  %call = call zeroext i8 @do_colorband(%struct.ColorBand* %42, float %43, float* %arraydecay), !dbg !8701
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8702
  %44 = load float, float* %arrayidx38, align 4, !dbg !8702
  %45 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8703
  %rampfac_col = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 100, !dbg !8704
  %46 = load float, float* %rampfac_col, align 8, !dbg !8704
  %mul39 = fmul float %44, %46, !dbg !8705
  store float %mul39, float* %fac, align 4, !dbg !8706
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8707
  %r40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 32, !dbg !8708
  %48 = load float, float* %r40, align 4, !dbg !8708
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 0, !dbg !8709
  store float %48, float* %arrayidx41, align 4, !dbg !8710
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8711
  %g42 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 33, !dbg !8712
  %50 = load float, float* %g42, align 8, !dbg !8712
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 1, !dbg !8713
  store float %50, float* %arrayidx43, align 4, !dbg !8714
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8715
  %b44 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 34, !dbg !8716
  %52 = load float, float* %b44, align 4, !dbg !8716
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 2, !dbg !8717
  store float %52, float* %arrayidx45, align 4, !dbg !8718
  %53 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8719
  %rampblend_col = getelementptr inbounds %struct.Material, %struct.Material* %53, i32 0, i32 96, !dbg !8720
  %54 = load i8, i8* %rampblend_col, align 2, !dbg !8720
  %conv46 = zext i8 %54 to i32, !dbg !8719
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 0, !dbg !8721
  %55 = load float, float* %fac, align 4, !dbg !8722
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8723
  call void @ramp_blend(i32 %conv46, float* %arraydecay47, float %55, float* %arraydecay48), !dbg !8724
  %56 = load float, float* %r.addr, align 4, !dbg !8725
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 0, !dbg !8726
  %57 = load float, float* %arrayidx49, align 4, !dbg !8726
  %mul50 = fmul float %56, %57, !dbg !8727
  %58 = load float*, float** %diff.addr, align 8, !dbg !8728
  %arrayidx51 = getelementptr inbounds float, float* %58, i64 0, !dbg !8728
  %59 = load float, float* %arrayidx51, align 4, !dbg !8729
  %add52 = fadd float %59, %mul50, !dbg !8729
  store float %add52, float* %arrayidx51, align 4, !dbg !8729
  %60 = load float, float* %g.addr, align 4, !dbg !8730
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 1, !dbg !8731
  %61 = load float, float* %arrayidx53, align 4, !dbg !8731
  %mul54 = fmul float %60, %61, !dbg !8732
  %62 = load float*, float** %diff.addr, align 8, !dbg !8733
  %arrayidx55 = getelementptr inbounds float, float* %62, i64 1, !dbg !8733
  %63 = load float, float* %arrayidx55, align 4, !dbg !8734
  %add56 = fadd float %63, %mul54, !dbg !8734
  store float %add56, float* %arrayidx55, align 4, !dbg !8734
  %64 = load float, float* %b.addr, align 4, !dbg !8735
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %colt, i64 0, i64 2, !dbg !8736
  %65 = load float, float* %arrayidx57, align 4, !dbg !8736
  %mul58 = fmul float %64, %65, !dbg !8737
  %66 = load float*, float** %diff.addr, align 8, !dbg !8738
  %arrayidx59 = getelementptr inbounds float, float* %66, i64 2, !dbg !8738
  %67 = load float, float* %arrayidx59, align 4, !dbg !8739
  %add60 = fadd float %67, %mul58, !dbg !8739
  store float %add60, float* %arrayidx59, align 4, !dbg !8739
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then3
  br label %if.end74, !dbg !8740

if.else61:                                        ; preds = %land.lhs.true, %entry
  %68 = load float, float* %r.addr, align 4, !dbg !8741
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8743
  %r62 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 32, !dbg !8744
  %70 = load float, float* %r62, align 4, !dbg !8744
  %mul63 = fmul float %68, %70, !dbg !8745
  %71 = load float*, float** %diff.addr, align 8, !dbg !8746
  %arrayidx64 = getelementptr inbounds float, float* %71, i64 0, !dbg !8746
  %72 = load float, float* %arrayidx64, align 4, !dbg !8747
  %add65 = fadd float %72, %mul63, !dbg !8747
  store float %add65, float* %arrayidx64, align 4, !dbg !8747
  %73 = load float, float* %g.addr, align 4, !dbg !8748
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8749
  %g66 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %74, i32 0, i32 33, !dbg !8750
  %75 = load float, float* %g66, align 8, !dbg !8750
  %mul67 = fmul float %73, %75, !dbg !8751
  %76 = load float*, float** %diff.addr, align 8, !dbg !8752
  %arrayidx68 = getelementptr inbounds float, float* %76, i64 1, !dbg !8752
  %77 = load float, float* %arrayidx68, align 4, !dbg !8753
  %add69 = fadd float %77, %mul67, !dbg !8753
  store float %add69, float* %arrayidx68, align 4, !dbg !8753
  %78 = load float, float* %b.addr, align 4, !dbg !8754
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8755
  %b70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 0, i32 34, !dbg !8756
  %80 = load float, float* %b70, align 4, !dbg !8756
  %mul71 = fmul float %78, %80, !dbg !8757
  %81 = load float*, float** %diff.addr, align 8, !dbg !8758
  %arrayidx72 = getelementptr inbounds float, float* %81, i64 2, !dbg !8758
  %82 = load float, float* %arrayidx72, align 4, !dbg !8759
  %add73 = fadd float %82, %mul71, !dbg !8759
  store float %add73, float* %arrayidx72, align 4, !dbg !8759
  br label %if.end74

if.end74:                                         ; preds = %if.else61, %if.end
  ret void, !dbg !8760
}

; Function Attrs: noinline nounwind uwtable
define internal float @spec(float %inp, i32 %hard) #0 !dbg !8761 {
entry:
  %retval = alloca float, align 4
  %inp.addr = alloca float, align 4
  %hard.addr = alloca i32, align 4
  %b1 = alloca float, align 4
  store float %inp, float* %inp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %inp.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i32 %hard, i32* %hard.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hard.addr, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata float* %b1, metadata !8768, metadata !DIExpression()), !dbg !8769
  %0 = load float, float* %inp.addr, align 4, !dbg !8770
  %cmp = fcmp oge float %0, 1.000000e+00, !dbg !8772
  br i1 %cmp, label %if.then, label %if.else, !dbg !8773

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !8774
  br label %return, !dbg !8774

if.else:                                          ; preds = %entry
  %1 = load float, float* %inp.addr, align 4, !dbg !8775
  %cmp1 = fcmp ole float %1, 0.000000e+00, !dbg !8777
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8778

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !8779
  br label %return, !dbg !8779

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %inp.addr, align 4, !dbg !8780
  %3 = load float, float* %inp.addr, align 4, !dbg !8781
  %mul = fmul float %2, %3, !dbg !8782
  store float %mul, float* %b1, align 4, !dbg !8783
  %4 = load float, float* %b1, align 4, !dbg !8784
  %cmp4 = fcmp olt float %4, 0x3F847AE140000000, !dbg !8786
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8787

if.then5:                                         ; preds = %if.end3
  store float 0x3F847AE140000000, float* %b1, align 4, !dbg !8788
  br label %if.end6, !dbg !8789

if.end6:                                          ; preds = %if.then5, %if.end3
  %5 = load i32, i32* %hard.addr, align 4, !dbg !8790
  %and = and i32 %5, 1, !dbg !8792
  %cmp7 = icmp eq i32 %and, 0, !dbg !8793
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8794

if.then8:                                         ; preds = %if.end6
  store float 1.000000e+00, float* %inp.addr, align 4, !dbg !8795
  br label %if.end9, !dbg !8796

if.end9:                                          ; preds = %if.then8, %if.end6
  %6 = load i32, i32* %hard.addr, align 4, !dbg !8797
  %and10 = and i32 %6, 2, !dbg !8799
  %tobool = icmp ne i32 %and10, 0, !dbg !8799
  br i1 %tobool, label %if.then11, label %if.end13, !dbg !8800

if.then11:                                        ; preds = %if.end9
  %7 = load float, float* %b1, align 4, !dbg !8801
  %8 = load float, float* %inp.addr, align 4, !dbg !8802
  %mul12 = fmul float %8, %7, !dbg !8802
  store float %mul12, float* %inp.addr, align 4, !dbg !8802
  br label %if.end13, !dbg !8803

if.end13:                                         ; preds = %if.then11, %if.end9
  %9 = load float, float* %b1, align 4, !dbg !8804
  %10 = load float, float* %b1, align 4, !dbg !8805
  %mul14 = fmul float %10, %9, !dbg !8805
  store float %mul14, float* %b1, align 4, !dbg !8805
  %11 = load i32, i32* %hard.addr, align 4, !dbg !8806
  %and15 = and i32 %11, 4, !dbg !8808
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8808
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !8809

if.then17:                                        ; preds = %if.end13
  %12 = load float, float* %b1, align 4, !dbg !8810
  %13 = load float, float* %inp.addr, align 4, !dbg !8811
  %mul18 = fmul float %13, %12, !dbg !8811
  store float %mul18, float* %inp.addr, align 4, !dbg !8811
  br label %if.end19, !dbg !8812

if.end19:                                         ; preds = %if.then17, %if.end13
  %14 = load float, float* %b1, align 4, !dbg !8813
  %15 = load float, float* %b1, align 4, !dbg !8814
  %mul20 = fmul float %15, %14, !dbg !8814
  store float %mul20, float* %b1, align 4, !dbg !8814
  %16 = load i32, i32* %hard.addr, align 4, !dbg !8815
  %and21 = and i32 %16, 8, !dbg !8817
  %tobool22 = icmp ne i32 %and21, 0, !dbg !8817
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8818

if.then23:                                        ; preds = %if.end19
  %17 = load float, float* %b1, align 4, !dbg !8819
  %18 = load float, float* %inp.addr, align 4, !dbg !8820
  %mul24 = fmul float %18, %17, !dbg !8820
  store float %mul24, float* %inp.addr, align 4, !dbg !8820
  br label %if.end25, !dbg !8821

if.end25:                                         ; preds = %if.then23, %if.end19
  %19 = load float, float* %b1, align 4, !dbg !8822
  %20 = load float, float* %b1, align 4, !dbg !8823
  %mul26 = fmul float %20, %19, !dbg !8823
  store float %mul26, float* %b1, align 4, !dbg !8823
  %21 = load i32, i32* %hard.addr, align 4, !dbg !8824
  %and27 = and i32 %21, 16, !dbg !8826
  %tobool28 = icmp ne i32 %and27, 0, !dbg !8826
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !8827

if.then29:                                        ; preds = %if.end25
  %22 = load float, float* %b1, align 4, !dbg !8828
  %23 = load float, float* %inp.addr, align 4, !dbg !8829
  %mul30 = fmul float %23, %22, !dbg !8829
  store float %mul30, float* %inp.addr, align 4, !dbg !8829
  br label %if.end31, !dbg !8830

if.end31:                                         ; preds = %if.then29, %if.end25
  %24 = load float, float* %b1, align 4, !dbg !8831
  %25 = load float, float* %b1, align 4, !dbg !8832
  %mul32 = fmul float %25, %24, !dbg !8832
  store float %mul32, float* %b1, align 4, !dbg !8832
  %26 = load float, float* %b1, align 4, !dbg !8833
  %cmp33 = fcmp olt float %26, 0x3F50624DE0000000, !dbg !8835
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !8836

if.then34:                                        ; preds = %if.end31
  store float 0.000000e+00, float* %b1, align 4, !dbg !8837
  br label %if.end35, !dbg !8838

if.end35:                                         ; preds = %if.then34, %if.end31
  %27 = load i32, i32* %hard.addr, align 4, !dbg !8839
  %and36 = and i32 %27, 32, !dbg !8841
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8841
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !8842

if.then38:                                        ; preds = %if.end35
  %28 = load float, float* %b1, align 4, !dbg !8843
  %29 = load float, float* %inp.addr, align 4, !dbg !8844
  %mul39 = fmul float %29, %28, !dbg !8844
  store float %mul39, float* %inp.addr, align 4, !dbg !8844
  br label %if.end40, !dbg !8845

if.end40:                                         ; preds = %if.then38, %if.end35
  %30 = load float, float* %b1, align 4, !dbg !8846
  %31 = load float, float* %b1, align 4, !dbg !8847
  %mul41 = fmul float %31, %30, !dbg !8847
  store float %mul41, float* %b1, align 4, !dbg !8847
  %32 = load i32, i32* %hard.addr, align 4, !dbg !8848
  %and42 = and i32 %32, 64, !dbg !8850
  %tobool43 = icmp ne i32 %and42, 0, !dbg !8850
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !8851

if.then44:                                        ; preds = %if.end40
  %33 = load float, float* %b1, align 4, !dbg !8852
  %34 = load float, float* %inp.addr, align 4, !dbg !8853
  %mul45 = fmul float %34, %33, !dbg !8853
  store float %mul45, float* %inp.addr, align 4, !dbg !8853
  br label %if.end46, !dbg !8854

if.end46:                                         ; preds = %if.then44, %if.end40
  %35 = load float, float* %b1, align 4, !dbg !8855
  %36 = load float, float* %b1, align 4, !dbg !8856
  %mul47 = fmul float %36, %35, !dbg !8856
  store float %mul47, float* %b1, align 4, !dbg !8856
  %37 = load i32, i32* %hard.addr, align 4, !dbg !8857
  %and48 = and i32 %37, 128, !dbg !8859
  %tobool49 = icmp ne i32 %and48, 0, !dbg !8859
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !8860

if.then50:                                        ; preds = %if.end46
  %38 = load float, float* %b1, align 4, !dbg !8861
  %39 = load float, float* %inp.addr, align 4, !dbg !8862
  %mul51 = fmul float %39, %38, !dbg !8862
  store float %mul51, float* %inp.addr, align 4, !dbg !8862
  br label %if.end52, !dbg !8863

if.end52:                                         ; preds = %if.then50, %if.end46
  %40 = load float, float* %b1, align 4, !dbg !8864
  %cmp53 = fcmp olt float %40, 0x3F50624DE0000000, !dbg !8866
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !8867

if.then54:                                        ; preds = %if.end52
  store float 0.000000e+00, float* %b1, align 4, !dbg !8868
  br label %if.end55, !dbg !8869

if.end55:                                         ; preds = %if.then54, %if.end52
  %41 = load i32, i32* %hard.addr, align 4, !dbg !8870
  %and56 = and i32 %41, 256, !dbg !8872
  %tobool57 = icmp ne i32 %and56, 0, !dbg !8872
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !8873

if.then58:                                        ; preds = %if.end55
  %42 = load float, float* %b1, align 4, !dbg !8874
  %43 = load float, float* %b1, align 4, !dbg !8876
  %mul59 = fmul float %43, %42, !dbg !8876
  store float %mul59, float* %b1, align 4, !dbg !8876
  %44 = load float, float* %b1, align 4, !dbg !8877
  %45 = load float, float* %inp.addr, align 4, !dbg !8878
  %mul60 = fmul float %45, %44, !dbg !8878
  store float %mul60, float* %inp.addr, align 4, !dbg !8878
  br label %if.end61, !dbg !8879

if.end61:                                         ; preds = %if.then58, %if.end55
  %46 = load float, float* %inp.addr, align 4, !dbg !8880
  store float %46, float* %retval, align 4, !dbg !8881
  br label %return, !dbg !8881

return:                                           ; preds = %if.end61, %if.then2, %if.then
  %47 = load float, float* %retval, align 4, !dbg !8882
  ret float %47, !dbg !8882
}

; Function Attrs: noinline nounwind uwtable
define internal float @Phong_Spec(float* %n, float* %l, float* %v, i32 %hard, i32 %tangent) #0 !dbg !8883 {
entry:
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %hard.addr = alloca i32, align 4
  %tangent.addr = alloca i32, align 4
  %h = alloca [3 x float], align 4
  %rslt = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  store i32 %hard, i32* %hard.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hard.addr, metadata !8892, metadata !DIExpression()), !dbg !8893
  store i32 %tangent, i32* %tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tangent.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !8896, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.declare(metadata float* %rslt, metadata !8898, metadata !DIExpression()), !dbg !8899
  %0 = load float*, float** %l.addr, align 8, !dbg !8900
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8900
  %1 = load float, float* %arrayidx, align 4, !dbg !8900
  %2 = load float*, float** %v.addr, align 8, !dbg !8901
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8901
  %3 = load float, float* %arrayidx1, align 4, !dbg !8901
  %add = fadd float %1, %3, !dbg !8902
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8903
  store float %add, float* %arrayidx2, align 4, !dbg !8904
  %4 = load float*, float** %l.addr, align 8, !dbg !8905
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !8905
  %5 = load float, float* %arrayidx3, align 4, !dbg !8905
  %6 = load float*, float** %v.addr, align 8, !dbg !8906
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !8906
  %7 = load float, float* %arrayidx4, align 4, !dbg !8906
  %add5 = fadd float %5, %7, !dbg !8907
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !8908
  store float %add5, float* %arrayidx6, align 4, !dbg !8909
  %8 = load float*, float** %l.addr, align 8, !dbg !8910
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !8910
  %9 = load float, float* %arrayidx7, align 4, !dbg !8910
  %10 = load float*, float** %v.addr, align 8, !dbg !8911
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !8911
  %11 = load float, float* %arrayidx8, align 4, !dbg !8911
  %add9 = fadd float %9, %11, !dbg !8912
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !8913
  store float %add9, float* %arrayidx10, align 4, !dbg !8914
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8915
  %call = call float @normalize_v3(float* %arraydecay), !dbg !8916
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8917
  %12 = load float, float* %arrayidx11, align 4, !dbg !8917
  %13 = load float*, float** %n.addr, align 8, !dbg !8918
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 0, !dbg !8918
  %14 = load float, float* %arrayidx12, align 4, !dbg !8918
  %mul = fmul float %12, %14, !dbg !8919
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !8920
  %15 = load float, float* %arrayidx13, align 4, !dbg !8920
  %16 = load float*, float** %n.addr, align 8, !dbg !8921
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !8921
  %17 = load float, float* %arrayidx14, align 4, !dbg !8921
  %mul15 = fmul float %15, %17, !dbg !8922
  %add16 = fadd float %mul, %mul15, !dbg !8923
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !8924
  %18 = load float, float* %arrayidx17, align 4, !dbg !8924
  %19 = load float*, float** %n.addr, align 8, !dbg !8925
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 2, !dbg !8925
  %20 = load float, float* %arrayidx18, align 4, !dbg !8925
  %mul19 = fmul float %18, %20, !dbg !8926
  %add20 = fadd float %add16, %mul19, !dbg !8927
  store float %add20, float* %rslt, align 4, !dbg !8928
  %21 = load i32, i32* %tangent.addr, align 4, !dbg !8929
  %tobool = icmp ne i32 %21, 0, !dbg !8929
  br i1 %tobool, label %if.then, label %if.end, !dbg !8931

if.then:                                          ; preds = %entry
  %22 = load float, float* %rslt, align 4, !dbg !8932
  %23 = load float, float* %rslt, align 4, !dbg !8933
  %mul21 = fmul float %22, %23, !dbg !8934
  %sub = fsub float 1.000000e+00, %mul21, !dbg !8935
  %call22 = call float @sasqrt(float %sub), !dbg !8936
  store float %call22, float* %rslt, align 4, !dbg !8937
  br label %if.end, !dbg !8938

if.end:                                           ; preds = %if.then, %entry
  %24 = load float, float* %rslt, align 4, !dbg !8939
  %cmp = fcmp ogt float %24, 0.000000e+00, !dbg !8941
  br i1 %cmp, label %if.then23, label %if.else, !dbg !8942

if.then23:                                        ; preds = %if.end
  %25 = load float, float* %rslt, align 4, !dbg !8943
  %26 = load i32, i32* %hard.addr, align 4, !dbg !8944
  %call24 = call float @spec(float %25, i32 %26), !dbg !8945
  store float %call24, float* %rslt, align 4, !dbg !8946
  br label %if.end25, !dbg !8947

if.else:                                          ; preds = %if.end
  store float 0.000000e+00, float* %rslt, align 4, !dbg !8948
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then23
  %27 = load float, float* %rslt, align 4, !dbg !8949
  ret float %27, !dbg !8950
}

; Function Attrs: noinline nounwind uwtable
define internal float @CookTorr_Spec(float* %n, float* %l, float* %v, i32 %hard, i32 %tangent) #0 !dbg !8951 {
entry:
  %retval = alloca float, align 4
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %hard.addr = alloca i32, align 4
  %tangent.addr = alloca i32, align 4
  %i = alloca float, align 4
  %nh = alloca float, align 4
  %nv = alloca float, align 4
  %h = alloca [3 x float], align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8956, metadata !DIExpression()), !dbg !8957
  store i32 %hard, i32* %hard.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hard.addr, metadata !8958, metadata !DIExpression()), !dbg !8959
  store i32 %tangent, i32* %tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tangent.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.declare(metadata float* %i, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata float* %nh, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata float* %nv, metadata !8966, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !8968, metadata !DIExpression()), !dbg !8969
  %0 = load float*, float** %v.addr, align 8, !dbg !8970
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8970
  %1 = load float, float* %arrayidx, align 4, !dbg !8970
  %2 = load float*, float** %l.addr, align 8, !dbg !8971
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8971
  %3 = load float, float* %arrayidx1, align 4, !dbg !8971
  %add = fadd float %1, %3, !dbg !8972
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8973
  store float %add, float* %arrayidx2, align 4, !dbg !8974
  %4 = load float*, float** %v.addr, align 8, !dbg !8975
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !8975
  %5 = load float, float* %arrayidx3, align 4, !dbg !8975
  %6 = load float*, float** %l.addr, align 8, !dbg !8976
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !8976
  %7 = load float, float* %arrayidx4, align 4, !dbg !8976
  %add5 = fadd float %5, %7, !dbg !8977
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !8978
  store float %add5, float* %arrayidx6, align 4, !dbg !8979
  %8 = load float*, float** %v.addr, align 8, !dbg !8980
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !8980
  %9 = load float, float* %arrayidx7, align 4, !dbg !8980
  %10 = load float*, float** %l.addr, align 8, !dbg !8981
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !8981
  %11 = load float, float* %arrayidx8, align 4, !dbg !8981
  %add9 = fadd float %9, %11, !dbg !8982
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !8983
  store float %add9, float* %arrayidx10, align 4, !dbg !8984
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8985
  %call = call float @normalize_v3(float* %arraydecay), !dbg !8986
  %12 = load float*, float** %n.addr, align 8, !dbg !8987
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0, !dbg !8987
  %13 = load float, float* %arrayidx11, align 4, !dbg !8987
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !8988
  %14 = load float, float* %arrayidx12, align 4, !dbg !8988
  %mul = fmul float %13, %14, !dbg !8989
  %15 = load float*, float** %n.addr, align 8, !dbg !8990
  %arrayidx13 = getelementptr inbounds float, float* %15, i64 1, !dbg !8990
  %16 = load float, float* %arrayidx13, align 4, !dbg !8990
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !8991
  %17 = load float, float* %arrayidx14, align 4, !dbg !8991
  %mul15 = fmul float %16, %17, !dbg !8992
  %add16 = fadd float %mul, %mul15, !dbg !8993
  %18 = load float*, float** %n.addr, align 8, !dbg !8994
  %arrayidx17 = getelementptr inbounds float, float* %18, i64 2, !dbg !8994
  %19 = load float, float* %arrayidx17, align 4, !dbg !8994
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !8995
  %20 = load float, float* %arrayidx18, align 4, !dbg !8995
  %mul19 = fmul float %19, %20, !dbg !8996
  %add20 = fadd float %add16, %mul19, !dbg !8997
  store float %add20, float* %nh, align 4, !dbg !8998
  %21 = load i32, i32* %tangent.addr, align 4, !dbg !8999
  %tobool = icmp ne i32 %21, 0, !dbg !8999
  br i1 %tobool, label %if.then, label %if.else, !dbg !9001

if.then:                                          ; preds = %entry
  %22 = load float, float* %nh, align 4, !dbg !9002
  %23 = load float, float* %nh, align 4, !dbg !9003
  %mul21 = fmul float %22, %23, !dbg !9004
  %sub = fsub float 1.000000e+00, %mul21, !dbg !9005
  %call22 = call float @sasqrt(float %sub), !dbg !9006
  store float %call22, float* %nh, align 4, !dbg !9007
  br label %if.end24, !dbg !9008

if.else:                                          ; preds = %entry
  %24 = load float, float* %nh, align 4, !dbg !9009
  %cmp = fcmp olt float %24, 0.000000e+00, !dbg !9011
  br i1 %cmp, label %if.then23, label %if.end, !dbg !9012

if.then23:                                        ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !9013
  br label %return, !dbg !9013

if.end:                                           ; preds = %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %25 = load float*, float** %n.addr, align 8, !dbg !9014
  %arrayidx25 = getelementptr inbounds float, float* %25, i64 0, !dbg !9014
  %26 = load float, float* %arrayidx25, align 4, !dbg !9014
  %27 = load float*, float** %v.addr, align 8, !dbg !9015
  %arrayidx26 = getelementptr inbounds float, float* %27, i64 0, !dbg !9015
  %28 = load float, float* %arrayidx26, align 4, !dbg !9015
  %mul27 = fmul float %26, %28, !dbg !9016
  %29 = load float*, float** %n.addr, align 8, !dbg !9017
  %arrayidx28 = getelementptr inbounds float, float* %29, i64 1, !dbg !9017
  %30 = load float, float* %arrayidx28, align 4, !dbg !9017
  %31 = load float*, float** %v.addr, align 8, !dbg !9018
  %arrayidx29 = getelementptr inbounds float, float* %31, i64 1, !dbg !9018
  %32 = load float, float* %arrayidx29, align 4, !dbg !9018
  %mul30 = fmul float %30, %32, !dbg !9019
  %add31 = fadd float %mul27, %mul30, !dbg !9020
  %33 = load float*, float** %n.addr, align 8, !dbg !9021
  %arrayidx32 = getelementptr inbounds float, float* %33, i64 2, !dbg !9021
  %34 = load float, float* %arrayidx32, align 4, !dbg !9021
  %35 = load float*, float** %v.addr, align 8, !dbg !9022
  %arrayidx33 = getelementptr inbounds float, float* %35, i64 2, !dbg !9022
  %36 = load float, float* %arrayidx33, align 4, !dbg !9022
  %mul34 = fmul float %34, %36, !dbg !9023
  %add35 = fadd float %add31, %mul34, !dbg !9024
  store float %add35, float* %nv, align 4, !dbg !9025
  %37 = load i32, i32* %tangent.addr, align 4, !dbg !9026
  %tobool36 = icmp ne i32 %37, 0, !dbg !9026
  br i1 %tobool36, label %if.then37, label %if.else41, !dbg !9028

if.then37:                                        ; preds = %if.end24
  %38 = load float, float* %nv, align 4, !dbg !9029
  %39 = load float, float* %nv, align 4, !dbg !9030
  %mul38 = fmul float %38, %39, !dbg !9031
  %sub39 = fsub float 1.000000e+00, %mul38, !dbg !9032
  %call40 = call float @sasqrt(float %sub39), !dbg !9033
  store float %call40, float* %nv, align 4, !dbg !9034
  br label %if.end45, !dbg !9035

if.else41:                                        ; preds = %if.end24
  %40 = load float, float* %nv, align 4, !dbg !9036
  %cmp42 = fcmp olt float %40, 0.000000e+00, !dbg !9038
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !9039

if.then43:                                        ; preds = %if.else41
  store float 0.000000e+00, float* %nv, align 4, !dbg !9040
  br label %if.end44, !dbg !9041

if.end44:                                         ; preds = %if.then43, %if.else41
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then37
  %41 = load float, float* %nh, align 4, !dbg !9042
  %42 = load i32, i32* %hard.addr, align 4, !dbg !9043
  %call46 = call float @spec(float %41, i32 %42), !dbg !9044
  store float %call46, float* %i, align 4, !dbg !9045
  %43 = load float, float* %i, align 4, !dbg !9046
  %44 = load float, float* %nv, align 4, !dbg !9047
  %add47 = fadd float 0x3FB99999A0000000, %44, !dbg !9048
  %div = fdiv float %43, %add47, !dbg !9049
  store float %div, float* %i, align 4, !dbg !9050
  %45 = load float, float* %i, align 4, !dbg !9051
  store float %45, float* %retval, align 4, !dbg !9052
  br label %return, !dbg !9052

return:                                           ; preds = %if.end45, %if.then23
  %46 = load float, float* %retval, align 4, !dbg !9053
  ret float %46, !dbg !9053
}

; Function Attrs: noinline nounwind uwtable
define internal float @Blinn_Spec(float* %n, float* %l, float* %v, float %refrac, float %spec_power, i32 %tangent) #0 !dbg !9054 {
entry:
  %retval = alloca float, align 4
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %refrac.addr = alloca float, align 4
  %spec_power.addr = alloca float, align 4
  %tangent.addr = alloca i32, align 4
  %i = alloca float, align 4
  %nh = alloca float, align 4
  %nv = alloca float, align 4
  %nl = alloca float, align 4
  %vh = alloca float, align 4
  %h = alloca [3 x float], align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %g = alloca float, align 4
  %p = alloca float, align 4
  %f = alloca float, align 4
  %ang = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9057, metadata !DIExpression()), !dbg !9058
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !9059, metadata !DIExpression()), !dbg !9060
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9061, metadata !DIExpression()), !dbg !9062
  store float %refrac, float* %refrac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %refrac.addr, metadata !9063, metadata !DIExpression()), !dbg !9064
  store float %spec_power, float* %spec_power.addr, align 4
  call void @llvm.dbg.declare(metadata float* %spec_power.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store i32 %tangent, i32* %tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tangent.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.declare(metadata float* %i, metadata !9069, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata float* %nh, metadata !9071, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.declare(metadata float* %nv, metadata !9073, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.declare(metadata float* %nl, metadata !9075, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.declare(metadata float* %vh, metadata !9077, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !9079, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata float* %a, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.declare(metadata float* %b, metadata !9083, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata float* %c, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.declare(metadata float* %g, metadata !9087, metadata !DIExpression()), !dbg !9088
  store float 0.000000e+00, float* %g, align 4, !dbg !9088
  call void @llvm.dbg.declare(metadata float* %p, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata float* %f, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata float* %ang, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load float, float* %refrac.addr, align 4, !dbg !9095
  %cmp = fcmp olt float %0, 1.000000e+00, !dbg !9097
  br i1 %cmp, label %if.then, label %if.end, !dbg !9098

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !9099
  br label %return, !dbg !9099

if.end:                                           ; preds = %entry
  %1 = load float, float* %spec_power.addr, align 4, !dbg !9100
  %cmp1 = fcmp oeq float %1, 0.000000e+00, !dbg !9102
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9103

if.then2:                                         ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !9104
  br label %return, !dbg !9104

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %spec_power.addr, align 4, !dbg !9105
  %cmp4 = fcmp olt float %2, 1.000000e+02, !dbg !9107
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9108

if.then5:                                         ; preds = %if.end3
  %3 = load float, float* %spec_power.addr, align 4, !dbg !9109
  %div = fdiv float 1.000000e+00, %3, !dbg !9110
  %call = call float @sqrtf(float %div) #6, !dbg !9111
  store float %call, float* %spec_power.addr, align 4, !dbg !9112
  br label %if.end7, !dbg !9113

if.else:                                          ; preds = %if.end3
  %4 = load float, float* %spec_power.addr, align 4, !dbg !9114
  %div6 = fdiv float 1.000000e+01, %4, !dbg !9115
  store float %div6, float* %spec_power.addr, align 4, !dbg !9116
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %5 = load float*, float** %v.addr, align 8, !dbg !9117
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !9117
  %6 = load float, float* %arrayidx, align 4, !dbg !9117
  %7 = load float*, float** %l.addr, align 8, !dbg !9118
  %arrayidx8 = getelementptr inbounds float, float* %7, i64 0, !dbg !9118
  %8 = load float, float* %arrayidx8, align 4, !dbg !9118
  %add = fadd float %6, %8, !dbg !9119
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9120
  store float %add, float* %arrayidx9, align 4, !dbg !9121
  %9 = load float*, float** %v.addr, align 8, !dbg !9122
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 1, !dbg !9122
  %10 = load float, float* %arrayidx10, align 4, !dbg !9122
  %11 = load float*, float** %l.addr, align 8, !dbg !9123
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 1, !dbg !9123
  %12 = load float, float* %arrayidx11, align 4, !dbg !9123
  %add12 = fadd float %10, %12, !dbg !9124
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9125
  store float %add12, float* %arrayidx13, align 4, !dbg !9126
  %13 = load float*, float** %v.addr, align 8, !dbg !9127
  %arrayidx14 = getelementptr inbounds float, float* %13, i64 2, !dbg !9127
  %14 = load float, float* %arrayidx14, align 4, !dbg !9127
  %15 = load float*, float** %l.addr, align 8, !dbg !9128
  %arrayidx15 = getelementptr inbounds float, float* %15, i64 2, !dbg !9128
  %16 = load float, float* %arrayidx15, align 4, !dbg !9128
  %add16 = fadd float %14, %16, !dbg !9129
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9130
  store float %add16, float* %arrayidx17, align 4, !dbg !9131
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9132
  %call18 = call float @normalize_v3(float* %arraydecay), !dbg !9133
  %17 = load float*, float** %n.addr, align 8, !dbg !9134
  %arrayidx19 = getelementptr inbounds float, float* %17, i64 0, !dbg !9134
  %18 = load float, float* %arrayidx19, align 4, !dbg !9134
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9135
  %19 = load float, float* %arrayidx20, align 4, !dbg !9135
  %mul = fmul float %18, %19, !dbg !9136
  %20 = load float*, float** %n.addr, align 8, !dbg !9137
  %arrayidx21 = getelementptr inbounds float, float* %20, i64 1, !dbg !9137
  %21 = load float, float* %arrayidx21, align 4, !dbg !9137
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9138
  %22 = load float, float* %arrayidx22, align 4, !dbg !9138
  %mul23 = fmul float %21, %22, !dbg !9139
  %add24 = fadd float %mul, %mul23, !dbg !9140
  %23 = load float*, float** %n.addr, align 8, !dbg !9141
  %arrayidx25 = getelementptr inbounds float, float* %23, i64 2, !dbg !9141
  %24 = load float, float* %arrayidx25, align 4, !dbg !9141
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9142
  %25 = load float, float* %arrayidx26, align 4, !dbg !9142
  %mul27 = fmul float %24, %25, !dbg !9143
  %add28 = fadd float %add24, %mul27, !dbg !9144
  store float %add28, float* %nh, align 4, !dbg !9145
  %26 = load i32, i32* %tangent.addr, align 4, !dbg !9146
  %tobool = icmp ne i32 %26, 0, !dbg !9146
  br i1 %tobool, label %if.then29, label %if.else32, !dbg !9148

if.then29:                                        ; preds = %if.end7
  %27 = load float, float* %nh, align 4, !dbg !9149
  %28 = load float, float* %nh, align 4, !dbg !9150
  %mul30 = fmul float %27, %28, !dbg !9151
  %sub = fsub float 1.000000e+00, %mul30, !dbg !9152
  %call31 = call float @sasqrt(float %sub), !dbg !9153
  store float %call31, float* %nh, align 4, !dbg !9154
  br label %if.end36, !dbg !9155

if.else32:                                        ; preds = %if.end7
  %29 = load float, float* %nh, align 4, !dbg !9156
  %cmp33 = fcmp olt float %29, 0.000000e+00, !dbg !9158
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9159

if.then34:                                        ; preds = %if.else32
  store float 0.000000e+00, float* %retval, align 4, !dbg !9160
  br label %return, !dbg !9160

if.end35:                                         ; preds = %if.else32
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then29
  %30 = load float*, float** %n.addr, align 8, !dbg !9161
  %arrayidx37 = getelementptr inbounds float, float* %30, i64 0, !dbg !9161
  %31 = load float, float* %arrayidx37, align 4, !dbg !9161
  %32 = load float*, float** %v.addr, align 8, !dbg !9162
  %arrayidx38 = getelementptr inbounds float, float* %32, i64 0, !dbg !9162
  %33 = load float, float* %arrayidx38, align 4, !dbg !9162
  %mul39 = fmul float %31, %33, !dbg !9163
  %34 = load float*, float** %n.addr, align 8, !dbg !9164
  %arrayidx40 = getelementptr inbounds float, float* %34, i64 1, !dbg !9164
  %35 = load float, float* %arrayidx40, align 4, !dbg !9164
  %36 = load float*, float** %v.addr, align 8, !dbg !9165
  %arrayidx41 = getelementptr inbounds float, float* %36, i64 1, !dbg !9165
  %37 = load float, float* %arrayidx41, align 4, !dbg !9165
  %mul42 = fmul float %35, %37, !dbg !9166
  %add43 = fadd float %mul39, %mul42, !dbg !9167
  %38 = load float*, float** %n.addr, align 8, !dbg !9168
  %arrayidx44 = getelementptr inbounds float, float* %38, i64 2, !dbg !9168
  %39 = load float, float* %arrayidx44, align 4, !dbg !9168
  %40 = load float*, float** %v.addr, align 8, !dbg !9169
  %arrayidx45 = getelementptr inbounds float, float* %40, i64 2, !dbg !9169
  %41 = load float, float* %arrayidx45, align 4, !dbg !9169
  %mul46 = fmul float %39, %41, !dbg !9170
  %add47 = fadd float %add43, %mul46, !dbg !9171
  store float %add47, float* %nv, align 4, !dbg !9172
  %42 = load i32, i32* %tangent.addr, align 4, !dbg !9173
  %tobool48 = icmp ne i32 %42, 0, !dbg !9173
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !9175

if.then49:                                        ; preds = %if.end36
  %43 = load float, float* %nv, align 4, !dbg !9176
  %44 = load float, float* %nv, align 4, !dbg !9177
  %mul50 = fmul float %43, %44, !dbg !9178
  %sub51 = fsub float 1.000000e+00, %mul50, !dbg !9179
  %call52 = call float @sasqrt(float %sub51), !dbg !9180
  store float %call52, float* %nv, align 4, !dbg !9181
  br label %if.end53, !dbg !9182

if.end53:                                         ; preds = %if.then49, %if.end36
  %45 = load float, float* %nv, align 4, !dbg !9183
  %cmp54 = fcmp ole float %45, 0x3F847AE140000000, !dbg !9185
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !9186

if.then55:                                        ; preds = %if.end53
  store float 0x3F847AE140000000, float* %nv, align 4, !dbg !9187
  br label %if.end56, !dbg !9188

if.end56:                                         ; preds = %if.then55, %if.end53
  %46 = load float*, float** %n.addr, align 8, !dbg !9189
  %arrayidx57 = getelementptr inbounds float, float* %46, i64 0, !dbg !9189
  %47 = load float, float* %arrayidx57, align 4, !dbg !9189
  %48 = load float*, float** %l.addr, align 8, !dbg !9190
  %arrayidx58 = getelementptr inbounds float, float* %48, i64 0, !dbg !9190
  %49 = load float, float* %arrayidx58, align 4, !dbg !9190
  %mul59 = fmul float %47, %49, !dbg !9191
  %50 = load float*, float** %n.addr, align 8, !dbg !9192
  %arrayidx60 = getelementptr inbounds float, float* %50, i64 1, !dbg !9192
  %51 = load float, float* %arrayidx60, align 4, !dbg !9192
  %52 = load float*, float** %l.addr, align 8, !dbg !9193
  %arrayidx61 = getelementptr inbounds float, float* %52, i64 1, !dbg !9193
  %53 = load float, float* %arrayidx61, align 4, !dbg !9193
  %mul62 = fmul float %51, %53, !dbg !9194
  %add63 = fadd float %mul59, %mul62, !dbg !9195
  %54 = load float*, float** %n.addr, align 8, !dbg !9196
  %arrayidx64 = getelementptr inbounds float, float* %54, i64 2, !dbg !9196
  %55 = load float, float* %arrayidx64, align 4, !dbg !9196
  %56 = load float*, float** %l.addr, align 8, !dbg !9197
  %arrayidx65 = getelementptr inbounds float, float* %56, i64 2, !dbg !9197
  %57 = load float, float* %arrayidx65, align 4, !dbg !9197
  %mul66 = fmul float %55, %57, !dbg !9198
  %add67 = fadd float %add63, %mul66, !dbg !9199
  store float %add67, float* %nl, align 4, !dbg !9200
  %58 = load i32, i32* %tangent.addr, align 4, !dbg !9201
  %tobool68 = icmp ne i32 %58, 0, !dbg !9201
  br i1 %tobool68, label %if.then69, label %if.end73, !dbg !9203

if.then69:                                        ; preds = %if.end56
  %59 = load float, float* %nl, align 4, !dbg !9204
  %60 = load float, float* %nl, align 4, !dbg !9205
  %mul70 = fmul float %59, %60, !dbg !9206
  %sub71 = fsub float 1.000000e+00, %mul70, !dbg !9207
  %call72 = call float @sasqrt(float %sub71), !dbg !9208
  store float %call72, float* %nl, align 4, !dbg !9209
  br label %if.end73, !dbg !9210

if.end73:                                         ; preds = %if.then69, %if.end56
  %61 = load float, float* %nl, align 4, !dbg !9211
  %cmp74 = fcmp ole float %61, 0x3F847AE140000000, !dbg !9213
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !9214

if.then75:                                        ; preds = %if.end73
  store float 0.000000e+00, float* %retval, align 4, !dbg !9215
  br label %return, !dbg !9215

if.end76:                                         ; preds = %if.end73
  %62 = load float*, float** %v.addr, align 8, !dbg !9217
  %arrayidx77 = getelementptr inbounds float, float* %62, i64 0, !dbg !9217
  %63 = load float, float* %arrayidx77, align 4, !dbg !9217
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9218
  %64 = load float, float* %arrayidx78, align 4, !dbg !9218
  %mul79 = fmul float %63, %64, !dbg !9219
  %65 = load float*, float** %v.addr, align 8, !dbg !9220
  %arrayidx80 = getelementptr inbounds float, float* %65, i64 1, !dbg !9220
  %66 = load float, float* %arrayidx80, align 4, !dbg !9220
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9221
  %67 = load float, float* %arrayidx81, align 4, !dbg !9221
  %mul82 = fmul float %66, %67, !dbg !9222
  %add83 = fadd float %mul79, %mul82, !dbg !9223
  %68 = load float*, float** %v.addr, align 8, !dbg !9224
  %arrayidx84 = getelementptr inbounds float, float* %68, i64 2, !dbg !9224
  %69 = load float, float* %arrayidx84, align 4, !dbg !9224
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9225
  %70 = load float, float* %arrayidx85, align 4, !dbg !9225
  %mul86 = fmul float %69, %70, !dbg !9226
  %add87 = fadd float %add83, %mul86, !dbg !9227
  store float %add87, float* %vh, align 4, !dbg !9228
  %71 = load float, float* %vh, align 4, !dbg !9229
  %cmp88 = fcmp ole float %71, 0.000000e+00, !dbg !9231
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !9232

if.then89:                                        ; preds = %if.end76
  store float 0x3F847AE140000000, float* %vh, align 4, !dbg !9233
  br label %if.end90, !dbg !9234

if.end90:                                         ; preds = %if.then89, %if.end76
  store float 1.000000e+00, float* %a, align 4, !dbg !9235
  %72 = load float, float* %nh, align 4, !dbg !9236
  %mul91 = fmul float 2.000000e+00, %72, !dbg !9237
  %73 = load float, float* %nv, align 4, !dbg !9238
  %mul92 = fmul float %mul91, %73, !dbg !9239
  %74 = load float, float* %vh, align 4, !dbg !9240
  %div93 = fdiv float %mul92, %74, !dbg !9241
  store float %div93, float* %b, align 4, !dbg !9242
  %75 = load float, float* %nh, align 4, !dbg !9243
  %mul94 = fmul float 2.000000e+00, %75, !dbg !9244
  %76 = load float, float* %nl, align 4, !dbg !9245
  %mul95 = fmul float %mul94, %76, !dbg !9246
  %77 = load float, float* %vh, align 4, !dbg !9247
  %div96 = fdiv float %mul95, %77, !dbg !9248
  store float %div96, float* %c, align 4, !dbg !9249
  %78 = load float, float* %a, align 4, !dbg !9250
  %79 = load float, float* %b, align 4, !dbg !9252
  %cmp97 = fcmp olt float %78, %79, !dbg !9253
  br i1 %cmp97, label %land.lhs.true, label %if.else100, !dbg !9254

land.lhs.true:                                    ; preds = %if.end90
  %80 = load float, float* %a, align 4, !dbg !9255
  %81 = load float, float* %c, align 4, !dbg !9256
  %cmp98 = fcmp olt float %80, %81, !dbg !9257
  br i1 %cmp98, label %if.then99, label %if.else100, !dbg !9258

if.then99:                                        ; preds = %land.lhs.true
  %82 = load float, float* %a, align 4, !dbg !9259
  store float %82, float* %g, align 4, !dbg !9260
  br label %if.end112, !dbg !9261

if.else100:                                       ; preds = %land.lhs.true, %if.end90
  %83 = load float, float* %b, align 4, !dbg !9262
  %84 = load float, float* %a, align 4, !dbg !9264
  %cmp101 = fcmp olt float %83, %84, !dbg !9265
  br i1 %cmp101, label %land.lhs.true102, label %if.else105, !dbg !9266

land.lhs.true102:                                 ; preds = %if.else100
  %85 = load float, float* %b, align 4, !dbg !9267
  %86 = load float, float* %c, align 4, !dbg !9268
  %cmp103 = fcmp olt float %85, %86, !dbg !9269
  br i1 %cmp103, label %if.then104, label %if.else105, !dbg !9270

if.then104:                                       ; preds = %land.lhs.true102
  %87 = load float, float* %b, align 4, !dbg !9271
  store float %87, float* %g, align 4, !dbg !9272
  br label %if.end111, !dbg !9273

if.else105:                                       ; preds = %land.lhs.true102, %if.else100
  %88 = load float, float* %c, align 4, !dbg !9274
  %89 = load float, float* %a, align 4, !dbg !9276
  %cmp106 = fcmp olt float %88, %89, !dbg !9277
  br i1 %cmp106, label %land.lhs.true107, label %if.end110, !dbg !9278

land.lhs.true107:                                 ; preds = %if.else105
  %90 = load float, float* %c, align 4, !dbg !9279
  %91 = load float, float* %b, align 4, !dbg !9280
  %cmp108 = fcmp olt float %90, %91, !dbg !9281
  br i1 %cmp108, label %if.then109, label %if.end110, !dbg !9282

if.then109:                                       ; preds = %land.lhs.true107
  %92 = load float, float* %c, align 4, !dbg !9283
  store float %92, float* %g, align 4, !dbg !9284
  br label %if.end110, !dbg !9285

if.end110:                                        ; preds = %if.then109, %land.lhs.true107, %if.else105
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.then104
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then99
  %93 = load float, float* %refrac.addr, align 4, !dbg !9286
  %94 = load float, float* %refrac.addr, align 4, !dbg !9287
  %mul113 = fmul float %93, %94, !dbg !9288
  %95 = load float, float* %vh, align 4, !dbg !9289
  %96 = load float, float* %vh, align 4, !dbg !9290
  %mul114 = fmul float %95, %96, !dbg !9291
  %add115 = fadd float %mul113, %mul114, !dbg !9292
  %sub116 = fsub float %add115, 1.000000e+00, !dbg !9293
  %conv = fpext float %sub116 to double, !dbg !9294
  %call117 = call double @sqrt(double %conv) #6, !dbg !9295
  %conv118 = fptrunc double %call117 to float, !dbg !9295
  store float %conv118, float* %p, align 4, !dbg !9296
  %97 = load float, float* %p, align 4, !dbg !9297
  %98 = load float, float* %vh, align 4, !dbg !9298
  %sub119 = fsub float %97, %98, !dbg !9299
  %99 = load float, float* %p, align 4, !dbg !9300
  %100 = load float, float* %vh, align 4, !dbg !9301
  %sub120 = fsub float %99, %100, !dbg !9302
  %mul121 = fmul float %sub119, %sub120, !dbg !9303
  %101 = load float, float* %p, align 4, !dbg !9304
  %102 = load float, float* %vh, align 4, !dbg !9305
  %add122 = fadd float %101, %102, !dbg !9306
  %103 = load float, float* %p, align 4, !dbg !9307
  %104 = load float, float* %vh, align 4, !dbg !9308
  %add123 = fadd float %103, %104, !dbg !9309
  %mul124 = fmul float %add122, %add123, !dbg !9310
  %div125 = fdiv float %mul121, %mul124, !dbg !9311
  %105 = load float, float* %vh, align 4, !dbg !9312
  %106 = load float, float* %p, align 4, !dbg !9313
  %107 = load float, float* %vh, align 4, !dbg !9314
  %add126 = fadd float %106, %107, !dbg !9315
  %mul127 = fmul float %105, %add126, !dbg !9316
  %sub128 = fsub float %mul127, 1.000000e+00, !dbg !9317
  %108 = load float, float* %vh, align 4, !dbg !9318
  %109 = load float, float* %p, align 4, !dbg !9319
  %110 = load float, float* %vh, align 4, !dbg !9320
  %add129 = fadd float %109, %110, !dbg !9321
  %mul130 = fmul float %108, %add129, !dbg !9322
  %sub131 = fsub float %mul130, 1.000000e+00, !dbg !9323
  %mul132 = fmul float %sub128, %sub131, !dbg !9324
  %111 = load float, float* %vh, align 4, !dbg !9325
  %112 = load float, float* %p, align 4, !dbg !9326
  %113 = load float, float* %vh, align 4, !dbg !9327
  %sub133 = fsub float %112, %113, !dbg !9328
  %mul134 = fmul float %111, %sub133, !dbg !9329
  %add135 = fadd float %mul134, 1.000000e+00, !dbg !9330
  %114 = load float, float* %vh, align 4, !dbg !9331
  %115 = load float, float* %p, align 4, !dbg !9332
  %116 = load float, float* %vh, align 4, !dbg !9333
  %sub136 = fsub float %115, %116, !dbg !9334
  %mul137 = fmul float %114, %sub136, !dbg !9335
  %add138 = fadd float %mul137, 1.000000e+00, !dbg !9336
  %mul139 = fmul float %add135, %add138, !dbg !9337
  %div140 = fdiv float %mul132, %mul139, !dbg !9338
  %add141 = fadd float 1.000000e+00, %div140, !dbg !9339
  %mul142 = fmul float %div125, %add141, !dbg !9340
  store float %mul142, float* %f, align 4, !dbg !9341
  %117 = load float, float* %nh, align 4, !dbg !9342
  %call143 = call float @saacos(float %117), !dbg !9343
  store float %call143, float* %ang, align 4, !dbg !9344
  %118 = load float, float* %f, align 4, !dbg !9345
  %119 = load float, float* %g, align 4, !dbg !9346
  %mul144 = fmul float %118, %119, !dbg !9347
  %conv145 = fpext float %mul144 to double, !dbg !9345
  %120 = load float, float* %ang, align 4, !dbg !9348
  %121 = load float, float* %ang, align 4, !dbg !9349
  %mul146 = fmul float %120, %121, !dbg !9350
  %fneg = fneg float %mul146, !dbg !9351
  %122 = load float, float* %spec_power.addr, align 4, !dbg !9352
  %mul147 = fmul float 2.000000e+00, %122, !dbg !9353
  %123 = load float, float* %spec_power.addr, align 4, !dbg !9354
  %mul148 = fmul float %mul147, %123, !dbg !9355
  %div149 = fdiv float %fneg, %mul148, !dbg !9356
  %conv150 = fpext float %div149 to double, !dbg !9357
  %call151 = call double @exp(double %conv150) #6, !dbg !9358
  %mul152 = fmul double %conv145, %call151, !dbg !9359
  %conv153 = fptrunc double %mul152 to float, !dbg !9345
  store float %conv153, float* %i, align 4, !dbg !9360
  %124 = load float, float* %i, align 4, !dbg !9361
  %cmp154 = fcmp olt float %124, 0.000000e+00, !dbg !9363
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !9364

if.then156:                                       ; preds = %if.end112
  store float 0.000000e+00, float* %i, align 4, !dbg !9365
  br label %if.end157, !dbg !9366

if.end157:                                        ; preds = %if.then156, %if.end112
  %125 = load float, float* %i, align 4, !dbg !9367
  store float %125, float* %retval, align 4, !dbg !9368
  br label %return, !dbg !9368

return:                                           ; preds = %if.end157, %if.then75, %if.then34, %if.then2, %if.then
  %126 = load float, float* %retval, align 4, !dbg !9369
  ret float %126, !dbg !9369
}

; Function Attrs: noinline nounwind uwtable
define internal float @WardIso_Spec(float* %n, float* %l, float* %v, float %rms, i32 %tangent) #0 !dbg !9370 {
entry:
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %rms.addr = alloca float, align 4
  %tangent.addr = alloca i32, align 4
  %i = alloca float, align 4
  %nh = alloca float, align 4
  %nv = alloca float, align 4
  %nl = alloca float, align 4
  %h = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %alpha = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  store float %rms, float* %rms.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rms.addr, metadata !9379, metadata !DIExpression()), !dbg !9380
  store i32 %tangent, i32* %tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tangent.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata float* %i, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata float* %nh, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata float* %nv, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata float* %nl, metadata !9389, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata float* %angle, metadata !9393, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !9395, metadata !DIExpression()), !dbg !9396
  %0 = load float*, float** %l.addr, align 8, !dbg !9397
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9397
  %1 = load float, float* %arrayidx, align 4, !dbg !9397
  %2 = load float*, float** %v.addr, align 8, !dbg !9398
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9398
  %3 = load float, float* %arrayidx1, align 4, !dbg !9398
  %add = fadd float %1, %3, !dbg !9399
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9400
  store float %add, float* %arrayidx2, align 4, !dbg !9401
  %4 = load float*, float** %l.addr, align 8, !dbg !9402
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !9402
  %5 = load float, float* %arrayidx3, align 4, !dbg !9402
  %6 = load float*, float** %v.addr, align 8, !dbg !9403
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !9403
  %7 = load float, float* %arrayidx4, align 4, !dbg !9403
  %add5 = fadd float %5, %7, !dbg !9404
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9405
  store float %add5, float* %arrayidx6, align 4, !dbg !9406
  %8 = load float*, float** %l.addr, align 8, !dbg !9407
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9407
  %9 = load float, float* %arrayidx7, align 4, !dbg !9407
  %10 = load float*, float** %v.addr, align 8, !dbg !9408
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !9408
  %11 = load float, float* %arrayidx8, align 4, !dbg !9408
  %add9 = fadd float %9, %11, !dbg !9409
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9410
  store float %add9, float* %arrayidx10, align 4, !dbg !9411
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9412
  %call = call float @normalize_v3(float* %arraydecay), !dbg !9413
  %12 = load float*, float** %n.addr, align 8, !dbg !9414
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0, !dbg !9414
  %13 = load float, float* %arrayidx11, align 4, !dbg !9414
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9415
  %14 = load float, float* %arrayidx12, align 4, !dbg !9415
  %mul = fmul float %13, %14, !dbg !9416
  %15 = load float*, float** %n.addr, align 8, !dbg !9417
  %arrayidx13 = getelementptr inbounds float, float* %15, i64 1, !dbg !9417
  %16 = load float, float* %arrayidx13, align 4, !dbg !9417
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9418
  %17 = load float, float* %arrayidx14, align 4, !dbg !9418
  %mul15 = fmul float %16, %17, !dbg !9419
  %add16 = fadd float %mul, %mul15, !dbg !9420
  %18 = load float*, float** %n.addr, align 8, !dbg !9421
  %arrayidx17 = getelementptr inbounds float, float* %18, i64 2, !dbg !9421
  %19 = load float, float* %arrayidx17, align 4, !dbg !9421
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9422
  %20 = load float, float* %arrayidx18, align 4, !dbg !9422
  %mul19 = fmul float %19, %20, !dbg !9423
  %add20 = fadd float %add16, %mul19, !dbg !9424
  store float %add20, float* %nh, align 4, !dbg !9425
  %21 = load i32, i32* %tangent.addr, align 4, !dbg !9426
  %tobool = icmp ne i32 %21, 0, !dbg !9426
  br i1 %tobool, label %if.then, label %if.end, !dbg !9428

if.then:                                          ; preds = %entry
  %22 = load float, float* %nh, align 4, !dbg !9429
  %23 = load float, float* %nh, align 4, !dbg !9430
  %mul21 = fmul float %22, %23, !dbg !9431
  %sub = fsub float 1.000000e+00, %mul21, !dbg !9432
  %call22 = call float @sasqrt(float %sub), !dbg !9433
  store float %call22, float* %nh, align 4, !dbg !9434
  br label %if.end, !dbg !9435

if.end:                                           ; preds = %if.then, %entry
  %24 = load float, float* %nh, align 4, !dbg !9436
  %cmp = fcmp ole float %24, 0.000000e+00, !dbg !9438
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !9439

if.then23:                                        ; preds = %if.end
  store float 0x3F50624DE0000000, float* %nh, align 4, !dbg !9440
  br label %if.end24, !dbg !9441

if.end24:                                         ; preds = %if.then23, %if.end
  %25 = load float*, float** %n.addr, align 8, !dbg !9442
  %arrayidx25 = getelementptr inbounds float, float* %25, i64 0, !dbg !9442
  %26 = load float, float* %arrayidx25, align 4, !dbg !9442
  %27 = load float*, float** %v.addr, align 8, !dbg !9443
  %arrayidx26 = getelementptr inbounds float, float* %27, i64 0, !dbg !9443
  %28 = load float, float* %arrayidx26, align 4, !dbg !9443
  %mul27 = fmul float %26, %28, !dbg !9444
  %29 = load float*, float** %n.addr, align 8, !dbg !9445
  %arrayidx28 = getelementptr inbounds float, float* %29, i64 1, !dbg !9445
  %30 = load float, float* %arrayidx28, align 4, !dbg !9445
  %31 = load float*, float** %v.addr, align 8, !dbg !9446
  %arrayidx29 = getelementptr inbounds float, float* %31, i64 1, !dbg !9446
  %32 = load float, float* %arrayidx29, align 4, !dbg !9446
  %mul30 = fmul float %30, %32, !dbg !9447
  %add31 = fadd float %mul27, %mul30, !dbg !9448
  %33 = load float*, float** %n.addr, align 8, !dbg !9449
  %arrayidx32 = getelementptr inbounds float, float* %33, i64 2, !dbg !9449
  %34 = load float, float* %arrayidx32, align 4, !dbg !9449
  %35 = load float*, float** %v.addr, align 8, !dbg !9450
  %arrayidx33 = getelementptr inbounds float, float* %35, i64 2, !dbg !9450
  %36 = load float, float* %arrayidx33, align 4, !dbg !9450
  %mul34 = fmul float %34, %36, !dbg !9451
  %add35 = fadd float %add31, %mul34, !dbg !9452
  store float %add35, float* %nv, align 4, !dbg !9453
  %37 = load i32, i32* %tangent.addr, align 4, !dbg !9454
  %tobool36 = icmp ne i32 %37, 0, !dbg !9454
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !9456

if.then37:                                        ; preds = %if.end24
  %38 = load float, float* %nv, align 4, !dbg !9457
  %39 = load float, float* %nv, align 4, !dbg !9458
  %mul38 = fmul float %38, %39, !dbg !9459
  %sub39 = fsub float 1.000000e+00, %mul38, !dbg !9460
  %call40 = call float @sasqrt(float %sub39), !dbg !9461
  store float %call40, float* %nv, align 4, !dbg !9462
  br label %if.end41, !dbg !9463

if.end41:                                         ; preds = %if.then37, %if.end24
  %40 = load float, float* %nv, align 4, !dbg !9464
  %cmp42 = fcmp ole float %40, 0.000000e+00, !dbg !9466
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !9467

if.then43:                                        ; preds = %if.end41
  store float 0x3F50624DE0000000, float* %nv, align 4, !dbg !9468
  br label %if.end44, !dbg !9469

if.end44:                                         ; preds = %if.then43, %if.end41
  %41 = load float*, float** %n.addr, align 8, !dbg !9470
  %arrayidx45 = getelementptr inbounds float, float* %41, i64 0, !dbg !9470
  %42 = load float, float* %arrayidx45, align 4, !dbg !9470
  %43 = load float*, float** %l.addr, align 8, !dbg !9471
  %arrayidx46 = getelementptr inbounds float, float* %43, i64 0, !dbg !9471
  %44 = load float, float* %arrayidx46, align 4, !dbg !9471
  %mul47 = fmul float %42, %44, !dbg !9472
  %45 = load float*, float** %n.addr, align 8, !dbg !9473
  %arrayidx48 = getelementptr inbounds float, float* %45, i64 1, !dbg !9473
  %46 = load float, float* %arrayidx48, align 4, !dbg !9473
  %47 = load float*, float** %l.addr, align 8, !dbg !9474
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 1, !dbg !9474
  %48 = load float, float* %arrayidx49, align 4, !dbg !9474
  %mul50 = fmul float %46, %48, !dbg !9475
  %add51 = fadd float %mul47, %mul50, !dbg !9476
  %49 = load float*, float** %n.addr, align 8, !dbg !9477
  %arrayidx52 = getelementptr inbounds float, float* %49, i64 2, !dbg !9477
  %50 = load float, float* %arrayidx52, align 4, !dbg !9477
  %51 = load float*, float** %l.addr, align 8, !dbg !9478
  %arrayidx53 = getelementptr inbounds float, float* %51, i64 2, !dbg !9478
  %52 = load float, float* %arrayidx53, align 4, !dbg !9478
  %mul54 = fmul float %50, %52, !dbg !9479
  %add55 = fadd float %add51, %mul54, !dbg !9480
  store float %add55, float* %nl, align 4, !dbg !9481
  %53 = load i32, i32* %tangent.addr, align 4, !dbg !9482
  %tobool56 = icmp ne i32 %53, 0, !dbg !9482
  br i1 %tobool56, label %if.then57, label %if.end61, !dbg !9484

if.then57:                                        ; preds = %if.end44
  %54 = load float, float* %nl, align 4, !dbg !9485
  %55 = load float, float* %nl, align 4, !dbg !9486
  %mul58 = fmul float %54, %55, !dbg !9487
  %sub59 = fsub float 1.000000e+00, %mul58, !dbg !9488
  %call60 = call float @sasqrt(float %sub59), !dbg !9489
  store float %call60, float* %nl, align 4, !dbg !9490
  br label %if.end61, !dbg !9491

if.end61:                                         ; preds = %if.then57, %if.end44
  %56 = load float, float* %nl, align 4, !dbg !9492
  %cmp62 = fcmp ole float %56, 0.000000e+00, !dbg !9494
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !9495

if.then63:                                        ; preds = %if.end61
  store float 0x3F50624DE0000000, float* %nl, align 4, !dbg !9496
  br label %if.end64, !dbg !9497

if.end64:                                         ; preds = %if.then63, %if.end61
  %57 = load float, float* %nh, align 4, !dbg !9498
  %call65 = call float @saacos(float %57), !dbg !9499
  %call66 = call float @tanf(float %call65) #6, !dbg !9500
  store float %call66, float* %angle, align 4, !dbg !9501
  %58 = load float, float* %rms.addr, align 4, !dbg !9502
  %cmp67 = fcmp ogt float %58, 0x3F50624DE0000000, !dbg !9502
  br i1 %cmp67, label %cond.true, label %cond.false, !dbg !9502

cond.true:                                        ; preds = %if.end64
  %59 = load float, float* %rms.addr, align 4, !dbg !9502
  br label %cond.end, !dbg !9502

cond.false:                                       ; preds = %if.end64
  br label %cond.end, !dbg !9502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %59, %cond.true ], [ 0x3F50624DE0000000, %cond.false ], !dbg !9502
  store float %cond, float* %alpha, align 4, !dbg !9503
  %60 = load float, float* %nl, align 4, !dbg !9504
  %61 = load float, float* %alpha, align 4, !dbg !9505
  %mul68 = fmul float 0x402921FB60000000, %61, !dbg !9506
  %62 = load float, float* %alpha, align 4, !dbg !9507
  %mul69 = fmul float %mul68, %62, !dbg !9508
  %div = fdiv float 1.000000e+00, %mul69, !dbg !9509
  %mul70 = fmul float %60, %div, !dbg !9510
  %63 = load float, float* %angle, align 4, !dbg !9511
  %64 = load float, float* %angle, align 4, !dbg !9512
  %mul71 = fmul float %63, %64, !dbg !9513
  %fneg = fneg float %mul71, !dbg !9514
  %65 = load float, float* %alpha, align 4, !dbg !9515
  %66 = load float, float* %alpha, align 4, !dbg !9516
  %mul72 = fmul float %65, %66, !dbg !9517
  %div73 = fdiv float %fneg, %mul72, !dbg !9518
  %call74 = call float @expf(float %div73) #6, !dbg !9519
  %67 = load float, float* %nv, align 4, !dbg !9520
  %68 = load float, float* %nl, align 4, !dbg !9521
  %mul75 = fmul float %67, %68, !dbg !9522
  %call76 = call float @sqrtf(float %mul75) #6, !dbg !9523
  %div77 = fdiv float %call74, %call76, !dbg !9524
  %mul78 = fmul float %mul70, %div77, !dbg !9525
  store float %mul78, float* %i, align 4, !dbg !9526
  %69 = load float, float* %i, align 4, !dbg !9527
  ret float %69, !dbg !9528
}

; Function Attrs: noinline nounwind uwtable
define internal float @Toon_Spec(float* %n, float* %l, float* %v, float %size, float %smooth, i32 %tangent) #0 !dbg !9529 {
entry:
  %n.addr = alloca float*, align 8
  %l.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %size.addr = alloca float, align 4
  %smooth.addr = alloca float, align 4
  %tangent.addr = alloca i32, align 4
  %h = alloca [3 x float], align 4
  %ang = alloca float, align 4
  %rslt = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9530, metadata !DIExpression()), !dbg !9531
  store float* %l, float** %l.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l.addr, metadata !9532, metadata !DIExpression()), !dbg !9533
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9534, metadata !DIExpression()), !dbg !9535
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !9536, metadata !DIExpression()), !dbg !9537
  store float %smooth, float* %smooth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %smooth.addr, metadata !9538, metadata !DIExpression()), !dbg !9539
  store i32 %tangent, i32* %tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tangent.addr, metadata !9540, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.declare(metadata [3 x float]* %h, metadata !9542, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.declare(metadata float* %ang, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.declare(metadata float* %rslt, metadata !9546, metadata !DIExpression()), !dbg !9547
  %0 = load float*, float** %l.addr, align 8, !dbg !9548
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9548
  %1 = load float, float* %arrayidx, align 4, !dbg !9548
  %2 = load float*, float** %v.addr, align 8, !dbg !9549
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9549
  %3 = load float, float* %arrayidx1, align 4, !dbg !9549
  %add = fadd float %1, %3, !dbg !9550
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9551
  store float %add, float* %arrayidx2, align 4, !dbg !9552
  %4 = load float*, float** %l.addr, align 8, !dbg !9553
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !9553
  %5 = load float, float* %arrayidx3, align 4, !dbg !9553
  %6 = load float*, float** %v.addr, align 8, !dbg !9554
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !9554
  %7 = load float, float* %arrayidx4, align 4, !dbg !9554
  %add5 = fadd float %5, %7, !dbg !9555
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9556
  store float %add5, float* %arrayidx6, align 4, !dbg !9557
  %8 = load float*, float** %l.addr, align 8, !dbg !9558
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9558
  %9 = load float, float* %arrayidx7, align 4, !dbg !9558
  %10 = load float*, float** %v.addr, align 8, !dbg !9559
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !9559
  %11 = load float, float* %arrayidx8, align 4, !dbg !9559
  %add9 = fadd float %9, %11, !dbg !9560
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9561
  store float %add9, float* %arrayidx10, align 4, !dbg !9562
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9563
  %call = call float @normalize_v3(float* %arraydecay), !dbg !9564
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 0, !dbg !9565
  %12 = load float, float* %arrayidx11, align 4, !dbg !9565
  %13 = load float*, float** %n.addr, align 8, !dbg !9566
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 0, !dbg !9566
  %14 = load float, float* %arrayidx12, align 4, !dbg !9566
  %mul = fmul float %12, %14, !dbg !9567
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 1, !dbg !9568
  %15 = load float, float* %arrayidx13, align 4, !dbg !9568
  %16 = load float*, float** %n.addr, align 8, !dbg !9569
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !9569
  %17 = load float, float* %arrayidx14, align 4, !dbg !9569
  %mul15 = fmul float %15, %17, !dbg !9570
  %add16 = fadd float %mul, %mul15, !dbg !9571
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %h, i64 0, i64 2, !dbg !9572
  %18 = load float, float* %arrayidx17, align 4, !dbg !9572
  %19 = load float*, float** %n.addr, align 8, !dbg !9573
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 2, !dbg !9573
  %20 = load float, float* %arrayidx18, align 4, !dbg !9573
  %mul19 = fmul float %18, %20, !dbg !9574
  %add20 = fadd float %add16, %mul19, !dbg !9575
  store float %add20, float* %rslt, align 4, !dbg !9576
  %21 = load i32, i32* %tangent.addr, align 4, !dbg !9577
  %tobool = icmp ne i32 %21, 0, !dbg !9577
  br i1 %tobool, label %if.then, label %if.end, !dbg !9579

if.then:                                          ; preds = %entry
  %22 = load float, float* %rslt, align 4, !dbg !9580
  %23 = load float, float* %rslt, align 4, !dbg !9581
  %mul21 = fmul float %22, %23, !dbg !9582
  %sub = fsub float 1.000000e+00, %mul21, !dbg !9583
  %call22 = call float @sasqrt(float %sub), !dbg !9584
  store float %call22, float* %rslt, align 4, !dbg !9585
  br label %if.end, !dbg !9586

if.end:                                           ; preds = %if.then, %entry
  %24 = load float, float* %rslt, align 4, !dbg !9587
  %call23 = call float @saacos(float %24), !dbg !9588
  store float %call23, float* %ang, align 4, !dbg !9589
  %25 = load float, float* %ang, align 4, !dbg !9590
  %26 = load float, float* %size.addr, align 4, !dbg !9592
  %cmp = fcmp olt float %25, %26, !dbg !9593
  br i1 %cmp, label %if.then24, label %if.else, !dbg !9594

if.then24:                                        ; preds = %if.end
  store float 1.000000e+00, float* %rslt, align 4, !dbg !9595
  br label %if.end33, !dbg !9596

if.else:                                          ; preds = %if.end
  %27 = load float, float* %ang, align 4, !dbg !9597
  %28 = load float, float* %size.addr, align 4, !dbg !9599
  %29 = load float, float* %smooth.addr, align 4, !dbg !9600
  %add25 = fadd float %28, %29, !dbg !9601
  %cmp26 = fcmp oge float %27, %add25, !dbg !9602
  br i1 %cmp26, label %if.then28, label %lor.lhs.false, !dbg !9603

lor.lhs.false:                                    ; preds = %if.else
  %30 = load float, float* %smooth.addr, align 4, !dbg !9604
  %cmp27 = fcmp oeq float %30, 0.000000e+00, !dbg !9605
  br i1 %cmp27, label %if.then28, label %if.else29, !dbg !9606

if.then28:                                        ; preds = %lor.lhs.false, %if.else
  store float 0.000000e+00, float* %rslt, align 4, !dbg !9607
  br label %if.end32, !dbg !9608

if.else29:                                        ; preds = %lor.lhs.false
  %31 = load float, float* %ang, align 4, !dbg !9609
  %32 = load float, float* %size.addr, align 4, !dbg !9610
  %sub30 = fsub float %31, %32, !dbg !9611
  %33 = load float, float* %smooth.addr, align 4, !dbg !9612
  %div = fdiv float %sub30, %33, !dbg !9613
  %sub31 = fsub float 1.000000e+00, %div, !dbg !9614
  store float %sub31, float* %rslt, align 4, !dbg !9615
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then28
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then24
  %34 = load float, float* %rslt, align 4, !dbg !9616
  ret float %34, !dbg !9617
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_specular_ramp(%struct.ShadeInput* %shi, float %is, float %t, float* %spec) #0 !dbg !9618 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %is.addr = alloca float, align 4
  %t.addr = alloca float, align 4
  %spec.addr = alloca float*, align 8
  %ma = alloca %struct.Material*, align 8
  %fac = alloca float, align 4
  %col = alloca [4 x float], align 16
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9621, metadata !DIExpression()), !dbg !9622
  store float %is, float* %is.addr, align 4
  call void @llvm.dbg.declare(metadata float* %is.addr, metadata !9623, metadata !DIExpression()), !dbg !9624
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  store float* %spec, float** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %spec.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !9629, metadata !DIExpression()), !dbg !9630
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9631
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !9632
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !9632
  store %struct.Material* %1, %struct.Material** %ma, align 8, !dbg !9630
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9633
  %specr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 35, !dbg !9634
  %3 = load float, float* %specr, align 8, !dbg !9634
  %4 = load float*, float** %spec.addr, align 8, !dbg !9635
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !9635
  store float %3, float* %arrayidx, align 4, !dbg !9636
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9637
  %specg = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 36, !dbg !9638
  %6 = load float, float* %specg, align 4, !dbg !9638
  %7 = load float*, float** %spec.addr, align 8, !dbg !9639
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 1, !dbg !9639
  store float %6, float* %arrayidx1, align 4, !dbg !9640
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9641
  %specb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 37, !dbg !9642
  %9 = load float, float* %specb, align 8, !dbg !9642
  %10 = load float*, float** %spec.addr, align 8, !dbg !9643
  %arrayidx2 = getelementptr inbounds float, float* %10, i64 2, !dbg !9643
  store float %9, float* %arrayidx2, align 4, !dbg !9644
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9645
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 93, !dbg !9647
  %12 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !9647
  %tobool = icmp ne %struct.ColorBand* %12, null, !dbg !9645
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9648

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9649
  %rampin_spec = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 95, !dbg !9650
  %14 = load i8, i8* %rampin_spec, align 1, !dbg !9650
  %conv = zext i8 %14 to i32, !dbg !9649
  %cmp = icmp ne i32 %conv, 3, !dbg !9651
  br i1 %cmp, label %if.then, label %if.end, !dbg !9652

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9653, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !9656, metadata !DIExpression()), !dbg !9657
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9658
  %rampin_spec4 = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 95, !dbg !9659
  %16 = load i8, i8* %rampin_spec4, align 1, !dbg !9659
  %conv5 = zext i8 %16 to i32, !dbg !9658
  switch i32 %conv5, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !9660

sw.bb:                                            ; preds = %if.then
  %17 = load float, float* %t.addr, align 4, !dbg !9661
  store float %17, float* %fac, align 4, !dbg !9663
  br label %sw.epilog, !dbg !9664

sw.bb6:                                           ; preds = %if.then
  %18 = load float, float* %is.addr, align 4, !dbg !9665
  store float %18, float* %fac, align 4, !dbg !9666
  br label %sw.epilog, !dbg !9667

sw.bb7:                                           ; preds = %if.then
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9668
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 30, !dbg !9669
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !9668
  %20 = load float, float* %arrayidx8, align 4, !dbg !9668
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9670
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 16, !dbg !9671
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !9670
  %22 = load float, float* %arrayidx9, align 4, !dbg !9670
  %mul = fmul float %20, %22, !dbg !9672
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9673
  %view10 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 30, !dbg !9674
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %view10, i64 0, i64 1, !dbg !9673
  %24 = load float, float* %arrayidx11, align 4, !dbg !9673
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9675
  %vn12 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 16, !dbg !9676
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %vn12, i64 0, i64 1, !dbg !9675
  %26 = load float, float* %arrayidx13, align 4, !dbg !9675
  %mul14 = fmul float %24, %26, !dbg !9677
  %add = fadd float %mul, %mul14, !dbg !9678
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9679
  %view15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 30, !dbg !9680
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %view15, i64 0, i64 2, !dbg !9679
  %28 = load float, float* %arrayidx16, align 4, !dbg !9679
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9681
  %vn17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 16, !dbg !9682
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %vn17, i64 0, i64 2, !dbg !9681
  %30 = load float, float* %arrayidx18, align 4, !dbg !9681
  %mul19 = fmul float %28, %30, !dbg !9683
  %add20 = fadd float %add, %mul19, !dbg !9684
  store float %add20, float* %fac, align 4, !dbg !9685
  br label %sw.epilog, !dbg !9686

sw.default:                                       ; preds = %if.then
  store float 0.000000e+00, float* %fac, align 4, !dbg !9687
  br label %sw.epilog, !dbg !9688

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb
  %31 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9689
  %ramp_spec21 = getelementptr inbounds %struct.Material, %struct.Material* %31, i32 0, i32 93, !dbg !9690
  %32 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec21, align 8, !dbg !9690
  %33 = load float, float* %fac, align 4, !dbg !9691
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !9692
  %call = call zeroext i8 @do_colorband(%struct.ColorBand* %32, float %33, float* %arraydecay), !dbg !9693
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !9694
  %34 = load float, float* %arrayidx22, align 4, !dbg !9694
  %35 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9695
  %rampfac_spec = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 101, !dbg !9696
  %36 = load float, float* %rampfac_spec, align 4, !dbg !9696
  %mul23 = fmul float %34, %36, !dbg !9697
  store float %mul23, float* %fac, align 4, !dbg !9698
  %37 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9699
  %rampblend_spec = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 97, !dbg !9700
  %38 = load i8, i8* %rampblend_spec, align 1, !dbg !9700
  %conv24 = zext i8 %38 to i32, !dbg !9699
  %39 = load float*, float** %spec.addr, align 8, !dbg !9701
  %40 = load float, float* %fac, align 4, !dbg !9702
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !9703
  call void @ramp_blend(i32 %conv24, float* %39, float %40, float* %arraydecay25), !dbg !9704
  br label %if.end, !dbg !9705

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %entry
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !9707 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.declare(metadata float* %d, metadata !9714, metadata !DIExpression()), !dbg !9715
  %0 = load float*, float** %a.addr, align 8, !dbg !9716
  %1 = load float*, float** %a.addr, align 8, !dbg !9717
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9718
  store float %call, float* %d, align 4, !dbg !9715
  %2 = load float, float* %d, align 4, !dbg !9719
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !9721
  br i1 %cmp, label %if.then, label %if.else, !dbg !9722

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !9723
  %call1 = call float @sqrtf(float %3) #6, !dbg !9725
  store float %call1, float* %d, align 4, !dbg !9726
  %4 = load float*, float** %r.addr, align 8, !dbg !9727
  %5 = load float*, float** %a.addr, align 8, !dbg !9728
  %6 = load float, float* %d, align 4, !dbg !9729
  %div = fdiv float 1.000000e+00, %6, !dbg !9730
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !9731
  br label %if.end, !dbg !9732

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !9733
  call void @zero_v3(float* %7), !dbg !9735
  store float 0.000000e+00, float* %d, align 4, !dbg !9736
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !9737
  ret float %8, !dbg !9738
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !9739 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  %0 = load float*, float** %a.addr, align 8, !dbg !9748
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9748
  %1 = load float, float* %arrayidx, align 4, !dbg !9748
  %2 = load float, float* %f.addr, align 4, !dbg !9749
  %mul = fmul float %1, %2, !dbg !9750
  %3 = load float*, float** %r.addr, align 8, !dbg !9751
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9751
  store float %mul, float* %arrayidx1, align 4, !dbg !9752
  %4 = load float*, float** %a.addr, align 8, !dbg !9753
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9753
  %5 = load float, float* %arrayidx2, align 4, !dbg !9753
  %6 = load float, float* %f.addr, align 4, !dbg !9754
  %mul3 = fmul float %5, %6, !dbg !9755
  %7 = load float*, float** %r.addr, align 8, !dbg !9756
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9756
  store float %mul3, float* %arrayidx4, align 4, !dbg !9757
  %8 = load float*, float** %a.addr, align 8, !dbg !9758
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9758
  %9 = load float, float* %arrayidx5, align 4, !dbg !9758
  %10 = load float, float* %f.addr, align 4, !dbg !9759
  %mul6 = fmul float %9, %10, !dbg !9760
  %11 = load float*, float** %r.addr, align 8, !dbg !9761
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !9761
  store float %mul6, float* %arrayidx7, align 4, !dbg !9762
  ret void, !dbg !9763
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !9764 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9769, metadata !DIExpression()), !dbg !9770
  %0 = load float*, float** %a.addr, align 8, !dbg !9771
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9771
  %1 = load float, float* %arrayidx, align 4, !dbg !9771
  %2 = load float*, float** %b.addr, align 8, !dbg !9772
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9772
  %3 = load float, float* %arrayidx1, align 4, !dbg !9772
  %add = fadd float %1, %3, !dbg !9773
  %4 = load float*, float** %r.addr, align 8, !dbg !9774
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9774
  store float %add, float* %arrayidx2, align 4, !dbg !9775
  %5 = load float*, float** %a.addr, align 8, !dbg !9776
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9776
  %6 = load float, float* %arrayidx3, align 4, !dbg !9776
  %7 = load float*, float** %b.addr, align 8, !dbg !9777
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9777
  %8 = load float, float* %arrayidx4, align 4, !dbg !9777
  %add5 = fadd float %6, %8, !dbg !9778
  %9 = load float*, float** %r.addr, align 8, !dbg !9779
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9779
  store float %add5, float* %arrayidx6, align 4, !dbg !9780
  %10 = load float*, float** %a.addr, align 8, !dbg !9781
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !9781
  %11 = load float, float* %arrayidx7, align 4, !dbg !9781
  %12 = load float*, float** %b.addr, align 8, !dbg !9782
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !9782
  %13 = load float, float* %arrayidx8, align 4, !dbg !9782
  %add9 = fadd float %11, %13, !dbg !9783
  %14 = load float*, float** %r.addr, align 8, !dbg !9784
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !9784
  store float %add9, float* %arrayidx10, align 4, !dbg !9785
  ret void, !dbg !9786
}

; Function Attrs: noinline nounwind uwtable
define internal float @area_lamp_energy([3 x float]* %area, float* %co, float* %vn) #0 !dbg !9787 {
entry:
  %retval = alloca float, align 4
  %area.addr = alloca [3 x float]*, align 8
  %co.addr = alloca float*, align 8
  %vn.addr = alloca float*, align 8
  %fac = alloca double, align 8
  %vec = alloca [4 x [3 x double]], align 16
  %cross = alloca [4 x [3 x double]], align 16
  %rad = alloca [4 x double], align 16
  store [3 x float]* %area, [3 x float]** %area.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %area.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store float* %vn, float** %vn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vn.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.declare(metadata double* %fac, metadata !9796, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.declare(metadata [4 x [3 x double]]* %vec, metadata !9798, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.declare(metadata [4 x [3 x double]]* %cross, metadata !9801, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.declare(metadata [4 x double]* %rad, metadata !9803, metadata !DIExpression()), !dbg !9805
  %0 = load float*, float** %co.addr, align 8, !dbg !9806
  %1 = load float, float* %0, align 4, !dbg !9806
  %2 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9806
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, !dbg !9806
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9806
  %3 = load float, float* %arraydecay, align 4, !dbg !9806
  %sub = fsub float %1, %3, !dbg !9806
  %conv = fpext float %sub to double, !dbg !9806
  %arrayidx1 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9806
  %arraydecay2 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx1, i64 0, i64 0, !dbg !9806
  store double %conv, double* %arraydecay2, align 16, !dbg !9806
  %4 = load float*, float** %co.addr, align 8, !dbg !9806
  %add.ptr = getelementptr inbounds float, float* %4, i64 1, !dbg !9806
  %5 = load float, float* %add.ptr, align 4, !dbg !9806
  %6 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9806
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, !dbg !9806
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !9806
  %add.ptr5 = getelementptr inbounds float, float* %arraydecay4, i64 1, !dbg !9806
  %7 = load float, float* %add.ptr5, align 4, !dbg !9806
  %sub6 = fsub float %5, %7, !dbg !9806
  %conv7 = fpext float %sub6 to double, !dbg !9806
  %arrayidx8 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9806
  %arraydecay9 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx8, i64 0, i64 0, !dbg !9806
  %add.ptr10 = getelementptr inbounds double, double* %arraydecay9, i64 1, !dbg !9806
  store double %conv7, double* %add.ptr10, align 8, !dbg !9806
  %8 = load float*, float** %co.addr, align 8, !dbg !9806
  %add.ptr11 = getelementptr inbounds float, float* %8, i64 2, !dbg !9806
  %9 = load float, float* %add.ptr11, align 4, !dbg !9806
  %10 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9806
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 0, !dbg !9806
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !9806
  %add.ptr14 = getelementptr inbounds float, float* %arraydecay13, i64 2, !dbg !9806
  %11 = load float, float* %add.ptr14, align 4, !dbg !9806
  %sub15 = fsub float %9, %11, !dbg !9806
  %conv16 = fpext float %sub15 to double, !dbg !9806
  %arrayidx17 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9806
  %arraydecay18 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx17, i64 0, i64 0, !dbg !9806
  %add.ptr19 = getelementptr inbounds double, double* %arraydecay18, i64 2, !dbg !9806
  store double %conv16, double* %add.ptr19, align 8, !dbg !9806
  %12 = load float*, float** %co.addr, align 8, !dbg !9808
  %13 = load float, float* %12, align 4, !dbg !9808
  %14 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9808
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 1, !dbg !9808
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !9808
  %15 = load float, float* %arraydecay21, align 4, !dbg !9808
  %sub22 = fsub float %13, %15, !dbg !9808
  %conv23 = fpext float %sub22 to double, !dbg !9808
  %arrayidx24 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9808
  %arraydecay25 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx24, i64 0, i64 0, !dbg !9808
  store double %conv23, double* %arraydecay25, align 8, !dbg !9808
  %16 = load float*, float** %co.addr, align 8, !dbg !9808
  %add.ptr26 = getelementptr inbounds float, float* %16, i64 1, !dbg !9808
  %17 = load float, float* %add.ptr26, align 4, !dbg !9808
  %18 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9808
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %18, i64 1, !dbg !9808
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !9808
  %add.ptr29 = getelementptr inbounds float, float* %arraydecay28, i64 1, !dbg !9808
  %19 = load float, float* %add.ptr29, align 4, !dbg !9808
  %sub30 = fsub float %17, %19, !dbg !9808
  %conv31 = fpext float %sub30 to double, !dbg !9808
  %arrayidx32 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9808
  %arraydecay33 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx32, i64 0, i64 0, !dbg !9808
  %add.ptr34 = getelementptr inbounds double, double* %arraydecay33, i64 1, !dbg !9808
  store double %conv31, double* %add.ptr34, align 8, !dbg !9808
  %20 = load float*, float** %co.addr, align 8, !dbg !9808
  %add.ptr35 = getelementptr inbounds float, float* %20, i64 2, !dbg !9808
  %21 = load float, float* %add.ptr35, align 4, !dbg !9808
  %22 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9808
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %22, i64 1, !dbg !9808
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !9808
  %add.ptr38 = getelementptr inbounds float, float* %arraydecay37, i64 2, !dbg !9808
  %23 = load float, float* %add.ptr38, align 4, !dbg !9808
  %sub39 = fsub float %21, %23, !dbg !9808
  %conv40 = fpext float %sub39 to double, !dbg !9808
  %arrayidx41 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9808
  %arraydecay42 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx41, i64 0, i64 0, !dbg !9808
  %add.ptr43 = getelementptr inbounds double, double* %arraydecay42, i64 2, !dbg !9808
  store double %conv40, double* %add.ptr43, align 8, !dbg !9808
  %24 = load float*, float** %co.addr, align 8, !dbg !9810
  %25 = load float, float* %24, align 4, !dbg !9810
  %26 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9810
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 2, !dbg !9810
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !9810
  %27 = load float, float* %arraydecay45, align 4, !dbg !9810
  %sub46 = fsub float %25, %27, !dbg !9810
  %conv47 = fpext float %sub46 to double, !dbg !9810
  %arrayidx48 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9810
  %arraydecay49 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx48, i64 0, i64 0, !dbg !9810
  store double %conv47, double* %arraydecay49, align 16, !dbg !9810
  %28 = load float*, float** %co.addr, align 8, !dbg !9810
  %add.ptr50 = getelementptr inbounds float, float* %28, i64 1, !dbg !9810
  %29 = load float, float* %add.ptr50, align 4, !dbg !9810
  %30 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9810
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 2, !dbg !9810
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx51, i64 0, i64 0, !dbg !9810
  %add.ptr53 = getelementptr inbounds float, float* %arraydecay52, i64 1, !dbg !9810
  %31 = load float, float* %add.ptr53, align 4, !dbg !9810
  %sub54 = fsub float %29, %31, !dbg !9810
  %conv55 = fpext float %sub54 to double, !dbg !9810
  %arrayidx56 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9810
  %arraydecay57 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx56, i64 0, i64 0, !dbg !9810
  %add.ptr58 = getelementptr inbounds double, double* %arraydecay57, i64 1, !dbg !9810
  store double %conv55, double* %add.ptr58, align 8, !dbg !9810
  %32 = load float*, float** %co.addr, align 8, !dbg !9810
  %add.ptr59 = getelementptr inbounds float, float* %32, i64 2, !dbg !9810
  %33 = load float, float* %add.ptr59, align 4, !dbg !9810
  %34 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9810
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %34, i64 2, !dbg !9810
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !9810
  %add.ptr62 = getelementptr inbounds float, float* %arraydecay61, i64 2, !dbg !9810
  %35 = load float, float* %add.ptr62, align 4, !dbg !9810
  %sub63 = fsub float %33, %35, !dbg !9810
  %conv64 = fpext float %sub63 to double, !dbg !9810
  %arrayidx65 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9810
  %arraydecay66 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx65, i64 0, i64 0, !dbg !9810
  %add.ptr67 = getelementptr inbounds double, double* %arraydecay66, i64 2, !dbg !9810
  store double %conv64, double* %add.ptr67, align 8, !dbg !9810
  %36 = load float*, float** %co.addr, align 8, !dbg !9812
  %37 = load float, float* %36, align 4, !dbg !9812
  %38 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9812
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %38, i64 3, !dbg !9812
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx68, i64 0, i64 0, !dbg !9812
  %39 = load float, float* %arraydecay69, align 4, !dbg !9812
  %sub70 = fsub float %37, %39, !dbg !9812
  %conv71 = fpext float %sub70 to double, !dbg !9812
  %arrayidx72 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9812
  %arraydecay73 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx72, i64 0, i64 0, !dbg !9812
  store double %conv71, double* %arraydecay73, align 8, !dbg !9812
  %40 = load float*, float** %co.addr, align 8, !dbg !9812
  %add.ptr74 = getelementptr inbounds float, float* %40, i64 1, !dbg !9812
  %41 = load float, float* %add.ptr74, align 4, !dbg !9812
  %42 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9812
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 3, !dbg !9812
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx75, i64 0, i64 0, !dbg !9812
  %add.ptr77 = getelementptr inbounds float, float* %arraydecay76, i64 1, !dbg !9812
  %43 = load float, float* %add.ptr77, align 4, !dbg !9812
  %sub78 = fsub float %41, %43, !dbg !9812
  %conv79 = fpext float %sub78 to double, !dbg !9812
  %arrayidx80 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9812
  %arraydecay81 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx80, i64 0, i64 0, !dbg !9812
  %add.ptr82 = getelementptr inbounds double, double* %arraydecay81, i64 1, !dbg !9812
  store double %conv79, double* %add.ptr82, align 8, !dbg !9812
  %44 = load float*, float** %co.addr, align 8, !dbg !9812
  %add.ptr83 = getelementptr inbounds float, float* %44, i64 2, !dbg !9812
  %45 = load float, float* %add.ptr83, align 4, !dbg !9812
  %46 = load [3 x float]*, [3 x float]** %area.addr, align 8, !dbg !9812
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %46, i64 3, !dbg !9812
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx84, i64 0, i64 0, !dbg !9812
  %add.ptr86 = getelementptr inbounds float, float* %arraydecay85, i64 2, !dbg !9812
  %47 = load float, float* %add.ptr86, align 4, !dbg !9812
  %sub87 = fsub float %45, %47, !dbg !9812
  %conv88 = fpext float %sub87 to double, !dbg !9812
  %arrayidx89 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9812
  %arraydecay90 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx89, i64 0, i64 0, !dbg !9812
  %add.ptr91 = getelementptr inbounds double, double* %arraydecay90, i64 2, !dbg !9812
  store double %conv88, double* %add.ptr91, align 8, !dbg !9812
  %arrayidx92 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9814
  %arraydecay93 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx92, i64 0, i64 0, !dbg !9814
  %call = call double @Normalize_d(double* %arraydecay93), !dbg !9815
  %arrayidx94 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9816
  %arraydecay95 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx94, i64 0, i64 0, !dbg !9816
  %call96 = call double @Normalize_d(double* %arraydecay95), !dbg !9817
  %arrayidx97 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9818
  %arraydecay98 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx97, i64 0, i64 0, !dbg !9818
  %call99 = call double @Normalize_d(double* %arraydecay98), !dbg !9819
  %arrayidx100 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9820
  %arraydecay101 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx100, i64 0, i64 0, !dbg !9820
  %call102 = call double @Normalize_d(double* %arraydecay101), !dbg !9821
  %arrayidx103 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx104 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx103, i64 0, i64 1, !dbg !9822
  %48 = load double, double* %arrayidx104, align 8, !dbg !9822
  %arrayidx105 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx106 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx105, i64 0, i64 2, !dbg !9822
  %49 = load double, double* %arrayidx106, align 8, !dbg !9822
  %mul = fmul double %48, %49, !dbg !9822
  %arrayidx107 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx108 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx107, i64 0, i64 2, !dbg !9822
  %50 = load double, double* %arrayidx108, align 16, !dbg !9822
  %arrayidx109 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx110 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx109, i64 0, i64 1, !dbg !9822
  %51 = load double, double* %arrayidx110, align 8, !dbg !9822
  %mul111 = fmul double %50, %51, !dbg !9822
  %sub112 = fsub double %mul, %mul111, !dbg !9822
  %arrayidx113 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9822
  %arrayidx114 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx113, i64 0, i64 0, !dbg !9822
  store double %sub112, double* %arrayidx114, align 16, !dbg !9822
  %arrayidx115 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx116 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx115, i64 0, i64 2, !dbg !9822
  %52 = load double, double* %arrayidx116, align 16, !dbg !9822
  %arrayidx117 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx118 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx117, i64 0, i64 0, !dbg !9822
  %53 = load double, double* %arrayidx118, align 8, !dbg !9822
  %mul119 = fmul double %52, %53, !dbg !9822
  %arrayidx120 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx121 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx120, i64 0, i64 0, !dbg !9822
  %54 = load double, double* %arrayidx121, align 16, !dbg !9822
  %arrayidx122 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx123 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx122, i64 0, i64 2, !dbg !9822
  %55 = load double, double* %arrayidx123, align 8, !dbg !9822
  %mul124 = fmul double %54, %55, !dbg !9822
  %sub125 = fsub double %mul119, %mul124, !dbg !9822
  %arrayidx126 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9822
  %arrayidx127 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx126, i64 0, i64 1, !dbg !9822
  store double %sub125, double* %arrayidx127, align 8, !dbg !9822
  %arrayidx128 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx129 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx128, i64 0, i64 0, !dbg !9822
  %56 = load double, double* %arrayidx129, align 16, !dbg !9822
  %arrayidx130 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx131 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx130, i64 0, i64 1, !dbg !9822
  %57 = load double, double* %arrayidx131, align 8, !dbg !9822
  %mul132 = fmul double %56, %57, !dbg !9822
  %arrayidx133 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9822
  %arrayidx134 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx133, i64 0, i64 1, !dbg !9822
  %58 = load double, double* %arrayidx134, align 8, !dbg !9822
  %arrayidx135 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9822
  %arrayidx136 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx135, i64 0, i64 0, !dbg !9822
  %59 = load double, double* %arrayidx136, align 8, !dbg !9822
  %mul137 = fmul double %58, %59, !dbg !9822
  %sub138 = fsub double %mul132, %mul137, !dbg !9822
  %arrayidx139 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9822
  %arrayidx140 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx139, i64 0, i64 2, !dbg !9822
  store double %sub138, double* %arrayidx140, align 16, !dbg !9822
  %arrayidx141 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx142 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx141, i64 0, i64 1, !dbg !9824
  %60 = load double, double* %arrayidx142, align 8, !dbg !9824
  %arrayidx143 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx144 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx143, i64 0, i64 2, !dbg !9824
  %61 = load double, double* %arrayidx144, align 16, !dbg !9824
  %mul145 = fmul double %60, %61, !dbg !9824
  %arrayidx146 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx147 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx146, i64 0, i64 2, !dbg !9824
  %62 = load double, double* %arrayidx147, align 8, !dbg !9824
  %arrayidx148 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx149 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx148, i64 0, i64 1, !dbg !9824
  %63 = load double, double* %arrayidx149, align 8, !dbg !9824
  %mul150 = fmul double %62, %63, !dbg !9824
  %sub151 = fsub double %mul145, %mul150, !dbg !9824
  %arrayidx152 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9824
  %arrayidx153 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx152, i64 0, i64 0, !dbg !9824
  store double %sub151, double* %arrayidx153, align 8, !dbg !9824
  %arrayidx154 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx155 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx154, i64 0, i64 2, !dbg !9824
  %64 = load double, double* %arrayidx155, align 8, !dbg !9824
  %arrayidx156 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx157 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx156, i64 0, i64 0, !dbg !9824
  %65 = load double, double* %arrayidx157, align 16, !dbg !9824
  %mul158 = fmul double %64, %65, !dbg !9824
  %arrayidx159 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx160 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx159, i64 0, i64 0, !dbg !9824
  %66 = load double, double* %arrayidx160, align 8, !dbg !9824
  %arrayidx161 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx162 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx161, i64 0, i64 2, !dbg !9824
  %67 = load double, double* %arrayidx162, align 16, !dbg !9824
  %mul163 = fmul double %66, %67, !dbg !9824
  %sub164 = fsub double %mul158, %mul163, !dbg !9824
  %arrayidx165 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9824
  %arrayidx166 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx165, i64 0, i64 1, !dbg !9824
  store double %sub164, double* %arrayidx166, align 8, !dbg !9824
  %arrayidx167 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx168 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx167, i64 0, i64 0, !dbg !9824
  %68 = load double, double* %arrayidx168, align 8, !dbg !9824
  %arrayidx169 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx170 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx169, i64 0, i64 1, !dbg !9824
  %69 = load double, double* %arrayidx170, align 8, !dbg !9824
  %mul171 = fmul double %68, %69, !dbg !9824
  %arrayidx172 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9824
  %arrayidx173 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx172, i64 0, i64 1, !dbg !9824
  %70 = load double, double* %arrayidx173, align 8, !dbg !9824
  %arrayidx174 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9824
  %arrayidx175 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx174, i64 0, i64 0, !dbg !9824
  %71 = load double, double* %arrayidx175, align 16, !dbg !9824
  %mul176 = fmul double %70, %71, !dbg !9824
  %sub177 = fsub double %mul171, %mul176, !dbg !9824
  %arrayidx178 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9824
  %arrayidx179 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx178, i64 0, i64 2, !dbg !9824
  store double %sub177, double* %arrayidx179, align 8, !dbg !9824
  %arrayidx180 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx181 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx180, i64 0, i64 1, !dbg !9826
  %72 = load double, double* %arrayidx181, align 8, !dbg !9826
  %arrayidx182 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx183 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx182, i64 0, i64 2, !dbg !9826
  %73 = load double, double* %arrayidx183, align 8, !dbg !9826
  %mul184 = fmul double %72, %73, !dbg !9826
  %arrayidx185 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx186 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx185, i64 0, i64 2, !dbg !9826
  %74 = load double, double* %arrayidx186, align 16, !dbg !9826
  %arrayidx187 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx188 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx187, i64 0, i64 1, !dbg !9826
  %75 = load double, double* %arrayidx188, align 8, !dbg !9826
  %mul189 = fmul double %74, %75, !dbg !9826
  %sub190 = fsub double %mul184, %mul189, !dbg !9826
  %arrayidx191 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9826
  %arrayidx192 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx191, i64 0, i64 0, !dbg !9826
  store double %sub190, double* %arrayidx192, align 16, !dbg !9826
  %arrayidx193 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx194 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx193, i64 0, i64 2, !dbg !9826
  %76 = load double, double* %arrayidx194, align 16, !dbg !9826
  %arrayidx195 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx196 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx195, i64 0, i64 0, !dbg !9826
  %77 = load double, double* %arrayidx196, align 8, !dbg !9826
  %mul197 = fmul double %76, %77, !dbg !9826
  %arrayidx198 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx199 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx198, i64 0, i64 0, !dbg !9826
  %78 = load double, double* %arrayidx199, align 16, !dbg !9826
  %arrayidx200 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx201 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx200, i64 0, i64 2, !dbg !9826
  %79 = load double, double* %arrayidx201, align 8, !dbg !9826
  %mul202 = fmul double %78, %79, !dbg !9826
  %sub203 = fsub double %mul197, %mul202, !dbg !9826
  %arrayidx204 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9826
  %arrayidx205 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx204, i64 0, i64 1, !dbg !9826
  store double %sub203, double* %arrayidx205, align 8, !dbg !9826
  %arrayidx206 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx207 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx206, i64 0, i64 0, !dbg !9826
  %80 = load double, double* %arrayidx207, align 16, !dbg !9826
  %arrayidx208 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx209 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx208, i64 0, i64 1, !dbg !9826
  %81 = load double, double* %arrayidx209, align 8, !dbg !9826
  %mul210 = fmul double %80, %81, !dbg !9826
  %arrayidx211 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9826
  %arrayidx212 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx211, i64 0, i64 1, !dbg !9826
  %82 = load double, double* %arrayidx212, align 8, !dbg !9826
  %arrayidx213 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9826
  %arrayidx214 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx213, i64 0, i64 0, !dbg !9826
  %83 = load double, double* %arrayidx214, align 8, !dbg !9826
  %mul215 = fmul double %82, %83, !dbg !9826
  %sub216 = fsub double %mul210, %mul215, !dbg !9826
  %arrayidx217 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9826
  %arrayidx218 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx217, i64 0, i64 2, !dbg !9826
  store double %sub216, double* %arrayidx218, align 16, !dbg !9826
  %arrayidx219 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx220 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx219, i64 0, i64 1, !dbg !9828
  %84 = load double, double* %arrayidx220, align 8, !dbg !9828
  %arrayidx221 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx222 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx221, i64 0, i64 2, !dbg !9828
  %85 = load double, double* %arrayidx222, align 16, !dbg !9828
  %mul223 = fmul double %84, %85, !dbg !9828
  %arrayidx224 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx225 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx224, i64 0, i64 2, !dbg !9828
  %86 = load double, double* %arrayidx225, align 8, !dbg !9828
  %arrayidx226 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx227 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx226, i64 0, i64 1, !dbg !9828
  %87 = load double, double* %arrayidx227, align 8, !dbg !9828
  %mul228 = fmul double %86, %87, !dbg !9828
  %sub229 = fsub double %mul223, %mul228, !dbg !9828
  %arrayidx230 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9828
  %arrayidx231 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx230, i64 0, i64 0, !dbg !9828
  store double %sub229, double* %arrayidx231, align 8, !dbg !9828
  %arrayidx232 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx233 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx232, i64 0, i64 2, !dbg !9828
  %88 = load double, double* %arrayidx233, align 8, !dbg !9828
  %arrayidx234 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx235 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx234, i64 0, i64 0, !dbg !9828
  %89 = load double, double* %arrayidx235, align 16, !dbg !9828
  %mul236 = fmul double %88, %89, !dbg !9828
  %arrayidx237 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx238 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx237, i64 0, i64 0, !dbg !9828
  %90 = load double, double* %arrayidx238, align 8, !dbg !9828
  %arrayidx239 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx240 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx239, i64 0, i64 2, !dbg !9828
  %91 = load double, double* %arrayidx240, align 16, !dbg !9828
  %mul241 = fmul double %90, %91, !dbg !9828
  %sub242 = fsub double %mul236, %mul241, !dbg !9828
  %arrayidx243 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9828
  %arrayidx244 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx243, i64 0, i64 1, !dbg !9828
  store double %sub242, double* %arrayidx244, align 8, !dbg !9828
  %arrayidx245 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx246 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx245, i64 0, i64 0, !dbg !9828
  %92 = load double, double* %arrayidx246, align 8, !dbg !9828
  %arrayidx247 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx248 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx247, i64 0, i64 1, !dbg !9828
  %93 = load double, double* %arrayidx248, align 8, !dbg !9828
  %mul249 = fmul double %92, %93, !dbg !9828
  %arrayidx250 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9828
  %arrayidx251 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx250, i64 0, i64 1, !dbg !9828
  %94 = load double, double* %arrayidx251, align 8, !dbg !9828
  %arrayidx252 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9828
  %arrayidx253 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx252, i64 0, i64 0, !dbg !9828
  %95 = load double, double* %arrayidx253, align 16, !dbg !9828
  %mul254 = fmul double %94, %95, !dbg !9828
  %sub255 = fsub double %mul249, %mul254, !dbg !9828
  %arrayidx256 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9828
  %arrayidx257 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx256, i64 0, i64 2, !dbg !9828
  store double %sub255, double* %arrayidx257, align 8, !dbg !9828
  %arrayidx258 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9830
  %arraydecay259 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx258, i64 0, i64 0, !dbg !9830
  %call260 = call double @Normalize_d(double* %arraydecay259), !dbg !9831
  %arrayidx261 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9832
  %arraydecay262 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx261, i64 0, i64 0, !dbg !9832
  %call263 = call double @Normalize_d(double* %arraydecay262), !dbg !9833
  %arrayidx264 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9834
  %arraydecay265 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx264, i64 0, i64 0, !dbg !9834
  %call266 = call double @Normalize_d(double* %arraydecay265), !dbg !9835
  %arrayidx267 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9836
  %arraydecay268 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx267, i64 0, i64 0, !dbg !9836
  %call269 = call double @Normalize_d(double* %arraydecay268), !dbg !9837
  %arrayidx270 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9838
  %arrayidx271 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx270, i64 0, i64 0, !dbg !9838
  %96 = load double, double* %arrayidx271, align 16, !dbg !9838
  %arrayidx272 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9839
  %arrayidx273 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx272, i64 0, i64 0, !dbg !9839
  %97 = load double, double* %arrayidx273, align 8, !dbg !9839
  %mul274 = fmul double %96, %97, !dbg !9840
  %arrayidx275 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9841
  %arrayidx276 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx275, i64 0, i64 1, !dbg !9841
  %98 = load double, double* %arrayidx276, align 8, !dbg !9841
  %arrayidx277 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9842
  %arrayidx278 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx277, i64 0, i64 1, !dbg !9842
  %99 = load double, double* %arrayidx278, align 8, !dbg !9842
  %mul279 = fmul double %98, %99, !dbg !9843
  %add = fadd double %mul274, %mul279, !dbg !9844
  %arrayidx280 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9845
  %arrayidx281 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx280, i64 0, i64 2, !dbg !9845
  %100 = load double, double* %arrayidx281, align 16, !dbg !9845
  %arrayidx282 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9846
  %arrayidx283 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx282, i64 0, i64 2, !dbg !9846
  %101 = load double, double* %arrayidx283, align 8, !dbg !9846
  %mul284 = fmul double %100, %101, !dbg !9847
  %add285 = fadd double %add, %mul284, !dbg !9848
  %arrayidx286 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 0, !dbg !9849
  store double %add285, double* %arrayidx286, align 16, !dbg !9850
  %arrayidx287 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9851
  %arrayidx288 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx287, i64 0, i64 0, !dbg !9851
  %102 = load double, double* %arrayidx288, align 8, !dbg !9851
  %arrayidx289 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9852
  %arrayidx290 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx289, i64 0, i64 0, !dbg !9852
  %103 = load double, double* %arrayidx290, align 16, !dbg !9852
  %mul291 = fmul double %102, %103, !dbg !9853
  %arrayidx292 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9854
  %arrayidx293 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx292, i64 0, i64 1, !dbg !9854
  %104 = load double, double* %arrayidx293, align 8, !dbg !9854
  %arrayidx294 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9855
  %arrayidx295 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx294, i64 0, i64 1, !dbg !9855
  %105 = load double, double* %arrayidx295, align 8, !dbg !9855
  %mul296 = fmul double %104, %105, !dbg !9856
  %add297 = fadd double %mul291, %mul296, !dbg !9857
  %arrayidx298 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 1, !dbg !9858
  %arrayidx299 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx298, i64 0, i64 2, !dbg !9858
  %106 = load double, double* %arrayidx299, align 8, !dbg !9858
  %arrayidx300 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9859
  %arrayidx301 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx300, i64 0, i64 2, !dbg !9859
  %107 = load double, double* %arrayidx301, align 16, !dbg !9859
  %mul302 = fmul double %106, %107, !dbg !9860
  %add303 = fadd double %add297, %mul302, !dbg !9861
  %arrayidx304 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 1, !dbg !9862
  store double %add303, double* %arrayidx304, align 8, !dbg !9863
  %arrayidx305 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9864
  %arrayidx306 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx305, i64 0, i64 0, !dbg !9864
  %108 = load double, double* %arrayidx306, align 16, !dbg !9864
  %arrayidx307 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9865
  %arrayidx308 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx307, i64 0, i64 0, !dbg !9865
  %109 = load double, double* %arrayidx308, align 8, !dbg !9865
  %mul309 = fmul double %108, %109, !dbg !9866
  %arrayidx310 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9867
  %arrayidx311 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx310, i64 0, i64 1, !dbg !9867
  %110 = load double, double* %arrayidx311, align 8, !dbg !9867
  %arrayidx312 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9868
  %arrayidx313 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx312, i64 0, i64 1, !dbg !9868
  %111 = load double, double* %arrayidx313, align 8, !dbg !9868
  %mul314 = fmul double %110, %111, !dbg !9869
  %add315 = fadd double %mul309, %mul314, !dbg !9870
  %arrayidx316 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 2, !dbg !9871
  %arrayidx317 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx316, i64 0, i64 2, !dbg !9871
  %112 = load double, double* %arrayidx317, align 16, !dbg !9871
  %arrayidx318 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9872
  %arrayidx319 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx318, i64 0, i64 2, !dbg !9872
  %113 = load double, double* %arrayidx319, align 8, !dbg !9872
  %mul320 = fmul double %112, %113, !dbg !9873
  %add321 = fadd double %add315, %mul320, !dbg !9874
  %arrayidx322 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 2, !dbg !9875
  store double %add321, double* %arrayidx322, align 16, !dbg !9876
  %arrayidx323 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9877
  %arrayidx324 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx323, i64 0, i64 0, !dbg !9877
  %114 = load double, double* %arrayidx324, align 8, !dbg !9877
  %arrayidx325 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9878
  %arrayidx326 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx325, i64 0, i64 0, !dbg !9878
  %115 = load double, double* %arrayidx326, align 16, !dbg !9878
  %mul327 = fmul double %114, %115, !dbg !9879
  %arrayidx328 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9880
  %arrayidx329 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx328, i64 0, i64 1, !dbg !9880
  %116 = load double, double* %arrayidx329, align 8, !dbg !9880
  %arrayidx330 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9881
  %arrayidx331 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx330, i64 0, i64 1, !dbg !9881
  %117 = load double, double* %arrayidx331, align 8, !dbg !9881
  %mul332 = fmul double %116, %117, !dbg !9882
  %add333 = fadd double %mul327, %mul332, !dbg !9883
  %arrayidx334 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 3, !dbg !9884
  %arrayidx335 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx334, i64 0, i64 2, !dbg !9884
  %118 = load double, double* %arrayidx335, align 8, !dbg !9884
  %arrayidx336 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %vec, i64 0, i64 0, !dbg !9885
  %arrayidx337 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx336, i64 0, i64 2, !dbg !9885
  %119 = load double, double* %arrayidx337, align 16, !dbg !9885
  %mul338 = fmul double %118, %119, !dbg !9886
  %add339 = fadd double %add333, %mul338, !dbg !9887
  %arrayidx340 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 3, !dbg !9888
  store double %add339, double* %arrayidx340, align 8, !dbg !9889
  %arrayidx341 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 0, !dbg !9890
  %120 = load double, double* %arrayidx341, align 16, !dbg !9890
  %call342 = call double @saacos_d(double %120), !dbg !9891
  %arrayidx343 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 0, !dbg !9892
  store double %call342, double* %arrayidx343, align 16, !dbg !9893
  %arrayidx344 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 1, !dbg !9894
  %121 = load double, double* %arrayidx344, align 8, !dbg !9894
  %call345 = call double @saacos_d(double %121), !dbg !9895
  %arrayidx346 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 1, !dbg !9896
  store double %call345, double* %arrayidx346, align 8, !dbg !9897
  %arrayidx347 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 2, !dbg !9898
  %122 = load double, double* %arrayidx347, align 16, !dbg !9898
  %call348 = call double @saacos_d(double %122), !dbg !9899
  %arrayidx349 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 2, !dbg !9900
  store double %call348, double* %arrayidx349, align 16, !dbg !9901
  %arrayidx350 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 3, !dbg !9902
  %123 = load double, double* %arrayidx350, align 8, !dbg !9902
  %call351 = call double @saacos_d(double %123), !dbg !9903
  %arrayidx352 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 3, !dbg !9904
  store double %call351, double* %arrayidx352, align 8, !dbg !9905
  %arrayidx353 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 0, !dbg !9906
  %124 = load double, double* %arrayidx353, align 16, !dbg !9906
  %125 = load float*, float** %vn.addr, align 8, !dbg !9907
  %arrayidx354 = getelementptr inbounds float, float* %125, i64 0, !dbg !9907
  %126 = load float, float* %arrayidx354, align 4, !dbg !9907
  %conv355 = fpext float %126 to double, !dbg !9907
  %arrayidx356 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9908
  %arrayidx357 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx356, i64 0, i64 0, !dbg !9908
  %127 = load double, double* %arrayidx357, align 16, !dbg !9908
  %mul358 = fmul double %conv355, %127, !dbg !9909
  %128 = load float*, float** %vn.addr, align 8, !dbg !9910
  %arrayidx359 = getelementptr inbounds float, float* %128, i64 1, !dbg !9910
  %129 = load float, float* %arrayidx359, align 4, !dbg !9910
  %conv360 = fpext float %129 to double, !dbg !9910
  %arrayidx361 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9911
  %arrayidx362 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx361, i64 0, i64 1, !dbg !9911
  %130 = load double, double* %arrayidx362, align 8, !dbg !9911
  %mul363 = fmul double %conv360, %130, !dbg !9912
  %add364 = fadd double %mul358, %mul363, !dbg !9913
  %131 = load float*, float** %vn.addr, align 8, !dbg !9914
  %arrayidx365 = getelementptr inbounds float, float* %131, i64 2, !dbg !9914
  %132 = load float, float* %arrayidx365, align 4, !dbg !9914
  %conv366 = fpext float %132 to double, !dbg !9914
  %arrayidx367 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 0, !dbg !9915
  %arrayidx368 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx367, i64 0, i64 2, !dbg !9915
  %133 = load double, double* %arrayidx368, align 16, !dbg !9915
  %mul369 = fmul double %conv366, %133, !dbg !9916
  %add370 = fadd double %add364, %mul369, !dbg !9917
  %mul371 = fmul double %124, %add370, !dbg !9918
  store double %mul371, double* %fac, align 8, !dbg !9919
  %arrayidx372 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 1, !dbg !9920
  %134 = load double, double* %arrayidx372, align 8, !dbg !9920
  %135 = load float*, float** %vn.addr, align 8, !dbg !9921
  %arrayidx373 = getelementptr inbounds float, float* %135, i64 0, !dbg !9921
  %136 = load float, float* %arrayidx373, align 4, !dbg !9921
  %conv374 = fpext float %136 to double, !dbg !9921
  %arrayidx375 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9922
  %arrayidx376 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx375, i64 0, i64 0, !dbg !9922
  %137 = load double, double* %arrayidx376, align 8, !dbg !9922
  %mul377 = fmul double %conv374, %137, !dbg !9923
  %138 = load float*, float** %vn.addr, align 8, !dbg !9924
  %arrayidx378 = getelementptr inbounds float, float* %138, i64 1, !dbg !9924
  %139 = load float, float* %arrayidx378, align 4, !dbg !9924
  %conv379 = fpext float %139 to double, !dbg !9924
  %arrayidx380 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9925
  %arrayidx381 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx380, i64 0, i64 1, !dbg !9925
  %140 = load double, double* %arrayidx381, align 8, !dbg !9925
  %mul382 = fmul double %conv379, %140, !dbg !9926
  %add383 = fadd double %mul377, %mul382, !dbg !9927
  %141 = load float*, float** %vn.addr, align 8, !dbg !9928
  %arrayidx384 = getelementptr inbounds float, float* %141, i64 2, !dbg !9928
  %142 = load float, float* %arrayidx384, align 4, !dbg !9928
  %conv385 = fpext float %142 to double, !dbg !9928
  %arrayidx386 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 1, !dbg !9929
  %arrayidx387 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx386, i64 0, i64 2, !dbg !9929
  %143 = load double, double* %arrayidx387, align 8, !dbg !9929
  %mul388 = fmul double %conv385, %143, !dbg !9930
  %add389 = fadd double %add383, %mul388, !dbg !9931
  %mul390 = fmul double %134, %add389, !dbg !9932
  %144 = load double, double* %fac, align 8, !dbg !9933
  %add391 = fadd double %144, %mul390, !dbg !9933
  store double %add391, double* %fac, align 8, !dbg !9933
  %arrayidx392 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 2, !dbg !9934
  %145 = load double, double* %arrayidx392, align 16, !dbg !9934
  %146 = load float*, float** %vn.addr, align 8, !dbg !9935
  %arrayidx393 = getelementptr inbounds float, float* %146, i64 0, !dbg !9935
  %147 = load float, float* %arrayidx393, align 4, !dbg !9935
  %conv394 = fpext float %147 to double, !dbg !9935
  %arrayidx395 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9936
  %arrayidx396 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx395, i64 0, i64 0, !dbg !9936
  %148 = load double, double* %arrayidx396, align 16, !dbg !9936
  %mul397 = fmul double %conv394, %148, !dbg !9937
  %149 = load float*, float** %vn.addr, align 8, !dbg !9938
  %arrayidx398 = getelementptr inbounds float, float* %149, i64 1, !dbg !9938
  %150 = load float, float* %arrayidx398, align 4, !dbg !9938
  %conv399 = fpext float %150 to double, !dbg !9938
  %arrayidx400 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9939
  %arrayidx401 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx400, i64 0, i64 1, !dbg !9939
  %151 = load double, double* %arrayidx401, align 8, !dbg !9939
  %mul402 = fmul double %conv399, %151, !dbg !9940
  %add403 = fadd double %mul397, %mul402, !dbg !9941
  %152 = load float*, float** %vn.addr, align 8, !dbg !9942
  %arrayidx404 = getelementptr inbounds float, float* %152, i64 2, !dbg !9942
  %153 = load float, float* %arrayidx404, align 4, !dbg !9942
  %conv405 = fpext float %153 to double, !dbg !9942
  %arrayidx406 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 2, !dbg !9943
  %arrayidx407 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx406, i64 0, i64 2, !dbg !9943
  %154 = load double, double* %arrayidx407, align 16, !dbg !9943
  %mul408 = fmul double %conv405, %154, !dbg !9944
  %add409 = fadd double %add403, %mul408, !dbg !9945
  %mul410 = fmul double %145, %add409, !dbg !9946
  %155 = load double, double* %fac, align 8, !dbg !9947
  %add411 = fadd double %155, %mul410, !dbg !9947
  store double %add411, double* %fac, align 8, !dbg !9947
  %arrayidx412 = getelementptr inbounds [4 x double], [4 x double]* %rad, i64 0, i64 3, !dbg !9948
  %156 = load double, double* %arrayidx412, align 8, !dbg !9948
  %157 = load float*, float** %vn.addr, align 8, !dbg !9949
  %arrayidx413 = getelementptr inbounds float, float* %157, i64 0, !dbg !9949
  %158 = load float, float* %arrayidx413, align 4, !dbg !9949
  %conv414 = fpext float %158 to double, !dbg !9949
  %arrayidx415 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9950
  %arrayidx416 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx415, i64 0, i64 0, !dbg !9950
  %159 = load double, double* %arrayidx416, align 8, !dbg !9950
  %mul417 = fmul double %conv414, %159, !dbg !9951
  %160 = load float*, float** %vn.addr, align 8, !dbg !9952
  %arrayidx418 = getelementptr inbounds float, float* %160, i64 1, !dbg !9952
  %161 = load float, float* %arrayidx418, align 4, !dbg !9952
  %conv419 = fpext float %161 to double, !dbg !9952
  %arrayidx420 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9953
  %arrayidx421 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx420, i64 0, i64 1, !dbg !9953
  %162 = load double, double* %arrayidx421, align 8, !dbg !9953
  %mul422 = fmul double %conv419, %162, !dbg !9954
  %add423 = fadd double %mul417, %mul422, !dbg !9955
  %163 = load float*, float** %vn.addr, align 8, !dbg !9956
  %arrayidx424 = getelementptr inbounds float, float* %163, i64 2, !dbg !9956
  %164 = load float, float* %arrayidx424, align 4, !dbg !9956
  %conv425 = fpext float %164 to double, !dbg !9956
  %arrayidx426 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %cross, i64 0, i64 3, !dbg !9957
  %arrayidx427 = getelementptr inbounds [3 x double], [3 x double]* %arrayidx426, i64 0, i64 2, !dbg !9957
  %165 = load double, double* %arrayidx427, align 8, !dbg !9957
  %mul428 = fmul double %conv425, %165, !dbg !9958
  %add429 = fadd double %add423, %mul428, !dbg !9959
  %mul430 = fmul double %156, %add429, !dbg !9960
  %166 = load double, double* %fac, align 8, !dbg !9961
  %add431 = fadd double %166, %mul430, !dbg !9961
  store double %add431, double* %fac, align 8, !dbg !9961
  %167 = load double, double* %fac, align 8, !dbg !9962
  %cmp = fcmp ole double %167, 0.000000e+00, !dbg !9964
  br i1 %cmp, label %if.then, label %if.end, !dbg !9965

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !9966
  br label %return, !dbg !9966

if.end:                                           ; preds = %entry
  %168 = load double, double* %fac, align 8, !dbg !9967
  %conv433 = fptrunc double %168 to float, !dbg !9967
  store float %conv433, float* %retval, align 4, !dbg !9968
  br label %return, !dbg !9968

return:                                           ; preds = %if.end, %if.then
  %169 = load float, float* %retval, align 4, !dbg !9969
  ret float %169, !dbg !9969
}

; Function Attrs: noinline nounwind uwtable
define internal double @Normalize_d(double* %n) #0 !dbg !9970 {
entry:
  %n.addr = alloca double*, align 8
  %d = alloca double, align 8
  store double* %n, double** %n.addr, align 8
  call void @llvm.dbg.declare(metadata double** %n.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata double* %d, metadata !9975, metadata !DIExpression()), !dbg !9976
  %0 = load double*, double** %n.addr, align 8, !dbg !9977
  %arrayidx = getelementptr inbounds double, double* %0, i64 0, !dbg !9977
  %1 = load double, double* %arrayidx, align 8, !dbg !9977
  %2 = load double*, double** %n.addr, align 8, !dbg !9978
  %arrayidx1 = getelementptr inbounds double, double* %2, i64 0, !dbg !9978
  %3 = load double, double* %arrayidx1, align 8, !dbg !9978
  %mul = fmul double %1, %3, !dbg !9979
  %4 = load double*, double** %n.addr, align 8, !dbg !9980
  %arrayidx2 = getelementptr inbounds double, double* %4, i64 1, !dbg !9980
  %5 = load double, double* %arrayidx2, align 8, !dbg !9980
  %6 = load double*, double** %n.addr, align 8, !dbg !9981
  %arrayidx3 = getelementptr inbounds double, double* %6, i64 1, !dbg !9981
  %7 = load double, double* %arrayidx3, align 8, !dbg !9981
  %mul4 = fmul double %5, %7, !dbg !9982
  %add = fadd double %mul, %mul4, !dbg !9983
  %8 = load double*, double** %n.addr, align 8, !dbg !9984
  %arrayidx5 = getelementptr inbounds double, double* %8, i64 2, !dbg !9984
  %9 = load double, double* %arrayidx5, align 8, !dbg !9984
  %10 = load double*, double** %n.addr, align 8, !dbg !9985
  %arrayidx6 = getelementptr inbounds double, double* %10, i64 2, !dbg !9985
  %11 = load double, double* %arrayidx6, align 8, !dbg !9985
  %mul7 = fmul double %9, %11, !dbg !9986
  %add8 = fadd double %add, %mul7, !dbg !9987
  store double %add8, double* %d, align 8, !dbg !9988
  %12 = load double, double* %d, align 8, !dbg !9989
  %cmp = fcmp ogt double %12, 1.000000e-17, !dbg !9991
  br i1 %cmp, label %if.then, label %if.else, !dbg !9992

if.then:                                          ; preds = %entry
  %13 = load double, double* %d, align 8, !dbg !9993
  %call = call double @sqrt(double %13) #6, !dbg !9995
  store double %call, double* %d, align 8, !dbg !9996
  %14 = load double, double* %d, align 8, !dbg !9997
  %15 = load double*, double** %n.addr, align 8, !dbg !9998
  %arrayidx9 = getelementptr inbounds double, double* %15, i64 0, !dbg !9998
  %16 = load double, double* %arrayidx9, align 8, !dbg !9999
  %div = fdiv double %16, %14, !dbg !9999
  store double %div, double* %arrayidx9, align 8, !dbg !9999
  %17 = load double, double* %d, align 8, !dbg !10000
  %18 = load double*, double** %n.addr, align 8, !dbg !10001
  %arrayidx10 = getelementptr inbounds double, double* %18, i64 1, !dbg !10001
  %19 = load double, double* %arrayidx10, align 8, !dbg !10002
  %div11 = fdiv double %19, %17, !dbg !10002
  store double %div11, double* %arrayidx10, align 8, !dbg !10002
  %20 = load double, double* %d, align 8, !dbg !10003
  %21 = load double*, double** %n.addr, align 8, !dbg !10004
  %arrayidx12 = getelementptr inbounds double, double* %21, i64 2, !dbg !10004
  %22 = load double, double* %arrayidx12, align 8, !dbg !10005
  %div13 = fdiv double %22, %20, !dbg !10005
  store double %div13, double* %arrayidx12, align 8, !dbg !10005
  br label %if.end, !dbg !10006

if.else:                                          ; preds = %entry
  %23 = load double*, double** %n.addr, align 8, !dbg !10007
  %arrayidx14 = getelementptr inbounds double, double* %23, i64 2, !dbg !10007
  store double 0.000000e+00, double* %arrayidx14, align 8, !dbg !10009
  %24 = load double*, double** %n.addr, align 8, !dbg !10010
  %arrayidx15 = getelementptr inbounds double, double* %24, i64 1, !dbg !10010
  store double 0.000000e+00, double* %arrayidx15, align 8, !dbg !10011
  %25 = load double*, double** %n.addr, align 8, !dbg !10012
  %arrayidx16 = getelementptr inbounds double, double* %25, i64 0, !dbg !10012
  store double 0.000000e+00, double* %arrayidx16, align 8, !dbg !10013
  store double 0.000000e+00, double* %d, align 8, !dbg !10014
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %26 = load double, double* %d, align 8, !dbg !10015
  ret double %26, !dbg !10016
}

; Function Attrs: noinline nounwind uwtable
define internal double @saacos_d(double %fac) #0 !dbg !10017 {
entry:
  %retval = alloca double, align 8
  %fac.addr = alloca double, align 8
  store double %fac, double* %fac.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fac.addr, metadata !10020, metadata !DIExpression()), !dbg !10021
  %0 = load double, double* %fac.addr, align 8, !dbg !10022
  %cmp = fcmp ole double %0, -1.000000e+00, !dbg !10024
  br i1 %cmp, label %if.then, label %if.else, !dbg !10025

if.then:                                          ; preds = %entry
  store double 0x400921FB54442D18, double* %retval, align 8, !dbg !10026
  br label %return, !dbg !10026

if.else:                                          ; preds = %entry
  %1 = load double, double* %fac.addr, align 8, !dbg !10027
  %cmp1 = fcmp oge double %1, 1.000000e+00, !dbg !10029
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !10030

if.then2:                                         ; preds = %if.else
  store double 0.000000e+00, double* %retval, align 8, !dbg !10031
  br label %return, !dbg !10031

if.else3:                                         ; preds = %if.else
  %2 = load double, double* %fac.addr, align 8, !dbg !10032
  %call = call double @acos(double %2) #6, !dbg !10033
  store double %call, double* %retval, align 8, !dbg !10034
  br label %return, !dbg !10034

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load double, double* %retval, align 8, !dbg !10035
  ret double %3, !dbg !10035
}

; Function Attrs: nounwind
declare dso_local double @acos(double) #2

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !10036 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10039, metadata !DIExpression()), !dbg !10040
  %0 = load float, float* %fac.addr, align 4, !dbg !10041
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !10041
  br i1 %cmp, label %if.then, label %if.else, !dbg !10043

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !10044
  br label %return, !dbg !10044

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !10045
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !10045
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !10047

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !10048
  br label %return, !dbg !10048

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !10049
  %call = call float @acosf(float %2) #6, !dbg !10050
  store float %call, float* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !10052
  ret float %3, !dbg !10052
}

; Function Attrs: nounwind
declare dso_local float @sinf(float) #2

; Function Attrs: nounwind
declare dso_local float @tanf(float) #2

; Function Attrs: nounwind
declare dso_local float @acosf(float) #2

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #3

declare dso_local void @ramp_blend(i32, float*, float, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @sasqrt(float %fac) #0 !dbg !10053 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10054, metadata !DIExpression()), !dbg !10055
  %0 = load float, float* %fac.addr, align 4, !dbg !10056
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !10056
  br i1 %cmp, label %if.then, label %if.else, !dbg !10058

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !10059
  br label %return, !dbg !10059

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !10060
  %call = call float @sqrtf(float %1) #6, !dbg !10061
  store float %call, float* %retval, align 4, !dbg !10062
  br label %return, !dbg !10062

return:                                           ; preds = %if.else, %if.then
  %2 = load float, float* %retval, align 4, !dbg !10063
  ret float %2, !dbg !10063
}

; Function Attrs: nounwind
declare dso_local double @exp(double) #2

; Function Attrs: nounwind
declare dso_local float @expf(float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3v3(float* %r, float* %v1, float* %v2) #0 !dbg !10064 {
entry:
  %r.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  %0 = load float*, float** %v1.addr, align 8, !dbg !10071
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10071
  %1 = load float, float* %arrayidx, align 4, !dbg !10071
  %2 = load float*, float** %v2.addr, align 8, !dbg !10072
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10072
  %3 = load float, float* %arrayidx1, align 4, !dbg !10072
  %mul = fmul float %1, %3, !dbg !10073
  %4 = load float*, float** %r.addr, align 8, !dbg !10074
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10074
  store float %mul, float* %arrayidx2, align 4, !dbg !10075
  %5 = load float*, float** %v1.addr, align 8, !dbg !10076
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10076
  %6 = load float, float* %arrayidx3, align 4, !dbg !10076
  %7 = load float*, float** %v2.addr, align 8, !dbg !10077
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !10077
  %8 = load float, float* %arrayidx4, align 4, !dbg !10077
  %mul5 = fmul float %6, %8, !dbg !10078
  %9 = load float*, float** %r.addr, align 8, !dbg !10079
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !10079
  store float %mul5, float* %arrayidx6, align 4, !dbg !10080
  %10 = load float*, float** %v1.addr, align 8, !dbg !10081
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !10081
  %11 = load float, float* %arrayidx7, align 4, !dbg !10081
  %12 = load float*, float** %v2.addr, align 8, !dbg !10082
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !10082
  %13 = load float, float* %arrayidx8, align 4, !dbg !10082
  %mul9 = fmul float %11, %13, !dbg !10083
  %14 = load float*, float** %r.addr, align 8, !dbg !10084
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !10084
  store float %mul9, float* %arrayidx10, align 4, !dbg !10085
  ret void, !dbg !10086
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1822, !1823, !1824}
!llvm.ident = !{!1825}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !61, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/render/intern/source/shadeoutput.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !39, !54}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !4, line: 213, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38}
!7 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!8 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!9 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!10 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!11 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!12 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!13 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!14 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!15 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!16 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!17 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!18 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!19 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!20 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!21 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!22 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!23 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!24 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!25 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!26 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!27 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!28 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!29 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!30 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!31 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!32 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!33 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!34 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!35 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!36 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!37 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!38 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 339, baseType: !41, size: 32, elements: !42)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53}
!43 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!47 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!48 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !55, line: 154, baseType: !41, size: 32, elements: !56)
!55 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "WO_AOADD", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "WO_AOSUB", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "WO_AOADDSUB", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "WO_AOMUL", value: 3, isUnsigned: true)
!61 = !{!62, !63, !1821, !147}
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !65, line: 113, baseType: !66)
!65 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!66 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !65, line: 48, size: 4160, elements: !67)
!67 = !{!68, !138, !141, !142, !143, !144, !145, !146, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !264, !267, !1815, !1816, !1817, !1819, !1820}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !66, file: !65, line: 49, baseType: !69, size: 960)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !70, line: 130, baseType: !71)
!70 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !70, line: 117, size: 960, elements: !72)
!72 = !{!73, !74, !75, !77, !97, !101, !103, !104, !105, !106}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !71, file: !70, line: 118, baseType: !62, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !71, file: !70, line: 118, baseType: !62, size: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !71, file: !70, line: 119, baseType: !76, size: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !71, file: !70, line: 120, baseType: !78, size: 64, offset: 192)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !70, line: 136, size: 17600, elements: !80)
!80 = !{!81, !82, !84, !87, !92, !93, !94}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !79, file: !70, line: 137, baseType: !69, size: 960)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !79, file: !70, line: 138, baseType: !83, size: 64, offset: 960)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !79, file: !70, line: 139, baseType: !85, size: 64, offset: 1024)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !70, line: 43, flags: DIFlagFwdDecl)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !79, file: !70, line: 140, baseType: !88, size: 8192, offset: 1088)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8192, elements: !90)
!89 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!90 = !{!91}
!91 = !DISubrange(count: 1024)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !79, file: !70, line: 141, baseType: !88, size: 8192, offset: 9280)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !79, file: !70, line: 148, baseType: !78, size: 64, offset: 17472)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !79, file: !70, line: 150, baseType: !95, size: 64, offset: 17536)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !70, line: 45, flags: DIFlagFwdDecl)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !71, file: !70, line: 121, baseType: !98, size: 528, offset: 256)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 528, elements: !99)
!99 = !{!100}
!100 = !DISubrange(count: 66)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !71, file: !70, line: 126, baseType: !102, size: 16, offset: 784)
!102 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !71, file: !70, line: 127, baseType: !5, size: 32, offset: 800)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !71, file: !70, line: 128, baseType: !5, size: 32, offset: 832)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !71, file: !70, line: 128, baseType: !5, size: 32, offset: 864)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !71, file: !70, line: 129, baseType: !107, size: 64, offset: 896)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !70, line: 75, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !70, line: 62, size: 1024, elements: !110)
!110 = !{!111, !113, !114, !115, !116, !117, !121, !122, !136, !137}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !109, file: !70, line: 63, baseType: !112, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !109, file: !70, line: 63, baseType: !112, size: 64, offset: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !109, file: !70, line: 64, baseType: !89, size: 8, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !109, file: !70, line: 64, baseType: !89, size: 8, offset: 136)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !109, file: !70, line: 65, baseType: !102, size: 16, offset: 144)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !109, file: !70, line: 66, baseType: !118, size: 512, offset: 160)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 512, elements: !119)
!119 = !{!120}
!120 = !DISubrange(count: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !109, file: !70, line: 67, baseType: !5, size: 32, offset: 672)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !109, file: !70, line: 69, baseType: !123, size: 256, offset: 704)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !70, line: 60, baseType: !124)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !70, line: 48, size: 256, elements: !125)
!125 = !{!126, !127, !134, !135}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !124, file: !70, line: 49, baseType: !62, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !124, file: !70, line: 58, baseType: !128, size: 128, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !129, line: 71, baseType: !130)
!129 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !129, line: 69, size: 128, elements: !131)
!131 = !{!132, !133}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !130, file: !129, line: 70, baseType: !62, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !130, file: !129, line: 70, baseType: !62, size: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !124, file: !70, line: 59, baseType: !5, size: 32, offset: 192)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !124, file: !70, line: 59, baseType: !5, size: 32, offset: 224)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !109, file: !70, line: 70, baseType: !5, size: 32, offset: 960)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !109, file: !70, line: 74, baseType: !5, size: 32, offset: 992)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !66, file: !65, line: 50, baseType: !139, size: 64, offset: 960)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !65, line: 42, flags: DIFlagFwdDecl)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !66, file: !65, line: 52, baseType: !102, size: 16, offset: 1024)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !66, file: !65, line: 52, baseType: !102, size: 16, offset: 1040)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !66, file: !65, line: 53, baseType: !5, size: 32, offset: 1056)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !66, file: !65, line: 55, baseType: !102, size: 16, offset: 1088)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !66, file: !65, line: 55, baseType: !102, size: 16, offset: 1104)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !66, file: !65, line: 56, baseType: !147, size: 32, offset: 1120)
!147 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !66, file: !65, line: 56, baseType: !147, size: 32, offset: 1152)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !66, file: !65, line: 56, baseType: !147, size: 32, offset: 1184)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !66, file: !65, line: 56, baseType: !147, size: 32, offset: 1216)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !66, file: !65, line: 57, baseType: !147, size: 32, offset: 1248)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !66, file: !65, line: 57, baseType: !147, size: 32, offset: 1280)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !66, file: !65, line: 57, baseType: !147, size: 32, offset: 1312)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !66, file: !65, line: 57, baseType: !147, size: 32, offset: 1344)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !66, file: !65, line: 59, baseType: !147, size: 32, offset: 1376)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !66, file: !65, line: 59, baseType: !147, size: 32, offset: 1408)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !66, file: !65, line: 59, baseType: !147, size: 32, offset: 1440)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !66, file: !65, line: 59, baseType: !147, size: 32, offset: 1472)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !66, file: !65, line: 60, baseType: !147, size: 32, offset: 1504)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !66, file: !65, line: 63, baseType: !147, size: 32, offset: 1536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !66, file: !65, line: 63, baseType: !147, size: 32, offset: 1568)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !66, file: !65, line: 64, baseType: !163, size: 64, offset: 1600)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !165, line: 72, size: 3072, elements: !166)
!165 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = !{!167, !168, !169, !170, !171, !180, !181, !211, !215, !216, !217}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !164, file: !165, line: 73, baseType: !5, size: 32)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !164, file: !165, line: 73, baseType: !5, size: 32, offset: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !164, file: !165, line: 74, baseType: !5, size: 32, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !164, file: !165, line: 75, baseType: !5, size: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !164, file: !165, line: 77, baseType: !172, size: 128, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !173, line: 95, baseType: !174)
!173 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !173, line: 92, size: 128, elements: !175)
!175 = !{!176, !177, !178, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !174, file: !173, line: 93, baseType: !147, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !174, file: !173, line: 93, baseType: !147, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !174, file: !173, line: 94, baseType: !147, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !174, file: !173, line: 94, baseType: !147, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !164, file: !165, line: 77, baseType: !172, size: 128, offset: 256)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !164, file: !165, line: 79, baseType: !182, size: 2304, offset: 384)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 2304, elements: !209)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !165, line: 67, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !165, line: 55, size: 576, elements: !185)
!185 = !{!186, !187, !188, !189, !190, !191, !195, !196, !205, !206, !207, !208}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !184, file: !165, line: 56, baseType: !102, size: 16)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !184, file: !165, line: 56, baseType: !102, size: 16, offset: 16)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !184, file: !165, line: 58, baseType: !147, size: 32, offset: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !184, file: !165, line: 59, baseType: !147, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !184, file: !165, line: 59, baseType: !147, size: 32, offset: 96)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !184, file: !165, line: 60, baseType: !192, size: 64, offset: 128)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !193)
!193 = !{!194}
!194 = !DISubrange(count: 2)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !184, file: !165, line: 60, baseType: !192, size: 64, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !184, file: !165, line: 61, baseType: !197, size: 64, offset: 256)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !165, line: 47, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !165, line: 44, size: 96, elements: !200)
!200 = !{!201, !202, !203, !204}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !199, file: !165, line: 45, baseType: !147, size: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !199, file: !165, line: 45, baseType: !147, size: 32, offset: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !199, file: !165, line: 46, baseType: !102, size: 16, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !199, file: !165, line: 46, baseType: !102, size: 16, offset: 80)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !184, file: !165, line: 62, baseType: !197, size: 64, offset: 320)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !184, file: !165, line: 64, baseType: !197, size: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !184, file: !165, line: 65, baseType: !192, size: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !184, file: !165, line: 66, baseType: !192, size: 64, offset: 512)
!209 = !{!210}
!210 = !DISubrange(count: 4)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !164, file: !165, line: 80, baseType: !212, size: 96, offset: 2688)
!212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 96, elements: !213)
!213 = !{!214}
!214 = !DISubrange(count: 3)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !164, file: !165, line: 80, baseType: !212, size: 96, offset: 2784)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !164, file: !165, line: 81, baseType: !212, size: 96, offset: 2880)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !164, file: !165, line: 83, baseType: !212, size: 96, offset: 2976)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !66, file: !65, line: 65, baseType: !102, size: 16, offset: 1664)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !66, file: !65, line: 66, baseType: !102, size: 16, offset: 1680)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !66, file: !65, line: 68, baseType: !147, size: 32, offset: 1696)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !66, file: !65, line: 68, baseType: !147, size: 32, offset: 1728)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !66, file: !65, line: 69, baseType: !147, size: 32, offset: 1760)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !66, file: !65, line: 69, baseType: !147, size: 32, offset: 1792)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !66, file: !65, line: 69, baseType: !147, size: 32, offset: 1824)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !66, file: !65, line: 69, baseType: !147, size: 32, offset: 1856)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !66, file: !65, line: 69, baseType: !147, size: 32, offset: 1888)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !66, file: !65, line: 70, baseType: !102, size: 16, offset: 1920)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !66, file: !65, line: 70, baseType: !102, size: 16, offset: 1936)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !66, file: !65, line: 70, baseType: !102, size: 16, offset: 1952)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !66, file: !65, line: 70, baseType: !102, size: 16, offset: 1968)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !66, file: !65, line: 71, baseType: !89, size: 8, offset: 1984)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !66, file: !65, line: 71, baseType: !89, size: 8, offset: 1992)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !66, file: !65, line: 73, baseType: !102, size: 16, offset: 2000)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !66, file: !65, line: 73, baseType: !102, size: 16, offset: 2016)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !66, file: !65, line: 73, baseType: !102, size: 16, offset: 2032)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !66, file: !65, line: 74, baseType: !102, size: 16, offset: 2048)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !66, file: !65, line: 75, baseType: !102, size: 16, offset: 2064)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !66, file: !65, line: 76, baseType: !147, size: 32, offset: 2080)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !66, file: !65, line: 76, baseType: !147, size: 32, offset: 2112)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !66, file: !65, line: 76, baseType: !147, size: 32, offset: 2144)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !66, file: !65, line: 77, baseType: !147, size: 32, offset: 2176)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !66, file: !65, line: 78, baseType: !102, size: 16, offset: 2208)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !66, file: !65, line: 79, baseType: !102, size: 16, offset: 2224)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !66, file: !65, line: 82, baseType: !102, size: 16, offset: 2240)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !66, file: !65, line: 82, baseType: !102, size: 16, offset: 2256)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !66, file: !65, line: 85, baseType: !102, size: 16, offset: 2272)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !66, file: !65, line: 86, baseType: !102, size: 16, offset: 2288)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !66, file: !65, line: 87, baseType: !147, size: 32, offset: 2304)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !66, file: !65, line: 88, baseType: !147, size: 32, offset: 2336)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !66, file: !65, line: 89, baseType: !147, size: 32, offset: 2368)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !66, file: !65, line: 90, baseType: !147, size: 32, offset: 2400)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !66, file: !65, line: 91, baseType: !147, size: 32, offset: 2432)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !66, file: !65, line: 92, baseType: !147, size: 32, offset: 2464)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !66, file: !65, line: 93, baseType: !147, size: 32, offset: 2496)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !66, file: !65, line: 94, baseType: !147, size: 32, offset: 2528)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !66, file: !65, line: 95, baseType: !147, size: 32, offset: 2560)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !66, file: !65, line: 96, baseType: !147, size: 32, offset: 2592)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !66, file: !65, line: 97, baseType: !147, size: 32, offset: 2624)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !66, file: !65, line: 98, baseType: !147, size: 32, offset: 2656)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !66, file: !65, line: 99, baseType: !147, size: 32, offset: 2688)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !66, file: !65, line: 100, baseType: !102, size: 16, offset: 2720)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !66, file: !65, line: 101, baseType: !263, size: 16, offset: 2736)
!263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 16, elements: !193)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !66, file: !65, line: 103, baseType: !265, size: 64, offset: 2752)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !65, line: 45, flags: DIFlagFwdDecl)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !66, file: !65, line: 104, baseType: !268, size: 1152, offset: 2816)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 1152, elements: !1813)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !271, line: 57, size: 2496, elements: !272)
!271 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!272 = !{!273, !274, !275, !276, !277, !1607, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !270, file: !271, line: 59, baseType: !102, size: 16)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !270, file: !271, line: 59, baseType: !102, size: 16, offset: 16)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !270, file: !271, line: 59, baseType: !102, size: 16, offset: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !270, file: !271, line: 59, baseType: !102, size: 16, offset: 48)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !270, file: !271, line: 60, baseType: !278, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !40, line: 115, size: 11392, elements: !280)
!280 = !{!281, !282, !283, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !308, !322, !323, !364, !365, !368, !369, !385, !386, !387, !388, !389, !390, !391, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !821, !822, !823, !824, !825, !826, !827, !828, !829, !832, !835, !836, !837, !838, !839, !840, !843, !846, !850, !851, !857, !858, !859, !860, !861, !862, !864, !867, !870, !871, !1595, !1596}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !279, file: !40, line: 116, baseType: !69, size: 960)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !279, file: !40, line: 117, baseType: !139, size: 64, offset: 960)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !279, file: !40, line: 119, baseType: !284, size: 64, offset: 1024)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !40, line: 57, flags: DIFlagFwdDecl)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !279, file: !40, line: 121, baseType: !102, size: 16, offset: 1088)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !279, file: !40, line: 121, baseType: !102, size: 16, offset: 1104)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !279, file: !40, line: 122, baseType: !5, size: 32, offset: 1120)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !279, file: !40, line: 122, baseType: !5, size: 32, offset: 1152)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !279, file: !40, line: 122, baseType: !5, size: 32, offset: 1184)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !279, file: !40, line: 123, baseType: !118, size: 512, offset: 1216)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !279, file: !40, line: 124, baseType: !278, size: 64, offset: 1728)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !279, file: !40, line: 124, baseType: !278, size: 64, offset: 1792)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !279, file: !40, line: 127, baseType: !278, size: 64, offset: 1856)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !279, file: !40, line: 127, baseType: !278, size: 64, offset: 1920)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !279, file: !40, line: 127, baseType: !278, size: 64, offset: 1984)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !279, file: !40, line: 128, baseType: !265, size: 64, offset: 2048)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !279, file: !40, line: 130, baseType: !299, size: 64, offset: 2112)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !40, line: 97, size: 832, elements: !301)
!301 = !{!302, !306, !307}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !300, file: !40, line: 98, baseType: !303, size: 768)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 768, elements: !304)
!304 = !{!305, !214}
!305 = !DISubrange(count: 8)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !300, file: !40, line: 99, baseType: !5, size: 32, offset: 768)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !300, file: !40, line: 99, baseType: !5, size: 32, offset: 800)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !279, file: !40, line: 131, baseType: !309, size: 64, offset: 2176)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !311, line: 486, size: 1600, elements: !312)
!311 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!312 = !{!313, !314, !315, !316, !317, !318, !319, !320, !321}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !310, file: !311, line: 487, baseType: !69, size: 960)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !310, file: !311, line: 489, baseType: !128, size: 128, offset: 960)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !310, file: !311, line: 490, baseType: !128, size: 128, offset: 1088)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !310, file: !311, line: 491, baseType: !128, size: 128, offset: 1216)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !310, file: !311, line: 492, baseType: !128, size: 128, offset: 1344)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !310, file: !311, line: 494, baseType: !5, size: 32, offset: 1472)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !310, file: !311, line: 495, baseType: !5, size: 32, offset: 1504)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !310, file: !311, line: 497, baseType: !5, size: 32, offset: 1536)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !310, file: !311, line: 498, baseType: !5, size: 32, offset: 1568)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !279, file: !40, line: 132, baseType: !309, size: 64, offset: 2240)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !279, file: !40, line: 133, baseType: !324, size: 64, offset: 2304)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !311, line: 334, size: 1728, elements: !326)
!326 = !{!327, !328, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !363}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !325, file: !311, line: 335, baseType: !128, size: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !325, file: !311, line: 336, baseType: !329, size: 64, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !311, line: 47, flags: DIFlagFwdDecl)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !325, file: !311, line: 338, baseType: !102, size: 16, offset: 192)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !325, file: !311, line: 338, baseType: !102, size: 16, offset: 208)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !325, file: !311, line: 339, baseType: !41, size: 32, offset: 224)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !325, file: !311, line: 340, baseType: !5, size: 32, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !325, file: !311, line: 342, baseType: !147, size: 32, offset: 288)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !325, file: !311, line: 343, baseType: !212, size: 96, offset: 320)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !325, file: !311, line: 344, baseType: !212, size: 96, offset: 416)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !325, file: !311, line: 347, baseType: !128, size: 128, offset: 512)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !325, file: !311, line: 349, baseType: !5, size: 32, offset: 640)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !325, file: !311, line: 350, baseType: !5, size: 32, offset: 672)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !325, file: !311, line: 351, baseType: !62, size: 64, offset: 704)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !325, file: !311, line: 352, baseType: !62, size: 64, offset: 768)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !325, file: !311, line: 354, baseType: !344, size: 384, offset: 832)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !311, line: 116, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !311, line: 94, size: 384, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !345, file: !311, line: 96, baseType: !5, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !345, file: !311, line: 96, baseType: !5, size: 32, offset: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !345, file: !311, line: 97, baseType: !5, size: 32, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !345, file: !311, line: 97, baseType: !5, size: 32, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !345, file: !311, line: 99, baseType: !102, size: 16, offset: 128)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !345, file: !311, line: 100, baseType: !102, size: 16, offset: 144)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !345, file: !311, line: 102, baseType: !102, size: 16, offset: 160)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !345, file: !311, line: 105, baseType: !102, size: 16, offset: 176)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !345, file: !311, line: 108, baseType: !102, size: 16, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !345, file: !311, line: 109, baseType: !102, size: 16, offset: 208)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !345, file: !311, line: 111, baseType: !102, size: 16, offset: 224)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !345, file: !311, line: 112, baseType: !102, size: 16, offset: 240)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !345, file: !311, line: 114, baseType: !5, size: 32, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !345, file: !311, line: 114, baseType: !5, size: 32, offset: 288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !345, file: !311, line: 115, baseType: !5, size: 32, offset: 320)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !345, file: !311, line: 115, baseType: !5, size: 32, offset: 352)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !325, file: !311, line: 355, baseType: !118, size: 512, offset: 1216)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !279, file: !40, line: 134, baseType: !62, size: 64, offset: 2368)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !279, file: !40, line: 136, baseType: !366, size: 64, offset: 2432)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !4, line: 61, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !279, file: !40, line: 138, baseType: !344, size: 384, offset: 2496)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !279, file: !40, line: 139, baseType: !370, size: 64, offset: 2880)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !311, line: 80, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !311, line: 72, size: 192, elements: !373)
!373 = !{!374, !381, !382, !383, !384}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !372, file: !311, line: 73, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !311, line: 59, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !311, line: 56, size: 128, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !377, file: !311, line: 57, baseType: !212, size: 96)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !377, file: !311, line: 58, baseType: !5, size: 32, offset: 96)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !372, file: !311, line: 74, baseType: !5, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !372, file: !311, line: 76, baseType: !5, size: 32, offset: 96)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !372, file: !311, line: 77, baseType: !5, size: 32, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !372, file: !311, line: 79, baseType: !5, size: 32, offset: 160)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !279, file: !40, line: 141, baseType: !128, size: 128, offset: 2944)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !279, file: !40, line: 142, baseType: !128, size: 128, offset: 3072)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !279, file: !40, line: 143, baseType: !128, size: 128, offset: 3200)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !279, file: !40, line: 144, baseType: !128, size: 128, offset: 3328)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !279, file: !40, line: 146, baseType: !5, size: 32, offset: 3456)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !279, file: !40, line: 147, baseType: !5, size: 32, offset: 3488)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !279, file: !40, line: 150, baseType: !392, size: 64, offset: 3520)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !395, line: 93, size: 7552, elements: !396)
!395 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!396 = !{!397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !445, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !512, !513, !514, !515, !516, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !555, !556, !565, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !611, !743}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !394, file: !395, line: 94, baseType: !69, size: 960)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !394, file: !395, line: 95, baseType: !139, size: 64, offset: 960)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !394, file: !395, line: 97, baseType: !102, size: 16, offset: 1024)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !394, file: !395, line: 97, baseType: !102, size: 16, offset: 1040)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !394, file: !395, line: 99, baseType: !147, size: 32, offset: 1056)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !394, file: !395, line: 99, baseType: !147, size: 32, offset: 1088)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !394, file: !395, line: 99, baseType: !147, size: 32, offset: 1120)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !394, file: !395, line: 100, baseType: !147, size: 32, offset: 1152)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !394, file: !395, line: 100, baseType: !147, size: 32, offset: 1184)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !394, file: !395, line: 100, baseType: !147, size: 32, offset: 1216)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !394, file: !395, line: 101, baseType: !147, size: 32, offset: 1248)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !394, file: !395, line: 101, baseType: !147, size: 32, offset: 1280)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !394, file: !395, line: 101, baseType: !147, size: 32, offset: 1312)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !394, file: !395, line: 102, baseType: !147, size: 32, offset: 1344)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !394, file: !395, line: 102, baseType: !147, size: 32, offset: 1376)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !394, file: !395, line: 102, baseType: !147, size: 32, offset: 1408)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !394, file: !395, line: 103, baseType: !147, size: 32, offset: 1440)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !394, file: !395, line: 103, baseType: !147, size: 32, offset: 1472)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !394, file: !395, line: 103, baseType: !147, size: 32, offset: 1504)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !394, file: !395, line: 103, baseType: !147, size: 32, offset: 1536)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !394, file: !395, line: 103, baseType: !147, size: 32, offset: 1568)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !394, file: !395, line: 104, baseType: !147, size: 32, offset: 1600)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !394, file: !395, line: 104, baseType: !147, size: 32, offset: 1632)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !394, file: !395, line: 104, baseType: !147, size: 32, offset: 1664)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !394, file: !395, line: 104, baseType: !147, size: 32, offset: 1696)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !394, file: !395, line: 104, baseType: !147, size: 32, offset: 1728)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !394, file: !395, line: 105, baseType: !147, size: 32, offset: 1760)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !394, file: !395, line: 108, baseType: !425, size: 704, offset: 1792)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !395, line: 53, size: 704, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !425, file: !395, line: 54, baseType: !147, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !425, file: !395, line: 55, baseType: !147, size: 32, offset: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !425, file: !395, line: 56, baseType: !147, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !425, file: !395, line: 57, baseType: !147, size: 32, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !425, file: !395, line: 59, baseType: !212, size: 96, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !425, file: !395, line: 60, baseType: !212, size: 96, offset: 224)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !425, file: !395, line: 61, baseType: !212, size: 96, offset: 320)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !425, file: !395, line: 63, baseType: !147, size: 32, offset: 416)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !425, file: !395, line: 64, baseType: !147, size: 32, offset: 448)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !425, file: !395, line: 65, baseType: !147, size: 32, offset: 480)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !425, file: !395, line: 67, baseType: !102, size: 16, offset: 512)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !425, file: !395, line: 68, baseType: !102, size: 16, offset: 528)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !425, file: !395, line: 69, baseType: !102, size: 16, offset: 544)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !425, file: !395, line: 70, baseType: !102, size: 16, offset: 560)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !425, file: !395, line: 72, baseType: !147, size: 32, offset: 576)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !425, file: !395, line: 73, baseType: !147, size: 32, offset: 608)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !425, file: !395, line: 74, baseType: !147, size: 32, offset: 640)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !425, file: !395, line: 75, baseType: !147, size: 32, offset: 672)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !394, file: !395, line: 109, baseType: !446, size: 128, offset: 2496)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !395, line: 79, size: 128, elements: !447)
!447 = !{!448, !449, !450, !451}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !446, file: !395, line: 80, baseType: !5, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !446, file: !395, line: 81, baseType: !5, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !446, file: !395, line: 82, baseType: !5, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !446, file: !395, line: 83, baseType: !5, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !394, file: !395, line: 111, baseType: !147, size: 32, offset: 2624)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !394, file: !395, line: 111, baseType: !147, size: 32, offset: 2656)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !394, file: !395, line: 112, baseType: !147, size: 32, offset: 2688)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !394, file: !395, line: 112, baseType: !147, size: 32, offset: 2720)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !394, file: !395, line: 113, baseType: !147, size: 32, offset: 2752)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !394, file: !395, line: 114, baseType: !147, size: 32, offset: 2784)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !394, file: !395, line: 114, baseType: !147, size: 32, offset: 2816)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !394, file: !395, line: 115, baseType: !102, size: 16, offset: 2848)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !394, file: !395, line: 115, baseType: !102, size: 16, offset: 2864)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !394, file: !395, line: 116, baseType: !102, size: 16, offset: 2880)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !394, file: !395, line: 117, baseType: !89, size: 8, offset: 2896)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !394, file: !395, line: 117, baseType: !89, size: 8, offset: 2904)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !394, file: !395, line: 119, baseType: !147, size: 32, offset: 2912)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !394, file: !395, line: 119, baseType: !147, size: 32, offset: 2944)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !394, file: !395, line: 120, baseType: !102, size: 16, offset: 2976)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !394, file: !395, line: 120, baseType: !102, size: 16, offset: 2992)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !394, file: !395, line: 121, baseType: !147, size: 32, offset: 3008)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !394, file: !395, line: 121, baseType: !147, size: 32, offset: 3040)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !394, file: !395, line: 122, baseType: !147, size: 32, offset: 3072)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !394, file: !395, line: 123, baseType: !147, size: 32, offset: 3104)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !394, file: !395, line: 124, baseType: !102, size: 16, offset: 3136)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !394, file: !395, line: 125, baseType: !102, size: 16, offset: 3152)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !394, file: !395, line: 127, baseType: !5, size: 32, offset: 3168)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !394, file: !395, line: 127, baseType: !5, size: 32, offset: 3200)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !394, file: !395, line: 128, baseType: !5, size: 32, offset: 3232)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !394, file: !395, line: 128, baseType: !5, size: 32, offset: 3264)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !394, file: !395, line: 129, baseType: !102, size: 16, offset: 3296)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !394, file: !395, line: 129, baseType: !102, size: 16, offset: 3312)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !394, file: !395, line: 129, baseType: !102, size: 16, offset: 3328)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !394, file: !395, line: 129, baseType: !102, size: 16, offset: 3344)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !394, file: !395, line: 130, baseType: !147, size: 32, offset: 3360)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !394, file: !395, line: 130, baseType: !147, size: 32, offset: 3392)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !394, file: !395, line: 130, baseType: !147, size: 32, offset: 3424)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !394, file: !395, line: 130, baseType: !147, size: 32, offset: 3456)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !394, file: !395, line: 131, baseType: !147, size: 32, offset: 3488)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !394, file: !395, line: 131, baseType: !147, size: 32, offset: 3520)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !394, file: !395, line: 131, baseType: !147, size: 32, offset: 3552)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !394, file: !395, line: 131, baseType: !147, size: 32, offset: 3584)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !394, file: !395, line: 132, baseType: !147, size: 32, offset: 3616)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !394, file: !395, line: 132, baseType: !147, size: 32, offset: 3648)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !394, file: !395, line: 133, baseType: !118, size: 512, offset: 3680)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !394, file: !395, line: 135, baseType: !147, size: 32, offset: 4192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !394, file: !395, line: 136, baseType: !147, size: 32, offset: 4224)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !394, file: !395, line: 137, baseType: !147, size: 32, offset: 4256)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !394, file: !395, line: 138, baseType: !5, size: 32, offset: 4288)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !394, file: !395, line: 141, baseType: !89, size: 8, offset: 4320)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !394, file: !395, line: 141, baseType: !89, size: 8, offset: 4328)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !394, file: !395, line: 141, baseType: !89, size: 8, offset: 4336)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !394, file: !395, line: 141, baseType: !89, size: 8, offset: 4344)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !394, file: !395, line: 142, baseType: !102, size: 16, offset: 4352)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !394, file: !395, line: 142, baseType: !102, size: 16, offset: 4368)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !394, file: !395, line: 142, baseType: !102, size: 16, offset: 4384)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !394, file: !395, line: 145, baseType: !89, size: 8, offset: 4400)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !394, file: !395, line: 145, baseType: !89, size: 8, offset: 4408)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !394, file: !395, line: 148, baseType: !102, size: 16, offset: 4416)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !394, file: !395, line: 148, baseType: !102, size: 16, offset: 4432)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !394, file: !395, line: 149, baseType: !147, size: 32, offset: 4448)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !394, file: !395, line: 149, baseType: !147, size: 32, offset: 4480)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !394, file: !395, line: 152, baseType: !511, size: 128, offset: 4512)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 128, elements: !209)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !394, file: !395, line: 153, baseType: !147, size: 32, offset: 4640)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !394, file: !395, line: 154, baseType: !147, size: 32, offset: 4672)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !394, file: !395, line: 157, baseType: !102, size: 16, offset: 4704)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !394, file: !395, line: 157, baseType: !102, size: 16, offset: 4720)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !394, file: !395, line: 160, baseType: !517, size: 64, offset: 4736)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !271, line: 113, size: 6208, elements: !519)
!519 = !{!520, !521, !522, !523, !524, !525, !529}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !518, file: !271, line: 114, baseType: !102, size: 16)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !518, file: !271, line: 114, baseType: !102, size: 16, offset: 16)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !518, file: !271, line: 115, baseType: !89, size: 8, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !518, file: !271, line: 115, baseType: !89, size: 8, offset: 40)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !518, file: !271, line: 116, baseType: !89, size: 8, offset: 48)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !518, file: !271, line: 117, baseType: !526, size: 8, offset: 56)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8, elements: !527)
!527 = !{!528}
!528 = !DISubrange(count: 1)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !518, file: !271, line: 119, baseType: !530, size: 6144, offset: 64)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 6144, elements: !540)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !271, line: 109, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !271, line: 106, size: 192, elements: !533)
!533 = !{!534, !535, !536, !537, !538, !539}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !532, file: !271, line: 107, baseType: !147, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !532, file: !271, line: 107, baseType: !147, size: 32, offset: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !532, file: !271, line: 107, baseType: !147, size: 32, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !532, file: !271, line: 107, baseType: !147, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !532, file: !271, line: 107, baseType: !147, size: 32, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !532, file: !271, line: 108, baseType: !5, size: 32, offset: 160)
!540 = !{!541}
!541 = !DISubrange(count: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !394, file: !395, line: 161, baseType: !517, size: 64, offset: 4800)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !394, file: !395, line: 162, baseType: !89, size: 8, offset: 4864)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !394, file: !395, line: 162, baseType: !89, size: 8, offset: 4872)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !394, file: !395, line: 163, baseType: !89, size: 8, offset: 4880)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !394, file: !395, line: 163, baseType: !89, size: 8, offset: 4888)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !394, file: !395, line: 164, baseType: !102, size: 16, offset: 4896)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !394, file: !395, line: 164, baseType: !102, size: 16, offset: 4912)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !394, file: !395, line: 165, baseType: !147, size: 32, offset: 4928)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !394, file: !395, line: 165, baseType: !147, size: 32, offset: 4960)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !394, file: !395, line: 167, baseType: !268, size: 1152, offset: 4992)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !394, file: !395, line: 168, baseType: !553, size: 64, offset: 6144)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !65, line: 43, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !394, file: !395, line: 169, baseType: !265, size: 64, offset: 6208)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !394, file: !395, line: 170, baseType: !557, size: 64, offset: 6272)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !559, line: 51, size: 1216, elements: !560)
!559 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!560 = !{!561, !562, !563, !564}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !558, file: !559, line: 52, baseType: !69, size: 960)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !558, file: !559, line: 54, baseType: !128, size: 128, offset: 960)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !558, file: !559, line: 59, baseType: !41, size: 32, offset: 1088)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !558, file: !559, line: 60, baseType: !212, size: 96, offset: 1120)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !394, file: !395, line: 171, baseType: !566, size: 64, offset: 6336)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !70, line: 159, size: 448, elements: !568)
!568 = !{!569, !571, !572, !574, !575, !578}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !567, file: !70, line: 161, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 64, elements: !193)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !567, file: !70, line: 162, baseType: !570, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !567, file: !70, line: 163, baseType: !573, size: 32, offset: 128)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 32, elements: !193)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !567, file: !70, line: 164, baseType: !573, size: 32, offset: 160)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !567, file: !70, line: 165, baseType: !576, size: 128, offset: 192)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 128, elements: !193)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !567, file: !70, line: 166, baseType: !579, size: 128, offset: 320)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 128, elements: !193)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !70, line: 46, flags: DIFlagFwdDecl)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !394, file: !395, line: 174, baseType: !147, size: 32, offset: 6400)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !394, file: !395, line: 174, baseType: !147, size: 32, offset: 6432)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !394, file: !395, line: 174, baseType: !147, size: 32, offset: 6464)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !394, file: !395, line: 175, baseType: !147, size: 32, offset: 6496)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !394, file: !395, line: 175, baseType: !147, size: 32, offset: 6528)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !394, file: !395, line: 176, baseType: !102, size: 16, offset: 6560)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !394, file: !395, line: 176, baseType: !102, size: 16, offset: 6576)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !394, file: !395, line: 179, baseType: !212, size: 96, offset: 6592)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !394, file: !395, line: 179, baseType: !212, size: 96, offset: 6688)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !394, file: !395, line: 180, baseType: !147, size: 32, offset: 6784)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !394, file: !395, line: 180, baseType: !147, size: 32, offset: 6816)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !394, file: !395, line: 180, baseType: !147, size: 32, offset: 6848)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !394, file: !395, line: 181, baseType: !147, size: 32, offset: 6880)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !394, file: !395, line: 181, baseType: !147, size: 32, offset: 6912)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !394, file: !395, line: 182, baseType: !147, size: 32, offset: 6944)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !394, file: !395, line: 182, baseType: !147, size: 32, offset: 6976)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !394, file: !395, line: 183, baseType: !102, size: 16, offset: 7008)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !394, file: !395, line: 183, baseType: !102, size: 16, offset: 7024)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !394, file: !395, line: 185, baseType: !5, size: 32, offset: 7040)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !394, file: !395, line: 186, baseType: !102, size: 16, offset: 7072)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !394, file: !395, line: 187, baseType: !102, size: 16, offset: 7088)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !394, file: !395, line: 190, baseType: !511, size: 128, offset: 7104)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !394, file: !395, line: 191, baseType: !102, size: 16, offset: 7232)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !394, file: !395, line: 192, baseType: !102, size: 16, offset: 7248)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !394, file: !395, line: 195, baseType: !102, size: 16, offset: 7264)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !394, file: !395, line: 196, baseType: !102, size: 16, offset: 7280)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !394, file: !395, line: 197, baseType: !102, size: 16, offset: 7296)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !394, file: !395, line: 198, baseType: !610, size: 48, offset: 7312)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 48, elements: !213)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !394, file: !395, line: 200, baseType: !612, size: 64, offset: 7360)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !395, line: 86, size: 192, elements: !614)
!614 = !{!615, !740, !741, !742}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !613, file: !395, line: 87, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !618, line: 77, size: 15424, elements: !619)
!618 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!619 = !{!620, !621, !622, !625, !626, !629, !692, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !729, !730, !734}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !617, file: !618, line: 78, baseType: !69, size: 960)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !617, file: !618, line: 80, baseType: !88, size: 8192, offset: 960)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !617, file: !618, line: 82, baseType: !623, size: 64, offset: 9152)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !618, line: 43, flags: DIFlagFwdDecl)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !617, file: !618, line: 83, baseType: !580, size: 64, offset: 9216)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !617, file: !618, line: 86, baseType: !627, size: 64, offset: 9280)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !618, line: 41, flags: DIFlagFwdDecl)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !617, file: !618, line: 87, baseType: !630, size: 64, offset: 9344)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !632, line: 110, size: 1152, elements: !633)
!632 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!633 = !{!634, !635, !636, !637, !638, !639, !640, !642, !644, !645, !653, !654, !655, !656, !658, !687, !688, !689, !690}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !631, file: !632, line: 111, baseType: !630, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !631, file: !632, line: 111, baseType: !630, size: 64, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !631, file: !632, line: 114, baseType: !5, size: 32, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !631, file: !632, line: 114, baseType: !5, size: 32, offset: 160)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !631, file: !632, line: 115, baseType: !102, size: 16, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !631, file: !632, line: 115, baseType: !102, size: 16, offset: 208)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !631, file: !632, line: 118, baseType: !641, size: 64, offset: 256)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !631, file: !632, line: 120, baseType: !643, size: 64, offset: 320)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !631, file: !632, line: 122, baseType: !643, size: 64, offset: 384)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !631, file: !632, line: 125, baseType: !646, size: 128, offset: 448)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !173, line: 89, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !173, line: 86, size: 128, elements: !648)
!648 = !{!649, !650, !651, !652}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !647, file: !173, line: 87, baseType: !5, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !647, file: !173, line: 87, baseType: !5, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !647, file: !173, line: 88, baseType: !5, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !647, file: !173, line: 88, baseType: !5, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !631, file: !632, line: 127, baseType: !5, size: 32, offset: 576)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !631, file: !632, line: 127, baseType: !5, size: 32, offset: 608)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !631, file: !632, line: 130, baseType: !128, size: 128, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !631, file: !632, line: 133, baseType: !657, size: 128, offset: 768)
!657 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !646)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !631, file: !632, line: 134, baseType: !659, size: 64, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !661)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !632, line: 108, baseType: !662)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !632, line: 85, size: 1600, elements: !663)
!663 = !{!664, !666, !667, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !662, file: !632, line: 86, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !662, file: !632, line: 86, baseType: !665, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !662, file: !632, line: 89, baseType: !668, size: 592, offset: 128)
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 592, elements: !669)
!669 = !{!670}
!670 = !DISubrange(count: 74)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !662, file: !632, line: 90, baseType: !41, size: 32, offset: 736)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !662, file: !632, line: 90, baseType: !41, size: 32, offset: 768)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !662, file: !632, line: 90, baseType: !41, size: 32, offset: 800)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !662, file: !632, line: 91, baseType: !5, size: 32, offset: 832)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !662, file: !632, line: 91, baseType: !5, size: 32, offset: 864)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !662, file: !632, line: 91, baseType: !5, size: 32, offset: 896)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !662, file: !632, line: 93, baseType: !393, size: 64, offset: 960)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !662, file: !632, line: 94, baseType: !557, size: 64, offset: 1024)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !662, file: !632, line: 96, baseType: !643, size: 64, offset: 1088)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !662, file: !632, line: 97, baseType: !643, size: 64, offset: 1152)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !662, file: !632, line: 98, baseType: !643, size: 64, offset: 1216)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !662, file: !632, line: 99, baseType: !641, size: 64, offset: 1280)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !662, file: !632, line: 101, baseType: !5, size: 32, offset: 1344)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !662, file: !632, line: 101, baseType: !5, size: 32, offset: 1376)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !662, file: !632, line: 104, baseType: !62, size: 64, offset: 1408)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !662, file: !632, line: 106, baseType: !128, size: 128, offset: 1472)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !631, file: !632, line: 137, baseType: !5, size: 32, offset: 960)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !631, file: !632, line: 140, baseType: !5, size: 32, offset: 992)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !631, file: !632, line: 143, baseType: !5, size: 32, offset: 1024)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !631, file: !632, line: 146, baseType: !691, size: 64, offset: 1088)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !617, file: !618, line: 89, baseType: !693, size: 512, offset: 9408)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 512, elements: !694)
!694 = !{!305}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !617, file: !618, line: 90, baseType: !102, size: 16, offset: 9920)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !617, file: !618, line: 90, baseType: !102, size: 16, offset: 9936)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !617, file: !618, line: 92, baseType: !102, size: 16, offset: 9952)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !617, file: !618, line: 92, baseType: !102, size: 16, offset: 9968)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !617, file: !618, line: 93, baseType: !102, size: 16, offset: 9984)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !617, file: !618, line: 93, baseType: !102, size: 16, offset: 10000)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !617, file: !618, line: 94, baseType: !5, size: 32, offset: 10016)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !617, file: !618, line: 97, baseType: !102, size: 16, offset: 10048)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !617, file: !618, line: 97, baseType: !102, size: 16, offset: 10064)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !617, file: !618, line: 98, baseType: !102, size: 16, offset: 10080)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !617, file: !618, line: 98, baseType: !102, size: 16, offset: 10096)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !617, file: !618, line: 99, baseType: !102, size: 16, offset: 10112)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !617, file: !618, line: 99, baseType: !102, size: 16, offset: 10128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !617, file: !618, line: 100, baseType: !41, size: 32, offset: 10144)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !617, file: !618, line: 101, baseType: !577, size: 64, offset: 10176)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !617, file: !618, line: 103, baseType: !95, size: 64, offset: 10240)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !617, file: !618, line: 104, baseType: !566, size: 64, offset: 10304)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !617, file: !618, line: 107, baseType: !147, size: 32, offset: 10368)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !617, file: !618, line: 108, baseType: !5, size: 32, offset: 10400)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !617, file: !618, line: 109, baseType: !102, size: 16, offset: 10432)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !617, file: !618, line: 110, baseType: !102, size: 16, offset: 10448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !617, file: !618, line: 113, baseType: !5, size: 32, offset: 10464)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !617, file: !618, line: 113, baseType: !5, size: 32, offset: 10496)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !617, file: !618, line: 114, baseType: !89, size: 8, offset: 10528)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !617, file: !618, line: 114, baseType: !89, size: 8, offset: 10536)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !617, file: !618, line: 115, baseType: !102, size: 16, offset: 10544)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !617, file: !618, line: 116, baseType: !511, size: 128, offset: 10560)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !617, file: !618, line: 119, baseType: !147, size: 32, offset: 10688)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !617, file: !618, line: 119, baseType: !147, size: 32, offset: 10720)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !617, file: !618, line: 122, baseType: !725, size: 512, offset: 10752)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !165, line: 182, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !165, line: 180, size: 512, elements: !727)
!727 = !{!728}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !726, file: !165, line: 181, baseType: !118, size: 512)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !617, file: !618, line: 123, baseType: !89, size: 8, offset: 11264)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !617, file: !618, line: 125, baseType: !731, size: 56, offset: 11272)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 56, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 7)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !617, file: !618, line: 126, baseType: !735, size: 4096, offset: 11328)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !736, size: 4096, elements: !694)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !618, line: 69, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !618, line: 67, size: 512, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !737, file: !618, line: 68, baseType: !118, size: 512)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !613, file: !395, line: 88, baseType: !691, size: 64, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !613, file: !395, line: 89, baseType: !5, size: 32, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !613, file: !395, line: 90, baseType: !5, size: 32, offset: 160)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !394, file: !395, line: 202, baseType: !128, size: 128, offset: 7424)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !279, file: !40, line: 151, baseType: !691, size: 64, offset: 3584)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !279, file: !40, line: 152, baseType: !5, size: 32, offset: 3648)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !279, file: !40, line: 153, baseType: !5, size: 32, offset: 3680)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !279, file: !40, line: 156, baseType: !212, size: 96, offset: 3712)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !279, file: !40, line: 156, baseType: !212, size: 96, offset: 3808)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !279, file: !40, line: 156, baseType: !212, size: 96, offset: 3904)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !279, file: !40, line: 157, baseType: !212, size: 96, offset: 4000)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !279, file: !40, line: 158, baseType: !212, size: 96, offset: 4096)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !279, file: !40, line: 159, baseType: !212, size: 96, offset: 4192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !279, file: !40, line: 160, baseType: !212, size: 96, offset: 4288)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !279, file: !40, line: 160, baseType: !212, size: 96, offset: 4384)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !279, file: !40, line: 161, baseType: !511, size: 128, offset: 4480)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !279, file: !40, line: 161, baseType: !511, size: 128, offset: 4608)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !279, file: !40, line: 162, baseType: !212, size: 96, offset: 4736)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !279, file: !40, line: 162, baseType: !212, size: 96, offset: 4832)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !279, file: !40, line: 163, baseType: !147, size: 32, offset: 4928)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !279, file: !40, line: 163, baseType: !147, size: 32, offset: 4960)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !279, file: !40, line: 164, baseType: !762, size: 512, offset: 4992)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 512, elements: !763)
!763 = !{!210, !210}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !279, file: !40, line: 165, baseType: !762, size: 512, offset: 5504)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !279, file: !40, line: 166, baseType: !762, size: 512, offset: 6016)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !279, file: !40, line: 167, baseType: !762, size: 512, offset: 6528)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !279, file: !40, line: 176, baseType: !762, size: 512, offset: 7040)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !279, file: !40, line: 178, baseType: !41, size: 32, offset: 7552)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !279, file: !40, line: 180, baseType: !102, size: 16, offset: 7584)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !279, file: !40, line: 181, baseType: !102, size: 16, offset: 7600)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !279, file: !40, line: 183, baseType: !102, size: 16, offset: 7616)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !279, file: !40, line: 183, baseType: !102, size: 16, offset: 7632)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !279, file: !40, line: 184, baseType: !102, size: 16, offset: 7648)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !279, file: !40, line: 184, baseType: !102, size: 16, offset: 7664)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !279, file: !40, line: 185, baseType: !102, size: 16, offset: 7680)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !279, file: !40, line: 186, baseType: !102, size: 16, offset: 7696)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !279, file: !40, line: 187, baseType: !102, size: 16, offset: 7712)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !279, file: !40, line: 188, baseType: !89, size: 8, offset: 7728)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !279, file: !40, line: 189, baseType: !89, size: 8, offset: 7736)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !279, file: !40, line: 192, baseType: !5, size: 32, offset: 7744)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !279, file: !40, line: 192, baseType: !5, size: 32, offset: 7776)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !279, file: !40, line: 192, baseType: !5, size: 32, offset: 7808)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !279, file: !40, line: 192, baseType: !5, size: 32, offset: 7840)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !279, file: !40, line: 194, baseType: !5, size: 32, offset: 7872)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !279, file: !40, line: 202, baseType: !147, size: 32, offset: 7904)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !279, file: !40, line: 202, baseType: !147, size: 32, offset: 7936)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !279, file: !40, line: 202, baseType: !147, size: 32, offset: 7968)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !279, file: !40, line: 211, baseType: !147, size: 32, offset: 8000)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !279, file: !40, line: 212, baseType: !147, size: 32, offset: 8032)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !279, file: !40, line: 213, baseType: !147, size: 32, offset: 8064)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !279, file: !40, line: 214, baseType: !147, size: 32, offset: 8096)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !279, file: !40, line: 215, baseType: !147, size: 32, offset: 8128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !279, file: !40, line: 216, baseType: !147, size: 32, offset: 8160)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !279, file: !40, line: 219, baseType: !147, size: 32, offset: 8192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !279, file: !40, line: 220, baseType: !147, size: 32, offset: 8224)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !279, file: !40, line: 221, baseType: !147, size: 32, offset: 8256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !279, file: !40, line: 224, baseType: !798, size: 16, offset: 8288)
!798 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !279, file: !40, line: 224, baseType: !798, size: 16, offset: 8304)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !279, file: !40, line: 226, baseType: !102, size: 16, offset: 8320)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !279, file: !40, line: 228, baseType: !89, size: 8, offset: 8336)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !279, file: !40, line: 229, baseType: !89, size: 8, offset: 8344)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !279, file: !40, line: 231, baseType: !102, size: 16, offset: 8352)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !279, file: !40, line: 232, baseType: !89, size: 8, offset: 8368)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !279, file: !40, line: 233, baseType: !89, size: 8, offset: 8376)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !279, file: !40, line: 234, baseType: !147, size: 32, offset: 8384)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !279, file: !40, line: 235, baseType: !147, size: 32, offset: 8416)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !279, file: !40, line: 237, baseType: !128, size: 128, offset: 8448)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !279, file: !40, line: 238, baseType: !128, size: 128, offset: 8576)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !279, file: !40, line: 239, baseType: !128, size: 128, offset: 8704)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !279, file: !40, line: 240, baseType: !128, size: 128, offset: 8832)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !279, file: !40, line: 242, baseType: !147, size: 32, offset: 8960)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !279, file: !40, line: 244, baseType: !102, size: 16, offset: 8992)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !279, file: !40, line: 245, baseType: !798, size: 16, offset: 9008)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !279, file: !40, line: 246, baseType: !511, size: 128, offset: 9024)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !279, file: !40, line: 248, baseType: !5, size: 32, offset: 9152)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !279, file: !40, line: 249, baseType: !5, size: 32, offset: 9184)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !279, file: !40, line: 251, baseType: !819, size: 64, offset: 9216)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !40, line: 251, flags: DIFlagFwdDecl)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !279, file: !40, line: 253, baseType: !89, size: 8, offset: 9280)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !279, file: !40, line: 254, baseType: !89, size: 8, offset: 9288)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !279, file: !40, line: 255, baseType: !102, size: 16, offset: 9296)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !279, file: !40, line: 256, baseType: !212, size: 96, offset: 9312)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !279, file: !40, line: 258, baseType: !128, size: 128, offset: 9408)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !279, file: !40, line: 259, baseType: !128, size: 128, offset: 9536)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !279, file: !40, line: 260, baseType: !128, size: 128, offset: 9664)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !279, file: !40, line: 261, baseType: !128, size: 128, offset: 9792)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !279, file: !40, line: 263, baseType: !830, size: 64, offset: 9920)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !40, line: 52, flags: DIFlagFwdDecl)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !279, file: !40, line: 264, baseType: !833, size: 64, offset: 9984)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !40, line: 53, flags: DIFlagFwdDecl)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !279, file: !40, line: 265, baseType: !557, size: 64, offset: 10048)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !279, file: !40, line: 267, baseType: !89, size: 8, offset: 10112)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !279, file: !40, line: 268, baseType: !89, size: 8, offset: 10120)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !279, file: !40, line: 269, baseType: !102, size: 16, offset: 10128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !279, file: !40, line: 270, baseType: !147, size: 32, offset: 10144)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !279, file: !40, line: 272, baseType: !841, size: 64, offset: 10176)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !40, line: 54, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !279, file: !40, line: 275, baseType: !844, size: 64, offset: 10240)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !40, line: 275, flags: DIFlagFwdDecl)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !279, file: !40, line: 277, baseType: !847, size: 64, offset: 10304)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !849, line: 41, flags: DIFlagFwdDecl)
!849 = !DIFile(filename: "blender/source/blender/render/intern/include/occlusion.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!850 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !279, file: !40, line: 277, baseType: !847, size: 64, offset: 10368)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !279, file: !40, line: 278, baseType: !852, size: 64, offset: 10432)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !853, line: 27, baseType: !854)
!853 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !855, line: 45, baseType: !856)
!855 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!856 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !279, file: !40, line: 279, baseType: !852, size: 64, offset: 10496)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !279, file: !40, line: 280, baseType: !41, size: 32, offset: 10560)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !279, file: !40, line: 281, baseType: !41, size: 32, offset: 10592)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !279, file: !40, line: 283, baseType: !128, size: 128, offset: 10624)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !279, file: !40, line: 284, baseType: !128, size: 128, offset: 10752)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !279, file: !40, line: 285, baseType: !863, size: 64, offset: 10880)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !279, file: !40, line: 287, baseType: !865, size: 64, offset: 10944)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !40, line: 59, flags: DIFlagFwdDecl)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !279, file: !40, line: 288, baseType: !868, size: 64, offset: 11008)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !40, line: 288, flags: DIFlagFwdDecl)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !279, file: !40, line: 290, baseType: !192, size: 64, offset: 11072)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !279, file: !40, line: 291, baseType: !872, size: 64, offset: 11136)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !618, line: 65, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !618, line: 50, size: 320, elements: !875)
!875 = !{!876, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !874, file: !618, line: 51, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !4, line: 1216, size: 39680, elements: !879)
!879 = !{!880, !881, !882, !883, !963, !964, !965, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !992, !1208, !1211, !1456, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1478, !1479, !1480, !1481, !1482, !1490, !1556, !1563, !1564, !1571, !1574, !1575, !1576, !1577, !1578, !1579}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !878, file: !4, line: 1217, baseType: !69, size: 960)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !878, file: !4, line: 1218, baseType: !139, size: 64, offset: 960)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !878, file: !4, line: 1220, baseType: !278, size: 64, offset: 1024)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !878, file: !4, line: 1221, baseType: !884, size: 64, offset: 1088)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !55, line: 52, size: 4224, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !885, file: !55, line: 53, baseType: !69, size: 960)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !885, file: !55, line: 54, baseType: !139, size: 64, offset: 960)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !885, file: !55, line: 56, baseType: !102, size: 16, offset: 1024)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !885, file: !55, line: 56, baseType: !102, size: 16, offset: 1040)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !885, file: !55, line: 57, baseType: !102, size: 16, offset: 1056)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !885, file: !55, line: 57, baseType: !102, size: 16, offset: 1072)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !885, file: !55, line: 59, baseType: !147, size: 32, offset: 1088)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !885, file: !55, line: 59, baseType: !147, size: 32, offset: 1120)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !885, file: !55, line: 59, baseType: !147, size: 32, offset: 1152)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !885, file: !55, line: 60, baseType: !147, size: 32, offset: 1184)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !885, file: !55, line: 60, baseType: !147, size: 32, offset: 1216)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !885, file: !55, line: 60, baseType: !147, size: 32, offset: 1248)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !885, file: !55, line: 61, baseType: !147, size: 32, offset: 1280)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !885, file: !55, line: 61, baseType: !147, size: 32, offset: 1312)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !885, file: !55, line: 61, baseType: !147, size: 32, offset: 1344)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !885, file: !55, line: 68, baseType: !147, size: 32, offset: 1376)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !885, file: !55, line: 68, baseType: !147, size: 32, offset: 1408)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !885, file: !55, line: 68, baseType: !147, size: 32, offset: 1440)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !885, file: !55, line: 69, baseType: !147, size: 32, offset: 1472)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !885, file: !55, line: 69, baseType: !147, size: 32, offset: 1504)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !885, file: !55, line: 74, baseType: !147, size: 32, offset: 1536)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !885, file: !55, line: 79, baseType: !147, size: 32, offset: 1568)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !885, file: !55, line: 81, baseType: !102, size: 16, offset: 1600)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !885, file: !55, line: 91, baseType: !102, size: 16, offset: 1616)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !885, file: !55, line: 92, baseType: !102, size: 16, offset: 1632)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !885, file: !55, line: 93, baseType: !102, size: 16, offset: 1648)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !885, file: !55, line: 94, baseType: !102, size: 16, offset: 1664)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !885, file: !55, line: 94, baseType: !102, size: 16, offset: 1680)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !885, file: !55, line: 94, baseType: !102, size: 16, offset: 1696)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !885, file: !55, line: 94, baseType: !102, size: 16, offset: 1712)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !885, file: !55, line: 96, baseType: !147, size: 32, offset: 1728)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !885, file: !55, line: 96, baseType: !147, size: 32, offset: 1760)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !885, file: !55, line: 96, baseType: !147, size: 32, offset: 1792)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !885, file: !55, line: 96, baseType: !147, size: 32, offset: 1824)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !885, file: !55, line: 98, baseType: !147, size: 32, offset: 1856)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !885, file: !55, line: 98, baseType: !147, size: 32, offset: 1888)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !885, file: !55, line: 98, baseType: !147, size: 32, offset: 1920)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !885, file: !55, line: 98, baseType: !147, size: 32, offset: 1952)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !885, file: !55, line: 99, baseType: !147, size: 32, offset: 1984)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !885, file: !55, line: 99, baseType: !147, size: 32, offset: 2016)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !885, file: !55, line: 100, baseType: !147, size: 32, offset: 2048)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !885, file: !55, line: 100, baseType: !147, size: 32, offset: 2080)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !885, file: !55, line: 103, baseType: !102, size: 16, offset: 2112)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !885, file: !55, line: 103, baseType: !102, size: 16, offset: 2128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !885, file: !55, line: 103, baseType: !102, size: 16, offset: 2144)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !885, file: !55, line: 103, baseType: !102, size: 16, offset: 2160)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !885, file: !55, line: 106, baseType: !147, size: 32, offset: 2176)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !885, file: !55, line: 106, baseType: !147, size: 32, offset: 2208)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !885, file: !55, line: 106, baseType: !147, size: 32, offset: 2240)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !885, file: !55, line: 106, baseType: !147, size: 32, offset: 2272)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !885, file: !55, line: 107, baseType: !102, size: 16, offset: 2304)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !885, file: !55, line: 107, baseType: !102, size: 16, offset: 2320)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !885, file: !55, line: 107, baseType: !102, size: 16, offset: 2336)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !885, file: !55, line: 107, baseType: !102, size: 16, offset: 2352)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !885, file: !55, line: 108, baseType: !147, size: 32, offset: 2368)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !885, file: !55, line: 108, baseType: !147, size: 32, offset: 2400)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !885, file: !55, line: 109, baseType: !147, size: 32, offset: 2432)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !885, file: !55, line: 109, baseType: !147, size: 32, offset: 2464)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !885, file: !55, line: 110, baseType: !147, size: 32, offset: 2496)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !885, file: !55, line: 110, baseType: !147, size: 32, offset: 2528)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !885, file: !55, line: 110, baseType: !147, size: 32, offset: 2560)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !885, file: !55, line: 111, baseType: !102, size: 16, offset: 2592)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !885, file: !55, line: 111, baseType: !102, size: 16, offset: 2608)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !885, file: !55, line: 112, baseType: !102, size: 16, offset: 2624)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !885, file: !55, line: 112, baseType: !102, size: 16, offset: 2640)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !885, file: !55, line: 112, baseType: !102, size: 16, offset: 2656)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !885, file: !55, line: 115, baseType: !102, size: 16, offset: 2672)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !885, file: !55, line: 118, baseType: !643, size: 64, offset: 2688)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !885, file: !55, line: 118, baseType: !643, size: 64, offset: 2752)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !885, file: !55, line: 121, baseType: !265, size: 64, offset: 2816)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !885, file: !55, line: 122, baseType: !268, size: 1152, offset: 2880)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !885, file: !55, line: 123, baseType: !102, size: 16, offset: 4032)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !885, file: !55, line: 123, baseType: !102, size: 16, offset: 4048)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !885, file: !55, line: 123, baseType: !573, size: 32, offset: 4064)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !885, file: !55, line: 126, baseType: !566, size: 64, offset: 4096)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !885, file: !55, line: 129, baseType: !553, size: 64, offset: 4160)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !878, file: !4, line: 1223, baseType: !877, size: 64, offset: 1152)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !878, file: !4, line: 1225, baseType: !128, size: 128, offset: 1216)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !878, file: !4, line: 1226, baseType: !966, size: 64, offset: 1344)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !4, line: 69, size: 320, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !967, file: !4, line: 70, baseType: !966, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !967, file: !4, line: 70, baseType: !966, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !967, file: !4, line: 71, baseType: !41, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !967, file: !4, line: 71, baseType: !41, size: 32, offset: 160)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !967, file: !4, line: 72, baseType: !5, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !967, file: !4, line: 73, baseType: !102, size: 16, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !967, file: !4, line: 73, baseType: !102, size: 16, offset: 240)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !967, file: !4, line: 74, baseType: !278, size: 64, offset: 256)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !878, file: !4, line: 1227, baseType: !278, size: 64, offset: 1408)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !878, file: !4, line: 1229, baseType: !212, size: 96, offset: 1472)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !878, file: !4, line: 1230, baseType: !212, size: 96, offset: 1568)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !878, file: !4, line: 1231, baseType: !212, size: 96, offset: 1664)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !878, file: !4, line: 1231, baseType: !212, size: 96, offset: 1760)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !878, file: !4, line: 1233, baseType: !41, size: 32, offset: 1856)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !878, file: !4, line: 1234, baseType: !5, size: 32, offset: 1888)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !878, file: !4, line: 1235, baseType: !41, size: 32, offset: 1920)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !878, file: !4, line: 1237, baseType: !102, size: 16, offset: 1952)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !878, file: !4, line: 1239, baseType: !89, size: 8, offset: 1968)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !878, file: !4, line: 1240, baseType: !526, size: 8, offset: 1976)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !878, file: !4, line: 1242, baseType: !553, size: 64, offset: 1984)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !878, file: !4, line: 1244, baseType: !990, size: 64, offset: 2048)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !4, line: 59, flags: DIFlagFwdDecl)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !878, file: !4, line: 1246, baseType: !993, size: 64, offset: 2112)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !4, line: 1067, size: 5184, elements: !995)
!995 = !{!996, !1027, !1028, !1043, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1065, !1081, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1192}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !994, file: !4, line: 1068, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !4, line: 934, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !4, line: 925, size: 576, elements: !1000)
!1000 = !{!1001, !1019, !1020, !1021, !1022, !1023, !1026}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !999, file: !4, line: 926, baseType: !1002, size: 320)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !4, line: 830, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !4, line: 813, size: 320, elements: !1004)
!1004 = !{!1005, !1009, !1012, !1013, !1016, !1017, !1018}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1003, file: !4, line: 814, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1008, line: 41, flags: DIFlagFwdDecl)
!1008 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_texture.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1003, file: !4, line: 815, baseType: !1010, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !4, line: 815, flags: DIFlagFwdDecl)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1003, file: !4, line: 818, baseType: !62, size: 64, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1003, file: !4, line: 819, baseType: !1014, size: 32, offset: 192)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 32, elements: !209)
!1015 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1003, file: !4, line: 822, baseType: !5, size: 32, offset: 224)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1003, file: !4, line: 826, baseType: !5, size: 32, offset: 256)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1003, file: !4, line: 829, baseType: !5, size: 32, offset: 288)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !999, file: !4, line: 928, baseType: !102, size: 16, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !999, file: !4, line: 928, baseType: !102, size: 16, offset: 336)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !999, file: !4, line: 929, baseType: !5, size: 32, offset: 352)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !999, file: !4, line: 930, baseType: !577, size: 64, offset: 384)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !999, file: !4, line: 931, baseType: !1024, size: 64, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !4, line: 931, flags: DIFlagFwdDecl)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !999, file: !4, line: 933, baseType: !62, size: 64, offset: 512)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !994, file: !4, line: 1069, baseType: !997, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !994, file: !4, line: 1070, baseType: !1029, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !4, line: 916, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !4, line: 891, size: 704, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1037, !1038, !1039, !1040, !1041, !1042}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1031, file: !4, line: 892, baseType: !1002, size: 320)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1031, file: !4, line: 896, baseType: !5, size: 32, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1031, file: !4, line: 900, baseType: !1036, size: 96, offset: 352)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 96, elements: !213)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1031, file: !4, line: 903, baseType: !147, size: 32, offset: 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1031, file: !4, line: 906, baseType: !5, size: 32, offset: 480)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1031, file: !4, line: 909, baseType: !147, size: 32, offset: 512)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1031, file: !4, line: 912, baseType: !147, size: 32, offset: 544)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1031, file: !4, line: 914, baseType: !278, size: 64, offset: 576)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1031, file: !4, line: 915, baseType: !62, size: 64, offset: 640)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !994, file: !4, line: 1071, baseType: !1044, size: 64, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !4, line: 920, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !4, line: 918, size: 320, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1046, file: !4, line: 919, baseType: !1002, size: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !994, file: !4, line: 1075, baseType: !147, size: 32, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !994, file: !4, line: 1077, baseType: !147, size: 32, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !994, file: !4, line: 1078, baseType: !147, size: 32, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !994, file: !4, line: 1079, baseType: !102, size: 16, offset: 352)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !994, file: !4, line: 1082, baseType: !102, size: 16, offset: 368)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !994, file: !4, line: 1085, baseType: !89, size: 8, offset: 384)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !994, file: !4, line: 1086, baseType: !89, size: 8, offset: 392)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !994, file: !4, line: 1087, baseType: !89, size: 8, offset: 400)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !994, file: !4, line: 1088, baseType: !89, size: 8, offset: 408)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !994, file: !4, line: 1090, baseType: !147, size: 32, offset: 416)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !994, file: !4, line: 1093, baseType: !102, size: 16, offset: 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !994, file: !4, line: 1096, baseType: !89, size: 8, offset: 464)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !994, file: !4, line: 1098, baseType: !1062, size: 40, offset: 472)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 40, elements: !1063)
!1063 = !{!1064}
!1064 = !DISubrange(count: 5)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !994, file: !4, line: 1101, baseType: !1066, size: 832, offset: 512)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !4, line: 836, size: 832, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1066, file: !4, line: 837, baseType: !1002, size: 320)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1066, file: !4, line: 839, baseType: !102, size: 16, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1066, file: !4, line: 839, baseType: !102, size: 16, offset: 336)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1066, file: !4, line: 842, baseType: !102, size: 16, offset: 352)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1066, file: !4, line: 842, baseType: !102, size: 16, offset: 368)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1066, file: !4, line: 843, baseType: !573, size: 32, offset: 384)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1066, file: !4, line: 845, baseType: !5, size: 32, offset: 416)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1066, file: !4, line: 847, baseType: !62, size: 64, offset: 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1066, file: !4, line: 848, baseType: !616, size: 64, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1066, file: !4, line: 849, baseType: !616, size: 64, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1066, file: !4, line: 850, baseType: !616, size: 64, offset: 640)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1066, file: !4, line: 851, baseType: !212, size: 96, offset: 704)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1066, file: !4, line: 852, baseType: !147, size: 32, offset: 800)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !994, file: !4, line: 1104, baseType: !1082, size: 1344, offset: 1344)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !4, line: 867, size: 1344, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087, !1088, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1082, file: !4, line: 868, baseType: !102, size: 16)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1082, file: !4, line: 869, baseType: !102, size: 16, offset: 16)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1082, file: !4, line: 870, baseType: !102, size: 16, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1082, file: !4, line: 871, baseType: !102, size: 16, offset: 48)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1082, file: !4, line: 873, baseType: !1089, size: 896, offset: 64)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 896, elements: !732)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !4, line: 864, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !4, line: 859, size: 128, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1097, !1098}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1091, file: !4, line: 860, baseType: !102, size: 16)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1091, file: !4, line: 861, baseType: !102, size: 16, offset: 16)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1091, file: !4, line: 861, baseType: !102, size: 16, offset: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1091, file: !4, line: 861, baseType: !102, size: 16, offset: 48)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1091, file: !4, line: 862, baseType: !5, size: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1091, file: !4, line: 863, baseType: !147, size: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1082, file: !4, line: 874, baseType: !62, size: 64, offset: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1082, file: !4, line: 876, baseType: !147, size: 32, offset: 1024)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1082, file: !4, line: 876, baseType: !147, size: 32, offset: 1056)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1082, file: !4, line: 878, baseType: !5, size: 32, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1082, file: !4, line: 879, baseType: !5, size: 32, offset: 1120)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1082, file: !4, line: 881, baseType: !5, size: 32, offset: 1152)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1082, file: !4, line: 881, baseType: !5, size: 32, offset: 1184)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1082, file: !4, line: 883, baseType: !877, size: 64, offset: 1216)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1082, file: !4, line: 884, baseType: !278, size: 64, offset: 1280)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !994, file: !4, line: 1107, baseType: !147, size: 32, offset: 2688)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !994, file: !4, line: 1110, baseType: !147, size: 32, offset: 2720)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !994, file: !4, line: 1113, baseType: !102, size: 16, offset: 2752)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !994, file: !4, line: 1113, baseType: !102, size: 16, offset: 2768)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !994, file: !4, line: 1116, baseType: !89, size: 8, offset: 2784)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !994, file: !4, line: 1117, baseType: !526, size: 8, offset: 2792)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !994, file: !4, line: 1120, baseType: !102, size: 16, offset: 2800)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !994, file: !4, line: 1121, baseType: !147, size: 32, offset: 2816)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !994, file: !4, line: 1122, baseType: !147, size: 32, offset: 2848)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !994, file: !4, line: 1123, baseType: !147, size: 32, offset: 2880)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !994, file: !4, line: 1124, baseType: !147, size: 32, offset: 2912)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !994, file: !4, line: 1125, baseType: !147, size: 32, offset: 2944)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !994, file: !4, line: 1126, baseType: !147, size: 32, offset: 2976)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !994, file: !4, line: 1127, baseType: !147, size: 32, offset: 3008)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !994, file: !4, line: 1128, baseType: !147, size: 32, offset: 3040)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !994, file: !4, line: 1129, baseType: !147, size: 32, offset: 3072)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !994, file: !4, line: 1130, baseType: !147, size: 32, offset: 3104)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !994, file: !4, line: 1131, baseType: !102, size: 16, offset: 3136)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !994, file: !4, line: 1132, baseType: !89, size: 8, offset: 3152)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !994, file: !4, line: 1133, baseType: !89, size: 8, offset: 3160)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !994, file: !4, line: 1134, baseType: !1129, size: 24, offset: 3168)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 24, elements: !213)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !994, file: !4, line: 1135, baseType: !89, size: 8, offset: 3192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !994, file: !4, line: 1138, baseType: !278, size: 64, offset: 3200)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !994, file: !4, line: 1139, baseType: !89, size: 8, offset: 3264)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !994, file: !4, line: 1140, baseType: !89, size: 8, offset: 3272)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !994, file: !4, line: 1141, baseType: !89, size: 8, offset: 3280)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !994, file: !4, line: 1142, baseType: !89, size: 8, offset: 3288)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !994, file: !4, line: 1143, baseType: !89, size: 8, offset: 3296)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !994, file: !4, line: 1144, baseType: !1138, size: 64, offset: 3304)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 64, elements: !694)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !994, file: !4, line: 1145, baseType: !1138, size: 64, offset: 3368)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !994, file: !4, line: 1148, baseType: !89, size: 8, offset: 3432)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !994, file: !4, line: 1149, baseType: !89, size: 8, offset: 3440)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !994, file: !4, line: 1152, baseType: !89, size: 8, offset: 3448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !994, file: !4, line: 1152, baseType: !89, size: 8, offset: 3456)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !994, file: !4, line: 1153, baseType: !89, size: 8, offset: 3464)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !994, file: !4, line: 1154, baseType: !102, size: 16, offset: 3472)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !994, file: !4, line: 1154, baseType: !102, size: 16, offset: 3488)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !994, file: !4, line: 1155, baseType: !102, size: 16, offset: 3504)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !994, file: !4, line: 1155, baseType: !102, size: 16, offset: 3520)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !994, file: !4, line: 1156, baseType: !89, size: 8, offset: 3536)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !994, file: !4, line: 1157, baseType: !89, size: 8, offset: 3544)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !994, file: !4, line: 1159, baseType: !89, size: 8, offset: 3552)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !994, file: !4, line: 1160, baseType: !89, size: 8, offset: 3560)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !994, file: !4, line: 1161, baseType: !89, size: 8, offset: 3568)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !994, file: !4, line: 1162, baseType: !89, size: 8, offset: 3576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !994, file: !4, line: 1165, baseType: !5, size: 32, offset: 3584)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !994, file: !4, line: 1166, baseType: !5, size: 32, offset: 3616)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !994, file: !4, line: 1167, baseType: !5, size: 32, offset: 3648)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !994, file: !4, line: 1168, baseType: !5, size: 32, offset: 3680)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !994, file: !4, line: 1171, baseType: !102, size: 16, offset: 3712)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !994, file: !4, line: 1171, baseType: !102, size: 16, offset: 3728)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !994, file: !4, line: 1172, baseType: !5, size: 32, offset: 3744)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !994, file: !4, line: 1173, baseType: !147, size: 32, offset: 3776)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !994, file: !4, line: 1174, baseType: !147, size: 32, offset: 3808)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !994, file: !4, line: 1177, baseType: !1165, size: 1024, offset: 3840)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !4, line: 963, size: 1024, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1190, !1191}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1165, file: !4, line: 965, baseType: !5, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1165, file: !4, line: 968, baseType: !147, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1165, file: !4, line: 971, baseType: !147, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1165, file: !4, line: 974, baseType: !147, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1165, file: !4, line: 977, baseType: !212, size: 96, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1165, file: !4, line: 979, baseType: !212, size: 96, offset: 224)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1165, file: !4, line: 982, baseType: !5, size: 32, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1165, file: !4, line: 987, baseType: !192, size: 64, offset: 352)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1165, file: !4, line: 989, baseType: !147, size: 32, offset: 416)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1165, file: !4, line: 994, baseType: !5, size: 32, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1165, file: !4, line: 995, baseType: !5, size: 32, offset: 480)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1165, file: !4, line: 997, baseType: !89, size: 8, offset: 512)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1165, file: !4, line: 998, baseType: !731, size: 56, offset: 520)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1165, file: !4, line: 1000, baseType: !147, size: 32, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1165, file: !4, line: 1003, baseType: !192, size: 64, offset: 608)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1165, file: !4, line: 1006, baseType: !5, size: 32, offset: 672)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1165, file: !4, line: 1009, baseType: !147, size: 32, offset: 704)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1165, file: !4, line: 1012, baseType: !192, size: 64, offset: 736)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1165, file: !4, line: 1015, baseType: !192, size: 64, offset: 800)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1165, file: !4, line: 1018, baseType: !5, size: 32, offset: 864)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1165, file: !4, line: 1019, baseType: !1188, size: 64, offset: 896)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !4, line: 63, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1165, file: !4, line: 1023, baseType: !147, size: 32, offset: 960)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1165, file: !4, line: 1024, baseType: !5, size: 32, offset: 992)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !994, file: !4, line: 1179, baseType: !1193, size: 320, offset: 4864)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !4, line: 1043, size: 320, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1193, file: !4, line: 1044, baseType: !89, size: 8)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1193, file: !4, line: 1045, baseType: !263, size: 16, offset: 8)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1193, file: !4, line: 1048, baseType: !89, size: 8, offset: 24)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1193, file: !4, line: 1049, baseType: !147, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1193, file: !4, line: 1049, baseType: !147, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1193, file: !4, line: 1052, baseType: !147, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1193, file: !4, line: 1052, baseType: !147, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1193, file: !4, line: 1053, baseType: !89, size: 8, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1193, file: !4, line: 1054, baseType: !1129, size: 24, offset: 168)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1193, file: !4, line: 1057, baseType: !147, size: 32, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1193, file: !4, line: 1057, baseType: !147, size: 32, offset: 224)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1193, file: !4, line: 1060, baseType: !147, size: 32, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1193, file: !4, line: 1060, baseType: !147, size: 32, offset: 288)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !878, file: !4, line: 1247, baseType: !1209, size: 64, offset: 2176)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !4, line: 60, flags: DIFlagFwdDecl)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !878, file: !4, line: 1251, baseType: !1212, size: 31872, offset: 2240)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !4, line: 403, size: 31872, elements: !1213)
!1213 = !{!1214, !1251, !1271, !1280, !1300, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1434, !1435, !1436, !1438, !1454, !1455}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1212, file: !4, line: 404, baseType: !1215, size: 1984)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !4, line: 259, size: 1984, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1234, !1246}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1215, file: !4, line: 260, baseType: !89, size: 8)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1215, file: !4, line: 263, baseType: !89, size: 8, offset: 8)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1215, file: !4, line: 266, baseType: !89, size: 8, offset: 16)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1215, file: !4, line: 267, baseType: !89, size: 8, offset: 24)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1215, file: !4, line: 269, baseType: !89, size: 8, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1215, file: !4, line: 270, baseType: !89, size: 8, offset: 40)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1215, file: !4, line: 276, baseType: !89, size: 8, offset: 48)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1215, file: !4, line: 279, baseType: !89, size: 8, offset: 56)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1215, file: !4, line: 280, baseType: !102, size: 16, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1215, file: !4, line: 280, baseType: !102, size: 16, offset: 80)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1215, file: !4, line: 281, baseType: !147, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1215, file: !4, line: 284, baseType: !89, size: 8, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1215, file: !4, line: 285, baseType: !89, size: 8, offset: 136)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1215, file: !4, line: 287, baseType: !1231, size: 48, offset: 144)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 48, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 6)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1215, file: !4, line: 290, baseType: !1235, size: 1280, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !165, line: 174, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !165, line: 166, size: 1280, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1236, file: !165, line: 167, baseType: !5, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1236, file: !165, line: 167, baseType: !5, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1236, file: !165, line: 168, baseType: !118, size: 512, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1236, file: !165, line: 169, baseType: !118, size: 512, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1236, file: !165, line: 170, baseType: !147, size: 32, offset: 1088)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1236, file: !165, line: 171, baseType: !147, size: 32, offset: 1120)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1236, file: !165, line: 172, baseType: !163, size: 64, offset: 1152)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1236, file: !165, line: 173, baseType: !62, size: 64, offset: 1216)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1215, file: !4, line: 291, baseType: !1247, size: 512, offset: 1472)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !165, line: 178, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !165, line: 176, size: 512, elements: !1249)
!1249 = !{!1250}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1248, file: !165, line: 177, baseType: !118, size: 512)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1212, file: !4, line: 406, baseType: !1252, size: 64, offset: 1984)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !4, line: 80, size: 1472, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1253, file: !4, line: 81, baseType: !62, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1253, file: !4, line: 82, baseType: !62, size: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1253, file: !4, line: 83, baseType: !41, size: 32, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1253, file: !4, line: 84, baseType: !41, size: 32, offset: 160)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1253, file: !4, line: 86, baseType: !41, size: 32, offset: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1253, file: !4, line: 87, baseType: !41, size: 32, offset: 224)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1253, file: !4, line: 88, baseType: !41, size: 32, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1253, file: !4, line: 89, baseType: !41, size: 32, offset: 288)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1253, file: !4, line: 90, baseType: !41, size: 32, offset: 320)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1253, file: !4, line: 91, baseType: !41, size: 32, offset: 352)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1253, file: !4, line: 92, baseType: !41, size: 32, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1253, file: !4, line: 93, baseType: !41, size: 32, offset: 416)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1253, file: !4, line: 95, baseType: !1268, size: 1024, offset: 448)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 1024, elements: !1269)
!1269 = !{!1270}
!1270 = !DISubrange(count: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1212, file: !4, line: 407, baseType: !1272, size: 64, offset: 2048)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !4, line: 98, size: 1216, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1273, file: !4, line: 100, baseType: !62, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1273, file: !4, line: 101, baseType: !62, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1273, file: !4, line: 103, baseType: !41, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1273, file: !4, line: 104, baseType: !41, size: 32, offset: 160)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1273, file: !4, line: 106, baseType: !1268, size: 1024, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1212, file: !4, line: 408, baseType: !1281, size: 512, offset: 2112)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !4, line: 109, size: 512, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1281, file: !4, line: 111, baseType: !5, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1281, file: !4, line: 112, baseType: !5, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1281, file: !4, line: 115, baseType: !5, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1281, file: !4, line: 116, baseType: !5, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1281, file: !4, line: 117, baseType: !5, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1281, file: !4, line: 118, baseType: !5, size: 32, offset: 160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1281, file: !4, line: 119, baseType: !5, size: 32, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1281, file: !4, line: 120, baseType: !5, size: 32, offset: 224)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1281, file: !4, line: 121, baseType: !5, size: 32, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1281, file: !4, line: 122, baseType: !5, size: 32, offset: 288)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1281, file: !4, line: 125, baseType: !5, size: 32, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1281, file: !4, line: 126, baseType: !5, size: 32, offset: 352)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1281, file: !4, line: 127, baseType: !102, size: 16, offset: 384)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1281, file: !4, line: 128, baseType: !102, size: 16, offset: 400)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1281, file: !4, line: 129, baseType: !5, size: 32, offset: 416)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1281, file: !4, line: 130, baseType: !5, size: 32, offset: 448)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1281, file: !4, line: 131, baseType: !5, size: 32, offset: 480)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1212, file: !4, line: 409, baseType: !1301, size: 576, offset: 2624)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !4, line: 134, size: 576, elements: !1302)
!1302 = !{!1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1301, file: !4, line: 135, baseType: !5, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1301, file: !4, line: 136, baseType: !5, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1301, file: !4, line: 137, baseType: !5, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1301, file: !4, line: 138, baseType: !5, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1301, file: !4, line: 139, baseType: !5, size: 32, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1301, file: !4, line: 140, baseType: !5, size: 32, offset: 160)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1301, file: !4, line: 141, baseType: !5, size: 32, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1301, file: !4, line: 142, baseType: !5, size: 32, offset: 224)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1301, file: !4, line: 143, baseType: !147, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1301, file: !4, line: 144, baseType: !5, size: 32, offset: 288)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !4, line: 145, baseType: !5, size: 32, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1301, file: !4, line: 147, baseType: !5, size: 32, offset: 352)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1301, file: !4, line: 148, baseType: !5, size: 32, offset: 384)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1301, file: !4, line: 149, baseType: !5, size: 32, offset: 416)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1301, file: !4, line: 150, baseType: !5, size: 32, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1301, file: !4, line: 151, baseType: !5, size: 32, offset: 480)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1301, file: !4, line: 152, baseType: !107, size: 64, offset: 512)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1212, file: !4, line: 411, baseType: !5, size: 32, offset: 3200)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1212, file: !4, line: 411, baseType: !5, size: 32, offset: 3232)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1212, file: !4, line: 411, baseType: !5, size: 32, offset: 3264)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1212, file: !4, line: 412, baseType: !147, size: 32, offset: 3296)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1212, file: !4, line: 413, baseType: !5, size: 32, offset: 3328)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1212, file: !4, line: 413, baseType: !5, size: 32, offset: 3360)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1212, file: !4, line: 415, baseType: !5, size: 32, offset: 3392)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1212, file: !4, line: 415, baseType: !5, size: 32, offset: 3424)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1212, file: !4, line: 416, baseType: !102, size: 16, offset: 3456)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1212, file: !4, line: 416, baseType: !102, size: 16, offset: 3472)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1212, file: !4, line: 418, baseType: !147, size: 32, offset: 3488)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1212, file: !4, line: 418, baseType: !147, size: 32, offset: 3520)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1212, file: !4, line: 421, baseType: !147, size: 32, offset: 3552)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1212, file: !4, line: 421, baseType: !147, size: 32, offset: 3584)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1212, file: !4, line: 421, baseType: !147, size: 32, offset: 3616)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1212, file: !4, line: 425, baseType: !102, size: 16, offset: 3648)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1212, file: !4, line: 425, baseType: !102, size: 16, offset: 3664)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1212, file: !4, line: 425, baseType: !102, size: 16, offset: 3680)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1212, file: !4, line: 426, baseType: !102, size: 16, offset: 3696)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1212, file: !4, line: 428, baseType: !102, size: 16, offset: 3712)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1212, file: !4, line: 428, baseType: !102, size: 16, offset: 3728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1212, file: !4, line: 431, baseType: !5, size: 32, offset: 3744)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1212, file: !4, line: 433, baseType: !102, size: 16, offset: 3776)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1212, file: !4, line: 435, baseType: !102, size: 16, offset: 3792)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1212, file: !4, line: 437, baseType: !102, size: 16, offset: 3808)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1212, file: !4, line: 439, baseType: !102, size: 16, offset: 3824)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1212, file: !4, line: 441, baseType: !102, size: 16, offset: 3840)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1212, file: !4, line: 443, baseType: !102, size: 16, offset: 3856)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1212, file: !4, line: 449, baseType: !5, size: 32, offset: 3872)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1212, file: !4, line: 453, baseType: !5, size: 32, offset: 3904)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1212, file: !4, line: 458, baseType: !102, size: 16, offset: 3936)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1212, file: !4, line: 462, baseType: !102, size: 16, offset: 3952)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1212, file: !4, line: 467, baseType: !5, size: 32, offset: 3968)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1212, file: !4, line: 467, baseType: !5, size: 32, offset: 4000)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1212, file: !4, line: 469, baseType: !102, size: 16, offset: 4032)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1212, file: !4, line: 469, baseType: !102, size: 16, offset: 4048)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1212, file: !4, line: 469, baseType: !102, size: 16, offset: 4064)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1212, file: !4, line: 469, baseType: !102, size: 16, offset: 4080)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1212, file: !4, line: 474, baseType: !102, size: 16, offset: 4096)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1212, file: !4, line: 475, baseType: !89, size: 8, offset: 4112)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1212, file: !4, line: 476, baseType: !89, size: 8, offset: 4120)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1212, file: !4, line: 481, baseType: !5, size: 32, offset: 4128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1212, file: !4, line: 486, baseType: !5, size: 32, offset: 4160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1212, file: !4, line: 491, baseType: !5, size: 32, offset: 4192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1212, file: !4, line: 496, baseType: !102, size: 16, offset: 4224)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1212, file: !4, line: 498, baseType: !102, size: 16, offset: 4240)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1212, file: !4, line: 501, baseType: !102, size: 16, offset: 4256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1212, file: !4, line: 502, baseType: !102, size: 16, offset: 4272)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1212, file: !4, line: 508, baseType: !102, size: 16, offset: 4288)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1212, file: !4, line: 513, baseType: !102, size: 16, offset: 4304)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1212, file: !4, line: 515, baseType: !102, size: 16, offset: 4320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1212, file: !4, line: 515, baseType: !102, size: 16, offset: 4336)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1212, file: !4, line: 519, baseType: !172, size: 128, offset: 4352)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1212, file: !4, line: 519, baseType: !172, size: 128, offset: 4480)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1212, file: !4, line: 520, baseType: !646, size: 128, offset: 4608)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1212, file: !4, line: 523, baseType: !128, size: 128, offset: 4736)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1212, file: !4, line: 524, baseType: !102, size: 16, offset: 4864)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1212, file: !4, line: 527, baseType: !102, size: 16, offset: 4880)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1212, file: !4, line: 532, baseType: !147, size: 32, offset: 4896)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1212, file: !4, line: 532, baseType: !147, size: 32, offset: 4928)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1212, file: !4, line: 534, baseType: !147, size: 32, offset: 4960)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1212, file: !4, line: 538, baseType: !147, size: 32, offset: 4992)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1212, file: !4, line: 542, baseType: !5, size: 32, offset: 5024)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1212, file: !4, line: 545, baseType: !147, size: 32, offset: 5056)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1212, file: !4, line: 545, baseType: !147, size: 32, offset: 5088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1212, file: !4, line: 545, baseType: !147, size: 32, offset: 5120)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1212, file: !4, line: 548, baseType: !147, size: 32, offset: 5152)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1212, file: !4, line: 551, baseType: !102, size: 16, offset: 5184)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1212, file: !4, line: 551, baseType: !102, size: 16, offset: 5200)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1212, file: !4, line: 551, baseType: !102, size: 16, offset: 5216)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1212, file: !4, line: 551, baseType: !102, size: 16, offset: 5232)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1212, file: !4, line: 552, baseType: !102, size: 16, offset: 5248)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1212, file: !4, line: 552, baseType: !102, size: 16, offset: 5264)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1212, file: !4, line: 553, baseType: !147, size: 32, offset: 5280)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1212, file: !4, line: 553, baseType: !147, size: 32, offset: 5312)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1212, file: !4, line: 554, baseType: !102, size: 16, offset: 5344)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1212, file: !4, line: 554, baseType: !102, size: 16, offset: 5360)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1212, file: !4, line: 555, baseType: !147, size: 32, offset: 5376)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1212, file: !4, line: 555, baseType: !147, size: 32, offset: 5408)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1212, file: !4, line: 558, baseType: !88, size: 8192, offset: 5440)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1212, file: !4, line: 561, baseType: !5, size: 32, offset: 13632)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1212, file: !4, line: 562, baseType: !102, size: 16, offset: 13664)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1212, file: !4, line: 562, baseType: !102, size: 16, offset: 13680)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1212, file: !4, line: 565, baseType: !1404, size: 6144, offset: 13696)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 6144, elements: !1405)
!1405 = !{!1406}
!1406 = !DISubrange(count: 768)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1212, file: !4, line: 568, baseType: !511, size: 128, offset: 19840)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1212, file: !4, line: 569, baseType: !511, size: 128, offset: 19968)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1212, file: !4, line: 572, baseType: !89, size: 8, offset: 20096)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1212, file: !4, line: 573, baseType: !89, size: 8, offset: 20104)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1212, file: !4, line: 574, baseType: !89, size: 8, offset: 20112)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1212, file: !4, line: 575, baseType: !1062, size: 40, offset: 20120)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1212, file: !4, line: 578, baseType: !5, size: 32, offset: 20160)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1212, file: !4, line: 579, baseType: !102, size: 16, offset: 20192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1212, file: !4, line: 580, baseType: !102, size: 16, offset: 20208)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1212, file: !4, line: 581, baseType: !147, size: 32, offset: 20224)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1212, file: !4, line: 582, baseType: !147, size: 32, offset: 20256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1212, file: !4, line: 585, baseType: !102, size: 16, offset: 20288)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1212, file: !4, line: 585, baseType: !102, size: 16, offset: 20304)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1212, file: !4, line: 586, baseType: !147, size: 32, offset: 20320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1212, file: !4, line: 589, baseType: !102, size: 16, offset: 20352)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1212, file: !4, line: 589, baseType: !102, size: 16, offset: 20368)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1212, file: !4, line: 590, baseType: !5, size: 32, offset: 20384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1212, file: !4, line: 593, baseType: !102, size: 16, offset: 20416)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1212, file: !4, line: 593, baseType: !102, size: 16, offset: 20432)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1212, file: !4, line: 594, baseType: !102, size: 16, offset: 20448)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1212, file: !4, line: 594, baseType: !102, size: 16, offset: 20464)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1212, file: !4, line: 595, baseType: !147, size: 32, offset: 20480)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1212, file: !4, line: 596, baseType: !147, size: 32, offset: 20512)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1212, file: !4, line: 597, baseType: !1431, size: 64, offset: 20544)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1433, line: 44, flags: DIFlagFwdDecl)
!1433 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1212, file: !4, line: 600, baseType: !5, size: 32, offset: 20608)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1212, file: !4, line: 601, baseType: !147, size: 32, offset: 20640)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1212, file: !4, line: 604, baseType: !1437, size: 256, offset: 20672)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 256, elements: !540)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1212, file: !4, line: 607, baseType: !1439, size: 10880, offset: 20928)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !4, line: 364, size: 10880, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1439, file: !4, line: 365, baseType: !1215, size: 1984)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1439, file: !4, line: 367, baseType: !88, size: 8192, offset: 1984)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1439, file: !4, line: 369, baseType: !102, size: 16, offset: 10176)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1439, file: !4, line: 369, baseType: !102, size: 16, offset: 10192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1439, file: !4, line: 370, baseType: !102, size: 16, offset: 10208)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !4, line: 370, baseType: !102, size: 16, offset: 10224)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1439, file: !4, line: 372, baseType: !147, size: 32, offset: 10240)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1439, file: !4, line: 373, baseType: !147, size: 32, offset: 10272)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1439, file: !4, line: 375, baseType: !1129, size: 24, offset: 10304)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1439, file: !4, line: 376, baseType: !89, size: 8, offset: 10328)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1439, file: !4, line: 378, baseType: !89, size: 8, offset: 10336)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1439, file: !4, line: 379, baseType: !1129, size: 24, offset: 10344)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1439, file: !4, line: 381, baseType: !118, size: 512, offset: 10368)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1212, file: !4, line: 609, baseType: !5, size: 32, offset: 31808)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1212, file: !4, line: 610, baseType: !5, size: 32, offset: 31840)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !878, file: !4, line: 1252, baseType: !1457, size: 256, offset: 34112)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !4, line: 158, size: 256, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1457, file: !4, line: 159, baseType: !5, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1457, file: !4, line: 160, baseType: !147, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1457, file: !4, line: 161, baseType: !147, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1457, file: !4, line: 162, baseType: !147, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1457, file: !4, line: 163, baseType: !5, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1457, file: !4, line: 164, baseType: !102, size: 16, offset: 160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1457, file: !4, line: 165, baseType: !102, size: 16, offset: 176)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1457, file: !4, line: 166, baseType: !147, size: 32, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1457, file: !4, line: 167, baseType: !147, size: 32, offset: 224)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !878, file: !4, line: 1254, baseType: !128, size: 128, offset: 34368)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !878, file: !4, line: 1255, baseType: !128, size: 128, offset: 34496)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !878, file: !4, line: 1257, baseType: !62, size: 64, offset: 34624)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !878, file: !4, line: 1258, baseType: !62, size: 64, offset: 34688)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !878, file: !4, line: 1259, baseType: !62, size: 64, offset: 34752)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !878, file: !4, line: 1260, baseType: !62, size: 64, offset: 34816)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !878, file: !4, line: 1262, baseType: !62, size: 64, offset: 34880)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !878, file: !4, line: 1265, baseType: !1476, size: 64, offset: 34944)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !4, line: 1265, flags: DIFlagFwdDecl)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !878, file: !4, line: 1266, baseType: !102, size: 16, offset: 35008)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !878, file: !4, line: 1267, baseType: !102, size: 16, offset: 35024)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !878, file: !4, line: 1270, baseType: !5, size: 32, offset: 35040)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !878, file: !4, line: 1271, baseType: !128, size: 128, offset: 35072)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !878, file: !4, line: 1274, baseType: !1483, size: 128, offset: 35200)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !4, line: 650, size: 128, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1483, file: !4, line: 651, baseType: !212, size: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1483, file: !4, line: 652, baseType: !89, size: 8, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1483, file: !4, line: 652, baseType: !89, size: 8, offset: 104)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1483, file: !4, line: 652, baseType: !89, size: 8, offset: 112)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1483, file: !4, line: 652, baseType: !89, size: 8, offset: 120)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !878, file: !4, line: 1275, baseType: !1491, size: 1472, offset: 35328)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !4, line: 676, size: 1472, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1514, !1515, !1516, !1517, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1491, file: !4, line: 679, baseType: !1483, size: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1491, file: !4, line: 680, baseType: !102, size: 16, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1491, file: !4, line: 680, baseType: !102, size: 16, offset: 144)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1491, file: !4, line: 680, baseType: !102, size: 16, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1491, file: !4, line: 680, baseType: !102, size: 16, offset: 176)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1491, file: !4, line: 681, baseType: !102, size: 16, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1491, file: !4, line: 681, baseType: !102, size: 16, offset: 208)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1491, file: !4, line: 681, baseType: !102, size: 16, offset: 224)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1491, file: !4, line: 681, baseType: !102, size: 16, offset: 240)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1491, file: !4, line: 682, baseType: !102, size: 16, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1491, file: !4, line: 682, baseType: !610, size: 48, offset: 272)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1491, file: !4, line: 685, baseType: !1505, size: 192, offset: 320)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !4, line: 633, size: 192, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1505, file: !4, line: 634, baseType: !102, size: 16)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1505, file: !4, line: 634, baseType: !102, size: 16, offset: 16)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1505, file: !4, line: 635, baseType: !102, size: 16, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1505, file: !4, line: 635, baseType: !102, size: 16, offset: 48)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1505, file: !4, line: 636, baseType: !147, size: 32, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1505, file: !4, line: 636, baseType: !147, size: 32, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1505, file: !4, line: 637, baseType: !1431, size: 64, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1491, file: !4, line: 686, baseType: !102, size: 16, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1491, file: !4, line: 686, baseType: !102, size: 16, offset: 528)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1491, file: !4, line: 687, baseType: !147, size: 32, offset: 544)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1491, file: !4, line: 688, baseType: !1518, size: 448, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !4, line: 674, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !4, line: 659, size: 448, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1519, file: !4, line: 660, baseType: !147, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1519, file: !4, line: 661, baseType: !147, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1519, file: !4, line: 662, baseType: !147, size: 32, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1519, file: !4, line: 663, baseType: !147, size: 32, offset: 96)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1519, file: !4, line: 664, baseType: !147, size: 32, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1519, file: !4, line: 665, baseType: !147, size: 32, offset: 160)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1519, file: !4, line: 666, baseType: !147, size: 32, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1519, file: !4, line: 667, baseType: !147, size: 32, offset: 224)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1519, file: !4, line: 668, baseType: !147, size: 32, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1519, file: !4, line: 669, baseType: !147, size: 32, offset: 288)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1519, file: !4, line: 670, baseType: !5, size: 32, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1519, file: !4, line: 671, baseType: !147, size: 32, offset: 352)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1519, file: !4, line: 672, baseType: !147, size: 32, offset: 384)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1519, file: !4, line: 673, baseType: !102, size: 16, offset: 416)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1519, file: !4, line: 673, baseType: !102, size: 16, offset: 432)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1491, file: !4, line: 692, baseType: !147, size: 32, offset: 1024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1491, file: !4, line: 697, baseType: !147, size: 32, offset: 1056)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !4, line: 703, baseType: !5, size: 32, offset: 1088)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1491, file: !4, line: 704, baseType: !102, size: 16, offset: 1120)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1491, file: !4, line: 704, baseType: !102, size: 16, offset: 1136)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1491, file: !4, line: 705, baseType: !102, size: 16, offset: 1152)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1491, file: !4, line: 706, baseType: !102, size: 16, offset: 1168)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1491, file: !4, line: 707, baseType: !102, size: 16, offset: 1184)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1491, file: !4, line: 708, baseType: !102, size: 16, offset: 1200)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1491, file: !4, line: 709, baseType: !102, size: 16, offset: 1216)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1491, file: !4, line: 709, baseType: !102, size: 16, offset: 1232)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1491, file: !4, line: 709, baseType: !102, size: 16, offset: 1248)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1491, file: !4, line: 709, baseType: !102, size: 16, offset: 1264)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1491, file: !4, line: 710, baseType: !102, size: 16, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1491, file: !4, line: 711, baseType: !102, size: 16, offset: 1296)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1491, file: !4, line: 712, baseType: !147, size: 32, offset: 1312)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1491, file: !4, line: 713, baseType: !147, size: 32, offset: 1344)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1491, file: !4, line: 713, baseType: !147, size: 32, offset: 1376)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1491, file: !4, line: 713, baseType: !147, size: 32, offset: 1408)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1491, file: !4, line: 713, baseType: !147, size: 32, offset: 1440)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !878, file: !4, line: 1278, baseType: !1557, size: 64, offset: 36800)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !4, line: 1197, size: 64, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1557, file: !4, line: 1199, baseType: !147, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1557, file: !4, line: 1200, baseType: !89, size: 8, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1557, file: !4, line: 1201, baseType: !89, size: 8, offset: 40)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1557, file: !4, line: 1202, baseType: !102, size: 16, offset: 48)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !878, file: !4, line: 1281, baseType: !366, size: 64, offset: 36864)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !878, file: !4, line: 1284, baseType: !1565, size: 192, offset: 36928)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !4, line: 1208, size: 192, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1565, file: !4, line: 1209, baseType: !212, size: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1565, file: !4, line: 1210, baseType: !5, size: 32, offset: 96)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1565, file: !4, line: 1210, baseType: !5, size: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1565, file: !4, line: 1210, baseType: !5, size: 32, offset: 160)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !878, file: !4, line: 1287, baseType: !1572, size: 64, offset: 37120)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !4, line: 62, flags: DIFlagFwdDecl)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !878, file: !4, line: 1289, baseType: !852, size: 64, offset: 37184)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !878, file: !4, line: 1290, baseType: !852, size: 64, offset: 37248)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !878, file: !4, line: 1293, baseType: !1235, size: 1280, offset: 37312)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !878, file: !4, line: 1294, baseType: !1247, size: 512, offset: 38592)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !878, file: !4, line: 1295, baseType: !725, size: 512, offset: 39104)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !878, file: !4, line: 1298, baseType: !1580, size: 64, offset: 39616)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !4, line: 1298, flags: DIFlagFwdDecl)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !874, file: !618, line: 53, baseType: !5, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !874, file: !618, line: 54, baseType: !5, size: 32, offset: 96)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !874, file: !618, line: 55, baseType: !5, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !874, file: !618, line: 55, baseType: !5, size: 32, offset: 160)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !874, file: !618, line: 56, baseType: !89, size: 8, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !874, file: !618, line: 56, baseType: !89, size: 8, offset: 200)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !874, file: !618, line: 57, baseType: !89, size: 8, offset: 208)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !874, file: !618, line: 57, baseType: !89, size: 8, offset: 216)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !874, file: !618, line: 59, baseType: !102, size: 16, offset: 224)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !874, file: !618, line: 59, baseType: !102, size: 16, offset: 240)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !874, file: !618, line: 59, baseType: !102, size: 16, offset: 256)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !874, file: !618, line: 61, baseType: !102, size: 16, offset: 272)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !874, file: !618, line: 63, baseType: !5, size: 32, offset: 288)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !279, file: !40, line: 293, baseType: !128, size: 128, offset: 11200)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !279, file: !40, line: 294, baseType: !1597, size: 64, offset: 11328)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !40, line: 113, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !40, line: 108, size: 256, elements: !1600)
!1600 = !{!1601, !1603, !1604, !1605, !1606}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1599, file: !40, line: 109, baseType: !1602, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1599, file: !40, line: 109, baseType: !1602, size: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1599, file: !40, line: 110, baseType: !278, size: 64, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1599, file: !40, line: 111, baseType: !5, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1599, file: !40, line: 112, baseType: !147, size: 32, offset: 224)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !270, file: !271, line: 61, baseType: !1608, size: 64, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !271, line: 202, size: 3328, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1694, !1695, !1724, !1744, !1752, !1753}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1609, file: !271, line: 203, baseType: !69, size: 960)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1609, file: !271, line: 204, baseType: !139, size: 64, offset: 960)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1609, file: !271, line: 206, baseType: !147, size: 32, offset: 1024)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1609, file: !271, line: 206, baseType: !147, size: 32, offset: 1056)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1120)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1152)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1184)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1216)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1609, file: !271, line: 207, baseType: !147, size: 32, offset: 1248)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1609, file: !271, line: 208, baseType: !147, size: 32, offset: 1280)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1609, file: !271, line: 208, baseType: !147, size: 32, offset: 1312)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1609, file: !271, line: 211, baseType: !147, size: 32, offset: 1344)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1609, file: !271, line: 211, baseType: !147, size: 32, offset: 1376)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1609, file: !271, line: 211, baseType: !147, size: 32, offset: 1408)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1609, file: !271, line: 211, baseType: !147, size: 32, offset: 1440)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1609, file: !271, line: 211, baseType: !147, size: 32, offset: 1472)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1609, file: !271, line: 214, baseType: !147, size: 32, offset: 1504)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1609, file: !271, line: 214, baseType: !147, size: 32, offset: 1536)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1609, file: !271, line: 217, baseType: !147, size: 32, offset: 1568)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1609, file: !271, line: 218, baseType: !147, size: 32, offset: 1600)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1609, file: !271, line: 219, baseType: !147, size: 32, offset: 1632)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1609, file: !271, line: 220, baseType: !147, size: 32, offset: 1664)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1609, file: !271, line: 221, baseType: !147, size: 32, offset: 1696)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1609, file: !271, line: 222, baseType: !102, size: 16, offset: 1728)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1609, file: !271, line: 222, baseType: !102, size: 16, offset: 1744)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1609, file: !271, line: 224, baseType: !102, size: 16, offset: 1760)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1609, file: !271, line: 224, baseType: !102, size: 16, offset: 1776)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1609, file: !271, line: 227, baseType: !102, size: 16, offset: 1792)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1609, file: !271, line: 227, baseType: !102, size: 16, offset: 1808)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1609, file: !271, line: 229, baseType: !102, size: 16, offset: 1824)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1609, file: !271, line: 229, baseType: !102, size: 16, offset: 1840)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1609, file: !271, line: 230, baseType: !102, size: 16, offset: 1856)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1609, file: !271, line: 230, baseType: !102, size: 16, offset: 1872)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1609, file: !271, line: 232, baseType: !147, size: 32, offset: 1888)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1609, file: !271, line: 232, baseType: !147, size: 32, offset: 1920)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1609, file: !271, line: 232, baseType: !147, size: 32, offset: 1952)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1609, file: !271, line: 232, baseType: !147, size: 32, offset: 1984)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1609, file: !271, line: 233, baseType: !5, size: 32, offset: 2016)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1609, file: !271, line: 234, baseType: !5, size: 32, offset: 2048)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1609, file: !271, line: 235, baseType: !102, size: 16, offset: 2080)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1609, file: !271, line: 235, baseType: !102, size: 16, offset: 2096)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1609, file: !271, line: 236, baseType: !102, size: 16, offset: 2112)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1609, file: !271, line: 239, baseType: !102, size: 16, offset: 2128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1609, file: !271, line: 240, baseType: !5, size: 32, offset: 2144)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1609, file: !271, line: 241, baseType: !5, size: 32, offset: 2176)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1609, file: !271, line: 241, baseType: !5, size: 32, offset: 2208)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1609, file: !271, line: 241, baseType: !5, size: 32, offset: 2240)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1609, file: !271, line: 243, baseType: !147, size: 32, offset: 2272)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1609, file: !271, line: 243, baseType: !147, size: 32, offset: 2304)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1609, file: !271, line: 244, baseType: !147, size: 32, offset: 2336)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1609, file: !271, line: 246, baseType: !874, size: 320, offset: 2368)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1609, file: !271, line: 248, baseType: !553, size: 64, offset: 2688)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1609, file: !271, line: 249, baseType: !265, size: 64, offset: 2752)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1609, file: !271, line: 250, baseType: !616, size: 64, offset: 2816)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1609, file: !271, line: 251, baseType: !517, size: 64, offset: 2880)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1609, file: !271, line: 252, baseType: !1668, size: 64, offset: 2944)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !271, line: 122, size: 1600, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1678, !1679, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1669, file: !271, line: 123, baseType: !278, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1669, file: !271, line: 124, baseType: !616, size: 64, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1669, file: !271, line: 125, baseType: !1674, size: 384, offset: 128)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 384, elements: !1232)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1677, line: 42, flags: DIFlagFwdDecl)
!1677 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_colortools.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1669, file: !271, line: 126, baseType: !762, size: 512, offset: 512)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1669, file: !271, line: 127, baseType: !1680, size: 288, offset: 1024)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 288, elements: !1681)
!1681 = !{!214, !214}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1669, file: !271, line: 128, baseType: !102, size: 16, offset: 1312)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1669, file: !271, line: 128, baseType: !102, size: 16, offset: 1328)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1669, file: !271, line: 129, baseType: !147, size: 32, offset: 1344)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1669, file: !271, line: 129, baseType: !147, size: 32, offset: 1376)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1669, file: !271, line: 130, baseType: !147, size: 32, offset: 1408)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1669, file: !271, line: 131, baseType: !41, size: 32, offset: 1440)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1669, file: !271, line: 132, baseType: !102, size: 16, offset: 1472)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1669, file: !271, line: 132, baseType: !102, size: 16, offset: 1488)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1669, file: !271, line: 133, baseType: !5, size: 32, offset: 1504)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1669, file: !271, line: 133, baseType: !5, size: 32, offset: 1536)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1669, file: !271, line: 134, baseType: !102, size: 16, offset: 1568)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1669, file: !271, line: 134, baseType: !102, size: 16, offset: 1584)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1609, file: !271, line: 253, baseType: !566, size: 64, offset: 3008)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1609, file: !271, line: 254, baseType: !1696, size: 64, offset: 3072)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !271, line: 137, size: 832, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1697, file: !271, line: 138, baseType: !102, size: 16)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1697, file: !271, line: 140, baseType: !102, size: 16, offset: 16)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1697, file: !271, line: 141, baseType: !147, size: 32, offset: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1697, file: !271, line: 142, baseType: !147, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1697, file: !271, line: 143, baseType: !102, size: 16, offset: 96)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1697, file: !271, line: 144, baseType: !102, size: 16, offset: 112)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1697, file: !271, line: 145, baseType: !5, size: 32, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1697, file: !271, line: 147, baseType: !5, size: 32, offset: 160)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1697, file: !271, line: 149, baseType: !278, size: 64, offset: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1697, file: !271, line: 150, baseType: !5, size: 32, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1697, file: !271, line: 151, baseType: !102, size: 16, offset: 288)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1697, file: !271, line: 152, baseType: !102, size: 16, offset: 304)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1697, file: !271, line: 154, baseType: !62, size: 64, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1697, file: !271, line: 155, baseType: !643, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1697, file: !271, line: 157, baseType: !147, size: 32, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1697, file: !271, line: 158, baseType: !102, size: 16, offset: 480)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1697, file: !271, line: 159, baseType: !102, size: 16, offset: 496)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1697, file: !271, line: 160, baseType: !102, size: 16, offset: 512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1697, file: !271, line: 161, baseType: !610, size: 48, offset: 528)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1697, file: !271, line: 162, baseType: !147, size: 32, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1697, file: !271, line: 164, baseType: !147, size: 32, offset: 608)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1697, file: !271, line: 164, baseType: !147, size: 32, offset: 640)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1697, file: !271, line: 164, baseType: !147, size: 32, offset: 672)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1697, file: !271, line: 165, baseType: !517, size: 64, offset: 704)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1697, file: !271, line: 167, baseType: !163, size: 64, offset: 768)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1609, file: !271, line: 255, baseType: !1725, size: 64, offset: 3136)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !271, line: 170, size: 8704, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1726, file: !271, line: 171, baseType: !1036, size: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1726, file: !271, line: 172, baseType: !5, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1726, file: !271, line: 173, baseType: !102, size: 16, offset: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1726, file: !271, line: 174, baseType: !102, size: 16, offset: 144)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1726, file: !271, line: 175, baseType: !102, size: 16, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1726, file: !271, line: 176, baseType: !102, size: 16, offset: 176)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1726, file: !271, line: 177, baseType: !102, size: 16, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1726, file: !271, line: 178, baseType: !102, size: 16, offset: 208)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1726, file: !271, line: 179, baseType: !5, size: 32, offset: 224)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1726, file: !271, line: 181, baseType: !278, size: 64, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1726, file: !271, line: 182, baseType: !147, size: 32, offset: 320)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1726, file: !271, line: 183, baseType: !5, size: 32, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1726, file: !271, line: 184, baseType: !88, size: 8192, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1726, file: !271, line: 187, baseType: !643, size: 64, offset: 8576)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1726, file: !271, line: 188, baseType: !5, size: 32, offset: 8640)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1726, file: !271, line: 189, baseType: !5, size: 32, offset: 8672)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1609, file: !271, line: 256, baseType: !1745, size: 64, offset: 3200)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !271, line: 193, size: 640, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1746, file: !271, line: 194, baseType: !278, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1746, file: !271, line: 195, baseType: !118, size: 512, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1746, file: !271, line: 197, baseType: !5, size: 32, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1746, file: !271, line: 198, baseType: !5, size: 32, offset: 608)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1609, file: !271, line: 258, baseType: !89, size: 8, offset: 3264)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1609, file: !271, line: 259, baseType: !731, size: 56, offset: 3272)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !270, file: !271, line: 62, baseType: !118, size: 512, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !270, file: !271, line: 64, baseType: !89, size: 8, offset: 704)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !270, file: !271, line: 64, baseType: !89, size: 8, offset: 712)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !270, file: !271, line: 64, baseType: !89, size: 8, offset: 720)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !270, file: !271, line: 64, baseType: !89, size: 8, offset: 728)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !270, file: !271, line: 65, baseType: !212, size: 96, offset: 736)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !270, file: !271, line: 65, baseType: !212, size: 96, offset: 832)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !270, file: !271, line: 65, baseType: !147, size: 32, offset: 928)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !270, file: !271, line: 67, baseType: !102, size: 16, offset: 960)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !270, file: !271, line: 67, baseType: !102, size: 16, offset: 976)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !270, file: !271, line: 67, baseType: !102, size: 16, offset: 992)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !270, file: !271, line: 67, baseType: !102, size: 16, offset: 1008)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !270, file: !271, line: 68, baseType: !102, size: 16, offset: 1024)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !270, file: !271, line: 68, baseType: !102, size: 16, offset: 1040)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !270, file: !271, line: 69, baseType: !89, size: 8, offset: 1056)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !270, file: !271, line: 69, baseType: !731, size: 56, offset: 1064)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !270, file: !271, line: 70, baseType: !147, size: 32, offset: 1120)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !270, file: !271, line: 70, baseType: !147, size: 32, offset: 1152)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !270, file: !271, line: 70, baseType: !147, size: 32, offset: 1184)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !270, file: !271, line: 70, baseType: !147, size: 32, offset: 1216)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !270, file: !271, line: 71, baseType: !147, size: 32, offset: 1248)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !270, file: !271, line: 71, baseType: !147, size: 32, offset: 1280)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !270, file: !271, line: 74, baseType: !147, size: 32, offset: 1312)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !270, file: !271, line: 74, baseType: !147, size: 32, offset: 1344)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !270, file: !271, line: 77, baseType: !147, size: 32, offset: 1376)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !270, file: !271, line: 77, baseType: !147, size: 32, offset: 1408)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !270, file: !271, line: 77, baseType: !147, size: 32, offset: 1440)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !270, file: !271, line: 78, baseType: !147, size: 32, offset: 1472)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !270, file: !271, line: 78, baseType: !147, size: 32, offset: 1504)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !270, file: !271, line: 78, baseType: !147, size: 32, offset: 1536)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !270, file: !271, line: 79, baseType: !147, size: 32, offset: 1568)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !270, file: !271, line: 79, baseType: !147, size: 32, offset: 1600)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !270, file: !271, line: 79, baseType: !147, size: 32, offset: 1632)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !270, file: !271, line: 79, baseType: !147, size: 32, offset: 1664)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !270, file: !271, line: 80, baseType: !147, size: 32, offset: 1696)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !270, file: !271, line: 80, baseType: !147, size: 32, offset: 1728)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !270, file: !271, line: 80, baseType: !147, size: 32, offset: 1760)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !270, file: !271, line: 81, baseType: !147, size: 32, offset: 1792)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !270, file: !271, line: 81, baseType: !147, size: 32, offset: 1824)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !270, file: !271, line: 81, baseType: !147, size: 32, offset: 1856)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !270, file: !271, line: 82, baseType: !147, size: 32, offset: 1888)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !270, file: !271, line: 82, baseType: !147, size: 32, offset: 1920)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !270, file: !271, line: 82, baseType: !147, size: 32, offset: 1952)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !270, file: !271, line: 85, baseType: !147, size: 32, offset: 1984)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !270, file: !271, line: 85, baseType: !147, size: 32, offset: 2016)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !270, file: !271, line: 85, baseType: !147, size: 32, offset: 2048)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !270, file: !271, line: 85, baseType: !147, size: 32, offset: 2080)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !270, file: !271, line: 86, baseType: !147, size: 32, offset: 2112)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !270, file: !271, line: 86, baseType: !147, size: 32, offset: 2144)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !270, file: !271, line: 86, baseType: !147, size: 32, offset: 2176)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !270, file: !271, line: 86, baseType: !147, size: 32, offset: 2208)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !270, file: !271, line: 87, baseType: !147, size: 32, offset: 2240)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !270, file: !271, line: 87, baseType: !147, size: 32, offset: 2272)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !270, file: !271, line: 87, baseType: !147, size: 32, offset: 2304)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !270, file: !271, line: 87, baseType: !147, size: 32, offset: 2336)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !270, file: !271, line: 90, baseType: !147, size: 32, offset: 2368)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !270, file: !271, line: 93, baseType: !147, size: 32, offset: 2400)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !270, file: !271, line: 93, baseType: !147, size: 32, offset: 2432)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !270, file: !271, line: 93, baseType: !147, size: 32, offset: 2464)
!1813 = !{!1814}
!1814 = !DISubrange(count: 18)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !66, file: !65, line: 105, baseType: !102, size: 16, offset: 3968)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !66, file: !65, line: 105, baseType: !102, size: 16, offset: 3984)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !66, file: !65, line: 106, baseType: !1818, size: 32, offset: 4000)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 32, elements: !209)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !66, file: !65, line: 109, baseType: !566, size: 64, offset: 4032)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !66, file: !65, line: 112, baseType: !553, size: 64, offset: 4096)
!1821 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1822 = !{i32 7, !"Dwarf Version", i32 4}
!1823 = !{i32 2, !"Debug Info Version", i32 3}
!1824 = !{i32 1, !"wchar_size", i32 4}
!1825 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1826 = distinct !DISubprogram(name: "get_lights", scope: !1, file: !1, line: 71, type: !1827, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!863, !1829}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !1831, line: 186, baseType: !1832)
!1831 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !1831, line: 98, size: 11776, elements: !1833)
!1833 = !{!1834, !1835, !1859, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2129, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1832, file: !1831, line: 102, baseType: !393, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !1832, file: !1831, line: 103, baseType: !1836, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !1838, line: 400, size: 512, elements: !1839)
!1838 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1839 = !{!1840, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1837, file: !1838, line: 401, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !1838, line: 372, size: 384, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1842, file: !1838, line: 373, baseType: !212, size: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1842, file: !1838, line: 374, baseType: !212, size: 96, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !1842, file: !1838, line: 375, baseType: !643, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1842, file: !1838, line: 376, baseType: !41, size: 32, offset: 256)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !1842, file: !1838, line: 378, baseType: !147, size: 32, offset: 288)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1842, file: !1838, line: 379, baseType: !5, size: 32, offset: 320)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1837, file: !1838, line: 401, baseType: !1841, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1837, file: !1838, line: 401, baseType: !1841, size: 64, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1837, file: !1838, line: 401, baseType: !1841, size: 64, offset: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1837, file: !1838, line: 402, baseType: !212, size: 96, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1837, file: !1838, line: 403, baseType: !393, size: 64, offset: 384)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !1837, file: !1838, line: 404, baseType: !89, size: 8, offset: 448)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1837, file: !1838, line: 405, baseType: !89, size: 8, offset: 456)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !1837, file: !1838, line: 405, baseType: !89, size: 8, offset: 464)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1837, file: !1838, line: 410, baseType: !5, size: 32, offset: 480)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !1832, file: !1831, line: 104, baseType: !1860, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !1838, line: 475, size: 384, elements: !1862)
!1862 = !{!1863, !1870, !2046, !2047, !2048, !2049, !2050}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1861, file: !1838, line: 476, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !1838, line: 434, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !1838, line: 431, size: 128, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1866, file: !1838, line: 432, baseType: !212, size: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !1866, file: !1838, line: 433, baseType: !147, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1861, file: !1838, line: 477, baseType: !1871, size: 64, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !1838, line: 473, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !1838, line: 455, size: 1344, elements: !1874)
!1874 = !{!1875, !1877, !1878, !1880, !1889, !1890, !1891, !2015, !2016, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1873, file: !1838, line: 456, baseType: !1876, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1873, file: !1838, line: 456, baseType: !1876, size: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1873, file: !1838, line: 457, baseType: !1879, size: 64, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1873, file: !1838, line: 458, baseType: !1881, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !1838, line: 450, size: 256, elements: !1883)
!1883 = !{!1884, !1885, !1886}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1882, file: !1838, line: 451, baseType: !5, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1882, file: !1838, line: 451, baseType: !5, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !1882, file: !1838, line: 452, baseType: !1887, size: 192, offset: 64)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 192, elements: !1888)
!1888 = !{!194, !214}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1873, file: !1838, line: 459, baseType: !5, size: 32, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !1873, file: !1838, line: 459, baseType: !5, size: 32, offset: 288)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !1873, file: !1838, line: 461, baseType: !1892, size: 64, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !1838, line: 315, size: 2240, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1916, !1919, !1922, !1960, !1961, !1963, !1964, !1965, !1966, !1967, !1968, !1971, !1974, !1977}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1893, file: !1838, line: 316, baseType: !1892, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1893, file: !1838, line: 316, baseType: !1892, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1893, file: !1838, line: 317, baseType: !278, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1893, file: !1838, line: 317, baseType: !278, size: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !1893, file: !1838, line: 318, baseType: !877, size: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1893, file: !1838, line: 319, baseType: !5, size: 32, offset: 320)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !1893, file: !1838, line: 319, baseType: !5, size: 32, offset: 352)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1893, file: !1838, line: 319, baseType: !5, size: 32, offset: 384)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1893, file: !1838, line: 319, baseType: !5, size: 32, offset: 416)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !1893, file: !1838, line: 321, baseType: !1887, size: 192, offset: 448)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1893, file: !1838, line: 323, baseType: !5, size: 32, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !1893, file: !1838, line: 323, baseType: !5, size: 32, offset: 672)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !1893, file: !1838, line: 323, baseType: !5, size: 32, offset: 704)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !1893, file: !1838, line: 323, baseType: !5, size: 32, offset: 736)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !1893, file: !1838, line: 324, baseType: !5, size: 32, offset: 768)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !1893, file: !1838, line: 324, baseType: !5, size: 32, offset: 800)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !1893, file: !1838, line: 324, baseType: !5, size: 32, offset: 832)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !1893, file: !1838, line: 324, baseType: !5, size: 32, offset: 864)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !1893, file: !1838, line: 325, baseType: !1914, size: 64, offset: 896)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !1838, line: 58, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !1893, file: !1838, line: 326, baseType: !1917, size: 64, offset: 960)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !1838, line: 59, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !1893, file: !1838, line: 327, baseType: !1920, size: 64, offset: 1024)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !1838, line: 327, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !1893, file: !1838, line: 328, baseType: !1923, size: 64, offset: 1088)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !1838, line: 413, size: 1024, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !1925, file: !1838, line: 414, baseType: !102, size: 16)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !1925, file: !1838, line: 414, baseType: !102, size: 16, offset: 16)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !1925, file: !1838, line: 415, baseType: !147, size: 32, offset: 224)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1925, file: !1838, line: 415, baseType: !212, size: 96, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1925, file: !1838, line: 415, baseType: !212, size: 96, offset: 352)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !1925, file: !1838, line: 416, baseType: !147, size: 32, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1925, file: !1838, line: 416, baseType: !147, size: 32, offset: 480)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1925, file: !1838, line: 416, baseType: !147, size: 32, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1925, file: !1838, line: 416, baseType: !147, size: 32, offset: 544)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !1925, file: !1838, line: 417, baseType: !5, size: 32, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !1925, file: !1838, line: 417, baseType: !5, size: 32, offset: 608)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !1925, file: !1838, line: 418, baseType: !5, size: 32, offset: 640)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !1925, file: !1838, line: 419, baseType: !89, size: 8, offset: 672)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1925, file: !1838, line: 419, baseType: !89, size: 8, offset: 680)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1925, file: !1838, line: 419, baseType: !89, size: 8, offset: 688)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1925, file: !1838, line: 419, baseType: !89, size: 8, offset: 696)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !1925, file: !1838, line: 420, baseType: !89, size: 8, offset: 704)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !1925, file: !1838, line: 420, baseType: !89, size: 8, offset: 712)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1925, file: !1838, line: 420, baseType: !89, size: 8, offset: 720)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !1925, file: !1838, line: 421, baseType: !102, size: 16, offset: 736)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !1925, file: !1838, line: 422, baseType: !147, size: 32, offset: 768)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !1925, file: !1838, line: 423, baseType: !5, size: 32, offset: 800)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1925, file: !1838, line: 424, baseType: !41, size: 32, offset: 832)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1925, file: !1838, line: 425, baseType: !393, size: 64, offset: 896)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1925, file: !1838, line: 426, baseType: !1958, size: 64, offset: 960)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !1831, line: 197, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !1893, file: !1838, line: 329, baseType: !1876, size: 64, offset: 1152)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1893, file: !1838, line: 331, baseType: !1962, size: 64, offset: 1216)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1893, file: !1838, line: 332, baseType: !1962, size: 64, offset: 1280)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !1893, file: !1838, line: 333, baseType: !5, size: 32, offset: 1344)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !1893, file: !1838, line: 333, baseType: !5, size: 32, offset: 1376)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !1893, file: !1838, line: 333, baseType: !5, size: 32, offset: 1408)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1893, file: !1838, line: 335, baseType: !762, size: 512, offset: 1440)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !1893, file: !1838, line: 338, baseType: !1969, size: 64, offset: 1984)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !1838, line: 63, flags: DIFlagFwdDecl)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !1893, file: !1838, line: 339, baseType: !1972, size: 64, offset: 2048)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !1838, line: 64, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !1893, file: !1838, line: 340, baseType: !1975, size: 64, offset: 2112)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !1838, line: 205, flags: DIFlagFwdDecl)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !1893, file: !1838, line: 341, baseType: !1978, size: 64, offset: 2176)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !1838, line: 345, size: 2304, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1986, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2001, !2011, !2012, !2013, !2014}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1979, file: !1838, line: 346, baseType: !1978, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1979, file: !1838, line: 346, baseType: !1978, size: 64, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !1979, file: !1838, line: 348, baseType: !1984, size: 64, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !1838, line: 343, baseType: !1893)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1979, file: !1838, line: 349, baseType: !1987, size: 64, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !40, line: 295, baseType: !279)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1979, file: !1838, line: 349, baseType: !1987, size: 64, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1979, file: !1838, line: 350, baseType: !5, size: 32, offset: 320)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !1979, file: !1838, line: 350, baseType: !5, size: 32, offset: 352)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1979, file: !1838, line: 350, baseType: !5, size: 32, offset: 384)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1979, file: !1838, line: 352, baseType: !762, size: 512, offset: 416)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1979, file: !1838, line: 352, baseType: !762, size: 512, offset: 928)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !1979, file: !1838, line: 353, baseType: !1680, size: 288, offset: 1440)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1979, file: !1838, line: 354, baseType: !102, size: 16, offset: 1728)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !1979, file: !1838, line: 356, baseType: !212, size: 96, offset: 1760)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !1979, file: !1838, line: 356, baseType: !192, size: 64, offset: 1856)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !1979, file: !1838, line: 357, baseType: !2000, size: 64, offset: 1920)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !1979, file: !1838, line: 359, baseType: !2002, size: 64, offset: 1984)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !1838, line: 513, size: 448, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2003, file: !1838, line: 514, baseType: !1036, size: 96)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2003, file: !1838, line: 515, baseType: !643, size: 64, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2003, file: !1838, line: 515, baseType: !643, size: 64, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2003, file: !1838, line: 516, baseType: !643, size: 64, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2003, file: !1838, line: 517, baseType: !643, size: 64, offset: 320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2003, file: !1838, line: 518, baseType: !643, size: 64, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !1979, file: !1838, line: 361, baseType: !643, size: 64, offset: 2048)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !1979, file: !1838, line: 362, baseType: !5, size: 32, offset: 2112)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !1979, file: !1838, line: 365, baseType: !1969, size: 64, offset: 2176)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !1979, file: !1838, line: 366, baseType: !5, size: 32, offset: 2240)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !1873, file: !1838, line: 462, baseType: !393, size: 64, offset: 384)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !1873, file: !1838, line: 463, baseType: !2017, size: 64, offset: 448)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !1838, line: 436, size: 2880, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2026, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2018, file: !1838, line: 437, baseType: !2017, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2018, file: !1838, line: 437, baseType: !2017, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2018, file: !1838, line: 438, baseType: !1985, size: 2240, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2018, file: !1838, line: 439, baseType: !2024, size: 64, offset: 2368)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !209)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2018, file: !1838, line: 440, baseType: !2027, size: 64, offset: 2432)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2018, file: !1838, line: 442, baseType: !2027, size: 64, offset: 2496)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2018, file: !1838, line: 443, baseType: !2027, size: 64, offset: 2560)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2018, file: !1838, line: 444, baseType: !2027, size: 64, offset: 2624)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2018, file: !1838, line: 446, baseType: !2027, size: 64, offset: 2688)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2018, file: !1838, line: 446, baseType: !2027, size: 64, offset: 2752)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2018, file: !1838, line: 447, baseType: !5, size: 32, offset: 2816)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2018, file: !1838, line: 447, baseType: !5, size: 32, offset: 2848)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1873, file: !1838, line: 464, baseType: !41, size: 32, offset: 512)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !1873, file: !1838, line: 465, baseType: !5, size: 32, offset: 544)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1873, file: !1838, line: 466, baseType: !5, size: 32, offset: 576)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !1873, file: !1838, line: 466, baseType: !5, size: 32, offset: 608)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !1873, file: !1838, line: 467, baseType: !147, size: 32, offset: 640)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !1873, file: !1838, line: 467, baseType: !147, size: 32, offset: 672)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !1873, file: !1838, line: 467, baseType: !147, size: 32, offset: 704)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !1873, file: !1838, line: 469, baseType: !147, size: 32, offset: 736)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !1873, file: !1838, line: 471, baseType: !762, size: 512, offset: 768)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1873, file: !1838, line: 472, baseType: !5, size: 32, offset: 1280)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1873, file: !1838, line: 472, baseType: !5, size: 32, offset: 1312)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1861, file: !1838, line: 478, baseType: !5, size: 32, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1861, file: !1838, line: 478, baseType: !5, size: 32, offset: 160)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1861, file: !1838, line: 479, baseType: !5, size: 32, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1861, file: !1838, line: 479, baseType: !5, size: 32, offset: 224)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !1861, file: !1838, line: 480, baseType: !212, size: 96, offset: 256)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !1832, file: !1831, line: 105, baseType: !1978, size: 64, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !1832, file: !1831, line: 106, baseType: !1892, size: 64, offset: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !1832, file: !1831, line: 107, baseType: !5, size: 32, offset: 320)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !1832, file: !1831, line: 108, baseType: !212, size: 96, offset: 352)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !1832, file: !1831, line: 109, baseType: !102, size: 16, offset: 448)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1832, file: !1831, line: 110, baseType: !1841, size: 64, offset: 512)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1832, file: !1831, line: 110, baseType: !1841, size: 64, offset: 576)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1832, file: !1831, line: 110, baseType: !1841, size: 64, offset: 640)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !1832, file: !1831, line: 111, baseType: !102, size: 16, offset: 704)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !1832, file: !1831, line: 111, baseType: !102, size: 16, offset: 720)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !1832, file: !1831, line: 111, baseType: !102, size: 16, offset: 736)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !1832, file: !1831, line: 112, baseType: !102, size: 16, offset: 752)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !1832, file: !1831, line: 113, baseType: !102, size: 16, offset: 768)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !1832, file: !1831, line: 114, baseType: !212, size: 96, offset: 800)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !1832, file: !1831, line: 114, baseType: !212, size: 96, offset: 896)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !1832, file: !1831, line: 115, baseType: !212, size: 96, offset: 992)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !1832, file: !1831, line: 115, baseType: !212, size: 96, offset: 1088)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !1832, file: !1831, line: 115, baseType: !212, size: 96, offset: 1184)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1832, file: !1831, line: 116, baseType: !5, size: 32, offset: 1280)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !1832, file: !1831, line: 116, baseType: !5, size: 32, offset: 1312)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1344)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1376)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1408)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1440)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1472)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !1832, file: !1831, line: 119, baseType: !147, size: 32, offset: 1504)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1832, file: !1831, line: 120, baseType: !212, size: 96, offset: 1536)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1832, file: !1831, line: 120, baseType: !212, size: 96, offset: 1632)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !1832, file: !1831, line: 120, baseType: !212, size: 96, offset: 1728)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1832, file: !1831, line: 124, baseType: !147, size: 32, offset: 1824)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1832, file: !1831, line: 124, baseType: !147, size: 32, offset: 1856)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1832, file: !1831, line: 124, baseType: !147, size: 32, offset: 1888)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !1832, file: !1831, line: 125, baseType: !147, size: 32, offset: 1920)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !1832, file: !1831, line: 125, baseType: !147, size: 32, offset: 1952)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !1832, file: !1831, line: 125, baseType: !147, size: 32, offset: 1984)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !1832, file: !1831, line: 126, baseType: !147, size: 32, offset: 2016)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !1832, file: !1831, line: 126, baseType: !147, size: 32, offset: 2048)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !1832, file: !1831, line: 126, baseType: !147, size: 32, offset: 2080)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1832, file: !1831, line: 127, baseType: !147, size: 32, offset: 2112)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1832, file: !1831, line: 127, baseType: !147, size: 32, offset: 2144)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1832, file: !1831, line: 127, baseType: !147, size: 32, offset: 2176)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !1832, file: !1831, line: 129, baseType: !147, size: 32, offset: 2208)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !1832, file: !1831, line: 129, baseType: !147, size: 32, offset: 2240)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !1832, file: !1831, line: 129, baseType: !147, size: 32, offset: 2272)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !1832, file: !1831, line: 129, baseType: !147, size: 32, offset: 2304)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !1832, file: !1831, line: 129, baseType: !147, size: 32, offset: 2336)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1832, file: !1831, line: 130, baseType: !147, size: 32, offset: 2368)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !1832, file: !1831, line: 130, baseType: !147, size: 32, offset: 2400)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1832, file: !1831, line: 130, baseType: !147, size: 32, offset: 2432)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !1832, file: !1831, line: 130, baseType: !147, size: 32, offset: 2464)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1832, file: !1831, line: 130, baseType: !147, size: 32, offset: 2496)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !1832, file: !1831, line: 131, baseType: !147, size: 32, offset: 2528)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !1832, file: !1831, line: 135, baseType: !5, size: 32, offset: 2560)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !1832, file: !1831, line: 138, baseType: !212, size: 96, offset: 2592)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !1832, file: !1831, line: 138, baseType: !212, size: 96, offset: 2688)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1832, file: !1831, line: 138, baseType: !212, size: 96, offset: 2784)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !1832, file: !1831, line: 138, baseType: !212, size: 96, offset: 2880)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !1832, file: !1831, line: 138, baseType: !212, size: 96, offset: 2976)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !1832, file: !1831, line: 138, baseType: !511, size: 128, offset: 3072)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !1832, file: !1831, line: 139, baseType: !511, size: 128, offset: 3200)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !1832, file: !1831, line: 139, baseType: !212, size: 96, offset: 3328)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !1832, file: !1831, line: 140, baseType: !147, size: 32, offset: 3424)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !1832, file: !1831, line: 140, baseType: !212, size: 96, offset: 3456)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !1832, file: !1831, line: 140, baseType: !212, size: 96, offset: 3552)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !1832, file: !1831, line: 140, baseType: !511, size: 128, offset: 3648)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !1832, file: !1831, line: 140, baseType: !147, size: 32, offset: 3776)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !1832, file: !1831, line: 140, baseType: !511, size: 128, offset: 3808)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !1832, file: !1831, line: 141, baseType: !212, size: 96, offset: 3936)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !1832, file: !1831, line: 141, baseType: !212, size: 96, offset: 4032)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1832, file: !1831, line: 143, baseType: !2121, size: 3072, offset: 4160)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 3072, elements: !694)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !1831, line: 90, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !1831, line: 87, size: 384, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !2123, file: !1831, line: 88, baseType: !212, size: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !2123, file: !1831, line: 88, baseType: !212, size: 96, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2123, file: !1831, line: 88, baseType: !212, size: 96, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2123, file: !1831, line: 89, baseType: !691, size: 64, offset: 320)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1832, file: !1831, line: 144, baseType: !2130, size: 1536, offset: 7232)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2131, size: 1536, elements: !694)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !1831, line: 95, baseType: !2132)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !1831, line: 92, size: 192, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2132, file: !1831, line: 93, baseType: !511, size: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2132, file: !1831, line: 94, baseType: !691, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !1832, file: !1831, line: 145, baseType: !5, size: 32, offset: 8768)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1832, file: !1831, line: 145, baseType: !5, size: 32, offset: 8800)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !1832, file: !1831, line: 145, baseType: !5, size: 32, offset: 8832)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1832, file: !1831, line: 145, baseType: !5, size: 32, offset: 8864)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !1832, file: !1831, line: 148, baseType: !212, size: 96, offset: 8896)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !1832, file: !1831, line: 148, baseType: !212, size: 96, offset: 8992)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !1832, file: !1831, line: 149, baseType: !212, size: 96, offset: 9088)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !1832, file: !1831, line: 149, baseType: !212, size: 96, offset: 9184)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !1832, file: !1831, line: 149, baseType: !212, size: 96, offset: 9280)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !1832, file: !1831, line: 149, baseType: !212, size: 96, offset: 9376)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !1832, file: !1831, line: 150, baseType: !212, size: 96, offset: 9472)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !1832, file: !1831, line: 150, baseType: !212, size: 96, offset: 9568)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !1832, file: !1831, line: 150, baseType: !212, size: 96, offset: 9664)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !1832, file: !1831, line: 150, baseType: !212, size: 96, offset: 9760)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !1832, file: !1831, line: 151, baseType: !212, size: 96, offset: 9856)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !1832, file: !1831, line: 151, baseType: !212, size: 96, offset: 9952)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !1832, file: !1831, line: 151, baseType: !147, size: 32, offset: 10048)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !1832, file: !1831, line: 151, baseType: !147, size: 32, offset: 10080)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !1832, file: !1831, line: 152, baseType: !212, size: 96, offset: 10112)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !1832, file: !1831, line: 152, baseType: !212, size: 96, offset: 10208)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !1832, file: !1831, line: 153, baseType: !212, size: 96, offset: 10304)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !1832, file: !1831, line: 153, baseType: !212, size: 96, offset: 10400)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !1832, file: !1831, line: 154, baseType: !212, size: 96, offset: 10496)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !1832, file: !1831, line: 154, baseType: !212, size: 96, offset: 10592)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !1832, file: !1831, line: 155, baseType: !147, size: 32, offset: 10688)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !1832, file: !1831, line: 155, baseType: !147, size: 32, offset: 10720)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !1832, file: !1831, line: 158, baseType: !212, size: 96, offset: 10752)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !1832, file: !1831, line: 158, baseType: !212, size: 96, offset: 10848)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1832, file: !1831, line: 158, baseType: !212, size: 96, offset: 10944)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !1832, file: !1831, line: 160, baseType: !5, size: 32, offset: 11040)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !1832, file: !1831, line: 160, baseType: !5, size: 32, offset: 11072)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1832, file: !1831, line: 161, baseType: !5, size: 32, offset: 11104)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !1832, file: !1831, line: 162, baseType: !212, size: 96, offset: 11136)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !1832, file: !1831, line: 164, baseType: !5, size: 32, offset: 11232)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1832, file: !1831, line: 165, baseType: !5, size: 32, offset: 11264)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !1832, file: !1831, line: 166, baseType: !5, size: 32, offset: 11296)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !1832, file: !1831, line: 169, baseType: !212, size: 96, offset: 11328)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !1832, file: !1831, line: 169, baseType: !147, size: 32, offset: 11424)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !1832, file: !1831, line: 172, baseType: !1015, size: 8, offset: 11456)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !1832, file: !1831, line: 173, baseType: !1015, size: 8, offset: 11464)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1832, file: !1831, line: 174, baseType: !102, size: 16, offset: 11472)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1832, file: !1831, line: 174, baseType: !102, size: 16, offset: 11488)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1832, file: !1831, line: 175, baseType: !102, size: 16, offset: 11504)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1832, file: !1831, line: 177, baseType: !41, size: 32, offset: 11520)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !1832, file: !1831, line: 178, baseType: !5, size: 32, offset: 11552)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !1832, file: !1831, line: 178, baseType: !5, size: 32, offset: 11584)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !1832, file: !1831, line: 178, baseType: !5, size: 32, offset: 11616)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !1832, file: !1831, line: 179, baseType: !557, size: 64, offset: 11648)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !1832, file: !1831, line: 180, baseType: !393, size: 64, offset: 11712)
!2185 = !{}
!2186 = !DILocalVariable(name: "shi", arg: 1, scope: !1826, file: !1, line: 71, type: !1829)
!2187 = !DILocation(line: 71, column: 34, scope: !1826)
!2188 = !DILocation(line: 74, column: 10, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 74, column: 6)
!2190 = !DILocation(line: 74, column: 18, scope: !2189)
!2191 = !DILocation(line: 74, column: 6, scope: !1826)
!2192 = !DILocation(line: 75, column: 3, scope: !2189)
!2193 = !DILocation(line: 76, column: 6, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 76, column: 6)
!2195 = !DILocation(line: 76, column: 11, scope: !2194)
!2196 = !DILocation(line: 76, column: 6, scope: !1826)
!2197 = !DILocation(line: 77, column: 11, scope: !2194)
!2198 = !DILocation(line: 77, column: 16, scope: !2194)
!2199 = !DILocation(line: 77, column: 32, scope: !2194)
!2200 = !DILocation(line: 77, column: 3, scope: !2194)
!2201 = !DILocation(line: 78, column: 6, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 78, column: 6)
!2203 = !DILocation(line: 78, column: 11, scope: !2202)
!2204 = !DILocation(line: 78, column: 15, scope: !2202)
!2205 = !DILocation(line: 78, column: 18, scope: !2202)
!2206 = !DILocation(line: 78, column: 23, scope: !2202)
!2207 = !DILocation(line: 78, column: 28, scope: !2202)
!2208 = !DILocation(line: 78, column: 6, scope: !1826)
!2209 = !DILocation(line: 79, column: 11, scope: !2202)
!2210 = !DILocation(line: 79, column: 16, scope: !2202)
!2211 = !DILocation(line: 79, column: 21, scope: !2202)
!2212 = !DILocation(line: 79, column: 28, scope: !2202)
!2213 = !DILocation(line: 79, column: 3, scope: !2202)
!2214 = !DILocation(line: 81, column: 2, scope: !1826)
!2215 = !DILocation(line: 82, column: 1, scope: !1826)
!2216 = distinct !DISubprogram(name: "mistfactor", scope: !1, file: !1, line: 127, type: !2217, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!147, !147, !2219}
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !147)
!2221 = !DILocalVariable(name: "zcor", arg: 1, scope: !2216, file: !1, line: 127, type: !147)
!2222 = !DILocation(line: 127, column: 24, scope: !2216)
!2223 = !DILocalVariable(name: "co", arg: 2, scope: !2216, file: !1, line: 127, type: !2219)
!2224 = !DILocation(line: 127, column: 42, scope: !2216)
!2225 = !DILocalVariable(name: "fac", scope: !2216, file: !1, line: 129, type: !147)
!2226 = !DILocation(line: 129, column: 8, scope: !2216)
!2227 = !DILocalVariable(name: "hi", scope: !2216, file: !1, line: 129, type: !147)
!2228 = !DILocation(line: 129, column: 13, scope: !2216)
!2229 = !DILocation(line: 131, column: 8, scope: !2216)
!2230 = !DILocation(line: 131, column: 22, scope: !2216)
!2231 = !DILocation(line: 131, column: 13, scope: !2216)
!2232 = !DILocation(line: 131, column: 6, scope: !2216)
!2233 = !DILocation(line: 135, column: 6, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2216, file: !1, line: 135, column: 6)
!2235 = !DILocation(line: 135, column: 10, scope: !2234)
!2236 = !DILocation(line: 135, column: 6, scope: !2216)
!2237 = !DILocation(line: 136, column: 7, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2239, file: !1, line: 136, column: 7)
!2239 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 135, column: 18)
!2240 = !DILocation(line: 136, column: 20, scope: !2238)
!2241 = !DILocation(line: 136, column: 11, scope: !2238)
!2242 = !DILocation(line: 136, column: 7, scope: !2239)
!2243 = !DILocation(line: 138, column: 11, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2238, file: !1, line: 136, column: 30)
!2245 = !DILocation(line: 138, column: 24, scope: !2244)
!2246 = !DILocation(line: 138, column: 15, scope: !2244)
!2247 = !DILocation(line: 138, column: 8, scope: !2244)
!2248 = !DILocation(line: 140, column: 15, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2244, file: !1, line: 140, column: 8)
!2250 = !DILocation(line: 140, column: 8, scope: !2249)
!2251 = !DILocation(line: 140, column: 23, scope: !2249)
!2252 = !DILocation(line: 140, column: 8, scope: !2244)
!2253 = !DILocation(line: 141, column: 12, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2249, file: !1, line: 140, column: 29)
!2255 = !DILocation(line: 141, column: 9, scope: !2254)
!2256 = !DILocation(line: 142, column: 4, scope: !2254)
!2257 = !DILocation(line: 143, column: 20, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2249, file: !1, line: 143, column: 13)
!2259 = !DILocation(line: 143, column: 13, scope: !2258)
!2260 = !DILocation(line: 143, column: 28, scope: !2258)
!2261 = !DILocation(line: 143, column: 13, scope: !2249)
!2262 = !DILocation(line: 145, column: 4, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2258, file: !1, line: 143, column: 34)
!2264 = !DILocation(line: 147, column: 17, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2258, file: !1, line: 146, column: 9)
!2266 = !DILocation(line: 147, column: 11, scope: !2265)
!2267 = !DILocation(line: 147, column: 9, scope: !2265)
!2268 = !DILocation(line: 149, column: 3, scope: !2244)
!2269 = !DILocation(line: 151, column: 8, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2238, file: !1, line: 150, column: 8)
!2271 = !DILocation(line: 153, column: 2, scope: !2239)
!2272 = !DILocation(line: 155, column: 7, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 154, column: 7)
!2274 = !DILocation(line: 159, column: 13, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2216, file: !1, line: 159, column: 6)
!2276 = !DILocation(line: 159, column: 19, scope: !2275)
!2277 = !DILocation(line: 159, column: 26, scope: !2275)
!2278 = !DILocation(line: 159, column: 29, scope: !2275)
!2279 = !DILocation(line: 159, column: 32, scope: !2275)
!2280 = !DILocation(line: 159, column: 6, scope: !2216)
!2281 = !DILocation(line: 162, column: 8, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2275, file: !1, line: 159, column: 40)
!2283 = !DILocation(line: 162, column: 26, scope: !2282)
!2284 = !DILocation(line: 162, column: 24, scope: !2282)
!2285 = !DILocation(line: 163, column: 8, scope: !2282)
!2286 = !DILocation(line: 163, column: 26, scope: !2282)
!2287 = !DILocation(line: 163, column: 24, scope: !2282)
!2288 = !DILocation(line: 162, column: 32, scope: !2282)
!2289 = !DILocation(line: 164, column: 8, scope: !2282)
!2290 = !DILocation(line: 164, column: 26, scope: !2282)
!2291 = !DILocation(line: 164, column: 24, scope: !2282)
!2292 = !DILocation(line: 163, column: 32, scope: !2282)
!2293 = !DILocation(line: 165, column: 8, scope: !2282)
!2294 = !DILocation(line: 164, column: 32, scope: !2282)
!2295 = !DILocation(line: 162, column: 6, scope: !2282)
!2296 = !DILocation(line: 167, column: 7, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2282, file: !1, line: 167, column: 7)
!2298 = !DILocation(line: 167, column: 19, scope: !2297)
!2299 = !DILocation(line: 167, column: 10, scope: !2297)
!2300 = !DILocation(line: 167, column: 7, scope: !2282)
!2301 = !DILocation(line: 168, column: 8, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2297, file: !1, line: 167, column: 27)
!2303 = !DILocation(line: 169, column: 3, scope: !2302)
!2304 = !DILocation(line: 170, column: 12, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2297, file: !1, line: 170, column: 12)
!2306 = !DILocation(line: 170, column: 14, scope: !2305)
!2307 = !DILocation(line: 170, column: 12, scope: !2297)
!2308 = !DILocation(line: 171, column: 16, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2305, file: !1, line: 170, column: 21)
!2310 = !DILocation(line: 171, column: 23, scope: !2309)
!2311 = !DILocation(line: 171, column: 22, scope: !2309)
!2312 = !DILocation(line: 171, column: 34, scope: !2309)
!2313 = !DILocation(line: 171, column: 26, scope: !2309)
!2314 = !DILocation(line: 171, column: 6, scope: !2309)
!2315 = !DILocation(line: 172, column: 10, scope: !2309)
!2316 = !DILocation(line: 172, column: 13, scope: !2309)
!2317 = !DILocation(line: 172, column: 12, scope: !2309)
!2318 = !DILocation(line: 172, column: 7, scope: !2309)
!2319 = !DILocation(line: 173, column: 3, scope: !2309)
!2320 = !DILocation(line: 174, column: 2, scope: !2282)
!2321 = !DILocation(line: 176, column: 15, scope: !2216)
!2322 = !DILocation(line: 176, column: 14, scope: !2216)
!2323 = !DILocation(line: 176, column: 34, scope: !2216)
!2324 = !DILocation(line: 176, column: 26, scope: !2216)
!2325 = !DILocation(line: 176, column: 19, scope: !2216)
!2326 = !DILocation(line: 176, column: 2, scope: !2216)
!2327 = distinct !DISubprogram(name: "renderspothalo", scope: !1, file: !1, line: 372, type: !2328, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null, !1829, !643, !147}
!2330 = !DILocalVariable(name: "shi", arg: 1, scope: !2327, file: !1, line: 372, type: !1829)
!2331 = !DILocation(line: 372, column: 33, scope: !2327)
!2332 = !DILocalVariable(name: "col", arg: 2, scope: !2327, file: !1, line: 372, type: !643)
!2333 = !DILocation(line: 372, column: 44, scope: !2327)
!2334 = !DILocalVariable(name: "alpha", arg: 3, scope: !2327, file: !1, line: 372, type: !147)
!2335 = !DILocation(line: 372, column: 58, scope: !2327)
!2336 = !DILocalVariable(name: "lights", scope: !2327, file: !1, line: 374, type: !863)
!2337 = !DILocation(line: 374, column: 12, scope: !2327)
!2338 = !DILocalVariable(name: "go", scope: !2327, file: !1, line: 375, type: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !559, line: 48, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !559, line: 42, size: 320, elements: !2342)
!2342 = !{!2343, !2345, !2346, !2347, !2348, !2349}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2341, file: !559, line: 43, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2341, file: !559, line: 43, baseType: !2344, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2341, file: !559, line: 44, baseType: !278, size: 64, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !2341, file: !559, line: 45, baseType: !62, size: 64, offset: 192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2341, file: !559, line: 46, baseType: !102, size: 16, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2341, file: !559, line: 47, baseType: !1231, size: 48, offset: 272)
!2350 = !DILocation(line: 375, column: 15, scope: !2327)
!2351 = !DILocalVariable(name: "lar", scope: !2327, file: !1, line: 376, type: !2352)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !1838, line: 615, baseType: !2354)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !1838, line: 540, size: 5376, elements: !2355)
!2355 = !{!2356, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2409, !2410, !2411, !2412, !2413, !2414, !2453, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2523, !2525, !2526, !2527}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2354, file: !1838, line: 541, baseType: !2357, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2354, file: !1838, line: 541, baseType: !2357, size: 64, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2354, file: !1838, line: 543, baseType: !147, size: 32, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2354, file: !1838, line: 543, baseType: !147, size: 32, offset: 160)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2354, file: !1838, line: 543, baseType: !147, size: 32, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2354, file: !1838, line: 544, baseType: !212, size: 96, offset: 224)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2354, file: !1838, line: 545, baseType: !102, size: 16, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2354, file: !1838, line: 546, baseType: !5, size: 32, offset: 352)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2354, file: !1838, line: 547, baseType: !147, size: 32, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2354, file: !1838, line: 547, baseType: !147, size: 32, offset: 416)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2354, file: !1838, line: 547, baseType: !147, size: 32, offset: 448)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2354, file: !1838, line: 547, baseType: !147, size: 32, offset: 480)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !2354, file: !1838, line: 548, baseType: !147, size: 32, offset: 512)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !2354, file: !1838, line: 548, baseType: !147, size: 32, offset: 544)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !2354, file: !1838, line: 548, baseType: !147, size: 32, offset: 576)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2354, file: !1838, line: 549, baseType: !147, size: 32, offset: 608)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !2354, file: !1838, line: 549, baseType: !147, size: 32, offset: 640)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2354, file: !1838, line: 550, baseType: !5, size: 32, offset: 672)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !2354, file: !1838, line: 551, baseType: !147, size: 32, offset: 704)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !2354, file: !1838, line: 551, baseType: !147, size: 32, offset: 736)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2354, file: !1838, line: 552, baseType: !212, size: 96, offset: 768)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !2354, file: !1838, line: 553, baseType: !147, size: 32, offset: 864)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !2354, file: !1838, line: 553, baseType: !147, size: 32, offset: 896)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !2354, file: !1838, line: 553, baseType: !147, size: 32, offset: 928)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !2354, file: !1838, line: 553, baseType: !147, size: 32, offset: 960)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !2354, file: !1838, line: 554, baseType: !147, size: 32, offset: 992)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !2354, file: !1838, line: 554, baseType: !147, size: 32, offset: 1024)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2354, file: !1838, line: 556, baseType: !102, size: 16, offset: 1056)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !2354, file: !1838, line: 557, baseType: !147, size: 32, offset: 1088)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !2354, file: !1838, line: 557, baseType: !147, size: 32, offset: 1120)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !2354, file: !1838, line: 558, baseType: !163, size: 64, offset: 1152)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !2354, file: !1838, line: 562, baseType: !102, size: 16, offset: 1216)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2354, file: !1838, line: 564, baseType: !102, size: 16, offset: 1232)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2354, file: !1838, line: 566, baseType: !147, size: 32, offset: 1248)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2354, file: !1838, line: 568, baseType: !102, size: 16, offset: 1280)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2354, file: !1838, line: 568, baseType: !102, size: 16, offset: 1296)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !2354, file: !1838, line: 570, baseType: !102, size: 16, offset: 1312)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !2354, file: !1838, line: 572, baseType: !102, size: 16, offset: 1328)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2354, file: !1838, line: 574, baseType: !102, size: 16, offset: 1344)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2354, file: !1838, line: 576, baseType: !147, size: 32, offset: 1376)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2354, file: !1838, line: 578, baseType: !147, size: 32, offset: 1408)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2354, file: !1838, line: 580, baseType: !147, size: 32, offset: 1440)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2354, file: !1838, line: 582, baseType: !147, size: 32, offset: 1472)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1504)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1520)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1536)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1552)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1568)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1584)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !2354, file: !1838, line: 584, baseType: !102, size: 16, offset: 1600)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !2354, file: !1838, line: 585, baseType: !2408, size: 16, offset: 1616)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 16, elements: !527)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !2354, file: !1838, line: 585, baseType: !2408, size: 16, offset: 1632)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !2354, file: !1838, line: 586, baseType: !147, size: 32, offset: 1664)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !2354, file: !1838, line: 586, baseType: !147, size: 32, offset: 1696)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !2354, file: !1838, line: 586, baseType: !147, size: 32, offset: 1728)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !2354, file: !1838, line: 587, baseType: !147, size: 32, offset: 1760)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !2354, file: !1838, line: 590, baseType: !2415, size: 64, offset: 1792)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !2417, line: 32, size: 1792, elements: !2418)
!2417 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !2416, file: !2417, line: 33, baseType: !102, size: 16)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !2416, file: !2417, line: 33, baseType: !102, size: 16, offset: 16)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !2416, file: !2417, line: 33, baseType: !102, size: 16, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !2416, file: !2417, line: 34, baseType: !147, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !2416, file: !2417, line: 35, baseType: !147, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !2416, file: !2417, line: 35, baseType: !147, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !2416, file: !2417, line: 37, baseType: !212, size: 96, offset: 160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !2416, file: !2417, line: 40, baseType: !147, size: 32, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !2416, file: !2417, line: 42, baseType: !147, size: 32, offset: 288)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !2416, file: !2417, line: 42, baseType: !147, size: 32, offset: 320)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !2416, file: !2417, line: 42, baseType: !147, size: 32, offset: 352)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !2416, file: !2417, line: 44, baseType: !2431, size: 160, offset: 384)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 160, elements: !1063)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !2416, file: !2417, line: 44, baseType: !2431, size: 160, offset: 544)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !2416, file: !2417, line: 44, baseType: !2431, size: 160, offset: 704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !2416, file: !2417, line: 47, baseType: !147, size: 32, offset: 864)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2416, file: !2417, line: 48, baseType: !147, size: 32, offset: 896)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !2416, file: !2417, line: 49, baseType: !147, size: 32, offset: 928)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !2416, file: !2417, line: 50, baseType: !147, size: 32, offset: 960)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !2416, file: !2417, line: 51, baseType: !147, size: 32, offset: 992)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !2416, file: !2417, line: 52, baseType: !147, size: 32, offset: 1024)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !2416, file: !2417, line: 53, baseType: !147, size: 32, offset: 1056)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !2416, file: !2417, line: 55, baseType: !147, size: 32, offset: 1088)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !2416, file: !2417, line: 57, baseType: !147, size: 32, offset: 1120)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !2416, file: !2417, line: 58, baseType: !147, size: 32, offset: 1152)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !2416, file: !2417, line: 59, baseType: !147, size: 32, offset: 1184)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !2416, file: !2417, line: 60, baseType: !147, size: 32, offset: 1216)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !2416, file: !2417, line: 61, baseType: !147, size: 32, offset: 1248)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !2416, file: !2417, line: 62, baseType: !147, size: 32, offset: 1280)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !2416, file: !2417, line: 64, baseType: !212, size: 96, offset: 1312)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !2416, file: !2417, line: 65, baseType: !212, size: 96, offset: 1408)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !2416, file: !2417, line: 66, baseType: !212, size: 96, offset: 1504)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !2416, file: !2417, line: 67, baseType: !212, size: 96, offset: 1600)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !2416, file: !2417, line: 68, baseType: !212, size: 96, offset: 1696)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !2354, file: !1838, line: 592, baseType: !2454, size: 64, offset: 1856)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !1838, line: 297, size: 2240, elements: !2456)
!2456 = !{!2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2455, file: !1838, line: 299, baseType: !102, size: 16)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2455, file: !1838, line: 299, baseType: !102, size: 16, offset: 16)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !2455, file: !1838, line: 299, baseType: !102, size: 16, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2455, file: !1838, line: 300, baseType: !762, size: 512, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2455, file: !1838, line: 301, baseType: !762, size: 512, offset: 576)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2455, file: !1838, line: 302, baseType: !762, size: 512, offset: 1088)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !2455, file: !1838, line: 303, baseType: !643, size: 64, offset: 1600)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2455, file: !1838, line: 303, baseType: !643, size: 64, offset: 1664)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2455, file: !1838, line: 304, baseType: !147, size: 32, offset: 1728)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2455, file: !1838, line: 304, baseType: !147, size: 32, offset: 1760)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2455, file: !1838, line: 304, baseType: !147, size: 32, offset: 1792)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2455, file: !1838, line: 304, baseType: !147, size: 32, offset: 1824)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2455, file: !1838, line: 304, baseType: !147, size: 32, offset: 1856)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2455, file: !1838, line: 305, baseType: !1036, size: 96, offset: 1888)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2455, file: !1838, line: 306, baseType: !5, size: 32, offset: 1984)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2455, file: !1838, line: 306, baseType: !5, size: 32, offset: 2016)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2455, file: !1838, line: 307, baseType: !128, size: 128, offset: 2048)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !2455, file: !1838, line: 310, baseType: !2475, size: 64, offset: 2176)
!2475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2476, size: 64, elements: !527)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !2478, line: 106, size: 320, elements: !2479)
!2478 = !DIFile(filename: "blender/source/blender/render/intern/include/shadbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2479 = !{!2480, !2482, !2493, !2496, !2497, !2498, !2499}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "shadfacs", scope: !2477, file: !2478, line: 107, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "shadfaca", scope: !2477, file: !2478, line: 108, baseType: !2483, size: 64, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBShadfacA", file: !2478, line: 103, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBShadfacA", file: !2478, line: 98, size: 192, elements: !2487)
!2487 = !{!2488, !2490, !2491, !2492}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2486, file: !2478, line: 99, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2486, file: !2478, line: 100, baseType: !5, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2486, file: !2478, line: 101, baseType: !5, size: 32, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2486, file: !2478, line: 102, baseType: !147, size: 32, offset: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "memarena", scope: !2477, file: !2478, line: 109, baseType: !2494, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !1838, line: 57, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !2477, file: !2478, line: 110, baseType: !5, size: 32, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2477, file: !2478, line: 110, baseType: !5, size: 32, offset: 224)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2477, file: !2478, line: 110, baseType: !5, size: 32, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2477, file: !2478, line: 110, baseType: !5, size: 32, offset: 288)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !2354, file: !1838, line: 593, baseType: !643, size: 64, offset: 1920)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2354, file: !1838, line: 595, baseType: !1680, size: 288, offset: 1984)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !2354, file: !1838, line: 596, baseType: !147, size: 32, offset: 2272)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !2354, file: !1838, line: 597, baseType: !212, size: 96, offset: 2304)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !2354, file: !1838, line: 597, baseType: !147, size: 32, offset: 2400)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !2354, file: !1838, line: 599, baseType: !762, size: 512, offset: 2432)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2354, file: !1838, line: 601, baseType: !1680, size: 288, offset: 2944)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2354, file: !1838, line: 602, baseType: !303, size: 768, offset: 3232)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !2354, file: !1838, line: 602, baseType: !147, size: 32, offset: 4000)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !2354, file: !1838, line: 605, baseType: !2510, size: 64, offset: 4032)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !1838, line: 538, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !1838, line: 536, size: 2560, elements: !2513)
!2513 = !{!2514}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2512, file: !1838, line: 537, baseType: !2515, size: 2560)
!2515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2516, size: 2560, elements: !2521)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !1838, line: 534, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !1838, line: 531, size: 160, elements: !2518)
!2518 = !{!2519, !2520}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !2517, file: !1838, line: 532, baseType: !5, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2517, file: !1838, line: 533, baseType: !511, size: 128, offset: 32)
!2521 = !{!2522}
!2522 = !DISubrange(count: 16)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !2354, file: !1838, line: 608, baseType: !2524, size: 64, offset: 4096)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 64, elements: !527)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2354, file: !1838, line: 610, baseType: !268, size: 1152, offset: 4160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !2354, file: !1838, line: 613, baseType: !5, size: 32, offset: 5312)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !2354, file: !1838, line: 614, baseType: !5, size: 32, offset: 5344)
!2528 = !DILocation(line: 376, column: 11, scope: !2327)
!2529 = !DILocalVariable(name: "i", scope: !2327, file: !1, line: 377, type: !147)
!2530 = !DILocation(line: 377, column: 8, scope: !2327)
!2531 = !DILocation(line: 379, column: 6, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 379, column: 6)
!2533 = !DILocation(line: 379, column: 11, scope: !2532)
!2534 = !DILocation(line: 379, column: 6, scope: !2327)
!2535 = !DILocation(line: 379, column: 19, scope: !2532)
!2536 = !DILocation(line: 381, column: 21, scope: !2327)
!2537 = !DILocation(line: 381, column: 10, scope: !2327)
!2538 = !DILocation(line: 381, column: 8, scope: !2327)
!2539 = !DILocation(line: 382, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 382, column: 2)
!2541 = !DILocation(line: 382, column: 18, scope: !2540)
!2542 = !DILocation(line: 382, column: 9, scope: !2540)
!2543 = !DILocation(line: 382, column: 7, scope: !2540)
!2544 = !DILocation(line: 382, column: 25, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2540, file: !1, line: 382, column: 2)
!2546 = !DILocation(line: 382, column: 2, scope: !2540)
!2547 = !DILocation(line: 383, column: 8, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2545, file: !1, line: 382, column: 43)
!2549 = !DILocation(line: 383, column: 12, scope: !2548)
!2550 = !DILocation(line: 383, column: 6, scope: !2548)
!2551 = !DILocation(line: 384, column: 7, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2548, file: !1, line: 384, column: 7)
!2553 = !DILocation(line: 384, column: 10, scope: !2552)
!2554 = !DILocation(line: 384, column: 7, scope: !2548)
!2555 = !DILocation(line: 384, column: 18, scope: !2552)
!2556 = !DILocation(line: 386, column: 7, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2548, file: !1, line: 386, column: 7)
!2558 = !DILocation(line: 386, column: 12, scope: !2557)
!2559 = !DILocation(line: 386, column: 16, scope: !2557)
!2560 = !DILocation(line: 386, column: 26, scope: !2557)
!2561 = !DILocation(line: 386, column: 30, scope: !2557)
!2562 = !DILocation(line: 386, column: 35, scope: !2557)
!2563 = !DILocation(line: 386, column: 40, scope: !2557)
!2564 = !DILocation(line: 386, column: 51, scope: !2557)
!2565 = !DILocation(line: 386, column: 55, scope: !2557)
!2566 = !DILocation(line: 386, column: 60, scope: !2557)
!2567 = !DILocation(line: 386, column: 68, scope: !2557)
!2568 = !DILocation(line: 386, column: 88, scope: !2557)
!2569 = !DILocation(line: 386, column: 91, scope: !2557)
!2570 = !DILocation(line: 386, column: 96, scope: !2557)
!2571 = !DILocation(line: 386, column: 101, scope: !2557)
!2572 = !DILocation(line: 386, column: 7, scope: !2548)
!2573 = !DILocation(line: 388, column: 8, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 388, column: 8)
!2575 = distinct !DILexicalBlock(scope: !2557, file: !1, line: 386, column: 105)
!2576 = !DILocation(line: 388, column: 13, scope: !2574)
!2577 = !DILocation(line: 388, column: 18, scope: !2574)
!2578 = !DILocation(line: 388, column: 8, scope: !2575)
!2579 = !DILocation(line: 389, column: 9, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2574, file: !1, line: 389, column: 9)
!2581 = !DILocation(line: 389, column: 14, scope: !2580)
!2582 = !DILocation(line: 389, column: 18, scope: !2580)
!2583 = !DILocation(line: 389, column: 22, scope: !2580)
!2584 = !DILocation(line: 389, column: 27, scope: !2580)
!2585 = !DILocation(line: 389, column: 33, scope: !2580)
!2586 = !DILocation(line: 389, column: 38, scope: !2580)
!2587 = !DILocation(line: 389, column: 43, scope: !2580)
!2588 = !DILocation(line: 389, column: 31, scope: !2580)
!2589 = !DILocation(line: 389, column: 47, scope: !2580)
!2590 = !DILocation(line: 389, column: 9, scope: !2574)
!2591 = !DILocation(line: 390, column: 6, scope: !2580)
!2592 = !DILocation(line: 389, column: 49, scope: !2580)
!2593 = !DILocation(line: 391, column: 9, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 391, column: 8)
!2595 = !DILocation(line: 391, column: 14, scope: !2594)
!2596 = !DILocation(line: 391, column: 20, scope: !2594)
!2597 = !DILocation(line: 391, column: 25, scope: !2594)
!2598 = !DILocation(line: 391, column: 18, scope: !2594)
!2599 = !DILocation(line: 391, column: 29, scope: !2594)
!2600 = !DILocation(line: 391, column: 8, scope: !2575)
!2601 = !DILocation(line: 392, column: 5, scope: !2594)
!2602 = !DILocation(line: 394, column: 13, scope: !2575)
!2603 = !DILocation(line: 394, column: 18, scope: !2575)
!2604 = !DILocation(line: 394, column: 4, scope: !2575)
!2605 = !DILocation(line: 395, column: 8, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 395, column: 8)
!2607 = !DILocation(line: 395, column: 10, scope: !2606)
!2608 = !DILocation(line: 395, column: 8, scope: !2575)
!2609 = !DILocalVariable(name: "i_alpha", scope: !2610, file: !1, line: 396, type: !2220)
!2610 = distinct !DILexicalBlock(scope: !2606, file: !1, line: 395, column: 18)
!2611 = !DILocation(line: 396, column: 17, scope: !2610)
!2612 = !DILocation(line: 396, column: 27, scope: !2610)
!2613 = !DILocation(line: 396, column: 31, scope: !2610)
!2614 = !DILocation(line: 396, column: 29, scope: !2610)
!2615 = !DILocation(line: 397, column: 15, scope: !2610)
!2616 = !DILocation(line: 397, column: 25, scope: !2610)
!2617 = !DILocation(line: 397, column: 30, scope: !2610)
!2618 = !DILocation(line: 397, column: 23, scope: !2610)
!2619 = !DILocation(line: 397, column: 5, scope: !2610)
!2620 = !DILocation(line: 397, column: 12, scope: !2610)
!2621 = !DILocation(line: 398, column: 15, scope: !2610)
!2622 = !DILocation(line: 398, column: 25, scope: !2610)
!2623 = !DILocation(line: 398, column: 30, scope: !2610)
!2624 = !DILocation(line: 398, column: 23, scope: !2610)
!2625 = !DILocation(line: 398, column: 5, scope: !2610)
!2626 = !DILocation(line: 398, column: 12, scope: !2610)
!2627 = !DILocation(line: 399, column: 15, scope: !2610)
!2628 = !DILocation(line: 399, column: 25, scope: !2610)
!2629 = !DILocation(line: 399, column: 30, scope: !2610)
!2630 = !DILocation(line: 399, column: 23, scope: !2610)
!2631 = !DILocation(line: 399, column: 5, scope: !2610)
!2632 = !DILocation(line: 399, column: 12, scope: !2610)
!2633 = !DILocation(line: 400, column: 15, scope: !2610)
!2634 = !DILocation(line: 400, column: 5, scope: !2610)
!2635 = !DILocation(line: 400, column: 12, scope: !2610)
!2636 = !DILocation(line: 401, column: 4, scope: !2610)
!2637 = !DILocation(line: 402, column: 3, scope: !2575)
!2638 = !DILocation(line: 403, column: 2, scope: !2548)
!2639 = !DILocation(line: 382, column: 33, scope: !2545)
!2640 = !DILocation(line: 382, column: 37, scope: !2545)
!2641 = !DILocation(line: 382, column: 31, scope: !2545)
!2642 = !DILocation(line: 382, column: 2, scope: !2545)
!2643 = distinct !{!2643, !2546, !2644}
!2644 = !DILocation(line: 403, column: 2, scope: !2540)
!2645 = !DILocation(line: 405, column: 6, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 405, column: 6)
!2647 = !DILocation(line: 405, column: 12, scope: !2646)
!2648 = !DILocation(line: 405, column: 6, scope: !2327)
!2649 = !DILocation(line: 405, column: 19, scope: !2646)
!2650 = !DILocation(line: 405, column: 25, scope: !2646)
!2651 = !DILocation(line: 406, column: 1, scope: !2327)
!2652 = distinct !DISubprogram(name: "spothalo", scope: !1, file: !1, line: 179, type: !2653, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{null, !2357, !1829, !643}
!2655 = !DILocalVariable(name: "lar", arg: 1, scope: !2652, file: !1, line: 179, type: !2357)
!2656 = !DILocation(line: 179, column: 38, scope: !2652)
!2657 = !DILocalVariable(name: "shi", arg: 2, scope: !2652, file: !1, line: 179, type: !1829)
!2658 = !DILocation(line: 179, column: 55, scope: !2652)
!2659 = !DILocalVariable(name: "intens", arg: 3, scope: !2652, file: !1, line: 179, type: !643)
!2660 = !DILocation(line: 179, column: 67, scope: !2652)
!2661 = !DILocalVariable(name: "a", scope: !2652, file: !1, line: 181, type: !1821)
!2662 = !DILocation(line: 181, column: 9, scope: !2652)
!2663 = !DILocalVariable(name: "b", scope: !2652, file: !1, line: 181, type: !1821)
!2664 = !DILocation(line: 181, column: 12, scope: !2652)
!2665 = !DILocalVariable(name: "c", scope: !2652, file: !1, line: 181, type: !1821)
!2666 = !DILocation(line: 181, column: 15, scope: !2652)
!2667 = !DILocalVariable(name: "disc", scope: !2652, file: !1, line: 181, type: !1821)
!2668 = !DILocation(line: 181, column: 18, scope: !2652)
!2669 = !DILocalVariable(name: "nray", scope: !2652, file: !1, line: 181, type: !2670)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1821, size: 192, elements: !213)
!2671 = !DILocation(line: 181, column: 24, scope: !2652)
!2672 = !DILocalVariable(name: "npos", scope: !2652, file: !1, line: 181, type: !2670)
!2673 = !DILocation(line: 181, column: 33, scope: !2652)
!2674 = !DILocalVariable(name: "t0", scope: !2652, file: !1, line: 182, type: !1821)
!2675 = !DILocation(line: 182, column: 9, scope: !2652)
!2676 = !DILocalVariable(name: "t1", scope: !2652, file: !1, line: 182, type: !1821)
!2677 = !DILocation(line: 182, column: 13, scope: !2652)
!2678 = !DILocalVariable(name: "t2", scope: !2652, file: !1, line: 182, type: !1821)
!2679 = !DILocation(line: 182, column: 24, scope: !2652)
!2680 = !DILocalVariable(name: "t3", scope: !2652, file: !1, line: 182, type: !1821)
!2681 = !DILocation(line: 182, column: 34, scope: !2652)
!2682 = !DILocalVariable(name: "p1", scope: !2652, file: !1, line: 183, type: !212)
!2683 = !DILocation(line: 183, column: 8, scope: !2652)
!2684 = !DILocalVariable(name: "p2", scope: !2652, file: !1, line: 183, type: !212)
!2685 = !DILocation(line: 183, column: 15, scope: !2652)
!2686 = !DILocalVariable(name: "ladist", scope: !2652, file: !1, line: 183, type: !147)
!2687 = !DILocation(line: 183, column: 22, scope: !2652)
!2688 = !DILocalVariable(name: "maxz", scope: !2652, file: !1, line: 183, type: !147)
!2689 = !DILocation(line: 183, column: 30, scope: !2652)
!2690 = !DILocalVariable(name: "maxy", scope: !2652, file: !1, line: 183, type: !147)
!2691 = !DILocation(line: 183, column: 43, scope: !2652)
!2692 = !DILocalVariable(name: "haint", scope: !2652, file: !1, line: 183, type: !147)
!2693 = !DILocation(line: 183, column: 56, scope: !2652)
!2694 = !DILocalVariable(name: "cuts", scope: !2652, file: !1, line: 184, type: !5)
!2695 = !DILocation(line: 184, column: 6, scope: !2652)
!2696 = !DILocalVariable(name: "do_clip", scope: !2652, file: !1, line: 185, type: !1015)
!2697 = !DILocation(line: 185, column: 7, scope: !2652)
!2698 = !DILocalVariable(name: "use_yco", scope: !2652, file: !1, line: 185, type: !1015)
!2699 = !DILocation(line: 185, column: 23, scope: !2652)
!2700 = !DILocation(line: 187, column: 3, scope: !2652)
!2701 = !DILocation(line: 187, column: 9, scope: !2652)
!2702 = !DILocation(line: 188, column: 9, scope: !2652)
!2703 = !DILocation(line: 188, column: 14, scope: !2652)
!2704 = !DILocation(line: 188, column: 7, scope: !2652)
!2705 = !DILocation(line: 190, column: 10, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 190, column: 6)
!2707 = !DILocation(line: 190, column: 15, scope: !2706)
!2708 = !DILocation(line: 190, column: 6, scope: !2652)
!2709 = !DILocation(line: 193, column: 10, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2706, file: !1, line: 190, column: 26)
!2711 = !DILocation(line: 193, column: 15, scope: !2710)
!2712 = !DILocation(line: 193, column: 21, scope: !2710)
!2713 = !DILocation(line: 193, column: 26, scope: !2710)
!2714 = !DILocation(line: 193, column: 20, scope: !2710)
!2715 = !DILocation(line: 193, column: 3, scope: !2710)
!2716 = !DILocation(line: 193, column: 8, scope: !2710)
!2717 = !DILocation(line: 194, column: 10, scope: !2710)
!2718 = !DILocation(line: 194, column: 15, scope: !2710)
!2719 = !DILocation(line: 194, column: 21, scope: !2710)
!2720 = !DILocation(line: 194, column: 26, scope: !2710)
!2721 = !DILocation(line: 194, column: 20, scope: !2710)
!2722 = !DILocation(line: 194, column: 3, scope: !2710)
!2723 = !DILocation(line: 194, column: 8, scope: !2710)
!2724 = !DILocation(line: 195, column: 11, scope: !2710)
!2725 = !DILocation(line: 195, column: 16, scope: !2710)
!2726 = !DILocation(line: 195, column: 10, scope: !2710)
!2727 = !DILocation(line: 195, column: 3, scope: !2710)
!2728 = !DILocation(line: 195, column: 8, scope: !2710)
!2729 = !DILocation(line: 196, column: 13, scope: !2710)
!2730 = !DILocation(line: 196, column: 18, scope: !2710)
!2731 = !DILocation(line: 196, column: 24, scope: !2710)
!2732 = !DILocation(line: 196, column: 3, scope: !2710)
!2733 = !DILocation(line: 197, column: 18, scope: !2710)
!2734 = !DILocation(line: 197, column: 24, scope: !2710)
!2735 = !DILocation(line: 197, column: 3, scope: !2710)
!2736 = !DILocation(line: 200, column: 22, scope: !2710)
!2737 = !DILocation(line: 200, column: 27, scope: !2710)
!2738 = !DILocation(line: 200, column: 14, scope: !2710)
!2739 = !DILocation(line: 200, column: 3, scope: !2710)
!2740 = !DILocation(line: 200, column: 11, scope: !2710)
!2741 = !DILocation(line: 201, column: 2, scope: !2710)
!2742 = !DILocation(line: 203, column: 18, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2706, file: !1, line: 202, column: 7)
!2744 = !DILocation(line: 203, column: 24, scope: !2743)
!2745 = !DILocation(line: 203, column: 29, scope: !2743)
!2746 = !DILocation(line: 203, column: 3, scope: !2743)
!2747 = !DILocation(line: 207, column: 17, scope: !2652)
!2748 = !DILocation(line: 207, column: 23, scope: !2652)
!2749 = !DILocation(line: 207, column: 28, scope: !2652)
!2750 = !DILocation(line: 207, column: 2, scope: !2652)
!2751 = !DILocation(line: 208, column: 19, scope: !2652)
!2752 = !DILocation(line: 208, column: 24, scope: !2652)
!2753 = !DILocation(line: 208, column: 30, scope: !2652)
!2754 = !DILocation(line: 208, column: 2, scope: !2652)
!2755 = !DILocation(line: 210, column: 13, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 210, column: 6)
!2757 = !DILocation(line: 210, column: 6, scope: !2756)
!2758 = !DILocation(line: 210, column: 18, scope: !2756)
!2759 = !DILocation(line: 210, column: 6, scope: !2652)
!2760 = !DILocation(line: 212, column: 24, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2756, file: !1, line: 210, column: 29)
!2762 = !DILocation(line: 212, column: 29, scope: !2761)
!2763 = !DILocation(line: 212, column: 23, scope: !2761)
!2764 = !DILocation(line: 212, column: 36, scope: !2761)
!2765 = !DILocation(line: 212, column: 41, scope: !2761)
!2766 = !DILocation(line: 212, column: 12, scope: !2761)
!2767 = !DILocation(line: 212, column: 9, scope: !2761)
!2768 = !DILocation(line: 213, column: 7, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2761, file: !1, line: 213, column: 7)
!2770 = !DILocation(line: 213, column: 12, scope: !2769)
!2771 = !DILocation(line: 213, column: 7, scope: !2761)
!2772 = !DILocation(line: 214, column: 4, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2769, file: !1, line: 213, column: 20)
!2774 = !DILocation(line: 216, column: 2, scope: !2761)
!2775 = !DILocation(line: 220, column: 6, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 220, column: 6)
!2777 = !DILocation(line: 220, column: 11, scope: !2776)
!2778 = !DILocation(line: 220, column: 16, scope: !2776)
!2779 = !DILocation(line: 220, column: 6, scope: !2652)
!2780 = !DILocation(line: 221, column: 11, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2776, file: !1, line: 220, column: 24)
!2782 = !DILocation(line: 222, column: 2, scope: !2781)
!2783 = !DILocation(line: 224, column: 10, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2776, file: !1, line: 223, column: 7)
!2785 = !DILocation(line: 224, column: 15, scope: !2784)
!2786 = !DILocation(line: 224, column: 21, scope: !2784)
!2787 = !DILocation(line: 224, column: 26, scope: !2784)
!2788 = !DILocation(line: 224, column: 20, scope: !2784)
!2789 = !DILocation(line: 224, column: 3, scope: !2784)
!2790 = !DILocation(line: 224, column: 8, scope: !2784)
!2791 = !DILocation(line: 225, column: 10, scope: !2784)
!2792 = !DILocation(line: 225, column: 15, scope: !2784)
!2793 = !DILocation(line: 225, column: 21, scope: !2784)
!2794 = !DILocation(line: 225, column: 26, scope: !2784)
!2795 = !DILocation(line: 225, column: 20, scope: !2784)
!2796 = !DILocation(line: 225, column: 3, scope: !2784)
!2797 = !DILocation(line: 225, column: 8, scope: !2784)
!2798 = !DILocation(line: 226, column: 10, scope: !2784)
!2799 = !DILocation(line: 226, column: 15, scope: !2784)
!2800 = !DILocation(line: 226, column: 21, scope: !2784)
!2801 = !DILocation(line: 226, column: 26, scope: !2784)
!2802 = !DILocation(line: 226, column: 20, scope: !2784)
!2803 = !DILocation(line: 226, column: 3, scope: !2784)
!2804 = !DILocation(line: 226, column: 8, scope: !2784)
!2805 = !DILocation(line: 228, column: 9, scope: !2784)
!2806 = !DILocation(line: 228, column: 14, scope: !2784)
!2807 = !DILocation(line: 228, column: 25, scope: !2784)
!2808 = !DILocation(line: 228, column: 24, scope: !2784)
!2809 = !DILocation(line: 228, column: 31, scope: !2784)
!2810 = !DILocation(line: 228, column: 36, scope: !2784)
!2811 = !DILocation(line: 228, column: 47, scope: !2784)
!2812 = !DILocation(line: 228, column: 46, scope: !2784)
!2813 = !DILocation(line: 228, column: 30, scope: !2784)
!2814 = !DILocation(line: 228, column: 53, scope: !2784)
!2815 = !DILocation(line: 228, column: 58, scope: !2784)
!2816 = !DILocation(line: 228, column: 69, scope: !2784)
!2817 = !DILocation(line: 228, column: 68, scope: !2784)
!2818 = !DILocation(line: 228, column: 52, scope: !2784)
!2819 = !DILocation(line: 228, column: 7, scope: !2784)
!2820 = !DILocation(line: 229, column: 10, scope: !2784)
!2821 = !DILocation(line: 229, column: 15, scope: !2784)
!2822 = !DILocation(line: 229, column: 7, scope: !2784)
!2823 = !DILocation(line: 230, column: 9, scope: !2784)
!2824 = !DILocation(line: 230, column: 14, scope: !2784)
!2825 = !DILocation(line: 230, column: 25, scope: !2784)
!2826 = !DILocation(line: 230, column: 24, scope: !2784)
!2827 = !DILocation(line: 230, column: 31, scope: !2784)
!2828 = !DILocation(line: 230, column: 36, scope: !2784)
!2829 = !DILocation(line: 230, column: 47, scope: !2784)
!2830 = !DILocation(line: 230, column: 46, scope: !2784)
!2831 = !DILocation(line: 230, column: 30, scope: !2784)
!2832 = !DILocation(line: 230, column: 53, scope: !2784)
!2833 = !DILocation(line: 230, column: 58, scope: !2784)
!2834 = !DILocation(line: 230, column: 69, scope: !2784)
!2835 = !DILocation(line: 230, column: 68, scope: !2784)
!2836 = !DILocation(line: 230, column: 52, scope: !2784)
!2837 = !DILocation(line: 230, column: 7, scope: !2784)
!2838 = !DILocation(line: 232, column: 12, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2784, file: !1, line: 232, column: 7)
!2840 = !DILocation(line: 232, column: 7, scope: !2839)
!2841 = !DILocation(line: 232, column: 21, scope: !2839)
!2842 = !DILocation(line: 232, column: 7, scope: !2784)
!2843 = !DILocation(line: 233, column: 12, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2839, file: !1, line: 232, column: 36)
!2845 = !DILocation(line: 234, column: 3, scope: !2844)
!2846 = !DILocation(line: 238, column: 21, scope: !2652)
!2847 = !DILocation(line: 238, column: 26, scope: !2652)
!2848 = !DILocation(line: 238, column: 13, scope: !2652)
!2849 = !DILocation(line: 238, column: 2, scope: !2652)
!2850 = !DILocation(line: 238, column: 10, scope: !2652)
!2851 = !DILocation(line: 241, column: 10, scope: !2652)
!2852 = !DILocation(line: 241, column: 15, scope: !2652)
!2853 = !DILocation(line: 241, column: 23, scope: !2652)
!2854 = !DILocation(line: 241, column: 28, scope: !2652)
!2855 = !DILocation(line: 241, column: 22, scope: !2652)
!2856 = !DILocation(line: 241, column: 8, scope: !2652)
!2857 = !DILocation(line: 244, column: 6, scope: !2652)
!2858 = !DILocation(line: 244, column: 16, scope: !2652)
!2859 = !DILocation(line: 244, column: 14, scope: !2652)
!2860 = !DILocation(line: 244, column: 26, scope: !2652)
!2861 = !DILocation(line: 244, column: 36, scope: !2652)
!2862 = !DILocation(line: 244, column: 34, scope: !2652)
!2863 = !DILocation(line: 244, column: 24, scope: !2652)
!2864 = !DILocation(line: 244, column: 46, scope: !2652)
!2865 = !DILocation(line: 244, column: 54, scope: !2652)
!2866 = !DILocation(line: 244, column: 53, scope: !2652)
!2867 = !DILocation(line: 244, column: 44, scope: !2652)
!2868 = !DILocation(line: 244, column: 4, scope: !2652)
!2869 = !DILocation(line: 245, column: 6, scope: !2652)
!2870 = !DILocation(line: 245, column: 16, scope: !2652)
!2871 = !DILocation(line: 245, column: 14, scope: !2652)
!2872 = !DILocation(line: 245, column: 26, scope: !2652)
!2873 = !DILocation(line: 245, column: 36, scope: !2652)
!2874 = !DILocation(line: 245, column: 34, scope: !2652)
!2875 = !DILocation(line: 245, column: 24, scope: !2652)
!2876 = !DILocation(line: 245, column: 46, scope: !2652)
!2877 = !DILocation(line: 245, column: 54, scope: !2652)
!2878 = !DILocation(line: 245, column: 53, scope: !2652)
!2879 = !DILocation(line: 245, column: 44, scope: !2652)
!2880 = !DILocation(line: 245, column: 4, scope: !2652)
!2881 = !DILocation(line: 246, column: 6, scope: !2652)
!2882 = !DILocation(line: 246, column: 16, scope: !2652)
!2883 = !DILocation(line: 246, column: 14, scope: !2652)
!2884 = !DILocation(line: 246, column: 26, scope: !2652)
!2885 = !DILocation(line: 246, column: 36, scope: !2652)
!2886 = !DILocation(line: 246, column: 34, scope: !2652)
!2887 = !DILocation(line: 246, column: 24, scope: !2652)
!2888 = !DILocation(line: 246, column: 46, scope: !2652)
!2889 = !DILocation(line: 246, column: 54, scope: !2652)
!2890 = !DILocation(line: 246, column: 53, scope: !2652)
!2891 = !DILocation(line: 246, column: 44, scope: !2652)
!2892 = !DILocation(line: 246, column: 4, scope: !2652)
!2893 = !DILocation(line: 248, column: 6, scope: !2652)
!2894 = !DILocation(line: 249, column: 11, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 249, column: 6)
!2896 = !DILocation(line: 249, column: 6, scope: !2895)
!2897 = !DILocation(line: 249, column: 14, scope: !2895)
!2898 = !DILocation(line: 249, column: 6, scope: !2652)
!2899 = !DILocation(line: 253, column: 3, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2895, file: !1, line: 249, column: 29)
!2901 = !DILocation(line: 256, column: 10, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2895, file: !1, line: 255, column: 7)
!2903 = !DILocation(line: 256, column: 12, scope: !2902)
!2904 = !DILocation(line: 256, column: 11, scope: !2902)
!2905 = !DILocation(line: 256, column: 16, scope: !2902)
!2906 = !DILocation(line: 256, column: 18, scope: !2902)
!2907 = !DILocation(line: 256, column: 17, scope: !2902)
!2908 = !DILocation(line: 256, column: 14, scope: !2902)
!2909 = !DILocation(line: 256, column: 8, scope: !2902)
!2910 = !DILocation(line: 258, column: 7, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2902, file: !1, line: 258, column: 7)
!2912 = !DILocation(line: 258, column: 11, scope: !2911)
!2913 = !DILocation(line: 258, column: 7, scope: !2902)
!2914 = !DILocation(line: 259, column: 13, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !1, line: 258, column: 18)
!2916 = !DILocation(line: 259, column: 12, scope: !2915)
!2917 = !DILocation(line: 259, column: 17, scope: !2915)
!2918 = !DILocation(line: 259, column: 15, scope: !2915)
!2919 = !DILocation(line: 259, column: 9, scope: !2915)
!2920 = !DILocation(line: 259, column: 6, scope: !2915)
!2921 = !DILocation(line: 260, column: 8, scope: !2915)
!2922 = !DILocation(line: 261, column: 3, scope: !2915)
!2923 = !DILocation(line: 262, column: 12, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2911, file: !1, line: 262, column: 12)
!2925 = !DILocation(line: 262, column: 17, scope: !2924)
!2926 = !DILocation(line: 262, column: 12, scope: !2911)
!2927 = !DILocation(line: 263, column: 16, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !1, line: 262, column: 24)
!2929 = !DILocation(line: 263, column: 11, scope: !2928)
!2930 = !DILocation(line: 263, column: 9, scope: !2928)
!2931 = !DILocation(line: 264, column: 11, scope: !2928)
!2932 = !DILocation(line: 264, column: 10, scope: !2928)
!2933 = !DILocation(line: 264, column: 15, scope: !2928)
!2934 = !DILocation(line: 264, column: 13, scope: !2928)
!2935 = !DILocation(line: 264, column: 23, scope: !2928)
!2936 = !DILocation(line: 264, column: 21, scope: !2928)
!2937 = !DILocation(line: 264, column: 7, scope: !2928)
!2938 = !DILocation(line: 265, column: 11, scope: !2928)
!2939 = !DILocation(line: 265, column: 10, scope: !2928)
!2940 = !DILocation(line: 265, column: 15, scope: !2928)
!2941 = !DILocation(line: 265, column: 13, scope: !2928)
!2942 = !DILocation(line: 265, column: 23, scope: !2928)
!2943 = !DILocation(line: 265, column: 21, scope: !2928)
!2944 = !DILocation(line: 265, column: 7, scope: !2928)
!2945 = !DILocation(line: 266, column: 8, scope: !2928)
!2946 = !DILocation(line: 267, column: 3, scope: !2928)
!2947 = !DILocation(line: 269, column: 6, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 269, column: 6)
!2949 = !DILocation(line: 269, column: 10, scope: !2948)
!2950 = !DILocation(line: 269, column: 6, scope: !2652)
!2951 = !DILocalVariable(name: "ok1", scope: !2952, file: !1, line: 270, type: !5)
!2952 = distinct !DILexicalBlock(scope: !2948, file: !1, line: 269, column: 15)
!2953 = !DILocation(line: 270, column: 7, scope: !2952)
!2954 = !DILocalVariable(name: "ok2", scope: !2952, file: !1, line: 270, type: !5)
!2955 = !DILocation(line: 270, column: 14, scope: !2952)
!2956 = !DILocation(line: 273, column: 7, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 273, column: 7)
!2958 = !DILocation(line: 273, column: 10, scope: !2957)
!2959 = !DILocation(line: 273, column: 9, scope: !2957)
!2960 = !DILocation(line: 273, column: 7, scope: !2952)
!2961 = !DILocation(line: 274, column: 7, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2957, file: !1, line: 273, column: 14)
!2963 = !DILocation(line: 274, column: 5, scope: !2962)
!2964 = !DILocation(line: 274, column: 15, scope: !2962)
!2965 = !DILocation(line: 274, column: 13, scope: !2962)
!2966 = !DILocation(line: 274, column: 23, scope: !2962)
!2967 = !DILocation(line: 274, column: 21, scope: !2962)
!2968 = !DILocation(line: 275, column: 3, scope: !2962)
!2969 = !DILocation(line: 278, column: 10, scope: !2952)
!2970 = !DILocation(line: 278, column: 20, scope: !2952)
!2971 = !DILocation(line: 278, column: 23, scope: !2952)
!2972 = !DILocation(line: 278, column: 22, scope: !2952)
!2973 = !DILocation(line: 278, column: 18, scope: !2952)
!2974 = !DILocation(line: 278, column: 3, scope: !2952)
!2975 = !DILocation(line: 278, column: 8, scope: !2952)
!2976 = !DILocation(line: 279, column: 10, scope: !2952)
!2977 = !DILocation(line: 279, column: 20, scope: !2952)
!2978 = !DILocation(line: 279, column: 23, scope: !2952)
!2979 = !DILocation(line: 279, column: 22, scope: !2952)
!2980 = !DILocation(line: 279, column: 18, scope: !2952)
!2981 = !DILocation(line: 279, column: 3, scope: !2952)
!2982 = !DILocation(line: 279, column: 8, scope: !2952)
!2983 = !DILocation(line: 282, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 282, column: 7)
!2985 = !DILocation(line: 282, column: 12, scope: !2984)
!2986 = !DILocation(line: 282, column: 7, scope: !2952)
!2987 = !DILocation(line: 282, column: 23, scope: !2984)
!2988 = !DILocation(line: 282, column: 20, scope: !2984)
!2989 = !DILocation(line: 283, column: 7, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 283, column: 7)
!2991 = !DILocation(line: 283, column: 12, scope: !2990)
!2992 = !DILocation(line: 283, column: 19, scope: !2990)
!2993 = !DILocation(line: 283, column: 22, scope: !2990)
!2994 = !DILocation(line: 283, column: 26, scope: !2990)
!2995 = !DILocation(line: 283, column: 24, scope: !2990)
!2996 = !DILocation(line: 283, column: 7, scope: !2952)
!2997 = !DILocation(line: 283, column: 33, scope: !2990)
!2998 = !DILocation(line: 283, column: 30, scope: !2990)
!2999 = !DILocation(line: 286, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 286, column: 7)
!3001 = !DILocation(line: 286, column: 10, scope: !3000)
!3002 = !DILocation(line: 286, column: 14, scope: !3000)
!3003 = !DILocation(line: 286, column: 17, scope: !3000)
!3004 = !DILocation(line: 286, column: 20, scope: !3000)
!3005 = !DILocation(line: 286, column: 7, scope: !2952)
!3006 = !DILocation(line: 286, column: 25, scope: !3000)
!3007 = !DILocation(line: 289, column: 7, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 289, column: 7)
!3009 = !DILocation(line: 289, column: 15, scope: !3008)
!3010 = !DILocation(line: 289, column: 7, scope: !2952)
!3011 = !DILocation(line: 290, column: 19, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 289, column: 25)
!3013 = !DILocation(line: 290, column: 18, scope: !3012)
!3014 = !DILocation(line: 290, column: 9, scope: !3012)
!3015 = !DILocation(line: 290, column: 27, scope: !3012)
!3016 = !DILocation(line: 290, column: 26, scope: !3012)
!3017 = !DILocation(line: 290, column: 36, scope: !3012)
!3018 = !DILocation(line: 290, column: 35, scope: !3012)
!3019 = !DILocation(line: 290, column: 6, scope: !3012)
!3020 = !DILocation(line: 293, column: 8, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 293, column: 8)
!3022 = !DILocation(line: 293, column: 8, scope: !3012)
!3023 = !DILocation(line: 294, column: 9, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 294, column: 9)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 293, column: 13)
!3026 = !DILocation(line: 294, column: 16, scope: !3024)
!3027 = !DILocation(line: 294, column: 15, scope: !3024)
!3028 = !DILocation(line: 294, column: 14, scope: !3024)
!3029 = !DILocation(line: 294, column: 9, scope: !3025)
!3030 = !DILocation(line: 294, column: 28, scope: !3024)
!3031 = !DILocation(line: 294, column: 26, scope: !3024)
!3032 = !DILocation(line: 294, column: 24, scope: !3024)
!3033 = !DILocation(line: 295, column: 4, scope: !3025)
!3034 = !DILocation(line: 297, column: 9, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 296, column: 9)
!3036 = !DILocation(line: 297, column: 7, scope: !3035)
!3037 = !DILocation(line: 299, column: 8, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 299, column: 8)
!3039 = !DILocation(line: 299, column: 8, scope: !3012)
!3040 = !DILocation(line: 300, column: 9, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !1, line: 300, column: 9)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !1, line: 299, column: 13)
!3043 = !DILocation(line: 300, column: 16, scope: !3041)
!3044 = !DILocation(line: 300, column: 15, scope: !3041)
!3045 = !DILocation(line: 300, column: 14, scope: !3041)
!3046 = !DILocation(line: 300, column: 9, scope: !3042)
!3047 = !DILocation(line: 300, column: 28, scope: !3041)
!3048 = !DILocation(line: 300, column: 26, scope: !3041)
!3049 = !DILocation(line: 300, column: 24, scope: !3041)
!3050 = !DILocation(line: 301, column: 4, scope: !3042)
!3051 = !DILocation(line: 303, column: 9, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3038, file: !1, line: 302, column: 9)
!3053 = !DILocation(line: 303, column: 7, scope: !3052)
!3054 = !DILocation(line: 305, column: 3, scope: !3012)
!3055 = !DILocation(line: 306, column: 12, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 306, column: 12)
!3057 = !DILocation(line: 306, column: 15, scope: !3056)
!3058 = !DILocation(line: 306, column: 19, scope: !3056)
!3059 = !DILocation(line: 306, column: 22, scope: !3056)
!3060 = !DILocation(line: 306, column: 25, scope: !3056)
!3061 = !DILocation(line: 306, column: 12, scope: !3008)
!3062 = !DILocation(line: 306, column: 30, scope: !3056)
!3063 = !DILocation(line: 309, column: 7, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 309, column: 7)
!3065 = !DILocation(line: 309, column: 9, scope: !3064)
!3066 = !DILocation(line: 309, column: 14, scope: !3064)
!3067 = !DILocation(line: 309, column: 17, scope: !3064)
!3068 = !DILocation(line: 309, column: 19, scope: !3064)
!3069 = !DILocation(line: 309, column: 7, scope: !2952)
!3070 = !DILocation(line: 309, column: 25, scope: !3064)
!3071 = !DILocation(line: 311, column: 7, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 311, column: 7)
!3073 = !DILocation(line: 311, column: 9, scope: !3072)
!3074 = !DILocation(line: 311, column: 7, scope: !2952)
!3075 = !DILocation(line: 311, column: 17, scope: !3072)
!3076 = !DILocation(line: 311, column: 15, scope: !3072)
!3077 = !DILocation(line: 312, column: 7, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 312, column: 7)
!3079 = !DILocation(line: 312, column: 9, scope: !3078)
!3080 = !DILocation(line: 312, column: 7, scope: !2952)
!3081 = !DILocation(line: 312, column: 17, scope: !3078)
!3082 = !DILocation(line: 312, column: 15, scope: !3078)
!3083 = !DILocation(line: 314, column: 7, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 314, column: 7)
!3085 = !DILocation(line: 314, column: 11, scope: !3084)
!3086 = !DILocation(line: 314, column: 9, scope: !3084)
!3087 = !DILocation(line: 314, column: 7, scope: !2952)
!3088 = !DILocation(line: 314, column: 15, scope: !3084)
!3089 = !DILocation(line: 317, column: 7, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 317, column: 7)
!3091 = !DILocation(line: 317, column: 10, scope: !3090)
!3092 = !DILocation(line: 317, column: 9, scope: !3090)
!3093 = !DILocation(line: 317, column: 7, scope: !2952)
!3094 = !DILocation(line: 318, column: 7, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3090, file: !1, line: 317, column: 14)
!3096 = !DILocation(line: 318, column: 5, scope: !3095)
!3097 = !DILocation(line: 318, column: 15, scope: !3095)
!3098 = !DILocation(line: 318, column: 13, scope: !3095)
!3099 = !DILocation(line: 318, column: 23, scope: !3095)
!3100 = !DILocation(line: 318, column: 21, scope: !3095)
!3101 = !DILocation(line: 319, column: 3, scope: !3095)
!3102 = !DILocation(line: 322, column: 7, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 322, column: 7)
!3104 = !DILocation(line: 322, column: 7, scope: !2952)
!3105 = !DILocation(line: 323, column: 8, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 323, column: 8)
!3107 = distinct !DILexicalBlock(scope: !3103, file: !1, line: 322, column: 16)
!3108 = !DILocation(line: 323, column: 16, scope: !3106)
!3109 = !DILocation(line: 323, column: 8, scope: !3107)
!3110 = !DILocation(line: 323, column: 40, scope: !3106)
!3111 = !DILocation(line: 323, column: 32, scope: !3106)
!3112 = !DILocation(line: 323, column: 47, scope: !3106)
!3113 = !DILocation(line: 323, column: 45, scope: !3106)
!3114 = !DILocation(line: 323, column: 58, scope: !3106)
!3115 = !DILocation(line: 323, column: 56, scope: !3106)
!3116 = !DILocation(line: 323, column: 29, scope: !3106)
!3117 = !DILocation(line: 323, column: 26, scope: !3106)
!3118 = !DILocation(line: 324, column: 40, scope: !3106)
!3119 = !DILocation(line: 324, column: 32, scope: !3106)
!3120 = !DILocation(line: 324, column: 47, scope: !3106)
!3121 = !DILocation(line: 324, column: 45, scope: !3106)
!3122 = !DILocation(line: 324, column: 58, scope: !3106)
!3123 = !DILocation(line: 324, column: 56, scope: !3106)
!3124 = !DILocation(line: 324, column: 29, scope: !3106)
!3125 = !DILocation(line: 326, column: 8, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 326, column: 8)
!3127 = !DILocation(line: 326, column: 13, scope: !3126)
!3128 = !DILocation(line: 326, column: 11, scope: !3126)
!3129 = !DILocation(line: 326, column: 8, scope: !3107)
!3130 = !DILocation(line: 326, column: 17, scope: !3126)
!3131 = !DILocation(line: 327, column: 8, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 327, column: 8)
!3133 = !DILocation(line: 327, column: 13, scope: !3132)
!3134 = !DILocation(line: 327, column: 11, scope: !3132)
!3135 = !DILocation(line: 327, column: 8, scope: !3107)
!3136 = !DILocation(line: 327, column: 21, scope: !3132)
!3137 = !DILocation(line: 327, column: 19, scope: !3132)
!3138 = !DILocation(line: 327, column: 17, scope: !3132)
!3139 = !DILocation(line: 328, column: 3, scope: !3107)
!3140 = !DILocation(line: 331, column: 10, scope: !2952)
!3141 = !DILocation(line: 331, column: 20, scope: !2952)
!3142 = !DILocation(line: 331, column: 23, scope: !2952)
!3143 = !DILocation(line: 331, column: 22, scope: !2952)
!3144 = !DILocation(line: 331, column: 18, scope: !2952)
!3145 = !DILocation(line: 331, column: 3, scope: !2952)
!3146 = !DILocation(line: 331, column: 8, scope: !2952)
!3147 = !DILocation(line: 332, column: 10, scope: !2952)
!3148 = !DILocation(line: 332, column: 20, scope: !2952)
!3149 = !DILocation(line: 332, column: 23, scope: !2952)
!3150 = !DILocation(line: 332, column: 22, scope: !2952)
!3151 = !DILocation(line: 332, column: 18, scope: !2952)
!3152 = !DILocation(line: 332, column: 3, scope: !2952)
!3153 = !DILocation(line: 332, column: 8, scope: !2952)
!3154 = !DILocation(line: 333, column: 10, scope: !2952)
!3155 = !DILocation(line: 333, column: 20, scope: !2952)
!3156 = !DILocation(line: 333, column: 23, scope: !2952)
!3157 = !DILocation(line: 333, column: 22, scope: !2952)
!3158 = !DILocation(line: 333, column: 18, scope: !2952)
!3159 = !DILocation(line: 333, column: 3, scope: !2952)
!3160 = !DILocation(line: 333, column: 8, scope: !2952)
!3161 = !DILocation(line: 334, column: 10, scope: !2952)
!3162 = !DILocation(line: 334, column: 20, scope: !2952)
!3163 = !DILocation(line: 334, column: 23, scope: !2952)
!3164 = !DILocation(line: 334, column: 22, scope: !2952)
!3165 = !DILocation(line: 334, column: 18, scope: !2952)
!3166 = !DILocation(line: 334, column: 3, scope: !2952)
!3167 = !DILocation(line: 334, column: 8, scope: !2952)
!3168 = !DILocation(line: 335, column: 10, scope: !2952)
!3169 = !DILocation(line: 335, column: 20, scope: !2952)
!3170 = !DILocation(line: 335, column: 23, scope: !2952)
!3171 = !DILocation(line: 335, column: 22, scope: !2952)
!3172 = !DILocation(line: 335, column: 18, scope: !2952)
!3173 = !DILocation(line: 335, column: 3, scope: !2952)
!3174 = !DILocation(line: 335, column: 8, scope: !2952)
!3175 = !DILocation(line: 336, column: 10, scope: !2952)
!3176 = !DILocation(line: 336, column: 20, scope: !2952)
!3177 = !DILocation(line: 336, column: 23, scope: !2952)
!3178 = !DILocation(line: 336, column: 22, scope: !2952)
!3179 = !DILocation(line: 336, column: 18, scope: !2952)
!3180 = !DILocation(line: 336, column: 3, scope: !2952)
!3181 = !DILocation(line: 336, column: 8, scope: !2952)
!3182 = !DILocation(line: 341, column: 14, scope: !2952)
!3183 = !DILocation(line: 341, column: 7, scope: !2952)
!3184 = !DILocation(line: 341, column: 5, scope: !2952)
!3185 = !DILocation(line: 342, column: 14, scope: !2952)
!3186 = !DILocation(line: 342, column: 7, scope: !2952)
!3187 = !DILocation(line: 342, column: 5, scope: !2952)
!3188 = !DILocation(line: 343, column: 16, scope: !2952)
!3189 = !DILocation(line: 343, column: 20, scope: !2952)
!3190 = !DILocation(line: 343, column: 7, scope: !2952)
!3191 = !DILocation(line: 343, column: 5, scope: !2952)
!3192 = !DILocation(line: 345, column: 7, scope: !2952)
!3193 = !DILocation(line: 345, column: 4, scope: !2952)
!3194 = !DILocation(line: 346, column: 11, scope: !2952)
!3195 = !DILocation(line: 346, column: 6, scope: !2952)
!3196 = !DILocation(line: 346, column: 4, scope: !2952)
!3197 = !DILocation(line: 347, column: 7, scope: !2952)
!3198 = !DILocation(line: 347, column: 4, scope: !2952)
!3199 = !DILocation(line: 348, column: 11, scope: !2952)
!3200 = !DILocation(line: 348, column: 6, scope: !2952)
!3201 = !DILocation(line: 348, column: 4, scope: !2952)
!3202 = !DILocation(line: 349, column: 7, scope: !2952)
!3203 = !DILocation(line: 349, column: 4, scope: !2952)
!3204 = !DILocation(line: 351, column: 12, scope: !2952)
!3205 = !DILocation(line: 351, column: 21, scope: !2952)
!3206 = !DILocation(line: 351, column: 20, scope: !2952)
!3207 = !DILocation(line: 351, column: 29, scope: !2952)
!3208 = !DILocation(line: 351, column: 28, scope: !2952)
!3209 = !DILocation(line: 351, column: 23, scope: !2952)
!3210 = !DILocation(line: 351, column: 13, scope: !2952)
!3211 = !DILocation(line: 351, column: 4, scope: !2952)
!3212 = !DILocation(line: 351, column: 10, scope: !2952)
!3213 = !DILocation(line: 355, column: 8, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 355, column: 7)
!3215 = !DILocation(line: 355, column: 7, scope: !3214)
!3216 = !DILocation(line: 355, column: 14, scope: !3214)
!3217 = !DILocation(line: 355, column: 7, scope: !2952)
!3218 = !DILocation(line: 355, column: 22, scope: !3214)
!3219 = !DILocation(line: 363, column: 14, scope: !2952)
!3220 = !DILocation(line: 363, column: 4, scope: !2952)
!3221 = !DILocation(line: 363, column: 11, scope: !2952)
!3222 = !DILocation(line: 365, column: 7, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !2952, file: !1, line: 365, column: 7)
!3224 = !DILocation(line: 365, column: 12, scope: !3223)
!3225 = !DILocation(line: 365, column: 16, scope: !3223)
!3226 = !DILocation(line: 365, column: 19, scope: !3223)
!3227 = !DILocation(line: 365, column: 24, scope: !3223)
!3228 = !DILocation(line: 365, column: 29, scope: !3223)
!3229 = !DILocation(line: 365, column: 7, scope: !2952)
!3230 = !DILocation(line: 366, column: 27, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 365, column: 43)
!3232 = !DILocation(line: 366, column: 32, scope: !3231)
!3233 = !DILocation(line: 366, column: 36, scope: !3231)
!3234 = !DILocation(line: 366, column: 15, scope: !3231)
!3235 = !DILocation(line: 366, column: 5, scope: !3231)
!3236 = !DILocation(line: 366, column: 12, scope: !3231)
!3237 = !DILocation(line: 367, column: 3, scope: !3231)
!3238 = !DILocation(line: 369, column: 2, scope: !2952)
!3239 = !DILocation(line: 370, column: 1, scope: !2652)
!3240 = distinct !DISubprogram(name: "fresnel_fac", scope: !1, file: !1, line: 433, type: !3241, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!147, !2219, !2219, !147, !147}
!3243 = !DILocalVariable(name: "view", arg: 1, scope: !3240, file: !1, line: 433, type: !2219)
!3244 = !DILocation(line: 433, column: 31, scope: !3240)
!3245 = !DILocalVariable(name: "vn", arg: 2, scope: !3240, file: !1, line: 433, type: !2219)
!3246 = !DILocation(line: 433, column: 52, scope: !3240)
!3247 = !DILocalVariable(name: "grad", arg: 3, scope: !3240, file: !1, line: 433, type: !147)
!3248 = !DILocation(line: 433, column: 65, scope: !3240)
!3249 = !DILocalVariable(name: "fac", arg: 4, scope: !3240, file: !1, line: 433, type: !147)
!3250 = !DILocation(line: 433, column: 77, scope: !3240)
!3251 = !DILocalVariable(name: "t1", scope: !3240, file: !1, line: 435, type: !147)
!3252 = !DILocation(line: 435, column: 8, scope: !3240)
!3253 = !DILocalVariable(name: "t2", scope: !3240, file: !1, line: 435, type: !147)
!3254 = !DILocation(line: 435, column: 12, scope: !3240)
!3255 = !DILocation(line: 437, column: 6, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3240, file: !1, line: 437, column: 6)
!3257 = !DILocation(line: 437, column: 9, scope: !3256)
!3258 = !DILocation(line: 437, column: 6, scope: !3240)
!3259 = !DILocation(line: 437, column: 17, scope: !3256)
!3260 = !DILocation(line: 439, column: 16, scope: !3240)
!3261 = !DILocation(line: 439, column: 22, scope: !3240)
!3262 = !DILocation(line: 439, column: 7, scope: !3240)
!3263 = !DILocation(line: 439, column: 5, scope: !3240)
!3264 = !DILocation(line: 440, column: 6, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3240, file: !1, line: 440, column: 6)
!3266 = !DILocation(line: 440, column: 8, scope: !3265)
!3267 = !DILocation(line: 440, column: 6, scope: !3240)
!3268 = !DILocation(line: 440, column: 25, scope: !3265)
!3269 = !DILocation(line: 440, column: 24, scope: !3265)
!3270 = !DILocation(line: 440, column: 18, scope: !3265)
!3271 = !DILocation(line: 440, column: 16, scope: !3265)
!3272 = !DILocation(line: 441, column: 16, scope: !3265)
!3273 = !DILocation(line: 441, column: 15, scope: !3265)
!3274 = !DILocation(line: 441, column: 9, scope: !3265)
!3275 = !DILocation(line: 443, column: 6, scope: !3240)
!3276 = !DILocation(line: 443, column: 19, scope: !3240)
!3277 = !DILocation(line: 443, column: 18, scope: !3240)
!3278 = !DILocation(line: 443, column: 30, scope: !3240)
!3279 = !DILocation(line: 443, column: 34, scope: !3240)
!3280 = !DILocation(line: 443, column: 25, scope: !3240)
!3281 = !DILocation(line: 443, column: 24, scope: !3240)
!3282 = !DILocation(line: 443, column: 11, scope: !3240)
!3283 = !DILocation(line: 443, column: 4, scope: !3240)
!3284 = !DILocation(line: 445, column: 6, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3240, file: !1, line: 445, column: 6)
!3286 = !DILocation(line: 445, column: 8, scope: !3285)
!3287 = !DILocation(line: 445, column: 6, scope: !3240)
!3288 = !DILocation(line: 445, column: 15, scope: !3285)
!3289 = !DILocation(line: 446, column: 11, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3285, file: !1, line: 446, column: 11)
!3291 = !DILocation(line: 446, column: 13, scope: !3290)
!3292 = !DILocation(line: 446, column: 11, scope: !3285)
!3293 = !DILocation(line: 446, column: 20, scope: !3290)
!3294 = !DILocation(line: 447, column: 9, scope: !3240)
!3295 = !DILocation(line: 447, column: 2, scope: !3240)
!3296 = !DILocation(line: 448, column: 1, scope: !3240)
!3297 = distinct !DISubprogram(name: "dot_v3v3", scope: !3298, file: !3298, line: 619, type: !3299, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3298 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!147, !2219, !2219}
!3301 = !DILocalVariable(name: "a", arg: 1, scope: !3297, file: !3298, line: 619, type: !2219)
!3302 = !DILocation(line: 619, column: 36, scope: !3297)
!3303 = !DILocalVariable(name: "b", arg: 2, scope: !3297, file: !3298, line: 619, type: !2219)
!3304 = !DILocation(line: 619, column: 54, scope: !3297)
!3305 = !DILocation(line: 621, column: 9, scope: !3297)
!3306 = !DILocation(line: 621, column: 16, scope: !3297)
!3307 = !DILocation(line: 621, column: 14, scope: !3297)
!3308 = !DILocation(line: 621, column: 23, scope: !3297)
!3309 = !DILocation(line: 621, column: 30, scope: !3297)
!3310 = !DILocation(line: 621, column: 28, scope: !3297)
!3311 = !DILocation(line: 621, column: 21, scope: !3297)
!3312 = !DILocation(line: 621, column: 37, scope: !3297)
!3313 = !DILocation(line: 621, column: 44, scope: !3297)
!3314 = !DILocation(line: 621, column: 42, scope: !3297)
!3315 = !DILocation(line: 621, column: 35, scope: !3297)
!3316 = !DILocation(line: 621, column: 2, scope: !3297)
!3317 = distinct !DISubprogram(name: "calc_R_ref", scope: !1, file: !1, line: 850, type: !3318, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{null, !1829}
!3320 = !DILocalVariable(name: "shi", arg: 1, scope: !3317, file: !1, line: 850, type: !1829)
!3321 = !DILocation(line: 850, column: 29, scope: !3317)
!3322 = !DILocalVariable(name: "i", scope: !3317, file: !1, line: 852, type: !147)
!3323 = !DILocation(line: 852, column: 8, scope: !3317)
!3324 = !DILocation(line: 855, column: 9, scope: !3317)
!3325 = !DILocation(line: 855, column: 14, scope: !3317)
!3326 = !DILocation(line: 855, column: 20, scope: !3317)
!3327 = !DILocation(line: 855, column: 25, scope: !3317)
!3328 = !DILocation(line: 855, column: 19, scope: !3317)
!3329 = !DILocation(line: 855, column: 33, scope: !3317)
!3330 = !DILocation(line: 855, column: 38, scope: !3317)
!3331 = !DILocation(line: 855, column: 44, scope: !3317)
!3332 = !DILocation(line: 855, column: 49, scope: !3317)
!3333 = !DILocation(line: 855, column: 43, scope: !3317)
!3334 = !DILocation(line: 855, column: 32, scope: !3317)
!3335 = !DILocation(line: 855, column: 57, scope: !3317)
!3336 = !DILocation(line: 855, column: 62, scope: !3317)
!3337 = !DILocation(line: 855, column: 68, scope: !3317)
!3338 = !DILocation(line: 855, column: 73, scope: !3317)
!3339 = !DILocation(line: 855, column: 67, scope: !3317)
!3340 = !DILocation(line: 855, column: 56, scope: !3317)
!3341 = !DILocation(line: 855, column: 7, scope: !3317)
!3342 = !DILocation(line: 855, column: 3, scope: !3317)
!3343 = !DILocation(line: 857, column: 16, scope: !3317)
!3344 = !DILocation(line: 857, column: 21, scope: !3317)
!3345 = !DILocation(line: 857, column: 29, scope: !3317)
!3346 = !DILocation(line: 857, column: 31, scope: !3317)
!3347 = !DILocation(line: 857, column: 36, scope: !3317)
!3348 = !DILocation(line: 857, column: 30, scope: !3317)
!3349 = !DILocation(line: 857, column: 28, scope: !3317)
!3350 = !DILocation(line: 857, column: 2, scope: !3317)
!3351 = !DILocation(line: 857, column: 7, scope: !3317)
!3352 = !DILocation(line: 857, column: 13, scope: !3317)
!3353 = !DILocation(line: 858, column: 16, scope: !3317)
!3354 = !DILocation(line: 858, column: 21, scope: !3317)
!3355 = !DILocation(line: 858, column: 29, scope: !3317)
!3356 = !DILocation(line: 858, column: 31, scope: !3317)
!3357 = !DILocation(line: 858, column: 36, scope: !3317)
!3358 = !DILocation(line: 858, column: 30, scope: !3317)
!3359 = !DILocation(line: 858, column: 28, scope: !3317)
!3360 = !DILocation(line: 858, column: 2, scope: !3317)
!3361 = !DILocation(line: 858, column: 7, scope: !3317)
!3362 = !DILocation(line: 858, column: 13, scope: !3317)
!3363 = !DILocation(line: 859, column: 16, scope: !3317)
!3364 = !DILocation(line: 859, column: 21, scope: !3317)
!3365 = !DILocation(line: 859, column: 29, scope: !3317)
!3366 = !DILocation(line: 859, column: 31, scope: !3317)
!3367 = !DILocation(line: 859, column: 36, scope: !3317)
!3368 = !DILocation(line: 859, column: 30, scope: !3317)
!3369 = !DILocation(line: 859, column: 28, scope: !3317)
!3370 = !DILocation(line: 859, column: 2, scope: !3317)
!3371 = !DILocation(line: 859, column: 7, scope: !3317)
!3372 = !DILocation(line: 859, column: 13, scope: !3317)
!3373 = !DILocation(line: 860, column: 6, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3317, file: !1, line: 860, column: 6)
!3375 = !DILocation(line: 860, column: 11, scope: !3374)
!3376 = !DILocation(line: 860, column: 6, scope: !3317)
!3377 = !DILocation(line: 861, column: 7, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !1, line: 861, column: 7)
!3379 = distinct !DILexicalBlock(scope: !3374, file: !1, line: 860, column: 19)
!3380 = !DILocation(line: 861, column: 12, scope: !3378)
!3381 = !DILocation(line: 861, column: 17, scope: !3378)
!3382 = !DILocation(line: 861, column: 22, scope: !3378)
!3383 = !DILocation(line: 861, column: 7, scope: !3379)
!3384 = !DILocation(line: 862, column: 13, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3378, file: !1, line: 861, column: 34)
!3386 = !DILocation(line: 862, column: 18, scope: !3385)
!3387 = !DILocation(line: 862, column: 24, scope: !3385)
!3388 = !DILocation(line: 862, column: 29, scope: !3385)
!3389 = !DILocation(line: 862, column: 23, scope: !3385)
!3390 = !DILocation(line: 862, column: 39, scope: !3385)
!3391 = !DILocation(line: 862, column: 44, scope: !3385)
!3392 = !DILocation(line: 862, column: 52, scope: !3385)
!3393 = !DILocation(line: 862, column: 57, scope: !3385)
!3394 = !DILocation(line: 862, column: 51, scope: !3385)
!3395 = !DILocation(line: 862, column: 37, scope: !3385)
!3396 = !DILocation(line: 863, column: 6, scope: !3385)
!3397 = !DILocation(line: 863, column: 11, scope: !3385)
!3398 = !DILocation(line: 863, column: 17, scope: !3385)
!3399 = !DILocation(line: 863, column: 22, scope: !3385)
!3400 = !DILocation(line: 863, column: 16, scope: !3385)
!3401 = !DILocation(line: 863, column: 31, scope: !3385)
!3402 = !DILocation(line: 863, column: 36, scope: !3385)
!3403 = !DILocation(line: 863, column: 30, scope: !3385)
!3404 = !DILocation(line: 862, column: 65, scope: !3385)
!3405 = !DILocation(line: 863, column: 46, scope: !3385)
!3406 = !DILocation(line: 863, column: 51, scope: !3385)
!3407 = !DILocation(line: 863, column: 57, scope: !3385)
!3408 = !DILocation(line: 863, column: 62, scope: !3385)
!3409 = !DILocation(line: 863, column: 56, scope: !3385)
!3410 = !DILocation(line: 863, column: 71, scope: !3385)
!3411 = !DILocation(line: 863, column: 76, scope: !3385)
!3412 = !DILocation(line: 863, column: 70, scope: !3385)
!3413 = !DILocation(line: 863, column: 43, scope: !3385)
!3414 = !DILocation(line: 862, column: 9, scope: !3385)
!3415 = !DILocation(line: 862, column: 5, scope: !3385)
!3416 = !DILocation(line: 865, column: 19, scope: !3385)
!3417 = !DILocation(line: 865, column: 24, scope: !3385)
!3418 = !DILocation(line: 865, column: 34, scope: !3385)
!3419 = !DILocation(line: 865, column: 39, scope: !3385)
!3420 = !DILocation(line: 865, column: 47, scope: !3385)
!3421 = !DILocation(line: 865, column: 52, scope: !3385)
!3422 = !DILocation(line: 865, column: 46, scope: !3385)
!3423 = !DILocation(line: 865, column: 59, scope: !3385)
!3424 = !DILocation(line: 865, column: 62, scope: !3385)
!3425 = !DILocation(line: 865, column: 67, scope: !3385)
!3426 = !DILocation(line: 865, column: 73, scope: !3385)
!3427 = !DILocation(line: 865, column: 78, scope: !3385)
!3428 = !DILocation(line: 865, column: 72, scope: !3385)
!3429 = !DILocation(line: 865, column: 60, scope: !3385)
!3430 = !DILocation(line: 865, column: 58, scope: !3385)
!3431 = !DILocation(line: 865, column: 30, scope: !3385)
!3432 = !DILocation(line: 865, column: 4, scope: !3385)
!3433 = !DILocation(line: 865, column: 9, scope: !3385)
!3434 = !DILocation(line: 865, column: 17, scope: !3385)
!3435 = !DILocation(line: 866, column: 19, scope: !3385)
!3436 = !DILocation(line: 866, column: 24, scope: !3385)
!3437 = !DILocation(line: 866, column: 33, scope: !3385)
!3438 = !DILocation(line: 866, column: 38, scope: !3385)
!3439 = !DILocation(line: 866, column: 47, scope: !3385)
!3440 = !DILocation(line: 866, column: 50, scope: !3385)
!3441 = !DILocation(line: 866, column: 55, scope: !3385)
!3442 = !DILocation(line: 866, column: 61, scope: !3385)
!3443 = !DILocation(line: 866, column: 66, scope: !3385)
!3444 = !DILocation(line: 866, column: 60, scope: !3385)
!3445 = !DILocation(line: 866, column: 48, scope: !3385)
!3446 = !DILocation(line: 866, column: 45, scope: !3385)
!3447 = !DILocation(line: 866, column: 30, scope: !3385)
!3448 = !DILocation(line: 866, column: 4, scope: !3385)
!3449 = !DILocation(line: 866, column: 9, scope: !3385)
!3450 = !DILocation(line: 866, column: 17, scope: !3385)
!3451 = !DILocation(line: 867, column: 19, scope: !3385)
!3452 = !DILocation(line: 867, column: 24, scope: !3385)
!3453 = !DILocation(line: 867, column: 33, scope: !3385)
!3454 = !DILocation(line: 867, column: 38, scope: !3385)
!3455 = !DILocation(line: 867, column: 47, scope: !3385)
!3456 = !DILocation(line: 867, column: 50, scope: !3385)
!3457 = !DILocation(line: 867, column: 55, scope: !3385)
!3458 = !DILocation(line: 867, column: 61, scope: !3385)
!3459 = !DILocation(line: 867, column: 66, scope: !3385)
!3460 = !DILocation(line: 867, column: 60, scope: !3385)
!3461 = !DILocation(line: 867, column: 48, scope: !3385)
!3462 = !DILocation(line: 867, column: 45, scope: !3385)
!3463 = !DILocation(line: 867, column: 30, scope: !3385)
!3464 = !DILocation(line: 867, column: 4, scope: !3385)
!3465 = !DILocation(line: 867, column: 9, scope: !3385)
!3466 = !DILocation(line: 867, column: 17, scope: !3385)
!3467 = !DILocation(line: 869, column: 13, scope: !3385)
!3468 = !DILocation(line: 869, column: 18, scope: !3385)
!3469 = !DILocation(line: 869, column: 24, scope: !3385)
!3470 = !DILocation(line: 869, column: 29, scope: !3385)
!3471 = !DILocation(line: 869, column: 23, scope: !3385)
!3472 = !DILocation(line: 869, column: 38, scope: !3385)
!3473 = !DILocation(line: 869, column: 43, scope: !3385)
!3474 = !DILocation(line: 869, column: 37, scope: !3385)
!3475 = !DILocation(line: 870, column: 6, scope: !3385)
!3476 = !DILocation(line: 870, column: 11, scope: !3385)
!3477 = !DILocation(line: 870, column: 17, scope: !3385)
!3478 = !DILocation(line: 870, column: 22, scope: !3385)
!3479 = !DILocation(line: 870, column: 16, scope: !3385)
!3480 = !DILocation(line: 870, column: 32, scope: !3385)
!3481 = !DILocation(line: 870, column: 37, scope: !3385)
!3482 = !DILocation(line: 870, column: 45, scope: !3385)
!3483 = !DILocation(line: 870, column: 50, scope: !3385)
!3484 = !DILocation(line: 870, column: 44, scope: !3385)
!3485 = !DILocation(line: 870, column: 30, scope: !3385)
!3486 = !DILocation(line: 869, column: 50, scope: !3385)
!3487 = !DILocation(line: 870, column: 60, scope: !3385)
!3488 = !DILocation(line: 870, column: 65, scope: !3385)
!3489 = !DILocation(line: 870, column: 71, scope: !3385)
!3490 = !DILocation(line: 870, column: 76, scope: !3385)
!3491 = !DILocation(line: 870, column: 70, scope: !3385)
!3492 = !DILocation(line: 870, column: 85, scope: !3385)
!3493 = !DILocation(line: 870, column: 90, scope: !3385)
!3494 = !DILocation(line: 870, column: 84, scope: !3385)
!3495 = !DILocation(line: 870, column: 57, scope: !3385)
!3496 = !DILocation(line: 869, column: 9, scope: !3385)
!3497 = !DILocation(line: 869, column: 5, scope: !3385)
!3498 = !DILocation(line: 872, column: 19, scope: !3385)
!3499 = !DILocation(line: 872, column: 24, scope: !3385)
!3500 = !DILocation(line: 872, column: 33, scope: !3385)
!3501 = !DILocation(line: 872, column: 38, scope: !3385)
!3502 = !DILocation(line: 872, column: 47, scope: !3385)
!3503 = !DILocation(line: 872, column: 50, scope: !3385)
!3504 = !DILocation(line: 872, column: 55, scope: !3385)
!3505 = !DILocation(line: 872, column: 61, scope: !3385)
!3506 = !DILocation(line: 872, column: 66, scope: !3385)
!3507 = !DILocation(line: 872, column: 60, scope: !3385)
!3508 = !DILocation(line: 872, column: 48, scope: !3385)
!3509 = !DILocation(line: 872, column: 45, scope: !3385)
!3510 = !DILocation(line: 872, column: 30, scope: !3385)
!3511 = !DILocation(line: 872, column: 4, scope: !3385)
!3512 = !DILocation(line: 872, column: 9, scope: !3385)
!3513 = !DILocation(line: 872, column: 17, scope: !3385)
!3514 = !DILocation(line: 873, column: 19, scope: !3385)
!3515 = !DILocation(line: 873, column: 24, scope: !3385)
!3516 = !DILocation(line: 873, column: 33, scope: !3385)
!3517 = !DILocation(line: 873, column: 38, scope: !3385)
!3518 = !DILocation(line: 873, column: 46, scope: !3385)
!3519 = !DILocation(line: 873, column: 51, scope: !3385)
!3520 = !DILocation(line: 873, column: 45, scope: !3385)
!3521 = !DILocation(line: 873, column: 58, scope: !3385)
!3522 = !DILocation(line: 873, column: 61, scope: !3385)
!3523 = !DILocation(line: 873, column: 66, scope: !3385)
!3524 = !DILocation(line: 873, column: 72, scope: !3385)
!3525 = !DILocation(line: 873, column: 77, scope: !3385)
!3526 = !DILocation(line: 873, column: 71, scope: !3385)
!3527 = !DILocation(line: 873, column: 59, scope: !3385)
!3528 = !DILocation(line: 873, column: 57, scope: !3385)
!3529 = !DILocation(line: 873, column: 30, scope: !3385)
!3530 = !DILocation(line: 873, column: 4, scope: !3385)
!3531 = !DILocation(line: 873, column: 9, scope: !3385)
!3532 = !DILocation(line: 873, column: 17, scope: !3385)
!3533 = !DILocation(line: 874, column: 19, scope: !3385)
!3534 = !DILocation(line: 874, column: 24, scope: !3385)
!3535 = !DILocation(line: 874, column: 33, scope: !3385)
!3536 = !DILocation(line: 874, column: 38, scope: !3385)
!3537 = !DILocation(line: 874, column: 47, scope: !3385)
!3538 = !DILocation(line: 874, column: 50, scope: !3385)
!3539 = !DILocation(line: 874, column: 55, scope: !3385)
!3540 = !DILocation(line: 874, column: 61, scope: !3385)
!3541 = !DILocation(line: 874, column: 66, scope: !3385)
!3542 = !DILocation(line: 874, column: 60, scope: !3385)
!3543 = !DILocation(line: 874, column: 48, scope: !3385)
!3544 = !DILocation(line: 874, column: 45, scope: !3385)
!3545 = !DILocation(line: 874, column: 30, scope: !3385)
!3546 = !DILocation(line: 874, column: 4, scope: !3385)
!3547 = !DILocation(line: 874, column: 9, scope: !3385)
!3548 = !DILocation(line: 874, column: 17, scope: !3385)
!3549 = !DILocation(line: 876, column: 3, scope: !3385)
!3550 = !DILocation(line: 879, column: 12, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3378, file: !1, line: 877, column: 8)
!3552 = !DILocation(line: 879, column: 17, scope: !3551)
!3553 = !DILocation(line: 879, column: 24, scope: !3551)
!3554 = !DILocation(line: 879, column: 29, scope: !3551)
!3555 = !DILocation(line: 879, column: 37, scope: !3551)
!3556 = !DILocation(line: 879, column: 42, scope: !3551)
!3557 = !DILocation(line: 879, column: 36, scope: !3551)
!3558 = !DILocation(line: 879, column: 22, scope: !3551)
!3559 = !DILocation(line: 880, column: 5, scope: !3551)
!3560 = !DILocation(line: 880, column: 10, scope: !3551)
!3561 = !DILocation(line: 880, column: 16, scope: !3551)
!3562 = !DILocation(line: 880, column: 21, scope: !3551)
!3563 = !DILocation(line: 880, column: 15, scope: !3551)
!3564 = !DILocation(line: 879, column: 50, scope: !3551)
!3565 = !DILocation(line: 880, column: 30, scope: !3551)
!3566 = !DILocation(line: 880, column: 35, scope: !3551)
!3567 = !DILocation(line: 880, column: 41, scope: !3551)
!3568 = !DILocation(line: 880, column: 46, scope: !3551)
!3569 = !DILocation(line: 880, column: 40, scope: !3551)
!3570 = !DILocation(line: 880, column: 28, scope: !3551)
!3571 = !DILocation(line: 879, column: 9, scope: !3551)
!3572 = !DILocation(line: 879, column: 5, scope: !3551)
!3573 = !DILocation(line: 882, column: 19, scope: !3551)
!3574 = !DILocation(line: 882, column: 24, scope: !3551)
!3575 = !DILocation(line: 882, column: 33, scope: !3551)
!3576 = !DILocation(line: 882, column: 38, scope: !3551)
!3577 = !DILocation(line: 882, column: 46, scope: !3551)
!3578 = !DILocation(line: 882, column: 51, scope: !3551)
!3579 = !DILocation(line: 882, column: 45, scope: !3551)
!3580 = !DILocation(line: 882, column: 58, scope: !3551)
!3581 = !DILocation(line: 882, column: 60, scope: !3551)
!3582 = !DILocation(line: 882, column: 65, scope: !3551)
!3583 = !DILocation(line: 882, column: 59, scope: !3551)
!3584 = !DILocation(line: 882, column: 57, scope: !3551)
!3585 = !DILocation(line: 882, column: 30, scope: !3551)
!3586 = !DILocation(line: 882, column: 4, scope: !3551)
!3587 = !DILocation(line: 882, column: 9, scope: !3551)
!3588 = !DILocation(line: 882, column: 17, scope: !3551)
!3589 = !DILocation(line: 883, column: 19, scope: !3551)
!3590 = !DILocation(line: 883, column: 24, scope: !3551)
!3591 = !DILocation(line: 883, column: 33, scope: !3551)
!3592 = !DILocation(line: 883, column: 38, scope: !3551)
!3593 = !DILocation(line: 883, column: 47, scope: !3551)
!3594 = !DILocation(line: 883, column: 49, scope: !3551)
!3595 = !DILocation(line: 883, column: 54, scope: !3551)
!3596 = !DILocation(line: 883, column: 48, scope: !3551)
!3597 = !DILocation(line: 883, column: 45, scope: !3551)
!3598 = !DILocation(line: 883, column: 30, scope: !3551)
!3599 = !DILocation(line: 883, column: 4, scope: !3551)
!3600 = !DILocation(line: 883, column: 9, scope: !3551)
!3601 = !DILocation(line: 883, column: 17, scope: !3551)
!3602 = !DILocation(line: 884, column: 19, scope: !3551)
!3603 = !DILocation(line: 884, column: 24, scope: !3551)
!3604 = !DILocation(line: 884, column: 33, scope: !3551)
!3605 = !DILocation(line: 884, column: 38, scope: !3551)
!3606 = !DILocation(line: 884, column: 47, scope: !3551)
!3607 = !DILocation(line: 884, column: 49, scope: !3551)
!3608 = !DILocation(line: 884, column: 54, scope: !3551)
!3609 = !DILocation(line: 884, column: 48, scope: !3551)
!3610 = !DILocation(line: 884, column: 45, scope: !3551)
!3611 = !DILocation(line: 884, column: 30, scope: !3551)
!3612 = !DILocation(line: 884, column: 4, scope: !3551)
!3613 = !DILocation(line: 884, column: 9, scope: !3551)
!3614 = !DILocation(line: 884, column: 17, scope: !3551)
!3615 = !DILocation(line: 886, column: 12, scope: !3551)
!3616 = !DILocation(line: 886, column: 17, scope: !3551)
!3617 = !DILocation(line: 886, column: 23, scope: !3551)
!3618 = !DILocation(line: 886, column: 28, scope: !3551)
!3619 = !DILocation(line: 886, column: 22, scope: !3551)
!3620 = !DILocation(line: 887, column: 5, scope: !3551)
!3621 = !DILocation(line: 887, column: 10, scope: !3551)
!3622 = !DILocation(line: 887, column: 17, scope: !3551)
!3623 = !DILocation(line: 887, column: 22, scope: !3551)
!3624 = !DILocation(line: 887, column: 30, scope: !3551)
!3625 = !DILocation(line: 887, column: 35, scope: !3551)
!3626 = !DILocation(line: 887, column: 29, scope: !3551)
!3627 = !DILocation(line: 887, column: 15, scope: !3551)
!3628 = !DILocation(line: 886, column: 35, scope: !3551)
!3629 = !DILocation(line: 887, column: 44, scope: !3551)
!3630 = !DILocation(line: 887, column: 49, scope: !3551)
!3631 = !DILocation(line: 887, column: 55, scope: !3551)
!3632 = !DILocation(line: 887, column: 60, scope: !3551)
!3633 = !DILocation(line: 887, column: 54, scope: !3551)
!3634 = !DILocation(line: 887, column: 42, scope: !3551)
!3635 = !DILocation(line: 886, column: 9, scope: !3551)
!3636 = !DILocation(line: 886, column: 5, scope: !3551)
!3637 = !DILocation(line: 889, column: 19, scope: !3551)
!3638 = !DILocation(line: 889, column: 24, scope: !3551)
!3639 = !DILocation(line: 889, column: 33, scope: !3551)
!3640 = !DILocation(line: 889, column: 38, scope: !3551)
!3641 = !DILocation(line: 889, column: 47, scope: !3551)
!3642 = !DILocation(line: 889, column: 49, scope: !3551)
!3643 = !DILocation(line: 889, column: 54, scope: !3551)
!3644 = !DILocation(line: 889, column: 48, scope: !3551)
!3645 = !DILocation(line: 889, column: 45, scope: !3551)
!3646 = !DILocation(line: 889, column: 30, scope: !3551)
!3647 = !DILocation(line: 889, column: 4, scope: !3551)
!3648 = !DILocation(line: 889, column: 9, scope: !3551)
!3649 = !DILocation(line: 889, column: 17, scope: !3551)
!3650 = !DILocation(line: 890, column: 19, scope: !3551)
!3651 = !DILocation(line: 890, column: 24, scope: !3551)
!3652 = !DILocation(line: 890, column: 33, scope: !3551)
!3653 = !DILocation(line: 890, column: 38, scope: !3551)
!3654 = !DILocation(line: 890, column: 46, scope: !3551)
!3655 = !DILocation(line: 890, column: 51, scope: !3551)
!3656 = !DILocation(line: 890, column: 45, scope: !3551)
!3657 = !DILocation(line: 890, column: 58, scope: !3551)
!3658 = !DILocation(line: 890, column: 60, scope: !3551)
!3659 = !DILocation(line: 890, column: 65, scope: !3551)
!3660 = !DILocation(line: 890, column: 59, scope: !3551)
!3661 = !DILocation(line: 890, column: 57, scope: !3551)
!3662 = !DILocation(line: 890, column: 30, scope: !3551)
!3663 = !DILocation(line: 890, column: 4, scope: !3551)
!3664 = !DILocation(line: 890, column: 9, scope: !3551)
!3665 = !DILocation(line: 890, column: 17, scope: !3551)
!3666 = !DILocation(line: 891, column: 19, scope: !3551)
!3667 = !DILocation(line: 891, column: 24, scope: !3551)
!3668 = !DILocation(line: 891, column: 33, scope: !3551)
!3669 = !DILocation(line: 891, column: 38, scope: !3551)
!3670 = !DILocation(line: 891, column: 47, scope: !3551)
!3671 = !DILocation(line: 891, column: 49, scope: !3551)
!3672 = !DILocation(line: 891, column: 54, scope: !3551)
!3673 = !DILocation(line: 891, column: 48, scope: !3551)
!3674 = !DILocation(line: 891, column: 45, scope: !3551)
!3675 = !DILocation(line: 891, column: 30, scope: !3551)
!3676 = !DILocation(line: 891, column: 4, scope: !3551)
!3677 = !DILocation(line: 891, column: 9, scope: !3551)
!3678 = !DILocation(line: 891, column: 17, scope: !3551)
!3679 = !DILocation(line: 893, column: 2, scope: !3379)
!3680 = !DILocation(line: 895, column: 1, scope: !3317)
!3681 = distinct !DISubprogram(name: "shade_color", scope: !1, file: !1, line: 898, type: !3682, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{null, !1829, !3684}
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeResult", file: !1831, line: 65, baseType: !3686)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeResult", file: !1831, line: 48, size: 1696, elements: !3687)
!3687 = !{!3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !3686, file: !1831, line: 49, baseType: !511, size: 128)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3686, file: !1831, line: 50, baseType: !511, size: 128, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3686, file: !1831, line: 51, baseType: !147, size: 32, offset: 256)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "mist", scope: !3686, file: !1831, line: 51, baseType: !147, size: 32, offset: 288)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3686, file: !1831, line: 51, baseType: !147, size: 32, offset: 320)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !3686, file: !1831, line: 52, baseType: !212, size: 96, offset: 352)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !3686, file: !1831, line: 53, baseType: !212, size: 96, offset: 448)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "diffshad", scope: !3686, file: !1831, line: 54, baseType: !212, size: 96, offset: 544)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !3686, file: !1831, line: 55, baseType: !212, size: 96, offset: 640)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "shad", scope: !3686, file: !1831, line: 56, baseType: !511, size: 128, offset: 736)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3686, file: !1831, line: 57, baseType: !212, size: 96, offset: 864)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3686, file: !1831, line: 58, baseType: !212, size: 96, offset: 960)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3686, file: !1831, line: 59, baseType: !212, size: 96, offset: 1056)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !3686, file: !1831, line: 60, baseType: !212, size: 96, offset: 1152)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "refr", scope: !3686, file: !1831, line: 61, baseType: !212, size: 96, offset: 1248)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3686, file: !1831, line: 62, baseType: !212, size: 96, offset: 1344)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3686, file: !1831, line: 63, baseType: !511, size: 128, offset: 1440)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "rayhits", scope: !3686, file: !1831, line: 64, baseType: !511, size: 128, offset: 1568)
!3706 = !DILocalVariable(name: "shi", arg: 1, scope: !3681, file: !1, line: 898, type: !1829)
!3707 = !DILocation(line: 898, column: 30, scope: !3681)
!3708 = !DILocalVariable(name: "shr", arg: 2, scope: !3681, file: !1, line: 898, type: !3684)
!3709 = !DILocation(line: 898, column: 48, scope: !3681)
!3710 = !DILocalVariable(name: "ma", scope: !3681, file: !1, line: 900, type: !3711)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !395, line: 203, baseType: !394)
!3713 = !DILocation(line: 900, column: 12, scope: !3681)
!3714 = !DILocation(line: 900, column: 16, scope: !3681)
!3715 = !DILocation(line: 900, column: 21, scope: !3681)
!3716 = !DILocation(line: 902, column: 6, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 902, column: 6)
!3718 = !DILocation(line: 902, column: 10, scope: !3717)
!3719 = !DILocation(line: 902, column: 15, scope: !3717)
!3720 = !DILocation(line: 902, column: 6, scope: !3681)
!3721 = !DILocation(line: 903, column: 11, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 902, column: 35)
!3723 = !DILocation(line: 903, column: 16, scope: !3722)
!3724 = !DILocation(line: 903, column: 3, scope: !3722)
!3725 = !DILocation(line: 903, column: 8, scope: !3722)
!3726 = !DILocation(line: 903, column: 9, scope: !3722)
!3727 = !DILocation(line: 904, column: 11, scope: !3722)
!3728 = !DILocation(line: 904, column: 16, scope: !3722)
!3729 = !DILocation(line: 904, column: 3, scope: !3722)
!3730 = !DILocation(line: 904, column: 8, scope: !3722)
!3731 = !DILocation(line: 904, column: 9, scope: !3722)
!3732 = !DILocation(line: 905, column: 11, scope: !3722)
!3733 = !DILocation(line: 905, column: 16, scope: !3722)
!3734 = !DILocation(line: 905, column: 3, scope: !3722)
!3735 = !DILocation(line: 905, column: 8, scope: !3722)
!3736 = !DILocation(line: 905, column: 9, scope: !3722)
!3737 = !DILocation(line: 906, column: 7, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3722, file: !1, line: 906, column: 7)
!3739 = !DILocation(line: 906, column: 11, scope: !3738)
!3740 = !DILocation(line: 906, column: 16, scope: !3738)
!3741 = !DILocation(line: 906, column: 7, scope: !3722)
!3742 = !DILocation(line: 907, column: 16, scope: !3738)
!3743 = !DILocation(line: 907, column: 21, scope: !3738)
!3744 = !DILocation(line: 907, column: 4, scope: !3738)
!3745 = !DILocation(line: 907, column: 9, scope: !3738)
!3746 = !DILocation(line: 907, column: 14, scope: !3738)
!3747 = !DILocation(line: 908, column: 2, scope: !3722)
!3748 = !DILocation(line: 909, column: 11, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3717, file: !1, line: 909, column: 11)
!3750 = !DILocation(line: 909, column: 15, scope: !3749)
!3751 = !DILocation(line: 909, column: 20, scope: !3749)
!3752 = !DILocation(line: 909, column: 11, scope: !3717)
!3753 = !DILocalVariable(name: "neg_alpha", scope: !3754, file: !1, line: 910, type: !147)
!3754 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 909, column: 39)
!3755 = !DILocation(line: 910, column: 9, scope: !3754)
!3756 = !DILocation(line: 910, column: 28, scope: !3754)
!3757 = !DILocation(line: 910, column: 33, scope: !3754)
!3758 = !DILocation(line: 910, column: 26, scope: !3754)
!3759 = !DILocation(line: 911, column: 11, scope: !3754)
!3760 = !DILocation(line: 911, column: 16, scope: !3754)
!3761 = !DILocation(line: 911, column: 18, scope: !3754)
!3762 = !DILocation(line: 911, column: 17, scope: !3754)
!3763 = !DILocation(line: 911, column: 30, scope: !3754)
!3764 = !DILocation(line: 911, column: 35, scope: !3754)
!3765 = !DILocation(line: 911, column: 43, scope: !3754)
!3766 = !DILocation(line: 911, column: 48, scope: !3754)
!3767 = !DILocation(line: 911, column: 42, scope: !3754)
!3768 = !DILocation(line: 911, column: 28, scope: !3754)
!3769 = !DILocation(line: 911, column: 3, scope: !3754)
!3770 = !DILocation(line: 911, column: 8, scope: !3754)
!3771 = !DILocation(line: 911, column: 9, scope: !3754)
!3772 = !DILocation(line: 912, column: 11, scope: !3754)
!3773 = !DILocation(line: 912, column: 16, scope: !3754)
!3774 = !DILocation(line: 912, column: 18, scope: !3754)
!3775 = !DILocation(line: 912, column: 17, scope: !3754)
!3776 = !DILocation(line: 912, column: 30, scope: !3754)
!3777 = !DILocation(line: 912, column: 35, scope: !3754)
!3778 = !DILocation(line: 912, column: 43, scope: !3754)
!3779 = !DILocation(line: 912, column: 48, scope: !3754)
!3780 = !DILocation(line: 912, column: 42, scope: !3754)
!3781 = !DILocation(line: 912, column: 28, scope: !3754)
!3782 = !DILocation(line: 912, column: 3, scope: !3754)
!3783 = !DILocation(line: 912, column: 8, scope: !3754)
!3784 = !DILocation(line: 912, column: 9, scope: !3754)
!3785 = !DILocation(line: 913, column: 11, scope: !3754)
!3786 = !DILocation(line: 913, column: 16, scope: !3754)
!3787 = !DILocation(line: 913, column: 18, scope: !3754)
!3788 = !DILocation(line: 913, column: 17, scope: !3754)
!3789 = !DILocation(line: 913, column: 30, scope: !3754)
!3790 = !DILocation(line: 913, column: 35, scope: !3754)
!3791 = !DILocation(line: 913, column: 43, scope: !3754)
!3792 = !DILocation(line: 913, column: 48, scope: !3754)
!3793 = !DILocation(line: 913, column: 42, scope: !3754)
!3794 = !DILocation(line: 913, column: 28, scope: !3754)
!3795 = !DILocation(line: 913, column: 3, scope: !3754)
!3796 = !DILocation(line: 913, column: 8, scope: !3754)
!3797 = !DILocation(line: 913, column: 9, scope: !3754)
!3798 = !DILocation(line: 914, column: 2, scope: !3754)
!3799 = !DILocation(line: 916, column: 6, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 916, column: 6)
!3801 = !DILocation(line: 916, column: 10, scope: !3800)
!3802 = !DILocation(line: 916, column: 6, scope: !3681)
!3803 = !DILocation(line: 917, column: 19, scope: !3800)
!3804 = !DILocation(line: 917, column: 3, scope: !3800)
!3805 = !DILocation(line: 919, column: 6, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 919, column: 6)
!3807 = !DILocation(line: 919, column: 10, scope: !3806)
!3808 = !DILocation(line: 919, column: 21, scope: !3806)
!3809 = !DILocation(line: 919, column: 6, scope: !3681)
!3810 = !DILocation(line: 920, column: 28, scope: !3806)
!3811 = !DILocation(line: 920, column: 33, scope: !3806)
!3812 = !DILocation(line: 920, column: 39, scope: !3806)
!3813 = !DILocation(line: 920, column: 44, scope: !3806)
!3814 = !DILocation(line: 920, column: 48, scope: !3806)
!3815 = !DILocation(line: 920, column: 52, scope: !3806)
!3816 = !DILocation(line: 920, column: 67, scope: !3806)
!3817 = !DILocation(line: 920, column: 71, scope: !3806)
!3818 = !DILocation(line: 920, column: 16, scope: !3806)
!3819 = !DILocation(line: 920, column: 3, scope: !3806)
!3820 = !DILocation(line: 920, column: 8, scope: !3806)
!3821 = !DILocation(line: 920, column: 13, scope: !3806)
!3822 = !DILocation(line: 922, column: 8, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 922, column: 6)
!3824 = !DILocation(line: 922, column: 13, scope: !3823)
!3825 = !DILocation(line: 922, column: 18, scope: !3823)
!3826 = !DILocation(line: 922, column: 6, scope: !3681)
!3827 = !DILocation(line: 922, column: 32, scope: !3823)
!3828 = !DILocation(line: 922, column: 37, scope: !3823)
!3829 = !DILocation(line: 922, column: 42, scope: !3823)
!3830 = !DILocation(line: 924, column: 16, scope: !3681)
!3831 = !DILocation(line: 924, column: 21, scope: !3681)
!3832 = !DILocation(line: 924, column: 2, scope: !3681)
!3833 = !DILocation(line: 924, column: 7, scope: !3681)
!3834 = !DILocation(line: 924, column: 14, scope: !3681)
!3835 = !DILocation(line: 925, column: 16, scope: !3681)
!3836 = !DILocation(line: 925, column: 21, scope: !3681)
!3837 = !DILocation(line: 925, column: 2, scope: !3681)
!3838 = !DILocation(line: 925, column: 7, scope: !3681)
!3839 = !DILocation(line: 925, column: 14, scope: !3681)
!3840 = !DILocation(line: 926, column: 16, scope: !3681)
!3841 = !DILocation(line: 926, column: 21, scope: !3681)
!3842 = !DILocation(line: 926, column: 2, scope: !3681)
!3843 = !DILocation(line: 926, column: 7, scope: !3681)
!3844 = !DILocation(line: 926, column: 14, scope: !3681)
!3845 = !DILocation(line: 927, column: 14, scope: !3681)
!3846 = !DILocation(line: 927, column: 19, scope: !3681)
!3847 = !DILocation(line: 927, column: 2, scope: !3681)
!3848 = !DILocation(line: 927, column: 7, scope: !3681)
!3849 = !DILocation(line: 927, column: 12, scope: !3681)
!3850 = !DILocation(line: 930, column: 7, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 930, column: 6)
!3852 = !DILocation(line: 930, column: 11, scope: !3851)
!3853 = !DILocation(line: 930, column: 22, scope: !3851)
!3854 = !DILocation(line: 930, column: 36, scope: !3851)
!3855 = !DILocation(line: 930, column: 39, scope: !3851)
!3856 = !DILocation(line: 930, column: 44, scope: !3851)
!3857 = !DILocation(line: 930, column: 49, scope: !3851)
!3858 = !DILocation(line: 930, column: 6, scope: !3681)
!3859 = !DILocalVariable(name: "obcol", scope: !3860, file: !1, line: 931, type: !511)
!3860 = distinct !DILexicalBlock(scope: !3851, file: !1, line: 930, column: 53)
!3861 = !DILocation(line: 931, column: 9, scope: !3860)
!3862 = !DILocation(line: 933, column: 14, scope: !3860)
!3863 = !DILocation(line: 933, column: 21, scope: !3860)
!3864 = !DILocation(line: 933, column: 26, scope: !3860)
!3865 = !DILocation(line: 933, column: 31, scope: !3860)
!3866 = !DILocation(line: 933, column: 35, scope: !3860)
!3867 = !DILocation(line: 933, column: 3, scope: !3860)
!3868 = !DILocation(line: 934, column: 3, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 934, column: 3)
!3870 = distinct !DILexicalBlock(scope: !3860, file: !1, line: 934, column: 3)
!3871 = !DILocation(line: 934, column: 3, scope: !3870)
!3872 = !DILocation(line: 934, column: 3, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 934, column: 3)
!3874 = !DILocation(line: 936, column: 19, scope: !3860)
!3875 = !DILocation(line: 936, column: 3, scope: !3860)
!3876 = !DILocation(line: 936, column: 8, scope: !3860)
!3877 = !DILocation(line: 936, column: 16, scope: !3860)
!3878 = !DILocation(line: 937, column: 19, scope: !3860)
!3879 = !DILocation(line: 937, column: 3, scope: !3860)
!3880 = !DILocation(line: 937, column: 8, scope: !3860)
!3881 = !DILocation(line: 937, column: 16, scope: !3860)
!3882 = !DILocation(line: 938, column: 19, scope: !3860)
!3883 = !DILocation(line: 938, column: 3, scope: !3860)
!3884 = !DILocation(line: 938, column: 8, scope: !3860)
!3885 = !DILocation(line: 938, column: 16, scope: !3860)
!3886 = !DILocation(line: 939, column: 7, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3860, file: !1, line: 939, column: 7)
!3888 = !DILocation(line: 939, column: 12, scope: !3887)
!3889 = !DILocation(line: 939, column: 17, scope: !3887)
!3890 = !DILocation(line: 939, column: 7, scope: !3860)
!3891 = !DILocation(line: 939, column: 44, scope: !3887)
!3892 = !DILocation(line: 939, column: 30, scope: !3887)
!3893 = !DILocation(line: 939, column: 35, scope: !3887)
!3894 = !DILocation(line: 939, column: 41, scope: !3887)
!3895 = !DILocation(line: 940, column: 2, scope: !3860)
!3896 = !DILocation(line: 942, column: 13, scope: !3681)
!3897 = !DILocation(line: 942, column: 18, scope: !3681)
!3898 = !DILocation(line: 942, column: 28, scope: !3681)
!3899 = !DILocation(line: 942, column: 33, scope: !3681)
!3900 = !DILocation(line: 942, column: 2, scope: !3681)
!3901 = !DILocation(line: 943, column: 1, scope: !3681)
!3902 = distinct !DISubprogram(name: "copy_v4_v4", scope: !3298, file: !3298, line: 71, type: !3903, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !643, !2219}
!3905 = !DILocalVariable(name: "r", arg: 1, scope: !3902, file: !3298, line: 71, type: !643)
!3906 = !DILocation(line: 71, column: 31, scope: !3902)
!3907 = !DILocalVariable(name: "a", arg: 2, scope: !3902, file: !3298, line: 71, type: !2219)
!3908 = !DILocation(line: 71, column: 49, scope: !3902)
!3909 = !DILocation(line: 73, column: 9, scope: !3902)
!3910 = !DILocation(line: 73, column: 2, scope: !3902)
!3911 = !DILocation(line: 73, column: 7, scope: !3902)
!3912 = !DILocation(line: 74, column: 9, scope: !3902)
!3913 = !DILocation(line: 74, column: 2, scope: !3902)
!3914 = !DILocation(line: 74, column: 7, scope: !3902)
!3915 = !DILocation(line: 75, column: 9, scope: !3902)
!3916 = !DILocation(line: 75, column: 2, scope: !3902)
!3917 = !DILocation(line: 75, column: 7, scope: !3902)
!3918 = !DILocation(line: 76, column: 9, scope: !3902)
!3919 = !DILocation(line: 76, column: 2, scope: !3902)
!3920 = !DILocation(line: 76, column: 7, scope: !3902)
!3921 = !DILocation(line: 77, column: 1, scope: !3902)
!3922 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3298, file: !3298, line: 64, type: !3903, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3923 = !DILocalVariable(name: "r", arg: 1, scope: !3922, file: !3298, line: 64, type: !643)
!3924 = !DILocation(line: 64, column: 31, scope: !3922)
!3925 = !DILocalVariable(name: "a", arg: 2, scope: !3922, file: !3298, line: 64, type: !2219)
!3926 = !DILocation(line: 64, column: 49, scope: !3922)
!3927 = !DILocation(line: 66, column: 9, scope: !3922)
!3928 = !DILocation(line: 66, column: 2, scope: !3922)
!3929 = !DILocation(line: 66, column: 7, scope: !3922)
!3930 = !DILocation(line: 67, column: 9, scope: !3922)
!3931 = !DILocation(line: 67, column: 2, scope: !3922)
!3932 = !DILocation(line: 67, column: 7, scope: !3922)
!3933 = !DILocation(line: 68, column: 9, scope: !3922)
!3934 = !DILocation(line: 68, column: 2, scope: !3922)
!3935 = !DILocation(line: 68, column: 7, scope: !3922)
!3936 = !DILocation(line: 69, column: 1, scope: !3922)
!3937 = distinct !DISubprogram(name: "ambient_occlusion", scope: !1, file: !1, line: 1081, type: !3318, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3938 = !DILocalVariable(name: "shi", arg: 1, scope: !3937, file: !1, line: 1081, type: !1829)
!3939 = !DILocation(line: 1081, column: 36, scope: !3937)
!3940 = !DILocation(line: 1083, column: 14, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !1, line: 1083, column: 6)
!3942 = !DILocation(line: 1083, column: 7, scope: !3941)
!3943 = !DILocation(line: 1083, column: 31, scope: !3941)
!3944 = !DILocation(line: 1083, column: 54, scope: !3941)
!3945 = !DILocation(line: 1083, column: 57, scope: !3941)
!3946 = !DILocation(line: 1083, column: 62, scope: !3941)
!3947 = !DILocation(line: 1083, column: 67, scope: !3941)
!3948 = !DILocation(line: 1083, column: 70, scope: !3941)
!3949 = !DILocation(line: 1083, column: 6, scope: !3937)
!3950 = !DILocation(line: 1084, column: 18, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3941, file: !1, line: 1083, column: 78)
!3952 = !DILocation(line: 1084, column: 3, scope: !3951)
!3953 = !DILocation(line: 1085, column: 2, scope: !3951)
!3954 = !DILocation(line: 1086, column: 16, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3941, file: !1, line: 1086, column: 11)
!3956 = !DILocation(line: 1086, column: 21, scope: !3955)
!3957 = !DILocation(line: 1086, column: 35, scope: !3955)
!3958 = !DILocation(line: 1086, column: 38, scope: !3955)
!3959 = !DILocation(line: 1086, column: 43, scope: !3955)
!3960 = !DILocation(line: 1086, column: 48, scope: !3955)
!3961 = !DILocation(line: 1086, column: 51, scope: !3955)
!3962 = !DILocation(line: 1086, column: 11, scope: !3941)
!3963 = !DILocation(line: 1087, column: 10, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3955, file: !1, line: 1086, column: 59)
!3965 = !DILocation(line: 1087, column: 15, scope: !3964)
!3966 = !DILocation(line: 1087, column: 20, scope: !3964)
!3967 = !DILocation(line: 1087, column: 24, scope: !3964)
!3968 = !DILocation(line: 1087, column: 29, scope: !3964)
!3969 = !DILocation(line: 1087, column: 3, scope: !3964)
!3970 = !DILocation(line: 1088, column: 2, scope: !3964)
!3971 = !DILocation(line: 1090, column: 27, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3955, file: !1, line: 1089, column: 7)
!3973 = !DILocation(line: 1090, column: 32, scope: !3972)
!3974 = !DILocation(line: 1090, column: 37, scope: !3972)
!3975 = !DILocation(line: 1090, column: 15, scope: !3972)
!3976 = !DILocation(line: 1090, column: 20, scope: !3972)
!3977 = !DILocation(line: 1090, column: 25, scope: !3972)
!3978 = !DILocation(line: 1090, column: 3, scope: !3972)
!3979 = !DILocation(line: 1090, column: 8, scope: !3972)
!3980 = !DILocation(line: 1090, column: 13, scope: !3972)
!3981 = !DILocation(line: 1091, column: 11, scope: !3972)
!3982 = !DILocation(line: 1091, column: 16, scope: !3972)
!3983 = !DILocation(line: 1091, column: 3, scope: !3972)
!3984 = !DILocation(line: 1092, column: 11, scope: !3972)
!3985 = !DILocation(line: 1092, column: 16, scope: !3972)
!3986 = !DILocation(line: 1092, column: 3, scope: !3972)
!3987 = !DILocation(line: 1094, column: 1, scope: !3937)
!3988 = distinct !DISubprogram(name: "zero_v3", scope: !3298, file: !3298, line: 43, type: !3989, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !643}
!3991 = !DILocalVariable(name: "r", arg: 1, scope: !3988, file: !3298, line: 43, type: !643)
!3992 = !DILocation(line: 43, column: 28, scope: !3988)
!3993 = !DILocation(line: 45, column: 2, scope: !3988)
!3994 = !DILocation(line: 45, column: 7, scope: !3988)
!3995 = !DILocation(line: 46, column: 2, scope: !3988)
!3996 = !DILocation(line: 46, column: 7, scope: !3988)
!3997 = !DILocation(line: 47, column: 2, scope: !3988)
!3998 = !DILocation(line: 47, column: 7, scope: !3988)
!3999 = !DILocation(line: 48, column: 1, scope: !3988)
!4000 = distinct !DISubprogram(name: "environment_lighting_apply", scope: !1, file: !1, line: 1128, type: !3682, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4001 = !DILocalVariable(name: "shi", arg: 1, scope: !4000, file: !1, line: 1128, type: !1829)
!4002 = !DILocation(line: 1128, column: 45, scope: !4000)
!4003 = !DILocalVariable(name: "shr", arg: 2, scope: !4000, file: !1, line: 1128, type: !3684)
!4004 = !DILocation(line: 1128, column: 63, scope: !4000)
!4005 = !DILocalVariable(name: "f", scope: !4000, file: !1, line: 1130, type: !147)
!4006 = !DILocation(line: 1130, column: 8, scope: !4000)
!4007 = !DILocation(line: 1130, column: 18, scope: !4000)
!4008 = !DILocation(line: 1130, column: 32, scope: !4000)
!4009 = !DILocation(line: 1130, column: 37, scope: !4000)
!4010 = !DILocation(line: 1130, column: 31, scope: !4000)
!4011 = !DILocation(line: 1132, column: 13, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4000, file: !1, line: 1132, column: 6)
!4013 = !DILocation(line: 1132, column: 18, scope: !4012)
!4014 = !DILocation(line: 1132, column: 32, scope: !4012)
!4015 = !DILocation(line: 1132, column: 42, scope: !4012)
!4016 = !DILocation(line: 1132, column: 35, scope: !4012)
!4017 = !DILocation(line: 1132, column: 59, scope: !4012)
!4018 = !DILocation(line: 1132, column: 6, scope: !4000)
!4019 = !DILocation(line: 1133, column: 3, scope: !4012)
!4020 = !DILocation(line: 1134, column: 6, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4000, file: !1, line: 1134, column: 6)
!4022 = !DILocation(line: 1134, column: 8, scope: !4021)
!4023 = !DILocation(line: 1134, column: 6, scope: !4000)
!4024 = !DILocation(line: 1135, column: 3, scope: !4021)
!4025 = !DILocation(line: 1137, column: 22, scope: !4000)
!4026 = !DILocation(line: 1137, column: 27, scope: !4000)
!4027 = !DILocation(line: 1137, column: 34, scope: !4000)
!4028 = !DILocation(line: 1137, column: 39, scope: !4000)
!4029 = !DILocation(line: 1137, column: 33, scope: !4000)
!4030 = !DILocation(line: 1137, column: 41, scope: !4000)
!4031 = !DILocation(line: 1137, column: 46, scope: !4000)
!4032 = !DILocation(line: 1137, column: 40, scope: !4000)
!4033 = !DILocation(line: 1137, column: 51, scope: !4000)
!4034 = !DILocation(line: 1137, column: 50, scope: !4000)
!4035 = !DILocation(line: 1137, column: 2, scope: !4000)
!4036 = !DILocation(line: 1137, column: 7, scope: !4000)
!4037 = !DILocation(line: 1137, column: 19, scope: !4000)
!4038 = !DILocation(line: 1138, column: 22, scope: !4000)
!4039 = !DILocation(line: 1138, column: 27, scope: !4000)
!4040 = !DILocation(line: 1138, column: 34, scope: !4000)
!4041 = !DILocation(line: 1138, column: 39, scope: !4000)
!4042 = !DILocation(line: 1138, column: 33, scope: !4000)
!4043 = !DILocation(line: 1138, column: 41, scope: !4000)
!4044 = !DILocation(line: 1138, column: 46, scope: !4000)
!4045 = !DILocation(line: 1138, column: 40, scope: !4000)
!4046 = !DILocation(line: 1138, column: 51, scope: !4000)
!4047 = !DILocation(line: 1138, column: 50, scope: !4000)
!4048 = !DILocation(line: 1138, column: 2, scope: !4000)
!4049 = !DILocation(line: 1138, column: 7, scope: !4000)
!4050 = !DILocation(line: 1138, column: 19, scope: !4000)
!4051 = !DILocation(line: 1139, column: 22, scope: !4000)
!4052 = !DILocation(line: 1139, column: 27, scope: !4000)
!4053 = !DILocation(line: 1139, column: 34, scope: !4000)
!4054 = !DILocation(line: 1139, column: 39, scope: !4000)
!4055 = !DILocation(line: 1139, column: 33, scope: !4000)
!4056 = !DILocation(line: 1139, column: 41, scope: !4000)
!4057 = !DILocation(line: 1139, column: 46, scope: !4000)
!4058 = !DILocation(line: 1139, column: 40, scope: !4000)
!4059 = !DILocation(line: 1139, column: 51, scope: !4000)
!4060 = !DILocation(line: 1139, column: 50, scope: !4000)
!4061 = !DILocation(line: 1139, column: 2, scope: !4000)
!4062 = !DILocation(line: 1139, column: 7, scope: !4000)
!4063 = !DILocation(line: 1139, column: 19, scope: !4000)
!4064 = !DILocation(line: 1140, column: 1, scope: !4000)
!4065 = distinct !DISubprogram(name: "lamp_get_shadow", scope: !1, file: !1, line: 1157, type: !4066, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !2352, !1829, !147, !643, !5}
!4068 = !DILocalVariable(name: "lar", arg: 1, scope: !4065, file: !1, line: 1157, type: !2352)
!4069 = !DILocation(line: 1157, column: 31, scope: !4065)
!4070 = !DILocalVariable(name: "shi", arg: 2, scope: !4065, file: !1, line: 1157, type: !1829)
!4071 = !DILocation(line: 1157, column: 48, scope: !4065)
!4072 = !DILocalVariable(name: "inp", arg: 3, scope: !4065, file: !1, line: 1157, type: !147)
!4073 = !DILocation(line: 1157, column: 59, scope: !4065)
!4074 = !DILocalVariable(name: "shadfac", arg: 4, scope: !4065, file: !1, line: 1157, type: !643)
!4075 = !DILocation(line: 1157, column: 70, scope: !4065)
!4076 = !DILocalVariable(name: "do_real", arg: 5, scope: !4065, file: !1, line: 1157, type: !5)
!4077 = !DILocation(line: 1157, column: 86, scope: !4065)
!4078 = !DILocalVariable(name: "lss", scope: !4065, file: !1, line: 1159, type: !4079)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!4080 = !DILocation(line: 1159, column: 23, scope: !4065)
!4081 = !DILocation(line: 1159, column: 30, scope: !4065)
!4082 = !DILocation(line: 1159, column: 35, scope: !4065)
!4083 = !DILocation(line: 1159, column: 44, scope: !4065)
!4084 = !DILocation(line: 1159, column: 49, scope: !4065)
!4085 = !DILocation(line: 1159, column: 57, scope: !4065)
!4086 = !DILocation(line: 1159, column: 59, scope: !4065)
!4087 = !DILocation(line: 1159, column: 64, scope: !4065)
!4088 = !DILocation(line: 1161, column: 6, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4065, file: !1, line: 1161, column: 6)
!4090 = !DILocation(line: 1161, column: 14, scope: !4089)
!4091 = !DILocation(line: 1161, column: 17, scope: !4089)
!4092 = !DILocation(line: 1161, column: 22, scope: !4089)
!4093 = !DILocation(line: 1161, column: 32, scope: !4089)
!4094 = !DILocation(line: 1161, column: 37, scope: !4089)
!4095 = !DILocation(line: 1161, column: 30, scope: !4089)
!4096 = !DILocation(line: 1161, column: 6, scope: !4065)
!4097 = !DILocation(line: 1163, column: 39, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4089, file: !1, line: 1161, column: 47)
!4099 = !DILocation(line: 1163, column: 49, scope: !4098)
!4100 = !DILocation(line: 1163, column: 27, scope: !4098)
!4101 = !DILocation(line: 1163, column: 37, scope: !4098)
!4102 = !DILocation(line: 1163, column: 15, scope: !4098)
!4103 = !DILocation(line: 1163, column: 25, scope: !4098)
!4104 = !DILocation(line: 1163, column: 3, scope: !4098)
!4105 = !DILocation(line: 1163, column: 13, scope: !4098)
!4106 = !DILocation(line: 1165, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4098, file: !1, line: 1165, column: 7)
!4108 = !DILocation(line: 1165, column: 12, scope: !4107)
!4109 = !DILocation(line: 1165, column: 7, scope: !4098)
!4110 = !DILocation(line: 1166, column: 8, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !1, line: 1166, column: 8)
!4112 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1165, column: 17)
!4113 = !DILocation(line: 1166, column: 13, scope: !4111)
!4114 = !DILocation(line: 1166, column: 20, scope: !4111)
!4115 = !DILocation(line: 1166, column: 8, scope: !4112)
!4116 = !DILocation(line: 1167, column: 31, scope: !4111)
!4117 = !DILocation(line: 1167, column: 36, scope: !4111)
!4118 = !DILocation(line: 1167, column: 41, scope: !4111)
!4119 = !DILocation(line: 1167, column: 17, scope: !4111)
!4120 = !DILocation(line: 1167, column: 5, scope: !4111)
!4121 = !DILocation(line: 1167, column: 15, scope: !4111)
!4122 = !DILocation(line: 1169, column: 36, scope: !4111)
!4123 = !DILocation(line: 1169, column: 41, scope: !4111)
!4124 = !DILocation(line: 1169, column: 46, scope: !4111)
!4125 = !DILocation(line: 1169, column: 51, scope: !4111)
!4126 = !DILocation(line: 1169, column: 55, scope: !4111)
!4127 = !DILocation(line: 1169, column: 60, scope: !4111)
!4128 = !DILocation(line: 1169, column: 66, scope: !4111)
!4129 = !DILocation(line: 1169, column: 71, scope: !4111)
!4130 = !DILocation(line: 1169, column: 77, scope: !4111)
!4131 = !DILocation(line: 1169, column: 82, scope: !4111)
!4132 = !DILocation(line: 1169, column: 87, scope: !4111)
!4133 = !DILocation(line: 1169, column: 92, scope: !4111)
!4134 = !DILocation(line: 1169, column: 18, scope: !4111)
!4135 = !DILocation(line: 1169, column: 5, scope: !4111)
!4136 = !DILocation(line: 1169, column: 16, scope: !4111)
!4137 = !DILocation(line: 1170, column: 3, scope: !4112)
!4138 = !DILocation(line: 1171, column: 12, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 1171, column: 12)
!4140 = !DILocation(line: 1171, column: 17, scope: !4139)
!4141 = !DILocation(line: 1171, column: 22, scope: !4139)
!4142 = !DILocation(line: 1171, column: 12, scope: !4107)
!4143 = !DILocation(line: 1172, column: 15, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !1, line: 1171, column: 37)
!4145 = !DILocation(line: 1172, column: 20, scope: !4144)
!4146 = !DILocation(line: 1172, column: 25, scope: !4144)
!4147 = !DILocation(line: 1172, column: 4, scope: !4144)
!4148 = !DILocation(line: 1173, column: 3, scope: !4144)
!4149 = !DILocation(line: 1175, column: 7, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4098, file: !1, line: 1175, column: 7)
!4151 = !DILocation(line: 1175, column: 12, scope: !4150)
!4152 = !DILocation(line: 1175, column: 17, scope: !4150)
!4153 = !DILocation(line: 1175, column: 7, scope: !4098)
!4154 = !DILocation(line: 1176, column: 15, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4150, file: !1, line: 1175, column: 22)
!4156 = !DILocation(line: 1176, column: 20, scope: !4155)
!4157 = !DILocation(line: 1176, column: 29, scope: !4155)
!4158 = !DILocation(line: 1176, column: 4, scope: !4155)
!4159 = !DILocation(line: 1177, column: 19, scope: !4155)
!4160 = !DILocation(line: 1177, column: 24, scope: !4155)
!4161 = !DILocation(line: 1177, column: 4, scope: !4155)
!4162 = !DILocation(line: 1177, column: 9, scope: !4155)
!4163 = !DILocation(line: 1177, column: 17, scope: !4155)
!4164 = !DILocation(line: 1178, column: 3, scope: !4155)
!4165 = !DILocation(line: 1179, column: 2, scope: !4098)
!4166 = !DILocation(line: 1181, column: 14, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4089, file: !1, line: 1180, column: 7)
!4168 = !DILocation(line: 1181, column: 23, scope: !4167)
!4169 = !DILocation(line: 1181, column: 28, scope: !4167)
!4170 = !DILocation(line: 1181, column: 3, scope: !4167)
!4171 = !DILocation(line: 1183, column: 1, scope: !4065)
!4172 = distinct !DISubprogram(name: "lamp_get_visibility", scope: !1, file: !1, line: 1186, type: !4173, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!147, !2352, !2219, !643, !643}
!4175 = !DILocalVariable(name: "lar", arg: 1, scope: !4172, file: !1, line: 1186, type: !2352)
!4176 = !DILocation(line: 1186, column: 36, scope: !4172)
!4177 = !DILocalVariable(name: "co", arg: 2, scope: !4172, file: !1, line: 1186, type: !2219)
!4178 = !DILocation(line: 1186, column: 53, scope: !4172)
!4179 = !DILocalVariable(name: "lv", arg: 3, scope: !4172, file: !1, line: 1186, type: !643)
!4180 = !DILocation(line: 1186, column: 66, scope: !4172)
!4181 = !DILocalVariable(name: "dist", arg: 4, scope: !4172, file: !1, line: 1186, type: !643)
!4182 = !DILocation(line: 1186, column: 80, scope: !4172)
!4183 = !DILocation(line: 1188, column: 6, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4172, file: !1, line: 1188, column: 6)
!4185 = !DILocation(line: 1188, column: 11, scope: !4184)
!4186 = !DILocation(line: 1188, column: 15, scope: !4184)
!4187 = !DILocation(line: 1188, column: 24, scope: !4184)
!4188 = !DILocation(line: 1188, column: 27, scope: !4184)
!4189 = !DILocation(line: 1188, column: 32, scope: !4184)
!4190 = !DILocation(line: 1188, column: 36, scope: !4184)
!4191 = !DILocation(line: 1188, column: 6, scope: !4172)
!4192 = !DILocation(line: 1189, column: 4, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 1188, column: 47)
!4194 = !DILocation(line: 1189, column: 8, scope: !4193)
!4195 = !DILocation(line: 1190, column: 14, scope: !4193)
!4196 = !DILocation(line: 1190, column: 18, scope: !4193)
!4197 = !DILocation(line: 1190, column: 23, scope: !4193)
!4198 = !DILocation(line: 1190, column: 3, scope: !4193)
!4199 = !DILocation(line: 1191, column: 3, scope: !4193)
!4200 = !DILocalVariable(name: "visifac", scope: !4201, file: !1, line: 1194, type: !147)
!4201 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 1193, column: 7)
!4202 = !DILocation(line: 1194, column: 9, scope: !4201)
!4203 = !DILocalVariable(name: "t", scope: !4201, file: !1, line: 1194, type: !147)
!4204 = !DILocation(line: 1194, column: 24, scope: !4201)
!4205 = !DILocation(line: 1196, column: 15, scope: !4201)
!4206 = !DILocation(line: 1196, column: 19, scope: !4201)
!4207 = !DILocation(line: 1196, column: 23, scope: !4201)
!4208 = !DILocation(line: 1196, column: 28, scope: !4201)
!4209 = !DILocation(line: 1196, column: 3, scope: !4201)
!4210 = !DILocation(line: 1197, column: 18, scope: !4201)
!4211 = !DILocation(line: 1197, column: 11, scope: !4201)
!4212 = !DILocation(line: 1197, column: 4, scope: !4201)
!4213 = !DILocation(line: 1197, column: 9, scope: !4201)
!4214 = !DILocation(line: 1198, column: 16, scope: !4201)
!4215 = !DILocation(line: 1198, column: 15, scope: !4201)
!4216 = !DILocation(line: 1198, column: 12, scope: !4201)
!4217 = !DILocation(line: 1198, column: 5, scope: !4201)
!4218 = !DILocation(line: 1199, column: 13, scope: !4201)
!4219 = !DILocation(line: 1199, column: 17, scope: !4201)
!4220 = !DILocation(line: 1199, column: 3, scope: !4201)
!4221 = !DILocation(line: 1202, column: 7, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 1202, column: 7)
!4223 = !DILocation(line: 1202, column: 12, scope: !4222)
!4224 = !DILocation(line: 1202, column: 16, scope: !4222)
!4225 = !DILocation(line: 1202, column: 7, scope: !4201)
!4226 = !DILocation(line: 1208, column: 3, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 1202, column: 27)
!4228 = !DILocation(line: 1210, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 1209, column: 8)
!4230 = !DILocation(line: 1210, column: 17, scope: !4229)
!4231 = !DILocation(line: 1210, column: 4, scope: !4229)
!4232 = !DILocation(line: 1212, column: 14, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4229, file: !1, line: 1210, column: 31)
!4234 = !DILocation(line: 1213, column: 6, scope: !4233)
!4235 = !DILocation(line: 1215, column: 16, scope: !4233)
!4236 = !DILocation(line: 1215, column: 21, scope: !4233)
!4237 = !DILocation(line: 1215, column: 27, scope: !4233)
!4238 = !DILocation(line: 1215, column: 32, scope: !4233)
!4239 = !DILocation(line: 1215, column: 39, scope: !4233)
!4240 = !DILocation(line: 1215, column: 37, scope: !4233)
!4241 = !DILocation(line: 1215, column: 25, scope: !4233)
!4242 = !DILocation(line: 1215, column: 14, scope: !4233)
!4243 = !DILocation(line: 1216, column: 6, scope: !4233)
!4244 = !DILocation(line: 1223, column: 16, scope: !4233)
!4245 = !DILocation(line: 1223, column: 21, scope: !4233)
!4246 = !DILocation(line: 1223, column: 29, scope: !4233)
!4247 = !DILocation(line: 1223, column: 34, scope: !4233)
!4248 = !DILocation(line: 1223, column: 41, scope: !4233)
!4249 = !DILocation(line: 1223, column: 49, scope: !4233)
!4250 = !DILocation(line: 1223, column: 48, scope: !4233)
!4251 = !DILocation(line: 1223, column: 39, scope: !4233)
!4252 = !DILocation(line: 1223, column: 26, scope: !4233)
!4253 = !DILocation(line: 1223, column: 14, scope: !4233)
!4254 = !DILocation(line: 1224, column: 6, scope: !4233)
!4255 = !DILocation(line: 1226, column: 10, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 1226, column: 10)
!4257 = !DILocation(line: 1226, column: 15, scope: !4256)
!4258 = !DILocation(line: 1226, column: 18, scope: !4256)
!4259 = !DILocation(line: 1226, column: 10, scope: !4233)
!4260 = !DILocation(line: 1227, column: 16, scope: !4256)
!4261 = !DILocation(line: 1227, column: 21, scope: !4256)
!4262 = !DILocation(line: 1227, column: 27, scope: !4256)
!4263 = !DILocation(line: 1227, column: 32, scope: !4256)
!4264 = !DILocation(line: 1227, column: 37, scope: !4256)
!4265 = !DILocation(line: 1227, column: 42, scope: !4256)
!4266 = !DILocation(line: 1227, column: 46, scope: !4256)
!4267 = !DILocation(line: 1227, column: 45, scope: !4256)
!4268 = !DILocation(line: 1227, column: 36, scope: !4256)
!4269 = !DILocation(line: 1227, column: 25, scope: !4256)
!4270 = !DILocation(line: 1227, column: 14, scope: !4256)
!4271 = !DILocation(line: 1227, column: 7, scope: !4256)
!4272 = !DILocation(line: 1228, column: 10, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 1228, column: 10)
!4274 = !DILocation(line: 1228, column: 15, scope: !4273)
!4275 = !DILocation(line: 1228, column: 18, scope: !4273)
!4276 = !DILocation(line: 1228, column: 10, scope: !4233)
!4277 = !DILocation(line: 1229, column: 17, scope: !4273)
!4278 = !DILocation(line: 1229, column: 22, scope: !4273)
!4279 = !DILocation(line: 1229, column: 30, scope: !4273)
!4280 = !DILocation(line: 1229, column: 35, scope: !4273)
!4281 = !DILocation(line: 1229, column: 42, scope: !4273)
!4282 = !DILocation(line: 1229, column: 47, scope: !4273)
!4283 = !DILocation(line: 1229, column: 51, scope: !4273)
!4284 = !DILocation(line: 1229, column: 50, scope: !4273)
!4285 = !DILocation(line: 1229, column: 59, scope: !4273)
!4286 = !DILocation(line: 1229, column: 58, scope: !4273)
!4287 = !DILocation(line: 1229, column: 41, scope: !4273)
!4288 = !DILocation(line: 1229, column: 28, scope: !4273)
!4289 = !DILocation(line: 1229, column: 14, scope: !4273)
!4290 = !DILocation(line: 1229, column: 7, scope: !4273)
!4291 = !DILocation(line: 1230, column: 6, scope: !4233)
!4292 = !DILocation(line: 1233, column: 39, scope: !4233)
!4293 = !DILocation(line: 1233, column: 44, scope: !4233)
!4294 = !DILocation(line: 1233, column: 59, scope: !4233)
!4295 = !DILocation(line: 1233, column: 67, scope: !4233)
!4296 = !DILocation(line: 1233, column: 72, scope: !4233)
!4297 = !DILocation(line: 1233, column: 66, scope: !4233)
!4298 = !DILocation(line: 1233, column: 16, scope: !4233)
!4299 = !DILocation(line: 1233, column: 14, scope: !4233)
!4300 = !DILocation(line: 1234, column: 6, scope: !4233)
!4301 = !DILocation(line: 1237, column: 8, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4229, file: !1, line: 1237, column: 8)
!4303 = !DILocation(line: 1237, column: 13, scope: !4302)
!4304 = !DILocation(line: 1237, column: 18, scope: !4302)
!4305 = !DILocation(line: 1237, column: 8, scope: !4229)
!4306 = !DILocalVariable(name: "t", scope: !4307, file: !1, line: 1238, type: !147)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 1237, column: 31)
!4308 = !DILocation(line: 1238, column: 11, scope: !4307)
!4309 = !DILocation(line: 1238, column: 14, scope: !4307)
!4310 = !DILocation(line: 1238, column: 19, scope: !4307)
!4311 = !DILocation(line: 1238, column: 26, scope: !4307)
!4312 = !DILocation(line: 1238, column: 24, scope: !4307)
!4313 = !DILocation(line: 1239, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 1239, column: 9)
!4315 = !DILocation(line: 1239, column: 10, scope: !4314)
!4316 = !DILocation(line: 1239, column: 9, scope: !4307)
!4317 = !DILocation(line: 1240, column: 13, scope: !4314)
!4318 = !DILocation(line: 1240, column: 6, scope: !4314)
!4319 = !DILocation(line: 1242, column: 16, scope: !4314)
!4320 = !DILocation(line: 1242, column: 18, scope: !4314)
!4321 = !DILocation(line: 1242, column: 23, scope: !4314)
!4322 = !DILocation(line: 1242, column: 17, scope: !4314)
!4323 = !DILocation(line: 1242, column: 13, scope: !4314)
!4324 = !DILocation(line: 1243, column: 4, scope: !4307)
!4325 = !DILocation(line: 1245, column: 8, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4229, file: !1, line: 1245, column: 8)
!4327 = !DILocation(line: 1245, column: 16, scope: !4326)
!4328 = !DILocation(line: 1245, column: 8, scope: !4229)
!4329 = !DILocation(line: 1246, column: 9, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !1, line: 1246, column: 9)
!4331 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 1245, column: 24)
!4332 = !DILocation(line: 1246, column: 14, scope: !4330)
!4333 = !DILocation(line: 1246, column: 18, scope: !4330)
!4334 = !DILocation(line: 1246, column: 9, scope: !4331)
!4335 = !DILocalVariable(name: "inpr", scope: !4336, file: !1, line: 1247, type: !147)
!4336 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 1246, column: 29)
!4337 = !DILocation(line: 1247, column: 12, scope: !4336)
!4338 = !DILocation(line: 1249, column: 10, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4336, file: !1, line: 1249, column: 10)
!4340 = !DILocation(line: 1249, column: 15, scope: !4339)
!4341 = !DILocation(line: 1249, column: 20, scope: !4339)
!4342 = !DILocation(line: 1249, column: 10, scope: !4336)
!4343 = !DILocation(line: 1250, column: 20, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !1, line: 1250, column: 11)
!4345 = distinct !DILexicalBlock(scope: !4339, file: !1, line: 1249, column: 33)
!4346 = !DILocation(line: 1250, column: 24, scope: !4344)
!4347 = !DILocation(line: 1250, column: 29, scope: !4344)
!4348 = !DILocation(line: 1250, column: 11, scope: !4344)
!4349 = !DILocation(line: 1250, column: 34, scope: !4344)
!4350 = !DILocation(line: 1250, column: 11, scope: !4345)
!4351 = !DILocalVariable(name: "lvrot", scope: !4352, file: !1, line: 1251, type: !212)
!4352 = distinct !DILexicalBlock(scope: !4344, file: !1, line: 1250, column: 42)
!4353 = !DILocation(line: 1251, column: 14, scope: !4352)
!4354 = !DILocalVariable(name: "x", scope: !4352, file: !1, line: 1251, type: !147)
!4355 = !DILocation(line: 1251, column: 24, scope: !4352)
!4356 = !DILocation(line: 1254, column: 19, scope: !4352)
!4357 = !DILocation(line: 1254, column: 26, scope: !4352)
!4358 = !DILocation(line: 1254, column: 8, scope: !4352)
!4359 = !DILocation(line: 1255, column: 18, scope: !4352)
!4360 = !DILocation(line: 1255, column: 23, scope: !4352)
!4361 = !DILocation(line: 1255, column: 29, scope: !4352)
!4362 = !DILocation(line: 1255, column: 8, scope: !4352)
!4363 = !DILocation(line: 1257, column: 25, scope: !4352)
!4364 = !DILocation(line: 1257, column: 34, scope: !4352)
!4365 = !DILocation(line: 1257, column: 33, scope: !4352)
!4366 = !DILocation(line: 1257, column: 19, scope: !4352)
!4367 = !DILocation(line: 1257, column: 51, scope: !4352)
!4368 = !DILocation(line: 1257, column: 60, scope: !4352)
!4369 = !DILocation(line: 1257, column: 59, scope: !4352)
!4370 = !DILocation(line: 1257, column: 45, scope: !4352)
!4371 = !DILocation(line: 1257, column: 12, scope: !4352)
!4372 = !DILocation(line: 1257, column: 10, scope: !4352)
!4373 = !DILocation(line: 1260, column: 36, scope: !4352)
!4374 = !DILocation(line: 1260, column: 40, scope: !4352)
!4375 = !DILocation(line: 1260, column: 38, scope: !4352)
!4376 = !DILocation(line: 1260, column: 34, scope: !4352)
!4377 = !DILocation(line: 1260, column: 23, scope: !4352)
!4378 = !DILocation(line: 1260, column: 20, scope: !4352)
!4379 = !DILocation(line: 1260, column: 13, scope: !4352)
!4380 = !DILocation(line: 1261, column: 7, scope: !4352)
!4381 = !DILocation(line: 1262, column: 16, scope: !4344)
!4382 = !DILocation(line: 1263, column: 6, scope: !4345)
!4383 = !DILocation(line: 1265, column: 13, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4339, file: !1, line: 1264, column: 11)
!4385 = !DILocation(line: 1265, column: 19, scope: !4384)
!4386 = !DILocation(line: 1265, column: 24, scope: !4384)
!4387 = !DILocation(line: 1265, column: 18, scope: !4384)
!4388 = !DILocation(line: 1265, column: 31, scope: !4384)
!4389 = !DILocation(line: 1265, column: 37, scope: !4384)
!4390 = !DILocation(line: 1265, column: 42, scope: !4384)
!4391 = !DILocation(line: 1265, column: 36, scope: !4384)
!4392 = !DILocation(line: 1265, column: 30, scope: !4384)
!4393 = !DILocation(line: 1265, column: 49, scope: !4384)
!4394 = !DILocation(line: 1265, column: 55, scope: !4384)
!4395 = !DILocation(line: 1265, column: 60, scope: !4384)
!4396 = !DILocation(line: 1265, column: 54, scope: !4384)
!4397 = !DILocation(line: 1265, column: 48, scope: !4384)
!4398 = !DILocation(line: 1265, column: 11, scope: !4384)
!4399 = !DILocation(line: 1268, column: 9, scope: !4336)
!4400 = !DILocation(line: 1268, column: 14, scope: !4336)
!4401 = !DILocation(line: 1268, column: 7, scope: !4336)
!4402 = !DILocation(line: 1269, column: 10, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4336, file: !1, line: 1269, column: 10)
!4404 = !DILocation(line: 1269, column: 16, scope: !4403)
!4405 = !DILocation(line: 1269, column: 14, scope: !4403)
!4406 = !DILocation(line: 1269, column: 10, scope: !4336)
!4407 = !DILocation(line: 1270, column: 14, scope: !4403)
!4408 = !DILocation(line: 1270, column: 7, scope: !4403)
!4409 = !DILocation(line: 1272, column: 10, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4403, file: !1, line: 1271, column: 11)
!4411 = !DILocation(line: 1272, column: 15, scope: !4410)
!4412 = !DILocation(line: 1272, column: 14, scope: !4410)
!4413 = !DILocation(line: 1272, column: 8, scope: !4410)
!4414 = !DILocation(line: 1273, column: 11, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4410, file: !1, line: 1273, column: 11)
!4416 = !DILocation(line: 1273, column: 13, scope: !4415)
!4417 = !DILocation(line: 1273, column: 18, scope: !4415)
!4418 = !DILocation(line: 1273, column: 12, scope: !4415)
!4419 = !DILocation(line: 1273, column: 25, scope: !4415)
!4420 = !DILocation(line: 1273, column: 28, scope: !4415)
!4421 = !DILocation(line: 1273, column: 33, scope: !4415)
!4422 = !DILocation(line: 1273, column: 39, scope: !4415)
!4423 = !DILocation(line: 1273, column: 11, scope: !4410)
!4424 = !DILocalVariable(name: "i", scope: !4425, file: !1, line: 1275, type: !147)
!4425 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1273, column: 47)
!4426 = !DILocation(line: 1275, column: 14, scope: !4425)
!4427 = !DILocation(line: 1275, column: 17, scope: !4425)
!4428 = !DILocation(line: 1275, column: 19, scope: !4425)
!4429 = !DILocation(line: 1275, column: 24, scope: !4425)
!4430 = !DILocation(line: 1275, column: 18, scope: !4425)
!4431 = !DILocation(line: 1276, column: 11, scope: !4425)
!4432 = !DILocation(line: 1276, column: 13, scope: !4425)
!4433 = !DILocation(line: 1276, column: 12, scope: !4425)
!4434 = !DILocation(line: 1276, column: 9, scope: !4425)
!4435 = !DILocation(line: 1277, column: 21, scope: !4425)
!4436 = !DILocation(line: 1277, column: 20, scope: !4425)
!4437 = !DILocation(line: 1277, column: 28, scope: !4425)
!4438 = !DILocation(line: 1277, column: 27, scope: !4425)
!4439 = !DILocation(line: 1277, column: 30, scope: !4425)
!4440 = !DILocation(line: 1277, column: 29, scope: !4425)
!4441 = !DILocation(line: 1277, column: 22, scope: !4425)
!4442 = !DILocation(line: 1277, column: 12, scope: !4425)
!4443 = !DILocation(line: 1278, column: 7, scope: !4425)
!4444 = !DILocation(line: 1279, column: 17, scope: !4410)
!4445 = !DILocation(line: 1279, column: 14, scope: !4410)
!4446 = !DILocation(line: 1281, column: 5, scope: !4336)
!4447 = !DILocation(line: 1282, column: 4, scope: !4331)
!4448 = !DILocation(line: 1284, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 1284, column: 7)
!4450 = !DILocation(line: 1284, column: 15, scope: !4449)
!4451 = !DILocation(line: 1284, column: 7, scope: !4201)
!4452 = !DILocation(line: 1284, column: 34, scope: !4449)
!4453 = !DILocation(line: 1284, column: 26, scope: !4449)
!4454 = !DILocation(line: 1285, column: 10, scope: !4201)
!4455 = !DILocation(line: 1285, column: 3, scope: !4201)
!4456 = !DILocation(line: 1287, column: 1, scope: !4172)
!4457 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3298, file: !3298, line: 357, type: !4458, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{null, !643, !2219, !2219}
!4460 = !DILocalVariable(name: "r", arg: 1, scope: !4457, file: !3298, line: 357, type: !643)
!4461 = !DILocation(line: 357, column: 32, scope: !4457)
!4462 = !DILocalVariable(name: "a", arg: 2, scope: !4457, file: !3298, line: 357, type: !2219)
!4463 = !DILocation(line: 357, column: 50, scope: !4457)
!4464 = !DILocalVariable(name: "b", arg: 3, scope: !4457, file: !3298, line: 357, type: !2219)
!4465 = !DILocation(line: 357, column: 68, scope: !4457)
!4466 = !DILocation(line: 359, column: 9, scope: !4457)
!4467 = !DILocation(line: 359, column: 16, scope: !4457)
!4468 = !DILocation(line: 359, column: 14, scope: !4457)
!4469 = !DILocation(line: 359, column: 2, scope: !4457)
!4470 = !DILocation(line: 359, column: 7, scope: !4457)
!4471 = !DILocation(line: 360, column: 9, scope: !4457)
!4472 = !DILocation(line: 360, column: 16, scope: !4457)
!4473 = !DILocation(line: 360, column: 14, scope: !4457)
!4474 = !DILocation(line: 360, column: 2, scope: !4457)
!4475 = !DILocation(line: 360, column: 7, scope: !4457)
!4476 = !DILocation(line: 361, column: 9, scope: !4457)
!4477 = !DILocation(line: 361, column: 16, scope: !4457)
!4478 = !DILocation(line: 361, column: 14, scope: !4457)
!4479 = !DILocation(line: 361, column: 2, scope: !4457)
!4480 = !DILocation(line: 361, column: 7, scope: !4457)
!4481 = !DILocation(line: 362, column: 1, scope: !4457)
!4482 = distinct !DISubprogram(name: "len_v3", scope: !3298, file: !3298, line: 714, type: !4483, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!147, !2219}
!4485 = !DILocalVariable(name: "a", arg: 1, scope: !4482, file: !3298, line: 714, type: !2219)
!4486 = !DILocation(line: 714, column: 34, scope: !4482)
!4487 = !DILocation(line: 716, column: 24, scope: !4482)
!4488 = !DILocation(line: 716, column: 27, scope: !4482)
!4489 = !DILocation(line: 716, column: 15, scope: !4482)
!4490 = !DILocation(line: 716, column: 9, scope: !4482)
!4491 = !DILocation(line: 716, column: 2, scope: !4482)
!4492 = distinct !DISubprogram(name: "mul_v3_fl", scope: !3298, file: !3298, line: 392, type: !4493, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !643, !147}
!4495 = !DILocalVariable(name: "r", arg: 1, scope: !4492, file: !3298, line: 392, type: !643)
!4496 = !DILocation(line: 392, column: 30, scope: !4492)
!4497 = !DILocalVariable(name: "f", arg: 2, scope: !4492, file: !3298, line: 392, type: !147)
!4498 = !DILocation(line: 392, column: 42, scope: !4492)
!4499 = !DILocation(line: 394, column: 10, scope: !4492)
!4500 = !DILocation(line: 394, column: 2, scope: !4492)
!4501 = !DILocation(line: 394, column: 7, scope: !4492)
!4502 = !DILocation(line: 395, column: 10, scope: !4492)
!4503 = !DILocation(line: 395, column: 2, scope: !4492)
!4504 = !DILocation(line: 395, column: 7, scope: !4492)
!4505 = !DILocation(line: 396, column: 10, scope: !4492)
!4506 = !DILocation(line: 396, column: 2, scope: !4492)
!4507 = !DILocation(line: 396, column: 7, scope: !4492)
!4508 = !DILocation(line: 397, column: 1, scope: !4492)
!4509 = distinct !DISubprogram(name: "max_ff", scope: !4510, file: !4510, line: 206, type: !4511, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4510 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!147, !147, !147}
!4513 = !DILocalVariable(name: "a", arg: 1, scope: !4509, file: !4510, line: 206, type: !147)
!4514 = !DILocation(line: 206, column: 28, scope: !4509)
!4515 = !DILocalVariable(name: "b", arg: 2, scope: !4509, file: !4510, line: 206, type: !147)
!4516 = !DILocation(line: 206, column: 37, scope: !4509)
!4517 = !DILocation(line: 208, column: 10, scope: !4509)
!4518 = !DILocation(line: 208, column: 14, scope: !4509)
!4519 = !DILocation(line: 208, column: 12, scope: !4509)
!4520 = !DILocation(line: 208, column: 9, scope: !4509)
!4521 = !DILocation(line: 208, column: 19, scope: !4509)
!4522 = !DILocation(line: 208, column: 23, scope: !4509)
!4523 = !DILocation(line: 208, column: 2, scope: !4509)
!4524 = distinct !DISubprogram(name: "shade_lamp_loop", scope: !1, file: !1, line: 1711, type: !3682, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!4525 = !DILocalVariable(name: "shi", arg: 1, scope: !4524, file: !1, line: 1711, type: !1829)
!4526 = !DILocation(line: 1711, column: 34, scope: !4524)
!4527 = !DILocalVariable(name: "shr", arg: 2, scope: !4524, file: !1, line: 1711, type: !3684)
!4528 = !DILocation(line: 1711, column: 52, scope: !4524)
!4529 = !DILocalVariable(name: "color_passes", scope: !4524, file: !1, line: 1719, type: !4530)
!4530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!4531 = !DILocation(line: 1719, column: 12, scope: !4524)
!4532 = !DILocalVariable(name: "ma", scope: !4524, file: !1, line: 1723, type: !3711)
!4533 = !DILocation(line: 1723, column: 12, scope: !4524)
!4534 = !DILocation(line: 1723, column: 16, scope: !4524)
!4535 = !DILocation(line: 1723, column: 21, scope: !4524)
!4536 = !DILocalVariable(name: "passflag", scope: !4524, file: !1, line: 1724, type: !5)
!4537 = !DILocation(line: 1724, column: 6, scope: !4524)
!4538 = !DILocation(line: 1724, column: 16, scope: !4524)
!4539 = !DILocation(line: 1724, column: 21, scope: !4524)
!4540 = !DILocation(line: 1726, column: 9, scope: !4524)
!4541 = !DILocation(line: 1726, column: 2, scope: !4524)
!4542 = !DILocation(line: 1728, column: 8, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1728, column: 6)
!4544 = !DILocation(line: 1728, column: 13, scope: !4543)
!4545 = !DILocation(line: 1728, column: 18, scope: !4543)
!4546 = !DILocation(line: 1728, column: 6, scope: !4524)
!4547 = !DILocation(line: 1728, column: 32, scope: !4543)
!4548 = !DILocation(line: 1728, column: 37, scope: !4543)
!4549 = !DILocation(line: 1728, column: 43, scope: !4543)
!4550 = !DILocation(line: 1731, column: 6, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1731, column: 6)
!4552 = !DILocation(line: 1731, column: 10, scope: !4551)
!4553 = !DILocation(line: 1731, column: 15, scope: !4551)
!4554 = !DILocation(line: 1731, column: 6, scope: !4524)
!4555 = !DILocation(line: 1732, column: 31, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4551, file: !1, line: 1731, column: 32)
!4557 = !DILocation(line: 1732, column: 36, scope: !4556)
!4558 = !DILocation(line: 1732, column: 3, scope: !4556)
!4559 = !DILocation(line: 1733, column: 3, scope: !4556)
!4560 = !DILocation(line: 1737, column: 50, scope: !4524)
!4561 = !DILocation(line: 1737, column: 55, scope: !4524)
!4562 = !DILocation(line: 1737, column: 64, scope: !4524)
!4563 = !DILocation(line: 1737, column: 34, scope: !4524)
!4564 = !DILocation(line: 1737, column: 39, scope: !4524)
!4565 = !DILocation(line: 1737, column: 48, scope: !4524)
!4566 = !DILocation(line: 1737, column: 18, scope: !4524)
!4567 = !DILocation(line: 1737, column: 23, scope: !4524)
!4568 = !DILocation(line: 1737, column: 32, scope: !4524)
!4569 = !DILocation(line: 1737, column: 2, scope: !4524)
!4570 = !DILocation(line: 1737, column: 7, scope: !4524)
!4571 = !DILocation(line: 1737, column: 16, scope: !4524)
!4572 = !DILocation(line: 1740, column: 6, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1740, column: 6)
!4574 = !DILocation(line: 1740, column: 15, scope: !4573)
!4575 = !DILocation(line: 1740, column: 6, scope: !4524)
!4576 = !DILocation(line: 1741, column: 7, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 1741, column: 7)
!4578 = distinct !DILexicalBlock(scope: !4573, file: !1, line: 1740, column: 31)
!4579 = !DILocation(line: 1741, column: 11, scope: !4577)
!4580 = !DILocation(line: 1741, column: 16, scope: !4577)
!4581 = !DILocation(line: 1741, column: 7, scope: !4578)
!4582 = !DILocation(line: 1742, column: 12, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4577, file: !1, line: 1741, column: 36)
!4584 = !DILocation(line: 1742, column: 17, scope: !4583)
!4585 = !DILocation(line: 1742, column: 4, scope: !4583)
!4586 = !DILocation(line: 1742, column: 9, scope: !4583)
!4587 = !DILocation(line: 1742, column: 10, scope: !4583)
!4588 = !DILocation(line: 1743, column: 12, scope: !4583)
!4589 = !DILocation(line: 1743, column: 17, scope: !4583)
!4590 = !DILocation(line: 1743, column: 4, scope: !4583)
!4591 = !DILocation(line: 1743, column: 9, scope: !4583)
!4592 = !DILocation(line: 1743, column: 10, scope: !4583)
!4593 = !DILocation(line: 1744, column: 12, scope: !4583)
!4594 = !DILocation(line: 1744, column: 17, scope: !4583)
!4595 = !DILocation(line: 1744, column: 4, scope: !4583)
!4596 = !DILocation(line: 1744, column: 9, scope: !4583)
!4597 = !DILocation(line: 1744, column: 10, scope: !4583)
!4598 = !DILocation(line: 1745, column: 8, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4583, file: !1, line: 1745, column: 8)
!4600 = !DILocation(line: 1745, column: 12, scope: !4599)
!4601 = !DILocation(line: 1745, column: 17, scope: !4599)
!4602 = !DILocation(line: 1745, column: 8, scope: !4583)
!4603 = !DILocation(line: 1746, column: 17, scope: !4599)
!4604 = !DILocation(line: 1746, column: 22, scope: !4599)
!4605 = !DILocation(line: 1746, column: 5, scope: !4599)
!4606 = !DILocation(line: 1746, column: 10, scope: !4599)
!4607 = !DILocation(line: 1746, column: 15, scope: !4599)
!4608 = !DILocation(line: 1747, column: 3, scope: !4583)
!4609 = !DILocation(line: 1756, column: 12, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4577, file: !1, line: 1756, column: 12)
!4611 = !DILocation(line: 1756, column: 16, scope: !4610)
!4612 = !DILocation(line: 1756, column: 21, scope: !4610)
!4613 = !DILocation(line: 1756, column: 12, scope: !4577)
!4614 = !DILocalVariable(name: "neg_alpha", scope: !4615, file: !1, line: 1757, type: !147)
!4615 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 1756, column: 40)
!4616 = !DILocation(line: 1757, column: 10, scope: !4615)
!4617 = !DILocation(line: 1757, column: 29, scope: !4615)
!4618 = !DILocation(line: 1757, column: 34, scope: !4615)
!4619 = !DILocation(line: 1757, column: 27, scope: !4615)
!4620 = !DILocation(line: 1758, column: 12, scope: !4615)
!4621 = !DILocation(line: 1758, column: 17, scope: !4615)
!4622 = !DILocation(line: 1758, column: 19, scope: !4615)
!4623 = !DILocation(line: 1758, column: 18, scope: !4615)
!4624 = !DILocation(line: 1758, column: 31, scope: !4615)
!4625 = !DILocation(line: 1758, column: 36, scope: !4615)
!4626 = !DILocation(line: 1758, column: 44, scope: !4615)
!4627 = !DILocation(line: 1758, column: 49, scope: !4615)
!4628 = !DILocation(line: 1758, column: 43, scope: !4615)
!4629 = !DILocation(line: 1758, column: 29, scope: !4615)
!4630 = !DILocation(line: 1758, column: 4, scope: !4615)
!4631 = !DILocation(line: 1758, column: 9, scope: !4615)
!4632 = !DILocation(line: 1758, column: 10, scope: !4615)
!4633 = !DILocation(line: 1759, column: 12, scope: !4615)
!4634 = !DILocation(line: 1759, column: 17, scope: !4615)
!4635 = !DILocation(line: 1759, column: 19, scope: !4615)
!4636 = !DILocation(line: 1759, column: 18, scope: !4615)
!4637 = !DILocation(line: 1759, column: 31, scope: !4615)
!4638 = !DILocation(line: 1759, column: 36, scope: !4615)
!4639 = !DILocation(line: 1759, column: 44, scope: !4615)
!4640 = !DILocation(line: 1759, column: 49, scope: !4615)
!4641 = !DILocation(line: 1759, column: 43, scope: !4615)
!4642 = !DILocation(line: 1759, column: 29, scope: !4615)
!4643 = !DILocation(line: 1759, column: 4, scope: !4615)
!4644 = !DILocation(line: 1759, column: 9, scope: !4615)
!4645 = !DILocation(line: 1759, column: 10, scope: !4615)
!4646 = !DILocation(line: 1760, column: 12, scope: !4615)
!4647 = !DILocation(line: 1760, column: 17, scope: !4615)
!4648 = !DILocation(line: 1760, column: 19, scope: !4615)
!4649 = !DILocation(line: 1760, column: 18, scope: !4615)
!4650 = !DILocation(line: 1760, column: 31, scope: !4615)
!4651 = !DILocation(line: 1760, column: 36, scope: !4615)
!4652 = !DILocation(line: 1760, column: 44, scope: !4615)
!4653 = !DILocation(line: 1760, column: 49, scope: !4615)
!4654 = !DILocation(line: 1760, column: 43, scope: !4615)
!4655 = !DILocation(line: 1760, column: 29, scope: !4615)
!4656 = !DILocation(line: 1760, column: 4, scope: !4615)
!4657 = !DILocation(line: 1760, column: 9, scope: !4615)
!4658 = !DILocation(line: 1760, column: 10, scope: !4615)
!4659 = !DILocation(line: 1761, column: 3, scope: !4615)
!4660 = !DILocation(line: 1762, column: 7, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 1762, column: 7)
!4662 = !DILocation(line: 1762, column: 11, scope: !4661)
!4663 = !DILocation(line: 1762, column: 7, scope: !4578)
!4664 = !DILocation(line: 1763, column: 20, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !1, line: 1762, column: 18)
!4666 = !DILocation(line: 1763, column: 4, scope: !4665)
!4667 = !DILocation(line: 1764, column: 10, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 1764, column: 8)
!4669 = !DILocation(line: 1764, column: 15, scope: !4668)
!4670 = !DILocation(line: 1764, column: 20, scope: !4668)
!4671 = !DILocation(line: 1764, column: 8, scope: !4665)
!4672 = !DILocation(line: 1764, column: 34, scope: !4668)
!4673 = !DILocation(line: 1764, column: 39, scope: !4668)
!4674 = !DILocation(line: 1764, column: 45, scope: !4668)
!4675 = !DILocation(line: 1765, column: 3, scope: !4665)
!4676 = !DILocation(line: 1767, column: 16, scope: !4578)
!4677 = !DILocation(line: 1767, column: 21, scope: !4578)
!4678 = !DILocation(line: 1767, column: 23, scope: !4578)
!4679 = !DILocation(line: 1767, column: 28, scope: !4578)
!4680 = !DILocation(line: 1767, column: 22, scope: !4578)
!4681 = !DILocation(line: 1767, column: 3, scope: !4578)
!4682 = !DILocation(line: 1767, column: 8, scope: !4578)
!4683 = !DILocation(line: 1767, column: 14, scope: !4578)
!4684 = !DILocation(line: 1768, column: 16, scope: !4578)
!4685 = !DILocation(line: 1768, column: 21, scope: !4578)
!4686 = !DILocation(line: 1768, column: 23, scope: !4578)
!4687 = !DILocation(line: 1768, column: 28, scope: !4578)
!4688 = !DILocation(line: 1768, column: 22, scope: !4578)
!4689 = !DILocation(line: 1768, column: 3, scope: !4578)
!4690 = !DILocation(line: 1768, column: 8, scope: !4578)
!4691 = !DILocation(line: 1768, column: 14, scope: !4578)
!4692 = !DILocation(line: 1769, column: 16, scope: !4578)
!4693 = !DILocation(line: 1769, column: 21, scope: !4578)
!4694 = !DILocation(line: 1769, column: 23, scope: !4578)
!4695 = !DILocation(line: 1769, column: 28, scope: !4578)
!4696 = !DILocation(line: 1769, column: 22, scope: !4578)
!4697 = !DILocation(line: 1769, column: 3, scope: !4578)
!4698 = !DILocation(line: 1769, column: 8, scope: !4578)
!4699 = !DILocation(line: 1769, column: 14, scope: !4578)
!4700 = !DILocation(line: 1770, column: 16, scope: !4578)
!4701 = !DILocation(line: 1770, column: 21, scope: !4578)
!4702 = !DILocation(line: 1770, column: 3, scope: !4578)
!4703 = !DILocation(line: 1770, column: 8, scope: !4578)
!4704 = !DILocation(line: 1770, column: 14, scope: !4578)
!4705 = !DILocation(line: 1772, column: 8, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 1772, column: 7)
!4707 = !DILocation(line: 1772, column: 12, scope: !4706)
!4708 = !DILocation(line: 1772, column: 21, scope: !4706)
!4709 = !DILocation(line: 1772, column: 36, scope: !4706)
!4710 = !DILocation(line: 1772, column: 58, scope: !4706)
!4711 = !DILocation(line: 1772, column: 40, scope: !4706)
!4712 = !DILocation(line: 1772, column: 7, scope: !4578)
!4713 = !DILocation(line: 1773, column: 8, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !1, line: 1773, column: 8)
!4715 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1772, column: 63)
!4716 = !DILocation(line: 1773, column: 12, scope: !4714)
!4717 = !DILocation(line: 1773, column: 23, scope: !4714)
!4718 = !DILocation(line: 1773, column: 8, scope: !4715)
!4719 = !DILocation(line: 1774, column: 29, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4714, file: !1, line: 1773, column: 32)
!4721 = !DILocation(line: 1774, column: 34, scope: !4720)
!4722 = !DILocation(line: 1774, column: 39, scope: !4720)
!4723 = !DILocation(line: 1774, column: 21, scope: !4720)
!4724 = !DILocation(line: 1774, column: 26, scope: !4720)
!4725 = !DILocation(line: 1774, column: 27, scope: !4720)
!4726 = !DILocation(line: 1774, column: 13, scope: !4720)
!4727 = !DILocation(line: 1774, column: 18, scope: !4720)
!4728 = !DILocation(line: 1774, column: 19, scope: !4720)
!4729 = !DILocation(line: 1774, column: 5, scope: !4720)
!4730 = !DILocation(line: 1774, column: 10, scope: !4720)
!4731 = !DILocation(line: 1774, column: 11, scope: !4720)
!4732 = !DILocation(line: 1775, column: 44, scope: !4720)
!4733 = !DILocation(line: 1775, column: 49, scope: !4720)
!4734 = !DILocation(line: 1775, column: 55, scope: !4720)
!4735 = !DILocation(line: 1775, column: 31, scope: !4720)
!4736 = !DILocation(line: 1775, column: 36, scope: !4720)
!4737 = !DILocation(line: 1775, column: 42, scope: !4720)
!4738 = !DILocation(line: 1775, column: 18, scope: !4720)
!4739 = !DILocation(line: 1775, column: 23, scope: !4720)
!4740 = !DILocation(line: 1775, column: 29, scope: !4720)
!4741 = !DILocation(line: 1775, column: 5, scope: !4720)
!4742 = !DILocation(line: 1775, column: 10, scope: !4720)
!4743 = !DILocation(line: 1775, column: 16, scope: !4720)
!4744 = !DILocation(line: 1776, column: 4, scope: !4720)
!4745 = !DILocation(line: 1778, column: 24, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4714, file: !1, line: 1777, column: 9)
!4747 = !DILocation(line: 1778, column: 29, scope: !4746)
!4748 = !DILocation(line: 1778, column: 17, scope: !4746)
!4749 = !DILocation(line: 1778, column: 39, scope: !4746)
!4750 = !DILocation(line: 1778, column: 43, scope: !4746)
!4751 = !DILocation(line: 1778, column: 13, scope: !4746)
!4752 = !DILocation(line: 1778, column: 5, scope: !4746)
!4753 = !DILocation(line: 1778, column: 10, scope: !4746)
!4754 = !DILocation(line: 1778, column: 11, scope: !4746)
!4755 = !DILocation(line: 1779, column: 24, scope: !4746)
!4756 = !DILocation(line: 1779, column: 29, scope: !4746)
!4757 = !DILocation(line: 1779, column: 17, scope: !4746)
!4758 = !DILocation(line: 1779, column: 39, scope: !4746)
!4759 = !DILocation(line: 1779, column: 43, scope: !4746)
!4760 = !DILocation(line: 1779, column: 13, scope: !4746)
!4761 = !DILocation(line: 1779, column: 5, scope: !4746)
!4762 = !DILocation(line: 1779, column: 10, scope: !4746)
!4763 = !DILocation(line: 1779, column: 11, scope: !4746)
!4764 = !DILocation(line: 1780, column: 24, scope: !4746)
!4765 = !DILocation(line: 1780, column: 29, scope: !4746)
!4766 = !DILocation(line: 1780, column: 17, scope: !4746)
!4767 = !DILocation(line: 1780, column: 39, scope: !4746)
!4768 = !DILocation(line: 1780, column: 43, scope: !4746)
!4769 = !DILocation(line: 1780, column: 13, scope: !4746)
!4770 = !DILocation(line: 1780, column: 5, scope: !4746)
!4771 = !DILocation(line: 1780, column: 10, scope: !4746)
!4772 = !DILocation(line: 1780, column: 11, scope: !4746)
!4773 = !DILocation(line: 1781, column: 28, scope: !4746)
!4774 = !DILocation(line: 1781, column: 33, scope: !4746)
!4775 = !DILocation(line: 1781, column: 21, scope: !4746)
!4776 = !DILocation(line: 1781, column: 47, scope: !4746)
!4777 = !DILocation(line: 1781, column: 51, scope: !4746)
!4778 = !DILocation(line: 1781, column: 17, scope: !4746)
!4779 = !DILocation(line: 1781, column: 5, scope: !4746)
!4780 = !DILocation(line: 1781, column: 10, scope: !4746)
!4781 = !DILocation(line: 1781, column: 15, scope: !4746)
!4782 = !DILocation(line: 1783, column: 29, scope: !4746)
!4783 = !DILocation(line: 1783, column: 34, scope: !4746)
!4784 = !DILocation(line: 1783, column: 22, scope: !4746)
!4785 = !DILocation(line: 1783, column: 49, scope: !4746)
!4786 = !DILocation(line: 1783, column: 53, scope: !4746)
!4787 = !DILocation(line: 1783, column: 18, scope: !4746)
!4788 = !DILocation(line: 1783, column: 5, scope: !4746)
!4789 = !DILocation(line: 1783, column: 10, scope: !4746)
!4790 = !DILocation(line: 1783, column: 16, scope: !4746)
!4791 = !DILocation(line: 1784, column: 29, scope: !4746)
!4792 = !DILocation(line: 1784, column: 34, scope: !4746)
!4793 = !DILocation(line: 1784, column: 22, scope: !4746)
!4794 = !DILocation(line: 1784, column: 49, scope: !4746)
!4795 = !DILocation(line: 1784, column: 53, scope: !4746)
!4796 = !DILocation(line: 1784, column: 18, scope: !4746)
!4797 = !DILocation(line: 1784, column: 5, scope: !4746)
!4798 = !DILocation(line: 1784, column: 10, scope: !4746)
!4799 = !DILocation(line: 1784, column: 16, scope: !4746)
!4800 = !DILocation(line: 1785, column: 29, scope: !4746)
!4801 = !DILocation(line: 1785, column: 34, scope: !4746)
!4802 = !DILocation(line: 1785, column: 22, scope: !4746)
!4803 = !DILocation(line: 1785, column: 49, scope: !4746)
!4804 = !DILocation(line: 1785, column: 53, scope: !4746)
!4805 = !DILocation(line: 1785, column: 18, scope: !4746)
!4806 = !DILocation(line: 1785, column: 5, scope: !4746)
!4807 = !DILocation(line: 1785, column: 10, scope: !4746)
!4808 = !DILocation(line: 1785, column: 16, scope: !4746)
!4809 = !DILocation(line: 1786, column: 29, scope: !4746)
!4810 = !DILocation(line: 1786, column: 34, scope: !4746)
!4811 = !DILocation(line: 1786, column: 22, scope: !4746)
!4812 = !DILocation(line: 1786, column: 49, scope: !4746)
!4813 = !DILocation(line: 1786, column: 53, scope: !4746)
!4814 = !DILocation(line: 1786, column: 18, scope: !4746)
!4815 = !DILocation(line: 1786, column: 5, scope: !4746)
!4816 = !DILocation(line: 1786, column: 10, scope: !4746)
!4817 = !DILocation(line: 1786, column: 16, scope: !4746)
!4818 = !DILocation(line: 1788, column: 3, scope: !4715)
!4819 = !DILocation(line: 1789, column: 2, scope: !4578)
!4820 = !DILocation(line: 1791, column: 6, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1791, column: 6)
!4822 = !DILocation(line: 1791, column: 10, scope: !4821)
!4823 = !DILocation(line: 1791, column: 15, scope: !4821)
!4824 = !DILocation(line: 1791, column: 6, scope: !4524)
!4825 = !DILocation(line: 1792, column: 21, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4821, file: !1, line: 1791, column: 28)
!4827 = !DILocation(line: 1792, column: 26, scope: !4826)
!4828 = !DILocation(line: 1792, column: 3, scope: !4826)
!4829 = !DILocation(line: 1792, column: 8, scope: !4826)
!4830 = !DILocation(line: 1792, column: 19, scope: !4826)
!4831 = !DILocation(line: 1793, column: 21, scope: !4826)
!4832 = !DILocation(line: 1793, column: 26, scope: !4826)
!4833 = !DILocation(line: 1793, column: 3, scope: !4826)
!4834 = !DILocation(line: 1793, column: 8, scope: !4826)
!4835 = !DILocation(line: 1793, column: 19, scope: !4826)
!4836 = !DILocation(line: 1794, column: 21, scope: !4826)
!4837 = !DILocation(line: 1794, column: 26, scope: !4826)
!4838 = !DILocation(line: 1794, column: 3, scope: !4826)
!4839 = !DILocation(line: 1794, column: 8, scope: !4826)
!4840 = !DILocation(line: 1794, column: 19, scope: !4826)
!4841 = !DILocation(line: 1795, column: 15, scope: !4826)
!4842 = !DILocation(line: 1795, column: 20, scope: !4826)
!4843 = !DILocation(line: 1795, column: 3, scope: !4826)
!4844 = !DILocation(line: 1795, column: 8, scope: !4826)
!4845 = !DILocation(line: 1795, column: 13, scope: !4826)
!4846 = !DILocation(line: 1796, column: 3, scope: !4826)
!4847 = !DILocation(line: 1799, column: 8, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1799, column: 7)
!4849 = !DILocation(line: 1799, column: 12, scope: !4848)
!4850 = !DILocation(line: 1799, column: 17, scope: !4848)
!4851 = !DILocation(line: 1799, column: 48, scope: !4848)
!4852 = !DILocation(line: 1799, column: 7, scope: !4524)
!4853 = !DILocation(line: 1800, column: 17, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4848, file: !1, line: 1799, column: 66)
!4855 = !DILocation(line: 1800, column: 22, scope: !4854)
!4856 = !DILocation(line: 1800, column: 25, scope: !4854)
!4857 = !DILocation(line: 1800, column: 30, scope: !4854)
!4858 = !DILocation(line: 1800, column: 35, scope: !4854)
!4859 = !DILocation(line: 1800, column: 40, scope: !4854)
!4860 = !DILocation(line: 1800, column: 48, scope: !4854)
!4861 = !DILocation(line: 1800, column: 53, scope: !4854)
!4862 = !DILocation(line: 1800, column: 47, scope: !4854)
!4863 = !DILocation(line: 1800, column: 34, scope: !4854)
!4864 = !DILocation(line: 1800, column: 23, scope: !4854)
!4865 = !DILocation(line: 1800, column: 3, scope: !4854)
!4866 = !DILocation(line: 1800, column: 8, scope: !4854)
!4867 = !DILocation(line: 1800, column: 15, scope: !4854)
!4868 = !DILocation(line: 1801, column: 17, scope: !4854)
!4869 = !DILocation(line: 1801, column: 22, scope: !4854)
!4870 = !DILocation(line: 1801, column: 25, scope: !4854)
!4871 = !DILocation(line: 1801, column: 30, scope: !4854)
!4872 = !DILocation(line: 1801, column: 35, scope: !4854)
!4873 = !DILocation(line: 1801, column: 40, scope: !4854)
!4874 = !DILocation(line: 1801, column: 48, scope: !4854)
!4875 = !DILocation(line: 1801, column: 53, scope: !4854)
!4876 = !DILocation(line: 1801, column: 47, scope: !4854)
!4877 = !DILocation(line: 1801, column: 34, scope: !4854)
!4878 = !DILocation(line: 1801, column: 23, scope: !4854)
!4879 = !DILocation(line: 1801, column: 3, scope: !4854)
!4880 = !DILocation(line: 1801, column: 8, scope: !4854)
!4881 = !DILocation(line: 1801, column: 15, scope: !4854)
!4882 = !DILocation(line: 1802, column: 17, scope: !4854)
!4883 = !DILocation(line: 1802, column: 22, scope: !4854)
!4884 = !DILocation(line: 1802, column: 25, scope: !4854)
!4885 = !DILocation(line: 1802, column: 30, scope: !4854)
!4886 = !DILocation(line: 1802, column: 35, scope: !4854)
!4887 = !DILocation(line: 1802, column: 40, scope: !4854)
!4888 = !DILocation(line: 1802, column: 48, scope: !4854)
!4889 = !DILocation(line: 1802, column: 53, scope: !4854)
!4890 = !DILocation(line: 1802, column: 47, scope: !4854)
!4891 = !DILocation(line: 1802, column: 34, scope: !4854)
!4892 = !DILocation(line: 1802, column: 23, scope: !4854)
!4893 = !DILocation(line: 1802, column: 3, scope: !4854)
!4894 = !DILocation(line: 1802, column: 8, scope: !4854)
!4895 = !DILocation(line: 1802, column: 15, scope: !4854)
!4896 = !DILocation(line: 1803, column: 2, scope: !4854)
!4897 = !DILocation(line: 1805, column: 17, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4848, file: !1, line: 1804, column: 7)
!4899 = !DILocation(line: 1805, column: 22, scope: !4898)
!4900 = !DILocation(line: 1805, column: 24, scope: !4898)
!4901 = !DILocation(line: 1805, column: 29, scope: !4898)
!4902 = !DILocation(line: 1805, column: 23, scope: !4898)
!4903 = !DILocation(line: 1805, column: 3, scope: !4898)
!4904 = !DILocation(line: 1805, column: 8, scope: !4898)
!4905 = !DILocation(line: 1805, column: 15, scope: !4898)
!4906 = !DILocation(line: 1806, column: 17, scope: !4898)
!4907 = !DILocation(line: 1806, column: 22, scope: !4898)
!4908 = !DILocation(line: 1806, column: 24, scope: !4898)
!4909 = !DILocation(line: 1806, column: 29, scope: !4898)
!4910 = !DILocation(line: 1806, column: 23, scope: !4898)
!4911 = !DILocation(line: 1806, column: 3, scope: !4898)
!4912 = !DILocation(line: 1806, column: 8, scope: !4898)
!4913 = !DILocation(line: 1806, column: 15, scope: !4898)
!4914 = !DILocation(line: 1807, column: 17, scope: !4898)
!4915 = !DILocation(line: 1807, column: 22, scope: !4898)
!4916 = !DILocation(line: 1807, column: 24, scope: !4898)
!4917 = !DILocation(line: 1807, column: 29, scope: !4898)
!4918 = !DILocation(line: 1807, column: 23, scope: !4898)
!4919 = !DILocation(line: 1807, column: 3, scope: !4898)
!4920 = !DILocation(line: 1807, column: 8, scope: !4898)
!4921 = !DILocation(line: 1807, column: 15, scope: !4898)
!4922 = !DILocation(line: 1811, column: 8, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1811, column: 6)
!4924 = !DILocation(line: 1811, column: 17, scope: !4923)
!4925 = !DILocation(line: 1811, column: 38, scope: !4923)
!4926 = !DILocation(line: 1811, column: 42, scope: !4923)
!4927 = !DILocation(line: 1811, column: 47, scope: !4923)
!4928 = !DILocation(line: 1811, column: 60, scope: !4923)
!4929 = !DILocation(line: 1811, column: 117, scope: !4923)
!4930 = !DILocation(line: 1812, column: 7, scope: !4923)
!4931 = !DILocation(line: 1812, column: 16, scope: !4923)
!4932 = !DILocation(line: 1811, column: 6, scope: !4524)
!4933 = !DILocation(line: 1813, column: 15, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !1, line: 1813, column: 7)
!4935 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 1812, column: 73)
!4936 = !DILocation(line: 1813, column: 8, scope: !4934)
!4937 = !DILocation(line: 1813, column: 20, scope: !4934)
!4938 = !DILocation(line: 1813, column: 67, scope: !4934)
!4939 = !DILocation(line: 1813, column: 75, scope: !4934)
!4940 = !DILocation(line: 1813, column: 80, scope: !4934)
!4941 = !DILocation(line: 1813, column: 7, scope: !4935)
!4942 = !DILocation(line: 1815, column: 8, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !1, line: 1815, column: 8)
!4944 = distinct !DILexicalBlock(scope: !4934, file: !1, line: 1813, column: 93)
!4945 = !DILocation(line: 1815, column: 13, scope: !4943)
!4946 = !DILocation(line: 1815, column: 19, scope: !4943)
!4947 = !DILocation(line: 1815, column: 22, scope: !4943)
!4948 = !DILocation(line: 1815, column: 27, scope: !4943)
!4949 = !DILocation(line: 1815, column: 8, scope: !4944)
!4950 = !DILocation(line: 1816, column: 23, scope: !4943)
!4951 = !DILocation(line: 1816, column: 5, scope: !4943)
!4952 = !DILocation(line: 1817, column: 15, scope: !4944)
!4953 = !DILocation(line: 1817, column: 20, scope: !4944)
!4954 = !DILocation(line: 1817, column: 24, scope: !4944)
!4955 = !DILocation(line: 1817, column: 29, scope: !4944)
!4956 = !DILocation(line: 1817, column: 4, scope: !4944)
!4957 = !DILocation(line: 1818, column: 15, scope: !4944)
!4958 = !DILocation(line: 1818, column: 20, scope: !4944)
!4959 = !DILocation(line: 1818, column: 25, scope: !4944)
!4960 = !DILocation(line: 1818, column: 30, scope: !4944)
!4961 = !DILocation(line: 1818, column: 4, scope: !4944)
!4962 = !DILocation(line: 1819, column: 15, scope: !4944)
!4963 = !DILocation(line: 1819, column: 20, scope: !4944)
!4964 = !DILocation(line: 1819, column: 30, scope: !4944)
!4965 = !DILocation(line: 1819, column: 35, scope: !4944)
!4966 = !DILocation(line: 1819, column: 4, scope: !4944)
!4967 = !DILocation(line: 1820, column: 3, scope: !4944)
!4968 = !DILocation(line: 1822, column: 28, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4934, file: !1, line: 1821, column: 8)
!4970 = !DILocation(line: 1822, column: 33, scope: !4969)
!4971 = !DILocation(line: 1822, column: 38, scope: !4969)
!4972 = !DILocation(line: 1822, column: 16, scope: !4969)
!4973 = !DILocation(line: 1822, column: 21, scope: !4969)
!4974 = !DILocation(line: 1822, column: 26, scope: !4969)
!4975 = !DILocation(line: 1822, column: 4, scope: !4969)
!4976 = !DILocation(line: 1822, column: 9, scope: !4969)
!4977 = !DILocation(line: 1822, column: 14, scope: !4969)
!4978 = !DILocation(line: 1823, column: 12, scope: !4969)
!4979 = !DILocation(line: 1823, column: 17, scope: !4969)
!4980 = !DILocation(line: 1823, column: 4, scope: !4969)
!4981 = !DILocation(line: 1824, column: 12, scope: !4969)
!4982 = !DILocation(line: 1824, column: 17, scope: !4969)
!4983 = !DILocation(line: 1824, column: 4, scope: !4969)
!4984 = !DILocation(line: 1826, column: 2, scope: !4935)
!4985 = !DILocation(line: 1829, column: 6, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1829, column: 6)
!4987 = !DILocation(line: 1829, column: 15, scope: !4986)
!4988 = !DILocation(line: 1829, column: 6, scope: !4524)
!4989 = !DILocalVariable(name: "go", scope: !4990, file: !1, line: 1830, type: !2339)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !1, line: 1829, column: 85)
!4991 = !DILocation(line: 1830, column: 16, scope: !4990)
!4992 = !DILocalVariable(name: "lights", scope: !4990, file: !1, line: 1831, type: !863)
!4993 = !DILocation(line: 1831, column: 13, scope: !4990)
!4994 = !DILocalVariable(name: "lar", scope: !4990, file: !1, line: 1832, type: !2352)
!4995 = !DILocation(line: 1832, column: 12, scope: !4990)
!4996 = !DILocation(line: 1834, column: 22, scope: !4990)
!4997 = !DILocation(line: 1834, column: 11, scope: !4990)
!4998 = !DILocation(line: 1834, column: 9, scope: !4990)
!4999 = !DILocation(line: 1835, column: 11, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1835, column: 3)
!5001 = !DILocation(line: 1835, column: 19, scope: !5000)
!5002 = !DILocation(line: 1835, column: 10, scope: !5000)
!5003 = !DILocation(line: 1835, column: 8, scope: !5000)
!5004 = !DILocation(line: 1835, column: 26, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5000, file: !1, line: 1835, column: 3)
!5006 = !DILocation(line: 1835, column: 3, scope: !5000)
!5007 = !DILocation(line: 1836, column: 9, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !1, line: 1835, column: 44)
!5009 = !DILocation(line: 1836, column: 13, scope: !5008)
!5010 = !DILocation(line: 1836, column: 7, scope: !5008)
!5011 = !DILocation(line: 1837, column: 8, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5008, file: !1, line: 1837, column: 8)
!5013 = !DILocation(line: 1837, column: 11, scope: !5012)
!5014 = !DILocation(line: 1837, column: 8, scope: !5008)
!5015 = !DILocation(line: 1837, column: 19, scope: !5012)
!5016 = !DILocation(line: 1840, column: 8, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5008, file: !1, line: 1840, column: 8)
!5018 = !DILocation(line: 1840, column: 13, scope: !5017)
!5019 = !DILocation(line: 1840, column: 17, scope: !5017)
!5020 = !DILocation(line: 1840, column: 8, scope: !5008)
!5021 = !DILocation(line: 1840, column: 33, scope: !5017)
!5022 = !DILocation(line: 1843, column: 8, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5008, file: !1, line: 1843, column: 8)
!5024 = !DILocation(line: 1843, column: 13, scope: !5023)
!5025 = !DILocation(line: 1843, column: 18, scope: !5023)
!5026 = !DILocation(line: 1843, column: 8, scope: !5008)
!5027 = !DILocation(line: 1843, column: 35, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 1843, column: 34)
!5029 = !DILocation(line: 1843, column: 40, scope: !5028)
!5030 = !DILocation(line: 1843, column: 46, scope: !5028)
!5031 = !DILocation(line: 1843, column: 51, scope: !5028)
!5032 = !DILocation(line: 1843, column: 56, scope: !5028)
!5033 = !DILocation(line: 1843, column: 44, scope: !5028)
!5034 = !DILocation(line: 1843, column: 60, scope: !5028)
!5035 = !DILocation(line: 1843, column: 34, scope: !5023)
!5036 = !DILocation(line: 1843, column: 65, scope: !5028)
!5037 = !DILocation(line: 1843, column: 62, scope: !5028)
!5038 = !DILocation(line: 1844, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5008, file: !1, line: 1844, column: 8)
!5040 = !DILocation(line: 1844, column: 14, scope: !5039)
!5041 = !DILocation(line: 1844, column: 20, scope: !5039)
!5042 = !DILocation(line: 1844, column: 25, scope: !5039)
!5043 = !DILocation(line: 1844, column: 18, scope: !5039)
!5044 = !DILocation(line: 1844, column: 29, scope: !5039)
!5045 = !DILocation(line: 1844, column: 8, scope: !5008)
!5046 = !DILocation(line: 1844, column: 34, scope: !5039)
!5047 = !DILocation(line: 1847, column: 20, scope: !5008)
!5048 = !DILocation(line: 1847, column: 25, scope: !5008)
!5049 = !DILocation(line: 1847, column: 30, scope: !5008)
!5050 = !DILocation(line: 1847, column: 35, scope: !5008)
!5051 = !DILocation(line: 1847, column: 4, scope: !5008)
!5052 = !DILocation(line: 1848, column: 3, scope: !5008)
!5053 = !DILocation(line: 1835, column: 34, scope: !5005)
!5054 = !DILocation(line: 1835, column: 38, scope: !5005)
!5055 = !DILocation(line: 1835, column: 32, scope: !5005)
!5056 = !DILocation(line: 1835, column: 3, scope: !5005)
!5057 = distinct !{!5057, !5006, !5058}
!5058 = !DILocation(line: 1848, column: 3, scope: !5000)
!5059 = !DILocation(line: 1852, column: 7, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1852, column: 7)
!5061 = !DILocation(line: 1852, column: 12, scope: !5060)
!5062 = !DILocation(line: 1852, column: 20, scope: !5060)
!5063 = !DILocation(line: 1852, column: 7, scope: !4990)
!5064 = !DILocation(line: 1852, column: 25, scope: !5060)
!5065 = !DILocation(line: 1852, column: 30, scope: !5060)
!5066 = !DILocation(line: 1852, column: 38, scope: !5060)
!5067 = !DILocation(line: 1853, column: 7, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1853, column: 7)
!5069 = !DILocation(line: 1853, column: 12, scope: !5068)
!5070 = !DILocation(line: 1853, column: 20, scope: !5068)
!5071 = !DILocation(line: 1853, column: 7, scope: !4990)
!5072 = !DILocation(line: 1853, column: 25, scope: !5068)
!5073 = !DILocation(line: 1853, column: 30, scope: !5068)
!5074 = !DILocation(line: 1853, column: 38, scope: !5068)
!5075 = !DILocation(line: 1854, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1854, column: 7)
!5077 = !DILocation(line: 1854, column: 12, scope: !5076)
!5078 = !DILocation(line: 1854, column: 20, scope: !5076)
!5079 = !DILocation(line: 1854, column: 7, scope: !4990)
!5080 = !DILocation(line: 1854, column: 25, scope: !5076)
!5081 = !DILocation(line: 1854, column: 30, scope: !5076)
!5082 = !DILocation(line: 1854, column: 38, scope: !5076)
!5083 = !DILocation(line: 1856, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1856, column: 7)
!5085 = !DILocation(line: 1856, column: 12, scope: !5084)
!5086 = !DILocation(line: 1856, column: 20, scope: !5084)
!5087 = !DILocation(line: 1856, column: 7, scope: !4990)
!5088 = !DILocation(line: 1856, column: 25, scope: !5084)
!5089 = !DILocation(line: 1856, column: 30, scope: !5084)
!5090 = !DILocation(line: 1856, column: 38, scope: !5084)
!5091 = !DILocation(line: 1857, column: 7, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1857, column: 7)
!5093 = !DILocation(line: 1857, column: 12, scope: !5092)
!5094 = !DILocation(line: 1857, column: 20, scope: !5092)
!5095 = !DILocation(line: 1857, column: 7, scope: !4990)
!5096 = !DILocation(line: 1857, column: 25, scope: !5092)
!5097 = !DILocation(line: 1857, column: 30, scope: !5092)
!5098 = !DILocation(line: 1857, column: 38, scope: !5092)
!5099 = !DILocation(line: 1858, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1858, column: 7)
!5101 = !DILocation(line: 1858, column: 12, scope: !5100)
!5102 = !DILocation(line: 1858, column: 20, scope: !5100)
!5103 = !DILocation(line: 1858, column: 7, scope: !4990)
!5104 = !DILocation(line: 1858, column: 25, scope: !5100)
!5105 = !DILocation(line: 1858, column: 30, scope: !5100)
!5106 = !DILocation(line: 1858, column: 38, scope: !5100)
!5107 = !DILocation(line: 1860, column: 7, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1860, column: 7)
!5109 = !DILocation(line: 1860, column: 11, scope: !5108)
!5110 = !DILocation(line: 1860, column: 20, scope: !5108)
!5111 = !DILocation(line: 1860, column: 7, scope: !4990)
!5112 = !DILocalVariable(name: "sss", scope: !5113, file: !1, line: 1861, type: !212)
!5113 = distinct !DILexicalBlock(scope: !5108, file: !1, line: 1860, column: 35)
!5114 = !DILocation(line: 1861, column: 10, scope: !5113)
!5115 = !DILocalVariable(name: "col", scope: !5113, file: !1, line: 1861, type: !212)
!5116 = !DILocation(line: 1861, column: 18, scope: !5113)
!5117 = !DILocalVariable(name: "invalpha", scope: !5113, file: !1, line: 1861, type: !147)
!5118 = !DILocation(line: 1861, column: 26, scope: !5113)
!5119 = !DILocalVariable(name: "texfac", scope: !5113, file: !1, line: 1861, type: !147)
!5120 = !DILocation(line: 1861, column: 36, scope: !5113)
!5121 = !DILocation(line: 1861, column: 44, scope: !5113)
!5122 = !DILocation(line: 1861, column: 48, scope: !5113)
!5123 = !DILocation(line: 1864, column: 23, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5113, file: !1, line: 1864, column: 8)
!5125 = !DILocation(line: 1864, column: 27, scope: !5124)
!5126 = !DILocation(line: 1864, column: 32, scope: !5124)
!5127 = !DILocation(line: 1864, column: 36, scope: !5124)
!5128 = !DILocation(line: 1864, column: 8, scope: !5124)
!5129 = !DILocation(line: 1864, column: 8, scope: !5113)
!5130 = !DILocation(line: 1865, column: 16, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5124, file: !1, line: 1864, column: 42)
!5132 = !DILocation(line: 1865, column: 21, scope: !5131)
!5133 = !DILocation(line: 1865, column: 28, scope: !5131)
!5134 = !DILocation(line: 1865, column: 15, scope: !5131)
!5135 = !DILocation(line: 1865, column: 49, scope: !5131)
!5136 = !DILocation(line: 1865, column: 54, scope: !5131)
!5137 = !DILocation(line: 1865, column: 48, scope: !5131)
!5138 = !DILocation(line: 1865, column: 13, scope: !5131)
!5139 = !DILocation(line: 1867, column: 9, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5131, file: !1, line: 1867, column: 9)
!5141 = !DILocation(line: 1867, column: 15, scope: !5140)
!5142 = !DILocation(line: 1867, column: 9, scope: !5131)
!5143 = !DILocation(line: 1868, column: 17, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1867, column: 23)
!5145 = !DILocation(line: 1868, column: 22, scope: !5144)
!5146 = !DILocation(line: 1868, column: 27, scope: !5144)
!5147 = !DILocation(line: 1868, column: 6, scope: !5144)
!5148 = !DILocation(line: 1869, column: 16, scope: !5144)
!5149 = !DILocation(line: 1869, column: 21, scope: !5144)
!5150 = !DILocation(line: 1869, column: 6, scope: !5144)
!5151 = !DILocation(line: 1870, column: 5, scope: !5144)
!5152 = !DILocation(line: 1871, column: 14, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1871, column: 14)
!5154 = !DILocation(line: 1871, column: 20, scope: !5153)
!5155 = !DILocation(line: 1871, column: 14, scope: !5140)
!5156 = !DILocation(line: 1872, column: 22, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 1871, column: 28)
!5158 = !DILocation(line: 1872, column: 28, scope: !5157)
!5159 = !DILocation(line: 1872, column: 14, scope: !5157)
!5160 = !DILocation(line: 1872, column: 20, scope: !5157)
!5161 = !DILocation(line: 1872, column: 6, scope: !5157)
!5162 = !DILocation(line: 1872, column: 12, scope: !5157)
!5163 = !DILocation(line: 1873, column: 16, scope: !5157)
!5164 = !DILocation(line: 1873, column: 21, scope: !5157)
!5165 = !DILocation(line: 1873, column: 6, scope: !5157)
!5166 = !DILocation(line: 1874, column: 5, scope: !5157)
!5167 = !DILocation(line: 1876, column: 17, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 1875, column: 10)
!5169 = !DILocation(line: 1876, column: 22, scope: !5168)
!5170 = !DILocation(line: 1876, column: 27, scope: !5168)
!5171 = !DILocation(line: 1876, column: 6, scope: !5168)
!5172 = !DILocation(line: 1877, column: 16, scope: !5168)
!5173 = !DILocation(line: 1877, column: 21, scope: !5168)
!5174 = !DILocation(line: 1877, column: 6, scope: !5168)
!5175 = !DILocation(line: 1878, column: 25, scope: !5168)
!5176 = !DILocation(line: 1878, column: 18, scope: !5168)
!5177 = !DILocation(line: 1878, column: 45, scope: !5168)
!5178 = !DILocation(line: 1878, column: 44, scope: !5168)
!5179 = !DILocation(line: 1878, column: 40, scope: !5168)
!5180 = !DILocation(line: 1878, column: 14, scope: !5168)
!5181 = !DILocation(line: 1878, column: 6, scope: !5168)
!5182 = !DILocation(line: 1878, column: 12, scope: !5168)
!5183 = !DILocation(line: 1879, column: 25, scope: !5168)
!5184 = !DILocation(line: 1879, column: 18, scope: !5168)
!5185 = !DILocation(line: 1879, column: 45, scope: !5168)
!5186 = !DILocation(line: 1879, column: 44, scope: !5168)
!5187 = !DILocation(line: 1879, column: 40, scope: !5168)
!5188 = !DILocation(line: 1879, column: 14, scope: !5168)
!5189 = !DILocation(line: 1879, column: 6, scope: !5168)
!5190 = !DILocation(line: 1879, column: 12, scope: !5168)
!5191 = !DILocation(line: 1880, column: 25, scope: !5168)
!5192 = !DILocation(line: 1880, column: 18, scope: !5168)
!5193 = !DILocation(line: 1880, column: 45, scope: !5168)
!5194 = !DILocation(line: 1880, column: 44, scope: !5168)
!5195 = !DILocation(line: 1880, column: 40, scope: !5168)
!5196 = !DILocation(line: 1880, column: 14, scope: !5168)
!5197 = !DILocation(line: 1880, column: 6, scope: !5168)
!5198 = !DILocation(line: 1880, column: 12, scope: !5168)
!5199 = !DILocation(line: 1883, column: 19, scope: !5131)
!5200 = !DILocation(line: 1883, column: 26, scope: !5131)
!5201 = !DILocation(line: 1883, column: 25, scope: !5131)
!5202 = !DILocation(line: 1883, column: 5, scope: !5131)
!5203 = !DILocation(line: 1883, column: 10, scope: !5131)
!5204 = !DILocation(line: 1883, column: 17, scope: !5131)
!5205 = !DILocation(line: 1884, column: 19, scope: !5131)
!5206 = !DILocation(line: 1884, column: 26, scope: !5131)
!5207 = !DILocation(line: 1884, column: 25, scope: !5131)
!5208 = !DILocation(line: 1884, column: 5, scope: !5131)
!5209 = !DILocation(line: 1884, column: 10, scope: !5131)
!5210 = !DILocation(line: 1884, column: 17, scope: !5131)
!5211 = !DILocation(line: 1885, column: 19, scope: !5131)
!5212 = !DILocation(line: 1885, column: 26, scope: !5131)
!5213 = !DILocation(line: 1885, column: 25, scope: !5131)
!5214 = !DILocation(line: 1885, column: 5, scope: !5131)
!5215 = !DILocation(line: 1885, column: 10, scope: !5131)
!5216 = !DILocation(line: 1885, column: 17, scope: !5131)
!5217 = !DILocation(line: 1887, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5131, file: !1, line: 1887, column: 9)
!5219 = !DILocation(line: 1887, column: 14, scope: !5218)
!5220 = !DILocation(line: 1887, column: 27, scope: !5218)
!5221 = !DILocation(line: 1887, column: 9, scope: !5131)
!5222 = !DILocation(line: 1888, column: 20, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !1, line: 1887, column: 46)
!5224 = !DILocation(line: 1888, column: 25, scope: !5223)
!5225 = !DILocation(line: 1888, column: 6, scope: !5223)
!5226 = !DILocation(line: 1888, column: 11, scope: !5223)
!5227 = !DILocation(line: 1888, column: 18, scope: !5223)
!5228 = !DILocation(line: 1889, column: 20, scope: !5223)
!5229 = !DILocation(line: 1889, column: 25, scope: !5223)
!5230 = !DILocation(line: 1889, column: 6, scope: !5223)
!5231 = !DILocation(line: 1889, column: 11, scope: !5223)
!5232 = !DILocation(line: 1889, column: 18, scope: !5223)
!5233 = !DILocation(line: 1890, column: 20, scope: !5223)
!5234 = !DILocation(line: 1890, column: 25, scope: !5223)
!5235 = !DILocation(line: 1890, column: 6, scope: !5223)
!5236 = !DILocation(line: 1890, column: 11, scope: !5223)
!5237 = !DILocation(line: 1890, column: 18, scope: !5223)
!5238 = !DILocation(line: 1891, column: 5, scope: !5223)
!5239 = !DILocation(line: 1892, column: 4, scope: !5131)
!5240 = !DILocation(line: 1893, column: 3, scope: !5113)
!5241 = !DILocation(line: 1895, column: 7, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1895, column: 7)
!5243 = !DILocation(line: 1895, column: 12, scope: !5242)
!5244 = !DILocation(line: 1895, column: 25, scope: !5242)
!5245 = !DILocation(line: 1895, column: 7, scope: !4990)
!5246 = !DILocation(line: 1896, column: 15, scope: !5242)
!5247 = !DILocation(line: 1896, column: 20, scope: !5242)
!5248 = !DILocation(line: 1896, column: 30, scope: !5242)
!5249 = !DILocation(line: 1896, column: 35, scope: !5242)
!5250 = !DILocation(line: 1896, column: 4, scope: !5242)
!5251 = !DILocation(line: 1898, column: 15, scope: !5242)
!5252 = !DILocation(line: 1898, column: 20, scope: !5242)
!5253 = !DILocation(line: 1898, column: 30, scope: !5242)
!5254 = !DILocation(line: 1898, column: 35, scope: !5242)
!5255 = !DILocation(line: 1898, column: 4, scope: !5242)
!5256 = !DILocation(line: 1900, column: 14, scope: !4990)
!5257 = !DILocation(line: 1900, column: 19, scope: !4990)
!5258 = !DILocation(line: 1900, column: 29, scope: !4990)
!5259 = !DILocation(line: 1900, column: 34, scope: !4990)
!5260 = !DILocation(line: 1900, column: 3, scope: !4990)
!5261 = !DILocation(line: 1904, column: 7, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1904, column: 7)
!5263 = !DILocation(line: 1904, column: 16, scope: !5262)
!5264 = !DILocation(line: 1904, column: 34, scope: !5262)
!5265 = !DILocation(line: 1904, column: 39, scope: !5262)
!5266 = !DILocation(line: 1904, column: 44, scope: !5262)
!5267 = !DILocation(line: 1904, column: 51, scope: !5262)
!5268 = !DILocation(line: 1904, column: 58, scope: !5262)
!5269 = !DILocation(line: 1904, column: 61, scope: !5262)
!5270 = !DILocation(line: 1904, column: 66, scope: !5262)
!5271 = !DILocation(line: 1904, column: 73, scope: !5262)
!5272 = !DILocation(line: 1904, column: 80, scope: !5262)
!5273 = !DILocation(line: 1904, column: 83, scope: !5262)
!5274 = !DILocation(line: 1904, column: 88, scope: !5262)
!5275 = !DILocation(line: 1904, column: 95, scope: !5262)
!5276 = !DILocation(line: 1904, column: 7, scope: !4990)
!5277 = !DILocation(line: 1905, column: 8, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !1, line: 1905, column: 8)
!5279 = distinct !DILexicalBlock(scope: !5262, file: !1, line: 1904, column: 104)
!5280 = !DILocation(line: 1905, column: 13, scope: !5278)
!5281 = !DILocation(line: 1905, column: 20, scope: !5278)
!5282 = !DILocation(line: 1905, column: 8, scope: !5279)
!5283 = !DILocation(line: 1905, column: 42, scope: !5278)
!5284 = !DILocation(line: 1905, column: 47, scope: !5278)
!5285 = !DILocation(line: 1905, column: 55, scope: !5278)
!5286 = !DILocation(line: 1905, column: 60, scope: !5278)
!5287 = !DILocation(line: 1905, column: 54, scope: !5278)
!5288 = !DILocation(line: 1905, column: 28, scope: !5278)
!5289 = !DILocation(line: 1905, column: 33, scope: !5278)
!5290 = !DILocation(line: 1905, column: 40, scope: !5278)
!5291 = !DILocation(line: 1907, column: 13, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5278, file: !1, line: 1907, column: 13)
!5293 = !DILocation(line: 1907, column: 18, scope: !5292)
!5294 = !DILocation(line: 1907, column: 25, scope: !5292)
!5295 = !DILocation(line: 1907, column: 13, scope: !5278)
!5296 = !DILocation(line: 1907, column: 47, scope: !5292)
!5297 = !DILocation(line: 1907, column: 52, scope: !5292)
!5298 = !DILocation(line: 1907, column: 33, scope: !5292)
!5299 = !DILocation(line: 1907, column: 38, scope: !5292)
!5300 = !DILocation(line: 1907, column: 45, scope: !5292)
!5301 = !DILocation(line: 1909, column: 8, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5279, file: !1, line: 1909, column: 8)
!5303 = !DILocation(line: 1909, column: 13, scope: !5302)
!5304 = !DILocation(line: 1909, column: 20, scope: !5302)
!5305 = !DILocation(line: 1909, column: 8, scope: !5279)
!5306 = !DILocation(line: 1909, column: 42, scope: !5302)
!5307 = !DILocation(line: 1909, column: 47, scope: !5302)
!5308 = !DILocation(line: 1909, column: 55, scope: !5302)
!5309 = !DILocation(line: 1909, column: 60, scope: !5302)
!5310 = !DILocation(line: 1909, column: 54, scope: !5302)
!5311 = !DILocation(line: 1909, column: 28, scope: !5302)
!5312 = !DILocation(line: 1909, column: 33, scope: !5302)
!5313 = !DILocation(line: 1909, column: 40, scope: !5302)
!5314 = !DILocation(line: 1910, column: 13, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5302, file: !1, line: 1910, column: 13)
!5316 = !DILocation(line: 1910, column: 18, scope: !5315)
!5317 = !DILocation(line: 1910, column: 25, scope: !5315)
!5318 = !DILocation(line: 1910, column: 13, scope: !5302)
!5319 = !DILocation(line: 1910, column: 47, scope: !5315)
!5320 = !DILocation(line: 1910, column: 52, scope: !5315)
!5321 = !DILocation(line: 1910, column: 33, scope: !5315)
!5322 = !DILocation(line: 1910, column: 38, scope: !5315)
!5323 = !DILocation(line: 1910, column: 45, scope: !5315)
!5324 = !DILocation(line: 1912, column: 8, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5279, file: !1, line: 1912, column: 8)
!5326 = !DILocation(line: 1912, column: 13, scope: !5325)
!5327 = !DILocation(line: 1912, column: 20, scope: !5325)
!5328 = !DILocation(line: 1912, column: 8, scope: !5279)
!5329 = !DILocation(line: 1912, column: 42, scope: !5325)
!5330 = !DILocation(line: 1912, column: 47, scope: !5325)
!5331 = !DILocation(line: 1912, column: 55, scope: !5325)
!5332 = !DILocation(line: 1912, column: 60, scope: !5325)
!5333 = !DILocation(line: 1912, column: 54, scope: !5325)
!5334 = !DILocation(line: 1912, column: 28, scope: !5325)
!5335 = !DILocation(line: 1912, column: 33, scope: !5325)
!5336 = !DILocation(line: 1912, column: 40, scope: !5325)
!5337 = !DILocation(line: 1913, column: 13, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1913, column: 13)
!5339 = !DILocation(line: 1913, column: 18, scope: !5338)
!5340 = !DILocation(line: 1913, column: 25, scope: !5338)
!5341 = !DILocation(line: 1913, column: 13, scope: !5325)
!5342 = !DILocation(line: 1913, column: 47, scope: !5338)
!5343 = !DILocation(line: 1913, column: 52, scope: !5338)
!5344 = !DILocation(line: 1913, column: 33, scope: !5338)
!5345 = !DILocation(line: 1913, column: 38, scope: !5338)
!5346 = !DILocation(line: 1913, column: 45, scope: !5338)
!5347 = !DILocation(line: 1914, column: 3, scope: !5279)
!5348 = !DILocation(line: 1917, column: 15, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 1917, column: 7)
!5350 = !DILocation(line: 1917, column: 18, scope: !5349)
!5351 = !DILocation(line: 1917, column: 25, scope: !5349)
!5352 = !DILocation(line: 1917, column: 35, scope: !5349)
!5353 = !DILocation(line: 1917, column: 40, scope: !5349)
!5354 = !DILocation(line: 1917, column: 48, scope: !5349)
!5355 = !DILocation(line: 1917, column: 54, scope: !5349)
!5356 = !DILocation(line: 1917, column: 52, scope: !5349)
!5357 = !DILocation(line: 1917, column: 7, scope: !4990)
!5358 = !DILocation(line: 1918, column: 26, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5349, file: !1, line: 1917, column: 66)
!5360 = !DILocation(line: 1918, column: 31, scope: !5359)
!5361 = !DILocation(line: 1918, column: 4, scope: !5359)
!5362 = !DILocation(line: 1919, column: 26, scope: !5359)
!5363 = !DILocation(line: 1919, column: 31, scope: !5359)
!5364 = !DILocation(line: 1919, column: 4, scope: !5359)
!5365 = !DILocation(line: 1920, column: 3, scope: !5359)
!5366 = !DILocation(line: 1921, column: 2, scope: !4990)
!5367 = !DILocation(line: 1924, column: 6, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1924, column: 6)
!5369 = !DILocation(line: 1924, column: 15, scope: !5368)
!5370 = !DILocation(line: 1924, column: 6, scope: !4524)
!5371 = !DILocation(line: 1925, column: 8, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !1, line: 1925, column: 7)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !1, line: 1924, column: 38)
!5374 = !DILocation(line: 1925, column: 12, scope: !5372)
!5375 = !DILocation(line: 1925, column: 23, scope: !5372)
!5376 = !DILocation(line: 1925, column: 31, scope: !5372)
!5377 = !DILocation(line: 1925, column: 35, scope: !5372)
!5378 = !DILocation(line: 1925, column: 40, scope: !5372)
!5379 = !DILocation(line: 1925, column: 45, scope: !5372)
!5380 = !DILocation(line: 1925, column: 7, scope: !5373)
!5381 = !DILocation(line: 1926, column: 29, scope: !5372)
!5382 = !DILocation(line: 1926, column: 34, scope: !5372)
!5383 = !DILocation(line: 1926, column: 40, scope: !5372)
!5384 = !DILocation(line: 1926, column: 45, scope: !5372)
!5385 = !DILocation(line: 1926, column: 49, scope: !5372)
!5386 = !DILocation(line: 1926, column: 53, scope: !5372)
!5387 = !DILocation(line: 1926, column: 68, scope: !5372)
!5388 = !DILocation(line: 1926, column: 72, scope: !5372)
!5389 = !DILocation(line: 1926, column: 17, scope: !5372)
!5390 = !DILocation(line: 1926, column: 4, scope: !5372)
!5391 = !DILocation(line: 1926, column: 9, scope: !5372)
!5392 = !DILocation(line: 1926, column: 14, scope: !5372)
!5393 = !DILocation(line: 1929, column: 7, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5373, file: !1, line: 1929, column: 7)
!5395 = !DILocation(line: 1929, column: 12, scope: !5394)
!5396 = !DILocation(line: 1929, column: 17, scope: !5394)
!5397 = !DILocation(line: 1929, column: 29, scope: !5394)
!5398 = !DILocation(line: 1929, column: 33, scope: !5394)
!5399 = !DILocation(line: 1929, column: 38, scope: !5394)
!5400 = !DILocation(line: 1929, column: 43, scope: !5394)
!5401 = !DILocation(line: 1929, column: 7, scope: !5373)
!5402 = !DILocation(line: 1930, column: 8, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !1, line: 1930, column: 8)
!5404 = distinct !DILexicalBlock(scope: !5394, file: !1, line: 1929, column: 73)
!5405 = !DILocation(line: 1930, column: 13, scope: !5403)
!5406 = !DILocation(line: 1930, column: 20, scope: !5403)
!5407 = !DILocation(line: 1930, column: 8, scope: !5404)
!5408 = !DILocalVariable(name: "t", scope: !5409, file: !1, line: 1931, type: !147)
!5409 = distinct !DILexicalBlock(scope: !5403, file: !1, line: 1930, column: 28)
!5410 = !DILocation(line: 1931, column: 11, scope: !5409)
!5411 = !DILocation(line: 1931, column: 23, scope: !5409)
!5412 = !DILocation(line: 1931, column: 28, scope: !5409)
!5413 = !DILocation(line: 1931, column: 37, scope: !5409)
!5414 = !DILocation(line: 1931, column: 42, scope: !5409)
!5415 = !DILocation(line: 1931, column: 51, scope: !5409)
!5416 = !DILocation(line: 1931, column: 56, scope: !5409)
!5417 = !DILocation(line: 1931, column: 15, scope: !5409)
!5418 = !DILocation(line: 1932, column: 10, scope: !5409)
!5419 = !DILocation(line: 1932, column: 15, scope: !5409)
!5420 = !DILocation(line: 1932, column: 7, scope: !5409)
!5421 = !DILocation(line: 1933, column: 9, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5409, file: !1, line: 1933, column: 9)
!5423 = !DILocation(line: 1933, column: 10, scope: !5422)
!5424 = !DILocation(line: 1933, column: 9, scope: !5409)
!5425 = !DILocation(line: 1933, column: 18, scope: !5422)
!5426 = !DILocation(line: 1933, column: 17, scope: !5422)
!5427 = !DILocation(line: 1934, column: 23, scope: !5409)
!5428 = !DILocation(line: 1934, column: 22, scope: !5409)
!5429 = !DILocation(line: 1934, column: 26, scope: !5409)
!5430 = !DILocation(line: 1934, column: 31, scope: !5409)
!5431 = !DILocation(line: 1934, column: 25, scope: !5409)
!5432 = !DILocation(line: 1934, column: 37, scope: !5409)
!5433 = !DILocation(line: 1934, column: 36, scope: !5409)
!5434 = !DILocation(line: 1934, column: 5, scope: !5409)
!5435 = !DILocation(line: 1934, column: 10, scope: !5409)
!5436 = !DILocation(line: 1934, column: 15, scope: !5409)
!5437 = !DILocation(line: 1935, column: 4, scope: !5409)
!5438 = !DILocation(line: 1936, column: 3, scope: !5404)
!5439 = !DILocation(line: 1937, column: 2, scope: !5373)
!5440 = !DILocation(line: 1938, column: 14, scope: !4524)
!5441 = !DILocation(line: 1938, column: 19, scope: !4524)
!5442 = !DILocation(line: 1938, column: 2, scope: !4524)
!5443 = !DILocation(line: 1938, column: 7, scope: !4524)
!5444 = !DILocation(line: 1938, column: 12, scope: !4524)
!5445 = !DILocation(line: 1941, column: 8, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1941, column: 6)
!5447 = !DILocation(line: 1941, column: 12, scope: !5446)
!5448 = !DILocation(line: 1941, column: 21, scope: !5446)
!5449 = !DILocation(line: 1941, column: 36, scope: !5446)
!5450 = !DILocation(line: 1941, column: 58, scope: !5446)
!5451 = !DILocation(line: 1941, column: 40, scope: !5446)
!5452 = !DILocation(line: 1941, column: 6, scope: !4524)
!5453 = !DILocation(line: 1942, column: 11, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 1942, column: 7)
!5455 = distinct !DILexicalBlock(scope: !5446, file: !1, line: 1941, column: 63)
!5456 = !DILocation(line: 1942, column: 16, scope: !5454)
!5457 = !DILocation(line: 1942, column: 7, scope: !5455)
!5458 = !DILocation(line: 1944, column: 15, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 1944, column: 8)
!5460 = distinct !DILexicalBlock(scope: !5454, file: !1, line: 1942, column: 28)
!5461 = !DILocation(line: 1944, column: 8, scope: !5459)
!5462 = !DILocation(line: 1944, column: 20, scope: !5459)
!5463 = !DILocation(line: 1944, column: 8, scope: !5460)
!5464 = !DILocation(line: 1945, column: 9, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !1, line: 1945, column: 9)
!5466 = !DILocation(line: 1945, column: 14, scope: !5465)
!5467 = !DILocation(line: 1945, column: 27, scope: !5465)
!5468 = !DILocation(line: 1945, column: 9, scope: !5459)
!5469 = !DILocation(line: 1946, column: 30, scope: !5465)
!5470 = !DILocation(line: 1946, column: 35, scope: !5465)
!5471 = !DILocation(line: 1946, column: 6, scope: !5465)
!5472 = !DILocation(line: 1945, column: 29, scope: !5465)
!5473 = !DILocation(line: 1948, column: 15, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 1948, column: 8)
!5475 = !DILocation(line: 1948, column: 8, scope: !5474)
!5476 = !DILocation(line: 1948, column: 20, scope: !5474)
!5477 = !DILocation(line: 1948, column: 8, scope: !5460)
!5478 = !DILocation(line: 1949, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5474, file: !1, line: 1949, column: 9)
!5480 = !DILocation(line: 1949, column: 14, scope: !5479)
!5481 = !DILocation(line: 1949, column: 27, scope: !5479)
!5482 = !DILocation(line: 1949, column: 9, scope: !5474)
!5483 = !DILocation(line: 1950, column: 33, scope: !5479)
!5484 = !DILocation(line: 1950, column: 38, scope: !5479)
!5485 = !DILocation(line: 1950, column: 6, scope: !5479)
!5486 = !DILocation(line: 1949, column: 29, scope: !5479)
!5487 = !DILocation(line: 1952, column: 15, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 1952, column: 8)
!5489 = !DILocation(line: 1952, column: 8, scope: !5488)
!5490 = !DILocation(line: 1952, column: 20, scope: !5488)
!5491 = !DILocation(line: 1952, column: 8, scope: !5460)
!5492 = !DILocation(line: 1953, column: 9, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5488, file: !1, line: 1953, column: 9)
!5494 = !DILocation(line: 1953, column: 14, scope: !5493)
!5495 = !DILocation(line: 1953, column: 27, scope: !5493)
!5496 = !DILocation(line: 1953, column: 9, scope: !5488)
!5497 = !DILocation(line: 1954, column: 30, scope: !5493)
!5498 = !DILocation(line: 1954, column: 35, scope: !5493)
!5499 = !DILocation(line: 1954, column: 6, scope: !5493)
!5500 = !DILocation(line: 1953, column: 29, scope: !5493)
!5501 = !DILocation(line: 1955, column: 3, scope: !5460)
!5502 = !DILocation(line: 1957, column: 22, scope: !5455)
!5503 = !DILocation(line: 1957, column: 27, scope: !5455)
!5504 = !DILocation(line: 1957, column: 3, scope: !5455)
!5505 = !DILocation(line: 1957, column: 8, scope: !5455)
!5506 = !DILocation(line: 1957, column: 19, scope: !5455)
!5507 = !DILocation(line: 1958, column: 22, scope: !5455)
!5508 = !DILocation(line: 1958, column: 27, scope: !5455)
!5509 = !DILocation(line: 1958, column: 3, scope: !5455)
!5510 = !DILocation(line: 1958, column: 8, scope: !5455)
!5511 = !DILocation(line: 1958, column: 19, scope: !5455)
!5512 = !DILocation(line: 1959, column: 22, scope: !5455)
!5513 = !DILocation(line: 1959, column: 27, scope: !5455)
!5514 = !DILocation(line: 1959, column: 3, scope: !5455)
!5515 = !DILocation(line: 1959, column: 8, scope: !5455)
!5516 = !DILocation(line: 1959, column: 19, scope: !5455)
!5517 = !DILocation(line: 1961, column: 7, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 1961, column: 7)
!5519 = !DILocation(line: 1961, column: 11, scope: !5518)
!5520 = !DILocation(line: 1961, column: 16, scope: !5518)
!5521 = !DILocation(line: 1961, column: 7, scope: !5455)
!5522 = !DILocation(line: 1961, column: 51, scope: !5518)
!5523 = !DILocation(line: 1961, column: 56, scope: !5518)
!5524 = !DILocation(line: 1961, column: 66, scope: !5518)
!5525 = !DILocation(line: 1961, column: 31, scope: !5518)
!5526 = !DILocation(line: 1962, column: 2, scope: !5455)
!5527 = !DILocation(line: 1964, column: 6, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1964, column: 6)
!5529 = !DILocation(line: 1964, column: 10, scope: !5528)
!5530 = !DILocation(line: 1964, column: 15, scope: !5528)
!5531 = !DILocation(line: 1964, column: 6, scope: !4524)
!5532 = !DILocation(line: 1964, column: 48, scope: !5528)
!5533 = !DILocation(line: 1964, column: 53, scope: !5528)
!5534 = !DILocation(line: 1964, column: 59, scope: !5528)
!5535 = !DILocation(line: 1964, column: 31, scope: !5528)
!5536 = !DILocation(line: 1967, column: 6, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1967, column: 6)
!5538 = !DILocation(line: 1967, column: 11, scope: !5537)
!5539 = !DILocation(line: 1967, column: 20, scope: !5537)
!5540 = !DILocation(line: 1967, column: 6, scope: !4524)
!5541 = !DILocalVariable(name: "result", scope: !5542, file: !1, line: 1968, type: !212)
!5542 = distinct !DILexicalBlock(scope: !5537, file: !1, line: 1967, column: 28)
!5543 = !DILocation(line: 1968, column: 9, scope: !5542)
!5544 = !DILocation(line: 1970, column: 14, scope: !5542)
!5545 = !DILocation(line: 1970, column: 19, scope: !5542)
!5546 = !DILocation(line: 1970, column: 24, scope: !5542)
!5547 = !DILocation(line: 1970, column: 29, scope: !5542)
!5548 = !DILocation(line: 1970, column: 23, scope: !5542)
!5549 = !DILocation(line: 1970, column: 49, scope: !5542)
!5550 = !DILocation(line: 1970, column: 54, scope: !5542)
!5551 = !DILocation(line: 1970, column: 59, scope: !5542)
!5552 = !DILocation(line: 1970, column: 64, scope: !5542)
!5553 = !DILocation(line: 1970, column: 58, scope: !5542)
!5554 = !DILocation(line: 1970, column: 47, scope: !5542)
!5555 = !DILocation(line: 1970, column: 75, scope: !5542)
!5556 = !DILocation(line: 1970, column: 80, scope: !5542)
!5557 = !DILocation(line: 1970, column: 74, scope: !5542)
!5558 = !DILocation(line: 1970, column: 39, scope: !5542)
!5559 = !DILocation(line: 1970, column: 3, scope: !5542)
!5560 = !DILocation(line: 1970, column: 12, scope: !5542)
!5561 = !DILocation(line: 1971, column: 14, scope: !5542)
!5562 = !DILocation(line: 1971, column: 19, scope: !5542)
!5563 = !DILocation(line: 1971, column: 24, scope: !5542)
!5564 = !DILocation(line: 1971, column: 29, scope: !5542)
!5565 = !DILocation(line: 1971, column: 23, scope: !5542)
!5566 = !DILocation(line: 1971, column: 49, scope: !5542)
!5567 = !DILocation(line: 1971, column: 54, scope: !5542)
!5568 = !DILocation(line: 1971, column: 59, scope: !5542)
!5569 = !DILocation(line: 1971, column: 64, scope: !5542)
!5570 = !DILocation(line: 1971, column: 58, scope: !5542)
!5571 = !DILocation(line: 1971, column: 47, scope: !5542)
!5572 = !DILocation(line: 1971, column: 75, scope: !5542)
!5573 = !DILocation(line: 1971, column: 80, scope: !5542)
!5574 = !DILocation(line: 1971, column: 74, scope: !5542)
!5575 = !DILocation(line: 1971, column: 39, scope: !5542)
!5576 = !DILocation(line: 1971, column: 3, scope: !5542)
!5577 = !DILocation(line: 1971, column: 12, scope: !5542)
!5578 = !DILocation(line: 1972, column: 14, scope: !5542)
!5579 = !DILocation(line: 1972, column: 19, scope: !5542)
!5580 = !DILocation(line: 1972, column: 24, scope: !5542)
!5581 = !DILocation(line: 1972, column: 29, scope: !5542)
!5582 = !DILocation(line: 1972, column: 23, scope: !5542)
!5583 = !DILocation(line: 1972, column: 49, scope: !5542)
!5584 = !DILocation(line: 1972, column: 54, scope: !5542)
!5585 = !DILocation(line: 1972, column: 59, scope: !5542)
!5586 = !DILocation(line: 1972, column: 64, scope: !5542)
!5587 = !DILocation(line: 1972, column: 58, scope: !5542)
!5588 = !DILocation(line: 1972, column: 47, scope: !5542)
!5589 = !DILocation(line: 1972, column: 75, scope: !5542)
!5590 = !DILocation(line: 1972, column: 80, scope: !5542)
!5591 = !DILocation(line: 1972, column: 74, scope: !5542)
!5592 = !DILocation(line: 1972, column: 39, scope: !5542)
!5593 = !DILocation(line: 1972, column: 3, scope: !5542)
!5594 = !DILocation(line: 1972, column: 12, scope: !5542)
!5595 = !DILocation(line: 1974, column: 7, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 1974, column: 7)
!5597 = !DILocation(line: 1974, column: 16, scope: !5596)
!5598 = !DILocation(line: 1974, column: 7, scope: !5542)
!5599 = !DILocation(line: 1975, column: 16, scope: !5596)
!5600 = !DILocation(line: 1975, column: 21, scope: !5596)
!5601 = !DILocation(line: 1975, column: 27, scope: !5596)
!5602 = !DILocation(line: 1975, column: 35, scope: !5596)
!5603 = !DILocation(line: 1975, column: 40, scope: !5596)
!5604 = !DILocation(line: 1975, column: 4, scope: !5596)
!5605 = !DILocation(line: 1977, column: 7, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 1977, column: 7)
!5607 = !DILocation(line: 1977, column: 12, scope: !5606)
!5608 = !DILocation(line: 1977, column: 25, scope: !5606)
!5609 = !DILocation(line: 1977, column: 7, scope: !5542)
!5610 = !DILocation(line: 1978, column: 15, scope: !5606)
!5611 = !DILocation(line: 1978, column: 20, scope: !5606)
!5612 = !DILocation(line: 1978, column: 30, scope: !5606)
!5613 = !DILocation(line: 1978, column: 4, scope: !5606)
!5614 = !DILocation(line: 1980, column: 2, scope: !5542)
!5615 = !DILocation(line: 1983, column: 6, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1983, column: 6)
!5617 = !DILocation(line: 1983, column: 11, scope: !5616)
!5618 = !DILocation(line: 1983, column: 24, scope: !5616)
!5619 = !DILocation(line: 1983, column: 6, scope: !4524)
!5620 = !DILocation(line: 1984, column: 13, scope: !5616)
!5621 = !DILocation(line: 1984, column: 18, scope: !5616)
!5622 = !DILocation(line: 1984, column: 28, scope: !5616)
!5623 = !DILocation(line: 1984, column: 33, scope: !5616)
!5624 = !DILocation(line: 1984, column: 3, scope: !5616)
!5625 = !DILocation(line: 1985, column: 6, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1985, column: 6)
!5627 = !DILocation(line: 1985, column: 11, scope: !5626)
!5628 = !DILocation(line: 1985, column: 24, scope: !5626)
!5629 = !DILocation(line: 1985, column: 6, scope: !4524)
!5630 = !DILocation(line: 1986, column: 13, scope: !5626)
!5631 = !DILocation(line: 1986, column: 18, scope: !5626)
!5632 = !DILocation(line: 1986, column: 28, scope: !5626)
!5633 = !DILocation(line: 1986, column: 33, scope: !5626)
!5634 = !DILocation(line: 1986, column: 3, scope: !5626)
!5635 = !DILocation(line: 1989, column: 7, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1989, column: 6)
!5637 = !DILocation(line: 1989, column: 11, scope: !5636)
!5638 = !DILocation(line: 1989, column: 22, scope: !5636)
!5639 = !DILocation(line: 1989, column: 36, scope: !5636)
!5640 = !DILocation(line: 1989, column: 39, scope: !5636)
!5641 = !DILocation(line: 1989, column: 44, scope: !5636)
!5642 = !DILocation(line: 1989, column: 49, scope: !5636)
!5643 = !DILocation(line: 1989, column: 6, scope: !4524)
!5644 = !DILocation(line: 1990, column: 9, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !1, line: 1990, column: 7)
!5646 = distinct !DILexicalBlock(scope: !5636, file: !1, line: 1989, column: 53)
!5647 = !DILocation(line: 1990, column: 13, scope: !5645)
!5648 = !DILocation(line: 1990, column: 22, scope: !5645)
!5649 = !DILocation(line: 1990, column: 37, scope: !5645)
!5650 = !DILocation(line: 1990, column: 59, scope: !5645)
!5651 = !DILocation(line: 1990, column: 41, scope: !5645)
!5652 = !DILocation(line: 1990, column: 7, scope: !5646)
!5653 = !DILocalVariable(name: "obcol", scope: !5654, file: !1, line: 1991, type: !511)
!5654 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 1990, column: 64)
!5655 = !DILocation(line: 1991, column: 10, scope: !5654)
!5656 = !DILocation(line: 1993, column: 15, scope: !5654)
!5657 = !DILocation(line: 1993, column: 22, scope: !5654)
!5658 = !DILocation(line: 1993, column: 27, scope: !5654)
!5659 = !DILocation(line: 1993, column: 32, scope: !5654)
!5660 = !DILocation(line: 1993, column: 36, scope: !5654)
!5661 = !DILocation(line: 1993, column: 4, scope: !5654)
!5662 = !DILocation(line: 1994, column: 4, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !1, line: 1994, column: 4)
!5664 = distinct !DILexicalBlock(scope: !5654, file: !1, line: 1994, column: 4)
!5665 = !DILocation(line: 1994, column: 4, scope: !5664)
!5666 = !DILocation(line: 1994, column: 4, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5663, file: !1, line: 1994, column: 4)
!5668 = !DILocation(line: 1996, column: 24, scope: !5654)
!5669 = !DILocation(line: 1996, column: 4, scope: !5654)
!5670 = !DILocation(line: 1996, column: 9, scope: !5654)
!5671 = !DILocation(line: 1996, column: 21, scope: !5654)
!5672 = !DILocation(line: 1997, column: 24, scope: !5654)
!5673 = !DILocation(line: 1997, column: 4, scope: !5654)
!5674 = !DILocation(line: 1997, column: 9, scope: !5654)
!5675 = !DILocation(line: 1997, column: 21, scope: !5654)
!5676 = !DILocation(line: 1998, column: 24, scope: !5654)
!5677 = !DILocation(line: 1998, column: 4, scope: !5654)
!5678 = !DILocation(line: 1998, column: 9, scope: !5654)
!5679 = !DILocation(line: 1998, column: 21, scope: !5654)
!5680 = !DILocation(line: 1999, column: 8, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5654, file: !1, line: 1999, column: 8)
!5682 = !DILocation(line: 1999, column: 13, scope: !5681)
!5683 = !DILocation(line: 1999, column: 18, scope: !5681)
!5684 = !DILocation(line: 1999, column: 8, scope: !5654)
!5685 = !DILocation(line: 1999, column: 45, scope: !5681)
!5686 = !DILocation(line: 1999, column: 31, scope: !5681)
!5687 = !DILocation(line: 1999, column: 36, scope: !5681)
!5688 = !DILocation(line: 1999, column: 42, scope: !5681)
!5689 = !DILocation(line: 2000, column: 3, scope: !5654)
!5690 = !DILocation(line: 2001, column: 2, scope: !5646)
!5691 = !DILocation(line: 2003, column: 20, scope: !4524)
!5692 = !DILocation(line: 2003, column: 25, scope: !4524)
!5693 = !DILocation(line: 2003, column: 2, scope: !4524)
!5694 = !DILocation(line: 2003, column: 7, scope: !4524)
!5695 = !DILocation(line: 2003, column: 18, scope: !4524)
!5696 = !DILocation(line: 2004, column: 1, scope: !4524)
!5697 = distinct !DISubprogram(name: "shade_lamp_loop_only_shadow", scope: !1, file: !1, line: 1575, type: !3682, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!5698 = !DILocalVariable(name: "shi", arg: 1, scope: !5697, file: !1, line: 1575, type: !1829)
!5699 = !DILocation(line: 1575, column: 53, scope: !5697)
!5700 = !DILocalVariable(name: "shr", arg: 2, scope: !5697, file: !1, line: 1575, type: !3684)
!5701 = !DILocation(line: 1575, column: 71, scope: !5697)
!5702 = !DILocation(line: 1578, column: 10, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5697, file: !1, line: 1578, column: 6)
!5704 = !DILocation(line: 1578, column: 15, scope: !5703)
!5705 = !DILocation(line: 1578, column: 6, scope: !5697)
!5706 = !DILocalVariable(name: "lights", scope: !5707, file: !1, line: 1579, type: !863)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !1, line: 1578, column: 27)
!5708 = !DILocation(line: 1579, column: 13, scope: !5707)
!5709 = !DILocalVariable(name: "lar", scope: !5707, file: !1, line: 1580, type: !2352)
!5710 = !DILocation(line: 1580, column: 12, scope: !5707)
!5711 = !DILocalVariable(name: "go", scope: !5707, file: !1, line: 1581, type: !2339)
!5712 = !DILocation(line: 1581, column: 16, scope: !5707)
!5713 = !DILocalVariable(name: "inpr", scope: !5707, file: !1, line: 1582, type: !147)
!5714 = !DILocation(line: 1582, column: 9, scope: !5707)
!5715 = !DILocalVariable(name: "lv", scope: !5707, file: !1, line: 1582, type: !212)
!5716 = !DILocation(line: 1582, column: 15, scope: !5707)
!5717 = !DILocalVariable(name: "shadfac", scope: !5707, file: !1, line: 1583, type: !511)
!5718 = !DILocation(line: 1583, column: 22, scope: !5707)
!5719 = !DILocalVariable(name: "ir", scope: !5707, file: !1, line: 1584, type: !147)
!5720 = !DILocation(line: 1584, column: 9, scope: !5707)
!5721 = !DILocalVariable(name: "accum", scope: !5707, file: !1, line: 1584, type: !147)
!5722 = !DILocation(line: 1584, column: 13, scope: !5707)
!5723 = !DILocalVariable(name: "visifac", scope: !5707, file: !1, line: 1584, type: !147)
!5724 = !DILocation(line: 1584, column: 20, scope: !5707)
!5725 = !DILocalVariable(name: "lampdist", scope: !5707, file: !1, line: 1584, type: !147)
!5726 = !DILocation(line: 1584, column: 29, scope: !5707)
!5727 = !DILocalVariable(name: "shaded", scope: !5707, file: !1, line: 1585, type: !147)
!5728 = !DILocation(line: 1585, column: 9, scope: !5707)
!5729 = !DILocalVariable(name: "lightness", scope: !5707, file: !1, line: 1585, type: !147)
!5730 = !DILocation(line: 1585, column: 24, scope: !5707)
!5731 = !DILocation(line: 1589, column: 12, scope: !5707)
!5732 = !DILocation(line: 1589, column: 8, scope: !5707)
!5733 = !DILocation(line: 1591, column: 22, scope: !5707)
!5734 = !DILocation(line: 1591, column: 11, scope: !5707)
!5735 = !DILocation(line: 1591, column: 9, scope: !5707)
!5736 = !DILocation(line: 1592, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5707, file: !1, line: 1592, column: 3)
!5738 = !DILocation(line: 1592, column: 19, scope: !5737)
!5739 = !DILocation(line: 1592, column: 10, scope: !5737)
!5740 = !DILocation(line: 1592, column: 8, scope: !5737)
!5741 = !DILocation(line: 1592, column: 26, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !1, line: 1592, column: 3)
!5743 = !DILocation(line: 1592, column: 3, scope: !5737)
!5744 = !DILocation(line: 1593, column: 9, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 1592, column: 44)
!5746 = !DILocation(line: 1593, column: 13, scope: !5745)
!5747 = !DILocation(line: 1593, column: 7, scope: !5745)
!5748 = !DILocation(line: 1594, column: 8, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 1594, column: 8)
!5750 = !DILocation(line: 1594, column: 11, scope: !5749)
!5751 = !DILocation(line: 1594, column: 8, scope: !5745)
!5752 = !DILocation(line: 1594, column: 19, scope: !5749)
!5753 = !DILocation(line: 1597, column: 8, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 1597, column: 8)
!5755 = !DILocation(line: 1597, column: 13, scope: !5754)
!5756 = !DILocation(line: 1597, column: 17, scope: !5754)
!5757 = !DILocation(line: 1597, column: 8, scope: !5745)
!5758 = !DILocation(line: 1597, column: 33, scope: !5754)
!5759 = !DILocation(line: 1599, column: 8, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 1599, column: 8)
!5761 = !DILocation(line: 1599, column: 13, scope: !5760)
!5762 = !DILocation(line: 1599, column: 18, scope: !5760)
!5763 = !DILocation(line: 1599, column: 8, scope: !5745)
!5764 = !DILocation(line: 1599, column: 35, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 1599, column: 34)
!5766 = !DILocation(line: 1599, column: 40, scope: !5765)
!5767 = !DILocation(line: 1599, column: 46, scope: !5765)
!5768 = !DILocation(line: 1599, column: 51, scope: !5765)
!5769 = !DILocation(line: 1599, column: 56, scope: !5765)
!5770 = !DILocation(line: 1599, column: 44, scope: !5765)
!5771 = !DILocation(line: 1599, column: 60, scope: !5765)
!5772 = !DILocation(line: 1599, column: 34, scope: !5760)
!5773 = !DILocation(line: 1599, column: 65, scope: !5765)
!5774 = !DILocation(line: 1599, column: 62, scope: !5765)
!5775 = !DILocation(line: 1600, column: 9, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 1600, column: 8)
!5777 = !DILocation(line: 1600, column: 14, scope: !5776)
!5778 = !DILocation(line: 1600, column: 20, scope: !5776)
!5779 = !DILocation(line: 1600, column: 25, scope: !5776)
!5780 = !DILocation(line: 1600, column: 18, scope: !5776)
!5781 = !DILocation(line: 1600, column: 29, scope: !5776)
!5782 = !DILocation(line: 1600, column: 8, scope: !5745)
!5783 = !DILocation(line: 1600, column: 34, scope: !5776)
!5784 = !DILocation(line: 1602, column: 8, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 1602, column: 8)
!5786 = !DILocation(line: 1602, column: 13, scope: !5785)
!5787 = !DILocation(line: 1602, column: 17, scope: !5785)
!5788 = !DILocation(line: 1602, column: 21, scope: !5785)
!5789 = !DILocation(line: 1602, column: 26, scope: !5785)
!5790 = !DILocation(line: 1602, column: 31, scope: !5785)
!5791 = !DILocation(line: 1602, column: 8, scope: !5745)
!5792 = !DILocation(line: 1603, column: 34, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5785, file: !1, line: 1602, column: 47)
!5794 = !DILocation(line: 1603, column: 39, scope: !5793)
!5795 = !DILocation(line: 1603, column: 44, scope: !5793)
!5796 = !DILocation(line: 1603, column: 48, scope: !5793)
!5797 = !DILocation(line: 1603, column: 14, scope: !5793)
!5798 = !DILocation(line: 1603, column: 12, scope: !5793)
!5799 = !DILocation(line: 1604, column: 7, scope: !5793)
!5800 = !DILocation(line: 1606, column: 9, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 1606, column: 9)
!5802 = !DILocation(line: 1606, column: 17, scope: !5801)
!5803 = !DILocation(line: 1606, column: 9, scope: !5793)
!5804 = !DILocation(line: 1607, column: 10, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !1, line: 1607, column: 10)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 1606, column: 26)
!5807 = !DILocation(line: 1607, column: 15, scope: !5805)
!5808 = !DILocation(line: 1607, column: 20, scope: !5805)
!5809 = !DILocation(line: 1607, column: 36, scope: !5805)
!5810 = !DILocation(line: 1607, column: 10, scope: !5806)
!5811 = !DILocation(line: 1608, column: 12, scope: !5805)
!5812 = !DILocation(line: 1608, column: 7, scope: !5805)
!5813 = !DILocation(line: 1610, column: 6, scope: !5806)
!5814 = !DILocation(line: 1612, column: 20, scope: !5793)
!5815 = !DILocation(line: 1612, column: 25, scope: !5793)
!5816 = !DILocation(line: 1612, column: 29, scope: !5793)
!5817 = !DILocation(line: 1612, column: 11, scope: !5793)
!5818 = !DILocation(line: 1612, column: 9, scope: !5793)
!5819 = !DILocation(line: 1613, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 1613, column: 9)
!5821 = !DILocation(line: 1613, column: 14, scope: !5820)
!5822 = !DILocation(line: 1613, column: 9, scope: !5793)
!5823 = !DILocation(line: 1614, column: 10, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !1, line: 1614, column: 10)
!5825 = distinct !DILexicalBlock(scope: !5820, file: !1, line: 1613, column: 23)
!5826 = !DILocation(line: 1614, column: 15, scope: !5824)
!5827 = !DILocation(line: 1614, column: 20, scope: !5824)
!5828 = !DILocation(line: 1614, column: 36, scope: !5824)
!5829 = !DILocation(line: 1614, column: 10, scope: !5825)
!5830 = !DILocation(line: 1615, column: 12, scope: !5824)
!5831 = !DILocation(line: 1615, column: 7, scope: !5824)
!5832 = !DILocation(line: 1617, column: 6, scope: !5825)
!5833 = !DILocation(line: 1620, column: 21, scope: !5793)
!5834 = !DILocation(line: 1620, column: 26, scope: !5793)
!5835 = !DILocation(line: 1620, column: 31, scope: !5793)
!5836 = !DILocation(line: 1620, column: 37, scope: !5793)
!5837 = !DILocation(line: 1620, column: 46, scope: !5793)
!5838 = !DILocation(line: 1620, column: 51, scope: !5793)
!5839 = !DILocation(line: 1620, column: 5, scope: !5793)
!5840 = !DILocation(line: 1622, column: 9, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 1622, column: 9)
!5842 = !DILocation(line: 1622, column: 14, scope: !5841)
!5843 = !DILocation(line: 1622, column: 19, scope: !5841)
!5844 = !DILocation(line: 1622, column: 35, scope: !5841)
!5845 = !DILocation(line: 1622, column: 9, scope: !5793)
!5846 = !DILocation(line: 1624, column: 20, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5841, file: !1, line: 1622, column: 49)
!5848 = !DILocation(line: 1624, column: 19, scope: !5847)
!5849 = !DILocation(line: 1624, column: 32, scope: !5847)
!5850 = !DILocation(line: 1624, column: 58, scope: !5847)
!5851 = !DILocation(line: 1624, column: 41, scope: !5847)
!5852 = !DILocation(line: 1624, column: 40, scope: !5847)
!5853 = !DILocation(line: 1624, column: 67, scope: !5847)
!5854 = !DILocation(line: 1624, column: 66, scope: !5847)
!5855 = !DILocation(line: 1624, column: 29, scope: !5847)
!5856 = !DILocation(line: 1624, column: 11, scope: !5847)
!5857 = !DILocation(line: 1625, column: 5, scope: !5847)
!5858 = !DILocation(line: 1627, column: 33, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5841, file: !1, line: 1626, column: 10)
!5860 = !DILocation(line: 1627, column: 16, scope: !5859)
!5861 = !DILocation(line: 1627, column: 42, scope: !5859)
!5862 = !DILocation(line: 1627, column: 41, scope: !5859)
!5863 = !DILocation(line: 1627, column: 55, scope: !5859)
!5864 = !DILocation(line: 1627, column: 53, scope: !5859)
!5865 = !DILocation(line: 1627, column: 65, scope: !5859)
!5866 = !DILocation(line: 1627, column: 70, scope: !5859)
!5867 = !DILocation(line: 1627, column: 63, scope: !5859)
!5868 = !DILocation(line: 1627, column: 13, scope: !5859)
!5869 = !DILocation(line: 1629, column: 10, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 1629, column: 10)
!5871 = !DILocation(line: 1629, column: 15, scope: !5870)
!5872 = !DILocation(line: 1629, column: 20, scope: !5870)
!5873 = !DILocation(line: 1629, column: 36, scope: !5870)
!5874 = !DILocation(line: 1629, column: 10, scope: !5859)
!5875 = !DILocation(line: 1630, column: 20, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5870, file: !1, line: 1629, column: 53)
!5877 = !DILocation(line: 1630, column: 30, scope: !5876)
!5878 = !DILocation(line: 1630, column: 35, scope: !5876)
!5879 = !DILocation(line: 1630, column: 28, scope: !5876)
!5880 = !DILocation(line: 1630, column: 17, scope: !5876)
!5881 = !DILocation(line: 1631, column: 6, scope: !5876)
!5882 = !DILocation(line: 1633, column: 4, scope: !5793)
!5883 = !DILocation(line: 1634, column: 3, scope: !5745)
!5884 = !DILocation(line: 1592, column: 34, scope: !5742)
!5885 = !DILocation(line: 1592, column: 38, scope: !5742)
!5886 = !DILocation(line: 1592, column: 32, scope: !5742)
!5887 = !DILocation(line: 1592, column: 3, scope: !5742)
!5888 = distinct !{!5888, !5743, !5889}
!5889 = !DILocation(line: 1634, column: 3, scope: !5737)
!5890 = !DILocation(line: 1637, column: 7, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5707, file: !1, line: 1637, column: 7)
!5892 = !DILocation(line: 1637, column: 9, scope: !5891)
!5893 = !DILocation(line: 1637, column: 7, scope: !5707)
!5894 = !DILocation(line: 1638, column: 8, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 1638, column: 8)
!5896 = distinct !DILexicalBlock(scope: !5891, file: !1, line: 1637, column: 16)
!5897 = !DILocation(line: 1638, column: 13, scope: !5895)
!5898 = !DILocation(line: 1638, column: 18, scope: !5895)
!5899 = !DILocation(line: 1638, column: 34, scope: !5895)
!5900 = !DILocation(line: 1638, column: 8, scope: !5896)
!5901 = !DILocation(line: 1639, column: 20, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5895, file: !1, line: 1638, column: 48)
!5903 = !DILocation(line: 1639, column: 26, scope: !5902)
!5904 = !DILocation(line: 1639, column: 25, scope: !5902)
!5905 = !DILocation(line: 1639, column: 18, scope: !5902)
!5906 = !DILocation(line: 1639, column: 11, scope: !5902)
!5907 = !DILocation(line: 1640, column: 4, scope: !5902)
!5908 = !DILocation(line: 1642, column: 9, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 1642, column: 9)
!5910 = distinct !DILexicalBlock(scope: !5895, file: !1, line: 1641, column: 9)
!5911 = !DILocation(line: 1642, column: 14, scope: !5909)
!5912 = !DILocation(line: 1642, column: 19, scope: !5909)
!5913 = !DILocation(line: 1642, column: 35, scope: !5909)
!5914 = !DILocation(line: 1642, column: 9, scope: !5910)
!5915 = !DILocation(line: 1643, column: 10, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !1, line: 1643, column: 10)
!5917 = distinct !DILexicalBlock(scope: !5909, file: !1, line: 1642, column: 52)
!5918 = !DILocation(line: 1643, column: 20, scope: !5916)
!5919 = !DILocation(line: 1643, column: 10, scope: !5917)
!5920 = !DILocation(line: 1645, column: 16, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5916, file: !1, line: 1643, column: 28)
!5922 = !DILocation(line: 1645, column: 28, scope: !5921)
!5923 = !DILocation(line: 1645, column: 26, scope: !5921)
!5924 = !DILocation(line: 1645, column: 39, scope: !5921)
!5925 = !DILocation(line: 1645, column: 36, scope: !5921)
!5926 = !DILocation(line: 1645, column: 13, scope: !5921)
!5927 = !DILocation(line: 1646, column: 6, scope: !5921)
!5928 = !DILocation(line: 1648, column: 13, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5916, file: !1, line: 1647, column: 11)
!5930 = !DILocation(line: 1650, column: 5, scope: !5917)
!5931 = !DILocation(line: 1653, column: 21, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5909, file: !1, line: 1651, column: 10)
!5933 = !DILocation(line: 1653, column: 19, scope: !5932)
!5934 = !DILocation(line: 1653, column: 12, scope: !5932)
!5935 = !DILocation(line: 1657, column: 17, scope: !5896)
!5936 = !DILocation(line: 1657, column: 22, scope: !5896)
!5937 = !DILocation(line: 1657, column: 30, scope: !5896)
!5938 = !DILocation(line: 1657, column: 28, scope: !5896)
!5939 = !DILocation(line: 1657, column: 4, scope: !5896)
!5940 = !DILocation(line: 1657, column: 9, scope: !5896)
!5941 = !DILocation(line: 1657, column: 14, scope: !5896)
!5942 = !DILocation(line: 1658, column: 8, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 1658, column: 8)
!5944 = !DILocation(line: 1658, column: 13, scope: !5943)
!5945 = !DILocation(line: 1658, column: 18, scope: !5943)
!5946 = !DILocation(line: 1658, column: 8, scope: !5896)
!5947 = !DILocation(line: 1658, column: 25, scope: !5943)
!5948 = !DILocation(line: 1658, column: 30, scope: !5943)
!5949 = !DILocation(line: 1658, column: 35, scope: !5943)
!5950 = !DILocation(line: 1659, column: 3, scope: !5896)
!5951 = !DILocation(line: 1662, column: 8, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 1662, column: 8)
!5953 = distinct !DILexicalBlock(scope: !5891, file: !1, line: 1660, column: 8)
!5954 = !DILocation(line: 1662, column: 13, scope: !5952)
!5955 = !DILocation(line: 1662, column: 18, scope: !5952)
!5956 = !DILocation(line: 1662, column: 34, scope: !5952)
!5957 = !DILocation(line: 1662, column: 8, scope: !5953)
!5958 = !DILocation(line: 1662, column: 62, scope: !5952)
!5959 = !DILocation(line: 1662, column: 67, scope: !5952)
!5960 = !DILocation(line: 1662, column: 51, scope: !5952)
!5961 = !DILocation(line: 1662, column: 56, scope: !5952)
!5962 = !DILocation(line: 1662, column: 61, scope: !5952)
!5963 = !DILocation(line: 1663, column: 9, scope: !5952)
!5964 = !DILocation(line: 1663, column: 14, scope: !5952)
!5965 = !DILocation(line: 1663, column: 19, scope: !5952)
!5966 = !DILocation(line: 1665, column: 2, scope: !5707)
!5967 = !DILocation(line: 1668, column: 14, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5697, file: !1, line: 1668, column: 6)
!5969 = !DILocation(line: 1668, column: 7, scope: !5968)
!5970 = !DILocation(line: 1668, column: 19, scope: !5968)
!5971 = !DILocation(line: 1668, column: 48, scope: !5968)
!5972 = !DILocation(line: 1668, column: 51, scope: !5968)
!5973 = !DILocation(line: 1668, column: 56, scope: !5968)
!5974 = !DILocation(line: 1668, column: 59, scope: !5968)
!5975 = !DILocation(line: 1668, column: 6, scope: !5697)
!5976 = !DILocalVariable(name: "f", scope: !5977, file: !1, line: 1669, type: !147)
!5977 = distinct !DILexicalBlock(scope: !5968, file: !1, line: 1668, column: 67)
!5978 = !DILocation(line: 1669, column: 9, scope: !5977)
!5979 = !DILocation(line: 1671, column: 14, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 1671, column: 7)
!5981 = !DILocation(line: 1671, column: 7, scope: !5980)
!5982 = !DILocation(line: 1671, column: 19, scope: !5980)
!5983 = !DILocation(line: 1671, column: 7, scope: !5977)
!5984 = !DILocation(line: 1672, column: 14, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5980, file: !1, line: 1671, column: 33)
!5986 = !DILocation(line: 1672, column: 23, scope: !5985)
!5987 = !DILocation(line: 1672, column: 28, scope: !5985)
!5988 = !DILocation(line: 1672, column: 22, scope: !5985)
!5989 = !DILocation(line: 1672, column: 5, scope: !5985)
!5990 = !DILocation(line: 1674, column: 15, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 1674, column: 8)
!5992 = !DILocation(line: 1674, column: 8, scope: !5991)
!5993 = !DILocation(line: 1674, column: 20, scope: !5991)
!5994 = !DILocation(line: 1674, column: 8, scope: !5985)
!5995 = !DILocation(line: 1675, column: 9, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !1, line: 1675, column: 9)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !1, line: 1674, column: 32)
!5998 = !DILocation(line: 1675, column: 14, scope: !5996)
!5999 = !DILocation(line: 1675, column: 19, scope: !5996)
!6000 = !DILocation(line: 1675, column: 35, scope: !5996)
!6001 = !DILocation(line: 1675, column: 9, scope: !5997)
!6002 = !DILocation(line: 1676, column: 9, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5996, file: !1, line: 1675, column: 49)
!6004 = !DILocation(line: 1676, column: 36, scope: !6003)
!6005 = !DILocation(line: 1676, column: 41, scope: !6003)
!6006 = !DILocation(line: 1676, column: 19, scope: !6003)
!6007 = !DILocation(line: 1676, column: 17, scope: !6003)
!6008 = !DILocation(line: 1676, column: 10, scope: !6003)
!6009 = !DILocation(line: 1676, column: 7, scope: !6003)
!6010 = !DILocation(line: 1677, column: 19, scope: !6003)
!6011 = !DILocation(line: 1677, column: 24, scope: !6003)
!6012 = !DILocation(line: 1677, column: 32, scope: !6003)
!6013 = !DILocation(line: 1677, column: 30, scope: !6003)
!6014 = !DILocation(line: 1677, column: 35, scope: !6003)
!6015 = !DILocation(line: 1677, column: 34, scope: !6003)
!6016 = !DILocation(line: 1677, column: 6, scope: !6003)
!6017 = !DILocation(line: 1677, column: 11, scope: !6003)
!6018 = !DILocation(line: 1677, column: 16, scope: !6003)
!6019 = !DILocation(line: 1678, column: 5, scope: !6003)
!6020 = !DILocation(line: 1680, column: 20, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5996, file: !1, line: 1679, column: 10)
!6022 = !DILocation(line: 1680, column: 39, scope: !6021)
!6023 = !DILocation(line: 1680, column: 44, scope: !6021)
!6024 = !DILocation(line: 1680, column: 22, scope: !6021)
!6025 = !DILocation(line: 1680, column: 21, scope: !6021)
!6026 = !DILocation(line: 1680, column: 6, scope: !6021)
!6027 = !DILocation(line: 1680, column: 11, scope: !6021)
!6028 = !DILocation(line: 1680, column: 17, scope: !6021)
!6029 = !DILocation(line: 1681, column: 10, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 1681, column: 10)
!6031 = !DILocation(line: 1681, column: 15, scope: !6030)
!6032 = !DILocation(line: 1681, column: 20, scope: !6030)
!6033 = !DILocation(line: 1681, column: 10, scope: !6021)
!6034 = !DILocation(line: 1681, column: 27, scope: !6030)
!6035 = !DILocation(line: 1681, column: 32, scope: !6030)
!6036 = !DILocation(line: 1681, column: 37, scope: !6030)
!6037 = !DILocation(line: 1683, column: 4, scope: !5997)
!6038 = !DILocation(line: 1685, column: 25, scope: !5991)
!6039 = !DILocation(line: 1685, column: 23, scope: !5991)
!6040 = !DILocation(line: 1685, column: 28, scope: !5991)
!6041 = !DILocation(line: 1685, column: 33, scope: !5991)
!6042 = !DILocation(line: 1685, column: 27, scope: !5991)
!6043 = !DILocation(line: 1685, column: 41, scope: !5991)
!6044 = !DILocation(line: 1685, column: 59, scope: !5991)
!6045 = !DILocation(line: 1685, column: 64, scope: !5991)
!6046 = !DILocation(line: 1685, column: 57, scope: !5991)
!6047 = !DILocation(line: 1685, column: 88, scope: !5991)
!6048 = !DILocation(line: 1685, column: 93, scope: !5991)
!6049 = !DILocation(line: 1685, column: 71, scope: !5991)
!6050 = !DILocation(line: 1685, column: 70, scope: !5991)
!6051 = !DILocation(line: 1685, column: 49, scope: !5991)
!6052 = !DILocation(line: 1685, column: 42, scope: !5991)
!6053 = !DILocation(line: 1685, column: 39, scope: !5991)
!6054 = !DILocation(line: 1685, column: 5, scope: !5991)
!6055 = !DILocation(line: 1685, column: 10, scope: !5991)
!6056 = !DILocation(line: 1685, column: 15, scope: !5991)
!6057 = !DILocation(line: 1686, column: 3, scope: !5985)
!6058 = !DILocation(line: 1688, column: 14, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 1688, column: 7)
!6060 = !DILocation(line: 1688, column: 7, scope: !6059)
!6061 = !DILocation(line: 1688, column: 19, scope: !6059)
!6062 = !DILocation(line: 1688, column: 7, scope: !5977)
!6063 = !DILocation(line: 1689, column: 8, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !1, line: 1689, column: 8)
!6065 = distinct !DILexicalBlock(scope: !6059, file: !1, line: 1688, column: 35)
!6066 = !DILocation(line: 1689, column: 13, scope: !6064)
!6067 = !DILocation(line: 1689, column: 18, scope: !6064)
!6068 = !DILocation(line: 1689, column: 34, scope: !6064)
!6069 = !DILocation(line: 1689, column: 8, scope: !6065)
!6070 = !DILocation(line: 1690, column: 15, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6064, file: !1, line: 1689, column: 48)
!6072 = !DILocation(line: 1690, column: 29, scope: !6071)
!6073 = !DILocation(line: 1690, column: 34, scope: !6071)
!6074 = !DILocation(line: 1690, column: 28, scope: !6071)
!6075 = !DILocation(line: 1690, column: 63, scope: !6071)
!6076 = !DILocation(line: 1690, column: 68, scope: !6071)
!6077 = !DILocation(line: 1690, column: 46, scope: !6071)
!6078 = !DILocation(line: 1690, column: 44, scope: !6071)
!6079 = !DILocation(line: 1690, column: 37, scope: !6071)
!6080 = !DILocation(line: 1690, column: 6, scope: !6071)
!6081 = !DILocation(line: 1691, column: 18, scope: !6071)
!6082 = !DILocation(line: 1691, column: 23, scope: !6071)
!6083 = !DILocation(line: 1691, column: 31, scope: !6071)
!6084 = !DILocation(line: 1691, column: 29, scope: !6071)
!6085 = !DILocation(line: 1691, column: 34, scope: !6071)
!6086 = !DILocation(line: 1691, column: 33, scope: !6071)
!6087 = !DILocation(line: 1691, column: 5, scope: !6071)
!6088 = !DILocation(line: 1691, column: 10, scope: !6071)
!6089 = !DILocation(line: 1691, column: 15, scope: !6071)
!6090 = !DILocation(line: 1692, column: 4, scope: !6071)
!6091 = !DILocation(line: 1694, column: 15, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6064, file: !1, line: 1693, column: 9)
!6093 = !DILocation(line: 1694, column: 29, scope: !6092)
!6094 = !DILocation(line: 1694, column: 34, scope: !6092)
!6095 = !DILocation(line: 1694, column: 28, scope: !6092)
!6096 = !DILocation(line: 1694, column: 6, scope: !6092)
!6097 = !DILocation(line: 1695, column: 19, scope: !6092)
!6098 = !DILocation(line: 1695, column: 38, scope: !6092)
!6099 = !DILocation(line: 1695, column: 43, scope: !6092)
!6100 = !DILocation(line: 1695, column: 21, scope: !6092)
!6101 = !DILocation(line: 1695, column: 20, scope: !6092)
!6102 = !DILocation(line: 1695, column: 5, scope: !6092)
!6103 = !DILocation(line: 1695, column: 10, scope: !6092)
!6104 = !DILocation(line: 1695, column: 16, scope: !6092)
!6105 = !DILocation(line: 1696, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6092, file: !1, line: 1696, column: 9)
!6107 = !DILocation(line: 1696, column: 14, scope: !6106)
!6108 = !DILocation(line: 1696, column: 19, scope: !6106)
!6109 = !DILocation(line: 1696, column: 9, scope: !6092)
!6110 = !DILocation(line: 1696, column: 26, scope: !6106)
!6111 = !DILocation(line: 1696, column: 31, scope: !6106)
!6112 = !DILocation(line: 1696, column: 36, scope: !6106)
!6113 = !DILocation(line: 1698, column: 3, scope: !6065)
!6114 = !DILocation(line: 1699, column: 2, scope: !5977)
!6115 = !DILocation(line: 1700, column: 1, scope: !5697)
!6116 = distinct !DISubprogram(name: "shade_one_light", scope: !1, file: !1, line: 1290, type: !6117, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{null, !2352, !1829, !3684, !5}
!6119 = !DILocalVariable(name: "lar", arg: 1, scope: !6116, file: !1, line: 1290, type: !2352)
!6120 = !DILocation(line: 1290, column: 38, scope: !6116)
!6121 = !DILocalVariable(name: "shi", arg: 2, scope: !6116, file: !1, line: 1290, type: !1829)
!6122 = !DILocation(line: 1290, column: 55, scope: !6116)
!6123 = !DILocalVariable(name: "shr", arg: 3, scope: !6116, file: !1, line: 1290, type: !3684)
!6124 = !DILocation(line: 1290, column: 73, scope: !6116)
!6125 = !DILocalVariable(name: "passflag", arg: 4, scope: !6116, file: !1, line: 1290, type: !5)
!6126 = !DILocation(line: 1290, column: 82, scope: !6116)
!6127 = !DILocalVariable(name: "ma", scope: !6116, file: !1, line: 1292, type: !3711)
!6128 = !DILocation(line: 1292, column: 12, scope: !6116)
!6129 = !DILocation(line: 1292, column: 16, scope: !6116)
!6130 = !DILocation(line: 1292, column: 21, scope: !6116)
!6131 = !DILocalVariable(name: "vlr", scope: !6116, file: !1, line: 1293, type: !6132)
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 64)
!6133 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !1838, line: 411, baseType: !1837)
!6134 = !DILocation(line: 1293, column: 11, scope: !6116)
!6135 = !DILocation(line: 1293, column: 16, scope: !6116)
!6136 = !DILocation(line: 1293, column: 21, scope: !6116)
!6137 = !DILocalVariable(name: "lv", scope: !6116, file: !1, line: 1294, type: !212)
!6138 = !DILocation(line: 1294, column: 8, scope: !6116)
!6139 = !DILocalVariable(name: "lampdist", scope: !6116, file: !1, line: 1294, type: !147)
!6140 = !DILocation(line: 1294, column: 15, scope: !6116)
!6141 = !DILocalVariable(name: "lacol", scope: !6116, file: !1, line: 1294, type: !212)
!6142 = !DILocation(line: 1294, column: 25, scope: !6116)
!6143 = !DILocalVariable(name: "shadfac", scope: !6116, file: !1, line: 1294, type: !511)
!6144 = !DILocation(line: 1294, column: 35, scope: !6116)
!6145 = !DILocalVariable(name: "lashdw", scope: !6116, file: !1, line: 1294, type: !212)
!6146 = !DILocation(line: 1294, column: 47, scope: !6116)
!6147 = !DILocalVariable(name: "i", scope: !6116, file: !1, line: 1295, type: !147)
!6148 = !DILocation(line: 1295, column: 8, scope: !6116)
!6149 = !DILocalVariable(name: "is", scope: !6116, file: !1, line: 1295, type: !147)
!6150 = !DILocation(line: 1295, column: 11, scope: !6116)
!6151 = !DILocalVariable(name: "i_noshad", scope: !6116, file: !1, line: 1295, type: !147)
!6152 = !DILocation(line: 1295, column: 15, scope: !6116)
!6153 = !DILocalVariable(name: "inp", scope: !6116, file: !1, line: 1295, type: !147)
!6154 = !DILocation(line: 1295, column: 25, scope: !6116)
!6155 = !DILocalVariable(name: "vn", scope: !6116, file: !1, line: 1295, type: !643)
!6156 = !DILocation(line: 1295, column: 31, scope: !6116)
!6157 = !DILocalVariable(name: "view", scope: !6116, file: !1, line: 1295, type: !643)
!6158 = !DILocation(line: 1295, column: 36, scope: !6116)
!6159 = !DILocalVariable(name: "vnor", scope: !6116, file: !1, line: 1295, type: !212)
!6160 = !DILocation(line: 1295, column: 42, scope: !6116)
!6161 = !DILocalVariable(name: "phongcorr", scope: !6116, file: !1, line: 1295, type: !147)
!6162 = !DILocation(line: 1295, column: 51, scope: !6116)
!6163 = !DILocalVariable(name: "visifac", scope: !6116, file: !1, line: 1296, type: !147)
!6164 = !DILocation(line: 1296, column: 8, scope: !6116)
!6165 = !DILocation(line: 1298, column: 6, scope: !6116)
!6166 = !DILocation(line: 1298, column: 11, scope: !6116)
!6167 = !DILocation(line: 1298, column: 4, scope: !6116)
!6168 = !DILocation(line: 1299, column: 8, scope: !6116)
!6169 = !DILocation(line: 1299, column: 13, scope: !6116)
!6170 = !DILocation(line: 1299, column: 6, scope: !6116)
!6171 = !DILocation(line: 1302, column: 6, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1302, column: 6)
!6173 = !DILocation(line: 1302, column: 11, scope: !6172)
!6174 = !DILocation(line: 1302, column: 18, scope: !6172)
!6175 = !DILocation(line: 1302, column: 6, scope: !6116)
!6176 = !DILocation(line: 1302, column: 27, scope: !6172)
!6177 = !DILocation(line: 1304, column: 7, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1304, column: 6)
!6179 = !DILocation(line: 1304, column: 12, scope: !6178)
!6180 = !DILocation(line: 1304, column: 17, scope: !6178)
!6181 = !DILocation(line: 1304, column: 34, scope: !6178)
!6182 = !DILocation(line: 1304, column: 40, scope: !6178)
!6183 = !DILocation(line: 1304, column: 44, scope: !6178)
!6184 = !DILocation(line: 1304, column: 49, scope: !6178)
!6185 = !DILocation(line: 1304, column: 62, scope: !6178)
!6186 = !DILocation(line: 1304, column: 71, scope: !6178)
!6187 = !DILocation(line: 1304, column: 76, scope: !6178)
!6188 = !DILocation(line: 1304, column: 6, scope: !6116)
!6189 = !DILocation(line: 1305, column: 3, scope: !6178)
!6190 = !DILocation(line: 1307, column: 8, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1307, column: 6)
!6192 = !DILocation(line: 1307, column: 13, scope: !6191)
!6193 = !DILocation(line: 1307, column: 18, scope: !6191)
!6194 = !DILocation(line: 1307, column: 32, scope: !6191)
!6195 = !DILocation(line: 1307, column: 36, scope: !6191)
!6196 = !DILocation(line: 1307, column: 41, scope: !6191)
!6197 = !DILocation(line: 1307, column: 45, scope: !6191)
!6198 = !DILocation(line: 1307, column: 50, scope: !6191)
!6199 = !DILocation(line: 1307, column: 43, scope: !6191)
!6200 = !DILocation(line: 1307, column: 54, scope: !6191)
!6201 = !DILocation(line: 1307, column: 59, scope: !6191)
!6202 = !DILocation(line: 1307, column: 52, scope: !6191)
!6203 = !DILocation(line: 1307, column: 61, scope: !6191)
!6204 = !DILocation(line: 1307, column: 6, scope: !6116)
!6205 = !DILocation(line: 1308, column: 3, scope: !6191)
!6206 = !DILocation(line: 1311, column: 31, scope: !6116)
!6207 = !DILocation(line: 1311, column: 36, scope: !6116)
!6208 = !DILocation(line: 1311, column: 41, scope: !6116)
!6209 = !DILocation(line: 1311, column: 45, scope: !6116)
!6210 = !DILocation(line: 1311, column: 11, scope: !6116)
!6211 = !DILocation(line: 1311, column: 9, scope: !6116)
!6212 = !DILocation(line: 1312, column: 6, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1312, column: 6)
!6214 = !DILocation(line: 1312, column: 13, scope: !6213)
!6215 = !DILocation(line: 1312, column: 6, scope: !6116)
!6216 = !DILocation(line: 1313, column: 3, scope: !6213)
!6217 = !DILocation(line: 1315, column: 6, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1315, column: 6)
!6219 = !DILocation(line: 1315, column: 11, scope: !6218)
!6220 = !DILocation(line: 1315, column: 15, scope: !6218)
!6221 = !DILocation(line: 1315, column: 6, scope: !6116)
!6222 = !DILocation(line: 1316, column: 7, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !1, line: 1316, column: 7)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !1, line: 1315, column: 26)
!6225 = !DILocation(line: 1316, column: 12, scope: !6223)
!6226 = !DILocation(line: 1316, column: 17, scope: !6223)
!6227 = !DILocation(line: 1316, column: 7, scope: !6224)
!6228 = !DILocation(line: 1317, column: 4, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6223, file: !1, line: 1316, column: 30)
!6230 = !DILocation(line: 1317, column: 9, scope: !6229)
!6231 = !DILocation(line: 1317, column: 15, scope: !6229)
!6232 = !DILocation(line: 1319, column: 18, scope: !6229)
!6233 = !DILocation(line: 1319, column: 27, scope: !6229)
!6234 = !DILocation(line: 1319, column: 32, scope: !6229)
!6235 = !DILocation(line: 1319, column: 38, scope: !6229)
!6236 = !DILocation(line: 1319, column: 43, scope: !6229)
!6237 = !DILocation(line: 1319, column: 37, scope: !6229)
!6238 = !DILocation(line: 1319, column: 49, scope: !6229)
!6239 = !DILocation(line: 1319, column: 54, scope: !6229)
!6240 = !DILocation(line: 1319, column: 48, scope: !6229)
!6241 = !DILocation(line: 1319, column: 63, scope: !6229)
!6242 = !DILocation(line: 1319, column: 62, scope: !6229)
!6243 = !DILocation(line: 1319, column: 24, scope: !6229)
!6244 = !DILocation(line: 1319, column: 4, scope: !6229)
!6245 = !DILocation(line: 1319, column: 9, scope: !6229)
!6246 = !DILocation(line: 1319, column: 16, scope: !6229)
!6247 = !DILocation(line: 1320, column: 18, scope: !6229)
!6248 = !DILocation(line: 1320, column: 27, scope: !6229)
!6249 = !DILocation(line: 1320, column: 32, scope: !6229)
!6250 = !DILocation(line: 1320, column: 38, scope: !6229)
!6251 = !DILocation(line: 1320, column: 43, scope: !6229)
!6252 = !DILocation(line: 1320, column: 37, scope: !6229)
!6253 = !DILocation(line: 1320, column: 49, scope: !6229)
!6254 = !DILocation(line: 1320, column: 54, scope: !6229)
!6255 = !DILocation(line: 1320, column: 48, scope: !6229)
!6256 = !DILocation(line: 1320, column: 63, scope: !6229)
!6257 = !DILocation(line: 1320, column: 62, scope: !6229)
!6258 = !DILocation(line: 1320, column: 24, scope: !6229)
!6259 = !DILocation(line: 1320, column: 4, scope: !6229)
!6260 = !DILocation(line: 1320, column: 9, scope: !6229)
!6261 = !DILocation(line: 1320, column: 16, scope: !6229)
!6262 = !DILocation(line: 1321, column: 18, scope: !6229)
!6263 = !DILocation(line: 1321, column: 27, scope: !6229)
!6264 = !DILocation(line: 1321, column: 32, scope: !6229)
!6265 = !DILocation(line: 1321, column: 38, scope: !6229)
!6266 = !DILocation(line: 1321, column: 43, scope: !6229)
!6267 = !DILocation(line: 1321, column: 37, scope: !6229)
!6268 = !DILocation(line: 1321, column: 49, scope: !6229)
!6269 = !DILocation(line: 1321, column: 54, scope: !6229)
!6270 = !DILocation(line: 1321, column: 48, scope: !6229)
!6271 = !DILocation(line: 1321, column: 63, scope: !6229)
!6272 = !DILocation(line: 1321, column: 62, scope: !6229)
!6273 = !DILocation(line: 1321, column: 24, scope: !6229)
!6274 = !DILocation(line: 1321, column: 4, scope: !6229)
!6275 = !DILocation(line: 1321, column: 9, scope: !6229)
!6276 = !DILocation(line: 1321, column: 16, scope: !6229)
!6277 = !DILocation(line: 1323, column: 18, scope: !6229)
!6278 = !DILocation(line: 1323, column: 27, scope: !6229)
!6279 = !DILocation(line: 1323, column: 32, scope: !6229)
!6280 = !DILocation(line: 1323, column: 38, scope: !6229)
!6281 = !DILocation(line: 1323, column: 43, scope: !6229)
!6282 = !DILocation(line: 1323, column: 37, scope: !6229)
!6283 = !DILocation(line: 1323, column: 49, scope: !6229)
!6284 = !DILocation(line: 1323, column: 54, scope: !6229)
!6285 = !DILocation(line: 1323, column: 48, scope: !6229)
!6286 = !DILocation(line: 1323, column: 63, scope: !6229)
!6287 = !DILocation(line: 1323, column: 62, scope: !6229)
!6288 = !DILocation(line: 1323, column: 24, scope: !6229)
!6289 = !DILocation(line: 1323, column: 4, scope: !6229)
!6290 = !DILocation(line: 1323, column: 9, scope: !6229)
!6291 = !DILocation(line: 1323, column: 16, scope: !6229)
!6292 = !DILocation(line: 1324, column: 18, scope: !6229)
!6293 = !DILocation(line: 1324, column: 27, scope: !6229)
!6294 = !DILocation(line: 1324, column: 32, scope: !6229)
!6295 = !DILocation(line: 1324, column: 38, scope: !6229)
!6296 = !DILocation(line: 1324, column: 43, scope: !6229)
!6297 = !DILocation(line: 1324, column: 37, scope: !6229)
!6298 = !DILocation(line: 1324, column: 49, scope: !6229)
!6299 = !DILocation(line: 1324, column: 54, scope: !6229)
!6300 = !DILocation(line: 1324, column: 48, scope: !6229)
!6301 = !DILocation(line: 1324, column: 63, scope: !6229)
!6302 = !DILocation(line: 1324, column: 62, scope: !6229)
!6303 = !DILocation(line: 1324, column: 24, scope: !6229)
!6304 = !DILocation(line: 1324, column: 4, scope: !6229)
!6305 = !DILocation(line: 1324, column: 9, scope: !6229)
!6306 = !DILocation(line: 1324, column: 16, scope: !6229)
!6307 = !DILocation(line: 1325, column: 18, scope: !6229)
!6308 = !DILocation(line: 1325, column: 27, scope: !6229)
!6309 = !DILocation(line: 1325, column: 32, scope: !6229)
!6310 = !DILocation(line: 1325, column: 38, scope: !6229)
!6311 = !DILocation(line: 1325, column: 43, scope: !6229)
!6312 = !DILocation(line: 1325, column: 37, scope: !6229)
!6313 = !DILocation(line: 1325, column: 49, scope: !6229)
!6314 = !DILocation(line: 1325, column: 54, scope: !6229)
!6315 = !DILocation(line: 1325, column: 48, scope: !6229)
!6316 = !DILocation(line: 1325, column: 63, scope: !6229)
!6317 = !DILocation(line: 1325, column: 62, scope: !6229)
!6318 = !DILocation(line: 1325, column: 24, scope: !6229)
!6319 = !DILocation(line: 1325, column: 4, scope: !6229)
!6320 = !DILocation(line: 1325, column: 9, scope: !6229)
!6321 = !DILocation(line: 1325, column: 16, scope: !6229)
!6322 = !DILocation(line: 1326, column: 3, scope: !6229)
!6323 = !DILocation(line: 1327, column: 2, scope: !6224)
!6324 = !DILocation(line: 1330, column: 12, scope: !6116)
!6325 = !DILocation(line: 1330, column: 17, scope: !6116)
!6326 = !DILocation(line: 1330, column: 2, scope: !6116)
!6327 = !DILocation(line: 1330, column: 10, scope: !6116)
!6328 = !DILocation(line: 1331, column: 12, scope: !6116)
!6329 = !DILocation(line: 1331, column: 17, scope: !6116)
!6330 = !DILocation(line: 1331, column: 2, scope: !6116)
!6331 = !DILocation(line: 1331, column: 10, scope: !6116)
!6332 = !DILocation(line: 1332, column: 12, scope: !6116)
!6333 = !DILocation(line: 1332, column: 17, scope: !6116)
!6334 = !DILocation(line: 1332, column: 2, scope: !6116)
!6335 = !DILocation(line: 1332, column: 10, scope: !6116)
!6336 = !DILocation(line: 1334, column: 13, scope: !6116)
!6337 = !DILocation(line: 1334, column: 18, scope: !6116)
!6338 = !DILocation(line: 1334, column: 2, scope: !6116)
!6339 = !DILocation(line: 1334, column: 11, scope: !6116)
!6340 = !DILocation(line: 1335, column: 13, scope: !6116)
!6341 = !DILocation(line: 1335, column: 18, scope: !6116)
!6342 = !DILocation(line: 1335, column: 2, scope: !6116)
!6343 = !DILocation(line: 1335, column: 11, scope: !6116)
!6344 = !DILocation(line: 1336, column: 13, scope: !6116)
!6345 = !DILocation(line: 1336, column: 18, scope: !6116)
!6346 = !DILocation(line: 1336, column: 2, scope: !6116)
!6347 = !DILocation(line: 1336, column: 11, scope: !6116)
!6348 = !DILocation(line: 1338, column: 6, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1338, column: 6)
!6350 = !DILocation(line: 1338, column: 11, scope: !6349)
!6351 = !DILocation(line: 1338, column: 16, scope: !6349)
!6352 = !DILocation(line: 1338, column: 6, scope: !6116)
!6353 = !DILocation(line: 1338, column: 42, scope: !6349)
!6354 = !DILocation(line: 1338, column: 47, scope: !6349)
!6355 = !DILocation(line: 1338, column: 51, scope: !6349)
!6356 = !DILocation(line: 1338, column: 56, scope: !6349)
!6357 = !DILocation(line: 1338, column: 30, scope: !6349)
!6358 = !DILocation(line: 1339, column: 6, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1339, column: 6)
!6360 = !DILocation(line: 1339, column: 11, scope: !6359)
!6361 = !DILocation(line: 1339, column: 16, scope: !6359)
!6362 = !DILocation(line: 1339, column: 6, scope: !6116)
!6363 = !DILocation(line: 1339, column: 43, scope: !6359)
!6364 = !DILocation(line: 1339, column: 48, scope: !6359)
!6365 = !DILocation(line: 1339, column: 52, scope: !6359)
!6366 = !DILocation(line: 1339, column: 57, scope: !6359)
!6367 = !DILocation(line: 1339, column: 31, scope: !6359)
!6368 = !DILocation(line: 1343, column: 6, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1343, column: 6)
!6370 = !DILocation(line: 1343, column: 11, scope: !6369)
!6371 = !DILocation(line: 1343, column: 16, scope: !6369)
!6372 = !DILocation(line: 1343, column: 6, scope: !6116)
!6373 = !DILocalVariable(name: "cross", scope: !6374, file: !1, line: 1344, type: !212)
!6374 = distinct !DILexicalBlock(scope: !6369, file: !1, line: 1343, column: 29)
!6375 = !DILocation(line: 1344, column: 9, scope: !6374)
!6376 = !DILocalVariable(name: "nstrand", scope: !6374, file: !1, line: 1344, type: !212)
!6377 = !DILocation(line: 1344, column: 19, scope: !6374)
!6378 = !DILocalVariable(name: "blend", scope: !6374, file: !1, line: 1344, type: !147)
!6379 = !DILocation(line: 1344, column: 31, scope: !6374)
!6380 = !DILocation(line: 1346, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6374, file: !1, line: 1346, column: 7)
!6382 = !DILocation(line: 1346, column: 11, scope: !6381)
!6383 = !DILocation(line: 1346, column: 16, scope: !6381)
!6384 = !DILocation(line: 1346, column: 7, scope: !6374)
!6385 = !DILocation(line: 1347, column: 18, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6381, file: !1, line: 1346, column: 35)
!6387 = !DILocation(line: 1347, column: 25, scope: !6386)
!6388 = !DILocation(line: 1347, column: 30, scope: !6386)
!6389 = !DILocation(line: 1347, column: 39, scope: !6386)
!6390 = !DILocation(line: 1347, column: 4, scope: !6386)
!6391 = !DILocation(line: 1348, column: 18, scope: !6386)
!6392 = !DILocation(line: 1348, column: 27, scope: !6386)
!6393 = !DILocation(line: 1348, column: 31, scope: !6386)
!6394 = !DILocation(line: 1348, column: 4, scope: !6386)
!6395 = !DILocation(line: 1350, column: 20, scope: !6386)
!6396 = !DILocation(line: 1350, column: 29, scope: !6386)
!6397 = !DILocation(line: 1350, column: 34, scope: !6386)
!6398 = !DILocation(line: 1350, column: 11, scope: !6386)
!6399 = !DILocation(line: 1350, column: 9, scope: !6386)
!6400 = !DILocation(line: 1351, column: 18, scope: !6386)
!6401 = !DILocation(line: 1351, column: 16, scope: !6386)
!6402 = !DILocation(line: 1351, column: 9, scope: !6386)
!6403 = !DILocation(line: 1352, column: 4, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !1, line: 1352, column: 4)
!6405 = distinct !DILexicalBlock(scope: !6386, file: !1, line: 1352, column: 4)
!6406 = !DILocation(line: 1352, column: 4, scope: !6405)
!6407 = !DILocation(line: 1352, column: 4, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !1, line: 1352, column: 4)
!6409 = !DILocation(line: 1354, column: 19, scope: !6386)
!6410 = !DILocation(line: 1354, column: 25, scope: !6386)
!6411 = !DILocation(line: 1354, column: 34, scope: !6386)
!6412 = !DILocation(line: 1354, column: 39, scope: !6386)
!6413 = !DILocation(line: 1354, column: 48, scope: !6386)
!6414 = !DILocation(line: 1354, column: 4, scope: !6386)
!6415 = !DILocation(line: 1355, column: 17, scope: !6386)
!6416 = !DILocation(line: 1355, column: 4, scope: !6386)
!6417 = !DILocation(line: 1356, column: 3, scope: !6386)
!6418 = !DILocation(line: 1358, column: 18, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6381, file: !1, line: 1357, column: 8)
!6420 = !DILocation(line: 1358, column: 25, scope: !6419)
!6421 = !DILocation(line: 1358, column: 29, scope: !6419)
!6422 = !DILocation(line: 1358, column: 4, scope: !6419)
!6423 = !DILocation(line: 1359, column: 18, scope: !6419)
!6424 = !DILocation(line: 1359, column: 24, scope: !6419)
!6425 = !DILocation(line: 1359, column: 31, scope: !6419)
!6426 = !DILocation(line: 1359, column: 4, scope: !6419)
!6427 = !DILocation(line: 1360, column: 17, scope: !6419)
!6428 = !DILocation(line: 1360, column: 4, scope: !6419)
!6429 = !DILocation(line: 1363, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6374, file: !1, line: 1363, column: 7)
!6431 = !DILocation(line: 1363, column: 11, scope: !6430)
!6432 = !DILocation(line: 1363, column: 26, scope: !6430)
!6433 = !DILocation(line: 1363, column: 7, scope: !6374)
!6434 = !DILocation(line: 1364, column: 8, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !1, line: 1364, column: 8)
!6436 = distinct !DILexicalBlock(scope: !6430, file: !1, line: 1363, column: 34)
!6437 = !DILocation(line: 1364, column: 12, scope: !6435)
!6438 = !DILocation(line: 1364, column: 29, scope: !6435)
!6439 = !DILocation(line: 1364, column: 34, scope: !6435)
!6440 = !DILocation(line: 1364, column: 27, scope: !6435)
!6441 = !DILocation(line: 1364, column: 8, scope: !6436)
!6442 = !DILocation(line: 1365, column: 13, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6435, file: !1, line: 1364, column: 44)
!6444 = !DILocation(line: 1365, column: 17, scope: !6443)
!6445 = !DILocation(line: 1365, column: 34, scope: !6443)
!6446 = !DILocation(line: 1365, column: 39, scope: !6443)
!6447 = !DILocation(line: 1365, column: 32, scope: !6443)
!6448 = !DILocation(line: 1365, column: 49, scope: !6443)
!6449 = !DILocation(line: 1365, column: 53, scope: !6443)
!6450 = !DILocation(line: 1365, column: 48, scope: !6443)
!6451 = !DILocation(line: 1365, column: 10, scope: !6443)
!6452 = !DILocation(line: 1366, column: 20, scope: !6443)
!6453 = !DILocation(line: 1366, column: 26, scope: !6443)
!6454 = !DILocation(line: 1366, column: 32, scope: !6443)
!6455 = !DILocation(line: 1366, column: 37, scope: !6443)
!6456 = !DILocation(line: 1366, column: 46, scope: !6443)
!6457 = !DILocation(line: 1366, column: 5, scope: !6443)
!6458 = !DILocation(line: 1367, column: 18, scope: !6443)
!6459 = !DILocation(line: 1367, column: 5, scope: !6443)
!6460 = !DILocation(line: 1368, column: 4, scope: !6443)
!6461 = !DILocation(line: 1369, column: 3, scope: !6436)
!6462 = !DILocation(line: 1371, column: 13, scope: !6374)
!6463 = !DILocation(line: 1371, column: 12, scope: !6374)
!6464 = !DILocation(line: 1371, column: 3, scope: !6374)
!6465 = !DILocation(line: 1371, column: 10, scope: !6374)
!6466 = !DILocation(line: 1371, column: 31, scope: !6374)
!6467 = !DILocation(line: 1371, column: 30, scope: !6374)
!6468 = !DILocation(line: 1371, column: 21, scope: !6374)
!6469 = !DILocation(line: 1371, column: 28, scope: !6374)
!6470 = !DILocation(line: 1371, column: 49, scope: !6374)
!6471 = !DILocation(line: 1371, column: 48, scope: !6374)
!6472 = !DILocation(line: 1371, column: 39, scope: !6374)
!6473 = !DILocation(line: 1371, column: 46, scope: !6374)
!6474 = !DILocation(line: 1372, column: 7, scope: !6374)
!6475 = !DILocation(line: 1372, column: 5, scope: !6374)
!6476 = !DILocation(line: 1373, column: 2, scope: !6374)
!6477 = !DILocation(line: 1374, column: 11, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6369, file: !1, line: 1374, column: 11)
!6479 = !DILocation(line: 1374, column: 15, scope: !6478)
!6480 = !DILocation(line: 1374, column: 20, scope: !6478)
!6481 = !DILocation(line: 1374, column: 11, scope: !6369)
!6482 = !DILocalVariable(name: "cross", scope: !6483, file: !1, line: 1375, type: !212)
!6483 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1374, column: 36)
!6484 = !DILocation(line: 1375, column: 9, scope: !6483)
!6485 = !DILocation(line: 1376, column: 17, scope: !6483)
!6486 = !DILocation(line: 1376, column: 24, scope: !6483)
!6487 = !DILocation(line: 1376, column: 28, scope: !6483)
!6488 = !DILocation(line: 1376, column: 33, scope: !6483)
!6489 = !DILocation(line: 1376, column: 3, scope: !6483)
!6490 = !DILocation(line: 1377, column: 17, scope: !6483)
!6491 = !DILocation(line: 1377, column: 23, scope: !6483)
!6492 = !DILocation(line: 1377, column: 30, scope: !6483)
!6493 = !DILocation(line: 1377, column: 35, scope: !6483)
!6494 = !DILocation(line: 1377, column: 3, scope: !6483)
!6495 = !DILocation(line: 1378, column: 16, scope: !6483)
!6496 = !DILocation(line: 1378, column: 3, scope: !6483)
!6497 = !DILocation(line: 1379, column: 13, scope: !6483)
!6498 = !DILocation(line: 1379, column: 12, scope: !6483)
!6499 = !DILocation(line: 1379, column: 3, scope: !6483)
!6500 = !DILocation(line: 1379, column: 10, scope: !6483)
!6501 = !DILocation(line: 1379, column: 31, scope: !6483)
!6502 = !DILocation(line: 1379, column: 30, scope: !6483)
!6503 = !DILocation(line: 1379, column: 21, scope: !6483)
!6504 = !DILocation(line: 1379, column: 28, scope: !6483)
!6505 = !DILocation(line: 1379, column: 49, scope: !6483)
!6506 = !DILocation(line: 1379, column: 48, scope: !6483)
!6507 = !DILocation(line: 1379, column: 39, scope: !6483)
!6508 = !DILocation(line: 1379, column: 46, scope: !6483)
!6509 = !DILocation(line: 1380, column: 7, scope: !6483)
!6510 = !DILocation(line: 1380, column: 5, scope: !6483)
!6511 = !DILocation(line: 1381, column: 2, scope: !6483)
!6512 = !DILocation(line: 1385, column: 16, scope: !6116)
!6513 = !DILocation(line: 1385, column: 20, scope: !6116)
!6514 = !DILocation(line: 1385, column: 7, scope: !6116)
!6515 = !DILocation(line: 1385, column: 5, scope: !6116)
!6516 = !DILocation(line: 1389, column: 10, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1389, column: 6)
!6518 = !DILocation(line: 1389, column: 15, scope: !6517)
!6519 = !DILocation(line: 1389, column: 6, scope: !6116)
!6520 = !DILocation(line: 1390, column: 7, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !1, line: 1390, column: 7)
!6522 = distinct !DILexicalBlock(scope: !6517, file: !1, line: 1389, column: 27)
!6523 = !DILocation(line: 1390, column: 11, scope: !6521)
!6524 = !DILocation(line: 1390, column: 16, scope: !6521)
!6525 = !DILocation(line: 1390, column: 7, scope: !6522)
!6526 = !DILocation(line: 1391, column: 8, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !1, line: 1391, column: 8)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !1, line: 1390, column: 29)
!6529 = !DILocation(line: 1391, column: 13, scope: !6527)
!6530 = !DILocation(line: 1391, column: 18, scope: !6527)
!6531 = !DILocation(line: 1391, column: 29, scope: !6527)
!6532 = !DILocation(line: 1391, column: 32, scope: !6527)
!6533 = !DILocation(line: 1391, column: 37, scope: !6527)
!6534 = !DILocation(line: 1391, column: 42, scope: !6527)
!6535 = !DILocation(line: 1391, column: 8, scope: !6528)
!6536 = !DILocation(line: 1393, column: 4, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 1391, column: 54)
!6538 = !DILocation(line: 1394, column: 14, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 1394, column: 13)
!6540 = !DILocation(line: 1394, column: 18, scope: !6539)
!6541 = !DILocation(line: 1394, column: 23, scope: !6539)
!6542 = !DILocation(line: 1394, column: 37, scope: !6539)
!6543 = !DILocation(line: 1394, column: 41, scope: !6539)
!6544 = !DILocation(line: 1394, column: 46, scope: !6539)
!6545 = !DILocation(line: 1394, column: 51, scope: !6539)
!6546 = !DILocation(line: 1394, column: 66, scope: !6539)
!6547 = !DILocation(line: 1394, column: 70, scope: !6539)
!6548 = !DILocation(line: 1394, column: 75, scope: !6539)
!6549 = !DILocation(line: 1394, column: 80, scope: !6539)
!6550 = !DILocation(line: 1394, column: 13, scope: !6527)
!6551 = !DILocalVariable(name: "thresh", scope: !6552, file: !1, line: 1395, type: !147)
!6552 = distinct !DILexicalBlock(scope: !6539, file: !1, line: 1394, column: 93)
!6553 = !DILocation(line: 1395, column: 11, scope: !6552)
!6554 = !DILocation(line: 1395, column: 19, scope: !6552)
!6555 = !DILocation(line: 1395, column: 24, scope: !6552)
!6556 = !DILocation(line: 1395, column: 29, scope: !6552)
!6557 = !DILocation(line: 1395, column: 33, scope: !6552)
!6558 = !DILocation(line: 1396, column: 9, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6552, file: !1, line: 1396, column: 9)
!6560 = !DILocation(line: 1396, column: 13, scope: !6559)
!6561 = !DILocation(line: 1396, column: 12, scope: !6559)
!6562 = !DILocation(line: 1396, column: 9, scope: !6552)
!6563 = !DILocation(line: 1397, column: 18, scope: !6559)
!6564 = !DILocation(line: 1397, column: 22, scope: !6559)
!6565 = !DILocation(line: 1397, column: 21, scope: !6559)
!6566 = !DILocation(line: 1397, column: 31, scope: !6559)
!6567 = !DILocation(line: 1397, column: 41, scope: !6559)
!6568 = !DILocation(line: 1397, column: 40, scope: !6559)
!6569 = !DILocation(line: 1397, column: 34, scope: !6559)
!6570 = !DILocation(line: 1397, column: 29, scope: !6559)
!6571 = !DILocation(line: 1397, column: 15, scope: !6559)
!6572 = !DILocation(line: 1397, column: 6, scope: !6559)
!6573 = !DILocation(line: 1399, column: 15, scope: !6559)
!6574 = !DILocation(line: 1400, column: 4, scope: !6552)
!6575 = !DILocation(line: 1401, column: 13, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6539, file: !1, line: 1401, column: 13)
!6577 = !DILocation(line: 1401, column: 17, scope: !6576)
!6578 = !DILocation(line: 1401, column: 22, scope: !6576)
!6579 = !DILocation(line: 1401, column: 29, scope: !6576)
!6580 = !DILocation(line: 1401, column: 34, scope: !6576)
!6581 = !DILocation(line: 1401, column: 39, scope: !6576)
!6582 = !DILocation(line: 1401, column: 44, scope: !6576)
!6583 = !DILocation(line: 1401, column: 59, scope: !6576)
!6584 = !DILocation(line: 1401, column: 62, scope: !6576)
!6585 = !DILocation(line: 1401, column: 67, scope: !6576)
!6586 = !DILocation(line: 1401, column: 13, scope: !6539)
!6587 = !DILocation(line: 1402, column: 9, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !1, line: 1402, column: 9)
!6589 = distinct !DILexicalBlock(scope: !6576, file: !1, line: 1401, column: 73)
!6590 = !DILocation(line: 1402, column: 13, scope: !6588)
!6591 = !DILocation(line: 1402, column: 17, scope: !6588)
!6592 = !DILocation(line: 1402, column: 12, scope: !6588)
!6593 = !DILocation(line: 1402, column: 9, scope: !6589)
!6594 = !DILocation(line: 1403, column: 18, scope: !6588)
!6595 = !DILocation(line: 1403, column: 22, scope: !6588)
!6596 = !DILocation(line: 1403, column: 26, scope: !6588)
!6597 = !DILocation(line: 1403, column: 21, scope: !6588)
!6598 = !DILocation(line: 1403, column: 34, scope: !6588)
!6599 = !DILocation(line: 1403, column: 44, scope: !6588)
!6600 = !DILocation(line: 1403, column: 48, scope: !6588)
!6601 = !DILocation(line: 1403, column: 43, scope: !6588)
!6602 = !DILocation(line: 1403, column: 37, scope: !6588)
!6603 = !DILocation(line: 1403, column: 32, scope: !6588)
!6604 = !DILocation(line: 1403, column: 15, scope: !6588)
!6605 = !DILocation(line: 1403, column: 6, scope: !6588)
!6606 = !DILocation(line: 1405, column: 15, scope: !6588)
!6607 = !DILocation(line: 1406, column: 4, scope: !6589)
!6608 = !DILocation(line: 1407, column: 3, scope: !6528)
!6609 = !DILocation(line: 1408, column: 2, scope: !6522)
!6610 = !DILocation(line: 1411, column: 6, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1411, column: 6)
!6612 = !DILocation(line: 1411, column: 11, scope: !6611)
!6613 = !DILocation(line: 1411, column: 16, scope: !6611)
!6614 = !DILocation(line: 1411, column: 6, scope: !6116)
!6615 = !DILocation(line: 1412, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6611, file: !1, line: 1411, column: 30)
!6617 = !DILocation(line: 1413, column: 2, scope: !6616)
!6618 = !DILocation(line: 1414, column: 11, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6611, file: !1, line: 1414, column: 11)
!6620 = !DILocation(line: 1414, column: 16, scope: !6619)
!6621 = !DILocation(line: 1414, column: 20, scope: !6619)
!6622 = !DILocation(line: 1414, column: 11, scope: !6611)
!6623 = !DILocation(line: 1415, column: 15, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6619, file: !1, line: 1414, column: 31)
!6625 = !DILocation(line: 1415, column: 13, scope: !6624)
!6626 = !DILocation(line: 1415, column: 19, scope: !6624)
!6627 = !DILocation(line: 1415, column: 6, scope: !6624)
!6628 = !DILocation(line: 1416, column: 2, scope: !6624)
!6629 = !DILocation(line: 1419, column: 7, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !1, line: 1419, column: 7)
!6631 = distinct !DILexicalBlock(scope: !6619, file: !1, line: 1417, column: 7)
!6632 = !DILocation(line: 1419, column: 12, scope: !6630)
!6633 = !DILocation(line: 1419, column: 16, scope: !6630)
!6634 = !DILocation(line: 1419, column: 7, scope: !6631)
!6635 = !DILocation(line: 1420, column: 38, scope: !6630)
!6636 = !DILocation(line: 1420, column: 43, scope: !6630)
!6637 = !DILocation(line: 1420, column: 48, scope: !6630)
!6638 = !DILocation(line: 1420, column: 52, scope: !6630)
!6639 = !DILocation(line: 1420, column: 9, scope: !6630)
!6640 = !DILocation(line: 1420, column: 7, scope: !6630)
!6641 = !DILocation(line: 1420, column: 4, scope: !6630)
!6642 = !DILocation(line: 1423, column: 7, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6631, file: !1, line: 1423, column: 7)
!6644 = !DILocation(line: 1423, column: 11, scope: !6643)
!6645 = !DILocation(line: 1423, column: 22, scope: !6643)
!6646 = !DILocation(line: 1423, column: 7, scope: !6631)
!6647 = !DILocation(line: 1423, column: 62, scope: !6643)
!6648 = !DILocation(line: 1423, column: 67, scope: !6643)
!6649 = !DILocation(line: 1423, column: 71, scope: !6643)
!6650 = !DILocation(line: 1423, column: 75, scope: !6643)
!6651 = !DILocation(line: 1423, column: 81, scope: !6643)
!6652 = !DILocation(line: 1423, column: 85, scope: !6643)
!6653 = !DILocation(line: 1423, column: 47, scope: !6643)
!6654 = !DILocation(line: 1423, column: 45, scope: !6643)
!6655 = !DILocation(line: 1423, column: 43, scope: !6643)
!6656 = !DILocation(line: 1424, column: 12, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6643, file: !1, line: 1424, column: 12)
!6658 = !DILocation(line: 1424, column: 16, scope: !6657)
!6659 = !DILocation(line: 1424, column: 27, scope: !6657)
!6660 = !DILocation(line: 1424, column: 12, scope: !6643)
!6661 = !DILocation(line: 1424, column: 57, scope: !6657)
!6662 = !DILocation(line: 1424, column: 61, scope: !6657)
!6663 = !DILocation(line: 1424, column: 65, scope: !6657)
!6664 = !DILocation(line: 1424, column: 71, scope: !6657)
!6665 = !DILocation(line: 1424, column: 75, scope: !6657)
!6666 = !DILocation(line: 1424, column: 85, scope: !6657)
!6667 = !DILocation(line: 1424, column: 89, scope: !6657)
!6668 = !DILocation(line: 1424, column: 47, scope: !6657)
!6669 = !DILocation(line: 1424, column: 45, scope: !6657)
!6670 = !DILocation(line: 1424, column: 43, scope: !6657)
!6671 = !DILocation(line: 1425, column: 12, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6657, file: !1, line: 1425, column: 12)
!6673 = !DILocation(line: 1425, column: 16, scope: !6672)
!6674 = !DILocation(line: 1425, column: 27, scope: !6672)
!6675 = !DILocation(line: 1425, column: 12, scope: !6657)
!6676 = !DILocation(line: 1425, column: 65, scope: !6672)
!6677 = !DILocation(line: 1425, column: 70, scope: !6672)
!6678 = !DILocation(line: 1425, column: 74, scope: !6672)
!6679 = !DILocation(line: 1425, column: 80, scope: !6672)
!6680 = !DILocation(line: 1425, column: 84, scope: !6672)
!6681 = !DILocation(line: 1425, column: 51, scope: !6672)
!6682 = !DILocation(line: 1425, column: 49, scope: !6672)
!6683 = !DILocation(line: 1425, column: 47, scope: !6672)
!6684 = !DILocation(line: 1426, column: 12, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6672, file: !1, line: 1426, column: 12)
!6686 = !DILocation(line: 1426, column: 16, scope: !6685)
!6687 = !DILocation(line: 1426, column: 27, scope: !6685)
!6688 = !DILocation(line: 1426, column: 12, scope: !6672)
!6689 = !DILocation(line: 1426, column: 63, scope: !6685)
!6690 = !DILocation(line: 1426, column: 67, scope: !6685)
!6691 = !DILocation(line: 1426, column: 71, scope: !6685)
!6692 = !DILocation(line: 1426, column: 77, scope: !6685)
!6693 = !DILocation(line: 1426, column: 81, scope: !6685)
!6694 = !DILocation(line: 1426, column: 91, scope: !6685)
!6695 = !DILocation(line: 1426, column: 95, scope: !6685)
!6696 = !DILocation(line: 1426, column: 50, scope: !6685)
!6697 = !DILocation(line: 1426, column: 48, scope: !6685)
!6698 = !DILocation(line: 1426, column: 46, scope: !6685)
!6699 = !DILocation(line: 1427, column: 12, scope: !6685)
!6700 = !DILocation(line: 1427, column: 10, scope: !6685)
!6701 = !DILocation(line: 1431, column: 7, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1431, column: 6)
!6703 = !DILocation(line: 1431, column: 11, scope: !6702)
!6704 = !DILocation(line: 1431, column: 22, scope: !6702)
!6705 = !DILocation(line: 1431, column: 34, scope: !6702)
!6706 = !DILocation(line: 1431, column: 37, scope: !6702)
!6707 = !DILocation(line: 1431, column: 40, scope: !6702)
!6708 = !DILocation(line: 1431, column: 47, scope: !6702)
!6709 = !DILocation(line: 1431, column: 50, scope: !6702)
!6710 = !DILocation(line: 1431, column: 53, scope: !6702)
!6711 = !DILocation(line: 1431, column: 6, scope: !6116)
!6712 = !DILocation(line: 1432, column: 14, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6702, file: !1, line: 1431, column: 61)
!6714 = !DILocation(line: 1432, column: 12, scope: !6713)
!6715 = !DILocation(line: 1432, column: 19, scope: !6713)
!6716 = !DILocation(line: 1432, column: 17, scope: !6713)
!6717 = !DILocation(line: 1432, column: 31, scope: !6713)
!6718 = !DILocation(line: 1432, column: 29, scope: !6713)
!6719 = !DILocation(line: 1432, column: 36, scope: !6713)
!6720 = !DILocation(line: 1432, column: 34, scope: !6713)
!6721 = !DILocation(line: 1432, column: 41, scope: !6713)
!6722 = !DILocation(line: 1432, column: 39, scope: !6713)
!6723 = !DILocation(line: 1432, column: 22, scope: !6713)
!6724 = !DILocation(line: 1432, column: 5, scope: !6713)
!6725 = !DILocation(line: 1433, column: 2, scope: !6713)
!6726 = !DILocation(line: 1435, column: 5, scope: !6116)
!6727 = !DILocation(line: 1435, column: 8, scope: !6116)
!6728 = !DILocation(line: 1435, column: 7, scope: !6116)
!6729 = !DILocation(line: 1435, column: 3, scope: !6116)
!6730 = !DILocation(line: 1437, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1437, column: 6)
!6732 = !DILocation(line: 1437, column: 7, scope: !6731)
!6733 = !DILocation(line: 1437, column: 6, scope: !6116)
!6734 = !DILocation(line: 1438, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !1, line: 1437, column: 14)
!6736 = !DILocation(line: 1438, column: 15, scope: !6735)
!6737 = !DILocation(line: 1438, column: 20, scope: !6735)
!6738 = !DILocation(line: 1438, column: 14, scope: !6735)
!6739 = !DILocation(line: 1438, column: 4, scope: !6735)
!6740 = !DILocation(line: 1439, column: 2, scope: !6735)
!6741 = !DILocation(line: 1440, column: 12, scope: !6116)
!6742 = !DILocation(line: 1440, column: 10, scope: !6116)
!6743 = !DILocation(line: 1442, column: 7, scope: !6116)
!6744 = !DILocation(line: 1442, column: 12, scope: !6116)
!6745 = !DILocation(line: 1442, column: 5, scope: !6116)
!6746 = !DILocation(line: 1443, column: 6, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1443, column: 6)
!6748 = !DILocation(line: 1443, column: 10, scope: !6747)
!6749 = !DILocation(line: 1443, column: 15, scope: !6747)
!6750 = !DILocation(line: 1443, column: 6, scope: !6116)
!6751 = !DILocation(line: 1444, column: 7, scope: !6747)
!6752 = !DILocation(line: 1444, column: 12, scope: !6747)
!6753 = !DILocation(line: 1444, column: 5, scope: !6747)
!6754 = !DILocation(line: 1444, column: 3, scope: !6747)
!6755 = !DILocation(line: 1447, column: 38, scope: !6116)
!6756 = !DILocation(line: 1447, column: 48, scope: !6116)
!6757 = !DILocation(line: 1447, column: 26, scope: !6116)
!6758 = !DILocation(line: 1447, column: 36, scope: !6116)
!6759 = !DILocation(line: 1447, column: 14, scope: !6116)
!6760 = !DILocation(line: 1447, column: 24, scope: !6116)
!6761 = !DILocation(line: 1447, column: 2, scope: !6116)
!6762 = !DILocation(line: 1447, column: 12, scope: !6116)
!6763 = !DILocation(line: 1450, column: 6, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1450, column: 6)
!6765 = !DILocation(line: 1450, column: 13, scope: !6764)
!6766 = !DILocation(line: 1450, column: 6, scope: !6116)
!6767 = !DILocation(line: 1452, column: 12, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1452, column: 7)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !1, line: 1450, column: 21)
!6770 = !DILocation(line: 1452, column: 17, scope: !6768)
!6771 = !DILocation(line: 1452, column: 7, scope: !6769)
!6772 = !DILocation(line: 1453, column: 8, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !1, line: 1453, column: 8)
!6774 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1452, column: 30)
!6775 = !DILocation(line: 1453, column: 12, scope: !6773)
!6776 = !DILocation(line: 1453, column: 17, scope: !6773)
!6777 = !DILocation(line: 1453, column: 8, scope: !6774)
!6778 = !DILocation(line: 1454, column: 9, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !1, line: 1454, column: 9)
!6780 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 1453, column: 30)
!6781 = !DILocation(line: 1454, column: 14, scope: !6779)
!6782 = !DILocation(line: 1454, column: 18, scope: !6779)
!6783 = !DILocation(line: 1454, column: 22, scope: !6779)
!6784 = !DILocation(line: 1454, column: 27, scope: !6779)
!6785 = !DILocation(line: 1454, column: 32, scope: !6779)
!6786 = !DILocation(line: 1454, column: 9, scope: !6780)
!6787 = !DILocation(line: 1456, column: 10, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !1, line: 1456, column: 10)
!6789 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 1454, column: 48)
!6790 = !DILocation(line: 1456, column: 14, scope: !6788)
!6791 = !DILocation(line: 1456, column: 12, scope: !6788)
!6792 = !DILocation(line: 1456, column: 10, scope: !6789)
!6793 = !DILocation(line: 1457, column: 23, scope: !6788)
!6794 = !DILocation(line: 1457, column: 28, scope: !6788)
!6795 = !DILocation(line: 1457, column: 42, scope: !6788)
!6796 = !DILocation(line: 1457, column: 47, scope: !6788)
!6797 = !DILocation(line: 1457, column: 51, scope: !6788)
!6798 = !DILocation(line: 1457, column: 33, scope: !6788)
!6799 = !DILocation(line: 1457, column: 56, scope: !6788)
!6800 = !DILocation(line: 1457, column: 65, scope: !6788)
!6801 = !DILocation(line: 1457, column: 70, scope: !6788)
!6802 = !DILocation(line: 1457, column: 7, scope: !6788)
!6803 = !DILocation(line: 1459, column: 23, scope: !6788)
!6804 = !DILocation(line: 1459, column: 28, scope: !6788)
!6805 = !DILocation(line: 1459, column: 33, scope: !6788)
!6806 = !DILocation(line: 1459, column: 38, scope: !6788)
!6807 = !DILocation(line: 1459, column: 47, scope: !6788)
!6808 = !DILocation(line: 1459, column: 52, scope: !6788)
!6809 = !DILocation(line: 1459, column: 7, scope: !6788)
!6810 = !DILocation(line: 1462, column: 11, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6789, file: !1, line: 1462, column: 10)
!6812 = !DILocation(line: 1462, column: 16, scope: !6811)
!6813 = !DILocation(line: 1462, column: 21, scope: !6811)
!6814 = !DILocation(line: 1462, column: 38, scope: !6811)
!6815 = !DILocation(line: 1462, column: 41, scope: !6811)
!6816 = !DILocation(line: 1462, column: 42, scope: !6811)
!6817 = !DILocation(line: 1462, column: 10, scope: !6789)
!6818 = !DILocation(line: 1464, column: 19, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6811, file: !1, line: 1462, column: 49)
!6820 = !DILocation(line: 1464, column: 21, scope: !6819)
!6821 = !DILocation(line: 1464, column: 26, scope: !6819)
!6822 = !DILocation(line: 1464, column: 20, scope: !6819)
!6823 = !DILocation(line: 1464, column: 39, scope: !6819)
!6824 = !DILocation(line: 1464, column: 38, scope: !6819)
!6825 = !DILocation(line: 1464, column: 32, scope: !6819)
!6826 = !DILocation(line: 1464, column: 7, scope: !6819)
!6827 = !DILocation(line: 1464, column: 17, scope: !6819)
!6828 = !DILocation(line: 1465, column: 23, scope: !6819)
!6829 = !DILocation(line: 1465, column: 34, scope: !6819)
!6830 = !DILocation(line: 1465, column: 39, scope: !6819)
!6831 = !DILocation(line: 1465, column: 33, scope: !6819)
!6832 = !DILocation(line: 1465, column: 47, scope: !6819)
!6833 = !DILocation(line: 1465, column: 46, scope: !6819)
!6834 = !DILocation(line: 1465, column: 40, scope: !6819)
!6835 = !DILocation(line: 1465, column: 7, scope: !6819)
!6836 = !DILocation(line: 1465, column: 12, scope: !6819)
!6837 = !DILocation(line: 1465, column: 20, scope: !6819)
!6838 = !DILocation(line: 1466, column: 23, scope: !6819)
!6839 = !DILocation(line: 1466, column: 34, scope: !6819)
!6840 = !DILocation(line: 1466, column: 39, scope: !6819)
!6841 = !DILocation(line: 1466, column: 33, scope: !6819)
!6842 = !DILocation(line: 1466, column: 47, scope: !6819)
!6843 = !DILocation(line: 1466, column: 46, scope: !6819)
!6844 = !DILocation(line: 1466, column: 40, scope: !6819)
!6845 = !DILocation(line: 1466, column: 7, scope: !6819)
!6846 = !DILocation(line: 1466, column: 12, scope: !6819)
!6847 = !DILocation(line: 1466, column: 20, scope: !6819)
!6848 = !DILocation(line: 1467, column: 23, scope: !6819)
!6849 = !DILocation(line: 1467, column: 34, scope: !6819)
!6850 = !DILocation(line: 1467, column: 39, scope: !6819)
!6851 = !DILocation(line: 1467, column: 33, scope: !6819)
!6852 = !DILocation(line: 1467, column: 47, scope: !6819)
!6853 = !DILocation(line: 1467, column: 46, scope: !6819)
!6854 = !DILocation(line: 1467, column: 40, scope: !6819)
!6855 = !DILocation(line: 1467, column: 7, scope: !6819)
!6856 = !DILocation(line: 1467, column: 12, scope: !6819)
!6857 = !DILocation(line: 1467, column: 20, scope: !6819)
!6858 = !DILocation(line: 1469, column: 13, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6819, file: !1, line: 1469, column: 11)
!6860 = !DILocation(line: 1469, column: 18, scope: !6859)
!6861 = !DILocation(line: 1469, column: 23, scope: !6859)
!6862 = !DILocation(line: 1469, column: 11, scope: !6819)
!6863 = !DILocation(line: 1470, column: 24, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6859, file: !1, line: 1469, column: 38)
!6865 = !DILocation(line: 1470, column: 35, scope: !6864)
!6866 = !DILocation(line: 1470, column: 40, scope: !6864)
!6867 = !DILocation(line: 1470, column: 34, scope: !6864)
!6868 = !DILocation(line: 1470, column: 52, scope: !6864)
!6869 = !DILocation(line: 1470, column: 51, scope: !6864)
!6870 = !DILocation(line: 1470, column: 45, scope: !6864)
!6871 = !DILocation(line: 1470, column: 8, scope: !6864)
!6872 = !DILocation(line: 1470, column: 13, scope: !6864)
!6873 = !DILocation(line: 1470, column: 21, scope: !6864)
!6874 = !DILocation(line: 1471, column: 24, scope: !6864)
!6875 = !DILocation(line: 1471, column: 35, scope: !6864)
!6876 = !DILocation(line: 1471, column: 40, scope: !6864)
!6877 = !DILocation(line: 1471, column: 34, scope: !6864)
!6878 = !DILocation(line: 1471, column: 52, scope: !6864)
!6879 = !DILocation(line: 1471, column: 51, scope: !6864)
!6880 = !DILocation(line: 1471, column: 45, scope: !6864)
!6881 = !DILocation(line: 1471, column: 8, scope: !6864)
!6882 = !DILocation(line: 1471, column: 13, scope: !6864)
!6883 = !DILocation(line: 1471, column: 21, scope: !6864)
!6884 = !DILocation(line: 1472, column: 24, scope: !6864)
!6885 = !DILocation(line: 1472, column: 35, scope: !6864)
!6886 = !DILocation(line: 1472, column: 40, scope: !6864)
!6887 = !DILocation(line: 1472, column: 34, scope: !6864)
!6888 = !DILocation(line: 1472, column: 52, scope: !6864)
!6889 = !DILocation(line: 1472, column: 51, scope: !6864)
!6890 = !DILocation(line: 1472, column: 45, scope: !6864)
!6891 = !DILocation(line: 1472, column: 8, scope: !6864)
!6892 = !DILocation(line: 1472, column: 13, scope: !6864)
!6893 = !DILocation(line: 1472, column: 21, scope: !6864)
!6894 = !DILocation(line: 1473, column: 7, scope: !6864)
!6895 = !DILocation(line: 1475, column: 7, scope: !6819)
!6896 = !DILocation(line: 1478, column: 10, scope: !6789)
!6897 = !DILocation(line: 1478, column: 7, scope: !6789)
!6898 = !DILocation(line: 1479, column: 21, scope: !6789)
!6899 = !DILocation(line: 1479, column: 6, scope: !6789)
!6900 = !DILocation(line: 1479, column: 11, scope: !6789)
!6901 = !DILocation(line: 1479, column: 19, scope: !6789)
!6902 = !DILocation(line: 1480, column: 5, scope: !6789)
!6903 = !DILocation(line: 1481, column: 4, scope: !6780)
!6904 = !DILocation(line: 1482, column: 3, scope: !6774)
!6905 = !DILocation(line: 1485, column: 9, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1485, column: 7)
!6907 = !DILocation(line: 1485, column: 14, scope: !6906)
!6908 = !DILocation(line: 1485, column: 19, scope: !6906)
!6909 = !DILocation(line: 1485, column: 7, scope: !6769)
!6910 = !DILocation(line: 1486, column: 8, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 1486, column: 8)
!6912 = distinct !DILexicalBlock(scope: !6906, file: !1, line: 1485, column: 34)
!6913 = !DILocation(line: 1486, column: 9, scope: !6911)
!6914 = !DILocation(line: 1486, column: 8, scope: !6912)
!6915 = !DILocation(line: 1487, column: 9, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 1487, column: 9)
!6917 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 1486, column: 16)
!6918 = !DILocation(line: 1487, column: 13, scope: !6916)
!6919 = !DILocation(line: 1487, column: 18, scope: !6916)
!6920 = !DILocation(line: 1487, column: 9, scope: !6917)
!6921 = !DILocation(line: 1488, column: 21, scope: !6916)
!6922 = !DILocation(line: 1488, column: 26, scope: !6916)
!6923 = !DILocation(line: 1488, column: 32, scope: !6916)
!6924 = !DILocation(line: 1488, column: 37, scope: !6916)
!6925 = !DILocation(line: 1488, column: 41, scope: !6916)
!6926 = !DILocation(line: 1488, column: 43, scope: !6916)
!6927 = !DILocation(line: 1488, column: 42, scope: !6916)
!6928 = !DILocation(line: 1488, column: 54, scope: !6916)
!6929 = !DILocation(line: 1488, column: 53, scope: !6916)
!6930 = !DILocation(line: 1488, column: 64, scope: !6916)
!6931 = !DILocation(line: 1488, column: 66, scope: !6916)
!6932 = !DILocation(line: 1488, column: 65, scope: !6916)
!6933 = !DILocation(line: 1488, column: 77, scope: !6916)
!6934 = !DILocation(line: 1488, column: 76, scope: !6916)
!6935 = !DILocation(line: 1488, column: 87, scope: !6916)
!6936 = !DILocation(line: 1488, column: 89, scope: !6916)
!6937 = !DILocation(line: 1488, column: 88, scope: !6916)
!6938 = !DILocation(line: 1488, column: 100, scope: !6916)
!6939 = !DILocation(line: 1488, column: 99, scope: !6916)
!6940 = !DILocation(line: 1488, column: 6, scope: !6916)
!6941 = !DILocation(line: 1490, column: 21, scope: !6916)
!6942 = !DILocation(line: 1490, column: 26, scope: !6916)
!6943 = !DILocation(line: 1490, column: 32, scope: !6916)
!6944 = !DILocation(line: 1490, column: 37, scope: !6916)
!6945 = !DILocation(line: 1490, column: 41, scope: !6916)
!6946 = !DILocation(line: 1490, column: 43, scope: !6916)
!6947 = !DILocation(line: 1490, column: 42, scope: !6916)
!6948 = !DILocation(line: 1490, column: 53, scope: !6916)
!6949 = !DILocation(line: 1490, column: 55, scope: !6916)
!6950 = !DILocation(line: 1490, column: 54, scope: !6916)
!6951 = !DILocation(line: 1490, column: 65, scope: !6916)
!6952 = !DILocation(line: 1490, column: 67, scope: !6916)
!6953 = !DILocation(line: 1490, column: 66, scope: !6916)
!6954 = !DILocation(line: 1490, column: 6, scope: !6916)
!6955 = !DILocation(line: 1491, column: 4, scope: !6917)
!6956 = !DILocation(line: 1493, column: 8, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 1493, column: 8)
!6958 = !DILocation(line: 1493, column: 17, scope: !6957)
!6959 = !DILocation(line: 1493, column: 16, scope: !6957)
!6960 = !DILocation(line: 1493, column: 19, scope: !6957)
!6961 = !DILocation(line: 1493, column: 24, scope: !6957)
!6962 = !DILocation(line: 1493, column: 33, scope: !6957)
!6963 = !DILocation(line: 1493, column: 37, scope: !6957)
!6964 = !DILocation(line: 1493, column: 40, scope: !6957)
!6965 = !DILocation(line: 1493, column: 49, scope: !6957)
!6966 = !DILocation(line: 1493, column: 53, scope: !6957)
!6967 = !DILocation(line: 1493, column: 56, scope: !6957)
!6968 = !DILocation(line: 1493, column: 65, scope: !6957)
!6969 = !DILocation(line: 1493, column: 8, scope: !6912)
!6970 = !DILocation(line: 1494, column: 20, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6957, file: !1, line: 1493, column: 71)
!6972 = !DILocation(line: 1494, column: 25, scope: !6971)
!6973 = !DILocation(line: 1494, column: 31, scope: !6971)
!6974 = !DILocation(line: 1494, column: 36, scope: !6971)
!6975 = !DILocation(line: 1494, column: 40, scope: !6971)
!6976 = !DILocation(line: 1494, column: 51, scope: !6971)
!6977 = !DILocation(line: 1494, column: 60, scope: !6971)
!6978 = !DILocation(line: 1494, column: 59, scope: !6971)
!6979 = !DILocation(line: 1494, column: 49, scope: !6971)
!6980 = !DILocation(line: 1494, column: 63, scope: !6971)
!6981 = !DILocation(line: 1494, column: 62, scope: !6971)
!6982 = !DILocation(line: 1494, column: 73, scope: !6971)
!6983 = !DILocation(line: 1494, column: 84, scope: !6971)
!6984 = !DILocation(line: 1494, column: 93, scope: !6971)
!6985 = !DILocation(line: 1494, column: 92, scope: !6971)
!6986 = !DILocation(line: 1494, column: 82, scope: !6971)
!6987 = !DILocation(line: 1494, column: 96, scope: !6971)
!6988 = !DILocation(line: 1494, column: 95, scope: !6971)
!6989 = !DILocation(line: 1494, column: 106, scope: !6971)
!6990 = !DILocation(line: 1494, column: 117, scope: !6971)
!6991 = !DILocation(line: 1494, column: 126, scope: !6971)
!6992 = !DILocation(line: 1494, column: 125, scope: !6971)
!6993 = !DILocation(line: 1494, column: 115, scope: !6971)
!6994 = !DILocation(line: 1494, column: 129, scope: !6971)
!6995 = !DILocation(line: 1494, column: 128, scope: !6971)
!6996 = !DILocation(line: 1494, column: 5, scope: !6971)
!6997 = !DILocation(line: 1495, column: 4, scope: !6971)
!6998 = !DILocation(line: 1496, column: 8, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 1496, column: 8)
!7000 = !DILocation(line: 1496, column: 16, scope: !6999)
!7001 = !DILocation(line: 1496, column: 8, scope: !6912)
!7002 = !DILocation(line: 1497, column: 9, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !1, line: 1497, column: 9)
!7004 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 1496, column: 23)
!7005 = !DILocation(line: 1497, column: 18, scope: !7003)
!7006 = !DILocation(line: 1497, column: 55, scope: !7003)
!7007 = !DILocation(line: 1498, column: 11, scope: !7003)
!7008 = !DILocation(line: 1498, column: 20, scope: !7003)
!7009 = !DILocation(line: 1498, column: 41, scope: !7003)
!7010 = !DILocation(line: 1498, column: 46, scope: !7003)
!7011 = !DILocation(line: 1498, column: 51, scope: !7003)
!7012 = !DILocation(line: 1498, column: 64, scope: !7003)
!7013 = !DILocation(line: 1497, column: 9, scope: !7004)
!7014 = !DILocation(line: 1500, column: 21, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7003, file: !1, line: 1499, column: 5)
!7016 = !DILocation(line: 1500, column: 26, scope: !7015)
!7017 = !DILocation(line: 1500, column: 32, scope: !7015)
!7018 = !DILocation(line: 1500, column: 37, scope: !7015)
!7019 = !DILocation(line: 1500, column: 41, scope: !7015)
!7020 = !DILocation(line: 1500, column: 50, scope: !7015)
!7021 = !DILocation(line: 1500, column: 49, scope: !7015)
!7022 = !DILocation(line: 1500, column: 60, scope: !7015)
!7023 = !DILocation(line: 1500, column: 69, scope: !7015)
!7024 = !DILocation(line: 1500, column: 68, scope: !7015)
!7025 = !DILocation(line: 1500, column: 79, scope: !7015)
!7026 = !DILocation(line: 1500, column: 88, scope: !7015)
!7027 = !DILocation(line: 1500, column: 87, scope: !7015)
!7028 = !DILocation(line: 1500, column: 6, scope: !7015)
!7029 = !DILocation(line: 1501, column: 5, scope: !7015)
!7030 = !DILocation(line: 1503, column: 17, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7003, file: !1, line: 1502, column: 10)
!7032 = !DILocation(line: 1503, column: 22, scope: !7031)
!7033 = !DILocation(line: 1503, column: 28, scope: !7031)
!7034 = !DILocation(line: 1503, column: 33, scope: !7031)
!7035 = !DILocation(line: 1503, column: 6, scope: !7031)
!7036 = !DILocation(line: 1505, column: 4, scope: !7004)
!7037 = !DILocation(line: 1506, column: 3, scope: !6912)
!7038 = !DILocation(line: 1509, column: 16, scope: !6769)
!7039 = !DILocation(line: 1509, column: 3, scope: !6769)
!7040 = !DILocation(line: 1509, column: 13, scope: !6769)
!7041 = !DILocation(line: 1511, column: 7, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1511, column: 7)
!7043 = !DILocation(line: 1511, column: 17, scope: !7042)
!7044 = !DILocation(line: 1511, column: 23, scope: !7042)
!7045 = !DILocation(line: 1511, column: 26, scope: !7042)
!7046 = !DILocation(line: 1511, column: 31, scope: !7042)
!7047 = !DILocation(line: 1511, column: 35, scope: !7042)
!7048 = !DILocation(line: 1511, column: 42, scope: !7042)
!7049 = !DILocation(line: 1511, column: 47, scope: !7042)
!7050 = !DILocation(line: 1511, column: 52, scope: !7042)
!7051 = !DILocation(line: 1511, column: 57, scope: !7042)
!7052 = !DILocation(line: 1511, column: 71, scope: !7042)
!7053 = !DILocation(line: 1511, column: 76, scope: !7042)
!7054 = !DILocation(line: 1511, column: 81, scope: !7042)
!7055 = !DILocation(line: 1511, column: 86, scope: !7042)
!7056 = !DILocation(line: 1511, column: 7, scope: !6769)
!7057 = !DILocation(line: 1513, column: 10, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !1, line: 1513, column: 8)
!7059 = distinct !DILexicalBlock(scope: !7042, file: !1, line: 1511, column: 104)
!7060 = !DILocation(line: 1513, column: 19, scope: !7058)
!7061 = !DILocation(line: 1513, column: 8, scope: !7059)
!7062 = !DILocation(line: 1515, column: 4, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7058, file: !1, line: 1513, column: 59)
!7064 = !DILocation(line: 1516, column: 13, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7058, file: !1, line: 1516, column: 13)
!7066 = !DILocation(line: 1516, column: 18, scope: !7065)
!7067 = !DILocation(line: 1516, column: 23, scope: !7065)
!7068 = !DILocation(line: 1516, column: 13, scope: !7058)
!7069 = !DILocalVariable(name: "t", scope: !7070, file: !1, line: 1517, type: !147)
!7070 = distinct !DILexicalBlock(scope: !7065, file: !1, line: 1516, column: 35)
!7071 = !DILocation(line: 1517, column: 11, scope: !7070)
!7072 = !DILocation(line: 1520, column: 13, scope: !7070)
!7073 = !DILocation(line: 1520, column: 5, scope: !7070)
!7074 = !DILocation(line: 1520, column: 10, scope: !7070)
!7075 = !DILocation(line: 1521, column: 13, scope: !7070)
!7076 = !DILocation(line: 1521, column: 5, scope: !7070)
!7077 = !DILocation(line: 1521, column: 10, scope: !7070)
!7078 = !DILocation(line: 1522, column: 13, scope: !7070)
!7079 = !DILocation(line: 1522, column: 5, scope: !7070)
!7080 = !DILocation(line: 1522, column: 10, scope: !7070)
!7081 = !DILocation(line: 1524, column: 18, scope: !7070)
!7082 = !DILocation(line: 1524, column: 5, scope: !7070)
!7083 = !DILocation(line: 1526, column: 8, scope: !7070)
!7084 = !DILocation(line: 1526, column: 14, scope: !7070)
!7085 = !DILocation(line: 1526, column: 13, scope: !7070)
!7086 = !DILocation(line: 1526, column: 20, scope: !7070)
!7087 = !DILocation(line: 1526, column: 26, scope: !7070)
!7088 = !DILocation(line: 1526, column: 25, scope: !7070)
!7089 = !DILocation(line: 1526, column: 19, scope: !7070)
!7090 = !DILocation(line: 1526, column: 32, scope: !7070)
!7091 = !DILocation(line: 1526, column: 38, scope: !7070)
!7092 = !DILocation(line: 1526, column: 37, scope: !7070)
!7093 = !DILocation(line: 1526, column: 31, scope: !7070)
!7094 = !DILocation(line: 1526, column: 6, scope: !7070)
!7095 = !DILocation(line: 1528, column: 9, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7070, file: !1, line: 1528, column: 9)
!7097 = !DILocation(line: 1528, column: 14, scope: !7096)
!7098 = !DILocation(line: 1528, column: 18, scope: !7096)
!7099 = !DILocation(line: 1528, column: 9, scope: !7070)
!7100 = !DILocation(line: 1529, column: 14, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !1, line: 1528, column: 29)
!7102 = !DILocation(line: 1529, column: 13, scope: !7101)
!7103 = !DILocation(line: 1529, column: 15, scope: !7101)
!7104 = !DILocation(line: 1529, column: 7, scope: !7101)
!7105 = !DILocation(line: 1530, column: 5, scope: !7101)
!7106 = !DILocation(line: 1532, column: 8, scope: !7070)
!7107 = !DILocation(line: 1532, column: 19, scope: !7070)
!7108 = !DILocation(line: 1532, column: 24, scope: !7070)
!7109 = !DILocation(line: 1532, column: 18, scope: !7070)
!7110 = !DILocation(line: 1532, column: 34, scope: !7070)
!7111 = !DILocation(line: 1532, column: 37, scope: !7070)
!7112 = !DILocation(line: 1532, column: 42, scope: !7070)
!7113 = !DILocation(line: 1532, column: 29, scope: !7070)
!7114 = !DILocation(line: 1532, column: 28, scope: !7070)
!7115 = !DILocation(line: 1532, column: 6, scope: !7070)
!7116 = !DILocation(line: 1534, column: 20, scope: !7070)
!7117 = !DILocation(line: 1534, column: 23, scope: !7070)
!7118 = !DILocation(line: 1534, column: 34, scope: !7070)
!7119 = !DILocation(line: 1534, column: 39, scope: !7070)
!7120 = !DILocation(line: 1534, column: 32, scope: !7070)
!7121 = !DILocation(line: 1534, column: 21, scope: !7070)
!7122 = !DILocation(line: 1534, column: 5, scope: !7070)
!7123 = !DILocation(line: 1534, column: 10, scope: !7070)
!7124 = !DILocation(line: 1534, column: 17, scope: !7070)
!7125 = !DILocation(line: 1535, column: 20, scope: !7070)
!7126 = !DILocation(line: 1535, column: 23, scope: !7070)
!7127 = !DILocation(line: 1535, column: 34, scope: !7070)
!7128 = !DILocation(line: 1535, column: 39, scope: !7070)
!7129 = !DILocation(line: 1535, column: 32, scope: !7070)
!7130 = !DILocation(line: 1535, column: 21, scope: !7070)
!7131 = !DILocation(line: 1535, column: 5, scope: !7070)
!7132 = !DILocation(line: 1535, column: 10, scope: !7070)
!7133 = !DILocation(line: 1535, column: 17, scope: !7070)
!7134 = !DILocation(line: 1536, column: 20, scope: !7070)
!7135 = !DILocation(line: 1536, column: 23, scope: !7070)
!7136 = !DILocation(line: 1536, column: 34, scope: !7070)
!7137 = !DILocation(line: 1536, column: 39, scope: !7070)
!7138 = !DILocation(line: 1536, column: 32, scope: !7070)
!7139 = !DILocation(line: 1536, column: 21, scope: !7070)
!7140 = !DILocation(line: 1536, column: 5, scope: !7070)
!7141 = !DILocation(line: 1536, column: 10, scope: !7070)
!7142 = !DILocation(line: 1536, column: 17, scope: !7070)
!7143 = !DILocation(line: 1537, column: 4, scope: !7070)
!7144 = !DILocalVariable(name: "specfac", scope: !7145, file: !1, line: 1540, type: !147)
!7145 = distinct !DILexicalBlock(scope: !7065, file: !1, line: 1538, column: 9)
!7146 = !DILocation(line: 1540, column: 11, scope: !7145)
!7147 = !DILocalVariable(name: "t", scope: !7145, file: !1, line: 1540, type: !147)
!7148 = !DILocation(line: 1540, column: 20, scope: !7145)
!7149 = !DILocation(line: 1542, column: 9, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7145, file: !1, line: 1542, column: 9)
!7151 = !DILocation(line: 1542, column: 13, scope: !7150)
!7152 = !DILocation(line: 1542, column: 24, scope: !7150)
!7153 = !DILocation(line: 1542, column: 9, scope: !7145)
!7154 = !DILocation(line: 1543, column: 26, scope: !7150)
!7155 = !DILocation(line: 1543, column: 30, scope: !7150)
!7156 = !DILocation(line: 1543, column: 34, scope: !7150)
!7157 = !DILocation(line: 1543, column: 40, scope: !7150)
!7158 = !DILocation(line: 1543, column: 45, scope: !7150)
!7159 = !DILocation(line: 1543, column: 51, scope: !7150)
!7160 = !DILocation(line: 1543, column: 56, scope: !7150)
!7161 = !DILocation(line: 1543, column: 61, scope: !7150)
!7162 = !DILocation(line: 1543, column: 74, scope: !7150)
!7163 = !DILocation(line: 1543, column: 78, scope: !7150)
!7164 = !DILocation(line: 1543, column: 82, scope: !7150)
!7165 = !DILocation(line: 1543, column: 87, scope: !7150)
!7166 = !DILocation(line: 1543, column: 15, scope: !7150)
!7167 = !DILocation(line: 1543, column: 13, scope: !7150)
!7168 = !DILocation(line: 1543, column: 6, scope: !7150)
!7169 = !DILocation(line: 1544, column: 14, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7150, file: !1, line: 1544, column: 14)
!7171 = !DILocation(line: 1544, column: 18, scope: !7170)
!7172 = !DILocation(line: 1544, column: 29, scope: !7170)
!7173 = !DILocation(line: 1544, column: 14, scope: !7150)
!7174 = !DILocation(line: 1545, column: 29, scope: !7170)
!7175 = !DILocation(line: 1545, column: 33, scope: !7170)
!7176 = !DILocation(line: 1545, column: 37, scope: !7170)
!7177 = !DILocation(line: 1545, column: 43, scope: !7170)
!7178 = !DILocation(line: 1545, column: 48, scope: !7170)
!7179 = !DILocation(line: 1545, column: 54, scope: !7170)
!7180 = !DILocation(line: 1545, column: 59, scope: !7170)
!7181 = !DILocation(line: 1545, column: 64, scope: !7170)
!7182 = !DILocation(line: 1545, column: 77, scope: !7170)
!7183 = !DILocation(line: 1545, column: 81, scope: !7170)
!7184 = !DILocation(line: 1545, column: 85, scope: !7170)
!7185 = !DILocation(line: 1545, column: 90, scope: !7170)
!7186 = !DILocation(line: 1545, column: 15, scope: !7170)
!7187 = !DILocation(line: 1545, column: 13, scope: !7170)
!7188 = !DILocation(line: 1545, column: 6, scope: !7170)
!7189 = !DILocation(line: 1546, column: 14, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7170, file: !1, line: 1546, column: 14)
!7191 = !DILocation(line: 1546, column: 18, scope: !7190)
!7192 = !DILocation(line: 1546, column: 29, scope: !7190)
!7193 = !DILocation(line: 1546, column: 14, scope: !7170)
!7194 = !DILocation(line: 1547, column: 26, scope: !7190)
!7195 = !DILocation(line: 1547, column: 30, scope: !7190)
!7196 = !DILocation(line: 1547, column: 34, scope: !7190)
!7197 = !DILocation(line: 1547, column: 40, scope: !7190)
!7198 = !DILocation(line: 1547, column: 44, scope: !7190)
!7199 = !DILocation(line: 1547, column: 59, scope: !7190)
!7200 = !DILocation(line: 1547, column: 64, scope: !7190)
!7201 = !DILocation(line: 1547, column: 52, scope: !7190)
!7202 = !DILocation(line: 1547, column: 70, scope: !7190)
!7203 = !DILocation(line: 1547, column: 75, scope: !7190)
!7204 = !DILocation(line: 1547, column: 80, scope: !7190)
!7205 = !DILocation(line: 1547, column: 93, scope: !7190)
!7206 = !DILocation(line: 1547, column: 97, scope: !7190)
!7207 = !DILocation(line: 1547, column: 101, scope: !7190)
!7208 = !DILocation(line: 1547, column: 106, scope: !7190)
!7209 = !DILocation(line: 1547, column: 15, scope: !7190)
!7210 = !DILocation(line: 1547, column: 13, scope: !7190)
!7211 = !DILocation(line: 1547, column: 6, scope: !7190)
!7212 = !DILocation(line: 1548, column: 14, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 1548, column: 14)
!7214 = !DILocation(line: 1548, column: 18, scope: !7213)
!7215 = !DILocation(line: 1548, column: 29, scope: !7213)
!7216 = !DILocation(line: 1548, column: 14, scope: !7190)
!7217 = !DILocation(line: 1549, column: 29, scope: !7213)
!7218 = !DILocation(line: 1549, column: 33, scope: !7213)
!7219 = !DILocation(line: 1549, column: 37, scope: !7213)
!7220 = !DILocation(line: 1549, column: 43, scope: !7213)
!7221 = !DILocation(line: 1549, column: 47, scope: !7213)
!7222 = !DILocation(line: 1549, column: 53, scope: !7213)
!7223 = !DILocation(line: 1549, column: 58, scope: !7213)
!7224 = !DILocation(line: 1549, column: 63, scope: !7213)
!7225 = !DILocation(line: 1549, column: 76, scope: !7213)
!7226 = !DILocation(line: 1549, column: 80, scope: !7213)
!7227 = !DILocation(line: 1549, column: 84, scope: !7213)
!7228 = !DILocation(line: 1549, column: 89, scope: !7213)
!7229 = !DILocation(line: 1549, column: 15, scope: !7213)
!7230 = !DILocation(line: 1549, column: 13, scope: !7213)
!7231 = !DILocation(line: 1549, column: 6, scope: !7213)
!7232 = !DILocation(line: 1551, column: 25, scope: !7213)
!7233 = !DILocation(line: 1551, column: 29, scope: !7213)
!7234 = !DILocation(line: 1551, column: 33, scope: !7213)
!7235 = !DILocation(line: 1551, column: 39, scope: !7213)
!7236 = !DILocation(line: 1551, column: 43, scope: !7213)
!7237 = !DILocation(line: 1551, column: 53, scope: !7213)
!7238 = !DILocation(line: 1551, column: 57, scope: !7213)
!7239 = !DILocation(line: 1551, column: 68, scope: !7213)
!7240 = !DILocation(line: 1551, column: 73, scope: !7213)
!7241 = !DILocation(line: 1551, column: 78, scope: !7213)
!7242 = !DILocation(line: 1551, column: 91, scope: !7213)
!7243 = !DILocation(line: 1551, column: 95, scope: !7213)
!7244 = !DILocation(line: 1551, column: 99, scope: !7213)
!7245 = !DILocation(line: 1551, column: 104, scope: !7213)
!7246 = !DILocation(line: 1551, column: 15, scope: !7213)
!7247 = !DILocation(line: 1551, column: 13, scope: !7213)
!7248 = !DILocation(line: 1554, column: 9, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7145, file: !1, line: 1554, column: 9)
!7250 = !DILocation(line: 1554, column: 14, scope: !7249)
!7251 = !DILocation(line: 1554, column: 18, scope: !7249)
!7252 = !DILocation(line: 1554, column: 9, scope: !7145)
!7253 = !DILocation(line: 1554, column: 39, scope: !7249)
!7254 = !DILocation(line: 1554, column: 36, scope: !7249)
!7255 = !DILocation(line: 1554, column: 29, scope: !7249)
!7256 = !DILocation(line: 1556, column: 8, scope: !7145)
!7257 = !DILocation(line: 1556, column: 19, scope: !7145)
!7258 = !DILocation(line: 1556, column: 24, scope: !7145)
!7259 = !DILocation(line: 1556, column: 18, scope: !7145)
!7260 = !DILocation(line: 1556, column: 29, scope: !7145)
!7261 = !DILocation(line: 1556, column: 28, scope: !7145)
!7262 = !DILocation(line: 1556, column: 37, scope: !7145)
!7263 = !DILocation(line: 1556, column: 36, scope: !7145)
!7264 = !DILocation(line: 1556, column: 6, scope: !7145)
!7265 = !DILocation(line: 1558, column: 9, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7145, file: !1, line: 1558, column: 9)
!7267 = !DILocation(line: 1558, column: 13, scope: !7266)
!7268 = !DILocation(line: 1558, column: 18, scope: !7266)
!7269 = !DILocation(line: 1558, column: 9, scope: !7145)
!7270 = !DILocalVariable(name: "spec", scope: !7271, file: !1, line: 1559, type: !212)
!7271 = distinct !DILexicalBlock(scope: !7266, file: !1, line: 1558, column: 34)
!7272 = !DILocation(line: 1559, column: 12, scope: !7271)
!7273 = !DILocation(line: 1560, column: 23, scope: !7271)
!7274 = !DILocation(line: 1560, column: 28, scope: !7271)
!7275 = !DILocation(line: 1560, column: 37, scope: !7271)
!7276 = !DILocation(line: 1560, column: 40, scope: !7271)
!7277 = !DILocation(line: 1560, column: 6, scope: !7271)
!7278 = !DILocation(line: 1561, column: 21, scope: !7271)
!7279 = !DILocation(line: 1561, column: 24, scope: !7271)
!7280 = !DILocation(line: 1561, column: 35, scope: !7271)
!7281 = !DILocation(line: 1561, column: 33, scope: !7271)
!7282 = !DILocation(line: 1561, column: 22, scope: !7271)
!7283 = !DILocation(line: 1561, column: 6, scope: !7271)
!7284 = !DILocation(line: 1561, column: 11, scope: !7271)
!7285 = !DILocation(line: 1561, column: 18, scope: !7271)
!7286 = !DILocation(line: 1562, column: 21, scope: !7271)
!7287 = !DILocation(line: 1562, column: 24, scope: !7271)
!7288 = !DILocation(line: 1562, column: 35, scope: !7271)
!7289 = !DILocation(line: 1562, column: 33, scope: !7271)
!7290 = !DILocation(line: 1562, column: 22, scope: !7271)
!7291 = !DILocation(line: 1562, column: 6, scope: !7271)
!7292 = !DILocation(line: 1562, column: 11, scope: !7271)
!7293 = !DILocation(line: 1562, column: 18, scope: !7271)
!7294 = !DILocation(line: 1563, column: 21, scope: !7271)
!7295 = !DILocation(line: 1563, column: 24, scope: !7271)
!7296 = !DILocation(line: 1563, column: 35, scope: !7271)
!7297 = !DILocation(line: 1563, column: 33, scope: !7271)
!7298 = !DILocation(line: 1563, column: 22, scope: !7271)
!7299 = !DILocation(line: 1563, column: 6, scope: !7271)
!7300 = !DILocation(line: 1563, column: 11, scope: !7271)
!7301 = !DILocation(line: 1563, column: 18, scope: !7271)
!7302 = !DILocation(line: 1564, column: 5, scope: !7271)
!7303 = !DILocation(line: 1566, column: 21, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7266, file: !1, line: 1565, column: 10)
!7305 = !DILocation(line: 1566, column: 24, scope: !7304)
!7306 = !DILocation(line: 1566, column: 35, scope: !7304)
!7307 = !DILocation(line: 1566, column: 40, scope: !7304)
!7308 = !DILocation(line: 1566, column: 33, scope: !7304)
!7309 = !DILocation(line: 1566, column: 22, scope: !7304)
!7310 = !DILocation(line: 1566, column: 6, scope: !7304)
!7311 = !DILocation(line: 1566, column: 11, scope: !7304)
!7312 = !DILocation(line: 1566, column: 18, scope: !7304)
!7313 = !DILocation(line: 1567, column: 21, scope: !7304)
!7314 = !DILocation(line: 1567, column: 24, scope: !7304)
!7315 = !DILocation(line: 1567, column: 35, scope: !7304)
!7316 = !DILocation(line: 1567, column: 40, scope: !7304)
!7317 = !DILocation(line: 1567, column: 33, scope: !7304)
!7318 = !DILocation(line: 1567, column: 22, scope: !7304)
!7319 = !DILocation(line: 1567, column: 6, scope: !7304)
!7320 = !DILocation(line: 1567, column: 11, scope: !7304)
!7321 = !DILocation(line: 1567, column: 18, scope: !7304)
!7322 = !DILocation(line: 1568, column: 21, scope: !7304)
!7323 = !DILocation(line: 1568, column: 24, scope: !7304)
!7324 = !DILocation(line: 1568, column: 35, scope: !7304)
!7325 = !DILocation(line: 1568, column: 40, scope: !7304)
!7326 = !DILocation(line: 1568, column: 33, scope: !7304)
!7327 = !DILocation(line: 1568, column: 22, scope: !7304)
!7328 = !DILocation(line: 1568, column: 6, scope: !7304)
!7329 = !DILocation(line: 1568, column: 11, scope: !7304)
!7330 = !DILocation(line: 1568, column: 18, scope: !7304)
!7331 = !DILocation(line: 1571, column: 3, scope: !7059)
!7332 = !DILocation(line: 1572, column: 2, scope: !6769)
!7333 = !DILocation(line: 1573, column: 1, scope: !6116)
!7334 = distinct !DISubprogram(name: "wrld_exposure_correct", scope: !1, file: !1, line: 1703, type: !3989, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7335 = !DILocalVariable(name: "diff", arg: 1, scope: !7334, file: !1, line: 1703, type: !643)
!7336 = !DILocation(line: 1703, column: 41, scope: !7334)
!7337 = !DILocation(line: 1706, column: 18, scope: !7334)
!7338 = !DILocation(line: 1706, column: 37, scope: !7334)
!7339 = !DILocation(line: 1706, column: 52, scope: !7334)
!7340 = !DILocation(line: 1706, column: 44, scope: !7334)
!7341 = !DILocation(line: 1706, column: 31, scope: !7334)
!7342 = !DILocation(line: 1706, column: 30, scope: !7334)
!7343 = !DILocation(line: 1706, column: 24, scope: !7334)
!7344 = !DILocation(line: 1706, column: 2, scope: !7334)
!7345 = !DILocation(line: 1706, column: 9, scope: !7334)
!7346 = !DILocation(line: 1707, column: 18, scope: !7334)
!7347 = !DILocation(line: 1707, column: 37, scope: !7334)
!7348 = !DILocation(line: 1707, column: 52, scope: !7334)
!7349 = !DILocation(line: 1707, column: 44, scope: !7334)
!7350 = !DILocation(line: 1707, column: 31, scope: !7334)
!7351 = !DILocation(line: 1707, column: 30, scope: !7334)
!7352 = !DILocation(line: 1707, column: 24, scope: !7334)
!7353 = !DILocation(line: 1707, column: 2, scope: !7334)
!7354 = !DILocation(line: 1707, column: 9, scope: !7334)
!7355 = !DILocation(line: 1708, column: 18, scope: !7334)
!7356 = !DILocation(line: 1708, column: 37, scope: !7334)
!7357 = !DILocation(line: 1708, column: 52, scope: !7334)
!7358 = !DILocation(line: 1708, column: 44, scope: !7334)
!7359 = !DILocation(line: 1708, column: 31, scope: !7334)
!7360 = !DILocation(line: 1708, column: 30, scope: !7334)
!7361 = !DILocation(line: 1708, column: 24, scope: !7334)
!7362 = !DILocation(line: 1708, column: 2, scope: !7334)
!7363 = !DILocation(line: 1708, column: 9, scope: !7334)
!7364 = !DILocation(line: 1709, column: 1, scope: !7334)
!7365 = distinct !DISubprogram(name: "max_fff", scope: !4510, file: !4510, line: 224, type: !7366, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!147, !147, !147, !147}
!7368 = !DILocalVariable(name: "a", arg: 1, scope: !7365, file: !4510, line: 224, type: !147)
!7369 = !DILocation(line: 224, column: 29, scope: !7365)
!7370 = !DILocalVariable(name: "b", arg: 2, scope: !7365, file: !4510, line: 224, type: !147)
!7371 = !DILocation(line: 224, column: 38, scope: !7365)
!7372 = !DILocalVariable(name: "c", arg: 3, scope: !7365, file: !4510, line: 224, type: !147)
!7373 = !DILocation(line: 224, column: 47, scope: !7365)
!7374 = !DILocation(line: 226, column: 23, scope: !7365)
!7375 = !DILocation(line: 226, column: 26, scope: !7365)
!7376 = !DILocation(line: 226, column: 16, scope: !7365)
!7377 = !DILocation(line: 226, column: 30, scope: !7365)
!7378 = !DILocation(line: 226, column: 9, scope: !7365)
!7379 = !DILocation(line: 226, column: 2, scope: !7365)
!7380 = distinct !DISubprogram(name: "ambient_occlusion_apply", scope: !1, file: !1, line: 1098, type: !3682, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7381 = !DILocalVariable(name: "shi", arg: 1, scope: !7380, file: !1, line: 1098, type: !1829)
!7382 = !DILocation(line: 1098, column: 49, scope: !7380)
!7383 = !DILocalVariable(name: "shr", arg: 2, scope: !7380, file: !1, line: 1098, type: !3684)
!7384 = !DILocation(line: 1098, column: 67, scope: !7380)
!7385 = !DILocalVariable(name: "f", scope: !7380, file: !1, line: 1100, type: !147)
!7386 = !DILocation(line: 1100, column: 8, scope: !7380)
!7387 = !DILocation(line: 1100, column: 18, scope: !7380)
!7388 = !DILocalVariable(name: "tmp", scope: !7380, file: !1, line: 1101, type: !212)
!7389 = !DILocation(line: 1101, column: 8, scope: !7380)
!7390 = !DILocalVariable(name: "tmpspec", scope: !7380, file: !1, line: 1101, type: !212)
!7391 = !DILocation(line: 1101, column: 16, scope: !7380)
!7392 = !DILocation(line: 1103, column: 13, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 1103, column: 6)
!7394 = !DILocation(line: 1103, column: 18, scope: !7393)
!7395 = !DILocation(line: 1103, column: 32, scope: !7393)
!7396 = !DILocation(line: 1103, column: 42, scope: !7393)
!7397 = !DILocation(line: 1103, column: 35, scope: !7393)
!7398 = !DILocation(line: 1103, column: 59, scope: !7393)
!7399 = !DILocation(line: 1103, column: 6, scope: !7380)
!7400 = !DILocation(line: 1104, column: 3, scope: !7393)
!7401 = !DILocation(line: 1105, column: 6, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 1105, column: 6)
!7403 = !DILocation(line: 1105, column: 8, scope: !7402)
!7404 = !DILocation(line: 1105, column: 6, scope: !7380)
!7405 = !DILocation(line: 1106, column: 3, scope: !7402)
!7406 = !DILocation(line: 1108, column: 13, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 1108, column: 6)
!7408 = !DILocation(line: 1108, column: 6, scope: !7407)
!7409 = !DILocation(line: 1108, column: 18, scope: !7407)
!7410 = !DILocation(line: 1108, column: 6, scope: !7380)
!7411 = !DILocation(line: 1109, column: 23, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7407, file: !1, line: 1108, column: 30)
!7413 = !DILocation(line: 1109, column: 28, scope: !7412)
!7414 = !DILocation(line: 1109, column: 34, scope: !7412)
!7415 = !DILocation(line: 1109, column: 39, scope: !7412)
!7416 = !DILocation(line: 1109, column: 33, scope: !7412)
!7417 = !DILocation(line: 1109, column: 41, scope: !7412)
!7418 = !DILocation(line: 1109, column: 46, scope: !7412)
!7419 = !DILocation(line: 1109, column: 40, scope: !7412)
!7420 = !DILocation(line: 1109, column: 51, scope: !7412)
!7421 = !DILocation(line: 1109, column: 50, scope: !7412)
!7422 = !DILocation(line: 1109, column: 3, scope: !7412)
!7423 = !DILocation(line: 1109, column: 8, scope: !7412)
!7424 = !DILocation(line: 1109, column: 20, scope: !7412)
!7425 = !DILocation(line: 1110, column: 23, scope: !7412)
!7426 = !DILocation(line: 1110, column: 28, scope: !7412)
!7427 = !DILocation(line: 1110, column: 34, scope: !7412)
!7428 = !DILocation(line: 1110, column: 39, scope: !7412)
!7429 = !DILocation(line: 1110, column: 33, scope: !7412)
!7430 = !DILocation(line: 1110, column: 41, scope: !7412)
!7431 = !DILocation(line: 1110, column: 46, scope: !7412)
!7432 = !DILocation(line: 1110, column: 40, scope: !7412)
!7433 = !DILocation(line: 1110, column: 51, scope: !7412)
!7434 = !DILocation(line: 1110, column: 50, scope: !7412)
!7435 = !DILocation(line: 1110, column: 3, scope: !7412)
!7436 = !DILocation(line: 1110, column: 8, scope: !7412)
!7437 = !DILocation(line: 1110, column: 20, scope: !7412)
!7438 = !DILocation(line: 1111, column: 23, scope: !7412)
!7439 = !DILocation(line: 1111, column: 28, scope: !7412)
!7440 = !DILocation(line: 1111, column: 34, scope: !7412)
!7441 = !DILocation(line: 1111, column: 39, scope: !7412)
!7442 = !DILocation(line: 1111, column: 33, scope: !7412)
!7443 = !DILocation(line: 1111, column: 41, scope: !7412)
!7444 = !DILocation(line: 1111, column: 46, scope: !7412)
!7445 = !DILocation(line: 1111, column: 40, scope: !7412)
!7446 = !DILocation(line: 1111, column: 51, scope: !7412)
!7447 = !DILocation(line: 1111, column: 50, scope: !7412)
!7448 = !DILocation(line: 1111, column: 3, scope: !7412)
!7449 = !DILocation(line: 1111, column: 8, scope: !7412)
!7450 = !DILocation(line: 1111, column: 20, scope: !7412)
!7451 = !DILocation(line: 1112, column: 2, scope: !7412)
!7452 = !DILocation(line: 1113, column: 18, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7407, file: !1, line: 1113, column: 11)
!7454 = !DILocation(line: 1113, column: 11, scope: !7453)
!7455 = !DILocation(line: 1113, column: 23, scope: !7453)
!7456 = !DILocation(line: 1113, column: 11, scope: !7407)
!7457 = !DILocation(line: 1114, column: 15, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 1113, column: 35)
!7459 = !DILocation(line: 1114, column: 20, scope: !7458)
!7460 = !DILocation(line: 1114, column: 25, scope: !7458)
!7461 = !DILocation(line: 1114, column: 35, scope: !7458)
!7462 = !DILocation(line: 1114, column: 40, scope: !7458)
!7463 = !DILocation(line: 1114, column: 3, scope: !7458)
!7464 = !DILocation(line: 1115, column: 15, scope: !7458)
!7465 = !DILocation(line: 1115, column: 24, scope: !7458)
!7466 = !DILocation(line: 1115, column: 29, scope: !7458)
!7467 = !DILocation(line: 1115, column: 35, scope: !7458)
!7468 = !DILocation(line: 1115, column: 40, scope: !7458)
!7469 = !DILocation(line: 1115, column: 3, scope: !7458)
!7470 = !DILocation(line: 1117, column: 7, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7458, file: !1, line: 1117, column: 7)
!7472 = !DILocation(line: 1117, column: 9, scope: !7471)
!7473 = !DILocation(line: 1117, column: 7, scope: !7458)
!7474 = !DILocation(line: 1118, column: 15, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 1117, column: 18)
!7476 = !DILocation(line: 1118, column: 20, scope: !7475)
!7477 = !DILocation(line: 1118, column: 30, scope: !7475)
!7478 = !DILocation(line: 1118, column: 4, scope: !7475)
!7479 = !DILocation(line: 1119, column: 15, scope: !7475)
!7480 = !DILocation(line: 1119, column: 20, scope: !7475)
!7481 = !DILocation(line: 1119, column: 26, scope: !7475)
!7482 = !DILocation(line: 1119, column: 4, scope: !7475)
!7483 = !DILocation(line: 1120, column: 3, scope: !7475)
!7484 = !DILocation(line: 1122, column: 19, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 1121, column: 8)
!7486 = !DILocation(line: 1122, column: 24, scope: !7485)
!7487 = !DILocation(line: 1122, column: 34, scope: !7485)
!7488 = !DILocation(line: 1122, column: 39, scope: !7485)
!7489 = !DILocation(line: 1122, column: 49, scope: !7485)
!7490 = !DILocation(line: 1122, column: 54, scope: !7485)
!7491 = !DILocation(line: 1122, column: 4, scope: !7485)
!7492 = !DILocation(line: 1123, column: 19, scope: !7485)
!7493 = !DILocation(line: 1123, column: 24, scope: !7485)
!7494 = !DILocation(line: 1123, column: 30, scope: !7485)
!7495 = !DILocation(line: 1123, column: 35, scope: !7485)
!7496 = !DILocation(line: 1123, column: 41, scope: !7485)
!7497 = !DILocation(line: 1123, column: 50, scope: !7485)
!7498 = !DILocation(line: 1123, column: 4, scope: !7485)
!7499 = !DILocation(line: 1125, column: 2, scope: !7458)
!7500 = !DILocation(line: 1126, column: 1, scope: !7380)
!7501 = distinct !DISubprogram(name: "indirect_lighting_apply", scope: !1, file: !1, line: 1142, type: !3682, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7502 = !DILocalVariable(name: "shi", arg: 1, scope: !7501, file: !1, line: 1142, type: !1829)
!7503 = !DILocation(line: 1142, column: 49, scope: !7501)
!7504 = !DILocalVariable(name: "shr", arg: 2, scope: !7501, file: !1, line: 1142, type: !3684)
!7505 = !DILocation(line: 1142, column: 67, scope: !7501)
!7506 = !DILocalVariable(name: "f", scope: !7501, file: !1, line: 1144, type: !147)
!7507 = !DILocation(line: 1144, column: 8, scope: !7501)
!7508 = !DILocation(line: 1144, column: 18, scope: !7501)
!7509 = !DILocation(line: 1146, column: 13, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 1146, column: 6)
!7511 = !DILocation(line: 1146, column: 18, scope: !7510)
!7512 = !DILocation(line: 1146, column: 32, scope: !7510)
!7513 = !DILocation(line: 1146, column: 42, scope: !7510)
!7514 = !DILocation(line: 1146, column: 35, scope: !7510)
!7515 = !DILocation(line: 1146, column: 59, scope: !7510)
!7516 = !DILocation(line: 1146, column: 6, scope: !7501)
!7517 = !DILocation(line: 1147, column: 3, scope: !7510)
!7518 = !DILocation(line: 1148, column: 6, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 1148, column: 6)
!7520 = !DILocation(line: 1148, column: 8, scope: !7519)
!7521 = !DILocation(line: 1148, column: 6, scope: !7501)
!7522 = !DILocation(line: 1149, column: 3, scope: !7519)
!7523 = !DILocation(line: 1151, column: 22, scope: !7501)
!7524 = !DILocation(line: 1151, column: 27, scope: !7501)
!7525 = !DILocation(line: 1151, column: 39, scope: !7501)
!7526 = !DILocation(line: 1151, column: 44, scope: !7501)
!7527 = !DILocation(line: 1151, column: 38, scope: !7501)
!7528 = !DILocation(line: 1151, column: 46, scope: !7501)
!7529 = !DILocation(line: 1151, column: 51, scope: !7501)
!7530 = !DILocation(line: 1151, column: 45, scope: !7501)
!7531 = !DILocation(line: 1151, column: 56, scope: !7501)
!7532 = !DILocation(line: 1151, column: 55, scope: !7501)
!7533 = !DILocation(line: 1151, column: 2, scope: !7501)
!7534 = !DILocation(line: 1151, column: 7, scope: !7501)
!7535 = !DILocation(line: 1151, column: 19, scope: !7501)
!7536 = !DILocation(line: 1152, column: 22, scope: !7501)
!7537 = !DILocation(line: 1152, column: 27, scope: !7501)
!7538 = !DILocation(line: 1152, column: 39, scope: !7501)
!7539 = !DILocation(line: 1152, column: 44, scope: !7501)
!7540 = !DILocation(line: 1152, column: 38, scope: !7501)
!7541 = !DILocation(line: 1152, column: 46, scope: !7501)
!7542 = !DILocation(line: 1152, column: 51, scope: !7501)
!7543 = !DILocation(line: 1152, column: 45, scope: !7501)
!7544 = !DILocation(line: 1152, column: 56, scope: !7501)
!7545 = !DILocation(line: 1152, column: 55, scope: !7501)
!7546 = !DILocation(line: 1152, column: 2, scope: !7501)
!7547 = !DILocation(line: 1152, column: 7, scope: !7501)
!7548 = !DILocation(line: 1152, column: 19, scope: !7501)
!7549 = !DILocation(line: 1153, column: 22, scope: !7501)
!7550 = !DILocation(line: 1153, column: 27, scope: !7501)
!7551 = !DILocation(line: 1153, column: 39, scope: !7501)
!7552 = !DILocation(line: 1153, column: 44, scope: !7501)
!7553 = !DILocation(line: 1153, column: 38, scope: !7501)
!7554 = !DILocation(line: 1153, column: 46, scope: !7501)
!7555 = !DILocation(line: 1153, column: 51, scope: !7501)
!7556 = !DILocation(line: 1153, column: 45, scope: !7501)
!7557 = !DILocation(line: 1153, column: 56, scope: !7501)
!7558 = !DILocation(line: 1153, column: 55, scope: !7501)
!7559 = !DILocation(line: 1153, column: 2, scope: !7501)
!7560 = !DILocation(line: 1153, column: 7, scope: !7501)
!7561 = !DILocation(line: 1153, column: 19, scope: !7501)
!7562 = !DILocation(line: 1154, column: 1, scope: !7501)
!7563 = distinct !DISubprogram(name: "ramp_diffuse_result", scope: !1, file: !1, line: 946, type: !7564, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !643, !1829}
!7566 = !DILocalVariable(name: "diff", arg: 1, scope: !7563, file: !1, line: 946, type: !643)
!7567 = !DILocation(line: 946, column: 40, scope: !7563)
!7568 = !DILocalVariable(name: "shi", arg: 2, scope: !7563, file: !1, line: 946, type: !1829)
!7569 = !DILocation(line: 946, column: 58, scope: !7563)
!7570 = !DILocalVariable(name: "ma", scope: !7563, file: !1, line: 948, type: !3711)
!7571 = !DILocation(line: 948, column: 12, scope: !7563)
!7572 = !DILocation(line: 948, column: 16, scope: !7563)
!7573 = !DILocation(line: 948, column: 21, scope: !7563)
!7574 = !DILocalVariable(name: "col", scope: !7563, file: !1, line: 949, type: !511)
!7575 = !DILocation(line: 949, column: 8, scope: !7563)
!7576 = !DILocation(line: 951, column: 6, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7563, file: !1, line: 951, column: 6)
!7578 = !DILocation(line: 951, column: 10, scope: !7577)
!7579 = !DILocation(line: 951, column: 6, scope: !7563)
!7580 = !DILocation(line: 952, column: 7, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 952, column: 7)
!7582 = distinct !DILexicalBlock(scope: !7577, file: !1, line: 951, column: 20)
!7583 = !DILocation(line: 952, column: 11, scope: !7581)
!7584 = !DILocation(line: 952, column: 21, scope: !7581)
!7585 = !DILocation(line: 952, column: 7, scope: !7582)
!7586 = !DILocalVariable(name: "fac", scope: !7587, file: !1, line: 953, type: !147)
!7587 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 952, column: 42)
!7588 = !DILocation(line: 953, column: 10, scope: !7587)
!7589 = !DILocation(line: 953, column: 33, scope: !7587)
!7590 = !DILocation(line: 953, column: 16, scope: !7587)
!7591 = !DILocation(line: 954, column: 17, scope: !7587)
!7592 = !DILocation(line: 954, column: 21, scope: !7587)
!7593 = !DILocation(line: 954, column: 31, scope: !7587)
!7594 = !DILocation(line: 954, column: 36, scope: !7587)
!7595 = !DILocation(line: 954, column: 4, scope: !7587)
!7596 = !DILocation(line: 957, column: 9, scope: !7587)
!7597 = !DILocation(line: 957, column: 16, scope: !7587)
!7598 = !DILocation(line: 957, column: 20, scope: !7587)
!7599 = !DILocation(line: 957, column: 15, scope: !7587)
!7600 = !DILocation(line: 957, column: 7, scope: !7587)
!7601 = !DILocation(line: 959, column: 15, scope: !7587)
!7602 = !DILocation(line: 959, column: 19, scope: !7587)
!7603 = !DILocation(line: 959, column: 34, scope: !7587)
!7604 = !DILocation(line: 959, column: 40, scope: !7587)
!7605 = !DILocation(line: 959, column: 45, scope: !7587)
!7606 = !DILocation(line: 959, column: 4, scope: !7587)
!7607 = !DILocation(line: 960, column: 3, scope: !7587)
!7608 = !DILocation(line: 961, column: 2, scope: !7582)
!7609 = !DILocation(line: 962, column: 1, scope: !7563)
!7610 = distinct !DISubprogram(name: "ramp_spec_result", scope: !1, file: !1, line: 1022, type: !7564, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7611 = !DILocalVariable(name: "spec_col", arg: 1, scope: !7610, file: !1, line: 1022, type: !643)
!7612 = !DILocation(line: 1022, column: 36, scope: !7610)
!7613 = !DILocalVariable(name: "shi", arg: 2, scope: !7610, file: !1, line: 1022, type: !1829)
!7614 = !DILocation(line: 1022, column: 61, scope: !7610)
!7615 = !DILocalVariable(name: "ma", scope: !7610, file: !1, line: 1024, type: !3711)
!7616 = !DILocation(line: 1024, column: 12, scope: !7610)
!7617 = !DILocation(line: 1024, column: 16, scope: !7610)
!7618 = !DILocation(line: 1024, column: 21, scope: !7610)
!7619 = !DILocation(line: 1026, column: 6, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7610, file: !1, line: 1026, column: 6)
!7621 = !DILocation(line: 1026, column: 10, scope: !7620)
!7622 = !DILocation(line: 1026, column: 20, scope: !7620)
!7623 = !DILocation(line: 1026, column: 24, scope: !7620)
!7624 = !DILocation(line: 1026, column: 28, scope: !7620)
!7625 = !DILocation(line: 1026, column: 39, scope: !7620)
!7626 = !DILocation(line: 1026, column: 6, scope: !7610)
!7627 = !DILocalVariable(name: "col", scope: !7628, file: !1, line: 1027, type: !511)
!7628 = distinct !DILexicalBlock(scope: !7620, file: !1, line: 1026, column: 61)
!7629 = !DILocation(line: 1027, column: 9, scope: !7628)
!7630 = !DILocalVariable(name: "fac", scope: !7628, file: !1, line: 1028, type: !147)
!7631 = !DILocation(line: 1028, column: 9, scope: !7628)
!7632 = !DILocation(line: 1028, column: 32, scope: !7628)
!7633 = !DILocation(line: 1028, column: 15, scope: !7628)
!7634 = !DILocation(line: 1030, column: 16, scope: !7628)
!7635 = !DILocation(line: 1030, column: 20, scope: !7628)
!7636 = !DILocation(line: 1030, column: 31, scope: !7628)
!7637 = !DILocation(line: 1030, column: 36, scope: !7628)
!7638 = !DILocation(line: 1030, column: 3, scope: !7628)
!7639 = !DILocation(line: 1033, column: 8, scope: !7628)
!7640 = !DILocation(line: 1033, column: 15, scope: !7628)
!7641 = !DILocation(line: 1033, column: 19, scope: !7628)
!7642 = !DILocation(line: 1033, column: 14, scope: !7628)
!7643 = !DILocation(line: 1033, column: 6, scope: !7628)
!7644 = !DILocation(line: 1035, column: 14, scope: !7628)
!7645 = !DILocation(line: 1035, column: 18, scope: !7628)
!7646 = !DILocation(line: 1035, column: 34, scope: !7628)
!7647 = !DILocation(line: 1035, column: 44, scope: !7628)
!7648 = !DILocation(line: 1035, column: 49, scope: !7628)
!7649 = !DILocation(line: 1035, column: 3, scope: !7628)
!7650 = !DILocation(line: 1037, column: 2, scope: !7628)
!7651 = !DILocation(line: 1038, column: 1, scope: !7610)
!7652 = distinct !DISubprogram(name: "add_v3_v3", scope: !3298, file: !3298, line: 302, type: !3903, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7653 = !DILocalVariable(name: "r", arg: 1, scope: !7652, file: !3298, line: 302, type: !643)
!7654 = !DILocation(line: 302, column: 30, scope: !7652)
!7655 = !DILocalVariable(name: "a", arg: 2, scope: !7652, file: !3298, line: 302, type: !2219)
!7656 = !DILocation(line: 302, column: 48, scope: !7652)
!7657 = !DILocation(line: 304, column: 10, scope: !7652)
!7658 = !DILocation(line: 304, column: 2, scope: !7652)
!7659 = !DILocation(line: 304, column: 7, scope: !7652)
!7660 = !DILocation(line: 305, column: 10, scope: !7652)
!7661 = !DILocation(line: 305, column: 2, scope: !7652)
!7662 = !DILocation(line: 305, column: 7, scope: !7652)
!7663 = !DILocation(line: 306, column: 10, scope: !7652)
!7664 = !DILocation(line: 306, column: 2, scope: !7652)
!7665 = !DILocation(line: 306, column: 7, scope: !7652)
!7666 = !DILocation(line: 307, column: 1, scope: !7652)
!7667 = distinct !DISubprogram(name: "RE_lamp_get_data", scope: !1, file: !1, line: 2050, type: !7668, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!147, !1829, !1987, !643, !643, !643, !643}
!7670 = !DILocalVariable(name: "shi", arg: 1, scope: !7667, file: !1, line: 2050, type: !1829)
!7671 = !DILocation(line: 2050, column: 36, scope: !7667)
!7672 = !DILocalVariable(name: "lamp_obj", arg: 2, scope: !7667, file: !1, line: 2050, type: !1987)
!7673 = !DILocation(line: 2050, column: 49, scope: !7667)
!7674 = !DILocalVariable(name: "col", arg: 3, scope: !7667, file: !1, line: 2050, type: !643)
!7675 = !DILocation(line: 2050, column: 65, scope: !7667)
!7676 = !DILocalVariable(name: "lv", arg: 4, scope: !7667, file: !1, line: 2050, type: !643)
!7677 = !DILocation(line: 2050, column: 79, scope: !7667)
!7678 = !DILocalVariable(name: "dist", arg: 5, scope: !7667, file: !1, line: 2050, type: !643)
!7679 = !DILocation(line: 2050, column: 93, scope: !7667)
!7680 = !DILocalVariable(name: "shadow", arg: 6, scope: !7667, file: !1, line: 2050, type: !643)
!7681 = !DILocation(line: 2050, column: 105, scope: !7667)
!7682 = !DILocation(line: 2052, column: 20, scope: !7667)
!7683 = !DILocation(line: 2052, column: 27, scope: !7667)
!7684 = !DILocation(line: 2052, column: 11, scope: !7667)
!7685 = !DILocation(line: 2052, column: 18, scope: !7667)
!7686 = !DILocation(line: 2052, column: 2, scope: !7667)
!7687 = !DILocation(line: 2052, column: 9, scope: !7667)
!7688 = !DILocation(line: 2053, column: 2, scope: !7667)
!7689 = !DILocation(line: 2053, column: 9, scope: !7667)
!7690 = !DILocation(line: 2054, column: 13, scope: !7667)
!7691 = !DILocation(line: 2054, column: 17, scope: !7667)
!7692 = !DILocation(line: 2054, column: 22, scope: !7667)
!7693 = !DILocation(line: 2054, column: 2, scope: !7667)
!7694 = !DILocation(line: 2055, column: 3, scope: !7667)
!7695 = !DILocation(line: 2055, column: 8, scope: !7667)
!7696 = !DILocation(line: 2056, column: 38, scope: !7667)
!7697 = !DILocation(line: 2056, column: 48, scope: !7667)
!7698 = !DILocation(line: 2056, column: 26, scope: !7667)
!7699 = !DILocation(line: 2056, column: 36, scope: !7667)
!7700 = !DILocation(line: 2056, column: 14, scope: !7667)
!7701 = !DILocation(line: 2056, column: 24, scope: !7667)
!7702 = !DILocation(line: 2056, column: 2, scope: !7667)
!7703 = !DILocation(line: 2056, column: 12, scope: !7667)
!7704 = !DILocation(line: 2058, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7667, file: !1, line: 2058, column: 6)
!7706 = !DILocation(line: 2058, column: 16, scope: !7705)
!7707 = !DILocation(line: 2058, column: 21, scope: !7705)
!7708 = !DILocation(line: 2058, column: 6, scope: !7667)
!7709 = !DILocalVariable(name: "go", scope: !7710, file: !1, line: 2059, type: !2339)
!7710 = distinct !DILexicalBlock(scope: !7705, file: !1, line: 2058, column: 33)
!7711 = !DILocation(line: 2059, column: 16, scope: !7710)
!7712 = !DILocalVariable(name: "lamp", scope: !7710, file: !1, line: 2060, type: !63)
!7713 = !DILocation(line: 2060, column: 9, scope: !7710)
!7714 = !DILocation(line: 2060, column: 24, scope: !7710)
!7715 = !DILocation(line: 2060, column: 34, scope: !7710)
!7716 = !DILocation(line: 2060, column: 16, scope: !7710)
!7717 = !DILocation(line: 2062, column: 12, scope: !7710)
!7718 = !DILocation(line: 2062, column: 18, scope: !7710)
!7719 = !DILocation(line: 2062, column: 22, scope: !7710)
!7720 = !DILocation(line: 2062, column: 28, scope: !7710)
!7721 = !DILocation(line: 2062, column: 20, scope: !7710)
!7722 = !DILocation(line: 2062, column: 3, scope: !7710)
!7723 = !DILocation(line: 2062, column: 10, scope: !7710)
!7724 = !DILocation(line: 2063, column: 12, scope: !7710)
!7725 = !DILocation(line: 2063, column: 18, scope: !7710)
!7726 = !DILocation(line: 2063, column: 22, scope: !7710)
!7727 = !DILocation(line: 2063, column: 28, scope: !7710)
!7728 = !DILocation(line: 2063, column: 20, scope: !7710)
!7729 = !DILocation(line: 2063, column: 3, scope: !7710)
!7730 = !DILocation(line: 2063, column: 10, scope: !7710)
!7731 = !DILocation(line: 2064, column: 12, scope: !7710)
!7732 = !DILocation(line: 2064, column: 18, scope: !7710)
!7733 = !DILocation(line: 2064, column: 22, scope: !7710)
!7734 = !DILocation(line: 2064, column: 28, scope: !7710)
!7735 = !DILocation(line: 2064, column: 20, scope: !7710)
!7736 = !DILocation(line: 2064, column: 3, scope: !7710)
!7737 = !DILocation(line: 2064, column: 10, scope: !7710)
!7738 = !DILocation(line: 2066, column: 11, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2066, column: 7)
!7740 = !DILocation(line: 2066, column: 19, scope: !7739)
!7741 = !DILocation(line: 2066, column: 7, scope: !7710)
!7742 = !DILocation(line: 2067, column: 23, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !1, line: 2067, column: 4)
!7744 = distinct !DILexicalBlock(scope: !7739, file: !1, line: 2066, column: 37)
!7745 = !DILocation(line: 2067, column: 14, scope: !7743)
!7746 = !DILocation(line: 2067, column: 12, scope: !7743)
!7747 = !DILocation(line: 2067, column: 9, scope: !7743)
!7748 = !DILocation(line: 2067, column: 30, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 2067, column: 4)
!7750 = !DILocation(line: 2067, column: 4, scope: !7743)
!7751 = !DILocation(line: 2069, column: 16, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !1, line: 2069, column: 9)
!7753 = distinct !DILexicalBlock(scope: !7749, file: !1, line: 2067, column: 49)
!7754 = !DILocation(line: 2069, column: 20, scope: !7752)
!7755 = !DILocation(line: 2069, column: 24, scope: !7752)
!7756 = !DILocation(line: 2069, column: 27, scope: !7752)
!7757 = !DILocation(line: 2069, column: 32, scope: !7752)
!7758 = !DILocation(line: 2069, column: 9, scope: !7752)
!7759 = !DILocation(line: 2069, column: 49, scope: !7752)
!7760 = !DILocation(line: 2069, column: 9, scope: !7753)
!7761 = !DILocation(line: 2070, column: 36, scope: !7752)
!7762 = !DILocation(line: 2070, column: 41, scope: !7752)
!7763 = !DILocation(line: 2070, column: 45, scope: !7752)
!7764 = !DILocation(line: 2070, column: 50, scope: !7752)
!7765 = !DILocation(line: 2070, column: 54, scope: !7752)
!7766 = !DILocation(line: 2070, column: 60, scope: !7752)
!7767 = !DILocation(line: 2070, column: 13, scope: !7752)
!7768 = !DILocation(line: 2070, column: 6, scope: !7752)
!7769 = !DILocation(line: 2071, column: 4, scope: !7753)
!7770 = !DILocation(line: 2067, column: 39, scope: !7749)
!7771 = !DILocation(line: 2067, column: 43, scope: !7749)
!7772 = !DILocation(line: 2067, column: 37, scope: !7749)
!7773 = !DILocation(line: 2067, column: 4, scope: !7749)
!7774 = distinct !{!7774, !7750, !7775}
!7775 = !DILocation(line: 2071, column: 4, scope: !7743)
!7776 = !DILocation(line: 2072, column: 4, scope: !7744)
!7777 = !DILocation(line: 2075, column: 7, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2075, column: 7)
!7779 = !DILocation(line: 2075, column: 12, scope: !7778)
!7780 = !DILocation(line: 2075, column: 7, scope: !7710)
!7781 = !DILocation(line: 2076, column: 14, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !1, line: 2076, column: 4)
!7783 = distinct !DILexicalBlock(scope: !7778, file: !1, line: 2075, column: 28)
!7784 = !DILocation(line: 2076, column: 19, scope: !7782)
!7785 = !DILocation(line: 2076, column: 35, scope: !7782)
!7786 = !DILocation(line: 2076, column: 43, scope: !7782)
!7787 = !DILocation(line: 2076, column: 12, scope: !7782)
!7788 = !DILocation(line: 2076, column: 9, scope: !7782)
!7789 = !DILocation(line: 2076, column: 50, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7782, file: !1, line: 2076, column: 4)
!7791 = !DILocation(line: 2076, column: 4, scope: !7782)
!7792 = !DILocation(line: 2077, column: 9, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !1, line: 2077, column: 9)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !1, line: 2076, column: 69)
!7795 = !DILocation(line: 2077, column: 13, scope: !7793)
!7796 = !DILocation(line: 2077, column: 19, scope: !7793)
!7797 = !DILocation(line: 2077, column: 16, scope: !7793)
!7798 = !DILocation(line: 2077, column: 9, scope: !7794)
!7799 = !DILocation(line: 2078, column: 36, scope: !7793)
!7800 = !DILocation(line: 2078, column: 41, scope: !7793)
!7801 = !DILocation(line: 2078, column: 45, scope: !7793)
!7802 = !DILocation(line: 2078, column: 50, scope: !7793)
!7803 = !DILocation(line: 2078, column: 54, scope: !7793)
!7804 = !DILocation(line: 2078, column: 60, scope: !7793)
!7805 = !DILocation(line: 2078, column: 13, scope: !7793)
!7806 = !DILocation(line: 2078, column: 6, scope: !7793)
!7807 = !DILocation(line: 2079, column: 4, scope: !7794)
!7808 = !DILocation(line: 2076, column: 59, scope: !7790)
!7809 = !DILocation(line: 2076, column: 63, scope: !7790)
!7810 = !DILocation(line: 2076, column: 57, scope: !7790)
!7811 = !DILocation(line: 2076, column: 4, scope: !7790)
!7812 = distinct !{!7812, !7791, !7813}
!7813 = !DILocation(line: 2079, column: 4, scope: !7782)
!7814 = !DILocation(line: 2080, column: 3, scope: !7783)
!7815 = !DILocation(line: 2082, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2082, column: 7)
!7817 = !DILocation(line: 2082, column: 12, scope: !7816)
!7818 = !DILocation(line: 2082, column: 16, scope: !7816)
!7819 = !DILocation(line: 2082, column: 19, scope: !7816)
!7820 = !DILocation(line: 2082, column: 24, scope: !7816)
!7821 = !DILocation(line: 2082, column: 29, scope: !7816)
!7822 = !DILocation(line: 2082, column: 7, scope: !7710)
!7823 = !DILocation(line: 2083, column: 14, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !1, line: 2083, column: 4)
!7825 = distinct !DILexicalBlock(scope: !7816, file: !1, line: 2082, column: 36)
!7826 = !DILocation(line: 2083, column: 19, scope: !7824)
!7827 = !DILocation(line: 2083, column: 24, scope: !7824)
!7828 = !DILocation(line: 2083, column: 31, scope: !7824)
!7829 = !DILocation(line: 2083, column: 39, scope: !7824)
!7830 = !DILocation(line: 2083, column: 12, scope: !7824)
!7831 = !DILocation(line: 2083, column: 9, scope: !7824)
!7832 = !DILocation(line: 2083, column: 46, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7824, file: !1, line: 2083, column: 4)
!7834 = !DILocation(line: 2083, column: 4, scope: !7824)
!7835 = !DILocation(line: 2084, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !1, line: 2084, column: 9)
!7837 = distinct !DILexicalBlock(scope: !7833, file: !1, line: 2083, column: 65)
!7838 = !DILocation(line: 2084, column: 13, scope: !7836)
!7839 = !DILocation(line: 2084, column: 19, scope: !7836)
!7840 = !DILocation(line: 2084, column: 16, scope: !7836)
!7841 = !DILocation(line: 2084, column: 9, scope: !7837)
!7842 = !DILocation(line: 2085, column: 36, scope: !7836)
!7843 = !DILocation(line: 2085, column: 41, scope: !7836)
!7844 = !DILocation(line: 2085, column: 45, scope: !7836)
!7845 = !DILocation(line: 2085, column: 50, scope: !7836)
!7846 = !DILocation(line: 2085, column: 54, scope: !7836)
!7847 = !DILocation(line: 2085, column: 60, scope: !7836)
!7848 = !DILocation(line: 2085, column: 13, scope: !7836)
!7849 = !DILocation(line: 2085, column: 6, scope: !7836)
!7850 = !DILocation(line: 2086, column: 4, scope: !7837)
!7851 = !DILocation(line: 2083, column: 55, scope: !7833)
!7852 = !DILocation(line: 2083, column: 59, scope: !7833)
!7853 = !DILocation(line: 2083, column: 53, scope: !7833)
!7854 = !DILocation(line: 2083, column: 4, scope: !7833)
!7855 = distinct !{!7855, !7834, !7856}
!7856 = !DILocation(line: 2086, column: 4, scope: !7824)
!7857 = !DILocation(line: 2087, column: 3, scope: !7825)
!7858 = !DILocation(line: 2089, column: 22, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2089, column: 3)
!7860 = !DILocation(line: 2089, column: 13, scope: !7859)
!7861 = !DILocation(line: 2089, column: 11, scope: !7859)
!7862 = !DILocation(line: 2089, column: 8, scope: !7859)
!7863 = !DILocation(line: 2089, column: 29, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2089, column: 3)
!7865 = !DILocation(line: 2089, column: 3, scope: !7859)
!7866 = !DILocation(line: 2090, column: 8, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !1, line: 2090, column: 8)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !1, line: 2089, column: 48)
!7869 = !DILocation(line: 2090, column: 12, scope: !7867)
!7870 = !DILocation(line: 2090, column: 18, scope: !7867)
!7871 = !DILocation(line: 2090, column: 15, scope: !7867)
!7872 = !DILocation(line: 2090, column: 8, scope: !7868)
!7873 = !DILocation(line: 2091, column: 35, scope: !7867)
!7874 = !DILocation(line: 2091, column: 40, scope: !7867)
!7875 = !DILocation(line: 2091, column: 44, scope: !7867)
!7876 = !DILocation(line: 2091, column: 49, scope: !7867)
!7877 = !DILocation(line: 2091, column: 53, scope: !7867)
!7878 = !DILocation(line: 2091, column: 59, scope: !7867)
!7879 = !DILocation(line: 2091, column: 12, scope: !7867)
!7880 = !DILocation(line: 2091, column: 5, scope: !7867)
!7881 = !DILocation(line: 2092, column: 3, scope: !7868)
!7882 = !DILocation(line: 2089, column: 38, scope: !7864)
!7883 = !DILocation(line: 2089, column: 42, scope: !7864)
!7884 = !DILocation(line: 2089, column: 36, scope: !7864)
!7885 = !DILocation(line: 2089, column: 3, scope: !7864)
!7886 = distinct !{!7886, !7865, !7887}
!7887 = !DILocation(line: 2092, column: 3, scope: !7859)
!7888 = !DILocation(line: 2093, column: 2, scope: !7710)
!7889 = !DILocation(line: 2095, column: 2, scope: !7667)
!7890 = !DILocation(line: 2096, column: 1, scope: !7667)
!7891 = distinct !DISubprogram(name: "lamp_get_data_internal", scope: !1, file: !1, line: 2007, type: !7892, scopeLine: 2008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!7892 = !DISubroutineType(types: !7893)
!7893 = !{!147, !1829, !2339, !643, !643, !643, !643}
!7894 = !DILocalVariable(name: "shi", arg: 1, scope: !7891, file: !1, line: 2007, type: !1829)
!7895 = !DILocation(line: 2007, column: 49, scope: !7891)
!7896 = !DILocalVariable(name: "go", arg: 2, scope: !7891, file: !1, line: 2007, type: !2339)
!7897 = !DILocation(line: 2007, column: 67, scope: !7891)
!7898 = !DILocalVariable(name: "col", arg: 3, scope: !7891, file: !1, line: 2007, type: !643)
!7899 = !DILocation(line: 2007, column: 77, scope: !7891)
!7900 = !DILocalVariable(name: "lv", arg: 4, scope: !7891, file: !1, line: 2007, type: !643)
!7901 = !DILocation(line: 2007, column: 91, scope: !7891)
!7902 = !DILocalVariable(name: "dist", arg: 5, scope: !7891, file: !1, line: 2007, type: !643)
!7903 = !DILocation(line: 2007, column: 105, scope: !7891)
!7904 = !DILocalVariable(name: "shadow", arg: 6, scope: !7891, file: !1, line: 2007, type: !643)
!7905 = !DILocation(line: 2007, column: 117, scope: !7891)
!7906 = !DILocalVariable(name: "lar", scope: !7891, file: !1, line: 2009, type: !2352)
!7907 = !DILocation(line: 2009, column: 11, scope: !7891)
!7908 = !DILocation(line: 2009, column: 17, scope: !7891)
!7909 = !DILocation(line: 2009, column: 21, scope: !7891)
!7910 = !DILocalVariable(name: "visifac", scope: !7891, file: !1, line: 2010, type: !147)
!7911 = !DILocation(line: 2010, column: 8, scope: !7891)
!7912 = !DILocalVariable(name: "inp", scope: !7891, file: !1, line: 2010, type: !147)
!7913 = !DILocation(line: 2010, column: 17, scope: !7891)
!7914 = !DILocation(line: 2012, column: 7, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 2012, column: 6)
!7916 = !DILocation(line: 2012, column: 11, scope: !7915)
!7917 = !DILocation(line: 2012, column: 14, scope: !7915)
!7918 = !DILocation(line: 2012, column: 19, scope: !7915)
!7919 = !DILocation(line: 2012, column: 24, scope: !7915)
!7920 = !DILocation(line: 2013, column: 6, scope: !7915)
!7921 = !DILocation(line: 2013, column: 11, scope: !7915)
!7922 = !DILocation(line: 2013, column: 16, scope: !7915)
!7923 = !DILocation(line: 2013, column: 21, scope: !7915)
!7924 = !DILocation(line: 2013, column: 33, scope: !7915)
!7925 = !DILocation(line: 2013, column: 37, scope: !7915)
!7926 = !DILocation(line: 2013, column: 42, scope: !7915)
!7927 = !DILocation(line: 2013, column: 48, scope: !7915)
!7928 = !DILocation(line: 2013, column: 53, scope: !7915)
!7929 = !DILocation(line: 2013, column: 58, scope: !7915)
!7930 = !DILocation(line: 2013, column: 46, scope: !7915)
!7931 = !DILocation(line: 2013, column: 63, scope: !7915)
!7932 = !DILocation(line: 2014, column: 6, scope: !7915)
!7933 = !DILocation(line: 2014, column: 10, scope: !7915)
!7934 = !DILocation(line: 2014, column: 15, scope: !7915)
!7935 = !DILocation(line: 2014, column: 21, scope: !7915)
!7936 = !DILocation(line: 2014, column: 26, scope: !7915)
!7937 = !DILocation(line: 2014, column: 19, scope: !7915)
!7938 = !DILocation(line: 2014, column: 31, scope: !7915)
!7939 = !DILocation(line: 2012, column: 6, scope: !7891)
!7940 = !DILocation(line: 2015, column: 3, scope: !7915)
!7941 = !DILocation(line: 2017, column: 6, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 2017, column: 6)
!7943 = !DILocation(line: 2017, column: 11, scope: !7942)
!7944 = !DILocation(line: 2017, column: 16, scope: !7942)
!7945 = !DILocation(line: 2017, column: 6, scope: !7891)
!7946 = !DILocation(line: 2018, column: 15, scope: !7942)
!7947 = !DILocation(line: 2018, column: 20, scope: !7942)
!7948 = !DILocation(line: 2018, column: 24, scope: !7942)
!7949 = !DILocation(line: 2018, column: 29, scope: !7942)
!7950 = !DILocation(line: 2018, column: 3, scope: !7942)
!7951 = !DILocation(line: 2020, column: 32, scope: !7891)
!7952 = !DILocation(line: 2020, column: 37, scope: !7891)
!7953 = !DILocation(line: 2020, column: 42, scope: !7891)
!7954 = !DILocation(line: 2020, column: 46, scope: !7891)
!7955 = !DILocation(line: 2020, column: 50, scope: !7891)
!7956 = !DILocation(line: 2020, column: 12, scope: !7891)
!7957 = !DILocation(line: 2020, column: 10, scope: !7891)
!7958 = !DILocation(line: 2022, column: 6, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 2022, column: 6)
!7960 = !DILocation(line: 2022, column: 14, scope: !7959)
!7961 = !DILocation(line: 2023, column: 6, scope: !7959)
!7962 = !DILocation(line: 2023, column: 9, scope: !7959)
!7963 = !DILocation(line: 2023, column: 14, scope: !7959)
!7964 = !DILocation(line: 2023, column: 19, scope: !7959)
!7965 = !DILocation(line: 2024, column: 6, scope: !7959)
!7966 = !DILocation(line: 2024, column: 10, scope: !7959)
!7967 = !DILocation(line: 2024, column: 15, scope: !7959)
!7968 = !DILocation(line: 2024, column: 20, scope: !7959)
!7969 = !DILocation(line: 2024, column: 31, scope: !7959)
!7970 = !DILocation(line: 2024, column: 36, scope: !7959)
!7971 = !DILocation(line: 2024, column: 41, scope: !7959)
!7972 = !DILocation(line: 2024, column: 46, scope: !7959)
!7973 = !DILocation(line: 2025, column: 6, scope: !7959)
!7974 = !DILocation(line: 2025, column: 14, scope: !7959)
!7975 = !DILocation(line: 2025, column: 22, scope: !7959)
!7976 = !DILocation(line: 2022, column: 6, scope: !7891)
!7977 = !DILocation(line: 2026, column: 10, scope: !7959)
!7978 = !DILocation(line: 2026, column: 3, scope: !7959)
!7979 = !DILocation(line: 2028, column: 17, scope: !7891)
!7980 = !DILocation(line: 2028, column: 22, scope: !7891)
!7981 = !DILocation(line: 2028, column: 26, scope: !7891)
!7982 = !DILocation(line: 2028, column: 8, scope: !7891)
!7983 = !DILocation(line: 2028, column: 6, scope: !7891)
!7984 = !DILocation(line: 2030, column: 6, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7891, file: !1, line: 2030, column: 6)
!7986 = !DILocation(line: 2030, column: 10, scope: !7985)
!7987 = !DILocation(line: 2030, column: 6, scope: !7891)
!7988 = !DILocalVariable(name: "shadfac", scope: !7989, file: !1, line: 2031, type: !511)
!7989 = distinct !DILexicalBlock(scope: !7985, file: !1, line: 2030, column: 18)
!7990 = !DILocation(line: 2031, column: 9, scope: !7989)
!7991 = !DILocation(line: 2033, column: 15, scope: !7989)
!7992 = !DILocation(line: 2033, column: 20, scope: !7989)
!7993 = !DILocation(line: 2033, column: 3, scope: !7989)
!7994 = !DILocation(line: 2033, column: 13, scope: !7989)
!7995 = !DILocation(line: 2034, column: 15, scope: !7989)
!7996 = !DILocation(line: 2034, column: 20, scope: !7989)
!7997 = !DILocation(line: 2034, column: 3, scope: !7989)
!7998 = !DILocation(line: 2034, column: 13, scope: !7989)
!7999 = !DILocation(line: 2035, column: 15, scope: !7989)
!8000 = !DILocation(line: 2035, column: 20, scope: !7989)
!8001 = !DILocation(line: 2035, column: 3, scope: !7989)
!8002 = !DILocation(line: 2035, column: 13, scope: !7989)
!8003 = !DILocation(line: 2037, column: 7, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7989, file: !1, line: 2037, column: 7)
!8005 = !DILocation(line: 2037, column: 12, scope: !8004)
!8006 = !DILocation(line: 2037, column: 17, scope: !8004)
!8007 = !DILocation(line: 2037, column: 7, scope: !7989)
!8008 = !DILocation(line: 2038, column: 16, scope: !8004)
!8009 = !DILocation(line: 2038, column: 21, scope: !8004)
!8010 = !DILocation(line: 2038, column: 25, scope: !8004)
!8011 = !DILocation(line: 2038, column: 30, scope: !8004)
!8012 = !DILocation(line: 2038, column: 4, scope: !8004)
!8013 = !DILocation(line: 2040, column: 19, scope: !7989)
!8014 = !DILocation(line: 2040, column: 24, scope: !7989)
!8015 = !DILocation(line: 2040, column: 29, scope: !7989)
!8016 = !DILocation(line: 2040, column: 34, scope: !7989)
!8017 = !DILocation(line: 2040, column: 43, scope: !7989)
!8018 = !DILocation(line: 2040, column: 48, scope: !7989)
!8019 = !DILocation(line: 2040, column: 3, scope: !7989)
!8020 = !DILocation(line: 2042, column: 31, scope: !7989)
!8021 = !DILocation(line: 2042, column: 44, scope: !7989)
!8022 = !DILocation(line: 2042, column: 42, scope: !7989)
!8023 = !DILocation(line: 2042, column: 29, scope: !7989)
!8024 = !DILocation(line: 2042, column: 66, scope: !7989)
!8025 = !DILocation(line: 2042, column: 64, scope: !7989)
!8026 = !DILocation(line: 2042, column: 56, scope: !7989)
!8027 = !DILocation(line: 2042, column: 20, scope: !7989)
!8028 = !DILocation(line: 2042, column: 3, scope: !7989)
!8029 = !DILocation(line: 2042, column: 13, scope: !7989)
!8030 = !DILocation(line: 2043, column: 31, scope: !7989)
!8031 = !DILocation(line: 2043, column: 44, scope: !7989)
!8032 = !DILocation(line: 2043, column: 42, scope: !7989)
!8033 = !DILocation(line: 2043, column: 29, scope: !7989)
!8034 = !DILocation(line: 2043, column: 66, scope: !7989)
!8035 = !DILocation(line: 2043, column: 64, scope: !7989)
!8036 = !DILocation(line: 2043, column: 56, scope: !7989)
!8037 = !DILocation(line: 2043, column: 20, scope: !7989)
!8038 = !DILocation(line: 2043, column: 3, scope: !7989)
!8039 = !DILocation(line: 2043, column: 13, scope: !7989)
!8040 = !DILocation(line: 2044, column: 31, scope: !7989)
!8041 = !DILocation(line: 2044, column: 44, scope: !7989)
!8042 = !DILocation(line: 2044, column: 42, scope: !7989)
!8043 = !DILocation(line: 2044, column: 29, scope: !7989)
!8044 = !DILocation(line: 2044, column: 66, scope: !7989)
!8045 = !DILocation(line: 2044, column: 64, scope: !7989)
!8046 = !DILocation(line: 2044, column: 56, scope: !7989)
!8047 = !DILocation(line: 2044, column: 20, scope: !7989)
!8048 = !DILocation(line: 2044, column: 3, scope: !7989)
!8049 = !DILocation(line: 2044, column: 13, scope: !7989)
!8050 = !DILocation(line: 2045, column: 2, scope: !7989)
!8051 = !DILocation(line: 2047, column: 9, scope: !7891)
!8052 = !DILocation(line: 2047, column: 2, scope: !7891)
!8053 = !DILocation(line: 2048, column: 1, scope: !7891)
!8054 = distinct !DISubprogram(name: "copy_v3db_v3fl", scope: !3298, file: !3298, line: 202, type: !8055, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{null, !8057, !2219}
!8057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!8058 = !DILocalVariable(name: "r", arg: 1, scope: !8054, file: !3298, line: 202, type: !8057)
!8059 = !DILocation(line: 202, column: 36, scope: !8054)
!8060 = !DILocalVariable(name: "a", arg: 2, scope: !8054, file: !3298, line: 202, type: !2219)
!8061 = !DILocation(line: 202, column: 54, scope: !8054)
!8062 = !DILocation(line: 204, column: 17, scope: !8054)
!8063 = !DILocation(line: 204, column: 9, scope: !8054)
!8064 = !DILocation(line: 204, column: 2, scope: !8054)
!8065 = !DILocation(line: 204, column: 7, scope: !8054)
!8066 = !DILocation(line: 205, column: 17, scope: !8054)
!8067 = !DILocation(line: 205, column: 9, scope: !8054)
!8068 = !DILocation(line: 205, column: 2, scope: !8054)
!8069 = !DILocation(line: 205, column: 7, scope: !8054)
!8070 = !DILocation(line: 206, column: 17, scope: !8054)
!8071 = !DILocation(line: 206, column: 9, scope: !8054)
!8072 = !DILocation(line: 206, column: 2, scope: !8054)
!8073 = !DILocation(line: 206, column: 7, scope: !8054)
!8074 = !DILocation(line: 207, column: 1, scope: !8054)
!8075 = distinct !DISubprogram(name: "len_v3v3", scope: !3298, file: !3298, line: 759, type: !3299, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8076 = !DILocalVariable(name: "a", arg: 1, scope: !8075, file: !3298, line: 759, type: !2219)
!8077 = !DILocation(line: 759, column: 36, scope: !8075)
!8078 = !DILocalVariable(name: "b", arg: 2, scope: !8075, file: !3298, line: 759, type: !2219)
!8079 = !DILocation(line: 759, column: 54, scope: !8075)
!8080 = !DILocalVariable(name: "d", scope: !8075, file: !3298, line: 761, type: !212)
!8081 = !DILocation(line: 761, column: 8, scope: !8075)
!8082 = !DILocation(line: 763, column: 14, scope: !8075)
!8083 = !DILocation(line: 763, column: 17, scope: !8075)
!8084 = !DILocation(line: 763, column: 20, scope: !8075)
!8085 = !DILocation(line: 763, column: 2, scope: !8075)
!8086 = !DILocation(line: 764, column: 16, scope: !8075)
!8087 = !DILocation(line: 764, column: 9, scope: !8075)
!8088 = !DILocation(line: 764, column: 2, scope: !8075)
!8089 = distinct !DISubprogram(name: "rgb_to_grayscale", scope: !8090, file: !8090, line: 220, type: !4483, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8090 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8091 = !DILocalVariable(name: "rgb", arg: 1, scope: !8089, file: !8090, line: 220, type: !2219)
!8092 = !DILocation(line: 220, column: 44, scope: !8089)
!8093 = !DILocation(line: 222, column: 16, scope: !8089)
!8094 = !DILocation(line: 222, column: 14, scope: !8089)
!8095 = !DILocation(line: 222, column: 33, scope: !8089)
!8096 = !DILocation(line: 222, column: 31, scope: !8089)
!8097 = !DILocation(line: 222, column: 23, scope: !8089)
!8098 = !DILocation(line: 222, column: 50, scope: !8089)
!8099 = !DILocation(line: 222, column: 48, scope: !8089)
!8100 = !DILocation(line: 222, column: 40, scope: !8089)
!8101 = !DILocation(line: 222, column: 2, scope: !8089)
!8102 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !3298, file: !3298, line: 634, type: !4458, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8103 = !DILocalVariable(name: "r", arg: 1, scope: !8102, file: !3298, line: 634, type: !643)
!8104 = !DILocation(line: 634, column: 34, scope: !8102)
!8105 = !DILocalVariable(name: "a", arg: 2, scope: !8102, file: !3298, line: 634, type: !2219)
!8106 = !DILocation(line: 634, column: 52, scope: !8102)
!8107 = !DILocalVariable(name: "b", arg: 3, scope: !8102, file: !3298, line: 634, type: !2219)
!8108 = !DILocation(line: 634, column: 70, scope: !8102)
!8109 = !DILocation(line: 637, column: 9, scope: !8102)
!8110 = !DILocation(line: 637, column: 16, scope: !8102)
!8111 = !DILocation(line: 637, column: 14, scope: !8102)
!8112 = !DILocation(line: 637, column: 23, scope: !8102)
!8113 = !DILocation(line: 637, column: 30, scope: !8102)
!8114 = !DILocation(line: 637, column: 28, scope: !8102)
!8115 = !DILocation(line: 637, column: 21, scope: !8102)
!8116 = !DILocation(line: 637, column: 2, scope: !8102)
!8117 = !DILocation(line: 637, column: 7, scope: !8102)
!8118 = !DILocation(line: 638, column: 9, scope: !8102)
!8119 = !DILocation(line: 638, column: 16, scope: !8102)
!8120 = !DILocation(line: 638, column: 14, scope: !8102)
!8121 = !DILocation(line: 638, column: 23, scope: !8102)
!8122 = !DILocation(line: 638, column: 30, scope: !8102)
!8123 = !DILocation(line: 638, column: 28, scope: !8102)
!8124 = !DILocation(line: 638, column: 21, scope: !8102)
!8125 = !DILocation(line: 638, column: 2, scope: !8102)
!8126 = !DILocation(line: 638, column: 7, scope: !8102)
!8127 = !DILocation(line: 639, column: 9, scope: !8102)
!8128 = !DILocation(line: 639, column: 16, scope: !8102)
!8129 = !DILocation(line: 639, column: 14, scope: !8102)
!8130 = !DILocation(line: 639, column: 23, scope: !8102)
!8131 = !DILocation(line: 639, column: 30, scope: !8102)
!8132 = !DILocation(line: 639, column: 28, scope: !8102)
!8133 = !DILocation(line: 639, column: 21, scope: !8102)
!8134 = !DILocation(line: 639, column: 2, scope: !8102)
!8135 = !DILocation(line: 639, column: 7, scope: !8102)
!8136 = !DILocation(line: 640, column: 1, scope: !8102)
!8137 = distinct !DISubprogram(name: "normalize_v3", scope: !3298, file: !3298, line: 830, type: !8138, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!147, !643}
!8140 = !DILocalVariable(name: "n", arg: 1, scope: !8137, file: !3298, line: 830, type: !643)
!8141 = !DILocation(line: 830, column: 34, scope: !8137)
!8142 = !DILocation(line: 832, column: 25, scope: !8137)
!8143 = !DILocation(line: 832, column: 28, scope: !8137)
!8144 = !DILocation(line: 832, column: 9, scope: !8137)
!8145 = !DILocation(line: 832, column: 2, scope: !8137)
!8146 = distinct !DISubprogram(name: "area_lamp_energy_multisample", scope: !1, file: !1, line: 516, type: !8147, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!147, !2352, !2219, !643}
!8149 = !DILocalVariable(name: "lar", arg: 1, scope: !8146, file: !1, line: 516, type: !2352)
!8150 = !DILocation(line: 516, column: 52, scope: !8146)
!8151 = !DILocalVariable(name: "co", arg: 2, scope: !8146, file: !1, line: 516, type: !2219)
!8152 = !DILocation(line: 516, column: 69, scope: !8146)
!8153 = !DILocalVariable(name: "vn", arg: 3, scope: !8146, file: !1, line: 516, type: !643)
!8154 = !DILocation(line: 516, column: 83, scope: !8146)
!8155 = !DILocalVariable(name: "jitlamp", scope: !8146, file: !1, line: 519, type: !643)
!8156 = !DILocation(line: 519, column: 9, scope: !8146)
!8157 = !DILocation(line: 519, column: 18, scope: !8146)
!8158 = !DILocation(line: 519, column: 23, scope: !8146)
!8159 = !DILocalVariable(name: "vec", scope: !8146, file: !1, line: 519, type: !212)
!8160 = !DILocation(line: 519, column: 31, scope: !8146)
!8161 = !DILocalVariable(name: "area", scope: !8146, file: !1, line: 520, type: !8162)
!8162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 384, elements: !8163)
!8163 = !{!210, !214}
!8164 = !DILocation(line: 520, column: 8, scope: !8146)
!8165 = !DILocalVariable(name: "intens", scope: !8146, file: !1, line: 520, type: !147)
!8166 = !DILocation(line: 520, column: 20, scope: !8146)
!8167 = !DILocalVariable(name: "a", scope: !8146, file: !1, line: 521, type: !5)
!8168 = !DILocation(line: 521, column: 6, scope: !8146)
!8169 = !DILocation(line: 521, column: 9, scope: !8146)
!8170 = !DILocation(line: 521, column: 14, scope: !8146)
!8171 = !DILocation(line: 524, column: 14, scope: !8146)
!8172 = !DILocation(line: 524, column: 19, scope: !8146)
!8173 = !DILocation(line: 524, column: 23, scope: !8146)
!8174 = !DILocation(line: 524, column: 28, scope: !8146)
!8175 = !DILocation(line: 524, column: 2, scope: !8146)
!8176 = !DILocation(line: 525, column: 15, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8146, file: !1, line: 525, column: 6)
!8178 = !DILocation(line: 525, column: 20, scope: !8177)
!8179 = !DILocation(line: 525, column: 25, scope: !8177)
!8180 = !DILocation(line: 525, column: 6, scope: !8177)
!8181 = !DILocation(line: 525, column: 30, scope: !8177)
!8182 = !DILocation(line: 525, column: 6, scope: !8146)
!8183 = !DILocation(line: 526, column: 3, scope: !8177)
!8184 = !DILocation(line: 528, column: 2, scope: !8146)
!8185 = !DILocation(line: 528, column: 10, scope: !8146)
!8186 = !DILocation(line: 529, column: 11, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8146, file: !1, line: 528, column: 14)
!8188 = !DILocation(line: 529, column: 3, scope: !8187)
!8189 = !DILocation(line: 529, column: 9, scope: !8187)
!8190 = !DILocation(line: 530, column: 11, scope: !8187)
!8191 = !DILocation(line: 530, column: 3, scope: !8187)
!8192 = !DILocation(line: 530, column: 9, scope: !8187)
!8193 = !DILocation(line: 531, column: 3, scope: !8187)
!8194 = !DILocation(line: 531, column: 9, scope: !8187)
!8195 = !DILocation(line: 532, column: 13, scope: !8187)
!8196 = !DILocation(line: 532, column: 18, scope: !8187)
!8197 = !DILocation(line: 532, column: 23, scope: !8187)
!8198 = !DILocation(line: 532, column: 3, scope: !8187)
!8199 = !DILocation(line: 534, column: 15, scope: !8187)
!8200 = !DILocation(line: 534, column: 24, scope: !8187)
!8201 = !DILocation(line: 534, column: 29, scope: !8187)
!8202 = !DILocation(line: 534, column: 38, scope: !8187)
!8203 = !DILocation(line: 534, column: 3, scope: !8187)
!8204 = !DILocation(line: 535, column: 15, scope: !8187)
!8205 = !DILocation(line: 535, column: 24, scope: !8187)
!8206 = !DILocation(line: 535, column: 29, scope: !8187)
!8207 = !DILocation(line: 535, column: 38, scope: !8187)
!8208 = !DILocation(line: 535, column: 3, scope: !8187)
!8209 = !DILocation(line: 536, column: 15, scope: !8187)
!8210 = !DILocation(line: 536, column: 24, scope: !8187)
!8211 = !DILocation(line: 536, column: 29, scope: !8187)
!8212 = !DILocation(line: 536, column: 38, scope: !8187)
!8213 = !DILocation(line: 536, column: 3, scope: !8187)
!8214 = !DILocation(line: 537, column: 15, scope: !8187)
!8215 = !DILocation(line: 537, column: 24, scope: !8187)
!8216 = !DILocation(line: 537, column: 29, scope: !8187)
!8217 = !DILocation(line: 537, column: 38, scope: !8187)
!8218 = !DILocation(line: 537, column: 3, scope: !8187)
!8219 = !DILocation(line: 539, column: 29, scope: !8187)
!8220 = !DILocation(line: 539, column: 35, scope: !8187)
!8221 = !DILocation(line: 539, column: 39, scope: !8187)
!8222 = !DILocation(line: 539, column: 12, scope: !8187)
!8223 = !DILocation(line: 539, column: 9, scope: !8187)
!8224 = !DILocation(line: 541, column: 10, scope: !8187)
!8225 = distinct !{!8225, !8184, !8226}
!8226 = !DILocation(line: 542, column: 2, scope: !8146)
!8227 = !DILocation(line: 543, column: 19, scope: !8146)
!8228 = !DILocation(line: 543, column: 24, scope: !8146)
!8229 = !DILocation(line: 543, column: 12, scope: !8146)
!8230 = !DILocation(line: 543, column: 9, scope: !8146)
!8231 = !DILocation(line: 545, column: 13, scope: !8146)
!8232 = !DILocation(line: 545, column: 22, scope: !8146)
!8233 = !DILocation(line: 545, column: 27, scope: !8146)
!8234 = !DILocation(line: 545, column: 20, scope: !8146)
!8235 = !DILocation(line: 545, column: 37, scope: !8146)
!8236 = !DILocation(line: 545, column: 42, scope: !8146)
!8237 = !DILocation(line: 545, column: 9, scope: !8146)
!8238 = !DILocation(line: 545, column: 2, scope: !8146)
!8239 = !DILocation(line: 546, column: 1, scope: !8146)
!8240 = distinct !DISubprogram(name: "OrenNayar_Diff", scope: !1, file: !1, line: 762, type: !8241, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8241 = !DISubroutineType(types: !8242)
!8242 = !{!147, !147, !2219, !2219, !2219, !147}
!8243 = !DILocalVariable(name: "nl", arg: 1, scope: !8240, file: !1, line: 762, type: !147)
!8244 = !DILocation(line: 762, column: 35, scope: !8240)
!8245 = !DILocalVariable(name: "n", arg: 2, scope: !8240, file: !1, line: 762, type: !2219)
!8246 = !DILocation(line: 762, column: 51, scope: !8240)
!8247 = !DILocalVariable(name: "l", arg: 3, scope: !8240, file: !1, line: 762, type: !2219)
!8248 = !DILocation(line: 762, column: 69, scope: !8240)
!8249 = !DILocalVariable(name: "v", arg: 4, scope: !8240, file: !1, line: 762, type: !2219)
!8250 = !DILocation(line: 762, column: 87, scope: !8240)
!8251 = !DILocalVariable(name: "rough", arg: 5, scope: !8240, file: !1, line: 762, type: !147)
!8252 = !DILocation(line: 762, column: 99, scope: !8240)
!8253 = !DILocalVariable(name: "i", scope: !8240, file: !1, line: 764, type: !147)
!8254 = !DILocation(line: 764, column: 8, scope: !8240)
!8255 = !DILocalVariable(name: "nv", scope: !8240, file: !1, line: 764, type: !147)
!8256 = !DILocation(line: 764, column: 19, scope: !8240)
!8257 = !DILocalVariable(name: "realnl", scope: !8240, file: !1, line: 764, type: !147)
!8258 = !DILocation(line: 764, column: 33, scope: !8240)
!8259 = !DILocalVariable(name: "h", scope: !8240, file: !1, line: 764, type: !212)
!8260 = !DILocation(line: 764, column: 41, scope: !8240)
!8261 = !DILocalVariable(name: "a", scope: !8240, file: !1, line: 765, type: !147)
!8262 = !DILocation(line: 765, column: 8, scope: !8240)
!8263 = !DILocalVariable(name: "b", scope: !8240, file: !1, line: 765, type: !147)
!8264 = !DILocation(line: 765, column: 11, scope: !8240)
!8265 = !DILocalVariable(name: "t", scope: !8240, file: !1, line: 765, type: !147)
!8266 = !DILocation(line: 765, column: 14, scope: !8240)
!8267 = !DILocalVariable(name: "A", scope: !8240, file: !1, line: 765, type: !147)
!8268 = !DILocation(line: 765, column: 17, scope: !8240)
!8269 = !DILocalVariable(name: "B", scope: !8240, file: !1, line: 765, type: !147)
!8270 = !DILocation(line: 765, column: 20, scope: !8240)
!8271 = !DILocalVariable(name: "Lit_A", scope: !8240, file: !1, line: 766, type: !147)
!8272 = !DILocation(line: 766, column: 8, scope: !8240)
!8273 = !DILocalVariable(name: "View_A", scope: !8240, file: !1, line: 766, type: !147)
!8274 = !DILocation(line: 766, column: 15, scope: !8240)
!8275 = !DILocalVariable(name: "Lit_B", scope: !8240, file: !1, line: 766, type: !212)
!8276 = !DILocation(line: 766, column: 23, scope: !8240)
!8277 = !DILocalVariable(name: "View_B", scope: !8240, file: !1, line: 766, type: !212)
!8278 = !DILocation(line: 766, column: 33, scope: !8240)
!8279 = !DILocation(line: 768, column: 8, scope: !8240)
!8280 = !DILocation(line: 768, column: 13, scope: !8240)
!8281 = !DILocation(line: 768, column: 12, scope: !8240)
!8282 = !DILocation(line: 768, column: 2, scope: !8240)
!8283 = !DILocation(line: 768, column: 6, scope: !8240)
!8284 = !DILocation(line: 769, column: 8, scope: !8240)
!8285 = !DILocation(line: 769, column: 13, scope: !8240)
!8286 = !DILocation(line: 769, column: 12, scope: !8240)
!8287 = !DILocation(line: 769, column: 2, scope: !8240)
!8288 = !DILocation(line: 769, column: 6, scope: !8240)
!8289 = !DILocation(line: 770, column: 8, scope: !8240)
!8290 = !DILocation(line: 770, column: 13, scope: !8240)
!8291 = !DILocation(line: 770, column: 12, scope: !8240)
!8292 = !DILocation(line: 770, column: 2, scope: !8240)
!8293 = !DILocation(line: 770, column: 6, scope: !8240)
!8294 = !DILocation(line: 771, column: 15, scope: !8240)
!8295 = !DILocation(line: 771, column: 2, scope: !8240)
!8296 = !DILocation(line: 776, column: 6, scope: !8240)
!8297 = !DILocation(line: 776, column: 11, scope: !8240)
!8298 = !DILocation(line: 776, column: 10, scope: !8240)
!8299 = !DILocation(line: 776, column: 16, scope: !8240)
!8300 = !DILocation(line: 776, column: 21, scope: !8240)
!8301 = !DILocation(line: 776, column: 20, scope: !8240)
!8302 = !DILocation(line: 776, column: 15, scope: !8240)
!8303 = !DILocation(line: 776, column: 26, scope: !8240)
!8304 = !DILocation(line: 776, column: 31, scope: !8240)
!8305 = !DILocation(line: 776, column: 30, scope: !8240)
!8306 = !DILocation(line: 776, column: 25, scope: !8240)
!8307 = !DILocation(line: 776, column: 4, scope: !8240)
!8308 = !DILocation(line: 777, column: 6, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 777, column: 6)
!8310 = !DILocation(line: 777, column: 8, scope: !8309)
!8311 = !DILocation(line: 777, column: 6, scope: !8240)
!8312 = !DILocation(line: 777, column: 18, scope: !8309)
!8313 = !DILocation(line: 777, column: 16, scope: !8309)
!8314 = !DILocation(line: 779, column: 10, scope: !8240)
!8315 = !DILocation(line: 779, column: 15, scope: !8240)
!8316 = !DILocation(line: 779, column: 14, scope: !8240)
!8317 = !DILocation(line: 779, column: 20, scope: !8240)
!8318 = !DILocation(line: 779, column: 25, scope: !8240)
!8319 = !DILocation(line: 779, column: 24, scope: !8240)
!8320 = !DILocation(line: 779, column: 19, scope: !8240)
!8321 = !DILocation(line: 779, column: 30, scope: !8240)
!8322 = !DILocation(line: 779, column: 35, scope: !8240)
!8323 = !DILocation(line: 779, column: 34, scope: !8240)
!8324 = !DILocation(line: 779, column: 29, scope: !8240)
!8325 = !DILocation(line: 779, column: 8, scope: !8240)
!8326 = !DILocation(line: 780, column: 6, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 780, column: 6)
!8328 = !DILocation(line: 780, column: 12, scope: !8327)
!8329 = !DILocation(line: 780, column: 6, scope: !8240)
!8330 = !DILocation(line: 780, column: 20, scope: !8327)
!8331 = !DILocation(line: 781, column: 6, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 781, column: 6)
!8333 = !DILocation(line: 781, column: 8, scope: !8332)
!8334 = !DILocation(line: 781, column: 6, scope: !8240)
!8335 = !DILocation(line: 781, column: 15, scope: !8332)
!8336 = !DILocation(line: 786, column: 17, scope: !8240)
!8337 = !DILocation(line: 786, column: 10, scope: !8240)
!8338 = !DILocation(line: 786, column: 8, scope: !8240)
!8339 = !DILocation(line: 787, column: 19, scope: !8240)
!8340 = !DILocation(line: 787, column: 11, scope: !8240)
!8341 = !DILocation(line: 787, column: 9, scope: !8240)
!8342 = !DILocation(line: 789, column: 13, scope: !8240)
!8343 = !DILocation(line: 789, column: 21, scope: !8240)
!8344 = !DILocation(line: 789, column: 30, scope: !8240)
!8345 = !DILocation(line: 789, column: 28, scope: !8240)
!8346 = !DILocation(line: 789, column: 18, scope: !8240)
!8347 = !DILocation(line: 789, column: 2, scope: !8240)
!8348 = !DILocation(line: 789, column: 11, scope: !8240)
!8349 = !DILocation(line: 790, column: 13, scope: !8240)
!8350 = !DILocation(line: 790, column: 21, scope: !8240)
!8351 = !DILocation(line: 790, column: 30, scope: !8240)
!8352 = !DILocation(line: 790, column: 28, scope: !8240)
!8353 = !DILocation(line: 790, column: 18, scope: !8240)
!8354 = !DILocation(line: 790, column: 2, scope: !8240)
!8355 = !DILocation(line: 790, column: 11, scope: !8240)
!8356 = !DILocation(line: 791, column: 13, scope: !8240)
!8357 = !DILocation(line: 791, column: 21, scope: !8240)
!8358 = !DILocation(line: 791, column: 30, scope: !8240)
!8359 = !DILocation(line: 791, column: 28, scope: !8240)
!8360 = !DILocation(line: 791, column: 18, scope: !8240)
!8361 = !DILocation(line: 791, column: 2, scope: !8240)
!8362 = !DILocation(line: 791, column: 11, scope: !8240)
!8363 = !DILocation(line: 792, column: 15, scope: !8240)
!8364 = !DILocation(line: 792, column: 2, scope: !8240)
!8365 = !DILocation(line: 794, column: 14, scope: !8240)
!8366 = !DILocation(line: 794, column: 22, scope: !8240)
!8367 = !DILocation(line: 794, column: 27, scope: !8240)
!8368 = !DILocation(line: 794, column: 25, scope: !8240)
!8369 = !DILocation(line: 794, column: 19, scope: !8240)
!8370 = !DILocation(line: 794, column: 2, scope: !8240)
!8371 = !DILocation(line: 794, column: 12, scope: !8240)
!8372 = !DILocation(line: 795, column: 14, scope: !8240)
!8373 = !DILocation(line: 795, column: 22, scope: !8240)
!8374 = !DILocation(line: 795, column: 27, scope: !8240)
!8375 = !DILocation(line: 795, column: 25, scope: !8240)
!8376 = !DILocation(line: 795, column: 19, scope: !8240)
!8377 = !DILocation(line: 795, column: 2, scope: !8240)
!8378 = !DILocation(line: 795, column: 12, scope: !8240)
!8379 = !DILocation(line: 796, column: 14, scope: !8240)
!8380 = !DILocation(line: 796, column: 22, scope: !8240)
!8381 = !DILocation(line: 796, column: 27, scope: !8240)
!8382 = !DILocation(line: 796, column: 25, scope: !8240)
!8383 = !DILocation(line: 796, column: 19, scope: !8240)
!8384 = !DILocation(line: 796, column: 2, scope: !8240)
!8385 = !DILocation(line: 796, column: 12, scope: !8240)
!8386 = !DILocation(line: 797, column: 15, scope: !8240)
!8387 = !DILocation(line: 797, column: 2, scope: !8240)
!8388 = !DILocation(line: 799, column: 6, scope: !8240)
!8389 = !DILocation(line: 799, column: 15, scope: !8240)
!8390 = !DILocation(line: 799, column: 14, scope: !8240)
!8391 = !DILocation(line: 799, column: 27, scope: !8240)
!8392 = !DILocation(line: 799, column: 36, scope: !8240)
!8393 = !DILocation(line: 799, column: 35, scope: !8240)
!8394 = !DILocation(line: 799, column: 25, scope: !8240)
!8395 = !DILocation(line: 799, column: 48, scope: !8240)
!8396 = !DILocation(line: 799, column: 57, scope: !8240)
!8397 = !DILocation(line: 799, column: 56, scope: !8240)
!8398 = !DILocation(line: 799, column: 46, scope: !8240)
!8399 = !DILocation(line: 799, column: 4, scope: !8240)
!8400 = !DILocation(line: 800, column: 7, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 800, column: 7)
!8402 = !DILocation(line: 800, column: 9, scope: !8401)
!8403 = !DILocation(line: 800, column: 7, scope: !8240)
!8404 = !DILocation(line: 800, column: 17, scope: !8401)
!8405 = !DILocation(line: 800, column: 15, scope: !8401)
!8406 = !DILocation(line: 802, column: 7, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 802, column: 7)
!8408 = !DILocation(line: 802, column: 15, scope: !8407)
!8409 = !DILocation(line: 802, column: 13, scope: !8407)
!8410 = !DILocation(line: 802, column: 7, scope: !8240)
!8411 = !DILocation(line: 803, column: 7, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !1, line: 802, column: 24)
!8413 = !DILocation(line: 803, column: 5, scope: !8412)
!8414 = !DILocation(line: 804, column: 7, scope: !8412)
!8415 = !DILocation(line: 804, column: 5, scope: !8412)
!8416 = !DILocation(line: 805, column: 2, scope: !8412)
!8417 = !DILocation(line: 807, column: 7, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8407, file: !1, line: 806, column: 7)
!8419 = !DILocation(line: 807, column: 5, scope: !8418)
!8420 = !DILocation(line: 808, column: 7, scope: !8418)
!8421 = !DILocation(line: 808, column: 5, scope: !8418)
!8422 = !DILocation(line: 811, column: 23, scope: !8240)
!8423 = !DILocation(line: 811, column: 31, scope: !8240)
!8424 = !DILocation(line: 811, column: 29, scope: !8240)
!8425 = !DILocation(line: 811, column: 42, scope: !8240)
!8426 = !DILocation(line: 811, column: 50, scope: !8240)
!8427 = !DILocation(line: 811, column: 48, scope: !8240)
!8428 = !DILocation(line: 811, column: 57, scope: !8240)
!8429 = !DILocation(line: 811, column: 38, scope: !8240)
!8430 = !DILocation(line: 811, column: 19, scope: !8240)
!8431 = !DILocation(line: 811, column: 11, scope: !8240)
!8432 = !DILocation(line: 811, column: 4, scope: !8240)
!8433 = !DILocation(line: 812, column: 16, scope: !8240)
!8434 = !DILocation(line: 812, column: 24, scope: !8240)
!8435 = !DILocation(line: 812, column: 22, scope: !8240)
!8436 = !DILocation(line: 812, column: 35, scope: !8240)
!8437 = !DILocation(line: 812, column: 43, scope: !8240)
!8438 = !DILocation(line: 812, column: 41, scope: !8240)
!8439 = !DILocation(line: 812, column: 50, scope: !8240)
!8440 = !DILocation(line: 812, column: 31, scope: !8240)
!8441 = !DILocation(line: 812, column: 12, scope: !8240)
!8442 = !DILocation(line: 812, column: 4, scope: !8240)
!8443 = !DILocation(line: 814, column: 3, scope: !8240)
!8444 = !DILocation(line: 816, column: 6, scope: !8240)
!8445 = !DILocation(line: 816, column: 13, scope: !8240)
!8446 = !DILocation(line: 816, column: 19, scope: !8240)
!8447 = !DILocation(line: 816, column: 23, scope: !8240)
!8448 = !DILocation(line: 816, column: 21, scope: !8240)
!8449 = !DILocation(line: 816, column: 32, scope: !8240)
!8450 = !DILocation(line: 816, column: 27, scope: !8240)
!8451 = !DILocation(line: 816, column: 25, scope: !8240)
!8452 = !DILocation(line: 816, column: 42, scope: !8240)
!8453 = !DILocation(line: 816, column: 37, scope: !8240)
!8454 = !DILocation(line: 816, column: 35, scope: !8240)
!8455 = !DILocation(line: 816, column: 15, scope: !8240)
!8456 = !DILocation(line: 816, column: 9, scope: !8240)
!8457 = !DILocation(line: 816, column: 4, scope: !8240)
!8458 = !DILocation(line: 818, column: 9, scope: !8240)
!8459 = !DILocation(line: 818, column: 2, scope: !8240)
!8460 = !DILocation(line: 819, column: 1, scope: !8240)
!8461 = distinct !DISubprogram(name: "Toon_Diff", scope: !1, file: !1, line: 743, type: !8462, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8462 = !DISubroutineType(types: !8463)
!8463 = !{!147, !2219, !2219, !2219, !147, !147}
!8464 = !DILocalVariable(name: "n", arg: 1, scope: !8461, file: !1, line: 743, type: !2219)
!8465 = !DILocation(line: 743, column: 36, scope: !8461)
!8466 = !DILocalVariable(name: "l", arg: 2, scope: !8461, file: !1, line: 743, type: !2219)
!8467 = !DILocation(line: 743, column: 54, scope: !8461)
!8468 = !DILocalVariable(name: "UNUSED_v", arg: 3, scope: !8461, file: !1, line: 743, type: !2219)
!8469 = !DILocation(line: 743, column: 72, scope: !8461)
!8470 = !DILocalVariable(name: "size", arg: 4, scope: !8461, file: !1, line: 743, type: !147)
!8471 = !DILocation(line: 743, column: 92, scope: !8461)
!8472 = !DILocalVariable(name: "smooth", arg: 5, scope: !8461, file: !1, line: 743, type: !147)
!8473 = !DILocation(line: 743, column: 104, scope: !8461)
!8474 = !DILocalVariable(name: "rslt", scope: !8461, file: !1, line: 745, type: !147)
!8475 = !DILocation(line: 745, column: 8, scope: !8461)
!8476 = !DILocalVariable(name: "ang", scope: !8461, file: !1, line: 745, type: !147)
!8477 = !DILocation(line: 745, column: 14, scope: !8461)
!8478 = !DILocation(line: 747, column: 9, scope: !8461)
!8479 = !DILocation(line: 747, column: 14, scope: !8461)
!8480 = !DILocation(line: 747, column: 13, scope: !8461)
!8481 = !DILocation(line: 747, column: 21, scope: !8461)
!8482 = !DILocation(line: 747, column: 26, scope: !8461)
!8483 = !DILocation(line: 747, column: 25, scope: !8461)
!8484 = !DILocation(line: 747, column: 19, scope: !8461)
!8485 = !DILocation(line: 747, column: 33, scope: !8461)
!8486 = !DILocation(line: 747, column: 38, scope: !8461)
!8487 = !DILocation(line: 747, column: 37, scope: !8461)
!8488 = !DILocation(line: 747, column: 31, scope: !8461)
!8489 = !DILocation(line: 747, column: 7, scope: !8461)
!8490 = !DILocation(line: 749, column: 15, scope: !8461)
!8491 = !DILocation(line: 749, column: 8, scope: !8461)
!8492 = !DILocation(line: 749, column: 6, scope: !8461)
!8493 = !DILocation(line: 751, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8461, file: !1, line: 751, column: 7)
!8495 = !DILocation(line: 751, column: 13, scope: !8494)
!8496 = !DILocation(line: 751, column: 11, scope: !8494)
!8497 = !DILocation(line: 751, column: 7, scope: !8461)
!8498 = !DILocation(line: 751, column: 25, scope: !8494)
!8499 = !DILocation(line: 751, column: 20, scope: !8494)
!8500 = !DILocation(line: 752, column: 12, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8494, file: !1, line: 752, column: 12)
!8502 = !DILocation(line: 752, column: 20, scope: !8501)
!8503 = !DILocation(line: 752, column: 27, scope: !8501)
!8504 = !DILocation(line: 752, column: 25, scope: !8501)
!8505 = !DILocation(line: 752, column: 16, scope: !8501)
!8506 = !DILocation(line: 752, column: 35, scope: !8501)
!8507 = !DILocation(line: 752, column: 38, scope: !8501)
!8508 = !DILocation(line: 752, column: 45, scope: !8501)
!8509 = !DILocation(line: 752, column: 12, scope: !8494)
!8510 = !DILocation(line: 752, column: 60, scope: !8501)
!8511 = !DILocation(line: 752, column: 55, scope: !8501)
!8512 = !DILocation(line: 753, column: 23, scope: !8501)
!8513 = !DILocation(line: 753, column: 29, scope: !8501)
!8514 = !DILocation(line: 753, column: 27, scope: !8501)
!8515 = !DILocation(line: 753, column: 37, scope: !8501)
!8516 = !DILocation(line: 753, column: 35, scope: !8501)
!8517 = !DILocation(line: 753, column: 19, scope: !8501)
!8518 = !DILocation(line: 753, column: 12, scope: !8501)
!8519 = !DILocation(line: 755, column: 9, scope: !8461)
!8520 = !DILocation(line: 755, column: 2, scope: !8461)
!8521 = distinct !DISubprogram(name: "Minnaert_Diff", scope: !1, file: !1, line: 822, type: !8522, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!147, !147, !2219, !2219, !147}
!8524 = !DILocalVariable(name: "nl", arg: 1, scope: !8521, file: !1, line: 822, type: !147)
!8525 = !DILocation(line: 822, column: 34, scope: !8521)
!8526 = !DILocalVariable(name: "n", arg: 2, scope: !8521, file: !1, line: 822, type: !2219)
!8527 = !DILocation(line: 822, column: 50, scope: !8521)
!8528 = !DILocalVariable(name: "v", arg: 3, scope: !8521, file: !1, line: 822, type: !2219)
!8529 = !DILocation(line: 822, column: 68, scope: !8521)
!8530 = !DILocalVariable(name: "darkness", arg: 4, scope: !8521, file: !1, line: 822, type: !147)
!8531 = !DILocation(line: 822, column: 80, scope: !8521)
!8532 = !DILocalVariable(name: "i", scope: !8521, file: !1, line: 824, type: !147)
!8533 = !DILocation(line: 824, column: 8, scope: !8521)
!8534 = !DILocalVariable(name: "nv", scope: !8521, file: !1, line: 824, type: !147)
!8535 = !DILocation(line: 824, column: 11, scope: !8521)
!8536 = !DILocation(line: 827, column: 6, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8521, file: !1, line: 827, column: 6)
!8538 = !DILocation(line: 827, column: 9, scope: !8537)
!8539 = !DILocation(line: 827, column: 6, scope: !8521)
!8540 = !DILocation(line: 828, column: 3, scope: !8537)
!8541 = !DILocation(line: 831, column: 16, scope: !8521)
!8542 = !DILocation(line: 831, column: 19, scope: !8521)
!8543 = !DILocation(line: 831, column: 7, scope: !8521)
!8544 = !DILocation(line: 831, column: 5, scope: !8521)
!8545 = !DILocation(line: 832, column: 6, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8521, file: !1, line: 832, column: 6)
!8547 = !DILocation(line: 832, column: 9, scope: !8546)
!8548 = !DILocation(line: 832, column: 6, scope: !8521)
!8549 = !DILocation(line: 833, column: 6, scope: !8546)
!8550 = !DILocation(line: 833, column: 3, scope: !8546)
!8551 = !DILocation(line: 835, column: 6, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8521, file: !1, line: 835, column: 6)
!8553 = !DILocation(line: 835, column: 15, scope: !8552)
!8554 = !DILocation(line: 835, column: 6, scope: !8521)
!8555 = !DILocation(line: 836, column: 7, scope: !8552)
!8556 = !DILocation(line: 836, column: 23, scope: !8552)
!8557 = !DILocation(line: 836, column: 28, scope: !8552)
!8558 = !DILocation(line: 836, column: 26, scope: !8552)
!8559 = !DILocation(line: 836, column: 16, scope: !8552)
!8560 = !DILocation(line: 836, column: 40, scope: !8552)
!8561 = !DILocation(line: 836, column: 49, scope: !8552)
!8562 = !DILocation(line: 836, column: 39, scope: !8552)
!8563 = !DILocation(line: 836, column: 12, scope: !8552)
!8564 = !DILocation(line: 836, column: 10, scope: !8552)
!8565 = !DILocation(line: 836, column: 5, scope: !8552)
!8566 = !DILocation(line: 836, column: 3, scope: !8552)
!8567 = !DILocation(line: 838, column: 7, scope: !8552)
!8568 = !DILocation(line: 838, column: 27, scope: !8552)
!8569 = !DILocation(line: 838, column: 25, scope: !8552)
!8570 = !DILocation(line: 838, column: 17, scope: !8552)
!8571 = !DILocation(line: 838, column: 33, scope: !8552)
!8572 = !DILocation(line: 838, column: 43, scope: !8552)
!8573 = !DILocation(line: 838, column: 32, scope: !8552)
!8574 = !DILocation(line: 838, column: 12, scope: !8552)
!8575 = !DILocation(line: 838, column: 10, scope: !8552)
!8576 = !DILocation(line: 838, column: 5, scope: !8552)
!8577 = !DILocation(line: 840, column: 9, scope: !8521)
!8578 = !DILocation(line: 840, column: 2, scope: !8521)
!8579 = !DILocation(line: 841, column: 1, scope: !8521)
!8580 = distinct !DISubprogram(name: "Fresnel_Diff", scope: !1, file: !1, line: 843, type: !8581, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8581 = !DISubroutineType(types: !8582)
!8582 = !{!147, !643, !643, !643, !147, !147}
!8583 = !DILocalVariable(name: "vn", arg: 1, scope: !8580, file: !1, line: 843, type: !643)
!8584 = !DILocation(line: 843, column: 34, scope: !8580)
!8585 = !DILocalVariable(name: "lv", arg: 2, scope: !8580, file: !1, line: 843, type: !643)
!8586 = !DILocation(line: 843, column: 45, scope: !8580)
!8587 = !DILocalVariable(name: "UNUSED_view", arg: 3, scope: !8580, file: !1, line: 843, type: !643)
!8588 = !DILocation(line: 843, column: 56, scope: !8580)
!8589 = !DILocalVariable(name: "fac_i", arg: 4, scope: !8580, file: !1, line: 843, type: !147)
!8590 = !DILocation(line: 843, column: 76, scope: !8580)
!8591 = !DILocalVariable(name: "fac", arg: 5, scope: !8580, file: !1, line: 843, type: !147)
!8592 = !DILocation(line: 843, column: 89, scope: !8580)
!8593 = !DILocation(line: 845, column: 21, scope: !8580)
!8594 = !DILocation(line: 845, column: 25, scope: !8580)
!8595 = !DILocation(line: 845, column: 29, scope: !8580)
!8596 = !DILocation(line: 845, column: 36, scope: !8580)
!8597 = !DILocation(line: 845, column: 9, scope: !8580)
!8598 = !DILocation(line: 845, column: 2, scope: !8580)
!8599 = distinct !DISubprogram(name: "add_to_diffuse", scope: !1, file: !1, line: 965, type: !8600, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{null, !643, !1829, !147, !147, !147, !147}
!8602 = !DILocalVariable(name: "diff", arg: 1, scope: !8599, file: !1, line: 965, type: !643)
!8603 = !DILocation(line: 965, column: 35, scope: !8599)
!8604 = !DILocalVariable(name: "shi", arg: 2, scope: !8599, file: !1, line: 965, type: !1829)
!8605 = !DILocation(line: 965, column: 53, scope: !8599)
!8606 = !DILocalVariable(name: "is", arg: 3, scope: !8599, file: !1, line: 965, type: !147)
!8607 = !DILocation(line: 965, column: 64, scope: !8599)
!8608 = !DILocalVariable(name: "r", arg: 4, scope: !8599, file: !1, line: 965, type: !147)
!8609 = !DILocation(line: 965, column: 74, scope: !8599)
!8610 = !DILocalVariable(name: "g", arg: 5, scope: !8599, file: !1, line: 965, type: !147)
!8611 = !DILocation(line: 965, column: 83, scope: !8599)
!8612 = !DILocalVariable(name: "b", arg: 6, scope: !8599, file: !1, line: 965, type: !147)
!8613 = !DILocation(line: 965, column: 92, scope: !8599)
!8614 = !DILocalVariable(name: "ma", scope: !8599, file: !1, line: 967, type: !3711)
!8615 = !DILocation(line: 967, column: 12, scope: !8599)
!8616 = !DILocation(line: 967, column: 16, scope: !8599)
!8617 = !DILocation(line: 967, column: 21, scope: !8599)
!8618 = !DILocation(line: 969, column: 6, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8599, file: !1, line: 969, column: 6)
!8620 = !DILocation(line: 969, column: 10, scope: !8619)
!8621 = !DILocation(line: 969, column: 19, scope: !8619)
!8622 = !DILocation(line: 969, column: 23, scope: !8619)
!8623 = !DILocation(line: 969, column: 27, scope: !8619)
!8624 = !DILocation(line: 969, column: 32, scope: !8619)
!8625 = !DILocation(line: 969, column: 6, scope: !8599)
!8626 = !DILocation(line: 972, column: 7, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 972, column: 7)
!8628 = distinct !DILexicalBlock(scope: !8619, file: !1, line: 969, column: 48)
!8629 = !DILocation(line: 972, column: 11, scope: !8627)
!8630 = !DILocation(line: 972, column: 21, scope: !8627)
!8631 = !DILocation(line: 972, column: 7, scope: !8628)
!8632 = !DILocation(line: 974, column: 15, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8627, file: !1, line: 972, column: 42)
!8634 = !DILocation(line: 974, column: 19, scope: !8633)
!8635 = !DILocation(line: 974, column: 24, scope: !8633)
!8636 = !DILocation(line: 974, column: 17, scope: !8633)
!8637 = !DILocation(line: 974, column: 4, scope: !8633)
!8638 = !DILocation(line: 974, column: 12, scope: !8633)
!8639 = !DILocation(line: 975, column: 15, scope: !8633)
!8640 = !DILocation(line: 975, column: 19, scope: !8633)
!8641 = !DILocation(line: 975, column: 24, scope: !8633)
!8642 = !DILocation(line: 975, column: 17, scope: !8633)
!8643 = !DILocation(line: 975, column: 4, scope: !8633)
!8644 = !DILocation(line: 975, column: 12, scope: !8633)
!8645 = !DILocation(line: 976, column: 15, scope: !8633)
!8646 = !DILocation(line: 976, column: 19, scope: !8633)
!8647 = !DILocation(line: 976, column: 24, scope: !8633)
!8648 = !DILocation(line: 976, column: 17, scope: !8633)
!8649 = !DILocation(line: 976, column: 4, scope: !8633)
!8650 = !DILocation(line: 976, column: 12, scope: !8633)
!8651 = !DILocation(line: 977, column: 3, scope: !8633)
!8652 = !DILocalVariable(name: "colt", scope: !8653, file: !1, line: 979, type: !212)
!8653 = distinct !DILexicalBlock(scope: !8627, file: !1, line: 978, column: 8)
!8654 = !DILocation(line: 979, column: 10, scope: !8653)
!8655 = !DILocalVariable(name: "col", scope: !8653, file: !1, line: 979, type: !511)
!8656 = !DILocation(line: 979, column: 19, scope: !8653)
!8657 = !DILocalVariable(name: "fac", scope: !8653, file: !1, line: 980, type: !147)
!8658 = !DILocation(line: 980, column: 10, scope: !8653)
!8659 = !DILocation(line: 983, column: 12, scope: !8653)
!8660 = !DILocation(line: 983, column: 16, scope: !8653)
!8661 = !DILocation(line: 983, column: 4, scope: !8653)
!8662 = !DILocation(line: 986, column: 15, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8653, file: !1, line: 983, column: 28)
!8664 = !DILocation(line: 986, column: 14, scope: !8663)
!8665 = !DILocation(line: 986, column: 25, scope: !8663)
!8666 = !DILocation(line: 986, column: 24, scope: !8663)
!8667 = !DILocation(line: 986, column: 17, scope: !8663)
!8668 = !DILocation(line: 986, column: 35, scope: !8663)
!8669 = !DILocation(line: 986, column: 34, scope: !8663)
!8670 = !DILocation(line: 986, column: 27, scope: !8663)
!8671 = !DILocation(line: 986, column: 8, scope: !8663)
!8672 = !DILocation(line: 987, column: 5, scope: !8663)
!8673 = !DILocation(line: 989, column: 10, scope: !8663)
!8674 = !DILocation(line: 989, column: 8, scope: !8663)
!8675 = !DILocation(line: 990, column: 5, scope: !8663)
!8676 = !DILocation(line: 992, column: 10, scope: !8663)
!8677 = !DILocation(line: 992, column: 15, scope: !8663)
!8678 = !DILocation(line: 992, column: 23, scope: !8663)
!8679 = !DILocation(line: 992, column: 28, scope: !8663)
!8680 = !DILocation(line: 992, column: 22, scope: !8663)
!8681 = !DILocation(line: 992, column: 36, scope: !8663)
!8682 = !DILocation(line: 992, column: 41, scope: !8663)
!8683 = !DILocation(line: 992, column: 49, scope: !8663)
!8684 = !DILocation(line: 992, column: 54, scope: !8663)
!8685 = !DILocation(line: 992, column: 48, scope: !8663)
!8686 = !DILocation(line: 992, column: 34, scope: !8663)
!8687 = !DILocation(line: 992, column: 62, scope: !8663)
!8688 = !DILocation(line: 992, column: 67, scope: !8663)
!8689 = !DILocation(line: 992, column: 75, scope: !8663)
!8690 = !DILocation(line: 992, column: 80, scope: !8663)
!8691 = !DILocation(line: 992, column: 74, scope: !8663)
!8692 = !DILocation(line: 992, column: 60, scope: !8663)
!8693 = !DILocation(line: 992, column: 8, scope: !8663)
!8694 = !DILocation(line: 993, column: 5, scope: !8663)
!8695 = !DILocation(line: 995, column: 8, scope: !8663)
!8696 = !DILocation(line: 996, column: 5, scope: !8663)
!8697 = !DILocation(line: 999, column: 17, scope: !8653)
!8698 = !DILocation(line: 999, column: 21, scope: !8653)
!8699 = !DILocation(line: 999, column: 31, scope: !8653)
!8700 = !DILocation(line: 999, column: 36, scope: !8653)
!8701 = !DILocation(line: 999, column: 4, scope: !8653)
!8702 = !DILocation(line: 1002, column: 9, scope: !8653)
!8703 = !DILocation(line: 1002, column: 16, scope: !8653)
!8704 = !DILocation(line: 1002, column: 20, scope: !8653)
!8705 = !DILocation(line: 1002, column: 15, scope: !8653)
!8706 = !DILocation(line: 1002, column: 7, scope: !8653)
!8707 = !DILocation(line: 1003, column: 13, scope: !8653)
!8708 = !DILocation(line: 1003, column: 18, scope: !8653)
!8709 = !DILocation(line: 1003, column: 4, scope: !8653)
!8710 = !DILocation(line: 1003, column: 11, scope: !8653)
!8711 = !DILocation(line: 1004, column: 13, scope: !8653)
!8712 = !DILocation(line: 1004, column: 18, scope: !8653)
!8713 = !DILocation(line: 1004, column: 4, scope: !8653)
!8714 = !DILocation(line: 1004, column: 11, scope: !8653)
!8715 = !DILocation(line: 1005, column: 13, scope: !8653)
!8716 = !DILocation(line: 1005, column: 18, scope: !8653)
!8717 = !DILocation(line: 1005, column: 4, scope: !8653)
!8718 = !DILocation(line: 1005, column: 11, scope: !8653)
!8719 = !DILocation(line: 1007, column: 15, scope: !8653)
!8720 = !DILocation(line: 1007, column: 19, scope: !8653)
!8721 = !DILocation(line: 1007, column: 34, scope: !8653)
!8722 = !DILocation(line: 1007, column: 40, scope: !8653)
!8723 = !DILocation(line: 1007, column: 45, scope: !8653)
!8724 = !DILocation(line: 1007, column: 4, scope: !8653)
!8725 = !DILocation(line: 1010, column: 15, scope: !8653)
!8726 = !DILocation(line: 1010, column: 19, scope: !8653)
!8727 = !DILocation(line: 1010, column: 17, scope: !8653)
!8728 = !DILocation(line: 1010, column: 4, scope: !8653)
!8729 = !DILocation(line: 1010, column: 12, scope: !8653)
!8730 = !DILocation(line: 1011, column: 15, scope: !8653)
!8731 = !DILocation(line: 1011, column: 19, scope: !8653)
!8732 = !DILocation(line: 1011, column: 17, scope: !8653)
!8733 = !DILocation(line: 1011, column: 4, scope: !8653)
!8734 = !DILocation(line: 1011, column: 12, scope: !8653)
!8735 = !DILocation(line: 1012, column: 15, scope: !8653)
!8736 = !DILocation(line: 1012, column: 19, scope: !8653)
!8737 = !DILocation(line: 1012, column: 17, scope: !8653)
!8738 = !DILocation(line: 1012, column: 4, scope: !8653)
!8739 = !DILocation(line: 1012, column: 12, scope: !8653)
!8740 = !DILocation(line: 1014, column: 2, scope: !8628)
!8741 = !DILocation(line: 1016, column: 14, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8619, file: !1, line: 1015, column: 7)
!8743 = !DILocation(line: 1016, column: 18, scope: !8742)
!8744 = !DILocation(line: 1016, column: 23, scope: !8742)
!8745 = !DILocation(line: 1016, column: 16, scope: !8742)
!8746 = !DILocation(line: 1016, column: 3, scope: !8742)
!8747 = !DILocation(line: 1016, column: 11, scope: !8742)
!8748 = !DILocation(line: 1017, column: 14, scope: !8742)
!8749 = !DILocation(line: 1017, column: 18, scope: !8742)
!8750 = !DILocation(line: 1017, column: 23, scope: !8742)
!8751 = !DILocation(line: 1017, column: 16, scope: !8742)
!8752 = !DILocation(line: 1017, column: 3, scope: !8742)
!8753 = !DILocation(line: 1017, column: 11, scope: !8742)
!8754 = !DILocation(line: 1018, column: 14, scope: !8742)
!8755 = !DILocation(line: 1018, column: 18, scope: !8742)
!8756 = !DILocation(line: 1018, column: 23, scope: !8742)
!8757 = !DILocation(line: 1018, column: 16, scope: !8742)
!8758 = !DILocation(line: 1018, column: 3, scope: !8742)
!8759 = !DILocation(line: 1018, column: 11, scope: !8742)
!8760 = !DILocation(line: 1020, column: 1, scope: !8599)
!8761 = distinct !DISubprogram(name: "spec", scope: !1, file: !1, line: 548, type: !8762, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{!147, !147, !5}
!8764 = !DILocalVariable(name: "inp", arg: 1, scope: !8761, file: !1, line: 548, type: !147)
!8765 = !DILocation(line: 548, column: 25, scope: !8761)
!8766 = !DILocalVariable(name: "hard", arg: 2, scope: !8761, file: !1, line: 548, type: !5)
!8767 = !DILocation(line: 548, column: 34, scope: !8761)
!8768 = !DILocalVariable(name: "b1", scope: !8761, file: !1, line: 550, type: !147)
!8769 = !DILocation(line: 550, column: 8, scope: !8761)
!8770 = !DILocation(line: 552, column: 6, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 552, column: 6)
!8772 = !DILocation(line: 552, column: 9, scope: !8771)
!8773 = !DILocation(line: 552, column: 6, scope: !8761)
!8774 = !DILocation(line: 552, column: 17, scope: !8771)
!8775 = !DILocation(line: 553, column: 11, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8771, file: !1, line: 553, column: 11)
!8777 = !DILocation(line: 553, column: 14, scope: !8776)
!8778 = !DILocation(line: 553, column: 11, scope: !8771)
!8779 = !DILocation(line: 553, column: 22, scope: !8776)
!8780 = !DILocation(line: 555, column: 6, scope: !8761)
!8781 = !DILocation(line: 555, column: 10, scope: !8761)
!8782 = !DILocation(line: 555, column: 9, scope: !8761)
!8783 = !DILocation(line: 555, column: 4, scope: !8761)
!8784 = !DILocation(line: 557, column: 6, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 557, column: 6)
!8786 = !DILocation(line: 557, column: 8, scope: !8785)
!8787 = !DILocation(line: 557, column: 6, scope: !8761)
!8788 = !DILocation(line: 557, column: 18, scope: !8785)
!8789 = !DILocation(line: 557, column: 16, scope: !8785)
!8790 = !DILocation(line: 559, column: 7, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 559, column: 6)
!8792 = !DILocation(line: 559, column: 12, scope: !8791)
!8793 = !DILocation(line: 559, column: 16, scope: !8791)
!8794 = !DILocation(line: 559, column: 6, scope: !8761)
!8795 = !DILocation(line: 559, column: 25, scope: !8791)
!8796 = !DILocation(line: 559, column: 22, scope: !8791)
!8797 = !DILocation(line: 560, column: 6, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 560, column: 6)
!8799 = !DILocation(line: 560, column: 11, scope: !8798)
!8800 = !DILocation(line: 560, column: 6, scope: !8761)
!8801 = !DILocation(line: 560, column: 23, scope: !8798)
!8802 = !DILocation(line: 560, column: 20, scope: !8798)
!8803 = !DILocation(line: 560, column: 17, scope: !8798)
!8804 = !DILocation(line: 561, column: 7, scope: !8761)
!8805 = !DILocation(line: 561, column: 4, scope: !8761)
!8806 = !DILocation(line: 562, column: 6, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 562, column: 6)
!8808 = !DILocation(line: 562, column: 11, scope: !8807)
!8809 = !DILocation(line: 562, column: 6, scope: !8761)
!8810 = !DILocation(line: 562, column: 23, scope: !8807)
!8811 = !DILocation(line: 562, column: 20, scope: !8807)
!8812 = !DILocation(line: 562, column: 17, scope: !8807)
!8813 = !DILocation(line: 563, column: 7, scope: !8761)
!8814 = !DILocation(line: 563, column: 4, scope: !8761)
!8815 = !DILocation(line: 564, column: 6, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 564, column: 6)
!8817 = !DILocation(line: 564, column: 11, scope: !8816)
!8818 = !DILocation(line: 564, column: 6, scope: !8761)
!8819 = !DILocation(line: 564, column: 23, scope: !8816)
!8820 = !DILocation(line: 564, column: 20, scope: !8816)
!8821 = !DILocation(line: 564, column: 17, scope: !8816)
!8822 = !DILocation(line: 565, column: 7, scope: !8761)
!8823 = !DILocation(line: 565, column: 4, scope: !8761)
!8824 = !DILocation(line: 566, column: 6, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 566, column: 6)
!8826 = !DILocation(line: 566, column: 11, scope: !8825)
!8827 = !DILocation(line: 566, column: 6, scope: !8761)
!8828 = !DILocation(line: 566, column: 23, scope: !8825)
!8829 = !DILocation(line: 566, column: 20, scope: !8825)
!8830 = !DILocation(line: 566, column: 17, scope: !8825)
!8831 = !DILocation(line: 567, column: 7, scope: !8761)
!8832 = !DILocation(line: 567, column: 4, scope: !8761)
!8833 = !DILocation(line: 570, column: 6, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 570, column: 6)
!8835 = !DILocation(line: 570, column: 8, scope: !8834)
!8836 = !DILocation(line: 570, column: 6, scope: !8761)
!8837 = !DILocation(line: 570, column: 19, scope: !8834)
!8838 = !DILocation(line: 570, column: 17, scope: !8834)
!8839 = !DILocation(line: 572, column: 6, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 572, column: 6)
!8841 = !DILocation(line: 572, column: 11, scope: !8840)
!8842 = !DILocation(line: 572, column: 6, scope: !8761)
!8843 = !DILocation(line: 572, column: 23, scope: !8840)
!8844 = !DILocation(line: 572, column: 20, scope: !8840)
!8845 = !DILocation(line: 572, column: 17, scope: !8840)
!8846 = !DILocation(line: 573, column: 7, scope: !8761)
!8847 = !DILocation(line: 573, column: 4, scope: !8761)
!8848 = !DILocation(line: 574, column: 6, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 574, column: 6)
!8850 = !DILocation(line: 574, column: 11, scope: !8849)
!8851 = !DILocation(line: 574, column: 6, scope: !8761)
!8852 = !DILocation(line: 574, column: 22, scope: !8849)
!8853 = !DILocation(line: 574, column: 20, scope: !8849)
!8854 = !DILocation(line: 574, column: 17, scope: !8849)
!8855 = !DILocation(line: 575, column: 7, scope: !8761)
!8856 = !DILocation(line: 575, column: 4, scope: !8761)
!8857 = !DILocation(line: 576, column: 6, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 576, column: 6)
!8859 = !DILocation(line: 576, column: 11, scope: !8858)
!8860 = !DILocation(line: 576, column: 6, scope: !8761)
!8861 = !DILocation(line: 576, column: 23, scope: !8858)
!8862 = !DILocation(line: 576, column: 21, scope: !8858)
!8863 = !DILocation(line: 576, column: 18, scope: !8858)
!8864 = !DILocation(line: 578, column: 6, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 578, column: 6)
!8866 = !DILocation(line: 578, column: 8, scope: !8865)
!8867 = !DILocation(line: 578, column: 6, scope: !8761)
!8868 = !DILocation(line: 578, column: 19, scope: !8865)
!8869 = !DILocation(line: 578, column: 17, scope: !8865)
!8870 = !DILocation(line: 580, column: 6, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8761, file: !1, line: 580, column: 6)
!8872 = !DILocation(line: 580, column: 11, scope: !8871)
!8873 = !DILocation(line: 580, column: 6, scope: !8761)
!8874 = !DILocation(line: 581, column: 8, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 580, column: 18)
!8876 = !DILocation(line: 581, column: 5, scope: !8875)
!8877 = !DILocation(line: 582, column: 8, scope: !8875)
!8878 = !DILocation(line: 582, column: 6, scope: !8875)
!8879 = !DILocation(line: 583, column: 2, scope: !8875)
!8880 = !DILocation(line: 585, column: 9, scope: !8761)
!8881 = !DILocation(line: 585, column: 2, scope: !8761)
!8882 = !DILocation(line: 586, column: 1, scope: !8761)
!8883 = distinct !DISubprogram(name: "Phong_Spec", scope: !1, file: !1, line: 588, type: !8884, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!147, !2219, !2219, !2219, !5, !5}
!8886 = !DILocalVariable(name: "n", arg: 1, scope: !8883, file: !1, line: 588, type: !2219)
!8887 = !DILocation(line: 588, column: 37, scope: !8883)
!8888 = !DILocalVariable(name: "l", arg: 2, scope: !8883, file: !1, line: 588, type: !2219)
!8889 = !DILocation(line: 588, column: 55, scope: !8883)
!8890 = !DILocalVariable(name: "v", arg: 3, scope: !8883, file: !1, line: 588, type: !2219)
!8891 = !DILocation(line: 588, column: 73, scope: !8883)
!8892 = !DILocalVariable(name: "hard", arg: 4, scope: !8883, file: !1, line: 588, type: !5)
!8893 = !DILocation(line: 588, column: 83, scope: !8883)
!8894 = !DILocalVariable(name: "tangent", arg: 5, scope: !8883, file: !1, line: 588, type: !5)
!8895 = !DILocation(line: 588, column: 93, scope: !8883)
!8896 = !DILocalVariable(name: "h", scope: !8883, file: !1, line: 590, type: !212)
!8897 = !DILocation(line: 590, column: 8, scope: !8883)
!8898 = !DILocalVariable(name: "rslt", scope: !8883, file: !1, line: 591, type: !147)
!8899 = !DILocation(line: 591, column: 8, scope: !8883)
!8900 = !DILocation(line: 593, column: 9, scope: !8883)
!8901 = !DILocation(line: 593, column: 16, scope: !8883)
!8902 = !DILocation(line: 593, column: 14, scope: !8883)
!8903 = !DILocation(line: 593, column: 2, scope: !8883)
!8904 = !DILocation(line: 593, column: 7, scope: !8883)
!8905 = !DILocation(line: 594, column: 9, scope: !8883)
!8906 = !DILocation(line: 594, column: 16, scope: !8883)
!8907 = !DILocation(line: 594, column: 14, scope: !8883)
!8908 = !DILocation(line: 594, column: 2, scope: !8883)
!8909 = !DILocation(line: 594, column: 7, scope: !8883)
!8910 = !DILocation(line: 595, column: 9, scope: !8883)
!8911 = !DILocation(line: 595, column: 16, scope: !8883)
!8912 = !DILocation(line: 595, column: 14, scope: !8883)
!8913 = !DILocation(line: 595, column: 2, scope: !8883)
!8914 = !DILocation(line: 595, column: 7, scope: !8883)
!8915 = !DILocation(line: 596, column: 15, scope: !8883)
!8916 = !DILocation(line: 596, column: 2, scope: !8883)
!8917 = !DILocation(line: 598, column: 9, scope: !8883)
!8918 = !DILocation(line: 598, column: 14, scope: !8883)
!8919 = !DILocation(line: 598, column: 13, scope: !8883)
!8920 = !DILocation(line: 598, column: 21, scope: !8883)
!8921 = !DILocation(line: 598, column: 26, scope: !8883)
!8922 = !DILocation(line: 598, column: 25, scope: !8883)
!8923 = !DILocation(line: 598, column: 19, scope: !8883)
!8924 = !DILocation(line: 598, column: 33, scope: !8883)
!8925 = !DILocation(line: 598, column: 38, scope: !8883)
!8926 = !DILocation(line: 598, column: 37, scope: !8883)
!8927 = !DILocation(line: 598, column: 31, scope: !8883)
!8928 = !DILocation(line: 598, column: 7, scope: !8883)
!8929 = !DILocation(line: 599, column: 6, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8883, file: !1, line: 599, column: 6)
!8931 = !DILocation(line: 599, column: 6, scope: !8883)
!8932 = !DILocation(line: 599, column: 35, scope: !8930)
!8933 = !DILocation(line: 599, column: 40, scope: !8930)
!8934 = !DILocation(line: 599, column: 39, scope: !8930)
!8935 = !DILocation(line: 599, column: 33, scope: !8930)
!8936 = !DILocation(line: 599, column: 21, scope: !8930)
!8937 = !DILocation(line: 599, column: 19, scope: !8930)
!8938 = !DILocation(line: 599, column: 15, scope: !8930)
!8939 = !DILocation(line: 601, column: 7, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8883, file: !1, line: 601, column: 7)
!8941 = !DILocation(line: 601, column: 12, scope: !8940)
!8942 = !DILocation(line: 601, column: 7, scope: !8883)
!8943 = !DILocation(line: 601, column: 32, scope: !8940)
!8944 = !DILocation(line: 601, column: 38, scope: !8940)
!8945 = !DILocation(line: 601, column: 27, scope: !8940)
!8946 = !DILocation(line: 601, column: 25, scope: !8940)
!8947 = !DILocation(line: 601, column: 21, scope: !8940)
!8948 = !DILocation(line: 602, column: 12, scope: !8940)
!8949 = !DILocation(line: 604, column: 9, scope: !8883)
!8950 = !DILocation(line: 604, column: 2, scope: !8883)
!8951 = distinct !DISubprogram(name: "CookTorr_Spec", scope: !1, file: !1, line: 609, type: !8884, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!8952 = !DILocalVariable(name: "n", arg: 1, scope: !8951, file: !1, line: 609, type: !2219)
!8953 = !DILocation(line: 609, column: 40, scope: !8951)
!8954 = !DILocalVariable(name: "l", arg: 2, scope: !8951, file: !1, line: 609, type: !2219)
!8955 = !DILocation(line: 609, column: 58, scope: !8951)
!8956 = !DILocalVariable(name: "v", arg: 3, scope: !8951, file: !1, line: 609, type: !2219)
!8957 = !DILocation(line: 609, column: 76, scope: !8951)
!8958 = !DILocalVariable(name: "hard", arg: 4, scope: !8951, file: !1, line: 609, type: !5)
!8959 = !DILocation(line: 609, column: 86, scope: !8951)
!8960 = !DILocalVariable(name: "tangent", arg: 5, scope: !8951, file: !1, line: 609, type: !5)
!8961 = !DILocation(line: 609, column: 96, scope: !8951)
!8962 = !DILocalVariable(name: "i", scope: !8951, file: !1, line: 611, type: !147)
!8963 = !DILocation(line: 611, column: 8, scope: !8951)
!8964 = !DILocalVariable(name: "nh", scope: !8951, file: !1, line: 611, type: !147)
!8965 = !DILocation(line: 611, column: 11, scope: !8951)
!8966 = !DILocalVariable(name: "nv", scope: !8951, file: !1, line: 611, type: !147)
!8967 = !DILocation(line: 611, column: 15, scope: !8951)
!8968 = !DILocalVariable(name: "h", scope: !8951, file: !1, line: 611, type: !212)
!8969 = !DILocation(line: 611, column: 19, scope: !8951)
!8970 = !DILocation(line: 613, column: 8, scope: !8951)
!8971 = !DILocation(line: 613, column: 13, scope: !8951)
!8972 = !DILocation(line: 613, column: 12, scope: !8951)
!8973 = !DILocation(line: 613, column: 2, scope: !8951)
!8974 = !DILocation(line: 613, column: 6, scope: !8951)
!8975 = !DILocation(line: 614, column: 8, scope: !8951)
!8976 = !DILocation(line: 614, column: 13, scope: !8951)
!8977 = !DILocation(line: 614, column: 12, scope: !8951)
!8978 = !DILocation(line: 614, column: 2, scope: !8951)
!8979 = !DILocation(line: 614, column: 6, scope: !8951)
!8980 = !DILocation(line: 615, column: 8, scope: !8951)
!8981 = !DILocation(line: 615, column: 13, scope: !8951)
!8982 = !DILocation(line: 615, column: 12, scope: !8951)
!8983 = !DILocation(line: 615, column: 2, scope: !8951)
!8984 = !DILocation(line: 615, column: 6, scope: !8951)
!8985 = !DILocation(line: 616, column: 15, scope: !8951)
!8986 = !DILocation(line: 616, column: 2, scope: !8951)
!8987 = !DILocation(line: 618, column: 6, scope: !8951)
!8988 = !DILocation(line: 618, column: 11, scope: !8951)
!8989 = !DILocation(line: 618, column: 10, scope: !8951)
!8990 = !DILocation(line: 618, column: 16, scope: !8951)
!8991 = !DILocation(line: 618, column: 21, scope: !8951)
!8992 = !DILocation(line: 618, column: 20, scope: !8951)
!8993 = !DILocation(line: 618, column: 15, scope: !8951)
!8994 = !DILocation(line: 618, column: 26, scope: !8951)
!8995 = !DILocation(line: 618, column: 31, scope: !8951)
!8996 = !DILocation(line: 618, column: 30, scope: !8951)
!8997 = !DILocation(line: 618, column: 25, scope: !8951)
!8998 = !DILocation(line: 618, column: 4, scope: !8951)
!8999 = !DILocation(line: 619, column: 6, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8951, file: !1, line: 619, column: 6)
!9001 = !DILocation(line: 619, column: 6, scope: !8951)
!9002 = !DILocation(line: 619, column: 33, scope: !9000)
!9003 = !DILocation(line: 619, column: 36, scope: !9000)
!9004 = !DILocation(line: 619, column: 35, scope: !9000)
!9005 = !DILocation(line: 619, column: 31, scope: !9000)
!9006 = !DILocation(line: 619, column: 19, scope: !9000)
!9007 = !DILocation(line: 619, column: 17, scope: !9000)
!9008 = !DILocation(line: 619, column: 15, scope: !9000)
!9009 = !DILocation(line: 620, column: 11, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9000, file: !1, line: 620, column: 11)
!9011 = !DILocation(line: 620, column: 13, scope: !9010)
!9012 = !DILocation(line: 620, column: 11, scope: !9000)
!9013 = !DILocation(line: 620, column: 20, scope: !9010)
!9014 = !DILocation(line: 622, column: 6, scope: !8951)
!9015 = !DILocation(line: 622, column: 11, scope: !8951)
!9016 = !DILocation(line: 622, column: 10, scope: !8951)
!9017 = !DILocation(line: 622, column: 16, scope: !8951)
!9018 = !DILocation(line: 622, column: 21, scope: !8951)
!9019 = !DILocation(line: 622, column: 20, scope: !8951)
!9020 = !DILocation(line: 622, column: 15, scope: !8951)
!9021 = !DILocation(line: 622, column: 26, scope: !8951)
!9022 = !DILocation(line: 622, column: 31, scope: !8951)
!9023 = !DILocation(line: 622, column: 30, scope: !8951)
!9024 = !DILocation(line: 622, column: 25, scope: !8951)
!9025 = !DILocation(line: 622, column: 4, scope: !8951)
!9026 = !DILocation(line: 623, column: 6, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8951, file: !1, line: 623, column: 6)
!9028 = !DILocation(line: 623, column: 6, scope: !8951)
!9029 = !DILocation(line: 623, column: 33, scope: !9027)
!9030 = !DILocation(line: 623, column: 36, scope: !9027)
!9031 = !DILocation(line: 623, column: 35, scope: !9027)
!9032 = !DILocation(line: 623, column: 31, scope: !9027)
!9033 = !DILocation(line: 623, column: 19, scope: !9027)
!9034 = !DILocation(line: 623, column: 17, scope: !9027)
!9035 = !DILocation(line: 623, column: 15, scope: !9027)
!9036 = !DILocation(line: 624, column: 11, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9027, file: !1, line: 624, column: 11)
!9038 = !DILocation(line: 624, column: 13, scope: !9037)
!9039 = !DILocation(line: 624, column: 11, scope: !9027)
!9040 = !DILocation(line: 624, column: 22, scope: !9037)
!9041 = !DILocation(line: 624, column: 20, scope: !9037)
!9042 = !DILocation(line: 626, column: 10, scope: !8951)
!9043 = !DILocation(line: 626, column: 14, scope: !8951)
!9044 = !DILocation(line: 626, column: 5, scope: !8951)
!9045 = !DILocation(line: 626, column: 3, scope: !8951)
!9046 = !DILocation(line: 628, column: 5, scope: !8951)
!9047 = !DILocation(line: 628, column: 13, scope: !8951)
!9048 = !DILocation(line: 628, column: 12, scope: !8951)
!9049 = !DILocation(line: 628, column: 6, scope: !8951)
!9050 = !DILocation(line: 628, column: 3, scope: !8951)
!9051 = !DILocation(line: 629, column: 9, scope: !8951)
!9052 = !DILocation(line: 629, column: 2, scope: !8951)
!9053 = !DILocation(line: 630, column: 1, scope: !8951)
!9054 = distinct !DISubprogram(name: "Blinn_Spec", scope: !1, file: !1, line: 633, type: !9055, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{!147, !2219, !2219, !2219, !147, !147, !5}
!9057 = !DILocalVariable(name: "n", arg: 1, scope: !9054, file: !1, line: 633, type: !2219)
!9058 = !DILocation(line: 633, column: 37, scope: !9054)
!9059 = !DILocalVariable(name: "l", arg: 2, scope: !9054, file: !1, line: 633, type: !2219)
!9060 = !DILocation(line: 633, column: 55, scope: !9054)
!9061 = !DILocalVariable(name: "v", arg: 3, scope: !9054, file: !1, line: 633, type: !2219)
!9062 = !DILocation(line: 633, column: 73, scope: !9054)
!9063 = !DILocalVariable(name: "refrac", arg: 4, scope: !9054, file: !1, line: 633, type: !147)
!9064 = !DILocation(line: 633, column: 85, scope: !9054)
!9065 = !DILocalVariable(name: "spec_power", arg: 5, scope: !9054, file: !1, line: 633, type: !147)
!9066 = !DILocation(line: 633, column: 99, scope: !9054)
!9067 = !DILocalVariable(name: "tangent", arg: 6, scope: !9054, file: !1, line: 633, type: !5)
!9068 = !DILocation(line: 633, column: 115, scope: !9054)
!9069 = !DILocalVariable(name: "i", scope: !9054, file: !1, line: 635, type: !147)
!9070 = !DILocation(line: 635, column: 8, scope: !9054)
!9071 = !DILocalVariable(name: "nh", scope: !9054, file: !1, line: 635, type: !147)
!9072 = !DILocation(line: 635, column: 11, scope: !9054)
!9073 = !DILocalVariable(name: "nv", scope: !9054, file: !1, line: 635, type: !147)
!9074 = !DILocation(line: 635, column: 15, scope: !9054)
!9075 = !DILocalVariable(name: "nl", scope: !9054, file: !1, line: 635, type: !147)
!9076 = !DILocation(line: 635, column: 19, scope: !9054)
!9077 = !DILocalVariable(name: "vh", scope: !9054, file: !1, line: 635, type: !147)
!9078 = !DILocation(line: 635, column: 23, scope: !9054)
!9079 = !DILocalVariable(name: "h", scope: !9054, file: !1, line: 635, type: !212)
!9080 = !DILocation(line: 635, column: 27, scope: !9054)
!9081 = !DILocalVariable(name: "a", scope: !9054, file: !1, line: 636, type: !147)
!9082 = !DILocation(line: 636, column: 8, scope: !9054)
!9083 = !DILocalVariable(name: "b", scope: !9054, file: !1, line: 636, type: !147)
!9084 = !DILocation(line: 636, column: 11, scope: !9054)
!9085 = !DILocalVariable(name: "c", scope: !9054, file: !1, line: 636, type: !147)
!9086 = !DILocation(line: 636, column: 14, scope: !9054)
!9087 = !DILocalVariable(name: "g", scope: !9054, file: !1, line: 636, type: !147)
!9088 = !DILocation(line: 636, column: 17, scope: !9054)
!9089 = !DILocalVariable(name: "p", scope: !9054, file: !1, line: 636, type: !147)
!9090 = !DILocation(line: 636, column: 25, scope: !9054)
!9091 = !DILocalVariable(name: "f", scope: !9054, file: !1, line: 636, type: !147)
!9092 = !DILocation(line: 636, column: 28, scope: !9054)
!9093 = !DILocalVariable(name: "ang", scope: !9054, file: !1, line: 636, type: !147)
!9094 = !DILocation(line: 636, column: 31, scope: !9054)
!9095 = !DILocation(line: 638, column: 6, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 638, column: 6)
!9097 = !DILocation(line: 638, column: 13, scope: !9096)
!9098 = !DILocation(line: 638, column: 6, scope: !9054)
!9099 = !DILocation(line: 638, column: 21, scope: !9096)
!9100 = !DILocation(line: 639, column: 6, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 639, column: 6)
!9102 = !DILocation(line: 639, column: 17, scope: !9101)
!9103 = !DILocation(line: 639, column: 6, scope: !9054)
!9104 = !DILocation(line: 639, column: 26, scope: !9101)
!9105 = !DILocation(line: 642, column: 6, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 642, column: 6)
!9107 = !DILocation(line: 642, column: 16, scope: !9106)
!9108 = !DILocation(line: 642, column: 6, scope: !9054)
!9109 = !DILocation(line: 643, column: 29, scope: !9106)
!9110 = !DILocation(line: 643, column: 27, scope: !9106)
!9111 = !DILocation(line: 643, column: 16, scope: !9106)
!9112 = !DILocation(line: 643, column: 14, scope: !9106)
!9113 = !DILocation(line: 643, column: 3, scope: !9106)
!9114 = !DILocation(line: 644, column: 25, scope: !9106)
!9115 = !DILocation(line: 644, column: 24, scope: !9106)
!9116 = !DILocation(line: 644, column: 17, scope: !9106)
!9117 = !DILocation(line: 646, column: 8, scope: !9054)
!9118 = !DILocation(line: 646, column: 13, scope: !9054)
!9119 = !DILocation(line: 646, column: 12, scope: !9054)
!9120 = !DILocation(line: 646, column: 2, scope: !9054)
!9121 = !DILocation(line: 646, column: 6, scope: !9054)
!9122 = !DILocation(line: 647, column: 8, scope: !9054)
!9123 = !DILocation(line: 647, column: 13, scope: !9054)
!9124 = !DILocation(line: 647, column: 12, scope: !9054)
!9125 = !DILocation(line: 647, column: 2, scope: !9054)
!9126 = !DILocation(line: 647, column: 6, scope: !9054)
!9127 = !DILocation(line: 648, column: 8, scope: !9054)
!9128 = !DILocation(line: 648, column: 13, scope: !9054)
!9129 = !DILocation(line: 648, column: 12, scope: !9054)
!9130 = !DILocation(line: 648, column: 2, scope: !9054)
!9131 = !DILocation(line: 648, column: 6, scope: !9054)
!9132 = !DILocation(line: 649, column: 15, scope: !9054)
!9133 = !DILocation(line: 649, column: 2, scope: !9054)
!9134 = !DILocation(line: 651, column: 6, scope: !9054)
!9135 = !DILocation(line: 651, column: 11, scope: !9054)
!9136 = !DILocation(line: 651, column: 10, scope: !9054)
!9137 = !DILocation(line: 651, column: 16, scope: !9054)
!9138 = !DILocation(line: 651, column: 21, scope: !9054)
!9139 = !DILocation(line: 651, column: 20, scope: !9054)
!9140 = !DILocation(line: 651, column: 15, scope: !9054)
!9141 = !DILocation(line: 651, column: 26, scope: !9054)
!9142 = !DILocation(line: 651, column: 31, scope: !9054)
!9143 = !DILocation(line: 651, column: 30, scope: !9054)
!9144 = !DILocation(line: 651, column: 25, scope: !9054)
!9145 = !DILocation(line: 651, column: 4, scope: !9054)
!9146 = !DILocation(line: 652, column: 6, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 652, column: 6)
!9148 = !DILocation(line: 652, column: 6, scope: !9054)
!9149 = !DILocation(line: 652, column: 33, scope: !9147)
!9150 = !DILocation(line: 652, column: 36, scope: !9147)
!9151 = !DILocation(line: 652, column: 35, scope: !9147)
!9152 = !DILocation(line: 652, column: 31, scope: !9147)
!9153 = !DILocation(line: 652, column: 19, scope: !9147)
!9154 = !DILocation(line: 652, column: 17, scope: !9147)
!9155 = !DILocation(line: 652, column: 15, scope: !9147)
!9156 = !DILocation(line: 653, column: 11, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9147, file: !1, line: 653, column: 11)
!9158 = !DILocation(line: 653, column: 13, scope: !9157)
!9159 = !DILocation(line: 653, column: 11, scope: !9147)
!9160 = !DILocation(line: 653, column: 20, scope: !9157)
!9161 = !DILocation(line: 655, column: 6, scope: !9054)
!9162 = !DILocation(line: 655, column: 11, scope: !9054)
!9163 = !DILocation(line: 655, column: 10, scope: !9054)
!9164 = !DILocation(line: 655, column: 16, scope: !9054)
!9165 = !DILocation(line: 655, column: 21, scope: !9054)
!9166 = !DILocation(line: 655, column: 20, scope: !9054)
!9167 = !DILocation(line: 655, column: 15, scope: !9054)
!9168 = !DILocation(line: 655, column: 26, scope: !9054)
!9169 = !DILocation(line: 655, column: 31, scope: !9054)
!9170 = !DILocation(line: 655, column: 30, scope: !9054)
!9171 = !DILocation(line: 655, column: 25, scope: !9054)
!9172 = !DILocation(line: 655, column: 4, scope: !9054)
!9173 = !DILocation(line: 656, column: 6, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 656, column: 6)
!9175 = !DILocation(line: 656, column: 6, scope: !9054)
!9176 = !DILocation(line: 656, column: 33, scope: !9174)
!9177 = !DILocation(line: 656, column: 36, scope: !9174)
!9178 = !DILocation(line: 656, column: 35, scope: !9174)
!9179 = !DILocation(line: 656, column: 31, scope: !9174)
!9180 = !DILocation(line: 656, column: 19, scope: !9174)
!9181 = !DILocation(line: 656, column: 17, scope: !9174)
!9182 = !DILocation(line: 656, column: 15, scope: !9174)
!9183 = !DILocation(line: 657, column: 6, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 657, column: 6)
!9185 = !DILocation(line: 657, column: 8, scope: !9184)
!9186 = !DILocation(line: 657, column: 6, scope: !9054)
!9187 = !DILocation(line: 657, column: 19, scope: !9184)
!9188 = !DILocation(line: 657, column: 17, scope: !9184)
!9189 = !DILocation(line: 659, column: 6, scope: !9054)
!9190 = !DILocation(line: 659, column: 11, scope: !9054)
!9191 = !DILocation(line: 659, column: 10, scope: !9054)
!9192 = !DILocation(line: 659, column: 16, scope: !9054)
!9193 = !DILocation(line: 659, column: 21, scope: !9054)
!9194 = !DILocation(line: 659, column: 20, scope: !9054)
!9195 = !DILocation(line: 659, column: 15, scope: !9054)
!9196 = !DILocation(line: 659, column: 26, scope: !9054)
!9197 = !DILocation(line: 659, column: 31, scope: !9054)
!9198 = !DILocation(line: 659, column: 30, scope: !9054)
!9199 = !DILocation(line: 659, column: 25, scope: !9054)
!9200 = !DILocation(line: 659, column: 4, scope: !9054)
!9201 = !DILocation(line: 660, column: 6, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 660, column: 6)
!9203 = !DILocation(line: 660, column: 6, scope: !9054)
!9204 = !DILocation(line: 660, column: 33, scope: !9202)
!9205 = !DILocation(line: 660, column: 36, scope: !9202)
!9206 = !DILocation(line: 660, column: 35, scope: !9202)
!9207 = !DILocation(line: 660, column: 31, scope: !9202)
!9208 = !DILocation(line: 660, column: 19, scope: !9202)
!9209 = !DILocation(line: 660, column: 17, scope: !9202)
!9210 = !DILocation(line: 660, column: 15, scope: !9202)
!9211 = !DILocation(line: 661, column: 6, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 661, column: 6)
!9213 = !DILocation(line: 661, column: 8, scope: !9212)
!9214 = !DILocation(line: 661, column: 6, scope: !9054)
!9215 = !DILocation(line: 662, column: 3, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9212, file: !1, line: 661, column: 17)
!9217 = !DILocation(line: 665, column: 6, scope: !9054)
!9218 = !DILocation(line: 665, column: 11, scope: !9054)
!9219 = !DILocation(line: 665, column: 10, scope: !9054)
!9220 = !DILocation(line: 665, column: 16, scope: !9054)
!9221 = !DILocation(line: 665, column: 21, scope: !9054)
!9222 = !DILocation(line: 665, column: 20, scope: !9054)
!9223 = !DILocation(line: 665, column: 15, scope: !9054)
!9224 = !DILocation(line: 665, column: 26, scope: !9054)
!9225 = !DILocation(line: 665, column: 31, scope: !9054)
!9226 = !DILocation(line: 665, column: 30, scope: !9054)
!9227 = !DILocation(line: 665, column: 25, scope: !9054)
!9228 = !DILocation(line: 665, column: 4, scope: !9054)
!9229 = !DILocation(line: 666, column: 6, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 666, column: 6)
!9231 = !DILocation(line: 666, column: 8, scope: !9230)
!9232 = !DILocation(line: 666, column: 6, scope: !9054)
!9233 = !DILocation(line: 666, column: 18, scope: !9230)
!9234 = !DILocation(line: 666, column: 16, scope: !9230)
!9235 = !DILocation(line: 668, column: 4, scope: !9054)
!9236 = !DILocation(line: 669, column: 12, scope: !9054)
!9237 = !DILocation(line: 669, column: 11, scope: !9054)
!9238 = !DILocation(line: 669, column: 15, scope: !9054)
!9239 = !DILocation(line: 669, column: 14, scope: !9054)
!9240 = !DILocation(line: 669, column: 19, scope: !9054)
!9241 = !DILocation(line: 669, column: 18, scope: !9054)
!9242 = !DILocation(line: 669, column: 4, scope: !9054)
!9243 = !DILocation(line: 670, column: 12, scope: !9054)
!9244 = !DILocation(line: 670, column: 11, scope: !9054)
!9245 = !DILocation(line: 670, column: 15, scope: !9054)
!9246 = !DILocation(line: 670, column: 14, scope: !9054)
!9247 = !DILocation(line: 670, column: 19, scope: !9054)
!9248 = !DILocation(line: 670, column: 18, scope: !9054)
!9249 = !DILocation(line: 670, column: 4, scope: !9054)
!9250 = !DILocation(line: 672, column: 7, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 672, column: 7)
!9252 = !DILocation(line: 672, column: 11, scope: !9251)
!9253 = !DILocation(line: 672, column: 9, scope: !9251)
!9254 = !DILocation(line: 672, column: 13, scope: !9251)
!9255 = !DILocation(line: 672, column: 16, scope: !9251)
!9256 = !DILocation(line: 672, column: 20, scope: !9251)
!9257 = !DILocation(line: 672, column: 18, scope: !9251)
!9258 = !DILocation(line: 672, column: 7, scope: !9054)
!9259 = !DILocation(line: 672, column: 28, scope: !9251)
!9260 = !DILocation(line: 672, column: 26, scope: !9251)
!9261 = !DILocation(line: 672, column: 24, scope: !9251)
!9262 = !DILocation(line: 673, column: 12, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 673, column: 12)
!9264 = !DILocation(line: 673, column: 16, scope: !9263)
!9265 = !DILocation(line: 673, column: 14, scope: !9263)
!9266 = !DILocation(line: 673, column: 18, scope: !9263)
!9267 = !DILocation(line: 673, column: 21, scope: !9263)
!9268 = !DILocation(line: 673, column: 25, scope: !9263)
!9269 = !DILocation(line: 673, column: 23, scope: !9263)
!9270 = !DILocation(line: 673, column: 12, scope: !9251)
!9271 = !DILocation(line: 673, column: 33, scope: !9263)
!9272 = !DILocation(line: 673, column: 31, scope: !9263)
!9273 = !DILocation(line: 673, column: 29, scope: !9263)
!9274 = !DILocation(line: 674, column: 12, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9263, file: !1, line: 674, column: 12)
!9276 = !DILocation(line: 674, column: 16, scope: !9275)
!9277 = !DILocation(line: 674, column: 14, scope: !9275)
!9278 = !DILocation(line: 674, column: 18, scope: !9275)
!9279 = !DILocation(line: 674, column: 21, scope: !9275)
!9280 = !DILocation(line: 674, column: 25, scope: !9275)
!9281 = !DILocation(line: 674, column: 23, scope: !9275)
!9282 = !DILocation(line: 674, column: 12, scope: !9263)
!9283 = !DILocation(line: 674, column: 33, scope: !9275)
!9284 = !DILocation(line: 674, column: 31, scope: !9275)
!9285 = !DILocation(line: 674, column: 29, scope: !9275)
!9286 = !DILocation(line: 676, column: 21, scope: !9054)
!9287 = !DILocation(line: 676, column: 30, scope: !9054)
!9288 = !DILocation(line: 676, column: 28, scope: !9054)
!9289 = !DILocation(line: 676, column: 39, scope: !9054)
!9290 = !DILocation(line: 676, column: 44, scope: !9054)
!9291 = !DILocation(line: 676, column: 42, scope: !9054)
!9292 = !DILocation(line: 676, column: 37, scope: !9054)
!9293 = !DILocation(line: 676, column: 48, scope: !9054)
!9294 = !DILocation(line: 676, column: 11, scope: !9054)
!9295 = !DILocation(line: 676, column: 6, scope: !9054)
!9296 = !DILocation(line: 676, column: 4, scope: !9054)
!9297 = !DILocation(line: 677, column: 9, scope: !9054)
!9298 = !DILocation(line: 677, column: 11, scope: !9054)
!9299 = !DILocation(line: 677, column: 10, scope: !9054)
!9300 = !DILocation(line: 677, column: 16, scope: !9054)
!9301 = !DILocation(line: 677, column: 18, scope: !9054)
!9302 = !DILocation(line: 677, column: 17, scope: !9054)
!9303 = !DILocation(line: 677, column: 14, scope: !9054)
!9304 = !DILocation(line: 677, column: 25, scope: !9054)
!9305 = !DILocation(line: 677, column: 27, scope: !9054)
!9306 = !DILocation(line: 677, column: 26, scope: !9054)
!9307 = !DILocation(line: 677, column: 32, scope: !9054)
!9308 = !DILocation(line: 677, column: 34, scope: !9054)
!9309 = !DILocation(line: 677, column: 33, scope: !9054)
!9310 = !DILocation(line: 677, column: 30, scope: !9054)
!9311 = !DILocation(line: 677, column: 22, scope: !9054)
!9312 = !DILocation(line: 677, column: 47, scope: !9054)
!9313 = !DILocation(line: 677, column: 51, scope: !9054)
!9314 = !DILocation(line: 677, column: 53, scope: !9054)
!9315 = !DILocation(line: 677, column: 52, scope: !9054)
!9316 = !DILocation(line: 677, column: 49, scope: !9054)
!9317 = !DILocation(line: 677, column: 57, scope: !9054)
!9318 = !DILocation(line: 677, column: 66, scope: !9054)
!9319 = !DILocation(line: 677, column: 70, scope: !9054)
!9320 = !DILocation(line: 677, column: 72, scope: !9054)
!9321 = !DILocation(line: 677, column: 71, scope: !9054)
!9322 = !DILocation(line: 677, column: 68, scope: !9054)
!9323 = !DILocation(line: 677, column: 76, scope: !9054)
!9324 = !DILocation(line: 677, column: 63, scope: !9054)
!9325 = !DILocation(line: 677, column: 87, scope: !9054)
!9326 = !DILocation(line: 677, column: 91, scope: !9054)
!9327 = !DILocation(line: 677, column: 93, scope: !9054)
!9328 = !DILocation(line: 677, column: 92, scope: !9054)
!9329 = !DILocation(line: 677, column: 89, scope: !9054)
!9330 = !DILocation(line: 677, column: 97, scope: !9054)
!9331 = !DILocation(line: 677, column: 106, scope: !9054)
!9332 = !DILocation(line: 677, column: 110, scope: !9054)
!9333 = !DILocation(line: 677, column: 112, scope: !9054)
!9334 = !DILocation(line: 677, column: 111, scope: !9054)
!9335 = !DILocation(line: 677, column: 108, scope: !9054)
!9336 = !DILocation(line: 677, column: 116, scope: !9054)
!9337 = !DILocation(line: 677, column: 103, scope: !9054)
!9338 = !DILocation(line: 677, column: 83, scope: !9054)
!9339 = !DILocation(line: 677, column: 42, scope: !9054)
!9340 = !DILocation(line: 677, column: 39, scope: !9054)
!9341 = !DILocation(line: 677, column: 4, scope: !9054)
!9342 = !DILocation(line: 678, column: 15, scope: !9054)
!9343 = !DILocation(line: 678, column: 8, scope: !9054)
!9344 = !DILocation(line: 678, column: 6, scope: !9054)
!9345 = !DILocation(line: 680, column: 5, scope: !9054)
!9346 = !DILocation(line: 680, column: 9, scope: !9054)
!9347 = !DILocation(line: 680, column: 7, scope: !9054)
!9348 = !DILocation(line: 680, column: 28, scope: !9054)
!9349 = !DILocation(line: 680, column: 32, scope: !9054)
!9350 = !DILocation(line: 680, column: 31, scope: !9054)
!9351 = !DILocation(line: 680, column: 26, scope: !9054)
!9352 = !DILocation(line: 680, column: 45, scope: !9054)
!9353 = !DILocation(line: 680, column: 44, scope: !9054)
!9354 = !DILocation(line: 680, column: 56, scope: !9054)
!9355 = !DILocation(line: 680, column: 55, scope: !9054)
!9356 = !DILocation(line: 680, column: 37, scope: !9054)
!9357 = !DILocation(line: 680, column: 17, scope: !9054)
!9358 = !DILocation(line: 680, column: 13, scope: !9054)
!9359 = !DILocation(line: 680, column: 11, scope: !9054)
!9360 = !DILocation(line: 680, column: 3, scope: !9054)
!9361 = !DILocation(line: 681, column: 6, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 681, column: 6)
!9363 = !DILocation(line: 681, column: 7, scope: !9362)
!9364 = !DILocation(line: 681, column: 6, scope: !9054)
!9365 = !DILocation(line: 681, column: 15, scope: !9362)
!9366 = !DILocation(line: 681, column: 14, scope: !9362)
!9367 = !DILocation(line: 683, column: 9, scope: !9054)
!9368 = !DILocation(line: 683, column: 2, scope: !9054)
!9369 = !DILocation(line: 684, column: 1, scope: !9054)
!9370 = distinct !DISubprogram(name: "WardIso_Spec", scope: !1, file: !1, line: 711, type: !9371, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!147, !2219, !2219, !2219, !147, !5}
!9373 = !DILocalVariable(name: "n", arg: 1, scope: !9370, file: !1, line: 711, type: !2219)
!9374 = !DILocation(line: 711, column: 39, scope: !9370)
!9375 = !DILocalVariable(name: "l", arg: 2, scope: !9370, file: !1, line: 711, type: !2219)
!9376 = !DILocation(line: 711, column: 57, scope: !9370)
!9377 = !DILocalVariable(name: "v", arg: 3, scope: !9370, file: !1, line: 711, type: !2219)
!9378 = !DILocation(line: 711, column: 75, scope: !9370)
!9379 = !DILocalVariable(name: "rms", arg: 4, scope: !9370, file: !1, line: 711, type: !147)
!9380 = !DILocation(line: 711, column: 87, scope: !9370)
!9381 = !DILocalVariable(name: "tangent", arg: 5, scope: !9370, file: !1, line: 711, type: !5)
!9382 = !DILocation(line: 711, column: 96, scope: !9370)
!9383 = !DILocalVariable(name: "i", scope: !9370, file: !1, line: 713, type: !147)
!9384 = !DILocation(line: 713, column: 8, scope: !9370)
!9385 = !DILocalVariable(name: "nh", scope: !9370, file: !1, line: 713, type: !147)
!9386 = !DILocation(line: 713, column: 11, scope: !9370)
!9387 = !DILocalVariable(name: "nv", scope: !9370, file: !1, line: 713, type: !147)
!9388 = !DILocation(line: 713, column: 15, scope: !9370)
!9389 = !DILocalVariable(name: "nl", scope: !9370, file: !1, line: 713, type: !147)
!9390 = !DILocation(line: 713, column: 19, scope: !9370)
!9391 = !DILocalVariable(name: "h", scope: !9370, file: !1, line: 713, type: !212)
!9392 = !DILocation(line: 713, column: 23, scope: !9370)
!9393 = !DILocalVariable(name: "angle", scope: !9370, file: !1, line: 713, type: !147)
!9394 = !DILocation(line: 713, column: 29, scope: !9370)
!9395 = !DILocalVariable(name: "alpha", scope: !9370, file: !1, line: 713, type: !147)
!9396 = !DILocation(line: 713, column: 36, scope: !9370)
!9397 = !DILocation(line: 717, column: 9, scope: !9370)
!9398 = !DILocation(line: 717, column: 16, scope: !9370)
!9399 = !DILocation(line: 717, column: 14, scope: !9370)
!9400 = !DILocation(line: 717, column: 2, scope: !9370)
!9401 = !DILocation(line: 717, column: 7, scope: !9370)
!9402 = !DILocation(line: 718, column: 9, scope: !9370)
!9403 = !DILocation(line: 718, column: 16, scope: !9370)
!9404 = !DILocation(line: 718, column: 14, scope: !9370)
!9405 = !DILocation(line: 718, column: 2, scope: !9370)
!9406 = !DILocation(line: 718, column: 7, scope: !9370)
!9407 = !DILocation(line: 719, column: 9, scope: !9370)
!9408 = !DILocation(line: 719, column: 16, scope: !9370)
!9409 = !DILocation(line: 719, column: 14, scope: !9370)
!9410 = !DILocation(line: 719, column: 2, scope: !9370)
!9411 = !DILocation(line: 719, column: 7, scope: !9370)
!9412 = !DILocation(line: 720, column: 15, scope: !9370)
!9413 = !DILocation(line: 720, column: 2, scope: !9370)
!9414 = !DILocation(line: 722, column: 7, scope: !9370)
!9415 = !DILocation(line: 722, column: 12, scope: !9370)
!9416 = !DILocation(line: 722, column: 11, scope: !9370)
!9417 = !DILocation(line: 722, column: 17, scope: !9370)
!9418 = !DILocation(line: 722, column: 22, scope: !9370)
!9419 = !DILocation(line: 722, column: 21, scope: !9370)
!9420 = !DILocation(line: 722, column: 16, scope: !9370)
!9421 = !DILocation(line: 722, column: 27, scope: !9370)
!9422 = !DILocation(line: 722, column: 32, scope: !9370)
!9423 = !DILocation(line: 722, column: 31, scope: !9370)
!9424 = !DILocation(line: 722, column: 26, scope: !9370)
!9425 = !DILocation(line: 722, column: 5, scope: !9370)
!9426 = !DILocation(line: 723, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 723, column: 6)
!9428 = !DILocation(line: 723, column: 6, scope: !9370)
!9429 = !DILocation(line: 723, column: 34, scope: !9427)
!9430 = !DILocation(line: 723, column: 37, scope: !9427)
!9431 = !DILocation(line: 723, column: 36, scope: !9427)
!9432 = !DILocation(line: 723, column: 32, scope: !9427)
!9433 = !DILocation(line: 723, column: 20, scope: !9427)
!9434 = !DILocation(line: 723, column: 18, scope: !9427)
!9435 = !DILocation(line: 723, column: 15, scope: !9427)
!9436 = !DILocation(line: 724, column: 6, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 724, column: 6)
!9438 = !DILocation(line: 724, column: 8, scope: !9437)
!9439 = !DILocation(line: 724, column: 6, scope: !9370)
!9440 = !DILocation(line: 724, column: 19, scope: !9437)
!9441 = !DILocation(line: 724, column: 16, scope: !9437)
!9442 = !DILocation(line: 726, column: 7, scope: !9370)
!9443 = !DILocation(line: 726, column: 12, scope: !9370)
!9444 = !DILocation(line: 726, column: 11, scope: !9370)
!9445 = !DILocation(line: 726, column: 17, scope: !9370)
!9446 = !DILocation(line: 726, column: 22, scope: !9370)
!9447 = !DILocation(line: 726, column: 21, scope: !9370)
!9448 = !DILocation(line: 726, column: 16, scope: !9370)
!9449 = !DILocation(line: 726, column: 27, scope: !9370)
!9450 = !DILocation(line: 726, column: 32, scope: !9370)
!9451 = !DILocation(line: 726, column: 31, scope: !9370)
!9452 = !DILocation(line: 726, column: 26, scope: !9370)
!9453 = !DILocation(line: 726, column: 5, scope: !9370)
!9454 = !DILocation(line: 727, column: 6, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 727, column: 6)
!9456 = !DILocation(line: 727, column: 6, scope: !9370)
!9457 = !DILocation(line: 727, column: 34, scope: !9455)
!9458 = !DILocation(line: 727, column: 37, scope: !9455)
!9459 = !DILocation(line: 727, column: 36, scope: !9455)
!9460 = !DILocation(line: 727, column: 32, scope: !9455)
!9461 = !DILocation(line: 727, column: 20, scope: !9455)
!9462 = !DILocation(line: 727, column: 18, scope: !9455)
!9463 = !DILocation(line: 727, column: 15, scope: !9455)
!9464 = !DILocation(line: 728, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 728, column: 6)
!9466 = !DILocation(line: 728, column: 8, scope: !9465)
!9467 = !DILocation(line: 728, column: 6, scope: !9370)
!9468 = !DILocation(line: 728, column: 19, scope: !9465)
!9469 = !DILocation(line: 728, column: 16, scope: !9465)
!9470 = !DILocation(line: 730, column: 7, scope: !9370)
!9471 = !DILocation(line: 730, column: 12, scope: !9370)
!9472 = !DILocation(line: 730, column: 11, scope: !9370)
!9473 = !DILocation(line: 730, column: 17, scope: !9370)
!9474 = !DILocation(line: 730, column: 22, scope: !9370)
!9475 = !DILocation(line: 730, column: 21, scope: !9370)
!9476 = !DILocation(line: 730, column: 16, scope: !9370)
!9477 = !DILocation(line: 730, column: 27, scope: !9370)
!9478 = !DILocation(line: 730, column: 32, scope: !9370)
!9479 = !DILocation(line: 730, column: 31, scope: !9370)
!9480 = !DILocation(line: 730, column: 26, scope: !9370)
!9481 = !DILocation(line: 730, column: 5, scope: !9370)
!9482 = !DILocation(line: 731, column: 6, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 731, column: 6)
!9484 = !DILocation(line: 731, column: 6, scope: !9370)
!9485 = !DILocation(line: 731, column: 34, scope: !9483)
!9486 = !DILocation(line: 731, column: 37, scope: !9483)
!9487 = !DILocation(line: 731, column: 36, scope: !9483)
!9488 = !DILocation(line: 731, column: 32, scope: !9483)
!9489 = !DILocation(line: 731, column: 20, scope: !9483)
!9490 = !DILocation(line: 731, column: 18, scope: !9483)
!9491 = !DILocation(line: 731, column: 15, scope: !9483)
!9492 = !DILocation(line: 732, column: 6, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 732, column: 6)
!9494 = !DILocation(line: 732, column: 8, scope: !9493)
!9495 = !DILocation(line: 732, column: 6, scope: !9370)
!9496 = !DILocation(line: 732, column: 19, scope: !9493)
!9497 = !DILocation(line: 732, column: 16, scope: !9493)
!9498 = !DILocation(line: 734, column: 22, scope: !9370)
!9499 = !DILocation(line: 734, column: 15, scope: !9370)
!9500 = !DILocation(line: 734, column: 10, scope: !9370)
!9501 = !DILocation(line: 734, column: 8, scope: !9370)
!9502 = !DILocation(line: 735, column: 10, scope: !9370)
!9503 = !DILocation(line: 735, column: 8, scope: !9370)
!9504 = !DILocation(line: 737, column: 5, scope: !9370)
!9505 = !DILocation(line: 737, column: 34, scope: !9370)
!9506 = !DILocation(line: 737, column: 33, scope: !9370)
!9507 = !DILocation(line: 737, column: 40, scope: !9370)
!9508 = !DILocation(line: 737, column: 39, scope: !9370)
!9509 = !DILocation(line: 737, column: 15, scope: !9370)
!9510 = !DILocation(line: 737, column: 8, scope: !9370)
!9511 = !DILocation(line: 737, column: 59, scope: !9370)
!9512 = !DILocation(line: 737, column: 65, scope: !9370)
!9513 = !DILocation(line: 737, column: 64, scope: !9370)
!9514 = !DILocation(line: 737, column: 57, scope: !9370)
!9515 = !DILocation(line: 737, column: 73, scope: !9370)
!9516 = !DILocation(line: 737, column: 79, scope: !9370)
!9517 = !DILocation(line: 737, column: 78, scope: !9370)
!9518 = !DILocation(line: 737, column: 71, scope: !9370)
!9519 = !DILocation(line: 737, column: 51, scope: !9370)
!9520 = !DILocation(line: 737, column: 94, scope: !9370)
!9521 = !DILocation(line: 737, column: 97, scope: !9370)
!9522 = !DILocation(line: 737, column: 96, scope: !9370)
!9523 = !DILocation(line: 737, column: 88, scope: !9370)
!9524 = !DILocation(line: 737, column: 86, scope: !9370)
!9525 = !DILocation(line: 737, column: 48, scope: !9370)
!9526 = !DILocation(line: 737, column: 3, scope: !9370)
!9527 = !DILocation(line: 739, column: 9, scope: !9370)
!9528 = !DILocation(line: 739, column: 2, scope: !9370)
!9529 = distinct !DISubprogram(name: "Toon_Spec", scope: !1, file: !1, line: 687, type: !9055, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9530 = !DILocalVariable(name: "n", arg: 1, scope: !9529, file: !1, line: 687, type: !2219)
!9531 = !DILocation(line: 687, column: 36, scope: !9529)
!9532 = !DILocalVariable(name: "l", arg: 2, scope: !9529, file: !1, line: 687, type: !2219)
!9533 = !DILocation(line: 687, column: 54, scope: !9529)
!9534 = !DILocalVariable(name: "v", arg: 3, scope: !9529, file: !1, line: 687, type: !2219)
!9535 = !DILocation(line: 687, column: 72, scope: !9529)
!9536 = !DILocalVariable(name: "size", arg: 4, scope: !9529, file: !1, line: 687, type: !147)
!9537 = !DILocation(line: 687, column: 84, scope: !9529)
!9538 = !DILocalVariable(name: "smooth", arg: 5, scope: !9529, file: !1, line: 687, type: !147)
!9539 = !DILocation(line: 687, column: 96, scope: !9529)
!9540 = !DILocalVariable(name: "tangent", arg: 6, scope: !9529, file: !1, line: 687, type: !5)
!9541 = !DILocation(line: 687, column: 108, scope: !9529)
!9542 = !DILocalVariable(name: "h", scope: !9529, file: !1, line: 689, type: !212)
!9543 = !DILocation(line: 689, column: 8, scope: !9529)
!9544 = !DILocalVariable(name: "ang", scope: !9529, file: !1, line: 690, type: !147)
!9545 = !DILocation(line: 690, column: 8, scope: !9529)
!9546 = !DILocalVariable(name: "rslt", scope: !9529, file: !1, line: 691, type: !147)
!9547 = !DILocation(line: 691, column: 8, scope: !9529)
!9548 = !DILocation(line: 693, column: 9, scope: !9529)
!9549 = !DILocation(line: 693, column: 16, scope: !9529)
!9550 = !DILocation(line: 693, column: 14, scope: !9529)
!9551 = !DILocation(line: 693, column: 2, scope: !9529)
!9552 = !DILocation(line: 693, column: 7, scope: !9529)
!9553 = !DILocation(line: 694, column: 9, scope: !9529)
!9554 = !DILocation(line: 694, column: 16, scope: !9529)
!9555 = !DILocation(line: 694, column: 14, scope: !9529)
!9556 = !DILocation(line: 694, column: 2, scope: !9529)
!9557 = !DILocation(line: 694, column: 7, scope: !9529)
!9558 = !DILocation(line: 695, column: 9, scope: !9529)
!9559 = !DILocation(line: 695, column: 16, scope: !9529)
!9560 = !DILocation(line: 695, column: 14, scope: !9529)
!9561 = !DILocation(line: 695, column: 2, scope: !9529)
!9562 = !DILocation(line: 695, column: 7, scope: !9529)
!9563 = !DILocation(line: 696, column: 15, scope: !9529)
!9564 = !DILocation(line: 696, column: 2, scope: !9529)
!9565 = !DILocation(line: 698, column: 9, scope: !9529)
!9566 = !DILocation(line: 698, column: 14, scope: !9529)
!9567 = !DILocation(line: 698, column: 13, scope: !9529)
!9568 = !DILocation(line: 698, column: 21, scope: !9529)
!9569 = !DILocation(line: 698, column: 26, scope: !9529)
!9570 = !DILocation(line: 698, column: 25, scope: !9529)
!9571 = !DILocation(line: 698, column: 19, scope: !9529)
!9572 = !DILocation(line: 698, column: 33, scope: !9529)
!9573 = !DILocation(line: 698, column: 38, scope: !9529)
!9574 = !DILocation(line: 698, column: 37, scope: !9529)
!9575 = !DILocation(line: 698, column: 31, scope: !9529)
!9576 = !DILocation(line: 698, column: 7, scope: !9529)
!9577 = !DILocation(line: 699, column: 6, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9529, file: !1, line: 699, column: 6)
!9579 = !DILocation(line: 699, column: 6, scope: !9529)
!9580 = !DILocation(line: 699, column: 36, scope: !9578)
!9581 = !DILocation(line: 699, column: 41, scope: !9578)
!9582 = !DILocation(line: 699, column: 40, scope: !9578)
!9583 = !DILocation(line: 699, column: 34, scope: !9578)
!9584 = !DILocation(line: 699, column: 22, scope: !9578)
!9585 = !DILocation(line: 699, column: 20, scope: !9578)
!9586 = !DILocation(line: 699, column: 15, scope: !9578)
!9587 = !DILocation(line: 701, column: 16, scope: !9529)
!9588 = !DILocation(line: 701, column: 8, scope: !9529)
!9589 = !DILocation(line: 701, column: 6, scope: !9529)
!9590 = !DILocation(line: 703, column: 7, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9529, file: !1, line: 703, column: 7)
!9592 = !DILocation(line: 703, column: 13, scope: !9591)
!9593 = !DILocation(line: 703, column: 11, scope: !9591)
!9594 = !DILocation(line: 703, column: 7, scope: !9529)
!9595 = !DILocation(line: 703, column: 25, scope: !9591)
!9596 = !DILocation(line: 703, column: 20, scope: !9591)
!9597 = !DILocation(line: 704, column: 12, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9591, file: !1, line: 704, column: 12)
!9599 = !DILocation(line: 704, column: 20, scope: !9598)
!9600 = !DILocation(line: 704, column: 27, scope: !9598)
!9601 = !DILocation(line: 704, column: 25, scope: !9598)
!9602 = !DILocation(line: 704, column: 16, scope: !9598)
!9603 = !DILocation(line: 704, column: 35, scope: !9598)
!9604 = !DILocation(line: 704, column: 38, scope: !9598)
!9605 = !DILocation(line: 704, column: 45, scope: !9598)
!9606 = !DILocation(line: 704, column: 12, scope: !9591)
!9607 = !DILocation(line: 704, column: 60, scope: !9598)
!9608 = !DILocation(line: 704, column: 55, scope: !9598)
!9609 = !DILocation(line: 705, column: 23, scope: !9598)
!9610 = !DILocation(line: 705, column: 29, scope: !9598)
!9611 = !DILocation(line: 705, column: 27, scope: !9598)
!9612 = !DILocation(line: 705, column: 37, scope: !9598)
!9613 = !DILocation(line: 705, column: 35, scope: !9598)
!9614 = !DILocation(line: 705, column: 19, scope: !9598)
!9615 = !DILocation(line: 705, column: 12, scope: !9598)
!9616 = !DILocation(line: 707, column: 9, scope: !9529)
!9617 = !DILocation(line: 707, column: 2, scope: !9529)
!9618 = distinct !DISubprogram(name: "do_specular_ramp", scope: !1, file: !1, line: 1041, type: !9619, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9619 = !DISubroutineType(types: !9620)
!9620 = !{null, !1829, !147, !147, !643}
!9621 = !DILocalVariable(name: "shi", arg: 1, scope: !9618, file: !1, line: 1041, type: !1829)
!9622 = !DILocation(line: 1041, column: 42, scope: !9618)
!9623 = !DILocalVariable(name: "is", arg: 2, scope: !9618, file: !1, line: 1041, type: !147)
!9624 = !DILocation(line: 1041, column: 53, scope: !9618)
!9625 = !DILocalVariable(name: "t", arg: 3, scope: !9618, file: !1, line: 1041, type: !147)
!9626 = !DILocation(line: 1041, column: 63, scope: !9618)
!9627 = !DILocalVariable(name: "spec", arg: 4, scope: !9618, file: !1, line: 1041, type: !643)
!9628 = !DILocation(line: 1041, column: 72, scope: !9618)
!9629 = !DILocalVariable(name: "ma", scope: !9618, file: !1, line: 1043, type: !3711)
!9630 = !DILocation(line: 1043, column: 12, scope: !9618)
!9631 = !DILocation(line: 1043, column: 16, scope: !9618)
!9632 = !DILocation(line: 1043, column: 21, scope: !9618)
!9633 = !DILocation(line: 1045, column: 11, scope: !9618)
!9634 = !DILocation(line: 1045, column: 16, scope: !9618)
!9635 = !DILocation(line: 1045, column: 2, scope: !9618)
!9636 = !DILocation(line: 1045, column: 9, scope: !9618)
!9637 = !DILocation(line: 1046, column: 11, scope: !9618)
!9638 = !DILocation(line: 1046, column: 16, scope: !9618)
!9639 = !DILocation(line: 1046, column: 2, scope: !9618)
!9640 = !DILocation(line: 1046, column: 9, scope: !9618)
!9641 = !DILocation(line: 1047, column: 11, scope: !9618)
!9642 = !DILocation(line: 1047, column: 16, scope: !9618)
!9643 = !DILocation(line: 1047, column: 2, scope: !9618)
!9644 = !DILocation(line: 1047, column: 9, scope: !9618)
!9645 = !DILocation(line: 1050, column: 6, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9618, file: !1, line: 1050, column: 6)
!9647 = !DILocation(line: 1050, column: 10, scope: !9646)
!9648 = !DILocation(line: 1050, column: 20, scope: !9646)
!9649 = !DILocation(line: 1050, column: 24, scope: !9646)
!9650 = !DILocation(line: 1050, column: 28, scope: !9646)
!9651 = !DILocation(line: 1050, column: 39, scope: !9646)
!9652 = !DILocation(line: 1050, column: 6, scope: !9618)
!9653 = !DILocalVariable(name: "fac", scope: !9654, file: !1, line: 1051, type: !147)
!9654 = distinct !DILexicalBlock(scope: !9646, file: !1, line: 1050, column: 61)
!9655 = !DILocation(line: 1051, column: 9, scope: !9654)
!9656 = !DILocalVariable(name: "col", scope: !9654, file: !1, line: 1052, type: !511)
!9657 = !DILocation(line: 1052, column: 9, scope: !9654)
!9658 = !DILocation(line: 1055, column: 11, scope: !9654)
!9659 = !DILocation(line: 1055, column: 15, scope: !9654)
!9660 = !DILocation(line: 1055, column: 3, scope: !9654)
!9661 = !DILocation(line: 1057, column: 9, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9654, file: !1, line: 1055, column: 28)
!9663 = !DILocation(line: 1057, column: 7, scope: !9662)
!9664 = !DILocation(line: 1058, column: 4, scope: !9662)
!9665 = !DILocation(line: 1060, column: 9, scope: !9662)
!9666 = !DILocation(line: 1060, column: 7, scope: !9662)
!9667 = !DILocation(line: 1061, column: 4, scope: !9662)
!9668 = !DILocation(line: 1063, column: 9, scope: !9662)
!9669 = !DILocation(line: 1063, column: 14, scope: !9662)
!9670 = !DILocation(line: 1063, column: 22, scope: !9662)
!9671 = !DILocation(line: 1063, column: 27, scope: !9662)
!9672 = !DILocation(line: 1063, column: 21, scope: !9662)
!9673 = !DILocation(line: 1063, column: 35, scope: !9662)
!9674 = !DILocation(line: 1063, column: 40, scope: !9662)
!9675 = !DILocation(line: 1063, column: 48, scope: !9662)
!9676 = !DILocation(line: 1063, column: 53, scope: !9662)
!9677 = !DILocation(line: 1063, column: 47, scope: !9662)
!9678 = !DILocation(line: 1063, column: 33, scope: !9662)
!9679 = !DILocation(line: 1063, column: 61, scope: !9662)
!9680 = !DILocation(line: 1063, column: 66, scope: !9662)
!9681 = !DILocation(line: 1063, column: 74, scope: !9662)
!9682 = !DILocation(line: 1063, column: 79, scope: !9662)
!9683 = !DILocation(line: 1063, column: 73, scope: !9662)
!9684 = !DILocation(line: 1063, column: 59, scope: !9662)
!9685 = !DILocation(line: 1063, column: 7, scope: !9662)
!9686 = !DILocation(line: 1064, column: 4, scope: !9662)
!9687 = !DILocation(line: 1066, column: 7, scope: !9662)
!9688 = !DILocation(line: 1067, column: 4, scope: !9662)
!9689 = !DILocation(line: 1070, column: 16, scope: !9654)
!9690 = !DILocation(line: 1070, column: 20, scope: !9654)
!9691 = !DILocation(line: 1070, column: 31, scope: !9654)
!9692 = !DILocation(line: 1070, column: 36, scope: !9654)
!9693 = !DILocation(line: 1070, column: 3, scope: !9654)
!9694 = !DILocation(line: 1073, column: 8, scope: !9654)
!9695 = !DILocation(line: 1073, column: 15, scope: !9654)
!9696 = !DILocation(line: 1073, column: 19, scope: !9654)
!9697 = !DILocation(line: 1073, column: 14, scope: !9654)
!9698 = !DILocation(line: 1073, column: 6, scope: !9654)
!9699 = !DILocation(line: 1075, column: 14, scope: !9654)
!9700 = !DILocation(line: 1075, column: 18, scope: !9654)
!9701 = !DILocation(line: 1075, column: 34, scope: !9654)
!9702 = !DILocation(line: 1075, column: 40, scope: !9654)
!9703 = !DILocation(line: 1075, column: 45, scope: !9654)
!9704 = !DILocation(line: 1075, column: 3, scope: !9654)
!9705 = !DILocation(line: 1076, column: 2, scope: !9654)
!9706 = !DILocation(line: 1077, column: 1, scope: !9618)
!9707 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3298, file: !3298, line: 788, type: !9708, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!147, !643, !2219}
!9710 = !DILocalVariable(name: "r", arg: 1, scope: !9707, file: !3298, line: 788, type: !643)
!9711 = !DILocation(line: 788, column: 37, scope: !9707)
!9712 = !DILocalVariable(name: "a", arg: 2, scope: !9707, file: !3298, line: 788, type: !2219)
!9713 = !DILocation(line: 788, column: 55, scope: !9707)
!9714 = !DILocalVariable(name: "d", scope: !9707, file: !3298, line: 790, type: !147)
!9715 = !DILocation(line: 790, column: 8, scope: !9707)
!9716 = !DILocation(line: 790, column: 21, scope: !9707)
!9717 = !DILocation(line: 790, column: 24, scope: !9707)
!9718 = !DILocation(line: 790, column: 12, scope: !9707)
!9719 = !DILocation(line: 794, column: 6, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9707, file: !3298, line: 794, column: 6)
!9721 = !DILocation(line: 794, column: 8, scope: !9720)
!9722 = !DILocation(line: 794, column: 6, scope: !9707)
!9723 = !DILocation(line: 795, column: 13, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9720, file: !3298, line: 794, column: 20)
!9725 = !DILocation(line: 795, column: 7, scope: !9724)
!9726 = !DILocation(line: 795, column: 5, scope: !9724)
!9727 = !DILocation(line: 796, column: 15, scope: !9724)
!9728 = !DILocation(line: 796, column: 18, scope: !9724)
!9729 = !DILocation(line: 796, column: 28, scope: !9724)
!9730 = !DILocation(line: 796, column: 26, scope: !9724)
!9731 = !DILocation(line: 796, column: 3, scope: !9724)
!9732 = !DILocation(line: 797, column: 2, scope: !9724)
!9733 = !DILocation(line: 799, column: 11, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9720, file: !3298, line: 798, column: 7)
!9735 = !DILocation(line: 799, column: 3, scope: !9734)
!9736 = !DILocation(line: 800, column: 5, scope: !9734)
!9737 = !DILocation(line: 803, column: 9, scope: !9707)
!9738 = !DILocation(line: 803, column: 2, scope: !9707)
!9739 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3298, file: !3298, line: 399, type: !9740, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{null, !643, !2219, !147}
!9742 = !DILocalVariable(name: "r", arg: 1, scope: !9739, file: !3298, line: 399, type: !643)
!9743 = !DILocation(line: 399, column: 32, scope: !9739)
!9744 = !DILocalVariable(name: "a", arg: 2, scope: !9739, file: !3298, line: 399, type: !2219)
!9745 = !DILocation(line: 399, column: 50, scope: !9739)
!9746 = !DILocalVariable(name: "f", arg: 3, scope: !9739, file: !3298, line: 399, type: !147)
!9747 = !DILocation(line: 399, column: 62, scope: !9739)
!9748 = !DILocation(line: 401, column: 9, scope: !9739)
!9749 = !DILocation(line: 401, column: 16, scope: !9739)
!9750 = !DILocation(line: 401, column: 14, scope: !9739)
!9751 = !DILocation(line: 401, column: 2, scope: !9739)
!9752 = !DILocation(line: 401, column: 7, scope: !9739)
!9753 = !DILocation(line: 402, column: 9, scope: !9739)
!9754 = !DILocation(line: 402, column: 16, scope: !9739)
!9755 = !DILocation(line: 402, column: 14, scope: !9739)
!9756 = !DILocation(line: 402, column: 2, scope: !9739)
!9757 = !DILocation(line: 402, column: 7, scope: !9739)
!9758 = !DILocation(line: 403, column: 9, scope: !9739)
!9759 = !DILocation(line: 403, column: 16, scope: !9739)
!9760 = !DILocation(line: 403, column: 14, scope: !9739)
!9761 = !DILocation(line: 403, column: 2, scope: !9739)
!9762 = !DILocation(line: 403, column: 7, scope: !9739)
!9763 = !DILocation(line: 404, column: 1, scope: !9739)
!9764 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !3298, file: !3298, line: 309, type: !4458, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9765 = !DILocalVariable(name: "r", arg: 1, scope: !9764, file: !3298, line: 309, type: !643)
!9766 = !DILocation(line: 309, column: 32, scope: !9764)
!9767 = !DILocalVariable(name: "a", arg: 2, scope: !9764, file: !3298, line: 309, type: !2219)
!9768 = !DILocation(line: 309, column: 50, scope: !9764)
!9769 = !DILocalVariable(name: "b", arg: 3, scope: !9764, file: !3298, line: 309, type: !2219)
!9770 = !DILocation(line: 309, column: 68, scope: !9764)
!9771 = !DILocation(line: 311, column: 9, scope: !9764)
!9772 = !DILocation(line: 311, column: 16, scope: !9764)
!9773 = !DILocation(line: 311, column: 14, scope: !9764)
!9774 = !DILocation(line: 311, column: 2, scope: !9764)
!9775 = !DILocation(line: 311, column: 7, scope: !9764)
!9776 = !DILocation(line: 312, column: 9, scope: !9764)
!9777 = !DILocation(line: 312, column: 16, scope: !9764)
!9778 = !DILocation(line: 312, column: 14, scope: !9764)
!9779 = !DILocation(line: 312, column: 2, scope: !9764)
!9780 = !DILocation(line: 312, column: 7, scope: !9764)
!9781 = !DILocation(line: 313, column: 9, scope: !9764)
!9782 = !DILocation(line: 313, column: 16, scope: !9764)
!9783 = !DILocation(line: 313, column: 14, scope: !9764)
!9784 = !DILocation(line: 313, column: 2, scope: !9764)
!9785 = !DILocation(line: 313, column: 7, scope: !9764)
!9786 = !DILocation(line: 314, column: 1, scope: !9764)
!9787 = distinct !DISubprogram(name: "area_lamp_energy", scope: !1, file: !1, line: 458, type: !9788, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9788 = !DISubroutineType(types: !9789)
!9789 = !{!147, !2027, !2219, !2219}
!9790 = !DILocalVariable(name: "area", arg: 1, scope: !9787, file: !1, line: 458, type: !2027)
!9791 = !DILocation(line: 458, column: 39, scope: !9787)
!9792 = !DILocalVariable(name: "co", arg: 2, scope: !9787, file: !1, line: 458, type: !2219)
!9793 = !DILocation(line: 458, column: 61, scope: !9787)
!9794 = !DILocalVariable(name: "vn", arg: 3, scope: !9787, file: !1, line: 458, type: !2219)
!9795 = !DILocation(line: 458, column: 80, scope: !9787)
!9796 = !DILocalVariable(name: "fac", scope: !9787, file: !1, line: 460, type: !1821)
!9797 = !DILocation(line: 460, column: 9, scope: !9787)
!9798 = !DILocalVariable(name: "vec", scope: !9787, file: !1, line: 461, type: !9799)
!9799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1821, size: 768, elements: !8163)
!9800 = !DILocation(line: 461, column: 9, scope: !9787)
!9801 = !DILocalVariable(name: "cross", scope: !9787, file: !1, line: 462, type: !9799)
!9802 = !DILocation(line: 462, column: 9, scope: !9787)
!9803 = !DILocalVariable(name: "rad", scope: !9787, file: !1, line: 463, type: !9804)
!9804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1821, size: 256, elements: !209)
!9805 = !DILocation(line: 463, column: 9, scope: !9787)
!9806 = !DILocation(line: 465, column: 2, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 465, column: 2)
!9808 = !DILocation(line: 466, column: 2, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 466, column: 2)
!9810 = !DILocation(line: 467, column: 2, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 467, column: 2)
!9812 = !DILocation(line: 468, column: 2, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 468, column: 2)
!9814 = !DILocation(line: 470, column: 14, scope: !9787)
!9815 = !DILocation(line: 470, column: 2, scope: !9787)
!9816 = !DILocation(line: 471, column: 14, scope: !9787)
!9817 = !DILocation(line: 471, column: 2, scope: !9787)
!9818 = !DILocation(line: 472, column: 14, scope: !9787)
!9819 = !DILocation(line: 472, column: 2, scope: !9787)
!9820 = !DILocation(line: 473, column: 14, scope: !9787)
!9821 = !DILocation(line: 473, column: 2, scope: !9787)
!9822 = !DILocation(line: 483, column: 2, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 483, column: 2)
!9824 = !DILocation(line: 484, column: 2, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 484, column: 2)
!9826 = !DILocation(line: 485, column: 2, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 485, column: 2)
!9828 = !DILocation(line: 486, column: 2, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 486, column: 2)
!9830 = !DILocation(line: 490, column: 14, scope: !9787)
!9831 = !DILocation(line: 490, column: 2, scope: !9787)
!9832 = !DILocation(line: 491, column: 14, scope: !9787)
!9833 = !DILocation(line: 491, column: 2, scope: !9787)
!9834 = !DILocation(line: 492, column: 14, scope: !9787)
!9835 = !DILocation(line: 492, column: 2, scope: !9787)
!9836 = !DILocation(line: 493, column: 14, scope: !9787)
!9837 = !DILocation(line: 493, column: 2, scope: !9787)
!9838 = !DILocation(line: 496, column: 10, scope: !9787)
!9839 = !DILocation(line: 496, column: 20, scope: !9787)
!9840 = !DILocation(line: 496, column: 19, scope: !9787)
!9841 = !DILocation(line: 496, column: 31, scope: !9787)
!9842 = !DILocation(line: 496, column: 41, scope: !9787)
!9843 = !DILocation(line: 496, column: 40, scope: !9787)
!9844 = !DILocation(line: 496, column: 29, scope: !9787)
!9845 = !DILocation(line: 496, column: 52, scope: !9787)
!9846 = !DILocation(line: 496, column: 62, scope: !9787)
!9847 = !DILocation(line: 496, column: 61, scope: !9787)
!9848 = !DILocation(line: 496, column: 50, scope: !9787)
!9849 = !DILocation(line: 496, column: 2, scope: !9787)
!9850 = !DILocation(line: 496, column: 8, scope: !9787)
!9851 = !DILocation(line: 497, column: 10, scope: !9787)
!9852 = !DILocation(line: 497, column: 20, scope: !9787)
!9853 = !DILocation(line: 497, column: 19, scope: !9787)
!9854 = !DILocation(line: 497, column: 31, scope: !9787)
!9855 = !DILocation(line: 497, column: 41, scope: !9787)
!9856 = !DILocation(line: 497, column: 40, scope: !9787)
!9857 = !DILocation(line: 497, column: 29, scope: !9787)
!9858 = !DILocation(line: 497, column: 52, scope: !9787)
!9859 = !DILocation(line: 497, column: 62, scope: !9787)
!9860 = !DILocation(line: 497, column: 61, scope: !9787)
!9861 = !DILocation(line: 497, column: 50, scope: !9787)
!9862 = !DILocation(line: 497, column: 2, scope: !9787)
!9863 = !DILocation(line: 497, column: 8, scope: !9787)
!9864 = !DILocation(line: 498, column: 10, scope: !9787)
!9865 = !DILocation(line: 498, column: 20, scope: !9787)
!9866 = !DILocation(line: 498, column: 19, scope: !9787)
!9867 = !DILocation(line: 498, column: 31, scope: !9787)
!9868 = !DILocation(line: 498, column: 41, scope: !9787)
!9869 = !DILocation(line: 498, column: 40, scope: !9787)
!9870 = !DILocation(line: 498, column: 29, scope: !9787)
!9871 = !DILocation(line: 498, column: 52, scope: !9787)
!9872 = !DILocation(line: 498, column: 62, scope: !9787)
!9873 = !DILocation(line: 498, column: 61, scope: !9787)
!9874 = !DILocation(line: 498, column: 50, scope: !9787)
!9875 = !DILocation(line: 498, column: 2, scope: !9787)
!9876 = !DILocation(line: 498, column: 8, scope: !9787)
!9877 = !DILocation(line: 499, column: 10, scope: !9787)
!9878 = !DILocation(line: 499, column: 20, scope: !9787)
!9879 = !DILocation(line: 499, column: 19, scope: !9787)
!9880 = !DILocation(line: 499, column: 31, scope: !9787)
!9881 = !DILocation(line: 499, column: 41, scope: !9787)
!9882 = !DILocation(line: 499, column: 40, scope: !9787)
!9883 = !DILocation(line: 499, column: 29, scope: !9787)
!9884 = !DILocation(line: 499, column: 52, scope: !9787)
!9885 = !DILocation(line: 499, column: 62, scope: !9787)
!9886 = !DILocation(line: 499, column: 61, scope: !9787)
!9887 = !DILocation(line: 499, column: 50, scope: !9787)
!9888 = !DILocation(line: 499, column: 2, scope: !9787)
!9889 = !DILocation(line: 499, column: 8, scope: !9787)
!9890 = !DILocation(line: 501, column: 19, scope: !9787)
!9891 = !DILocation(line: 501, column: 10, scope: !9787)
!9892 = !DILocation(line: 501, column: 2, scope: !9787)
!9893 = !DILocation(line: 501, column: 8, scope: !9787)
!9894 = !DILocation(line: 502, column: 19, scope: !9787)
!9895 = !DILocation(line: 502, column: 10, scope: !9787)
!9896 = !DILocation(line: 502, column: 2, scope: !9787)
!9897 = !DILocation(line: 502, column: 8, scope: !9787)
!9898 = !DILocation(line: 503, column: 19, scope: !9787)
!9899 = !DILocation(line: 503, column: 10, scope: !9787)
!9900 = !DILocation(line: 503, column: 2, scope: !9787)
!9901 = !DILocation(line: 503, column: 8, scope: !9787)
!9902 = !DILocation(line: 504, column: 19, scope: !9787)
!9903 = !DILocation(line: 504, column: 10, scope: !9787)
!9904 = !DILocation(line: 504, column: 2, scope: !9787)
!9905 = !DILocation(line: 504, column: 8, scope: !9787)
!9906 = !DILocation(line: 507, column: 8, scope: !9787)
!9907 = !DILocation(line: 507, column: 16, scope: !9787)
!9908 = !DILocation(line: 507, column: 22, scope: !9787)
!9909 = !DILocation(line: 507, column: 21, scope: !9787)
!9910 = !DILocation(line: 507, column: 35, scope: !9787)
!9911 = !DILocation(line: 507, column: 41, scope: !9787)
!9912 = !DILocation(line: 507, column: 40, scope: !9787)
!9913 = !DILocation(line: 507, column: 33, scope: !9787)
!9914 = !DILocation(line: 507, column: 54, scope: !9787)
!9915 = !DILocation(line: 507, column: 60, scope: !9787)
!9916 = !DILocation(line: 507, column: 59, scope: !9787)
!9917 = !DILocation(line: 507, column: 52, scope: !9787)
!9918 = !DILocation(line: 507, column: 14, scope: !9787)
!9919 = !DILocation(line: 507, column: 5, scope: !9787)
!9920 = !DILocation(line: 508, column: 8, scope: !9787)
!9921 = !DILocation(line: 508, column: 16, scope: !9787)
!9922 = !DILocation(line: 508, column: 22, scope: !9787)
!9923 = !DILocation(line: 508, column: 21, scope: !9787)
!9924 = !DILocation(line: 508, column: 35, scope: !9787)
!9925 = !DILocation(line: 508, column: 41, scope: !9787)
!9926 = !DILocation(line: 508, column: 40, scope: !9787)
!9927 = !DILocation(line: 508, column: 33, scope: !9787)
!9928 = !DILocation(line: 508, column: 54, scope: !9787)
!9929 = !DILocation(line: 508, column: 60, scope: !9787)
!9930 = !DILocation(line: 508, column: 59, scope: !9787)
!9931 = !DILocation(line: 508, column: 52, scope: !9787)
!9932 = !DILocation(line: 508, column: 14, scope: !9787)
!9933 = !DILocation(line: 508, column: 5, scope: !9787)
!9934 = !DILocation(line: 509, column: 8, scope: !9787)
!9935 = !DILocation(line: 509, column: 16, scope: !9787)
!9936 = !DILocation(line: 509, column: 22, scope: !9787)
!9937 = !DILocation(line: 509, column: 21, scope: !9787)
!9938 = !DILocation(line: 509, column: 35, scope: !9787)
!9939 = !DILocation(line: 509, column: 41, scope: !9787)
!9940 = !DILocation(line: 509, column: 40, scope: !9787)
!9941 = !DILocation(line: 509, column: 33, scope: !9787)
!9942 = !DILocation(line: 509, column: 54, scope: !9787)
!9943 = !DILocation(line: 509, column: 60, scope: !9787)
!9944 = !DILocation(line: 509, column: 59, scope: !9787)
!9945 = !DILocation(line: 509, column: 52, scope: !9787)
!9946 = !DILocation(line: 509, column: 14, scope: !9787)
!9947 = !DILocation(line: 509, column: 5, scope: !9787)
!9948 = !DILocation(line: 510, column: 8, scope: !9787)
!9949 = !DILocation(line: 510, column: 16, scope: !9787)
!9950 = !DILocation(line: 510, column: 22, scope: !9787)
!9951 = !DILocation(line: 510, column: 21, scope: !9787)
!9952 = !DILocation(line: 510, column: 35, scope: !9787)
!9953 = !DILocation(line: 510, column: 41, scope: !9787)
!9954 = !DILocation(line: 510, column: 40, scope: !9787)
!9955 = !DILocation(line: 510, column: 33, scope: !9787)
!9956 = !DILocation(line: 510, column: 54, scope: !9787)
!9957 = !DILocation(line: 510, column: 60, scope: !9787)
!9958 = !DILocation(line: 510, column: 59, scope: !9787)
!9959 = !DILocation(line: 510, column: 52, scope: !9787)
!9960 = !DILocation(line: 510, column: 14, scope: !9787)
!9961 = !DILocation(line: 510, column: 5, scope: !9787)
!9962 = !DILocation(line: 512, column: 6, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9787, file: !1, line: 512, column: 6)
!9964 = !DILocation(line: 512, column: 9, scope: !9963)
!9965 = !DILocation(line: 512, column: 6, scope: !9787)
!9966 = !DILocation(line: 512, column: 16, scope: !9963)
!9967 = !DILocation(line: 513, column: 9, scope: !9787)
!9968 = !DILocation(line: 513, column: 2, scope: !9787)
!9969 = !DILocation(line: 514, column: 1, scope: !9787)
!9970 = distinct !DISubprogram(name: "Normalize_d", scope: !1, file: !1, line: 412, type: !9971, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!1821, !8057}
!9973 = !DILocalVariable(name: "n", arg: 1, scope: !9970, file: !1, line: 412, type: !8057)
!9974 = !DILocation(line: 412, column: 35, scope: !9970)
!9975 = !DILocalVariable(name: "d", scope: !9970, file: !1, line: 414, type: !1821)
!9976 = !DILocation(line: 414, column: 9, scope: !9970)
!9977 = !DILocation(line: 416, column: 5, scope: !9970)
!9978 = !DILocation(line: 416, column: 10, scope: !9970)
!9979 = !DILocation(line: 416, column: 9, scope: !9970)
!9980 = !DILocation(line: 416, column: 15, scope: !9970)
!9981 = !DILocation(line: 416, column: 20, scope: !9970)
!9982 = !DILocation(line: 416, column: 19, scope: !9970)
!9983 = !DILocation(line: 416, column: 14, scope: !9970)
!9984 = !DILocation(line: 416, column: 25, scope: !9970)
!9985 = !DILocation(line: 416, column: 30, scope: !9970)
!9986 = !DILocation(line: 416, column: 29, scope: !9970)
!9987 = !DILocation(line: 416, column: 24, scope: !9970)
!9988 = !DILocation(line: 416, column: 3, scope: !9970)
!9989 = !DILocation(line: 418, column: 6, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9970, file: !1, line: 418, column: 6)
!9991 = !DILocation(line: 418, column: 7, scope: !9990)
!9992 = !DILocation(line: 418, column: 6, scope: !9970)
!9993 = !DILocation(line: 419, column: 11, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 418, column: 29)
!9995 = !DILocation(line: 419, column: 6, scope: !9994)
!9996 = !DILocation(line: 419, column: 4, scope: !9994)
!9997 = !DILocation(line: 421, column: 9, scope: !9994)
!9998 = !DILocation(line: 421, column: 3, scope: !9994)
!9999 = !DILocation(line: 421, column: 7, scope: !9994)
!10000 = !DILocation(line: 422, column: 9, scope: !9994)
!10001 = !DILocation(line: 422, column: 3, scope: !9994)
!10002 = !DILocation(line: 422, column: 7, scope: !9994)
!10003 = !DILocation(line: 423, column: 9, scope: !9994)
!10004 = !DILocation(line: 423, column: 3, scope: !9994)
!10005 = !DILocation(line: 423, column: 7, scope: !9994)
!10006 = !DILocation(line: 424, column: 2, scope: !9994)
!10007 = !DILocation(line: 426, column: 13, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 425, column: 7)
!10009 = !DILocation(line: 426, column: 17, scope: !10008)
!10010 = !DILocation(line: 426, column: 8, scope: !10008)
!10011 = !DILocation(line: 426, column: 12, scope: !10008)
!10012 = !DILocation(line: 426, column: 3, scope: !10008)
!10013 = !DILocation(line: 426, column: 7, scope: !10008)
!10014 = !DILocation(line: 427, column: 4, scope: !10008)
!10015 = !DILocation(line: 429, column: 9, scope: !9970)
!10016 = !DILocation(line: 429, column: 2, scope: !9970)
!10017 = distinct !DISubprogram(name: "saacos_d", scope: !1, file: !1, line: 450, type: !10018, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!1821, !1821}
!10020 = !DILocalVariable(name: "fac", arg: 1, scope: !10017, file: !1, line: 450, type: !1821)
!10021 = !DILocation(line: 450, column: 31, scope: !10017)
!10022 = !DILocation(line: 452, column: 6, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10017, file: !1, line: 452, column: 6)
!10024 = !DILocation(line: 452, column: 9, scope: !10023)
!10025 = !DILocation(line: 452, column: 6, scope: !10017)
!10026 = !DILocation(line: 452, column: 18, scope: !10023)
!10027 = !DILocation(line: 453, column: 11, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10023, file: !1, line: 453, column: 11)
!10029 = !DILocation(line: 453, column: 14, scope: !10028)
!10030 = !DILocation(line: 453, column: 11, scope: !10023)
!10031 = !DILocation(line: 453, column: 21, scope: !10028)
!10032 = !DILocation(line: 454, column: 19, scope: !10028)
!10033 = !DILocation(line: 454, column: 14, scope: !10028)
!10034 = !DILocation(line: 454, column: 7, scope: !10028)
!10035 = !DILocation(line: 455, column: 1, scope: !10017)
!10036 = distinct !DISubprogram(name: "saacos", scope: !4510, file: !4510, line: 66, type: !10037, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!147, !147}
!10039 = !DILocalVariable(name: "fac", arg: 1, scope: !10036, file: !4510, line: 66, type: !147)
!10040 = !DILocation(line: 66, column: 28, scope: !10036)
!10041 = !DILocation(line: 68, column: 11, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10036, file: !4510, line: 68, column: 11)
!10043 = !DILocation(line: 68, column: 11, scope: !10036)
!10044 = !DILocation(line: 68, column: 35, scope: !10042)
!10045 = !DILocation(line: 69, column: 11, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !4510, line: 69, column: 11)
!10047 = !DILocation(line: 69, column: 11, scope: !10042)
!10048 = !DILocation(line: 69, column: 35, scope: !10046)
!10049 = !DILocation(line: 70, column: 48, scope: !10046)
!10050 = !DILocation(line: 70, column: 42, scope: !10046)
!10051 = !DILocation(line: 70, column: 35, scope: !10046)
!10052 = !DILocation(line: 71, column: 1, scope: !10036)
!10053 = distinct !DISubprogram(name: "sasqrt", scope: !4510, file: !4510, line: 80, type: !10037, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!10054 = !DILocalVariable(name: "fac", arg: 1, scope: !10053, file: !4510, line: 80, type: !147)
!10055 = !DILocation(line: 80, column: 28, scope: !10053)
!10056 = !DILocation(line: 82, column: 6, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10053, file: !4510, line: 82, column: 6)
!10058 = !DILocation(line: 82, column: 6, scope: !10053)
!10059 = !DILocation(line: 82, column: 29, scope: !10057)
!10060 = !DILocation(line: 83, column: 42, scope: !10057)
!10061 = !DILocation(line: 83, column: 36, scope: !10057)
!10062 = !DILocation(line: 83, column: 29, scope: !10057)
!10063 = !DILocation(line: 84, column: 1, scope: !10053)
!10064 = distinct !DISubprogram(name: "mul_v3_v3v3", scope: !3298, file: !3298, line: 557, type: !4458, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2185)
!10065 = !DILocalVariable(name: "r", arg: 1, scope: !10064, file: !3298, line: 557, type: !643)
!10066 = !DILocation(line: 557, column: 32, scope: !10064)
!10067 = !DILocalVariable(name: "v1", arg: 2, scope: !10064, file: !3298, line: 557, type: !2219)
!10068 = !DILocation(line: 557, column: 50, scope: !10064)
!10069 = !DILocalVariable(name: "v2", arg: 3, scope: !10064, file: !3298, line: 557, type: !2219)
!10070 = !DILocation(line: 557, column: 69, scope: !10064)
!10071 = !DILocation(line: 559, column: 9, scope: !10064)
!10072 = !DILocation(line: 559, column: 17, scope: !10064)
!10073 = !DILocation(line: 559, column: 15, scope: !10064)
!10074 = !DILocation(line: 559, column: 2, scope: !10064)
!10075 = !DILocation(line: 559, column: 7, scope: !10064)
!10076 = !DILocation(line: 560, column: 9, scope: !10064)
!10077 = !DILocation(line: 560, column: 17, scope: !10064)
!10078 = !DILocation(line: 560, column: 15, scope: !10064)
!10079 = !DILocation(line: 560, column: 2, scope: !10064)
!10080 = !DILocation(line: 560, column: 7, scope: !10064)
!10081 = !DILocation(line: 561, column: 9, scope: !10064)
!10082 = !DILocation(line: 561, column: 17, scope: !10064)
!10083 = !DILocation(line: 561, column: 15, scope: !10064)
!10084 = !DILocation(line: 561, column: 2, scope: !10064)
!10085 = !DILocation(line: 561, column: 7, scope: !10064)
!10086 = !DILocation(line: 562, column: 1, scope: !10064)
