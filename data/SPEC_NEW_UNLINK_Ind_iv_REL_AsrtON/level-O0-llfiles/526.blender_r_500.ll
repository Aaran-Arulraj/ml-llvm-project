; ModuleID = 'blender/source/blender/modifiers/intern/MOD_skin.c'
source_filename = "blender/source/blender/modifiers/intern/MOD_skin.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type { i32*, i32 }
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.BMEditMesh = type opaque
%struct.DagForest = type opaque
%struct.DagNode = type opaque
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.SkinModifierData = type { %struct.ModifierData, float, i8, i8, [2 x i8] }
%struct.MVertSkin = type { [3 x float], i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.anon = type { i32, float, float }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.EMat = type { [3 x [3 x float]], i32 }
%struct.SkinNode = type { [2 x %struct.Frame], i32, i32, [2 x i32] }
%struct.Frame = type { [4 x %struct.BMVert*], [4 x [3 x float]], [4 x %struct.anon.0], [4 x i8], i8 }
%struct.anon.0 = type { %struct.Frame*, i32 }
%struct.BLI_Stack = type opaque
%struct.EdgeStackElem = type { [3 x [3 x float]], i32, i32 }
%struct.SkinOutput = type { %struct.BMesh*, %struct.SkinModifierData*, i32 }
%struct.BMIter = type { %union.anon.1, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.1 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.Heap = type opaque
%struct.HeapNode = type opaque
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMOIter = type { %struct.BMOpSlot*, i32, %struct.GHashIterator, i8**, i8 }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque

@modifierType_Skin = dso_local global %struct.ModifierTypeInfo { [32 x i8] c"Skin\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"SkinModifierData\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 120, i32 2, i32 9, void (%struct.ModifierData*, %struct.ModifierData*)* @copyData, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)* null, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)* null, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)* null, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)* null, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)* @applyModifier, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)* null, void (%struct.ModifierData*)* @initData, i64 (%struct.Object*, %struct.ModifierData*)* @requiredDataMask, void (%struct.ModifierData*)* null, i8 (%struct.ModifierData*, i32)* null, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)* null, i8 (%struct.ModifierData*)* null, i8 (%struct.ModifierData*)* null, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)* null, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)* null, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* null }, align 8, !dbg !0
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [7 x i8] c"degree\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"edge_subd\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"vgroup\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"build_edge_mats.stack\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"build_edge_mats.visited_e\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"build_edge_mats.emat\00", align 1
@__const.calc_edge_mat.z_up = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.6 = private unnamed_addr constant [24 x i8] c"build_frames.skin_nodes\00", align 1
@bm_mesh_allocsize_default = external dso_local constant %struct.BMAllocTemplate, align 4
@.str.7 = private unnamed_addr constant [11 x i8] c"Hull error\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"hull_from_frames.hull_frames\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"extrude_discrete_faces faces=%hf\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"faces.out\00", align 1
@.str.11 = private unnamed_addr constant [54 x i8] c"subdivide_edges edges=%he cuts=%i quad_corner_type=%i\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.12 = private unnamed_addr constant [19 x i8] c"BLI_array.vert_buf\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"weld_verts\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"targetmap\00", align 1

; Function Attrs: noinline nounwind uwtable
define internal void @copyData(%struct.ModifierData* %md, %struct.ModifierData* %target) #0 !dbg !1282 {
entry:
  %md.addr = alloca %struct.ModifierData*, align 8
  %target.addr = alloca %struct.ModifierData*, align 8
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !1287, metadata !DIExpression()), !dbg !1288
  store %struct.ModifierData* %target, %struct.ModifierData** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %target.addr, metadata !1289, metadata !DIExpression()), !dbg !1290
  %0 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !1291
  %1 = load %struct.ModifierData*, %struct.ModifierData** %target.addr, align 8, !dbg !1292
  call void @modifier_copyData_generic(%struct.ModifierData* %0, %struct.ModifierData* %1), !dbg !1293
  ret void, !dbg !1294
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @applyModifier(%struct.ModifierData* %md, %struct.Object* %UNUSED_ob, %struct.DerivedMesh* %dm, i32 %UNUSED_flag) #0 !dbg !1295 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %md.addr = alloca %struct.ModifierData*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %UNUSED_flag.addr = alloca i32, align 4
  %result = alloca %struct.DerivedMesh*, align 8
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !1300, metadata !DIExpression()), !dbg !1301
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !1302, metadata !DIExpression()), !dbg !1303
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !1304, metadata !DIExpression()), !dbg !1305
  store i32 %UNUSED_flag, i32* %UNUSED_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_flag.addr, metadata !1306, metadata !DIExpression()), !dbg !1307
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result, metadata !1308, metadata !DIExpression()), !dbg !1309
  %0 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !1310
  %1 = bitcast %struct.ModifierData* %0 to %struct.SkinModifierData*, !dbg !1312
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1313
  %call = call %struct.DerivedMesh* @final_skin(%struct.SkinModifierData* %1, %struct.DerivedMesh* %2), !dbg !1314
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %result, align 8, !dbg !1315
  %tobool = icmp ne %struct.DerivedMesh* %call, null, !dbg !1315
  br i1 %tobool, label %if.end, label %if.then, !dbg !1316

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !1317
  store %struct.DerivedMesh* %3, %struct.DerivedMesh** %retval, align 8, !dbg !1318
  br label %return, !dbg !1318

if.end:                                           ; preds = %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !1319
  store %struct.DerivedMesh* %4, %struct.DerivedMesh** %retval, align 8, !dbg !1320
  br label %return, !dbg !1320

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !1321
  ret %struct.DerivedMesh* %5, !dbg !1321
}

; Function Attrs: noinline nounwind uwtable
define internal void @initData(%struct.ModifierData* %md) #0 !dbg !1322 {
entry:
  %md.addr = alloca %struct.ModifierData*, align 8
  %smd = alloca %struct.SkinModifierData*, align 8
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !1325, metadata !DIExpression()), !dbg !1326
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd, metadata !1327, metadata !DIExpression()), !dbg !1328
  %0 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !1329
  %1 = bitcast %struct.ModifierData* %0 to %struct.SkinModifierData*, !dbg !1330
  store %struct.SkinModifierData* %1, %struct.SkinModifierData** %smd, align 8, !dbg !1328
  %2 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !1331
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %2, i32 0, i32 3, !dbg !1332
  %3 = load i32, i32* %mode, align 4, !dbg !1333
  %or = or i32 %3, 4, !dbg !1333
  store i32 %or, i32* %mode, align 4, !dbg !1333
  %4 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd, align 8, !dbg !1334
  %branch_smoothing = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %4, i32 0, i32 1, !dbg !1335
  store float 0.000000e+00, float* %branch_smoothing, align 8, !dbg !1336
  %5 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd, align 8, !dbg !1337
  %flag = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %5, i32 0, i32 2, !dbg !1338
  store i8 0, i8* %flag, align 4, !dbg !1339
  %6 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd, align 8, !dbg !1340
  %symmetry_axes = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %6, i32 0, i32 3, !dbg !1341
  store i8 1, i8* %symmetry_axes, align 1, !dbg !1342
  ret void, !dbg !1343
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @requiredDataMask(%struct.Object* %UNUSED_ob, %struct.ModifierData* %UNUSED_md) #0 !dbg !1344 {
entry:
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %UNUSED_md.addr = alloca %struct.ModifierData*, align 8
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !1347, metadata !DIExpression()), !dbg !1348
  store %struct.ModifierData* %UNUSED_md, %struct.ModifierData** %UNUSED_md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %UNUSED_md.addr, metadata !1349, metadata !DIExpression()), !dbg !1350
  ret i64 68719476740, !dbg !1351
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @modifier_copyData_generic(%struct.ModifierData*, %struct.ModifierData*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @final_skin(%struct.SkinModifierData* %smd, %struct.DerivedMesh* %origdm) #0 !dbg !1352 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %origdm.addr = alloca %struct.DerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !1355, metadata !DIExpression()), !dbg !1356
  store %struct.DerivedMesh* %origdm, %struct.DerivedMesh** %origdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %origdm.addr, metadata !1357, metadata !DIExpression()), !dbg !1358
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !1359, metadata !DIExpression()), !dbg !1360
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1361
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !1363
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 36), !dbg !1364
  %tobool = icmp ne i8* %call, null, !dbg !1364
  br i1 %tobool, label %if.end, label %if.then, !dbg !1365

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1366
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %retval, align 8, !dbg !1367
  br label %return, !dbg !1367

if.end:                                           ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1368
  %call1 = call %struct.DerivedMesh* @subdivide_base(%struct.DerivedMesh* %2), !dbg !1369
  store %struct.DerivedMesh* %call1, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1370
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1371
  %4 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !1372
  %call2 = call %struct.DerivedMesh* @base_skin(%struct.DerivedMesh* %3, %struct.SkinModifierData* %4), !dbg !1373
  store %struct.DerivedMesh* %call2, %struct.DerivedMesh** %dm, align 8, !dbg !1374
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1375
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 95, !dbg !1376
  %6 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !1376
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1377
  call void %6(%struct.DerivedMesh* %7), !dbg !1375
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1378
  store %struct.DerivedMesh* %8, %struct.DerivedMesh** %retval, align 8, !dbg !1379
  br label %return, !dbg !1379

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !1380
  ret %struct.DerivedMesh* %9, !dbg !1380
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @subdivide_base(%struct.DerivedMesh* %orig) #0 !dbg !1381 {
entry:
  %orig.addr = alloca %struct.DerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %orignode = alloca %struct.MVertSkin*, align 8
  %outnode = alloca %struct.MVertSkin*, align 8
  %origvert = alloca %struct.MVert*, align 8
  %outvert = alloca %struct.MVert*, align 8
  %origedge = alloca %struct.MEdge*, align 8
  %outedge = alloca %struct.MEdge*, align 8
  %e = alloca %struct.MEdge*, align 8
  %origdvert = alloca %struct.MDeformVert*, align 8
  %outdvert = alloca %struct.MDeformVert*, align 8
  %totorigvert = alloca i32, align 4
  %totorigedge = alloca i32, align 4
  %totsubd = alloca i32, align 4
  %degree = alloca i32*, align 8
  %edge_subd = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %radrat = alloca float, align 4
  %vgroups = alloca %struct.anon*, align 8
  %vg = alloca %struct.anon*, align 8
  %totvgroup = alloca i32, align 4
  %dv1 = alloca %struct.MDeformVert*, align 8
  %dv2 = alloca %struct.MDeformVert*, align 8
  %r = alloca float, align 4
  %t = alloca float, align 4
  %weight164 = alloca float, align 4
  store %struct.DerivedMesh* %orig, %struct.DerivedMesh** %orig.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orig.addr, metadata !1384, metadata !DIExpression()), !dbg !1385
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !1386, metadata !DIExpression()), !dbg !1387
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %orignode, metadata !1388, metadata !DIExpression()), !dbg !1395
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %outnode, metadata !1396, metadata !DIExpression()), !dbg !1397
  call void @llvm.dbg.declare(metadata %struct.MVert** %origvert, metadata !1398, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata %struct.MVert** %outvert, metadata !1402, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata %struct.MEdge** %origedge, metadata !1404, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata %struct.MEdge** %outedge, metadata !1408, metadata !DIExpression()), !dbg !1409
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e, metadata !1410, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %origdvert, metadata !1412, metadata !DIExpression()), !dbg !1425
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %outdvert, metadata !1426, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.declare(metadata i32* %totorigvert, metadata !1428, metadata !DIExpression()), !dbg !1429
  call void @llvm.dbg.declare(metadata i32* %totorigedge, metadata !1430, metadata !DIExpression()), !dbg !1431
  call void @llvm.dbg.declare(metadata i32* %totsubd, metadata !1432, metadata !DIExpression()), !dbg !1433
  call void @llvm.dbg.declare(metadata i32** %degree, metadata !1434, metadata !DIExpression()), !dbg !1435
  call void @llvm.dbg.declare(metadata i32** %edge_subd, metadata !1436, metadata !DIExpression()), !dbg !1437
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1438, metadata !DIExpression()), !dbg !1439
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1440, metadata !DIExpression()), !dbg !1441
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1442, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1444, metadata !DIExpression()), !dbg !1445
  call void @llvm.dbg.declare(metadata i32* %v, metadata !1446, metadata !DIExpression()), !dbg !1447
  call void @llvm.dbg.declare(metadata float* %radrat, metadata !1448, metadata !DIExpression()), !dbg !1449
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1450
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !1451
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 36), !dbg !1452
  %1 = bitcast i8* %call to %struct.MVertSkin*, !dbg !1452
  store %struct.MVertSkin* %1, %struct.MVertSkin** %orignode, align 8, !dbg !1453
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1454
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 31, !dbg !1455
  %3 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !1455
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1456
  %call1 = call %struct.MVert* %3(%struct.DerivedMesh* %4), !dbg !1454
  store %struct.MVert* %call1, %struct.MVert** %origvert, align 8, !dbg !1457
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1458
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 32, !dbg !1459
  %6 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !1459
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1460
  %call2 = call %struct.MEdge* %6(%struct.DerivedMesh* %7), !dbg !1458
  store %struct.MEdge* %call2, %struct.MEdge** %origedge, align 8, !dbg !1461
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1462
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 50, !dbg !1463
  %9 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !1463
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1464
  %call3 = call i8* %9(%struct.DerivedMesh* %10, i32 2), !dbg !1462
  %11 = bitcast i8* %call3 to %struct.MDeformVert*, !dbg !1462
  store %struct.MDeformVert* %11, %struct.MDeformVert** %origdvert, align 8, !dbg !1465
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1466
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 23, !dbg !1467
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !1467
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1468
  %call4 = call i32 %13(%struct.DerivedMesh* %14), !dbg !1466
  store i32 %call4, i32* %totorigvert, align 4, !dbg !1469
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1470
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 24, !dbg !1471
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !1471
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1472
  %call5 = call i32 %16(%struct.DerivedMesh* %17), !dbg !1470
  store i32 %call5, i32* %totorigedge, align 4, !dbg !1473
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1474
  %19 = load i32, i32* %totorigvert, align 4, !dbg !1475
  %conv = sext i32 %19 to i64, !dbg !1475
  %mul = mul i64 4, %conv, !dbg !1476
  %call6 = call i8* %18(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)), !dbg !1474
  %20 = bitcast i8* %call6 to i32*, !dbg !1474
  store i32* %20, i32** %degree, align 8, !dbg !1477
  store i32 0, i32* %i, align 4, !dbg !1478
  br label %for.cond, !dbg !1480

for.cond:                                         ; preds = %for.inc, %entry
  %21 = load i32, i32* %i, align 4, !dbg !1481
  %22 = load i32, i32* %totorigedge, align 4, !dbg !1483
  %cmp = icmp slt i32 %21, %22, !dbg !1484
  br i1 %cmp, label %for.body, label %for.end, !dbg !1485

for.body:                                         ; preds = %for.cond
  %23 = load i32*, i32** %degree, align 8, !dbg !1486
  %24 = load %struct.MEdge*, %struct.MEdge** %origedge, align 8, !dbg !1488
  %25 = load i32, i32* %i, align 4, !dbg !1489
  %idxprom = sext i32 %25 to i64, !dbg !1488
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %24, i64 %idxprom, !dbg !1488
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx, i32 0, i32 0, !dbg !1490
  %26 = load i32, i32* %v1, align 4, !dbg !1490
  %idxprom8 = zext i32 %26 to i64, !dbg !1486
  %arrayidx9 = getelementptr inbounds i32, i32* %23, i64 %idxprom8, !dbg !1486
  %27 = load i32, i32* %arrayidx9, align 4, !dbg !1491
  %inc = add nsw i32 %27, 1, !dbg !1491
  store i32 %inc, i32* %arrayidx9, align 4, !dbg !1491
  %28 = load i32*, i32** %degree, align 8, !dbg !1492
  %29 = load %struct.MEdge*, %struct.MEdge** %origedge, align 8, !dbg !1493
  %30 = load i32, i32* %i, align 4, !dbg !1494
  %idxprom10 = sext i32 %30 to i64, !dbg !1493
  %arrayidx11 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %29, i64 %idxprom10, !dbg !1493
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx11, i32 0, i32 1, !dbg !1495
  %31 = load i32, i32* %v2, align 4, !dbg !1495
  %idxprom12 = zext i32 %31 to i64, !dbg !1492
  %arrayidx13 = getelementptr inbounds i32, i32* %28, i64 %idxprom12, !dbg !1492
  %32 = load i32, i32* %arrayidx13, align 4, !dbg !1496
  %inc14 = add nsw i32 %32, 1, !dbg !1496
  store i32 %inc14, i32* %arrayidx13, align 4, !dbg !1496
  br label %for.inc, !dbg !1497

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !1498
  %inc15 = add nsw i32 %33, 1, !dbg !1498
  store i32 %inc15, i32* %i, align 4, !dbg !1498
  br label %for.cond, !dbg !1499, !llvm.loop !1500

for.end:                                          ; preds = %for.cond
  %34 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1502
  %35 = load i32, i32* %totorigedge, align 4, !dbg !1503
  %conv16 = sext i32 %35 to i64, !dbg !1503
  %mul17 = mul i64 4, %conv16, !dbg !1504
  %call18 = call i8* %34(i64 %mul17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)), !dbg !1502
  %36 = bitcast i8* %call18 to i32*, !dbg !1502
  store i32* %36, i32** %edge_subd, align 8, !dbg !1505
  store i32 0, i32* %i, align 4, !dbg !1506
  store i32 0, i32* %totsubd, align 4, !dbg !1508
  br label %for.cond19, !dbg !1509

for.cond19:                                       ; preds = %for.inc31, %for.end
  %37 = load i32, i32* %i, align 4, !dbg !1510
  %38 = load i32, i32* %totorigedge, align 4, !dbg !1512
  %cmp20 = icmp slt i32 %37, %38, !dbg !1513
  br i1 %cmp20, label %for.body22, label %for.end33, !dbg !1514

for.body22:                                       ; preds = %for.cond19
  %39 = load %struct.MVert*, %struct.MVert** %origvert, align 8, !dbg !1515
  %40 = load %struct.MVertSkin*, %struct.MVertSkin** %orignode, align 8, !dbg !1517
  %41 = load %struct.MEdge*, %struct.MEdge** %origedge, align 8, !dbg !1518
  %42 = load i32, i32* %i, align 4, !dbg !1519
  %idxprom23 = sext i32 %42 to i64, !dbg !1518
  %arrayidx24 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %41, i64 %idxprom23, !dbg !1518
  %43 = load i32*, i32** %degree, align 8, !dbg !1520
  %call25 = call i32 @calc_edge_subdivisions(%struct.MVert* %39, %struct.MVertSkin* %40, %struct.MEdge* %arrayidx24, i32* %43), !dbg !1521
  %44 = load i32*, i32** %edge_subd, align 8, !dbg !1522
  %45 = load i32, i32* %i, align 4, !dbg !1523
  %idxprom26 = sext i32 %45 to i64, !dbg !1522
  %arrayidx27 = getelementptr inbounds i32, i32* %44, i64 %idxprom26, !dbg !1522
  %46 = load i32, i32* %arrayidx27, align 4, !dbg !1524
  %add = add nsw i32 %46, %call25, !dbg !1524
  store i32 %add, i32* %arrayidx27, align 4, !dbg !1524
  %47 = load i32*, i32** %edge_subd, align 8, !dbg !1525
  %48 = load i32, i32* %i, align 4, !dbg !1526
  %idxprom28 = sext i32 %48 to i64, !dbg !1525
  %arrayidx29 = getelementptr inbounds i32, i32* %47, i64 %idxprom28, !dbg !1525
  %49 = load i32, i32* %arrayidx29, align 4, !dbg !1525
  %50 = load i32, i32* %totsubd, align 4, !dbg !1527
  %add30 = add nsw i32 %50, %49, !dbg !1527
  store i32 %add30, i32* %totsubd, align 4, !dbg !1527
  br label %for.inc31, !dbg !1528

for.inc31:                                        ; preds = %for.body22
  %51 = load i32, i32* %i, align 4, !dbg !1529
  %inc32 = add nsw i32 %51, 1, !dbg !1529
  store i32 %inc32, i32* %i, align 4, !dbg !1529
  br label %for.cond19, !dbg !1530, !llvm.loop !1531

for.end33:                                        ; preds = %for.cond19
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1533
  %53 = load i32*, i32** %degree, align 8, !dbg !1534
  %54 = bitcast i32* %53 to i8*, !dbg !1534
  call void %52(i8* %54), !dbg !1533
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1535
  %56 = load i32, i32* %totorigvert, align 4, !dbg !1536
  %57 = load i32, i32* %totsubd, align 4, !dbg !1537
  %add34 = add nsw i32 %56, %57, !dbg !1538
  %58 = load i32, i32* %totorigedge, align 4, !dbg !1539
  %59 = load i32, i32* %totsubd, align 4, !dbg !1540
  %add35 = add nsw i32 %58, %59, !dbg !1541
  %call36 = call %struct.DerivedMesh* @CDDM_from_template(%struct.DerivedMesh* %55, i32 %add34, i32 %add35, i32 0, i32 0, i32 0), !dbg !1542
  store %struct.DerivedMesh* %call36, %struct.DerivedMesh** %dm, align 8, !dbg !1543
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1544
  %getVertArray37 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 31, !dbg !1545
  %61 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray37, align 8, !dbg !1545
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1546
  %call38 = call %struct.MVert* %61(%struct.DerivedMesh* %62), !dbg !1544
  store %struct.MVert* %call38, %struct.MVert** %outvert, align 8, !dbg !1547
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1548
  %getEdgeArray39 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 32, !dbg !1549
  %64 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray39, align 8, !dbg !1549
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1550
  %call40 = call %struct.MEdge* %64(%struct.DerivedMesh* %65), !dbg !1548
  store %struct.MEdge* %call40, %struct.MEdge** %outedge, align 8, !dbg !1551
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1552
  %vertData41 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %66, i32 0, i32 0, !dbg !1553
  %call42 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData41, i32 36), !dbg !1554
  %67 = bitcast i8* %call42 to %struct.MVertSkin*, !dbg !1554
  store %struct.MVertSkin* %67, %struct.MVertSkin** %outnode, align 8, !dbg !1555
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1556
  %vertData43 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %68, i32 0, i32 0, !dbg !1557
  %call44 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData43, i32 2), !dbg !1558
  %69 = bitcast i8* %call44 to %struct.MDeformVert*, !dbg !1558
  store %struct.MDeformVert* %69, %struct.MDeformVert** %outdvert, align 8, !dbg !1559
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig.addr, align 8, !dbg !1560
  %vertData45 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 0, !dbg !1561
  %71 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1562
  %vertData46 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %71, i32 0, i32 0, !dbg !1563
  %72 = load i32, i32* %totorigvert, align 4, !dbg !1564
  call void @CustomData_copy_data(%struct.CustomData* %vertData45, %struct.CustomData* %vertData46, i32 0, i32 0, i32 %72), !dbg !1565
  store i32 0, i32* %i, align 4, !dbg !1566
  %73 = load i32, i32* %totorigvert, align 4, !dbg !1568
  store i32 %73, i32* %v, align 4, !dbg !1569
  br label %for.cond47, !dbg !1570

for.cond47:                                       ; preds = %for.inc193, %for.end33
  %74 = load i32, i32* %i, align 4, !dbg !1571
  %75 = load i32, i32* %totorigedge, align 4, !dbg !1573
  %cmp48 = icmp slt i32 %74, %75, !dbg !1574
  br i1 %cmp48, label %for.body50, label %for.end195, !dbg !1575

for.body50:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata %struct.anon** %vgroups, metadata !1576, metadata !DIExpression()), !dbg !1584
  store %struct.anon* null, %struct.anon** %vgroups, align 8, !dbg !1584
  call void @llvm.dbg.declare(metadata %struct.anon** %vg, metadata !1585, metadata !DIExpression()), !dbg !1586
  call void @llvm.dbg.declare(metadata i32* %totvgroup, metadata !1587, metadata !DIExpression()), !dbg !1588
  store i32 0, i32* %totvgroup, align 4, !dbg !1588
  %76 = load %struct.MEdge*, %struct.MEdge** %origedge, align 8, !dbg !1589
  %77 = load i32, i32* %i, align 4, !dbg !1590
  %idxprom51 = sext i32 %77 to i64, !dbg !1589
  %arrayidx52 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %76, i64 %idxprom51, !dbg !1589
  store %struct.MEdge* %arrayidx52, %struct.MEdge** %e, align 8, !dbg !1591
  %78 = load %struct.MDeformVert*, %struct.MDeformVert** %origdvert, align 8, !dbg !1592
  %tobool = icmp ne %struct.MDeformVert* %78, null, !dbg !1592
  br i1 %tobool, label %if.then, label %if.end105, !dbg !1594

if.then:                                          ; preds = %for.body50
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv1, metadata !1595, metadata !DIExpression()), !dbg !1599
  %79 = load %struct.MDeformVert*, %struct.MDeformVert** %origdvert, align 8, !dbg !1600
  %80 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1601
  %v153 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %80, i32 0, i32 0, !dbg !1602
  %81 = load i32, i32* %v153, align 4, !dbg !1602
  %idxprom54 = zext i32 %81 to i64, !dbg !1600
  %arrayidx55 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %79, i64 %idxprom54, !dbg !1600
  store %struct.MDeformVert* %arrayidx55, %struct.MDeformVert** %dv1, align 8, !dbg !1599
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv2, metadata !1603, metadata !DIExpression()), !dbg !1604
  %82 = load %struct.MDeformVert*, %struct.MDeformVert** %origdvert, align 8, !dbg !1605
  %83 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1606
  %v256 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %83, i32 0, i32 1, !dbg !1607
  %84 = load i32, i32* %v256, align 4, !dbg !1607
  %idxprom57 = zext i32 %84 to i64, !dbg !1605
  %arrayidx58 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %82, i64 %idxprom57, !dbg !1605
  store %struct.MDeformVert* %arrayidx58, %struct.MDeformVert** %dv2, align 8, !dbg !1604
  %85 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1608
  %86 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !1609
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %86, i32 0, i32 1, !dbg !1610
  %87 = load i32, i32* %totweight, align 8, !dbg !1610
  %conv59 = sext i32 %87 to i64, !dbg !1609
  %mul60 = mul i64 12, %conv59, !dbg !1611
  %call61 = call i8* %85(i64 %mul60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)), !dbg !1608
  %88 = bitcast i8* %call61 to %struct.anon*, !dbg !1608
  store %struct.anon* %88, %struct.anon** %vgroups, align 8, !dbg !1612
  store i32 0, i32* %j, align 4, !dbg !1613
  br label %for.cond62, !dbg !1615

for.cond62:                                       ; preds = %for.inc102, %if.then
  %89 = load i32, i32* %j, align 4, !dbg !1616
  %90 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !1618
  %totweight63 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %90, i32 0, i32 1, !dbg !1619
  %91 = load i32, i32* %totweight63, align 8, !dbg !1619
  %cmp64 = icmp slt i32 %89, %91, !dbg !1620
  br i1 %cmp64, label %for.body66, label %for.end104, !dbg !1621

for.body66:                                       ; preds = %for.cond62
  store %struct.anon* null, %struct.anon** %vg, align 8, !dbg !1622
  store i32 0, i32* %k, align 4, !dbg !1624
  br label %for.cond67, !dbg !1626

for.cond67:                                       ; preds = %for.inc84, %for.body66
  %92 = load i32, i32* %k, align 4, !dbg !1627
  %93 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !1629
  %totweight68 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %93, i32 0, i32 1, !dbg !1630
  %94 = load i32, i32* %totweight68, align 8, !dbg !1630
  %cmp69 = icmp slt i32 %92, %94, !dbg !1631
  br i1 %cmp69, label %for.body71, label %for.end86, !dbg !1632

for.body71:                                       ; preds = %for.cond67
  %95 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !1633
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %95, i32 0, i32 0, !dbg !1636
  %96 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !1636
  %97 = load i32, i32* %j, align 4, !dbg !1637
  %idxprom72 = sext i32 %97 to i64, !dbg !1633
  %arrayidx73 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %96, i64 %idxprom72, !dbg !1633
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx73, i32 0, i32 0, !dbg !1638
  %98 = load i32, i32* %def_nr, align 4, !dbg !1638
  %99 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !1639
  %dw74 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %99, i32 0, i32 0, !dbg !1640
  %100 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw74, align 8, !dbg !1640
  %101 = load i32, i32* %k, align 4, !dbg !1641
  %idxprom75 = sext i32 %101 to i64, !dbg !1639
  %arrayidx76 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %100, i64 %idxprom75, !dbg !1639
  %def_nr77 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx76, i32 0, i32 0, !dbg !1642
  %102 = load i32, i32* %def_nr77, align 4, !dbg !1642
  %cmp78 = icmp eq i32 %98, %102, !dbg !1643
  br i1 %cmp78, label %if.then80, label %if.end, !dbg !1644

if.then80:                                        ; preds = %for.body71
  %103 = load %struct.anon*, %struct.anon** %vgroups, align 8, !dbg !1645
  %104 = load i32, i32* %totvgroup, align 4, !dbg !1647
  %idxprom81 = sext i32 %104 to i64, !dbg !1645
  %arrayidx82 = getelementptr inbounds %struct.anon, %struct.anon* %103, i64 %idxprom81, !dbg !1645
  store %struct.anon* %arrayidx82, %struct.anon** %vg, align 8, !dbg !1648
  %105 = load i32, i32* %totvgroup, align 4, !dbg !1649
  %inc83 = add nsw i32 %105, 1, !dbg !1649
  store i32 %inc83, i32* %totvgroup, align 4, !dbg !1649
  br label %for.end86, !dbg !1650

if.end:                                           ; preds = %for.body71
  br label %for.inc84, !dbg !1651

for.inc84:                                        ; preds = %if.end
  %106 = load i32, i32* %k, align 4, !dbg !1652
  %inc85 = add nsw i32 %106, 1, !dbg !1652
  store i32 %inc85, i32* %k, align 4, !dbg !1652
  br label %for.cond67, !dbg !1653, !llvm.loop !1654

for.end86:                                        ; preds = %if.then80, %for.cond67
  %107 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1656
  %tobool87 = icmp ne %struct.anon* %107, null, !dbg !1656
  br i1 %tobool87, label %if.then88, label %if.end101, !dbg !1658

if.then88:                                        ; preds = %for.end86
  %108 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !1659
  %dw89 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %108, i32 0, i32 0, !dbg !1661
  %109 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw89, align 8, !dbg !1661
  %110 = load i32, i32* %j, align 4, !dbg !1662
  %idxprom90 = sext i32 %110 to i64, !dbg !1659
  %arrayidx91 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %109, i64 %idxprom90, !dbg !1659
  %def_nr92 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx91, i32 0, i32 0, !dbg !1663
  %111 = load i32, i32* %def_nr92, align 4, !dbg !1663
  %112 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1664
  %def_nr93 = getelementptr inbounds %struct.anon, %struct.anon* %112, i32 0, i32 0, !dbg !1665
  store i32 %111, i32* %def_nr93, align 4, !dbg !1666
  %113 = load %struct.MDeformVert*, %struct.MDeformVert** %dv1, align 8, !dbg !1667
  %dw94 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %113, i32 0, i32 0, !dbg !1668
  %114 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw94, align 8, !dbg !1668
  %115 = load i32, i32* %j, align 4, !dbg !1669
  %idxprom95 = sext i32 %115 to i64, !dbg !1667
  %arrayidx96 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %114, i64 %idxprom95, !dbg !1667
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx96, i32 0, i32 1, !dbg !1670
  %116 = load float, float* %weight, align 4, !dbg !1670
  %117 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1671
  %w1 = getelementptr inbounds %struct.anon, %struct.anon* %117, i32 0, i32 1, !dbg !1672
  store float %116, float* %w1, align 4, !dbg !1673
  %118 = load %struct.MDeformVert*, %struct.MDeformVert** %dv2, align 8, !dbg !1674
  %dw97 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %118, i32 0, i32 0, !dbg !1675
  %119 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw97, align 8, !dbg !1675
  %120 = load i32, i32* %k, align 4, !dbg !1676
  %idxprom98 = sext i32 %120 to i64, !dbg !1674
  %arrayidx99 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %119, i64 %idxprom98, !dbg !1674
  %weight100 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx99, i32 0, i32 1, !dbg !1677
  %121 = load float, float* %weight100, align 4, !dbg !1677
  %122 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1678
  %w2 = getelementptr inbounds %struct.anon, %struct.anon* %122, i32 0, i32 2, !dbg !1679
  store float %121, float* %w2, align 4, !dbg !1680
  br label %if.end101, !dbg !1681

if.end101:                                        ; preds = %if.then88, %for.end86
  br label %for.inc102, !dbg !1682

for.inc102:                                       ; preds = %if.end101
  %123 = load i32, i32* %j, align 4, !dbg !1683
  %inc103 = add nsw i32 %123, 1, !dbg !1683
  store i32 %inc103, i32* %j, align 4, !dbg !1683
  br label %for.cond62, !dbg !1684, !llvm.loop !1685

for.end104:                                       ; preds = %for.cond62
  br label %if.end105, !dbg !1687

if.end105:                                        ; preds = %for.end104, %for.body50
  %124 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1688
  %v1106 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %124, i32 0, i32 0, !dbg !1689
  %125 = load i32, i32* %v1106, align 4, !dbg !1689
  store i32 %125, i32* %u, align 4, !dbg !1690
  %126 = load %struct.MVertSkin*, %struct.MVertSkin** %outnode, align 8, !dbg !1691
  %127 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1692
  %v2107 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %127, i32 0, i32 1, !dbg !1693
  %128 = load i32, i32* %v2107, align 4, !dbg !1693
  %idxprom108 = zext i32 %128 to i64, !dbg !1691
  %arrayidx109 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %126, i64 %idxprom108, !dbg !1691
  %radius = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx109, i32 0, i32 0, !dbg !1694
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %radius, i64 0, i64 0, !dbg !1691
  %call110 = call float @half_v2(float* %arraydecay), !dbg !1695
  %129 = load %struct.MVertSkin*, %struct.MVertSkin** %outnode, align 8, !dbg !1696
  %130 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1697
  %v1111 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %130, i32 0, i32 0, !dbg !1698
  %131 = load i32, i32* %v1111, align 4, !dbg !1698
  %idxprom112 = zext i32 %131 to i64, !dbg !1696
  %arrayidx113 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %129, i64 %idxprom112, !dbg !1696
  %radius114 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx113, i32 0, i32 0, !dbg !1699
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %radius114, i64 0, i64 0, !dbg !1696
  %call116 = call float @half_v2(float* %arraydecay115), !dbg !1700
  %div = fdiv float %call110, %call116, !dbg !1701
  store float %div, float* %radrat, align 4, !dbg !1702
  %132 = load float, float* %radrat, align 4, !dbg !1703
  %add117 = fadd float %132, 1.000000e+00, !dbg !1704
  %div118 = fdiv float %add117, 2.000000e+00, !dbg !1705
  store float %div118, float* %radrat, align 4, !dbg !1706
  store i32 0, i32* %j, align 4, !dbg !1707
  br label %for.cond119, !dbg !1709

for.cond119:                                      ; preds = %for.inc182, %if.end105
  %133 = load i32, i32* %j, align 4, !dbg !1710
  %134 = load i32*, i32** %edge_subd, align 8, !dbg !1712
  %135 = load i32, i32* %i, align 4, !dbg !1713
  %idxprom120 = sext i32 %135 to i64, !dbg !1712
  %arrayidx121 = getelementptr inbounds i32, i32* %134, i64 %idxprom120, !dbg !1712
  %136 = load i32, i32* %arrayidx121, align 4, !dbg !1712
  %cmp122 = icmp slt i32 %133, %136, !dbg !1714
  br i1 %cmp122, label %for.body124, label %for.end185, !dbg !1715

for.body124:                                      ; preds = %for.cond119
  call void @llvm.dbg.declare(metadata float* %r, metadata !1716, metadata !DIExpression()), !dbg !1718
  %137 = load i32, i32* %j, align 4, !dbg !1719
  %add125 = add nsw i32 %137, 1, !dbg !1720
  %conv126 = sitofp i32 %add125 to float, !dbg !1721
  %138 = load i32*, i32** %edge_subd, align 8, !dbg !1722
  %139 = load i32, i32* %i, align 4, !dbg !1723
  %idxprom127 = sext i32 %139 to i64, !dbg !1722
  %arrayidx128 = getelementptr inbounds i32, i32* %138, i64 %idxprom127, !dbg !1722
  %140 = load i32, i32* %arrayidx128, align 4, !dbg !1722
  %add129 = add nsw i32 %140, 1, !dbg !1724
  %conv130 = sitofp i32 %add129 to float, !dbg !1725
  %div131 = fdiv float %conv126, %conv130, !dbg !1726
  store float %div131, float* %r, align 4, !dbg !1718
  call void @llvm.dbg.declare(metadata float* %t, metadata !1727, metadata !DIExpression()), !dbg !1728
  %141 = load float, float* %r, align 4, !dbg !1729
  %142 = load float, float* %radrat, align 4, !dbg !1730
  %call132 = call float @powf(float %141, float %142) #5, !dbg !1731
  store float %call132, float* %t, align 4, !dbg !1728
  %143 = load %struct.MVert*, %struct.MVert** %outvert, align 8, !dbg !1732
  %144 = load i32, i32* %v, align 4, !dbg !1733
  %idxprom133 = sext i32 %144 to i64, !dbg !1732
  %arrayidx134 = getelementptr inbounds %struct.MVert, %struct.MVert* %143, i64 %idxprom133, !dbg !1732
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx134, i32 0, i32 0, !dbg !1734
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !1732
  %145 = load %struct.MVert*, %struct.MVert** %outvert, align 8, !dbg !1735
  %146 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1736
  %v1136 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %146, i32 0, i32 0, !dbg !1737
  %147 = load i32, i32* %v1136, align 4, !dbg !1737
  %idxprom137 = zext i32 %147 to i64, !dbg !1735
  %arrayidx138 = getelementptr inbounds %struct.MVert, %struct.MVert* %145, i64 %idxprom137, !dbg !1735
  %co139 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx138, i32 0, i32 0, !dbg !1738
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %co139, i64 0, i64 0, !dbg !1735
  %148 = load %struct.MVert*, %struct.MVert** %outvert, align 8, !dbg !1739
  %149 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1740
  %v2141 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %149, i32 0, i32 1, !dbg !1741
  %150 = load i32, i32* %v2141, align 4, !dbg !1741
  %idxprom142 = zext i32 %150 to i64, !dbg !1739
  %arrayidx143 = getelementptr inbounds %struct.MVert, %struct.MVert* %148, i64 %idxprom142, !dbg !1739
  %co144 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx143, i32 0, i32 0, !dbg !1742
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %co144, i64 0, i64 0, !dbg !1739
  %151 = load float, float* %t, align 4, !dbg !1743
  call void @interp_v3_v3v3(float* %arraydecay135, float* %arraydecay140, float* %arraydecay145, float %151), !dbg !1744
  %152 = load %struct.MVertSkin*, %struct.MVertSkin** %outnode, align 8, !dbg !1745
  %153 = load i32, i32* %v, align 4, !dbg !1746
  %idxprom146 = sext i32 %153 to i64, !dbg !1745
  %arrayidx147 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %152, i64 %idxprom146, !dbg !1745
  %radius148 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx147, i32 0, i32 0, !dbg !1747
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %radius148, i64 0, i64 0, !dbg !1745
  %154 = load %struct.MVertSkin*, %struct.MVertSkin** %orignode, align 8, !dbg !1748
  %155 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1749
  %v1150 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %155, i32 0, i32 0, !dbg !1750
  %156 = load i32, i32* %v1150, align 4, !dbg !1750
  %idxprom151 = zext i32 %156 to i64, !dbg !1748
  %arrayidx152 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %154, i64 %idxprom151, !dbg !1748
  %radius153 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx152, i32 0, i32 0, !dbg !1751
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %radius153, i64 0, i64 0, !dbg !1748
  %157 = load %struct.MVertSkin*, %struct.MVertSkin** %orignode, align 8, !dbg !1752
  %158 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1753
  %v2155 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %158, i32 0, i32 1, !dbg !1754
  %159 = load i32, i32* %v2155, align 4, !dbg !1754
  %idxprom156 = zext i32 %159 to i64, !dbg !1752
  %arrayidx157 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %157, i64 %idxprom156, !dbg !1752
  %radius158 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx157, i32 0, i32 0, !dbg !1755
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %radius158, i64 0, i64 0, !dbg !1752
  %160 = load float, float* %t, align 4, !dbg !1756
  call void @interp_v3_v3v3(float* %arraydecay149, float* %arraydecay154, float* %arraydecay159, float %160), !dbg !1757
  store i32 0, i32* %k, align 4, !dbg !1758
  br label %for.cond160, !dbg !1760

for.cond160:                                      ; preds = %for.inc177, %for.body124
  %161 = load i32, i32* %k, align 4, !dbg !1761
  %162 = load i32, i32* %totvgroup, align 4, !dbg !1763
  %cmp161 = icmp slt i32 %161, %162, !dbg !1764
  br i1 %cmp161, label %for.body163, label %for.end179, !dbg !1765

for.body163:                                      ; preds = %for.cond160
  call void @llvm.dbg.declare(metadata float* %weight164, metadata !1766, metadata !DIExpression()), !dbg !1768
  %163 = load %struct.anon*, %struct.anon** %vgroups, align 8, !dbg !1769
  %164 = load i32, i32* %k, align 4, !dbg !1770
  %idxprom165 = sext i32 %164 to i64, !dbg !1769
  %arrayidx166 = getelementptr inbounds %struct.anon, %struct.anon* %163, i64 %idxprom165, !dbg !1769
  store %struct.anon* %arrayidx166, %struct.anon** %vg, align 8, !dbg !1771
  %165 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1772
  %w2167 = getelementptr inbounds %struct.anon, %struct.anon* %165, i32 0, i32 2, !dbg !1773
  %166 = load float, float* %w2167, align 4, !dbg !1773
  %167 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1774
  %w1168 = getelementptr inbounds %struct.anon, %struct.anon* %167, i32 0, i32 1, !dbg !1775
  %168 = load float, float* %w1168, align 4, !dbg !1775
  %169 = load float, float* %t, align 4, !dbg !1776
  %call169 = call float @interpf(float %166, float %168, float %169), !dbg !1777
  store float %call169, float* %weight164, align 4, !dbg !1778
  %170 = load float, float* %weight164, align 4, !dbg !1779
  %cmp170 = fcmp ogt float %170, 0.000000e+00, !dbg !1781
  br i1 %cmp170, label %if.then172, label %if.end176, !dbg !1782

if.then172:                                       ; preds = %for.body163
  %171 = load %struct.MDeformVert*, %struct.MDeformVert** %outdvert, align 8, !dbg !1783
  %172 = load i32, i32* %v, align 4, !dbg !1784
  %idxprom173 = sext i32 %172 to i64, !dbg !1783
  %arrayidx174 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %171, i64 %idxprom173, !dbg !1783
  %173 = load %struct.anon*, %struct.anon** %vg, align 8, !dbg !1785
  %def_nr175 = getelementptr inbounds %struct.anon, %struct.anon* %173, i32 0, i32 0, !dbg !1786
  %174 = load i32, i32* %def_nr175, align 4, !dbg !1786
  %175 = load float, float* %weight164, align 4, !dbg !1787
  call void @defvert_add_index_notest(%struct.MDeformVert* %arrayidx174, i32 %174, float %175), !dbg !1788
  br label %if.end176, !dbg !1788

if.end176:                                        ; preds = %if.then172, %for.body163
  br label %for.inc177, !dbg !1789

for.inc177:                                       ; preds = %if.end176
  %176 = load i32, i32* %k, align 4, !dbg !1790
  %inc178 = add nsw i32 %176, 1, !dbg !1790
  store i32 %inc178, i32* %k, align 4, !dbg !1790
  br label %for.cond160, !dbg !1791, !llvm.loop !1792

for.end179:                                       ; preds = %for.cond160
  %177 = load i32, i32* %u, align 4, !dbg !1794
  %178 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1795
  %v1180 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %178, i32 0, i32 0, !dbg !1796
  store i32 %177, i32* %v1180, align 4, !dbg !1797
  %179 = load i32, i32* %v, align 4, !dbg !1798
  %180 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1799
  %v2181 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %180, i32 0, i32 1, !dbg !1800
  store i32 %179, i32* %v2181, align 4, !dbg !1801
  %181 = load i32, i32* %v, align 4, !dbg !1802
  store i32 %181, i32* %u, align 4, !dbg !1803
  br label %for.inc182, !dbg !1804

for.inc182:                                       ; preds = %for.end179
  %182 = load i32, i32* %j, align 4, !dbg !1805
  %inc183 = add nsw i32 %182, 1, !dbg !1805
  store i32 %inc183, i32* %j, align 4, !dbg !1805
  %183 = load i32, i32* %v, align 4, !dbg !1806
  %inc184 = add nsw i32 %183, 1, !dbg !1806
  store i32 %inc184, i32* %v, align 4, !dbg !1806
  %184 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1807
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %184, i32 1, !dbg !1807
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %outedge, align 8, !dbg !1807
  br label %for.cond119, !dbg !1808, !llvm.loop !1809

for.end185:                                       ; preds = %for.cond119
  %185 = load %struct.anon*, %struct.anon** %vgroups, align 8, !dbg !1811
  %tobool186 = icmp ne %struct.anon* %185, null, !dbg !1811
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !1813

if.then187:                                       ; preds = %for.end185
  %186 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1814
  %187 = load %struct.anon*, %struct.anon** %vgroups, align 8, !dbg !1815
  %188 = bitcast %struct.anon* %187 to i8*, !dbg !1815
  call void %186(i8* %188), !dbg !1814
  br label %if.end188, !dbg !1814

if.end188:                                        ; preds = %if.then187, %for.end185
  %189 = load i32, i32* %u, align 4, !dbg !1816
  %190 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1817
  %v1189 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %190, i32 0, i32 0, !dbg !1818
  store i32 %189, i32* %v1189, align 4, !dbg !1819
  %191 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !1820
  %v2190 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %191, i32 0, i32 1, !dbg !1821
  %192 = load i32, i32* %v2190, align 4, !dbg !1821
  %193 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1822
  %v2191 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %193, i32 0, i32 1, !dbg !1823
  store i32 %192, i32* %v2191, align 4, !dbg !1824
  %194 = load %struct.MEdge*, %struct.MEdge** %outedge, align 8, !dbg !1825
  %incdec.ptr192 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %194, i32 1, !dbg !1825
  store %struct.MEdge* %incdec.ptr192, %struct.MEdge** %outedge, align 8, !dbg !1825
  br label %for.inc193, !dbg !1826

for.inc193:                                       ; preds = %if.end188
  %195 = load i32, i32* %i, align 4, !dbg !1827
  %inc194 = add nsw i32 %195, 1, !dbg !1827
  store i32 %inc194, i32* %i, align 4, !dbg !1827
  br label %for.cond47, !dbg !1828, !llvm.loop !1829

for.end195:                                       ; preds = %for.cond47
  %196 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1831
  %197 = load i32*, i32** %edge_subd, align 8, !dbg !1832
  %198 = bitcast i32* %197 to i8*, !dbg !1832
  call void %196(i8* %198), !dbg !1831
  %199 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !1833
  ret %struct.DerivedMesh* %199, !dbg !1834
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @base_skin(%struct.DerivedMesh* %origdm, %struct.SkinModifierData* %smd) #0 !dbg !1835 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %origdm.addr = alloca %struct.DerivedMesh*, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %result = alloca %struct.DerivedMesh*, align 8
  %nodes = alloca %struct.MVertSkin*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %emat = alloca %struct.EMat*, align 8
  %skin_nodes = alloca %struct.SkinNode*, align 8
  %emap = alloca %struct.MeshElemMap*, align 8
  %emapmem = alloca i32*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  store %struct.DerivedMesh* %origdm, %struct.DerivedMesh** %origdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %origdm.addr, metadata !1838, metadata !DIExpression()), !dbg !1839
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !1840, metadata !DIExpression()), !dbg !1841
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result, metadata !1842, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %nodes, metadata !1844, metadata !DIExpression()), !dbg !1845
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !1846, metadata !DIExpression()), !dbg !1937
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat, metadata !1938, metadata !DIExpression()), !dbg !1945
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes, metadata !1946, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap, metadata !1977, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.declare(metadata i32** %emapmem, metadata !1981, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !1983, metadata !DIExpression()), !dbg !1984
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !1985, metadata !DIExpression()), !dbg !1986
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !1987, metadata !DIExpression()), !dbg !1988
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !1989, metadata !DIExpression()), !dbg !1990
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !1991, metadata !DIExpression()), !dbg !1992
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1993
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !1994
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 36), !dbg !1995
  %1 = bitcast i8* %call to %struct.MVertSkin*, !dbg !1995
  store %struct.MVertSkin* %1, %struct.MVertSkin** %nodes, align 8, !dbg !1996
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1997
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 31, !dbg !1998
  %3 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !1998
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !1999
  %call1 = call %struct.MVert* %3(%struct.DerivedMesh* %4), !dbg !1997
  store %struct.MVert* %call1, %struct.MVert** %mvert, align 8, !dbg !2000
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2001
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 50, !dbg !2002
  %6 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !2002
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2003
  %call2 = call i8* %6(%struct.DerivedMesh* %7, i32 2), !dbg !2001
  %8 = bitcast i8* %call2 to %struct.MDeformVert*, !dbg !2001
  store %struct.MDeformVert* %8, %struct.MDeformVert** %dvert, align 8, !dbg !2004
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2005
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 32, !dbg !2006
  %10 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !2006
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2007
  %call3 = call %struct.MEdge* %10(%struct.DerivedMesh* %11), !dbg !2005
  store %struct.MEdge* %call3, %struct.MEdge** %medge, align 8, !dbg !2008
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2009
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 23, !dbg !2010
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !2010
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2011
  %call4 = call i32 %13(%struct.DerivedMesh* %14), !dbg !2009
  store i32 %call4, i32* %totvert, align 4, !dbg !2012
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2013
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 24, !dbg !2014
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !2014
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm.addr, align 8, !dbg !2015
  %call5 = call i32 %16(%struct.DerivedMesh* %17), !dbg !2013
  store i32 %call5, i32* %totedge, align 4, !dbg !2016
  %18 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !2017
  %19 = load i32, i32* %totvert, align 4, !dbg !2018
  %20 = load i32, i32* %totedge, align 4, !dbg !2019
  call void @BKE_mesh_vert_edge_map_create(%struct.MeshElemMap** %emap, i32** %emapmem, %struct.MEdge* %18, i32 %19, i32 %20), !dbg !2020
  %21 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes, align 8, !dbg !2021
  %22 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2022
  %23 = load i32, i32* %totvert, align 4, !dbg !2023
  %24 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !2024
  %25 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !2025
  %26 = load i32, i32* %totedge, align 4, !dbg !2026
  %call6 = call %struct.EMat* @build_edge_mats(%struct.MVertSkin* %21, %struct.MVert* %22, i32 %23, %struct.MEdge* %24, %struct.MeshElemMap* %25, i32 %26), !dbg !2027
  store %struct.EMat* %call6, %struct.EMat** %emat, align 8, !dbg !2028
  %27 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2029
  %28 = load i32, i32* %totvert, align 4, !dbg !2030
  %29 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes, align 8, !dbg !2031
  %30 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !2032
  %31 = load %struct.EMat*, %struct.EMat** %emat, align 8, !dbg !2033
  %call7 = call %struct.SkinNode* @build_frames(%struct.MVert* %27, i32 %28, %struct.MVertSkin* %29, %struct.MeshElemMap* %30, %struct.EMat* %31), !dbg !2034
  store %struct.SkinNode* %call7, %struct.SkinNode** %skin_nodes, align 8, !dbg !2035
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2036
  %33 = load %struct.EMat*, %struct.EMat** %emat, align 8, !dbg !2037
  %34 = bitcast %struct.EMat* %33 to i8*, !dbg !2037
  call void %32(i8* %34), !dbg !2036
  store %struct.EMat* null, %struct.EMat** %emat, align 8, !dbg !2038
  %35 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes, align 8, !dbg !2039
  %36 = load i32, i32* %totvert, align 4, !dbg !2040
  %37 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !2041
  %38 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !2042
  %39 = load i32, i32* %totedge, align 4, !dbg !2043
  %40 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !2044
  %41 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2045
  %call8 = call %struct.BMesh* @build_skin(%struct.SkinNode* %35, i32 %36, %struct.MeshElemMap* %37, %struct.MEdge* %38, i32 %39, %struct.MDeformVert* %40, %struct.SkinModifierData* %41), !dbg !2046
  store %struct.BMesh* %call8, %struct.BMesh** %bm, align 8, !dbg !2047
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2048
  %43 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes, align 8, !dbg !2049
  %44 = bitcast %struct.SkinNode* %43 to i8*, !dbg !2049
  call void %42(i8* %44), !dbg !2048
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2050
  %46 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !2051
  %47 = bitcast %struct.MeshElemMap* %46 to i8*, !dbg !2051
  call void %45(i8* %47), !dbg !2050
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2052
  %49 = load i32*, i32** %emapmem, align 8, !dbg !2053
  %50 = bitcast i32* %49 to i8*, !dbg !2053
  call void %48(i8* %50), !dbg !2052
  %51 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2054
  %tobool = icmp ne %struct.BMesh* %51, null, !dbg !2054
  br i1 %tobool, label %if.end, label %if.then, !dbg !2056

if.then:                                          ; preds = %entry
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %retval, align 8, !dbg !2057
  br label %return, !dbg !2057

if.end:                                           ; preds = %entry
  %52 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2058
  %call9 = call %struct.DerivedMesh* @CDDM_from_bmesh(%struct.BMesh* %52, i8 zeroext 0), !dbg !2059
  store %struct.DerivedMesh* %call9, %struct.DerivedMesh** %result, align 8, !dbg !2060
  %53 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2061
  call void @BM_mesh_free(%struct.BMesh* %53), !dbg !2062
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !2063
  call void @CDDM_calc_edges(%struct.DerivedMesh* %54), !dbg !2064
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !2065
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %55, i32 0, i32 16, !dbg !2066
  %56 = load i32, i32* %dirty, align 8, !dbg !2067
  %or = or i32 %56, 4, !dbg !2067
  store i32 %or, i32* %dirty, align 8, !dbg !2067
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !2068
  call void @skin_set_orig_indices(%struct.DerivedMesh* %57), !dbg !2069
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !2070
  store %struct.DerivedMesh* %58, %struct.DerivedMesh** %retval, align 8, !dbg !2071
  br label %return, !dbg !2071

return:                                           ; preds = %if.end, %if.then
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !2072
  ret %struct.DerivedMesh* %59, !dbg !2072
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @calc_edge_subdivisions(%struct.MVert* %mvert, %struct.MVertSkin* %nodes, %struct.MEdge* %e, i32* %degree) #0 !dbg !2073 {
entry:
  %retval = alloca i32, align 4
  %mvert.addr = alloca %struct.MVert*, align 8
  %nodes.addr = alloca %struct.MVertSkin*, align 8
  %e.addr = alloca %struct.MEdge*, align 8
  %degree.addr = alloca i32*, align 8
  %evs = alloca [2 x %struct.MVertSkin*], align 16
  %avg_radius = alloca float, align 4
  %v1_branch = alloca i8, align 1
  %v2_branch = alloca i8, align 1
  %num_subdivisions = alloca i32, align 4
  %num_subdivisions_fl = alloca float, align 4
  %edge_len = alloca float, align 4
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2084, metadata !DIExpression()), !dbg !2085
  store %struct.MVertSkin* %nodes, %struct.MVertSkin** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %nodes.addr, metadata !2086, metadata !DIExpression()), !dbg !2087
  store %struct.MEdge* %e, %struct.MEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e.addr, metadata !2088, metadata !DIExpression()), !dbg !2089
  store i32* %degree, i32** %degree.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %degree.addr, metadata !2090, metadata !DIExpression()), !dbg !2091
  call void @llvm.dbg.declare(metadata [2 x %struct.MVertSkin*]* %evs, metadata !2092, metadata !DIExpression()), !dbg !2094
  %arrayinit.begin = getelementptr inbounds [2 x %struct.MVertSkin*], [2 x %struct.MVertSkin*]* %evs, i64 0, i64 0, !dbg !2095
  %0 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !2096
  %1 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2097
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %1, i32 0, i32 0, !dbg !2098
  %2 = load i32, i32* %v1, align 4, !dbg !2098
  %idxprom = zext i32 %2 to i64, !dbg !2096
  %arrayidx = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %0, i64 %idxprom, !dbg !2096
  store %struct.MVertSkin* %arrayidx, %struct.MVertSkin** %arrayinit.begin, align 8, !dbg !2095
  %arrayinit.element = getelementptr inbounds %struct.MVertSkin*, %struct.MVertSkin** %arrayinit.begin, i64 1, !dbg !2095
  %3 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !2099
  %4 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2100
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %4, i32 0, i32 1, !dbg !2101
  %5 = load i32, i32* %v2, align 4, !dbg !2101
  %idxprom1 = zext i32 %5 to i64, !dbg !2099
  %arrayidx2 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %3, i64 %idxprom1, !dbg !2099
  store %struct.MVertSkin* %arrayidx2, %struct.MVertSkin** %arrayinit.element, align 8, !dbg !2095
  call void @llvm.dbg.declare(metadata float* %avg_radius, metadata !2102, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.declare(metadata i8* %v1_branch, metadata !2104, metadata !DIExpression()), !dbg !2105
  %6 = load i32*, i32** %degree.addr, align 8, !dbg !2106
  %7 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2107
  %v13 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %7, i32 0, i32 0, !dbg !2108
  %8 = load i32, i32* %v13, align 4, !dbg !2108
  %idxprom4 = zext i32 %8 to i64, !dbg !2106
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !2106
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !2106
  %cmp = icmp sgt i32 %9, 2, !dbg !2109
  %conv = zext i1 %cmp to i32, !dbg !2109
  %conv6 = trunc i32 %conv to i8, !dbg !2106
  store i8 %conv6, i8* %v1_branch, align 1, !dbg !2105
  call void @llvm.dbg.declare(metadata i8* %v2_branch, metadata !2110, metadata !DIExpression()), !dbg !2111
  %10 = load i32*, i32** %degree.addr, align 8, !dbg !2112
  %11 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2113
  %v27 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %11, i32 0, i32 1, !dbg !2114
  %12 = load i32, i32* %v27, align 4, !dbg !2114
  %idxprom8 = zext i32 %12 to i64, !dbg !2112
  %arrayidx9 = getelementptr inbounds i32, i32* %10, i64 %idxprom8, !dbg !2112
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !2112
  %cmp10 = icmp sgt i32 %13, 2, !dbg !2115
  %conv11 = zext i1 %cmp10 to i32, !dbg !2115
  %conv12 = trunc i32 %conv11 to i8, !dbg !2112
  store i8 %conv12, i8* %v2_branch, align 1, !dbg !2111
  call void @llvm.dbg.declare(metadata i32* %num_subdivisions, metadata !2116, metadata !DIExpression()), !dbg !2117
  %14 = load i8, i8* %v1_branch, align 1, !dbg !2118
  %conv13 = zext i8 %14 to i32, !dbg !2118
  %tobool = icmp ne i32 %conv13, 0, !dbg !2118
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !2120

land.lhs.true:                                    ; preds = %entry
  %arrayidx14 = getelementptr inbounds [2 x %struct.MVertSkin*], [2 x %struct.MVertSkin*]* %evs, i64 0, i64 0, !dbg !2121
  %15 = load %struct.MVertSkin*, %struct.MVertSkin** %arrayidx14, align 16, !dbg !2121
  %flag = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %15, i32 0, i32 1, !dbg !2122
  %16 = load i32, i32* %flag, align 4, !dbg !2122
  %and = and i32 %16, 2, !dbg !2123
  %tobool15 = icmp ne i32 %and, 0, !dbg !2123
  br i1 %tobool15, label %if.then, label %lor.lhs.false, !dbg !2124

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %17 = load i8, i8* %v2_branch, align 1, !dbg !2125
  %conv16 = zext i8 %17 to i32, !dbg !2125
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !2125
  br i1 %tobool17, label %land.lhs.true18, label %if.end, !dbg !2126

land.lhs.true18:                                  ; preds = %lor.lhs.false
  %arrayidx19 = getelementptr inbounds [2 x %struct.MVertSkin*], [2 x %struct.MVertSkin*]* %evs, i64 0, i64 1, !dbg !2127
  %18 = load %struct.MVertSkin*, %struct.MVertSkin** %arrayidx19, align 8, !dbg !2127
  %flag20 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %18, i32 0, i32 1, !dbg !2128
  %19 = load i32, i32* %flag20, align 4, !dbg !2128
  %and21 = and i32 %19, 2, !dbg !2129
  %tobool22 = icmp ne i32 %and21, 0, !dbg !2129
  br i1 %tobool22, label %if.then, label %if.end, !dbg !2130

if.then:                                          ; preds = %land.lhs.true18, %land.lhs.true
  %20 = load i8, i8* %v1_branch, align 1, !dbg !2131
  %conv23 = zext i8 %20 to i32, !dbg !2131
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !2131
  br i1 %tobool24, label %land.lhs.true25, label %if.else, !dbg !2134

land.lhs.true25:                                  ; preds = %if.then
  %21 = load i8, i8* %v2_branch, align 1, !dbg !2135
  %conv26 = zext i8 %21 to i32, !dbg !2135
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !2135
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !2136

if.then28:                                        ; preds = %land.lhs.true25
  store i32 2, i32* %retval, align 4, !dbg !2137
  br label %return, !dbg !2137

if.else:                                          ; preds = %land.lhs.true25, %if.then
  store i32 0, i32* %retval, align 4, !dbg !2138
  br label %return, !dbg !2138

if.end:                                           ; preds = %land.lhs.true18, %lor.lhs.false
  %arrayidx29 = getelementptr inbounds [2 x %struct.MVertSkin*], [2 x %struct.MVertSkin*]* %evs, i64 0, i64 0, !dbg !2139
  %22 = load %struct.MVertSkin*, %struct.MVertSkin** %arrayidx29, align 16, !dbg !2139
  %radius = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %22, i32 0, i32 0, !dbg !2140
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %radius, i64 0, i64 0, !dbg !2139
  %call = call float @half_v2(float* %arraydecay), !dbg !2141
  %arrayidx30 = getelementptr inbounds [2 x %struct.MVertSkin*], [2 x %struct.MVertSkin*]* %evs, i64 0, i64 1, !dbg !2142
  %23 = load %struct.MVertSkin*, %struct.MVertSkin** %arrayidx30, align 8, !dbg !2142
  %radius31 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %23, i32 0, i32 0, !dbg !2143
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %radius31, i64 0, i64 0, !dbg !2142
  %call33 = call float @half_v2(float* %arraydecay32), !dbg !2144
  %add = fadd float %call, %call33, !dbg !2145
  store float %add, float* %avg_radius, align 4, !dbg !2146
  %24 = load float, float* %avg_radius, align 4, !dbg !2147
  %cmp34 = fcmp une float %24, 0.000000e+00, !dbg !2149
  br i1 %cmp34, label %if.then36, label %if.else53, !dbg !2150

if.then36:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %num_subdivisions_fl, metadata !2151, metadata !DIExpression()), !dbg !2153
  call void @llvm.dbg.declare(metadata float* %edge_len, metadata !2154, metadata !DIExpression()), !dbg !2155
  %25 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2156
  %26 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2157
  %v137 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %26, i32 0, i32 0, !dbg !2158
  %27 = load i32, i32* %v137, align 4, !dbg !2158
  %idxprom38 = zext i32 %27 to i64, !dbg !2156
  %arrayidx39 = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i64 %idxprom38, !dbg !2156
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx39, i32 0, i32 0, !dbg !2159
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2156
  %28 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2160
  %29 = load %struct.MEdge*, %struct.MEdge** %e.addr, align 8, !dbg !2161
  %v241 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %29, i32 0, i32 1, !dbg !2162
  %30 = load i32, i32* %v241, align 4, !dbg !2162
  %idxprom42 = zext i32 %30 to i64, !dbg !2160
  %arrayidx43 = getelementptr inbounds %struct.MVert, %struct.MVert* %28, i64 %idxprom42, !dbg !2160
  %co44 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx43, i32 0, i32 0, !dbg !2163
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !2160
  %call46 = call float @len_v3v3(float* %arraydecay40, float* %arraydecay45), !dbg !2164
  store float %call46, float* %edge_len, align 4, !dbg !2155
  %31 = load float, float* %edge_len, align 4, !dbg !2165
  %32 = load float, float* %avg_radius, align 4, !dbg !2166
  %div = fdiv float %31, %32, !dbg !2167
  store float %div, float* %num_subdivisions_fl, align 4, !dbg !2168
  %33 = load float, float* %num_subdivisions_fl, align 4, !dbg !2169
  %cmp47 = fcmp olt float %33, 1.280000e+02, !dbg !2171
  br i1 %cmp47, label %if.then49, label %if.else51, !dbg !2172

if.then49:                                        ; preds = %if.then36
  %34 = load float, float* %num_subdivisions_fl, align 4, !dbg !2173
  %conv50 = fptosi float %34 to i32, !dbg !2175
  store i32 %conv50, i32* %num_subdivisions, align 4, !dbg !2176
  br label %if.end52, !dbg !2177

if.else51:                                        ; preds = %if.then36
  store i32 128, i32* %num_subdivisions, align 4, !dbg !2178
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then49
  br label %if.end54, !dbg !2180

if.else53:                                        ; preds = %if.end
  store i32 0, i32* %num_subdivisions, align 4, !dbg !2181
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.end52
  %35 = load i32, i32* %num_subdivisions, align 4, !dbg !2183
  %cmp55 = icmp slt i32 %35, 2, !dbg !2185
  br i1 %cmp55, label %land.lhs.true57, label %if.end64, !dbg !2186

land.lhs.true57:                                  ; preds = %if.end54
  %36 = load i8, i8* %v1_branch, align 1, !dbg !2187
  %conv58 = zext i8 %36 to i32, !dbg !2187
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !2187
  br i1 %tobool59, label %land.lhs.true60, label %if.end64, !dbg !2188

land.lhs.true60:                                  ; preds = %land.lhs.true57
  %37 = load i8, i8* %v2_branch, align 1, !dbg !2189
  %conv61 = zext i8 %37 to i32, !dbg !2189
  %tobool62 = icmp ne i32 %conv61, 0, !dbg !2189
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !2190

if.then63:                                        ; preds = %land.lhs.true60
  store i32 2, i32* %num_subdivisions, align 4, !dbg !2191
  br label %if.end64, !dbg !2192

if.end64:                                         ; preds = %if.then63, %land.lhs.true60, %land.lhs.true57, %if.end54
  %38 = load i32, i32* %num_subdivisions, align 4, !dbg !2193
  store i32 %38, i32* %retval, align 4, !dbg !2194
  br label %return, !dbg !2194

return:                                           ; preds = %if.end64, %if.else, %if.then28
  %39 = load i32, i32* %retval, align 4, !dbg !2195
  ret i32 %39, !dbg !2195
}

declare dso_local %struct.DerivedMesh* @CDDM_from_template(%struct.DerivedMesh*, i32, i32, i32, i32, i32) #2

declare dso_local void @CustomData_copy_data(%struct.CustomData*, %struct.CustomData*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @half_v2(float* %v) #0 !dbg !2196 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !2199, metadata !DIExpression()), !dbg !2200
  %0 = load float*, float** %v.addr, align 8, !dbg !2201
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2201
  %1 = load float, float* %arrayidx, align 4, !dbg !2201
  %2 = load float*, float** %v.addr, align 8, !dbg !2202
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2202
  %3 = load float, float* %arrayidx1, align 4, !dbg !2202
  %add = fadd float %1, %3, !dbg !2203
  %mul = fmul float %add, 5.000000e-01, !dbg !2204
  ret float %mul, !dbg !2205
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #3

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @interpf(float %target, float %origin, float %fac) #0 !dbg !2206 {
entry:
  %target.addr = alloca float, align 4
  %origin.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %target, float* %target.addr, align 4
  call void @llvm.dbg.declare(metadata float* %target.addr, metadata !2210, metadata !DIExpression()), !dbg !2211
  store float %origin, float* %origin.addr, align 4
  call void @llvm.dbg.declare(metadata float* %origin.addr, metadata !2212, metadata !DIExpression()), !dbg !2213
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !2214, metadata !DIExpression()), !dbg !2215
  %0 = load float, float* %fac.addr, align 4, !dbg !2216
  %1 = load float, float* %target.addr, align 4, !dbg !2217
  %mul = fmul float %0, %1, !dbg !2218
  %2 = load float, float* %fac.addr, align 4, !dbg !2219
  %sub = fsub float 1.000000e+00, %2, !dbg !2220
  %3 = load float, float* %origin.addr, align 4, !dbg !2221
  %mul1 = fmul float %sub, %3, !dbg !2222
  %add = fadd float %mul, %mul1, !dbg !2223
  ret float %add, !dbg !2224
}

declare dso_local void @defvert_add_index_notest(%struct.MDeformVert*, i32, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !2225 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2229, metadata !DIExpression()), !dbg !2230
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2231, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !2233, metadata !DIExpression()), !dbg !2234
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !2235
  %0 = load float*, float** %b.addr, align 8, !dbg !2236
  %1 = load float*, float** %a.addr, align 8, !dbg !2237
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !2238
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !2239
  %call = call float @len_v3(float* %arraydecay1), !dbg !2240
  ret float %call, !dbg !2241
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !2242 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2245, metadata !DIExpression()), !dbg !2246
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2247, metadata !DIExpression()), !dbg !2248
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2249, metadata !DIExpression()), !dbg !2250
  %0 = load float*, float** %a.addr, align 8, !dbg !2251
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2251
  %1 = load float, float* %arrayidx, align 4, !dbg !2251
  %2 = load float*, float** %b.addr, align 8, !dbg !2252
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2252
  %3 = load float, float* %arrayidx1, align 4, !dbg !2252
  %sub = fsub float %1, %3, !dbg !2253
  %4 = load float*, float** %r.addr, align 8, !dbg !2254
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !2254
  store float %sub, float* %arrayidx2, align 4, !dbg !2255
  %5 = load float*, float** %a.addr, align 8, !dbg !2256
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2256
  %6 = load float, float* %arrayidx3, align 4, !dbg !2256
  %7 = load float*, float** %b.addr, align 8, !dbg !2257
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !2257
  %8 = load float, float* %arrayidx4, align 4, !dbg !2257
  %sub5 = fsub float %6, %8, !dbg !2258
  %9 = load float*, float** %r.addr, align 8, !dbg !2259
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !2259
  store float %sub5, float* %arrayidx6, align 4, !dbg !2260
  %10 = load float*, float** %a.addr, align 8, !dbg !2261
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !2261
  %11 = load float, float* %arrayidx7, align 4, !dbg !2261
  %12 = load float*, float** %b.addr, align 8, !dbg !2262
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !2262
  %13 = load float, float* %arrayidx8, align 4, !dbg !2262
  %sub9 = fsub float %11, %13, !dbg !2263
  %14 = load float*, float** %r.addr, align 8, !dbg !2264
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !2264
  store float %sub9, float* %arrayidx10, align 4, !dbg !2265
  ret void, !dbg !2266
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !2267 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2268, metadata !DIExpression()), !dbg !2269
  %0 = load float*, float** %a.addr, align 8, !dbg !2270
  %1 = load float*, float** %a.addr, align 8, !dbg !2271
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !2272
  %call1 = call float @sqrtf(float %call) #5, !dbg !2273
  ret float %call1, !dbg !2274
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !2275 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2276, metadata !DIExpression()), !dbg !2277
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2278, metadata !DIExpression()), !dbg !2279
  %0 = load float*, float** %a.addr, align 8, !dbg !2280
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2280
  %1 = load float, float* %arrayidx, align 4, !dbg !2280
  %2 = load float*, float** %b.addr, align 8, !dbg !2281
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2281
  %3 = load float, float* %arrayidx1, align 4, !dbg !2281
  %mul = fmul float %1, %3, !dbg !2282
  %4 = load float*, float** %a.addr, align 8, !dbg !2283
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2283
  %5 = load float, float* %arrayidx2, align 4, !dbg !2283
  %6 = load float*, float** %b.addr, align 8, !dbg !2284
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2284
  %7 = load float, float* %arrayidx3, align 4, !dbg !2284
  %mul4 = fmul float %5, %7, !dbg !2285
  %add = fadd float %mul, %mul4, !dbg !2286
  %8 = load float*, float** %a.addr, align 8, !dbg !2287
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2287
  %9 = load float, float* %arrayidx5, align 4, !dbg !2287
  %10 = load float*, float** %b.addr, align 8, !dbg !2288
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !2288
  %11 = load float, float* %arrayidx6, align 4, !dbg !2288
  %mul7 = fmul float %9, %11, !dbg !2289
  %add8 = fadd float %add, %mul7, !dbg !2290
  ret float %add8, !dbg !2291
}

declare dso_local void @BKE_mesh_vert_edge_map_create(%struct.MeshElemMap**, i32**, %struct.MEdge*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EMat* @build_edge_mats(%struct.MVertSkin* %vs, %struct.MVert* %mvert, i32 %totvert, %struct.MEdge* %medge, %struct.MeshElemMap* %emap, i32 %totedge) #0 !dbg !2292 {
entry:
  %vs.addr = alloca %struct.MVertSkin*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %totvert.addr = alloca i32, align 4
  %medge.addr = alloca %struct.MEdge*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %totedge.addr = alloca i32, align 4
  %stack = alloca %struct.BLI_Stack*, align 8
  %emat = alloca %struct.EMat*, align 8
  %stack_elem = alloca %struct.EdgeStackElem, align 4
  %visited_e = alloca i32*, align 8
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %e = alloca %struct.MEdge*, align 8
  store %struct.MVertSkin* %vs, %struct.MVertSkin** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %vs.addr, metadata !2297, metadata !DIExpression()), !dbg !2298
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2299, metadata !DIExpression()), !dbg !2300
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !2301, metadata !DIExpression()), !dbg !2302
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !2303, metadata !DIExpression()), !dbg !2304
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !2305, metadata !DIExpression()), !dbg !2306
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !2307, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.declare(metadata %struct.BLI_Stack** %stack, metadata !2309, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat, metadata !2315, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.declare(metadata %struct.EdgeStackElem* %stack_elem, metadata !2317, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata i32** %visited_e, metadata !2325, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2327, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2329, metadata !DIExpression()), !dbg !2330
  %call = call %struct.BLI_Stack* @BLI_stack_new(i64 44, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)), !dbg !2331
  store %struct.BLI_Stack* %call, %struct.BLI_Stack** %stack, align 8, !dbg !2332
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2333
  %1 = load i32, i32* %totedge.addr, align 4, !dbg !2333
  %shr = ashr i32 %1, 5, !dbg !2333
  %add = add nsw i32 %shr, 1, !dbg !2333
  %conv = sext i32 %add to i64, !dbg !2333
  %mul = mul i64 %conv, 4, !dbg !2333
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)), !dbg !2333
  %2 = bitcast i8* %call1 to i32*, !dbg !2333
  store i32* %2, i32** %visited_e, align 8, !dbg !2334
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2335
  %4 = load i32, i32* %totedge.addr, align 4, !dbg !2336
  %conv2 = sext i32 %4 to i64, !dbg !2336
  %mul3 = mul i64 40, %conv2, !dbg !2337
  %call4 = call i8* %3(i64 %mul3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)), !dbg !2335
  %5 = bitcast i8* %call4 to %struct.EMat*, !dbg !2335
  store %struct.EMat* %5, %struct.EMat** %emat, align 8, !dbg !2338
  store i32 0, i32* %v, align 4, !dbg !2339
  br label %for.cond, !dbg !2341

for.cond:                                         ; preds = %for.inc38, %entry
  %6 = load i32, i32* %v, align 4, !dbg !2342
  %7 = load i32, i32* %totvert.addr, align 4, !dbg !2344
  %cmp = icmp slt i32 %6, %7, !dbg !2345
  br i1 %cmp, label %for.body, label %for.end40, !dbg !2346

for.body:                                         ; preds = %for.cond
  %8 = load %struct.MVertSkin*, %struct.MVertSkin** %vs.addr, align 8, !dbg !2347
  %9 = load i32, i32* %v, align 4, !dbg !2350
  %idxprom = sext i32 %9 to i64, !dbg !2347
  %arrayidx = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %8, i64 %idxprom, !dbg !2347
  %flag = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx, i32 0, i32 1, !dbg !2351
  %10 = load i32, i32* %flag, align 4, !dbg !2351
  %and = and i32 %10, 1, !dbg !2352
  %tobool = icmp ne i32 %and, 0, !dbg !2352
  br i1 %tobool, label %if.then, label %if.end37, !dbg !2353

if.then:                                          ; preds = %for.body
  %11 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2354
  %12 = load i32, i32* %v, align 4, !dbg !2357
  %idxprom6 = sext i32 %12 to i64, !dbg !2354
  %arrayidx7 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %11, i64 %idxprom6, !dbg !2354
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx7, i32 0, i32 1, !dbg !2358
  %13 = load i32, i32* %count, align 8, !dbg !2358
  %cmp8 = icmp sge i32 %13, 1, !dbg !2359
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !2360

if.then10:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e, metadata !2361, metadata !DIExpression()), !dbg !2363
  %14 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2364
  %15 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2365
  %16 = load i32, i32* %v, align 4, !dbg !2366
  %idxprom11 = sext i32 %16 to i64, !dbg !2365
  %arrayidx12 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %15, i64 %idxprom11, !dbg !2365
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx12, i32 0, i32 0, !dbg !2367
  %17 = load i32*, i32** %indices, align 8, !dbg !2367
  %arrayidx13 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !2365
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !2365
  %idxprom14 = sext i32 %18 to i64, !dbg !2364
  %arrayidx15 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %14, i64 %idxprom14, !dbg !2364
  store %struct.MEdge* %arrayidx15, %struct.MEdge** %e, align 8, !dbg !2363
  %mat = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2368
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !2369
  %19 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2370
  %20 = load i32, i32* %v, align 4, !dbg !2371
  %idxprom16 = sext i32 %20 to i64, !dbg !2370
  %arrayidx17 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom16, !dbg !2370
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx17, i32 0, i32 0, !dbg !2372
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2370
  %21 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2373
  %22 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !2374
  %23 = load i32, i32* %v, align 4, !dbg !2375
  %call19 = call i32 @BKE_mesh_edge_other_vert(%struct.MEdge* %22, i32 %23), !dbg !2376
  %idxprom20 = sext i32 %call19 to i64, !dbg !2373
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom20, !dbg !2373
  %co22 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 0, !dbg !2377
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !2373
  call void @calc_edge_mat([3 x float]* %arraydecay, float* %arraydecay18, float* %arraydecay23), !dbg !2378
  %24 = load i32, i32* %v, align 4, !dbg !2379
  %parent_v = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 1, !dbg !2380
  store i32 %24, i32* %parent_v, align 4, !dbg !2381
  store i32 0, i32* %i, align 4, !dbg !2382
  br label %for.cond24, !dbg !2384

for.cond24:                                       ; preds = %for.inc, %if.then10
  %25 = load i32, i32* %i, align 4, !dbg !2385
  %26 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2387
  %27 = load i32, i32* %v, align 4, !dbg !2388
  %idxprom25 = sext i32 %27 to i64, !dbg !2387
  %arrayidx26 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %26, i64 %idxprom25, !dbg !2387
  %count27 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx26, i32 0, i32 1, !dbg !2389
  %28 = load i32, i32* %count27, align 8, !dbg !2389
  %cmp28 = icmp slt i32 %25, %28, !dbg !2390
  br i1 %cmp28, label %for.body30, label %for.end, !dbg !2391

for.body30:                                       ; preds = %for.cond24
  %29 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2392
  %30 = load i32, i32* %v, align 4, !dbg !2394
  %idxprom31 = sext i32 %30 to i64, !dbg !2392
  %arrayidx32 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %29, i64 %idxprom31, !dbg !2392
  %indices33 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx32, i32 0, i32 0, !dbg !2395
  %31 = load i32*, i32** %indices33, align 8, !dbg !2395
  %32 = load i32, i32* %i, align 4, !dbg !2396
  %idxprom34 = sext i32 %32 to i64, !dbg !2392
  %arrayidx35 = getelementptr inbounds i32, i32* %31, i64 %idxprom34, !dbg !2392
  %33 = load i32, i32* %arrayidx35, align 4, !dbg !2392
  %e36 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 2, !dbg !2397
  store i32 %33, i32* %e36, align 4, !dbg !2398
  %34 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !2399
  %35 = bitcast %struct.EdgeStackElem* %stack_elem to i8*, !dbg !2400
  call void @BLI_stack_push(%struct.BLI_Stack* %34, i8* %35), !dbg !2401
  br label %for.inc, !dbg !2402

for.inc:                                          ; preds = %for.body30
  %36 = load i32, i32* %i, align 4, !dbg !2403
  %inc = add nsw i32 %36, 1, !dbg !2403
  store i32 %inc, i32* %i, align 4, !dbg !2403
  br label %for.cond24, !dbg !2404, !llvm.loop !2405

for.end:                                          ; preds = %for.cond24
  br label %if.end, !dbg !2407

if.end:                                           ; preds = %for.end, %if.then
  br label %if.end37, !dbg !2408

if.end37:                                         ; preds = %if.end, %for.body
  br label %for.inc38, !dbg !2409

for.inc38:                                        ; preds = %if.end37
  %37 = load i32, i32* %v, align 4, !dbg !2410
  %inc39 = add nsw i32 %37, 1, !dbg !2410
  store i32 %inc39, i32* %v, align 4, !dbg !2410
  br label %for.cond, !dbg !2411, !llvm.loop !2412

for.end40:                                        ; preds = %for.cond
  br label %while.cond, !dbg !2414

while.cond:                                       ; preds = %while.body, %for.end40
  %38 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !2415
  %call41 = call zeroext i8 @BLI_stack_is_empty(%struct.BLI_Stack* %38), !dbg !2416
  %tobool42 = icmp ne i8 %call41, 0, !dbg !2417
  %lnot = xor i1 %tobool42, true, !dbg !2417
  br i1 %lnot, label %while.body, label %while.end, !dbg !2414

while.body:                                       ; preds = %while.cond
  %39 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !2418
  %40 = load i32*, i32** %visited_e, align 8, !dbg !2420
  %41 = load %struct.EMat*, %struct.EMat** %emat, align 8, !dbg !2421
  %42 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2422
  %43 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2423
  %44 = load %struct.MVertSkin*, %struct.MVertSkin** %vs.addr, align 8, !dbg !2424
  %45 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2425
  call void @build_emats_stack(%struct.BLI_Stack* %39, i32* %40, %struct.EMat* %41, %struct.MeshElemMap* %42, %struct.MEdge* %43, %struct.MVertSkin* %44, %struct.MVert* %45), !dbg !2426
  br label %while.cond, !dbg !2414, !llvm.loop !2427

while.end:                                        ; preds = %while.cond
  %46 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2429
  %47 = load i32*, i32** %visited_e, align 8, !dbg !2430
  %48 = bitcast i32* %47 to i8*, !dbg !2430
  call void %46(i8* %48), !dbg !2429
  %49 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !2431
  call void @BLI_stack_free(%struct.BLI_Stack* %49), !dbg !2432
  %50 = load %struct.EMat*, %struct.EMat** %emat, align 8, !dbg !2433
  ret %struct.EMat* %50, !dbg !2434
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.SkinNode* @build_frames(%struct.MVert* %mvert, i32 %totvert, %struct.MVertSkin* %nodes, %struct.MeshElemMap* %emap, %struct.EMat* %emat) #0 !dbg !2435 {
entry:
  %mvert.addr = alloca %struct.MVert*, align 8
  %totvert.addr = alloca i32, align 4
  %nodes.addr = alloca %struct.MVertSkin*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %emat.addr = alloca %struct.EMat*, align 8
  %skin_nodes = alloca %struct.SkinNode*, align 8
  %v = alloca i32, align 4
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2438, metadata !DIExpression()), !dbg !2439
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !2440, metadata !DIExpression()), !dbg !2441
  store %struct.MVertSkin* %nodes, %struct.MVertSkin** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %nodes.addr, metadata !2442, metadata !DIExpression()), !dbg !2443
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !2444, metadata !DIExpression()), !dbg !2445
  store %struct.EMat* %emat, %struct.EMat** %emat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat.addr, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes, metadata !2448, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2450, metadata !DIExpression()), !dbg !2451
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2452
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !2453
  %conv = sext i32 %1 to i64, !dbg !2453
  %mul = mul i64 320, %conv, !dbg !2454
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)), !dbg !2452
  %2 = bitcast i8* %call to %struct.SkinNode*, !dbg !2452
  store %struct.SkinNode* %2, %struct.SkinNode** %skin_nodes, align 8, !dbg !2455
  store i32 0, i32* %v, align 4, !dbg !2456
  br label %for.cond, !dbg !2458

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %v, align 4, !dbg !2459
  %4 = load i32, i32* %totvert.addr, align 4, !dbg !2461
  %cmp = icmp slt i32 %3, %4, !dbg !2462
  br i1 %cmp, label %for.body, label %for.end, !dbg !2463

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2464
  %6 = load i32, i32* %v, align 4, !dbg !2467
  %idxprom = sext i32 %6 to i64, !dbg !2464
  %arrayidx = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %5, i64 %idxprom, !dbg !2464
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx, i32 0, i32 1, !dbg !2468
  %7 = load i32, i32* %count, align 8, !dbg !2468
  %cmp2 = icmp sle i32 %7, 1, !dbg !2469
  br i1 %cmp2, label %if.then, label %if.else, !dbg !2470

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %v, align 4, !dbg !2471
  %9 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes, align 8, !dbg !2472
  %10 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2473
  %11 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !2474
  %12 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2475
  %13 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2476
  call void @end_node_frames(i32 %8, %struct.SkinNode* %9, %struct.MVert* %10, %struct.MVertSkin* %11, %struct.MeshElemMap* %12, %struct.EMat* %13), !dbg !2477
  br label %if.end11, !dbg !2477

if.else:                                          ; preds = %for.body
  %14 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2478
  %15 = load i32, i32* %v, align 4, !dbg !2480
  %idxprom4 = sext i32 %15 to i64, !dbg !2478
  %arrayidx5 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %14, i64 %idxprom4, !dbg !2478
  %count6 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx5, i32 0, i32 1, !dbg !2481
  %16 = load i32, i32* %count6, align 8, !dbg !2481
  %cmp7 = icmp eq i32 %16, 2, !dbg !2482
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !2483

if.then9:                                         ; preds = %if.else
  %17 = load i32, i32* %v, align 4, !dbg !2484
  %18 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes, align 8, !dbg !2485
  %19 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2486
  %20 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !2487
  %21 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2488
  %22 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2489
  call void @connection_node_frames(i32 %17, %struct.SkinNode* %18, %struct.MVert* %19, %struct.MVertSkin* %20, %struct.MeshElemMap* %21, %struct.EMat* %22), !dbg !2490
  br label %if.end, !dbg !2490

if.else10:                                        ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then9
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !2491

for.inc:                                          ; preds = %if.end11
  %23 = load i32, i32* %v, align 4, !dbg !2492
  %inc = add nsw i32 %23, 1, !dbg !2492
  store i32 %inc, i32* %v, align 4, !dbg !2492
  br label %for.cond, !dbg !2493, !llvm.loop !2494

for.end:                                          ; preds = %for.cond
  %24 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes, align 8, !dbg !2496
  ret %struct.SkinNode* %24, !dbg !2497
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMesh* @build_skin(%struct.SkinNode* %skin_nodes, i32 %totvert, %struct.MeshElemMap* %emap, %struct.MEdge* %medge, i32 %totedge, %struct.MDeformVert* %input_dvert, %struct.SkinModifierData* %smd) #0 !dbg !2498 {
entry:
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %totedge.addr = alloca i32, align 4
  %input_dvert.addr = alloca %struct.MDeformVert*, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %so = alloca %struct.SkinOutput, align 8
  %v = alloca i32, align 4
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !2501, metadata !DIExpression()), !dbg !2502
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !2503, metadata !DIExpression()), !dbg !2504
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !2505, metadata !DIExpression()), !dbg !2506
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !2507, metadata !DIExpression()), !dbg !2508
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !2509, metadata !DIExpression()), !dbg !2510
  store %struct.MDeformVert* %input_dvert, %struct.MDeformVert** %input_dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %input_dvert.addr, metadata !2511, metadata !DIExpression()), !dbg !2512
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !2513, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.declare(metadata %struct.SkinOutput* %so, metadata !2515, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2523, metadata !DIExpression()), !dbg !2524
  %0 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2525
  %smd1 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 1, !dbg !2526
  store %struct.SkinModifierData* %0, %struct.SkinModifierData** %smd1, align 8, !dbg !2527
  %call = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* @bm_mesh_allocsize_default), !dbg !2528
  %bm = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2529
  store %struct.BMesh* %call, %struct.BMesh** %bm, align 8, !dbg !2530
  %mat_nr = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 2, !dbg !2531
  store i32 0, i32* %mat_nr, align 8, !dbg !2532
  %bm2 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2533
  %1 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !2533
  call void @BM_mesh_elem_toolflags_ensure(%struct.BMesh* %1), !dbg !2534
  %bm3 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2535
  %2 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !2535
  call void @BMO_push(%struct.BMesh* %2, %struct.BMOperator* null), !dbg !2536
  %bm4 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2537
  %3 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !2537
  call void @bmesh_edit_begin(%struct.BMesh* %3, i32 0), !dbg !2538
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %input_dvert.addr, align 8, !dbg !2539
  %tobool = icmp ne %struct.MDeformVert* %4, null, !dbg !2539
  br i1 %tobool, label %if.then, label %if.end, !dbg !2541

if.then:                                          ; preds = %entry
  %bm5 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2542
  %5 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !2542
  %bm6 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2543
  %6 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !2543
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 24, !dbg !2544
  call void @BM_data_layer_add(%struct.BMesh* %5, %struct.CustomData* %vdata, i32 2), !dbg !2545
  br label %if.end, !dbg !2545

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2546
  %8 = load i32, i32* %totvert.addr, align 4, !dbg !2547
  %9 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2548
  %10 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2549
  call void @skin_merge_close_frame_verts(%struct.SkinNode* %7, i32 %8, %struct.MeshElemMap* %9, %struct.MEdge* %10), !dbg !2550
  store i32 0, i32* %v, align 4, !dbg !2551
  br label %for.cond, !dbg !2553

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %v, align 4, !dbg !2554
  %12 = load i32, i32* %totvert.addr, align 4, !dbg !2556
  %cmp = icmp slt i32 %11, %12, !dbg !2557
  br i1 %cmp, label %for.body, label %for.end, !dbg !2558

for.body:                                         ; preds = %for.cond
  %13 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2559
  %14 = load i32, i32* %v, align 4, !dbg !2562
  %idxprom = sext i32 %14 to i64, !dbg !2559
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %13, i64 %idxprom, !dbg !2559
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx, i32 0, i32 1, !dbg !2563
  %15 = load i32, i32* %totframe, align 8, !dbg !2563
  %tobool7 = icmp ne i32 %15, 0, !dbg !2559
  br i1 %tobool7, label %if.then8, label %if.end15, !dbg !2564

if.then8:                                         ; preds = %for.body
  %bm9 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2565
  %16 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !2565
  %17 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2566
  %18 = load i32, i32* %v, align 4, !dbg !2567
  %idxprom10 = sext i32 %18 to i64, !dbg !2566
  %arrayidx11 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %17, i64 %idxprom10, !dbg !2566
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %input_dvert.addr, align 8, !dbg !2568
  %tobool12 = icmp ne %struct.MDeformVert* %19, null, !dbg !2568
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !2568

cond.true:                                        ; preds = %if.then8
  %20 = load %struct.MDeformVert*, %struct.MDeformVert** %input_dvert.addr, align 8, !dbg !2569
  %21 = load i32, i32* %v, align 4, !dbg !2570
  %idxprom13 = sext i32 %21 to i64, !dbg !2569
  %arrayidx14 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %20, i64 %idxprom13, !dbg !2569
  br label %cond.end, !dbg !2568

cond.false:                                       ; preds = %if.then8
  br label %cond.end, !dbg !2568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MDeformVert* [ %arrayidx14, %cond.true ], [ null, %cond.false ], !dbg !2568
  call void @output_frames(%struct.BMesh* %16, %struct.SkinNode* %arrayidx11, %struct.MDeformVert* %cond), !dbg !2571
  br label %if.end15, !dbg !2571

if.end15:                                         ; preds = %cond.end, %for.body
  br label %for.inc, !dbg !2572

for.inc:                                          ; preds = %if.end15
  %22 = load i32, i32* %v, align 4, !dbg !2573
  %inc = add nsw i32 %22, 1, !dbg !2573
  store i32 %inc, i32* %v, align 4, !dbg !2573
  br label %for.cond, !dbg !2574, !llvm.loop !2575

for.end:                                          ; preds = %for.cond
  %23 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2577
  %24 = load i32, i32* %totvert.addr, align 4, !dbg !2578
  call void @skin_update_merged_vertices(%struct.SkinNode* %23, i32 %24), !dbg !2579
  %25 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2580
  %26 = load i32, i32* %totvert.addr, align 4, !dbg !2582
  %27 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2583
  %28 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2584
  %call16 = call zeroext i8 @skin_output_branch_hulls(%struct.SkinOutput* %so, %struct.SkinNode* %25, i32 %26, %struct.MeshElemMap* %27, %struct.MEdge* %28), !dbg !2585
  %tobool17 = icmp ne i8 %call16, 0, !dbg !2585
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !2586

if.then18:                                        ; preds = %for.end
  %29 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2587
  %modifier = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %29, i32 0, i32 0, !dbg !2588
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %modifier, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)), !dbg !2589
  br label %if.end19, !dbg !2589

if.end19:                                         ; preds = %if.then18, %for.end
  %30 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2590
  call void @hull_merge_triangles(%struct.SkinOutput* %so, %struct.SkinModifierData* %30), !dbg !2591
  %bm20 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2592
  %31 = load %struct.BMesh*, %struct.BMesh** %bm20, align 8, !dbg !2592
  %32 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2593
  %33 = load i32, i32* %totvert.addr, align 4, !dbg !2594
  call void @skin_fix_hull_topology(%struct.BMesh* %31, %struct.SkinNode* %32, i32 %33), !dbg !2595
  %bm21 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2596
  %34 = load %struct.BMesh*, %struct.BMesh** %bm21, align 8, !dbg !2596
  %35 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2597
  %36 = load i32, i32* %totvert.addr, align 4, !dbg !2598
  %37 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2599
  call void @skin_smooth_hulls(%struct.BMesh* %34, %struct.SkinNode* %35, i32 %36, %struct.SkinModifierData* %37), !dbg !2600
  %38 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2601
  %39 = load i32, i32* %totvert.addr, align 4, !dbg !2602
  call void @skin_output_end_nodes(%struct.SkinOutput* %so, %struct.SkinNode* %38, i32 %39), !dbg !2603
  %40 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2604
  %41 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2605
  %42 = load i32, i32* %totedge.addr, align 4, !dbg !2606
  call void @skin_output_connections(%struct.SkinOutput* %so, %struct.SkinNode* %40, %struct.MEdge* %41, i32 %42), !dbg !2607
  %43 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !2608
  call void @hull_merge_triangles(%struct.SkinOutput* %so, %struct.SkinModifierData* %43), !dbg !2609
  %bm22 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %so, i32 0, i32 0, !dbg !2610
  %44 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !2610
  ret %struct.BMesh* %44, !dbg !2611
}

declare dso_local %struct.DerivedMesh* @CDDM_from_bmesh(%struct.BMesh*, i8 zeroext) #2

declare dso_local void @BM_mesh_free(%struct.BMesh*) #2

declare dso_local void @CDDM_calc_edges(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @skin_set_orig_indices(%struct.DerivedMesh* %dm) #0 !dbg !2612 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %orig = alloca i32*, align 8
  %totpoly = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2613, metadata !DIExpression()), !dbg !2614
  call void @llvm.dbg.declare(metadata i32** %orig, metadata !2615, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !2617, metadata !DIExpression()), !dbg !2618
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2619
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 27, !dbg !2620
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !2620
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2621
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !2619
  store i32 %call, i32* %totpoly, align 4, !dbg !2622
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2623
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 4, !dbg !2624
  %4 = load i32, i32* %totpoly, align 4, !dbg !2625
  %call1 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData, i32 7, i32 1, i8* null, i32 %4), !dbg !2626
  %5 = bitcast i8* %call1 to i32*, !dbg !2626
  store i32* %5, i32** %orig, align 8, !dbg !2627
  %6 = load i32*, i32** %orig, align 8, !dbg !2628
  %7 = load i32, i32* %totpoly, align 4, !dbg !2629
  call void @fill_vn_i(i32* %6, i32 %7, i32 -1), !dbg !2630
  ret void, !dbg !2631
}

declare dso_local %struct.BLI_Stack* @BLI_stack_new(i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_edge_mat([3 x float]* %mat, float* %a, float* %b) #0 !dbg !2632 {
entry:
  %mat.addr = alloca [3 x float]*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %z_up = alloca [3 x float], align 4
  %dot = alloca float, align 4
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2637, metadata !DIExpression()), !dbg !2638
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2639, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.declare(metadata [3 x float]* %z_up, metadata !2641, metadata !DIExpression()), !dbg !2643
  %0 = bitcast [3 x float]* %z_up to i8*, !dbg !2643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.calc_edge_mat.z_up to i8*), i64 12, i1 false), !dbg !2643
  call void @llvm.dbg.declare(metadata float* %dot, metadata !2644, metadata !DIExpression()), !dbg !2645
  %1 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2646
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %1, i64 0, !dbg !2646
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2646
  %2 = load float*, float** %b.addr, align 8, !dbg !2647
  %3 = load float*, float** %a.addr, align 8, !dbg !2648
  call void @sub_v3_v3v3(float* %arraydecay, float* %2, float* %3), !dbg !2649
  %4 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2650
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, !dbg !2650
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !2650
  %call = call float @normalize_v3(float* %arraydecay2), !dbg !2651
  %5 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2652
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 0, !dbg !2652
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !2652
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !2653
  %call6 = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !2654
  store float %call6, float* %dot, align 4, !dbg !2655
  %6 = load float, float* %dot, align 4, !dbg !2656
  %cmp = fcmp ogt float %6, 0xBFEFFFFFC0000000, !dbg !2658
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2659

land.lhs.true:                                    ; preds = %entry
  %7 = load float, float* %dot, align 4, !dbg !2660
  %cmp7 = fcmp olt float %7, 0x3FEFFFFFC0000000, !dbg !2661
  br i1 %cmp7, label %if.then, label %if.else, !dbg !2662

if.then:                                          ; preds = %land.lhs.true
  %8 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2663
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 1, !dbg !2663
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !2663
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !2665
  %9 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2666
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %9, i64 0, !dbg !2666
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !2666
  call void @cross_v3_v3v3(float* %arraydecay9, float* %arraydecay10, float* %arraydecay12), !dbg !2667
  %10 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2668
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 1, !dbg !2668
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !2668
  %call15 = call float @normalize_v3(float* %arraydecay14), !dbg !2669
  %11 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2670
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 2, !dbg !2670
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !2670
  %12 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2671
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 0, !dbg !2671
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !2671
  %13 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2672
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 1, !dbg !2672
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !2672
  call void @cross_v3_v3v3(float* %arraydecay17, float* %arraydecay19, float* %arraydecay21), !dbg !2673
  %14 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2674
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 2, !dbg !2674
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !2674
  %call24 = call float @normalize_v3(float* %arraydecay23), !dbg !2675
  br label %if.end, !dbg !2676

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2677
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 1, !dbg !2677
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !2677
  store float 1.000000e+00, float* %arrayidx26, align 4, !dbg !2679
  %16 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2680
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %16, i64 1, !dbg !2680
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 1, !dbg !2680
  store float 0.000000e+00, float* %arrayidx28, align 4, !dbg !2681
  %17 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2682
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 1, !dbg !2682
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 2, !dbg !2682
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !2683
  %18 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2684
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %18, i64 2, !dbg !2684
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !2684
  store float 0.000000e+00, float* %arrayidx32, align 4, !dbg !2685
  %19 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2686
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %19, i64 2, !dbg !2686
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 1, !dbg !2686
  store float 1.000000e+00, float* %arrayidx34, align 4, !dbg !2687
  %20 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !2688
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 2, !dbg !2688
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 2, !dbg !2688
  store float 0.000000e+00, float* %arrayidx36, align 4, !dbg !2689
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2690
}

declare dso_local i32 @BKE_mesh_edge_other_vert(%struct.MEdge*, i32) #2

declare dso_local void @BLI_stack_push(%struct.BLI_Stack*, i8*) #2

declare dso_local zeroext i8 @BLI_stack_is_empty(%struct.BLI_Stack*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @build_emats_stack(%struct.BLI_Stack* %stack, i32* %visited_e, %struct.EMat* %emat, %struct.MeshElemMap* %emap, %struct.MEdge* %medge, %struct.MVertSkin* %vs, %struct.MVert* %mvert) #0 !dbg !2691 {
entry:
  %stack.addr = alloca %struct.BLI_Stack*, align 8
  %visited_e.addr = alloca i32*, align 8
  %emat.addr = alloca %struct.EMat*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %vs.addr = alloca %struct.MVertSkin*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %stack_elem = alloca %struct.EdgeStackElem, align 4
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %v = alloca i32, align 4
  %parent_v = alloca i32, align 4
  %parent_is_branch = alloca i32, align 4
  store %struct.BLI_Stack* %stack, %struct.BLI_Stack** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BLI_Stack** %stack.addr, metadata !2694, metadata !DIExpression()), !dbg !2695
  store i32* %visited_e, i32** %visited_e.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %visited_e.addr, metadata !2696, metadata !DIExpression()), !dbg !2697
  store %struct.EMat* %emat, %struct.EMat** %emat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat.addr, metadata !2698, metadata !DIExpression()), !dbg !2699
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !2700, metadata !DIExpression()), !dbg !2701
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !2702, metadata !DIExpression()), !dbg !2703
  store %struct.MVertSkin* %vs, %struct.MVertSkin** %vs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %vs.addr, metadata !2704, metadata !DIExpression()), !dbg !2705
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2706, metadata !DIExpression()), !dbg !2707
  call void @llvm.dbg.declare(metadata %struct.EdgeStackElem* %stack_elem, metadata !2708, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !2710, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.declare(metadata float* %angle, metadata !2712, metadata !DIExpression()), !dbg !2713
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2714, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.declare(metadata i32* %e, metadata !2716, metadata !DIExpression()), !dbg !2717
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2718, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.declare(metadata i32* %parent_v, metadata !2720, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata i32* %parent_is_branch, metadata !2722, metadata !DIExpression()), !dbg !2723
  %0 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack.addr, align 8, !dbg !2724
  %1 = bitcast %struct.EdgeStackElem* %stack_elem to i8*, !dbg !2725
  call void @BLI_stack_pop(%struct.BLI_Stack* %0, i8* %1), !dbg !2726
  %parent_v1 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 1, !dbg !2727
  %2 = load i32, i32* %parent_v1, align 4, !dbg !2727
  store i32 %2, i32* %parent_v, align 4, !dbg !2728
  %e2 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 2, !dbg !2729
  %3 = load i32, i32* %e2, align 4, !dbg !2729
  store i32 %3, i32* %e, align 4, !dbg !2730
  %4 = load i32*, i32** %visited_e.addr, align 8, !dbg !2731
  %5 = load i32, i32* %e, align 4, !dbg !2731
  %shr = ashr i32 %5, 5, !dbg !2731
  %idxprom = sext i32 %shr to i64, !dbg !2731
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !2731
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2731
  %7 = load i32, i32* %e, align 4, !dbg !2731
  %and = and i32 %7, 31, !dbg !2731
  %shl = shl i32 1, %and, !dbg !2731
  %and3 = and i32 %6, %shl, !dbg !2731
  %tobool = icmp ne i32 %and3, 0, !dbg !2731
  br i1 %tobool, label %if.then, label %if.end, !dbg !2733

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !2734

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %e, align 4, !dbg !2735
  %and4 = and i32 %8, 31, !dbg !2735
  %shl5 = shl i32 1, %and4, !dbg !2735
  %9 = load i32*, i32** %visited_e.addr, align 8, !dbg !2735
  %10 = load i32, i32* %e, align 4, !dbg !2735
  %shr6 = ashr i32 %10, 5, !dbg !2735
  %idxprom7 = sext i32 %shr6 to i64, !dbg !2735
  %arrayidx8 = getelementptr inbounds i32, i32* %9, i64 %idxprom7, !dbg !2735
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !2735
  %or = or i32 %11, %shl5, !dbg !2735
  store i32 %or, i32* %arrayidx8, align 4, !dbg !2735
  %12 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2736
  %13 = load i32, i32* %parent_v, align 4, !dbg !2737
  %idxprom9 = sext i32 %13 to i64, !dbg !2736
  %arrayidx10 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %12, i64 %idxprom9, !dbg !2736
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx10, i32 0, i32 1, !dbg !2738
  %14 = load i32, i32* %count, align 8, !dbg !2738
  %cmp = icmp sgt i32 %14, 2, !dbg !2739
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2740

lor.rhs:                                          ; preds = %if.end
  %15 = load %struct.MVertSkin*, %struct.MVertSkin** %vs.addr, align 8, !dbg !2741
  %16 = load i32, i32* %parent_v, align 4, !dbg !2742
  %idxprom11 = sext i32 %16 to i64, !dbg !2741
  %arrayidx12 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %15, i64 %idxprom11, !dbg !2741
  %flag = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx12, i32 0, i32 1, !dbg !2743
  %17 = load i32, i32* %flag, align 4, !dbg !2743
  %and13 = and i32 %17, 1, !dbg !2744
  %tobool14 = icmp ne i32 %and13, 0, !dbg !2740
  br label %lor.end, !dbg !2740

lor.end:                                          ; preds = %lor.rhs, %if.end
  %18 = phi i1 [ true, %if.end ], [ %tobool14, %lor.rhs ]
  %lor.ext = zext i1 %18 to i32, !dbg !2740
  store i32 %lor.ext, i32* %parent_is_branch, align 4, !dbg !2745
  %19 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !2746
  %20 = load i32, i32* %e, align 4, !dbg !2747
  %idxprom15 = sext i32 %20 to i64, !dbg !2746
  %arrayidx16 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %19, i64 %idxprom15, !dbg !2746
  %21 = load i32, i32* %parent_v, align 4, !dbg !2748
  %call = call i32 @BKE_mesh_edge_other_vert(%struct.MEdge* %arrayidx16, i32 %21), !dbg !2749
  store i32 %call, i32* %v, align 4, !dbg !2750
  %22 = load i32, i32* %parent_v, align 4, !dbg !2751
  %23 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2752
  %24 = load i32, i32* %e, align 4, !dbg !2753
  %idxprom17 = sext i32 %24 to i64, !dbg !2752
  %arrayidx18 = getelementptr inbounds %struct.EMat, %struct.EMat* %23, i64 %idxprom17, !dbg !2752
  %origin = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx18, i32 0, i32 1, !dbg !2754
  store i32 %22, i32* %origin, align 4, !dbg !2755
  %25 = load i32, i32* %parent_is_branch, align 4, !dbg !2756
  %tobool19 = icmp ne i32 %25, 0, !dbg !2756
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !2758

if.then20:                                        ; preds = %lor.end
  %26 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2759
  %27 = load i32, i32* %e, align 4, !dbg !2761
  %idxprom21 = sext i32 %27 to i64, !dbg !2759
  %arrayidx22 = getelementptr inbounds %struct.EMat, %struct.EMat* %26, i64 %idxprom21, !dbg !2759
  %mat = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx22, i32 0, i32 0, !dbg !2762
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !2759
  %28 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2763
  %29 = load i32, i32* %parent_v, align 4, !dbg !2764
  %idxprom23 = sext i32 %29 to i64, !dbg !2763
  %arrayidx24 = getelementptr inbounds %struct.MVert, %struct.MVert* %28, i64 %idxprom23, !dbg !2763
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx24, i32 0, i32 0, !dbg !2765
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2763
  %30 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2766
  %31 = load i32, i32* %v, align 4, !dbg !2767
  %idxprom26 = sext i32 %31 to i64, !dbg !2766
  %arrayidx27 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom26, !dbg !2766
  %co28 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx27, i32 0, i32 0, !dbg !2768
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !2766
  call void @calc_edge_mat([3 x float]* %arraydecay, float* %arraydecay25, float* %arraydecay29), !dbg !2769
  br label %if.end87, !dbg !2770

if.else:                                          ; preds = %lor.end
  %32 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2771
  %33 = load i32, i32* %e, align 4, !dbg !2773
  %idxprom30 = sext i32 %33 to i64, !dbg !2771
  %arrayidx31 = getelementptr inbounds %struct.EMat, %struct.EMat* %32, i64 %idxprom30, !dbg !2771
  %mat32 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx31, i32 0, i32 0, !dbg !2774
  %arrayidx33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat32, i64 0, i64 0, !dbg !2771
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !2771
  %34 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2775
  %35 = load i32, i32* %v, align 4, !dbg !2776
  %idxprom35 = sext i32 %35 to i64, !dbg !2775
  %arrayidx36 = getelementptr inbounds %struct.MVert, %struct.MVert* %34, i64 %idxprom35, !dbg !2775
  %co37 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx36, i32 0, i32 0, !dbg !2777
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !2775
  %36 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2778
  %37 = load i32, i32* %parent_v, align 4, !dbg !2779
  %idxprom39 = sext i32 %37 to i64, !dbg !2778
  %arrayidx40 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idxprom39, !dbg !2778
  %co41 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx40, i32 0, i32 0, !dbg !2780
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !2778
  call void @sub_v3_v3v3(float* %arraydecay34, float* %arraydecay38, float* %arraydecay42), !dbg !2781
  %38 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2782
  %39 = load i32, i32* %e, align 4, !dbg !2783
  %idxprom43 = sext i32 %39 to i64, !dbg !2782
  %arrayidx44 = getelementptr inbounds %struct.EMat, %struct.EMat* %38, i64 %idxprom43, !dbg !2782
  %mat45 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx44, i32 0, i32 0, !dbg !2784
  %arrayidx46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat45, i64 0, i64 0, !dbg !2782
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !2782
  %call48 = call float @normalize_v3(float* %arraydecay47), !dbg !2785
  %mat49 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2786
  %arrayidx50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat49, i64 0, i64 0, !dbg !2787
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !2787
  %40 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2788
  %41 = load i32, i32* %e, align 4, !dbg !2789
  %idxprom52 = sext i32 %41 to i64, !dbg !2788
  %arrayidx53 = getelementptr inbounds %struct.EMat, %struct.EMat* %40, i64 %idxprom52, !dbg !2788
  %mat54 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx53, i32 0, i32 0, !dbg !2790
  %arrayidx55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat54, i64 0, i64 0, !dbg !2788
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !2788
  %call57 = call float @angle_normalized_v3v3(float* %arraydecay51, float* %arraydecay56), !dbg !2791
  store float %call57, float* %angle, align 4, !dbg !2792
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !2793
  %mat59 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2794
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat59, i64 0, i64 0, !dbg !2795
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !2795
  %42 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2796
  %43 = load i32, i32* %e, align 4, !dbg !2797
  %idxprom62 = sext i32 %43 to i64, !dbg !2796
  %arrayidx63 = getelementptr inbounds %struct.EMat, %struct.EMat* %42, i64 %idxprom62, !dbg !2796
  %mat64 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx63, i32 0, i32 0, !dbg !2798
  %arrayidx65 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat64, i64 0, i64 0, !dbg !2796
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !2796
  call void @cross_v3_v3v3(float* %arraydecay58, float* %arraydecay61, float* %arraydecay66), !dbg !2799
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !2800
  %call68 = call float @normalize_v3(float* %arraydecay67), !dbg !2801
  %44 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2802
  %45 = load i32, i32* %e, align 4, !dbg !2803
  %idxprom69 = sext i32 %45 to i64, !dbg !2802
  %arrayidx70 = getelementptr inbounds %struct.EMat, %struct.EMat* %44, i64 %idxprom69, !dbg !2802
  %mat71 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx70, i32 0, i32 0, !dbg !2804
  %arrayidx72 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat71, i64 0, i64 1, !dbg !2802
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !2802
  %mat74 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2805
  %arrayidx75 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat74, i64 0, i64 1, !dbg !2806
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx75, i64 0, i64 0, !dbg !2806
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !2807
  %46 = load float, float* %angle, align 4, !dbg !2808
  call void @rotate_normalized_v3_v3v3fl(float* %arraydecay73, float* %arraydecay76, float* %arraydecay77, float %46), !dbg !2809
  %47 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2810
  %48 = load i32, i32* %e, align 4, !dbg !2811
  %idxprom78 = sext i32 %48 to i64, !dbg !2810
  %arrayidx79 = getelementptr inbounds %struct.EMat, %struct.EMat* %47, i64 %idxprom78, !dbg !2810
  %mat80 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx79, i32 0, i32 0, !dbg !2812
  %arrayidx81 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat80, i64 0, i64 2, !dbg !2810
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 0, !dbg !2810
  %mat83 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2813
  %arrayidx84 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat83, i64 0, i64 2, !dbg !2814
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx84, i64 0, i64 0, !dbg !2814
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !2815
  %49 = load float, float* %angle, align 4, !dbg !2816
  call void @rotate_normalized_v3_v3v3fl(float* %arraydecay82, float* %arraydecay85, float* %arraydecay86, float %49), !dbg !2817
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then20
  store i32 0, i32* %i, align 4, !dbg !2818
  br label %for.cond, !dbg !2820

for.cond:                                         ; preds = %for.inc, %if.end87
  %50 = load i32, i32* %i, align 4, !dbg !2821
  %51 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2823
  %52 = load i32, i32* %v, align 4, !dbg !2824
  %idxprom88 = sext i32 %52 to i64, !dbg !2823
  %arrayidx89 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %51, i64 %idxprom88, !dbg !2823
  %count90 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx89, i32 0, i32 1, !dbg !2825
  %53 = load i32, i32* %count90, align 8, !dbg !2825
  %cmp91 = icmp slt i32 %50, %53, !dbg !2826
  br i1 %cmp91, label %for.body, label %for.end, !dbg !2827

for.body:                                         ; preds = %for.cond
  %mat92 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 0, !dbg !2828
  %arraydecay93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat92, i64 0, i64 0, !dbg !2830
  %54 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !2831
  %55 = load i32, i32* %e, align 4, !dbg !2832
  %idxprom94 = sext i32 %55 to i64, !dbg !2831
  %arrayidx95 = getelementptr inbounds %struct.EMat, %struct.EMat* %54, i64 %idxprom94, !dbg !2831
  %mat96 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx95, i32 0, i32 0, !dbg !2833
  %arraydecay97 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat96, i64 0, i64 0, !dbg !2831
  call void @copy_m3_m3([3 x float]* %arraydecay93, [3 x float]* %arraydecay97), !dbg !2834
  %56 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2835
  %57 = load i32, i32* %v, align 4, !dbg !2836
  %idxprom98 = sext i32 %57 to i64, !dbg !2835
  %arrayidx99 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %56, i64 %idxprom98, !dbg !2835
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx99, i32 0, i32 0, !dbg !2837
  %58 = load i32*, i32** %indices, align 8, !dbg !2837
  %59 = load i32, i32* %i, align 4, !dbg !2838
  %idxprom100 = sext i32 %59 to i64, !dbg !2835
  %arrayidx101 = getelementptr inbounds i32, i32* %58, i64 %idxprom100, !dbg !2835
  %60 = load i32, i32* %arrayidx101, align 4, !dbg !2835
  %e102 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 2, !dbg !2839
  store i32 %60, i32* %e102, align 4, !dbg !2840
  %61 = load i32, i32* %v, align 4, !dbg !2841
  %parent_v103 = getelementptr inbounds %struct.EdgeStackElem, %struct.EdgeStackElem* %stack_elem, i32 0, i32 1, !dbg !2842
  store i32 %61, i32* %parent_v103, align 4, !dbg !2843
  %62 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack.addr, align 8, !dbg !2844
  %63 = bitcast %struct.EdgeStackElem* %stack_elem to i8*, !dbg !2845
  call void @BLI_stack_push(%struct.BLI_Stack* %62, i8* %63), !dbg !2846
  br label %for.inc, !dbg !2847

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !2848
  %inc = add nsw i32 %64, 1, !dbg !2848
  store i32 %inc, i32* %i, align 4, !dbg !2848
  br label %for.cond, !dbg !2849, !llvm.loop !2850

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !2852
}

declare dso_local void @BLI_stack_free(%struct.BLI_Stack*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !2853 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !2856, metadata !DIExpression()), !dbg !2857
  %0 = load float*, float** %n.addr, align 8, !dbg !2858
  %1 = load float*, float** %n.addr, align 8, !dbg !2859
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !2860
  ret float %call, !dbg !2861
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !2862 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2863, metadata !DIExpression()), !dbg !2864
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2865, metadata !DIExpression()), !dbg !2866
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2867, metadata !DIExpression()), !dbg !2868
  %0 = load float*, float** %a.addr, align 8, !dbg !2869
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !2869
  %1 = load float, float* %arrayidx, align 4, !dbg !2869
  %2 = load float*, float** %b.addr, align 8, !dbg !2870
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !2870
  %3 = load float, float* %arrayidx1, align 4, !dbg !2870
  %mul = fmul float %1, %3, !dbg !2871
  %4 = load float*, float** %a.addr, align 8, !dbg !2872
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !2872
  %5 = load float, float* %arrayidx2, align 4, !dbg !2872
  %6 = load float*, float** %b.addr, align 8, !dbg !2873
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2873
  %7 = load float, float* %arrayidx3, align 4, !dbg !2873
  %mul4 = fmul float %5, %7, !dbg !2874
  %sub = fsub float %mul, %mul4, !dbg !2875
  %8 = load float*, float** %r.addr, align 8, !dbg !2876
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !2876
  store float %sub, float* %arrayidx5, align 4, !dbg !2877
  %9 = load float*, float** %a.addr, align 8, !dbg !2878
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !2878
  %10 = load float, float* %arrayidx6, align 4, !dbg !2878
  %11 = load float*, float** %b.addr, align 8, !dbg !2879
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !2879
  %12 = load float, float* %arrayidx7, align 4, !dbg !2879
  %mul8 = fmul float %10, %12, !dbg !2880
  %13 = load float*, float** %a.addr, align 8, !dbg !2881
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !2881
  %14 = load float, float* %arrayidx9, align 4, !dbg !2881
  %15 = load float*, float** %b.addr, align 8, !dbg !2882
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !2882
  %16 = load float, float* %arrayidx10, align 4, !dbg !2882
  %mul11 = fmul float %14, %16, !dbg !2883
  %sub12 = fsub float %mul8, %mul11, !dbg !2884
  %17 = load float*, float** %r.addr, align 8, !dbg !2885
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !2885
  store float %sub12, float* %arrayidx13, align 4, !dbg !2886
  %18 = load float*, float** %a.addr, align 8, !dbg !2887
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !2887
  %19 = load float, float* %arrayidx14, align 4, !dbg !2887
  %20 = load float*, float** %b.addr, align 8, !dbg !2888
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !2888
  %21 = load float, float* %arrayidx15, align 4, !dbg !2888
  %mul16 = fmul float %19, %21, !dbg !2889
  %22 = load float*, float** %a.addr, align 8, !dbg !2890
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !2890
  %23 = load float, float* %arrayidx17, align 4, !dbg !2890
  %24 = load float*, float** %b.addr, align 8, !dbg !2891
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !2891
  %25 = load float, float* %arrayidx18, align 4, !dbg !2891
  %mul19 = fmul float %23, %25, !dbg !2892
  %sub20 = fsub float %mul16, %mul19, !dbg !2893
  %26 = load float*, float** %r.addr, align 8, !dbg !2894
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !2894
  store float %sub20, float* %arrayidx21, align 4, !dbg !2895
  ret void, !dbg !2896
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !2897 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2900, metadata !DIExpression()), !dbg !2901
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2902, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.declare(metadata float* %d, metadata !2904, metadata !DIExpression()), !dbg !2905
  %0 = load float*, float** %a.addr, align 8, !dbg !2906
  %1 = load float*, float** %a.addr, align 8, !dbg !2907
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !2908
  store float %call, float* %d, align 4, !dbg !2905
  %2 = load float, float* %d, align 4, !dbg !2909
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !2911
  br i1 %cmp, label %if.then, label %if.else, !dbg !2912

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !2913
  %call1 = call float @sqrtf(float %3) #5, !dbg !2915
  store float %call1, float* %d, align 4, !dbg !2916
  %4 = load float*, float** %r.addr, align 8, !dbg !2917
  %5 = load float*, float** %a.addr, align 8, !dbg !2918
  %6 = load float, float* %d, align 4, !dbg !2919
  %div = fdiv float 1.000000e+00, %6, !dbg !2920
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !2921
  br label %if.end, !dbg !2922

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !2923
  call void @zero_v3(float* %7), !dbg !2925
  store float 0.000000e+00, float* %d, align 4, !dbg !2926
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !2927
  ret float %8, !dbg !2928
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !2929 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2932, metadata !DIExpression()), !dbg !2933
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2934, metadata !DIExpression()), !dbg !2935
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !2936, metadata !DIExpression()), !dbg !2937
  %0 = load float*, float** %a.addr, align 8, !dbg !2938
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2938
  %1 = load float, float* %arrayidx, align 4, !dbg !2938
  %2 = load float, float* %f.addr, align 4, !dbg !2939
  %mul = fmul float %1, %2, !dbg !2940
  %3 = load float*, float** %r.addr, align 8, !dbg !2941
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !2941
  store float %mul, float* %arrayidx1, align 4, !dbg !2942
  %4 = load float*, float** %a.addr, align 8, !dbg !2943
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2943
  %5 = load float, float* %arrayidx2, align 4, !dbg !2943
  %6 = load float, float* %f.addr, align 4, !dbg !2944
  %mul3 = fmul float %5, %6, !dbg !2945
  %7 = load float*, float** %r.addr, align 8, !dbg !2946
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !2946
  store float %mul3, float* %arrayidx4, align 4, !dbg !2947
  %8 = load float*, float** %a.addr, align 8, !dbg !2948
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2948
  %9 = load float, float* %arrayidx5, align 4, !dbg !2948
  %10 = load float, float* %f.addr, align 4, !dbg !2949
  %mul6 = fmul float %9, %10, !dbg !2950
  %11 = load float*, float** %r.addr, align 8, !dbg !2951
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !2951
  store float %mul6, float* %arrayidx7, align 4, !dbg !2952
  ret void, !dbg !2953
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !2954 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2957, metadata !DIExpression()), !dbg !2958
  %0 = load float*, float** %r.addr, align 8, !dbg !2959
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2959
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !2960
  %1 = load float*, float** %r.addr, align 8, !dbg !2961
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !2961
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !2962
  %2 = load float*, float** %r.addr, align 8, !dbg !2963
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !2963
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !2964
  ret void, !dbg !2965
}

declare dso_local void @BLI_stack_pop(%struct.BLI_Stack*, i8*) #2

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

declare dso_local void @rotate_normalized_v3_v3v3fl(float*, float*, float*, float) #2

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @end_node_frames(i32 %v, %struct.SkinNode* %skin_nodes, %struct.MVert* %mvert, %struct.MVertSkin* %nodes, %struct.MeshElemMap* %emap, %struct.EMat* %emat) #0 !dbg !2966 {
entry:
  %v.addr = alloca i32, align 4
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %nodes.addr = alloca %struct.MVertSkin*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %emat.addr = alloca %struct.EMat*, align 8
  %rad = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %avg = alloca float, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !2969, metadata !DIExpression()), !dbg !2970
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !2971, metadata !DIExpression()), !dbg !2972
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2973, metadata !DIExpression()), !dbg !2974
  store %struct.MVertSkin* %nodes, %struct.MVertSkin** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %nodes.addr, metadata !2975, metadata !DIExpression()), !dbg !2976
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  store %struct.EMat* %emat, %struct.EMat** %emat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat.addr, metadata !2979, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata float** %rad, metadata !2981, metadata !DIExpression()), !dbg !2982
  %0 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !2983
  %1 = load i32, i32* %v.addr, align 4, !dbg !2984
  %idxprom = sext i32 %1 to i64, !dbg !2983
  %arrayidx = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %0, i64 %idxprom, !dbg !2983
  %radius = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx, i32 0, i32 0, !dbg !2985
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %radius, i64 0, i64 0, !dbg !2983
  store float* %arraydecay, float** %rad, align 8, !dbg !2982
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !2986, metadata !DIExpression()), !dbg !2987
  %2 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !2988
  %3 = load i32, i32* %v.addr, align 4, !dbg !2990
  %idxprom1 = sext i32 %3 to i64, !dbg !2988
  %arrayidx2 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %2, i64 %idxprom1, !dbg !2988
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx2, i32 0, i32 1, !dbg !2991
  %4 = load i32, i32* %count, align 8, !dbg !2991
  %cmp = icmp eq i32 %4, 0, !dbg !2992
  br i1 %cmp, label %if.then, label %if.else, !dbg !2993

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %avg, metadata !2994, metadata !DIExpression()), !dbg !2996
  %5 = load float*, float** %rad, align 8, !dbg !2997
  %call = call float @half_v2(float* %5), !dbg !2998
  store float %call, float* %avg, align 4, !dbg !2996
  %6 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !2999
  %7 = load i32, i32* %v.addr, align 4, !dbg !3000
  %idxprom3 = sext i32 %7 to i64, !dbg !2999
  %arrayidx4 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %6, i64 %idxprom3, !dbg !2999
  call void @node_frames_init(%struct.SkinNode* %arrayidx4, i32 2), !dbg !3001
  %8 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3002
  %9 = load i32, i32* %v.addr, align 4, !dbg !3003
  %idxprom5 = sext i32 %9 to i64, !dbg !3002
  %arrayidx6 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %8, i64 %idxprom5, !dbg !3002
  %flag = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx6, i32 0, i32 2, !dbg !3004
  %10 = load i32, i32* %flag, align 4, !dbg !3005
  %or = or i32 %10, 3, !dbg !3005
  store i32 %or, i32* %flag, align 4, !dbg !3005
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3006
  call void @zero_m3([3 x float]* %arraydecay7), !dbg !3007
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 2, !dbg !3008
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 1, !dbg !3008
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !3009
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 1, !dbg !3010
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !3010
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !3011
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3012
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 2, !dbg !3012
  store float 1.000000e+00, float* %arrayidx13, align 8, !dbg !3013
  %11 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3014
  %12 = load i32, i32* %v.addr, align 4, !dbg !3015
  %idxprom14 = sext i32 %12 to i64, !dbg !3014
  %arrayidx15 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %11, i64 %idxprom14, !dbg !3014
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx15, i32 0, i32 0, !dbg !3016
  %arrayidx16 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 0, !dbg !3014
  %13 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3017
  %14 = load i32, i32* %v.addr, align 4, !dbg !3018
  %idxprom17 = sext i32 %14 to i64, !dbg !3017
  %arrayidx18 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom17, !dbg !3017
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx18, i32 0, i32 0, !dbg !3019
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3017
  %15 = load float*, float** %rad, align 8, !dbg !3020
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3021
  %16 = load float, float* %avg, align 4, !dbg !3022
  call void @create_frame(%struct.Frame* %arrayidx16, float* %arraydecay19, float* %15, [3 x float]* %arraydecay20, float %16), !dbg !3023
  %17 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3024
  %18 = load i32, i32* %v.addr, align 4, !dbg !3025
  %idxprom21 = sext i32 %18 to i64, !dbg !3024
  %arrayidx22 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %17, i64 %idxprom21, !dbg !3024
  %frames23 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx22, i32 0, i32 0, !dbg !3026
  %arrayidx24 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames23, i64 0, i64 1, !dbg !3024
  %19 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3027
  %20 = load i32, i32* %v.addr, align 4, !dbg !3028
  %idxprom25 = sext i32 %20 to i64, !dbg !3027
  %arrayidx26 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom25, !dbg !3027
  %co27 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx26, i32 0, i32 0, !dbg !3029
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !3027
  %21 = load float*, float** %rad, align 8, !dbg !3030
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3031
  %22 = load float, float* %avg, align 4, !dbg !3032
  %fneg = fneg float %22, !dbg !3033
  call void @create_frame(%struct.Frame* %arrayidx24, float* %arraydecay28, float* %21, [3 x float]* %arraydecay29, float %fneg), !dbg !3034
  br label %if.end63, !dbg !3035

if.else:                                          ; preds = %entry
  %23 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3036
  %24 = load i32, i32* %v.addr, align 4, !dbg !3038
  %idxprom30 = sext i32 %24 to i64, !dbg !3036
  %arrayidx31 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %23, i64 %idxprom30, !dbg !3036
  call void @node_frames_init(%struct.SkinNode* %arrayidx31, i32 1), !dbg !3039
  %25 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3040
  %26 = load i32, i32* %v.addr, align 4, !dbg !3041
  %idxprom32 = sext i32 %26 to i64, !dbg !3040
  %arrayidx33 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %25, i64 %idxprom32, !dbg !3040
  %flag34 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx33, i32 0, i32 2, !dbg !3042
  %27 = load i32, i32* %flag34, align 4, !dbg !3043
  %or35 = or i32 %27, 1, !dbg !3043
  store i32 %or35, i32* %flag34, align 4, !dbg !3043
  %arraydecay36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3044
  %28 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3045
  %29 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3046
  %30 = load i32, i32* %v.addr, align 4, !dbg !3047
  %idxprom37 = sext i32 %30 to i64, !dbg !3046
  %arrayidx38 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %29, i64 %idxprom37, !dbg !3046
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx38, i32 0, i32 0, !dbg !3048
  %31 = load i32*, i32** %indices, align 8, !dbg !3048
  %arrayidx39 = getelementptr inbounds i32, i32* %31, i64 0, !dbg !3046
  %32 = load i32, i32* %arrayidx39, align 4, !dbg !3046
  %idxprom40 = sext i32 %32 to i64, !dbg !3045
  %arrayidx41 = getelementptr inbounds %struct.EMat, %struct.EMat* %28, i64 %idxprom40, !dbg !3045
  %mat42 = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx41, i32 0, i32 0, !dbg !3049
  %arraydecay43 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat42, i64 0, i64 0, !dbg !3045
  call void @copy_m3_m3([3 x float]* %arraydecay36, [3 x float]* %arraydecay43), !dbg !3050
  %33 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3051
  %34 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3053
  %35 = load i32, i32* %v.addr, align 4, !dbg !3054
  %idxprom44 = sext i32 %35 to i64, !dbg !3053
  %arrayidx45 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %34, i64 %idxprom44, !dbg !3053
  %indices46 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx45, i32 0, i32 0, !dbg !3055
  %36 = load i32*, i32** %indices46, align 8, !dbg !3055
  %arrayidx47 = getelementptr inbounds i32, i32* %36, i64 0, !dbg !3053
  %37 = load i32, i32* %arrayidx47, align 4, !dbg !3053
  %idxprom48 = sext i32 %37 to i64, !dbg !3051
  %arrayidx49 = getelementptr inbounds %struct.EMat, %struct.EMat* %33, i64 %idxprom48, !dbg !3051
  %origin = getelementptr inbounds %struct.EMat, %struct.EMat* %arrayidx49, i32 0, i32 1, !dbg !3056
  %38 = load i32, i32* %origin, align 4, !dbg !3056
  %39 = load i32, i32* %v.addr, align 4, !dbg !3057
  %cmp50 = icmp ne i32 %38, %39, !dbg !3058
  br i1 %cmp50, label %if.then51, label %if.end, !dbg !3059

if.then51:                                        ; preds = %if.else
  %arrayidx52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3060
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !3060
  call void @negate_v3(float* %arraydecay53), !dbg !3061
  br label %if.end, !dbg !3061

if.end:                                           ; preds = %if.then51, %if.else
  %40 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3062
  %41 = load i32, i32* %v.addr, align 4, !dbg !3063
  %idxprom54 = sext i32 %41 to i64, !dbg !3062
  %arrayidx55 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %40, i64 %idxprom54, !dbg !3062
  %frames56 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx55, i32 0, i32 0, !dbg !3064
  %arrayidx57 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames56, i64 0, i64 0, !dbg !3062
  %42 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3065
  %43 = load i32, i32* %v.addr, align 4, !dbg !3066
  %idxprom58 = sext i32 %43 to i64, !dbg !3065
  %arrayidx59 = getelementptr inbounds %struct.MVert, %struct.MVert* %42, i64 %idxprom58, !dbg !3065
  %co60 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx59, i32 0, i32 0, !dbg !3067
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !3065
  %44 = load float*, float** %rad, align 8, !dbg !3068
  %arraydecay62 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3069
  call void @create_frame(%struct.Frame* %arrayidx57, float* %arraydecay61, float* %44, [3 x float]* %arraydecay62, float 0.000000e+00), !dbg !3070
  br label %if.end63

if.end63:                                         ; preds = %if.end, %if.then
  %45 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !3071
  %46 = load i32, i32* %v.addr, align 4, !dbg !3073
  %idxprom64 = sext i32 %46 to i64, !dbg !3071
  %arrayidx65 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %45, i64 %idxprom64, !dbg !3071
  %flag66 = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx65, i32 0, i32 1, !dbg !3074
  %47 = load i32, i32* %flag66, align 4, !dbg !3074
  %and = and i32 %47, 1, !dbg !3075
  %tobool = icmp ne i32 %and, 0, !dbg !3075
  br i1 %tobool, label %if.then67, label %if.end72, !dbg !3076

if.then67:                                        ; preds = %if.end63
  %48 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3077
  %49 = load i32, i32* %v.addr, align 4, !dbg !3078
  %idxprom68 = sext i32 %49 to i64, !dbg !3077
  %arrayidx69 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %48, i64 %idxprom68, !dbg !3077
  %flag70 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx69, i32 0, i32 2, !dbg !3079
  %50 = load i32, i32* %flag70, align 4, !dbg !3080
  %or71 = or i32 %50, 8, !dbg !3080
  store i32 %or71, i32* %flag70, align 4, !dbg !3080
  br label %if.end72, !dbg !3077

if.end72:                                         ; preds = %if.then67, %if.end63
  ret void, !dbg !3081
}

; Function Attrs: noinline nounwind uwtable
define internal void @connection_node_frames(i32 %v, %struct.SkinNode* %skin_nodes, %struct.MVert* %mvert, %struct.MVertSkin* %nodes, %struct.MeshElemMap* %emap, %struct.EMat* %emat) #0 !dbg !3082 {
entry:
  %v.addr = alloca i32, align 4
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %nodes.addr = alloca %struct.MVertSkin*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %emat.addr = alloca %struct.EMat*, align 8
  %rad = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %e1 = alloca %struct.EMat*, align 8
  %e2 = alloca %struct.EMat*, align 8
  %avg = alloca float, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !3083, metadata !DIExpression()), !dbg !3084
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !3085, metadata !DIExpression()), !dbg !3086
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !3087, metadata !DIExpression()), !dbg !3088
  store %struct.MVertSkin* %nodes, %struct.MVertSkin** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVertSkin** %nodes.addr, metadata !3089, metadata !DIExpression()), !dbg !3090
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !3091, metadata !DIExpression()), !dbg !3092
  store %struct.EMat* %emat, %struct.EMat** %emat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat.addr, metadata !3093, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.declare(metadata float** %rad, metadata !3095, metadata !DIExpression()), !dbg !3096
  %0 = load %struct.MVertSkin*, %struct.MVertSkin** %nodes.addr, align 8, !dbg !3097
  %1 = load i32, i32* %v.addr, align 4, !dbg !3098
  %idxprom = sext i32 %1 to i64, !dbg !3097
  %arrayidx = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %0, i64 %idxprom, !dbg !3097
  %radius = getelementptr inbounds %struct.MVertSkin, %struct.MVertSkin* %arrayidx, i32 0, i32 0, !dbg !3099
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %radius, i64 0, i64 0, !dbg !3097
  store float* %arraydecay, float** %rad, align 8, !dbg !3096
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !3100, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata %struct.EMat** %e1, metadata !3102, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata %struct.EMat** %e2, metadata !3104, metadata !DIExpression()), !dbg !3105
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3106
  %2 = load i32, i32* %v.addr, align 4, !dbg !3108
  %3 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3109
  %4 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3110
  %call = call i32 @connection_node_mat([3 x float]* %arraydecay1, i32 %2, %struct.MeshElemMap* %3, %struct.EMat* %4), !dbg !3111
  %tobool = icmp ne i32 %call, 0, !dbg !3111
  br i1 %tobool, label %if.then, label %if.end64, !dbg !3112

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %avg, metadata !3113, metadata !DIExpression()), !dbg !3115
  %5 = load float*, float** %rad, align 8, !dbg !3116
  %call2 = call float @half_v2(float* %5), !dbg !3117
  store float %call2, float* %avg, align 4, !dbg !3115
  %6 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3118
  %7 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3119
  %8 = load i32, i32* %v.addr, align 4, !dbg !3120
  %idxprom3 = sext i32 %8 to i64, !dbg !3119
  %arrayidx4 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %7, i64 %idxprom3, !dbg !3119
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx4, i32 0, i32 0, !dbg !3121
  %9 = load i32*, i32** %indices, align 8, !dbg !3121
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !3119
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !3119
  %idxprom6 = sext i32 %10 to i64, !dbg !3118
  %arrayidx7 = getelementptr inbounds %struct.EMat, %struct.EMat* %6, i64 %idxprom6, !dbg !3118
  store %struct.EMat* %arrayidx7, %struct.EMat** %e1, align 8, !dbg !3122
  %11 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3123
  %12 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3124
  %13 = load i32, i32* %v.addr, align 4, !dbg !3125
  %idxprom8 = sext i32 %13 to i64, !dbg !3124
  %arrayidx9 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %12, i64 %idxprom8, !dbg !3124
  %indices10 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx9, i32 0, i32 0, !dbg !3126
  %14 = load i32*, i32** %indices10, align 8, !dbg !3126
  %arrayidx11 = getelementptr inbounds i32, i32* %14, i64 1, !dbg !3124
  %15 = load i32, i32* %arrayidx11, align 4, !dbg !3124
  %idxprom12 = sext i32 %15 to i64, !dbg !3123
  %arrayidx13 = getelementptr inbounds %struct.EMat, %struct.EMat* %11, i64 %idxprom12, !dbg !3123
  store %struct.EMat* %arrayidx13, %struct.EMat** %e2, align 8, !dbg !3127
  %16 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3128
  %17 = load i32, i32* %v.addr, align 4, !dbg !3129
  %idxprom14 = sext i32 %17 to i64, !dbg !3128
  %arrayidx15 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %16, i64 %idxprom14, !dbg !3128
  call void @node_frames_init(%struct.SkinNode* %arrayidx15, i32 2), !dbg !3130
  %18 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3131
  %19 = load i32, i32* %v.addr, align 4, !dbg !3132
  %idxprom16 = sext i32 %19 to i64, !dbg !3131
  %arrayidx17 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %18, i64 %idxprom16, !dbg !3131
  %flag = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx17, i32 0, i32 2, !dbg !3133
  %20 = load i32, i32* %flag, align 4, !dbg !3134
  %or = or i32 %20, 4, !dbg !3134
  store i32 %or, i32* %flag, align 4, !dbg !3134
  %arraydecay18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3135
  %21 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3136
  %mat19 = getelementptr inbounds %struct.EMat, %struct.EMat* %21, i32 0, i32 0, !dbg !3137
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat19, i64 0, i64 0, !dbg !3136
  call void @copy_m3_m3([3 x float]* %arraydecay18, [3 x float]* %arraydecay20), !dbg !3138
  %22 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3139
  %origin = getelementptr inbounds %struct.EMat, %struct.EMat* %22, i32 0, i32 1, !dbg !3141
  %23 = load i32, i32* %origin, align 4, !dbg !3141
  %24 = load i32, i32* %v.addr, align 4, !dbg !3142
  %cmp = icmp ne i32 %23, %24, !dbg !3143
  br i1 %cmp, label %if.then21, label %if.end, !dbg !3144

if.then21:                                        ; preds = %if.then
  %arrayidx22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3145
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !3145
  call void @negate_v3(float* %arraydecay23), !dbg !3146
  br label %if.end, !dbg !3146

if.end:                                           ; preds = %if.then21, %if.then
  %25 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3147
  %26 = load i32, i32* %v.addr, align 4, !dbg !3148
  %idxprom24 = sext i32 %26 to i64, !dbg !3147
  %arrayidx25 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %25, i64 %idxprom24, !dbg !3147
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx25, i32 0, i32 0, !dbg !3149
  %arrayidx26 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 0, !dbg !3147
  %27 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3150
  %28 = load i32, i32* %v.addr, align 4, !dbg !3151
  %idxprom27 = sext i32 %28 to i64, !dbg !3150
  %arrayidx28 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom27, !dbg !3150
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx28, i32 0, i32 0, !dbg !3152
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3150
  %29 = load float*, float** %rad, align 8, !dbg !3153
  %arraydecay30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3154
  %30 = load float, float* %avg, align 4, !dbg !3155
  call void @create_frame(%struct.Frame* %arrayidx26, float* %arraydecay29, float* %29, [3 x float]* %arraydecay30, float %30), !dbg !3156
  %31 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3157
  %32 = load i32, i32* %v.addr, align 4, !dbg !3158
  %idxprom31 = sext i32 %32 to i64, !dbg !3157
  %arrayidx32 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %31, i64 %idxprom31, !dbg !3157
  %indices33 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx32, i32 0, i32 0, !dbg !3159
  %33 = load i32*, i32** %indices33, align 8, !dbg !3159
  %arrayidx34 = getelementptr inbounds i32, i32* %33, i64 0, !dbg !3157
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !3157
  %35 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3160
  %36 = load i32, i32* %v.addr, align 4, !dbg !3161
  %idxprom35 = sext i32 %36 to i64, !dbg !3160
  %arrayidx36 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %35, i64 %idxprom35, !dbg !3160
  %seam_edges = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx36, i32 0, i32 3, !dbg !3162
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %seam_edges, i64 0, i64 0, !dbg !3160
  store i32 %34, i32* %arrayidx37, align 8, !dbg !3163
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3164
  %37 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3165
  %mat39 = getelementptr inbounds %struct.EMat, %struct.EMat* %37, i32 0, i32 0, !dbg !3166
  %arraydecay40 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat39, i64 0, i64 0, !dbg !3165
  call void @copy_m3_m3([3 x float]* %arraydecay38, [3 x float]* %arraydecay40), !dbg !3167
  %38 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3168
  %origin41 = getelementptr inbounds %struct.EMat, %struct.EMat* %38, i32 0, i32 1, !dbg !3170
  %39 = load i32, i32* %origin41, align 4, !dbg !3170
  %40 = load i32, i32* %v.addr, align 4, !dbg !3171
  %cmp42 = icmp ne i32 %39, %40, !dbg !3172
  br i1 %cmp42, label %if.then43, label %if.end46, !dbg !3173

if.then43:                                        ; preds = %if.end
  %arrayidx44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3174
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !3174
  call void @negate_v3(float* %arraydecay45), !dbg !3175
  br label %if.end46, !dbg !3175

if.end46:                                         ; preds = %if.then43, %if.end
  %41 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3176
  %42 = load i32, i32* %v.addr, align 4, !dbg !3177
  %idxprom47 = sext i32 %42 to i64, !dbg !3176
  %arrayidx48 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %41, i64 %idxprom47, !dbg !3176
  %frames49 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx48, i32 0, i32 0, !dbg !3178
  %arrayidx50 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames49, i64 0, i64 1, !dbg !3176
  %43 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3179
  %44 = load i32, i32* %v.addr, align 4, !dbg !3180
  %idxprom51 = sext i32 %44 to i64, !dbg !3179
  %arrayidx52 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom51, !dbg !3179
  %co53 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx52, i32 0, i32 0, !dbg !3181
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 0, !dbg !3179
  %45 = load float*, float** %rad, align 8, !dbg !3182
  %arraydecay55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3183
  %46 = load float, float* %avg, align 4, !dbg !3184
  call void @create_frame(%struct.Frame* %arrayidx50, float* %arraydecay54, float* %45, [3 x float]* %arraydecay55, float %46), !dbg !3185
  %47 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3186
  %48 = load i32, i32* %v.addr, align 4, !dbg !3187
  %idxprom56 = sext i32 %48 to i64, !dbg !3186
  %arrayidx57 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %47, i64 %idxprom56, !dbg !3186
  %indices58 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx57, i32 0, i32 0, !dbg !3188
  %49 = load i32*, i32** %indices58, align 8, !dbg !3188
  %arrayidx59 = getelementptr inbounds i32, i32* %49, i64 1, !dbg !3186
  %50 = load i32, i32* %arrayidx59, align 4, !dbg !3186
  %51 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3189
  %52 = load i32, i32* %v.addr, align 4, !dbg !3190
  %idxprom60 = sext i32 %52 to i64, !dbg !3189
  %arrayidx61 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %51, i64 %idxprom60, !dbg !3189
  %seam_edges62 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx61, i32 0, i32 3, !dbg !3191
  %arrayidx63 = getelementptr inbounds [2 x i32], [2 x i32]* %seam_edges62, i64 0, i64 1, !dbg !3189
  store i32 %50, i32* %arrayidx63, align 4, !dbg !3192
  br label %return, !dbg !3193

if.end64:                                         ; preds = %entry
  %53 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3194
  %54 = load i32, i32* %v.addr, align 4, !dbg !3195
  %idxprom65 = sext i32 %54 to i64, !dbg !3194
  %arrayidx66 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %53, i64 %idxprom65, !dbg !3194
  call void @node_frames_init(%struct.SkinNode* %arrayidx66, i32 1), !dbg !3196
  %55 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3197
  %56 = load i32, i32* %v.addr, align 4, !dbg !3198
  %idxprom67 = sext i32 %56 to i64, !dbg !3197
  %arrayidx68 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %55, i64 %idxprom67, !dbg !3197
  %frames69 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx68, i32 0, i32 0, !dbg !3199
  %arrayidx70 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames69, i64 0, i64 0, !dbg !3197
  %57 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3200
  %58 = load i32, i32* %v.addr, align 4, !dbg !3201
  %idxprom71 = sext i32 %58 to i64, !dbg !3200
  %arrayidx72 = getelementptr inbounds %struct.MVert, %struct.MVert* %57, i64 %idxprom71, !dbg !3200
  %co73 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx72, i32 0, i32 0, !dbg !3202
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !3200
  %59 = load float*, float** %rad, align 8, !dbg !3203
  %arraydecay75 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !3204
  call void @create_frame(%struct.Frame* %arrayidx70, float* %arraydecay74, float* %59, [3 x float]* %arraydecay75, float 0.000000e+00), !dbg !3205
  br label %return, !dbg !3206

return:                                           ; preds = %if.end64, %if.end46
  ret void, !dbg !3206
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_frames_init(%struct.SkinNode* %nf, i32 %totframe) #0 !dbg !3207 {
entry:
  %nf.addr = alloca %struct.SkinNode*, align 8
  %totframe.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.SkinNode* %nf, %struct.SkinNode** %nf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %nf.addr, metadata !3210, metadata !DIExpression()), !dbg !3211
  store i32 %totframe, i32* %totframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totframe.addr, metadata !3212, metadata !DIExpression()), !dbg !3213
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3214, metadata !DIExpression()), !dbg !3215
  %0 = load i32, i32* %totframe.addr, align 4, !dbg !3216
  %1 = load %struct.SkinNode*, %struct.SkinNode** %nf.addr, align 8, !dbg !3217
  %totframe1 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %1, i32 0, i32 1, !dbg !3218
  store i32 %0, i32* %totframe1, align 8, !dbg !3219
  %2 = load %struct.SkinNode*, %struct.SkinNode** %nf.addr, align 8, !dbg !3220
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i32 0, i32 0, !dbg !3221
  %arraydecay = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 0, !dbg !3222
  %3 = bitcast %struct.Frame* %arraydecay to i8*, !dbg !3222
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 304, i1 false), !dbg !3222
  %4 = load %struct.SkinNode*, %struct.SkinNode** %nf.addr, align 8, !dbg !3223
  %flag = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %4, i32 0, i32 2, !dbg !3224
  store i32 0, i32* %flag, align 4, !dbg !3225
  store i32 0, i32* %i, align 4, !dbg !3226
  br label %for.cond, !dbg !3228

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3229
  %cmp = icmp slt i32 %5, 2, !dbg !3231
  br i1 %cmp, label %for.body, label %for.end, !dbg !3232

for.body:                                         ; preds = %for.cond
  %6 = load %struct.SkinNode*, %struct.SkinNode** %nf.addr, align 8, !dbg !3233
  %seam_edges = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %6, i32 0, i32 3, !dbg !3234
  %7 = load i32, i32* %i, align 4, !dbg !3235
  %idxprom = sext i32 %7 to i64, !dbg !3233
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %seam_edges, i64 0, i64 %idxprom, !dbg !3233
  store i32 -1, i32* %arrayidx, align 4, !dbg !3236
  br label %for.inc, !dbg !3233

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !3237
  %inc = add nsw i32 %8, 1, !dbg !3237
  store i32 %inc, i32* %i, align 4, !dbg !3237
  br label %for.cond, !dbg !3238, !llvm.loop !3239

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3241
}

declare dso_local void @zero_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @create_frame(%struct.Frame* %frame, float* %co, float* %radius, [3 x float]* %mat, float %offset) #0 !dbg !3242 {
entry:
  %frame.addr = alloca %struct.Frame*, align 8
  %co.addr = alloca float*, align 8
  %radius.addr = alloca float*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %offset.addr = alloca float, align 4
  %rx = alloca [3 x float], align 4
  %ry = alloca [3 x float], align 4
  %rz = alloca [3 x float], align 4
  %i = alloca i32, align 4
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !3246, metadata !DIExpression()), !dbg !3247
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !3248, metadata !DIExpression()), !dbg !3249
  store float* %radius, float** %radius.addr, align 8
  call void @llvm.dbg.declare(metadata float** %radius.addr, metadata !3250, metadata !DIExpression()), !dbg !3251
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !3252, metadata !DIExpression()), !dbg !3253
  store float %offset, float* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata float* %offset.addr, metadata !3254, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.declare(metadata [3 x float]* %rx, metadata !3256, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.declare(metadata [3 x float]* %ry, metadata !3258, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.declare(metadata [3 x float]* %rz, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3262, metadata !DIExpression()), !dbg !3263
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ry, i64 0, i64 0, !dbg !3264
  %0 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3265
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %0, i64 1, !dbg !3265
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3265
  %1 = load float*, float** %radius.addr, align 8, !dbg !3266
  %arrayidx2 = getelementptr inbounds float, float* %1, i64 0, !dbg !3266
  %2 = load float, float* %arrayidx2, align 4, !dbg !3266
  call void @mul_v3_v3fl(float* %arraydecay, float* %arraydecay1, float %2), !dbg !3267
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rz, i64 0, i64 0, !dbg !3268
  %3 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3269
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 2, !dbg !3269
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !3269
  %4 = load float*, float** %radius.addr, align 8, !dbg !3270
  %arrayidx6 = getelementptr inbounds float, float* %4, i64 1, !dbg !3270
  %5 = load float, float* %arrayidx6, align 4, !dbg !3270
  call void @mul_v3_v3fl(float* %arraydecay3, float* %arraydecay5, float %5), !dbg !3271
  %6 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3272
  %co7 = getelementptr inbounds %struct.Frame, %struct.Frame* %6, i32 0, i32 1, !dbg !3273
  %arrayidx8 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co7, i64 0, i64 3, !dbg !3272
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !3272
  %7 = load float*, float** %co.addr, align 8, !dbg !3274
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %ry, i64 0, i64 0, !dbg !3275
  call void @add_v3_v3v3(float* %arraydecay9, float* %7, float* %arraydecay10), !dbg !3276
  %8 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3277
  %co11 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i32 0, i32 1, !dbg !3278
  %arrayidx12 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co11, i64 0, i64 3, !dbg !3277
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !3277
  %9 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3279
  %co14 = getelementptr inbounds %struct.Frame, %struct.Frame* %9, i32 0, i32 1, !dbg !3280
  %arrayidx15 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co14, i64 0, i64 3, !dbg !3279
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !3279
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %rz, i64 0, i64 0, !dbg !3281
  call void @add_v3_v3v3(float* %arraydecay13, float* %arraydecay16, float* %arraydecay17), !dbg !3282
  %10 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3283
  %co18 = getelementptr inbounds %struct.Frame, %struct.Frame* %10, i32 0, i32 1, !dbg !3284
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co18, i64 0, i64 2, !dbg !3283
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !3283
  %11 = load float*, float** %co.addr, align 8, !dbg !3285
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %ry, i64 0, i64 0, !dbg !3286
  call void @sub_v3_v3v3(float* %arraydecay20, float* %11, float* %arraydecay21), !dbg !3287
  %12 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3288
  %co22 = getelementptr inbounds %struct.Frame, %struct.Frame* %12, i32 0, i32 1, !dbg !3289
  %arrayidx23 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co22, i64 0, i64 2, !dbg !3288
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !3288
  %13 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3290
  %co25 = getelementptr inbounds %struct.Frame, %struct.Frame* %13, i32 0, i32 1, !dbg !3291
  %arrayidx26 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co25, i64 0, i64 2, !dbg !3290
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !3290
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %rz, i64 0, i64 0, !dbg !3292
  call void @add_v3_v3v3(float* %arraydecay24, float* %arraydecay27, float* %arraydecay28), !dbg !3293
  %14 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3294
  %co29 = getelementptr inbounds %struct.Frame, %struct.Frame* %14, i32 0, i32 1, !dbg !3295
  %arrayidx30 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co29, i64 0, i64 1, !dbg !3294
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !3294
  %15 = load float*, float** %co.addr, align 8, !dbg !3296
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %ry, i64 0, i64 0, !dbg !3297
  call void @sub_v3_v3v3(float* %arraydecay31, float* %15, float* %arraydecay32), !dbg !3298
  %16 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3299
  %co33 = getelementptr inbounds %struct.Frame, %struct.Frame* %16, i32 0, i32 1, !dbg !3300
  %arrayidx34 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co33, i64 0, i64 1, !dbg !3299
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !3299
  %17 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3301
  %co36 = getelementptr inbounds %struct.Frame, %struct.Frame* %17, i32 0, i32 1, !dbg !3302
  %arrayidx37 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co36, i64 0, i64 1, !dbg !3301
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !3301
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %rz, i64 0, i64 0, !dbg !3303
  call void @sub_v3_v3v3(float* %arraydecay35, float* %arraydecay38, float* %arraydecay39), !dbg !3304
  %18 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3305
  %co40 = getelementptr inbounds %struct.Frame, %struct.Frame* %18, i32 0, i32 1, !dbg !3306
  %arrayidx41 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co40, i64 0, i64 0, !dbg !3305
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !3305
  %19 = load float*, float** %co.addr, align 8, !dbg !3307
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %ry, i64 0, i64 0, !dbg !3308
  call void @add_v3_v3v3(float* %arraydecay42, float* %19, float* %arraydecay43), !dbg !3309
  %20 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3310
  %co44 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i32 0, i32 1, !dbg !3311
  %arrayidx45 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co44, i64 0, i64 0, !dbg !3310
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !3310
  %21 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3312
  %co47 = getelementptr inbounds %struct.Frame, %struct.Frame* %21, i32 0, i32 1, !dbg !3313
  %arrayidx48 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co47, i64 0, i64 0, !dbg !3312
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !3312
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %rz, i64 0, i64 0, !dbg !3314
  call void @sub_v3_v3v3(float* %arraydecay46, float* %arraydecay49, float* %arraydecay50), !dbg !3315
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %rx, i64 0, i64 0, !dbg !3316
  %22 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3317
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %22, i64 0, !dbg !3317
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !3317
  %23 = load float, float* %offset.addr, align 4, !dbg !3318
  call void @mul_v3_v3fl(float* %arraydecay51, float* %arraydecay53, float %23), !dbg !3319
  store i32 0, i32* %i, align 4, !dbg !3320
  br label %for.cond, !dbg !3322

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !3323
  %cmp = icmp slt i32 %24, 4, !dbg !3325
  br i1 %cmp, label %for.body, label %for.end, !dbg !3326

for.body:                                         ; preds = %for.cond
  %25 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3327
  %co54 = getelementptr inbounds %struct.Frame, %struct.Frame* %25, i32 0, i32 1, !dbg !3328
  %26 = load i32, i32* %i, align 4, !dbg !3329
  %idxprom = sext i32 %26 to i64, !dbg !3327
  %arrayidx55 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co54, i64 0, i64 %idxprom, !dbg !3327
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !3327
  %27 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !3330
  %co57 = getelementptr inbounds %struct.Frame, %struct.Frame* %27, i32 0, i32 1, !dbg !3331
  %28 = load i32, i32* %i, align 4, !dbg !3332
  %idxprom58 = sext i32 %28 to i64, !dbg !3330
  %arrayidx59 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co57, i64 0, i64 %idxprom58, !dbg !3330
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !3330
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %rx, i64 0, i64 0, !dbg !3333
  call void @add_v3_v3v3(float* %arraydecay56, float* %arraydecay60, float* %arraydecay61), !dbg !3334
  br label %for.inc, !dbg !3334

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !3335
  %inc = add nsw i32 %29, 1, !dbg !3335
  store i32 %inc, i32* %i, align 4, !dbg !3335
  br label %for.cond, !dbg !3336, !llvm.loop !3337

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3339
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !3340 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3341, metadata !DIExpression()), !dbg !3342
  %0 = load float*, float** %r.addr, align 8, !dbg !3343
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3343
  %1 = load float, float* %arrayidx, align 4, !dbg !3343
  %fneg = fneg float %1, !dbg !3344
  %2 = load float*, float** %r.addr, align 8, !dbg !3345
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3345
  store float %fneg, float* %arrayidx1, align 4, !dbg !3346
  %3 = load float*, float** %r.addr, align 8, !dbg !3347
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3347
  %4 = load float, float* %arrayidx2, align 4, !dbg !3347
  %fneg3 = fneg float %4, !dbg !3348
  %5 = load float*, float** %r.addr, align 8, !dbg !3349
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !3349
  store float %fneg3, float* %arrayidx4, align 4, !dbg !3350
  %6 = load float*, float** %r.addr, align 8, !dbg !3351
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !3351
  %7 = load float, float* %arrayidx5, align 4, !dbg !3351
  %fneg6 = fneg float %7, !dbg !3352
  %8 = load float*, float** %r.addr, align 8, !dbg !3353
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !3353
  store float %fneg6, float* %arrayidx7, align 4, !dbg !3354
  ret void, !dbg !3355
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !3356 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3357, metadata !DIExpression()), !dbg !3358
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3359, metadata !DIExpression()), !dbg !3360
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3361, metadata !DIExpression()), !dbg !3362
  %0 = load float*, float** %a.addr, align 8, !dbg !3363
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3363
  %1 = load float, float* %arrayidx, align 4, !dbg !3363
  %2 = load float*, float** %b.addr, align 8, !dbg !3364
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3364
  %3 = load float, float* %arrayidx1, align 4, !dbg !3364
  %add = fadd float %1, %3, !dbg !3365
  %4 = load float*, float** %r.addr, align 8, !dbg !3366
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !3366
  store float %add, float* %arrayidx2, align 4, !dbg !3367
  %5 = load float*, float** %a.addr, align 8, !dbg !3368
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3368
  %6 = load float, float* %arrayidx3, align 4, !dbg !3368
  %7 = load float*, float** %b.addr, align 8, !dbg !3369
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !3369
  %8 = load float, float* %arrayidx4, align 4, !dbg !3369
  %add5 = fadd float %6, %8, !dbg !3370
  %9 = load float*, float** %r.addr, align 8, !dbg !3371
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !3371
  store float %add5, float* %arrayidx6, align 4, !dbg !3372
  %10 = load float*, float** %a.addr, align 8, !dbg !3373
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !3373
  %11 = load float, float* %arrayidx7, align 4, !dbg !3373
  %12 = load float*, float** %b.addr, align 8, !dbg !3374
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !3374
  %13 = load float, float* %arrayidx8, align 4, !dbg !3374
  %add9 = fadd float %11, %13, !dbg !3375
  %14 = load float*, float** %r.addr, align 8, !dbg !3376
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !3376
  store float %add9, float* %arrayidx10, align 4, !dbg !3377
  ret void, !dbg !3378
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @connection_node_mat([3 x float]* %mat, i32 %v, %struct.MeshElemMap* %emap, %struct.EMat* %emat) #0 !dbg !3379 {
entry:
  %retval = alloca i32, align 4
  %mat.addr = alloca [3 x float]*, align 8
  %v.addr = alloca i32, align 4
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %emat.addr = alloca %struct.EMat*, align 8
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %ine = alloca [3 x [3 x float]], align 16
  %oute = alloca [3 x [3 x float]], align 16
  %e1 = alloca %struct.EMat*, align 8
  %e2 = alloca %struct.EMat*, align 8
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !3382, metadata !DIExpression()), !dbg !3383
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !3384, metadata !DIExpression()), !dbg !3385
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !3386, metadata !DIExpression()), !dbg !3387
  store %struct.EMat* %emat, %struct.EMat** %emat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EMat** %emat.addr, metadata !3388, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !3390, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.declare(metadata float* %angle, metadata !3392, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %ine, metadata !3394, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %oute, metadata !3396, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.declare(metadata %struct.EMat** %e1, metadata !3398, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.declare(metadata %struct.EMat** %e2, metadata !3400, metadata !DIExpression()), !dbg !3401
  %0 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3402
  %1 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3403
  %2 = load i32, i32* %v.addr, align 4, !dbg !3404
  %idxprom = sext i32 %2 to i64, !dbg !3403
  %arrayidx = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %1, i64 %idxprom, !dbg !3403
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx, i32 0, i32 0, !dbg !3405
  %3 = load i32*, i32** %indices, align 8, !dbg !3405
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !3403
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !3403
  %idxprom2 = sext i32 %4 to i64, !dbg !3402
  %arrayidx3 = getelementptr inbounds %struct.EMat, %struct.EMat* %0, i64 %idxprom2, !dbg !3402
  store %struct.EMat* %arrayidx3, %struct.EMat** %e1, align 8, !dbg !3406
  %5 = load %struct.EMat*, %struct.EMat** %emat.addr, align 8, !dbg !3407
  %6 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3408
  %7 = load i32, i32* %v.addr, align 4, !dbg !3409
  %idxprom4 = sext i32 %7 to i64, !dbg !3408
  %arrayidx5 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %6, i64 %idxprom4, !dbg !3408
  %indices6 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx5, i32 0, i32 0, !dbg !3410
  %8 = load i32*, i32** %indices6, align 8, !dbg !3410
  %arrayidx7 = getelementptr inbounds i32, i32* %8, i64 1, !dbg !3408
  %9 = load i32, i32* %arrayidx7, align 4, !dbg !3408
  %idxprom8 = sext i32 %9 to i64, !dbg !3407
  %arrayidx9 = getelementptr inbounds %struct.EMat, %struct.EMat* %5, i64 %idxprom8, !dbg !3407
  store %struct.EMat* %arrayidx9, %struct.EMat** %e2, align 8, !dbg !3411
  %10 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3412
  %origin = getelementptr inbounds %struct.EMat, %struct.EMat* %10, i32 0, i32 1, !dbg !3414
  %11 = load i32, i32* %origin, align 4, !dbg !3414
  %12 = load i32, i32* %v.addr, align 4, !dbg !3415
  %cmp = icmp ne i32 %11, %12, !dbg !3416
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3417

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3418
  %origin10 = getelementptr inbounds %struct.EMat, %struct.EMat* %13, i32 0, i32 1, !dbg !3419
  %14 = load i32, i32* %origin10, align 4, !dbg !3419
  %15 = load i32, i32* %v.addr, align 4, !dbg !3420
  %cmp11 = icmp eq i32 %14, %15, !dbg !3421
  br i1 %cmp11, label %if.then, label %if.else, !dbg !3422

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 0, !dbg !3423
  %16 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3425
  %mat12 = getelementptr inbounds %struct.EMat, %struct.EMat* %16, i32 0, i32 0, !dbg !3426
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat12, i64 0, i64 0, !dbg !3425
  call void @copy_m3_m3([3 x float]* %arraydecay, [3 x float]* %arraydecay13), !dbg !3427
  %arraydecay14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %oute, i64 0, i64 0, !dbg !3428
  %17 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3429
  %mat15 = getelementptr inbounds %struct.EMat, %struct.EMat* %17, i32 0, i32 0, !dbg !3430
  %arraydecay16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat15, i64 0, i64 0, !dbg !3429
  call void @copy_m3_m3([3 x float]* %arraydecay14, [3 x float]* %arraydecay16), !dbg !3431
  br label %if.end30, !dbg !3432

if.else:                                          ; preds = %land.lhs.true, %entry
  %18 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3433
  %origin17 = getelementptr inbounds %struct.EMat, %struct.EMat* %18, i32 0, i32 1, !dbg !3435
  %19 = load i32, i32* %origin17, align 4, !dbg !3435
  %20 = load i32, i32* %v.addr, align 4, !dbg !3436
  %cmp18 = icmp eq i32 %19, %20, !dbg !3437
  br i1 %cmp18, label %land.lhs.true19, label %if.else29, !dbg !3438

land.lhs.true19:                                  ; preds = %if.else
  %21 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3439
  %origin20 = getelementptr inbounds %struct.EMat, %struct.EMat* %21, i32 0, i32 1, !dbg !3440
  %22 = load i32, i32* %origin20, align 4, !dbg !3440
  %23 = load i32, i32* %v.addr, align 4, !dbg !3441
  %cmp21 = icmp ne i32 %22, %23, !dbg !3442
  br i1 %cmp21, label %if.then22, label %if.else29, !dbg !3443

if.then22:                                        ; preds = %land.lhs.true19
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 0, !dbg !3444
  %24 = load %struct.EMat*, %struct.EMat** %e2, align 8, !dbg !3446
  %mat24 = getelementptr inbounds %struct.EMat, %struct.EMat* %24, i32 0, i32 0, !dbg !3447
  %arraydecay25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat24, i64 0, i64 0, !dbg !3446
  call void @copy_m3_m3([3 x float]* %arraydecay23, [3 x float]* %arraydecay25), !dbg !3448
  %arraydecay26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %oute, i64 0, i64 0, !dbg !3449
  %25 = load %struct.EMat*, %struct.EMat** %e1, align 8, !dbg !3450
  %mat27 = getelementptr inbounds %struct.EMat, %struct.EMat* %25, i32 0, i32 0, !dbg !3451
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat27, i64 0, i64 0, !dbg !3450
  call void @copy_m3_m3([3 x float]* %arraydecay26, [3 x float]* %arraydecay28), !dbg !3452
  br label %if.end, !dbg !3453

if.else29:                                        ; preds = %land.lhs.true19, %if.else
  store i32 1, i32* %retval, align 4, !dbg !3454
  br label %return, !dbg !3454

if.end:                                           ; preds = %if.then22
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  %arrayidx31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 0, !dbg !3455
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !3455
  %arrayidx33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %oute, i64 0, i64 0, !dbg !3456
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !3456
  %call = call float @angle_normalized_v3v3(float* %arraydecay32, float* %arraydecay34), !dbg !3457
  %div = fdiv float %call, 2.000000e+00, !dbg !3458
  store float %div, float* %angle, align 4, !dbg !3459
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !3460
  %arrayidx36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 0, !dbg !3461
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !3461
  %arrayidx38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %oute, i64 0, i64 0, !dbg !3462
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !3462
  call void @cross_v3_v3v3(float* %arraydecay35, float* %arraydecay37, float* %arraydecay39), !dbg !3463
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !3464
  %call41 = call float @normalize_v3(float* %arraydecay40), !dbg !3465
  %26 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3466
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 0, !dbg !3466
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !3466
  %arrayidx44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 0, !dbg !3467
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !3467
  call void @copy_v3_v3(float* %arraydecay43, float* %arraydecay45), !dbg !3468
  %27 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3469
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 1, !dbg !3469
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !3469
  %arrayidx48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 1, !dbg !3470
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !3470
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !3471
  %28 = load float, float* %angle, align 4, !dbg !3472
  call void @rotate_normalized_v3_v3v3fl(float* %arraydecay47, float* %arraydecay49, float* %arraydecay50, float %28), !dbg !3473
  %29 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3474
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 2, !dbg !3474
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx51, i64 0, i64 0, !dbg !3474
  %arrayidx53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %ine, i64 0, i64 2, !dbg !3475
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !3475
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !3476
  %30 = load float, float* %angle, align 4, !dbg !3477
  call void @rotate_normalized_v3_v3v3fl(float* %arraydecay52, float* %arraydecay54, float* %arraydecay55, float %30), !dbg !3478
  store i32 0, i32* %retval, align 4, !dbg !3479
  br label %return, !dbg !3479

return:                                           ; preds = %if.end30, %if.else29
  %31 = load i32, i32* %retval, align 4, !dbg !3480
  ret i32 %31, !dbg !3480
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3481 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3484, metadata !DIExpression()), !dbg !3485
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3486, metadata !DIExpression()), !dbg !3487
  %0 = load float*, float** %a.addr, align 8, !dbg !3488
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3488
  %1 = load float, float* %arrayidx, align 4, !dbg !3488
  %2 = load float*, float** %r.addr, align 8, !dbg !3489
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3489
  store float %1, float* %arrayidx1, align 4, !dbg !3490
  %3 = load float*, float** %a.addr, align 8, !dbg !3491
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3491
  %4 = load float, float* %arrayidx2, align 4, !dbg !3491
  %5 = load float*, float** %r.addr, align 8, !dbg !3492
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3492
  store float %4, float* %arrayidx3, align 4, !dbg !3493
  %6 = load float*, float** %a.addr, align 8, !dbg !3494
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3494
  %7 = load float, float* %arrayidx4, align 4, !dbg !3494
  %8 = load float*, float** %r.addr, align 8, !dbg !3495
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3495
  store float %7, float* %arrayidx5, align 4, !dbg !3496
  ret void, !dbg !3497
}

declare dso_local %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate*) #2

declare dso_local void @BM_mesh_elem_toolflags_ensure(%struct.BMesh*) #2

declare dso_local void @BMO_push(%struct.BMesh*, %struct.BMOperator*) #2

declare dso_local void @bmesh_edit_begin(%struct.BMesh*, i32) #2

declare dso_local void @BM_data_layer_add(%struct.BMesh*, %struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @skin_merge_close_frame_verts(%struct.SkinNode* %skin_nodes, i32 %totvert, %struct.MeshElemMap* %emap, %struct.MEdge* %medge) #0 !dbg !3498 {
entry:
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %hull_frames = alloca %struct.Frame**, align 8
  %v = alloca i32, align 4
  %tothullframe = alloca i32, align 4
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !3501, metadata !DIExpression()), !dbg !3502
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.declare(metadata %struct.Frame*** %hull_frames, metadata !3509, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3512, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.declare(metadata i32* %tothullframe, metadata !3514, metadata !DIExpression()), !dbg !3515
  store i32 0, i32* %v, align 4, !dbg !3516
  br label %for.cond, !dbg !3518

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %v, align 4, !dbg !3519
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !3521
  %cmp = icmp slt i32 %0, %1, !dbg !3522
  br i1 %cmp, label %for.body, label %for.end, !dbg !3523

for.body:                                         ; preds = %for.cond
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3524
  %3 = load i32, i32* %v, align 4, !dbg !3527
  %idxprom = sext i32 %3 to i64, !dbg !3524
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom, !dbg !3524
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx, i32 0, i32 1, !dbg !3528
  %4 = load i32, i32* %totframe, align 8, !dbg !3528
  %tobool = icmp ne i32 %4, 0, !dbg !3524
  br i1 %tobool, label %if.end, label %if.then, !dbg !3529

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %v, align 4, !dbg !3530
  %6 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3532
  %7 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3533
  %8 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !3534
  %call = call %struct.Frame** @collect_hull_frames(i32 %5, %struct.SkinNode* %6, %struct.MeshElemMap* %7, %struct.MEdge* %8, i32* %tothullframe), !dbg !3535
  store %struct.Frame** %call, %struct.Frame*** %hull_frames, align 8, !dbg !3536
  %9 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !3537
  %10 = load i32, i32* %tothullframe, align 4, !dbg !3538
  call void @merge_frame_corners(%struct.Frame** %9, i32 %10), !dbg !3539
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3540
  %12 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !3541
  %13 = bitcast %struct.Frame** %12 to i8*, !dbg !3541
  call void %11(i8* %13), !dbg !3540
  br label %if.end, !dbg !3542

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3543

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %v, align 4, !dbg !3544
  %inc = add nsw i32 %14, 1, !dbg !3544
  store i32 %inc, i32* %v, align 4, !dbg !3544
  br label %for.cond, !dbg !3545, !llvm.loop !3546

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3548
}

; Function Attrs: noinline nounwind uwtable
define internal void @output_frames(%struct.BMesh* %bm, %struct.SkinNode* %sn, %struct.MDeformVert* %input_dvert) #0 !dbg !3549 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %sn.addr = alloca %struct.SkinNode*, align 8
  %input_dvert.addr = alloca %struct.MDeformVert*, align 8
  %f = alloca %struct.Frame*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %v = alloca %struct.BMVert*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store %struct.SkinNode* %sn, %struct.SkinNode** %sn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %sn.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store %struct.MDeformVert* %input_dvert, %struct.MDeformVert** %input_dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %input_dvert.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata %struct.Frame** %f, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3562, metadata !DIExpression()), !dbg !3563
  store i32 0, i32* %i, align 4, !dbg !3564
  br label %for.cond, !dbg !3566

for.cond:                                         ; preds = %for.inc14, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3567
  %1 = load %struct.SkinNode*, %struct.SkinNode** %sn.addr, align 8, !dbg !3569
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %1, i32 0, i32 1, !dbg !3570
  %2 = load i32, i32* %totframe, align 8, !dbg !3570
  %cmp = icmp slt i32 %0, %2, !dbg !3571
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3572

for.body:                                         ; preds = %for.cond
  %3 = load %struct.SkinNode*, %struct.SkinNode** %sn.addr, align 8, !dbg !3573
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %3, i32 0, i32 0, !dbg !3575
  %4 = load i32, i32* %i, align 4, !dbg !3576
  %idxprom = sext i32 %4 to i64, !dbg !3573
  %arrayidx = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 %idxprom, !dbg !3573
  store %struct.Frame* %arrayidx, %struct.Frame** %f, align 8, !dbg !3577
  store i32 0, i32* %j, align 4, !dbg !3578
  br label %for.cond1, !dbg !3580

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !3581
  %cmp2 = icmp slt i32 %5, 4, !dbg !3583
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3584

for.body3:                                        ; preds = %for.cond1
  %6 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3585
  %merge = getelementptr inbounds %struct.Frame, %struct.Frame* %6, i32 0, i32 2, !dbg !3588
  %7 = load i32, i32* %j, align 4, !dbg !3589
  %idxprom4 = sext i32 %7 to i64, !dbg !3585
  %arrayidx5 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge, i64 0, i64 %idxprom4, !dbg !3585
  %frame = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx5, i32 0, i32 0, !dbg !3590
  %8 = load %struct.Frame*, %struct.Frame** %frame, align 8, !dbg !3590
  %tobool = icmp ne %struct.Frame* %8, null, !dbg !3585
  br i1 %tobool, label %if.end13, label %if.then, !dbg !3591

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !3592, metadata !DIExpression()), !dbg !3594
  %9 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3595
  %10 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3596
  %co = getelementptr inbounds %struct.Frame, %struct.Frame* %10, i32 0, i32 1, !dbg !3597
  %11 = load i32, i32* %j, align 4, !dbg !3598
  %idxprom6 = sext i32 %11 to i64, !dbg !3596
  %arrayidx7 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 %idxprom6, !dbg !3596
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !3596
  %call = call %struct.BMVert* @BM_vert_create(%struct.BMesh* %9, float* %arraydecay, %struct.BMVert* null, i32 0), !dbg !3599
  %12 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3600
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %12, i32 0, i32 0, !dbg !3601
  %13 = load i32, i32* %j, align 4, !dbg !3602
  %idxprom8 = sext i32 %13 to i64, !dbg !3600
  %arrayidx9 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 %idxprom8, !dbg !3600
  store %struct.BMVert* %call, %struct.BMVert** %arrayidx9, align 8, !dbg !3603
  store %struct.BMVert* %call, %struct.BMVert** %v, align 8, !dbg !3594
  %14 = load %struct.MDeformVert*, %struct.MDeformVert** %input_dvert.addr, align 8, !dbg !3604
  %tobool10 = icmp ne %struct.MDeformVert* %14, null, !dbg !3604
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3606

if.then11:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !3607, metadata !DIExpression()), !dbg !3609
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3610
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 24, !dbg !3611
  %16 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3612
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !3613
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !3614
  %17 = load i8*, i8** %data, align 8, !dbg !3614
  %call12 = call i8* @CustomData_bmesh_get(%struct.CustomData* %vdata, i8* %17, i32 2), !dbg !3615
  %18 = bitcast i8* %call12 to %struct.MDeformVert*, !dbg !3615
  store %struct.MDeformVert* %18, %struct.MDeformVert** %dv, align 8, !dbg !3616
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !3617
  %20 = load %struct.MDeformVert*, %struct.MDeformVert** %input_dvert.addr, align 8, !dbg !3618
  call void @defvert_copy(%struct.MDeformVert* %19, %struct.MDeformVert* %20), !dbg !3619
  br label %if.end, !dbg !3620

if.end:                                           ; preds = %if.then11, %if.then
  br label %if.end13, !dbg !3621

if.end13:                                         ; preds = %if.end, %for.body3
  br label %for.inc, !dbg !3622

for.inc:                                          ; preds = %if.end13
  %21 = load i32, i32* %j, align 4, !dbg !3623
  %inc = add nsw i32 %21, 1, !dbg !3623
  store i32 %inc, i32* %j, align 4, !dbg !3623
  br label %for.cond1, !dbg !3624, !llvm.loop !3625

for.end:                                          ; preds = %for.cond1
  br label %for.inc14, !dbg !3627

for.inc14:                                        ; preds = %for.end
  %22 = load i32, i32* %i, align 4, !dbg !3628
  %inc15 = add nsw i32 %22, 1, !dbg !3628
  store i32 %inc15, i32* %i, align 4, !dbg !3628
  br label %for.cond, !dbg !3629, !llvm.loop !3630

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3632
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_update_merged_vertices(%struct.SkinNode* %skin_nodes, i32 %totvert) #0 !dbg !3633 {
entry:
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %v = alloca i32, align 4
  %sn = alloca %struct.SkinNode*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %f = alloca %struct.Frame*, align 8
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !3634, metadata !DIExpression()), !dbg !3635
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3638, metadata !DIExpression()), !dbg !3639
  store i32 0, i32* %v, align 4, !dbg !3640
  br label %for.cond, !dbg !3642

for.cond:                                         ; preds = %for.inc26, %entry
  %0 = load i32, i32* %v, align 4, !dbg !3643
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !3645
  %cmp = icmp slt i32 %0, %1, !dbg !3646
  br i1 %cmp, label %for.body, label %for.end28, !dbg !3647

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %sn, metadata !3648, metadata !DIExpression()), !dbg !3650
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3651
  %3 = load i32, i32* %v, align 4, !dbg !3652
  %idxprom = sext i32 %3 to i64, !dbg !3651
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom, !dbg !3651
  store %struct.SkinNode* %arrayidx, %struct.SkinNode** %sn, align 8, !dbg !3650
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3655, metadata !DIExpression()), !dbg !3656
  store i32 0, i32* %i, align 4, !dbg !3657
  br label %for.cond1, !dbg !3659

for.cond1:                                        ; preds = %for.inc23, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3660
  %5 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !3662
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %5, i32 0, i32 1, !dbg !3663
  %6 = load i32, i32* %totframe, align 8, !dbg !3663
  %cmp2 = icmp slt i32 %4, %6, !dbg !3664
  br i1 %cmp2, label %for.body3, label %for.end25, !dbg !3665

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.Frame** %f, metadata !3666, metadata !DIExpression()), !dbg !3668
  %7 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !3669
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %7, i32 0, i32 0, !dbg !3670
  %8 = load i32, i32* %i, align 4, !dbg !3671
  %idxprom4 = sext i32 %8 to i64, !dbg !3669
  %arrayidx5 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 %idxprom4, !dbg !3669
  store %struct.Frame* %arrayidx5, %struct.Frame** %f, align 8, !dbg !3668
  store i32 0, i32* %j, align 4, !dbg !3672
  br label %for.cond6, !dbg !3674

for.cond6:                                        ; preds = %for.inc, %for.body3
  %9 = load i32, i32* %j, align 4, !dbg !3675
  %cmp7 = icmp slt i32 %9, 4, !dbg !3677
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !3678

for.body8:                                        ; preds = %for.cond6
  %10 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3679
  %merge = getelementptr inbounds %struct.Frame, %struct.Frame* %10, i32 0, i32 2, !dbg !3682
  %11 = load i32, i32* %j, align 4, !dbg !3683
  %idxprom9 = sext i32 %11 to i64, !dbg !3679
  %arrayidx10 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge, i64 0, i64 %idxprom9, !dbg !3679
  %frame = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx10, i32 0, i32 0, !dbg !3684
  %12 = load %struct.Frame*, %struct.Frame** %frame, align 8, !dbg !3684
  %tobool = icmp ne %struct.Frame* %12, null, !dbg !3679
  br i1 %tobool, label %if.then, label %if.end, !dbg !3685

if.then:                                          ; preds = %for.body8
  %13 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3686
  %merge11 = getelementptr inbounds %struct.Frame, %struct.Frame* %13, i32 0, i32 2, !dbg !3688
  %14 = load i32, i32* %j, align 4, !dbg !3689
  %idxprom12 = sext i32 %14 to i64, !dbg !3686
  %arrayidx13 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge11, i64 0, i64 %idxprom12, !dbg !3686
  %frame14 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx13, i32 0, i32 0, !dbg !3690
  %15 = load %struct.Frame*, %struct.Frame** %frame14, align 8, !dbg !3690
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %15, i32 0, i32 0, !dbg !3691
  %16 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3692
  %merge15 = getelementptr inbounds %struct.Frame, %struct.Frame* %16, i32 0, i32 2, !dbg !3693
  %17 = load i32, i32* %j, align 4, !dbg !3694
  %idxprom16 = sext i32 %17 to i64, !dbg !3692
  %arrayidx17 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge15, i64 0, i64 %idxprom16, !dbg !3692
  %corner = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx17, i32 0, i32 1, !dbg !3695
  %18 = load i32, i32* %corner, align 8, !dbg !3695
  %idxprom18 = sext i32 %18 to i64, !dbg !3686
  %arrayidx19 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 %idxprom18, !dbg !3686
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx19, align 8, !dbg !3686
  %20 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !3696
  %verts20 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i32 0, i32 0, !dbg !3697
  %21 = load i32, i32* %j, align 4, !dbg !3698
  %idxprom21 = sext i32 %21 to i64, !dbg !3696
  %arrayidx22 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts20, i64 0, i64 %idxprom21, !dbg !3696
  store %struct.BMVert* %19, %struct.BMVert** %arrayidx22, align 8, !dbg !3699
  br label %if.end, !dbg !3700

if.end:                                           ; preds = %if.then, %for.body8
  br label %for.inc, !dbg !3701

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %j, align 4, !dbg !3702
  %inc = add nsw i32 %22, 1, !dbg !3702
  store i32 %inc, i32* %j, align 4, !dbg !3702
  br label %for.cond6, !dbg !3703, !llvm.loop !3704

for.end:                                          ; preds = %for.cond6
  br label %for.inc23, !dbg !3706

for.inc23:                                        ; preds = %for.end
  %23 = load i32, i32* %i, align 4, !dbg !3707
  %inc24 = add nsw i32 %23, 1, !dbg !3707
  store i32 %inc24, i32* %i, align 4, !dbg !3707
  br label %for.cond1, !dbg !3708, !llvm.loop !3709

for.end25:                                        ; preds = %for.cond1
  br label %for.inc26, !dbg !3711

for.inc26:                                        ; preds = %for.end25
  %24 = load i32, i32* %v, align 4, !dbg !3712
  %inc27 = add nsw i32 %24, 1, !dbg !3712
  store i32 %inc27, i32* %v, align 4, !dbg !3712
  br label %for.cond, !dbg !3713, !llvm.loop !3714

for.end28:                                        ; preds = %for.cond
  ret void, !dbg !3716
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @skin_output_branch_hulls(%struct.SkinOutput* %so, %struct.SkinNode* %skin_nodes, i32 %totvert, %struct.MeshElemMap* %emap, %struct.MEdge* %medge) #0 !dbg !3717 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %result = alloca i8, align 1
  %v = alloca i32, align 4
  %sn = alloca %struct.SkinNode*, align 8
  %hull_frames = alloca %struct.Frame**, align 8
  %tothullframe = alloca i32, align 4
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !3721, metadata !DIExpression()), !dbg !3722
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !3723, metadata !DIExpression()), !dbg !3724
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !3727, metadata !DIExpression()), !dbg !3728
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3731, metadata !DIExpression()), !dbg !3732
  store i8 1, i8* %result, align 1, !dbg !3732
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3733, metadata !DIExpression()), !dbg !3734
  store i32 0, i32* %v, align 4, !dbg !3735
  br label %for.cond, !dbg !3737

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %v, align 4, !dbg !3738
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !3740
  %cmp = icmp slt i32 %0, %1, !dbg !3741
  br i1 %cmp, label %for.body, label %for.end, !dbg !3742

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %sn, metadata !3743, metadata !DIExpression()), !dbg !3745
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3746
  %3 = load i32, i32* %v, align 4, !dbg !3747
  %idxprom = sext i32 %3 to i64, !dbg !3746
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom, !dbg !3746
  store %struct.SkinNode* %arrayidx, %struct.SkinNode** %sn, align 8, !dbg !3745
  %4 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !3748
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %4, i32 0, i32 1, !dbg !3750
  %5 = load i32, i32* %totframe, align 8, !dbg !3750
  %tobool = icmp ne i32 %5, 0, !dbg !3748
  br i1 %tobool, label %if.end4, label %if.then, !dbg !3751

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.Frame*** %hull_frames, metadata !3752, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.declare(metadata i32* %tothullframe, metadata !3755, metadata !DIExpression()), !dbg !3756
  %6 = load i32, i32* %v, align 4, !dbg !3757
  %7 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !3758
  %8 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !3759
  %9 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !3760
  %call = call %struct.Frame** @collect_hull_frames(i32 %6, %struct.SkinNode* %7, %struct.MeshElemMap* %8, %struct.MEdge* %9, i32* %tothullframe), !dbg !3761
  store %struct.Frame** %call, %struct.Frame*** %hull_frames, align 8, !dbg !3762
  %10 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !3763
  %11 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !3765
  %12 = load i32, i32* %tothullframe, align 4, !dbg !3766
  %call1 = call zeroext i8 @build_hull(%struct.SkinOutput* %10, %struct.Frame** %11, i32 %12), !dbg !3767
  %tobool2 = icmp ne i8 %call1, 0, !dbg !3767
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !3768

if.then3:                                         ; preds = %if.then
  store i8 0, i8* %result, align 1, !dbg !3769
  br label %if.end, !dbg !3770

if.end:                                           ; preds = %if.then3, %if.then
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3771
  %14 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !3772
  %15 = bitcast %struct.Frame** %14 to i8*, !dbg !3772
  call void %13(i8* %15), !dbg !3771
  br label %if.end4, !dbg !3773

if.end4:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3774

for.inc:                                          ; preds = %if.end4
  %16 = load i32, i32* %v, align 4, !dbg !3775
  %inc = add nsw i32 %16, 1, !dbg !3775
  store i32 %inc, i32* %v, align 4, !dbg !3775
  br label %for.cond, !dbg !3776, !llvm.loop !3777

for.end:                                          ; preds = %for.cond
  %17 = load i8, i8* %result, align 1, !dbg !3779
  ret i8 %17, !dbg !3780
}

declare dso_local void @modifier_setError(%struct.ModifierData*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @hull_merge_triangles(%struct.SkinOutput* %so, %struct.SkinModifierData* %smd) #0 !dbg !3781 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %heap = alloca %struct.Heap*, align 8
  %score = alloca float, align 4
  %adj = alloca [2 x %struct.BMFace*], align 16
  %quad = alloca [4 x %struct.BMVert*], align 16
  %adj53 = alloca [2 x %struct.BMFace*], align 16
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !3786, metadata !DIExpression()), !dbg !3787
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3790, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !3879, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata %struct.Heap** %heap, metadata !3881, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata float* %score, metadata !3887, metadata !DIExpression()), !dbg !3888
  %call = call %struct.Heap* @BLI_heap_new(), !dbg !3889
  store %struct.Heap* %call, %struct.Heap** %heap, align 8, !dbg !3890
  %0 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !3891
  %bm = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %0, i32 0, i32 0, !dbg !3892
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3892
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %1, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !3893
  %2 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !3894
  %bm1 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %2, i32 0, i32 0, !dbg !3894
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3894
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %3, i8 zeroext 2, i8* null), !dbg !3894
  %4 = bitcast i8* %call2 to %struct.BMEdge*, !dbg !3894
  store %struct.BMEdge* %4, %struct.BMEdge** %e, align 8, !dbg !3894
  br label %for.cond, !dbg !3894

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3896
  %tobool = icmp ne %struct.BMEdge* %5, null, !dbg !3894
  br i1 %tobool, label %for.body, label %for.end, !dbg !3894

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x %struct.BMFace*]* %adj, metadata !3898, metadata !DIExpression()), !dbg !3901
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3902
  %arrayidx = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 0, !dbg !3904
  %arrayidx3 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 1, !dbg !3905
  %call4 = call zeroext i8 @BM_edge_face_pair(%struct.BMEdge* %6, %struct.BMFace** %arrayidx, %struct.BMFace** %arrayidx3), !dbg !3906
  %tobool5 = icmp ne i8 %call4, 0, !dbg !3906
  br i1 %tobool5, label %if.then, label %if.end49, !dbg !3907

if.then:                                          ; preds = %for.body
  %arrayidx6 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 0, !dbg !3908
  %7 = load %struct.BMFace*, %struct.BMFace** %arrayidx6, align 16, !dbg !3908
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %7, i32 0, i32 3, !dbg !3911
  %8 = load i32, i32* %len, align 8, !dbg !3911
  %cmp = icmp eq i32 %8, 3, !dbg !3912
  br i1 %cmp, label %land.lhs.true, label %if.end48, !dbg !3913

land.lhs.true:                                    ; preds = %if.then
  %arrayidx7 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 1, !dbg !3914
  %9 = load %struct.BMFace*, %struct.BMFace** %arrayidx7, align 8, !dbg !3914
  %len8 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 3, !dbg !3915
  %10 = load i32, i32* %len8, align 8, !dbg !3915
  %cmp9 = icmp eq i32 %10, 3, !dbg !3916
  br i1 %cmp9, label %if.then10, label %if.end48, !dbg !3917

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %quad, metadata !3918, metadata !DIExpression()), !dbg !3920
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3921
  %arraydecay = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 0, !dbg !3922
  %arraydecay11 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !3923
  call void @quad_from_tris(%struct.BMEdge* %11, %struct.BMFace** %arraydecay, %struct.BMVert** %arraydecay11), !dbg !3924
  %arrayidx12 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 0, !dbg !3925
  %12 = load %struct.BMFace*, %struct.BMFace** %arrayidx12, align 16, !dbg !3925
  %call13 = call float @BM_face_calc_area(%struct.BMFace* %12), !dbg !3926
  %arrayidx14 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 1, !dbg !3927
  %13 = load %struct.BMFace*, %struct.BMFace** %arrayidx14, align 8, !dbg !3927
  %call15 = call float @BM_face_calc_area(%struct.BMFace* %13), !dbg !3928
  %add = fadd float %call13, %call15, !dbg !3929
  %arrayidx16 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 0, !dbg !3930
  %14 = load %struct.BMFace*, %struct.BMFace** %arrayidx16, align 16, !dbg !3930
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 4, !dbg !3931
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !3930
  %arrayidx18 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj, i64 0, i64 1, !dbg !3932
  %15 = load %struct.BMFace*, %struct.BMFace** %arrayidx18, align 8, !dbg !3932
  %no19 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 4, !dbg !3933
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %no19, i64 0, i64 0, !dbg !3932
  %call21 = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay20), !dbg !3934
  %mul = fmul float %add, %call21, !dbg !3935
  store float %mul, float* %score, align 4, !dbg !3936
  %arraydecay22 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !3937
  %16 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !3939
  %call23 = call zeroext i8 @quad_crosses_symmetry_plane(%struct.BMVert** %arraydecay22, %struct.SkinModifierData* %16), !dbg !3940
  %tobool24 = icmp ne i8 %call23, 0, !dbg !3940
  br i1 %tobool24, label %if.then25, label %if.end31, !dbg !3941

if.then25:                                        ; preds = %if.then10
  %arraydecay26 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !3942
  %17 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !3945
  %call27 = call zeroext i8 @is_quad_symmetric(%struct.BMVert** %arraydecay26, %struct.SkinModifierData* %17), !dbg !3946
  %tobool28 = icmp ne i8 %call27, 0, !dbg !3946
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !3947

if.then29:                                        ; preds = %if.then25
  %18 = load float, float* %score, align 4, !dbg !3948
  %mul30 = fmul float %18, 1.000000e+01, !dbg !3948
  store float %mul30, float* %score, align 4, !dbg !3948
  br label %if.end, !dbg !3949

if.else:                                          ; preds = %if.then25
  br label %for.inc, !dbg !3950

if.end:                                           ; preds = %if.then29
  br label %if.end31, !dbg !3951

if.end31:                                         ; preds = %if.end, %if.then10
  %arrayidx32 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !3952
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx32, align 16, !dbg !3952
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 2, !dbg !3954
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3952
  %arrayidx34 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 1, !dbg !3955
  %20 = load %struct.BMVert*, %struct.BMVert** %arrayidx34, align 8, !dbg !3955
  %co35 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 2, !dbg !3956
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !3955
  %arrayidx37 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 2, !dbg !3957
  %21 = load %struct.BMVert*, %struct.BMVert** %arrayidx37, align 16, !dbg !3957
  %co38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !3958
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !3957
  %arrayidx40 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 3, !dbg !3959
  %22 = load %struct.BMVert*, %struct.BMVert** %arrayidx40, align 8, !dbg !3959
  %co41 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 2, !dbg !3960
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !3959
  %call43 = call zeroext i8 @is_quad_convex_v3(float* %arraydecay33, float* %arraydecay36, float* %arraydecay39, float* %arraydecay42), !dbg !3961
  %tobool44 = icmp ne i8 %call43, 0, !dbg !3961
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !3962

if.then45:                                        ; preds = %if.end31
  br label %for.inc, !dbg !3963

if.end46:                                         ; preds = %if.end31
  %23 = load %struct.Heap*, %struct.Heap** %heap, align 8, !dbg !3965
  %24 = load float, float* %score, align 4, !dbg !3966
  %fneg = fneg float %24, !dbg !3967
  %25 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3968
  %26 = bitcast %struct.BMEdge* %25 to i8*, !dbg !3968
  %call47 = call %struct.HeapNode* @BLI_heap_insert(%struct.Heap* %23, float %fneg, i8* %26), !dbg !3969
  br label %if.end48, !dbg !3970

if.end48:                                         ; preds = %if.end46, %land.lhs.true, %if.then
  br label %if.end49, !dbg !3971

if.end49:                                         ; preds = %if.end48, %for.body
  br label %for.inc, !dbg !3972

for.inc:                                          ; preds = %if.end49, %if.then45, %if.else
  %call50 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3896
  %27 = bitcast i8* %call50 to %struct.BMEdge*, !dbg !3896
  store %struct.BMEdge* %27, %struct.BMEdge** %e, align 8, !dbg !3896
  br label %for.cond, !dbg !3896, !llvm.loop !3973

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !3975

while.cond:                                       ; preds = %if.end81, %for.end
  %28 = load %struct.Heap*, %struct.Heap** %heap, align 8, !dbg !3976
  %call51 = call zeroext i8 @BLI_heap_is_empty(%struct.Heap* %28), !dbg !3977
  %tobool52 = icmp ne i8 %call51, 0, !dbg !3978
  %lnot = xor i1 %tobool52, true, !dbg !3978
  br i1 %lnot, label %while.body, label %while.end, !dbg !3975

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [2 x %struct.BMFace*]* %adj53, metadata !3979, metadata !DIExpression()), !dbg !3981
  %29 = load %struct.Heap*, %struct.Heap** %heap, align 8, !dbg !3982
  %call54 = call i8* @BLI_heap_popmin(%struct.Heap* %29), !dbg !3983
  %30 = bitcast i8* %call54 to %struct.BMEdge*, !dbg !3983
  store %struct.BMEdge* %30, %struct.BMEdge** %e, align 8, !dbg !3984
  %31 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3985
  %arrayidx55 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 0, !dbg !3987
  %arrayidx56 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 1, !dbg !3988
  %call57 = call zeroext i8 @BM_edge_face_pair(%struct.BMEdge* %31, %struct.BMFace** %arrayidx55, %struct.BMFace** %arrayidx56), !dbg !3989
  %tobool58 = icmp ne i8 %call57, 0, !dbg !3989
  br i1 %tobool58, label %if.then59, label %if.end81, !dbg !3990

if.then59:                                        ; preds = %while.body
  %arrayidx60 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 0, !dbg !3991
  %32 = load %struct.BMFace*, %struct.BMFace** %arrayidx60, align 16, !dbg !3991
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %32, i32 0, i32 0, !dbg !3991
  %call61 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !3991
  %tobool62 = icmp ne i8 %call61, 0, !dbg !3991
  br i1 %tobool62, label %if.end80, label %land.lhs.true63, !dbg !3994

land.lhs.true63:                                  ; preds = %if.then59
  %arrayidx64 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 1, !dbg !3995
  %33 = load %struct.BMFace*, %struct.BMFace** %arrayidx64, align 8, !dbg !3995
  %head65 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %33, i32 0, i32 0, !dbg !3995
  %call66 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head65, i8 zeroext 16), !dbg !3995
  %tobool67 = icmp ne i8 %call66, 0, !dbg !3995
  br i1 %tobool67, label %if.end80, label %land.lhs.true68, !dbg !3996

land.lhs.true68:                                  ; preds = %land.lhs.true63
  %arrayidx69 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 0, !dbg !3997
  %34 = load %struct.BMFace*, %struct.BMFace** %arrayidx69, align 16, !dbg !3997
  %arrayidx70 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 1, !dbg !3998
  %35 = load %struct.BMFace*, %struct.BMFace** %arrayidx70, align 8, !dbg !3998
  %call71 = call zeroext i8 @BM_face_share_face_check(%struct.BMFace* %34, %struct.BMFace* %35), !dbg !3999
  %tobool72 = icmp ne i8 %call71, 0, !dbg !3999
  br i1 %tobool72, label %if.end80, label %if.then73, !dbg !4000

if.then73:                                        ; preds = %land.lhs.true68
  %36 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4001
  %37 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4003
  %arraydecay74 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 0, !dbg !4004
  call void @add_quad_from_tris(%struct.SkinOutput* %36, %struct.BMEdge* %37, %struct.BMFace** %arraydecay74), !dbg !4005
  %arrayidx75 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 0, !dbg !4006
  %38 = load %struct.BMFace*, %struct.BMFace** %arrayidx75, align 16, !dbg !4006
  %head76 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %38, i32 0, i32 0, !dbg !4006
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head76, i8 zeroext 16), !dbg !4006
  %arrayidx77 = getelementptr inbounds [2 x %struct.BMFace*], [2 x %struct.BMFace*]* %adj53, i64 0, i64 1, !dbg !4007
  %39 = load %struct.BMFace*, %struct.BMFace** %arrayidx77, align 8, !dbg !4007
  %head78 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %39, i32 0, i32 0, !dbg !4007
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head78, i8 zeroext 16), !dbg !4007
  %40 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4008
  %head79 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %40, i32 0, i32 0, !dbg !4008
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head79, i8 zeroext 16), !dbg !4008
  br label %if.end80, !dbg !4009

if.end80:                                         ; preds = %if.then73, %land.lhs.true68, %land.lhs.true63, %if.then59
  br label %if.end81, !dbg !4010

if.end81:                                         ; preds = %if.end80, %while.body
  br label %while.cond, !dbg !3975, !llvm.loop !4011

while.end:                                        ; preds = %while.cond
  %41 = load %struct.Heap*, %struct.Heap** %heap, align 8, !dbg !4013
  call void @BLI_heap_free(%struct.Heap* %41, void (i8*)* null), !dbg !4014
  %42 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4015
  %bm82 = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %42, i32 0, i32 0, !dbg !4016
  %43 = load %struct.BMesh*, %struct.BMesh** %bm82, align 8, !dbg !4016
  call void @BM_mesh_delete_hflag_tagged(%struct.BMesh* %43, i8 zeroext 16, i8 zeroext 10), !dbg !4017
  ret void, !dbg !4018
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_fix_hull_topology(%struct.BMesh* %bm, %struct.SkinNode* %skin_nodes, i32 %totvert) #0 !dbg !4019 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %v = alloca i32, align 4
  %sn = alloca %struct.SkinNode*, align 8
  %j = alloca i32, align 4
  %f = alloca %struct.Frame*, align 8
  %target_face = alloca %struct.BMFace*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4022, metadata !DIExpression()), !dbg !4023
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !4024, metadata !DIExpression()), !dbg !4025
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4028, metadata !DIExpression()), !dbg !4029
  store i32 0, i32* %v, align 4, !dbg !4030
  br label %for.cond, !dbg !4032

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32, i32* %v, align 4, !dbg !4033
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !4035
  %cmp = icmp slt i32 %0, %1, !dbg !4036
  br i1 %cmp, label %for.body, label %for.end11, !dbg !4037

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %sn, metadata !4038, metadata !DIExpression()), !dbg !4040
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4041
  %3 = load i32, i32* %v, align 4, !dbg !4042
  %idxprom = sext i32 %3 to i64, !dbg !4041
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom, !dbg !4041
  store %struct.SkinNode* %arrayidx, %struct.SkinNode** %sn, align 8, !dbg !4040
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4043, metadata !DIExpression()), !dbg !4044
  store i32 0, i32* %j, align 4, !dbg !4045
  br label %for.cond1, !dbg !4047

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4048
  %5 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4050
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %5, i32 0, i32 1, !dbg !4051
  %6 = load i32, i32* %totframe, align 8, !dbg !4051
  %cmp2 = icmp slt i32 %4, %6, !dbg !4052
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !4053

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.Frame** %f, metadata !4054, metadata !DIExpression()), !dbg !4056
  %7 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4057
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %7, i32 0, i32 0, !dbg !4058
  %8 = load i32, i32* %j, align 4, !dbg !4059
  %idxprom4 = sext i32 %8 to i64, !dbg !4057
  %arrayidx5 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 %idxprom4, !dbg !4057
  store %struct.Frame* %arrayidx5, %struct.Frame** %f, align 8, !dbg !4056
  %9 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !4060
  %detached = getelementptr inbounds %struct.Frame, %struct.Frame* %9, i32 0, i32 4, !dbg !4062
  %10 = load i8, i8* %detached, align 4, !dbg !4062
  %tobool = icmp ne i8 %10, 0, !dbg !4060
  br i1 %tobool, label %if.then, label %if.end8, !dbg !4063

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata %struct.BMFace** %target_face, metadata !4064, metadata !DIExpression()), !dbg !4066
  %11 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4067
  %12 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !4068
  call void @skin_hole_detach_partially_attached_frame(%struct.BMesh* %11, %struct.Frame* %12), !dbg !4069
  %13 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4070
  %14 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !4071
  %call = call %struct.BMFace* @skin_hole_target_face(%struct.BMesh* %13, %struct.Frame* %14), !dbg !4072
  store %struct.BMFace* %call, %struct.BMFace** %target_face, align 8, !dbg !4073
  %15 = load %struct.BMFace*, %struct.BMFace** %target_face, align 8, !dbg !4074
  %tobool6 = icmp ne %struct.BMFace* %15, null, !dbg !4074
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4076

if.then7:                                         ; preds = %if.then
  %16 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4077
  %17 = load %struct.Frame*, %struct.Frame** %f, align 8, !dbg !4078
  %18 = load %struct.BMFace*, %struct.BMFace** %target_face, align 8, !dbg !4079
  call void @skin_fix_hole_no_good_verts(%struct.BMesh* %16, %struct.Frame* %17, %struct.BMFace* %18), !dbg !4080
  br label %if.end, !dbg !4080

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !4081

if.end8:                                          ; preds = %if.end, %for.body3
  br label %for.inc, !dbg !4082

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %j, align 4, !dbg !4083
  %inc = add nsw i32 %19, 1, !dbg !4083
  store i32 %inc, i32* %j, align 4, !dbg !4083
  br label %for.cond1, !dbg !4084, !llvm.loop !4085

for.end:                                          ; preds = %for.cond1
  br label %for.inc9, !dbg !4087

for.inc9:                                         ; preds = %for.end
  %20 = load i32, i32* %v, align 4, !dbg !4088
  %inc10 = add nsw i32 %20, 1, !dbg !4088
  store i32 %inc10, i32* %v, align 4, !dbg !4088
  br label %for.cond, !dbg !4089, !llvm.loop !4090

for.end11:                                        ; preds = %for.cond
  ret void, !dbg !4092
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_smooth_hulls(%struct.BMesh* %bm, %struct.SkinNode* %skin_nodes, i32 %totvert, %struct.SkinModifierData* %smd) #0 !dbg !4093 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eiter = alloca %struct.BMIter, align 8
  %v = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %skey = alloca i32, align 4
  %frame = alloca %struct.Frame*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %avg = alloca [3 x float], align 4
  %weight = alloca float, align 4
  %totv = alloca i32, align 4
  %other = alloca %struct.BMVert*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4096, metadata !DIExpression()), !dbg !4097
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4104, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4112, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4114, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.declare(metadata i32* %skey, metadata !4116, metadata !DIExpression()), !dbg !4117
  %0 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !4118
  %branch_smoothing = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %0, i32 0, i32 1, !dbg !4120
  %1 = load float, float* %branch_smoothing, align 8, !dbg !4120
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !4121
  br i1 %cmp, label %if.then, label %if.end, !dbg !4122

if.then:                                          ; preds = %entry
  br label %return, !dbg !4123

if.end:                                           ; preds = %entry
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4124
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %2, i8 zeroext 1, i8 zeroext 16, i8 zeroext 0), !dbg !4125
  store i32 0, i32* %i, align 4, !dbg !4126
  br label %for.cond, !dbg !4128

for.cond:                                         ; preds = %for.inc17, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !4129
  %4 = load i32, i32* %totvert.addr, align 4, !dbg !4131
  %cmp1 = icmp slt i32 %3, %4, !dbg !4132
  br i1 %cmp1, label %for.body, label %for.end19, !dbg !4133

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4134
  br label %for.cond2, !dbg !4137

for.cond2:                                        ; preds = %for.inc14, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !4138
  %6 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4140
  %7 = load i32, i32* %i, align 4, !dbg !4141
  %idxprom = sext i32 %7 to i64, !dbg !4140
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %6, i64 %idxprom, !dbg !4140
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx, i32 0, i32 1, !dbg !4142
  %8 = load i32, i32* %totframe, align 8, !dbg !4142
  %cmp3 = icmp slt i32 %5, %8, !dbg !4143
  br i1 %cmp3, label %for.body4, label %for.end16, !dbg !4144

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame, metadata !4145, metadata !DIExpression()), !dbg !4147
  %9 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4148
  %10 = load i32, i32* %i, align 4, !dbg !4149
  %idxprom5 = sext i32 %10 to i64, !dbg !4148
  %arrayidx6 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %9, i64 %idxprom5, !dbg !4148
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %arrayidx6, i32 0, i32 0, !dbg !4150
  %11 = load i32, i32* %j, align 4, !dbg !4151
  %idxprom7 = sext i32 %11 to i64, !dbg !4148
  %arrayidx8 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 %idxprom7, !dbg !4148
  store %struct.Frame* %arrayidx8, %struct.Frame** %frame, align 8, !dbg !4147
  store i32 0, i32* %k, align 4, !dbg !4152
  br label %for.cond9, !dbg !4154

for.cond9:                                        ; preds = %for.inc, %for.body4
  %12 = load i32, i32* %k, align 4, !dbg !4155
  %cmp10 = icmp slt i32 %12, 4, !dbg !4157
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !4158

for.body11:                                       ; preds = %for.cond9
  %13 = load %struct.Frame*, %struct.Frame** %frame, align 8, !dbg !4159
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %13, i32 0, i32 0, !dbg !4159
  %14 = load i32, i32* %k, align 4, !dbg !4159
  %idxprom12 = sext i32 %14 to i64, !dbg !4159
  %arrayidx13 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 %idxprom12, !dbg !4159
  %15 = load %struct.BMVert*, %struct.BMVert** %arrayidx13, align 8, !dbg !4159
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %15, i32 0, i32 0, !dbg !4159
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !4159
  br label %for.inc, !dbg !4159

for.inc:                                          ; preds = %for.body11
  %16 = load i32, i32* %k, align 4, !dbg !4160
  %inc = add nsw i32 %16, 1, !dbg !4160
  store i32 %inc, i32* %k, align 4, !dbg !4160
  br label %for.cond9, !dbg !4161, !llvm.loop !4162

for.end:                                          ; preds = %for.cond9
  br label %for.inc14, !dbg !4164

for.inc14:                                        ; preds = %for.end
  %17 = load i32, i32* %j, align 4, !dbg !4165
  %inc15 = add nsw i32 %17, 1, !dbg !4165
  store i32 %inc15, i32* %j, align 4, !dbg !4165
  br label %for.cond2, !dbg !4166, !llvm.loop !4167

for.end16:                                        ; preds = %for.cond2
  br label %for.inc17, !dbg !4169

for.inc17:                                        ; preds = %for.end16
  %18 = load i32, i32* %i, align 4, !dbg !4170
  %inc18 = add nsw i32 %18, 1, !dbg !4170
  store i32 %inc18, i32* %i, align 4, !dbg !4170
  br label %for.cond, !dbg !4171, !llvm.loop !4172

for.end19:                                        ; preds = %for.cond
  %19 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4174
  %20 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4175
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 24, !dbg !4176
  call void @BM_data_layer_add(%struct.BMesh* %19, %struct.CustomData* %vdata, i32 28), !dbg !4177
  %21 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4178
  %vdata20 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 24, !dbg !4179
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %vdata20, i32 28), !dbg !4180
  %sub = sub nsw i32 %call, 1, !dbg !4181
  store i32 %sub, i32* %skey, align 4, !dbg !4182
  %22 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4183
  %call21 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 1, i8* null), !dbg !4183
  %23 = bitcast i8* %call21 to %struct.BMVert*, !dbg !4183
  store %struct.BMVert* %23, %struct.BMVert** %v, align 8, !dbg !4183
  br label %for.cond22, !dbg !4183

for.cond22:                                       ; preds = %for.inc27, %for.end19
  %24 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4185
  %tobool = icmp ne %struct.BMVert* %24, null, !dbg !4183
  br i1 %tobool, label %for.body23, label %for.end29, !dbg !4183

for.body23:                                       ; preds = %for.cond22
  %25 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4187
  %vdata24 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 24, !dbg !4189
  %26 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4190
  %head25 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 0, !dbg !4191
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head25, i32 0, i32 0, !dbg !4192
  %27 = load i8*, i8** %data, align 8, !dbg !4192
  %28 = load i32, i32* %skey, align 4, !dbg !4193
  %call26 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %vdata24, i8* %27, i32 28, i32 %28), !dbg !4194
  %29 = bitcast i8* %call26 to float*, !dbg !4194
  %30 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4195
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %30, i32 0, i32 2, !dbg !4196
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4195
  call void @copy_v3_v3(float* %29, float* %arraydecay), !dbg !4197
  br label %for.inc27, !dbg !4198

for.inc27:                                        ; preds = %for.body23
  %call28 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4185
  %31 = bitcast i8* %call28 to %struct.BMVert*, !dbg !4185
  store %struct.BMVert* %31, %struct.BMVert** %v, align 8, !dbg !4185
  br label %for.cond22, !dbg !4185, !llvm.loop !4199

for.end29:                                        ; preds = %for.cond22
  %32 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4201
  %call30 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %32, i8 zeroext 1, i8* null), !dbg !4201
  %33 = bitcast i8* %call30 to %struct.BMVert*, !dbg !4201
  store %struct.BMVert* %33, %struct.BMVert** %v, align 8, !dbg !4201
  br label %for.cond31, !dbg !4201

for.cond31:                                       ; preds = %for.inc66, %for.end29
  %34 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4203
  %tobool32 = icmp ne %struct.BMVert* %34, null, !dbg !4201
  br i1 %tobool32, label %for.body33, label %for.end68, !dbg !4201

for.body33:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !4205, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.declare(metadata [3 x float]* %avg, metadata !4208, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.declare(metadata float* %weight, metadata !4210, metadata !DIExpression()), !dbg !4211
  %35 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !4212
  %branch_smoothing34 = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %35, i32 0, i32 1, !dbg !4213
  %36 = load float, float* %branch_smoothing34, align 8, !dbg !4213
  store float %36, float* %weight, align 4, !dbg !4211
  call void @llvm.dbg.declare(metadata i32* %totv, metadata !4214, metadata !DIExpression()), !dbg !4215
  store i32 1, i32* %totv, align 4, !dbg !4215
  %37 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4216
  %head35 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 0, !dbg !4216
  %call36 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head35, i8 zeroext 16), !dbg !4216
  %tobool37 = icmp ne i8 %call36, 0, !dbg !4216
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !4218

if.then38:                                        ; preds = %for.body33
  %38 = load float, float* %weight, align 4, !dbg !4219
  %mul = fmul float %38, 5.000000e-01, !dbg !4219
  store float %mul, float* %weight, align 4, !dbg !4219
  br label %if.end39, !dbg !4220

if.end39:                                         ; preds = %if.then38, %for.body33
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !4221
  %39 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4222
  %co41 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 2, !dbg !4223
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !4222
  call void @copy_v3_v3(float* %arraydecay40, float* %arraydecay42), !dbg !4224
  %40 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4225
  %41 = bitcast %struct.BMVert* %40 to i8*, !dbg !4225
  %call43 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %41), !dbg !4225
  %42 = bitcast i8* %call43 to %struct.BMEdge*, !dbg !4225
  store %struct.BMEdge* %42, %struct.BMEdge** %e, align 8, !dbg !4225
  br label %for.cond44, !dbg !4225

for.cond44:                                       ; preds = %for.inc54, %if.end39
  %43 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4227
  %tobool45 = icmp ne %struct.BMEdge* %43, null, !dbg !4225
  br i1 %tobool45, label %for.body46, label %for.end56, !dbg !4225

for.body46:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata %struct.BMVert** %other, metadata !4229, metadata !DIExpression()), !dbg !4231
  %44 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4232
  %45 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4233
  %call47 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %44, %struct.BMVert* %45), !dbg !4234
  store %struct.BMVert* %call47, %struct.BMVert** %other, align 8, !dbg !4231
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !4235
  %46 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4236
  %vdata49 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %46, i32 0, i32 24, !dbg !4237
  %47 = load %struct.BMVert*, %struct.BMVert** %other, align 8, !dbg !4238
  %head50 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %47, i32 0, i32 0, !dbg !4239
  %data51 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head50, i32 0, i32 0, !dbg !4240
  %48 = load i8*, i8** %data51, align 8, !dbg !4240
  %49 = load i32, i32* %skey, align 4, !dbg !4241
  %call52 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %vdata49, i8* %48, i32 28, i32 %49), !dbg !4242
  %50 = bitcast i8* %call52 to float*, !dbg !4242
  call void @add_v3_v3(float* %arraydecay48, float* %50), !dbg !4243
  %51 = load i32, i32* %totv, align 4, !dbg !4244
  %inc53 = add nsw i32 %51, 1, !dbg !4244
  store i32 %inc53, i32* %totv, align 4, !dbg !4244
  br label %for.inc54, !dbg !4245

for.inc54:                                        ; preds = %for.body46
  %call55 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !4227
  %52 = bitcast i8* %call55 to %struct.BMEdge*, !dbg !4227
  store %struct.BMEdge* %52, %struct.BMEdge** %e, align 8, !dbg !4227
  br label %for.cond44, !dbg !4227, !llvm.loop !4246

for.end56:                                        ; preds = %for.cond44
  %53 = load i32, i32* %totv, align 4, !dbg !4248
  %cmp57 = icmp sgt i32 %53, 1, !dbg !4250
  br i1 %cmp57, label %if.then58, label %if.end65, !dbg !4251

if.then58:                                        ; preds = %for.end56
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !4252
  %54 = load i32, i32* %totv, align 4, !dbg !4254
  %conv = sitofp i32 %54 to float, !dbg !4255
  %div = fdiv float 1.000000e+00, %conv, !dbg !4256
  call void @mul_v3_fl(float* %arraydecay59, float %div), !dbg !4257
  %55 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4258
  %co60 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %55, i32 0, i32 2, !dbg !4259
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !4258
  %56 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4260
  %co62 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %56, i32 0, i32 2, !dbg !4261
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !4260
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !4262
  %57 = load float, float* %weight, align 4, !dbg !4263
  call void @interp_v3_v3v3(float* %arraydecay61, float* %arraydecay63, float* %arraydecay64, float %57), !dbg !4264
  br label %if.end65, !dbg !4265

if.end65:                                         ; preds = %if.then58, %for.end56
  br label %for.inc66, !dbg !4266

for.inc66:                                        ; preds = %if.end65
  %call67 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4203
  %58 = bitcast i8* %call67 to %struct.BMVert*, !dbg !4203
  store %struct.BMVert* %58, %struct.BMVert** %v, align 8, !dbg !4203
  br label %for.cond31, !dbg !4203, !llvm.loop !4267

for.end68:                                        ; preds = %for.cond31
  %59 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4269
  %60 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4270
  %vdata69 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %60, i32 0, i32 24, !dbg !4271
  %61 = load i32, i32* %skey, align 4, !dbg !4272
  call void @BM_data_layer_free_n(%struct.BMesh* %59, %struct.CustomData* %vdata69, i32 28, i32 %61), !dbg !4273
  br label %return, !dbg !4274

return:                                           ; preds = %for.end68, %if.then
  ret void, !dbg !4274
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_output_end_nodes(%struct.SkinOutput* %so, %struct.SkinNode* %skin_nodes, i32 %totvert) #0 !dbg !4275 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %totvert.addr = alloca i32, align 4
  %v = alloca i32, align 4
  %sn = alloca %struct.SkinNode*, align 8
  %v_order = alloca [4 x %struct.BMVert*], align 16
  %i = alloca i32, align 4
  %order = alloca [4 x i32], align 16
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !4282, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4284, metadata !DIExpression()), !dbg !4285
  store i32 0, i32* %v, align 4, !dbg !4286
  br label %for.cond, !dbg !4288

for.cond:                                         ; preds = %for.inc99, %entry
  %0 = load i32, i32* %v, align 4, !dbg !4289
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !4291
  %cmp = icmp slt i32 %0, %1, !dbg !4292
  br i1 %cmp, label %for.body, label %for.end101, !dbg !4293

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %sn, metadata !4294, metadata !DIExpression()), !dbg !4296
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4297
  %3 = load i32, i32* %v, align 4, !dbg !4298
  %idxprom = sext i32 %3 to i64, !dbg !4297
  %arrayidx = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom, !dbg !4297
  store %struct.SkinNode* %arrayidx, %struct.SkinNode** %sn, align 8, !dbg !4296
  %4 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4299
  %flag = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %4, i32 0, i32 2, !dbg !4301
  %5 = load i32, i32* %flag, align 4, !dbg !4301
  %and = and i32 %5, 4, !dbg !4302
  %tobool = icmp ne i32 %and, 0, !dbg !4302
  br i1 %tobool, label %if.then, label %if.else, !dbg !4303

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %v_order, metadata !4304, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4307, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.declare(metadata [4 x i32]* %order, metadata !4309, metadata !DIExpression()), !dbg !4310
  %6 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4311
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %6, i32 0, i32 0, !dbg !4312
  %arrayidx1 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 0, !dbg !4311
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx1, i32 0, i32 0, !dbg !4313
  %arraydecay = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !4311
  %7 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4314
  %frames2 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %7, i32 0, i32 0, !dbg !4315
  %arrayidx3 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames2, i64 0, i64 1, !dbg !4314
  %verts4 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx3, i32 0, i32 0, !dbg !4316
  %arraydecay5 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts4, i64 0, i64 0, !dbg !4314
  %arraydecay6 = getelementptr inbounds [4 x i32], [4 x i32]* %order, i64 0, i64 0, !dbg !4317
  call void @skin_choose_quad_bridge_order(%struct.BMVert** %arraydecay, %struct.BMVert** %arraydecay5, i32* %arraydecay6), !dbg !4318
  store i32 0, i32* %i, align 4, !dbg !4319
  br label %for.cond7, !dbg !4321

for.cond7:                                        ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !4322
  %cmp8 = icmp slt i32 %8, 4, !dbg !4324
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !4325

for.body9:                                        ; preds = %for.cond7
  %9 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4326
  %frames10 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %9, i32 0, i32 0, !dbg !4327
  %arrayidx11 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames10, i64 0, i64 1, !dbg !4326
  %verts12 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx11, i32 0, i32 0, !dbg !4328
  %10 = load i32, i32* %i, align 4, !dbg !4329
  %idxprom13 = sext i32 %10 to i64, !dbg !4330
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %order, i64 0, i64 %idxprom13, !dbg !4330
  %11 = load i32, i32* %arrayidx14, align 4, !dbg !4330
  %idxprom15 = sext i32 %11 to i64, !dbg !4326
  %arrayidx16 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts12, i64 0, i64 %idxprom15, !dbg !4326
  %12 = load %struct.BMVert*, %struct.BMVert** %arrayidx16, align 8, !dbg !4326
  %13 = load i32, i32* %i, align 4, !dbg !4331
  %idxprom17 = sext i32 %13 to i64, !dbg !4332
  %arrayidx18 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %v_order, i64 0, i64 %idxprom17, !dbg !4332
  store %struct.BMVert* %12, %struct.BMVert** %arrayidx18, align 8, !dbg !4333
  br label %for.inc, !dbg !4332

for.inc:                                          ; preds = %for.body9
  %14 = load i32, i32* %i, align 4, !dbg !4334
  %inc = add nsw i32 %14, 1, !dbg !4334
  store i32 %inc, i32* %i, align 4, !dbg !4334
  br label %for.cond7, !dbg !4335, !llvm.loop !4336

for.end:                                          ; preds = %for.cond7
  %15 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4338
  %16 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4339
  %frames19 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %16, i32 0, i32 0, !dbg !4340
  %arrayidx20 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames19, i64 0, i64 0, !dbg !4339
  %verts21 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx20, i32 0, i32 0, !dbg !4341
  %arraydecay22 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts21, i64 0, i64 0, !dbg !4339
  %arraydecay23 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %v_order, i64 0, i64 0, !dbg !4342
  call void @connect_frames(%struct.SkinOutput* %15, %struct.BMVert** %arraydecay22, %struct.BMVert** %arraydecay23), !dbg !4343
  br label %if.end34, !dbg !4344

if.else:                                          ; preds = %for.body
  %17 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4345
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %17, i32 0, i32 1, !dbg !4347
  %18 = load i32, i32* %totframe, align 8, !dbg !4347
  %cmp24 = icmp eq i32 %18, 2, !dbg !4348
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !4349

if.then25:                                        ; preds = %if.else
  %19 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4350
  %20 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4352
  %frames26 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %20, i32 0, i32 0, !dbg !4353
  %arrayidx27 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames26, i64 0, i64 0, !dbg !4352
  %verts28 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx27, i32 0, i32 0, !dbg !4354
  %arraydecay29 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts28, i64 0, i64 0, !dbg !4352
  %21 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4355
  %frames30 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %21, i32 0, i32 0, !dbg !4356
  %arrayidx31 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames30, i64 0, i64 1, !dbg !4355
  %verts32 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx31, i32 0, i32 0, !dbg !4357
  %arraydecay33 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts32, i64 0, i64 0, !dbg !4355
  call void @connect_frames(%struct.SkinOutput* %19, %struct.BMVert** %arraydecay29, %struct.BMVert** %arraydecay33), !dbg !4358
  br label %if.end, !dbg !4359

if.end:                                           ; preds = %if.then25, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end, %for.end
  %22 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4360
  %flag35 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %22, i32 0, i32 2, !dbg !4362
  %23 = load i32, i32* %flag35, align 4, !dbg !4362
  %and36 = and i32 %23, 1, !dbg !4363
  %tobool37 = icmp ne i32 %and36, 0, !dbg !4363
  br i1 %tobool37, label %if.then38, label %if.end77, !dbg !4364

if.then38:                                        ; preds = %if.end34
  %24 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4365
  %flag39 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %24, i32 0, i32 2, !dbg !4368
  %25 = load i32, i32* %flag39, align 4, !dbg !4368
  %and40 = and i32 %25, 8, !dbg !4369
  %tobool41 = icmp ne i32 %and40, 0, !dbg !4369
  br i1 %tobool41, label %if.then42, label %if.else59, !dbg !4370

if.then42:                                        ; preds = %if.then38
  %26 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4371
  %27 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4373
  %frames43 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %27, i32 0, i32 0, !dbg !4374
  %arrayidx44 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames43, i64 0, i64 0, !dbg !4373
  %verts45 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx44, i32 0, i32 0, !dbg !4375
  %arrayidx46 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts45, i64 0, i64 0, !dbg !4373
  %28 = load %struct.BMVert*, %struct.BMVert** %arrayidx46, align 8, !dbg !4373
  %29 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4376
  %frames47 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %29, i32 0, i32 0, !dbg !4377
  %arrayidx48 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames47, i64 0, i64 0, !dbg !4376
  %verts49 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx48, i32 0, i32 0, !dbg !4378
  %arrayidx50 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts49, i64 0, i64 1, !dbg !4376
  %30 = load %struct.BMVert*, %struct.BMVert** %arrayidx50, align 8, !dbg !4376
  %31 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4379
  %frames51 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %31, i32 0, i32 0, !dbg !4380
  %arrayidx52 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames51, i64 0, i64 0, !dbg !4379
  %verts53 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx52, i32 0, i32 0, !dbg !4381
  %arrayidx54 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts53, i64 0, i64 2, !dbg !4379
  %32 = load %struct.BMVert*, %struct.BMVert** %arrayidx54, align 8, !dbg !4379
  %33 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4382
  %frames55 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %33, i32 0, i32 0, !dbg !4383
  %arrayidx56 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames55, i64 0, i64 0, !dbg !4382
  %verts57 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx56, i32 0, i32 0, !dbg !4384
  %arrayidx58 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts57, i64 0, i64 3, !dbg !4382
  %34 = load %struct.BMVert*, %struct.BMVert** %arrayidx58, align 8, !dbg !4382
  call void @add_poly(%struct.SkinOutput* %26, %struct.BMVert* %28, %struct.BMVert* %30, %struct.BMVert* %32, %struct.BMVert* %34), !dbg !4385
  br label %if.end76, !dbg !4386

if.else59:                                        ; preds = %if.then38
  %35 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4387
  %36 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4389
  %frames60 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %36, i32 0, i32 0, !dbg !4390
  %arrayidx61 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames60, i64 0, i64 0, !dbg !4389
  %verts62 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx61, i32 0, i32 0, !dbg !4391
  %arrayidx63 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts62, i64 0, i64 3, !dbg !4389
  %37 = load %struct.BMVert*, %struct.BMVert** %arrayidx63, align 8, !dbg !4389
  %38 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4392
  %frames64 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %38, i32 0, i32 0, !dbg !4393
  %arrayidx65 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames64, i64 0, i64 0, !dbg !4392
  %verts66 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx65, i32 0, i32 0, !dbg !4394
  %arrayidx67 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts66, i64 0, i64 2, !dbg !4392
  %39 = load %struct.BMVert*, %struct.BMVert** %arrayidx67, align 8, !dbg !4392
  %40 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4395
  %frames68 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %40, i32 0, i32 0, !dbg !4396
  %arrayidx69 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames68, i64 0, i64 0, !dbg !4395
  %verts70 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx69, i32 0, i32 0, !dbg !4397
  %arrayidx71 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts70, i64 0, i64 1, !dbg !4395
  %41 = load %struct.BMVert*, %struct.BMVert** %arrayidx71, align 8, !dbg !4395
  %42 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4398
  %frames72 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %42, i32 0, i32 0, !dbg !4399
  %arrayidx73 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames72, i64 0, i64 0, !dbg !4398
  %verts74 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx73, i32 0, i32 0, !dbg !4400
  %arrayidx75 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts74, i64 0, i64 0, !dbg !4398
  %43 = load %struct.BMVert*, %struct.BMVert** %arrayidx75, align 8, !dbg !4398
  call void @add_poly(%struct.SkinOutput* %35, %struct.BMVert* %37, %struct.BMVert* %39, %struct.BMVert* %41, %struct.BMVert* %43), !dbg !4401
  br label %if.end76

if.end76:                                         ; preds = %if.else59, %if.then42
  br label %if.end77, !dbg !4402

if.end77:                                         ; preds = %if.end76, %if.end34
  %44 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4403
  %flag78 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %44, i32 0, i32 2, !dbg !4405
  %45 = load i32, i32* %flag78, align 4, !dbg !4405
  %and79 = and i32 %45, 2, !dbg !4406
  %tobool80 = icmp ne i32 %and79, 0, !dbg !4406
  br i1 %tobool80, label %if.then81, label %if.end98, !dbg !4407

if.then81:                                        ; preds = %if.end77
  %46 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4408
  %47 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4410
  %frames82 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %47, i32 0, i32 0, !dbg !4411
  %arrayidx83 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames82, i64 0, i64 1, !dbg !4410
  %verts84 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx83, i32 0, i32 0, !dbg !4412
  %arrayidx85 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts84, i64 0, i64 0, !dbg !4410
  %48 = load %struct.BMVert*, %struct.BMVert** %arrayidx85, align 8, !dbg !4410
  %49 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4413
  %frames86 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %49, i32 0, i32 0, !dbg !4414
  %arrayidx87 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames86, i64 0, i64 1, !dbg !4413
  %verts88 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx87, i32 0, i32 0, !dbg !4415
  %arrayidx89 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts88, i64 0, i64 1, !dbg !4413
  %50 = load %struct.BMVert*, %struct.BMVert** %arrayidx89, align 8, !dbg !4413
  %51 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4416
  %frames90 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %51, i32 0, i32 0, !dbg !4417
  %arrayidx91 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames90, i64 0, i64 1, !dbg !4416
  %verts92 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx91, i32 0, i32 0, !dbg !4418
  %arrayidx93 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts92, i64 0, i64 2, !dbg !4416
  %52 = load %struct.BMVert*, %struct.BMVert** %arrayidx93, align 8, !dbg !4416
  %53 = load %struct.SkinNode*, %struct.SkinNode** %sn, align 8, !dbg !4419
  %frames94 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %53, i32 0, i32 0, !dbg !4420
  %arrayidx95 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames94, i64 0, i64 1, !dbg !4419
  %verts96 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx95, i32 0, i32 0, !dbg !4421
  %arrayidx97 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts96, i64 0, i64 3, !dbg !4419
  %54 = load %struct.BMVert*, %struct.BMVert** %arrayidx97, align 8, !dbg !4419
  call void @add_poly(%struct.SkinOutput* %46, %struct.BMVert* %48, %struct.BMVert* %50, %struct.BMVert* %52, %struct.BMVert* %54), !dbg !4422
  br label %if.end98, !dbg !4423

if.end98:                                         ; preds = %if.then81, %if.end77
  br label %for.inc99, !dbg !4424

for.inc99:                                        ; preds = %if.end98
  %55 = load i32, i32* %v, align 4, !dbg !4425
  %inc100 = add nsw i32 %55, 1, !dbg !4425
  store i32 %inc100, i32* %v, align 4, !dbg !4425
  br label %for.cond, !dbg !4426, !llvm.loop !4427

for.end101:                                       ; preds = %for.cond
  ret void, !dbg !4429
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_output_connections(%struct.SkinOutput* %so, %struct.SkinNode* %skin_nodes, %struct.MEdge* %medge, i32 %totedge) #0 !dbg !4430 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %skin_nodes.addr = alloca %struct.SkinNode*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %totedge.addr = alloca i32, align 4
  %e = alloca i32, align 4
  %a = alloca %struct.SkinNode*, align 8
  %b = alloca %struct.SkinNode*, align 8
  %fr = alloca [2 x %struct.Frame*], align 16
  %v_order = alloca [4 x %struct.BMVert*], align 16
  %i = alloca i32, align 4
  %order = alloca [4 x i32], align 16
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !4433, metadata !DIExpression()), !dbg !4434
  store %struct.SkinNode* %skin_nodes, %struct.SkinNode** %skin_nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %skin_nodes.addr, metadata !4435, metadata !DIExpression()), !dbg !4436
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !4439, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4441, metadata !DIExpression()), !dbg !4442
  store i32 0, i32* %e, align 4, !dbg !4443
  br label %for.cond, !dbg !4445

for.cond:                                         ; preds = %for.inc66, %entry
  %0 = load i32, i32* %e, align 4, !dbg !4446
  %1 = load i32, i32* %totedge.addr, align 4, !dbg !4448
  %cmp = icmp slt i32 %0, %1, !dbg !4449
  br i1 %cmp, label %for.body, label %for.end68, !dbg !4450

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %a, metadata !4451, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %b, metadata !4454, metadata !DIExpression()), !dbg !4455
  %2 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4456
  %3 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !4457
  %4 = load i32, i32* %e, align 4, !dbg !4458
  %idxprom = sext i32 %4 to i64, !dbg !4457
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %3, i64 %idxprom, !dbg !4457
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx, i32 0, i32 0, !dbg !4459
  %5 = load i32, i32* %v1, align 4, !dbg !4459
  %idxprom1 = zext i32 %5 to i64, !dbg !4456
  %arrayidx2 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %2, i64 %idxprom1, !dbg !4456
  store %struct.SkinNode* %arrayidx2, %struct.SkinNode** %a, align 8, !dbg !4460
  %6 = load %struct.SkinNode*, %struct.SkinNode** %skin_nodes.addr, align 8, !dbg !4461
  %7 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !4462
  %8 = load i32, i32* %e, align 4, !dbg !4463
  %idxprom3 = sext i32 %8 to i64, !dbg !4462
  %arrayidx4 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %7, i64 %idxprom3, !dbg !4462
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx4, i32 0, i32 1, !dbg !4464
  %9 = load i32, i32* %v2, align 4, !dbg !4464
  %idxprom5 = zext i32 %9 to i64, !dbg !4461
  %arrayidx6 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %6, i64 %idxprom5, !dbg !4461
  store %struct.SkinNode* %arrayidx6, %struct.SkinNode** %b, align 8, !dbg !4465
  %10 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4466
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %10, i32 0, i32 1, !dbg !4468
  %11 = load i32, i32* %totframe, align 8, !dbg !4468
  %tobool = icmp ne i32 %11, 0, !dbg !4466
  br i1 %tobool, label %land.lhs.true, label %if.end65, !dbg !4469

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4470
  %totframe7 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %12, i32 0, i32 1, !dbg !4471
  %13 = load i32, i32* %totframe7, align 8, !dbg !4471
  %tobool8 = icmp ne i32 %13, 0, !dbg !4470
  br i1 %tobool8, label %if.then, label %if.end65, !dbg !4472

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4473
  %flag = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %14, i32 0, i32 2, !dbg !4476
  %15 = load i32, i32* %flag, align 4, !dbg !4476
  %and = and i32 %15, 4, !dbg !4477
  %tobool9 = icmp ne i32 %and, 0, !dbg !4477
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4478

lor.lhs.false:                                    ; preds = %if.then
  %16 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4479
  %flag10 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %16, i32 0, i32 2, !dbg !4480
  %17 = load i32, i32* %flag10, align 4, !dbg !4480
  %and11 = and i32 %17, 4, !dbg !4481
  %tobool12 = icmp ne i32 %and11, 0, !dbg !4481
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !4482

if.then13:                                        ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata [2 x %struct.Frame*]* %fr, metadata !4483, metadata !DIExpression()), !dbg !4486
  %arrayinit.begin = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 0, !dbg !4487
  %18 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4488
  %frames = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %18, i32 0, i32 0, !dbg !4489
  %arrayidx14 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames, i64 0, i64 0, !dbg !4488
  store %struct.Frame* %arrayidx14, %struct.Frame** %arrayinit.begin, align 8, !dbg !4487
  %arrayinit.element = getelementptr inbounds %struct.Frame*, %struct.Frame** %arrayinit.begin, i64 1, !dbg !4487
  %19 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4490
  %frames15 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %19, i32 0, i32 0, !dbg !4491
  %arrayidx16 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames15, i64 0, i64 0, !dbg !4490
  store %struct.Frame* %arrayidx16, %struct.Frame** %arrayinit.element, align 8, !dbg !4487
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %v_order, metadata !4492, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata [4 x i32]* %order, metadata !4496, metadata !DIExpression()), !dbg !4497
  %20 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4498
  %flag17 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %20, i32 0, i32 2, !dbg !4500
  %21 = load i32, i32* %flag17, align 4, !dbg !4500
  %and18 = and i32 %21, 4, !dbg !4501
  %tobool19 = icmp ne i32 %and18, 0, !dbg !4501
  br i1 %tobool19, label %land.lhs.true20, label %if.end, !dbg !4502

land.lhs.true20:                                  ; preds = %if.then13
  %22 = load i32, i32* %e, align 4, !dbg !4503
  %23 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4504
  %seam_edges = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %23, i32 0, i32 3, !dbg !4505
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %seam_edges, i64 0, i64 0, !dbg !4504
  %24 = load i32, i32* %arrayidx21, align 8, !dbg !4504
  %cmp22 = icmp ne i32 %22, %24, !dbg !4506
  br i1 %cmp22, label %if.then23, label %if.end, !dbg !4507

if.then23:                                        ; preds = %land.lhs.true20
  %arrayidx24 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 0, !dbg !4508
  %25 = load %struct.Frame*, %struct.Frame** %arrayidx24, align 16, !dbg !4509
  %incdec.ptr = getelementptr inbounds %struct.Frame, %struct.Frame* %25, i32 1, !dbg !4509
  store %struct.Frame* %incdec.ptr, %struct.Frame** %arrayidx24, align 16, !dbg !4509
  br label %if.end, !dbg !4508

if.end:                                           ; preds = %if.then23, %land.lhs.true20, %if.then13
  %26 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4510
  %flag25 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %26, i32 0, i32 2, !dbg !4512
  %27 = load i32, i32* %flag25, align 4, !dbg !4512
  %and26 = and i32 %27, 4, !dbg !4513
  %tobool27 = icmp ne i32 %and26, 0, !dbg !4513
  br i1 %tobool27, label %land.lhs.true28, label %if.end35, !dbg !4514

land.lhs.true28:                                  ; preds = %if.end
  %28 = load i32, i32* %e, align 4, !dbg !4515
  %29 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4516
  %seam_edges29 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %29, i32 0, i32 3, !dbg !4517
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %seam_edges29, i64 0, i64 0, !dbg !4516
  %30 = load i32, i32* %arrayidx30, align 8, !dbg !4516
  %cmp31 = icmp ne i32 %28, %30, !dbg !4518
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !4519

if.then32:                                        ; preds = %land.lhs.true28
  %arrayidx33 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 1, !dbg !4520
  %31 = load %struct.Frame*, %struct.Frame** %arrayidx33, align 8, !dbg !4521
  %incdec.ptr34 = getelementptr inbounds %struct.Frame, %struct.Frame* %31, i32 1, !dbg !4521
  store %struct.Frame* %incdec.ptr34, %struct.Frame** %arrayidx33, align 8, !dbg !4521
  br label %if.end35, !dbg !4520

if.end35:                                         ; preds = %if.then32, %land.lhs.true28, %if.end
  %arrayidx36 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 0, !dbg !4522
  %32 = load %struct.Frame*, %struct.Frame** %arrayidx36, align 16, !dbg !4522
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %32, i32 0, i32 0, !dbg !4523
  %arraydecay = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !4522
  %arrayidx37 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 1, !dbg !4524
  %33 = load %struct.Frame*, %struct.Frame** %arrayidx37, align 8, !dbg !4524
  %verts38 = getelementptr inbounds %struct.Frame, %struct.Frame* %33, i32 0, i32 0, !dbg !4525
  %arraydecay39 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts38, i64 0, i64 0, !dbg !4524
  %arraydecay40 = getelementptr inbounds [4 x i32], [4 x i32]* %order, i64 0, i64 0, !dbg !4526
  call void @skin_choose_quad_bridge_order(%struct.BMVert** %arraydecay, %struct.BMVert** %arraydecay39, i32* %arraydecay40), !dbg !4527
  store i32 0, i32* %i, align 4, !dbg !4528
  br label %for.cond41, !dbg !4530

for.cond41:                                       ; preds = %for.inc, %if.end35
  %34 = load i32, i32* %i, align 4, !dbg !4531
  %cmp42 = icmp slt i32 %34, 4, !dbg !4533
  br i1 %cmp42, label %for.body43, label %for.end, !dbg !4534

for.body43:                                       ; preds = %for.cond41
  %arrayidx44 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 1, !dbg !4535
  %35 = load %struct.Frame*, %struct.Frame** %arrayidx44, align 8, !dbg !4535
  %verts45 = getelementptr inbounds %struct.Frame, %struct.Frame* %35, i32 0, i32 0, !dbg !4536
  %36 = load i32, i32* %i, align 4, !dbg !4537
  %idxprom46 = sext i32 %36 to i64, !dbg !4538
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %order, i64 0, i64 %idxprom46, !dbg !4538
  %37 = load i32, i32* %arrayidx47, align 4, !dbg !4538
  %idxprom48 = sext i32 %37 to i64, !dbg !4535
  %arrayidx49 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts45, i64 0, i64 %idxprom48, !dbg !4535
  %38 = load %struct.BMVert*, %struct.BMVert** %arrayidx49, align 8, !dbg !4535
  %39 = load i32, i32* %i, align 4, !dbg !4539
  %idxprom50 = sext i32 %39 to i64, !dbg !4540
  %arrayidx51 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %v_order, i64 0, i64 %idxprom50, !dbg !4540
  store %struct.BMVert* %38, %struct.BMVert** %arrayidx51, align 8, !dbg !4541
  br label %for.inc, !dbg !4540

for.inc:                                          ; preds = %for.body43
  %40 = load i32, i32* %i, align 4, !dbg !4542
  %inc = add nsw i32 %40, 1, !dbg !4542
  store i32 %inc, i32* %i, align 4, !dbg !4542
  br label %for.cond41, !dbg !4543, !llvm.loop !4544

for.end:                                          ; preds = %for.cond41
  %41 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4546
  %arrayidx52 = getelementptr inbounds [2 x %struct.Frame*], [2 x %struct.Frame*]* %fr, i64 0, i64 0, !dbg !4547
  %42 = load %struct.Frame*, %struct.Frame** %arrayidx52, align 16, !dbg !4547
  %verts53 = getelementptr inbounds %struct.Frame, %struct.Frame* %42, i32 0, i32 0, !dbg !4548
  %arraydecay54 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts53, i64 0, i64 0, !dbg !4547
  %arraydecay55 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %v_order, i64 0, i64 0, !dbg !4549
  call void @connect_frames(%struct.SkinOutput* %41, %struct.BMVert** %arraydecay54, %struct.BMVert** %arraydecay55), !dbg !4550
  br label %if.end64, !dbg !4551

if.else:                                          ; preds = %lor.lhs.false
  %43 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4552
  %44 = load %struct.SkinNode*, %struct.SkinNode** %a, align 8, !dbg !4554
  %frames56 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %44, i32 0, i32 0, !dbg !4555
  %arrayidx57 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames56, i64 0, i64 0, !dbg !4554
  %verts58 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx57, i32 0, i32 0, !dbg !4556
  %arraydecay59 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts58, i64 0, i64 0, !dbg !4554
  %45 = load %struct.SkinNode*, %struct.SkinNode** %b, align 8, !dbg !4557
  %frames60 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %45, i32 0, i32 0, !dbg !4558
  %arrayidx61 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames60, i64 0, i64 0, !dbg !4557
  %verts62 = getelementptr inbounds %struct.Frame, %struct.Frame* %arrayidx61, i32 0, i32 0, !dbg !4559
  %arraydecay63 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts62, i64 0, i64 0, !dbg !4557
  call void @connect_frames(%struct.SkinOutput* %43, %struct.BMVert** %arraydecay59, %struct.BMVert** %arraydecay63), !dbg !4560
  br label %if.end64

if.end64:                                         ; preds = %if.else, %for.end
  br label %if.end65, !dbg !4561

if.end65:                                         ; preds = %if.end64, %land.lhs.true, %for.body
  br label %for.inc66, !dbg !4562

for.inc66:                                        ; preds = %if.end65
  %46 = load i32, i32* %e, align 4, !dbg !4563
  %inc67 = add nsw i32 %46, 1, !dbg !4563
  store i32 %inc67, i32* %e, align 4, !dbg !4563
  br label %for.cond, !dbg !4564, !llvm.loop !4565

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !4567
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Frame** @collect_hull_frames(i32 %v, %struct.SkinNode* %frames, %struct.MeshElemMap* %emap, %struct.MEdge* %medge, i32* %tothullframe) #0 !dbg !4568 {
entry:
  %v.addr = alloca i32, align 4
  %frames.addr = alloca %struct.SkinNode*, align 8
  %emap.addr = alloca %struct.MeshElemMap*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %tothullframe.addr = alloca i32*, align 8
  %f = alloca %struct.SkinNode*, align 8
  %hull_frames = alloca %struct.Frame**, align 8
  %nbr = alloca i32, align 4
  %i = alloca i32, align 4
  %e = alloca %struct.MEdge*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  store %struct.SkinNode* %frames, %struct.SkinNode** %frames.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %frames.addr, metadata !4573, metadata !DIExpression()), !dbg !4574
  store %struct.MeshElemMap* %emap, %struct.MeshElemMap** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap.addr, metadata !4575, metadata !DIExpression()), !dbg !4576
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !4577, metadata !DIExpression()), !dbg !4578
  store i32* %tothullframe, i32** %tothullframe.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tothullframe.addr, metadata !4579, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.declare(metadata %struct.SkinNode** %f, metadata !4581, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.declare(metadata %struct.Frame*** %hull_frames, metadata !4583, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.declare(metadata i32* %nbr, metadata !4585, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4587, metadata !DIExpression()), !dbg !4588
  %0 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !4589
  %1 = load i32, i32* %v.addr, align 4, !dbg !4590
  %idxprom = sext i32 %1 to i64, !dbg !4589
  %arrayidx = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %0, i64 %idxprom, !dbg !4589
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx, i32 0, i32 1, !dbg !4591
  %2 = load i32, i32* %count, align 8, !dbg !4591
  %3 = load i32*, i32** %tothullframe.addr, align 8, !dbg !4592
  store i32 %2, i32* %3, align 4, !dbg !4593
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4594
  %5 = load i32*, i32** %tothullframe.addr, align 8, !dbg !4595
  %6 = load i32, i32* %5, align 4, !dbg !4596
  %conv = sext i32 %6 to i64, !dbg !4597
  %mul = mul i64 8, %conv, !dbg !4598
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)), !dbg !4594
  %7 = bitcast i8* %call to %struct.Frame**, !dbg !4594
  store %struct.Frame** %7, %struct.Frame*** %hull_frames, align 8, !dbg !4599
  store i32 0, i32* %i, align 4, !dbg !4600
  store i32 0, i32* %nbr, align 4, !dbg !4601
  br label %for.cond, !dbg !4603

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %nbr, align 4, !dbg !4604
  %9 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !4606
  %10 = load i32, i32* %v.addr, align 4, !dbg !4607
  %idxprom1 = sext i32 %10 to i64, !dbg !4606
  %arrayidx2 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %9, i64 %idxprom1, !dbg !4606
  %count3 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx2, i32 0, i32 1, !dbg !4608
  %11 = load i32, i32* %count3, align 8, !dbg !4608
  %cmp = icmp slt i32 %8, %11, !dbg !4609
  br i1 %cmp, label %for.body, label %for.end, !dbg !4610

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e, metadata !4611, metadata !DIExpression()), !dbg !4613
  %12 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !4614
  %13 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap.addr, align 8, !dbg !4615
  %14 = load i32, i32* %v.addr, align 4, !dbg !4616
  %idxprom5 = sext i32 %14 to i64, !dbg !4615
  %arrayidx6 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %13, i64 %idxprom5, !dbg !4615
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx6, i32 0, i32 0, !dbg !4617
  %15 = load i32*, i32** %indices, align 8, !dbg !4617
  %16 = load i32, i32* %nbr, align 4, !dbg !4618
  %idxprom7 = sext i32 %16 to i64, !dbg !4615
  %arrayidx8 = getelementptr inbounds i32, i32* %15, i64 %idxprom7, !dbg !4615
  %17 = load i32, i32* %arrayidx8, align 4, !dbg !4615
  %idxprom9 = sext i32 %17 to i64, !dbg !4614
  %arrayidx10 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %12, i64 %idxprom9, !dbg !4614
  store %struct.MEdge* %arrayidx10, %struct.MEdge** %e, align 8, !dbg !4613
  %18 = load %struct.SkinNode*, %struct.SkinNode** %frames.addr, align 8, !dbg !4619
  %19 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !4620
  %20 = load i32, i32* %v.addr, align 4, !dbg !4621
  %call11 = call i32 @BKE_mesh_edge_other_vert(%struct.MEdge* %19, i32 %20), !dbg !4622
  %idxprom12 = sext i32 %call11 to i64, !dbg !4619
  %arrayidx13 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %18, i64 %idxprom12, !dbg !4619
  store %struct.SkinNode* %arrayidx13, %struct.SkinNode** %f, align 8, !dbg !4623
  %21 = load %struct.SkinNode*, %struct.SkinNode** %f, align 8, !dbg !4624
  %totframe = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %21, i32 0, i32 1, !dbg !4626
  %22 = load i32, i32* %totframe, align 8, !dbg !4626
  %tobool = icmp ne i32 %22, 0, !dbg !4624
  br i1 %tobool, label %if.then, label %if.else, !dbg !4627

if.then:                                          ; preds = %for.body
  %23 = load %struct.SkinNode*, %struct.SkinNode** %f, align 8, !dbg !4628
  %frames14 = getelementptr inbounds %struct.SkinNode, %struct.SkinNode* %23, i32 0, i32 0, !dbg !4629
  %arrayidx15 = getelementptr inbounds [2 x %struct.Frame], [2 x %struct.Frame]* %frames14, i64 0, i64 0, !dbg !4628
  %24 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !4630
  %25 = load i32, i32* %i, align 4, !dbg !4631
  %inc = add nsw i32 %25, 1, !dbg !4631
  store i32 %inc, i32* %i, align 4, !dbg !4631
  %idxprom16 = sext i32 %25 to i64, !dbg !4630
  %arrayidx17 = getelementptr inbounds %struct.Frame*, %struct.Frame** %24, i64 %idxprom16, !dbg !4630
  store %struct.Frame* %arrayidx15, %struct.Frame** %arrayidx17, align 8, !dbg !4632
  br label %if.end, !dbg !4630

if.else:                                          ; preds = %for.body
  %26 = load i32*, i32** %tothullframe.addr, align 8, !dbg !4633
  %27 = load i32, i32* %26, align 4, !dbg !4634
  %dec = add nsw i32 %27, -1, !dbg !4634
  store i32 %dec, i32* %26, align 4, !dbg !4634
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !4635

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %nbr, align 4, !dbg !4636
  %inc18 = add nsw i32 %28, 1, !dbg !4636
  store i32 %inc18, i32* %nbr, align 4, !dbg !4636
  br label %for.cond, !dbg !4637, !llvm.loop !4638

for.end:                                          ; preds = %for.cond
  %29 = load %struct.Frame**, %struct.Frame*** %hull_frames, align 8, !dbg !4640
  ret %struct.Frame** %29, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_frame_corners(%struct.Frame** %frames, i32 %totframe) #0 !dbg !4642 {
entry:
  %frames.addr = alloca %struct.Frame**, align 8
  %totframe.addr = alloca i32, align 4
  %dist = alloca float, align 4
  %side_a = alloca float, align 4
  %side_b = alloca float, align 4
  %thresh = alloca float, align 4
  %mid = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.Frame** %frames, %struct.Frame*** %frames.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame*** %frames.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  store i32 %totframe, i32* %totframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totframe.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.declare(metadata float* %dist, metadata !4649, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata float* %side_a, metadata !4651, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.declare(metadata float* %side_b, metadata !4653, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !4655, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.declare(metadata [3 x float]* %mid, metadata !4657, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4659, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4661, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4663, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4665, metadata !DIExpression()), !dbg !4666
  store i32 0, i32* %i, align 4, !dbg !4667
  br label %for.cond, !dbg !4669

for.cond:                                         ; preds = %for.inc87, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4670
  %1 = load i32, i32* %totframe.addr, align 4, !dbg !4672
  %cmp = icmp slt i32 %0, %1, !dbg !4673
  br i1 %cmp, label %for.body, label %for.end89, !dbg !4674

for.body:                                         ; preds = %for.cond
  %2 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4675
  %3 = load i32, i32* %i, align 4, !dbg !4677
  %idxprom = sext i32 %3 to i64, !dbg !4675
  %arrayidx = getelementptr inbounds %struct.Frame*, %struct.Frame** %2, i64 %idxprom, !dbg !4675
  %4 = load %struct.Frame*, %struct.Frame** %arrayidx, align 8, !dbg !4675
  %call = call float @frame_len(%struct.Frame* %4), !dbg !4678
  store float %call, float* %side_a, align 4, !dbg !4679
  store i32 0, i32* %j, align 4, !dbg !4680
  br label %for.cond1, !dbg !4682

for.cond1:                                        ; preds = %for.inc84, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !4683
  %cmp2 = icmp slt i32 %5, 4, !dbg !4685
  br i1 %cmp2, label %for.body3, label %for.end86, !dbg !4686

for.body3:                                        ; preds = %for.cond1
  %6 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4687
  %7 = load i32, i32* %i, align 4, !dbg !4690
  %idxprom4 = sext i32 %7 to i64, !dbg !4687
  %arrayidx5 = getelementptr inbounds %struct.Frame*, %struct.Frame** %6, i64 %idxprom4, !dbg !4687
  %8 = load %struct.Frame*, %struct.Frame** %arrayidx5, align 8, !dbg !4687
  %merge = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i32 0, i32 2, !dbg !4691
  %9 = load i32, i32* %j, align 4, !dbg !4692
  %idxprom6 = sext i32 %9 to i64, !dbg !4687
  %arrayidx7 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge, i64 0, i64 %idxprom6, !dbg !4687
  %frame = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx7, i32 0, i32 0, !dbg !4693
  %10 = load %struct.Frame*, %struct.Frame** %frame, align 8, !dbg !4693
  %tobool = icmp ne %struct.Frame* %10, null, !dbg !4687
  br i1 %tobool, label %if.then, label %if.end, !dbg !4694

if.then:                                          ; preds = %for.body3
  br label %for.inc84, !dbg !4695

if.end:                                           ; preds = %for.body3
  %11 = load i32, i32* %i, align 4, !dbg !4696
  %add = add nsw i32 %11, 1, !dbg !4698
  store i32 %add, i32* %k, align 4, !dbg !4699
  br label %for.cond8, !dbg !4700

for.cond8:                                        ; preds = %for.inc81, %if.end
  %12 = load i32, i32* %k, align 4, !dbg !4701
  %13 = load i32, i32* %totframe.addr, align 4, !dbg !4703
  %cmp9 = icmp slt i32 %12, %13, !dbg !4704
  br i1 %cmp9, label %for.body10, label %for.end83, !dbg !4705

for.body10:                                       ; preds = %for.cond8
  %14 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4706
  %15 = load i32, i32* %k, align 4, !dbg !4708
  %idxprom11 = sext i32 %15 to i64, !dbg !4706
  %arrayidx12 = getelementptr inbounds %struct.Frame*, %struct.Frame** %14, i64 %idxprom11, !dbg !4706
  %16 = load %struct.Frame*, %struct.Frame** %arrayidx12, align 8, !dbg !4706
  %call13 = call float @frame_len(%struct.Frame* %16), !dbg !4709
  store float %call13, float* %side_b, align 4, !dbg !4710
  %17 = load float, float* %side_a, align 4, !dbg !4711
  %18 = load float, float* %side_b, align 4, !dbg !4712
  %call14 = call float @min_ff(float %17, float %18), !dbg !4713
  %div = fdiv float %call14, 2.000000e+00, !dbg !4714
  store float %div, float* %thresh, align 4, !dbg !4715
  store i32 0, i32* %l, align 4, !dbg !4716
  br label %for.cond15, !dbg !4718

for.cond15:                                       ; preds = %for.inc, %for.body10
  %19 = load i32, i32* %l, align 4, !dbg !4719
  %cmp16 = icmp slt i32 %19, 4, !dbg !4721
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !4722

for.body17:                                       ; preds = %for.cond15
  %20 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4723
  %21 = load i32, i32* %k, align 4, !dbg !4726
  %idxprom18 = sext i32 %21 to i64, !dbg !4723
  %arrayidx19 = getelementptr inbounds %struct.Frame*, %struct.Frame** %20, i64 %idxprom18, !dbg !4723
  %22 = load %struct.Frame*, %struct.Frame** %arrayidx19, align 8, !dbg !4723
  %merge20 = getelementptr inbounds %struct.Frame, %struct.Frame* %22, i32 0, i32 2, !dbg !4727
  %23 = load i32, i32* %l, align 4, !dbg !4728
  %idxprom21 = sext i32 %23 to i64, !dbg !4723
  %arrayidx22 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge20, i64 0, i64 %idxprom21, !dbg !4723
  %frame23 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx22, i32 0, i32 0, !dbg !4729
  %24 = load %struct.Frame*, %struct.Frame** %frame23, align 8, !dbg !4729
  %tobool24 = icmp ne %struct.Frame* %24, null, !dbg !4723
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !4730

if.then25:                                        ; preds = %for.body17
  br label %for.inc, !dbg !4731

if.end26:                                         ; preds = %for.body17
  %25 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4732
  %26 = load i32, i32* %i, align 4, !dbg !4733
  %idxprom27 = sext i32 %26 to i64, !dbg !4732
  %arrayidx28 = getelementptr inbounds %struct.Frame*, %struct.Frame** %25, i64 %idxprom27, !dbg !4732
  %27 = load %struct.Frame*, %struct.Frame** %arrayidx28, align 8, !dbg !4732
  %co = getelementptr inbounds %struct.Frame, %struct.Frame* %27, i32 0, i32 1, !dbg !4734
  %28 = load i32, i32* %j, align 4, !dbg !4735
  %idxprom29 = sext i32 %28 to i64, !dbg !4732
  %arrayidx30 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 %idxprom29, !dbg !4732
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !4732
  %29 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4736
  %30 = load i32, i32* %k, align 4, !dbg !4737
  %idxprom31 = sext i32 %30 to i64, !dbg !4736
  %arrayidx32 = getelementptr inbounds %struct.Frame*, %struct.Frame** %29, i64 %idxprom31, !dbg !4736
  %31 = load %struct.Frame*, %struct.Frame** %arrayidx32, align 8, !dbg !4736
  %co33 = getelementptr inbounds %struct.Frame, %struct.Frame* %31, i32 0, i32 1, !dbg !4738
  %32 = load i32, i32* %l, align 4, !dbg !4739
  %idxprom34 = sext i32 %32 to i64, !dbg !4736
  %arrayidx35 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co33, i64 0, i64 %idxprom34, !dbg !4736
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !4736
  %call37 = call float @len_v3v3(float* %arraydecay, float* %arraydecay36), !dbg !4740
  store float %call37, float* %dist, align 4, !dbg !4741
  %33 = load float, float* %dist, align 4, !dbg !4742
  %34 = load float, float* %thresh, align 4, !dbg !4744
  %cmp38 = fcmp olt float %33, %34, !dbg !4745
  br i1 %cmp38, label %if.then39, label %if.end80, !dbg !4746

if.then39:                                        ; preds = %if.end26
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %mid, i64 0, i64 0, !dbg !4747
  %35 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4749
  %36 = load i32, i32* %i, align 4, !dbg !4750
  %idxprom41 = sext i32 %36 to i64, !dbg !4749
  %arrayidx42 = getelementptr inbounds %struct.Frame*, %struct.Frame** %35, i64 %idxprom41, !dbg !4749
  %37 = load %struct.Frame*, %struct.Frame** %arrayidx42, align 8, !dbg !4749
  %co43 = getelementptr inbounds %struct.Frame, %struct.Frame* %37, i32 0, i32 1, !dbg !4751
  %38 = load i32, i32* %j, align 4, !dbg !4752
  %idxprom44 = sext i32 %38 to i64, !dbg !4749
  %arrayidx45 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co43, i64 0, i64 %idxprom44, !dbg !4749
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !4749
  %39 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4753
  %40 = load i32, i32* %k, align 4, !dbg !4754
  %idxprom47 = sext i32 %40 to i64, !dbg !4753
  %arrayidx48 = getelementptr inbounds %struct.Frame*, %struct.Frame** %39, i64 %idxprom47, !dbg !4753
  %41 = load %struct.Frame*, %struct.Frame** %arrayidx48, align 8, !dbg !4753
  %co49 = getelementptr inbounds %struct.Frame, %struct.Frame* %41, i32 0, i32 1, !dbg !4755
  %42 = load i32, i32* %l, align 4, !dbg !4756
  %idxprom50 = sext i32 %42 to i64, !dbg !4753
  %arrayidx51 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co49, i64 0, i64 %idxprom50, !dbg !4753
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx51, i64 0, i64 0, !dbg !4753
  call void @mid_v3_v3v3(float* %arraydecay40, float* %arraydecay46, float* %arraydecay52), !dbg !4757
  %43 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4758
  %44 = load i32, i32* %i, align 4, !dbg !4759
  %idxprom53 = sext i32 %44 to i64, !dbg !4758
  %arrayidx54 = getelementptr inbounds %struct.Frame*, %struct.Frame** %43, i64 %idxprom53, !dbg !4758
  %45 = load %struct.Frame*, %struct.Frame** %arrayidx54, align 8, !dbg !4758
  %co55 = getelementptr inbounds %struct.Frame, %struct.Frame* %45, i32 0, i32 1, !dbg !4760
  %46 = load i32, i32* %j, align 4, !dbg !4761
  %idxprom56 = sext i32 %46 to i64, !dbg !4758
  %arrayidx57 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co55, i64 0, i64 %idxprom56, !dbg !4758
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 0, !dbg !4758
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %mid, i64 0, i64 0, !dbg !4762
  call void @copy_v3_v3(float* %arraydecay58, float* %arraydecay59), !dbg !4763
  %47 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4764
  %48 = load i32, i32* %k, align 4, !dbg !4765
  %idxprom60 = sext i32 %48 to i64, !dbg !4764
  %arrayidx61 = getelementptr inbounds %struct.Frame*, %struct.Frame** %47, i64 %idxprom60, !dbg !4764
  %49 = load %struct.Frame*, %struct.Frame** %arrayidx61, align 8, !dbg !4764
  %co62 = getelementptr inbounds %struct.Frame, %struct.Frame* %49, i32 0, i32 1, !dbg !4766
  %50 = load i32, i32* %l, align 4, !dbg !4767
  %idxprom63 = sext i32 %50 to i64, !dbg !4764
  %arrayidx64 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co62, i64 0, i64 %idxprom63, !dbg !4764
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !4764
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %mid, i64 0, i64 0, !dbg !4768
  call void @copy_v3_v3(float* %arraydecay65, float* %arraydecay66), !dbg !4769
  %51 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4770
  %52 = load i32, i32* %i, align 4, !dbg !4771
  %idxprom67 = sext i32 %52 to i64, !dbg !4770
  %arrayidx68 = getelementptr inbounds %struct.Frame*, %struct.Frame** %51, i64 %idxprom67, !dbg !4770
  %53 = load %struct.Frame*, %struct.Frame** %arrayidx68, align 8, !dbg !4770
  %54 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4772
  %55 = load i32, i32* %k, align 4, !dbg !4773
  %idxprom69 = sext i32 %55 to i64, !dbg !4772
  %arrayidx70 = getelementptr inbounds %struct.Frame*, %struct.Frame** %54, i64 %idxprom69, !dbg !4772
  %56 = load %struct.Frame*, %struct.Frame** %arrayidx70, align 8, !dbg !4772
  %merge71 = getelementptr inbounds %struct.Frame, %struct.Frame* %56, i32 0, i32 2, !dbg !4774
  %57 = load i32, i32* %l, align 4, !dbg !4775
  %idxprom72 = sext i32 %57 to i64, !dbg !4772
  %arrayidx73 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge71, i64 0, i64 %idxprom72, !dbg !4772
  %frame74 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx73, i32 0, i32 0, !dbg !4776
  store %struct.Frame* %53, %struct.Frame** %frame74, align 8, !dbg !4777
  %58 = load i32, i32* %j, align 4, !dbg !4778
  %59 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4779
  %60 = load i32, i32* %k, align 4, !dbg !4780
  %idxprom75 = sext i32 %60 to i64, !dbg !4779
  %arrayidx76 = getelementptr inbounds %struct.Frame*, %struct.Frame** %59, i64 %idxprom75, !dbg !4779
  %61 = load %struct.Frame*, %struct.Frame** %arrayidx76, align 8, !dbg !4779
  %merge77 = getelementptr inbounds %struct.Frame, %struct.Frame* %61, i32 0, i32 2, !dbg !4781
  %62 = load i32, i32* %l, align 4, !dbg !4782
  %idxprom78 = sext i32 %62 to i64, !dbg !4779
  %arrayidx79 = getelementptr inbounds [4 x %struct.anon.0], [4 x %struct.anon.0]* %merge77, i64 0, i64 %idxprom78, !dbg !4779
  %corner = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx79, i32 0, i32 1, !dbg !4783
  store i32 %58, i32* %corner, align 8, !dbg !4784
  br label %for.end, !dbg !4785

if.end80:                                         ; preds = %if.end26
  br label %for.inc, !dbg !4786

for.inc:                                          ; preds = %if.end80, %if.then25
  %63 = load i32, i32* %l, align 4, !dbg !4787
  %inc = add nsw i32 %63, 1, !dbg !4787
  store i32 %inc, i32* %l, align 4, !dbg !4787
  br label %for.cond15, !dbg !4788, !llvm.loop !4789

for.end:                                          ; preds = %if.then39, %for.cond15
  br label %for.inc81, !dbg !4791

for.inc81:                                        ; preds = %for.end
  %64 = load i32, i32* %k, align 4, !dbg !4792
  %inc82 = add nsw i32 %64, 1, !dbg !4792
  store i32 %inc82, i32* %k, align 4, !dbg !4792
  br label %for.cond8, !dbg !4793, !llvm.loop !4794

for.end83:                                        ; preds = %for.cond8
  br label %for.inc84, !dbg !4796

for.inc84:                                        ; preds = %for.end83, %if.then
  %65 = load i32, i32* %j, align 4, !dbg !4797
  %inc85 = add nsw i32 %65, 1, !dbg !4797
  store i32 %inc85, i32* %j, align 4, !dbg !4797
  br label %for.cond1, !dbg !4798, !llvm.loop !4799

for.end86:                                        ; preds = %for.cond1
  br label %for.inc87, !dbg !4801

for.inc87:                                        ; preds = %for.end86
  %66 = load i32, i32* %i, align 4, !dbg !4802
  %inc88 = add nsw i32 %66, 1, !dbg !4802
  store i32 %inc88, i32* %i, align 4, !dbg !4802
  br label %for.cond, !dbg !4803, !llvm.loop !4804

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !4806
}

; Function Attrs: noinline nounwind uwtable
define internal float @frame_len(%struct.Frame* %frame) #0 !dbg !4807 {
entry:
  %frame.addr = alloca %struct.Frame*, align 8
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  %0 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4814
  %co = getelementptr inbounds %struct.Frame, %struct.Frame* %0, i32 0, i32 1, !dbg !4815
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 0, !dbg !4814
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4814
  %1 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4816
  %co1 = getelementptr inbounds %struct.Frame, %struct.Frame* %1, i32 0, i32 1, !dbg !4817
  %arrayidx2 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co1, i64 0, i64 1, !dbg !4816
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !4816
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay3), !dbg !4818
  %2 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4819
  %co4 = getelementptr inbounds %struct.Frame, %struct.Frame* %2, i32 0, i32 1, !dbg !4820
  %arrayidx5 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co4, i64 0, i64 1, !dbg !4819
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !4819
  %3 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4821
  %co7 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i32 0, i32 1, !dbg !4822
  %arrayidx8 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co7, i64 0, i64 2, !dbg !4821
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !4821
  %call10 = call float @len_v3v3(float* %arraydecay6, float* %arraydecay9), !dbg !4823
  %add = fadd float %call, %call10, !dbg !4824
  %mul = fmul float %add, 5.000000e-01, !dbg !4825
  ret float %mul, !dbg !4826
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !4827 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4830, metadata !DIExpression()), !dbg !4831
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4832, metadata !DIExpression()), !dbg !4833
  %0 = load float, float* %a.addr, align 4, !dbg !4834
  %1 = load float, float* %b.addr, align 4, !dbg !4835
  %cmp = fcmp olt float %0, %1, !dbg !4836
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4837

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4838
  br label %cond.end, !dbg !4837

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4839
  br label %cond.end, !dbg !4837

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4837
  ret float %cond, !dbg !4840
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local %struct.BMVert* @BM_vert_create(%struct.BMesh*, float*, %struct.BMVert*, i32) #2

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

declare dso_local void @defvert_copy(%struct.MDeformVert*, %struct.MDeformVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @build_hull(%struct.SkinOutput* %so, %struct.Frame** %frames, i32 %totframe) #0 !dbg !4841 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %frames.addr = alloca %struct.Frame**, align 8
  %totframe.addr = alloca i32, align 4
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !4844, metadata !DIExpression()), !dbg !4845
  store %struct.Frame** %frames, %struct.Frame*** %frames.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame*** %frames.addr, metadata !4846, metadata !DIExpression()), !dbg !4847
  store i32 %totframe, i32* %totframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totframe.addr, metadata !4848, metadata !DIExpression()), !dbg !4849
  %0 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !4850
  %1 = load %struct.Frame**, %struct.Frame*** %frames.addr, align 8, !dbg !4851
  %2 = load i32, i32* %totframe.addr, align 4, !dbg !4852
  ret i8 0, !dbg !4853
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @skin_frame_find_contained_faces(%struct.Frame* %frame, %struct.BMFace** %fill_faces) #0 !dbg !4854 {
entry:
  %retval = alloca i8, align 1
  %frame.addr = alloca %struct.Frame*, align 8
  %fill_faces.addr = alloca %struct.BMFace**, align 8
  %diag = alloca %struct.BMEdge*, align 8
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  store %struct.BMFace** %fill_faces, %struct.BMFace*** %fill_faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %fill_faces.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %diag, metadata !4861, metadata !DIExpression()), !dbg !4862
  %0 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4863
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %0, i32 0, i32 0, !dbg !4864
  %arrayidx = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !4863
  %1 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !4863
  %2 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4865
  %verts1 = getelementptr inbounds %struct.Frame, %struct.Frame* %2, i32 0, i32 0, !dbg !4866
  %arrayidx2 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts1, i64 0, i64 2, !dbg !4865
  %3 = load %struct.BMVert*, %struct.BMVert** %arrayidx2, align 8, !dbg !4865
  %call = call %struct.BMEdge* @BM_edge_exists(%struct.BMVert* %1, %struct.BMVert* %3), !dbg !4867
  store %struct.BMEdge* %call, %struct.BMEdge** %diag, align 8, !dbg !4868
  %4 = load %struct.BMEdge*, %struct.BMEdge** %diag, align 8, !dbg !4869
  %tobool = icmp ne %struct.BMEdge* %4, null, !dbg !4869
  br i1 %tobool, label %if.end, label %if.then, !dbg !4871

if.then:                                          ; preds = %entry
  %5 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4872
  %verts3 = getelementptr inbounds %struct.Frame, %struct.Frame* %5, i32 0, i32 0, !dbg !4873
  %arrayidx4 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts3, i64 0, i64 1, !dbg !4872
  %6 = load %struct.BMVert*, %struct.BMVert** %arrayidx4, align 8, !dbg !4872
  %7 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !4874
  %verts5 = getelementptr inbounds %struct.Frame, %struct.Frame* %7, i32 0, i32 0, !dbg !4875
  %arrayidx6 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts5, i64 0, i64 3, !dbg !4874
  %8 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !4874
  %call7 = call %struct.BMEdge* @BM_edge_exists(%struct.BMVert* %6, %struct.BMVert* %8), !dbg !4876
  store %struct.BMEdge* %call7, %struct.BMEdge** %diag, align 8, !dbg !4877
  br label %if.end, !dbg !4878

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.BMEdge*, %struct.BMEdge** %diag, align 8, !dbg !4879
  %tobool8 = icmp ne %struct.BMEdge* %9, null, !dbg !4879
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !4881

if.then9:                                         ; preds = %if.end
  %10 = load %struct.BMEdge*, %struct.BMEdge** %diag, align 8, !dbg !4882
  %11 = load %struct.BMFace**, %struct.BMFace*** %fill_faces.addr, align 8, !dbg !4883
  %arrayidx10 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %11, i64 0, !dbg !4883
  %12 = load %struct.BMFace**, %struct.BMFace*** %fill_faces.addr, align 8, !dbg !4884
  %arrayidx11 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %12, i64 1, !dbg !4884
  %call12 = call zeroext i8 @BM_edge_face_pair(%struct.BMEdge* %10, %struct.BMFace** %arrayidx10, %struct.BMFace** %arrayidx11), !dbg !4885
  store i8 %call12, i8* %retval, align 1, !dbg !4886
  br label %return, !dbg !4886

if.else:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4887
  br label %return, !dbg !4887

return:                                           ; preds = %if.else, %if.then9
  %13 = load i8, i8* %retval, align 1, !dbg !4888
  ret i8 %13, !dbg !4888
}

declare dso_local %struct.BMEdge* @BM_edge_exists(%struct.BMVert*, %struct.BMVert*) #2

declare dso_local zeroext i8 @BM_edge_face_pair(%struct.BMEdge*, %struct.BMFace**, %struct.BMFace**) #2

declare dso_local %struct.Heap* @BLI_heap_new() #2

declare dso_local void @BM_mesh_elem_hflag_disable_all(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !4889 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4902
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4902
  %2 = load i8, i8* %itype.addr, align 1, !dbg !4902
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4902
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !4902
  %tobool = icmp ne i8 %call, 0, !dbg !4902
  br i1 %tobool, label %if.then, label %if.else, !dbg !4904

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4905
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !4907
  store i8* %call1, i8** %retval, align 8, !dbg !4908
  br label %return, !dbg !4908

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4909
  br label %return, !dbg !4909

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4911
  ret i8* %5, !dbg !4911
}

; Function Attrs: noinline nounwind uwtable
define internal void @quad_from_tris(%struct.BMEdge* %e, %struct.BMFace** %adj, %struct.BMVert** %ndx) #0 !dbg !4912 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %adj.addr = alloca %struct.BMFace**, align 8
  %ndx.addr = alloca %struct.BMVert**, align 8
  %tri = alloca [2 x [3 x %struct.BMVert*]], align 16
  %opp = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  store %struct.BMFace** %adj, %struct.BMFace*** %adj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %adj.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  store %struct.BMVert** %ndx, %struct.BMVert*** %ndx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %ndx.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata [2 x [3 x %struct.BMVert*]]* %tri, metadata !4921, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata %struct.BMVert** %opp, metadata !4925, metadata !DIExpression()), !dbg !4926
  store %struct.BMVert* null, %struct.BMVert** %opp, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4927, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4929, metadata !DIExpression()), !dbg !4930
  %0 = load %struct.BMFace**, %struct.BMFace*** %adj.addr, align 8, !dbg !4931
  %arrayidx = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %0, i64 0, !dbg !4931
  %1 = load %struct.BMFace*, %struct.BMFace** %arrayidx, align 8, !dbg !4931
  %arrayidx1 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4932
  %arraydecay = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx1, i64 0, i64 0, !dbg !4932
  call void @BM_face_as_array_vert_tri(%struct.BMFace* %1, %struct.BMVert** %arraydecay), !dbg !4933
  %2 = load %struct.BMFace**, %struct.BMFace*** %adj.addr, align 8, !dbg !4934
  %arrayidx2 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %2, i64 1, !dbg !4934
  %3 = load %struct.BMFace*, %struct.BMFace** %arrayidx2, align 8, !dbg !4934
  %arrayidx3 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 1, !dbg !4935
  %arraydecay4 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx3, i64 0, i64 0, !dbg !4935
  call void @BM_face_as_array_vert_tri(%struct.BMFace* %3, %struct.BMVert** %arraydecay4), !dbg !4936
  store i32 0, i32* %i, align 4, !dbg !4937
  br label %for.cond, !dbg !4939

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !4940
  %cmp = icmp slt i32 %4, 3, !dbg !4942
  br i1 %cmp, label %for.body, label %for.end, !dbg !4943

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 1, !dbg !4944
  %5 = load i32, i32* %i, align 4, !dbg !4947
  %idxprom = sext i32 %5 to i64, !dbg !4944
  %arrayidx6 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx5, i64 0, i64 %idxprom, !dbg !4944
  %6 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !4944
  %arrayidx7 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4948
  %arrayidx8 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx7, i64 0, i64 0, !dbg !4948
  %7 = load %struct.BMVert*, %struct.BMVert** %arrayidx8, align 16, !dbg !4948
  %cmp9 = icmp ne %struct.BMVert* %6, %7, !dbg !4949
  br i1 %cmp9, label %land.lhs.true, label %if.end, !dbg !4950

land.lhs.true:                                    ; preds = %for.body
  %arrayidx10 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 1, !dbg !4951
  %8 = load i32, i32* %i, align 4, !dbg !4952
  %idxprom11 = sext i32 %8 to i64, !dbg !4951
  %arrayidx12 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx10, i64 0, i64 %idxprom11, !dbg !4951
  %9 = load %struct.BMVert*, %struct.BMVert** %arrayidx12, align 8, !dbg !4951
  %arrayidx13 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4953
  %arrayidx14 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx13, i64 0, i64 1, !dbg !4953
  %10 = load %struct.BMVert*, %struct.BMVert** %arrayidx14, align 8, !dbg !4953
  %cmp15 = icmp ne %struct.BMVert* %9, %10, !dbg !4954
  br i1 %cmp15, label %land.lhs.true16, label %if.end, !dbg !4955

land.lhs.true16:                                  ; preds = %land.lhs.true
  %arrayidx17 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 1, !dbg !4956
  %11 = load i32, i32* %i, align 4, !dbg !4957
  %idxprom18 = sext i32 %11 to i64, !dbg !4956
  %arrayidx19 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx17, i64 0, i64 %idxprom18, !dbg !4956
  %12 = load %struct.BMVert*, %struct.BMVert** %arrayidx19, align 8, !dbg !4956
  %arrayidx20 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4958
  %arrayidx21 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx20, i64 0, i64 2, !dbg !4958
  %13 = load %struct.BMVert*, %struct.BMVert** %arrayidx21, align 16, !dbg !4958
  %cmp22 = icmp ne %struct.BMVert* %12, %13, !dbg !4959
  br i1 %cmp22, label %if.then, label %if.end, !dbg !4960

if.then:                                          ; preds = %land.lhs.true16
  %arrayidx23 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 1, !dbg !4961
  %14 = load i32, i32* %i, align 4, !dbg !4963
  %idxprom24 = sext i32 %14 to i64, !dbg !4961
  %arrayidx25 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx23, i64 0, i64 %idxprom24, !dbg !4961
  %15 = load %struct.BMVert*, %struct.BMVert** %arrayidx25, align 8, !dbg !4961
  store %struct.BMVert* %15, %struct.BMVert** %opp, align 8, !dbg !4964
  br label %for.end, !dbg !4965

if.end:                                           ; preds = %land.lhs.true16, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4966

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !4967
  %inc = add nsw i32 %16, 1, !dbg !4967
  store i32 %inc, i32* %i, align 4, !dbg !4967
  br label %for.cond, !dbg !4968, !llvm.loop !4969

for.end:                                          ; preds = %if.then, %for.cond
  store i32 0, i32* %i, align 4, !dbg !4971
  store i32 0, i32* %j, align 4, !dbg !4973
  br label %for.cond26, !dbg !4974

for.cond26:                                       ; preds = %for.inc61, %for.end
  %17 = load i32, i32* %i, align 4, !dbg !4975
  %cmp27 = icmp slt i32 %17, 3, !dbg !4977
  br i1 %cmp27, label %for.body28, label %for.end64, !dbg !4978

for.body28:                                       ; preds = %for.cond26
  %arrayidx29 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4979
  %18 = load i32, i32* %i, align 4, !dbg !4981
  %idxprom30 = sext i32 %18 to i64, !dbg !4979
  %arrayidx31 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx29, i64 0, i64 %idxprom30, !dbg !4979
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx31, align 8, !dbg !4979
  %20 = load %struct.BMVert**, %struct.BMVert*** %ndx.addr, align 8, !dbg !4982
  %21 = load i32, i32* %j, align 4, !dbg !4983
  %idxprom32 = sext i32 %21 to i64, !dbg !4982
  %arrayidx33 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %20, i64 %idxprom32, !dbg !4982
  store %struct.BMVert* %19, %struct.BMVert** %arrayidx33, align 8, !dbg !4984
  %arrayidx34 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4985
  %22 = load i32, i32* %i, align 4, !dbg !4987
  %idxprom35 = sext i32 %22 to i64, !dbg !4985
  %arrayidx36 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx34, i64 0, i64 %idxprom35, !dbg !4985
  %23 = load %struct.BMVert*, %struct.BMVert** %arrayidx36, align 8, !dbg !4985
  %24 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !4988
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %24, i32 0, i32 2, !dbg !4989
  %25 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4989
  %cmp37 = icmp eq %struct.BMVert* %23, %25, !dbg !4990
  br i1 %cmp37, label %land.lhs.true42, label %lor.lhs.false, !dbg !4991

lor.lhs.false:                                    ; preds = %for.body28
  %arrayidx38 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4992
  %26 = load i32, i32* %i, align 4, !dbg !4993
  %idxprom39 = sext i32 %26 to i64, !dbg !4992
  %arrayidx40 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx38, i64 0, i64 %idxprom39, !dbg !4992
  %27 = load %struct.BMVert*, %struct.BMVert** %arrayidx40, align 8, !dbg !4992
  %28 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !4994
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %28, i32 0, i32 3, !dbg !4995
  %29 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4995
  %cmp41 = icmp eq %struct.BMVert* %27, %29, !dbg !4996
  br i1 %cmp41, label %land.lhs.true42, label %if.end60, !dbg !4997

land.lhs.true42:                                  ; preds = %lor.lhs.false, %for.body28
  %arrayidx43 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !4998
  %30 = load i32, i32* %i, align 4, !dbg !4999
  %add = add nsw i32 %30, 1, !dbg !5000
  %rem = srem i32 %add, 3, !dbg !5001
  %idxprom44 = sext i32 %rem to i64, !dbg !4998
  %arrayidx45 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx43, i64 0, i64 %idxprom44, !dbg !4998
  %31 = load %struct.BMVert*, %struct.BMVert** %arrayidx45, align 8, !dbg !4998
  %32 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !5002
  %v146 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %32, i32 0, i32 2, !dbg !5003
  %33 = load %struct.BMVert*, %struct.BMVert** %v146, align 8, !dbg !5003
  %cmp47 = icmp eq %struct.BMVert* %31, %33, !dbg !5004
  br i1 %cmp47, label %if.then56, label %lor.lhs.false48, !dbg !5005

lor.lhs.false48:                                  ; preds = %land.lhs.true42
  %arrayidx49 = getelementptr inbounds [2 x [3 x %struct.BMVert*]], [2 x [3 x %struct.BMVert*]]* %tri, i64 0, i64 0, !dbg !5006
  %34 = load i32, i32* %i, align 4, !dbg !5007
  %add50 = add nsw i32 %34, 1, !dbg !5008
  %rem51 = srem i32 %add50, 3, !dbg !5009
  %idxprom52 = sext i32 %rem51 to i64, !dbg !5006
  %arrayidx53 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %arrayidx49, i64 0, i64 %idxprom52, !dbg !5006
  %35 = load %struct.BMVert*, %struct.BMVert** %arrayidx53, align 8, !dbg !5006
  %36 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !5010
  %v254 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %36, i32 0, i32 3, !dbg !5011
  %37 = load %struct.BMVert*, %struct.BMVert** %v254, align 8, !dbg !5011
  %cmp55 = icmp eq %struct.BMVert* %35, %37, !dbg !5012
  br i1 %cmp55, label %if.then56, label %if.end60, !dbg !5013

if.then56:                                        ; preds = %lor.lhs.false48, %land.lhs.true42
  %38 = load i32, i32* %j, align 4, !dbg !5014
  %inc57 = add nsw i32 %38, 1, !dbg !5014
  store i32 %inc57, i32* %j, align 4, !dbg !5014
  %39 = load %struct.BMVert*, %struct.BMVert** %opp, align 8, !dbg !5016
  %40 = load %struct.BMVert**, %struct.BMVert*** %ndx.addr, align 8, !dbg !5017
  %41 = load i32, i32* %j, align 4, !dbg !5018
  %idxprom58 = sext i32 %41 to i64, !dbg !5017
  %arrayidx59 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %40, i64 %idxprom58, !dbg !5017
  store %struct.BMVert* %39, %struct.BMVert** %arrayidx59, align 8, !dbg !5019
  br label %if.end60, !dbg !5020

if.end60:                                         ; preds = %if.then56, %lor.lhs.false48, %lor.lhs.false
  br label %for.inc61, !dbg !5021

for.inc61:                                        ; preds = %if.end60
  %42 = load i32, i32* %i, align 4, !dbg !5022
  %inc62 = add nsw i32 %42, 1, !dbg !5022
  store i32 %inc62, i32* %i, align 4, !dbg !5022
  %43 = load i32, i32* %j, align 4, !dbg !5023
  %inc63 = add nsw i32 %43, 1, !dbg !5023
  store i32 %inc63, i32* %j, align 4, !dbg !5023
  br label %for.cond26, !dbg !5024, !llvm.loop !5025

for.end64:                                        ; preds = %for.cond26
  ret void, !dbg !5027
}

declare dso_local float @BM_face_calc_area(%struct.BMFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @quad_crosses_symmetry_plane(%struct.BMVert** %quad, %struct.SkinModifierData* %smd) #0 !dbg !5028 {
entry:
  %retval = alloca i8, align 1
  %quad.addr = alloca %struct.BMVert**, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %axis = alloca i32, align 4
  %left = alloca i8, align 1
  %right = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.BMVert** %quad, %struct.BMVert*** %quad.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %quad.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !5035, metadata !DIExpression()), !dbg !5036
  store i32 0, i32* %axis, align 4, !dbg !5037
  br label %for.cond, !dbg !5039

for.cond:                                         ; preds = %for.inc26, %entry
  %0 = load i32, i32* %axis, align 4, !dbg !5040
  %cmp = icmp slt i32 %0, 3, !dbg !5042
  br i1 %cmp, label %for.body, label %for.end28, !dbg !5043

for.body:                                         ; preds = %for.cond
  %1 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !5044
  %symmetry_axes = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %1, i32 0, i32 3, !dbg !5047
  %2 = load i8, i8* %symmetry_axes, align 1, !dbg !5047
  %conv = zext i8 %2 to i32, !dbg !5044
  %3 = load i32, i32* %axis, align 4, !dbg !5048
  %shl = shl i32 1, %3, !dbg !5049
  %and = and i32 %conv, %shl, !dbg !5050
  %tobool = icmp ne i32 %and, 0, !dbg !5050
  br i1 %tobool, label %if.then, label %if.end25, !dbg !5051

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8* %left, metadata !5052, metadata !DIExpression()), !dbg !5054
  store i8 0, i8* %left, align 1, !dbg !5054
  call void @llvm.dbg.declare(metadata i8* %right, metadata !5055, metadata !DIExpression()), !dbg !5056
  store i8 0, i8* %right, align 1, !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i32 0, i32* %i, align 4, !dbg !5059
  br label %for.cond1, !dbg !5061

for.cond1:                                        ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !5062
  %cmp2 = icmp slt i32 %4, 4, !dbg !5064
  br i1 %cmp2, label %for.body4, label %for.end, !dbg !5065

for.body4:                                        ; preds = %for.cond1
  %5 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5066
  %6 = load i32, i32* %i, align 4, !dbg !5069
  %idxprom = sext i32 %6 to i64, !dbg !5066
  %arrayidx = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %5, i64 %idxprom, !dbg !5066
  %7 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !5066
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 2, !dbg !5070
  %8 = load i32, i32* %axis, align 4, !dbg !5071
  %idxprom5 = sext i32 %8 to i64, !dbg !5066
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom5, !dbg !5066
  %9 = load float, float* %arrayidx6, align 4, !dbg !5066
  %cmp7 = fcmp olt float %9, 0.000000e+00, !dbg !5072
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5073

if.then9:                                         ; preds = %for.body4
  store i8 1, i8* %left, align 1, !dbg !5074
  br label %if.end18, !dbg !5075

if.else:                                          ; preds = %for.body4
  %10 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5076
  %11 = load i32, i32* %i, align 4, !dbg !5078
  %idxprom10 = sext i32 %11 to i64, !dbg !5076
  %arrayidx11 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %10, i64 %idxprom10, !dbg !5076
  %12 = load %struct.BMVert*, %struct.BMVert** %arrayidx11, align 8, !dbg !5076
  %co12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 2, !dbg !5079
  %13 = load i32, i32* %axis, align 4, !dbg !5080
  %idxprom13 = sext i32 %13 to i64, !dbg !5076
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %co12, i64 0, i64 %idxprom13, !dbg !5076
  %14 = load float, float* %arrayidx14, align 4, !dbg !5076
  %cmp15 = fcmp ogt float %14, 0.000000e+00, !dbg !5081
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !5082

if.then17:                                        ; preds = %if.else
  store i8 1, i8* %right, align 1, !dbg !5083
  br label %if.end, !dbg !5084

if.end:                                           ; preds = %if.then17, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then9
  %15 = load i8, i8* %left, align 1, !dbg !5085
  %conv19 = zext i8 %15 to i32, !dbg !5085
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !5085
  br i1 %tobool20, label %land.lhs.true, label %if.end24, !dbg !5087

land.lhs.true:                                    ; preds = %if.end18
  %16 = load i8, i8* %right, align 1, !dbg !5088
  %conv21 = zext i8 %16 to i32, !dbg !5088
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !5088
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5089

if.then23:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !5090
  br label %return, !dbg !5090

if.end24:                                         ; preds = %land.lhs.true, %if.end18
  br label %for.inc, !dbg !5091

for.inc:                                          ; preds = %if.end24
  %17 = load i32, i32* %i, align 4, !dbg !5092
  %inc = add nsw i32 %17, 1, !dbg !5092
  store i32 %inc, i32* %i, align 4, !dbg !5092
  br label %for.cond1, !dbg !5093, !llvm.loop !5094

for.end:                                          ; preds = %for.cond1
  br label %if.end25, !dbg !5096

if.end25:                                         ; preds = %for.end, %for.body
  br label %for.inc26, !dbg !5097

for.inc26:                                        ; preds = %if.end25
  %18 = load i32, i32* %axis, align 4, !dbg !5098
  %inc27 = add nsw i32 %18, 1, !dbg !5098
  store i32 %inc27, i32* %axis, align 4, !dbg !5098
  br label %for.cond, !dbg !5099, !llvm.loop !5100

for.end28:                                        ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !5102
  br label %return, !dbg !5102

return:                                           ; preds = %for.end28, %if.then23
  %19 = load i8, i8* %retval, align 1, !dbg !5103
  ret i8 %19, !dbg !5103
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_quad_symmetric(%struct.BMVert** %quad, %struct.SkinModifierData* %smd) #0 !dbg !5104 {
entry:
  %retval = alloca i8, align 1
  %quad.addr = alloca %struct.BMVert**, align 8
  %smd.addr = alloca %struct.SkinModifierData*, align 8
  %threshold = alloca float, align 4
  %threshold_squared = alloca float, align 4
  %axis = alloca i32, align 4
  %a = alloca [3 x float], align 4
  store %struct.BMVert** %quad, %struct.BMVert*** %quad.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %quad.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  store %struct.SkinModifierData* %smd, %struct.SkinModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinModifierData** %smd.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !5109, metadata !DIExpression()), !dbg !5110
  store float 0x3F1A36E2E0000000, float* %threshold, align 4, !dbg !5110
  call void @llvm.dbg.declare(metadata float* %threshold_squared, metadata !5111, metadata !DIExpression()), !dbg !5112
  store float 0x3E45798EC0000000, float* %threshold_squared, align 4, !dbg !5112
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !5113, metadata !DIExpression()), !dbg !5114
  store i32 0, i32* %axis, align 4, !dbg !5115
  br label %for.cond, !dbg !5117

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %axis, align 4, !dbg !5118
  %cmp = icmp slt i32 %0, 3, !dbg !5120
  br i1 %cmp, label %for.body, label %for.end, !dbg !5121

for.body:                                         ; preds = %for.cond
  %1 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd.addr, align 8, !dbg !5122
  %symmetry_axes = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %1, i32 0, i32 3, !dbg !5125
  %2 = load i8, i8* %symmetry_axes, align 1, !dbg !5125
  %conv = zext i8 %2 to i32, !dbg !5122
  %3 = load i32, i32* %axis, align 4, !dbg !5126
  %shl = shl i32 1, %3, !dbg !5127
  %and = and i32 %conv, %shl, !dbg !5128
  %tobool = icmp ne i32 %and, 0, !dbg !5128
  br i1 %tobool, label %if.then, label %if.end57, !dbg !5129

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !5130, metadata !DIExpression()), !dbg !5132
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5133
  %4 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5134
  %arrayidx = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %4, i64 0, !dbg !5134
  %5 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !5134
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %5, i32 0, i32 2, !dbg !5135
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5134
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !5136
  %6 = load i32, i32* %axis, align 4, !dbg !5137
  %idxprom = sext i32 %6 to i64, !dbg !5138
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom, !dbg !5138
  %7 = load float, float* %arrayidx2, align 4, !dbg !5138
  %fneg = fneg float %7, !dbg !5139
  %8 = load i32, i32* %axis, align 4, !dbg !5140
  %idxprom3 = sext i32 %8 to i64, !dbg !5141
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom3, !dbg !5141
  store float %fneg, float* %arrayidx4, align 4, !dbg !5142
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5143
  %9 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5145
  %arrayidx6 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %9, i64 1, !dbg !5145
  %10 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !5145
  %co7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !5146
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !5145
  %call = call float @len_squared_v3v3(float* %arraydecay5, float* %arraydecay8), !dbg !5147
  %cmp9 = fcmp olt float %call, 0x3E45798EC0000000, !dbg !5148
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !5149

if.then11:                                        ; preds = %if.then
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5150
  %11 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5152
  %arrayidx13 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %11, i64 2, !dbg !5152
  %12 = load %struct.BMVert*, %struct.BMVert** %arrayidx13, align 8, !dbg !5152
  %co14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 2, !dbg !5153
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !5152
  call void @copy_v3_v3(float* %arraydecay12, float* %arraydecay15), !dbg !5154
  %13 = load i32, i32* %axis, align 4, !dbg !5155
  %idxprom16 = sext i32 %13 to i64, !dbg !5156
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom16, !dbg !5156
  %14 = load float, float* %arrayidx17, align 4, !dbg !5156
  %fneg18 = fneg float %14, !dbg !5157
  %15 = load i32, i32* %axis, align 4, !dbg !5158
  %idxprom19 = sext i32 %15 to i64, !dbg !5159
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom19, !dbg !5159
  store float %fneg18, float* %arrayidx20, align 4, !dbg !5160
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5161
  %16 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5163
  %arrayidx22 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %16, i64 3, !dbg !5163
  %17 = load %struct.BMVert*, %struct.BMVert** %arrayidx22, align 8, !dbg !5163
  %co23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 2, !dbg !5164
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %co23, i64 0, i64 0, !dbg !5163
  %call25 = call float @len_squared_v3v3(float* %arraydecay21, float* %arraydecay24), !dbg !5165
  %cmp26 = fcmp olt float %call25, 0x3E45798EC0000000, !dbg !5166
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !5167

if.then28:                                        ; preds = %if.then11
  store i8 1, i8* %retval, align 1, !dbg !5168
  br label %return, !dbg !5168

if.end:                                           ; preds = %if.then11
  br label %if.end56, !dbg !5169

if.else:                                          ; preds = %if.then
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5170
  %18 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5172
  %arrayidx30 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %18, i64 3, !dbg !5172
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx30, align 8, !dbg !5172
  %co31 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 2, !dbg !5173
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co31, i64 0, i64 0, !dbg !5172
  %call33 = call float @len_squared_v3v3(float* %arraydecay29, float* %arraydecay32), !dbg !5174
  %cmp34 = fcmp olt float %call33, 0x3E45798EC0000000, !dbg !5175
  br i1 %cmp34, label %if.then36, label %if.end55, !dbg !5176

if.then36:                                        ; preds = %if.else
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5177
  %20 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5179
  %arrayidx38 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %20, i64 2, !dbg !5179
  %21 = load %struct.BMVert*, %struct.BMVert** %arrayidx38, align 8, !dbg !5179
  %co39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !5180
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !5179
  call void @copy_v3_v3(float* %arraydecay37, float* %arraydecay40), !dbg !5181
  %22 = load i32, i32* %axis, align 4, !dbg !5182
  %idxprom41 = sext i32 %22 to i64, !dbg !5183
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom41, !dbg !5183
  %23 = load float, float* %arrayidx42, align 4, !dbg !5183
  %fneg43 = fneg float %23, !dbg !5184
  %24 = load i32, i32* %axis, align 4, !dbg !5185
  %idxprom44 = sext i32 %24 to i64, !dbg !5186
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 %idxprom44, !dbg !5186
  store float %fneg43, float* %arrayidx45, align 4, !dbg !5187
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !5188
  %25 = load %struct.BMVert**, %struct.BMVert*** %quad.addr, align 8, !dbg !5190
  %arrayidx47 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %25, i64 1, !dbg !5190
  %26 = load %struct.BMVert*, %struct.BMVert** %arrayidx47, align 8, !dbg !5190
  %co48 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 2, !dbg !5191
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !5190
  %call50 = call float @len_squared_v3v3(float* %arraydecay46, float* %arraydecay49), !dbg !5192
  %cmp51 = fcmp olt float %call50, 0x3E45798EC0000000, !dbg !5193
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !5194

if.then53:                                        ; preds = %if.then36
  store i8 1, i8* %retval, align 1, !dbg !5195
  br label %return, !dbg !5195

if.end54:                                         ; preds = %if.then36
  br label %if.end55, !dbg !5196

if.end55:                                         ; preds = %if.end54, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end
  br label %if.end57, !dbg !5197

if.end57:                                         ; preds = %if.end56, %for.body
  br label %for.inc, !dbg !5198

for.inc:                                          ; preds = %if.end57
  %27 = load i32, i32* %axis, align 4, !dbg !5199
  %inc = add nsw i32 %27, 1, !dbg !5199
  store i32 %inc, i32* %axis, align 4, !dbg !5199
  br label %for.cond, !dbg !5200, !llvm.loop !5201

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !5203
  br label %return, !dbg !5203

return:                                           ; preds = %for.end, %if.then53, %if.then28
  %28 = load i8, i8* %retval, align 1, !dbg !5204
  ret i8 %28, !dbg !5204
}

declare dso_local zeroext i8 @is_quad_convex_v3(float*, float*, float*, float*) #2

declare dso_local %struct.HeapNode* @BLI_heap_insert(%struct.Heap*, float, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !5205 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5208, metadata !DIExpression()), !dbg !5209
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5210
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !5211
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !5211
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5212
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !5212
  %call = call i8* %1(i8* %3), !dbg !5210
  ret i8* %call, !dbg !5213
}

declare dso_local zeroext i8 @BLI_heap_is_empty(%struct.Heap*) #2

declare dso_local i8* @BLI_heap_popmin(%struct.Heap*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !5214 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !5224
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !5225
  %1 = load i8, i8* %hflag1, align 1, !dbg !5225
  %conv = zext i8 %1 to i32, !dbg !5224
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !5226
  %conv2 = zext i8 %2 to i32, !dbg !5226
  %and = and i32 %conv, %conv2, !dbg !5227
  %conv3 = trunc i32 %and to i8, !dbg !5224
  ret i8 %conv3, !dbg !5228
}

declare dso_local zeroext i8 @BM_face_share_face_check(%struct.BMFace*, %struct.BMFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_quad_from_tris(%struct.SkinOutput* %so, %struct.BMEdge* %e, %struct.BMFace** %adj) #0 !dbg !5229 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %adj.addr = alloca %struct.BMFace**, align 8
  %quad = alloca [4 x %struct.BMVert*], align 16
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  store %struct.BMFace** %adj, %struct.BMFace*** %adj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %adj.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %quad, metadata !5238, metadata !DIExpression()), !dbg !5239
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !5240
  %1 = load %struct.BMFace**, %struct.BMFace*** %adj.addr, align 8, !dbg !5241
  %arraydecay = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !5242
  call void @quad_from_tris(%struct.BMEdge* %0, %struct.BMFace** %1, %struct.BMVert** %arraydecay), !dbg !5243
  %2 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !5244
  %arrayidx = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 0, !dbg !5245
  %3 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 16, !dbg !5245
  %arrayidx1 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 1, !dbg !5246
  %4 = load %struct.BMVert*, %struct.BMVert** %arrayidx1, align 8, !dbg !5246
  %arrayidx2 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 2, !dbg !5247
  %5 = load %struct.BMVert*, %struct.BMVert** %arrayidx2, align 16, !dbg !5247
  %arrayidx3 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %quad, i64 0, i64 3, !dbg !5248
  %6 = load %struct.BMVert*, %struct.BMVert** %arrayidx3, align 8, !dbg !5248
  call void @add_poly(%struct.SkinOutput* %2, %struct.BMVert* %3, %struct.BMVert* %4, %struct.BMVert* %5, %struct.BMVert* %6), !dbg !5249
  ret void, !dbg !5250
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !5251 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !5255, metadata !DIExpression()), !dbg !5256
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !5259
  %conv = zext i8 %0 to i32, !dbg !5259
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !5260
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !5261
  %2 = load i8, i8* %hflag1, align 1, !dbg !5262
  %conv2 = zext i8 %2 to i32, !dbg !5262
  %or = or i32 %conv2, %conv, !dbg !5262
  %conv3 = trunc i32 %or to i8, !dbg !5262
  store i8 %conv3, i8* %hflag1, align 1, !dbg !5262
  ret void, !dbg !5263
}

declare dso_local void @BLI_heap_free(%struct.Heap*, void (i8*)*) #2

declare dso_local void @BM_mesh_delete_hflag_tagged(%struct.BMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !5264 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5273, metadata !DIExpression()), !dbg !5274
  %0 = load i8, i8* %itype.addr, align 1, !dbg !5275
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5276
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !5277
  store i8 %0, i8* %itype1, align 4, !dbg !5278
  %2 = load i8, i8* %itype.addr, align 1, !dbg !5279
  %conv = zext i8 %2 to i32, !dbg !5280
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !5281

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5282
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !5284
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !5285
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5286
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !5287
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !5288
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5289
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !5290
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !5290
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5291
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !5292
  %elem_of_mesh = bitcast %union.anon.1* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !5293
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !5294
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !5295
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !5296
  br label %sw.epilog, !dbg !5297

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5298
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !5299
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !5300
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5301
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !5302
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !5303
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5304
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !5305
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !5305
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5306
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !5307
  %elem_of_mesh7 = bitcast %union.anon.1* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !5308
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !5309
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !5310
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !5311
  br label %sw.epilog, !dbg !5312

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5313
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !5314
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !5315
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5316
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !5317
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !5318
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5319
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !5320
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !5320
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5321
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !5322
  %elem_of_mesh14 = bitcast %union.anon.1* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !5323
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !5324
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !5325
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !5326
  br label %sw.epilog, !dbg !5327

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5328
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !5329
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !5330
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5331
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !5332
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !5333
  %20 = load i8*, i8** %data.addr, align 8, !dbg !5334
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !5335
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5336
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !5337
  %edge_of_vert = bitcast %union.anon.1* %data20 to %struct.BMIter__edge_of_vert*, !dbg !5338
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !5339
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !5340
  br label %sw.epilog, !dbg !5341

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5342
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !5343
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !5344
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5345
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !5346
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !5347
  %25 = load i8*, i8** %data.addr, align 8, !dbg !5348
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !5349
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5350
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !5351
  %face_of_vert = bitcast %union.anon.1* %data24 to %struct.BMIter__face_of_vert*, !dbg !5352
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !5353
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !5354
  br label %sw.epilog, !dbg !5355

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5356
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !5357
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !5358
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5359
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !5360
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !5361
  %30 = load i8*, i8** %data.addr, align 8, !dbg !5362
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !5363
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5364
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !5365
  %loop_of_vert = bitcast %union.anon.1* %data29 to %struct.BMIter__loop_of_vert*, !dbg !5366
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !5367
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !5368
  br label %sw.epilog, !dbg !5369

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5370
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !5371
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !5372
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5373
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !5374
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !5375
  %35 = load i8*, i8** %data.addr, align 8, !dbg !5376
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !5377
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5378
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !5379
  %vert_of_edge = bitcast %union.anon.1* %data34 to %struct.BMIter__vert_of_edge*, !dbg !5380
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !5381
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !5382
  br label %sw.epilog, !dbg !5383

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5384
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !5385
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !5386
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5387
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !5388
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !5389
  %40 = load i8*, i8** %data.addr, align 8, !dbg !5390
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !5391
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5392
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !5393
  %face_of_edge = bitcast %union.anon.1* %data38 to %struct.BMIter__face_of_edge*, !dbg !5394
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !5395
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !5396
  br label %sw.epilog, !dbg !5397

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5398
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !5399
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !5400
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5401
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !5402
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !5403
  %45 = load i8*, i8** %data.addr, align 8, !dbg !5404
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !5405
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5406
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !5407
  %vert_of_face = bitcast %union.anon.1* %data43 to %struct.BMIter__vert_of_face*, !dbg !5408
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !5409
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !5410
  br label %sw.epilog, !dbg !5411

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5412
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !5413
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !5414
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5415
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !5416
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !5417
  %50 = load i8*, i8** %data.addr, align 8, !dbg !5418
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !5419
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5420
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !5421
  %edge_of_face = bitcast %union.anon.1* %data47 to %struct.BMIter__edge_of_face*, !dbg !5422
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !5423
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !5424
  br label %sw.epilog, !dbg !5425

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5426
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !5427
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !5428
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5429
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !5430
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !5431
  %55 = load i8*, i8** %data.addr, align 8, !dbg !5432
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !5433
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5434
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !5435
  %loop_of_face = bitcast %union.anon.1* %data52 to %struct.BMIter__loop_of_face*, !dbg !5436
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !5437
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !5438
  br label %sw.epilog, !dbg !5439

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5440
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !5441
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !5442
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5443
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !5444
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !5445
  %60 = load i8*, i8** %data.addr, align 8, !dbg !5446
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !5447
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5448
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !5449
  %loop_of_loop = bitcast %union.anon.1* %data57 to %struct.BMIter__loop_of_loop*, !dbg !5450
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !5451
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !5452
  br label %sw.epilog, !dbg !5453

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5454
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !5455
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !5456
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5457
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !5458
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !5459
  %65 = load i8*, i8** %data.addr, align 8, !dbg !5460
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !5461
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5462
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !5463
  %loop_of_edge = bitcast %union.anon.1* %data61 to %struct.BMIter__loop_of_edge*, !dbg !5464
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !5465
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !5466
  br label %sw.epilog, !dbg !5467

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5468
  br label %return, !dbg !5468

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5469
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !5470
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !5470
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5471
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !5471
  call void %69(i8* %71), !dbg !5469
  store i8 1, i8* %retval, align 1, !dbg !5472
  br label %return, !dbg !5472

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !5473
  ret i8 %72, !dbg !5473
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local void @BM_face_as_array_vert_tri(%struct.BMFace*, %struct.BMVert**) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !5474 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !5479, metadata !DIExpression()), !dbg !5480
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5481
  %0 = load float*, float** %b.addr, align 8, !dbg !5482
  %1 = load float*, float** %a.addr, align 8, !dbg !5483
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5484
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5485
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5486
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !5487
  ret float %call, !dbg !5488
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_poly(%struct.SkinOutput* %so, %struct.BMVert* %v1, %struct.BMVert* %v2, %struct.BMVert* %v3, %struct.BMVert* %v4) #0 !dbg !5489 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %v1.addr = alloca %struct.BMVert*, align 8
  %v2.addr = alloca %struct.BMVert*, align 8
  %v3.addr = alloca %struct.BMVert*, align 8
  %v4.addr = alloca %struct.BMVert*, align 8
  %verts = alloca [4 x %struct.BMVert*], align 16
  %f = alloca %struct.BMFace*, align 8
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !5492, metadata !DIExpression()), !dbg !5493
  store %struct.BMVert* %v1, %struct.BMVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v1.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  store %struct.BMVert* %v2, %struct.BMVert** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v2.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  store %struct.BMVert* %v3, %struct.BMVert** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v3.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  store %struct.BMVert* %v4, %struct.BMVert** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v4.addr, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %verts, metadata !5502, metadata !DIExpression()), !dbg !5503
  %arrayinit.begin = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !5504
  %0 = load %struct.BMVert*, %struct.BMVert** %v1.addr, align 8, !dbg !5505
  store %struct.BMVert* %0, %struct.BMVert** %arrayinit.begin, align 8, !dbg !5504
  %arrayinit.element = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin, i64 1, !dbg !5504
  %1 = load %struct.BMVert*, %struct.BMVert** %v2.addr, align 8, !dbg !5506
  store %struct.BMVert* %1, %struct.BMVert** %arrayinit.element, align 8, !dbg !5504
  %arrayinit.element1 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element, i64 1, !dbg !5504
  %2 = load %struct.BMVert*, %struct.BMVert** %v3.addr, align 8, !dbg !5507
  store %struct.BMVert* %2, %struct.BMVert** %arrayinit.element1, align 8, !dbg !5504
  %arrayinit.element2 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element1, i64 1, !dbg !5504
  %3 = load %struct.BMVert*, %struct.BMVert** %v4.addr, align 8, !dbg !5508
  store %struct.BMVert* %3, %struct.BMVert** %arrayinit.element2, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5509, metadata !DIExpression()), !dbg !5510
  %4 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !5511
  %bm = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %4, i32 0, i32 0, !dbg !5512
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5512
  %arraydecay = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !5513
  %6 = load %struct.BMVert*, %struct.BMVert** %v4.addr, align 8, !dbg !5514
  %tobool = icmp ne %struct.BMVert* %6, null, !dbg !5514
  %7 = zext i1 %tobool to i64, !dbg !5514
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !5514
  %call = call %struct.BMFace* @BM_face_create_verts(%struct.BMesh* %5, %struct.BMVert** %arraydecay, i32 %cond, %struct.BMFace* null, i32 2, i8 zeroext 1), !dbg !5515
  store %struct.BMFace* %call, %struct.BMFace** %f, align 8, !dbg !5516
  %8 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !5517
  %smd = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %8, i32 0, i32 1, !dbg !5519
  %9 = load %struct.SkinModifierData*, %struct.SkinModifierData** %smd, align 8, !dbg !5519
  %flag = getelementptr inbounds %struct.SkinModifierData, %struct.SkinModifierData* %9, i32 0, i32 2, !dbg !5520
  %10 = load i8, i8* %flag, align 4, !dbg !5520
  %conv = zext i8 %10 to i32, !dbg !5517
  %and = and i32 %conv, 1, !dbg !5521
  %tobool3 = icmp ne i32 %and, 0, !dbg !5521
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5522

if.then:                                          ; preds = %entry
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5523
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !5523
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 8), !dbg !5523
  br label %if.end, !dbg !5523

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !5524
  %mat_nr = getelementptr inbounds %struct.SkinOutput, %struct.SkinOutput* %12, i32 0, i32 2, !dbg !5525
  %13 = load i32, i32* %mat_nr, align 8, !dbg !5525
  %conv4 = trunc i32 %13 to i16, !dbg !5524
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5526
  %mat_nr5 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 5, !dbg !5527
  store i16 %conv4, i16* %mat_nr5, align 8, !dbg !5528
  ret void, !dbg !5529
}

declare dso_local %struct.BMFace* @BM_face_create_verts(%struct.BMesh*, %struct.BMVert**, i32, %struct.BMFace*, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @skin_hole_detach_partially_attached_frame(%struct.BMesh* %bm, %struct.Frame* %frame) #0 !dbg !5530 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %frame.addr = alloca %struct.Frame*, align 8
  %i = alloca i32, align 4
  %attached = alloca [4 x i32], align 16
  %totattached = alloca i32, align 4
  %av = alloca %struct.BMVert**, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata [4 x i32]* %attached, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata i32* %totattached, metadata !5541, metadata !DIExpression()), !dbg !5542
  store i32 0, i32* %totattached, align 4, !dbg !5542
  store i32 0, i32* %i, align 4, !dbg !5543
  br label %for.cond, !dbg !5545

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5546
  %cmp = icmp slt i32 %0, 4, !dbg !5548
  br i1 %cmp, label %for.body, label %for.end, !dbg !5549

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5550
  %inside_hull = getelementptr inbounds %struct.Frame, %struct.Frame* %1, i32 0, i32 3, !dbg !5553
  %2 = load i32, i32* %i, align 4, !dbg !5554
  %idxprom = sext i32 %2 to i64, !dbg !5550
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %inside_hull, i64 0, i64 %idxprom, !dbg !5550
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5550
  %tobool = icmp ne i8 %3, 0, !dbg !5550
  br i1 %tobool, label %if.end, label %if.then, !dbg !5555

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !5556
  %5 = load i32, i32* %totattached, align 4, !dbg !5557
  %inc = add nsw i32 %5, 1, !dbg !5557
  store i32 %inc, i32* %totattached, align 4, !dbg !5557
  %idxprom1 = sext i32 %5 to i64, !dbg !5558
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %attached, i64 0, i64 %idxprom1, !dbg !5558
  store i32 %4, i32* %arrayidx2, align 4, !dbg !5559
  br label %if.end, !dbg !5558

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5560

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !5561
  %inc3 = add nsw i32 %6, 1, !dbg !5561
  store i32 %inc3, i32* %i, align 4, !dbg !5561
  br label %for.cond, !dbg !5562, !llvm.loop !5563

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5565
  br label %for.cond4, !dbg !5567

for.cond4:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !5568
  %8 = load i32, i32* %totattached, align 4, !dbg !5570
  %cmp5 = icmp slt i32 %7, %8, !dbg !5571
  br i1 %cmp5, label %for.body6, label %for.end13, !dbg !5572

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %av, metadata !5573, metadata !DIExpression()), !dbg !5575
  %9 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5576
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %9, i32 0, i32 0, !dbg !5577
  %10 = load i32, i32* %i, align 4, !dbg !5578
  %idxprom7 = sext i32 %10 to i64, !dbg !5579
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %attached, i64 0, i64 %idxprom7, !dbg !5579
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !5579
  %idxprom9 = sext i32 %11 to i64, !dbg !5576
  %arrayidx10 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 %idxprom9, !dbg !5576
  store %struct.BMVert** %arrayidx10, %struct.BMVert*** %av, align 8, !dbg !5575
  %12 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5580
  %13 = load %struct.BMVert**, %struct.BMVert*** %av, align 8, !dbg !5581
  %14 = load %struct.BMVert*, %struct.BMVert** %13, align 8, !dbg !5582
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 2, !dbg !5583
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5584
  %15 = load %struct.BMVert**, %struct.BMVert*** %av, align 8, !dbg !5585
  %16 = load %struct.BMVert*, %struct.BMVert** %15, align 8, !dbg !5586
  %call = call %struct.BMVert* @BM_vert_create(%struct.BMesh* %12, float* %arraydecay, %struct.BMVert* %16, i32 0), !dbg !5587
  %17 = load %struct.BMVert**, %struct.BMVert*** %av, align 8, !dbg !5588
  store %struct.BMVert* %call, %struct.BMVert** %17, align 8, !dbg !5589
  br label %for.inc11, !dbg !5590

for.inc11:                                        ; preds = %for.body6
  %18 = load i32, i32* %i, align 4, !dbg !5591
  %inc12 = add nsw i32 %18, 1, !dbg !5591
  store i32 %inc12, i32* %i, align 4, !dbg !5591
  br label %for.cond4, !dbg !5592, !llvm.loop !5593

for.end13:                                        ; preds = %for.cond4
  ret void, !dbg !5595
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMFace* @skin_hole_target_face(%struct.BMesh* %bm, %struct.Frame* %frame) #0 !dbg !5596 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %frame.addr = alloca %struct.Frame*, align 8
  %f = alloca %struct.BMFace*, align 8
  %isect_target_face = alloca %struct.BMFace*, align 8
  %center_target_face = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %frame_center = alloca [3 x float], align 4
  %frame_normal = alloca [3 x float], align 4
  %best_isect_dist = alloca float, align 4
  %best_center_dist = alloca float, align 4
  %dist = alloca float, align 4
  %poly_center = alloca [3 x float], align 4
  %hit = alloca i32, align 4
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !5601, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5603, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.declare(metadata %struct.BMFace** %isect_target_face, metadata !5605, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.declare(metadata %struct.BMFace** %center_target_face, metadata !5607, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5609, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.declare(metadata [3 x float]* %frame_center, metadata !5611, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.declare(metadata [3 x float]* %frame_normal, metadata !5613, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.declare(metadata float* %best_isect_dist, metadata !5615, metadata !DIExpression()), !dbg !5616
  store float 0x47EFFFFFE0000000, float* %best_isect_dist, align 4, !dbg !5616
  call void @llvm.dbg.declare(metadata float* %best_center_dist, metadata !5617, metadata !DIExpression()), !dbg !5618
  store float 0x47EFFFFFE0000000, float* %best_center_dist, align 4, !dbg !5618
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %frame_center, i64 0, i64 0, !dbg !5619
  %0 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5620
  call void @calc_frame_center(float* %arraydecay, %struct.Frame* %0), !dbg !5621
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %frame_normal, i64 0, i64 0, !dbg !5622
  %1 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5623
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %1, i32 0, i32 0, !dbg !5624
  %arrayidx = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 3, !dbg !5623
  %2 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !5623
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %2, i32 0, i32 2, !dbg !5625
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5623
  %3 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5626
  %verts3 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i32 0, i32 0, !dbg !5627
  %arrayidx4 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts3, i64 0, i64 2, !dbg !5626
  %4 = load %struct.BMVert*, %struct.BMVert** %arrayidx4, align 8, !dbg !5626
  %co5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %4, i32 0, i32 2, !dbg !5628
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !5626
  %5 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5629
  %verts7 = getelementptr inbounds %struct.Frame, %struct.Frame* %5, i32 0, i32 0, !dbg !5630
  %arrayidx8 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts7, i64 0, i64 1, !dbg !5629
  %6 = load %struct.BMVert*, %struct.BMVert** %arrayidx8, align 8, !dbg !5629
  %co9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 2, !dbg !5631
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !5629
  %7 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5632
  %verts11 = getelementptr inbounds %struct.Frame, %struct.Frame* %7, i32 0, i32 0, !dbg !5633
  %arrayidx12 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts11, i64 0, i64 0, !dbg !5632
  %8 = load %struct.BMVert*, %struct.BMVert** %arrayidx12, align 8, !dbg !5632
  %co13 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %8, i32 0, i32 2, !dbg !5634
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 0, !dbg !5632
  %call = call float @normal_quad_v3(float* %arraydecay1, float* %arraydecay2, float* %arraydecay6, float* %arraydecay10, float* %arraydecay14), !dbg !5635
  store %struct.BMFace* null, %struct.BMFace** %center_target_face, align 8, !dbg !5636
  store %struct.BMFace* null, %struct.BMFace** %isect_target_face, align 8, !dbg !5637
  %9 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5638
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 3, i8* null), !dbg !5638
  %10 = bitcast i8* %call15 to %struct.BMFace*, !dbg !5638
  store %struct.BMFace* %10, %struct.BMFace** %f, align 8, !dbg !5638
  br label %for.cond, !dbg !5638

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5640
  %tobool = icmp ne %struct.BMFace* %11, null, !dbg !5638
  br i1 %tobool, label %for.body, label %for.end, !dbg !5638

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5642, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata [3 x float]* %poly_center, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %hit, metadata !5647, metadata !DIExpression()), !dbg !5648
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %frame_center, i64 0, i64 0, !dbg !5649
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %frame_normal, i64 0, i64 0, !dbg !5650
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5651
  %call18 = call i32 @isect_ray_poly(float* %arraydecay16, float* %arraydecay17, %struct.BMFace* %12, float* %dist), !dbg !5652
  store i32 %call18, i32* %hit, align 4, !dbg !5653
  %13 = load i32, i32* %hit, align 4, !dbg !5654
  %tobool19 = icmp ne i32 %13, 0, !dbg !5654
  br i1 %tobool19, label %land.lhs.true, label %if.end, !dbg !5656

land.lhs.true:                                    ; preds = %for.body
  %14 = load float, float* %dist, align 4, !dbg !5657
  %15 = load float, float* %best_isect_dist, align 4, !dbg !5658
  %cmp = fcmp olt float %14, %15, !dbg !5659
  br i1 %cmp, label %if.then, label %if.end, !dbg !5660

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5661
  store %struct.BMFace* %16, %struct.BMFace** %isect_target_face, align 8, !dbg !5663
  %17 = load float, float* %dist, align 4, !dbg !5664
  store float %17, float* %best_isect_dist, align 4, !dbg !5665
  br label %if.end, !dbg !5666

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %18 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5667
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %poly_center, i64 0, i64 0, !dbg !5668
  call void @BM_face_calc_center_mean(%struct.BMFace* %18, float* %arraydecay20), !dbg !5669
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %frame_center, i64 0, i64 0, !dbg !5670
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %poly_center, i64 0, i64 0, !dbg !5671
  %call23 = call float @len_v3v3(float* %arraydecay21, float* %arraydecay22), !dbg !5672
  store float %call23, float* %dist, align 4, !dbg !5673
  %19 = load float, float* %dist, align 4, !dbg !5674
  %20 = load float, float* %best_center_dist, align 4, !dbg !5676
  %cmp24 = fcmp olt float %19, %20, !dbg !5677
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5678

if.then25:                                        ; preds = %if.end
  %21 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5679
  store %struct.BMFace* %21, %struct.BMFace** %center_target_face, align 8, !dbg !5681
  %22 = load float, float* %dist, align 4, !dbg !5682
  store float %22, float* %best_center_dist, align 4, !dbg !5683
  br label %if.end26, !dbg !5684

if.end26:                                         ; preds = %if.then25, %if.end
  br label %for.inc, !dbg !5685

for.inc:                                          ; preds = %if.end26
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5640
  %23 = bitcast i8* %call27 to %struct.BMFace*, !dbg !5640
  store %struct.BMFace* %23, %struct.BMFace** %f, align 8, !dbg !5640
  br label %for.cond, !dbg !5640, !llvm.loop !5686

for.end:                                          ; preds = %for.cond
  %24 = load %struct.BMFace*, %struct.BMFace** %isect_target_face, align 8, !dbg !5688
  store %struct.BMFace* %24, %struct.BMFace** %f, align 8, !dbg !5689
  %25 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5690
  %tobool28 = icmp ne %struct.BMFace* %25, null, !dbg !5690
  br i1 %tobool28, label %lor.lhs.false, label %if.then30, !dbg !5692

lor.lhs.false:                                    ; preds = %for.end
  %26 = load float, float* %best_center_dist, align 4, !dbg !5693
  %27 = load float, float* %best_isect_dist, align 4, !dbg !5694
  %div = fdiv float %27, 2.000000e+00, !dbg !5695
  %cmp29 = fcmp olt float %26, %div, !dbg !5696
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !5697

if.then30:                                        ; preds = %lor.lhs.false, %for.end
  %28 = load %struct.BMFace*, %struct.BMFace** %center_target_face, align 8, !dbg !5698
  store %struct.BMFace* %28, %struct.BMFace** %f, align 8, !dbg !5699
  br label %if.end31, !dbg !5700

if.end31:                                         ; preds = %if.then30, %lor.lhs.false
  %29 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5701
  ret %struct.BMFace* %29, !dbg !5702
}

; Function Attrs: noinline nounwind uwtable
define internal void @skin_fix_hole_no_good_verts(%struct.BMesh* %bm, %struct.Frame* %frame, %struct.BMFace* %split_face) #0 !dbg !5703 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %frame.addr = alloca %struct.Frame*, align 8
  %split_face.addr = alloca %struct.BMFace*, align 8
  %f = alloca %struct.BMFace*, align 8
  %verts = alloca [4 x %struct.BMVert*], align 16
  %vert_buf = alloca %struct.BMVert**, align 8
  %_vert_buf_count = alloca i32, align 4
  %_vert_buf_static = alloca i8*, align 8
  %oiter = alloca %struct.BMOIter, align 8
  %op = alloca %struct.BMOperator, align 8
  %i = alloca i32, align 4
  %best_order = alloca [4 x i32], align 16
  %slot_targetmap = alloca %struct.BMOpSlot*, align 8
  %longest_edge = alloca %struct.BMEdge*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5706, metadata !DIExpression()), !dbg !5707
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  store %struct.BMFace* %split_face, %struct.BMFace** %split_face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %split_face.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata [4 x %struct.BMVert*]* %verts, metadata !5714, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %vert_buf, metadata !5716, metadata !DIExpression()), !dbg !5717
  store %struct.BMVert** null, %struct.BMVert*** %vert_buf, align 8, !dbg !5717
  call void @llvm.dbg.declare(metadata i32* %_vert_buf_count, metadata !5718, metadata !DIExpression()), !dbg !5719
  store i32 0, i32* %_vert_buf_count, align 4, !dbg !5719
  call void @llvm.dbg.declare(metadata i8** %_vert_buf_static, metadata !5720, metadata !DIExpression()), !dbg !5719
  store i8* null, i8** %_vert_buf_static, align 8, !dbg !5719
  call void @llvm.dbg.declare(metadata %struct.BMOIter* %oiter, metadata !5721, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %op, metadata !5741, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5744, metadata !DIExpression()), !dbg !5745
  call void @llvm.dbg.declare(metadata [4 x i32]* %best_order, metadata !5746, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.declare(metadata %struct.BMOpSlot** %slot_targetmap, metadata !5748, metadata !DIExpression()), !dbg !5749
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5750
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %0, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !5751
  %1 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5752
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %1, i32 0, i32 0, !dbg !5752
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !5752
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5753
  %call = call zeroext i8 (%struct.BMesh*, %struct.BMOperator*, i32, i8*, ...) @BMO_op_initf(%struct.BMesh* %2, %struct.BMOperator* %op, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i32 16), !dbg !5754
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5755
  call void @BMO_op_exec(%struct.BMesh* %3, %struct.BMOperator* %op), !dbg !5756
  store %struct.BMFace* null, %struct.BMFace** %split_face.addr, align 8, !dbg !5757
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %op, i32 0, i32 1, !dbg !5758
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !5758
  %call1 = call i8* @BMO_iter_new(%struct.BMOIter* %oiter, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8 zeroext 8), !dbg !5758
  %4 = bitcast i8* %call1 to %struct.BMFace*, !dbg !5758
  store %struct.BMFace* %4, %struct.BMFace** %f, align 8, !dbg !5758
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5760
  %tobool = icmp ne %struct.BMFace* %5, null, !dbg !5758
  br i1 %tobool, label %for.body, label %for.end, !dbg !5758

for.body:                                         ; preds = %for.cond
  %6 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5762
  store %struct.BMFace* %6, %struct.BMFace** %split_face.addr, align 8, !dbg !5764
  br label %for.inc, !dbg !5765

for.inc:                                          ; preds = %for.body
  %call2 = call i8* @BMO_iter_step(%struct.BMOIter* %oiter), !dbg !5760
  %7 = bitcast i8* %call2 to %struct.BMFace*, !dbg !5760
  store %struct.BMFace* %7, %struct.BMFace** %f, align 8, !dbg !5760
  br label %for.cond, !dbg !5760, !llvm.loop !5766

for.end:                                          ; preds = %for.cond
  %8 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5768
  call void @BMO_op_finish(%struct.BMesh* %8, %struct.BMOperator* %op), !dbg !5769
  %9 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5770
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 3, !dbg !5772
  %10 = load i32, i32* %len, align 8, !dbg !5772
  %cmp = icmp eq i32 %10, 3, !dbg !5773
  br i1 %cmp, label %if.then, label %if.else, !dbg !5774

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %longest_edge, metadata !5775, metadata !DIExpression()), !dbg !5777
  %11 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5778
  %call3 = call %struct.BMLoop* @BM_face_find_longest_loop(%struct.BMFace* %11), !dbg !5779
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %call3, i32 0, i32 2, !dbg !5780
  %12 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !5780
  store %struct.BMEdge* %12, %struct.BMEdge** %longest_edge, align 8, !dbg !5781
  %13 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5782
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %13, i8 zeroext 2, i8 zeroext 16, i8 zeroext 0), !dbg !5783
  %14 = load %struct.BMEdge*, %struct.BMEdge** %longest_edge, align 8, !dbg !5784
  %head4 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %14, i32 0, i32 0, !dbg !5784
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head4, i8 zeroext 16), !dbg !5784
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5785
  %call5 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %15, i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11, i64 0, i64 0), i32 16, i32 1, i32 3), !dbg !5786
  br label %if.end51, !dbg !5787

if.else:                                          ; preds = %for.end
  %16 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5788
  %len6 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 3, !dbg !5790
  %17 = load i32, i32* %len6, align 8, !dbg !5790
  %cmp7 = icmp sgt i32 %17, 4, !dbg !5791
  br i1 %cmp7, label %if.then8, label %if.end50, !dbg !5792

if.then8:                                         ; preds = %if.else
  %18 = load i32, i32* %_vert_buf_count, align 4, !dbg !5793
  %19 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5796
  %len9 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 3, !dbg !5797
  %20 = load i32, i32* %len9, align 8, !dbg !5797
  %cmp10 = icmp slt i32 %18, %20, !dbg !5798
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !5799

if.then11:                                        ; preds = %if.then8
  %21 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  %22 = bitcast %struct.BMVert** %21 to i8*, !dbg !5800
  %cmp12 = icmp eq i8* %22, null, !dbg !5800
  br i1 %cmp12, label %land.lhs.true, label %cond.false, !dbg !5800

land.lhs.true:                                    ; preds = %if.then11
  %23 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5800
  %cmp13 = icmp ne i8* %23, null, !dbg !5800
  br i1 %cmp13, label %land.lhs.true14, label %cond.false, !dbg !5800

land.lhs.true14:                                  ; preds = %land.lhs.true
  %24 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %25 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5800
  %len15 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %25, i32 0, i32 3, !dbg !5800
  %26 = load i32, i32* %len15, align 8, !dbg !5800
  %27 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %sub = sub nsw i32 %26, %27, !dbg !5800
  %add = add nsw i32 %24, %sub, !dbg !5800
  %conv = sext i32 %add to i64, !dbg !5800
  %cmp16 = icmp uge i64 1, %conv, !dbg !5800
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5800

cond.true:                                        ; preds = %land.lhs.true14
  %28 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5800
  %29 = bitcast i8* %28 to %struct.BMVert**, !dbg !5800
  store %struct.BMVert** %29, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  br label %cond.end43, !dbg !5800

cond.false:                                       ; preds = %land.lhs.true14, %land.lhs.true, %if.then11
  %30 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  %31 = bitcast %struct.BMVert** %30 to i8*, !dbg !5800
  %32 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5800
  %cmp18 = icmp eq i8* %31, %32, !dbg !5800
  br i1 %cmp18, label %land.lhs.true20, label %cond.false24, !dbg !5800

land.lhs.true20:                                  ; preds = %cond.false
  %33 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  %34 = bitcast %struct.BMVert** %33 to i8*, !dbg !5800
  %cmp21 = icmp ne i8* %34, null, !dbg !5800
  br i1 %cmp21, label %cond.true23, label %cond.false24, !dbg !5800

cond.true23:                                      ; preds = %land.lhs.true20
  br label %cond.end30, !dbg !5800

cond.false24:                                     ; preds = %land.lhs.true20, %cond.false
  %35 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  %cmp25 = icmp eq %struct.BMVert** %35, null, !dbg !5800
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !5800

cond.true27:                                      ; preds = %cond.false24
  br label %cond.end, !dbg !5800

cond.false28:                                     ; preds = %cond.false24
  %36 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5800
  %37 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5800
  %38 = bitcast %struct.BMVert** %37 to i8*, !dbg !5800
  %call29 = call i64 %36(i8* %38), !dbg !5800
  %div = udiv i64 %call29, 8, !dbg !5800
  br label %cond.end, !dbg !5800

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond = phi i64 [ 0, %cond.true27 ], [ %div, %cond.false28 ], !dbg !5800
  br label %cond.end30, !dbg !5800

cond.end30:                                       ; preds = %cond.end, %cond.true23
  %cond31 = phi i64 [ 1, %cond.true23 ], [ %cond, %cond.end ], !dbg !5800
  %39 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %40 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5800
  %len32 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %40, i32 0, i32 3, !dbg !5800
  %41 = load i32, i32* %len32, align 8, !dbg !5800
  %42 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %sub33 = sub nsw i32 %41, %42, !dbg !5800
  %add34 = add nsw i32 %39, %sub33, !dbg !5800
  %conv35 = sext i32 %add34 to i64, !dbg !5800
  %cmp36 = icmp uge i64 %cond31, %conv35, !dbg !5800
  br i1 %cmp36, label %cond.true38, label %cond.false39, !dbg !5800

cond.true38:                                      ; preds = %cond.end30
  br label %cond.end42, !dbg !5800

cond.false39:                                     ; preds = %cond.end30
  %43 = bitcast %struct.BMVert*** %vert_buf to i8**, !dbg !5800
  %44 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5800
  %45 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %46 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5800
  %len40 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %46, i32 0, i32 3, !dbg !5800
  %47 = load i32, i32* %len40, align 8, !dbg !5800
  %48 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %sub41 = sub nsw i32 %47, %48, !dbg !5800
  call void @_bli_array_grow_func(i8** %43, i8* %44, i32 8, i32 %45, i32 %sub41, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)), !dbg !5800
  br label %cond.end42, !dbg !5800

cond.end42:                                       ; preds = %cond.false39, %cond.true38
  br label %cond.end43, !dbg !5800

cond.end43:                                       ; preds = %cond.end42, %cond.true
  %49 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5800
  %len44 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %49, i32 0, i32 3, !dbg !5800
  %50 = load i32, i32* %len44, align 8, !dbg !5800
  %51 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %sub45 = sub nsw i32 %50, %51, !dbg !5800
  %52 = load i32, i32* %_vert_buf_count, align 4, !dbg !5800
  %add46 = add nsw i32 %52, %sub45, !dbg !5800
  store i32 %add46, i32* %_vert_buf_count, align 4, !dbg !5800
  br label %if.end, !dbg !5802

if.end:                                           ; preds = %cond.end43, %if.then8
  %53 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5803
  %54 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5804
  %55 = bitcast %struct.BMFace* %54 to i8*, !dbg !5804
  %56 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5805
  %57 = bitcast %struct.BMVert** %56 to i8**, !dbg !5806
  %58 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5807
  %len47 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %58, i32 0, i32 3, !dbg !5808
  %59 = load i32, i32* %len47, align 8, !dbg !5808
  %call48 = call i32 @BM_iter_as_array(%struct.BMesh* %53, i8 zeroext 9, i8* %55, i8** %57, i32 %59), !dbg !5809
  %60 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5810
  %61 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5811
  %62 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5812
  %call49 = call %struct.BMFace* @collapse_face_corners(%struct.BMesh* %60, %struct.BMFace* %61, i32 4, %struct.BMVert** %62), !dbg !5813
  store %struct.BMFace* %call49, %struct.BMFace** %split_face.addr, align 8, !dbg !5814
  br label %if.end50, !dbg !5815

if.end50:                                         ; preds = %if.end, %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %63 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5816
  %tobool52 = icmp ne %struct.BMVert** %63, null, !dbg !5816
  br i1 %tobool52, label %land.lhs.true53, label %if.end57, !dbg !5816

land.lhs.true53:                                  ; preds = %if.end51
  %64 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5816
  %65 = bitcast %struct.BMVert** %64 to i8*, !dbg !5816
  %66 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5816
  %cmp54 = icmp ne i8* %65, %66, !dbg !5816
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !5818

if.then56:                                        ; preds = %land.lhs.true53
  %67 = load i32, i32* %_vert_buf_count, align 4, !dbg !5819
  %68 = load i8*, i8** %_vert_buf_static, align 8, !dbg !5819
  %69 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5819
  %70 = load %struct.BMVert**, %struct.BMVert*** %vert_buf, align 8, !dbg !5819
  %71 = bitcast %struct.BMVert** %70 to i8*, !dbg !5819
  call void %69(i8* %71), !dbg !5819
  br label %if.end57, !dbg !5819

if.end57:                                         ; preds = %if.then56, %land.lhs.true53, %if.end51
  %72 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5821
  %len58 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %72, i32 0, i32 3, !dbg !5823
  %73 = load i32, i32* %len58, align 8, !dbg !5823
  %cmp59 = icmp ne i32 %73, 4, !dbg !5824
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !5825

if.then61:                                        ; preds = %if.end57
  br label %return, !dbg !5826

if.end62:                                         ; preds = %if.end57
  %74 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5827
  %arraydecay63 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !5828
  call void @BM_face_as_array_vert_quad(%struct.BMFace* %74, %struct.BMVert** %arraydecay63), !dbg !5829
  %arraydecay64 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !5830
  %75 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5831
  %verts65 = getelementptr inbounds %struct.Frame, %struct.Frame* %75, i32 0, i32 0, !dbg !5832
  %arraydecay66 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts65, i64 0, i64 0, !dbg !5831
  %arraydecay67 = getelementptr inbounds [4 x i32], [4 x i32]* %best_order, i64 0, i64 0, !dbg !5833
  call void @skin_choose_quad_bridge_order(%struct.BMVert** %arraydecay64, %struct.BMVert** %arraydecay66, i32* %arraydecay67), !dbg !5834
  %76 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5835
  %77 = load %struct.BMFace*, %struct.BMFace** %split_face.addr, align 8, !dbg !5836
  call void @BM_face_kill(%struct.BMesh* %76, %struct.BMFace* %77), !dbg !5837
  %78 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5838
  call void @BMO_op_init(%struct.BMesh* %78, %struct.BMOperator* %op, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)), !dbg !5839
  %slots_in = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %op, i32 0, i32 0, !dbg !5840
  %arraydecay68 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in, i64 0, i64 0, !dbg !5841
  %call69 = call %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot* %arraydecay68, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)), !dbg !5842
  store %struct.BMOpSlot* %call69, %struct.BMOpSlot** %slot_targetmap, align 8, !dbg !5843
  store i32 0, i32* %i, align 4, !dbg !5844
  br label %for.cond70, !dbg !5846

for.cond70:                                       ; preds = %for.inc79, %if.end62
  %79 = load i32, i32* %i, align 4, !dbg !5847
  %cmp71 = icmp slt i32 %79, 4, !dbg !5849
  br i1 %cmp71, label %for.body73, label %for.end80, !dbg !5850

for.body73:                                       ; preds = %for.cond70
  %80 = load %struct.BMOpSlot*, %struct.BMOpSlot** %slot_targetmap, align 8, !dbg !5851
  %81 = load i32, i32* %i, align 4, !dbg !5853
  %idxprom = sext i32 %81 to i64, !dbg !5854
  %arrayidx = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 %idxprom, !dbg !5854
  %82 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !5854
  %83 = bitcast %struct.BMVert* %82 to i8*, !dbg !5854
  %84 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5855
  %verts74 = getelementptr inbounds %struct.Frame, %struct.Frame* %84, i32 0, i32 0, !dbg !5856
  %85 = load i32, i32* %i, align 4, !dbg !5857
  %idxprom75 = sext i32 %85 to i64, !dbg !5858
  %arrayidx76 = getelementptr inbounds [4 x i32], [4 x i32]* %best_order, i64 0, i64 %idxprom75, !dbg !5858
  %86 = load i32, i32* %arrayidx76, align 4, !dbg !5858
  %idxprom77 = sext i32 %86 to i64, !dbg !5855
  %arrayidx78 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts74, i64 0, i64 %idxprom77, !dbg !5855
  %87 = load %struct.BMVert*, %struct.BMVert** %arrayidx78, align 8, !dbg !5855
  %88 = bitcast %struct.BMVert* %87 to i8*, !dbg !5855
  call void @BMO_slot_map_elem_insert(%struct.BMOperator* %op, %struct.BMOpSlot* %80, i8* %83, i8* %88), !dbg !5859
  br label %for.inc79, !dbg !5860

for.inc79:                                        ; preds = %for.body73
  %89 = load i32, i32* %i, align 4, !dbg !5861
  %inc = add nsw i32 %89, 1, !dbg !5861
  store i32 %inc, i32* %i, align 4, !dbg !5861
  br label %for.cond70, !dbg !5862, !llvm.loop !5863

for.end80:                                        ; preds = %for.cond70
  %90 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5865
  call void @BMO_op_exec(%struct.BMesh* %90, %struct.BMOperator* %op), !dbg !5866
  %91 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5867
  call void @BMO_op_finish(%struct.BMesh* %91, %struct.BMOperator* %op), !dbg !5868
  br label %return, !dbg !5869

return:                                           ; preds = %for.end80, %if.then61
  ret void, !dbg !5869
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_frame_center(float* %center, %struct.Frame* %frame) #0 !dbg !5870 {
entry:
  %center.addr = alloca float*, align 8
  %frame.addr = alloca %struct.Frame*, align 8
  store float* %center, float** %center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %center.addr, metadata !5873, metadata !DIExpression()), !dbg !5874
  store %struct.Frame* %frame, %struct.Frame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Frame** %frame.addr, metadata !5875, metadata !DIExpression()), !dbg !5876
  %0 = load float*, float** %center.addr, align 8, !dbg !5877
  %1 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5878
  %verts = getelementptr inbounds %struct.Frame, %struct.Frame* %1, i32 0, i32 0, !dbg !5879
  %arrayidx = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts, i64 0, i64 0, !dbg !5878
  %2 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !5878
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %2, i32 0, i32 2, !dbg !5880
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5878
  %3 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5881
  %verts1 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i32 0, i32 0, !dbg !5882
  %arrayidx2 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts1, i64 0, i64 1, !dbg !5881
  %4 = load %struct.BMVert*, %struct.BMVert** %arrayidx2, align 8, !dbg !5881
  %co3 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %4, i32 0, i32 2, !dbg !5883
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !5881
  call void @add_v3_v3v3(float* %0, float* %arraydecay, float* %arraydecay4), !dbg !5884
  %5 = load float*, float** %center.addr, align 8, !dbg !5885
  %6 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5886
  %verts5 = getelementptr inbounds %struct.Frame, %struct.Frame* %6, i32 0, i32 0, !dbg !5887
  %arrayidx6 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts5, i64 0, i64 2, !dbg !5886
  %7 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !5886
  %co7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 2, !dbg !5888
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !5886
  call void @add_v3_v3(float* %5, float* %arraydecay8), !dbg !5889
  %8 = load float*, float** %center.addr, align 8, !dbg !5890
  %9 = load %struct.Frame*, %struct.Frame** %frame.addr, align 8, !dbg !5891
  %verts9 = getelementptr inbounds %struct.Frame, %struct.Frame* %9, i32 0, i32 0, !dbg !5892
  %arrayidx10 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %verts9, i64 0, i64 3, !dbg !5891
  %10 = load %struct.BMVert*, %struct.BMVert** %arrayidx10, align 8, !dbg !5891
  %co11 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !5893
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !5891
  call void @add_v3_v3(float* %8, float* %arraydecay12), !dbg !5894
  %11 = load float*, float** %center.addr, align 8, !dbg !5895
  call void @mul_v3_fl(float* %11, float 2.500000e-01), !dbg !5896
  ret void, !dbg !5897
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @isect_ray_poly(float* %ray_start, float* %ray_dir, %struct.BMFace* %f, float* %r_lambda) #0 !dbg !5898 {
entry:
  %ray_start.addr = alloca float*, align 8
  %ray_dir.addr = alloca float*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %r_lambda.addr = alloca float*, align 8
  %v = alloca %struct.BMVert*, align 8
  %v_first = alloca %struct.BMVert*, align 8
  %v_prev = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %best_dist = alloca float, align 4
  %hit = alloca i8, align 1
  %dist = alloca float, align 4
  %curhit = alloca i8, align 1
  store float* %ray_start, float** %ray_start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_start.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  store float* %ray_dir, float** %ray_dir.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_dir.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !5905, metadata !DIExpression()), !dbg !5906
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_first, metadata !5911, metadata !DIExpression()), !dbg !5912
  store %struct.BMVert* null, %struct.BMVert** %v_first, align 8, !dbg !5912
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_prev, metadata !5913, metadata !DIExpression()), !dbg !5914
  store %struct.BMVert* null, %struct.BMVert** %v_prev, align 8, !dbg !5914
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5915, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.declare(metadata float* %best_dist, metadata !5917, metadata !DIExpression()), !dbg !5918
  store float 0x47EFFFFFE0000000, float* %best_dist, align 4, !dbg !5918
  call void @llvm.dbg.declare(metadata i8* %hit, metadata !5919, metadata !DIExpression()), !dbg !5920
  store i8 0, i8* %hit, align 1, !dbg !5920
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !5921
  %1 = bitcast %struct.BMFace* %0 to i8*, !dbg !5921
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 9, i8* %1), !dbg !5921
  %2 = bitcast i8* %call to %struct.BMVert*, !dbg !5921
  store %struct.BMVert* %2, %struct.BMVert** %v, align 8, !dbg !5921
  br label %for.cond, !dbg !5921

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5923
  %tobool = icmp ne %struct.BMVert* %3, null, !dbg !5921
  br i1 %tobool, label %for.body, label %for.end, !dbg !5921

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMVert*, %struct.BMVert** %v_first, align 8, !dbg !5925
  %tobool1 = icmp ne %struct.BMVert* %4, null, !dbg !5925
  br i1 %tobool1, label %if.else, label %if.then, !dbg !5928

if.then:                                          ; preds = %for.body
  %5 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5929
  store %struct.BMVert* %5, %struct.BMVert** %v_first, align 8, !dbg !5930
  br label %if.end13, !dbg !5931

if.else:                                          ; preds = %for.body
  %6 = load %struct.BMVert*, %struct.BMVert** %v_prev, align 8, !dbg !5932
  %7 = load %struct.BMVert*, %struct.BMVert** %v_first, align 8, !dbg !5934
  %cmp = icmp ne %struct.BMVert* %6, %7, !dbg !5935
  br i1 %cmp, label %if.then2, label %if.end12, !dbg !5936

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5937, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.declare(metadata i8* %curhit, metadata !5940, metadata !DIExpression()), !dbg !5941
  %8 = load float*, float** %ray_start.addr, align 8, !dbg !5942
  %9 = load float*, float** %ray_dir.addr, align 8, !dbg !5943
  %10 = load %struct.BMVert*, %struct.BMVert** %v_first, align 8, !dbg !5944
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !5945
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5944
  %11 = load %struct.BMVert*, %struct.BMVert** %v_prev, align 8, !dbg !5946
  %co3 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 2, !dbg !5947
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !5946
  %12 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5948
  %co5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 2, !dbg !5949
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !5948
  %call7 = call zeroext i8 @isect_ray_tri_v3(float* %8, float* %9, float* %arraydecay, float* %arraydecay4, float* %arraydecay6, float* %dist, float* null), !dbg !5950
  store i8 %call7, i8* %curhit, align 1, !dbg !5951
  %13 = load i8, i8* %curhit, align 1, !dbg !5952
  %conv = zext i8 %13 to i32, !dbg !5952
  %tobool8 = icmp ne i32 %conv, 0, !dbg !5952
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !5954

land.lhs.true:                                    ; preds = %if.then2
  %14 = load float, float* %dist, align 4, !dbg !5955
  %15 = load float, float* %best_dist, align 4, !dbg !5956
  %cmp9 = fcmp olt float %14, %15, !dbg !5957
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5958

if.then11:                                        ; preds = %land.lhs.true
  store i8 1, i8* %hit, align 1, !dbg !5959
  %16 = load float, float* %dist, align 4, !dbg !5961
  store float %16, float* %best_dist, align 4, !dbg !5962
  br label %if.end, !dbg !5963

if.end:                                           ; preds = %if.then11, %land.lhs.true, %if.then2
  br label %if.end12, !dbg !5964

if.end12:                                         ; preds = %if.end, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %17 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5965
  store %struct.BMVert* %17, %struct.BMVert** %v_prev, align 8, !dbg !5966
  br label %for.inc, !dbg !5967

for.inc:                                          ; preds = %if.end13
  %call14 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5923
  %18 = bitcast i8* %call14 to %struct.BMVert*, !dbg !5923
  store %struct.BMVert* %18, %struct.BMVert** %v, align 8, !dbg !5923
  br label %for.cond, !dbg !5923, !llvm.loop !5968

for.end:                                          ; preds = %for.cond
  %19 = load float, float* %best_dist, align 4, !dbg !5970
  %20 = load float*, float** %r_lambda.addr, align 8, !dbg !5971
  store float %19, float* %20, align 4, !dbg !5972
  %21 = load i8, i8* %hit, align 1, !dbg !5973
  %conv15 = zext i8 %21 to i32, !dbg !5973
  ret i32 %conv15, !dbg !5974
}

declare dso_local void @BM_face_calc_center_mean(%struct.BMFace*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5975 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  %0 = load float*, float** %a.addr, align 8, !dbg !5980
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5980
  %1 = load float, float* %arrayidx, align 4, !dbg !5980
  %2 = load float*, float** %r.addr, align 8, !dbg !5981
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5981
  %3 = load float, float* %arrayidx1, align 4, !dbg !5982
  %add = fadd float %3, %1, !dbg !5982
  store float %add, float* %arrayidx1, align 4, !dbg !5982
  %4 = load float*, float** %a.addr, align 8, !dbg !5983
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5983
  %5 = load float, float* %arrayidx2, align 4, !dbg !5983
  %6 = load float*, float** %r.addr, align 8, !dbg !5984
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5984
  %7 = load float, float* %arrayidx3, align 4, !dbg !5985
  %add4 = fadd float %7, %5, !dbg !5985
  store float %add4, float* %arrayidx3, align 4, !dbg !5985
  %8 = load float*, float** %a.addr, align 8, !dbg !5986
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5986
  %9 = load float, float* %arrayidx5, align 4, !dbg !5986
  %10 = load float*, float** %r.addr, align 8, !dbg !5987
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5987
  %11 = load float, float* %arrayidx6, align 4, !dbg !5988
  %add7 = fadd float %11, %9, !dbg !5988
  store float %add7, float* %arrayidx6, align 4, !dbg !5988
  ret void, !dbg !5989
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5990 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5995, metadata !DIExpression()), !dbg !5996
  %0 = load float, float* %f.addr, align 4, !dbg !5997
  %1 = load float*, float** %r.addr, align 8, !dbg !5998
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5998
  %2 = load float, float* %arrayidx, align 4, !dbg !5999
  %mul = fmul float %2, %0, !dbg !5999
  store float %mul, float* %arrayidx, align 4, !dbg !5999
  %3 = load float, float* %f.addr, align 4, !dbg !6000
  %4 = load float*, float** %r.addr, align 8, !dbg !6001
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !6001
  %5 = load float, float* %arrayidx1, align 4, !dbg !6002
  %mul2 = fmul float %5, %3, !dbg !6002
  store float %mul2, float* %arrayidx1, align 4, !dbg !6002
  %6 = load float, float* %f.addr, align 4, !dbg !6003
  %7 = load float*, float** %r.addr, align 8, !dbg !6004
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !6004
  %8 = load float, float* %arrayidx3, align 4, !dbg !6005
  %mul4 = fmul float %8, %6, !dbg !6005
  store float %mul4, float* %arrayidx3, align 4, !dbg !6005
  ret void, !dbg !6006
}

declare dso_local zeroext i8 @isect_ray_tri_v3(float*, float*, float*, float*, float*, float*, float*) #2

declare dso_local zeroext i8 @BMO_op_initf(%struct.BMesh*, %struct.BMOperator*, i32, i8*, ...) #2

declare dso_local void @BMO_op_exec(%struct.BMesh*, %struct.BMOperator*) #2

declare dso_local i8* @BMO_iter_new(%struct.BMOIter*, %struct.BMOpSlot*, i8*, i8 zeroext) #2

declare dso_local i8* @BMO_iter_step(%struct.BMOIter*) #2

declare dso_local void @BMO_op_finish(%struct.BMesh*, %struct.BMOperator*) #2

declare dso_local %struct.BMLoop* @BM_face_find_longest_loop(%struct.BMFace*) #2

declare dso_local zeroext i8 @BMO_op_callf(%struct.BMesh*, i32, i8*, ...) #2

declare dso_local void @_bli_array_grow_func(i8**, i8*, i32, i32, i32, i8*) #2

declare dso_local i32 @BM_iter_as_array(%struct.BMesh*, i8 zeroext, i8*, i8**, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMFace* @collapse_face_corners(%struct.BMesh* %bm, %struct.BMFace* %f, i32 %n, %struct.BMVert** %orig_verts) #0 !dbg !6007 {
entry:
  %retval = alloca %struct.BMFace*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %n.addr = alloca i32, align 4
  %orig_verts.addr = alloca %struct.BMVert**, align 8
  %orig_len = alloca i32, align 4
  %vf = alloca %struct.BMFace*, align 8
  %shortest_edge = alloca %struct.BMEdge*, align 8
  %v_safe = alloca %struct.BMVert*, align 8
  %v_merge = alloca %struct.BMVert*, align 8
  %op = alloca %struct.BMOperator, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  %slot_targetmap = alloca %struct.BMOpSlot*, align 8
  %wrong_face = alloca i8, align 1
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  store %struct.BMVert** %orig_verts, %struct.BMVert*** %orig_verts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %orig_verts.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.declare(metadata i32* %orig_len, metadata !6018, metadata !DIExpression()), !dbg !6019
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6020
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %0, i32 0, i32 3, !dbg !6021
  %1 = load i32, i32* %len, align 8, !dbg !6021
  store i32 %1, i32* %orig_len, align 4, !dbg !6019
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6022
  %len1 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %2, i32 0, i32 3, !dbg !6024
  %3 = load i32, i32* %len1, align 8, !dbg !6024
  %4 = load i32, i32* %n.addr, align 4, !dbg !6025
  %cmp = icmp sle i32 %3, %4, !dbg !6026
  br i1 %cmp, label %if.then, label %if.end, !dbg !6027

if.then:                                          ; preds = %entry
  %5 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6028
  store %struct.BMFace* %5, %struct.BMFace** %retval, align 8, !dbg !6029
  br label %return, !dbg !6029

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6030

while.cond:                                       ; preds = %for.end34, %if.end
  %6 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6031
  %len2 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %6, i32 0, i32 3, !dbg !6032
  %7 = load i32, i32* %len2, align 8, !dbg !6032
  %8 = load i32, i32* %n.addr, align 4, !dbg !6033
  %cmp3 = icmp sgt i32 %7, %8, !dbg !6034
  br i1 %cmp3, label %while.body, label %while.end, !dbg !6030

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.BMFace** %vf, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %shortest_edge, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_safe, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_merge, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %op, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata %struct.BMOpSlot** %slot_targetmap, metadata !6050, metadata !DIExpression()), !dbg !6051
  %9 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6052
  %call = call %struct.BMLoop* @BM_face_find_shortest_loop(%struct.BMFace* %9), !dbg !6053
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %call, i32 0, i32 2, !dbg !6054
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6054
  store %struct.BMEdge* %10, %struct.BMEdge** %shortest_edge, align 8, !dbg !6055
  %11 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6056
  %call4 = call zeroext i8 (%struct.BMesh*, %struct.BMOperator*, i32, i8*, ...) @BMO_op_initf(%struct.BMesh* %11, %struct.BMOperator* %op, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)), !dbg !6057
  %slots_in = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %op, i32 0, i32 0, !dbg !6058
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in, i64 0, i64 0, !dbg !6059
  %call5 = call %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)), !dbg !6060
  store %struct.BMOpSlot* %call5, %struct.BMOpSlot** %slot_targetmap, align 8, !dbg !6061
  %12 = load %struct.BMEdge*, %struct.BMEdge** %shortest_edge, align 8, !dbg !6062
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %12, i32 0, i32 2, !dbg !6063
  %13 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !6063
  store %struct.BMVert* %13, %struct.BMVert** %v_safe, align 8, !dbg !6064
  %14 = load %struct.BMEdge*, %struct.BMEdge** %shortest_edge, align 8, !dbg !6065
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %14, i32 0, i32 3, !dbg !6066
  %15 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !6066
  store %struct.BMVert* %15, %struct.BMVert** %v_merge, align 8, !dbg !6067
  %16 = load %struct.BMVert*, %struct.BMVert** %v_safe, align 8, !dbg !6068
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 2, !dbg !6069
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6068
  %17 = load %struct.BMVert*, %struct.BMVert** %v_safe, align 8, !dbg !6070
  %co7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 2, !dbg !6071
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !6070
  %18 = load %struct.BMVert*, %struct.BMVert** %v_merge, align 8, !dbg !6072
  %co9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 2, !dbg !6073
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !6072
  call void @mid_v3_v3v3(float* %arraydecay6, float* %arraydecay8, float* %arraydecay10), !dbg !6074
  %19 = load %struct.BMOpSlot*, %struct.BMOpSlot** %slot_targetmap, align 8, !dbg !6075
  %20 = load %struct.BMVert*, %struct.BMVert** %v_merge, align 8, !dbg !6076
  %21 = bitcast %struct.BMVert* %20 to i8*, !dbg !6076
  %22 = load %struct.BMVert*, %struct.BMVert** %v_safe, align 8, !dbg !6077
  %23 = bitcast %struct.BMVert* %22 to i8*, !dbg !6077
  call void @BMO_slot_map_elem_insert(%struct.BMOperator* %op, %struct.BMOpSlot* %19, i8* %21, i8* %23), !dbg !6078
  %24 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6079
  call void @BMO_op_exec(%struct.BMesh* %24, %struct.BMOperator* %op), !dbg !6080
  %25 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6081
  call void @BMO_op_finish(%struct.BMesh* %25, %struct.BMOperator* %op), !dbg !6082
  store %struct.BMFace* null, %struct.BMFace** %f.addr, align 8, !dbg !6083
  %26 = load %struct.BMVert*, %struct.BMVert** %v_safe, align 8, !dbg !6084
  %27 = bitcast %struct.BMVert* %26 to i8*, !dbg !6084
  %call11 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 5, i8* %27), !dbg !6084
  %28 = bitcast i8* %call11 to %struct.BMFace*, !dbg !6084
  store %struct.BMFace* %28, %struct.BMFace** %vf, align 8, !dbg !6084
  br label %for.cond, !dbg !6084

for.cond:                                         ; preds = %for.inc32, %while.body
  %29 = load %struct.BMFace*, %struct.BMFace** %vf, align 8, !dbg !6086
  %tobool = icmp ne %struct.BMFace* %29, null, !dbg !6084
  br i1 %tobool, label %for.body, label %for.end34, !dbg !6084

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %wrong_face, metadata !6088, metadata !DIExpression()), !dbg !6090
  store i8 0, i8* %wrong_face, align 1, !dbg !6090
  store i32 0, i32* %i, align 4, !dbg !6091
  br label %for.cond12, !dbg !6093

for.cond12:                                       ; preds = %for.inc, %for.body
  %30 = load i32, i32* %i, align 4, !dbg !6094
  %31 = load i32, i32* %orig_len, align 4, !dbg !6096
  %cmp13 = icmp slt i32 %30, %31, !dbg !6097
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !6098

for.body14:                                       ; preds = %for.cond12
  %32 = load %struct.BMVert**, %struct.BMVert*** %orig_verts.addr, align 8, !dbg !6099
  %33 = load i32, i32* %i, align 4, !dbg !6102
  %idxprom = sext i32 %33 to i64, !dbg !6099
  %arrayidx = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %32, i64 %idxprom, !dbg !6099
  %34 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !6099
  %35 = load %struct.BMVert*, %struct.BMVert** %v_merge, align 8, !dbg !6103
  %cmp15 = icmp eq %struct.BMVert* %34, %35, !dbg !6104
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !6105

if.then16:                                        ; preds = %for.body14
  %36 = load %struct.BMVert**, %struct.BMVert*** %orig_verts.addr, align 8, !dbg !6106
  %37 = load i32, i32* %i, align 4, !dbg !6108
  %idxprom17 = sext i32 %37 to i64, !dbg !6106
  %arrayidx18 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %36, i64 %idxprom17, !dbg !6106
  store %struct.BMVert* null, %struct.BMVert** %arrayidx18, align 8, !dbg !6109
  br label %if.end28, !dbg !6110

if.else:                                          ; preds = %for.body14
  %38 = load %struct.BMVert**, %struct.BMVert*** %orig_verts.addr, align 8, !dbg !6111
  %39 = load i32, i32* %i, align 4, !dbg !6113
  %idxprom19 = sext i32 %39 to i64, !dbg !6111
  %arrayidx20 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %38, i64 %idxprom19, !dbg !6111
  %40 = load %struct.BMVert*, %struct.BMVert** %arrayidx20, align 8, !dbg !6111
  %tobool21 = icmp ne %struct.BMVert* %40, null, !dbg !6111
  br i1 %tobool21, label %land.lhs.true, label %if.end27, !dbg !6114

land.lhs.true:                                    ; preds = %if.else
  %41 = load %struct.BMFace*, %struct.BMFace** %vf, align 8, !dbg !6115
  %42 = load %struct.BMVert**, %struct.BMVert*** %orig_verts.addr, align 8, !dbg !6116
  %43 = load i32, i32* %i, align 4, !dbg !6117
  %idxprom22 = sext i32 %43 to i64, !dbg !6116
  %arrayidx23 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %42, i64 %idxprom22, !dbg !6116
  %44 = load %struct.BMVert*, %struct.BMVert** %arrayidx23, align 8, !dbg !6116
  %call24 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %41, %struct.BMVert* %44), !dbg !6118
  %tobool25 = icmp ne i8 %call24, 0, !dbg !6118
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !6119

if.then26:                                        ; preds = %land.lhs.true
  store i8 1, i8* %wrong_face, align 1, !dbg !6120
  br label %for.end, !dbg !6122

if.end27:                                         ; preds = %land.lhs.true, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then16
  br label %for.inc, !dbg !6123

for.inc:                                          ; preds = %if.end28
  %45 = load i32, i32* %i, align 4, !dbg !6124
  %inc = add nsw i32 %45, 1, !dbg !6124
  store i32 %inc, i32* %i, align 4, !dbg !6124
  br label %for.cond12, !dbg !6125, !llvm.loop !6126

for.end:                                          ; preds = %if.then26, %for.cond12
  %46 = load i8, i8* %wrong_face, align 1, !dbg !6128
  %tobool29 = icmp ne i8 %46, 0, !dbg !6128
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6130

if.then30:                                        ; preds = %for.end
  %47 = load %struct.BMFace*, %struct.BMFace** %vf, align 8, !dbg !6131
  store %struct.BMFace* %47, %struct.BMFace** %f.addr, align 8, !dbg !6133
  br label %for.end34, !dbg !6134

if.end31:                                         ; preds = %for.end
  br label %for.inc32, !dbg !6135

for.inc32:                                        ; preds = %if.end31
  %call33 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6086
  %48 = bitcast i8* %call33 to %struct.BMFace*, !dbg !6086
  store %struct.BMFace* %48, %struct.BMFace** %vf, align 8, !dbg !6086
  br label %for.cond, !dbg !6086, !llvm.loop !6136

for.end34:                                        ; preds = %if.then30, %for.cond
  br label %while.cond, !dbg !6030, !llvm.loop !6138

while.end:                                        ; preds = %while.cond
  %49 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !6140
  store %struct.BMFace* %49, %struct.BMFace** %retval, align 8, !dbg !6141
  br label %return, !dbg !6141

return:                                           ; preds = %while.end, %if.then
  %50 = load %struct.BMFace*, %struct.BMFace** %retval, align 8, !dbg !6142
  ret %struct.BMFace* %50, !dbg !6142
}

declare dso_local void @BM_face_as_array_vert_quad(%struct.BMFace*, %struct.BMVert**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @skin_choose_quad_bridge_order(%struct.BMVert** %a, %struct.BMVert** %b, i32* %best_order) #0 !dbg !6143 {
entry:
  %a.addr = alloca %struct.BMVert**, align 8
  %b.addr = alloca %struct.BMVert**, align 8
  %best_order.addr = alloca i32*, align 8
  %orders = alloca [8 x [4 x i32]], align 16
  %shortest_len = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca float, align 4
  store %struct.BMVert** %a, %struct.BMVert*** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %a.addr, metadata !6146, metadata !DIExpression()), !dbg !6147
  store %struct.BMVert** %b, %struct.BMVert*** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %b.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  store i32* %best_order, i32** %best_order.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %best_order.addr, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata [8 x [4 x i32]]* %orders, metadata !6152, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.declare(metadata float* %shortest_len, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6160, metadata !DIExpression()), !dbg !6161
  store i32 0, i32* %i, align 4, !dbg !6162
  br label %for.cond, !dbg !6164

for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6165
  %cmp = icmp slt i32 %0, 4, !dbg !6167
  br i1 %cmp, label %for.body, label %for.end15, !dbg !6168

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6169
  br label %for.cond1, !dbg !6172

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4, !dbg !6173
  %cmp2 = icmp slt i32 %1, 4, !dbg !6175
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6176

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %j, align 4, !dbg !6177
  %3 = load i32, i32* %i, align 4, !dbg !6179
  %add = add nsw i32 %2, %3, !dbg !6180
  %rem = srem i32 %add, 4, !dbg !6181
  %4 = load i32, i32* %i, align 4, !dbg !6182
  %idxprom = sext i32 %4 to i64, !dbg !6183
  %arrayidx = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %orders, i64 0, i64 %idxprom, !dbg !6183
  %5 = load i32, i32* %j, align 4, !dbg !6184
  %idxprom4 = sext i32 %5 to i64, !dbg !6183
  %arrayidx5 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 %idxprom4, !dbg !6183
  store i32 %rem, i32* %arrayidx5, align 4, !dbg !6185
  %6 = load i32, i32* %j, align 4, !dbg !6186
  %7 = load i32, i32* %i, align 4, !dbg !6187
  %add6 = add nsw i32 %6, %7, !dbg !6188
  %rem7 = srem i32 %add6, 4, !dbg !6189
  %sub = sub nsw i32 3, %rem7, !dbg !6190
  %8 = load i32, i32* %i, align 4, !dbg !6191
  %add8 = add nsw i32 %8, 4, !dbg !6192
  %idxprom9 = sext i32 %add8 to i64, !dbg !6193
  %arrayidx10 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %orders, i64 0, i64 %idxprom9, !dbg !6193
  %9 = load i32, i32* %j, align 4, !dbg !6194
  %idxprom11 = sext i32 %9 to i64, !dbg !6193
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx10, i64 0, i64 %idxprom11, !dbg !6193
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !6195
  br label %for.inc, !dbg !6196

for.inc:                                          ; preds = %for.body3
  %10 = load i32, i32* %j, align 4, !dbg !6197
  %inc = add nsw i32 %10, 1, !dbg !6197
  store i32 %inc, i32* %j, align 4, !dbg !6197
  br label %for.cond1, !dbg !6198, !llvm.loop !6199

for.end:                                          ; preds = %for.cond1
  br label %for.inc13, !dbg !6201

for.inc13:                                        ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !6202
  %inc14 = add nsw i32 %11, 1, !dbg !6202
  store i32 %inc14, i32* %i, align 4, !dbg !6202
  br label %for.cond, !dbg !6203, !llvm.loop !6204

for.end15:                                        ; preds = %for.cond
  store float 0x47EFFFFFE0000000, float* %shortest_len, align 4, !dbg !6206
  store i32 0, i32* %i, align 4, !dbg !6207
  br label %for.cond16, !dbg !6209

for.cond16:                                       ; preds = %for.inc40, %for.end15
  %12 = load i32, i32* %i, align 4, !dbg !6210
  %cmp17 = icmp slt i32 %12, 8, !dbg !6212
  br i1 %cmp17, label %for.body18, label %for.end42, !dbg !6213

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata float* %len, metadata !6214, metadata !DIExpression()), !dbg !6216
  store float 0.000000e+00, float* %len, align 4, !dbg !6216
  store i32 0, i32* %j, align 4, !dbg !6217
  br label %for.cond19, !dbg !6219

for.cond19:                                       ; preds = %for.inc33, %for.body18
  %13 = load i32, i32* %j, align 4, !dbg !6220
  %cmp20 = icmp slt i32 %13, 4, !dbg !6222
  br i1 %cmp20, label %for.body21, label %for.end35, !dbg !6223

for.body21:                                       ; preds = %for.cond19
  %14 = load %struct.BMVert**, %struct.BMVert*** %a.addr, align 8, !dbg !6224
  %15 = load i32, i32* %j, align 4, !dbg !6225
  %idxprom22 = sext i32 %15 to i64, !dbg !6224
  %arrayidx23 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %14, i64 %idxprom22, !dbg !6224
  %16 = load %struct.BMVert*, %struct.BMVert** %arrayidx23, align 8, !dbg !6224
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 2, !dbg !6226
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6224
  %17 = load %struct.BMVert**, %struct.BMVert*** %b.addr, align 8, !dbg !6227
  %18 = load i32, i32* %i, align 4, !dbg !6228
  %idxprom24 = sext i32 %18 to i64, !dbg !6229
  %arrayidx25 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %orders, i64 0, i64 %idxprom24, !dbg !6229
  %19 = load i32, i32* %j, align 4, !dbg !6230
  %idxprom26 = sext i32 %19 to i64, !dbg !6229
  %arrayidx27 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx25, i64 0, i64 %idxprom26, !dbg !6229
  %20 = load i32, i32* %arrayidx27, align 4, !dbg !6229
  %idxprom28 = sext i32 %20 to i64, !dbg !6227
  %arrayidx29 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %17, i64 %idxprom28, !dbg !6227
  %21 = load %struct.BMVert*, %struct.BMVert** %arrayidx29, align 8, !dbg !6227
  %co30 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !6231
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !6227
  %call = call float @len_squared_v3v3(float* %arraydecay, float* %arraydecay31), !dbg !6232
  %22 = load float, float* %len, align 4, !dbg !6233
  %add32 = fadd float %22, %call, !dbg !6233
  store float %add32, float* %len, align 4, !dbg !6233
  br label %for.inc33, !dbg !6234

for.inc33:                                        ; preds = %for.body21
  %23 = load i32, i32* %j, align 4, !dbg !6235
  %inc34 = add nsw i32 %23, 1, !dbg !6235
  store i32 %inc34, i32* %j, align 4, !dbg !6235
  br label %for.cond19, !dbg !6236, !llvm.loop !6237

for.end35:                                        ; preds = %for.cond19
  %24 = load float, float* %len, align 4, !dbg !6239
  %25 = load float, float* %shortest_len, align 4, !dbg !6241
  %cmp36 = fcmp olt float %24, %25, !dbg !6242
  br i1 %cmp36, label %if.then, label %if.end, !dbg !6243

if.then:                                          ; preds = %for.end35
  %26 = load float, float* %len, align 4, !dbg !6244
  store float %26, float* %shortest_len, align 4, !dbg !6246
  %27 = load i32*, i32** %best_order.addr, align 8, !dbg !6247
  %28 = bitcast i32* %27 to i8*, !dbg !6248
  %29 = load i32, i32* %i, align 4, !dbg !6249
  %idxprom37 = sext i32 %29 to i64, !dbg !6250
  %arrayidx38 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* %orders, i64 0, i64 %idxprom37, !dbg !6250
  %arraydecay39 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx38, i64 0, i64 0, !dbg !6248
  %30 = bitcast i32* %arraydecay39 to i8*, !dbg !6248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 16 %30, i64 16, i1 false), !dbg !6248
  br label %if.end, !dbg !6251

if.end:                                           ; preds = %if.then, %for.end35
  br label %for.inc40, !dbg !6252

for.inc40:                                        ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !6253
  %inc41 = add nsw i32 %31, 1, !dbg !6253
  store i32 %inc41, i32* %i, align 4, !dbg !6253
  br label %for.cond16, !dbg !6254, !llvm.loop !6255

for.end42:                                        ; preds = %for.cond16
  ret void, !dbg !6257
}

declare dso_local void @BM_face_kill(%struct.BMesh*, %struct.BMFace*) #2

declare dso_local void @BMO_op_init(%struct.BMesh*, %struct.BMOperator*, i32, i8*) #2

declare dso_local %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BMO_slot_map_elem_insert(%struct.BMOperator* %op, %struct.BMOpSlot* %slot, i8* %element, i8* %val) #0 !dbg !6258 {
entry:
  %op.addr = alloca %struct.BMOperator*, align 8
  %slot.addr = alloca %struct.BMOpSlot*, align 8
  %element.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  store %struct.BMOperator* %op, %struct.BMOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMOperator** %op.addr, metadata !6265, metadata !DIExpression()), !dbg !6266
  store %struct.BMOpSlot* %slot, %struct.BMOpSlot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMOpSlot** %slot.addr, metadata !6267, metadata !DIExpression()), !dbg !6268
  store i8* %element, i8** %element.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %element.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !6271, metadata !DIExpression()), !dbg !6272
  %0 = load %struct.BMOperator*, %struct.BMOperator** %op.addr, align 8, !dbg !6273
  %1 = load %struct.BMOpSlot*, %struct.BMOpSlot** %slot.addr, align 8, !dbg !6274
  %2 = load i8*, i8** %element.addr, align 8, !dbg !6275
  %3 = load i8*, i8** %val.addr, align 8, !dbg !6276
  call void @BMO_slot_map_insert(%struct.BMOperator* %0, %struct.BMOpSlot* %1, i8* %2, i8* %3), !dbg !6277
  ret void, !dbg !6278
}

declare dso_local %struct.BMLoop* @BM_face_find_shortest_loop(%struct.BMFace*) #2

declare dso_local zeroext i8 @BM_vert_in_face(%struct.BMFace*, %struct.BMVert*) #2

declare dso_local void @BMO_slot_map_insert(%struct.BMOperator*, %struct.BMOpSlot*, i8*, i8*) #2

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_bmesh_get_n(%struct.CustomData*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %e, %struct.BMVert* %v) #0 !dbg !6279 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !6289
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !6291
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !6291
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6292
  %cmp = icmp eq %struct.BMVert* %1, %2, !dbg !6293
  br i1 %cmp, label %if.then, label %if.else, !dbg !6294

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !6295
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 3, !dbg !6297
  %4 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !6297
  store %struct.BMVert* %4, %struct.BMVert** %retval, align 8, !dbg !6298
  br label %return, !dbg !6298

if.else:                                          ; preds = %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !6299
  %v21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 3, !dbg !6301
  %6 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !6301
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !6302
  %cmp2 = icmp eq %struct.BMVert* %6, %7, !dbg !6303
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !6304

if.then3:                                         ; preds = %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !6305
  %v14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 2, !dbg !6307
  %9 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !6307
  store %struct.BMVert* %9, %struct.BMVert** %retval, align 8, !dbg !6308
  br label %return, !dbg !6308

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !6309
  br label %return, !dbg !6309

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !6310
  ret %struct.BMVert* %10, !dbg !6310
}

declare dso_local void @BM_data_layer_free_n(%struct.BMesh*, %struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @connect_frames(%struct.SkinOutput* %so, %struct.BMVert** %frame1, %struct.BMVert** %frame2) #0 !dbg !6311 {
entry:
  %so.addr = alloca %struct.SkinOutput*, align 8
  %frame1.addr = alloca %struct.BMVert**, align 8
  %frame2.addr = alloca %struct.BMVert**, align 8
  %q = alloca [4 x [4 x %struct.BMVert*]], align 16
  %p = alloca [3 x float], align 4
  %no = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %swap = alloca i32, align 4
  store %struct.SkinOutput* %so, %struct.SkinOutput** %so.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SkinOutput** %so.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  store %struct.BMVert** %frame1, %struct.BMVert*** %frame1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %frame1.addr, metadata !6316, metadata !DIExpression()), !dbg !6317
  store %struct.BMVert** %frame2, %struct.BMVert*** %frame2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %frame2.addr, metadata !6318, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.declare(metadata [4 x [4 x %struct.BMVert*]]* %q, metadata !6320, metadata !DIExpression()), !dbg !6322
  %arrayinit.begin = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6323
  %arrayinit.begin1 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.begin, i64 0, i64 0, !dbg !6324
  %0 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6325
  %arrayidx = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %0, i64 0, !dbg !6325
  %1 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !6325
  store %struct.BMVert* %1, %struct.BMVert** %arrayinit.begin1, align 8, !dbg !6324
  %arrayinit.element = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin1, i64 1, !dbg !6324
  %2 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6326
  %arrayidx2 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %2, i64 1, !dbg !6326
  %3 = load %struct.BMVert*, %struct.BMVert** %arrayidx2, align 8, !dbg !6326
  store %struct.BMVert* %3, %struct.BMVert** %arrayinit.element, align 8, !dbg !6324
  %arrayinit.element3 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element, i64 1, !dbg !6324
  %4 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6327
  %arrayidx4 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %4, i64 1, !dbg !6327
  %5 = load %struct.BMVert*, %struct.BMVert** %arrayidx4, align 8, !dbg !6327
  store %struct.BMVert* %5, %struct.BMVert** %arrayinit.element3, align 8, !dbg !6324
  %arrayinit.element5 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element3, i64 1, !dbg !6324
  %6 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6328
  %arrayidx6 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %6, i64 0, !dbg !6328
  %7 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !6328
  store %struct.BMVert* %7, %struct.BMVert** %arrayinit.element5, align 8, !dbg !6324
  %arrayinit.element7 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.begin, i64 1, !dbg !6323
  %arrayinit.begin8 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.element7, i64 0, i64 0, !dbg !6329
  %8 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6330
  %arrayidx9 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %8, i64 1, !dbg !6330
  %9 = load %struct.BMVert*, %struct.BMVert** %arrayidx9, align 8, !dbg !6330
  store %struct.BMVert* %9, %struct.BMVert** %arrayinit.begin8, align 8, !dbg !6329
  %arrayinit.element10 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin8, i64 1, !dbg !6329
  %10 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6331
  %arrayidx11 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %10, i64 2, !dbg !6331
  %11 = load %struct.BMVert*, %struct.BMVert** %arrayidx11, align 8, !dbg !6331
  store %struct.BMVert* %11, %struct.BMVert** %arrayinit.element10, align 8, !dbg !6329
  %arrayinit.element12 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element10, i64 1, !dbg !6329
  %12 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6332
  %arrayidx13 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %12, i64 2, !dbg !6332
  %13 = load %struct.BMVert*, %struct.BMVert** %arrayidx13, align 8, !dbg !6332
  store %struct.BMVert* %13, %struct.BMVert** %arrayinit.element12, align 8, !dbg !6329
  %arrayinit.element14 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element12, i64 1, !dbg !6329
  %14 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6333
  %arrayidx15 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %14, i64 1, !dbg !6333
  %15 = load %struct.BMVert*, %struct.BMVert** %arrayidx15, align 8, !dbg !6333
  store %struct.BMVert* %15, %struct.BMVert** %arrayinit.element14, align 8, !dbg !6329
  %arrayinit.element16 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.element7, i64 1, !dbg !6323
  %arrayinit.begin17 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.element16, i64 0, i64 0, !dbg !6334
  %16 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6335
  %arrayidx18 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %16, i64 2, !dbg !6335
  %17 = load %struct.BMVert*, %struct.BMVert** %arrayidx18, align 8, !dbg !6335
  store %struct.BMVert* %17, %struct.BMVert** %arrayinit.begin17, align 8, !dbg !6334
  %arrayinit.element19 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin17, i64 1, !dbg !6334
  %18 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6336
  %arrayidx20 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %18, i64 3, !dbg !6336
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx20, align 8, !dbg !6336
  store %struct.BMVert* %19, %struct.BMVert** %arrayinit.element19, align 8, !dbg !6334
  %arrayinit.element21 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element19, i64 1, !dbg !6334
  %20 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6337
  %arrayidx22 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %20, i64 3, !dbg !6337
  %21 = load %struct.BMVert*, %struct.BMVert** %arrayidx22, align 8, !dbg !6337
  store %struct.BMVert* %21, %struct.BMVert** %arrayinit.element21, align 8, !dbg !6334
  %arrayinit.element23 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element21, i64 1, !dbg !6334
  %22 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6338
  %arrayidx24 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %22, i64 2, !dbg !6338
  %23 = load %struct.BMVert*, %struct.BMVert** %arrayidx24, align 8, !dbg !6338
  store %struct.BMVert* %23, %struct.BMVert** %arrayinit.element23, align 8, !dbg !6334
  %arrayinit.element25 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.element16, i64 1, !dbg !6323
  %arrayinit.begin26 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayinit.element25, i64 0, i64 0, !dbg !6339
  %24 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6340
  %arrayidx27 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %24, i64 3, !dbg !6340
  %25 = load %struct.BMVert*, %struct.BMVert** %arrayidx27, align 8, !dbg !6340
  store %struct.BMVert* %25, %struct.BMVert** %arrayinit.begin26, align 8, !dbg !6339
  %arrayinit.element28 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin26, i64 1, !dbg !6339
  %26 = load %struct.BMVert**, %struct.BMVert*** %frame2.addr, align 8, !dbg !6341
  %arrayidx29 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %26, i64 0, !dbg !6341
  %27 = load %struct.BMVert*, %struct.BMVert** %arrayidx29, align 8, !dbg !6341
  store %struct.BMVert* %27, %struct.BMVert** %arrayinit.element28, align 8, !dbg !6339
  %arrayinit.element30 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element28, i64 1, !dbg !6339
  %28 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6342
  %arrayidx31 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %28, i64 0, !dbg !6342
  %29 = load %struct.BMVert*, %struct.BMVert** %arrayidx31, align 8, !dbg !6342
  store %struct.BMVert* %29, %struct.BMVert** %arrayinit.element30, align 8, !dbg !6339
  %arrayinit.element32 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element30, i64 1, !dbg !6339
  %30 = load %struct.BMVert**, %struct.BMVert*** %frame1.addr, align 8, !dbg !6343
  %arrayidx33 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %30, i64 3, !dbg !6343
  %31 = load %struct.BMVert*, %struct.BMVert** %arrayidx33, align 8, !dbg !6343
  store %struct.BMVert* %31, %struct.BMVert** %arrayinit.element32, align 8, !dbg !6339
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !6350, metadata !DIExpression()), !dbg !6351
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6352
  %arrayidx34 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 3, !dbg !6353
  %arrayidx35 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx34, i64 0, i64 0, !dbg !6353
  %32 = load %struct.BMVert*, %struct.BMVert** %arrayidx35, align 16, !dbg !6353
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %32, i32 0, i32 2, !dbg !6354
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6353
  %arrayidx37 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6355
  %arrayidx38 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx37, i64 0, i64 0, !dbg !6355
  %33 = load %struct.BMVert*, %struct.BMVert** %arrayidx38, align 16, !dbg !6355
  %co39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %33, i32 0, i32 2, !dbg !6356
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !6355
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay36, float* %arraydecay40), !dbg !6357
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6358
  %arrayidx42 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6359
  %arrayidx43 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx42, i64 0, i64 0, !dbg !6359
  %34 = load %struct.BMVert*, %struct.BMVert** %arrayidx43, align 16, !dbg !6359
  %co44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %34, i32 0, i32 2, !dbg !6360
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !6359
  %arrayidx46 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6361
  %arrayidx47 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx46, i64 0, i64 1, !dbg !6361
  %35 = load %struct.BMVert*, %struct.BMVert** %arrayidx47, align 8, !dbg !6361
  %co48 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 2, !dbg !6362
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !6361
  %arrayidx50 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6363
  %arrayidx51 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx50, i64 0, i64 2, !dbg !6363
  %36 = load %struct.BMVert*, %struct.BMVert** %arrayidx51, align 16, !dbg !6363
  %co52 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 2, !dbg !6364
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !6363
  %arrayidx54 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 0, !dbg !6365
  %arrayidx55 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx54, i64 0, i64 3, !dbg !6365
  %37 = load %struct.BMVert*, %struct.BMVert** %arrayidx55, align 8, !dbg !6365
  %co56 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 2, !dbg !6366
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 0, !dbg !6365
  %call = call float @normal_quad_v3(float* %arraydecay41, float* %arraydecay45, float* %arraydecay49, float* %arraydecay53, float* %arraydecay57), !dbg !6367
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6368
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6369
  %call60 = call float @dot_v3v3(float* %arraydecay58, float* %arraydecay59), !dbg !6370
  %cmp = fcmp ogt float %call60, 0.000000e+00, !dbg !6371
  %conv = zext i1 %cmp to i32, !dbg !6371
  store i32 %conv, i32* %swap, align 4, !dbg !6372
  store i32 0, i32* %i, align 4, !dbg !6373
  br label %for.cond, !dbg !6375

for.cond:                                         ; preds = %for.inc, %entry
  %38 = load i32, i32* %i, align 4, !dbg !6376
  %cmp61 = icmp slt i32 %38, 4, !dbg !6378
  br i1 %cmp61, label %for.body, label %for.end, !dbg !6379

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %swap, align 4, !dbg !6380
  %tobool = icmp ne i32 %39, 0, !dbg !6380
  br i1 %tobool, label %if.then, label %if.else, !dbg !6383

if.then:                                          ; preds = %for.body
  %40 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !6384
  %41 = load i32, i32* %i, align 4, !dbg !6385
  %idxprom = sext i32 %41 to i64, !dbg !6386
  %arrayidx63 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom, !dbg !6386
  %arrayidx64 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx63, i64 0, i64 3, !dbg !6386
  %42 = load %struct.BMVert*, %struct.BMVert** %arrayidx64, align 8, !dbg !6386
  %43 = load i32, i32* %i, align 4, !dbg !6387
  %idxprom65 = sext i32 %43 to i64, !dbg !6388
  %arrayidx66 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom65, !dbg !6388
  %arrayidx67 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx66, i64 0, i64 2, !dbg !6388
  %44 = load %struct.BMVert*, %struct.BMVert** %arrayidx67, align 16, !dbg !6388
  %45 = load i32, i32* %i, align 4, !dbg !6389
  %idxprom68 = sext i32 %45 to i64, !dbg !6390
  %arrayidx69 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom68, !dbg !6390
  %arrayidx70 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx69, i64 0, i64 1, !dbg !6390
  %46 = load %struct.BMVert*, %struct.BMVert** %arrayidx70, align 8, !dbg !6390
  %47 = load i32, i32* %i, align 4, !dbg !6391
  %idxprom71 = sext i32 %47 to i64, !dbg !6392
  %arrayidx72 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom71, !dbg !6392
  %arrayidx73 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx72, i64 0, i64 0, !dbg !6392
  %48 = load %struct.BMVert*, %struct.BMVert** %arrayidx73, align 16, !dbg !6392
  call void @add_poly(%struct.SkinOutput* %40, %struct.BMVert* %42, %struct.BMVert* %44, %struct.BMVert* %46, %struct.BMVert* %48), !dbg !6393
  br label %if.end, !dbg !6393

if.else:                                          ; preds = %for.body
  %49 = load %struct.SkinOutput*, %struct.SkinOutput** %so.addr, align 8, !dbg !6394
  %50 = load i32, i32* %i, align 4, !dbg !6395
  %idxprom74 = sext i32 %50 to i64, !dbg !6396
  %arrayidx75 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom74, !dbg !6396
  %arrayidx76 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx75, i64 0, i64 0, !dbg !6396
  %51 = load %struct.BMVert*, %struct.BMVert** %arrayidx76, align 16, !dbg !6396
  %52 = load i32, i32* %i, align 4, !dbg !6397
  %idxprom77 = sext i32 %52 to i64, !dbg !6398
  %arrayidx78 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom77, !dbg !6398
  %arrayidx79 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx78, i64 0, i64 1, !dbg !6398
  %53 = load %struct.BMVert*, %struct.BMVert** %arrayidx79, align 8, !dbg !6398
  %54 = load i32, i32* %i, align 4, !dbg !6399
  %idxprom80 = sext i32 %54 to i64, !dbg !6400
  %arrayidx81 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom80, !dbg !6400
  %arrayidx82 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx81, i64 0, i64 2, !dbg !6400
  %55 = load %struct.BMVert*, %struct.BMVert** %arrayidx82, align 16, !dbg !6400
  %56 = load i32, i32* %i, align 4, !dbg !6401
  %idxprom83 = sext i32 %56 to i64, !dbg !6402
  %arrayidx84 = getelementptr inbounds [4 x [4 x %struct.BMVert*]], [4 x [4 x %struct.BMVert*]]* %q, i64 0, i64 %idxprom83, !dbg !6402
  %arrayidx85 = getelementptr inbounds [4 x %struct.BMVert*], [4 x %struct.BMVert*]* %arrayidx84, i64 0, i64 3, !dbg !6402
  %57 = load %struct.BMVert*, %struct.BMVert** %arrayidx85, align 8, !dbg !6402
  call void @add_poly(%struct.SkinOutput* %49, %struct.BMVert* %51, %struct.BMVert* %53, %struct.BMVert* %55, %struct.BMVert* %57), !dbg !6403
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !6404

for.inc:                                          ; preds = %if.end
  %58 = load i32, i32* %i, align 4, !dbg !6405
  %inc = add nsw i32 %58, 1, !dbg !6405
  store i32 %inc, i32* %i, align 4, !dbg !6405
  br label %for.cond, !dbg !6406, !llvm.loop !6407

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6409
}

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

declare dso_local void @fill_vn_i(i32*, i32, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1278, !1279, !1280}
!llvm.ident = !{!1281}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "modifierType_Skin", scope: !2, file: !3, line: 1889, type: !342, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !222, globals: !341, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/modifiers/intern/MOD_skin.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !15, !27, !33, !38, !42, !48, !54, !60, !104, !109, !120, !126, !132, !140, !147, !153, !159, !166, !175, !192, !196, !199, !206, !217}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 47, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !7, size: 32, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!17 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!21 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!22 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!23 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!24 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!25 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!26 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !28, line: 128, baseType: !7, size: 32, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32}
!30 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !28, line: 164, baseType: !7, size: 32, elements: !34)
!34 = !{!35, !36, !37}
!35 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !28, line: 159, baseType: !7, size: 32, elements: !39)
!39 = !{!40, !41}
!40 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !28, line: 134, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47}
!44 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !28, line: 152, baseType: !7, size: 32, elements: !49)
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!53 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !6, line: 110, baseType: !7, size: 32, elements: !55)
!55 = !{!56, !57, !58, !59}
!56 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 76, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!63 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MVertSkinFlag", file: !105, line: 263, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !{!107, !108}
!107 = !DIEnumerator(name: "MVERT_SKIN_ROOT", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "MVERT_SKIN_LOOSE", value: 2, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !110, line: 94, baseType: !7, size: 32, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !113, !114, !115, !116, !117, !118, !119}
!112 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!115 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!116 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!117 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!118 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!119 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !110, line: 116, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125}
!122 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!125 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !110, line: 131, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131}
!128 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!129 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!130 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!131 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !110, line: 123, baseType: !7, size: 32, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !139}
!134 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!135 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!136 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!137 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!138 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!139 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !110, line: 182, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144, !145, !146}
!142 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!146 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 91, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "CAP_START", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "CAP_END", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "SEAM_FRAME", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "ROOT", value: 8, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMCreateFlag", file: !154, line: 33, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_core.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!155 = !{!156, !157, !158}
!156 = !DIEnumerator(name: "BM_CREATE_NOP", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "BM_CREATE_NO_DOUBLE", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "BM_CREATE_SKIP_CD", value: 4, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !160, line: 249, baseType: !7, size: 32, elements: !161)
!160 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!161 = !{!162, !163, !164, !165}
!162 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!164 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !160, line: 260, baseType: !7, size: 32, elements: !167)
!167 = !{!168, !169, !170, !171, !172, !173, !174}
!168 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!172 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!173 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!174 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !176, line: 57, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!177 = !{!178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!178 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!182 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!183 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!184 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!185 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!186 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!187 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!188 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!189 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!190 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!191 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 1203, baseType: !7, size: 32, elements: !194)
!193 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!194 = !{!195}
!195 = !DIEnumerator(name: "MOD_SKIN_SMOOTH_SHADING", value: 1, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !110, line: 200, baseType: !7, size: 32, elements: !197)
!197 = !{!198}
!198 = !DIEnumerator(name: "BMO_FLAG_RESPECT_HIDE", value: 1, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !200, line: 35, baseType: !7, size: 32, elements: !201)
!200 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!201 = !{!202, !203, !204, !205}
!202 = !DIEnumerator(name: "SUBD_INNERVERT", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "SUBD_PATH", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "SUBD_FAN", value: 2, isUnsigned: true)
!205 = !DIEnumerator(name: "SUBD_STRAIGHT_CUT", value: 3, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !193, line: 88, baseType: !207, size: 32, elements: !208)
!207 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216}
!209 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!210 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!211 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!212 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!213 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!214 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!215 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!216 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 1196, baseType: !7, size: 32, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIEnumerator(name: "MOD_SKIN_SYMM_X", value: 1, isUnsigned: true)
!220 = !DIEnumerator(name: "MOD_SKIN_SYMM_Y", value: 2, isUnsigned: true)
!221 = !DIEnumerator(name: "MOD_SKIN_SYMM_Z", value: 4, isUnsigned: true)
!222 = !{!223, !250, !207, !257, !260, !261, !262, !266, !270, !333, !335, !317, !337, !340, !248}
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "SkinModifierData", file: !193, line: 1193, baseType: !225)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SkinModifierData", file: !193, line: 1183, size: 960, elements: !226)
!226 = !{!227, !249, !251, !252, !253}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !225, file: !193, line: 1184, baseType: !228, size: 896)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !193, line: 110, baseType: !229)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !193, line: 99, size: 896, elements: !230)
!230 = !{!231, !233, !234, !235, !236, !237, !238, !243, !247}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !229, file: !193, line: 100, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !229, file: !193, line: 100, baseType: !232, size: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !229, file: !193, line: 102, baseType: !207, size: 32, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !229, file: !193, line: 102, baseType: !207, size: 32, offset: 160)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !229, file: !193, line: 103, baseType: !207, size: 32, offset: 192)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !229, file: !193, line: 103, baseType: !207, size: 32, offset: 224)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !229, file: !193, line: 104, baseType: !239, size: 512, offset: 256)
!239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 512, elements: !241)
!240 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = !{!242}
!242 = !DISubrange(count: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !229, file: !193, line: 107, baseType: !244, size: 64, offset: 768)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !246, line: 40, flags: DIFlagFwdDecl)
!246 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!247 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !229, file: !193, line: 109, baseType: !248, size: 64, offset: 832)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "branch_smoothing", scope: !225, file: !193, line: 1186, baseType: !250, size: 32, offset: 896)
!250 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !225, file: !193, line: 1188, baseType: !240, size: 8, offset: 928)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axes", scope: !225, file: !193, line: 1190, baseType: !240, size: 8, offset: 936)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !225, file: !193, line: 1192, baseType: !254, size: 16, offset: 944)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 16, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: 2)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !259, line: 33, baseType: !7)
!259 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !176, line: 79, baseType: !175)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !176, line: 158, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{null, !260}
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !176, line: 159, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{!260, !260}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !160, line: 103, baseType: !272)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !160, line: 90, size: 448, elements: !273)
!273 = !{!274, !283, !289, !293, !294}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !272, file: !160, line: 91, baseType: !275, size: 128)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !160, line: 82, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !160, line: 64, size: 128, elements: !277)
!277 = !{!278, !279, !280, !281, !282}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !276, file: !160, line: 65, baseType: !260, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !276, file: !160, line: 66, baseType: !207, size: 32, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !276, file: !160, line: 73, baseType: !240, size: 8, offset: 96)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !276, file: !160, line: 74, baseType: !240, size: 8, offset: 104)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !276, file: !160, line: 80, baseType: !240, size: 8, offset: 112)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !272, file: !160, line: 92, baseType: !284, size: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !160, line: 180, size: 16, elements: !286)
!286 = !{!287}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !285, file: !160, line: 181, baseType: !288, size: 16)
!288 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !272, file: !160, line: 94, baseType: !290, size: 96, offset: 192)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 96, elements: !291)
!291 = !{!292}
!292 = !DISubrange(count: 3)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !272, file: !160, line: 95, baseType: !290, size: 96, offset: 288)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !272, file: !160, line: 102, baseType: !295, size: 64, offset: 384)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !160, line: 110, size: 640, elements: !297)
!297 = !{!298, !299, !300, !302, !303, !326, !332}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !296, file: !160, line: 111, baseType: !275, size: 128)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !296, file: !160, line: 112, baseType: !284, size: 64, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !296, file: !160, line: 114, baseType: !301, size: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !296, file: !160, line: 114, baseType: !301, size: 64, offset: 256)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !296, file: !160, line: 118, baseType: !304, size: 64, offset: 320)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !160, line: 125, size: 576, elements: !306)
!306 = !{!307, !308, !309, !310, !322, !323, !324, !325}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !305, file: !160, line: 126, baseType: !275, size: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !305, file: !160, line: 129, baseType: !301, size: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !305, file: !160, line: 130, baseType: !295, size: 64, offset: 192)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !305, file: !160, line: 131, baseType: !311, size: 64, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !160, line: 164, size: 448, elements: !313)
!313 = !{!314, !315, !316, !319, !320, !321}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !312, file: !160, line: 165, baseType: !275, size: 128)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !312, file: !160, line: 166, baseType: !284, size: 64, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !312, file: !160, line: 172, baseType: !317, size: 64, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !160, line: 140, baseType: !305)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !312, file: !160, line: 174, baseType: !207, size: 32, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !312, file: !160, line: 175, baseType: !290, size: 96, offset: 288)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !312, file: !160, line: 176, baseType: !288, size: 16, offset: 384)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !305, file: !160, line: 135, baseType: !304, size: 64, offset: 320)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !305, file: !160, line: 135, baseType: !304, size: 64, offset: 384)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !305, file: !160, line: 139, baseType: !304, size: 64, offset: 448)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !305, file: !160, line: 139, baseType: !304, size: 64, offset: 512)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !296, file: !160, line: 122, baseType: !327, size: 128, offset: 384)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !160, line: 108, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !160, line: 106, size: 128, elements: !329)
!329 = !{!330, !331}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !328, file: !160, line: 107, baseType: !295, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !328, file: !160, line: 107, baseType: !295, size: 64, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !296, file: !160, line: 122, baseType: !327, size: 128, offset: 512)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !160, line: 123, baseType: !296)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !160, line: 178, baseType: !312)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !338, line: 46, baseType: !339)
!338 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!339 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!341 = !{!0}
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !6, line: 309, baseType: !343)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !6, line: 121, size: 1728, elements: !344)
!344 = !{!345, !349, !350, !351, !353, !355, !359, !1197, !1204, !1210, !1214, !1218, !1222, !1226, !1232, !1233, !1237, !1245, !1249, !1250, !1259, !1268}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !343, file: !6, line: 123, baseType: !346, size: 256)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 256, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !343, file: !6, line: 128, baseType: !346, size: 256, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !343, file: !6, line: 131, baseType: !207, size: 32, offset: 512)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !343, file: !6, line: 133, baseType: !352, size: 32, offset: 544)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !6, line: 71, baseType: !5)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !343, file: !6, line: 134, baseType: !354, size: 32, offset: 576)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !6, line: 104, baseType: !15)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !343, file: !6, line: 142, baseType: !356, size: 64, offset: 640)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DISubroutineType(types: !358)
!358 = !{null, !232, !232}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !343, file: !6, line: 151, baseType: !360, size: 64, offset: 704)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{null, !232, !363, !658, !958, !207, !1196}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !365, line: 115, size: 11392, elements: !366)
!365 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!366 = !{!367, !432, !436, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !453, !463, !477, !478, !519, !520, !523, !524, !540, !541, !542, !543, !544, !545, !546, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !565, !566, !567, !568, !569, !570, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !630, !631, !632, !633, !634, !635, !636, !637, !638, !641, !644, !647, !648, !649, !650, !651, !654, !657, !1144, !1145, !1150, !1151, !1152, !1153, !1154, !1155, !1157, !1160, !1163, !1165, !1184, !1185}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !364, file: !365, line: 116, baseType: !368, size: 960)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !369, line: 130, baseType: !370)
!369 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !369, line: 117, size: 960, elements: !371)
!371 = !{!372, !373, !374, !376, !395, !399, !400, !401, !402, !403}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !370, file: !369, line: 118, baseType: !260, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !370, file: !369, line: 118, baseType: !260, size: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !370, file: !369, line: 119, baseType: !375, size: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !370, file: !369, line: 120, baseType: !377, size: 64, offset: 192)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !369, line: 136, size: 17600, elements: !379)
!379 = !{!380, !381, !383, !386, !390, !391, !392}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !378, file: !369, line: 137, baseType: !368, size: 960)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !378, file: !369, line: 138, baseType: !382, size: 64, offset: 960)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !378, file: !369, line: 139, baseType: !384, size: 64, offset: 1024)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !369, line: 43, flags: DIFlagFwdDecl)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !378, file: !369, line: 140, baseType: !387, size: 8192, offset: 1088)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 8192, elements: !388)
!388 = !{!389}
!389 = !DISubrange(count: 1024)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !378, file: !369, line: 141, baseType: !387, size: 8192, offset: 9280)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !378, file: !369, line: 148, baseType: !377, size: 64, offset: 17472)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !378, file: !369, line: 150, baseType: !393, size: 64, offset: 17536)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !369, line: 45, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !370, file: !369, line: 121, baseType: !396, size: 528, offset: 256)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 528, elements: !397)
!397 = !{!398}
!398 = !DISubrange(count: 66)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !370, file: !369, line: 126, baseType: !288, size: 16, offset: 784)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !370, file: !369, line: 127, baseType: !207, size: 32, offset: 800)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !370, file: !369, line: 128, baseType: !207, size: 32, offset: 832)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !370, file: !369, line: 128, baseType: !207, size: 32, offset: 864)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !370, file: !369, line: 129, baseType: !404, size: 64, offset: 896)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !369, line: 75, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !369, line: 62, size: 1024, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415, !416, !430, !431}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !406, file: !369, line: 63, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !406, file: !369, line: 63, baseType: !409, size: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !406, file: !369, line: 64, baseType: !240, size: 8, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !406, file: !369, line: 64, baseType: !240, size: 8, offset: 136)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !406, file: !369, line: 65, baseType: !288, size: 16, offset: 144)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !406, file: !369, line: 66, baseType: !239, size: 512, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !406, file: !369, line: 67, baseType: !207, size: 32, offset: 672)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !406, file: !369, line: 69, baseType: !417, size: 256, offset: 704)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !369, line: 60, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !369, line: 48, size: 256, elements: !419)
!419 = !{!420, !421, !428, !429}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !418, file: !369, line: 49, baseType: !260, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !418, file: !369, line: 58, baseType: !422, size: 128, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !423, line: 71, baseType: !424)
!423 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !423, line: 69, size: 128, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !424, file: !423, line: 70, baseType: !260, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !424, file: !423, line: 70, baseType: !260, size: 64, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !418, file: !369, line: 59, baseType: !207, size: 32, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !418, file: !369, line: 59, baseType: !207, size: 32, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !406, file: !369, line: 70, baseType: !207, size: 32, offset: 960)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !406, file: !369, line: 74, baseType: !207, size: 32, offset: 992)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !364, file: !365, line: 117, baseType: !433, size: 64, offset: 960)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !435, line: 45, flags: DIFlagFwdDecl)
!435 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!436 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !364, file: !365, line: 119, baseType: !437, size: 64, offset: 1024)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !365, line: 57, flags: DIFlagFwdDecl)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !364, file: !365, line: 121, baseType: !288, size: 16, offset: 1088)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !364, file: !365, line: 121, baseType: !288, size: 16, offset: 1104)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !364, file: !365, line: 122, baseType: !207, size: 32, offset: 1120)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !364, file: !365, line: 122, baseType: !207, size: 32, offset: 1152)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !364, file: !365, line: 122, baseType: !207, size: 32, offset: 1184)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !364, file: !365, line: 123, baseType: !239, size: 512, offset: 1216)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !364, file: !365, line: 124, baseType: !363, size: 64, offset: 1728)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !364, file: !365, line: 124, baseType: !363, size: 64, offset: 1792)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !364, file: !365, line: 127, baseType: !363, size: 64, offset: 1856)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !364, file: !365, line: 127, baseType: !363, size: 64, offset: 1920)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !364, file: !365, line: 127, baseType: !363, size: 64, offset: 1984)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !364, file: !365, line: 128, baseType: !451, size: 64, offset: 2048)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !435, line: 46, flags: DIFlagFwdDecl)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !364, file: !365, line: 130, baseType: !454, size: 64, offset: 2112)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !365, line: 97, size: 832, elements: !456)
!456 = !{!457, !461, !462}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !455, file: !365, line: 98, baseType: !458, size: 768)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 768, elements: !459)
!459 = !{!460, !292}
!460 = !DISubrange(count: 8)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !455, file: !365, line: 99, baseType: !207, size: 32, offset: 768)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !455, file: !365, line: 99, baseType: !207, size: 32, offset: 800)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !364, file: !365, line: 131, baseType: !464, size: 64, offset: 2176)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !466, line: 486, size: 1600, elements: !467)
!466 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!467 = !{!468, !469, !470, !471, !472, !473, !474, !475, !476}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !465, file: !466, line: 487, baseType: !368, size: 960)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !465, file: !466, line: 489, baseType: !422, size: 128, offset: 960)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !465, file: !466, line: 490, baseType: !422, size: 128, offset: 1088)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !465, file: !466, line: 491, baseType: !422, size: 128, offset: 1216)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !465, file: !466, line: 492, baseType: !422, size: 128, offset: 1344)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !465, file: !466, line: 494, baseType: !207, size: 32, offset: 1472)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !465, file: !466, line: 495, baseType: !207, size: 32, offset: 1504)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !465, file: !466, line: 497, baseType: !207, size: 32, offset: 1536)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !465, file: !466, line: 498, baseType: !207, size: 32, offset: 1568)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !364, file: !365, line: 132, baseType: !464, size: 64, offset: 2240)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !364, file: !365, line: 133, baseType: !479, size: 64, offset: 2304)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !466, line: 334, size: 1728, elements: !481)
!481 = !{!482, !483, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !518}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !480, file: !466, line: 335, baseType: !422, size: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !480, file: !466, line: 336, baseType: !484, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !466, line: 47, flags: DIFlagFwdDecl)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !480, file: !466, line: 338, baseType: !288, size: 16, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !480, file: !466, line: 338, baseType: !288, size: 16, offset: 208)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !480, file: !466, line: 339, baseType: !7, size: 32, offset: 224)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !480, file: !466, line: 340, baseType: !207, size: 32, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !480, file: !466, line: 342, baseType: !250, size: 32, offset: 288)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !480, file: !466, line: 343, baseType: !290, size: 96, offset: 320)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !480, file: !466, line: 344, baseType: !290, size: 96, offset: 416)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !480, file: !466, line: 347, baseType: !422, size: 128, offset: 512)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !480, file: !466, line: 349, baseType: !207, size: 32, offset: 640)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !480, file: !466, line: 350, baseType: !207, size: 32, offset: 672)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !480, file: !466, line: 351, baseType: !260, size: 64, offset: 704)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !480, file: !466, line: 352, baseType: !260, size: 64, offset: 768)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !480, file: !466, line: 354, baseType: !499, size: 384, offset: 832)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !466, line: 116, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !466, line: 94, size: 384, elements: !501)
!501 = !{!502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !500, file: !466, line: 96, baseType: !207, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !500, file: !466, line: 96, baseType: !207, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !500, file: !466, line: 97, baseType: !207, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !500, file: !466, line: 97, baseType: !207, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !500, file: !466, line: 99, baseType: !288, size: 16, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !500, file: !466, line: 100, baseType: !288, size: 16, offset: 144)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !500, file: !466, line: 102, baseType: !288, size: 16, offset: 160)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !500, file: !466, line: 105, baseType: !288, size: 16, offset: 176)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !500, file: !466, line: 108, baseType: !288, size: 16, offset: 192)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !500, file: !466, line: 109, baseType: !288, size: 16, offset: 208)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !500, file: !466, line: 111, baseType: !288, size: 16, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !500, file: !466, line: 112, baseType: !288, size: 16, offset: 240)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !500, file: !466, line: 114, baseType: !207, size: 32, offset: 256)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !500, file: !466, line: 114, baseType: !207, size: 32, offset: 288)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !500, file: !466, line: 115, baseType: !207, size: 32, offset: 320)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !500, file: !466, line: 115, baseType: !207, size: 32, offset: 352)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !480, file: !466, line: 355, baseType: !239, size: 512, offset: 1216)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !364, file: !365, line: 134, baseType: !260, size: 64, offset: 2368)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !364, file: !365, line: 136, baseType: !521, size: 64, offset: 2432)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !365, line: 58, flags: DIFlagFwdDecl)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !364, file: !365, line: 138, baseType: !499, size: 384, offset: 2496)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !364, file: !365, line: 139, baseType: !525, size: 64, offset: 2880)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !466, line: 80, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !466, line: 72, size: 192, elements: !528)
!528 = !{!529, !536, !537, !538, !539}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !527, file: !466, line: 73, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !466, line: 59, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !466, line: 56, size: 128, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !532, file: !466, line: 57, baseType: !290, size: 96)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !532, file: !466, line: 58, baseType: !207, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !527, file: !466, line: 74, baseType: !207, size: 32, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !527, file: !466, line: 76, baseType: !207, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !527, file: !466, line: 77, baseType: !207, size: 32, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !466, line: 79, baseType: !207, size: 32, offset: 160)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !364, file: !365, line: 141, baseType: !422, size: 128, offset: 2944)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !364, file: !365, line: 142, baseType: !422, size: 128, offset: 3072)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !364, file: !365, line: 143, baseType: !422, size: 128, offset: 3200)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !364, file: !365, line: 144, baseType: !422, size: 128, offset: 3328)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !364, file: !365, line: 146, baseType: !207, size: 32, offset: 3456)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !364, file: !365, line: 147, baseType: !207, size: 32, offset: 3488)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !364, file: !365, line: 150, baseType: !547, size: 64, offset: 3520)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !365, line: 50, flags: DIFlagFwdDecl)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !364, file: !365, line: 151, baseType: !248, size: 64, offset: 3584)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !364, file: !365, line: 152, baseType: !207, size: 32, offset: 3648)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !364, file: !365, line: 153, baseType: !207, size: 32, offset: 3680)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !364, file: !365, line: 156, baseType: !290, size: 96, offset: 3712)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !364, file: !365, line: 156, baseType: !290, size: 96, offset: 3808)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !364, file: !365, line: 156, baseType: !290, size: 96, offset: 3904)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !364, file: !365, line: 157, baseType: !290, size: 96, offset: 4000)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !364, file: !365, line: 158, baseType: !290, size: 96, offset: 4096)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !364, file: !365, line: 159, baseType: !290, size: 96, offset: 4192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !364, file: !365, line: 160, baseType: !290, size: 96, offset: 4288)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !364, file: !365, line: 160, baseType: !290, size: 96, offset: 4384)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !364, file: !365, line: 161, baseType: !562, size: 128, offset: 4480)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 128, elements: !563)
!563 = !{!564}
!564 = !DISubrange(count: 4)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !364, file: !365, line: 161, baseType: !562, size: 128, offset: 4608)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !364, file: !365, line: 162, baseType: !290, size: 96, offset: 4736)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !364, file: !365, line: 162, baseType: !290, size: 96, offset: 4832)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !364, file: !365, line: 163, baseType: !250, size: 32, offset: 4928)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !364, file: !365, line: 163, baseType: !250, size: 32, offset: 4960)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !364, file: !365, line: 164, baseType: !571, size: 512, offset: 4992)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 512, elements: !572)
!572 = !{!564, !564}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !364, file: !365, line: 165, baseType: !571, size: 512, offset: 5504)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !364, file: !365, line: 166, baseType: !571, size: 512, offset: 6016)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !364, file: !365, line: 167, baseType: !571, size: 512, offset: 6528)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !364, file: !365, line: 176, baseType: !571, size: 512, offset: 7040)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !364, file: !365, line: 178, baseType: !7, size: 32, offset: 7552)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !364, file: !365, line: 180, baseType: !288, size: 16, offset: 7584)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !364, file: !365, line: 181, baseType: !288, size: 16, offset: 7600)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !364, file: !365, line: 183, baseType: !288, size: 16, offset: 7616)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !364, file: !365, line: 183, baseType: !288, size: 16, offset: 7632)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !364, file: !365, line: 184, baseType: !288, size: 16, offset: 7648)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !364, file: !365, line: 184, baseType: !288, size: 16, offset: 7664)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !364, file: !365, line: 185, baseType: !288, size: 16, offset: 7680)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !364, file: !365, line: 186, baseType: !288, size: 16, offset: 7696)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !364, file: !365, line: 187, baseType: !288, size: 16, offset: 7712)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !364, file: !365, line: 188, baseType: !240, size: 8, offset: 7728)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !364, file: !365, line: 189, baseType: !240, size: 8, offset: 7736)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !364, file: !365, line: 192, baseType: !207, size: 32, offset: 7744)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !364, file: !365, line: 192, baseType: !207, size: 32, offset: 7776)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !364, file: !365, line: 192, baseType: !207, size: 32, offset: 7808)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !364, file: !365, line: 192, baseType: !207, size: 32, offset: 7840)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !364, file: !365, line: 194, baseType: !207, size: 32, offset: 7872)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !364, file: !365, line: 202, baseType: !250, size: 32, offset: 7904)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !364, file: !365, line: 202, baseType: !250, size: 32, offset: 7936)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !364, file: !365, line: 202, baseType: !250, size: 32, offset: 7968)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !364, file: !365, line: 211, baseType: !250, size: 32, offset: 8000)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !364, file: !365, line: 212, baseType: !250, size: 32, offset: 8032)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !364, file: !365, line: 213, baseType: !250, size: 32, offset: 8064)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !364, file: !365, line: 214, baseType: !250, size: 32, offset: 8096)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !364, file: !365, line: 215, baseType: !250, size: 32, offset: 8128)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !364, file: !365, line: 216, baseType: !250, size: 32, offset: 8160)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !364, file: !365, line: 219, baseType: !250, size: 32, offset: 8192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !364, file: !365, line: 220, baseType: !250, size: 32, offset: 8224)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !364, file: !365, line: 221, baseType: !250, size: 32, offset: 8256)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !364, file: !365, line: 224, baseType: !607, size: 16, offset: 8288)
!607 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !364, file: !365, line: 224, baseType: !607, size: 16, offset: 8304)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !364, file: !365, line: 226, baseType: !288, size: 16, offset: 8320)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !364, file: !365, line: 228, baseType: !240, size: 8, offset: 8336)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !364, file: !365, line: 229, baseType: !240, size: 8, offset: 8344)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !364, file: !365, line: 231, baseType: !288, size: 16, offset: 8352)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !364, file: !365, line: 232, baseType: !240, size: 8, offset: 8368)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !364, file: !365, line: 233, baseType: !240, size: 8, offset: 8376)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !364, file: !365, line: 234, baseType: !250, size: 32, offset: 8384)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !364, file: !365, line: 235, baseType: !250, size: 32, offset: 8416)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !364, file: !365, line: 237, baseType: !422, size: 128, offset: 8448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !364, file: !365, line: 238, baseType: !422, size: 128, offset: 8576)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !364, file: !365, line: 239, baseType: !422, size: 128, offset: 8704)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !364, file: !365, line: 240, baseType: !422, size: 128, offset: 8832)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !364, file: !365, line: 242, baseType: !250, size: 32, offset: 8960)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !364, file: !365, line: 244, baseType: !288, size: 16, offset: 8992)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !364, file: !365, line: 245, baseType: !607, size: 16, offset: 9008)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !364, file: !365, line: 246, baseType: !562, size: 128, offset: 9024)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !364, file: !365, line: 248, baseType: !207, size: 32, offset: 9152)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !364, file: !365, line: 249, baseType: !207, size: 32, offset: 9184)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !364, file: !365, line: 251, baseType: !628, size: 64, offset: 9216)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !365, line: 251, flags: DIFlagFwdDecl)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !364, file: !365, line: 253, baseType: !240, size: 8, offset: 9280)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !364, file: !365, line: 254, baseType: !240, size: 8, offset: 9288)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !364, file: !365, line: 255, baseType: !288, size: 16, offset: 9296)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !364, file: !365, line: 256, baseType: !290, size: 96, offset: 9312)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !364, file: !365, line: 258, baseType: !422, size: 128, offset: 9408)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !364, file: !365, line: 259, baseType: !422, size: 128, offset: 9536)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !364, file: !365, line: 260, baseType: !422, size: 128, offset: 9664)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !364, file: !365, line: 261, baseType: !422, size: 128, offset: 9792)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !364, file: !365, line: 263, baseType: !639, size: 64, offset: 9920)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !365, line: 52, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !364, file: !365, line: 264, baseType: !642, size: 64, offset: 9984)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !365, line: 53, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !364, file: !365, line: 265, baseType: !645, size: 64, offset: 10048)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !466, line: 46, flags: DIFlagFwdDecl)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !364, file: !365, line: 267, baseType: !240, size: 8, offset: 10112)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !364, file: !365, line: 268, baseType: !240, size: 8, offset: 10120)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !364, file: !365, line: 269, baseType: !288, size: 16, offset: 10128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !364, file: !365, line: 270, baseType: !250, size: 32, offset: 10144)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !364, file: !365, line: 272, baseType: !652, size: 64, offset: 10176)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !365, line: 54, flags: DIFlagFwdDecl)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !364, file: !365, line: 275, baseType: !655, size: 64, offset: 10240)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !365, line: 275, flags: DIFlagFwdDecl)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !364, file: !365, line: 277, baseType: !658, size: 64, offset: 10304)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !28, line: 178, size: 13504, elements: !660)
!660 = !{!661, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !712, !715, !717, !718, !720, !721, !722, !723, !729, !734, !735, !739, !740, !741, !742, !743, !755, !767, !781, !785, !789, !793, !802, !814, !818, !822, !826, !830, !834, !835, !836, !837, !838, !839, !843, !844, !845, !846, !850, !851, !852, !853, !854, !859, !860, !861, !862, !863, !867, !868, !869, !870, !871, !878, !889, !894, !900, !910, !916, !927, !934, !941, !945, !950, !954, !959, !960, !961, !972, !978, !979, !980, !985, !986, !995, !1101, !1105, !1113, !1117, !1121, !1125, !1133, !1143}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !659, file: !28, line: 180, baseType: !662, size: 1600)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !61, line: 73, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !61, line: 64, size: 1600, elements: !664)
!664 = !{!665, !680, !684, !685, !686, !687, !690}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !663, file: !61, line: 65, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !61, line: 53, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !61, line: 42, size: 832, elements: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !676, !677, !678, !679}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !668, file: !61, line: 43, baseType: !207, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !668, file: !61, line: 44, baseType: !207, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !668, file: !61, line: 45, baseType: !207, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !668, file: !61, line: 46, baseType: !207, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !668, file: !61, line: 47, baseType: !207, size: 32, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !668, file: !61, line: 48, baseType: !207, size: 32, offset: 160)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !668, file: !61, line: 49, baseType: !207, size: 32, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !668, file: !61, line: 50, baseType: !207, size: 32, offset: 224)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !61, line: 51, baseType: !239, size: 512, offset: 256)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !668, file: !61, line: 52, baseType: !260, size: 64, offset: 768)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !663, file: !61, line: 66, baseType: !681, size: 1312, offset: 64)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 1312, elements: !682)
!682 = !{!683}
!683 = !DISubrange(count: 41)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !663, file: !61, line: 69, baseType: !207, size: 32, offset: 1376)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !663, file: !61, line: 69, baseType: !207, size: 32, offset: 1408)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !663, file: !61, line: 70, baseType: !207, size: 32, offset: 1440)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !663, file: !61, line: 71, baseType: !688, size: 64, offset: 1472)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !61, line: 71, flags: DIFlagFwdDecl)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !663, file: !61, line: 72, baseType: !691, size: 64, offset: 1536)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !61, line: 59, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !61, line: 57, size: 8192, elements: !694)
!694 = !{!695}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !693, file: !61, line: 58, baseType: !387, size: 8192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !659, file: !28, line: 180, baseType: !662, size: 1600, offset: 1600)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !659, file: !28, line: 180, baseType: !662, size: 1600, offset: 3200)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !659, file: !28, line: 180, baseType: !662, size: 1600, offset: 4800)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !659, file: !28, line: 180, baseType: !662, size: 1600, offset: 6400)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !659, file: !28, line: 181, baseType: !207, size: 32, offset: 8000)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !659, file: !28, line: 181, baseType: !207, size: 32, offset: 8032)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !659, file: !28, line: 181, baseType: !207, size: 32, offset: 8064)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !659, file: !28, line: 181, baseType: !207, size: 32, offset: 8096)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !659, file: !28, line: 181, baseType: !207, size: 32, offset: 8128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !659, file: !28, line: 182, baseType: !207, size: 32, offset: 8160)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !659, file: !28, line: 183, baseType: !207, size: 32, offset: 8192)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !659, file: !28, line: 184, baseType: !708, size: 64, offset: 8256)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !709, line: 124, baseType: !710)
!709 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !709, line: 124, flags: DIFlagFwdDecl)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !659, file: !28, line: 185, baseType: !713, size: 64, offset: 8320)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !28, line: 97, flags: DIFlagFwdDecl)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !659, file: !28, line: 186, baseType: !716, size: 32, offset: 8384)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !28, line: 132, baseType: !27)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !659, file: !28, line: 187, baseType: !250, size: 32, offset: 8416)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !659, file: !28, line: 188, baseType: !719, size: 32, offset: 8448)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !28, line: 175, baseType: !33)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !659, file: !28, line: 189, baseType: !207, size: 32, offset: 8480)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !659, file: !28, line: 190, baseType: !547, size: 64, offset: 8512)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !659, file: !28, line: 193, baseType: !240, size: 8, offset: 8576)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !659, file: !28, line: 196, baseType: !724, size: 64, offset: 8640)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{null, !727}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !28, line: 177, baseType: !659)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !659, file: !28, line: 199, baseType: !730, size: 64, offset: 8704)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{null, !727, !733}
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !659, file: !28, line: 202, baseType: !724, size: 64, offset: 8768)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !659, file: !28, line: 207, baseType: !736, size: 64, offset: 8832)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!207, !727}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !659, file: !28, line: 208, baseType: !736, size: 64, offset: 8896)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !659, file: !28, line: 209, baseType: !736, size: 64, offset: 8960)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !659, file: !28, line: 210, baseType: !736, size: 64, offset: 9024)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !659, file: !28, line: 211, baseType: !736, size: 64, offset: 9088)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !659, file: !28, line: 218, baseType: !744, size: 64, offset: 9152)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !727, !207, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !105, line: 65, size: 160, elements: !749)
!749 = !{!750, !751, !753, !754}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !748, file: !105, line: 66, baseType: !290, size: 96)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !748, file: !105, line: 67, baseType: !752, size: 48, offset: 96)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 48, elements: !291)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !748, file: !105, line: 68, baseType: !240, size: 8, offset: 144)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !748, file: !105, line: 68, baseType: !240, size: 8, offset: 152)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !659, file: !28, line: 219, baseType: !756, size: 64, offset: 9216)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !727, !207, !759}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !105, line: 48, size: 96, elements: !761)
!761 = !{!762, !763, !764, !765, !766}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !760, file: !105, line: 49, baseType: !7, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !760, file: !105, line: 49, baseType: !7, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !760, file: !105, line: 50, baseType: !240, size: 8, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !760, file: !105, line: 50, baseType: !240, size: 8, offset: 72)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !760, file: !105, line: 51, baseType: !288, size: 16, offset: 80)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !659, file: !28, line: 220, baseType: !768, size: 64, offset: 9280)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !727, !207, !771}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !105, line: 42, size: 160, elements: !773)
!773 = !{!774, !775, !776, !777, !778, !779, !780}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !772, file: !105, line: 43, baseType: !7, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !772, file: !105, line: 43, baseType: !7, size: 32, offset: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !772, file: !105, line: 43, baseType: !7, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !772, file: !105, line: 43, baseType: !7, size: 32, offset: 96)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !772, file: !105, line: 44, baseType: !288, size: 16, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !772, file: !105, line: 45, baseType: !240, size: 8, offset: 144)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !772, file: !105, line: 45, baseType: !240, size: 8, offset: 152)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !659, file: !28, line: 227, baseType: !782, size: 64, offset: 9344)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!747, !727}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !659, file: !28, line: 228, baseType: !786, size: 64, offset: 9408)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!759, !727}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !659, file: !28, line: 229, baseType: !790, size: 64, offset: 9472)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!771, !727}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !659, file: !28, line: 230, baseType: !794, size: 64, offset: 9536)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{!797, !727}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !105, line: 88, size: 64, elements: !799)
!799 = !{!800, !801}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !798, file: !105, line: 89, baseType: !7, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !798, file: !105, line: 90, baseType: !7, size: 32, offset: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !659, file: !28, line: 231, baseType: !803, size: 64, offset: 9600)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!806, !727}
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !105, line: 79, size: 96, elements: !808)
!808 = !{!809, !810, !811, !812, !813}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !807, file: !105, line: 81, baseType: !207, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !807, file: !105, line: 82, baseType: !207, size: 32, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !807, file: !105, line: 83, baseType: !288, size: 16, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !807, file: !105, line: 84, baseType: !240, size: 8, offset: 80)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !807, file: !105, line: 84, baseType: !240, size: 8, offset: 88)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !659, file: !28, line: 236, baseType: !815, size: 64, offset: 9664)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{null, !727, !747}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !659, file: !28, line: 237, baseType: !819, size: 64, offset: 9728)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !727, !759}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !659, file: !28, line: 238, baseType: !823, size: 64, offset: 9792)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !727, !771}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !659, file: !28, line: 239, baseType: !827, size: 64, offset: 9856)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{null, !727, !797}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !659, file: !28, line: 240, baseType: !831, size: 64, offset: 9920)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !727, !806}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !659, file: !28, line: 245, baseType: !782, size: 64, offset: 9984)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !659, file: !28, line: 246, baseType: !786, size: 64, offset: 10048)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !659, file: !28, line: 247, baseType: !790, size: 64, offset: 10112)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !659, file: !28, line: 248, baseType: !794, size: 64, offset: 10176)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !659, file: !28, line: 249, baseType: !803, size: 64, offset: 10240)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !659, file: !28, line: 255, baseType: !840, size: 64, offset: 10304)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!260, !727, !207, !207}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !659, file: !28, line: 256, baseType: !840, size: 64, offset: 10368)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !659, file: !28, line: 257, baseType: !840, size: 64, offset: 10432)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !659, file: !28, line: 258, baseType: !840, size: 64, offset: 10496)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !659, file: !28, line: 264, baseType: !847, size: 64, offset: 10560)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!260, !727, !207}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !659, file: !28, line: 265, baseType: !847, size: 64, offset: 10624)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !659, file: !28, line: 266, baseType: !847, size: 64, offset: 10688)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !659, file: !28, line: 267, baseType: !847, size: 64, offset: 10752)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !659, file: !28, line: 268, baseType: !847, size: 64, offset: 10816)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !659, file: !28, line: 272, baseType: !855, size: 64, offset: 10880)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!858, !727}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !659, file: !28, line: 273, baseType: !855, size: 64, offset: 10944)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !659, file: !28, line: 274, baseType: !855, size: 64, offset: 11008)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !659, file: !28, line: 275, baseType: !855, size: 64, offset: 11072)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !659, file: !28, line: 276, baseType: !855, size: 64, offset: 11136)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !659, file: !28, line: 279, baseType: !864, size: 64, offset: 11200)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !727, !207, !858, !207}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !659, file: !28, line: 280, baseType: !864, size: 64, offset: 11264)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !659, file: !28, line: 281, baseType: !864, size: 64, offset: 11328)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !659, file: !28, line: 284, baseType: !736, size: 64, offset: 11392)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !659, file: !28, line: 285, baseType: !736, size: 64, offset: 11456)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !659, file: !28, line: 286, baseType: !872, size: 64, offset: 11520)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!875, !727}
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !28, line: 82, flags: DIFlagFwdDecl)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !659, file: !28, line: 287, baseType: !879, size: 64, offset: 11584)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!882, !727}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !28, line: 120, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !28, line: 117, size: 256, elements: !885)
!885 = !{!886, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !884, file: !28, line: 118, baseType: !887, size: 128)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 128, elements: !563)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !884, file: !28, line: 119, baseType: !887, size: 128, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !659, file: !28, line: 288, baseType: !890, size: 64, offset: 11648)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!893, !727}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !659, file: !28, line: 289, baseType: !895, size: 64, offset: 11712)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !727, !898}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !28, line: 83, flags: DIFlagFwdDecl)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !659, file: !28, line: 290, baseType: !901, size: 64, offset: 11776)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!904, !727}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !28, line: 126, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !28, line: 123, size: 32, elements: !907)
!907 = !{!908, !909}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !906, file: !28, line: 124, baseType: !288, size: 16)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !906, file: !28, line: 125, baseType: !240, size: 8, offset: 16)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !659, file: !28, line: 291, baseType: !911, size: 64, offset: 11840)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!914, !727}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !659, file: !28, line: 299, baseType: !917, size: 64, offset: 11904)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !727, !920, !260, !926}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{null, !260, !207, !923, !923, !924}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !28, line: 162, baseType: !38)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !659, file: !28, line: 309, baseType: !928, size: 64, offset: 11968)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{null, !727, !931, !260}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !260, !207, !923, !923}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !659, file: !28, line: 317, baseType: !935, size: 64, offset: 12032)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{null, !727, !938, !260, !926}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !260, !207, !207, !923, !923}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !659, file: !28, line: 327, baseType: !942, size: 64, offset: 12096)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !727, !931, !260, !926}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !659, file: !28, line: 337, baseType: !946, size: 64, offset: 12160)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{null, !727, !949, !949}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !659, file: !28, line: 344, baseType: !951, size: 64, offset: 12224)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !727, !207, !949}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !659, file: !28, line: 347, baseType: !955, size: 64, offset: 12288)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{null, !727, !958}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !659, file: !28, line: 350, baseType: !951, size: 64, offset: 12352)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !659, file: !28, line: 351, baseType: !951, size: 64, offset: 12416)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !659, file: !28, line: 355, baseType: !962, size: 64, offset: 12480)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!965, !363, !727}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !968, line: 96, size: 128, elements: !969)
!968 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !967, file: !968, line: 97, baseType: !893, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !967, file: !968, line: 98, baseType: !207, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !659, file: !28, line: 359, baseType: !973, size: 64, offset: 12544)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!976, !363, !727}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !28, line: 100, flags: DIFlagFwdDecl)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !659, file: !28, line: 364, baseType: !724, size: 64, offset: 12608)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !659, file: !28, line: 367, baseType: !724, size: 64, offset: 12672)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !659, file: !28, line: 373, baseType: !981, size: 64, offset: 12736)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !727, !984, !984}
!984 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !659, file: !28, line: 376, baseType: !724, size: 64, offset: 12800)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !659, file: !28, line: 385, baseType: !987, size: 64, offset: 12864)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !727, !990, !984, !991}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !28, line: 146, baseType: !992)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!207, !207, !260}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !659, file: !28, line: 391, baseType: !996, size: 64, offset: 12928)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !727, !999, !1096, !260, !1100}
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !28, line: 150, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!1003, !1004, !1095, !207}
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !28, line: 143, baseType: !42)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !105, line: 160, size: 384, elements: !1006)
!1006 = !{!1007, !1010, !1090, !1091, !1092, !1093, !1094}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1005, file: !105, line: 161, baseType: !1008, size: 256)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 256, elements: !1009)
!1009 = !{!564, !256}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1005, file: !105, line: 162, baseType: !1011, size: 64, offset: 256)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !246, line: 77, size: 15424, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1019, !1022, !1025, !1028, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1079, !1080, !1084}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1012, file: !246, line: 78, baseType: !368, size: 960)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1012, file: !246, line: 80, baseType: !387, size: 8192, offset: 960)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1012, file: !246, line: 82, baseType: !1017, size: 64, offset: 9152)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !246, line: 43, flags: DIFlagFwdDecl)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1012, file: !246, line: 83, baseType: !1020, size: 64, offset: 9216)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !369, line: 46, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1012, file: !246, line: 86, baseType: !1023, size: 64, offset: 9280)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !246, line: 41, flags: DIFlagFwdDecl)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1012, file: !246, line: 87, baseType: !1026, size: 64, offset: 9344)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !246, line: 44, flags: DIFlagFwdDecl)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1012, file: !246, line: 89, baseType: !1029, size: 512, offset: 9408)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 512, elements: !1030)
!1030 = !{!460}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1012, file: !246, line: 90, baseType: !288, size: 16, offset: 9920)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1012, file: !246, line: 90, baseType: !288, size: 16, offset: 9936)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1012, file: !246, line: 92, baseType: !288, size: 16, offset: 9952)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1012, file: !246, line: 92, baseType: !288, size: 16, offset: 9968)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1012, file: !246, line: 93, baseType: !288, size: 16, offset: 9984)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1012, file: !246, line: 93, baseType: !288, size: 16, offset: 10000)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1012, file: !246, line: 94, baseType: !207, size: 32, offset: 10016)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1012, file: !246, line: 97, baseType: !288, size: 16, offset: 10048)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1012, file: !246, line: 97, baseType: !288, size: 16, offset: 10064)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1012, file: !246, line: 98, baseType: !288, size: 16, offset: 10080)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1012, file: !246, line: 98, baseType: !288, size: 16, offset: 10096)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1012, file: !246, line: 99, baseType: !288, size: 16, offset: 10112)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1012, file: !246, line: 99, baseType: !288, size: 16, offset: 10128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1012, file: !246, line: 100, baseType: !7, size: 32, offset: 10144)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1012, file: !246, line: 101, baseType: !915, size: 64, offset: 10176)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1012, file: !246, line: 103, baseType: !393, size: 64, offset: 10240)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1012, file: !246, line: 104, baseType: !1048, size: 64, offset: 10304)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !369, line: 159, size: 448, elements: !1050)
!1050 = !{!1051, !1053, !1054, !1056, !1057, !1059}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1049, file: !369, line: 161, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !255)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1049, file: !369, line: 162, baseType: !1052, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1049, file: !369, line: 163, baseType: !1055, size: 32, offset: 128)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 32, elements: !255)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1049, file: !369, line: 164, baseType: !1055, size: 32, offset: 160)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1049, file: !369, line: 165, baseType: !1058, size: 128, offset: 192)
!1058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 128, elements: !255)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1049, file: !369, line: 166, baseType: !1060, size: 128, offset: 320)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1020, size: 128, elements: !255)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1012, file: !246, line: 107, baseType: !250, size: 32, offset: 10368)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1012, file: !246, line: 108, baseType: !207, size: 32, offset: 10400)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1012, file: !246, line: 109, baseType: !288, size: 16, offset: 10432)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1012, file: !246, line: 110, baseType: !288, size: 16, offset: 10448)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1012, file: !246, line: 113, baseType: !207, size: 32, offset: 10464)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1012, file: !246, line: 113, baseType: !207, size: 32, offset: 10496)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1012, file: !246, line: 114, baseType: !240, size: 8, offset: 10528)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1012, file: !246, line: 114, baseType: !240, size: 8, offset: 10536)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1012, file: !246, line: 115, baseType: !288, size: 16, offset: 10544)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1012, file: !246, line: 116, baseType: !562, size: 128, offset: 10560)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1012, file: !246, line: 119, baseType: !250, size: 32, offset: 10688)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1012, file: !246, line: 119, baseType: !250, size: 32, offset: 10720)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1012, file: !246, line: 122, baseType: !1074, size: 512, offset: 10752)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1075, line: 182, baseType: !1076)
!1075 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1075, line: 180, size: 512, elements: !1077)
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1076, file: !1075, line: 181, baseType: !239, size: 512)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1012, file: !246, line: 123, baseType: !240, size: 8, offset: 11264)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1012, file: !246, line: 125, baseType: !1081, size: 56, offset: 11272)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 56, elements: !1082)
!1082 = !{!1083}
!1083 = !DISubrange(count: 7)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1012, file: !246, line: 126, baseType: !1085, size: 4096, offset: 11328)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 4096, elements: !1030)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !246, line: 69, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !246, line: 67, size: 512, elements: !1088)
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1087, file: !246, line: 68, baseType: !239, size: 512)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1005, file: !105, line: 163, baseType: !240, size: 8, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1005, file: !105, line: 163, baseType: !240, size: 8, offset: 328)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1005, file: !105, line: 164, baseType: !288, size: 16, offset: 336)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1005, file: !105, line: 164, baseType: !288, size: 16, offset: 352)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1005, file: !105, line: 164, baseType: !288, size: 16, offset: 368)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !28, line: 147, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!207, !260, !207, !207}
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !28, line: 157, baseType: !48)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !659, file: !28, line: 400, baseType: !1102, size: 64, offset: 12992)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !727, !991}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !659, file: !28, line: 415, baseType: !1106, size: 64, offset: 13056)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !727, !1109, !991, !1096, !260, !1100}
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !28, line: 149, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!1003, !260, !207}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !659, file: !28, line: 425, baseType: !1114, size: 64, offset: 13120)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !727, !1109, !1096, !260, !1100}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !659, file: !28, line: 435, baseType: !1118, size: 64, offset: 13184)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !727, !991, !1109, !260}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !659, file: !28, line: 444, baseType: !1122, size: 64, offset: 13248)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !727, !1109, !260}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !659, file: !28, line: 455, baseType: !1126, size: 64, offset: 13312)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !727, !1109, !1129, !260}
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !28, line: 148, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{null, !260, !207, !250}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !659, file: !28, line: 464, baseType: !1134, size: 64, offset: 13376)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !727, !1137, !1140, !260}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !260, !207, !260}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!984, !260, !207}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !659, file: !28, line: 470, baseType: !724, size: 64, offset: 13440)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !364, file: !365, line: 277, baseType: !658, size: 64, offset: 10368)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !364, file: !365, line: 278, baseType: !1146, size: 64, offset: 10432)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1147, line: 27, baseType: !1148)
!1147 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1149, line: 45, baseType: !339)
!1149 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !364, file: !365, line: 279, baseType: !1146, size: 64, offset: 10496)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !364, file: !365, line: 280, baseType: !7, size: 32, offset: 10560)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !364, file: !365, line: 281, baseType: !7, size: 32, offset: 10592)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !364, file: !365, line: 283, baseType: !422, size: 128, offset: 10624)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !364, file: !365, line: 284, baseType: !422, size: 128, offset: 10752)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !364, file: !365, line: 285, baseType: !1156, size: 64, offset: 10880)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !364, file: !365, line: 287, baseType: !1158, size: 64, offset: 10944)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !365, line: 59, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !364, file: !365, line: 288, baseType: !1161, size: 64, offset: 11008)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !365, line: 288, flags: DIFlagFwdDecl)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !364, file: !365, line: 290, baseType: !1164, size: 64, offset: 11072)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 64, elements: !255)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !364, file: !365, line: 291, baseType: !1166, size: 64, offset: 11136)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !246, line: 65, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !246, line: 50, size: 320, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1168, file: !246, line: 51, baseType: !244, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1168, file: !246, line: 53, baseType: !207, size: 32, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1168, file: !246, line: 54, baseType: !207, size: 32, offset: 96)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1168, file: !246, line: 55, baseType: !207, size: 32, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1168, file: !246, line: 55, baseType: !207, size: 32, offset: 160)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1168, file: !246, line: 56, baseType: !240, size: 8, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1168, file: !246, line: 56, baseType: !240, size: 8, offset: 200)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1168, file: !246, line: 57, baseType: !240, size: 8, offset: 208)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1168, file: !246, line: 57, baseType: !240, size: 8, offset: 216)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1168, file: !246, line: 59, baseType: !288, size: 16, offset: 224)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1168, file: !246, line: 59, baseType: !288, size: 16, offset: 240)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1168, file: !246, line: 59, baseType: !288, size: 16, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1168, file: !246, line: 61, baseType: !288, size: 16, offset: 272)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1168, file: !246, line: 63, baseType: !207, size: 32, offset: 288)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !364, file: !365, line: 293, baseType: !422, size: 128, offset: 11200)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !364, file: !365, line: 294, baseType: !1186, size: 64, offset: 11328)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !365, line: 113, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !365, line: 108, size: 256, elements: !1189)
!1189 = !{!1190, !1192, !1193, !1194, !1195}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1188, file: !365, line: 109, baseType: !1191, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1188, file: !365, line: 109, baseType: !1191, size: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1188, file: !365, line: 110, baseType: !363, size: 64, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1188, file: !365, line: 111, baseType: !207, size: 32, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1188, file: !365, line: 112, baseType: !250, size: 32, offset: 224)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !6, line: 118, baseType: !54)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !343, file: !6, line: 157, baseType: !1198, size: 64, offset: 768)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{null, !232, !363, !658, !958, !1201, !207}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 288, elements: !1203)
!1203 = !{!292, !292}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !343, file: !6, line: 163, baseType: !1205, size: 64, offset: 832)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !232, !363, !1208, !658, !958, !207}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !28, line: 91, flags: DIFlagFwdDecl)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !343, file: !6, line: 168, baseType: !1211, size: 64, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{null, !232, !363, !1208, !658, !958, !1201, !207}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !343, file: !6, line: 193, baseType: !1215, size: 64, offset: 960)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!658, !232, !363, !658, !1196}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !343, file: !6, line: 204, baseType: !1219, size: 64, offset: 1024)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!658, !232, !363, !1208, !658, !1196}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !343, file: !6, line: 217, baseType: !1223, size: 64, offset: 1088)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !232}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !343, file: !6, line: 235, baseType: !1227, size: 64, offset: 1152)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1230, !363, !232}
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !1231, line: 48, baseType: !1146)
!1231 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !343, file: !6, line: 242, baseType: !1223, size: 64, offset: 1216)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !343, file: !6, line: 252, baseType: !1234, size: 64, offset: 1280)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!984, !232, !207}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !343, file: !6, line: 259, baseType: !1238, size: 64, offset: 1344)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{null, !232, !1241, !244, !363, !1243}
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !6, line: 37, flags: DIFlagFwdDecl)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !6, line: 38, flags: DIFlagFwdDecl)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !343, file: !6, line: 267, baseType: !1246, size: 64, offset: 1408)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!984, !232}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !343, file: !6, line: 277, baseType: !1246, size: 64, offset: 1472)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !343, file: !6, line: 286, baseType: !1251, size: 64, offset: 1536)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !232, !363, !1254, !260}
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !6, line: 106, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !260, !363, !1258}
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !343, file: !6, line: 297, baseType: !1260, size: 64, offset: 1600)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !232, !363, !1263, !260}
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !6, line: 107, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !260, !363, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !343, file: !6, line: 307, baseType: !1269, size: 64, offset: 1664)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !232, !363, !1272, !260}
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !6, line: 108, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !260, !363, !232, !1276}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!1278 = !{i32 7, !"Dwarf Version", i32 4}
!1279 = !{i32 2, !"Debug Info Version", i32 3}
!1280 = !{i32 1, !"wchar_size", i32 4}
!1281 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1282 = distinct !DISubprogram(name: "copyData", scope: !3, file: !3, line: 1862, type: !1283, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{null, !1285, !1285}
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!1286 = !{}
!1287 = !DILocalVariable(name: "md", arg: 1, scope: !1282, file: !3, line: 1862, type: !1285)
!1288 = !DILocation(line: 1862, column: 36, scope: !1282)
!1289 = !DILocalVariable(name: "target", arg: 2, scope: !1282, file: !3, line: 1862, type: !1285)
!1290 = !DILocation(line: 1862, column: 54, scope: !1282)
!1291 = !DILocation(line: 1868, column: 28, scope: !1282)
!1292 = !DILocation(line: 1868, column: 32, scope: !1282)
!1293 = !DILocation(line: 1868, column: 2, scope: !1282)
!1294 = !DILocation(line: 1869, column: 1, scope: !1282)
!1295 = distinct !DISubprogram(name: "applyModifier", scope: !3, file: !3, line: 1871, type: !1296, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!727, !1285, !1298, !727, !1196}
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !365, line: 295, baseType: !364)
!1300 = !DILocalVariable(name: "md", arg: 1, scope: !1295, file: !3, line: 1871, type: !1285)
!1301 = !DILocation(line: 1871, column: 49, scope: !1295)
!1302 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !1295, file: !3, line: 1872, type: !1298)
!1303 = !DILocation(line: 1872, column: 43, scope: !1295)
!1304 = !DILocalVariable(name: "dm", arg: 3, scope: !1295, file: !3, line: 1873, type: !727)
!1305 = !DILocation(line: 1873, column: 48, scope: !1295)
!1306 = !DILocalVariable(name: "UNUSED_flag", arg: 4, scope: !1295, file: !3, line: 1874, type: !1196)
!1307 = !DILocation(line: 1874, column: 53, scope: !1295)
!1308 = !DILocalVariable(name: "result", scope: !1295, file: !3, line: 1876, type: !727)
!1309 = !DILocation(line: 1876, column: 15, scope: !1295)
!1310 = !DILocation(line: 1878, column: 48, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 1878, column: 6)
!1312 = !DILocation(line: 1878, column: 28, scope: !1311)
!1313 = !DILocation(line: 1878, column: 52, scope: !1311)
!1314 = !DILocation(line: 1878, column: 17, scope: !1311)
!1315 = !DILocation(line: 1878, column: 15, scope: !1311)
!1316 = !DILocation(line: 1878, column: 6, scope: !1295)
!1317 = !DILocation(line: 1879, column: 10, scope: !1311)
!1318 = !DILocation(line: 1879, column: 3, scope: !1311)
!1319 = !DILocation(line: 1880, column: 9, scope: !1295)
!1320 = !DILocation(line: 1880, column: 2, scope: !1295)
!1321 = !DILocation(line: 1881, column: 1, scope: !1295)
!1322 = distinct !DISubprogram(name: "initData", scope: !3, file: !3, line: 1850, type: !1323, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{null, !1285}
!1325 = !DILocalVariable(name: "md", arg: 1, scope: !1322, file: !3, line: 1850, type: !1285)
!1326 = !DILocation(line: 1850, column: 36, scope: !1322)
!1327 = !DILocalVariable(name: "smd", scope: !1322, file: !3, line: 1852, type: !223)
!1328 = !DILocation(line: 1852, column: 20, scope: !1322)
!1329 = !DILocation(line: 1852, column: 47, scope: !1322)
!1330 = !DILocation(line: 1852, column: 26, scope: !1322)
!1331 = !DILocation(line: 1855, column: 2, scope: !1322)
!1332 = !DILocation(line: 1855, column: 6, scope: !1322)
!1333 = !DILocation(line: 1855, column: 11, scope: !1322)
!1334 = !DILocation(line: 1857, column: 2, scope: !1322)
!1335 = !DILocation(line: 1857, column: 7, scope: !1322)
!1336 = !DILocation(line: 1857, column: 24, scope: !1322)
!1337 = !DILocation(line: 1858, column: 2, scope: !1322)
!1338 = !DILocation(line: 1858, column: 7, scope: !1322)
!1339 = !DILocation(line: 1858, column: 12, scope: !1322)
!1340 = !DILocation(line: 1859, column: 2, scope: !1322)
!1341 = !DILocation(line: 1859, column: 7, scope: !1322)
!1342 = !DILocation(line: 1859, column: 21, scope: !1322)
!1343 = !DILocation(line: 1860, column: 1, scope: !1322)
!1344 = distinct !DISubprogram(name: "requiredDataMask", scope: !3, file: !3, line: 1883, type: !1345, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!1230, !1298, !1285}
!1347 = !DILocalVariable(name: "UNUSED_ob", arg: 1, scope: !1344, file: !3, line: 1883, type: !1298)
!1348 = !DILocation(line: 1883, column: 48, scope: !1344)
!1349 = !DILocalVariable(name: "UNUSED_md", arg: 2, scope: !1344, file: !3, line: 1884, type: !1285)
!1350 = !DILocation(line: 1884, column: 54, scope: !1344)
!1351 = !DILocation(line: 1886, column: 2, scope: !1344)
!1352 = distinct !DISubprogram(name: "final_skin", scope: !3, file: !3, line: 1830, type: !1353, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!727, !223, !727}
!1355 = !DILocalVariable(name: "smd", arg: 1, scope: !1352, file: !3, line: 1830, type: !223)
!1356 = !DILocation(line: 1830, column: 50, scope: !1352)
!1357 = !DILocalVariable(name: "origdm", arg: 2, scope: !1352, file: !3, line: 1831, type: !727)
!1358 = !DILocation(line: 1831, column: 45, scope: !1352)
!1359 = !DILocalVariable(name: "dm", scope: !1352, file: !3, line: 1833, type: !727)
!1360 = !DILocation(line: 1833, column: 15, scope: !1352)
!1361 = !DILocation(line: 1836, column: 29, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1352, file: !3, line: 1836, column: 6)
!1363 = !DILocation(line: 1836, column: 37, scope: !1362)
!1364 = !DILocation(line: 1836, column: 7, scope: !1362)
!1365 = !DILocation(line: 1836, column: 6, scope: !1352)
!1366 = !DILocation(line: 1837, column: 10, scope: !1362)
!1367 = !DILocation(line: 1837, column: 3, scope: !1362)
!1368 = !DILocation(line: 1839, column: 26, scope: !1352)
!1369 = !DILocation(line: 1839, column: 11, scope: !1352)
!1370 = !DILocation(line: 1839, column: 9, scope: !1352)
!1371 = !DILocation(line: 1840, column: 17, scope: !1352)
!1372 = !DILocation(line: 1840, column: 25, scope: !1352)
!1373 = !DILocation(line: 1840, column: 7, scope: !1352)
!1374 = !DILocation(line: 1840, column: 5, scope: !1352)
!1375 = !DILocation(line: 1842, column: 2, scope: !1352)
!1376 = !DILocation(line: 1842, column: 10, scope: !1352)
!1377 = !DILocation(line: 1842, column: 18, scope: !1352)
!1378 = !DILocation(line: 1844, column: 9, scope: !1352)
!1379 = !DILocation(line: 1844, column: 2, scope: !1352)
!1380 = !DILocation(line: 1845, column: 1, scope: !1352)
!1381 = distinct !DISubprogram(name: "subdivide_base", scope: !3, file: !3, line: 812, type: !1382, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!727, !727}
!1384 = !DILocalVariable(name: "orig", arg: 1, scope: !1381, file: !3, line: 812, type: !727)
!1385 = !DILocation(line: 812, column: 49, scope: !1381)
!1386 = !DILocalVariable(name: "dm", scope: !1381, file: !3, line: 814, type: !727)
!1387 = !DILocation(line: 814, column: 15, scope: !1381)
!1388 = !DILocalVariable(name: "orignode", scope: !1381, file: !3, line: 815, type: !1389)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVertSkin", file: !105, line: 281, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVertSkin", file: !105, line: 275, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1391, file: !105, line: 277, baseType: !290, size: 96)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1391, file: !105, line: 280, baseType: !207, size: 32, offset: 96)
!1395 = !DILocation(line: 815, column: 13, scope: !1381)
!1396 = !DILocalVariable(name: "outnode", scope: !1381, file: !3, line: 815, type: !1389)
!1397 = !DILocation(line: 815, column: 24, scope: !1381)
!1398 = !DILocalVariable(name: "origvert", scope: !1381, file: !3, line: 816, type: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !105, line: 69, baseType: !748)
!1401 = !DILocation(line: 816, column: 9, scope: !1381)
!1402 = !DILocalVariable(name: "outvert", scope: !1381, file: !3, line: 816, type: !1399)
!1403 = !DILocation(line: 816, column: 20, scope: !1381)
!1404 = !DILocalVariable(name: "origedge", scope: !1381, file: !3, line: 817, type: !1405)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !105, line: 52, baseType: !760)
!1407 = !DILocation(line: 817, column: 9, scope: !1381)
!1408 = !DILocalVariable(name: "outedge", scope: !1381, file: !3, line: 817, type: !1405)
!1409 = !DILocation(line: 817, column: 20, scope: !1381)
!1410 = !DILocalVariable(name: "e", scope: !1381, file: !3, line: 817, type: !1405)
!1411 = !DILocation(line: 817, column: 30, scope: !1381)
!1412 = !DILocalVariable(name: "origdvert", scope: !1381, file: !3, line: 818, type: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !105, line: 63, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !105, line: 59, size: 128, elements: !1416)
!1416 = !{!1417, !1423, !1424}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1415, file: !105, line: 60, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !105, line: 54, size: 64, elements: !1420)
!1420 = !{!1421, !1422}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1419, file: !105, line: 55, baseType: !207, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1419, file: !105, line: 56, baseType: !250, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1415, file: !105, line: 61, baseType: !207, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1415, file: !105, line: 62, baseType: !207, size: 32, offset: 96)
!1425 = !DILocation(line: 818, column: 15, scope: !1381)
!1426 = !DILocalVariable(name: "outdvert", scope: !1381, file: !3, line: 818, type: !1413)
!1427 = !DILocation(line: 818, column: 27, scope: !1381)
!1428 = !DILocalVariable(name: "totorigvert", scope: !1381, file: !3, line: 819, type: !207)
!1429 = !DILocation(line: 819, column: 6, scope: !1381)
!1430 = !DILocalVariable(name: "totorigedge", scope: !1381, file: !3, line: 819, type: !207)
!1431 = !DILocation(line: 819, column: 19, scope: !1381)
!1432 = !DILocalVariable(name: "totsubd", scope: !1381, file: !3, line: 820, type: !207)
!1433 = !DILocation(line: 820, column: 6, scope: !1381)
!1434 = !DILocalVariable(name: "degree", scope: !1381, file: !3, line: 820, type: !893)
!1435 = !DILocation(line: 820, column: 16, scope: !1381)
!1436 = !DILocalVariable(name: "edge_subd", scope: !1381, file: !3, line: 820, type: !893)
!1437 = !DILocation(line: 820, column: 25, scope: !1381)
!1438 = !DILocalVariable(name: "i", scope: !1381, file: !3, line: 821, type: !207)
!1439 = !DILocation(line: 821, column: 6, scope: !1381)
!1440 = !DILocalVariable(name: "j", scope: !1381, file: !3, line: 821, type: !207)
!1441 = !DILocation(line: 821, column: 9, scope: !1381)
!1442 = !DILocalVariable(name: "k", scope: !1381, file: !3, line: 821, type: !207)
!1443 = !DILocation(line: 821, column: 12, scope: !1381)
!1444 = !DILocalVariable(name: "u", scope: !1381, file: !3, line: 821, type: !207)
!1445 = !DILocation(line: 821, column: 15, scope: !1381)
!1446 = !DILocalVariable(name: "v", scope: !1381, file: !3, line: 821, type: !207)
!1447 = !DILocation(line: 821, column: 18, scope: !1381)
!1448 = !DILocalVariable(name: "radrat", scope: !1381, file: !3, line: 822, type: !250)
!1449 = !DILocation(line: 822, column: 8, scope: !1381)
!1450 = !DILocation(line: 824, column: 35, scope: !1381)
!1451 = !DILocation(line: 824, column: 41, scope: !1381)
!1452 = !DILocation(line: 824, column: 13, scope: !1381)
!1453 = !DILocation(line: 824, column: 11, scope: !1381)
!1454 = !DILocation(line: 825, column: 13, scope: !1381)
!1455 = !DILocation(line: 825, column: 19, scope: !1381)
!1456 = !DILocation(line: 825, column: 32, scope: !1381)
!1457 = !DILocation(line: 825, column: 11, scope: !1381)
!1458 = !DILocation(line: 826, column: 13, scope: !1381)
!1459 = !DILocation(line: 826, column: 19, scope: !1381)
!1460 = !DILocation(line: 826, column: 32, scope: !1381)
!1461 = !DILocation(line: 826, column: 11, scope: !1381)
!1462 = !DILocation(line: 827, column: 14, scope: !1381)
!1463 = !DILocation(line: 827, column: 20, scope: !1381)
!1464 = !DILocation(line: 827, column: 37, scope: !1381)
!1465 = !DILocation(line: 827, column: 12, scope: !1381)
!1466 = !DILocation(line: 828, column: 16, scope: !1381)
!1467 = !DILocation(line: 828, column: 22, scope: !1381)
!1468 = !DILocation(line: 828, column: 34, scope: !1381)
!1469 = !DILocation(line: 828, column: 14, scope: !1381)
!1470 = !DILocation(line: 829, column: 16, scope: !1381)
!1471 = !DILocation(line: 829, column: 22, scope: !1381)
!1472 = !DILocation(line: 829, column: 34, scope: !1381)
!1473 = !DILocation(line: 829, column: 14, scope: !1381)
!1474 = !DILocation(line: 832, column: 11, scope: !1381)
!1475 = !DILocation(line: 832, column: 37, scope: !1381)
!1476 = !DILocation(line: 832, column: 35, scope: !1381)
!1477 = !DILocation(line: 832, column: 9, scope: !1381)
!1478 = !DILocation(line: 833, column: 9, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 833, column: 2)
!1480 = !DILocation(line: 833, column: 7, scope: !1479)
!1481 = !DILocation(line: 833, column: 14, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1479, file: !3, line: 833, column: 2)
!1483 = !DILocation(line: 833, column: 18, scope: !1482)
!1484 = !DILocation(line: 833, column: 16, scope: !1482)
!1485 = !DILocation(line: 833, column: 2, scope: !1479)
!1486 = !DILocation(line: 834, column: 3, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1482, file: !3, line: 833, column: 36)
!1488 = !DILocation(line: 834, column: 10, scope: !1487)
!1489 = !DILocation(line: 834, column: 19, scope: !1487)
!1490 = !DILocation(line: 834, column: 22, scope: !1487)
!1491 = !DILocation(line: 834, column: 25, scope: !1487)
!1492 = !DILocation(line: 835, column: 3, scope: !1487)
!1493 = !DILocation(line: 835, column: 10, scope: !1487)
!1494 = !DILocation(line: 835, column: 19, scope: !1487)
!1495 = !DILocation(line: 835, column: 22, scope: !1487)
!1496 = !DILocation(line: 835, column: 25, scope: !1487)
!1497 = !DILocation(line: 836, column: 2, scope: !1487)
!1498 = !DILocation(line: 833, column: 32, scope: !1482)
!1499 = !DILocation(line: 833, column: 2, scope: !1482)
!1500 = distinct !{!1500, !1485, !1501}
!1501 = !DILocation(line: 836, column: 2, scope: !1479)
!1502 = !DILocation(line: 839, column: 14, scope: !1381)
!1503 = !DILocation(line: 839, column: 40, scope: !1381)
!1504 = !DILocation(line: 839, column: 38, scope: !1381)
!1505 = !DILocation(line: 839, column: 12, scope: !1381)
!1506 = !DILocation(line: 840, column: 9, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 840, column: 2)
!1508 = !DILocation(line: 840, column: 22, scope: !1507)
!1509 = !DILocation(line: 840, column: 7, scope: !1507)
!1510 = !DILocation(line: 840, column: 27, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 840, column: 2)
!1512 = !DILocation(line: 840, column: 31, scope: !1511)
!1513 = !DILocation(line: 840, column: 29, scope: !1511)
!1514 = !DILocation(line: 840, column: 2, scope: !1507)
!1515 = !DILocation(line: 841, column: 42, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 840, column: 49)
!1517 = !DILocation(line: 841, column: 52, scope: !1516)
!1518 = !DILocation(line: 842, column: 43, scope: !1516)
!1519 = !DILocation(line: 842, column: 52, scope: !1516)
!1520 = !DILocation(line: 842, column: 56, scope: !1516)
!1521 = !DILocation(line: 841, column: 19, scope: !1516)
!1522 = !DILocation(line: 841, column: 3, scope: !1516)
!1523 = !DILocation(line: 841, column: 13, scope: !1516)
!1524 = !DILocation(line: 841, column: 16, scope: !1516)
!1525 = !DILocation(line: 843, column: 14, scope: !1516)
!1526 = !DILocation(line: 843, column: 24, scope: !1516)
!1527 = !DILocation(line: 843, column: 11, scope: !1516)
!1528 = !DILocation(line: 844, column: 2, scope: !1516)
!1529 = !DILocation(line: 840, column: 45, scope: !1511)
!1530 = !DILocation(line: 840, column: 2, scope: !1511)
!1531 = distinct !{!1531, !1514, !1532}
!1532 = !DILocation(line: 844, column: 2, scope: !1507)
!1533 = !DILocation(line: 846, column: 2, scope: !1381)
!1534 = !DILocation(line: 846, column: 12, scope: !1381)
!1535 = !DILocation(line: 849, column: 26, scope: !1381)
!1536 = !DILocation(line: 850, column: 26, scope: !1381)
!1537 = !DILocation(line: 850, column: 40, scope: !1381)
!1538 = !DILocation(line: 850, column: 38, scope: !1381)
!1539 = !DILocation(line: 851, column: 26, scope: !1381)
!1540 = !DILocation(line: 851, column: 40, scope: !1381)
!1541 = !DILocation(line: 851, column: 38, scope: !1381)
!1542 = !DILocation(line: 849, column: 7, scope: !1381)
!1543 = !DILocation(line: 849, column: 5, scope: !1381)
!1544 = !DILocation(line: 854, column: 12, scope: !1381)
!1545 = !DILocation(line: 854, column: 16, scope: !1381)
!1546 = !DILocation(line: 854, column: 29, scope: !1381)
!1547 = !DILocation(line: 854, column: 10, scope: !1381)
!1548 = !DILocation(line: 855, column: 12, scope: !1381)
!1549 = !DILocation(line: 855, column: 16, scope: !1381)
!1550 = !DILocation(line: 855, column: 29, scope: !1381)
!1551 = !DILocation(line: 855, column: 10, scope: !1381)
!1552 = !DILocation(line: 856, column: 34, scope: !1381)
!1553 = !DILocation(line: 856, column: 38, scope: !1381)
!1554 = !DILocation(line: 856, column: 12, scope: !1381)
!1555 = !DILocation(line: 856, column: 10, scope: !1381)
!1556 = !DILocation(line: 857, column: 35, scope: !1381)
!1557 = !DILocation(line: 857, column: 39, scope: !1381)
!1558 = !DILocation(line: 857, column: 13, scope: !1381)
!1559 = !DILocation(line: 857, column: 11, scope: !1381)
!1560 = !DILocation(line: 860, column: 24, scope: !1381)
!1561 = !DILocation(line: 860, column: 30, scope: !1381)
!1562 = !DILocation(line: 861, column: 24, scope: !1381)
!1563 = !DILocation(line: 861, column: 28, scope: !1381)
!1564 = !DILocation(line: 862, column: 29, scope: !1381)
!1565 = !DILocation(line: 860, column: 2, scope: !1381)
!1566 = !DILocation(line: 865, column: 9, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 865, column: 2)
!1568 = !DILocation(line: 865, column: 18, scope: !1567)
!1569 = !DILocation(line: 865, column: 16, scope: !1567)
!1570 = !DILocation(line: 865, column: 7, scope: !1567)
!1571 = !DILocation(line: 865, column: 31, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1567, file: !3, line: 865, column: 2)
!1573 = !DILocation(line: 865, column: 35, scope: !1572)
!1574 = !DILocation(line: 865, column: 33, scope: !1572)
!1575 = !DILocation(line: 865, column: 2, scope: !1567)
!1576 = !DILocalVariable(name: "vgroups", scope: !1577, file: !3, line: 870, type: !1578)
!1577 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 865, column: 53)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1381, file: !3, line: 866, size: 96, elements: !1580)
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1579, file: !3, line: 868, baseType: !207, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "w1", scope: !1579, file: !3, line: 869, baseType: !250, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "w2", scope: !1579, file: !3, line: 869, baseType: !250, size: 32, offset: 64)
!1584 = !DILocation(line: 870, column: 6, scope: !1577)
!1585 = !DILocalVariable(name: "vg", scope: !1577, file: !3, line: 870, type: !1578)
!1586 = !DILocation(line: 870, column: 23, scope: !1577)
!1587 = !DILocalVariable(name: "totvgroup", scope: !1577, file: !3, line: 871, type: !207)
!1588 = !DILocation(line: 871, column: 7, scope: !1577)
!1589 = !DILocation(line: 873, column: 8, scope: !1577)
!1590 = !DILocation(line: 873, column: 17, scope: !1577)
!1591 = !DILocation(line: 873, column: 5, scope: !1577)
!1592 = !DILocation(line: 875, column: 7, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 875, column: 7)
!1594 = !DILocation(line: 875, column: 7, scope: !1577)
!1595 = !DILocalVariable(name: "dv1", scope: !1596, file: !3, line: 876, type: !1597)
!1596 = distinct !DILexicalBlock(scope: !1593, file: !3, line: 875, column: 18)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1599 = !DILocation(line: 876, column: 23, scope: !1596)
!1600 = !DILocation(line: 876, column: 30, scope: !1596)
!1601 = !DILocation(line: 876, column: 40, scope: !1596)
!1602 = !DILocation(line: 876, column: 43, scope: !1596)
!1603 = !DILocalVariable(name: "dv2", scope: !1596, file: !3, line: 877, type: !1597)
!1604 = !DILocation(line: 877, column: 23, scope: !1596)
!1605 = !DILocation(line: 877, column: 30, scope: !1596)
!1606 = !DILocation(line: 877, column: 40, scope: !1596)
!1607 = !DILocation(line: 877, column: 43, scope: !1596)
!1608 = !DILocation(line: 878, column: 14, scope: !1596)
!1609 = !DILocation(line: 878, column: 45, scope: !1596)
!1610 = !DILocation(line: 878, column: 50, scope: !1596)
!1611 = !DILocation(line: 878, column: 43, scope: !1596)
!1612 = !DILocation(line: 878, column: 12, scope: !1596)
!1613 = !DILocation(line: 881, column: 11, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1596, file: !3, line: 881, column: 4)
!1615 = !DILocation(line: 881, column: 9, scope: !1614)
!1616 = !DILocation(line: 881, column: 16, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1614, file: !3, line: 881, column: 4)
!1618 = !DILocation(line: 881, column: 20, scope: !1617)
!1619 = !DILocation(line: 881, column: 25, scope: !1617)
!1620 = !DILocation(line: 881, column: 18, scope: !1617)
!1621 = !DILocation(line: 881, column: 4, scope: !1614)
!1622 = !DILocation(line: 882, column: 8, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1617, file: !3, line: 881, column: 41)
!1624 = !DILocation(line: 883, column: 12, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 883, column: 5)
!1626 = !DILocation(line: 883, column: 10, scope: !1625)
!1627 = !DILocation(line: 883, column: 17, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1625, file: !3, line: 883, column: 5)
!1629 = !DILocation(line: 883, column: 21, scope: !1628)
!1630 = !DILocation(line: 883, column: 26, scope: !1628)
!1631 = !DILocation(line: 883, column: 19, scope: !1628)
!1632 = !DILocation(line: 883, column: 5, scope: !1625)
!1633 = !DILocation(line: 884, column: 10, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !3, line: 884, column: 10)
!1635 = distinct !DILexicalBlock(scope: !1628, file: !3, line: 883, column: 42)
!1636 = !DILocation(line: 884, column: 15, scope: !1634)
!1637 = !DILocation(line: 884, column: 18, scope: !1634)
!1638 = !DILocation(line: 884, column: 21, scope: !1634)
!1639 = !DILocation(line: 884, column: 31, scope: !1634)
!1640 = !DILocation(line: 884, column: 36, scope: !1634)
!1641 = !DILocation(line: 884, column: 39, scope: !1634)
!1642 = !DILocation(line: 884, column: 42, scope: !1634)
!1643 = !DILocation(line: 884, column: 28, scope: !1634)
!1644 = !DILocation(line: 884, column: 10, scope: !1635)
!1645 = !DILocation(line: 885, column: 13, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 884, column: 50)
!1647 = !DILocation(line: 885, column: 21, scope: !1646)
!1648 = !DILocation(line: 885, column: 10, scope: !1646)
!1649 = !DILocation(line: 886, column: 16, scope: !1646)
!1650 = !DILocation(line: 887, column: 7, scope: !1646)
!1651 = !DILocation(line: 889, column: 5, scope: !1635)
!1652 = !DILocation(line: 883, column: 38, scope: !1628)
!1653 = !DILocation(line: 883, column: 5, scope: !1628)
!1654 = distinct !{!1654, !1632, !1655}
!1655 = !DILocation(line: 889, column: 5, scope: !1625)
!1656 = !DILocation(line: 891, column: 9, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 891, column: 9)
!1658 = !DILocation(line: 891, column: 9, scope: !1623)
!1659 = !DILocation(line: 892, column: 19, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1657, file: !3, line: 891, column: 13)
!1661 = !DILocation(line: 892, column: 24, scope: !1660)
!1662 = !DILocation(line: 892, column: 27, scope: !1660)
!1663 = !DILocation(line: 892, column: 30, scope: !1660)
!1664 = !DILocation(line: 892, column: 6, scope: !1660)
!1665 = !DILocation(line: 892, column: 10, scope: !1660)
!1666 = !DILocation(line: 892, column: 17, scope: !1660)
!1667 = !DILocation(line: 893, column: 15, scope: !1660)
!1668 = !DILocation(line: 893, column: 20, scope: !1660)
!1669 = !DILocation(line: 893, column: 23, scope: !1660)
!1670 = !DILocation(line: 893, column: 26, scope: !1660)
!1671 = !DILocation(line: 893, column: 6, scope: !1660)
!1672 = !DILocation(line: 893, column: 10, scope: !1660)
!1673 = !DILocation(line: 893, column: 13, scope: !1660)
!1674 = !DILocation(line: 894, column: 15, scope: !1660)
!1675 = !DILocation(line: 894, column: 20, scope: !1660)
!1676 = !DILocation(line: 894, column: 23, scope: !1660)
!1677 = !DILocation(line: 894, column: 26, scope: !1660)
!1678 = !DILocation(line: 894, column: 6, scope: !1660)
!1679 = !DILocation(line: 894, column: 10, scope: !1660)
!1680 = !DILocation(line: 894, column: 13, scope: !1660)
!1681 = !DILocation(line: 895, column: 5, scope: !1660)
!1682 = !DILocation(line: 896, column: 4, scope: !1623)
!1683 = !DILocation(line: 881, column: 37, scope: !1617)
!1684 = !DILocation(line: 881, column: 4, scope: !1617)
!1685 = distinct !{!1685, !1621, !1686}
!1686 = !DILocation(line: 896, column: 4, scope: !1614)
!1687 = !DILocation(line: 897, column: 3, scope: !1596)
!1688 = !DILocation(line: 899, column: 7, scope: !1577)
!1689 = !DILocation(line: 899, column: 10, scope: !1577)
!1690 = !DILocation(line: 899, column: 5, scope: !1577)
!1691 = !DILocation(line: 900, column: 21, scope: !1577)
!1692 = !DILocation(line: 900, column: 29, scope: !1577)
!1693 = !DILocation(line: 900, column: 32, scope: !1577)
!1694 = !DILocation(line: 900, column: 36, scope: !1577)
!1695 = !DILocation(line: 900, column: 13, scope: !1577)
!1696 = !DILocation(line: 901, column: 21, scope: !1577)
!1697 = !DILocation(line: 901, column: 29, scope: !1577)
!1698 = !DILocation(line: 901, column: 32, scope: !1577)
!1699 = !DILocation(line: 901, column: 36, scope: !1577)
!1700 = !DILocation(line: 901, column: 13, scope: !1577)
!1701 = !DILocation(line: 900, column: 44, scope: !1577)
!1702 = !DILocation(line: 900, column: 10, scope: !1577)
!1703 = !DILocation(line: 902, column: 13, scope: !1577)
!1704 = !DILocation(line: 902, column: 20, scope: !1577)
!1705 = !DILocation(line: 902, column: 25, scope: !1577)
!1706 = !DILocation(line: 902, column: 10, scope: !1577)
!1707 = !DILocation(line: 905, column: 10, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 905, column: 3)
!1709 = !DILocation(line: 905, column: 8, scope: !1708)
!1710 = !DILocation(line: 905, column: 15, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1708, file: !3, line: 905, column: 3)
!1712 = !DILocation(line: 905, column: 19, scope: !1711)
!1713 = !DILocation(line: 905, column: 29, scope: !1711)
!1714 = !DILocation(line: 905, column: 17, scope: !1711)
!1715 = !DILocation(line: 905, column: 3, scope: !1708)
!1716 = !DILocalVariable(name: "r", scope: !1717, file: !3, line: 906, type: !250)
!1717 = distinct !DILexicalBlock(scope: !1711, file: !3, line: 905, column: 54)
!1718 = !DILocation(line: 906, column: 10, scope: !1717)
!1719 = !DILocation(line: 906, column: 15, scope: !1717)
!1720 = !DILocation(line: 906, column: 17, scope: !1717)
!1721 = !DILocation(line: 906, column: 14, scope: !1717)
!1722 = !DILocation(line: 906, column: 32, scope: !1717)
!1723 = !DILocation(line: 906, column: 42, scope: !1717)
!1724 = !DILocation(line: 906, column: 45, scope: !1717)
!1725 = !DILocation(line: 906, column: 24, scope: !1717)
!1726 = !DILocation(line: 906, column: 22, scope: !1717)
!1727 = !DILocalVariable(name: "t", scope: !1717, file: !3, line: 907, type: !250)
!1728 = !DILocation(line: 907, column: 10, scope: !1717)
!1729 = !DILocation(line: 907, column: 19, scope: !1717)
!1730 = !DILocation(line: 907, column: 22, scope: !1717)
!1731 = !DILocation(line: 907, column: 14, scope: !1717)
!1732 = !DILocation(line: 910, column: 19, scope: !1717)
!1733 = !DILocation(line: 910, column: 27, scope: !1717)
!1734 = !DILocation(line: 910, column: 30, scope: !1717)
!1735 = !DILocation(line: 910, column: 34, scope: !1717)
!1736 = !DILocation(line: 910, column: 42, scope: !1717)
!1737 = !DILocation(line: 910, column: 45, scope: !1717)
!1738 = !DILocation(line: 910, column: 49, scope: !1717)
!1739 = !DILocation(line: 911, column: 19, scope: !1717)
!1740 = !DILocation(line: 911, column: 27, scope: !1717)
!1741 = !DILocation(line: 911, column: 30, scope: !1717)
!1742 = !DILocation(line: 911, column: 34, scope: !1717)
!1743 = !DILocation(line: 911, column: 38, scope: !1717)
!1744 = !DILocation(line: 910, column: 4, scope: !1717)
!1745 = !DILocation(line: 914, column: 19, scope: !1717)
!1746 = !DILocation(line: 914, column: 27, scope: !1717)
!1747 = !DILocation(line: 914, column: 30, scope: !1717)
!1748 = !DILocation(line: 915, column: 19, scope: !1717)
!1749 = !DILocation(line: 915, column: 28, scope: !1717)
!1750 = !DILocation(line: 915, column: 31, scope: !1717)
!1751 = !DILocation(line: 915, column: 35, scope: !1717)
!1752 = !DILocation(line: 916, column: 19, scope: !1717)
!1753 = !DILocation(line: 916, column: 28, scope: !1717)
!1754 = !DILocation(line: 916, column: 31, scope: !1717)
!1755 = !DILocation(line: 916, column: 35, scope: !1717)
!1756 = !DILocation(line: 916, column: 43, scope: !1717)
!1757 = !DILocation(line: 914, column: 4, scope: !1717)
!1758 = !DILocation(line: 919, column: 11, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 919, column: 4)
!1760 = !DILocation(line: 919, column: 9, scope: !1759)
!1761 = !DILocation(line: 919, column: 16, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 919, column: 4)
!1763 = !DILocation(line: 919, column: 20, scope: !1762)
!1764 = !DILocation(line: 919, column: 18, scope: !1762)
!1765 = !DILocation(line: 919, column: 4, scope: !1759)
!1766 = !DILocalVariable(name: "weight", scope: !1767, file: !3, line: 920, type: !250)
!1767 = distinct !DILexicalBlock(scope: !1762, file: !3, line: 919, column: 36)
!1768 = !DILocation(line: 920, column: 11, scope: !1767)
!1769 = !DILocation(line: 922, column: 11, scope: !1767)
!1770 = !DILocation(line: 922, column: 19, scope: !1767)
!1771 = !DILocation(line: 922, column: 8, scope: !1767)
!1772 = !DILocation(line: 923, column: 22, scope: !1767)
!1773 = !DILocation(line: 923, column: 26, scope: !1767)
!1774 = !DILocation(line: 923, column: 30, scope: !1767)
!1775 = !DILocation(line: 923, column: 34, scope: !1767)
!1776 = !DILocation(line: 923, column: 38, scope: !1767)
!1777 = !DILocation(line: 923, column: 14, scope: !1767)
!1778 = !DILocation(line: 923, column: 12, scope: !1767)
!1779 = !DILocation(line: 925, column: 9, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 925, column: 9)
!1781 = !DILocation(line: 925, column: 16, scope: !1780)
!1782 = !DILocation(line: 925, column: 9, scope: !1767)
!1783 = !DILocation(line: 926, column: 32, scope: !1780)
!1784 = !DILocation(line: 926, column: 41, scope: !1780)
!1785 = !DILocation(line: 926, column: 45, scope: !1780)
!1786 = !DILocation(line: 926, column: 49, scope: !1780)
!1787 = !DILocation(line: 926, column: 57, scope: !1780)
!1788 = !DILocation(line: 926, column: 6, scope: !1780)
!1789 = !DILocation(line: 927, column: 4, scope: !1767)
!1790 = !DILocation(line: 919, column: 32, scope: !1762)
!1791 = !DILocation(line: 919, column: 4, scope: !1762)
!1792 = distinct !{!1792, !1765, !1793}
!1793 = !DILocation(line: 927, column: 4, scope: !1759)
!1794 = !DILocation(line: 929, column: 18, scope: !1717)
!1795 = !DILocation(line: 929, column: 4, scope: !1717)
!1796 = !DILocation(line: 929, column: 13, scope: !1717)
!1797 = !DILocation(line: 929, column: 16, scope: !1717)
!1798 = !DILocation(line: 930, column: 18, scope: !1717)
!1799 = !DILocation(line: 930, column: 4, scope: !1717)
!1800 = !DILocation(line: 930, column: 13, scope: !1717)
!1801 = !DILocation(line: 930, column: 16, scope: !1717)
!1802 = !DILocation(line: 931, column: 8, scope: !1717)
!1803 = !DILocation(line: 931, column: 6, scope: !1717)
!1804 = !DILocation(line: 932, column: 3, scope: !1717)
!1805 = !DILocation(line: 905, column: 34, scope: !1711)
!1806 = !DILocation(line: 905, column: 39, scope: !1711)
!1807 = !DILocation(line: 905, column: 50, scope: !1711)
!1808 = !DILocation(line: 905, column: 3, scope: !1711)
!1809 = distinct !{!1809, !1715, !1810}
!1810 = !DILocation(line: 932, column: 3, scope: !1708)
!1811 = !DILocation(line: 934, column: 7, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 934, column: 7)
!1813 = !DILocation(line: 934, column: 7, scope: !1577)
!1814 = !DILocation(line: 935, column: 4, scope: !1812)
!1815 = !DILocation(line: 935, column: 14, scope: !1812)
!1816 = !DILocation(line: 938, column: 17, scope: !1577)
!1817 = !DILocation(line: 938, column: 3, scope: !1577)
!1818 = !DILocation(line: 938, column: 12, scope: !1577)
!1819 = !DILocation(line: 938, column: 15, scope: !1577)
!1820 = !DILocation(line: 939, column: 17, scope: !1577)
!1821 = !DILocation(line: 939, column: 20, scope: !1577)
!1822 = !DILocation(line: 939, column: 3, scope: !1577)
!1823 = !DILocation(line: 939, column: 12, scope: !1577)
!1824 = !DILocation(line: 939, column: 15, scope: !1577)
!1825 = !DILocation(line: 940, column: 10, scope: !1577)
!1826 = !DILocation(line: 941, column: 2, scope: !1577)
!1827 = !DILocation(line: 865, column: 49, scope: !1572)
!1828 = !DILocation(line: 865, column: 2, scope: !1572)
!1829 = distinct !{!1829, !1575, !1830}
!1830 = !DILocation(line: 941, column: 2, scope: !1567)
!1831 = !DILocation(line: 943, column: 2, scope: !1381)
!1832 = !DILocation(line: 943, column: 12, scope: !1381)
!1833 = !DILocation(line: 945, column: 9, scope: !1381)
!1834 = !DILocation(line: 945, column: 2, scope: !1381)
!1835 = distinct !DISubprogram(name: "base_skin", scope: !3, file: !3, line: 1780, type: !1836, scopeLine: 1782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!727, !727, !223}
!1838 = !DILocalVariable(name: "origdm", arg: 1, scope: !1835, file: !3, line: 1780, type: !727)
!1839 = !DILocation(line: 1780, column: 44, scope: !1835)
!1840 = !DILocalVariable(name: "smd", arg: 2, scope: !1835, file: !3, line: 1781, type: !223)
!1841 = !DILocation(line: 1781, column: 49, scope: !1835)
!1842 = !DILocalVariable(name: "result", scope: !1835, file: !3, line: 1783, type: !727)
!1843 = !DILocation(line: 1783, column: 15, scope: !1835)
!1844 = !DILocalVariable(name: "nodes", scope: !1835, file: !3, line: 1784, type: !1389)
!1845 = !DILocation(line: 1784, column: 13, scope: !1835)
!1846 = !DILocalVariable(name: "bm", scope: !1835, file: !3, line: 1785, type: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !160, line: 246, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !160, line: 186, size: 8064, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1866, !1868, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1849, file: !160, line: 187, baseType: !207, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1849, file: !160, line: 187, baseType: !207, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1849, file: !160, line: 187, baseType: !207, size: 32, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1849, file: !160, line: 187, baseType: !207, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !1849, file: !160, line: 188, baseType: !207, size: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !1849, file: !160, line: 188, baseType: !207, size: 32, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !1849, file: !160, line: 188, baseType: !207, size: 32, offset: 192)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !1849, file: !160, line: 193, baseType: !240, size: 8, offset: 224)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !1849, file: !160, line: 197, baseType: !240, size: 8, offset: 232)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !1849, file: !160, line: 201, baseType: !688, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !1849, file: !160, line: 201, baseType: !688, size: 64, offset: 320)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !1849, file: !160, line: 201, baseType: !688, size: 64, offset: 384)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !1849, file: !160, line: 201, baseType: !688, size: 64, offset: 448)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1849, file: !160, line: 208, baseType: !1865, size: 64, offset: 512)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !1849, file: !160, line: 209, baseType: !1867, size: 64, offset: 576)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !1849, file: !160, line: 210, baseType: !1869, size: 64, offset: 640)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !1849, file: !160, line: 213, baseType: !207, size: 32, offset: 704)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !1849, file: !160, line: 214, baseType: !207, size: 32, offset: 736)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !1849, file: !160, line: 215, baseType: !207, size: 32, offset: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !1849, file: !160, line: 218, baseType: !688, size: 64, offset: 832)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !1849, file: !160, line: 218, baseType: !688, size: 64, offset: 896)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !1849, file: !160, line: 218, baseType: !688, size: 64, offset: 960)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !1849, file: !160, line: 220, baseType: !207, size: 32, offset: 1024)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !1849, file: !160, line: 221, baseType: !1878, size: 64, offset: 1088)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !110, line: 190, size: 10496, elements: !1880)
!1880 = !{!1881, !1913, !1914, !1918, !1921, !1922, !1924}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !1879, file: !110, line: 191, baseType: !1882, size: 5120)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 5120, elements: !1911)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !110, line: 147, size: 320, elements: !1884)
!1884 = !{!1885, !1886, !1888, !1898, !1899}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !1883, file: !110, line: 148, baseType: !1276, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !1883, file: !110, line: 149, baseType: !1887, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !110, line: 112, baseType: !109)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !1883, file: !110, line: 150, baseType: !1889, size: 32, offset: 96)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !110, line: 142, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !110, line: 138, size: 32, elements: !1891)
!1891 = !{!1892, !1894, !1896}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1890, file: !110, line: 139, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !110, line: 122, baseType: !120)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1890, file: !110, line: 140, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !110, line: 136, baseType: !126)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1890, file: !110, line: 141, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !110, line: 130, baseType: !132)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1883, file: !110, line: 152, baseType: !207, size: 32, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1883, file: !110, line: 162, baseType: !1900, size: 128, offset: 192)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1883, file: !110, line: 155, size: 128, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1900, file: !110, line: 156, baseType: !207, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1900, file: !110, line: 157, baseType: !250, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1900, file: !110, line: 158, baseType: !260, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1900, file: !110, line: 159, baseType: !290, size: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1900, file: !110, line: 160, baseType: !340, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1900, file: !110, line: 161, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1910, line: 48, baseType: !485)
!1910 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1911 = !{!1912}
!1912 = !DISubrange(count: 16)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !1879, file: !110, line: 192, baseType: !1882, size: 5120, offset: 5120)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1879, file: !110, line: 193, baseType: !1915, size: 64, offset: 10240)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{null, !1847, !1878}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !1879, file: !110, line: 194, baseType: !1919, size: 64, offset: 10304)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !110, line: 194, flags: DIFlagFwdDecl)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1879, file: !110, line: 195, baseType: !207, size: 32, offset: 10368)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !1879, file: !110, line: 196, baseType: !1923, size: 32, offset: 10400)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !110, line: 188, baseType: !140)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1879, file: !110, line: 197, baseType: !207, size: 32, offset: 10432)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1849, file: !160, line: 223, baseType: !662, size: 1600, offset: 1152)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1849, file: !160, line: 223, baseType: !662, size: 1600, offset: 2752)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1849, file: !160, line: 223, baseType: !662, size: 1600, offset: 4352)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1849, file: !160, line: 223, baseType: !662, size: 1600, offset: 5952)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1849, file: !160, line: 233, baseType: !288, size: 16, offset: 7552)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1849, file: !160, line: 236, baseType: !207, size: 32, offset: 7584)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !1849, file: !160, line: 238, baseType: !207, size: 32, offset: 7616)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !1849, file: !160, line: 238, baseType: !207, size: 32, offset: 7648)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !1849, file: !160, line: 239, baseType: !422, size: 128, offset: 7680)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1849, file: !160, line: 241, baseType: !335, size: 64, offset: 7808)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !1849, file: !160, line: 243, baseType: !422, size: 128, offset: 7872)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !1849, file: !160, line: 245, baseType: !260, size: 64, offset: 8000)
!1937 = !DILocation(line: 1785, column: 9, scope: !1835)
!1938 = !DILocalVariable(name: "emat", scope: !1835, file: !3, line: 1786, type: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMat", file: !3, line: 89, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 84, size: 320, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1941, file: !3, line: 85, baseType: !1202, size: 288)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !1941, file: !3, line: 88, baseType: !207, size: 32, offset: 288)
!1945 = !DILocation(line: 1786, column: 8, scope: !1835)
!1946 = !DILocalVariable(name: "skin_nodes", scope: !1835, file: !3, line: 1787, type: !1947)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SkinNode", file: !3, line: 126, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 118, size: 2560, elements: !1950)
!1950 = !{!1951, !1971, !1972, !1974}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1949, file: !3, line: 119, baseType: !1952, size: 2432)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1953, size: 2432, elements: !255)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "Frame", file: !3, line: 115, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Frame", file: !3, line: 98, size: 1216, elements: !1955)
!1955 = !{!1956, !1958, !1961, !1968, !1970}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !1954, file: !3, line: 100, baseType: !1957, size: 256)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 256, elements: !563)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1954, file: !3, line: 102, baseType: !1959, size: 384, offset: 256)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 384, elements: !1960)
!1960 = !{!564, !292}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "merge", scope: !1954, file: !3, line: 109, baseType: !1962, size: 512, offset: 640)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 512, elements: !563)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1954, file: !3, line: 105, size: 128, elements: !1964)
!1964 = !{!1965, !1967}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1963, file: !3, line: 107, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "corner", scope: !1963, file: !3, line: 108, baseType: !207, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "inside_hull", scope: !1954, file: !3, line: 112, baseType: !1969, size: 32, offset: 1152)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 32, elements: !563)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !1954, file: !3, line: 114, baseType: !984, size: 8, offset: 1184)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "totframe", scope: !1949, file: !3, line: 120, baseType: !207, size: 32, offset: 2432)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1949, file: !3, line: 122, baseType: !1973, size: 32, offset: 2464)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SkinNodeFlag", file: !3, line: 96, baseType: !147)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "seam_edges", scope: !1949, file: !3, line: 125, baseType: !1975, size: 64, offset: 2496)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 64, elements: !255)
!1976 = !DILocation(line: 1787, column: 12, scope: !1835)
!1977 = !DILocalVariable(name: "emap", scope: !1835, file: !3, line: 1788, type: !1978)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !968, line: 99, baseType: !967)
!1980 = !DILocation(line: 1788, column: 15, scope: !1835)
!1981 = !DILocalVariable(name: "emapmem", scope: !1835, file: !3, line: 1789, type: !893)
!1982 = !DILocation(line: 1789, column: 7, scope: !1835)
!1983 = !DILocalVariable(name: "mvert", scope: !1835, file: !3, line: 1790, type: !1399)
!1984 = !DILocation(line: 1790, column: 9, scope: !1835)
!1985 = !DILocalVariable(name: "medge", scope: !1835, file: !3, line: 1791, type: !1405)
!1986 = !DILocation(line: 1791, column: 9, scope: !1835)
!1987 = !DILocalVariable(name: "dvert", scope: !1835, file: !3, line: 1792, type: !1413)
!1988 = !DILocation(line: 1792, column: 15, scope: !1835)
!1989 = !DILocalVariable(name: "totvert", scope: !1835, file: !3, line: 1793, type: !207)
!1990 = !DILocation(line: 1793, column: 6, scope: !1835)
!1991 = !DILocalVariable(name: "totedge", scope: !1835, file: !3, line: 1793, type: !207)
!1992 = !DILocation(line: 1793, column: 15, scope: !1835)
!1993 = !DILocation(line: 1795, column: 32, scope: !1835)
!1994 = !DILocation(line: 1795, column: 40, scope: !1835)
!1995 = !DILocation(line: 1795, column: 10, scope: !1835)
!1996 = !DILocation(line: 1795, column: 8, scope: !1835)
!1997 = !DILocation(line: 1797, column: 10, scope: !1835)
!1998 = !DILocation(line: 1797, column: 18, scope: !1835)
!1999 = !DILocation(line: 1797, column: 31, scope: !1835)
!2000 = !DILocation(line: 1797, column: 8, scope: !1835)
!2001 = !DILocation(line: 1798, column: 10, scope: !1835)
!2002 = !DILocation(line: 1798, column: 18, scope: !1835)
!2003 = !DILocation(line: 1798, column: 35, scope: !1835)
!2004 = !DILocation(line: 1798, column: 8, scope: !1835)
!2005 = !DILocation(line: 1799, column: 10, scope: !1835)
!2006 = !DILocation(line: 1799, column: 18, scope: !1835)
!2007 = !DILocation(line: 1799, column: 31, scope: !1835)
!2008 = !DILocation(line: 1799, column: 8, scope: !1835)
!2009 = !DILocation(line: 1800, column: 12, scope: !1835)
!2010 = !DILocation(line: 1800, column: 20, scope: !1835)
!2011 = !DILocation(line: 1800, column: 32, scope: !1835)
!2012 = !DILocation(line: 1800, column: 10, scope: !1835)
!2013 = !DILocation(line: 1801, column: 12, scope: !1835)
!2014 = !DILocation(line: 1801, column: 20, scope: !1835)
!2015 = !DILocation(line: 1801, column: 32, scope: !1835)
!2016 = !DILocation(line: 1801, column: 10, scope: !1835)
!2017 = !DILocation(line: 1803, column: 49, scope: !1835)
!2018 = !DILocation(line: 1803, column: 56, scope: !1835)
!2019 = !DILocation(line: 1803, column: 65, scope: !1835)
!2020 = !DILocation(line: 1803, column: 2, scope: !1835)
!2021 = !DILocation(line: 1805, column: 25, scope: !1835)
!2022 = !DILocation(line: 1805, column: 32, scope: !1835)
!2023 = !DILocation(line: 1805, column: 39, scope: !1835)
!2024 = !DILocation(line: 1805, column: 48, scope: !1835)
!2025 = !DILocation(line: 1805, column: 55, scope: !1835)
!2026 = !DILocation(line: 1805, column: 61, scope: !1835)
!2027 = !DILocation(line: 1805, column: 9, scope: !1835)
!2028 = !DILocation(line: 1805, column: 7, scope: !1835)
!2029 = !DILocation(line: 1806, column: 28, scope: !1835)
!2030 = !DILocation(line: 1806, column: 35, scope: !1835)
!2031 = !DILocation(line: 1806, column: 44, scope: !1835)
!2032 = !DILocation(line: 1806, column: 51, scope: !1835)
!2033 = !DILocation(line: 1806, column: 57, scope: !1835)
!2034 = !DILocation(line: 1806, column: 15, scope: !1835)
!2035 = !DILocation(line: 1806, column: 13, scope: !1835)
!2036 = !DILocation(line: 1807, column: 2, scope: !1835)
!2037 = !DILocation(line: 1807, column: 12, scope: !1835)
!2038 = !DILocation(line: 1808, column: 7, scope: !1835)
!2039 = !DILocation(line: 1810, column: 18, scope: !1835)
!2040 = !DILocation(line: 1810, column: 30, scope: !1835)
!2041 = !DILocation(line: 1810, column: 39, scope: !1835)
!2042 = !DILocation(line: 1810, column: 45, scope: !1835)
!2043 = !DILocation(line: 1810, column: 52, scope: !1835)
!2044 = !DILocation(line: 1810, column: 61, scope: !1835)
!2045 = !DILocation(line: 1810, column: 68, scope: !1835)
!2046 = !DILocation(line: 1810, column: 7, scope: !1835)
!2047 = !DILocation(line: 1810, column: 5, scope: !1835)
!2048 = !DILocation(line: 1812, column: 2, scope: !1835)
!2049 = !DILocation(line: 1812, column: 12, scope: !1835)
!2050 = !DILocation(line: 1813, column: 2, scope: !1835)
!2051 = !DILocation(line: 1813, column: 12, scope: !1835)
!2052 = !DILocation(line: 1814, column: 2, scope: !1835)
!2053 = !DILocation(line: 1814, column: 12, scope: !1835)
!2054 = !DILocation(line: 1816, column: 7, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !1835, file: !3, line: 1816, column: 6)
!2056 = !DILocation(line: 1816, column: 6, scope: !1835)
!2057 = !DILocation(line: 1817, column: 3, scope: !2055)
!2058 = !DILocation(line: 1819, column: 27, scope: !1835)
!2059 = !DILocation(line: 1819, column: 11, scope: !1835)
!2060 = !DILocation(line: 1819, column: 9, scope: !1835)
!2061 = !DILocation(line: 1820, column: 15, scope: !1835)
!2062 = !DILocation(line: 1820, column: 2, scope: !1835)
!2063 = !DILocation(line: 1822, column: 18, scope: !1835)
!2064 = !DILocation(line: 1822, column: 2, scope: !1835)
!2065 = !DILocation(line: 1823, column: 2, scope: !1835)
!2066 = !DILocation(line: 1823, column: 10, scope: !1835)
!2067 = !DILocation(line: 1823, column: 16, scope: !1835)
!2068 = !DILocation(line: 1825, column: 24, scope: !1835)
!2069 = !DILocation(line: 1825, column: 2, scope: !1835)
!2070 = !DILocation(line: 1827, column: 9, scope: !1835)
!2071 = !DILocation(line: 1827, column: 2, scope: !1835)
!2072 = !DILocation(line: 1828, column: 1, scope: !1835)
!2073 = distinct !DISubprogram(name: "calc_edge_subdivisions", scope: !3, file: !3, line: 759, type: !2074, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!207, !2076, !2078, !2080, !2082}
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!2084 = !DILocalVariable(name: "mvert", arg: 1, scope: !2073, file: !3, line: 759, type: !2076)
!2085 = !DILocation(line: 759, column: 48, scope: !2073)
!2086 = !DILocalVariable(name: "nodes", arg: 2, scope: !2073, file: !3, line: 759, type: !2078)
!2087 = !DILocation(line: 759, column: 72, scope: !2073)
!2088 = !DILocalVariable(name: "e", arg: 3, scope: !2073, file: !3, line: 760, type: !2080)
!2089 = !DILocation(line: 760, column: 48, scope: !2073)
!2090 = !DILocalVariable(name: "degree", arg: 4, scope: !2073, file: !3, line: 760, type: !2082)
!2091 = !DILocation(line: 760, column: 62, scope: !2073)
!2092 = !DILocalVariable(name: "evs", scope: !2073, file: !3, line: 765, type: !2093)
!2093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 128, elements: !255)
!2094 = !DILocation(line: 765, column: 19, scope: !2073)
!2095 = !DILocation(line: 765, column: 28, scope: !2073)
!2096 = !DILocation(line: 765, column: 30, scope: !2073)
!2097 = !DILocation(line: 765, column: 36, scope: !2073)
!2098 = !DILocation(line: 765, column: 39, scope: !2073)
!2099 = !DILocation(line: 765, column: 45, scope: !2073)
!2100 = !DILocation(line: 765, column: 51, scope: !2073)
!2101 = !DILocation(line: 765, column: 54, scope: !2073)
!2102 = !DILocalVariable(name: "avg_radius", scope: !2073, file: !3, line: 766, type: !250)
!2103 = !DILocation(line: 766, column: 8, scope: !2073)
!2104 = !DILocalVariable(name: "v1_branch", scope: !2073, file: !3, line: 767, type: !1095)
!2105 = !DILocation(line: 767, column: 13, scope: !2073)
!2106 = !DILocation(line: 767, column: 25, scope: !2073)
!2107 = !DILocation(line: 767, column: 32, scope: !2073)
!2108 = !DILocation(line: 767, column: 35, scope: !2073)
!2109 = !DILocation(line: 767, column: 39, scope: !2073)
!2110 = !DILocalVariable(name: "v2_branch", scope: !2073, file: !3, line: 768, type: !1095)
!2111 = !DILocation(line: 768, column: 13, scope: !2073)
!2112 = !DILocation(line: 768, column: 25, scope: !2073)
!2113 = !DILocation(line: 768, column: 32, scope: !2073)
!2114 = !DILocation(line: 768, column: 35, scope: !2073)
!2115 = !DILocation(line: 768, column: 39, scope: !2073)
!2116 = !DILocalVariable(name: "num_subdivisions", scope: !2073, file: !3, line: 769, type: !207)
!2117 = !DILocation(line: 769, column: 6, scope: !2073)
!2118 = !DILocation(line: 773, column: 7, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2073, file: !3, line: 773, column: 6)
!2120 = !DILocation(line: 773, column: 17, scope: !2119)
!2121 = !DILocation(line: 773, column: 21, scope: !2119)
!2122 = !DILocation(line: 773, column: 29, scope: !2119)
!2123 = !DILocation(line: 773, column: 34, scope: !2119)
!2124 = !DILocation(line: 773, column: 55, scope: !2119)
!2125 = !DILocation(line: 774, column: 7, scope: !2119)
!2126 = !DILocation(line: 774, column: 17, scope: !2119)
!2127 = !DILocation(line: 774, column: 21, scope: !2119)
!2128 = !DILocation(line: 774, column: 29, scope: !2119)
!2129 = !DILocation(line: 774, column: 34, scope: !2119)
!2130 = !DILocation(line: 773, column: 6, scope: !2073)
!2131 = !DILocation(line: 776, column: 7, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 776, column: 7)
!2133 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 775, column: 2)
!2134 = !DILocation(line: 776, column: 17, scope: !2132)
!2135 = !DILocation(line: 776, column: 20, scope: !2132)
!2136 = !DILocation(line: 776, column: 7, scope: !2133)
!2137 = !DILocation(line: 777, column: 4, scope: !2132)
!2138 = !DILocation(line: 779, column: 4, scope: !2132)
!2139 = !DILocation(line: 782, column: 23, scope: !2073)
!2140 = !DILocation(line: 782, column: 31, scope: !2073)
!2141 = !DILocation(line: 782, column: 15, scope: !2073)
!2142 = !DILocation(line: 782, column: 49, scope: !2073)
!2143 = !DILocation(line: 782, column: 57, scope: !2073)
!2144 = !DILocation(line: 782, column: 41, scope: !2073)
!2145 = !DILocation(line: 782, column: 39, scope: !2073)
!2146 = !DILocation(line: 782, column: 13, scope: !2073)
!2147 = !DILocation(line: 784, column: 6, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2073, file: !3, line: 784, column: 6)
!2149 = !DILocation(line: 784, column: 17, scope: !2148)
!2150 = !DILocation(line: 784, column: 6, scope: !2073)
!2151 = !DILocalVariable(name: "num_subdivisions_fl", scope: !2152, file: !3, line: 786, type: !250)
!2152 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 784, column: 26)
!2153 = !DILocation(line: 786, column: 9, scope: !2152)
!2154 = !DILocalVariable(name: "edge_len", scope: !2152, file: !3, line: 787, type: !733)
!2155 = !DILocation(line: 787, column: 15, scope: !2152)
!2156 = !DILocation(line: 787, column: 35, scope: !2152)
!2157 = !DILocation(line: 787, column: 41, scope: !2152)
!2158 = !DILocation(line: 787, column: 44, scope: !2152)
!2159 = !DILocation(line: 787, column: 48, scope: !2152)
!2160 = !DILocation(line: 787, column: 52, scope: !2152)
!2161 = !DILocation(line: 787, column: 58, scope: !2152)
!2162 = !DILocation(line: 787, column: 61, scope: !2152)
!2163 = !DILocation(line: 787, column: 65, scope: !2152)
!2164 = !DILocation(line: 787, column: 26, scope: !2152)
!2165 = !DILocation(line: 788, column: 26, scope: !2152)
!2166 = !DILocation(line: 788, column: 37, scope: !2152)
!2167 = !DILocation(line: 788, column: 35, scope: !2152)
!2168 = !DILocation(line: 788, column: 23, scope: !2152)
!2169 = !DILocation(line: 789, column: 7, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2152, file: !3, line: 789, column: 7)
!2171 = !DILocation(line: 789, column: 27, scope: !2170)
!2172 = !DILocation(line: 789, column: 7, scope: !2152)
!2173 = !DILocation(line: 790, column: 28, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 789, column: 51)
!2175 = !DILocation(line: 790, column: 23, scope: !2174)
!2176 = !DILocation(line: 790, column: 21, scope: !2174)
!2177 = !DILocation(line: 791, column: 3, scope: !2174)
!2178 = !DILocation(line: 793, column: 21, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 792, column: 8)
!2180 = !DILocation(line: 795, column: 2, scope: !2152)
!2181 = !DILocation(line: 797, column: 20, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 796, column: 7)
!2183 = !DILocation(line: 802, column: 6, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2073, file: !3, line: 802, column: 6)
!2185 = !DILocation(line: 802, column: 23, scope: !2184)
!2186 = !DILocation(line: 802, column: 27, scope: !2184)
!2187 = !DILocation(line: 802, column: 30, scope: !2184)
!2188 = !DILocation(line: 802, column: 40, scope: !2184)
!2189 = !DILocation(line: 802, column: 43, scope: !2184)
!2190 = !DILocation(line: 802, column: 6, scope: !2073)
!2191 = !DILocation(line: 803, column: 20, scope: !2184)
!2192 = !DILocation(line: 803, column: 3, scope: !2184)
!2193 = !DILocation(line: 805, column: 9, scope: !2073)
!2194 = !DILocation(line: 805, column: 2, scope: !2073)
!2195 = !DILocation(line: 808, column: 1, scope: !2073)
!2196 = distinct !DISubprogram(name: "half_v2", scope: !3, file: !3, line: 476, type: !2197, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!250, !923}
!2199 = !DILocalVariable(name: "v", arg: 1, scope: !2196, file: !3, line: 476, type: !923)
!2200 = !DILocation(line: 476, column: 34, scope: !2196)
!2201 = !DILocation(line: 478, column: 10, scope: !2196)
!2202 = !DILocation(line: 478, column: 17, scope: !2196)
!2203 = !DILocation(line: 478, column: 15, scope: !2196)
!2204 = !DILocation(line: 478, column: 23, scope: !2196)
!2205 = !DILocation(line: 478, column: 2, scope: !2196)
!2206 = distinct !DISubprogram(name: "interpf", scope: !2207, file: !2207, line: 106, type: !2208, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2207 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!250, !250, !250, !250}
!2210 = !DILocalVariable(name: "target", arg: 1, scope: !2206, file: !2207, line: 106, type: !250)
!2211 = !DILocation(line: 106, column: 29, scope: !2206)
!2212 = !DILocalVariable(name: "origin", arg: 2, scope: !2206, file: !2207, line: 106, type: !250)
!2213 = !DILocation(line: 106, column: 43, scope: !2206)
!2214 = !DILocalVariable(name: "fac", arg: 3, scope: !2206, file: !2207, line: 106, type: !250)
!2215 = !DILocation(line: 106, column: 57, scope: !2206)
!2216 = !DILocation(line: 108, column: 10, scope: !2206)
!2217 = !DILocation(line: 108, column: 16, scope: !2206)
!2218 = !DILocation(line: 108, column: 14, scope: !2206)
!2219 = !DILocation(line: 108, column: 34, scope: !2206)
!2220 = !DILocation(line: 108, column: 32, scope: !2206)
!2221 = !DILocation(line: 108, column: 41, scope: !2206)
!2222 = !DILocation(line: 108, column: 39, scope: !2206)
!2223 = !DILocation(line: 108, column: 24, scope: !2206)
!2224 = !DILocation(line: 108, column: 2, scope: !2206)
!2225 = distinct !DISubprogram(name: "len_v3v3", scope: !2226, file: !2226, line: 759, type: !2227, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2226 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!250, !923, !923}
!2229 = !DILocalVariable(name: "a", arg: 1, scope: !2225, file: !2226, line: 759, type: !923)
!2230 = !DILocation(line: 759, column: 36, scope: !2225)
!2231 = !DILocalVariable(name: "b", arg: 2, scope: !2225, file: !2226, line: 759, type: !923)
!2232 = !DILocation(line: 759, column: 54, scope: !2225)
!2233 = !DILocalVariable(name: "d", scope: !2225, file: !2226, line: 761, type: !290)
!2234 = !DILocation(line: 761, column: 8, scope: !2225)
!2235 = !DILocation(line: 763, column: 14, scope: !2225)
!2236 = !DILocation(line: 763, column: 17, scope: !2225)
!2237 = !DILocation(line: 763, column: 20, scope: !2225)
!2238 = !DILocation(line: 763, column: 2, scope: !2225)
!2239 = !DILocation(line: 764, column: 16, scope: !2225)
!2240 = !DILocation(line: 764, column: 9, scope: !2225)
!2241 = !DILocation(line: 764, column: 2, scope: !2225)
!2242 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2226, file: !2226, line: 357, type: !2243, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{null, !949, !923, !923}
!2245 = !DILocalVariable(name: "r", arg: 1, scope: !2242, file: !2226, line: 357, type: !949)
!2246 = !DILocation(line: 357, column: 32, scope: !2242)
!2247 = !DILocalVariable(name: "a", arg: 2, scope: !2242, file: !2226, line: 357, type: !923)
!2248 = !DILocation(line: 357, column: 50, scope: !2242)
!2249 = !DILocalVariable(name: "b", arg: 3, scope: !2242, file: !2226, line: 357, type: !923)
!2250 = !DILocation(line: 357, column: 68, scope: !2242)
!2251 = !DILocation(line: 359, column: 9, scope: !2242)
!2252 = !DILocation(line: 359, column: 16, scope: !2242)
!2253 = !DILocation(line: 359, column: 14, scope: !2242)
!2254 = !DILocation(line: 359, column: 2, scope: !2242)
!2255 = !DILocation(line: 359, column: 7, scope: !2242)
!2256 = !DILocation(line: 360, column: 9, scope: !2242)
!2257 = !DILocation(line: 360, column: 16, scope: !2242)
!2258 = !DILocation(line: 360, column: 14, scope: !2242)
!2259 = !DILocation(line: 360, column: 2, scope: !2242)
!2260 = !DILocation(line: 360, column: 7, scope: !2242)
!2261 = !DILocation(line: 361, column: 9, scope: !2242)
!2262 = !DILocation(line: 361, column: 16, scope: !2242)
!2263 = !DILocation(line: 361, column: 14, scope: !2242)
!2264 = !DILocation(line: 361, column: 2, scope: !2242)
!2265 = !DILocation(line: 361, column: 7, scope: !2242)
!2266 = !DILocation(line: 362, column: 1, scope: !2242)
!2267 = distinct !DISubprogram(name: "len_v3", scope: !2226, file: !2226, line: 714, type: !2197, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2268 = !DILocalVariable(name: "a", arg: 1, scope: !2267, file: !2226, line: 714, type: !923)
!2269 = !DILocation(line: 714, column: 34, scope: !2267)
!2270 = !DILocation(line: 716, column: 24, scope: !2267)
!2271 = !DILocation(line: 716, column: 27, scope: !2267)
!2272 = !DILocation(line: 716, column: 15, scope: !2267)
!2273 = !DILocation(line: 716, column: 9, scope: !2267)
!2274 = !DILocation(line: 716, column: 2, scope: !2267)
!2275 = distinct !DISubprogram(name: "dot_v3v3", scope: !2226, file: !2226, line: 619, type: !2227, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2276 = !DILocalVariable(name: "a", arg: 1, scope: !2275, file: !2226, line: 619, type: !923)
!2277 = !DILocation(line: 619, column: 36, scope: !2275)
!2278 = !DILocalVariable(name: "b", arg: 2, scope: !2275, file: !2226, line: 619, type: !923)
!2279 = !DILocation(line: 619, column: 54, scope: !2275)
!2280 = !DILocation(line: 621, column: 9, scope: !2275)
!2281 = !DILocation(line: 621, column: 16, scope: !2275)
!2282 = !DILocation(line: 621, column: 14, scope: !2275)
!2283 = !DILocation(line: 621, column: 23, scope: !2275)
!2284 = !DILocation(line: 621, column: 30, scope: !2275)
!2285 = !DILocation(line: 621, column: 28, scope: !2275)
!2286 = !DILocation(line: 621, column: 21, scope: !2275)
!2287 = !DILocation(line: 621, column: 37, scope: !2275)
!2288 = !DILocation(line: 621, column: 44, scope: !2275)
!2289 = !DILocation(line: 621, column: 42, scope: !2275)
!2290 = !DILocation(line: 621, column: 35, scope: !2275)
!2291 = !DILocation(line: 621, column: 2, scope: !2275)
!2292 = distinct !DISubprogram(name: "build_edge_mats", scope: !3, file: !3, line: 704, type: !2293, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!1939, !2078, !2076, !207, !2080, !2295, !207}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1979)
!2297 = !DILocalVariable(name: "vs", arg: 1, scope: !2292, file: !3, line: 704, type: !2078)
!2298 = !DILocation(line: 704, column: 47, scope: !2292)
!2299 = !DILocalVariable(name: "mvert", arg: 2, scope: !2292, file: !3, line: 705, type: !2076)
!2300 = !DILocation(line: 705, column: 43, scope: !2292)
!2301 = !DILocalVariable(name: "totvert", arg: 3, scope: !2292, file: !3, line: 706, type: !207)
!2302 = !DILocation(line: 706, column: 34, scope: !2292)
!2303 = !DILocalVariable(name: "medge", arg: 4, scope: !2292, file: !3, line: 707, type: !2080)
!2304 = !DILocation(line: 707, column: 43, scope: !2292)
!2305 = !DILocalVariable(name: "emap", arg: 5, scope: !2292, file: !3, line: 708, type: !2295)
!2306 = !DILocation(line: 708, column: 49, scope: !2292)
!2307 = !DILocalVariable(name: "totedge", arg: 6, scope: !2292, file: !3, line: 709, type: !207)
!2308 = !DILocation(line: 709, column: 34, scope: !2292)
!2309 = !DILocalVariable(name: "stack", scope: !2292, file: !3, line: 711, type: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_Stack", file: !2312, line: 33, baseType: !2313)
!2312 = !DIFile(filename: "blender/source/blender/blenlib/BLI_stack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_Stack", file: !2312, line: 33, flags: DIFlagFwdDecl)
!2314 = !DILocation(line: 711, column: 13, scope: !2292)
!2315 = !DILocalVariable(name: "emat", scope: !2292, file: !3, line: 712, type: !1939)
!2316 = !DILocation(line: 712, column: 8, scope: !2292)
!2317 = !DILocalVariable(name: "stack_elem", scope: !2292, file: !3, line: 713, type: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeStackElem", file: !3, line: 649, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 645, size: 352, elements: !2320)
!2320 = !{!2321, !2322, !2323}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2319, file: !3, line: 646, baseType: !1202, size: 288)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "parent_v", scope: !2319, file: !3, line: 647, baseType: !207, size: 32, offset: 288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2319, file: !3, line: 648, baseType: !207, size: 32, offset: 320)
!2324 = !DILocation(line: 713, column: 16, scope: !2292)
!2325 = !DILocalVariable(name: "visited_e", scope: !2292, file: !3, line: 714, type: !257)
!2326 = !DILocation(line: 714, column: 14, scope: !2292)
!2327 = !DILocalVariable(name: "i", scope: !2292, file: !3, line: 715, type: !207)
!2328 = !DILocation(line: 715, column: 6, scope: !2292)
!2329 = !DILocalVariable(name: "v", scope: !2292, file: !3, line: 715, type: !207)
!2330 = !DILocation(line: 715, column: 9, scope: !2292)
!2331 = !DILocation(line: 717, column: 10, scope: !2292)
!2332 = !DILocation(line: 717, column: 8, scope: !2292)
!2333 = !DILocation(line: 719, column: 14, scope: !2292)
!2334 = !DILocation(line: 719, column: 12, scope: !2292)
!2335 = !DILocation(line: 720, column: 9, scope: !2292)
!2336 = !DILocation(line: 720, column: 36, scope: !2292)
!2337 = !DILocation(line: 720, column: 34, scope: !2292)
!2338 = !DILocation(line: 720, column: 7, scope: !2292)
!2339 = !DILocation(line: 724, column: 9, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 724, column: 2)
!2341 = !DILocation(line: 724, column: 7, scope: !2340)
!2342 = !DILocation(line: 724, column: 14, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 724, column: 2)
!2344 = !DILocation(line: 724, column: 18, scope: !2343)
!2345 = !DILocation(line: 724, column: 16, scope: !2343)
!2346 = !DILocation(line: 724, column: 2, scope: !2340)
!2347 = !DILocation(line: 725, column: 7, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 725, column: 7)
!2349 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 724, column: 32)
!2350 = !DILocation(line: 725, column: 10, scope: !2348)
!2351 = !DILocation(line: 725, column: 13, scope: !2348)
!2352 = !DILocation(line: 725, column: 18, scope: !2348)
!2353 = !DILocation(line: 725, column: 7, scope: !2349)
!2354 = !DILocation(line: 726, column: 8, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 726, column: 8)
!2356 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 725, column: 37)
!2357 = !DILocation(line: 726, column: 13, scope: !2355)
!2358 = !DILocation(line: 726, column: 16, scope: !2355)
!2359 = !DILocation(line: 726, column: 22, scope: !2355)
!2360 = !DILocation(line: 726, column: 8, scope: !2356)
!2361 = !DILocalVariable(name: "e", scope: !2362, file: !3, line: 727, type: !2080)
!2362 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 726, column: 28)
!2363 = !DILocation(line: 727, column: 18, scope: !2362)
!2364 = !DILocation(line: 727, column: 23, scope: !2362)
!2365 = !DILocation(line: 727, column: 29, scope: !2362)
!2366 = !DILocation(line: 727, column: 34, scope: !2362)
!2367 = !DILocation(line: 727, column: 37, scope: !2362)
!2368 = !DILocation(line: 728, column: 30, scope: !2362)
!2369 = !DILocation(line: 728, column: 19, scope: !2362)
!2370 = !DILocation(line: 728, column: 35, scope: !2362)
!2371 = !DILocation(line: 728, column: 41, scope: !2362)
!2372 = !DILocation(line: 728, column: 44, scope: !2362)
!2373 = !DILocation(line: 729, column: 19, scope: !2362)
!2374 = !DILocation(line: 729, column: 50, scope: !2362)
!2375 = !DILocation(line: 729, column: 53, scope: !2362)
!2376 = !DILocation(line: 729, column: 25, scope: !2362)
!2377 = !DILocation(line: 729, column: 57, scope: !2362)
!2378 = !DILocation(line: 728, column: 5, scope: !2362)
!2379 = !DILocation(line: 730, column: 27, scope: !2362)
!2380 = !DILocation(line: 730, column: 16, scope: !2362)
!2381 = !DILocation(line: 730, column: 25, scope: !2362)
!2382 = !DILocation(line: 733, column: 12, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 733, column: 5)
!2384 = !DILocation(line: 733, column: 10, scope: !2383)
!2385 = !DILocation(line: 733, column: 17, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 733, column: 5)
!2387 = !DILocation(line: 733, column: 21, scope: !2386)
!2388 = !DILocation(line: 733, column: 26, scope: !2386)
!2389 = !DILocation(line: 733, column: 29, scope: !2386)
!2390 = !DILocation(line: 733, column: 19, scope: !2386)
!2391 = !DILocation(line: 733, column: 5, scope: !2383)
!2392 = !DILocation(line: 734, column: 21, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2386, file: !3, line: 733, column: 41)
!2394 = !DILocation(line: 734, column: 26, scope: !2393)
!2395 = !DILocation(line: 734, column: 29, scope: !2393)
!2396 = !DILocation(line: 734, column: 37, scope: !2393)
!2397 = !DILocation(line: 734, column: 17, scope: !2393)
!2398 = !DILocation(line: 734, column: 19, scope: !2393)
!2399 = !DILocation(line: 735, column: 21, scope: !2393)
!2400 = !DILocation(line: 735, column: 28, scope: !2393)
!2401 = !DILocation(line: 735, column: 6, scope: !2393)
!2402 = !DILocation(line: 736, column: 5, scope: !2393)
!2403 = !DILocation(line: 733, column: 37, scope: !2386)
!2404 = !DILocation(line: 733, column: 5, scope: !2386)
!2405 = distinct !{!2405, !2391, !2406}
!2406 = !DILocation(line: 736, column: 5, scope: !2383)
!2407 = !DILocation(line: 737, column: 4, scope: !2362)
!2408 = !DILocation(line: 738, column: 3, scope: !2356)
!2409 = !DILocation(line: 739, column: 2, scope: !2349)
!2410 = !DILocation(line: 724, column: 28, scope: !2343)
!2411 = !DILocation(line: 724, column: 2, scope: !2343)
!2412 = distinct !{!2412, !2346, !2413}
!2413 = !DILocation(line: 739, column: 2, scope: !2340)
!2414 = !DILocation(line: 741, column: 2, scope: !2292)
!2415 = !DILocation(line: 741, column: 29, scope: !2292)
!2416 = !DILocation(line: 741, column: 10, scope: !2292)
!2417 = !DILocation(line: 741, column: 9, scope: !2292)
!2418 = !DILocation(line: 742, column: 21, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 741, column: 37)
!2420 = !DILocation(line: 742, column: 28, scope: !2419)
!2421 = !DILocation(line: 742, column: 39, scope: !2419)
!2422 = !DILocation(line: 742, column: 45, scope: !2419)
!2423 = !DILocation(line: 742, column: 51, scope: !2419)
!2424 = !DILocation(line: 742, column: 58, scope: !2419)
!2425 = !DILocation(line: 742, column: 62, scope: !2419)
!2426 = !DILocation(line: 742, column: 3, scope: !2419)
!2427 = distinct !{!2427, !2414, !2428}
!2428 = !DILocation(line: 743, column: 2, scope: !2292)
!2429 = !DILocation(line: 745, column: 2, scope: !2292)
!2430 = !DILocation(line: 745, column: 12, scope: !2292)
!2431 = !DILocation(line: 746, column: 17, scope: !2292)
!2432 = !DILocation(line: 746, column: 2, scope: !2292)
!2433 = !DILocation(line: 748, column: 9, scope: !2292)
!2434 = !DILocation(line: 748, column: 2, scope: !2292)
!2435 = distinct !DISubprogram(name: "build_frames", scope: !3, file: !3, line: 592, type: !2436, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!1947, !2076, !207, !2078, !2295, !1939}
!2438 = !DILocalVariable(name: "mvert", arg: 1, scope: !2435, file: !3, line: 592, type: !2076)
!2439 = !DILocation(line: 592, column: 44, scope: !2435)
!2440 = !DILocalVariable(name: "totvert", arg: 2, scope: !2435, file: !3, line: 592, type: !207)
!2441 = !DILocation(line: 592, column: 55, scope: !2435)
!2442 = !DILocalVariable(name: "nodes", arg: 3, scope: !2435, file: !3, line: 593, type: !2078)
!2443 = !DILocation(line: 593, column: 48, scope: !2435)
!2444 = !DILocalVariable(name: "emap", arg: 4, scope: !2435, file: !3, line: 593, type: !2295)
!2445 = !DILocation(line: 593, column: 74, scope: !2435)
!2446 = !DILocalVariable(name: "emat", arg: 5, scope: !2435, file: !3, line: 594, type: !1939)
!2447 = !DILocation(line: 594, column: 37, scope: !2435)
!2448 = !DILocalVariable(name: "skin_nodes", scope: !2435, file: !3, line: 596, type: !1947)
!2449 = !DILocation(line: 596, column: 12, scope: !2435)
!2450 = !DILocalVariable(name: "v", scope: !2435, file: !3, line: 597, type: !207)
!2451 = !DILocation(line: 597, column: 6, scope: !2435)
!2452 = !DILocation(line: 599, column: 15, scope: !2435)
!2453 = !DILocation(line: 599, column: 46, scope: !2435)
!2454 = !DILocation(line: 599, column: 44, scope: !2435)
!2455 = !DILocation(line: 599, column: 13, scope: !2435)
!2456 = !DILocation(line: 601, column: 9, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 601, column: 2)
!2458 = !DILocation(line: 601, column: 7, scope: !2457)
!2459 = !DILocation(line: 601, column: 14, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 601, column: 2)
!2461 = !DILocation(line: 601, column: 18, scope: !2460)
!2462 = !DILocation(line: 601, column: 16, scope: !2460)
!2463 = !DILocation(line: 601, column: 2, scope: !2457)
!2464 = !DILocation(line: 602, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 602, column: 7)
!2466 = distinct !DILexicalBlock(scope: !2460, file: !3, line: 601, column: 32)
!2467 = !DILocation(line: 602, column: 12, scope: !2465)
!2468 = !DILocation(line: 602, column: 15, scope: !2465)
!2469 = !DILocation(line: 602, column: 21, scope: !2465)
!2470 = !DILocation(line: 602, column: 7, scope: !2466)
!2471 = !DILocation(line: 603, column: 20, scope: !2465)
!2472 = !DILocation(line: 603, column: 23, scope: !2465)
!2473 = !DILocation(line: 603, column: 35, scope: !2465)
!2474 = !DILocation(line: 603, column: 42, scope: !2465)
!2475 = !DILocation(line: 603, column: 49, scope: !2465)
!2476 = !DILocation(line: 603, column: 55, scope: !2465)
!2477 = !DILocation(line: 603, column: 4, scope: !2465)
!2478 = !DILocation(line: 604, column: 12, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 604, column: 12)
!2480 = !DILocation(line: 604, column: 17, scope: !2479)
!2481 = !DILocation(line: 604, column: 20, scope: !2479)
!2482 = !DILocation(line: 604, column: 26, scope: !2479)
!2483 = !DILocation(line: 604, column: 12, scope: !2465)
!2484 = !DILocation(line: 605, column: 27, scope: !2479)
!2485 = !DILocation(line: 605, column: 30, scope: !2479)
!2486 = !DILocation(line: 605, column: 42, scope: !2479)
!2487 = !DILocation(line: 605, column: 49, scope: !2479)
!2488 = !DILocation(line: 605, column: 56, scope: !2479)
!2489 = !DILocation(line: 605, column: 62, scope: !2479)
!2490 = !DILocation(line: 605, column: 4, scope: !2479)
!2491 = !DILocation(line: 609, column: 2, scope: !2466)
!2492 = !DILocation(line: 601, column: 28, scope: !2460)
!2493 = !DILocation(line: 601, column: 2, scope: !2460)
!2494 = distinct !{!2494, !2463, !2495}
!2495 = !DILocation(line: 609, column: 2, scope: !2457)
!2496 = !DILocation(line: 611, column: 9, scope: !2435)
!2497 = !DILocation(line: 611, column: 2, scope: !2435)
!2498 = distinct !DISubprogram(name: "build_skin", scope: !3, file: !3, line: 1701, type: !2499, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!1847, !1947, !207, !2295, !2080, !207, !1597, !223}
!2501 = !DILocalVariable(name: "skin_nodes", arg: 1, scope: !2498, file: !3, line: 1701, type: !1947)
!2502 = !DILocation(line: 1701, column: 36, scope: !2498)
!2503 = !DILocalVariable(name: "totvert", arg: 2, scope: !2498, file: !3, line: 1702, type: !207)
!2504 = !DILocation(line: 1702, column: 30, scope: !2498)
!2505 = !DILocalVariable(name: "emap", arg: 3, scope: !2498, file: !3, line: 1702, type: !2295)
!2506 = !DILocation(line: 1702, column: 58, scope: !2498)
!2507 = !DILocalVariable(name: "medge", arg: 4, scope: !2498, file: !3, line: 1703, type: !2080)
!2508 = !DILocation(line: 1703, column: 39, scope: !2498)
!2509 = !DILocalVariable(name: "totedge", arg: 5, scope: !2498, file: !3, line: 1703, type: !207)
!2510 = !DILocation(line: 1703, column: 50, scope: !2498)
!2511 = !DILocalVariable(name: "input_dvert", arg: 6, scope: !2498, file: !3, line: 1704, type: !1597)
!2512 = !DILocation(line: 1704, column: 45, scope: !2498)
!2513 = !DILocalVariable(name: "smd", arg: 7, scope: !2498, file: !3, line: 1705, type: !223)
!2514 = !DILocation(line: 1705, column: 44, scope: !2498)
!2515 = !DILocalVariable(name: "so", scope: !2498, file: !3, line: 1707, type: !2516)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "SkinOutput", file: !3, line: 132, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 128, size: 192, elements: !2518)
!2518 = !{!2519, !2520, !2521}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2517, file: !3, line: 129, baseType: !1847, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !2517, file: !3, line: 130, baseType: !223, size: 64, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2517, file: !3, line: 131, baseType: !207, size: 32, offset: 128)
!2522 = !DILocation(line: 1707, column: 13, scope: !2498)
!2523 = !DILocalVariable(name: "v", scope: !2498, file: !3, line: 1708, type: !207)
!2524 = !DILocation(line: 1708, column: 6, scope: !2498)
!2525 = !DILocation(line: 1710, column: 11, scope: !2498)
!2526 = !DILocation(line: 1710, column: 5, scope: !2498)
!2527 = !DILocation(line: 1710, column: 9, scope: !2498)
!2528 = !DILocation(line: 1711, column: 10, scope: !2498)
!2529 = !DILocation(line: 1711, column: 5, scope: !2498)
!2530 = !DILocation(line: 1711, column: 8, scope: !2498)
!2531 = !DILocation(line: 1712, column: 5, scope: !2498)
!2532 = !DILocation(line: 1712, column: 12, scope: !2498)
!2533 = !DILocation(line: 1715, column: 35, scope: !2498)
!2534 = !DILocation(line: 1715, column: 2, scope: !2498)
!2535 = !DILocation(line: 1716, column: 14, scope: !2498)
!2536 = !DILocation(line: 1716, column: 2, scope: !2498)
!2537 = !DILocation(line: 1717, column: 22, scope: !2498)
!2538 = !DILocation(line: 1717, column: 2, scope: !2498)
!2539 = !DILocation(line: 1719, column: 6, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 1719, column: 6)
!2541 = !DILocation(line: 1719, column: 6, scope: !2498)
!2542 = !DILocation(line: 1720, column: 24, scope: !2540)
!2543 = !DILocation(line: 1720, column: 32, scope: !2540)
!2544 = !DILocation(line: 1720, column: 36, scope: !2540)
!2545 = !DILocation(line: 1720, column: 3, scope: !2540)
!2546 = !DILocation(line: 1724, column: 31, scope: !2498)
!2547 = !DILocation(line: 1724, column: 43, scope: !2498)
!2548 = !DILocation(line: 1724, column: 52, scope: !2498)
!2549 = !DILocation(line: 1724, column: 58, scope: !2498)
!2550 = !DILocation(line: 1724, column: 2, scope: !2498)
!2551 = !DILocation(line: 1727, column: 9, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 1727, column: 2)
!2553 = !DILocation(line: 1727, column: 7, scope: !2552)
!2554 = !DILocation(line: 1727, column: 14, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 1727, column: 2)
!2556 = !DILocation(line: 1727, column: 18, scope: !2555)
!2557 = !DILocation(line: 1727, column: 16, scope: !2555)
!2558 = !DILocation(line: 1727, column: 2, scope: !2552)
!2559 = !DILocation(line: 1728, column: 7, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 1728, column: 7)
!2561 = distinct !DILexicalBlock(scope: !2555, file: !3, line: 1727, column: 32)
!2562 = !DILocation(line: 1728, column: 18, scope: !2560)
!2563 = !DILocation(line: 1728, column: 21, scope: !2560)
!2564 = !DILocation(line: 1728, column: 7, scope: !2561)
!2565 = !DILocation(line: 1729, column: 21, scope: !2560)
!2566 = !DILocation(line: 1729, column: 26, scope: !2560)
!2567 = !DILocation(line: 1729, column: 37, scope: !2560)
!2568 = !DILocation(line: 1730, column: 18, scope: !2560)
!2569 = !DILocation(line: 1730, column: 33, scope: !2560)
!2570 = !DILocation(line: 1730, column: 45, scope: !2560)
!2571 = !DILocation(line: 1729, column: 4, scope: !2560)
!2572 = !DILocation(line: 1731, column: 2, scope: !2561)
!2573 = !DILocation(line: 1727, column: 27, scope: !2555)
!2574 = !DILocation(line: 1727, column: 2, scope: !2555)
!2575 = distinct !{!2575, !2558, !2576}
!2576 = !DILocation(line: 1731, column: 2, scope: !2552)
!2577 = !DILocation(line: 1734, column: 30, scope: !2498)
!2578 = !DILocation(line: 1734, column: 42, scope: !2498)
!2579 = !DILocation(line: 1734, column: 2, scope: !2498)
!2580 = !DILocation(line: 1736, column: 37, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 1736, column: 6)
!2582 = !DILocation(line: 1736, column: 49, scope: !2581)
!2583 = !DILocation(line: 1736, column: 58, scope: !2581)
!2584 = !DILocation(line: 1736, column: 64, scope: !2581)
!2585 = !DILocation(line: 1736, column: 7, scope: !2581)
!2586 = !DILocation(line: 1736, column: 6, scope: !2498)
!2587 = !DILocation(line: 1737, column: 22, scope: !2581)
!2588 = !DILocation(line: 1737, column: 27, scope: !2581)
!2589 = !DILocation(line: 1737, column: 3, scope: !2581)
!2590 = !DILocation(line: 1741, column: 28, scope: !2498)
!2591 = !DILocation(line: 1741, column: 2, scope: !2498)
!2592 = !DILocation(line: 1753, column: 28, scope: !2498)
!2593 = !DILocation(line: 1753, column: 32, scope: !2498)
!2594 = !DILocation(line: 1753, column: 44, scope: !2498)
!2595 = !DILocation(line: 1753, column: 2, scope: !2498)
!2596 = !DILocation(line: 1755, column: 23, scope: !2498)
!2597 = !DILocation(line: 1755, column: 27, scope: !2498)
!2598 = !DILocation(line: 1755, column: 39, scope: !2498)
!2599 = !DILocation(line: 1755, column: 48, scope: !2498)
!2600 = !DILocation(line: 1755, column: 2, scope: !2498)
!2601 = !DILocation(line: 1757, column: 29, scope: !2498)
!2602 = !DILocation(line: 1757, column: 41, scope: !2498)
!2603 = !DILocation(line: 1757, column: 2, scope: !2498)
!2604 = !DILocation(line: 1758, column: 31, scope: !2498)
!2605 = !DILocation(line: 1758, column: 43, scope: !2498)
!2606 = !DILocation(line: 1758, column: 50, scope: !2498)
!2607 = !DILocation(line: 1758, column: 2, scope: !2498)
!2608 = !DILocation(line: 1759, column: 28, scope: !2498)
!2609 = !DILocation(line: 1759, column: 2, scope: !2498)
!2610 = !DILocation(line: 1761, column: 12, scope: !2498)
!2611 = !DILocation(line: 1761, column: 2, scope: !2498)
!2612 = distinct !DISubprogram(name: "skin_set_orig_indices", scope: !3, file: !3, line: 1764, type: !725, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2613 = !DILocalVariable(name: "dm", arg: 1, scope: !2612, file: !3, line: 1764, type: !727)
!2614 = !DILocation(line: 1764, column: 48, scope: !2612)
!2615 = !DILocalVariable(name: "orig", scope: !2612, file: !3, line: 1766, type: !893)
!2616 = !DILocation(line: 1766, column: 7, scope: !2612)
!2617 = !DILocalVariable(name: "totpoly", scope: !2612, file: !3, line: 1766, type: !207)
!2618 = !DILocation(line: 1766, column: 13, scope: !2612)
!2619 = !DILocation(line: 1768, column: 12, scope: !2612)
!2620 = !DILocation(line: 1768, column: 16, scope: !2612)
!2621 = !DILocation(line: 1768, column: 28, scope: !2612)
!2622 = !DILocation(line: 1768, column: 10, scope: !2612)
!2623 = !DILocation(line: 1769, column: 31, scope: !2612)
!2624 = !DILocation(line: 1769, column: 35, scope: !2612)
!2625 = !DILocation(line: 1770, column: 47, scope: !2612)
!2626 = !DILocation(line: 1769, column: 9, scope: !2612)
!2627 = !DILocation(line: 1769, column: 7, scope: !2612)
!2628 = !DILocation(line: 1771, column: 12, scope: !2612)
!2629 = !DILocation(line: 1771, column: 18, scope: !2612)
!2630 = !DILocation(line: 1771, column: 2, scope: !2612)
!2631 = !DILocation(line: 1772, column: 1, scope: !2612)
!2632 = distinct !DISubprogram(name: "calc_edge_mat", scope: !3, file: !3, line: 616, type: !2633, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{null, !958, !923, !923}
!2635 = !DILocalVariable(name: "mat", arg: 1, scope: !2632, file: !3, line: 616, type: !958)
!2636 = !DILocation(line: 616, column: 33, scope: !2632)
!2637 = !DILocalVariable(name: "a", arg: 2, scope: !2632, file: !3, line: 616, type: !923)
!2638 = !DILocation(line: 616, column: 56, scope: !2632)
!2639 = !DILocalVariable(name: "b", arg: 3, scope: !2632, file: !3, line: 616, type: !923)
!2640 = !DILocation(line: 616, column: 74, scope: !2632)
!2641 = !DILocalVariable(name: "z_up", scope: !2632, file: !3, line: 618, type: !2642)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 96, elements: !291)
!2643 = !DILocation(line: 618, column: 14, scope: !2632)
!2644 = !DILocalVariable(name: "dot", scope: !2632, file: !3, line: 619, type: !250)
!2645 = !DILocation(line: 619, column: 8, scope: !2632)
!2646 = !DILocation(line: 622, column: 14, scope: !2632)
!2647 = !DILocation(line: 622, column: 22, scope: !2632)
!2648 = !DILocation(line: 622, column: 25, scope: !2632)
!2649 = !DILocation(line: 622, column: 2, scope: !2632)
!2650 = !DILocation(line: 623, column: 15, scope: !2632)
!2651 = !DILocation(line: 623, column: 2, scope: !2632)
!2652 = !DILocation(line: 625, column: 17, scope: !2632)
!2653 = !DILocation(line: 625, column: 25, scope: !2632)
!2654 = !DILocation(line: 625, column: 8, scope: !2632)
!2655 = !DILocation(line: 625, column: 6, scope: !2632)
!2656 = !DILocation(line: 626, column: 6, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 626, column: 6)
!2658 = !DILocation(line: 626, column: 10, scope: !2657)
!2659 = !DILocation(line: 626, column: 29, scope: !2657)
!2660 = !DILocation(line: 626, column: 32, scope: !2657)
!2661 = !DILocation(line: 626, column: 36, scope: !2657)
!2662 = !DILocation(line: 626, column: 6, scope: !2632)
!2663 = !DILocation(line: 628, column: 17, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 626, column: 55)
!2665 = !DILocation(line: 628, column: 25, scope: !2664)
!2666 = !DILocation(line: 628, column: 31, scope: !2664)
!2667 = !DILocation(line: 628, column: 3, scope: !2664)
!2668 = !DILocation(line: 629, column: 16, scope: !2664)
!2669 = !DILocation(line: 629, column: 3, scope: !2664)
!2670 = !DILocation(line: 632, column: 17, scope: !2664)
!2671 = !DILocation(line: 632, column: 25, scope: !2664)
!2672 = !DILocation(line: 632, column: 33, scope: !2664)
!2673 = !DILocation(line: 632, column: 3, scope: !2664)
!2674 = !DILocation(line: 633, column: 16, scope: !2664)
!2675 = !DILocation(line: 633, column: 3, scope: !2664)
!2676 = !DILocation(line: 634, column: 2, scope: !2664)
!2677 = !DILocation(line: 636, column: 3, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 635, column: 7)
!2679 = !DILocation(line: 636, column: 13, scope: !2678)
!2680 = !DILocation(line: 637, column: 3, scope: !2678)
!2681 = !DILocation(line: 637, column: 13, scope: !2678)
!2682 = !DILocation(line: 638, column: 3, scope: !2678)
!2683 = !DILocation(line: 638, column: 13, scope: !2678)
!2684 = !DILocation(line: 639, column: 3, scope: !2678)
!2685 = !DILocation(line: 639, column: 13, scope: !2678)
!2686 = !DILocation(line: 640, column: 3, scope: !2678)
!2687 = !DILocation(line: 640, column: 13, scope: !2678)
!2688 = !DILocation(line: 641, column: 3, scope: !2678)
!2689 = !DILocation(line: 641, column: 13, scope: !2678)
!2690 = !DILocation(line: 643, column: 1, scope: !2632)
!2691 = distinct !DISubprogram(name: "build_emats_stack", scope: !3, file: !3, line: 651, type: !2692, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{null, !2310, !257, !1939, !2295, !2080, !2078, !2076}
!2694 = !DILocalVariable(name: "stack", arg: 1, scope: !2691, file: !3, line: 651, type: !2310)
!2695 = !DILocation(line: 651, column: 42, scope: !2691)
!2696 = !DILocalVariable(name: "visited_e", arg: 2, scope: !2691, file: !3, line: 651, type: !257)
!2697 = !DILocation(line: 651, column: 61, scope: !2691)
!2698 = !DILocalVariable(name: "emat", arg: 3, scope: !2691, file: !3, line: 651, type: !1939)
!2699 = !DILocation(line: 651, column: 78, scope: !2691)
!2700 = !DILocalVariable(name: "emap", arg: 4, scope: !2691, file: !3, line: 652, type: !2295)
!2701 = !DILocation(line: 652, column: 50, scope: !2691)
!2702 = !DILocalVariable(name: "medge", arg: 5, scope: !2691, file: !3, line: 652, type: !2080)
!2703 = !DILocation(line: 652, column: 69, scope: !2691)
!2704 = !DILocalVariable(name: "vs", arg: 6, scope: !2691, file: !3, line: 653, type: !2078)
!2705 = !DILocation(line: 653, column: 48, scope: !2691)
!2706 = !DILocalVariable(name: "mvert", arg: 7, scope: !2691, file: !3, line: 653, type: !2076)
!2707 = !DILocation(line: 653, column: 65, scope: !2691)
!2708 = !DILocalVariable(name: "stack_elem", scope: !2691, file: !3, line: 655, type: !2318)
!2709 = !DILocation(line: 655, column: 16, scope: !2691)
!2710 = !DILocalVariable(name: "axis", scope: !2691, file: !3, line: 656, type: !290)
!2711 = !DILocation(line: 656, column: 8, scope: !2691)
!2712 = !DILocalVariable(name: "angle", scope: !2691, file: !3, line: 656, type: !250)
!2713 = !DILocation(line: 656, column: 17, scope: !2691)
!2714 = !DILocalVariable(name: "i", scope: !2691, file: !3, line: 657, type: !207)
!2715 = !DILocation(line: 657, column: 6, scope: !2691)
!2716 = !DILocalVariable(name: "e", scope: !2691, file: !3, line: 657, type: !207)
!2717 = !DILocation(line: 657, column: 9, scope: !2691)
!2718 = !DILocalVariable(name: "v", scope: !2691, file: !3, line: 657, type: !207)
!2719 = !DILocation(line: 657, column: 12, scope: !2691)
!2720 = !DILocalVariable(name: "parent_v", scope: !2691, file: !3, line: 657, type: !207)
!2721 = !DILocation(line: 657, column: 15, scope: !2691)
!2722 = !DILocalVariable(name: "parent_is_branch", scope: !2691, file: !3, line: 657, type: !207)
!2723 = !DILocation(line: 657, column: 25, scope: !2691)
!2724 = !DILocation(line: 659, column: 16, scope: !2691)
!2725 = !DILocation(line: 659, column: 23, scope: !2691)
!2726 = !DILocation(line: 659, column: 2, scope: !2691)
!2727 = !DILocation(line: 660, column: 24, scope: !2691)
!2728 = !DILocation(line: 660, column: 11, scope: !2691)
!2729 = !DILocation(line: 661, column: 17, scope: !2691)
!2730 = !DILocation(line: 661, column: 4, scope: !2691)
!2731 = !DILocation(line: 664, column: 6, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 664, column: 6)
!2733 = !DILocation(line: 664, column: 6, scope: !2691)
!2734 = !DILocation(line: 665, column: 3, scope: !2732)
!2735 = !DILocation(line: 668, column: 2, scope: !2691)
!2736 = !DILocation(line: 672, column: 23, scope: !2691)
!2737 = !DILocation(line: 672, column: 28, scope: !2691)
!2738 = !DILocation(line: 672, column: 38, scope: !2691)
!2739 = !DILocation(line: 672, column: 44, scope: !2691)
!2740 = !DILocation(line: 672, column: 49, scope: !2691)
!2741 = !DILocation(line: 673, column: 23, scope: !2691)
!2742 = !DILocation(line: 673, column: 26, scope: !2691)
!2743 = !DILocation(line: 673, column: 36, scope: !2691)
!2744 = !DILocation(line: 673, column: 41, scope: !2691)
!2745 = !DILocation(line: 672, column: 19, scope: !2691)
!2746 = !DILocation(line: 675, column: 32, scope: !2691)
!2747 = !DILocation(line: 675, column: 38, scope: !2691)
!2748 = !DILocation(line: 675, column: 42, scope: !2691)
!2749 = !DILocation(line: 675, column: 6, scope: !2691)
!2750 = !DILocation(line: 675, column: 4, scope: !2691)
!2751 = !DILocation(line: 676, column: 19, scope: !2691)
!2752 = !DILocation(line: 676, column: 2, scope: !2691)
!2753 = !DILocation(line: 676, column: 7, scope: !2691)
!2754 = !DILocation(line: 676, column: 10, scope: !2691)
!2755 = !DILocation(line: 676, column: 17, scope: !2691)
!2756 = !DILocation(line: 679, column: 6, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 679, column: 6)
!2758 = !DILocation(line: 679, column: 6, scope: !2691)
!2759 = !DILocation(line: 680, column: 17, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 679, column: 24)
!2761 = !DILocation(line: 680, column: 22, scope: !2760)
!2762 = !DILocation(line: 680, column: 25, scope: !2760)
!2763 = !DILocation(line: 680, column: 30, scope: !2760)
!2764 = !DILocation(line: 680, column: 36, scope: !2760)
!2765 = !DILocation(line: 680, column: 46, scope: !2760)
!2766 = !DILocation(line: 681, column: 17, scope: !2760)
!2767 = !DILocation(line: 681, column: 23, scope: !2760)
!2768 = !DILocation(line: 681, column: 26, scope: !2760)
!2769 = !DILocation(line: 680, column: 3, scope: !2760)
!2770 = !DILocation(line: 682, column: 2, scope: !2760)
!2771 = !DILocation(line: 685, column: 15, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 683, column: 7)
!2773 = !DILocation(line: 685, column: 20, scope: !2772)
!2774 = !DILocation(line: 685, column: 23, scope: !2772)
!2775 = !DILocation(line: 685, column: 31, scope: !2772)
!2776 = !DILocation(line: 685, column: 37, scope: !2772)
!2777 = !DILocation(line: 685, column: 40, scope: !2772)
!2778 = !DILocation(line: 685, column: 44, scope: !2772)
!2779 = !DILocation(line: 685, column: 50, scope: !2772)
!2780 = !DILocation(line: 685, column: 60, scope: !2772)
!2781 = !DILocation(line: 685, column: 3, scope: !2772)
!2782 = !DILocation(line: 686, column: 16, scope: !2772)
!2783 = !DILocation(line: 686, column: 21, scope: !2772)
!2784 = !DILocation(line: 686, column: 24, scope: !2772)
!2785 = !DILocation(line: 686, column: 3, scope: !2772)
!2786 = !DILocation(line: 687, column: 44, scope: !2772)
!2787 = !DILocation(line: 687, column: 33, scope: !2772)
!2788 = !DILocation(line: 687, column: 52, scope: !2772)
!2789 = !DILocation(line: 687, column: 57, scope: !2772)
!2790 = !DILocation(line: 687, column: 60, scope: !2772)
!2791 = !DILocation(line: 687, column: 11, scope: !2772)
!2792 = !DILocation(line: 687, column: 9, scope: !2772)
!2793 = !DILocation(line: 688, column: 17, scope: !2772)
!2794 = !DILocation(line: 688, column: 34, scope: !2772)
!2795 = !DILocation(line: 688, column: 23, scope: !2772)
!2796 = !DILocation(line: 688, column: 42, scope: !2772)
!2797 = !DILocation(line: 688, column: 47, scope: !2772)
!2798 = !DILocation(line: 688, column: 50, scope: !2772)
!2799 = !DILocation(line: 688, column: 3, scope: !2772)
!2800 = !DILocation(line: 689, column: 16, scope: !2772)
!2801 = !DILocation(line: 689, column: 3, scope: !2772)
!2802 = !DILocation(line: 690, column: 31, scope: !2772)
!2803 = !DILocation(line: 690, column: 36, scope: !2772)
!2804 = !DILocation(line: 690, column: 39, scope: !2772)
!2805 = !DILocation(line: 690, column: 58, scope: !2772)
!2806 = !DILocation(line: 690, column: 47, scope: !2772)
!2807 = !DILocation(line: 690, column: 66, scope: !2772)
!2808 = !DILocation(line: 690, column: 72, scope: !2772)
!2809 = !DILocation(line: 690, column: 3, scope: !2772)
!2810 = !DILocation(line: 691, column: 31, scope: !2772)
!2811 = !DILocation(line: 691, column: 36, scope: !2772)
!2812 = !DILocation(line: 691, column: 39, scope: !2772)
!2813 = !DILocation(line: 691, column: 58, scope: !2772)
!2814 = !DILocation(line: 691, column: 47, scope: !2772)
!2815 = !DILocation(line: 691, column: 66, scope: !2772)
!2816 = !DILocation(line: 691, column: 72, scope: !2772)
!2817 = !DILocation(line: 691, column: 3, scope: !2772)
!2818 = !DILocation(line: 695, column: 9, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 695, column: 2)
!2820 = !DILocation(line: 695, column: 7, scope: !2819)
!2821 = !DILocation(line: 695, column: 14, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 695, column: 2)
!2823 = !DILocation(line: 695, column: 18, scope: !2822)
!2824 = !DILocation(line: 695, column: 23, scope: !2822)
!2825 = !DILocation(line: 695, column: 26, scope: !2822)
!2826 = !DILocation(line: 695, column: 16, scope: !2822)
!2827 = !DILocation(line: 695, column: 2, scope: !2819)
!2828 = !DILocation(line: 697, column: 25, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 695, column: 38)
!2830 = !DILocation(line: 697, column: 14, scope: !2829)
!2831 = !DILocation(line: 697, column: 30, scope: !2829)
!2832 = !DILocation(line: 697, column: 35, scope: !2829)
!2833 = !DILocation(line: 697, column: 38, scope: !2829)
!2834 = !DILocation(line: 697, column: 3, scope: !2829)
!2835 = !DILocation(line: 698, column: 18, scope: !2829)
!2836 = !DILocation(line: 698, column: 23, scope: !2829)
!2837 = !DILocation(line: 698, column: 26, scope: !2829)
!2838 = !DILocation(line: 698, column: 34, scope: !2829)
!2839 = !DILocation(line: 698, column: 14, scope: !2829)
!2840 = !DILocation(line: 698, column: 16, scope: !2829)
!2841 = !DILocation(line: 699, column: 25, scope: !2829)
!2842 = !DILocation(line: 699, column: 14, scope: !2829)
!2843 = !DILocation(line: 699, column: 23, scope: !2829)
!2844 = !DILocation(line: 700, column: 18, scope: !2829)
!2845 = !DILocation(line: 700, column: 25, scope: !2829)
!2846 = !DILocation(line: 700, column: 3, scope: !2829)
!2847 = !DILocation(line: 701, column: 2, scope: !2829)
!2848 = !DILocation(line: 695, column: 34, scope: !2822)
!2849 = !DILocation(line: 695, column: 2, scope: !2822)
!2850 = distinct !{!2850, !2827, !2851}
!2851 = !DILocation(line: 701, column: 2, scope: !2819)
!2852 = !DILocation(line: 702, column: 1, scope: !2691)
!2853 = distinct !DISubprogram(name: "normalize_v3", scope: !2226, file: !2226, line: 830, type: !2854, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!250, !949}
!2856 = !DILocalVariable(name: "n", arg: 1, scope: !2853, file: !2226, line: 830, type: !949)
!2857 = !DILocation(line: 830, column: 34, scope: !2853)
!2858 = !DILocation(line: 832, column: 25, scope: !2853)
!2859 = !DILocation(line: 832, column: 28, scope: !2853)
!2860 = !DILocation(line: 832, column: 9, scope: !2853)
!2861 = !DILocation(line: 832, column: 2, scope: !2853)
!2862 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !2226, file: !2226, line: 634, type: !2243, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2863 = !DILocalVariable(name: "r", arg: 1, scope: !2862, file: !2226, line: 634, type: !949)
!2864 = !DILocation(line: 634, column: 34, scope: !2862)
!2865 = !DILocalVariable(name: "a", arg: 2, scope: !2862, file: !2226, line: 634, type: !923)
!2866 = !DILocation(line: 634, column: 52, scope: !2862)
!2867 = !DILocalVariable(name: "b", arg: 3, scope: !2862, file: !2226, line: 634, type: !923)
!2868 = !DILocation(line: 634, column: 70, scope: !2862)
!2869 = !DILocation(line: 637, column: 9, scope: !2862)
!2870 = !DILocation(line: 637, column: 16, scope: !2862)
!2871 = !DILocation(line: 637, column: 14, scope: !2862)
!2872 = !DILocation(line: 637, column: 23, scope: !2862)
!2873 = !DILocation(line: 637, column: 30, scope: !2862)
!2874 = !DILocation(line: 637, column: 28, scope: !2862)
!2875 = !DILocation(line: 637, column: 21, scope: !2862)
!2876 = !DILocation(line: 637, column: 2, scope: !2862)
!2877 = !DILocation(line: 637, column: 7, scope: !2862)
!2878 = !DILocation(line: 638, column: 9, scope: !2862)
!2879 = !DILocation(line: 638, column: 16, scope: !2862)
!2880 = !DILocation(line: 638, column: 14, scope: !2862)
!2881 = !DILocation(line: 638, column: 23, scope: !2862)
!2882 = !DILocation(line: 638, column: 30, scope: !2862)
!2883 = !DILocation(line: 638, column: 28, scope: !2862)
!2884 = !DILocation(line: 638, column: 21, scope: !2862)
!2885 = !DILocation(line: 638, column: 2, scope: !2862)
!2886 = !DILocation(line: 638, column: 7, scope: !2862)
!2887 = !DILocation(line: 639, column: 9, scope: !2862)
!2888 = !DILocation(line: 639, column: 16, scope: !2862)
!2889 = !DILocation(line: 639, column: 14, scope: !2862)
!2890 = !DILocation(line: 639, column: 23, scope: !2862)
!2891 = !DILocation(line: 639, column: 30, scope: !2862)
!2892 = !DILocation(line: 639, column: 28, scope: !2862)
!2893 = !DILocation(line: 639, column: 21, scope: !2862)
!2894 = !DILocation(line: 639, column: 2, scope: !2862)
!2895 = !DILocation(line: 639, column: 7, scope: !2862)
!2896 = !DILocation(line: 640, column: 1, scope: !2862)
!2897 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !2226, file: !2226, line: 788, type: !2898, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!250, !949, !923}
!2900 = !DILocalVariable(name: "r", arg: 1, scope: !2897, file: !2226, line: 788, type: !949)
!2901 = !DILocation(line: 788, column: 37, scope: !2897)
!2902 = !DILocalVariable(name: "a", arg: 2, scope: !2897, file: !2226, line: 788, type: !923)
!2903 = !DILocation(line: 788, column: 55, scope: !2897)
!2904 = !DILocalVariable(name: "d", scope: !2897, file: !2226, line: 790, type: !250)
!2905 = !DILocation(line: 790, column: 8, scope: !2897)
!2906 = !DILocation(line: 790, column: 21, scope: !2897)
!2907 = !DILocation(line: 790, column: 24, scope: !2897)
!2908 = !DILocation(line: 790, column: 12, scope: !2897)
!2909 = !DILocation(line: 794, column: 6, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2897, file: !2226, line: 794, column: 6)
!2911 = !DILocation(line: 794, column: 8, scope: !2910)
!2912 = !DILocation(line: 794, column: 6, scope: !2897)
!2913 = !DILocation(line: 795, column: 13, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2910, file: !2226, line: 794, column: 20)
!2915 = !DILocation(line: 795, column: 7, scope: !2914)
!2916 = !DILocation(line: 795, column: 5, scope: !2914)
!2917 = !DILocation(line: 796, column: 15, scope: !2914)
!2918 = !DILocation(line: 796, column: 18, scope: !2914)
!2919 = !DILocation(line: 796, column: 28, scope: !2914)
!2920 = !DILocation(line: 796, column: 26, scope: !2914)
!2921 = !DILocation(line: 796, column: 3, scope: !2914)
!2922 = !DILocation(line: 797, column: 2, scope: !2914)
!2923 = !DILocation(line: 799, column: 11, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2910, file: !2226, line: 798, column: 7)
!2925 = !DILocation(line: 799, column: 3, scope: !2924)
!2926 = !DILocation(line: 800, column: 5, scope: !2924)
!2927 = !DILocation(line: 803, column: 9, scope: !2897)
!2928 = !DILocation(line: 803, column: 2, scope: !2897)
!2929 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !2226, file: !2226, line: 399, type: !2930, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{null, !949, !923, !250}
!2932 = !DILocalVariable(name: "r", arg: 1, scope: !2929, file: !2226, line: 399, type: !949)
!2933 = !DILocation(line: 399, column: 32, scope: !2929)
!2934 = !DILocalVariable(name: "a", arg: 2, scope: !2929, file: !2226, line: 399, type: !923)
!2935 = !DILocation(line: 399, column: 50, scope: !2929)
!2936 = !DILocalVariable(name: "f", arg: 3, scope: !2929, file: !2226, line: 399, type: !250)
!2937 = !DILocation(line: 399, column: 62, scope: !2929)
!2938 = !DILocation(line: 401, column: 9, scope: !2929)
!2939 = !DILocation(line: 401, column: 16, scope: !2929)
!2940 = !DILocation(line: 401, column: 14, scope: !2929)
!2941 = !DILocation(line: 401, column: 2, scope: !2929)
!2942 = !DILocation(line: 401, column: 7, scope: !2929)
!2943 = !DILocation(line: 402, column: 9, scope: !2929)
!2944 = !DILocation(line: 402, column: 16, scope: !2929)
!2945 = !DILocation(line: 402, column: 14, scope: !2929)
!2946 = !DILocation(line: 402, column: 2, scope: !2929)
!2947 = !DILocation(line: 402, column: 7, scope: !2929)
!2948 = !DILocation(line: 403, column: 9, scope: !2929)
!2949 = !DILocation(line: 403, column: 16, scope: !2929)
!2950 = !DILocation(line: 403, column: 14, scope: !2929)
!2951 = !DILocation(line: 403, column: 2, scope: !2929)
!2952 = !DILocation(line: 403, column: 7, scope: !2929)
!2953 = !DILocation(line: 404, column: 1, scope: !2929)
!2954 = distinct !DISubprogram(name: "zero_v3", scope: !2226, file: !2226, line: 43, type: !2955, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{null, !949}
!2957 = !DILocalVariable(name: "r", arg: 1, scope: !2954, file: !2226, line: 43, type: !949)
!2958 = !DILocation(line: 43, column: 28, scope: !2954)
!2959 = !DILocation(line: 45, column: 2, scope: !2954)
!2960 = !DILocation(line: 45, column: 7, scope: !2954)
!2961 = !DILocation(line: 46, column: 2, scope: !2954)
!2962 = !DILocation(line: 46, column: 7, scope: !2954)
!2963 = !DILocation(line: 47, column: 2, scope: !2954)
!2964 = !DILocation(line: 47, column: 7, scope: !2954)
!2965 = !DILocation(line: 48, column: 1, scope: !2954)
!2966 = distinct !DISubprogram(name: "end_node_frames", scope: !3, file: !3, line: 481, type: !2967, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{null, !207, !1947, !2076, !2078, !2295, !1939}
!2969 = !DILocalVariable(name: "v", arg: 1, scope: !2966, file: !3, line: 481, type: !207)
!2970 = !DILocation(line: 481, column: 33, scope: !2966)
!2971 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !2966, file: !3, line: 481, type: !1947)
!2972 = !DILocation(line: 481, column: 46, scope: !2966)
!2973 = !DILocalVariable(name: "mvert", arg: 3, scope: !2966, file: !3, line: 481, type: !2076)
!2974 = !DILocation(line: 481, column: 71, scope: !2966)
!2975 = !DILocalVariable(name: "nodes", arg: 4, scope: !2966, file: !3, line: 482, type: !2078)
!2976 = !DILocation(line: 482, column: 46, scope: !2966)
!2977 = !DILocalVariable(name: "emap", arg: 5, scope: !2966, file: !3, line: 482, type: !2295)
!2978 = !DILocation(line: 482, column: 72, scope: !2966)
!2979 = !DILocalVariable(name: "emat", arg: 6, scope: !2966, file: !3, line: 483, type: !1939)
!2980 = !DILocation(line: 483, column: 35, scope: !2966)
!2981 = !DILocalVariable(name: "rad", scope: !2966, file: !3, line: 485, type: !923)
!2982 = !DILocation(line: 485, column: 15, scope: !2966)
!2983 = !DILocation(line: 485, column: 21, scope: !2966)
!2984 = !DILocation(line: 485, column: 27, scope: !2966)
!2985 = !DILocation(line: 485, column: 30, scope: !2966)
!2986 = !DILocalVariable(name: "mat", scope: !2966, file: !3, line: 486, type: !1202)
!2987 = !DILocation(line: 486, column: 8, scope: !2966)
!2988 = !DILocation(line: 488, column: 6, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 488, column: 6)
!2990 = !DILocation(line: 488, column: 11, scope: !2989)
!2991 = !DILocation(line: 488, column: 14, scope: !2989)
!2992 = !DILocation(line: 488, column: 20, scope: !2989)
!2993 = !DILocation(line: 488, column: 6, scope: !2966)
!2994 = !DILocalVariable(name: "avg", scope: !2995, file: !3, line: 489, type: !250)
!2995 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 488, column: 26)
!2996 = !DILocation(line: 489, column: 9, scope: !2995)
!2997 = !DILocation(line: 489, column: 23, scope: !2995)
!2998 = !DILocation(line: 489, column: 15, scope: !2995)
!2999 = !DILocation(line: 492, column: 21, scope: !2995)
!3000 = !DILocation(line: 492, column: 32, scope: !2995)
!3001 = !DILocation(line: 492, column: 3, scope: !2995)
!3002 = !DILocation(line: 493, column: 3, scope: !2995)
!3003 = !DILocation(line: 493, column: 14, scope: !2995)
!3004 = !DILocation(line: 493, column: 17, scope: !2995)
!3005 = !DILocation(line: 493, column: 22, scope: !2995)
!3006 = !DILocation(line: 496, column: 11, scope: !2995)
!3007 = !DILocation(line: 496, column: 3, scope: !2995)
!3008 = !DILocation(line: 497, column: 27, scope: !2995)
!3009 = !DILocation(line: 497, column: 37, scope: !2995)
!3010 = !DILocation(line: 497, column: 15, scope: !2995)
!3011 = !DILocation(line: 497, column: 25, scope: !2995)
!3012 = !DILocation(line: 497, column: 3, scope: !2995)
!3013 = !DILocation(line: 497, column: 13, scope: !2995)
!3014 = !DILocation(line: 500, column: 17, scope: !2995)
!3015 = !DILocation(line: 500, column: 28, scope: !2995)
!3016 = !DILocation(line: 500, column: 31, scope: !2995)
!3017 = !DILocation(line: 500, column: 42, scope: !2995)
!3018 = !DILocation(line: 500, column: 48, scope: !2995)
!3019 = !DILocation(line: 500, column: 51, scope: !2995)
!3020 = !DILocation(line: 500, column: 55, scope: !2995)
!3021 = !DILocation(line: 500, column: 60, scope: !2995)
!3022 = !DILocation(line: 500, column: 65, scope: !2995)
!3023 = !DILocation(line: 500, column: 3, scope: !2995)
!3024 = !DILocation(line: 501, column: 17, scope: !2995)
!3025 = !DILocation(line: 501, column: 28, scope: !2995)
!3026 = !DILocation(line: 501, column: 31, scope: !2995)
!3027 = !DILocation(line: 501, column: 42, scope: !2995)
!3028 = !DILocation(line: 501, column: 48, scope: !2995)
!3029 = !DILocation(line: 501, column: 51, scope: !2995)
!3030 = !DILocation(line: 501, column: 55, scope: !2995)
!3031 = !DILocation(line: 501, column: 60, scope: !2995)
!3032 = !DILocation(line: 501, column: 66, scope: !2995)
!3033 = !DILocation(line: 501, column: 65, scope: !2995)
!3034 = !DILocation(line: 501, column: 3, scope: !2995)
!3035 = !DILocation(line: 502, column: 2, scope: !2995)
!3036 = !DILocation(line: 505, column: 21, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 503, column: 7)
!3038 = !DILocation(line: 505, column: 32, scope: !3037)
!3039 = !DILocation(line: 505, column: 3, scope: !3037)
!3040 = !DILocation(line: 506, column: 3, scope: !3037)
!3041 = !DILocation(line: 506, column: 14, scope: !3037)
!3042 = !DILocation(line: 506, column: 17, scope: !3037)
!3043 = !DILocation(line: 506, column: 22, scope: !3037)
!3044 = !DILocation(line: 509, column: 14, scope: !3037)
!3045 = !DILocation(line: 509, column: 19, scope: !3037)
!3046 = !DILocation(line: 509, column: 24, scope: !3037)
!3047 = !DILocation(line: 509, column: 29, scope: !3037)
!3048 = !DILocation(line: 509, column: 32, scope: !3037)
!3049 = !DILocation(line: 509, column: 44, scope: !3037)
!3050 = !DILocation(line: 509, column: 3, scope: !3037)
!3051 = !DILocation(line: 510, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 510, column: 7)
!3053 = !DILocation(line: 510, column: 12, scope: !3052)
!3054 = !DILocation(line: 510, column: 17, scope: !3052)
!3055 = !DILocation(line: 510, column: 20, scope: !3052)
!3056 = !DILocation(line: 510, column: 32, scope: !3052)
!3057 = !DILocation(line: 510, column: 42, scope: !3052)
!3058 = !DILocation(line: 510, column: 39, scope: !3052)
!3059 = !DILocation(line: 510, column: 7, scope: !3037)
!3060 = !DILocation(line: 511, column: 14, scope: !3052)
!3061 = !DILocation(line: 511, column: 4, scope: !3052)
!3062 = !DILocation(line: 514, column: 17, scope: !3037)
!3063 = !DILocation(line: 514, column: 28, scope: !3037)
!3064 = !DILocation(line: 514, column: 31, scope: !3037)
!3065 = !DILocation(line: 514, column: 42, scope: !3037)
!3066 = !DILocation(line: 514, column: 48, scope: !3037)
!3067 = !DILocation(line: 514, column: 51, scope: !3037)
!3068 = !DILocation(line: 514, column: 55, scope: !3037)
!3069 = !DILocation(line: 514, column: 60, scope: !3037)
!3070 = !DILocation(line: 514, column: 3, scope: !3037)
!3071 = !DILocation(line: 517, column: 6, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 517, column: 6)
!3073 = !DILocation(line: 517, column: 12, scope: !3072)
!3074 = !DILocation(line: 517, column: 15, scope: !3072)
!3075 = !DILocation(line: 517, column: 20, scope: !3072)
!3076 = !DILocation(line: 517, column: 6, scope: !2966)
!3077 = !DILocation(line: 518, column: 3, scope: !3072)
!3078 = !DILocation(line: 518, column: 14, scope: !3072)
!3079 = !DILocation(line: 518, column: 17, scope: !3072)
!3080 = !DILocation(line: 518, column: 22, scope: !3072)
!3081 = !DILocation(line: 519, column: 1, scope: !2966)
!3082 = distinct !DISubprogram(name: "connection_node_frames", scope: !3, file: !3, line: 554, type: !2967, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3083 = !DILocalVariable(name: "v", arg: 1, scope: !3082, file: !3, line: 554, type: !207)
!3084 = !DILocation(line: 554, column: 40, scope: !3082)
!3085 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !3082, file: !3, line: 554, type: !1947)
!3086 = !DILocation(line: 554, column: 53, scope: !3082)
!3087 = !DILocalVariable(name: "mvert", arg: 3, scope: !3082, file: !3, line: 554, type: !2076)
!3088 = !DILocation(line: 554, column: 78, scope: !3082)
!3089 = !DILocalVariable(name: "nodes", arg: 4, scope: !3082, file: !3, line: 555, type: !2078)
!3090 = !DILocation(line: 555, column: 53, scope: !3082)
!3091 = !DILocalVariable(name: "emap", arg: 5, scope: !3082, file: !3, line: 555, type: !2295)
!3092 = !DILocation(line: 555, column: 79, scope: !3082)
!3093 = !DILocalVariable(name: "emat", arg: 6, scope: !3082, file: !3, line: 556, type: !1939)
!3094 = !DILocation(line: 556, column: 42, scope: !3082)
!3095 = !DILocalVariable(name: "rad", scope: !3082, file: !3, line: 558, type: !923)
!3096 = !DILocation(line: 558, column: 15, scope: !3082)
!3097 = !DILocation(line: 558, column: 21, scope: !3082)
!3098 = !DILocation(line: 558, column: 27, scope: !3082)
!3099 = !DILocation(line: 558, column: 30, scope: !3082)
!3100 = !DILocalVariable(name: "mat", scope: !3082, file: !3, line: 559, type: !1202)
!3101 = !DILocation(line: 559, column: 8, scope: !3082)
!3102 = !DILocalVariable(name: "e1", scope: !3082, file: !3, line: 560, type: !1939)
!3103 = !DILocation(line: 560, column: 8, scope: !3082)
!3104 = !DILocalVariable(name: "e2", scope: !3082, file: !3, line: 560, type: !1939)
!3105 = !DILocation(line: 560, column: 13, scope: !3082)
!3106 = !DILocation(line: 562, column: 26, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 562, column: 6)
!3108 = !DILocation(line: 562, column: 31, scope: !3107)
!3109 = !DILocation(line: 562, column: 34, scope: !3107)
!3110 = !DILocation(line: 562, column: 40, scope: !3107)
!3111 = !DILocation(line: 562, column: 6, scope: !3107)
!3112 = !DILocation(line: 562, column: 6, scope: !3082)
!3113 = !DILocalVariable(name: "avg", scope: !3114, file: !3, line: 563, type: !250)
!3114 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 562, column: 47)
!3115 = !DILocation(line: 563, column: 9, scope: !3114)
!3116 = !DILocation(line: 563, column: 23, scope: !3114)
!3117 = !DILocation(line: 563, column: 15, scope: !3114)
!3118 = !DILocation(line: 566, column: 9, scope: !3114)
!3119 = !DILocation(line: 566, column: 14, scope: !3114)
!3120 = !DILocation(line: 566, column: 19, scope: !3114)
!3121 = !DILocation(line: 566, column: 22, scope: !3114)
!3122 = !DILocation(line: 566, column: 6, scope: !3114)
!3123 = !DILocation(line: 567, column: 9, scope: !3114)
!3124 = !DILocation(line: 567, column: 14, scope: !3114)
!3125 = !DILocation(line: 567, column: 19, scope: !3114)
!3126 = !DILocation(line: 567, column: 22, scope: !3114)
!3127 = !DILocation(line: 567, column: 6, scope: !3114)
!3128 = !DILocation(line: 571, column: 21, scope: !3114)
!3129 = !DILocation(line: 571, column: 32, scope: !3114)
!3130 = !DILocation(line: 571, column: 3, scope: !3114)
!3131 = !DILocation(line: 572, column: 3, scope: !3114)
!3132 = !DILocation(line: 572, column: 14, scope: !3114)
!3133 = !DILocation(line: 572, column: 17, scope: !3114)
!3134 = !DILocation(line: 572, column: 22, scope: !3114)
!3135 = !DILocation(line: 574, column: 14, scope: !3114)
!3136 = !DILocation(line: 574, column: 19, scope: !3114)
!3137 = !DILocation(line: 574, column: 23, scope: !3114)
!3138 = !DILocation(line: 574, column: 3, scope: !3114)
!3139 = !DILocation(line: 575, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 575, column: 7)
!3141 = !DILocation(line: 575, column: 11, scope: !3140)
!3142 = !DILocation(line: 575, column: 21, scope: !3140)
!3143 = !DILocation(line: 575, column: 18, scope: !3140)
!3144 = !DILocation(line: 575, column: 7, scope: !3114)
!3145 = !DILocation(line: 575, column: 34, scope: !3140)
!3146 = !DILocation(line: 575, column: 24, scope: !3140)
!3147 = !DILocation(line: 576, column: 17, scope: !3114)
!3148 = !DILocation(line: 576, column: 28, scope: !3114)
!3149 = !DILocation(line: 576, column: 31, scope: !3114)
!3150 = !DILocation(line: 576, column: 42, scope: !3114)
!3151 = !DILocation(line: 576, column: 48, scope: !3114)
!3152 = !DILocation(line: 576, column: 51, scope: !3114)
!3153 = !DILocation(line: 576, column: 55, scope: !3114)
!3154 = !DILocation(line: 576, column: 60, scope: !3114)
!3155 = !DILocation(line: 576, column: 65, scope: !3114)
!3156 = !DILocation(line: 576, column: 3, scope: !3114)
!3157 = !DILocation(line: 577, column: 33, scope: !3114)
!3158 = !DILocation(line: 577, column: 38, scope: !3114)
!3159 = !DILocation(line: 577, column: 41, scope: !3114)
!3160 = !DILocation(line: 577, column: 3, scope: !3114)
!3161 = !DILocation(line: 577, column: 14, scope: !3114)
!3162 = !DILocation(line: 577, column: 17, scope: !3114)
!3163 = !DILocation(line: 577, column: 31, scope: !3114)
!3164 = !DILocation(line: 579, column: 14, scope: !3114)
!3165 = !DILocation(line: 579, column: 19, scope: !3114)
!3166 = !DILocation(line: 579, column: 23, scope: !3114)
!3167 = !DILocation(line: 579, column: 3, scope: !3114)
!3168 = !DILocation(line: 580, column: 7, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 580, column: 7)
!3170 = !DILocation(line: 580, column: 11, scope: !3169)
!3171 = !DILocation(line: 580, column: 21, scope: !3169)
!3172 = !DILocation(line: 580, column: 18, scope: !3169)
!3173 = !DILocation(line: 580, column: 7, scope: !3114)
!3174 = !DILocation(line: 580, column: 34, scope: !3169)
!3175 = !DILocation(line: 580, column: 24, scope: !3169)
!3176 = !DILocation(line: 581, column: 17, scope: !3114)
!3177 = !DILocation(line: 581, column: 28, scope: !3114)
!3178 = !DILocation(line: 581, column: 31, scope: !3114)
!3179 = !DILocation(line: 581, column: 42, scope: !3114)
!3180 = !DILocation(line: 581, column: 48, scope: !3114)
!3181 = !DILocation(line: 581, column: 51, scope: !3114)
!3182 = !DILocation(line: 581, column: 55, scope: !3114)
!3183 = !DILocation(line: 581, column: 60, scope: !3114)
!3184 = !DILocation(line: 581, column: 65, scope: !3114)
!3185 = !DILocation(line: 581, column: 3, scope: !3114)
!3186 = !DILocation(line: 582, column: 33, scope: !3114)
!3187 = !DILocation(line: 582, column: 38, scope: !3114)
!3188 = !DILocation(line: 582, column: 41, scope: !3114)
!3189 = !DILocation(line: 582, column: 3, scope: !3114)
!3190 = !DILocation(line: 582, column: 14, scope: !3114)
!3191 = !DILocation(line: 582, column: 17, scope: !3114)
!3192 = !DILocation(line: 582, column: 31, scope: !3114)
!3193 = !DILocation(line: 584, column: 3, scope: !3114)
!3194 = !DILocation(line: 588, column: 20, scope: !3082)
!3195 = !DILocation(line: 588, column: 31, scope: !3082)
!3196 = !DILocation(line: 588, column: 2, scope: !3082)
!3197 = !DILocation(line: 589, column: 16, scope: !3082)
!3198 = !DILocation(line: 589, column: 27, scope: !3082)
!3199 = !DILocation(line: 589, column: 30, scope: !3082)
!3200 = !DILocation(line: 589, column: 41, scope: !3082)
!3201 = !DILocation(line: 589, column: 47, scope: !3082)
!3202 = !DILocation(line: 589, column: 50, scope: !3082)
!3203 = !DILocation(line: 589, column: 54, scope: !3082)
!3204 = !DILocation(line: 589, column: 59, scope: !3082)
!3205 = !DILocation(line: 589, column: 2, scope: !3082)
!3206 = !DILocation(line: 590, column: 1, scope: !3082)
!3207 = distinct !DISubprogram(name: "node_frames_init", scope: !3, file: !3, line: 437, type: !3208, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !1947, !207}
!3210 = !DILocalVariable(name: "nf", arg: 1, scope: !3207, file: !3, line: 437, type: !1947)
!3211 = !DILocation(line: 437, column: 40, scope: !3207)
!3212 = !DILocalVariable(name: "totframe", arg: 2, scope: !3207, file: !3, line: 437, type: !207)
!3213 = !DILocation(line: 437, column: 48, scope: !3207)
!3214 = !DILocalVariable(name: "i", scope: !3207, file: !3, line: 439, type: !207)
!3215 = !DILocation(line: 439, column: 6, scope: !3207)
!3216 = !DILocation(line: 441, column: 17, scope: !3207)
!3217 = !DILocation(line: 441, column: 2, scope: !3207)
!3218 = !DILocation(line: 441, column: 6, scope: !3207)
!3219 = !DILocation(line: 441, column: 15, scope: !3207)
!3220 = !DILocation(line: 442, column: 9, scope: !3207)
!3221 = !DILocation(line: 442, column: 13, scope: !3207)
!3222 = !DILocation(line: 442, column: 2, scope: !3207)
!3223 = !DILocation(line: 444, column: 2, scope: !3207)
!3224 = !DILocation(line: 444, column: 6, scope: !3207)
!3225 = !DILocation(line: 444, column: 11, scope: !3207)
!3226 = !DILocation(line: 445, column: 9, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 445, column: 2)
!3228 = !DILocation(line: 445, column: 7, scope: !3227)
!3229 = !DILocation(line: 445, column: 14, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 445, column: 2)
!3231 = !DILocation(line: 445, column: 16, scope: !3230)
!3232 = !DILocation(line: 445, column: 2, scope: !3227)
!3233 = !DILocation(line: 446, column: 3, scope: !3230)
!3234 = !DILocation(line: 446, column: 7, scope: !3230)
!3235 = !DILocation(line: 446, column: 18, scope: !3230)
!3236 = !DILocation(line: 446, column: 21, scope: !3230)
!3237 = !DILocation(line: 445, column: 22, scope: !3230)
!3238 = !DILocation(line: 445, column: 2, scope: !3230)
!3239 = distinct !{!3239, !3232, !3240}
!3240 = !DILocation(line: 446, column: 24, scope: !3227)
!3241 = !DILocation(line: 447, column: 1, scope: !3207)
!3242 = distinct !DISubprogram(name: "create_frame", scope: !3, file: !3, line: 449, type: !3243, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !3245, !923, !923, !958, !250}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!3246 = !DILocalVariable(name: "frame", arg: 1, scope: !3242, file: !3, line: 449, type: !3245)
!3247 = !DILocation(line: 449, column: 33, scope: !3242)
!3248 = !DILocalVariable(name: "co", arg: 2, scope: !3242, file: !3, line: 449, type: !923)
!3249 = !DILocation(line: 449, column: 52, scope: !3242)
!3250 = !DILocalVariable(name: "radius", arg: 3, scope: !3242, file: !3, line: 450, type: !923)
!3251 = !DILocation(line: 450, column: 38, scope: !3242)
!3252 = !DILocalVariable(name: "mat", arg: 4, scope: !3242, file: !3, line: 451, type: !958)
!3253 = !DILocation(line: 451, column: 32, scope: !3242)
!3254 = !DILocalVariable(name: "offset", arg: 5, scope: !3242, file: !3, line: 451, type: !250)
!3255 = !DILocation(line: 451, column: 49, scope: !3242)
!3256 = !DILocalVariable(name: "rx", scope: !3242, file: !3, line: 453, type: !290)
!3257 = !DILocation(line: 453, column: 8, scope: !3242)
!3258 = !DILocalVariable(name: "ry", scope: !3242, file: !3, line: 453, type: !290)
!3259 = !DILocation(line: 453, column: 15, scope: !3242)
!3260 = !DILocalVariable(name: "rz", scope: !3242, file: !3, line: 453, type: !290)
!3261 = !DILocation(line: 453, column: 22, scope: !3242)
!3262 = !DILocalVariable(name: "i", scope: !3242, file: !3, line: 454, type: !207)
!3263 = !DILocation(line: 454, column: 6, scope: !3242)
!3264 = !DILocation(line: 456, column: 14, scope: !3242)
!3265 = !DILocation(line: 456, column: 18, scope: !3242)
!3266 = !DILocation(line: 456, column: 26, scope: !3242)
!3267 = !DILocation(line: 456, column: 2, scope: !3242)
!3268 = !DILocation(line: 457, column: 14, scope: !3242)
!3269 = !DILocation(line: 457, column: 18, scope: !3242)
!3270 = !DILocation(line: 457, column: 26, scope: !3242)
!3271 = !DILocation(line: 457, column: 2, scope: !3242)
!3272 = !DILocation(line: 459, column: 14, scope: !3242)
!3273 = !DILocation(line: 459, column: 21, scope: !3242)
!3274 = !DILocation(line: 459, column: 28, scope: !3242)
!3275 = !DILocation(line: 459, column: 32, scope: !3242)
!3276 = !DILocation(line: 459, column: 2, scope: !3242)
!3277 = !DILocation(line: 460, column: 14, scope: !3242)
!3278 = !DILocation(line: 460, column: 21, scope: !3242)
!3279 = !DILocation(line: 460, column: 28, scope: !3242)
!3280 = !DILocation(line: 460, column: 35, scope: !3242)
!3281 = !DILocation(line: 460, column: 42, scope: !3242)
!3282 = !DILocation(line: 460, column: 2, scope: !3242)
!3283 = !DILocation(line: 462, column: 14, scope: !3242)
!3284 = !DILocation(line: 462, column: 21, scope: !3242)
!3285 = !DILocation(line: 462, column: 28, scope: !3242)
!3286 = !DILocation(line: 462, column: 32, scope: !3242)
!3287 = !DILocation(line: 462, column: 2, scope: !3242)
!3288 = !DILocation(line: 463, column: 14, scope: !3242)
!3289 = !DILocation(line: 463, column: 21, scope: !3242)
!3290 = !DILocation(line: 463, column: 28, scope: !3242)
!3291 = !DILocation(line: 463, column: 35, scope: !3242)
!3292 = !DILocation(line: 463, column: 42, scope: !3242)
!3293 = !DILocation(line: 463, column: 2, scope: !3242)
!3294 = !DILocation(line: 465, column: 14, scope: !3242)
!3295 = !DILocation(line: 465, column: 21, scope: !3242)
!3296 = !DILocation(line: 465, column: 28, scope: !3242)
!3297 = !DILocation(line: 465, column: 32, scope: !3242)
!3298 = !DILocation(line: 465, column: 2, scope: !3242)
!3299 = !DILocation(line: 466, column: 14, scope: !3242)
!3300 = !DILocation(line: 466, column: 21, scope: !3242)
!3301 = !DILocation(line: 466, column: 28, scope: !3242)
!3302 = !DILocation(line: 466, column: 35, scope: !3242)
!3303 = !DILocation(line: 466, column: 42, scope: !3242)
!3304 = !DILocation(line: 466, column: 2, scope: !3242)
!3305 = !DILocation(line: 468, column: 14, scope: !3242)
!3306 = !DILocation(line: 468, column: 21, scope: !3242)
!3307 = !DILocation(line: 468, column: 28, scope: !3242)
!3308 = !DILocation(line: 468, column: 32, scope: !3242)
!3309 = !DILocation(line: 468, column: 2, scope: !3242)
!3310 = !DILocation(line: 469, column: 14, scope: !3242)
!3311 = !DILocation(line: 469, column: 21, scope: !3242)
!3312 = !DILocation(line: 469, column: 28, scope: !3242)
!3313 = !DILocation(line: 469, column: 35, scope: !3242)
!3314 = !DILocation(line: 469, column: 42, scope: !3242)
!3315 = !DILocation(line: 469, column: 2, scope: !3242)
!3316 = !DILocation(line: 471, column: 14, scope: !3242)
!3317 = !DILocation(line: 471, column: 18, scope: !3242)
!3318 = !DILocation(line: 471, column: 26, scope: !3242)
!3319 = !DILocation(line: 471, column: 2, scope: !3242)
!3320 = !DILocation(line: 472, column: 9, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 472, column: 2)
!3322 = !DILocation(line: 472, column: 7, scope: !3321)
!3323 = !DILocation(line: 472, column: 14, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 472, column: 2)
!3325 = !DILocation(line: 472, column: 16, scope: !3324)
!3326 = !DILocation(line: 472, column: 2, scope: !3321)
!3327 = !DILocation(line: 473, column: 15, scope: !3324)
!3328 = !DILocation(line: 473, column: 22, scope: !3324)
!3329 = !DILocation(line: 473, column: 25, scope: !3324)
!3330 = !DILocation(line: 473, column: 29, scope: !3324)
!3331 = !DILocation(line: 473, column: 36, scope: !3324)
!3332 = !DILocation(line: 473, column: 39, scope: !3324)
!3333 = !DILocation(line: 473, column: 43, scope: !3324)
!3334 = !DILocation(line: 473, column: 3, scope: !3324)
!3335 = !DILocation(line: 472, column: 22, scope: !3324)
!3336 = !DILocation(line: 472, column: 2, scope: !3324)
!3337 = distinct !{!3337, !3326, !3338}
!3338 = !DILocation(line: 473, column: 45, scope: !3321)
!3339 = !DILocation(line: 474, column: 1, scope: !3242)
!3340 = distinct !DISubprogram(name: "negate_v3", scope: !2226, file: !2226, line: 576, type: !2955, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3341 = !DILocalVariable(name: "r", arg: 1, scope: !3340, file: !2226, line: 576, type: !949)
!3342 = !DILocation(line: 576, column: 30, scope: !3340)
!3343 = !DILocation(line: 578, column: 10, scope: !3340)
!3344 = !DILocation(line: 578, column: 9, scope: !3340)
!3345 = !DILocation(line: 578, column: 2, scope: !3340)
!3346 = !DILocation(line: 578, column: 7, scope: !3340)
!3347 = !DILocation(line: 579, column: 10, scope: !3340)
!3348 = !DILocation(line: 579, column: 9, scope: !3340)
!3349 = !DILocation(line: 579, column: 2, scope: !3340)
!3350 = !DILocation(line: 579, column: 7, scope: !3340)
!3351 = !DILocation(line: 580, column: 10, scope: !3340)
!3352 = !DILocation(line: 580, column: 9, scope: !3340)
!3353 = !DILocation(line: 580, column: 2, scope: !3340)
!3354 = !DILocation(line: 580, column: 7, scope: !3340)
!3355 = !DILocation(line: 581, column: 1, scope: !3340)
!3356 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !2226, file: !2226, line: 309, type: !2243, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3357 = !DILocalVariable(name: "r", arg: 1, scope: !3356, file: !2226, line: 309, type: !949)
!3358 = !DILocation(line: 309, column: 32, scope: !3356)
!3359 = !DILocalVariable(name: "a", arg: 2, scope: !3356, file: !2226, line: 309, type: !923)
!3360 = !DILocation(line: 309, column: 50, scope: !3356)
!3361 = !DILocalVariable(name: "b", arg: 3, scope: !3356, file: !2226, line: 309, type: !923)
!3362 = !DILocation(line: 309, column: 68, scope: !3356)
!3363 = !DILocation(line: 311, column: 9, scope: !3356)
!3364 = !DILocation(line: 311, column: 16, scope: !3356)
!3365 = !DILocation(line: 311, column: 14, scope: !3356)
!3366 = !DILocation(line: 311, column: 2, scope: !3356)
!3367 = !DILocation(line: 311, column: 7, scope: !3356)
!3368 = !DILocation(line: 312, column: 9, scope: !3356)
!3369 = !DILocation(line: 312, column: 16, scope: !3356)
!3370 = !DILocation(line: 312, column: 14, scope: !3356)
!3371 = !DILocation(line: 312, column: 2, scope: !3356)
!3372 = !DILocation(line: 312, column: 7, scope: !3356)
!3373 = !DILocation(line: 313, column: 9, scope: !3356)
!3374 = !DILocation(line: 313, column: 16, scope: !3356)
!3375 = !DILocation(line: 313, column: 14, scope: !3356)
!3376 = !DILocation(line: 313, column: 2, scope: !3356)
!3377 = !DILocation(line: 313, column: 7, scope: !3356)
!3378 = !DILocation(line: 314, column: 1, scope: !3356)
!3379 = distinct !DISubprogram(name: "connection_node_mat", scope: !3, file: !3, line: 522, type: !3380, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!207, !958, !207, !2295, !1939}
!3382 = !DILocalVariable(name: "mat", arg: 1, scope: !3379, file: !3, line: 522, type: !958)
!3383 = !DILocation(line: 522, column: 38, scope: !3379)
!3384 = !DILocalVariable(name: "v", arg: 2, scope: !3379, file: !3, line: 522, type: !207)
!3385 = !DILocation(line: 522, column: 53, scope: !3379)
!3386 = !DILocalVariable(name: "emap", arg: 3, scope: !3379, file: !3, line: 522, type: !2295)
!3387 = !DILocation(line: 522, column: 75, scope: !3379)
!3388 = !DILocalVariable(name: "emat", arg: 4, scope: !3379, file: !3, line: 522, type: !1939)
!3389 = !DILocation(line: 522, column: 87, scope: !3379)
!3390 = !DILocalVariable(name: "axis", scope: !3379, file: !3, line: 524, type: !290)
!3391 = !DILocation(line: 524, column: 8, scope: !3379)
!3392 = !DILocalVariable(name: "angle", scope: !3379, file: !3, line: 524, type: !250)
!3393 = !DILocation(line: 524, column: 17, scope: !3379)
!3394 = !DILocalVariable(name: "ine", scope: !3379, file: !3, line: 524, type: !1202)
!3395 = !DILocation(line: 524, column: 24, scope: !3379)
!3396 = !DILocalVariable(name: "oute", scope: !3379, file: !3, line: 524, type: !1202)
!3397 = !DILocation(line: 524, column: 35, scope: !3379)
!3398 = !DILocalVariable(name: "e1", scope: !3379, file: !3, line: 525, type: !1939)
!3399 = !DILocation(line: 525, column: 8, scope: !3379)
!3400 = !DILocalVariable(name: "e2", scope: !3379, file: !3, line: 525, type: !1939)
!3401 = !DILocation(line: 525, column: 13, scope: !3379)
!3402 = !DILocation(line: 527, column: 8, scope: !3379)
!3403 = !DILocation(line: 527, column: 13, scope: !3379)
!3404 = !DILocation(line: 527, column: 18, scope: !3379)
!3405 = !DILocation(line: 527, column: 21, scope: !3379)
!3406 = !DILocation(line: 527, column: 5, scope: !3379)
!3407 = !DILocation(line: 528, column: 8, scope: !3379)
!3408 = !DILocation(line: 528, column: 13, scope: !3379)
!3409 = !DILocation(line: 528, column: 18, scope: !3379)
!3410 = !DILocation(line: 528, column: 21, scope: !3379)
!3411 = !DILocation(line: 528, column: 5, scope: !3379)
!3412 = !DILocation(line: 530, column: 6, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 530, column: 6)
!3414 = !DILocation(line: 530, column: 10, scope: !3413)
!3415 = !DILocation(line: 530, column: 20, scope: !3413)
!3416 = !DILocation(line: 530, column: 17, scope: !3413)
!3417 = !DILocation(line: 530, column: 22, scope: !3413)
!3418 = !DILocation(line: 530, column: 25, scope: !3413)
!3419 = !DILocation(line: 530, column: 29, scope: !3413)
!3420 = !DILocation(line: 530, column: 39, scope: !3413)
!3421 = !DILocation(line: 530, column: 36, scope: !3413)
!3422 = !DILocation(line: 530, column: 6, scope: !3379)
!3423 = !DILocation(line: 531, column: 14, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 530, column: 42)
!3425 = !DILocation(line: 531, column: 19, scope: !3424)
!3426 = !DILocation(line: 531, column: 23, scope: !3424)
!3427 = !DILocation(line: 531, column: 3, scope: !3424)
!3428 = !DILocation(line: 532, column: 14, scope: !3424)
!3429 = !DILocation(line: 532, column: 20, scope: !3424)
!3430 = !DILocation(line: 532, column: 24, scope: !3424)
!3431 = !DILocation(line: 532, column: 3, scope: !3424)
!3432 = !DILocation(line: 533, column: 2, scope: !3424)
!3433 = !DILocation(line: 534, column: 11, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 534, column: 11)
!3435 = !DILocation(line: 534, column: 15, scope: !3434)
!3436 = !DILocation(line: 534, column: 25, scope: !3434)
!3437 = !DILocation(line: 534, column: 22, scope: !3434)
!3438 = !DILocation(line: 534, column: 27, scope: !3434)
!3439 = !DILocation(line: 534, column: 30, scope: !3434)
!3440 = !DILocation(line: 534, column: 34, scope: !3434)
!3441 = !DILocation(line: 534, column: 44, scope: !3434)
!3442 = !DILocation(line: 534, column: 41, scope: !3434)
!3443 = !DILocation(line: 534, column: 11, scope: !3413)
!3444 = !DILocation(line: 535, column: 14, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 534, column: 47)
!3446 = !DILocation(line: 535, column: 19, scope: !3445)
!3447 = !DILocation(line: 535, column: 23, scope: !3445)
!3448 = !DILocation(line: 535, column: 3, scope: !3445)
!3449 = !DILocation(line: 536, column: 14, scope: !3445)
!3450 = !DILocation(line: 536, column: 20, scope: !3445)
!3451 = !DILocation(line: 536, column: 24, scope: !3445)
!3452 = !DILocation(line: 536, column: 3, scope: !3445)
!3453 = !DILocation(line: 537, column: 2, scope: !3445)
!3454 = !DILocation(line: 539, column: 3, scope: !3434)
!3455 = !DILocation(line: 542, column: 32, scope: !3379)
!3456 = !DILocation(line: 542, column: 40, scope: !3379)
!3457 = !DILocation(line: 542, column: 10, scope: !3379)
!3458 = !DILocation(line: 542, column: 49, scope: !3379)
!3459 = !DILocation(line: 542, column: 8, scope: !3379)
!3460 = !DILocation(line: 543, column: 16, scope: !3379)
!3461 = !DILocation(line: 543, column: 22, scope: !3379)
!3462 = !DILocation(line: 543, column: 30, scope: !3379)
!3463 = !DILocation(line: 543, column: 2, scope: !3379)
!3464 = !DILocation(line: 544, column: 15, scope: !3379)
!3465 = !DILocation(line: 544, column: 2, scope: !3379)
!3466 = !DILocation(line: 547, column: 13, scope: !3379)
!3467 = !DILocation(line: 547, column: 21, scope: !3379)
!3468 = !DILocation(line: 547, column: 2, scope: !3379)
!3469 = !DILocation(line: 548, column: 30, scope: !3379)
!3470 = !DILocation(line: 548, column: 38, scope: !3379)
!3471 = !DILocation(line: 548, column: 46, scope: !3379)
!3472 = !DILocation(line: 548, column: 52, scope: !3379)
!3473 = !DILocation(line: 548, column: 2, scope: !3379)
!3474 = !DILocation(line: 549, column: 30, scope: !3379)
!3475 = !DILocation(line: 549, column: 38, scope: !3379)
!3476 = !DILocation(line: 549, column: 46, scope: !3379)
!3477 = !DILocation(line: 549, column: 52, scope: !3379)
!3478 = !DILocation(line: 549, column: 2, scope: !3379)
!3479 = !DILocation(line: 551, column: 2, scope: !3379)
!3480 = !DILocation(line: 552, column: 1, scope: !3379)
!3481 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2226, file: !2226, line: 64, type: !3482, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{null, !949, !923}
!3484 = !DILocalVariable(name: "r", arg: 1, scope: !3481, file: !2226, line: 64, type: !949)
!3485 = !DILocation(line: 64, column: 31, scope: !3481)
!3486 = !DILocalVariable(name: "a", arg: 2, scope: !3481, file: !2226, line: 64, type: !923)
!3487 = !DILocation(line: 64, column: 49, scope: !3481)
!3488 = !DILocation(line: 66, column: 9, scope: !3481)
!3489 = !DILocation(line: 66, column: 2, scope: !3481)
!3490 = !DILocation(line: 66, column: 7, scope: !3481)
!3491 = !DILocation(line: 67, column: 9, scope: !3481)
!3492 = !DILocation(line: 67, column: 2, scope: !3481)
!3493 = !DILocation(line: 67, column: 7, scope: !3481)
!3494 = !DILocation(line: 68, column: 9, scope: !3481)
!3495 = !DILocation(line: 68, column: 2, scope: !3481)
!3496 = !DILocation(line: 68, column: 7, scope: !3481)
!3497 = !DILocation(line: 69, column: 1, scope: !3481)
!3498 = distinct !DISubprogram(name: "skin_merge_close_frame_verts", scope: !3, file: !3, line: 1457, type: !3499, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{null, !1947, !207, !2295, !2080}
!3501 = !DILocalVariable(name: "skin_nodes", arg: 1, scope: !3498, file: !3, line: 1457, type: !1947)
!3502 = !DILocation(line: 1457, column: 52, scope: !3498)
!3503 = !DILocalVariable(name: "totvert", arg: 2, scope: !3498, file: !3, line: 1457, type: !207)
!3504 = !DILocation(line: 1457, column: 68, scope: !3498)
!3505 = !DILocalVariable(name: "emap", arg: 3, scope: !3498, file: !3, line: 1458, type: !2295)
!3506 = !DILocation(line: 1458, column: 61, scope: !3498)
!3507 = !DILocalVariable(name: "medge", arg: 4, scope: !3498, file: !3, line: 1459, type: !2080)
!3508 = !DILocation(line: 1459, column: 55, scope: !3498)
!3509 = !DILocalVariable(name: "hull_frames", scope: !3498, file: !3, line: 1461, type: !3510)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3511 = !DILocation(line: 1461, column: 10, scope: !3498)
!3512 = !DILocalVariable(name: "v", scope: !3498, file: !3, line: 1462, type: !207)
!3513 = !DILocation(line: 1462, column: 6, scope: !3498)
!3514 = !DILocalVariable(name: "tothullframe", scope: !3498, file: !3, line: 1462, type: !207)
!3515 = !DILocation(line: 1462, column: 9, scope: !3498)
!3516 = !DILocation(line: 1464, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1464, column: 2)
!3518 = !DILocation(line: 1464, column: 7, scope: !3517)
!3519 = !DILocation(line: 1464, column: 14, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1464, column: 2)
!3521 = !DILocation(line: 1464, column: 18, scope: !3520)
!3522 = !DILocation(line: 1464, column: 16, scope: !3520)
!3523 = !DILocation(line: 1464, column: 2, scope: !3517)
!3524 = !DILocation(line: 1466, column: 8, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 1466, column: 7)
!3526 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 1464, column: 32)
!3527 = !DILocation(line: 1466, column: 19, scope: !3525)
!3528 = !DILocation(line: 1466, column: 22, scope: !3525)
!3529 = !DILocation(line: 1466, column: 7, scope: !3526)
!3530 = !DILocation(line: 1467, column: 38, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 1466, column: 32)
!3532 = !DILocation(line: 1467, column: 41, scope: !3531)
!3533 = !DILocation(line: 1468, column: 38, scope: !3531)
!3534 = !DILocation(line: 1468, column: 44, scope: !3531)
!3535 = !DILocation(line: 1467, column: 18, scope: !3531)
!3536 = !DILocation(line: 1467, column: 16, scope: !3531)
!3537 = !DILocation(line: 1470, column: 24, scope: !3531)
!3538 = !DILocation(line: 1470, column: 37, scope: !3531)
!3539 = !DILocation(line: 1470, column: 4, scope: !3531)
!3540 = !DILocation(line: 1471, column: 4, scope: !3531)
!3541 = !DILocation(line: 1471, column: 14, scope: !3531)
!3542 = !DILocation(line: 1472, column: 3, scope: !3531)
!3543 = !DILocation(line: 1473, column: 2, scope: !3526)
!3544 = !DILocation(line: 1464, column: 28, scope: !3520)
!3545 = !DILocation(line: 1464, column: 2, scope: !3520)
!3546 = distinct !{!3546, !3523, !3547}
!3547 = !DILocation(line: 1473, column: 2, scope: !3517)
!3548 = !DILocation(line: 1474, column: 1, scope: !3498)
!3549 = distinct !DISubprogram(name: "output_frames", scope: !3, file: !3, line: 997, type: !3550, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{null, !1847, !1947, !1597}
!3552 = !DILocalVariable(name: "bm", arg: 1, scope: !3549, file: !3, line: 997, type: !1847)
!3553 = !DILocation(line: 997, column: 34, scope: !3549)
!3554 = !DILocalVariable(name: "sn", arg: 2, scope: !3549, file: !3, line: 998, type: !1947)
!3555 = !DILocation(line: 998, column: 37, scope: !3549)
!3556 = !DILocalVariable(name: "input_dvert", arg: 3, scope: !3549, file: !3, line: 999, type: !1597)
!3557 = !DILocation(line: 999, column: 46, scope: !3549)
!3558 = !DILocalVariable(name: "f", scope: !3549, file: !3, line: 1001, type: !3245)
!3559 = !DILocation(line: 1001, column: 9, scope: !3549)
!3560 = !DILocalVariable(name: "i", scope: !3549, file: !3, line: 1002, type: !207)
!3561 = !DILocation(line: 1002, column: 6, scope: !3549)
!3562 = !DILocalVariable(name: "j", scope: !3549, file: !3, line: 1002, type: !207)
!3563 = !DILocation(line: 1002, column: 9, scope: !3549)
!3564 = !DILocation(line: 1005, column: 9, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 1005, column: 2)
!3566 = !DILocation(line: 1005, column: 7, scope: !3565)
!3567 = !DILocation(line: 1005, column: 14, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3565, file: !3, line: 1005, column: 2)
!3569 = !DILocation(line: 1005, column: 18, scope: !3568)
!3570 = !DILocation(line: 1005, column: 22, scope: !3568)
!3571 = !DILocation(line: 1005, column: 16, scope: !3568)
!3572 = !DILocation(line: 1005, column: 2, scope: !3565)
!3573 = !DILocation(line: 1006, column: 8, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1005, column: 37)
!3575 = !DILocation(line: 1006, column: 12, scope: !3574)
!3576 = !DILocation(line: 1006, column: 19, scope: !3574)
!3577 = !DILocation(line: 1006, column: 5, scope: !3574)
!3578 = !DILocation(line: 1007, column: 10, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 1007, column: 3)
!3580 = !DILocation(line: 1007, column: 8, scope: !3579)
!3581 = !DILocation(line: 1007, column: 15, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 1007, column: 3)
!3583 = !DILocation(line: 1007, column: 17, scope: !3582)
!3584 = !DILocation(line: 1007, column: 3, scope: !3579)
!3585 = !DILocation(line: 1008, column: 9, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 1008, column: 8)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 1007, column: 27)
!3588 = !DILocation(line: 1008, column: 12, scope: !3586)
!3589 = !DILocation(line: 1008, column: 18, scope: !3586)
!3590 = !DILocation(line: 1008, column: 21, scope: !3586)
!3591 = !DILocation(line: 1008, column: 8, scope: !3587)
!3592 = !DILocalVariable(name: "v", scope: !3593, file: !3, line: 1009, type: !270)
!3593 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 1008, column: 28)
!3594 = !DILocation(line: 1009, column: 13, scope: !3593)
!3595 = !DILocation(line: 1009, column: 46, scope: !3593)
!3596 = !DILocation(line: 1009, column: 50, scope: !3593)
!3597 = !DILocation(line: 1009, column: 53, scope: !3593)
!3598 = !DILocation(line: 1009, column: 56, scope: !3593)
!3599 = !DILocation(line: 1009, column: 31, scope: !3593)
!3600 = !DILocation(line: 1009, column: 17, scope: !3593)
!3601 = !DILocation(line: 1009, column: 20, scope: !3593)
!3602 = !DILocation(line: 1009, column: 26, scope: !3593)
!3603 = !DILocation(line: 1009, column: 29, scope: !3593)
!3604 = !DILocation(line: 1011, column: 9, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 1011, column: 9)
!3606 = !DILocation(line: 1011, column: 9, scope: !3593)
!3607 = !DILocalVariable(name: "dv", scope: !3608, file: !3, line: 1012, type: !1413)
!3608 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1011, column: 22)
!3609 = !DILocation(line: 1012, column: 19, scope: !3608)
!3610 = !DILocation(line: 1013, column: 33, scope: !3608)
!3611 = !DILocation(line: 1013, column: 37, scope: !3608)
!3612 = !DILocation(line: 1014, column: 32, scope: !3608)
!3613 = !DILocation(line: 1014, column: 35, scope: !3608)
!3614 = !DILocation(line: 1014, column: 40, scope: !3608)
!3615 = !DILocation(line: 1013, column: 11, scope: !3608)
!3616 = !DILocation(line: 1013, column: 9, scope: !3608)
!3617 = !DILocation(line: 1018, column: 19, scope: !3608)
!3618 = !DILocation(line: 1018, column: 23, scope: !3608)
!3619 = !DILocation(line: 1018, column: 6, scope: !3608)
!3620 = !DILocation(line: 1019, column: 5, scope: !3608)
!3621 = !DILocation(line: 1020, column: 4, scope: !3593)
!3622 = !DILocation(line: 1021, column: 3, scope: !3587)
!3623 = !DILocation(line: 1007, column: 23, scope: !3582)
!3624 = !DILocation(line: 1007, column: 3, scope: !3582)
!3625 = distinct !{!3625, !3584, !3626}
!3626 = !DILocation(line: 1021, column: 3, scope: !3579)
!3627 = !DILocation(line: 1022, column: 2, scope: !3574)
!3628 = !DILocation(line: 1005, column: 33, scope: !3568)
!3629 = !DILocation(line: 1005, column: 2, scope: !3568)
!3630 = distinct !{!3630, !3572, !3631}
!3631 = !DILocation(line: 1022, column: 2, scope: !3565)
!3632 = !DILocation(line: 1023, column: 1, scope: !3549)
!3633 = distinct !DISubprogram(name: "skin_update_merged_vertices", scope: !3, file: !3, line: 1476, type: !3208, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3634 = !DILocalVariable(name: "skin_nodes", arg: 1, scope: !3633, file: !3, line: 1476, type: !1947)
!3635 = !DILocation(line: 1476, column: 51, scope: !3633)
!3636 = !DILocalVariable(name: "totvert", arg: 2, scope: !3633, file: !3, line: 1476, type: !207)
!3637 = !DILocation(line: 1476, column: 67, scope: !3633)
!3638 = !DILocalVariable(name: "v", scope: !3633, file: !3, line: 1478, type: !207)
!3639 = !DILocation(line: 1478, column: 6, scope: !3633)
!3640 = !DILocation(line: 1480, column: 9, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 1480, column: 2)
!3642 = !DILocation(line: 1480, column: 7, scope: !3641)
!3643 = !DILocation(line: 1480, column: 14, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1480, column: 2)
!3645 = !DILocation(line: 1480, column: 18, scope: !3644)
!3646 = !DILocation(line: 1480, column: 16, scope: !3644)
!3647 = !DILocation(line: 1480, column: 2, scope: !3641)
!3648 = !DILocalVariable(name: "sn", scope: !3649, file: !3, line: 1481, type: !1947)
!3649 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 1480, column: 32)
!3650 = !DILocation(line: 1481, column: 13, scope: !3649)
!3651 = !DILocation(line: 1481, column: 19, scope: !3649)
!3652 = !DILocation(line: 1481, column: 30, scope: !3649)
!3653 = !DILocalVariable(name: "i", scope: !3649, file: !3, line: 1482, type: !207)
!3654 = !DILocation(line: 1482, column: 7, scope: !3649)
!3655 = !DILocalVariable(name: "j", scope: !3649, file: !3, line: 1482, type: !207)
!3656 = !DILocation(line: 1482, column: 10, scope: !3649)
!3657 = !DILocation(line: 1484, column: 10, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1484, column: 3)
!3659 = !DILocation(line: 1484, column: 8, scope: !3658)
!3660 = !DILocation(line: 1484, column: 15, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 1484, column: 3)
!3662 = !DILocation(line: 1484, column: 19, scope: !3661)
!3663 = !DILocation(line: 1484, column: 23, scope: !3661)
!3664 = !DILocation(line: 1484, column: 17, scope: !3661)
!3665 = !DILocation(line: 1484, column: 3, scope: !3658)
!3666 = !DILocalVariable(name: "f", scope: !3667, file: !3, line: 1485, type: !3245)
!3667 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 1484, column: 38)
!3668 = !DILocation(line: 1485, column: 11, scope: !3667)
!3669 = !DILocation(line: 1485, column: 16, scope: !3667)
!3670 = !DILocation(line: 1485, column: 20, scope: !3667)
!3671 = !DILocation(line: 1485, column: 27, scope: !3667)
!3672 = !DILocation(line: 1487, column: 11, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 1487, column: 4)
!3674 = !DILocation(line: 1487, column: 9, scope: !3673)
!3675 = !DILocation(line: 1487, column: 16, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1487, column: 4)
!3677 = !DILocation(line: 1487, column: 18, scope: !3676)
!3678 = !DILocation(line: 1487, column: 4, scope: !3673)
!3679 = !DILocation(line: 1488, column: 9, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1488, column: 9)
!3681 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1487, column: 28)
!3682 = !DILocation(line: 1488, column: 12, scope: !3680)
!3683 = !DILocation(line: 1488, column: 18, scope: !3680)
!3684 = !DILocation(line: 1488, column: 21, scope: !3680)
!3685 = !DILocation(line: 1488, column: 9, scope: !3681)
!3686 = !DILocation(line: 1492, column: 20, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 1488, column: 28)
!3688 = !DILocation(line: 1492, column: 23, scope: !3687)
!3689 = !DILocation(line: 1492, column: 29, scope: !3687)
!3690 = !DILocation(line: 1492, column: 32, scope: !3687)
!3691 = !DILocation(line: 1492, column: 39, scope: !3687)
!3692 = !DILocation(line: 1492, column: 45, scope: !3687)
!3693 = !DILocation(line: 1492, column: 48, scope: !3687)
!3694 = !DILocation(line: 1492, column: 54, scope: !3687)
!3695 = !DILocation(line: 1492, column: 57, scope: !3687)
!3696 = !DILocation(line: 1492, column: 6, scope: !3687)
!3697 = !DILocation(line: 1492, column: 9, scope: !3687)
!3698 = !DILocation(line: 1492, column: 15, scope: !3687)
!3699 = !DILocation(line: 1492, column: 18, scope: !3687)
!3700 = !DILocation(line: 1493, column: 5, scope: !3687)
!3701 = !DILocation(line: 1494, column: 4, scope: !3681)
!3702 = !DILocation(line: 1487, column: 24, scope: !3676)
!3703 = !DILocation(line: 1487, column: 4, scope: !3676)
!3704 = distinct !{!3704, !3678, !3705}
!3705 = !DILocation(line: 1494, column: 4, scope: !3673)
!3706 = !DILocation(line: 1495, column: 3, scope: !3667)
!3707 = !DILocation(line: 1484, column: 34, scope: !3661)
!3708 = !DILocation(line: 1484, column: 3, scope: !3661)
!3709 = distinct !{!3709, !3665, !3710}
!3710 = !DILocation(line: 1495, column: 3, scope: !3658)
!3711 = !DILocation(line: 1496, column: 2, scope: !3649)
!3712 = !DILocation(line: 1480, column: 27, scope: !3644)
!3713 = !DILocation(line: 1480, column: 2, scope: !3644)
!3714 = distinct !{!3714, !3647, !3715}
!3715 = !DILocation(line: 1496, column: 2, scope: !3641)
!3716 = !DILocation(line: 1497, column: 1, scope: !3633)
!3717 = distinct !DISubprogram(name: "skin_output_branch_hulls", scope: !3, file: !3, line: 1673, type: !3718, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{!984, !3720, !1947, !207, !2295, !2080}
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!3721 = !DILocalVariable(name: "so", arg: 1, scope: !3717, file: !3, line: 1673, type: !3720)
!3722 = !DILocation(line: 1673, column: 50, scope: !3717)
!3723 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !3717, file: !3, line: 1673, type: !1947)
!3724 = !DILocation(line: 1673, column: 64, scope: !3717)
!3725 = !DILocalVariable(name: "totvert", arg: 3, scope: !3717, file: !3, line: 1674, type: !207)
!3726 = !DILocation(line: 1674, column: 42, scope: !3717)
!3727 = !DILocalVariable(name: "emap", arg: 4, scope: !3717, file: !3, line: 1674, type: !2295)
!3728 = !DILocation(line: 1674, column: 70, scope: !3717)
!3729 = !DILocalVariable(name: "medge", arg: 5, scope: !3717, file: !3, line: 1675, type: !2080)
!3730 = !DILocation(line: 1675, column: 51, scope: !3717)
!3731 = !DILocalVariable(name: "result", scope: !3717, file: !3, line: 1677, type: !984)
!3732 = !DILocation(line: 1677, column: 7, scope: !3717)
!3733 = !DILocalVariable(name: "v", scope: !3717, file: !3, line: 1678, type: !207)
!3734 = !DILocation(line: 1678, column: 6, scope: !3717)
!3735 = !DILocation(line: 1680, column: 9, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 1680, column: 2)
!3737 = !DILocation(line: 1680, column: 7, scope: !3736)
!3738 = !DILocation(line: 1680, column: 14, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 1680, column: 2)
!3740 = !DILocation(line: 1680, column: 18, scope: !3739)
!3741 = !DILocation(line: 1680, column: 16, scope: !3739)
!3742 = !DILocation(line: 1680, column: 2, scope: !3736)
!3743 = !DILocalVariable(name: "sn", scope: !3744, file: !3, line: 1681, type: !1947)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1680, column: 32)
!3745 = !DILocation(line: 1681, column: 13, scope: !3744)
!3746 = !DILocation(line: 1681, column: 19, scope: !3744)
!3747 = !DILocation(line: 1681, column: 30, scope: !3744)
!3748 = !DILocation(line: 1684, column: 8, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 1684, column: 7)
!3750 = !DILocation(line: 1684, column: 12, scope: !3749)
!3751 = !DILocation(line: 1684, column: 7, scope: !3744)
!3752 = !DILocalVariable(name: "hull_frames", scope: !3753, file: !3, line: 1685, type: !3510)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1684, column: 22)
!3754 = !DILocation(line: 1685, column: 12, scope: !3753)
!3755 = !DILocalVariable(name: "tothullframe", scope: !3753, file: !3, line: 1686, type: !207)
!3756 = !DILocation(line: 1686, column: 8, scope: !3753)
!3757 = !DILocation(line: 1688, column: 38, scope: !3753)
!3758 = !DILocation(line: 1688, column: 41, scope: !3753)
!3759 = !DILocation(line: 1689, column: 38, scope: !3753)
!3760 = !DILocation(line: 1689, column: 44, scope: !3753)
!3761 = !DILocation(line: 1688, column: 18, scope: !3753)
!3762 = !DILocation(line: 1688, column: 16, scope: !3753)
!3763 = !DILocation(line: 1691, column: 20, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1691, column: 8)
!3765 = !DILocation(line: 1691, column: 24, scope: !3764)
!3766 = !DILocation(line: 1691, column: 37, scope: !3764)
!3767 = !DILocation(line: 1691, column: 9, scope: !3764)
!3768 = !DILocation(line: 1691, column: 8, scope: !3753)
!3769 = !DILocation(line: 1692, column: 12, scope: !3764)
!3770 = !DILocation(line: 1692, column: 5, scope: !3764)
!3771 = !DILocation(line: 1694, column: 4, scope: !3753)
!3772 = !DILocation(line: 1694, column: 14, scope: !3753)
!3773 = !DILocation(line: 1695, column: 3, scope: !3753)
!3774 = !DILocation(line: 1696, column: 2, scope: !3744)
!3775 = !DILocation(line: 1680, column: 28, scope: !3739)
!3776 = !DILocation(line: 1680, column: 2, scope: !3739)
!3777 = distinct !{!3777, !3742, !3778}
!3778 = !DILocation(line: 1696, column: 2, scope: !3736)
!3779 = !DILocation(line: 1698, column: 9, scope: !3717)
!3780 = !DILocation(line: 1698, column: 2, scope: !3717)
!3781 = distinct !DISubprogram(name: "hull_merge_triangles", scope: !3, file: !3, line: 1379, type: !3782, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{null, !3720, !3784}
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!3786 = !DILocalVariable(name: "so", arg: 1, scope: !3781, file: !3, line: 1379, type: !3720)
!3787 = !DILocation(line: 1379, column: 46, scope: !3781)
!3788 = !DILocalVariable(name: "smd", arg: 2, scope: !3781, file: !3, line: 1379, type: !3784)
!3789 = !DILocation(line: 1379, column: 74, scope: !3781)
!3790 = !DILocalVariable(name: "iter", scope: !3781, file: !3, line: 1381, type: !3791)
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !176, line: 186, baseType: !3792)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !176, line: 164, size: 512, elements: !3793)
!3793 = !{!3794, !3874, !3875, !3876, !3877}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3792, file: !176, line: 179, baseType: !3795, size: 320)
!3795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3792, file: !176, line: 166, size: 320, elements: !3796)
!3796 = !{!3797, !3812, !3818, !3826, !3834, !3840, !3846, !3852, !3856, !3862, !3868}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3795, file: !176, line: 167, baseType: !3798, size: 192)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !176, line: 113, size: 192, elements: !3799)
!3799 = !{!3800}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3798, file: !176, line: 114, baseType: !3801, size: 192)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !3802, line: 80, baseType: !3803)
!3802 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !3802, line: 76, size: 192, elements: !3804)
!3804 = !{!3805, !3808, !3811}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3803, file: !3802, line: 77, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !3802, line: 47, baseType: !689)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3803, file: !3802, line: 78, baseType: !3809, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !3802, line: 45, flags: DIFlagFwdDecl)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3803, file: !3802, line: 79, baseType: !7, size: 32, offset: 128)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3795, file: !176, line: 169, baseType: !3813, size: 192)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !176, line: 116, size: 192, elements: !3814)
!3814 = !{!3815, !3816, !3817}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3813, file: !176, line: 117, baseType: !270, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3813, file: !176, line: 118, baseType: !333, size: 64, offset: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3813, file: !176, line: 118, baseType: !333, size: 64, offset: 128)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3795, file: !176, line: 170, baseType: !3819, size: 320)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !176, line: 120, size: 320, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824, !3825}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3819, file: !176, line: 121, baseType: !270, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3819, file: !176, line: 122, baseType: !317, size: 64, offset: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3819, file: !176, line: 122, baseType: !317, size: 64, offset: 128)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3819, file: !176, line: 123, baseType: !333, size: 64, offset: 192)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3819, file: !176, line: 123, baseType: !333, size: 64, offset: 256)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3795, file: !176, line: 171, baseType: !3827, size: 320)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !176, line: 125, size: 320, elements: !3828)
!3828 = !{!3829, !3830, !3831, !3832, !3833}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3827, file: !176, line: 126, baseType: !270, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3827, file: !176, line: 127, baseType: !317, size: 64, offset: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3827, file: !176, line: 127, baseType: !317, size: 64, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3827, file: !176, line: 128, baseType: !333, size: 64, offset: 192)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3827, file: !176, line: 128, baseType: !333, size: 64, offset: 256)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3795, file: !176, line: 172, baseType: !3835, size: 192)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !176, line: 130, size: 192, elements: !3836)
!3836 = !{!3837, !3838, !3839}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3835, file: !176, line: 131, baseType: !333, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3835, file: !176, line: 132, baseType: !317, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3835, file: !176, line: 132, baseType: !317, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3795, file: !176, line: 173, baseType: !3841, size: 192)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !176, line: 134, size: 192, elements: !3842)
!3842 = !{!3843, !3844, !3845}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3841, file: !176, line: 135, baseType: !317, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3841, file: !176, line: 136, baseType: !317, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3841, file: !176, line: 136, baseType: !317, size: 64, offset: 128)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3795, file: !176, line: 174, baseType: !3847, size: 192)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !176, line: 138, size: 192, elements: !3848)
!3848 = !{!3849, !3850, !3851}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3847, file: !176, line: 139, baseType: !333, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3847, file: !176, line: 140, baseType: !317, size: 64, offset: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3847, file: !176, line: 140, baseType: !317, size: 64, offset: 128)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3795, file: !176, line: 175, baseType: !3853, size: 64)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !176, line: 142, size: 64, elements: !3854)
!3854 = !{!3855}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3853, file: !176, line: 143, baseType: !333, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3795, file: !176, line: 176, baseType: !3857, size: 192)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !176, line: 145, size: 192, elements: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3857, file: !176, line: 146, baseType: !335, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3857, file: !176, line: 147, baseType: !317, size: 64, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3857, file: !176, line: 147, baseType: !317, size: 64, offset: 128)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3795, file: !176, line: 177, baseType: !3863, size: 192)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !176, line: 149, size: 192, elements: !3864)
!3864 = !{!3865, !3866, !3867}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3863, file: !176, line: 150, baseType: !335, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3863, file: !176, line: 151, baseType: !317, size: 64, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3863, file: !176, line: 151, baseType: !317, size: 64, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3795, file: !176, line: 178, baseType: !3869, size: 192)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !176, line: 153, size: 192, elements: !3870)
!3870 = !{!3871, !3872, !3873}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3869, file: !176, line: 154, baseType: !335, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3869, file: !176, line: 155, baseType: !317, size: 64, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3869, file: !176, line: 155, baseType: !317, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3792, file: !176, line: 181, baseType: !262, size: 64, offset: 320)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3792, file: !176, line: 182, baseType: !266, size: 64, offset: 384)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3792, file: !176, line: 184, baseType: !207, size: 32, offset: 448)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3792, file: !176, line: 185, baseType: !240, size: 8, offset: 480)
!3878 = !DILocation(line: 1381, column: 9, scope: !3781)
!3879 = !DILocalVariable(name: "e", scope: !3781, file: !3, line: 1382, type: !333)
!3880 = !DILocation(line: 1382, column: 10, scope: !3781)
!3881 = !DILocalVariable(name: "heap", scope: !3781, file: !3, line: 1383, type: !3882)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_typedef, name: "Heap", file: !3884, line: 31, baseType: !3885)
!3884 = !DIFile(filename: "blender/source/blender/blenlib/BLI_heap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3885 = !DICompositeType(tag: DW_TAG_structure_type, name: "Heap", file: !3884, line: 29, flags: DIFlagFwdDecl)
!3886 = !DILocation(line: 1383, column: 8, scope: !3781)
!3887 = !DILocalVariable(name: "score", scope: !3781, file: !3, line: 1384, type: !250)
!3888 = !DILocation(line: 1384, column: 8, scope: !3781)
!3889 = !DILocation(line: 1386, column: 9, scope: !3781)
!3890 = !DILocation(line: 1386, column: 7, scope: !3781)
!3891 = !DILocation(line: 1388, column: 33, scope: !3781)
!3892 = !DILocation(line: 1388, column: 37, scope: !3781)
!3893 = !DILocation(line: 1388, column: 2, scope: !3781)
!3894 = !DILocation(line: 1391, column: 2, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1391, column: 2)
!3896 = !DILocation(line: 1391, column: 2, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1391, column: 2)
!3898 = !DILocalVariable(name: "adj", scope: !3899, file: !3, line: 1392, type: !3900)
!3899 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1391, column: 52)
!3900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 128, elements: !255)
!3901 = !DILocation(line: 1392, column: 11, scope: !3899)
!3902 = !DILocation(line: 1395, column: 25, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 1395, column: 7)
!3904 = !DILocation(line: 1395, column: 29, scope: !3903)
!3905 = !DILocation(line: 1395, column: 38, scope: !3903)
!3906 = !DILocation(line: 1395, column: 7, scope: !3903)
!3907 = !DILocation(line: 1395, column: 7, scope: !3899)
!3908 = !DILocation(line: 1396, column: 8, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1396, column: 8)
!3910 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 1395, column: 47)
!3911 = !DILocation(line: 1396, column: 16, scope: !3909)
!3912 = !DILocation(line: 1396, column: 20, scope: !3909)
!3913 = !DILocation(line: 1396, column: 25, scope: !3909)
!3914 = !DILocation(line: 1396, column: 28, scope: !3909)
!3915 = !DILocation(line: 1396, column: 36, scope: !3909)
!3916 = !DILocation(line: 1396, column: 40, scope: !3909)
!3917 = !DILocation(line: 1396, column: 8, scope: !3910)
!3918 = !DILocalVariable(name: "quad", scope: !3919, file: !3, line: 1397, type: !1957)
!3919 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 1396, column: 46)
!3920 = !DILocation(line: 1397, column: 13, scope: !3919)
!3921 = !DILocation(line: 1401, column: 20, scope: !3919)
!3922 = !DILocation(line: 1401, column: 23, scope: !3919)
!3923 = !DILocation(line: 1401, column: 28, scope: !3919)
!3924 = !DILocation(line: 1401, column: 5, scope: !3919)
!3925 = !DILocation(line: 1405, column: 33, scope: !3919)
!3926 = !DILocation(line: 1405, column: 15, scope: !3919)
!3927 = !DILocation(line: 1406, column: 33, scope: !3919)
!3928 = !DILocation(line: 1406, column: 15, scope: !3919)
!3929 = !DILocation(line: 1405, column: 41, scope: !3919)
!3930 = !DILocation(line: 1407, column: 23, scope: !3919)
!3931 = !DILocation(line: 1407, column: 31, scope: !3919)
!3932 = !DILocation(line: 1407, column: 35, scope: !3919)
!3933 = !DILocation(line: 1407, column: 43, scope: !3919)
!3934 = !DILocation(line: 1407, column: 14, scope: !3919)
!3935 = !DILocation(line: 1406, column: 42, scope: !3919)
!3936 = !DILocation(line: 1405, column: 11, scope: !3919)
!3937 = !DILocation(line: 1410, column: 37, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1410, column: 9)
!3939 = !DILocation(line: 1410, column: 43, scope: !3938)
!3940 = !DILocation(line: 1410, column: 9, scope: !3938)
!3941 = !DILocation(line: 1410, column: 9, scope: !3919)
!3942 = !DILocation(line: 1413, column: 28, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 1413, column: 10)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1410, column: 49)
!3945 = !DILocation(line: 1413, column: 34, scope: !3943)
!3946 = !DILocation(line: 1413, column: 10, scope: !3943)
!3947 = !DILocation(line: 1413, column: 10, scope: !3944)
!3948 = !DILocation(line: 1414, column: 13, scope: !3943)
!3949 = !DILocation(line: 1414, column: 7, scope: !3943)
!3950 = !DILocation(line: 1416, column: 7, scope: !3943)
!3951 = !DILocation(line: 1417, column: 5, scope: !3944)
!3952 = !DILocation(line: 1420, column: 28, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1420, column: 9)
!3954 = !DILocation(line: 1420, column: 37, scope: !3953)
!3955 = !DILocation(line: 1420, column: 41, scope: !3953)
!3956 = !DILocation(line: 1420, column: 50, scope: !3953)
!3957 = !DILocation(line: 1421, column: 28, scope: !3953)
!3958 = !DILocation(line: 1421, column: 37, scope: !3953)
!3959 = !DILocation(line: 1421, column: 41, scope: !3953)
!3960 = !DILocation(line: 1421, column: 50, scope: !3953)
!3961 = !DILocation(line: 1420, column: 10, scope: !3953)
!3962 = !DILocation(line: 1420, column: 9, scope: !3919)
!3963 = !DILocation(line: 1423, column: 6, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1422, column: 5)
!3965 = !DILocation(line: 1426, column: 21, scope: !3919)
!3966 = !DILocation(line: 1426, column: 28, scope: !3919)
!3967 = !DILocation(line: 1426, column: 27, scope: !3919)
!3968 = !DILocation(line: 1426, column: 35, scope: !3919)
!3969 = !DILocation(line: 1426, column: 5, scope: !3919)
!3970 = !DILocation(line: 1427, column: 4, scope: !3919)
!3971 = !DILocation(line: 1428, column: 3, scope: !3910)
!3972 = !DILocation(line: 1429, column: 2, scope: !3899)
!3973 = distinct !{!3973, !3894, !3974}
!3974 = !DILocation(line: 1429, column: 2, scope: !3895)
!3975 = !DILocation(line: 1431, column: 2, scope: !3781)
!3976 = !DILocation(line: 1431, column: 28, scope: !3781)
!3977 = !DILocation(line: 1431, column: 10, scope: !3781)
!3978 = !DILocation(line: 1431, column: 9, scope: !3781)
!3979 = !DILocalVariable(name: "adj", scope: !3980, file: !3, line: 1432, type: !3900)
!3980 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1431, column: 35)
!3981 = !DILocation(line: 1432, column: 11, scope: !3980)
!3982 = !DILocation(line: 1434, column: 23, scope: !3980)
!3983 = !DILocation(line: 1434, column: 7, scope: !3980)
!3984 = !DILocation(line: 1434, column: 5, scope: !3980)
!3985 = !DILocation(line: 1436, column: 25, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1436, column: 7)
!3987 = !DILocation(line: 1436, column: 29, scope: !3986)
!3988 = !DILocation(line: 1436, column: 38, scope: !3986)
!3989 = !DILocation(line: 1436, column: 7, scope: !3986)
!3990 = !DILocation(line: 1436, column: 7, scope: !3980)
!3991 = !DILocation(line: 1439, column: 9, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 1439, column: 8)
!3993 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1436, column: 47)
!3994 = !DILocation(line: 1439, column: 48, scope: !3992)
!3995 = !DILocation(line: 1440, column: 9, scope: !3992)
!3996 = !DILocation(line: 1440, column: 48, scope: !3992)
!3997 = !DILocation(line: 1441, column: 34, scope: !3992)
!3998 = !DILocation(line: 1441, column: 42, scope: !3992)
!3999 = !DILocation(line: 1441, column: 9, scope: !3992)
!4000 = !DILocation(line: 1439, column: 8, scope: !3993)
!4001 = !DILocation(line: 1443, column: 24, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1442, column: 4)
!4003 = !DILocation(line: 1443, column: 28, scope: !4002)
!4004 = !DILocation(line: 1443, column: 31, scope: !4002)
!4005 = !DILocation(line: 1443, column: 5, scope: !4002)
!4006 = !DILocation(line: 1444, column: 5, scope: !4002)
!4007 = !DILocation(line: 1445, column: 5, scope: !4002)
!4008 = !DILocation(line: 1446, column: 5, scope: !4002)
!4009 = !DILocation(line: 1447, column: 4, scope: !4002)
!4010 = !DILocation(line: 1448, column: 3, scope: !3993)
!4011 = distinct !{!4011, !3975, !4012}
!4012 = !DILocation(line: 1449, column: 2, scope: !3781)
!4013 = !DILocation(line: 1451, column: 16, scope: !3781)
!4014 = !DILocation(line: 1451, column: 2, scope: !3781)
!4015 = !DILocation(line: 1453, column: 30, scope: !3781)
!4016 = !DILocation(line: 1453, column: 34, scope: !3781)
!4017 = !DILocation(line: 1453, column: 2, scope: !3781)
!4018 = !DILocation(line: 1455, column: 1, scope: !3781)
!4019 = distinct !DISubprogram(name: "skin_fix_hull_topology", scope: !3, file: !3, line: 1499, type: !4020, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !1847, !1947, !207}
!4022 = !DILocalVariable(name: "bm", arg: 1, scope: !4019, file: !3, line: 1499, type: !1847)
!4023 = !DILocation(line: 1499, column: 43, scope: !4019)
!4024 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !4019, file: !3, line: 1499, type: !1947)
!4025 = !DILocation(line: 1499, column: 57, scope: !4019)
!4026 = !DILocalVariable(name: "totvert", arg: 3, scope: !4019, file: !3, line: 1500, type: !207)
!4027 = !DILocation(line: 1500, column: 40, scope: !4019)
!4028 = !DILocalVariable(name: "v", scope: !4019, file: !3, line: 1502, type: !207)
!4029 = !DILocation(line: 1502, column: 6, scope: !4019)
!4030 = !DILocation(line: 1504, column: 9, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1504, column: 2)
!4032 = !DILocation(line: 1504, column: 7, scope: !4031)
!4033 = !DILocation(line: 1504, column: 14, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 1504, column: 2)
!4035 = !DILocation(line: 1504, column: 18, scope: !4034)
!4036 = !DILocation(line: 1504, column: 16, scope: !4034)
!4037 = !DILocation(line: 1504, column: 2, scope: !4031)
!4038 = !DILocalVariable(name: "sn", scope: !4039, file: !3, line: 1505, type: !1947)
!4039 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 1504, column: 32)
!4040 = !DILocation(line: 1505, column: 13, scope: !4039)
!4041 = !DILocation(line: 1505, column: 19, scope: !4039)
!4042 = !DILocation(line: 1505, column: 30, scope: !4039)
!4043 = !DILocalVariable(name: "j", scope: !4039, file: !3, line: 1506, type: !207)
!4044 = !DILocation(line: 1506, column: 7, scope: !4039)
!4045 = !DILocation(line: 1508, column: 10, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1508, column: 3)
!4047 = !DILocation(line: 1508, column: 8, scope: !4046)
!4048 = !DILocation(line: 1508, column: 15, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1508, column: 3)
!4050 = !DILocation(line: 1508, column: 19, scope: !4049)
!4051 = !DILocation(line: 1508, column: 23, scope: !4049)
!4052 = !DILocation(line: 1508, column: 17, scope: !4049)
!4053 = !DILocation(line: 1508, column: 3, scope: !4046)
!4054 = !DILocalVariable(name: "f", scope: !4055, file: !3, line: 1509, type: !3245)
!4055 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1508, column: 38)
!4056 = !DILocation(line: 1509, column: 11, scope: !4055)
!4057 = !DILocation(line: 1509, column: 16, scope: !4055)
!4058 = !DILocation(line: 1509, column: 20, scope: !4055)
!4059 = !DILocation(line: 1509, column: 27, scope: !4055)
!4060 = !DILocation(line: 1511, column: 8, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 1511, column: 8)
!4062 = !DILocation(line: 1511, column: 11, scope: !4061)
!4063 = !DILocation(line: 1511, column: 8, scope: !4055)
!4064 = !DILocalVariable(name: "target_face", scope: !4065, file: !3, line: 1512, type: !335)
!4065 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1511, column: 21)
!4066 = !DILocation(line: 1512, column: 13, scope: !4065)
!4067 = !DILocation(line: 1514, column: 47, scope: !4065)
!4068 = !DILocation(line: 1514, column: 51, scope: !4065)
!4069 = !DILocation(line: 1514, column: 5, scope: !4065)
!4070 = !DILocation(line: 1516, column: 41, scope: !4065)
!4071 = !DILocation(line: 1516, column: 45, scope: !4065)
!4072 = !DILocation(line: 1516, column: 19, scope: !4065)
!4073 = !DILocation(line: 1516, column: 17, scope: !4065)
!4074 = !DILocation(line: 1517, column: 9, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1517, column: 9)
!4076 = !DILocation(line: 1517, column: 9, scope: !4065)
!4077 = !DILocation(line: 1518, column: 34, scope: !4075)
!4078 = !DILocation(line: 1518, column: 38, scope: !4075)
!4079 = !DILocation(line: 1518, column: 41, scope: !4075)
!4080 = !DILocation(line: 1518, column: 6, scope: !4075)
!4081 = !DILocation(line: 1519, column: 4, scope: !4065)
!4082 = !DILocation(line: 1520, column: 3, scope: !4055)
!4083 = !DILocation(line: 1508, column: 34, scope: !4049)
!4084 = !DILocation(line: 1508, column: 3, scope: !4049)
!4085 = distinct !{!4085, !4053, !4086}
!4086 = !DILocation(line: 1520, column: 3, scope: !4046)
!4087 = !DILocation(line: 1521, column: 2, scope: !4039)
!4088 = !DILocation(line: 1504, column: 28, scope: !4034)
!4089 = !DILocation(line: 1504, column: 2, scope: !4034)
!4090 = distinct !{!4090, !4037, !4091}
!4091 = !DILocation(line: 1521, column: 2, scope: !4031)
!4092 = !DILocation(line: 1522, column: 1, scope: !4019)
!4093 = distinct !DISubprogram(name: "skin_smooth_hulls", scope: !3, file: !3, line: 1611, type: !4094, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{null, !1847, !1947, !207, !3784}
!4096 = !DILocalVariable(name: "bm", arg: 1, scope: !4093, file: !3, line: 1611, type: !1847)
!4097 = !DILocation(line: 1611, column: 38, scope: !4093)
!4098 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !4093, file: !3, line: 1611, type: !1947)
!4099 = !DILocation(line: 1611, column: 52, scope: !4093)
!4100 = !DILocalVariable(name: "totvert", arg: 3, scope: !4093, file: !3, line: 1612, type: !207)
!4101 = !DILocation(line: 1612, column: 35, scope: !4093)
!4102 = !DILocalVariable(name: "smd", arg: 4, scope: !4093, file: !3, line: 1612, type: !3784)
!4103 = !DILocation(line: 1612, column: 68, scope: !4093)
!4104 = !DILocalVariable(name: "iter", scope: !4093, file: !3, line: 1614, type: !3791)
!4105 = !DILocation(line: 1614, column: 9, scope: !4093)
!4106 = !DILocalVariable(name: "eiter", scope: !4093, file: !3, line: 1614, type: !3791)
!4107 = !DILocation(line: 1614, column: 15, scope: !4093)
!4108 = !DILocalVariable(name: "v", scope: !4093, file: !3, line: 1615, type: !270)
!4109 = !DILocation(line: 1615, column: 10, scope: !4093)
!4110 = !DILocalVariable(name: "i", scope: !4093, file: !3, line: 1616, type: !207)
!4111 = !DILocation(line: 1616, column: 6, scope: !4093)
!4112 = !DILocalVariable(name: "j", scope: !4093, file: !3, line: 1616, type: !207)
!4113 = !DILocation(line: 1616, column: 9, scope: !4093)
!4114 = !DILocalVariable(name: "k", scope: !4093, file: !3, line: 1616, type: !207)
!4115 = !DILocation(line: 1616, column: 12, scope: !4093)
!4116 = !DILocalVariable(name: "skey", scope: !4093, file: !3, line: 1616, type: !207)
!4117 = !DILocation(line: 1616, column: 15, scope: !4093)
!4118 = !DILocation(line: 1618, column: 6, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1618, column: 6)
!4120 = !DILocation(line: 1618, column: 11, scope: !4119)
!4121 = !DILocation(line: 1618, column: 28, scope: !4119)
!4122 = !DILocation(line: 1618, column: 6, scope: !4093)
!4123 = !DILocation(line: 1619, column: 3, scope: !4119)
!4124 = !DILocation(line: 1622, column: 33, scope: !4093)
!4125 = !DILocation(line: 1622, column: 2, scope: !4093)
!4126 = !DILocation(line: 1623, column: 9, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1623, column: 2)
!4128 = !DILocation(line: 1623, column: 7, scope: !4127)
!4129 = !DILocation(line: 1623, column: 14, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1623, column: 2)
!4131 = !DILocation(line: 1623, column: 18, scope: !4130)
!4132 = !DILocation(line: 1623, column: 16, scope: !4130)
!4133 = !DILocation(line: 1623, column: 2, scope: !4127)
!4134 = !DILocation(line: 1624, column: 10, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1624, column: 3)
!4136 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 1623, column: 32)
!4137 = !DILocation(line: 1624, column: 8, scope: !4135)
!4138 = !DILocation(line: 1624, column: 15, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1624, column: 3)
!4140 = !DILocation(line: 1624, column: 19, scope: !4139)
!4141 = !DILocation(line: 1624, column: 30, scope: !4139)
!4142 = !DILocation(line: 1624, column: 33, scope: !4139)
!4143 = !DILocation(line: 1624, column: 17, scope: !4139)
!4144 = !DILocation(line: 1624, column: 3, scope: !4135)
!4145 = !DILocalVariable(name: "frame", scope: !4146, file: !3, line: 1625, type: !3245)
!4146 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1624, column: 48)
!4147 = !DILocation(line: 1625, column: 11, scope: !4146)
!4148 = !DILocation(line: 1625, column: 20, scope: !4146)
!4149 = !DILocation(line: 1625, column: 31, scope: !4146)
!4150 = !DILocation(line: 1625, column: 34, scope: !4146)
!4151 = !DILocation(line: 1625, column: 41, scope: !4146)
!4152 = !DILocation(line: 1627, column: 11, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 1627, column: 4)
!4154 = !DILocation(line: 1627, column: 9, scope: !4153)
!4155 = !DILocation(line: 1627, column: 16, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1627, column: 4)
!4157 = !DILocation(line: 1627, column: 18, scope: !4156)
!4158 = !DILocation(line: 1627, column: 4, scope: !4153)
!4159 = !DILocation(line: 1628, column: 5, scope: !4156)
!4160 = !DILocation(line: 1627, column: 24, scope: !4156)
!4161 = !DILocation(line: 1627, column: 4, scope: !4156)
!4162 = distinct !{!4162, !4158, !4163}
!4163 = !DILocation(line: 1628, column: 5, scope: !4153)
!4164 = !DILocation(line: 1629, column: 3, scope: !4146)
!4165 = !DILocation(line: 1624, column: 44, scope: !4139)
!4166 = !DILocation(line: 1624, column: 3, scope: !4139)
!4167 = distinct !{!4167, !4144, !4168}
!4168 = !DILocation(line: 1629, column: 3, scope: !4135)
!4169 = !DILocation(line: 1630, column: 2, scope: !4136)
!4170 = !DILocation(line: 1623, column: 28, scope: !4130)
!4171 = !DILocation(line: 1623, column: 2, scope: !4130)
!4172 = distinct !{!4172, !4133, !4173}
!4173 = !DILocation(line: 1630, column: 2, scope: !4127)
!4174 = !DILocation(line: 1633, column: 20, scope: !4093)
!4175 = !DILocation(line: 1633, column: 25, scope: !4093)
!4176 = !DILocation(line: 1633, column: 29, scope: !4093)
!4177 = !DILocation(line: 1633, column: 2, scope: !4093)
!4178 = !DILocation(line: 1634, column: 38, scope: !4093)
!4179 = !DILocation(line: 1634, column: 42, scope: !4093)
!4180 = !DILocation(line: 1634, column: 9, scope: !4093)
!4181 = !DILocation(line: 1634, column: 62, scope: !4093)
!4182 = !DILocation(line: 1634, column: 7, scope: !4093)
!4183 = !DILocation(line: 1635, column: 2, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1635, column: 2)
!4185 = !DILocation(line: 1635, column: 2, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1635, column: 2)
!4187 = !DILocation(line: 1636, column: 38, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 1635, column: 48)
!4189 = !DILocation(line: 1636, column: 42, scope: !4188)
!4190 = !DILocation(line: 1636, column: 49, scope: !4188)
!4191 = !DILocation(line: 1636, column: 52, scope: !4188)
!4192 = !DILocation(line: 1636, column: 57, scope: !4188)
!4193 = !DILocation(line: 1637, column: 50, scope: !4188)
!4194 = !DILocation(line: 1636, column: 14, scope: !4188)
!4195 = !DILocation(line: 1637, column: 57, scope: !4188)
!4196 = !DILocation(line: 1637, column: 60, scope: !4188)
!4197 = !DILocation(line: 1636, column: 3, scope: !4188)
!4198 = !DILocation(line: 1638, column: 2, scope: !4188)
!4199 = distinct !{!4199, !4183, !4200}
!4200 = !DILocation(line: 1638, column: 2, scope: !4184)
!4201 = !DILocation(line: 1643, column: 2, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1643, column: 2)
!4203 = !DILocation(line: 1643, column: 2, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 1643, column: 2)
!4205 = !DILocalVariable(name: "e", scope: !4206, file: !3, line: 1644, type: !333)
!4206 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 1643, column: 48)
!4207 = !DILocation(line: 1644, column: 11, scope: !4206)
!4208 = !DILocalVariable(name: "avg", scope: !4206, file: !3, line: 1645, type: !290)
!4209 = !DILocation(line: 1645, column: 9, scope: !4206)
!4210 = !DILocalVariable(name: "weight", scope: !4206, file: !3, line: 1646, type: !250)
!4211 = !DILocation(line: 1646, column: 9, scope: !4206)
!4212 = !DILocation(line: 1646, column: 18, scope: !4206)
!4213 = !DILocation(line: 1646, column: 23, scope: !4206)
!4214 = !DILocalVariable(name: "totv", scope: !4206, file: !3, line: 1647, type: !207)
!4215 = !DILocation(line: 1647, column: 7, scope: !4206)
!4216 = !DILocation(line: 1649, column: 7, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1649, column: 7)
!4218 = !DILocation(line: 1649, column: 7, scope: !4206)
!4219 = !DILocation(line: 1650, column: 11, scope: !4217)
!4220 = !DILocation(line: 1650, column: 4, scope: !4217)
!4221 = !DILocation(line: 1652, column: 14, scope: !4206)
!4222 = !DILocation(line: 1652, column: 19, scope: !4206)
!4223 = !DILocation(line: 1652, column: 22, scope: !4206)
!4224 = !DILocation(line: 1652, column: 3, scope: !4206)
!4225 = !DILocation(line: 1653, column: 3, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1653, column: 3)
!4227 = !DILocation(line: 1653, column: 3, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1653, column: 3)
!4229 = !DILocalVariable(name: "other", scope: !4230, file: !3, line: 1654, type: !270)
!4230 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 1653, column: 49)
!4231 = !DILocation(line: 1654, column: 12, scope: !4230)
!4232 = !DILocation(line: 1654, column: 39, scope: !4230)
!4233 = !DILocation(line: 1654, column: 42, scope: !4230)
!4234 = !DILocation(line: 1654, column: 20, scope: !4230)
!4235 = !DILocation(line: 1656, column: 14, scope: !4230)
!4236 = !DILocation(line: 1656, column: 43, scope: !4230)
!4237 = !DILocation(line: 1656, column: 47, scope: !4230)
!4238 = !DILocation(line: 1657, column: 42, scope: !4230)
!4239 = !DILocation(line: 1657, column: 49, scope: !4230)
!4240 = !DILocation(line: 1657, column: 54, scope: !4230)
!4241 = !DILocation(line: 1658, column: 55, scope: !4230)
!4242 = !DILocation(line: 1656, column: 19, scope: !4230)
!4243 = !DILocation(line: 1656, column: 4, scope: !4230)
!4244 = !DILocation(line: 1659, column: 8, scope: !4230)
!4245 = !DILocation(line: 1660, column: 3, scope: !4230)
!4246 = distinct !{!4246, !4225, !4247}
!4247 = !DILocation(line: 1660, column: 3, scope: !4226)
!4248 = !DILocation(line: 1662, column: 7, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 1662, column: 7)
!4250 = !DILocation(line: 1662, column: 12, scope: !4249)
!4251 = !DILocation(line: 1662, column: 7, scope: !4206)
!4252 = !DILocation(line: 1663, column: 14, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 1662, column: 17)
!4254 = !DILocation(line: 1663, column: 33, scope: !4253)
!4255 = !DILocation(line: 1663, column: 26, scope: !4253)
!4256 = !DILocation(line: 1663, column: 24, scope: !4253)
!4257 = !DILocation(line: 1663, column: 4, scope: !4253)
!4258 = !DILocation(line: 1664, column: 19, scope: !4253)
!4259 = !DILocation(line: 1664, column: 22, scope: !4253)
!4260 = !DILocation(line: 1664, column: 26, scope: !4253)
!4261 = !DILocation(line: 1664, column: 29, scope: !4253)
!4262 = !DILocation(line: 1664, column: 33, scope: !4253)
!4263 = !DILocation(line: 1664, column: 38, scope: !4253)
!4264 = !DILocation(line: 1664, column: 4, scope: !4253)
!4265 = !DILocation(line: 1665, column: 3, scope: !4253)
!4266 = !DILocation(line: 1666, column: 2, scope: !4206)
!4267 = distinct !{!4267, !4201, !4268}
!4268 = !DILocation(line: 1666, column: 2, scope: !4202)
!4269 = !DILocation(line: 1669, column: 23, scope: !4093)
!4270 = !DILocation(line: 1669, column: 28, scope: !4093)
!4271 = !DILocation(line: 1669, column: 32, scope: !4093)
!4272 = !DILocation(line: 1669, column: 52, scope: !4093)
!4273 = !DILocation(line: 1669, column: 2, scope: !4093)
!4274 = !DILocation(line: 1670, column: 1, scope: !4093)
!4275 = distinct !DISubprogram(name: "skin_output_end_nodes", scope: !3, file: !3, line: 1524, type: !4276, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{null, !3720, !1947, !207}
!4278 = !DILocalVariable(name: "so", arg: 1, scope: !4275, file: !3, line: 1524, type: !3720)
!4279 = !DILocation(line: 1524, column: 47, scope: !4275)
!4280 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !4275, file: !3, line: 1524, type: !1947)
!4281 = !DILocation(line: 1524, column: 61, scope: !4275)
!4282 = !DILocalVariable(name: "totvert", arg: 3, scope: !4275, file: !3, line: 1525, type: !207)
!4283 = !DILocation(line: 1525, column: 39, scope: !4275)
!4284 = !DILocalVariable(name: "v", scope: !4275, file: !3, line: 1527, type: !207)
!4285 = !DILocation(line: 1527, column: 6, scope: !4275)
!4286 = !DILocation(line: 1529, column: 9, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 1529, column: 2)
!4288 = !DILocation(line: 1529, column: 7, scope: !4287)
!4289 = !DILocation(line: 1529, column: 14, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1529, column: 2)
!4291 = !DILocation(line: 1529, column: 18, scope: !4290)
!4292 = !DILocation(line: 1529, column: 16, scope: !4290)
!4293 = !DILocation(line: 1529, column: 2, scope: !4287)
!4294 = !DILocalVariable(name: "sn", scope: !4295, file: !3, line: 1530, type: !1947)
!4295 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 1529, column: 32)
!4296 = !DILocation(line: 1530, column: 13, scope: !4295)
!4297 = !DILocation(line: 1530, column: 19, scope: !4295)
!4298 = !DILocation(line: 1530, column: 30, scope: !4295)
!4299 = !DILocation(line: 1532, column: 7, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1532, column: 7)
!4301 = !DILocation(line: 1532, column: 11, scope: !4300)
!4302 = !DILocation(line: 1532, column: 16, scope: !4300)
!4303 = !DILocation(line: 1532, column: 7, scope: !4295)
!4304 = !DILocalVariable(name: "v_order", scope: !4305, file: !3, line: 1533, type: !1957)
!4305 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 1532, column: 30)
!4306 = !DILocation(line: 1533, column: 12, scope: !4305)
!4307 = !DILocalVariable(name: "i", scope: !4305, file: !3, line: 1534, type: !207)
!4308 = !DILocation(line: 1534, column: 8, scope: !4305)
!4309 = !DILocalVariable(name: "order", scope: !4305, file: !3, line: 1534, type: !887)
!4310 = !DILocation(line: 1534, column: 11, scope: !4305)
!4311 = !DILocation(line: 1536, column: 34, scope: !4305)
!4312 = !DILocation(line: 1536, column: 38, scope: !4305)
!4313 = !DILocation(line: 1536, column: 48, scope: !4305)
!4314 = !DILocation(line: 1537, column: 34, scope: !4305)
!4315 = !DILocation(line: 1537, column: 38, scope: !4305)
!4316 = !DILocation(line: 1537, column: 48, scope: !4305)
!4317 = !DILocation(line: 1538, column: 34, scope: !4305)
!4318 = !DILocation(line: 1536, column: 4, scope: !4305)
!4319 = !DILocation(line: 1539, column: 11, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1539, column: 4)
!4321 = !DILocation(line: 1539, column: 9, scope: !4320)
!4322 = !DILocation(line: 1539, column: 16, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1539, column: 4)
!4324 = !DILocation(line: 1539, column: 18, scope: !4323)
!4325 = !DILocation(line: 1539, column: 4, scope: !4320)
!4326 = !DILocation(line: 1540, column: 18, scope: !4323)
!4327 = !DILocation(line: 1540, column: 22, scope: !4323)
!4328 = !DILocation(line: 1540, column: 32, scope: !4323)
!4329 = !DILocation(line: 1540, column: 44, scope: !4323)
!4330 = !DILocation(line: 1540, column: 38, scope: !4323)
!4331 = !DILocation(line: 1540, column: 13, scope: !4323)
!4332 = !DILocation(line: 1540, column: 5, scope: !4323)
!4333 = !DILocation(line: 1540, column: 16, scope: !4323)
!4334 = !DILocation(line: 1539, column: 24, scope: !4323)
!4335 = !DILocation(line: 1539, column: 4, scope: !4323)
!4336 = distinct !{!4336, !4325, !4337}
!4337 = !DILocation(line: 1540, column: 46, scope: !4320)
!4338 = !DILocation(line: 1541, column: 19, scope: !4305)
!4339 = !DILocation(line: 1541, column: 23, scope: !4305)
!4340 = !DILocation(line: 1541, column: 27, scope: !4305)
!4341 = !DILocation(line: 1541, column: 37, scope: !4305)
!4342 = !DILocation(line: 1541, column: 44, scope: !4305)
!4343 = !DILocation(line: 1541, column: 4, scope: !4305)
!4344 = !DILocation(line: 1542, column: 3, scope: !4305)
!4345 = !DILocation(line: 1543, column: 12, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 1543, column: 12)
!4347 = !DILocation(line: 1543, column: 16, scope: !4346)
!4348 = !DILocation(line: 1543, column: 25, scope: !4346)
!4349 = !DILocation(line: 1543, column: 12, scope: !4300)
!4350 = !DILocation(line: 1544, column: 19, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1543, column: 31)
!4352 = !DILocation(line: 1545, column: 19, scope: !4351)
!4353 = !DILocation(line: 1545, column: 23, scope: !4351)
!4354 = !DILocation(line: 1545, column: 33, scope: !4351)
!4355 = !DILocation(line: 1546, column: 19, scope: !4351)
!4356 = !DILocation(line: 1546, column: 23, scope: !4351)
!4357 = !DILocation(line: 1546, column: 33, scope: !4351)
!4358 = !DILocation(line: 1544, column: 4, scope: !4351)
!4359 = !DILocation(line: 1547, column: 3, scope: !4351)
!4360 = !DILocation(line: 1549, column: 7, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1549, column: 7)
!4362 = !DILocation(line: 1549, column: 11, scope: !4361)
!4363 = !DILocation(line: 1549, column: 16, scope: !4361)
!4364 = !DILocation(line: 1549, column: 7, scope: !4295)
!4365 = !DILocation(line: 1550, column: 8, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 1550, column: 8)
!4367 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 1549, column: 29)
!4368 = !DILocation(line: 1550, column: 12, scope: !4366)
!4369 = !DILocation(line: 1550, column: 17, scope: !4366)
!4370 = !DILocation(line: 1550, column: 8, scope: !4367)
!4371 = !DILocation(line: 1551, column: 14, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1550, column: 25)
!4373 = !DILocation(line: 1552, column: 14, scope: !4372)
!4374 = !DILocation(line: 1552, column: 18, scope: !4372)
!4375 = !DILocation(line: 1552, column: 28, scope: !4372)
!4376 = !DILocation(line: 1553, column: 14, scope: !4372)
!4377 = !DILocation(line: 1553, column: 18, scope: !4372)
!4378 = !DILocation(line: 1553, column: 28, scope: !4372)
!4379 = !DILocation(line: 1554, column: 14, scope: !4372)
!4380 = !DILocation(line: 1554, column: 18, scope: !4372)
!4381 = !DILocation(line: 1554, column: 28, scope: !4372)
!4382 = !DILocation(line: 1555, column: 14, scope: !4372)
!4383 = !DILocation(line: 1555, column: 18, scope: !4372)
!4384 = !DILocation(line: 1555, column: 28, scope: !4372)
!4385 = !DILocation(line: 1551, column: 5, scope: !4372)
!4386 = !DILocation(line: 1556, column: 4, scope: !4372)
!4387 = !DILocation(line: 1558, column: 14, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1557, column: 9)
!4389 = !DILocation(line: 1559, column: 14, scope: !4388)
!4390 = !DILocation(line: 1559, column: 18, scope: !4388)
!4391 = !DILocation(line: 1559, column: 28, scope: !4388)
!4392 = !DILocation(line: 1560, column: 14, scope: !4388)
!4393 = !DILocation(line: 1560, column: 18, scope: !4388)
!4394 = !DILocation(line: 1560, column: 28, scope: !4388)
!4395 = !DILocation(line: 1561, column: 14, scope: !4388)
!4396 = !DILocation(line: 1561, column: 18, scope: !4388)
!4397 = !DILocation(line: 1561, column: 28, scope: !4388)
!4398 = !DILocation(line: 1562, column: 14, scope: !4388)
!4399 = !DILocation(line: 1562, column: 18, scope: !4388)
!4400 = !DILocation(line: 1562, column: 28, scope: !4388)
!4401 = !DILocation(line: 1558, column: 5, scope: !4388)
!4402 = !DILocation(line: 1564, column: 3, scope: !4367)
!4403 = !DILocation(line: 1565, column: 7, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1565, column: 7)
!4405 = !DILocation(line: 1565, column: 11, scope: !4404)
!4406 = !DILocation(line: 1565, column: 16, scope: !4404)
!4407 = !DILocation(line: 1565, column: 7, scope: !4295)
!4408 = !DILocation(line: 1566, column: 13, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1565, column: 27)
!4410 = !DILocation(line: 1567, column: 13, scope: !4409)
!4411 = !DILocation(line: 1567, column: 17, scope: !4409)
!4412 = !DILocation(line: 1567, column: 27, scope: !4409)
!4413 = !DILocation(line: 1568, column: 12, scope: !4409)
!4414 = !DILocation(line: 1568, column: 16, scope: !4409)
!4415 = !DILocation(line: 1568, column: 26, scope: !4409)
!4416 = !DILocation(line: 1569, column: 13, scope: !4409)
!4417 = !DILocation(line: 1569, column: 17, scope: !4409)
!4418 = !DILocation(line: 1569, column: 27, scope: !4409)
!4419 = !DILocation(line: 1570, column: 13, scope: !4409)
!4420 = !DILocation(line: 1570, column: 17, scope: !4409)
!4421 = !DILocation(line: 1570, column: 27, scope: !4409)
!4422 = !DILocation(line: 1566, column: 4, scope: !4409)
!4423 = !DILocation(line: 1571, column: 3, scope: !4409)
!4424 = !DILocation(line: 1572, column: 2, scope: !4295)
!4425 = !DILocation(line: 1529, column: 27, scope: !4290)
!4426 = !DILocation(line: 1529, column: 2, scope: !4290)
!4427 = distinct !{!4427, !4293, !4428}
!4428 = !DILocation(line: 1572, column: 2, scope: !4287)
!4429 = !DILocation(line: 1573, column: 1, scope: !4275)
!4430 = distinct !DISubprogram(name: "skin_output_connections", scope: !3, file: !3, line: 1575, type: !4431, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !3720, !1947, !2080, !207}
!4433 = !DILocalVariable(name: "so", arg: 1, scope: !4430, file: !3, line: 1575, type: !3720)
!4434 = !DILocation(line: 1575, column: 49, scope: !4430)
!4435 = !DILocalVariable(name: "skin_nodes", arg: 2, scope: !4430, file: !3, line: 1575, type: !1947)
!4436 = !DILocation(line: 1575, column: 63, scope: !4430)
!4437 = !DILocalVariable(name: "medge", arg: 3, scope: !4430, file: !3, line: 1576, type: !2080)
!4438 = !DILocation(line: 1576, column: 50, scope: !4430)
!4439 = !DILocalVariable(name: "totedge", arg: 4, scope: !4430, file: !3, line: 1577, type: !207)
!4440 = !DILocation(line: 1577, column: 41, scope: !4430)
!4441 = !DILocalVariable(name: "e", scope: !4430, file: !3, line: 1579, type: !207)
!4442 = !DILocation(line: 1579, column: 6, scope: !4430)
!4443 = !DILocation(line: 1581, column: 9, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 1581, column: 2)
!4445 = !DILocation(line: 1581, column: 7, scope: !4444)
!4446 = !DILocation(line: 1581, column: 14, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1581, column: 2)
!4448 = !DILocation(line: 1581, column: 18, scope: !4447)
!4449 = !DILocation(line: 1581, column: 16, scope: !4447)
!4450 = !DILocation(line: 1581, column: 2, scope: !4444)
!4451 = !DILocalVariable(name: "a", scope: !4452, file: !3, line: 1582, type: !1947)
!4452 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 1581, column: 32)
!4453 = !DILocation(line: 1582, column: 13, scope: !4452)
!4454 = !DILocalVariable(name: "b", scope: !4452, file: !3, line: 1582, type: !1947)
!4455 = !DILocation(line: 1582, column: 17, scope: !4452)
!4456 = !DILocation(line: 1583, column: 8, scope: !4452)
!4457 = !DILocation(line: 1583, column: 19, scope: !4452)
!4458 = !DILocation(line: 1583, column: 25, scope: !4452)
!4459 = !DILocation(line: 1583, column: 28, scope: !4452)
!4460 = !DILocation(line: 1583, column: 5, scope: !4452)
!4461 = !DILocation(line: 1584, column: 8, scope: !4452)
!4462 = !DILocation(line: 1584, column: 19, scope: !4452)
!4463 = !DILocation(line: 1584, column: 25, scope: !4452)
!4464 = !DILocation(line: 1584, column: 28, scope: !4452)
!4465 = !DILocation(line: 1584, column: 5, scope: !4452)
!4466 = !DILocation(line: 1586, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 1586, column: 7)
!4468 = !DILocation(line: 1586, column: 10, scope: !4467)
!4469 = !DILocation(line: 1586, column: 19, scope: !4467)
!4470 = !DILocation(line: 1586, column: 22, scope: !4467)
!4471 = !DILocation(line: 1586, column: 25, scope: !4467)
!4472 = !DILocation(line: 1586, column: 7, scope: !4452)
!4473 = !DILocation(line: 1587, column: 9, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 1587, column: 8)
!4475 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1586, column: 35)
!4476 = !DILocation(line: 1587, column: 12, scope: !4474)
!4477 = !DILocation(line: 1587, column: 17, scope: !4474)
!4478 = !DILocation(line: 1587, column: 31, scope: !4474)
!4479 = !DILocation(line: 1587, column: 35, scope: !4474)
!4480 = !DILocation(line: 1587, column: 38, scope: !4474)
!4481 = !DILocation(line: 1587, column: 43, scope: !4474)
!4482 = !DILocation(line: 1587, column: 8, scope: !4475)
!4483 = !DILocalVariable(name: "fr", scope: !4484, file: !3, line: 1588, type: !4485)
!4484 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1587, column: 58)
!4485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3245, size: 128, elements: !255)
!4486 = !DILocation(line: 1588, column: 12, scope: !4484)
!4487 = !DILocation(line: 1588, column: 20, scope: !4484)
!4488 = !DILocation(line: 1588, column: 22, scope: !4484)
!4489 = !DILocation(line: 1588, column: 25, scope: !4484)
!4490 = !DILocation(line: 1588, column: 37, scope: !4484)
!4491 = !DILocation(line: 1588, column: 40, scope: !4484)
!4492 = !DILocalVariable(name: "v_order", scope: !4484, file: !3, line: 1589, type: !1957)
!4493 = !DILocation(line: 1589, column: 13, scope: !4484)
!4494 = !DILocalVariable(name: "i", scope: !4484, file: !3, line: 1590, type: !207)
!4495 = !DILocation(line: 1590, column: 9, scope: !4484)
!4496 = !DILocalVariable(name: "order", scope: !4484, file: !3, line: 1590, type: !887)
!4497 = !DILocation(line: 1590, column: 12, scope: !4484)
!4498 = !DILocation(line: 1592, column: 10, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1592, column: 9)
!4500 = !DILocation(line: 1592, column: 13, scope: !4499)
!4501 = !DILocation(line: 1592, column: 18, scope: !4499)
!4502 = !DILocation(line: 1592, column: 32, scope: !4499)
!4503 = !DILocation(line: 1592, column: 36, scope: !4499)
!4504 = !DILocation(line: 1592, column: 41, scope: !4499)
!4505 = !DILocation(line: 1592, column: 44, scope: !4499)
!4506 = !DILocation(line: 1592, column: 38, scope: !4499)
!4507 = !DILocation(line: 1592, column: 9, scope: !4484)
!4508 = !DILocation(line: 1593, column: 6, scope: !4499)
!4509 = !DILocation(line: 1593, column: 11, scope: !4499)
!4510 = !DILocation(line: 1594, column: 10, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1594, column: 9)
!4512 = !DILocation(line: 1594, column: 13, scope: !4511)
!4513 = !DILocation(line: 1594, column: 18, scope: !4511)
!4514 = !DILocation(line: 1594, column: 32, scope: !4511)
!4515 = !DILocation(line: 1594, column: 36, scope: !4511)
!4516 = !DILocation(line: 1594, column: 41, scope: !4511)
!4517 = !DILocation(line: 1594, column: 44, scope: !4511)
!4518 = !DILocation(line: 1594, column: 38, scope: !4511)
!4519 = !DILocation(line: 1594, column: 9, scope: !4484)
!4520 = !DILocation(line: 1595, column: 6, scope: !4511)
!4521 = !DILocation(line: 1595, column: 11, scope: !4511)
!4522 = !DILocation(line: 1597, column: 35, scope: !4484)
!4523 = !DILocation(line: 1597, column: 42, scope: !4484)
!4524 = !DILocation(line: 1597, column: 49, scope: !4484)
!4525 = !DILocation(line: 1597, column: 56, scope: !4484)
!4526 = !DILocation(line: 1597, column: 63, scope: !4484)
!4527 = !DILocation(line: 1597, column: 5, scope: !4484)
!4528 = !DILocation(line: 1598, column: 12, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1598, column: 5)
!4530 = !DILocation(line: 1598, column: 10, scope: !4529)
!4531 = !DILocation(line: 1598, column: 17, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 1598, column: 5)
!4533 = !DILocation(line: 1598, column: 19, scope: !4532)
!4534 = !DILocation(line: 1598, column: 5, scope: !4529)
!4535 = !DILocation(line: 1599, column: 19, scope: !4532)
!4536 = !DILocation(line: 1599, column: 26, scope: !4532)
!4537 = !DILocation(line: 1599, column: 38, scope: !4532)
!4538 = !DILocation(line: 1599, column: 32, scope: !4532)
!4539 = !DILocation(line: 1599, column: 14, scope: !4532)
!4540 = !DILocation(line: 1599, column: 6, scope: !4532)
!4541 = !DILocation(line: 1599, column: 17, scope: !4532)
!4542 = !DILocation(line: 1598, column: 25, scope: !4532)
!4543 = !DILocation(line: 1598, column: 5, scope: !4532)
!4544 = distinct !{!4544, !4534, !4545}
!4545 = !DILocation(line: 1599, column: 40, scope: !4529)
!4546 = !DILocation(line: 1600, column: 20, scope: !4484)
!4547 = !DILocation(line: 1600, column: 24, scope: !4484)
!4548 = !DILocation(line: 1600, column: 31, scope: !4484)
!4549 = !DILocation(line: 1600, column: 38, scope: !4484)
!4550 = !DILocation(line: 1600, column: 5, scope: !4484)
!4551 = !DILocation(line: 1601, column: 4, scope: !4484)
!4552 = !DILocation(line: 1603, column: 20, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1602, column: 9)
!4554 = !DILocation(line: 1604, column: 20, scope: !4553)
!4555 = !DILocation(line: 1604, column: 23, scope: !4553)
!4556 = !DILocation(line: 1604, column: 33, scope: !4553)
!4557 = !DILocation(line: 1605, column: 20, scope: !4553)
!4558 = !DILocation(line: 1605, column: 23, scope: !4553)
!4559 = !DILocation(line: 1605, column: 33, scope: !4553)
!4560 = !DILocation(line: 1603, column: 5, scope: !4553)
!4561 = !DILocation(line: 1607, column: 3, scope: !4475)
!4562 = !DILocation(line: 1608, column: 2, scope: !4452)
!4563 = !DILocation(line: 1581, column: 28, scope: !4447)
!4564 = !DILocation(line: 1581, column: 2, scope: !4447)
!4565 = distinct !{!4565, !4450, !4566}
!4566 = !DILocation(line: 1608, column: 2, scope: !4444)
!4567 = !DILocation(line: 1609, column: 1, scope: !4430)
!4568 = distinct !DISubprogram(name: "collect_hull_frames", scope: !3, file: !3, line: 409, type: !4569, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!3510, !207, !1947, !2295, !2080, !893}
!4571 = !DILocalVariable(name: "v", arg: 1, scope: !4568, file: !3, line: 409, type: !207)
!4572 = !DILocation(line: 409, column: 40, scope: !4568)
!4573 = !DILocalVariable(name: "frames", arg: 2, scope: !4568, file: !3, line: 409, type: !1947)
!4574 = !DILocation(line: 409, column: 53, scope: !4568)
!4575 = !DILocalVariable(name: "emap", arg: 3, scope: !4568, file: !3, line: 410, type: !2295)
!4576 = !DILocation(line: 410, column: 55, scope: !4568)
!4577 = !DILocalVariable(name: "medge", arg: 4, scope: !4568, file: !3, line: 410, type: !2080)
!4578 = !DILocation(line: 410, column: 74, scope: !4568)
!4579 = !DILocalVariable(name: "tothullframe", arg: 5, scope: !4568, file: !3, line: 411, type: !893)
!4580 = !DILocation(line: 411, column: 41, scope: !4568)
!4581 = !DILocalVariable(name: "f", scope: !4568, file: !3, line: 413, type: !1947)
!4582 = !DILocation(line: 413, column: 12, scope: !4568)
!4583 = !DILocalVariable(name: "hull_frames", scope: !4568, file: !3, line: 414, type: !3510)
!4584 = !DILocation(line: 414, column: 10, scope: !4568)
!4585 = !DILocalVariable(name: "nbr", scope: !4568, file: !3, line: 415, type: !207)
!4586 = !DILocation(line: 415, column: 6, scope: !4568)
!4587 = !DILocalVariable(name: "i", scope: !4568, file: !3, line: 415, type: !207)
!4588 = !DILocation(line: 415, column: 11, scope: !4568)
!4589 = !DILocation(line: 417, column: 20, scope: !4568)
!4590 = !DILocation(line: 417, column: 25, scope: !4568)
!4591 = !DILocation(line: 417, column: 28, scope: !4568)
!4592 = !DILocation(line: 417, column: 4, scope: !4568)
!4593 = !DILocation(line: 417, column: 18, scope: !4568)
!4594 = !DILocation(line: 418, column: 16, scope: !4568)
!4595 = !DILocation(line: 418, column: 48, scope: !4568)
!4596 = !DILocation(line: 418, column: 47, scope: !4568)
!4597 = !DILocation(line: 418, column: 46, scope: !4568)
!4598 = !DILocation(line: 418, column: 44, scope: !4568)
!4599 = !DILocation(line: 418, column: 14, scope: !4568)
!4600 = !DILocation(line: 420, column: 4, scope: !4568)
!4601 = !DILocation(line: 421, column: 11, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 421, column: 2)
!4603 = !DILocation(line: 421, column: 7, scope: !4602)
!4604 = !DILocation(line: 421, column: 16, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 421, column: 2)
!4606 = !DILocation(line: 421, column: 22, scope: !4605)
!4607 = !DILocation(line: 421, column: 27, scope: !4605)
!4608 = !DILocation(line: 421, column: 30, scope: !4605)
!4609 = !DILocation(line: 421, column: 20, scope: !4605)
!4610 = !DILocation(line: 421, column: 2, scope: !4602)
!4611 = !DILocalVariable(name: "e", scope: !4612, file: !3, line: 422, type: !2080)
!4612 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 421, column: 44)
!4613 = !DILocation(line: 422, column: 16, scope: !4612)
!4614 = !DILocation(line: 422, column: 21, scope: !4612)
!4615 = !DILocation(line: 422, column: 27, scope: !4612)
!4616 = !DILocation(line: 422, column: 32, scope: !4612)
!4617 = !DILocation(line: 422, column: 35, scope: !4612)
!4618 = !DILocation(line: 422, column: 43, scope: !4612)
!4619 = !DILocation(line: 423, column: 8, scope: !4612)
!4620 = !DILocation(line: 423, column: 40, scope: !4612)
!4621 = !DILocation(line: 423, column: 43, scope: !4612)
!4622 = !DILocation(line: 423, column: 15, scope: !4612)
!4623 = !DILocation(line: 423, column: 5, scope: !4612)
!4624 = !DILocation(line: 425, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 425, column: 7)
!4626 = !DILocation(line: 425, column: 10, scope: !4625)
!4627 = !DILocation(line: 425, column: 7, scope: !4612)
!4628 = !DILocation(line: 426, column: 24, scope: !4625)
!4629 = !DILocation(line: 426, column: 27, scope: !4625)
!4630 = !DILocation(line: 426, column: 4, scope: !4625)
!4631 = !DILocation(line: 426, column: 17, scope: !4625)
!4632 = !DILocation(line: 426, column: 21, scope: !4625)
!4633 = !DILocation(line: 428, column: 6, scope: !4625)
!4634 = !DILocation(line: 428, column: 19, scope: !4625)
!4635 = !DILocation(line: 429, column: 2, scope: !4612)
!4636 = !DILocation(line: 421, column: 40, scope: !4605)
!4637 = !DILocation(line: 421, column: 2, scope: !4605)
!4638 = distinct !{!4638, !4610, !4639}
!4639 = !DILocation(line: 429, column: 2, scope: !4602)
!4640 = !DILocation(line: 431, column: 9, scope: !4568)
!4641 = !DILocation(line: 431, column: 2, scope: !4568)
!4642 = distinct !DISubprogram(name: "merge_frame_corners", scope: !3, file: !3, line: 345, type: !4643, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{null, !3510, !207}
!4645 = !DILocalVariable(name: "frames", arg: 1, scope: !4642, file: !3, line: 345, type: !3510)
!4646 = !DILocation(line: 345, column: 41, scope: !4642)
!4647 = !DILocalVariable(name: "totframe", arg: 2, scope: !4642, file: !3, line: 345, type: !207)
!4648 = !DILocation(line: 345, column: 53, scope: !4642)
!4649 = !DILocalVariable(name: "dist", scope: !4642, file: !3, line: 347, type: !250)
!4650 = !DILocation(line: 347, column: 8, scope: !4642)
!4651 = !DILocalVariable(name: "side_a", scope: !4642, file: !3, line: 347, type: !250)
!4652 = !DILocation(line: 347, column: 14, scope: !4642)
!4653 = !DILocalVariable(name: "side_b", scope: !4642, file: !3, line: 347, type: !250)
!4654 = !DILocation(line: 347, column: 22, scope: !4642)
!4655 = !DILocalVariable(name: "thresh", scope: !4642, file: !3, line: 347, type: !250)
!4656 = !DILocation(line: 347, column: 30, scope: !4642)
!4657 = !DILocalVariable(name: "mid", scope: !4642, file: !3, line: 347, type: !290)
!4658 = !DILocation(line: 347, column: 38, scope: !4642)
!4659 = !DILocalVariable(name: "i", scope: !4642, file: !3, line: 348, type: !207)
!4660 = !DILocation(line: 348, column: 6, scope: !4642)
!4661 = !DILocalVariable(name: "j", scope: !4642, file: !3, line: 348, type: !207)
!4662 = !DILocation(line: 348, column: 9, scope: !4642)
!4663 = !DILocalVariable(name: "k", scope: !4642, file: !3, line: 348, type: !207)
!4664 = !DILocation(line: 348, column: 12, scope: !4642)
!4665 = !DILocalVariable(name: "l", scope: !4642, file: !3, line: 348, type: !207)
!4666 = !DILocation(line: 348, column: 15, scope: !4642)
!4667 = !DILocation(line: 350, column: 9, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 350, column: 2)
!4669 = !DILocation(line: 350, column: 7, scope: !4668)
!4670 = !DILocation(line: 350, column: 14, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 350, column: 2)
!4672 = !DILocation(line: 350, column: 18, scope: !4671)
!4673 = !DILocation(line: 350, column: 16, scope: !4671)
!4674 = !DILocation(line: 350, column: 2, scope: !4668)
!4675 = !DILocation(line: 351, column: 22, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 350, column: 33)
!4677 = !DILocation(line: 351, column: 29, scope: !4676)
!4678 = !DILocation(line: 351, column: 12, scope: !4676)
!4679 = !DILocation(line: 351, column: 10, scope: !4676)
!4680 = !DILocation(line: 354, column: 10, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 354, column: 3)
!4682 = !DILocation(line: 354, column: 8, scope: !4681)
!4683 = !DILocation(line: 354, column: 15, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 354, column: 3)
!4685 = !DILocation(line: 354, column: 17, scope: !4684)
!4686 = !DILocation(line: 354, column: 3, scope: !4681)
!4687 = !DILocation(line: 357, column: 8, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 357, column: 8)
!4689 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 354, column: 27)
!4690 = !DILocation(line: 357, column: 15, scope: !4688)
!4691 = !DILocation(line: 357, column: 19, scope: !4688)
!4692 = !DILocation(line: 357, column: 25, scope: !4688)
!4693 = !DILocation(line: 357, column: 28, scope: !4688)
!4694 = !DILocation(line: 357, column: 8, scope: !4689)
!4695 = !DILocation(line: 358, column: 5, scope: !4688)
!4696 = !DILocation(line: 360, column: 13, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 360, column: 4)
!4698 = !DILocation(line: 360, column: 15, scope: !4697)
!4699 = !DILocation(line: 360, column: 11, scope: !4697)
!4700 = !DILocation(line: 360, column: 9, scope: !4697)
!4701 = !DILocation(line: 360, column: 20, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 360, column: 4)
!4703 = !DILocation(line: 360, column: 24, scope: !4702)
!4704 = !DILocation(line: 360, column: 22, scope: !4702)
!4705 = !DILocation(line: 360, column: 4, scope: !4697)
!4706 = !DILocation(line: 363, column: 24, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 360, column: 39)
!4708 = !DILocation(line: 363, column: 31, scope: !4707)
!4709 = !DILocation(line: 363, column: 14, scope: !4707)
!4710 = !DILocation(line: 363, column: 12, scope: !4707)
!4711 = !DILocation(line: 364, column: 21, scope: !4707)
!4712 = !DILocation(line: 364, column: 29, scope: !4707)
!4713 = !DILocation(line: 364, column: 14, scope: !4707)
!4714 = !DILocation(line: 364, column: 37, scope: !4707)
!4715 = !DILocation(line: 364, column: 12, scope: !4707)
!4716 = !DILocation(line: 367, column: 12, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 367, column: 5)
!4718 = !DILocation(line: 367, column: 10, scope: !4717)
!4719 = !DILocation(line: 367, column: 17, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 367, column: 5)
!4721 = !DILocation(line: 367, column: 19, scope: !4720)
!4722 = !DILocation(line: 367, column: 5, scope: !4717)
!4723 = !DILocation(line: 368, column: 10, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 368, column: 10)
!4725 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 367, column: 29)
!4726 = !DILocation(line: 368, column: 17, scope: !4724)
!4727 = !DILocation(line: 368, column: 21, scope: !4724)
!4728 = !DILocation(line: 368, column: 27, scope: !4724)
!4729 = !DILocation(line: 368, column: 30, scope: !4724)
!4730 = !DILocation(line: 368, column: 10, scope: !4725)
!4731 = !DILocation(line: 369, column: 7, scope: !4724)
!4732 = !DILocation(line: 386, column: 22, scope: !4725)
!4733 = !DILocation(line: 386, column: 29, scope: !4725)
!4734 = !DILocation(line: 386, column: 33, scope: !4725)
!4735 = !DILocation(line: 386, column: 36, scope: !4725)
!4736 = !DILocation(line: 387, column: 22, scope: !4725)
!4737 = !DILocation(line: 387, column: 29, scope: !4725)
!4738 = !DILocation(line: 387, column: 33, scope: !4725)
!4739 = !DILocation(line: 387, column: 36, scope: !4725)
!4740 = !DILocation(line: 386, column: 13, scope: !4725)
!4741 = !DILocation(line: 386, column: 11, scope: !4725)
!4742 = !DILocation(line: 388, column: 10, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 388, column: 10)
!4744 = !DILocation(line: 388, column: 17, scope: !4743)
!4745 = !DILocation(line: 388, column: 15, scope: !4743)
!4746 = !DILocation(line: 388, column: 10, scope: !4725)
!4747 = !DILocation(line: 389, column: 19, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 388, column: 25)
!4749 = !DILocation(line: 390, column: 19, scope: !4748)
!4750 = !DILocation(line: 390, column: 26, scope: !4748)
!4751 = !DILocation(line: 390, column: 30, scope: !4748)
!4752 = !DILocation(line: 390, column: 33, scope: !4748)
!4753 = !DILocation(line: 391, column: 19, scope: !4748)
!4754 = !DILocation(line: 391, column: 26, scope: !4748)
!4755 = !DILocation(line: 391, column: 30, scope: !4748)
!4756 = !DILocation(line: 391, column: 33, scope: !4748)
!4757 = !DILocation(line: 389, column: 7, scope: !4748)
!4758 = !DILocation(line: 393, column: 18, scope: !4748)
!4759 = !DILocation(line: 393, column: 25, scope: !4748)
!4760 = !DILocation(line: 393, column: 29, scope: !4748)
!4761 = !DILocation(line: 393, column: 32, scope: !4748)
!4762 = !DILocation(line: 393, column: 36, scope: !4748)
!4763 = !DILocation(line: 393, column: 7, scope: !4748)
!4764 = !DILocation(line: 394, column: 18, scope: !4748)
!4765 = !DILocation(line: 394, column: 25, scope: !4748)
!4766 = !DILocation(line: 394, column: 29, scope: !4748)
!4767 = !DILocation(line: 394, column: 32, scope: !4748)
!4768 = !DILocation(line: 394, column: 36, scope: !4748)
!4769 = !DILocation(line: 394, column: 7, scope: !4748)
!4770 = !DILocation(line: 396, column: 35, scope: !4748)
!4771 = !DILocation(line: 396, column: 42, scope: !4748)
!4772 = !DILocation(line: 396, column: 7, scope: !4748)
!4773 = !DILocation(line: 396, column: 14, scope: !4748)
!4774 = !DILocation(line: 396, column: 18, scope: !4748)
!4775 = !DILocation(line: 396, column: 24, scope: !4748)
!4776 = !DILocation(line: 396, column: 27, scope: !4748)
!4777 = !DILocation(line: 396, column: 33, scope: !4748)
!4778 = !DILocation(line: 397, column: 36, scope: !4748)
!4779 = !DILocation(line: 397, column: 7, scope: !4748)
!4780 = !DILocation(line: 397, column: 14, scope: !4748)
!4781 = !DILocation(line: 397, column: 18, scope: !4748)
!4782 = !DILocation(line: 397, column: 24, scope: !4748)
!4783 = !DILocation(line: 397, column: 27, scope: !4748)
!4784 = !DILocation(line: 397, column: 34, scope: !4748)
!4785 = !DILocation(line: 401, column: 7, scope: !4748)
!4786 = !DILocation(line: 403, column: 5, scope: !4725)
!4787 = !DILocation(line: 367, column: 25, scope: !4720)
!4788 = !DILocation(line: 367, column: 5, scope: !4720)
!4789 = distinct !{!4789, !4722, !4790}
!4790 = !DILocation(line: 403, column: 5, scope: !4717)
!4791 = !DILocation(line: 404, column: 4, scope: !4707)
!4792 = !DILocation(line: 360, column: 35, scope: !4702)
!4793 = !DILocation(line: 360, column: 4, scope: !4702)
!4794 = distinct !{!4794, !4705, !4795}
!4795 = !DILocation(line: 404, column: 4, scope: !4697)
!4796 = !DILocation(line: 405, column: 3, scope: !4689)
!4797 = !DILocation(line: 354, column: 23, scope: !4684)
!4798 = !DILocation(line: 354, column: 3, scope: !4684)
!4799 = distinct !{!4799, !4686, !4800}
!4800 = !DILocation(line: 405, column: 3, scope: !4681)
!4801 = !DILocation(line: 406, column: 2, scope: !4676)
!4802 = !DILocation(line: 350, column: 29, scope: !4671)
!4803 = !DILocation(line: 350, column: 2, scope: !4671)
!4804 = distinct !{!4804, !4674, !4805}
!4805 = !DILocation(line: 406, column: 2, scope: !4668)
!4806 = !DILocation(line: 407, column: 1, scope: !4642)
!4807 = distinct !DISubprogram(name: "frame_len", scope: !3, file: !3, line: 339, type: !4808, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!250, !4810}
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!4812 = !DILocalVariable(name: "frame", arg: 1, scope: !4807, file: !3, line: 339, type: !4810)
!4813 = !DILocation(line: 339, column: 37, scope: !4807)
!4814 = !DILocation(line: 341, column: 19, scope: !4807)
!4815 = !DILocation(line: 341, column: 26, scope: !4807)
!4816 = !DILocation(line: 341, column: 33, scope: !4807)
!4817 = !DILocation(line: 341, column: 40, scope: !4807)
!4818 = !DILocation(line: 341, column: 10, scope: !4807)
!4819 = !DILocation(line: 342, column: 19, scope: !4807)
!4820 = !DILocation(line: 342, column: 26, scope: !4807)
!4821 = !DILocation(line: 342, column: 33, scope: !4807)
!4822 = !DILocation(line: 342, column: 40, scope: !4807)
!4823 = !DILocation(line: 342, column: 10, scope: !4807)
!4824 = !DILocation(line: 341, column: 47, scope: !4807)
!4825 = !DILocation(line: 342, column: 48, scope: !4807)
!4826 = !DILocation(line: 341, column: 2, scope: !4807)
!4827 = distinct !DISubprogram(name: "min_ff", scope: !2207, file: !2207, line: 202, type: !4828, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!250, !250, !250}
!4830 = !DILocalVariable(name: "a", arg: 1, scope: !4827, file: !2207, line: 202, type: !250)
!4831 = !DILocation(line: 202, column: 28, scope: !4827)
!4832 = !DILocalVariable(name: "b", arg: 2, scope: !4827, file: !2207, line: 202, type: !250)
!4833 = !DILocation(line: 202, column: 37, scope: !4827)
!4834 = !DILocation(line: 204, column: 10, scope: !4827)
!4835 = !DILocation(line: 204, column: 14, scope: !4827)
!4836 = !DILocation(line: 204, column: 12, scope: !4827)
!4837 = !DILocation(line: 204, column: 9, scope: !4827)
!4838 = !DILocation(line: 204, column: 19, scope: !4827)
!4839 = !DILocation(line: 204, column: 23, scope: !4827)
!4840 = !DILocation(line: 204, column: 2, scope: !4827)
!4841 = distinct !DISubprogram(name: "build_hull", scope: !3, file: !3, line: 219, type: !4842, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!984, !3720, !3510, !207}
!4844 = !DILocalVariable(name: "so", arg: 1, scope: !4841, file: !3, line: 219, type: !3720)
!4845 = !DILocation(line: 219, column: 36, scope: !4841)
!4846 = !DILocalVariable(name: "frames", arg: 2, scope: !4841, file: !3, line: 219, type: !3510)
!4847 = !DILocation(line: 219, column: 48, scope: !4841)
!4848 = !DILocalVariable(name: "totframe", arg: 3, scope: !4841, file: !3, line: 219, type: !207)
!4849 = !DILocation(line: 219, column: 60, scope: !4841)
!4850 = !DILocation(line: 331, column: 8, scope: !4841)
!4851 = !DILocation(line: 331, column: 18, scope: !4841)
!4852 = !DILocation(line: 331, column: 32, scope: !4841)
!4853 = !DILocation(line: 333, column: 2, scope: !4841)
!4854 = distinct !DISubprogram(name: "skin_frame_find_contained_faces", scope: !3, file: !3, line: 202, type: !4855, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!984, !4810, !1869}
!4857 = !DILocalVariable(name: "frame", arg: 1, scope: !4854, file: !3, line: 202, type: !4810)
!4858 = !DILocation(line: 202, column: 58, scope: !4854)
!4859 = !DILocalVariable(name: "fill_faces", arg: 2, scope: !4854, file: !3, line: 203, type: !1869)
!4860 = !DILocation(line: 203, column: 53, scope: !4854)
!4861 = !DILocalVariable(name: "diag", scope: !4854, file: !3, line: 205, type: !333)
!4862 = !DILocation(line: 205, column: 10, scope: !4854)
!4863 = !DILocation(line: 208, column: 24, scope: !4854)
!4864 = !DILocation(line: 208, column: 31, scope: !4854)
!4865 = !DILocation(line: 208, column: 41, scope: !4854)
!4866 = !DILocation(line: 208, column: 48, scope: !4854)
!4867 = !DILocation(line: 208, column: 9, scope: !4854)
!4868 = !DILocation(line: 208, column: 7, scope: !4854)
!4869 = !DILocation(line: 209, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 209, column: 6)
!4871 = !DILocation(line: 209, column: 6, scope: !4854)
!4872 = !DILocation(line: 210, column: 25, scope: !4870)
!4873 = !DILocation(line: 210, column: 32, scope: !4870)
!4874 = !DILocation(line: 210, column: 42, scope: !4870)
!4875 = !DILocation(line: 210, column: 49, scope: !4870)
!4876 = !DILocation(line: 210, column: 10, scope: !4870)
!4877 = !DILocation(line: 210, column: 8, scope: !4870)
!4878 = !DILocation(line: 210, column: 3, scope: !4870)
!4879 = !DILocation(line: 212, column: 6, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 212, column: 6)
!4881 = !DILocation(line: 212, column: 6, scope: !4854)
!4882 = !DILocation(line: 213, column: 28, scope: !4880)
!4883 = !DILocation(line: 213, column: 35, scope: !4880)
!4884 = !DILocation(line: 213, column: 51, scope: !4880)
!4885 = !DILocation(line: 213, column: 10, scope: !4880)
!4886 = !DILocation(line: 213, column: 3, scope: !4880)
!4887 = !DILocation(line: 215, column: 3, scope: !4880)
!4888 = !DILocation(line: 216, column: 1, scope: !4854)
!4889 = distinct !DISubprogram(name: "BM_iter_new", scope: !4890, file: !4890, line: 172, type: !4891, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4890 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!260, !4893, !1847, !1277, !260}
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!4894 = !DILocalVariable(name: "iter", arg: 1, scope: !4889, file: !4890, line: 172, type: !4893)
!4895 = !DILocation(line: 172, column: 38, scope: !4889)
!4896 = !DILocalVariable(name: "bm", arg: 2, scope: !4889, file: !4890, line: 172, type: !1847)
!4897 = !DILocation(line: 172, column: 51, scope: !4889)
!4898 = !DILocalVariable(name: "itype", arg: 3, scope: !4889, file: !4890, line: 172, type: !1277)
!4899 = !DILocation(line: 172, column: 66, scope: !4889)
!4900 = !DILocalVariable(name: "data", arg: 4, scope: !4889, file: !4890, line: 172, type: !260)
!4901 = !DILocation(line: 172, column: 79, scope: !4889)
!4902 = !DILocation(line: 174, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4889, file: !4890, line: 174, column: 6)
!4904 = !DILocation(line: 174, column: 6, scope: !4889)
!4905 = !DILocation(line: 175, column: 23, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !4890, line: 174, column: 51)
!4907 = !DILocation(line: 175, column: 10, scope: !4906)
!4908 = !DILocation(line: 175, column: 3, scope: !4906)
!4909 = !DILocation(line: 178, column: 3, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4903, file: !4890, line: 177, column: 7)
!4911 = !DILocation(line: 180, column: 1, scope: !4889)
!4912 = distinct !DISubprogram(name: "quad_from_tris", scope: !3, file: !3, line: 1329, type: !4913, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{null, !333, !1869, !1865}
!4915 = !DILocalVariable(name: "e", arg: 1, scope: !4912, file: !3, line: 1329, type: !333)
!4916 = !DILocation(line: 1329, column: 36, scope: !4912)
!4917 = !DILocalVariable(name: "adj", arg: 2, scope: !4912, file: !3, line: 1329, type: !1869)
!4918 = !DILocation(line: 1329, column: 47, scope: !4912)
!4919 = !DILocalVariable(name: "ndx", arg: 3, scope: !4912, file: !3, line: 1329, type: !1865)
!4920 = !DILocation(line: 1329, column: 63, scope: !4912)
!4921 = !DILocalVariable(name: "tri", scope: !4912, file: !3, line: 1331, type: !4922)
!4922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 384, elements: !4923)
!4923 = !{!256, !292}
!4924 = !DILocation(line: 1331, column: 10, scope: !4912)
!4925 = !DILocalVariable(name: "opp", scope: !4912, file: !3, line: 1332, type: !270)
!4926 = !DILocation(line: 1332, column: 10, scope: !4912)
!4927 = !DILocalVariable(name: "i", scope: !4912, file: !3, line: 1333, type: !207)
!4928 = !DILocation(line: 1333, column: 6, scope: !4912)
!4929 = !DILocalVariable(name: "j", scope: !4912, file: !3, line: 1333, type: !207)
!4930 = !DILocation(line: 1333, column: 9, scope: !4912)
!4931 = !DILocation(line: 1341, column: 28, scope: !4912)
!4932 = !DILocation(line: 1341, column: 36, scope: !4912)
!4933 = !DILocation(line: 1341, column: 2, scope: !4912)
!4934 = !DILocation(line: 1342, column: 28, scope: !4912)
!4935 = !DILocation(line: 1342, column: 36, scope: !4912)
!4936 = !DILocation(line: 1342, column: 2, scope: !4912)
!4937 = !DILocation(line: 1346, column: 9, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 1346, column: 2)
!4939 = !DILocation(line: 1346, column: 7, scope: !4938)
!4940 = !DILocation(line: 1346, column: 14, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1346, column: 2)
!4942 = !DILocation(line: 1346, column: 16, scope: !4941)
!4943 = !DILocation(line: 1346, column: 2, scope: !4938)
!4944 = !DILocation(line: 1347, column: 7, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 1347, column: 7)
!4946 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 1346, column: 26)
!4947 = !DILocation(line: 1347, column: 14, scope: !4945)
!4948 = !DILocation(line: 1347, column: 20, scope: !4945)
!4949 = !DILocation(line: 1347, column: 17, scope: !4945)
!4950 = !DILocation(line: 1347, column: 30, scope: !4945)
!4951 = !DILocation(line: 1348, column: 7, scope: !4945)
!4952 = !DILocation(line: 1348, column: 14, scope: !4945)
!4953 = !DILocation(line: 1348, column: 20, scope: !4945)
!4954 = !DILocation(line: 1348, column: 17, scope: !4945)
!4955 = !DILocation(line: 1348, column: 30, scope: !4945)
!4956 = !DILocation(line: 1349, column: 7, scope: !4945)
!4957 = !DILocation(line: 1349, column: 14, scope: !4945)
!4958 = !DILocation(line: 1349, column: 20, scope: !4945)
!4959 = !DILocation(line: 1349, column: 17, scope: !4945)
!4960 = !DILocation(line: 1347, column: 7, scope: !4946)
!4961 = !DILocation(line: 1351, column: 10, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1350, column: 3)
!4963 = !DILocation(line: 1351, column: 17, scope: !4962)
!4964 = !DILocation(line: 1351, column: 8, scope: !4962)
!4965 = !DILocation(line: 1352, column: 4, scope: !4962)
!4966 = !DILocation(line: 1354, column: 2, scope: !4946)
!4967 = !DILocation(line: 1346, column: 22, scope: !4941)
!4968 = !DILocation(line: 1346, column: 2, scope: !4941)
!4969 = distinct !{!4969, !4943, !4970}
!4970 = !DILocation(line: 1354, column: 2, scope: !4938)
!4971 = !DILocation(line: 1357, column: 9, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 1357, column: 2)
!4973 = !DILocation(line: 1357, column: 16, scope: !4972)
!4974 = !DILocation(line: 1357, column: 7, scope: !4972)
!4975 = !DILocation(line: 1357, column: 21, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 1357, column: 2)
!4977 = !DILocation(line: 1357, column: 23, scope: !4976)
!4978 = !DILocation(line: 1357, column: 2, scope: !4972)
!4979 = !DILocation(line: 1358, column: 12, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 1357, column: 38)
!4981 = !DILocation(line: 1358, column: 19, scope: !4980)
!4982 = !DILocation(line: 1358, column: 3, scope: !4980)
!4983 = !DILocation(line: 1358, column: 7, scope: !4980)
!4984 = !DILocation(line: 1358, column: 10, scope: !4980)
!4985 = !DILocation(line: 1361, column: 8, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 1361, column: 7)
!4987 = !DILocation(line: 1361, column: 15, scope: !4986)
!4988 = !DILocation(line: 1361, column: 21, scope: !4986)
!4989 = !DILocation(line: 1361, column: 24, scope: !4986)
!4990 = !DILocation(line: 1361, column: 18, scope: !4986)
!4991 = !DILocation(line: 1361, column: 27, scope: !4986)
!4992 = !DILocation(line: 1361, column: 30, scope: !4986)
!4993 = !DILocation(line: 1361, column: 37, scope: !4986)
!4994 = !DILocation(line: 1361, column: 43, scope: !4986)
!4995 = !DILocation(line: 1361, column: 46, scope: !4986)
!4996 = !DILocation(line: 1361, column: 40, scope: !4986)
!4997 = !DILocation(line: 1361, column: 50, scope: !4986)
!4998 = !DILocation(line: 1362, column: 8, scope: !4986)
!4999 = !DILocation(line: 1362, column: 16, scope: !4986)
!5000 = !DILocation(line: 1362, column: 18, scope: !4986)
!5001 = !DILocation(line: 1362, column: 23, scope: !4986)
!5002 = !DILocation(line: 1362, column: 31, scope: !4986)
!5003 = !DILocation(line: 1362, column: 34, scope: !4986)
!5004 = !DILocation(line: 1362, column: 28, scope: !4986)
!5005 = !DILocation(line: 1362, column: 37, scope: !4986)
!5006 = !DILocation(line: 1362, column: 40, scope: !4986)
!5007 = !DILocation(line: 1362, column: 48, scope: !4986)
!5008 = !DILocation(line: 1362, column: 50, scope: !4986)
!5009 = !DILocation(line: 1362, column: 55, scope: !4986)
!5010 = !DILocation(line: 1362, column: 63, scope: !4986)
!5011 = !DILocation(line: 1362, column: 66, scope: !4986)
!5012 = !DILocation(line: 1362, column: 60, scope: !4986)
!5013 = !DILocation(line: 1361, column: 7, scope: !4980)
!5014 = !DILocation(line: 1364, column: 5, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 1363, column: 3)
!5016 = !DILocation(line: 1365, column: 13, scope: !5015)
!5017 = !DILocation(line: 1365, column: 4, scope: !5015)
!5018 = !DILocation(line: 1365, column: 8, scope: !5015)
!5019 = !DILocation(line: 1365, column: 11, scope: !5015)
!5020 = !DILocation(line: 1366, column: 3, scope: !5015)
!5021 = !DILocation(line: 1367, column: 2, scope: !4980)
!5022 = !DILocation(line: 1357, column: 29, scope: !4976)
!5023 = !DILocation(line: 1357, column: 34, scope: !4976)
!5024 = !DILocation(line: 1357, column: 2, scope: !4976)
!5025 = distinct !{!5025, !4978, !5026}
!5026 = !DILocation(line: 1367, column: 2, scope: !4972)
!5027 = !DILocation(line: 1368, column: 1, scope: !4912)
!5028 = distinct !DISubprogram(name: "quad_crosses_symmetry_plane", scope: !3, file: !3, line: 175, type: !5029, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!984, !1865, !3784}
!5031 = !DILocalVariable(name: "quad", arg: 1, scope: !5028, file: !3, line: 175, type: !1865)
!5032 = !DILocation(line: 175, column: 49, scope: !5028)
!5033 = !DILocalVariable(name: "smd", arg: 2, scope: !5028, file: !3, line: 176, type: !3784)
!5034 = !DILocation(line: 176, column: 65, scope: !5028)
!5035 = !DILocalVariable(name: "axis", scope: !5028, file: !3, line: 178, type: !207)
!5036 = !DILocation(line: 178, column: 6, scope: !5028)
!5037 = !DILocation(line: 180, column: 12, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 180, column: 2)
!5039 = !DILocation(line: 180, column: 7, scope: !5038)
!5040 = !DILocation(line: 180, column: 17, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 180, column: 2)
!5042 = !DILocation(line: 180, column: 22, scope: !5041)
!5043 = !DILocation(line: 180, column: 2, scope: !5038)
!5044 = !DILocation(line: 181, column: 7, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 181, column: 7)
!5046 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 180, column: 35)
!5047 = !DILocation(line: 181, column: 12, scope: !5045)
!5048 = !DILocation(line: 181, column: 34, scope: !5045)
!5049 = !DILocation(line: 181, column: 31, scope: !5045)
!5050 = !DILocation(line: 181, column: 26, scope: !5045)
!5051 = !DILocation(line: 181, column: 7, scope: !5046)
!5052 = !DILocalVariable(name: "left", scope: !5053, file: !3, line: 182, type: !984)
!5053 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 181, column: 41)
!5054 = !DILocation(line: 182, column: 9, scope: !5053)
!5055 = !DILocalVariable(name: "right", scope: !5053, file: !3, line: 182, type: !984)
!5056 = !DILocation(line: 182, column: 23, scope: !5053)
!5057 = !DILocalVariable(name: "i", scope: !5053, file: !3, line: 183, type: !207)
!5058 = !DILocation(line: 183, column: 8, scope: !5053)
!5059 = !DILocation(line: 185, column: 11, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 185, column: 4)
!5061 = !DILocation(line: 185, column: 9, scope: !5060)
!5062 = !DILocation(line: 185, column: 16, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 185, column: 4)
!5064 = !DILocation(line: 185, column: 18, scope: !5063)
!5065 = !DILocation(line: 185, column: 4, scope: !5060)
!5066 = !DILocation(line: 186, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 186, column: 9)
!5068 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 185, column: 28)
!5069 = !DILocation(line: 186, column: 14, scope: !5067)
!5070 = !DILocation(line: 186, column: 18, scope: !5067)
!5071 = !DILocation(line: 186, column: 21, scope: !5067)
!5072 = !DILocation(line: 186, column: 27, scope: !5067)
!5073 = !DILocation(line: 186, column: 9, scope: !5068)
!5074 = !DILocation(line: 187, column: 11, scope: !5067)
!5075 = !DILocation(line: 187, column: 6, scope: !5067)
!5076 = !DILocation(line: 188, column: 14, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 188, column: 14)
!5078 = !DILocation(line: 188, column: 19, scope: !5077)
!5079 = !DILocation(line: 188, column: 23, scope: !5077)
!5080 = !DILocation(line: 188, column: 26, scope: !5077)
!5081 = !DILocation(line: 188, column: 32, scope: !5077)
!5082 = !DILocation(line: 188, column: 14, scope: !5067)
!5083 = !DILocation(line: 189, column: 12, scope: !5077)
!5084 = !DILocation(line: 189, column: 6, scope: !5077)
!5085 = !DILocation(line: 191, column: 9, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 191, column: 9)
!5087 = !DILocation(line: 191, column: 14, scope: !5086)
!5088 = !DILocation(line: 191, column: 17, scope: !5086)
!5089 = !DILocation(line: 191, column: 9, scope: !5068)
!5090 = !DILocation(line: 192, column: 6, scope: !5086)
!5091 = !DILocation(line: 193, column: 4, scope: !5068)
!5092 = !DILocation(line: 185, column: 24, scope: !5063)
!5093 = !DILocation(line: 185, column: 4, scope: !5063)
!5094 = distinct !{!5094, !5065, !5095}
!5095 = !DILocation(line: 193, column: 4, scope: !5060)
!5096 = !DILocation(line: 194, column: 3, scope: !5053)
!5097 = !DILocation(line: 195, column: 2, scope: !5046)
!5098 = !DILocation(line: 180, column: 31, scope: !5041)
!5099 = !DILocation(line: 180, column: 2, scope: !5041)
!5100 = distinct !{!5100, !5043, !5101}
!5101 = !DILocation(line: 195, column: 2, scope: !5038)
!5102 = !DILocation(line: 197, column: 2, scope: !5028)
!5103 = !DILocation(line: 198, column: 1, scope: !5028)
!5104 = distinct !DISubprogram(name: "is_quad_symmetric", scope: !3, file: !3, line: 142, type: !5029, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5105 = !DILocalVariable(name: "quad", arg: 1, scope: !5104, file: !3, line: 142, type: !1865)
!5106 = !DILocation(line: 142, column: 39, scope: !5104)
!5107 = !DILocalVariable(name: "smd", arg: 2, scope: !5104, file: !3, line: 143, type: !3784)
!5108 = !DILocation(line: 143, column: 55, scope: !5104)
!5109 = !DILocalVariable(name: "threshold", scope: !5104, file: !3, line: 145, type: !733)
!5110 = !DILocation(line: 145, column: 14, scope: !5104)
!5111 = !DILocalVariable(name: "threshold_squared", scope: !5104, file: !3, line: 146, type: !733)
!5112 = !DILocation(line: 146, column: 14, scope: !5104)
!5113 = !DILocalVariable(name: "axis", scope: !5104, file: !3, line: 147, type: !207)
!5114 = !DILocation(line: 147, column: 6, scope: !5104)
!5115 = !DILocation(line: 149, column: 12, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 149, column: 2)
!5117 = !DILocation(line: 149, column: 7, scope: !5116)
!5118 = !DILocation(line: 149, column: 17, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 149, column: 2)
!5120 = !DILocation(line: 149, column: 22, scope: !5119)
!5121 = !DILocation(line: 149, column: 2, scope: !5116)
!5122 = !DILocation(line: 150, column: 7, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 150, column: 7)
!5124 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 149, column: 35)
!5125 = !DILocation(line: 150, column: 12, scope: !5123)
!5126 = !DILocation(line: 150, column: 34, scope: !5123)
!5127 = !DILocation(line: 150, column: 31, scope: !5123)
!5128 = !DILocation(line: 150, column: 26, scope: !5123)
!5129 = !DILocation(line: 150, column: 7, scope: !5124)
!5130 = !DILocalVariable(name: "a", scope: !5131, file: !3, line: 151, type: !290)
!5131 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 150, column: 41)
!5132 = !DILocation(line: 151, column: 10, scope: !5131)
!5133 = !DILocation(line: 153, column: 15, scope: !5131)
!5134 = !DILocation(line: 153, column: 18, scope: !5131)
!5135 = !DILocation(line: 153, column: 27, scope: !5131)
!5136 = !DILocation(line: 153, column: 4, scope: !5131)
!5137 = !DILocation(line: 154, column: 17, scope: !5131)
!5138 = !DILocation(line: 154, column: 15, scope: !5131)
!5139 = !DILocation(line: 154, column: 14, scope: !5131)
!5140 = !DILocation(line: 154, column: 6, scope: !5131)
!5141 = !DILocation(line: 154, column: 4, scope: !5131)
!5142 = !DILocation(line: 154, column: 12, scope: !5131)
!5143 = !DILocation(line: 156, column: 25, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 156, column: 8)
!5145 = !DILocation(line: 156, column: 28, scope: !5144)
!5146 = !DILocation(line: 156, column: 37, scope: !5144)
!5147 = !DILocation(line: 156, column: 8, scope: !5144)
!5148 = !DILocation(line: 156, column: 41, scope: !5144)
!5149 = !DILocation(line: 156, column: 8, scope: !5131)
!5150 = !DILocation(line: 157, column: 16, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 156, column: 62)
!5152 = !DILocation(line: 157, column: 19, scope: !5151)
!5153 = !DILocation(line: 157, column: 28, scope: !5151)
!5154 = !DILocation(line: 157, column: 5, scope: !5151)
!5155 = !DILocation(line: 158, column: 18, scope: !5151)
!5156 = !DILocation(line: 158, column: 16, scope: !5151)
!5157 = !DILocation(line: 158, column: 15, scope: !5151)
!5158 = !DILocation(line: 158, column: 7, scope: !5151)
!5159 = !DILocation(line: 158, column: 5, scope: !5151)
!5160 = !DILocation(line: 158, column: 13, scope: !5151)
!5161 = !DILocation(line: 159, column: 26, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 159, column: 9)
!5163 = !DILocation(line: 159, column: 29, scope: !5162)
!5164 = !DILocation(line: 159, column: 38, scope: !5162)
!5165 = !DILocation(line: 159, column: 9, scope: !5162)
!5166 = !DILocation(line: 159, column: 42, scope: !5162)
!5167 = !DILocation(line: 159, column: 9, scope: !5151)
!5168 = !DILocation(line: 160, column: 6, scope: !5162)
!5169 = !DILocation(line: 161, column: 4, scope: !5151)
!5170 = !DILocation(line: 162, column: 30, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 162, column: 13)
!5172 = !DILocation(line: 162, column: 33, scope: !5171)
!5173 = !DILocation(line: 162, column: 42, scope: !5171)
!5174 = !DILocation(line: 162, column: 13, scope: !5171)
!5175 = !DILocation(line: 162, column: 46, scope: !5171)
!5176 = !DILocation(line: 162, column: 13, scope: !5144)
!5177 = !DILocation(line: 163, column: 16, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 162, column: 67)
!5179 = !DILocation(line: 163, column: 19, scope: !5178)
!5180 = !DILocation(line: 163, column: 28, scope: !5178)
!5181 = !DILocation(line: 163, column: 5, scope: !5178)
!5182 = !DILocation(line: 164, column: 18, scope: !5178)
!5183 = !DILocation(line: 164, column: 16, scope: !5178)
!5184 = !DILocation(line: 164, column: 15, scope: !5178)
!5185 = !DILocation(line: 164, column: 7, scope: !5178)
!5186 = !DILocation(line: 164, column: 5, scope: !5178)
!5187 = !DILocation(line: 164, column: 13, scope: !5178)
!5188 = !DILocation(line: 165, column: 26, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 165, column: 9)
!5190 = !DILocation(line: 165, column: 29, scope: !5189)
!5191 = !DILocation(line: 165, column: 38, scope: !5189)
!5192 = !DILocation(line: 165, column: 9, scope: !5189)
!5193 = !DILocation(line: 165, column: 42, scope: !5189)
!5194 = !DILocation(line: 165, column: 9, scope: !5178)
!5195 = !DILocation(line: 166, column: 6, scope: !5189)
!5196 = !DILocation(line: 167, column: 4, scope: !5178)
!5197 = !DILocation(line: 168, column: 3, scope: !5131)
!5198 = !DILocation(line: 169, column: 2, scope: !5124)
!5199 = !DILocation(line: 149, column: 31, scope: !5119)
!5200 = !DILocation(line: 149, column: 2, scope: !5119)
!5201 = distinct !{!5201, !5121, !5202}
!5202 = !DILocation(line: 169, column: 2, scope: !5116)
!5203 = !DILocation(line: 171, column: 2, scope: !5104)
!5204 = !DILocation(line: 172, column: 1, scope: !5104)
!5205 = distinct !DISubprogram(name: "BM_iter_step", scope: !4890, file: !4890, line: 40, type: !5206, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!260, !4893}
!5208 = !DILocalVariable(name: "iter", arg: 1, scope: !5205, file: !4890, line: 40, type: !4893)
!5209 = !DILocation(line: 40, column: 39, scope: !5205)
!5210 = !DILocation(line: 42, column: 9, scope: !5205)
!5211 = !DILocation(line: 42, column: 15, scope: !5205)
!5212 = !DILocation(line: 42, column: 20, scope: !5205)
!5213 = !DILocation(line: 42, column: 2, scope: !5205)
!5214 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !5215, file: !5215, line: 42, type: !5216, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5215 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!240, !5218, !1277}
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!5220 = !DILocalVariable(name: "head", arg: 1, scope: !5214, file: !5215, line: 42, type: !5218)
!5221 = !DILocation(line: 42, column: 52, scope: !5214)
!5222 = !DILocalVariable(name: "hflag", arg: 2, scope: !5214, file: !5215, line: 42, type: !1277)
!5223 = !DILocation(line: 42, column: 69, scope: !5214)
!5224 = !DILocation(line: 44, column: 9, scope: !5214)
!5225 = !DILocation(line: 44, column: 15, scope: !5214)
!5226 = !DILocation(line: 44, column: 23, scope: !5214)
!5227 = !DILocation(line: 44, column: 21, scope: !5214)
!5228 = !DILocation(line: 44, column: 2, scope: !5214)
!5229 = distinct !DISubprogram(name: "add_quad_from_tris", scope: !3, file: !3, line: 1370, type: !5230, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{null, !3720, !333, !1869}
!5232 = !DILocalVariable(name: "so", arg: 1, scope: !5229, file: !3, line: 1370, type: !3720)
!5233 = !DILocation(line: 1370, column: 44, scope: !5229)
!5234 = !DILocalVariable(name: "e", arg: 2, scope: !5229, file: !3, line: 1370, type: !333)
!5235 = !DILocation(line: 1370, column: 56, scope: !5229)
!5236 = !DILocalVariable(name: "adj", arg: 3, scope: !5229, file: !3, line: 1370, type: !1869)
!5237 = !DILocation(line: 1370, column: 67, scope: !5229)
!5238 = !DILocalVariable(name: "quad", scope: !5229, file: !3, line: 1372, type: !1957)
!5239 = !DILocation(line: 1372, column: 10, scope: !5229)
!5240 = !DILocation(line: 1374, column: 17, scope: !5229)
!5241 = !DILocation(line: 1374, column: 20, scope: !5229)
!5242 = !DILocation(line: 1374, column: 25, scope: !5229)
!5243 = !DILocation(line: 1374, column: 2, scope: !5229)
!5244 = !DILocation(line: 1376, column: 11, scope: !5229)
!5245 = !DILocation(line: 1376, column: 15, scope: !5229)
!5246 = !DILocation(line: 1376, column: 24, scope: !5229)
!5247 = !DILocation(line: 1376, column: 33, scope: !5229)
!5248 = !DILocation(line: 1376, column: 42, scope: !5229)
!5249 = !DILocation(line: 1376, column: 2, scope: !5229)
!5250 = !DILocation(line: 1377, column: 1, scope: !5229)
!5251 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !5215, file: !5215, line: 52, type: !5252, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{null, !5254, !1277}
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!5255 = !DILocalVariable(name: "head", arg: 1, scope: !5251, file: !5215, line: 52, type: !5254)
!5256 = !DILocation(line: 52, column: 48, scope: !5251)
!5257 = !DILocalVariable(name: "hflag", arg: 2, scope: !5251, file: !5215, line: 52, type: !1277)
!5258 = !DILocation(line: 52, column: 65, scope: !5251)
!5259 = !DILocation(line: 54, column: 17, scope: !5251)
!5260 = !DILocation(line: 54, column: 2, scope: !5251)
!5261 = !DILocation(line: 54, column: 8, scope: !5251)
!5262 = !DILocation(line: 54, column: 14, scope: !5251)
!5263 = !DILocation(line: 55, column: 1, scope: !5251)
!5264 = distinct !DISubprogram(name: "BM_iter_init", scope: !4890, file: !4890, line: 53, type: !5265, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!984, !4893, !1847, !1277, !260}
!5267 = !DILocalVariable(name: "iter", arg: 1, scope: !5264, file: !4890, line: 53, type: !4893)
!5268 = !DILocation(line: 53, column: 38, scope: !5264)
!5269 = !DILocalVariable(name: "bm", arg: 2, scope: !5264, file: !4890, line: 53, type: !1847)
!5270 = !DILocation(line: 53, column: 51, scope: !5264)
!5271 = !DILocalVariable(name: "itype", arg: 3, scope: !5264, file: !4890, line: 53, type: !1277)
!5272 = !DILocation(line: 53, column: 66, scope: !5264)
!5273 = !DILocalVariable(name: "data", arg: 4, scope: !5264, file: !4890, line: 53, type: !260)
!5274 = !DILocation(line: 53, column: 79, scope: !5264)
!5275 = !DILocation(line: 56, column: 16, scope: !5264)
!5276 = !DILocation(line: 56, column: 2, scope: !5264)
!5277 = !DILocation(line: 56, column: 8, scope: !5264)
!5278 = !DILocation(line: 56, column: 14, scope: !5264)
!5279 = !DILocation(line: 59, column: 22, scope: !5264)
!5280 = !DILocation(line: 59, column: 10, scope: !5264)
!5281 = !DILocation(line: 59, column: 2, scope: !5264)
!5282 = !DILocation(line: 63, column: 4, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5264, file: !4890, line: 59, column: 29)
!5284 = !DILocation(line: 63, column: 10, scope: !5283)
!5285 = !DILocation(line: 63, column: 16, scope: !5283)
!5286 = !DILocation(line: 64, column: 4, scope: !5283)
!5287 = !DILocation(line: 64, column: 10, scope: !5283)
!5288 = !DILocation(line: 64, column: 16, scope: !5283)
!5289 = !DILocation(line: 65, column: 44, scope: !5283)
!5290 = !DILocation(line: 65, column: 48, scope: !5283)
!5291 = !DILocation(line: 65, column: 4, scope: !5283)
!5292 = !DILocation(line: 65, column: 10, scope: !5283)
!5293 = !DILocation(line: 65, column: 15, scope: !5283)
!5294 = !DILocation(line: 65, column: 28, scope: !5283)
!5295 = !DILocation(line: 65, column: 37, scope: !5283)
!5296 = !DILocation(line: 65, column: 42, scope: !5283)
!5297 = !DILocation(line: 66, column: 4, scope: !5283)
!5298 = !DILocation(line: 70, column: 4, scope: !5283)
!5299 = !DILocation(line: 70, column: 10, scope: !5283)
!5300 = !DILocation(line: 70, column: 16, scope: !5283)
!5301 = !DILocation(line: 71, column: 4, scope: !5283)
!5302 = !DILocation(line: 71, column: 10, scope: !5283)
!5303 = !DILocation(line: 71, column: 16, scope: !5283)
!5304 = !DILocation(line: 72, column: 44, scope: !5283)
!5305 = !DILocation(line: 72, column: 48, scope: !5283)
!5306 = !DILocation(line: 72, column: 4, scope: !5283)
!5307 = !DILocation(line: 72, column: 10, scope: !5283)
!5308 = !DILocation(line: 72, column: 15, scope: !5283)
!5309 = !DILocation(line: 72, column: 28, scope: !5283)
!5310 = !DILocation(line: 72, column: 37, scope: !5283)
!5311 = !DILocation(line: 72, column: 42, scope: !5283)
!5312 = !DILocation(line: 73, column: 4, scope: !5283)
!5313 = !DILocation(line: 77, column: 4, scope: !5283)
!5314 = !DILocation(line: 77, column: 10, scope: !5283)
!5315 = !DILocation(line: 77, column: 16, scope: !5283)
!5316 = !DILocation(line: 78, column: 4, scope: !5283)
!5317 = !DILocation(line: 78, column: 10, scope: !5283)
!5318 = !DILocation(line: 78, column: 16, scope: !5283)
!5319 = !DILocation(line: 79, column: 44, scope: !5283)
!5320 = !DILocation(line: 79, column: 48, scope: !5283)
!5321 = !DILocation(line: 79, column: 4, scope: !5283)
!5322 = !DILocation(line: 79, column: 10, scope: !5283)
!5323 = !DILocation(line: 79, column: 15, scope: !5283)
!5324 = !DILocation(line: 79, column: 28, scope: !5283)
!5325 = !DILocation(line: 79, column: 37, scope: !5283)
!5326 = !DILocation(line: 79, column: 42, scope: !5283)
!5327 = !DILocation(line: 80, column: 4, scope: !5283)
!5328 = !DILocation(line: 84, column: 4, scope: !5283)
!5329 = !DILocation(line: 84, column: 10, scope: !5283)
!5330 = !DILocation(line: 84, column: 16, scope: !5283)
!5331 = !DILocation(line: 85, column: 4, scope: !5283)
!5332 = !DILocation(line: 85, column: 10, scope: !5283)
!5333 = !DILocation(line: 85, column: 16, scope: !5283)
!5334 = !DILocation(line: 86, column: 46, scope: !5283)
!5335 = !DILocation(line: 86, column: 36, scope: !5283)
!5336 = !DILocation(line: 86, column: 4, scope: !5283)
!5337 = !DILocation(line: 86, column: 10, scope: !5283)
!5338 = !DILocation(line: 86, column: 15, scope: !5283)
!5339 = !DILocation(line: 86, column: 28, scope: !5283)
!5340 = !DILocation(line: 86, column: 34, scope: !5283)
!5341 = !DILocation(line: 87, column: 4, scope: !5283)
!5342 = !DILocation(line: 91, column: 4, scope: !5283)
!5343 = !DILocation(line: 91, column: 10, scope: !5283)
!5344 = !DILocation(line: 91, column: 16, scope: !5283)
!5345 = !DILocation(line: 92, column: 4, scope: !5283)
!5346 = !DILocation(line: 92, column: 10, scope: !5283)
!5347 = !DILocation(line: 92, column: 16, scope: !5283)
!5348 = !DILocation(line: 93, column: 46, scope: !5283)
!5349 = !DILocation(line: 93, column: 36, scope: !5283)
!5350 = !DILocation(line: 93, column: 4, scope: !5283)
!5351 = !DILocation(line: 93, column: 10, scope: !5283)
!5352 = !DILocation(line: 93, column: 15, scope: !5283)
!5353 = !DILocation(line: 93, column: 28, scope: !5283)
!5354 = !DILocation(line: 93, column: 34, scope: !5283)
!5355 = !DILocation(line: 94, column: 4, scope: !5283)
!5356 = !DILocation(line: 98, column: 4, scope: !5283)
!5357 = !DILocation(line: 98, column: 10, scope: !5283)
!5358 = !DILocation(line: 98, column: 16, scope: !5283)
!5359 = !DILocation(line: 99, column: 4, scope: !5283)
!5360 = !DILocation(line: 99, column: 10, scope: !5283)
!5361 = !DILocation(line: 99, column: 16, scope: !5283)
!5362 = !DILocation(line: 100, column: 46, scope: !5283)
!5363 = !DILocation(line: 100, column: 36, scope: !5283)
!5364 = !DILocation(line: 100, column: 4, scope: !5283)
!5365 = !DILocation(line: 100, column: 10, scope: !5283)
!5366 = !DILocation(line: 100, column: 15, scope: !5283)
!5367 = !DILocation(line: 100, column: 28, scope: !5283)
!5368 = !DILocation(line: 100, column: 34, scope: !5283)
!5369 = !DILocation(line: 101, column: 4, scope: !5283)
!5370 = !DILocation(line: 105, column: 4, scope: !5283)
!5371 = !DILocation(line: 105, column: 10, scope: !5283)
!5372 = !DILocation(line: 105, column: 16, scope: !5283)
!5373 = !DILocation(line: 106, column: 4, scope: !5283)
!5374 = !DILocation(line: 106, column: 10, scope: !5283)
!5375 = !DILocation(line: 106, column: 16, scope: !5283)
!5376 = !DILocation(line: 107, column: 46, scope: !5283)
!5377 = !DILocation(line: 107, column: 36, scope: !5283)
!5378 = !DILocation(line: 107, column: 4, scope: !5283)
!5379 = !DILocation(line: 107, column: 10, scope: !5283)
!5380 = !DILocation(line: 107, column: 15, scope: !5283)
!5381 = !DILocation(line: 107, column: 28, scope: !5283)
!5382 = !DILocation(line: 107, column: 34, scope: !5283)
!5383 = !DILocation(line: 108, column: 4, scope: !5283)
!5384 = !DILocation(line: 112, column: 4, scope: !5283)
!5385 = !DILocation(line: 112, column: 10, scope: !5283)
!5386 = !DILocation(line: 112, column: 16, scope: !5283)
!5387 = !DILocation(line: 113, column: 4, scope: !5283)
!5388 = !DILocation(line: 113, column: 10, scope: !5283)
!5389 = !DILocation(line: 113, column: 16, scope: !5283)
!5390 = !DILocation(line: 114, column: 46, scope: !5283)
!5391 = !DILocation(line: 114, column: 36, scope: !5283)
!5392 = !DILocation(line: 114, column: 4, scope: !5283)
!5393 = !DILocation(line: 114, column: 10, scope: !5283)
!5394 = !DILocation(line: 114, column: 15, scope: !5283)
!5395 = !DILocation(line: 114, column: 28, scope: !5283)
!5396 = !DILocation(line: 114, column: 34, scope: !5283)
!5397 = !DILocation(line: 115, column: 4, scope: !5283)
!5398 = !DILocation(line: 119, column: 4, scope: !5283)
!5399 = !DILocation(line: 119, column: 10, scope: !5283)
!5400 = !DILocation(line: 119, column: 16, scope: !5283)
!5401 = !DILocation(line: 120, column: 4, scope: !5283)
!5402 = !DILocation(line: 120, column: 10, scope: !5283)
!5403 = !DILocation(line: 120, column: 16, scope: !5283)
!5404 = !DILocation(line: 121, column: 46, scope: !5283)
!5405 = !DILocation(line: 121, column: 36, scope: !5283)
!5406 = !DILocation(line: 121, column: 4, scope: !5283)
!5407 = !DILocation(line: 121, column: 10, scope: !5283)
!5408 = !DILocation(line: 121, column: 15, scope: !5283)
!5409 = !DILocation(line: 121, column: 28, scope: !5283)
!5410 = !DILocation(line: 121, column: 34, scope: !5283)
!5411 = !DILocation(line: 122, column: 4, scope: !5283)
!5412 = !DILocation(line: 126, column: 4, scope: !5283)
!5413 = !DILocation(line: 126, column: 10, scope: !5283)
!5414 = !DILocation(line: 126, column: 16, scope: !5283)
!5415 = !DILocation(line: 127, column: 4, scope: !5283)
!5416 = !DILocation(line: 127, column: 10, scope: !5283)
!5417 = !DILocation(line: 127, column: 16, scope: !5283)
!5418 = !DILocation(line: 128, column: 46, scope: !5283)
!5419 = !DILocation(line: 128, column: 36, scope: !5283)
!5420 = !DILocation(line: 128, column: 4, scope: !5283)
!5421 = !DILocation(line: 128, column: 10, scope: !5283)
!5422 = !DILocation(line: 128, column: 15, scope: !5283)
!5423 = !DILocation(line: 128, column: 28, scope: !5283)
!5424 = !DILocation(line: 128, column: 34, scope: !5283)
!5425 = !DILocation(line: 129, column: 4, scope: !5283)
!5426 = !DILocation(line: 133, column: 4, scope: !5283)
!5427 = !DILocation(line: 133, column: 10, scope: !5283)
!5428 = !DILocation(line: 133, column: 16, scope: !5283)
!5429 = !DILocation(line: 134, column: 4, scope: !5283)
!5430 = !DILocation(line: 134, column: 10, scope: !5283)
!5431 = !DILocation(line: 134, column: 16, scope: !5283)
!5432 = !DILocation(line: 135, column: 46, scope: !5283)
!5433 = !DILocation(line: 135, column: 36, scope: !5283)
!5434 = !DILocation(line: 135, column: 4, scope: !5283)
!5435 = !DILocation(line: 135, column: 10, scope: !5283)
!5436 = !DILocation(line: 135, column: 15, scope: !5283)
!5437 = !DILocation(line: 135, column: 28, scope: !5283)
!5438 = !DILocation(line: 135, column: 34, scope: !5283)
!5439 = !DILocation(line: 136, column: 4, scope: !5283)
!5440 = !DILocation(line: 140, column: 4, scope: !5283)
!5441 = !DILocation(line: 140, column: 10, scope: !5283)
!5442 = !DILocation(line: 140, column: 16, scope: !5283)
!5443 = !DILocation(line: 141, column: 4, scope: !5283)
!5444 = !DILocation(line: 141, column: 10, scope: !5283)
!5445 = !DILocation(line: 141, column: 16, scope: !5283)
!5446 = !DILocation(line: 142, column: 46, scope: !5283)
!5447 = !DILocation(line: 142, column: 36, scope: !5283)
!5448 = !DILocation(line: 142, column: 4, scope: !5283)
!5449 = !DILocation(line: 142, column: 10, scope: !5283)
!5450 = !DILocation(line: 142, column: 15, scope: !5283)
!5451 = !DILocation(line: 142, column: 28, scope: !5283)
!5452 = !DILocation(line: 142, column: 34, scope: !5283)
!5453 = !DILocation(line: 143, column: 4, scope: !5283)
!5454 = !DILocation(line: 147, column: 4, scope: !5283)
!5455 = !DILocation(line: 147, column: 10, scope: !5283)
!5456 = !DILocation(line: 147, column: 16, scope: !5283)
!5457 = !DILocation(line: 148, column: 4, scope: !5283)
!5458 = !DILocation(line: 148, column: 10, scope: !5283)
!5459 = !DILocation(line: 148, column: 16, scope: !5283)
!5460 = !DILocation(line: 149, column: 46, scope: !5283)
!5461 = !DILocation(line: 149, column: 36, scope: !5283)
!5462 = !DILocation(line: 149, column: 4, scope: !5283)
!5463 = !DILocation(line: 149, column: 10, scope: !5283)
!5464 = !DILocation(line: 149, column: 15, scope: !5283)
!5465 = !DILocation(line: 149, column: 28, scope: !5283)
!5466 = !DILocation(line: 149, column: 34, scope: !5283)
!5467 = !DILocation(line: 150, column: 4, scope: !5283)
!5468 = !DILocation(line: 154, column: 4, scope: !5283)
!5469 = !DILocation(line: 158, column: 2, scope: !5264)
!5470 = !DILocation(line: 158, column: 8, scope: !5264)
!5471 = !DILocation(line: 158, column: 14, scope: !5264)
!5472 = !DILocation(line: 160, column: 2, scope: !5264)
!5473 = !DILocation(line: 161, column: 1, scope: !5264)
!5474 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !2226, file: !2226, line: 727, type: !2227, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5475 = !DILocalVariable(name: "a", arg: 1, scope: !5474, file: !2226, line: 727, type: !923)
!5476 = !DILocation(line: 727, column: 44, scope: !5474)
!5477 = !DILocalVariable(name: "b", arg: 2, scope: !5474, file: !2226, line: 727, type: !923)
!5478 = !DILocation(line: 727, column: 62, scope: !5474)
!5479 = !DILocalVariable(name: "d", scope: !5474, file: !2226, line: 729, type: !290)
!5480 = !DILocation(line: 729, column: 8, scope: !5474)
!5481 = !DILocation(line: 731, column: 14, scope: !5474)
!5482 = !DILocation(line: 731, column: 17, scope: !5474)
!5483 = !DILocation(line: 731, column: 20, scope: !5474)
!5484 = !DILocation(line: 731, column: 2, scope: !5474)
!5485 = !DILocation(line: 732, column: 18, scope: !5474)
!5486 = !DILocation(line: 732, column: 21, scope: !5474)
!5487 = !DILocation(line: 732, column: 9, scope: !5474)
!5488 = !DILocation(line: 732, column: 2, scope: !5474)
!5489 = distinct !DISubprogram(name: "add_poly", scope: !3, file: !3, line: 951, type: !5490, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{null, !3720, !270, !270, !270, !270}
!5492 = !DILocalVariable(name: "so", arg: 1, scope: !5489, file: !3, line: 951, type: !3720)
!5493 = !DILocation(line: 951, column: 34, scope: !5489)
!5494 = !DILocalVariable(name: "v1", arg: 2, scope: !5489, file: !3, line: 952, type: !270)
!5495 = !DILocation(line: 952, column: 30, scope: !5489)
!5496 = !DILocalVariable(name: "v2", arg: 3, scope: !5489, file: !3, line: 953, type: !270)
!5497 = !DILocation(line: 953, column: 30, scope: !5489)
!5498 = !DILocalVariable(name: "v3", arg: 4, scope: !5489, file: !3, line: 954, type: !270)
!5499 = !DILocation(line: 954, column: 30, scope: !5489)
!5500 = !DILocalVariable(name: "v4", arg: 5, scope: !5489, file: !3, line: 955, type: !270)
!5501 = !DILocation(line: 955, column: 30, scope: !5489)
!5502 = !DILocalVariable(name: "verts", scope: !5489, file: !3, line: 957, type: !1957)
!5503 = !DILocation(line: 957, column: 10, scope: !5489)
!5504 = !DILocation(line: 957, column: 21, scope: !5489)
!5505 = !DILocation(line: 957, column: 22, scope: !5489)
!5506 = !DILocation(line: 957, column: 26, scope: !5489)
!5507 = !DILocation(line: 957, column: 30, scope: !5489)
!5508 = !DILocation(line: 957, column: 34, scope: !5489)
!5509 = !DILocalVariable(name: "f", scope: !5489, file: !3, line: 958, type: !335)
!5510 = !DILocation(line: 958, column: 10, scope: !5489)
!5511 = !DILocation(line: 965, column: 27, scope: !5489)
!5512 = !DILocation(line: 965, column: 31, scope: !5489)
!5513 = !DILocation(line: 965, column: 35, scope: !5489)
!5514 = !DILocation(line: 965, column: 42, scope: !5489)
!5515 = !DILocation(line: 965, column: 6, scope: !5489)
!5516 = !DILocation(line: 965, column: 4, scope: !5489)
!5517 = !DILocation(line: 966, column: 6, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 966, column: 6)
!5519 = !DILocation(line: 966, column: 10, scope: !5518)
!5520 = !DILocation(line: 966, column: 15, scope: !5518)
!5521 = !DILocation(line: 966, column: 20, scope: !5518)
!5522 = !DILocation(line: 966, column: 6, scope: !5489)
!5523 = !DILocation(line: 967, column: 3, scope: !5518)
!5524 = !DILocation(line: 968, column: 14, scope: !5489)
!5525 = !DILocation(line: 968, column: 18, scope: !5489)
!5526 = !DILocation(line: 968, column: 2, scope: !5489)
!5527 = !DILocation(line: 968, column: 5, scope: !5489)
!5528 = !DILocation(line: 968, column: 12, scope: !5489)
!5529 = !DILocation(line: 969, column: 1, scope: !5489)
!5530 = distinct !DISubprogram(name: "skin_hole_detach_partially_attached_frame", scope: !3, file: !3, line: 1311, type: !5531, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{null, !1847, !3245}
!5533 = !DILocalVariable(name: "bm", arg: 1, scope: !5530, file: !3, line: 1311, type: !1847)
!5534 = !DILocation(line: 1311, column: 62, scope: !5530)
!5535 = !DILocalVariable(name: "frame", arg: 2, scope: !5530, file: !3, line: 1311, type: !3245)
!5536 = !DILocation(line: 1311, column: 73, scope: !5530)
!5537 = !DILocalVariable(name: "i", scope: !5530, file: !3, line: 1313, type: !207)
!5538 = !DILocation(line: 1313, column: 6, scope: !5530)
!5539 = !DILocalVariable(name: "attached", scope: !5530, file: !3, line: 1313, type: !887)
!5540 = !DILocation(line: 1313, column: 9, scope: !5530)
!5541 = !DILocalVariable(name: "totattached", scope: !5530, file: !3, line: 1313, type: !207)
!5542 = !DILocation(line: 1313, column: 22, scope: !5530)
!5543 = !DILocation(line: 1316, column: 9, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1316, column: 2)
!5545 = !DILocation(line: 1316, column: 7, scope: !5544)
!5546 = !DILocation(line: 1316, column: 14, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 1316, column: 2)
!5548 = !DILocation(line: 1316, column: 16, scope: !5547)
!5549 = !DILocation(line: 1316, column: 2, scope: !5544)
!5550 = !DILocation(line: 1317, column: 8, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 1317, column: 7)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1316, column: 26)
!5553 = !DILocation(line: 1317, column: 15, scope: !5551)
!5554 = !DILocation(line: 1317, column: 27, scope: !5551)
!5555 = !DILocation(line: 1317, column: 7, scope: !5552)
!5556 = !DILocation(line: 1318, column: 30, scope: !5551)
!5557 = !DILocation(line: 1318, column: 24, scope: !5551)
!5558 = !DILocation(line: 1318, column: 4, scope: !5551)
!5559 = !DILocation(line: 1318, column: 28, scope: !5551)
!5560 = !DILocation(line: 1319, column: 2, scope: !5552)
!5561 = !DILocation(line: 1316, column: 22, scope: !5547)
!5562 = !DILocation(line: 1316, column: 2, scope: !5547)
!5563 = distinct !{!5563, !5549, !5564}
!5564 = !DILocation(line: 1319, column: 2, scope: !5544)
!5565 = !DILocation(line: 1322, column: 9, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1322, column: 2)
!5567 = !DILocation(line: 1322, column: 7, scope: !5566)
!5568 = !DILocation(line: 1322, column: 14, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1322, column: 2)
!5570 = !DILocation(line: 1322, column: 18, scope: !5569)
!5571 = !DILocation(line: 1322, column: 16, scope: !5569)
!5572 = !DILocation(line: 1322, column: 2, scope: !5566)
!5573 = !DILocalVariable(name: "av", scope: !5574, file: !3, line: 1323, type: !1865)
!5574 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1322, column: 36)
!5575 = !DILocation(line: 1323, column: 12, scope: !5574)
!5576 = !DILocation(line: 1323, column: 18, scope: !5574)
!5577 = !DILocation(line: 1323, column: 25, scope: !5574)
!5578 = !DILocation(line: 1323, column: 40, scope: !5574)
!5579 = !DILocation(line: 1323, column: 31, scope: !5574)
!5580 = !DILocation(line: 1324, column: 26, scope: !5574)
!5581 = !DILocation(line: 1324, column: 32, scope: !5574)
!5582 = !DILocation(line: 1324, column: 31, scope: !5574)
!5583 = !DILocation(line: 1324, column: 37, scope: !5574)
!5584 = !DILocation(line: 1324, column: 30, scope: !5574)
!5585 = !DILocation(line: 1324, column: 42, scope: !5574)
!5586 = !DILocation(line: 1324, column: 41, scope: !5574)
!5587 = !DILocation(line: 1324, column: 11, scope: !5574)
!5588 = !DILocation(line: 1324, column: 5, scope: !5574)
!5589 = !DILocation(line: 1324, column: 9, scope: !5574)
!5590 = !DILocation(line: 1325, column: 2, scope: !5574)
!5591 = !DILocation(line: 1322, column: 32, scope: !5569)
!5592 = !DILocation(line: 1322, column: 2, scope: !5569)
!5593 = distinct !{!5593, !5572, !5594}
!5594 = !DILocation(line: 1325, column: 2, scope: !5566)
!5595 = !DILocation(line: 1326, column: 1, scope: !5530)
!5596 = distinct !DISubprogram(name: "skin_hole_target_face", scope: !3, file: !3, line: 1141, type: !5597, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!335, !1847, !3245}
!5599 = !DILocalVariable(name: "bm", arg: 1, scope: !5596, file: !3, line: 1141, type: !1847)
!5600 = !DILocation(line: 1141, column: 45, scope: !5596)
!5601 = !DILocalVariable(name: "frame", arg: 2, scope: !5596, file: !3, line: 1141, type: !3245)
!5602 = !DILocation(line: 1141, column: 56, scope: !5596)
!5603 = !DILocalVariable(name: "f", scope: !5596, file: !3, line: 1143, type: !335)
!5604 = !DILocation(line: 1143, column: 10, scope: !5596)
!5605 = !DILocalVariable(name: "isect_target_face", scope: !5596, file: !3, line: 1143, type: !335)
!5606 = !DILocation(line: 1143, column: 14, scope: !5596)
!5607 = !DILocalVariable(name: "center_target_face", scope: !5596, file: !3, line: 1143, type: !335)
!5608 = !DILocation(line: 1143, column: 34, scope: !5596)
!5609 = !DILocalVariable(name: "iter", scope: !5596, file: !3, line: 1144, type: !3791)
!5610 = !DILocation(line: 1144, column: 9, scope: !5596)
!5611 = !DILocalVariable(name: "frame_center", scope: !5596, file: !3, line: 1145, type: !290)
!5612 = !DILocation(line: 1145, column: 8, scope: !5596)
!5613 = !DILocalVariable(name: "frame_normal", scope: !5596, file: !3, line: 1146, type: !290)
!5614 = !DILocation(line: 1146, column: 8, scope: !5596)
!5615 = !DILocalVariable(name: "best_isect_dist", scope: !5596, file: !3, line: 1147, type: !250)
!5616 = !DILocation(line: 1147, column: 8, scope: !5596)
!5617 = !DILocalVariable(name: "best_center_dist", scope: !5596, file: !3, line: 1148, type: !250)
!5618 = !DILocation(line: 1148, column: 8, scope: !5596)
!5619 = !DILocation(line: 1150, column: 20, scope: !5596)
!5620 = !DILocation(line: 1150, column: 34, scope: !5596)
!5621 = !DILocation(line: 1150, column: 2, scope: !5596)
!5622 = !DILocation(line: 1151, column: 17, scope: !5596)
!5623 = !DILocation(line: 1151, column: 31, scope: !5596)
!5624 = !DILocation(line: 1151, column: 38, scope: !5596)
!5625 = !DILocation(line: 1151, column: 48, scope: !5596)
!5626 = !DILocation(line: 1152, column: 17, scope: !5596)
!5627 = !DILocation(line: 1152, column: 24, scope: !5596)
!5628 = !DILocation(line: 1152, column: 34, scope: !5596)
!5629 = !DILocation(line: 1152, column: 38, scope: !5596)
!5630 = !DILocation(line: 1152, column: 45, scope: !5596)
!5631 = !DILocation(line: 1152, column: 55, scope: !5596)
!5632 = !DILocation(line: 1153, column: 17, scope: !5596)
!5633 = !DILocation(line: 1153, column: 24, scope: !5596)
!5634 = !DILocation(line: 1153, column: 34, scope: !5596)
!5635 = !DILocation(line: 1151, column: 2, scope: !5596)
!5636 = !DILocation(line: 1157, column: 41, scope: !5596)
!5637 = !DILocation(line: 1157, column: 20, scope: !5596)
!5638 = !DILocation(line: 1158, column: 2, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1158, column: 2)
!5640 = !DILocation(line: 1158, column: 2, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1158, column: 2)
!5642 = !DILocalVariable(name: "dist", scope: !5643, file: !3, line: 1159, type: !250)
!5643 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1158, column: 48)
!5644 = !DILocation(line: 1159, column: 9, scope: !5643)
!5645 = !DILocalVariable(name: "poly_center", scope: !5643, file: !3, line: 1159, type: !290)
!5646 = !DILocation(line: 1159, column: 15, scope: !5643)
!5647 = !DILocalVariable(name: "hit", scope: !5643, file: !3, line: 1160, type: !207)
!5648 = !DILocation(line: 1160, column: 7, scope: !5643)
!5649 = !DILocation(line: 1163, column: 24, scope: !5643)
!5650 = !DILocation(line: 1163, column: 38, scope: !5643)
!5651 = !DILocation(line: 1163, column: 52, scope: !5643)
!5652 = !DILocation(line: 1163, column: 9, scope: !5643)
!5653 = !DILocation(line: 1163, column: 7, scope: !5643)
!5654 = !DILocation(line: 1164, column: 7, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1164, column: 7)
!5656 = !DILocation(line: 1164, column: 11, scope: !5655)
!5657 = !DILocation(line: 1164, column: 14, scope: !5655)
!5658 = !DILocation(line: 1164, column: 21, scope: !5655)
!5659 = !DILocation(line: 1164, column: 19, scope: !5655)
!5660 = !DILocation(line: 1164, column: 7, scope: !5643)
!5661 = !DILocation(line: 1165, column: 24, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1164, column: 38)
!5663 = !DILocation(line: 1165, column: 22, scope: !5662)
!5664 = !DILocation(line: 1166, column: 22, scope: !5662)
!5665 = !DILocation(line: 1166, column: 20, scope: !5662)
!5666 = !DILocation(line: 1167, column: 3, scope: !5662)
!5667 = !DILocation(line: 1170, column: 28, scope: !5643)
!5668 = !DILocation(line: 1170, column: 31, scope: !5643)
!5669 = !DILocation(line: 1170, column: 3, scope: !5643)
!5670 = !DILocation(line: 1171, column: 19, scope: !5643)
!5671 = !DILocation(line: 1171, column: 33, scope: !5643)
!5672 = !DILocation(line: 1171, column: 10, scope: !5643)
!5673 = !DILocation(line: 1171, column: 8, scope: !5643)
!5674 = !DILocation(line: 1172, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1172, column: 7)
!5676 = !DILocation(line: 1172, column: 14, scope: !5675)
!5677 = !DILocation(line: 1172, column: 12, scope: !5675)
!5678 = !DILocation(line: 1172, column: 7, scope: !5643)
!5679 = !DILocation(line: 1173, column: 25, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1172, column: 32)
!5681 = !DILocation(line: 1173, column: 23, scope: !5680)
!5682 = !DILocation(line: 1174, column: 23, scope: !5680)
!5683 = !DILocation(line: 1174, column: 21, scope: !5680)
!5684 = !DILocation(line: 1175, column: 3, scope: !5680)
!5685 = !DILocation(line: 1176, column: 2, scope: !5643)
!5686 = distinct !{!5686, !5638, !5687}
!5687 = !DILocation(line: 1176, column: 2, scope: !5639)
!5688 = !DILocation(line: 1178, column: 6, scope: !5596)
!5689 = !DILocation(line: 1178, column: 4, scope: !5596)
!5690 = !DILocation(line: 1179, column: 7, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1179, column: 6)
!5692 = !DILocation(line: 1179, column: 9, scope: !5691)
!5693 = !DILocation(line: 1179, column: 12, scope: !5691)
!5694 = !DILocation(line: 1179, column: 31, scope: !5691)
!5695 = !DILocation(line: 1179, column: 47, scope: !5691)
!5696 = !DILocation(line: 1179, column: 29, scope: !5691)
!5697 = !DILocation(line: 1179, column: 6, scope: !5596)
!5698 = !DILocation(line: 1180, column: 7, scope: !5691)
!5699 = !DILocation(line: 1180, column: 5, scope: !5691)
!5700 = !DILocation(line: 1180, column: 3, scope: !5691)
!5701 = !DILocation(line: 1190, column: 9, scope: !5596)
!5702 = !DILocation(line: 1190, column: 2, scope: !5596)
!5703 = distinct !DISubprogram(name: "skin_fix_hole_no_good_verts", scope: !3, file: !3, line: 1224, type: !5704, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5704 = !DISubroutineType(types: !5705)
!5705 = !{null, !1847, !3245, !335}
!5706 = !DILocalVariable(name: "bm", arg: 1, scope: !5703, file: !3, line: 1224, type: !1847)
!5707 = !DILocation(line: 1224, column: 48, scope: !5703)
!5708 = !DILocalVariable(name: "frame", arg: 2, scope: !5703, file: !3, line: 1224, type: !3245)
!5709 = !DILocation(line: 1224, column: 59, scope: !5703)
!5710 = !DILocalVariable(name: "split_face", arg: 3, scope: !5703, file: !3, line: 1224, type: !335)
!5711 = !DILocation(line: 1224, column: 74, scope: !5703)
!5712 = !DILocalVariable(name: "f", scope: !5703, file: !3, line: 1226, type: !335)
!5713 = !DILocation(line: 1226, column: 10, scope: !5703)
!5714 = !DILocalVariable(name: "verts", scope: !5703, file: !3, line: 1227, type: !1957)
!5715 = !DILocation(line: 1227, column: 10, scope: !5703)
!5716 = !DILocalVariable(name: "vert_buf", scope: !5703, file: !3, line: 1228, type: !1865)
!5717 = !DILocation(line: 1228, column: 11, scope: !5703)
!5718 = !DILocalVariable(name: "_vert_buf_count", scope: !5703, file: !3, line: 1229, type: !207)
!5719 = !DILocation(line: 1229, column: 2, scope: !5703)
!5720 = !DILocalVariable(name: "_vert_buf_static", scope: !5703, file: !3, line: 1229, type: !260)
!5721 = !DILocalVariable(name: "oiter", scope: !5703, file: !3, line: 1230, type: !5722)
!5722 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOIter", file: !110, line: 463, baseType: !5723)
!5723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOIter", file: !110, line: 457, size: 448, elements: !5724)
!5724 = !{!5725, !5728, !5729, !5738, !5739}
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5723, file: !110, line: 458, baseType: !5726, size: 64)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpSlot", file: !110, line: 163, baseType: !1883)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !5723, file: !110, line: 459, baseType: !207, size: 32, offset: 64)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "giter", scope: !5723, file: !110, line: 460, baseType: !5730, size: 192, offset: 128)
!5730 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !1910, line: 54, baseType: !5731)
!5731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !1910, line: 50, size: 192, elements: !5732)
!5732 = !{!5733, !5734, !5737}
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !5731, file: !1910, line: 51, baseType: !1908, size: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !5731, file: !1910, line: 52, baseType: !5735, size: 64, offset: 64)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !1910, line: 52, flags: DIFlagFwdDecl)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !5731, file: !1910, line: 53, baseType: !7, size: 32, offset: 128)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5723, file: !110, line: 461, baseType: !340, size: 64, offset: 320)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "restrictmask", scope: !5723, file: !110, line: 462, baseType: !240, size: 8, offset: 384)
!5740 = !DILocation(line: 1230, column: 10, scope: !5703)
!5741 = !DILocalVariable(name: "op", scope: !5703, file: !3, line: 1231, type: !5742)
!5742 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOperator", file: !110, line: 198, baseType: !1879)
!5743 = !DILocation(line: 1231, column: 13, scope: !5703)
!5744 = !DILocalVariable(name: "i", scope: !5703, file: !3, line: 1232, type: !207)
!5745 = !DILocation(line: 1232, column: 6, scope: !5703)
!5746 = !DILocalVariable(name: "best_order", scope: !5703, file: !3, line: 1232, type: !887)
!5747 = !DILocation(line: 1232, column: 9, scope: !5703)
!5748 = !DILocalVariable(name: "slot_targetmap", scope: !5703, file: !3, line: 1233, type: !5726)
!5749 = !DILocation(line: 1233, column: 12, scope: !5703)
!5750 = !DILocation(line: 1238, column: 33, scope: !5703)
!5751 = !DILocation(line: 1238, column: 2, scope: !5703)
!5752 = !DILocation(line: 1239, column: 2, scope: !5703)
!5753 = !DILocation(line: 1240, column: 15, scope: !5703)
!5754 = !DILocation(line: 1240, column: 2, scope: !5703)
!5755 = !DILocation(line: 1242, column: 14, scope: !5703)
!5756 = !DILocation(line: 1242, column: 2, scope: !5703)
!5757 = !DILocation(line: 1246, column: 13, scope: !5703)
!5758 = !DILocation(line: 1247, column: 2, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1247, column: 2)
!5760 = !DILocation(line: 1247, column: 2, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1247, column: 2)
!5762 = !DILocation(line: 1249, column: 16, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1247, column: 59)
!5764 = !DILocation(line: 1249, column: 14, scope: !5763)
!5765 = !DILocation(line: 1250, column: 2, scope: !5763)
!5766 = distinct !{!5766, !5758, !5767}
!5767 = !DILocation(line: 1250, column: 2, scope: !5759)
!5768 = !DILocation(line: 1252, column: 16, scope: !5703)
!5769 = !DILocation(line: 1252, column: 2, scope: !5703)
!5770 = !DILocation(line: 1254, column: 6, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1254, column: 6)
!5772 = !DILocation(line: 1254, column: 18, scope: !5771)
!5773 = !DILocation(line: 1254, column: 22, scope: !5771)
!5774 = !DILocation(line: 1254, column: 6, scope: !5703)
!5775 = !DILocalVariable(name: "longest_edge", scope: !5776, file: !3, line: 1255, type: !333)
!5776 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1254, column: 28)
!5777 = !DILocation(line: 1255, column: 11, scope: !5776)
!5778 = !DILocation(line: 1259, column: 44, scope: !5776)
!5779 = !DILocation(line: 1259, column: 18, scope: !5776)
!5780 = !DILocation(line: 1259, column: 57, scope: !5776)
!5781 = !DILocation(line: 1259, column: 16, scope: !5776)
!5782 = !DILocation(line: 1261, column: 34, scope: !5776)
!5783 = !DILocation(line: 1261, column: 3, scope: !5776)
!5784 = !DILocation(line: 1262, column: 3, scope: !5776)
!5785 = !DILocation(line: 1264, column: 16, scope: !5776)
!5786 = !DILocation(line: 1264, column: 3, scope: !5776)
!5787 = !DILocation(line: 1267, column: 2, scope: !5776)
!5788 = !DILocation(line: 1268, column: 11, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1268, column: 11)
!5790 = !DILocation(line: 1268, column: 23, scope: !5789)
!5791 = !DILocation(line: 1268, column: 27, scope: !5789)
!5792 = !DILocation(line: 1268, column: 11, scope: !5771)
!5793 = !DILocation(line: 1271, column: 7, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1271, column: 7)
!5795 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 1268, column: 32)
!5796 = !DILocation(line: 1271, column: 35, scope: !5794)
!5797 = !DILocation(line: 1271, column: 47, scope: !5794)
!5798 = !DILocation(line: 1271, column: 33, scope: !5794)
!5799 = !DILocation(line: 1271, column: 7, scope: !5795)
!5800 = !DILocation(line: 1272, column: 4, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1271, column: 52)
!5802 = !DILocation(line: 1274, column: 3, scope: !5801)
!5803 = !DILocation(line: 1277, column: 20, scope: !5795)
!5804 = !DILocation(line: 1277, column: 42, scope: !5795)
!5805 = !DILocation(line: 1278, column: 29, scope: !5795)
!5806 = !DILocation(line: 1278, column: 20, scope: !5795)
!5807 = !DILocation(line: 1278, column: 39, scope: !5795)
!5808 = !DILocation(line: 1278, column: 51, scope: !5795)
!5809 = !DILocation(line: 1277, column: 3, scope: !5795)
!5810 = !DILocation(line: 1282, column: 38, scope: !5795)
!5811 = !DILocation(line: 1282, column: 42, scope: !5795)
!5812 = !DILocation(line: 1282, column: 57, scope: !5795)
!5813 = !DILocation(line: 1282, column: 16, scope: !5795)
!5814 = !DILocation(line: 1282, column: 14, scope: !5795)
!5815 = !DILocation(line: 1283, column: 2, scope: !5795)
!5816 = !DILocation(line: 1286, column: 2, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1286, column: 2)
!5818 = !DILocation(line: 1286, column: 2, scope: !5703)
!5819 = !DILocation(line: 1286, column: 2, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1286, column: 2)
!5821 = !DILocation(line: 1288, column: 6, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1288, column: 6)
!5823 = !DILocation(line: 1288, column: 18, scope: !5822)
!5824 = !DILocation(line: 1288, column: 22, scope: !5822)
!5825 = !DILocation(line: 1288, column: 6, scope: !5703)
!5826 = !DILocation(line: 1289, column: 3, scope: !5822)
!5827 = !DILocation(line: 1293, column: 29, scope: !5703)
!5828 = !DILocation(line: 1293, column: 41, scope: !5703)
!5829 = !DILocation(line: 1293, column: 2, scope: !5703)
!5830 = !DILocation(line: 1294, column: 32, scope: !5703)
!5831 = !DILocation(line: 1294, column: 39, scope: !5703)
!5832 = !DILocation(line: 1294, column: 46, scope: !5703)
!5833 = !DILocation(line: 1294, column: 53, scope: !5703)
!5834 = !DILocation(line: 1294, column: 2, scope: !5703)
!5835 = !DILocation(line: 1297, column: 15, scope: !5703)
!5836 = !DILocation(line: 1297, column: 19, scope: !5703)
!5837 = !DILocation(line: 1297, column: 2, scope: !5703)
!5838 = !DILocation(line: 1298, column: 14, scope: !5703)
!5839 = !DILocation(line: 1298, column: 2, scope: !5703)
!5840 = !DILocation(line: 1300, column: 35, scope: !5703)
!5841 = !DILocation(line: 1300, column: 32, scope: !5703)
!5842 = !DILocation(line: 1300, column: 19, scope: !5703)
!5843 = !DILocation(line: 1300, column: 17, scope: !5703)
!5844 = !DILocation(line: 1301, column: 9, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1301, column: 2)
!5846 = !DILocation(line: 1301, column: 7, scope: !5845)
!5847 = !DILocation(line: 1301, column: 14, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1301, column: 2)
!5849 = !DILocation(line: 1301, column: 16, scope: !5848)
!5850 = !DILocation(line: 1301, column: 2, scope: !5845)
!5851 = !DILocation(line: 1302, column: 33, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 1301, column: 26)
!5853 = !DILocation(line: 1302, column: 55, scope: !5852)
!5854 = !DILocation(line: 1302, column: 49, scope: !5852)
!5855 = !DILocation(line: 1302, column: 59, scope: !5852)
!5856 = !DILocation(line: 1302, column: 66, scope: !5852)
!5857 = !DILocation(line: 1302, column: 83, scope: !5852)
!5858 = !DILocation(line: 1302, column: 72, scope: !5852)
!5859 = !DILocation(line: 1302, column: 3, scope: !5852)
!5860 = !DILocation(line: 1303, column: 2, scope: !5852)
!5861 = !DILocation(line: 1301, column: 22, scope: !5848)
!5862 = !DILocation(line: 1301, column: 2, scope: !5848)
!5863 = distinct !{!5863, !5850, !5864}
!5864 = !DILocation(line: 1303, column: 2, scope: !5845)
!5865 = !DILocation(line: 1304, column: 14, scope: !5703)
!5866 = !DILocation(line: 1304, column: 2, scope: !5703)
!5867 = !DILocation(line: 1305, column: 16, scope: !5703)
!5868 = !DILocation(line: 1305, column: 2, scope: !5703)
!5869 = !DILocation(line: 1306, column: 1, scope: !5703)
!5870 = distinct !DISubprogram(name: "calc_frame_center", scope: !3, file: !3, line: 1027, type: !5871, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5871 = !DISubroutineType(types: !5872)
!5872 = !{null, !949, !4810}
!5873 = !DILocalVariable(name: "center", arg: 1, scope: !5870, file: !3, line: 1027, type: !949)
!5874 = !DILocation(line: 1027, column: 37, scope: !5870)
!5875 = !DILocalVariable(name: "frame", arg: 2, scope: !5870, file: !3, line: 1027, type: !4810)
!5876 = !DILocation(line: 1027, column: 61, scope: !5870)
!5877 = !DILocation(line: 1029, column: 14, scope: !5870)
!5878 = !DILocation(line: 1029, column: 22, scope: !5870)
!5879 = !DILocation(line: 1029, column: 29, scope: !5870)
!5880 = !DILocation(line: 1029, column: 39, scope: !5870)
!5881 = !DILocation(line: 1029, column: 43, scope: !5870)
!5882 = !DILocation(line: 1029, column: 50, scope: !5870)
!5883 = !DILocation(line: 1029, column: 60, scope: !5870)
!5884 = !DILocation(line: 1029, column: 2, scope: !5870)
!5885 = !DILocation(line: 1030, column: 12, scope: !5870)
!5886 = !DILocation(line: 1030, column: 20, scope: !5870)
!5887 = !DILocation(line: 1030, column: 27, scope: !5870)
!5888 = !DILocation(line: 1030, column: 37, scope: !5870)
!5889 = !DILocation(line: 1030, column: 2, scope: !5870)
!5890 = !DILocation(line: 1031, column: 12, scope: !5870)
!5891 = !DILocation(line: 1031, column: 20, scope: !5870)
!5892 = !DILocation(line: 1031, column: 27, scope: !5870)
!5893 = !DILocation(line: 1031, column: 37, scope: !5870)
!5894 = !DILocation(line: 1031, column: 2, scope: !5870)
!5895 = !DILocation(line: 1032, column: 12, scope: !5870)
!5896 = !DILocation(line: 1032, column: 2, scope: !5870)
!5897 = !DILocation(line: 1033, column: 1, scope: !5870)
!5898 = distinct !DISubprogram(name: "isect_ray_poly", scope: !3, file: !3, line: 1037, type: !5899, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{!207, !923, !923, !335, !949}
!5901 = !DILocalVariable(name: "ray_start", arg: 1, scope: !5898, file: !3, line: 1037, type: !923)
!5902 = !DILocation(line: 1037, column: 39, scope: !5898)
!5903 = !DILocalVariable(name: "ray_dir", arg: 2, scope: !5898, file: !3, line: 1038, type: !923)
!5904 = !DILocation(line: 1038, column: 39, scope: !5898)
!5905 = !DILocalVariable(name: "f", arg: 3, scope: !5898, file: !3, line: 1039, type: !335)
!5906 = !DILocation(line: 1039, column: 35, scope: !5898)
!5907 = !DILocalVariable(name: "r_lambda", arg: 4, scope: !5898, file: !3, line: 1040, type: !949)
!5908 = !DILocation(line: 1040, column: 34, scope: !5898)
!5909 = !DILocalVariable(name: "v", scope: !5898, file: !3, line: 1042, type: !270)
!5910 = !DILocation(line: 1042, column: 10, scope: !5898)
!5911 = !DILocalVariable(name: "v_first", scope: !5898, file: !3, line: 1042, type: !270)
!5912 = !DILocation(line: 1042, column: 14, scope: !5898)
!5913 = !DILocalVariable(name: "v_prev", scope: !5898, file: !3, line: 1042, type: !270)
!5914 = !DILocation(line: 1042, column: 31, scope: !5898)
!5915 = !DILocalVariable(name: "iter", scope: !5898, file: !3, line: 1043, type: !3791)
!5916 = !DILocation(line: 1043, column: 9, scope: !5898)
!5917 = !DILocalVariable(name: "best_dist", scope: !5898, file: !3, line: 1044, type: !250)
!5918 = !DILocation(line: 1044, column: 8, scope: !5898)
!5919 = !DILocalVariable(name: "hit", scope: !5898, file: !3, line: 1045, type: !984)
!5920 = !DILocation(line: 1045, column: 7, scope: !5898)
!5921 = !DILocation(line: 1047, column: 2, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1047, column: 2)
!5923 = !DILocation(line: 1047, column: 2, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1047, column: 2)
!5925 = !DILocation(line: 1048, column: 8, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1048, column: 7)
!5927 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1047, column: 47)
!5928 = !DILocation(line: 1048, column: 7, scope: !5927)
!5929 = !DILocation(line: 1049, column: 14, scope: !5926)
!5930 = !DILocation(line: 1049, column: 12, scope: !5926)
!5931 = !DILocation(line: 1049, column: 4, scope: !5926)
!5932 = !DILocation(line: 1050, column: 12, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 1050, column: 12)
!5934 = !DILocation(line: 1050, column: 22, scope: !5933)
!5935 = !DILocation(line: 1050, column: 19, scope: !5933)
!5936 = !DILocation(line: 1050, column: 12, scope: !5926)
!5937 = !DILocalVariable(name: "dist", scope: !5938, file: !3, line: 1051, type: !250)
!5938 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 1050, column: 31)
!5939 = !DILocation(line: 1051, column: 10, scope: !5938)
!5940 = !DILocalVariable(name: "curhit", scope: !5938, file: !3, line: 1052, type: !984)
!5941 = !DILocation(line: 1052, column: 9, scope: !5938)
!5942 = !DILocation(line: 1054, column: 30, scope: !5938)
!5943 = !DILocation(line: 1054, column: 41, scope: !5938)
!5944 = !DILocation(line: 1055, column: 30, scope: !5938)
!5945 = !DILocation(line: 1055, column: 39, scope: !5938)
!5946 = !DILocation(line: 1055, column: 43, scope: !5938)
!5947 = !DILocation(line: 1055, column: 51, scope: !5938)
!5948 = !DILocation(line: 1055, column: 55, scope: !5938)
!5949 = !DILocation(line: 1055, column: 58, scope: !5938)
!5950 = !DILocation(line: 1054, column: 13, scope: !5938)
!5951 = !DILocation(line: 1054, column: 11, scope: !5938)
!5952 = !DILocation(line: 1057, column: 8, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 1057, column: 8)
!5954 = !DILocation(line: 1057, column: 15, scope: !5953)
!5955 = !DILocation(line: 1057, column: 18, scope: !5953)
!5956 = !DILocation(line: 1057, column: 25, scope: !5953)
!5957 = !DILocation(line: 1057, column: 23, scope: !5953)
!5958 = !DILocation(line: 1057, column: 8, scope: !5938)
!5959 = !DILocation(line: 1058, column: 9, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 1057, column: 36)
!5961 = !DILocation(line: 1059, column: 17, scope: !5960)
!5962 = !DILocation(line: 1059, column: 15, scope: !5960)
!5963 = !DILocation(line: 1060, column: 4, scope: !5960)
!5964 = !DILocation(line: 1061, column: 3, scope: !5938)
!5965 = !DILocation(line: 1063, column: 12, scope: !5927)
!5966 = !DILocation(line: 1063, column: 10, scope: !5927)
!5967 = !DILocation(line: 1064, column: 2, scope: !5927)
!5968 = distinct !{!5968, !5921, !5969}
!5969 = !DILocation(line: 1064, column: 2, scope: !5922)
!5970 = !DILocation(line: 1066, column: 14, scope: !5898)
!5971 = !DILocation(line: 1066, column: 3, scope: !5898)
!5972 = !DILocation(line: 1066, column: 12, scope: !5898)
!5973 = !DILocation(line: 1067, column: 9, scope: !5898)
!5974 = !DILocation(line: 1067, column: 2, scope: !5898)
!5975 = distinct !DISubprogram(name: "add_v3_v3", scope: !2226, file: !2226, line: 302, type: !3482, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5976 = !DILocalVariable(name: "r", arg: 1, scope: !5975, file: !2226, line: 302, type: !949)
!5977 = !DILocation(line: 302, column: 30, scope: !5975)
!5978 = !DILocalVariable(name: "a", arg: 2, scope: !5975, file: !2226, line: 302, type: !923)
!5979 = !DILocation(line: 302, column: 48, scope: !5975)
!5980 = !DILocation(line: 304, column: 10, scope: !5975)
!5981 = !DILocation(line: 304, column: 2, scope: !5975)
!5982 = !DILocation(line: 304, column: 7, scope: !5975)
!5983 = !DILocation(line: 305, column: 10, scope: !5975)
!5984 = !DILocation(line: 305, column: 2, scope: !5975)
!5985 = !DILocation(line: 305, column: 7, scope: !5975)
!5986 = !DILocation(line: 306, column: 10, scope: !5975)
!5987 = !DILocation(line: 306, column: 2, scope: !5975)
!5988 = !DILocation(line: 306, column: 7, scope: !5975)
!5989 = !DILocation(line: 307, column: 1, scope: !5975)
!5990 = distinct !DISubprogram(name: "mul_v3_fl", scope: !2226, file: !2226, line: 392, type: !5991, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{null, !949, !250}
!5993 = !DILocalVariable(name: "r", arg: 1, scope: !5990, file: !2226, line: 392, type: !949)
!5994 = !DILocation(line: 392, column: 30, scope: !5990)
!5995 = !DILocalVariable(name: "f", arg: 2, scope: !5990, file: !2226, line: 392, type: !250)
!5996 = !DILocation(line: 392, column: 42, scope: !5990)
!5997 = !DILocation(line: 394, column: 10, scope: !5990)
!5998 = !DILocation(line: 394, column: 2, scope: !5990)
!5999 = !DILocation(line: 394, column: 7, scope: !5990)
!6000 = !DILocation(line: 395, column: 10, scope: !5990)
!6001 = !DILocation(line: 395, column: 2, scope: !5990)
!6002 = !DILocation(line: 395, column: 7, scope: !5990)
!6003 = !DILocation(line: 396, column: 10, scope: !5990)
!6004 = !DILocation(line: 396, column: 2, scope: !5990)
!6005 = !DILocation(line: 396, column: 7, scope: !5990)
!6006 = !DILocation(line: 397, column: 1, scope: !5990)
!6007 = distinct !DISubprogram(name: "collapse_face_corners", scope: !3, file: !3, line: 1075, type: !6008, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!335, !1847, !335, !207, !1865}
!6010 = !DILocalVariable(name: "bm", arg: 1, scope: !6007, file: !3, line: 1075, type: !1847)
!6011 = !DILocation(line: 1075, column: 45, scope: !6007)
!6012 = !DILocalVariable(name: "f", arg: 2, scope: !6007, file: !3, line: 1075, type: !335)
!6013 = !DILocation(line: 1075, column: 57, scope: !6007)
!6014 = !DILocalVariable(name: "n", arg: 3, scope: !6007, file: !3, line: 1075, type: !207)
!6015 = !DILocation(line: 1075, column: 64, scope: !6007)
!6016 = !DILocalVariable(name: "orig_verts", arg: 4, scope: !6007, file: !3, line: 1076, type: !1865)
!6017 = !DILocation(line: 1076, column: 47, scope: !6007)
!6018 = !DILocalVariable(name: "orig_len", scope: !6007, file: !3, line: 1078, type: !207)
!6019 = !DILocation(line: 1078, column: 6, scope: !6007)
!6020 = !DILocation(line: 1078, column: 17, scope: !6007)
!6021 = !DILocation(line: 1078, column: 20, scope: !6007)
!6022 = !DILocation(line: 1082, column: 6, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1082, column: 6)
!6024 = !DILocation(line: 1082, column: 9, scope: !6023)
!6025 = !DILocation(line: 1082, column: 16, scope: !6023)
!6026 = !DILocation(line: 1082, column: 13, scope: !6023)
!6027 = !DILocation(line: 1082, column: 6, scope: !6007)
!6028 = !DILocation(line: 1083, column: 10, scope: !6023)
!6029 = !DILocation(line: 1083, column: 3, scope: !6023)
!6030 = !DILocation(line: 1086, column: 2, scope: !6007)
!6031 = !DILocation(line: 1086, column: 9, scope: !6007)
!6032 = !DILocation(line: 1086, column: 12, scope: !6007)
!6033 = !DILocation(line: 1086, column: 18, scope: !6007)
!6034 = !DILocation(line: 1086, column: 16, scope: !6007)
!6035 = !DILocalVariable(name: "vf", scope: !6036, file: !3, line: 1087, type: !335)
!6036 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1086, column: 21)
!6037 = !DILocation(line: 1087, column: 11, scope: !6036)
!6038 = !DILocalVariable(name: "shortest_edge", scope: !6036, file: !3, line: 1088, type: !333)
!6039 = !DILocation(line: 1088, column: 11, scope: !6036)
!6040 = !DILocalVariable(name: "v_safe", scope: !6036, file: !3, line: 1089, type: !270)
!6041 = !DILocation(line: 1089, column: 11, scope: !6036)
!6042 = !DILocalVariable(name: "v_merge", scope: !6036, file: !3, line: 1089, type: !270)
!6043 = !DILocation(line: 1089, column: 20, scope: !6036)
!6044 = !DILocalVariable(name: "op", scope: !6036, file: !3, line: 1090, type: !5742)
!6045 = !DILocation(line: 1090, column: 14, scope: !6036)
!6046 = !DILocalVariable(name: "iter", scope: !6036, file: !3, line: 1091, type: !3791)
!6047 = !DILocation(line: 1091, column: 10, scope: !6036)
!6048 = !DILocalVariable(name: "i", scope: !6036, file: !3, line: 1092, type: !207)
!6049 = !DILocation(line: 1092, column: 7, scope: !6036)
!6050 = !DILocalVariable(name: "slot_targetmap", scope: !6036, file: !3, line: 1093, type: !5726)
!6051 = !DILocation(line: 1093, column: 13, scope: !6036)
!6052 = !DILocation(line: 1095, column: 46, scope: !6036)
!6053 = !DILocation(line: 1095, column: 19, scope: !6036)
!6054 = !DILocation(line: 1095, column: 50, scope: !6036)
!6055 = !DILocation(line: 1095, column: 17, scope: !6036)
!6056 = !DILocation(line: 1096, column: 16, scope: !6036)
!6057 = !DILocation(line: 1096, column: 3, scope: !6036)
!6058 = !DILocation(line: 1098, column: 36, scope: !6036)
!6059 = !DILocation(line: 1098, column: 33, scope: !6036)
!6060 = !DILocation(line: 1098, column: 20, scope: !6036)
!6061 = !DILocation(line: 1098, column: 18, scope: !6036)
!6062 = !DILocation(line: 1103, column: 12, scope: !6036)
!6063 = !DILocation(line: 1103, column: 27, scope: !6036)
!6064 = !DILocation(line: 1103, column: 10, scope: !6036)
!6065 = !DILocation(line: 1104, column: 13, scope: !6036)
!6066 = !DILocation(line: 1104, column: 28, scope: !6036)
!6067 = !DILocation(line: 1104, column: 11, scope: !6036)
!6068 = !DILocation(line: 1105, column: 15, scope: !6036)
!6069 = !DILocation(line: 1105, column: 23, scope: !6036)
!6070 = !DILocation(line: 1105, column: 27, scope: !6036)
!6071 = !DILocation(line: 1105, column: 35, scope: !6036)
!6072 = !DILocation(line: 1105, column: 39, scope: !6036)
!6073 = !DILocation(line: 1105, column: 48, scope: !6036)
!6074 = !DILocation(line: 1105, column: 3, scope: !6036)
!6075 = !DILocation(line: 1106, column: 33, scope: !6036)
!6076 = !DILocation(line: 1106, column: 49, scope: !6036)
!6077 = !DILocation(line: 1106, column: 58, scope: !6036)
!6078 = !DILocation(line: 1106, column: 3, scope: !6036)
!6079 = !DILocation(line: 1107, column: 15, scope: !6036)
!6080 = !DILocation(line: 1107, column: 3, scope: !6036)
!6081 = !DILocation(line: 1108, column: 17, scope: !6036)
!6082 = !DILocation(line: 1108, column: 3, scope: !6036)
!6083 = !DILocation(line: 1111, column: 5, scope: !6036)
!6084 = !DILocation(line: 1112, column: 3, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1112, column: 3)
!6086 = !DILocation(line: 1112, column: 3, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 1112, column: 3)
!6088 = !DILocalVariable(name: "wrong_face", scope: !6089, file: !3, line: 1113, type: !984)
!6089 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 1112, column: 54)
!6090 = !DILocation(line: 1113, column: 9, scope: !6089)
!6091 = !DILocation(line: 1115, column: 11, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1115, column: 4)
!6093 = !DILocation(line: 1115, column: 9, scope: !6092)
!6094 = !DILocation(line: 1115, column: 16, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1115, column: 4)
!6096 = !DILocation(line: 1115, column: 20, scope: !6095)
!6097 = !DILocation(line: 1115, column: 18, scope: !6095)
!6098 = !DILocation(line: 1115, column: 4, scope: !6092)
!6099 = !DILocation(line: 1116, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 1116, column: 9)
!6101 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 1115, column: 35)
!6102 = !DILocation(line: 1116, column: 20, scope: !6100)
!6103 = !DILocation(line: 1116, column: 26, scope: !6100)
!6104 = !DILocation(line: 1116, column: 23, scope: !6100)
!6105 = !DILocation(line: 1116, column: 9, scope: !6101)
!6106 = !DILocation(line: 1117, column: 6, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 1116, column: 35)
!6108 = !DILocation(line: 1117, column: 17, scope: !6107)
!6109 = !DILocation(line: 1117, column: 20, scope: !6107)
!6110 = !DILocation(line: 1118, column: 5, scope: !6107)
!6111 = !DILocation(line: 1119, column: 14, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 1119, column: 14)
!6113 = !DILocation(line: 1119, column: 25, scope: !6112)
!6114 = !DILocation(line: 1119, column: 28, scope: !6112)
!6115 = !DILocation(line: 1120, column: 31, scope: !6112)
!6116 = !DILocation(line: 1120, column: 35, scope: !6112)
!6117 = !DILocation(line: 1120, column: 46, scope: !6112)
!6118 = !DILocation(line: 1120, column: 15, scope: !6112)
!6119 = !DILocation(line: 1119, column: 14, scope: !6100)
!6120 = !DILocation(line: 1122, column: 17, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1121, column: 5)
!6122 = !DILocation(line: 1123, column: 6, scope: !6121)
!6123 = !DILocation(line: 1125, column: 4, scope: !6101)
!6124 = !DILocation(line: 1115, column: 31, scope: !6095)
!6125 = !DILocation(line: 1115, column: 4, scope: !6095)
!6126 = distinct !{!6126, !6098, !6127}
!6127 = !DILocation(line: 1125, column: 4, scope: !6092)
!6128 = !DILocation(line: 1127, column: 9, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1127, column: 8)
!6130 = !DILocation(line: 1127, column: 8, scope: !6089)
!6131 = !DILocation(line: 1128, column: 9, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 1127, column: 21)
!6133 = !DILocation(line: 1128, column: 7, scope: !6132)
!6134 = !DILocation(line: 1129, column: 5, scope: !6132)
!6135 = !DILocation(line: 1131, column: 3, scope: !6089)
!6136 = distinct !{!6136, !6084, !6137}
!6137 = !DILocation(line: 1131, column: 3, scope: !6085)
!6138 = distinct !{!6138, !6030, !6139}
!6139 = !DILocation(line: 1134, column: 2, scope: !6007)
!6140 = !DILocation(line: 1136, column: 9, scope: !6007)
!6141 = !DILocation(line: 1136, column: 2, scope: !6007)
!6142 = !DILocation(line: 1137, column: 1, scope: !6007)
!6143 = distinct !DISubprogram(name: "skin_choose_quad_bridge_order", scope: !3, file: !3, line: 1194, type: !6144, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !1865, !1865, !893}
!6146 = !DILocalVariable(name: "a", arg: 1, scope: !6143, file: !3, line: 1194, type: !1865)
!6147 = !DILocation(line: 1194, column: 51, scope: !6143)
!6148 = !DILocalVariable(name: "b", arg: 2, scope: !6143, file: !3, line: 1194, type: !1865)
!6149 = !DILocation(line: 1194, column: 65, scope: !6143)
!6150 = !DILocalVariable(name: "best_order", arg: 3, scope: !6143, file: !3, line: 1195, type: !893)
!6151 = !DILocation(line: 1195, column: 47, scope: !6143)
!6152 = !DILocalVariable(name: "orders", scope: !6143, file: !3, line: 1197, type: !6153)
!6153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 1024, elements: !6154)
!6154 = !{!460, !564}
!6155 = !DILocation(line: 1197, column: 6, scope: !6143)
!6156 = !DILocalVariable(name: "shortest_len", scope: !6143, file: !3, line: 1198, type: !250)
!6157 = !DILocation(line: 1198, column: 8, scope: !6143)
!6158 = !DILocalVariable(name: "i", scope: !6143, file: !3, line: 1199, type: !207)
!6159 = !DILocation(line: 1199, column: 6, scope: !6143)
!6160 = !DILocalVariable(name: "j", scope: !6143, file: !3, line: 1199, type: !207)
!6161 = !DILocation(line: 1199, column: 9, scope: !6143)
!6162 = !DILocation(line: 1202, column: 9, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1202, column: 2)
!6164 = !DILocation(line: 1202, column: 7, scope: !6163)
!6165 = !DILocation(line: 1202, column: 14, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1202, column: 2)
!6167 = !DILocation(line: 1202, column: 16, scope: !6166)
!6168 = !DILocation(line: 1202, column: 2, scope: !6163)
!6169 = !DILocation(line: 1203, column: 10, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 1203, column: 3)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 1202, column: 26)
!6172 = !DILocation(line: 1203, column: 8, scope: !6170)
!6173 = !DILocation(line: 1203, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1203, column: 3)
!6175 = !DILocation(line: 1203, column: 17, scope: !6174)
!6176 = !DILocation(line: 1203, column: 3, scope: !6170)
!6177 = !DILocation(line: 1204, column: 20, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1203, column: 27)
!6179 = !DILocation(line: 1204, column: 24, scope: !6178)
!6180 = !DILocation(line: 1204, column: 22, scope: !6178)
!6181 = !DILocation(line: 1204, column: 27, scope: !6178)
!6182 = !DILocation(line: 1204, column: 11, scope: !6178)
!6183 = !DILocation(line: 1204, column: 4, scope: !6178)
!6184 = !DILocation(line: 1204, column: 14, scope: !6178)
!6185 = !DILocation(line: 1204, column: 17, scope: !6178)
!6186 = !DILocation(line: 1205, column: 29, scope: !6178)
!6187 = !DILocation(line: 1205, column: 33, scope: !6178)
!6188 = !DILocation(line: 1205, column: 31, scope: !6178)
!6189 = !DILocation(line: 1205, column: 36, scope: !6178)
!6190 = !DILocation(line: 1205, column: 25, scope: !6178)
!6191 = !DILocation(line: 1205, column: 11, scope: !6178)
!6192 = !DILocation(line: 1205, column: 13, scope: !6178)
!6193 = !DILocation(line: 1205, column: 4, scope: !6178)
!6194 = !DILocation(line: 1205, column: 18, scope: !6178)
!6195 = !DILocation(line: 1205, column: 21, scope: !6178)
!6196 = !DILocation(line: 1206, column: 3, scope: !6178)
!6197 = !DILocation(line: 1203, column: 23, scope: !6174)
!6198 = !DILocation(line: 1203, column: 3, scope: !6174)
!6199 = distinct !{!6199, !6176, !6200}
!6200 = !DILocation(line: 1206, column: 3, scope: !6170)
!6201 = !DILocation(line: 1207, column: 2, scope: !6171)
!6202 = !DILocation(line: 1202, column: 22, scope: !6166)
!6203 = !DILocation(line: 1202, column: 2, scope: !6166)
!6204 = distinct !{!6204, !6168, !6205}
!6205 = !DILocation(line: 1207, column: 2, scope: !6163)
!6206 = !DILocation(line: 1209, column: 15, scope: !6143)
!6207 = !DILocation(line: 1210, column: 9, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1210, column: 2)
!6209 = !DILocation(line: 1210, column: 7, scope: !6208)
!6210 = !DILocation(line: 1210, column: 14, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 1210, column: 2)
!6212 = !DILocation(line: 1210, column: 16, scope: !6211)
!6213 = !DILocation(line: 1210, column: 2, scope: !6208)
!6214 = !DILocalVariable(name: "len", scope: !6215, file: !3, line: 1211, type: !250)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1210, column: 26)
!6216 = !DILocation(line: 1211, column: 9, scope: !6215)
!6217 = !DILocation(line: 1214, column: 10, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 1214, column: 3)
!6219 = !DILocation(line: 1214, column: 8, scope: !6218)
!6220 = !DILocation(line: 1214, column: 15, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1214, column: 3)
!6222 = !DILocation(line: 1214, column: 17, scope: !6221)
!6223 = !DILocation(line: 1214, column: 3, scope: !6218)
!6224 = !DILocation(line: 1215, column: 28, scope: !6221)
!6225 = !DILocation(line: 1215, column: 30, scope: !6221)
!6226 = !DILocation(line: 1215, column: 34, scope: !6221)
!6227 = !DILocation(line: 1215, column: 38, scope: !6221)
!6228 = !DILocation(line: 1215, column: 47, scope: !6221)
!6229 = !DILocation(line: 1215, column: 40, scope: !6221)
!6230 = !DILocation(line: 1215, column: 50, scope: !6221)
!6231 = !DILocation(line: 1215, column: 55, scope: !6221)
!6232 = !DILocation(line: 1215, column: 11, scope: !6221)
!6233 = !DILocation(line: 1215, column: 8, scope: !6221)
!6234 = !DILocation(line: 1215, column: 4, scope: !6221)
!6235 = !DILocation(line: 1214, column: 23, scope: !6221)
!6236 = !DILocation(line: 1214, column: 3, scope: !6221)
!6237 = distinct !{!6237, !6223, !6238}
!6238 = !DILocation(line: 1215, column: 57, scope: !6218)
!6239 = !DILocation(line: 1217, column: 7, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 1217, column: 7)
!6241 = !DILocation(line: 1217, column: 13, scope: !6240)
!6242 = !DILocation(line: 1217, column: 11, scope: !6240)
!6243 = !DILocation(line: 1217, column: 7, scope: !6215)
!6244 = !DILocation(line: 1218, column: 19, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1217, column: 27)
!6246 = !DILocation(line: 1218, column: 17, scope: !6245)
!6247 = !DILocation(line: 1219, column: 11, scope: !6245)
!6248 = !DILocation(line: 1219, column: 4, scope: !6245)
!6249 = !DILocation(line: 1219, column: 30, scope: !6245)
!6250 = !DILocation(line: 1219, column: 23, scope: !6245)
!6251 = !DILocation(line: 1220, column: 3, scope: !6245)
!6252 = !DILocation(line: 1221, column: 2, scope: !6215)
!6253 = !DILocation(line: 1210, column: 22, scope: !6211)
!6254 = !DILocation(line: 1210, column: 2, scope: !6211)
!6255 = distinct !{!6255, !6213, !6256}
!6256 = !DILocation(line: 1221, column: 2, scope: !6208)
!6257 = !DILocation(line: 1222, column: 1, scope: !6143)
!6258 = distinct !DISubprogram(name: "BMO_slot_map_elem_insert", scope: !6259, file: !6259, line: 109, type: !6260, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!6259 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6260 = !DISubroutineType(types: !6261)
!6261 = !{null, !6262, !5726, !6263, !260}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5742, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6265 = !DILocalVariable(name: "op", arg: 1, scope: !6258, file: !6259, line: 109, type: !6262)
!6266 = !DILocation(line: 109, column: 54, scope: !6258)
!6267 = !DILocalVariable(name: "slot", arg: 2, scope: !6258, file: !6259, line: 109, type: !5726)
!6268 = !DILocation(line: 109, column: 68, scope: !6258)
!6269 = !DILocalVariable(name: "element", arg: 3, scope: !6258, file: !6259, line: 110, type: !6263)
!6270 = !DILocation(line: 110, column: 53, scope: !6258)
!6271 = !DILocalVariable(name: "val", arg: 4, scope: !6258, file: !6259, line: 110, type: !260)
!6272 = !DILocation(line: 110, column: 68, scope: !6258)
!6273 = !DILocation(line: 113, column: 22, scope: !6258)
!6274 = !DILocation(line: 113, column: 26, scope: !6258)
!6275 = !DILocation(line: 113, column: 32, scope: !6258)
!6276 = !DILocation(line: 113, column: 41, scope: !6258)
!6277 = !DILocation(line: 113, column: 2, scope: !6258)
!6278 = !DILocation(line: 114, column: 1, scope: !6258)
!6279 = distinct !DISubprogram(name: "BM_edge_other_vert", scope: !6280, file: !6280, line: 60, type: !6281, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!6280 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!270, !333, !6283}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !271)
!6285 = !DILocalVariable(name: "e", arg: 1, scope: !6279, file: !6280, line: 60, type: !333)
!6286 = !DILocation(line: 60, column: 47, scope: !6279)
!6287 = !DILocalVariable(name: "v", arg: 2, scope: !6279, file: !6280, line: 60, type: !6283)
!6288 = !DILocation(line: 60, column: 64, scope: !6279)
!6289 = !DILocation(line: 62, column: 6, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6279, file: !6280, line: 62, column: 6)
!6291 = !DILocation(line: 62, column: 9, scope: !6290)
!6292 = !DILocation(line: 62, column: 15, scope: !6290)
!6293 = !DILocation(line: 62, column: 12, scope: !6290)
!6294 = !DILocation(line: 62, column: 6, scope: !6279)
!6295 = !DILocation(line: 63, column: 10, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6290, file: !6280, line: 62, column: 18)
!6297 = !DILocation(line: 63, column: 13, scope: !6296)
!6298 = !DILocation(line: 63, column: 3, scope: !6296)
!6299 = !DILocation(line: 65, column: 11, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6290, file: !6280, line: 65, column: 11)
!6301 = !DILocation(line: 65, column: 14, scope: !6300)
!6302 = !DILocation(line: 65, column: 20, scope: !6300)
!6303 = !DILocation(line: 65, column: 17, scope: !6300)
!6304 = !DILocation(line: 65, column: 11, scope: !6290)
!6305 = !DILocation(line: 66, column: 10, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6300, file: !6280, line: 65, column: 23)
!6307 = !DILocation(line: 66, column: 13, scope: !6306)
!6308 = !DILocation(line: 66, column: 3, scope: !6306)
!6309 = !DILocation(line: 68, column: 2, scope: !6279)
!6310 = !DILocation(line: 69, column: 1, scope: !6279)
!6311 = distinct !DISubprogram(name: "connect_frames", scope: !3, file: !3, line: 971, type: !6312, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1286)
!6312 = !DISubroutineType(types: !6313)
!6313 = !{null, !3720, !1865, !1865}
!6314 = !DILocalVariable(name: "so", arg: 1, scope: !6311, file: !3, line: 971, type: !3720)
!6315 = !DILocation(line: 971, column: 40, scope: !6311)
!6316 = !DILocalVariable(name: "frame1", arg: 2, scope: !6311, file: !3, line: 972, type: !1865)
!6317 = !DILocation(line: 972, column: 36, scope: !6311)
!6318 = !DILocalVariable(name: "frame2", arg: 3, scope: !6311, file: !3, line: 973, type: !1865)
!6319 = !DILocation(line: 973, column: 9, scope: !6311)
!6320 = !DILocalVariable(name: "q", scope: !6311, file: !3, line: 975, type: !6321)
!6321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 1024, elements: !572)
!6322 = !DILocation(line: 975, column: 10, scope: !6311)
!6323 = !DILocation(line: 975, column: 20, scope: !6311)
!6324 = !DILocation(line: 975, column: 21, scope: !6311)
!6325 = !DILocation(line: 975, column: 22, scope: !6311)
!6326 = !DILocation(line: 975, column: 33, scope: !6311)
!6327 = !DILocation(line: 975, column: 44, scope: !6311)
!6328 = !DILocation(line: 975, column: 55, scope: !6311)
!6329 = !DILocation(line: 976, column: 21, scope: !6311)
!6330 = !DILocation(line: 976, column: 22, scope: !6311)
!6331 = !DILocation(line: 976, column: 33, scope: !6311)
!6332 = !DILocation(line: 976, column: 44, scope: !6311)
!6333 = !DILocation(line: 976, column: 55, scope: !6311)
!6334 = !DILocation(line: 977, column: 21, scope: !6311)
!6335 = !DILocation(line: 977, column: 22, scope: !6311)
!6336 = !DILocation(line: 977, column: 33, scope: !6311)
!6337 = !DILocation(line: 977, column: 44, scope: !6311)
!6338 = !DILocation(line: 977, column: 55, scope: !6311)
!6339 = !DILocation(line: 978, column: 21, scope: !6311)
!6340 = !DILocation(line: 978, column: 22, scope: !6311)
!6341 = !DILocation(line: 978, column: 33, scope: !6311)
!6342 = !DILocation(line: 978, column: 44, scope: !6311)
!6343 = !DILocation(line: 978, column: 55, scope: !6311)
!6344 = !DILocalVariable(name: "p", scope: !6311, file: !3, line: 979, type: !290)
!6345 = !DILocation(line: 979, column: 8, scope: !6311)
!6346 = !DILocalVariable(name: "no", scope: !6311, file: !3, line: 979, type: !290)
!6347 = !DILocation(line: 979, column: 14, scope: !6311)
!6348 = !DILocalVariable(name: "i", scope: !6311, file: !3, line: 980, type: !207)
!6349 = !DILocation(line: 980, column: 6, scope: !6311)
!6350 = !DILocalVariable(name: "swap", scope: !6311, file: !3, line: 980, type: !207)
!6351 = !DILocation(line: 980, column: 9, scope: !6311)
!6352 = !DILocation(line: 983, column: 14, scope: !6311)
!6353 = !DILocation(line: 983, column: 17, scope: !6311)
!6354 = !DILocation(line: 983, column: 26, scope: !6311)
!6355 = !DILocation(line: 983, column: 30, scope: !6311)
!6356 = !DILocation(line: 983, column: 39, scope: !6311)
!6357 = !DILocation(line: 983, column: 2, scope: !6311)
!6358 = !DILocation(line: 984, column: 17, scope: !6311)
!6359 = !DILocation(line: 985, column: 17, scope: !6311)
!6360 = !DILocation(line: 985, column: 26, scope: !6311)
!6361 = !DILocation(line: 985, column: 30, scope: !6311)
!6362 = !DILocation(line: 985, column: 39, scope: !6311)
!6363 = !DILocation(line: 986, column: 17, scope: !6311)
!6364 = !DILocation(line: 986, column: 26, scope: !6311)
!6365 = !DILocation(line: 986, column: 30, scope: !6311)
!6366 = !DILocation(line: 986, column: 39, scope: !6311)
!6367 = !DILocation(line: 984, column: 2, scope: !6311)
!6368 = !DILocation(line: 987, column: 18, scope: !6311)
!6369 = !DILocation(line: 987, column: 22, scope: !6311)
!6370 = !DILocation(line: 987, column: 9, scope: !6311)
!6371 = !DILocation(line: 987, column: 25, scope: !6311)
!6372 = !DILocation(line: 987, column: 7, scope: !6311)
!6373 = !DILocation(line: 989, column: 9, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 989, column: 2)
!6375 = !DILocation(line: 989, column: 7, scope: !6374)
!6376 = !DILocation(line: 989, column: 14, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 989, column: 2)
!6378 = !DILocation(line: 989, column: 16, scope: !6377)
!6379 = !DILocation(line: 989, column: 2, scope: !6374)
!6380 = !DILocation(line: 990, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 990, column: 7)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 989, column: 26)
!6383 = !DILocation(line: 990, column: 7, scope: !6382)
!6384 = !DILocation(line: 991, column: 13, scope: !6381)
!6385 = !DILocation(line: 991, column: 19, scope: !6381)
!6386 = !DILocation(line: 991, column: 17, scope: !6381)
!6387 = !DILocation(line: 991, column: 28, scope: !6381)
!6388 = !DILocation(line: 991, column: 26, scope: !6381)
!6389 = !DILocation(line: 991, column: 37, scope: !6381)
!6390 = !DILocation(line: 991, column: 35, scope: !6381)
!6391 = !DILocation(line: 991, column: 46, scope: !6381)
!6392 = !DILocation(line: 991, column: 44, scope: !6381)
!6393 = !DILocation(line: 991, column: 4, scope: !6381)
!6394 = !DILocation(line: 993, column: 13, scope: !6381)
!6395 = !DILocation(line: 993, column: 19, scope: !6381)
!6396 = !DILocation(line: 993, column: 17, scope: !6381)
!6397 = !DILocation(line: 993, column: 28, scope: !6381)
!6398 = !DILocation(line: 993, column: 26, scope: !6381)
!6399 = !DILocation(line: 993, column: 37, scope: !6381)
!6400 = !DILocation(line: 993, column: 35, scope: !6381)
!6401 = !DILocation(line: 993, column: 46, scope: !6381)
!6402 = !DILocation(line: 993, column: 44, scope: !6381)
!6403 = !DILocation(line: 993, column: 4, scope: !6381)
!6404 = !DILocation(line: 994, column: 2, scope: !6382)
!6405 = !DILocation(line: 989, column: 22, scope: !6377)
!6406 = !DILocation(line: 989, column: 2, scope: !6377)
!6407 = distinct !{!6407, !6379, !6408}
!6408 = !DILocation(line: 994, column: 2, scope: !6374)
!6409 = !DILocation(line: 995, column: 1, scope: !6311)
