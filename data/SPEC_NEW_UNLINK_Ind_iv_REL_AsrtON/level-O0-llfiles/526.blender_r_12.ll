; ModuleID = 'libpng/pngrtran.c'
source_filename = "libpng/pngrtran.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, %struct.z_stream_s, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i16*, i8, i8, i8*, i16*, i16*, i16*, i16*, [29 x i8], i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i8*, i8, i8, i8, i16, i16, i32, i8, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i32, i8, i32, i32, %struct.png_text_struct*, %struct.png_time_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, i32, i8, i32, i32, i8, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i8*, i8**, i8, i8, i32, %struct.png_unknown_chunk_t*, i32, i8*, i8*, i32, i8, %struct.png_sPLT_struct*, i32, i8, i8*, i8*, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_time_struct = type { i16, i8, i8, i8, i8, i8 }
%struct.png_sPLT_struct = type { i8*, i8, %struct.png_sPLT_entry_struct*, i32 }
%struct.png_sPLT_entry_struct = type { i16, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_dsort_struct = type { %struct.png_dsort_struct*, i8, i8 }

@.str = private unnamed_addr constant [41 x i8] c"Can't discard critical data on CRC error\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Application must supply a known background gamma\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"png_set_background\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"output gamma out of expected range\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"invalid alpha mode\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"conflicting calls to set alpha mode and background\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"invalid error action to rgb_to_gray\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"ignoring out of range rgb_to_gray coefficients\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"rgb to gray red coefficient\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"rgb to gray green coefficient\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"libpng does not support gamma+background+rgb_to_gray\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"invalid background gamma type\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"NULL row buffer\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Uninitialized row\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"png_do_rgb_to_gray found nongray pixel\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"png_do_quantize returned rowbytes=0\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"png_do_encode_alpha: unexpected call\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"gamma value\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_crc_action(%struct.png_struct_def* %png_ptr, i32 %crit_action, i32 %ancil_action) #0 !dbg !36 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %crit_action.addr = alloca i32, align 4
  %ancil_action.addr = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !482, metadata !DIExpression()), !dbg !483
  store i32 %crit_action, i32* %crit_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crit_action.addr, metadata !484, metadata !DIExpression()), !dbg !485
  store i32 %ancil_action, i32* %ancil_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ancil_action.addr, metadata !486, metadata !DIExpression()), !dbg !487
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !488
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !490
  br i1 %cmp, label %if.then, label %if.end, !dbg !491

if.then:                                          ; preds = %entry
  br label %sw.epilog32, !dbg !492

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %crit_action.addr, align 4, !dbg !493
  switch i32 %1, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb3
    i32 2, label %sw.bb8
    i32 1, label %sw.bb9
    i32 0, label %sw.bb9
  ], !dbg !494

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !495

sw.bb1:                                           ; preds = %if.end
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !497
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 14, !dbg !498
  %3 = load i32, i32* %flags, align 8, !dbg !499
  %and = and i32 %3, -3073, !dbg !499
  store i32 %and, i32* %flags, align 8, !dbg !499
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !500
  %flags2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 14, !dbg !501
  %5 = load i32, i32* %flags2, align 8, !dbg !502
  %or = or i32 %5, 1024, !dbg !502
  store i32 %or, i32* %flags2, align 8, !dbg !502
  br label %sw.epilog, !dbg !503

sw.bb3:                                           ; preds = %if.end
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !504
  %flags4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 14, !dbg !505
  %7 = load i32, i32* %flags4, align 8, !dbg !506
  %and5 = and i32 %7, -3073, !dbg !506
  store i32 %and5, i32* %flags4, align 8, !dbg !506
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !507
  %flags6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 14, !dbg !508
  %9 = load i32, i32* %flags6, align 8, !dbg !509
  %or7 = or i32 %9, 3072, !dbg !509
  store i32 %or7, i32* %flags6, align 8, !dbg !509
  br label %sw.epilog, !dbg !510

sw.bb8:                                           ; preds = %if.end
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !511
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0)), !dbg !512
  br label %sw.bb9, !dbg !512

sw.bb9:                                           ; preds = %if.end, %if.end, %sw.bb8
  br label %sw.default, !dbg !512

sw.default:                                       ; preds = %if.end, %sw.bb9
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !513
  %flags10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 14, !dbg !514
  %12 = load i32, i32* %flags10, align 8, !dbg !515
  %and11 = and i32 %12, -3073, !dbg !515
  store i32 %and11, i32* %flags10, align 8, !dbg !515
  br label %sw.epilog, !dbg !516

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %13 = load i32, i32* %ancil_action.addr, align 4, !dbg !517
  switch i32 %13, label %sw.default29 [
    i32 5, label %sw.bb12
    i32 3, label %sw.bb13
    i32 4, label %sw.bb18
    i32 1, label %sw.bb23
    i32 2, label %sw.bb28
    i32 0, label %sw.bb28
  ], !dbg !518

sw.bb12:                                          ; preds = %sw.epilog
  br label %sw.epilog32, !dbg !519

sw.bb13:                                          ; preds = %sw.epilog
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !521
  %flags14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 14, !dbg !522
  %15 = load i32, i32* %flags14, align 8, !dbg !523
  %and15 = and i32 %15, -769, !dbg !523
  store i32 %and15, i32* %flags14, align 8, !dbg !523
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !524
  %flags16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 14, !dbg !525
  %17 = load i32, i32* %flags16, align 8, !dbg !526
  %or17 = or i32 %17, 256, !dbg !526
  store i32 %or17, i32* %flags16, align 8, !dbg !526
  br label %sw.epilog32, !dbg !527

sw.bb18:                                          ; preds = %sw.epilog
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !528
  %flags19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 14, !dbg !529
  %19 = load i32, i32* %flags19, align 8, !dbg !530
  %and20 = and i32 %19, -769, !dbg !530
  store i32 %and20, i32* %flags19, align 8, !dbg !530
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !531
  %flags21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 14, !dbg !532
  %21 = load i32, i32* %flags21, align 8, !dbg !533
  %or22 = or i32 %21, 768, !dbg !533
  store i32 %or22, i32* %flags21, align 8, !dbg !533
  br label %sw.epilog32, !dbg !534

sw.bb23:                                          ; preds = %sw.epilog
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !535
  %flags24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 14, !dbg !536
  %23 = load i32, i32* %flags24, align 8, !dbg !537
  %and25 = and i32 %23, -769, !dbg !537
  store i32 %and25, i32* %flags24, align 8, !dbg !537
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !538
  %flags26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 14, !dbg !539
  %25 = load i32, i32* %flags26, align 8, !dbg !540
  %or27 = or i32 %25, 512, !dbg !540
  store i32 %or27, i32* %flags26, align 8, !dbg !540
  br label %sw.epilog32, !dbg !541

sw.bb28:                                          ; preds = %sw.epilog, %sw.epilog
  br label %sw.default29, !dbg !541

sw.default29:                                     ; preds = %sw.epilog, %sw.bb28
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !542
  %flags30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 14, !dbg !543
  %27 = load i32, i32* %flags30, align 8, !dbg !544
  %and31 = and i32 %27, -769, !dbg !544
  store i32 %and31, i32* %flags30, align 8, !dbg !544
  br label %sw.epilog32, !dbg !545

sw.epilog32:                                      ; preds = %if.then, %sw.default29, %sw.bb23, %sw.bb18, %sw.bb13, %sw.bb12
  ret void, !dbg !546
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @png_warning(%struct.png_struct_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_background_fixed(%struct.png_struct_def* %png_ptr, %struct.png_color_16_struct* %background_color, i32 %background_gamma_code, i32 %need_expand, i32 %background_gamma) #0 !dbg !547 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %background_color.addr = alloca %struct.png_color_16_struct*, align 8
  %background_gamma_code.addr = alloca i32, align 4
  %need_expand.addr = alloca i32, align 4
  %background_gamma.addr = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !553, metadata !DIExpression()), !dbg !554
  store %struct.png_color_16_struct* %background_color, %struct.png_color_16_struct** %background_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_16_struct** %background_color.addr, metadata !555, metadata !DIExpression()), !dbg !556
  store i32 %background_gamma_code, i32* %background_gamma_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %background_gamma_code.addr, metadata !557, metadata !DIExpression()), !dbg !558
  store i32 %need_expand, i32* %need_expand.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %need_expand.addr, metadata !559, metadata !DIExpression()), !dbg !560
  store i32 %background_gamma, i32* %background_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %background_gamma.addr, metadata !561, metadata !DIExpression()), !dbg !562
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !563
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !565
  br i1 %cmp, label %if.then, label %if.end, !dbg !566

if.then:                                          ; preds = %entry
  br label %if.end12, !dbg !567

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %background_gamma_code.addr, align 4, !dbg !568
  %cmp1 = icmp eq i32 %1, 0, !dbg !570
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !571

if.then2:                                         ; preds = %if.end
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !572
  call void @png_warning(%struct.png_struct_def* %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)), !dbg !574
  br label %if.end12, !dbg !575

if.end3:                                          ; preds = %if.end
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !576
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 15, !dbg !577
  %4 = load i32, i32* %transformations, align 4, !dbg !578
  %or = or i32 %4, 262272, !dbg !578
  store i32 %or, i32* %transformations, align 4, !dbg !578
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !579
  %transformations4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 15, !dbg !580
  %6 = load i32, i32* %transformations4, align 4, !dbg !581
  %and = and i32 %6, -8388609, !dbg !581
  store i32 %and, i32* %transformations4, align 4, !dbg !581
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !582
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 14, !dbg !583
  %8 = load i32, i32* %flags, align 8, !dbg !584
  %and5 = and i32 %8, -8193, !dbg !584
  store i32 %and5, i32* %flags, align 8, !dbg !584
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !585
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 69, !dbg !586
  %10 = bitcast %struct.png_color_16_struct* %background to i8*, !dbg !587
  %11 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %background_color.addr, align 8, !dbg !588
  %12 = bitcast %struct.png_color_16_struct* %11 to i8*, !dbg !587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 2 %12, i64 10, i1 false), !dbg !587
  %13 = load i32, i32* %background_gamma.addr, align 4, !dbg !589
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !590
  %background_gamma6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 68, !dbg !591
  store i32 %13, i32* %background_gamma6, align 4, !dbg !592
  %15 = load i32, i32* %background_gamma_code.addr, align 4, !dbg !593
  %conv = trunc i32 %15 to i8, !dbg !594
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !595
  %background_gamma_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 67, !dbg !596
  store i8 %conv, i8* %background_gamma_type, align 8, !dbg !597
  %17 = load i32, i32* %need_expand.addr, align 4, !dbg !598
  %tobool = icmp ne i32 %17, 0, !dbg !598
  br i1 %tobool, label %if.then7, label %if.else, !dbg !600

if.then7:                                         ; preds = %if.end3
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !601
  %transformations8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 15, !dbg !602
  %19 = load i32, i32* %transformations8, align 4, !dbg !603
  %or9 = or i32 %19, 256, !dbg !603
  store i32 %or9, i32* %transformations8, align 4, !dbg !603
  br label %if.end12, !dbg !601

if.else:                                          ; preds = %if.end3
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !604
  %transformations10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 15, !dbg !605
  %21 = load i32, i32* %transformations10, align 4, !dbg !606
  %and11 = and i32 %21, -257, !dbg !606
  store i32 %and11, i32* %transformations10, align 4, !dbg !606
  br label %if.end12

if.end12:                                         ; preds = %if.then, %if.then2, %if.else, %if.then7
  ret void, !dbg !607
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_background(%struct.png_struct_def* %png_ptr, %struct.png_color_16_struct* %background_color, i32 %background_gamma_code, i32 %need_expand, double %background_gamma) #0 !dbg !608 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %background_color.addr = alloca %struct.png_color_16_struct*, align 8
  %background_gamma_code.addr = alloca i32, align 4
  %need_expand.addr = alloca i32, align 4
  %background_gamma.addr = alloca double, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !612, metadata !DIExpression()), !dbg !613
  store %struct.png_color_16_struct* %background_color, %struct.png_color_16_struct** %background_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_16_struct** %background_color.addr, metadata !614, metadata !DIExpression()), !dbg !615
  store i32 %background_gamma_code, i32* %background_gamma_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %background_gamma_code.addr, metadata !616, metadata !DIExpression()), !dbg !617
  store i32 %need_expand, i32* %need_expand.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %need_expand.addr, metadata !618, metadata !DIExpression()), !dbg !619
  store double %background_gamma, double* %background_gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %background_gamma.addr, metadata !620, metadata !DIExpression()), !dbg !621
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !622
  %1 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %background_color.addr, align 8, !dbg !623
  %2 = load i32, i32* %background_gamma_code.addr, align 4, !dbg !624
  %3 = load i32, i32* %need_expand.addr, align 4, !dbg !625
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !626
  %5 = load double, double* %background_gamma.addr, align 8, !dbg !627
  %call = call i32 @png_fixed(%struct.png_struct_def* %4, double %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)), !dbg !628
  call void @png_set_background_fixed(%struct.png_struct_def* %0, %struct.png_color_16_struct* %1, i32 %2, i32 %3, i32 %call), !dbg !629
  ret void, !dbg !630
}

declare dso_local i32 @png_fixed(%struct.png_struct_def*, double, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_scale_16(%struct.png_struct_def* %png_ptr) #0 !dbg !631 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !632, metadata !DIExpression()), !dbg !633
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !634
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !636
  br i1 %cmp, label %if.then, label %if.end, !dbg !637

if.then:                                          ; preds = %entry
  br label %return, !dbg !638

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !639
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !640
  %2 = load i32, i32* %transformations, align 4, !dbg !641
  %or = or i32 %2, 67108864, !dbg !641
  store i32 %or, i32* %transformations, align 4, !dbg !641
  br label %return, !dbg !642

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !642
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_strip_16(%struct.png_struct_def* %png_ptr) #0 !dbg !643 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !644, metadata !DIExpression()), !dbg !645
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !646
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !648
  br i1 %cmp, label %if.then, label %if.end, !dbg !649

if.then:                                          ; preds = %entry
  br label %return, !dbg !650

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !651
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !652
  %2 = load i32, i32* %transformations, align 4, !dbg !653
  %or = or i32 %2, 1024, !dbg !653
  store i32 %or, i32* %transformations, align 4, !dbg !653
  br label %return, !dbg !654

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !654
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_strip_alpha(%struct.png_struct_def* %png_ptr) #0 !dbg !655 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !656, metadata !DIExpression()), !dbg !657
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !658
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !660
  br i1 %cmp, label %if.then, label %if.end, !dbg !661

if.then:                                          ; preds = %entry
  br label %return, !dbg !662

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !663
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !664
  %2 = load i32, i32* %transformations, align 4, !dbg !665
  %or = or i32 %2, 262144, !dbg !665
  store i32 %or, i32* %transformations, align 4, !dbg !665
  br label %return, !dbg !666

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !666
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_alpha_mode_fixed(%struct.png_struct_def* %png_ptr, i32 %mode, i32 %output_gamma) #0 !dbg !667 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %mode.addr = alloca i32, align 4
  %output_gamma.addr = alloca i32, align 4
  %compose = alloca i32, align 4
  %file_gamma = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !670, metadata !DIExpression()), !dbg !671
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !672, metadata !DIExpression()), !dbg !673
  store i32 %output_gamma, i32* %output_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %output_gamma.addr, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.declare(metadata i32* %compose, metadata !676, metadata !DIExpression()), !dbg !677
  store i32 0, i32* %compose, align 4, !dbg !677
  call void @llvm.dbg.declare(metadata i32* %file_gamma, metadata !678, metadata !DIExpression()), !dbg !679
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !680
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !682
  br i1 %cmp, label %if.then, label %if.end, !dbg !683

if.then:                                          ; preds = %entry
  br label %return, !dbg !684

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !685
  %2 = load i32, i32* %output_gamma.addr, align 4, !dbg !686
  %call = call i32 @translate_gamma_flags(%struct.png_struct_def* %1, i32 %2, i32 1), !dbg !687
  store i32 %call, i32* %output_gamma.addr, align 4, !dbg !688
  %3 = load i32, i32* %output_gamma.addr, align 4, !dbg !689
  %cmp1 = icmp slt i32 %3, 70000, !dbg !691
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !692

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %output_gamma.addr, align 4, !dbg !693
  %cmp2 = icmp sgt i32 %4, 300000, !dbg !694
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !695

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !696
  call void @png_error(%struct.png_struct_def* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !697
  unreachable, !dbg !697

if.end4:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %output_gamma.addr, align 4, !dbg !698
  %call5 = call i32 @png_reciprocal(i32 %6), !dbg !699
  store i32 %call5, i32* %file_gamma, align 4, !dbg !700
  %7 = load i32, i32* %mode.addr, align 4, !dbg !701
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb12
    i32 3, label %sw.bb16
  ], !dbg !702

sw.bb:                                            ; preds = %if.end4
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !703
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 15, !dbg !705
  %9 = load i32, i32* %transformations, align 4, !dbg !706
  %and = and i32 %9, -8388609, !dbg !706
  store i32 %and, i32* %transformations, align 4, !dbg !706
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !707
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 14, !dbg !708
  %11 = load i32, i32* %flags, align 8, !dbg !709
  %and6 = and i32 %11, -8193, !dbg !709
  store i32 %and6, i32* %flags, align 8, !dbg !709
  br label %sw.epilog, !dbg !710

sw.bb7:                                           ; preds = %if.end4
  store i32 1, i32* %compose, align 4, !dbg !711
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !712
  %transformations8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 15, !dbg !713
  %13 = load i32, i32* %transformations8, align 4, !dbg !714
  %and9 = and i32 %13, -8388609, !dbg !714
  store i32 %and9, i32* %transformations8, align 4, !dbg !714
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !715
  %flags10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 14, !dbg !716
  %15 = load i32, i32* %flags10, align 8, !dbg !717
  %and11 = and i32 %15, -8193, !dbg !717
  store i32 %and11, i32* %flags10, align 8, !dbg !717
  store i32 100000, i32* %output_gamma.addr, align 4, !dbg !718
  br label %sw.epilog, !dbg !719

sw.bb12:                                          ; preds = %if.end4
  store i32 1, i32* %compose, align 4, !dbg !720
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !721
  %transformations13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 15, !dbg !722
  %17 = load i32, i32* %transformations13, align 4, !dbg !723
  %and14 = and i32 %17, -8388609, !dbg !723
  store i32 %and14, i32* %transformations13, align 4, !dbg !723
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !724
  %flags15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 14, !dbg !725
  %19 = load i32, i32* %flags15, align 8, !dbg !726
  %or = or i32 %19, 8192, !dbg !726
  store i32 %or, i32* %flags15, align 8, !dbg !726
  br label %sw.epilog, !dbg !727

sw.bb16:                                          ; preds = %if.end4
  store i32 1, i32* %compose, align 4, !dbg !728
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !729
  %transformations17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 15, !dbg !730
  %21 = load i32, i32* %transformations17, align 4, !dbg !731
  %or18 = or i32 %21, 8388608, !dbg !731
  store i32 %or18, i32* %transformations17, align 4, !dbg !731
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !732
  %flags19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 14, !dbg !733
  %23 = load i32, i32* %flags19, align 8, !dbg !734
  %and20 = and i32 %23, -8193, !dbg !734
  store i32 %and20, i32* %flags19, align 8, !dbg !734
  br label %sw.epilog, !dbg !735

sw.default:                                       ; preds = %if.end4
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !736
  call void @png_error(%struct.png_struct_def* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !737
  unreachable, !dbg !737

sw.epilog:                                        ; preds = %sw.bb16, %sw.bb12, %sw.bb7, %sw.bb
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !738
  %gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 75, !dbg !740
  %26 = load i32, i32* %gamma, align 4, !dbg !740
  %cmp21 = icmp eq i32 %26, 0, !dbg !741
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !742

if.then22:                                        ; preds = %sw.epilog
  %27 = load i32, i32* %file_gamma, align 4, !dbg !743
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !744
  %gamma23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 75, !dbg !745
  store i32 %27, i32* %gamma23, align 4, !dbg !746
  br label %if.end24, !dbg !744

if.end24:                                         ; preds = %if.then22, %sw.epilog
  %29 = load i32, i32* %output_gamma.addr, align 4, !dbg !747
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !748
  %screen_gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 76, !dbg !749
  store i32 %29, i32* %screen_gamma, align 8, !dbg !750
  %31 = load i32, i32* %compose, align 4, !dbg !751
  %tobool = icmp ne i32 %31, 0, !dbg !751
  br i1 %tobool, label %if.then25, label %if.end36, !dbg !753

if.then25:                                        ; preds = %if.end24
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !754
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 69, !dbg !756
  %33 = bitcast %struct.png_color_16_struct* %background to i8*, !dbg !757
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 10, i1 false), !dbg !757
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !758
  %gamma26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 75, !dbg !759
  %35 = load i32, i32* %gamma26, align 4, !dbg !759
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !760
  %background_gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 68, !dbg !761
  store i32 %35, i32* %background_gamma, align 4, !dbg !762
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !763
  %background_gamma_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 67, !dbg !764
  store i8 2, i8* %background_gamma_type, align 8, !dbg !765
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !766
  %transformations27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15, !dbg !767
  %39 = load i32, i32* %transformations27, align 4, !dbg !768
  %and28 = and i32 %39, -257, !dbg !768
  store i32 %and28, i32* %transformations27, align 4, !dbg !768
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !769
  %transformations29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 15, !dbg !771
  %41 = load i32, i32* %transformations29, align 4, !dbg !771
  %and30 = and i32 %41, 128, !dbg !772
  %tobool31 = icmp ne i32 %and30, 0, !dbg !772
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !773

if.then32:                                        ; preds = %if.then25
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !774
  call void @png_error(%struct.png_struct_def* %42, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !775
  unreachable, !dbg !775

if.end33:                                         ; preds = %if.then25
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !776
  %transformations34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 15, !dbg !777
  %44 = load i32, i32* %transformations34, align 4, !dbg !778
  %or35 = or i32 %44, 128, !dbg !778
  store i32 %or35, i32* %transformations34, align 4, !dbg !778
  br label %if.end36, !dbg !779

if.end36:                                         ; preds = %if.end33, %if.end24
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !780
  %flags37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 14, !dbg !781
  %46 = load i32, i32* %flags37, align 8, !dbg !782
  %or38 = or i32 %46, 16384, !dbg !782
  store i32 %or38, i32* %flags37, align 8, !dbg !782
  br label %return, !dbg !783

return:                                           ; preds = %if.end36, %if.then
  ret void, !dbg !783
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @translate_gamma_flags(%struct.png_struct_def* %png_ptr, i32 %output_gamma, i32 %is_screen) #0 !dbg !784 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %output_gamma.addr = alloca i32, align 4
  %is_screen.addr = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !787, metadata !DIExpression()), !dbg !788
  store i32 %output_gamma, i32* %output_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %output_gamma.addr, metadata !789, metadata !DIExpression()), !dbg !790
  store i32 %is_screen, i32* %is_screen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_screen.addr, metadata !791, metadata !DIExpression()), !dbg !792
  %0 = load i32, i32* %output_gamma.addr, align 4, !dbg !793
  %cmp = icmp eq i32 %0, -1, !dbg !795
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !796

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %output_gamma.addr, align 4, !dbg !797
  %cmp1 = icmp eq i32 %1, -100000, !dbg !798
  br i1 %cmp1, label %if.then, label %if.else3, !dbg !799

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !800
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 14, !dbg !802
  %3 = load i32, i32* %flags, align 8, !dbg !803
  %or = or i32 %3, 4096, !dbg !803
  store i32 %or, i32* %flags, align 8, !dbg !803
  %4 = load i32, i32* %is_screen.addr, align 4, !dbg !804
  %tobool = icmp ne i32 %4, 0, !dbg !804
  br i1 %tobool, label %if.then2, label %if.else, !dbg !806

if.then2:                                         ; preds = %if.then
  store i32 220000, i32* %output_gamma.addr, align 4, !dbg !807
  br label %if.end, !dbg !808

if.else:                                          ; preds = %if.then
  store i32 45455, i32* %output_gamma.addr, align 4, !dbg !809
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end13, !dbg !810

if.else3:                                         ; preds = %lor.lhs.false
  %5 = load i32, i32* %output_gamma.addr, align 4, !dbg !811
  %cmp4 = icmp eq i32 %5, -2, !dbg !813
  br i1 %cmp4, label %if.then7, label %lor.lhs.false5, !dbg !814

lor.lhs.false5:                                   ; preds = %if.else3
  %6 = load i32, i32* %output_gamma.addr, align 4, !dbg !815
  %cmp6 = icmp eq i32 %6, -50000, !dbg !816
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !817

if.then7:                                         ; preds = %lor.lhs.false5, %if.else3
  %7 = load i32, i32* %is_screen.addr, align 4, !dbg !818
  %tobool8 = icmp ne i32 %7, 0, !dbg !818
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !821

if.then9:                                         ; preds = %if.then7
  store i32 151724, i32* %output_gamma.addr, align 4, !dbg !822
  br label %if.end11, !dbg !823

if.else10:                                        ; preds = %if.then7
  store i32 65909, i32* %output_gamma.addr, align 4, !dbg !824
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12, !dbg !825

if.end12:                                         ; preds = %if.end11, %lor.lhs.false5
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  %8 = load i32, i32* %output_gamma.addr, align 4, !dbg !826
  ret i32 %8, !dbg !827
}

; Function Attrs: noreturn
declare dso_local void @png_error(%struct.png_struct_def*, i8*) #4

declare dso_local i32 @png_reciprocal(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_alpha_mode(%struct.png_struct_def* %png_ptr, i32 %mode, double %output_gamma) #0 !dbg !828 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %mode.addr = alloca i32, align 4
  %output_gamma.addr = alloca double, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !831, metadata !DIExpression()), !dbg !832
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !833, metadata !DIExpression()), !dbg !834
  store double %output_gamma, double* %output_gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %output_gamma.addr, metadata !835, metadata !DIExpression()), !dbg !836
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !837
  %1 = load i32, i32* %mode.addr, align 4, !dbg !838
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !839
  %3 = load double, double* %output_gamma.addr, align 8, !dbg !840
  %call = call i32 @convert_gamma_value(%struct.png_struct_def* %2, double %3), !dbg !841
  call void @png_set_alpha_mode_fixed(%struct.png_struct_def* %0, i32 %1, i32 %call), !dbg !842
  ret void, !dbg !843
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @convert_gamma_value(%struct.png_struct_def* %png_ptr, double %output_gamma) #0 !dbg !844 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %output_gamma.addr = alloca double, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !847, metadata !DIExpression()), !dbg !848
  store double %output_gamma, double* %output_gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %output_gamma.addr, metadata !849, metadata !DIExpression()), !dbg !850
  %0 = load double, double* %output_gamma.addr, align 8, !dbg !851
  %cmp = fcmp ogt double %0, 0.000000e+00, !dbg !853
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !854

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %output_gamma.addr, align 8, !dbg !855
  %cmp1 = fcmp olt double %1, 1.280000e+02, !dbg !856
  br i1 %cmp1, label %if.then, label %if.end, !dbg !857

if.then:                                          ; preds = %land.lhs.true
  %2 = load double, double* %output_gamma.addr, align 8, !dbg !858
  %mul = fmul double %2, 1.000000e+05, !dbg !858
  store double %mul, double* %output_gamma.addr, align 8, !dbg !858
  br label %if.end, !dbg !859

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %3 = load double, double* %output_gamma.addr, align 8, !dbg !860
  %add = fadd double %3, 5.000000e-01, !dbg !861
  %4 = call double @llvm.floor.f64(double %add), !dbg !862
  store double %4, double* %output_gamma.addr, align 8, !dbg !863
  %5 = load double, double* %output_gamma.addr, align 8, !dbg !864
  %cmp2 = fcmp ogt double %5, 0x41DFFFFFFFC00000, !dbg !866
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !867

lor.lhs.false:                                    ; preds = %if.end
  %6 = load double, double* %output_gamma.addr, align 8, !dbg !868
  %cmp3 = fcmp olt double %6, 0xC1DFFFFFFFC00000, !dbg !869
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !870

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !871
  call void @png_fixed_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !872
  unreachable, !dbg !872

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load double, double* %output_gamma.addr, align 8, !dbg !873
  %conv = fptosi double %8 to i32, !dbg !874
  ret i32 %conv, !dbg !875
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_quantize(%struct.png_struct_def* %png_ptr, %struct.png_color_struct* %palette, i32 %num_palette, i32 %maximum_colors, i16* %histogram, i32 %full_quantize) #0 !dbg !876 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %palette.addr = alloca %struct.png_color_struct*, align 8
  %num_palette.addr = alloca i32, align 4
  %maximum_colors.addr = alloca i32, align 4
  %histogram.addr = alloca i16*, align 8
  %full_quantize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %i15 = alloca i32, align 4
  %done = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca i8, align 1
  %j80 = alloca i32, align 4
  %j107 = alloca i32, align 4
  %tmp_color = alloca %struct.png_color_struct, align 1
  %min_d = alloca i32, align 4
  %k = alloca i32, align 4
  %min_k = alloca i32, align 4
  %d_index = alloca i32, align 4
  %d = alloca i32, align 4
  %i245 = alloca i32, align 4
  %max_d = alloca i32, align 4
  %num_new_palette = alloca i32, align 4
  %t246 = alloca %struct.png_dsort_struct*, align 8
  %hash = alloca %struct.png_dsort_struct**, align 8
  %j280 = alloca i32, align 4
  %d286 = alloca i32, align 4
  %p = alloca %struct.png_dsort_struct*, align 8
  %j376 = alloca i32, align 4
  %next_j = alloca i32, align 4
  %k399 = alloca i32, align 4
  %p492 = alloca %struct.png_dsort_struct*, align 8
  %i523 = alloca i32, align 4
  %distance = alloca i8*, align 8
  %total_bits = alloca i32, align 4
  %num_red = alloca i32, align 4
  %num_green = alloca i32, align 4
  %num_blue = alloca i32, align 4
  %num_entries = alloca i64, align 8
  %ir = alloca i32, align 4
  %ig = alloca i32, align 4
  %ib = alloca i32, align 4
  %r = alloca i32, align 4
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %dr = alloca i32, align 4
  %index_r = alloca i32, align 4
  %dg = alloca i32, align 4
  %dt = alloca i32, align 4
  %dm = alloca i32, align 4
  %index_g = alloca i32, align 4
  %d_index585 = alloca i32, align 4
  %db = alloca i32, align 4
  %dmax = alloca i32, align 4
  %d601 = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !882, metadata !DIExpression()), !dbg !883
  store %struct.png_color_struct* %palette, %struct.png_color_struct** %palette.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette.addr, metadata !884, metadata !DIExpression()), !dbg !885
  store i32 %num_palette, i32* %num_palette.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_palette.addr, metadata !886, metadata !DIExpression()), !dbg !887
  store i32 %maximum_colors, i32* %maximum_colors.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maximum_colors.addr, metadata !888, metadata !DIExpression()), !dbg !889
  store i16* %histogram, i16** %histogram.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %histogram.addr, metadata !890, metadata !DIExpression()), !dbg !891
  store i32 %full_quantize, i32* %full_quantize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %full_quantize.addr, metadata !892, metadata !DIExpression()), !dbg !893
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !894
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !896
  br i1 %cmp, label %if.then, label %if.end, !dbg !897

if.then:                                          ; preds = %entry
  br label %if.end630, !dbg !898

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !899
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !900
  %2 = load i32, i32* %transformations, align 4, !dbg !901
  %or = or i32 %2, 64, !dbg !901
  store i32 %or, i32* %transformations, align 4, !dbg !901
  %3 = load i32, i32* %full_quantize.addr, align 4, !dbg !902
  %tobool = icmp ne i32 %3, 0, !dbg !902
  br i1 %tobool, label %if.end8, label %if.then1, !dbg !904

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !905, metadata !DIExpression()), !dbg !907
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !908
  %5 = load i32, i32* %num_palette.addr, align 4, !dbg !909
  %conv = sext i32 %5 to i64, !dbg !909
  %mul = mul i64 %conv, 1, !dbg !910
  %conv2 = trunc i64 %mul to i32, !dbg !911
  %conv3 = zext i32 %conv2 to i64, !dbg !911
  %call = call noalias i8* @png_malloc(%struct.png_struct_def* %4, i64 %conv3), !dbg !912
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !913
  %quantize_index = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 105, !dbg !914
  store i8* %call, i8** %quantize_index, align 8, !dbg !915
  store i32 0, i32* %i, align 4, !dbg !916
  br label %for.cond, !dbg !918

for.cond:                                         ; preds = %for.inc, %if.then1
  %7 = load i32, i32* %i, align 4, !dbg !919
  %8 = load i32, i32* %num_palette.addr, align 4, !dbg !921
  %cmp4 = icmp slt i32 %7, %8, !dbg !922
  br i1 %cmp4, label %for.body, label %for.end, !dbg !923

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !924
  %conv6 = trunc i32 %9 to i8, !dbg !925
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !926
  %quantize_index7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 105, !dbg !927
  %11 = load i8*, i8** %quantize_index7, align 8, !dbg !927
  %12 = load i32, i32* %i, align 4, !dbg !928
  %idxprom = sext i32 %12 to i64, !dbg !926
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom, !dbg !926
  store i8 %conv6, i8* %arrayidx, align 1, !dbg !929
  br label %for.inc, !dbg !926

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !930
  %inc = add nsw i32 %13, 1, !dbg !930
  store i32 %inc, i32* %i, align 4, !dbg !930
  br label %for.cond, !dbg !931, !llvm.loop !932

for.end:                                          ; preds = %for.cond
  br label %if.end8, !dbg !934

if.end8:                                          ; preds = %for.end, %if.end
  %14 = load i32, i32* %num_palette.addr, align 4, !dbg !935
  %15 = load i32, i32* %maximum_colors.addr, align 4, !dbg !937
  %cmp9 = icmp sgt i32 %14, %15, !dbg !938
  br i1 %cmp9, label %if.then11, label %if.end512, !dbg !939

if.then11:                                        ; preds = %if.end8
  %16 = load i16*, i16** %histogram.addr, align 8, !dbg !940
  %cmp12 = icmp ne i16* %16, null, !dbg !943
  br i1 %cmp12, label %if.then14, label %if.else244, !dbg !944

if.then14:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %i15, metadata !945, metadata !DIExpression()), !dbg !947
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !948
  %18 = load i32, i32* %num_palette.addr, align 4, !dbg !949
  %conv16 = sext i32 %18 to i64, !dbg !949
  %mul17 = mul i64 %conv16, 1, !dbg !950
  %conv18 = trunc i64 %mul17 to i32, !dbg !951
  %conv19 = zext i32 %conv18 to i64, !dbg !951
  %call20 = call noalias i8* @png_malloc(%struct.png_struct_def* %17, i64 %conv19), !dbg !952
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !953
  %quantize_sort = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 131, !dbg !954
  store i8* %call20, i8** %quantize_sort, align 8, !dbg !955
  store i32 0, i32* %i15, align 4, !dbg !956
  br label %for.cond21, !dbg !958

for.cond21:                                       ; preds = %for.inc29, %if.then14
  %20 = load i32, i32* %i15, align 4, !dbg !959
  %21 = load i32, i32* %num_palette.addr, align 4, !dbg !961
  %cmp22 = icmp slt i32 %20, %21, !dbg !962
  br i1 %cmp22, label %for.body24, label %for.end31, !dbg !963

for.body24:                                       ; preds = %for.cond21
  %22 = load i32, i32* %i15, align 4, !dbg !964
  %conv25 = trunc i32 %22 to i8, !dbg !965
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !966
  %quantize_sort26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 131, !dbg !967
  %24 = load i8*, i8** %quantize_sort26, align 8, !dbg !967
  %25 = load i32, i32* %i15, align 4, !dbg !968
  %idxprom27 = sext i32 %25 to i64, !dbg !966
  %arrayidx28 = getelementptr inbounds i8, i8* %24, i64 %idxprom27, !dbg !966
  store i8 %conv25, i8* %arrayidx28, align 1, !dbg !969
  br label %for.inc29, !dbg !966

for.inc29:                                        ; preds = %for.body24
  %26 = load i32, i32* %i15, align 4, !dbg !970
  %inc30 = add nsw i32 %26, 1, !dbg !970
  store i32 %inc30, i32* %i15, align 4, !dbg !970
  br label %for.cond21, !dbg !971, !llvm.loop !972

for.end31:                                        ; preds = %for.cond21
  %27 = load i32, i32* %num_palette.addr, align 4, !dbg !974
  %sub = sub nsw i32 %27, 1, !dbg !976
  store i32 %sub, i32* %i15, align 4, !dbg !977
  br label %for.cond32, !dbg !978

for.cond32:                                       ; preds = %for.inc76, %for.end31
  %28 = load i32, i32* %i15, align 4, !dbg !979
  %29 = load i32, i32* %maximum_colors.addr, align 4, !dbg !981
  %cmp33 = icmp sge i32 %28, %29, !dbg !982
  br i1 %cmp33, label %for.body35, label %for.end77, !dbg !983

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %done, metadata !984, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata i32* %j, metadata !987, metadata !DIExpression()), !dbg !988
  store i32 1, i32* %done, align 4, !dbg !989
  store i32 0, i32* %j, align 4, !dbg !990
  br label %for.cond36, !dbg !992

for.cond36:                                       ; preds = %for.inc70, %for.body35
  %30 = load i32, i32* %j, align 4, !dbg !993
  %31 = load i32, i32* %i15, align 4, !dbg !995
  %cmp37 = icmp slt i32 %30, %31, !dbg !996
  br i1 %cmp37, label %for.body39, label %for.end72, !dbg !997

for.body39:                                       ; preds = %for.cond36
  %32 = load i16*, i16** %histogram.addr, align 8, !dbg !998
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1001
  %quantize_sort40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 131, !dbg !1002
  %34 = load i8*, i8** %quantize_sort40, align 8, !dbg !1002
  %35 = load i32, i32* %j, align 4, !dbg !1003
  %idxprom41 = sext i32 %35 to i64, !dbg !1001
  %arrayidx42 = getelementptr inbounds i8, i8* %34, i64 %idxprom41, !dbg !1001
  %36 = load i8, i8* %arrayidx42, align 1, !dbg !1001
  %idxprom43 = zext i8 %36 to i64, !dbg !998
  %arrayidx44 = getelementptr inbounds i16, i16* %32, i64 %idxprom43, !dbg !998
  %37 = load i16, i16* %arrayidx44, align 2, !dbg !998
  %conv45 = zext i16 %37 to i32, !dbg !998
  %38 = load i16*, i16** %histogram.addr, align 8, !dbg !1004
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1005
  %quantize_sort46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 131, !dbg !1006
  %40 = load i8*, i8** %quantize_sort46, align 8, !dbg !1006
  %41 = load i32, i32* %j, align 4, !dbg !1007
  %add = add nsw i32 %41, 1, !dbg !1008
  %idxprom47 = sext i32 %add to i64, !dbg !1005
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom47, !dbg !1005
  %42 = load i8, i8* %arrayidx48, align 1, !dbg !1005
  %idxprom49 = zext i8 %42 to i64, !dbg !1004
  %arrayidx50 = getelementptr inbounds i16, i16* %38, i64 %idxprom49, !dbg !1004
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !1004
  %conv51 = zext i16 %43 to i32, !dbg !1004
  %cmp52 = icmp slt i32 %conv45, %conv51, !dbg !1009
  br i1 %cmp52, label %if.then54, label %if.end69, !dbg !1010

if.then54:                                        ; preds = %for.body39
  call void @llvm.dbg.declare(metadata i8* %t, metadata !1011, metadata !DIExpression()), !dbg !1013
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1014
  %quantize_sort55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 131, !dbg !1015
  %45 = load i8*, i8** %quantize_sort55, align 8, !dbg !1015
  %46 = load i32, i32* %j, align 4, !dbg !1016
  %idxprom56 = sext i32 %46 to i64, !dbg !1014
  %arrayidx57 = getelementptr inbounds i8, i8* %45, i64 %idxprom56, !dbg !1014
  %47 = load i8, i8* %arrayidx57, align 1, !dbg !1014
  store i8 %47, i8* %t, align 1, !dbg !1017
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1018
  %quantize_sort58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 131, !dbg !1019
  %49 = load i8*, i8** %quantize_sort58, align 8, !dbg !1019
  %50 = load i32, i32* %j, align 4, !dbg !1020
  %add59 = add nsw i32 %50, 1, !dbg !1021
  %idxprom60 = sext i32 %add59 to i64, !dbg !1018
  %arrayidx61 = getelementptr inbounds i8, i8* %49, i64 %idxprom60, !dbg !1018
  %51 = load i8, i8* %arrayidx61, align 1, !dbg !1018
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1022
  %quantize_sort62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 131, !dbg !1023
  %53 = load i8*, i8** %quantize_sort62, align 8, !dbg !1023
  %54 = load i32, i32* %j, align 4, !dbg !1024
  %idxprom63 = sext i32 %54 to i64, !dbg !1022
  %arrayidx64 = getelementptr inbounds i8, i8* %53, i64 %idxprom63, !dbg !1022
  store i8 %51, i8* %arrayidx64, align 1, !dbg !1025
  %55 = load i8, i8* %t, align 1, !dbg !1026
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1027
  %quantize_sort65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 131, !dbg !1028
  %57 = load i8*, i8** %quantize_sort65, align 8, !dbg !1028
  %58 = load i32, i32* %j, align 4, !dbg !1029
  %add66 = add nsw i32 %58, 1, !dbg !1030
  %idxprom67 = sext i32 %add66 to i64, !dbg !1027
  %arrayidx68 = getelementptr inbounds i8, i8* %57, i64 %idxprom67, !dbg !1027
  store i8 %55, i8* %arrayidx68, align 1, !dbg !1031
  store i32 0, i32* %done, align 4, !dbg !1032
  br label %if.end69, !dbg !1033

if.end69:                                         ; preds = %if.then54, %for.body39
  br label %for.inc70, !dbg !1034

for.inc70:                                        ; preds = %if.end69
  %59 = load i32, i32* %j, align 4, !dbg !1035
  %inc71 = add nsw i32 %59, 1, !dbg !1035
  store i32 %inc71, i32* %j, align 4, !dbg !1035
  br label %for.cond36, !dbg !1036, !llvm.loop !1037

for.end72:                                        ; preds = %for.cond36
  %60 = load i32, i32* %done, align 4, !dbg !1039
  %tobool73 = icmp ne i32 %60, 0, !dbg !1039
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !1041

if.then74:                                        ; preds = %for.end72
  br label %for.end77, !dbg !1042

if.end75:                                         ; preds = %for.end72
  br label %for.inc76, !dbg !1043

for.inc76:                                        ; preds = %if.end75
  %61 = load i32, i32* %i15, align 4, !dbg !1044
  %dec = add nsw i32 %61, -1, !dbg !1044
  store i32 %dec, i32* %i15, align 4, !dbg !1044
  br label %for.cond32, !dbg !1045, !llvm.loop !1046

for.end77:                                        ; preds = %if.then74, %for.cond32
  %62 = load i32, i32* %full_quantize.addr, align 4, !dbg !1048
  %tobool78 = icmp ne i32 %62, 0, !dbg !1048
  br i1 %tobool78, label %if.then79, label %if.else, !dbg !1050

if.then79:                                        ; preds = %for.end77
  call void @llvm.dbg.declare(metadata i32* %j80, metadata !1051, metadata !DIExpression()), !dbg !1053
  %63 = load i32, i32* %num_palette.addr, align 4, !dbg !1054
  store i32 %63, i32* %j80, align 4, !dbg !1053
  store i32 0, i32* %i15, align 4, !dbg !1055
  br label %for.cond81, !dbg !1057

for.cond81:                                       ; preds = %for.inc104, %if.then79
  %64 = load i32, i32* %i15, align 4, !dbg !1058
  %65 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1060
  %cmp82 = icmp slt i32 %64, %65, !dbg !1061
  br i1 %cmp82, label %for.body84, label %for.end106, !dbg !1062

for.body84:                                       ; preds = %for.cond81
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1063
  %quantize_sort85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 131, !dbg !1066
  %67 = load i8*, i8** %quantize_sort85, align 8, !dbg !1066
  %68 = load i32, i32* %i15, align 4, !dbg !1067
  %idxprom86 = sext i32 %68 to i64, !dbg !1063
  %arrayidx87 = getelementptr inbounds i8, i8* %67, i64 %idxprom86, !dbg !1063
  %69 = load i8, i8* %arrayidx87, align 1, !dbg !1063
  %conv88 = zext i8 %69 to i32, !dbg !1068
  %70 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1069
  %cmp89 = icmp sge i32 %conv88, %70, !dbg !1070
  br i1 %cmp89, label %if.then91, label %if.end103, !dbg !1071

if.then91:                                        ; preds = %for.body84
  br label %do.body, !dbg !1072

do.body:                                          ; preds = %do.cond, %if.then91
  %71 = load i32, i32* %j80, align 4, !dbg !1074
  %dec92 = add nsw i32 %71, -1, !dbg !1074
  store i32 %dec92, i32* %j80, align 4, !dbg !1074
  br label %do.cond, !dbg !1075

do.cond:                                          ; preds = %do.body
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1076
  %quantize_sort93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 131, !dbg !1077
  %73 = load i8*, i8** %quantize_sort93, align 8, !dbg !1077
  %74 = load i32, i32* %j80, align 4, !dbg !1078
  %idxprom94 = sext i32 %74 to i64, !dbg !1076
  %arrayidx95 = getelementptr inbounds i8, i8* %73, i64 %idxprom94, !dbg !1076
  %75 = load i8, i8* %arrayidx95, align 1, !dbg !1076
  %conv96 = zext i8 %75 to i32, !dbg !1079
  %76 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1080
  %cmp97 = icmp sge i32 %conv96, %76, !dbg !1081
  br i1 %cmp97, label %do.body, label %do.end, !dbg !1075, !llvm.loop !1082

do.end:                                           ; preds = %do.cond
  %77 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1084
  %78 = load i32, i32* %i15, align 4, !dbg !1085
  %idxprom99 = sext i32 %78 to i64, !dbg !1084
  %arrayidx100 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %77, i64 %idxprom99, !dbg !1084
  %79 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1086
  %80 = load i32, i32* %j80, align 4, !dbg !1087
  %idxprom101 = sext i32 %80 to i64, !dbg !1086
  %arrayidx102 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %79, i64 %idxprom101, !dbg !1086
  %81 = bitcast %struct.png_color_struct* %arrayidx100 to i8*, !dbg !1086
  %82 = bitcast %struct.png_color_struct* %arrayidx102 to i8*, !dbg !1086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %82, i64 3, i1 false), !dbg !1086
  br label %if.end103, !dbg !1088

if.end103:                                        ; preds = %do.end, %for.body84
  br label %for.inc104, !dbg !1089

for.inc104:                                       ; preds = %if.end103
  %83 = load i32, i32* %i15, align 4, !dbg !1090
  %inc105 = add nsw i32 %83, 1, !dbg !1090
  store i32 %inc105, i32* %i15, align 4, !dbg !1090
  br label %for.cond81, !dbg !1091, !llvm.loop !1092

for.end106:                                       ; preds = %for.cond81
  br label %if.end241, !dbg !1094

if.else:                                          ; preds = %for.end77
  call void @llvm.dbg.declare(metadata i32* %j107, metadata !1095, metadata !DIExpression()), !dbg !1097
  %84 = load i32, i32* %num_palette.addr, align 4, !dbg !1098
  store i32 %84, i32* %j107, align 4, !dbg !1097
  store i32 0, i32* %i15, align 4, !dbg !1099
  br label %for.cond108, !dbg !1101

for.cond108:                                      ; preds = %for.inc146, %if.else
  %85 = load i32, i32* %i15, align 4, !dbg !1102
  %86 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1104
  %cmp109 = icmp slt i32 %85, %86, !dbg !1105
  br i1 %cmp109, label %for.body111, label %for.end148, !dbg !1106

for.body111:                                      ; preds = %for.cond108
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1107
  %quantize_sort112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 131, !dbg !1110
  %88 = load i8*, i8** %quantize_sort112, align 8, !dbg !1110
  %89 = load i32, i32* %i15, align 4, !dbg !1111
  %idxprom113 = sext i32 %89 to i64, !dbg !1107
  %arrayidx114 = getelementptr inbounds i8, i8* %88, i64 %idxprom113, !dbg !1107
  %90 = load i8, i8* %arrayidx114, align 1, !dbg !1107
  %conv115 = zext i8 %90 to i32, !dbg !1112
  %91 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1113
  %cmp116 = icmp sge i32 %conv115, %91, !dbg !1114
  br i1 %cmp116, label %if.then118, label %if.end145, !dbg !1115

if.then118:                                       ; preds = %for.body111
  call void @llvm.dbg.declare(metadata %struct.png_color_struct* %tmp_color, metadata !1116, metadata !DIExpression()), !dbg !1118
  br label %do.body119, !dbg !1119

do.body119:                                       ; preds = %do.cond121, %if.then118
  %92 = load i32, i32* %j107, align 4, !dbg !1120
  %dec120 = add nsw i32 %92, -1, !dbg !1120
  store i32 %dec120, i32* %j107, align 4, !dbg !1120
  br label %do.cond121, !dbg !1121

do.cond121:                                       ; preds = %do.body119
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1122
  %quantize_sort122 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %93, i32 0, i32 131, !dbg !1123
  %94 = load i8*, i8** %quantize_sort122, align 8, !dbg !1123
  %95 = load i32, i32* %j107, align 4, !dbg !1124
  %idxprom123 = sext i32 %95 to i64, !dbg !1122
  %arrayidx124 = getelementptr inbounds i8, i8* %94, i64 %idxprom123, !dbg !1122
  %96 = load i8, i8* %arrayidx124, align 1, !dbg !1122
  %conv125 = zext i8 %96 to i32, !dbg !1125
  %97 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1126
  %cmp126 = icmp sge i32 %conv125, %97, !dbg !1127
  br i1 %cmp126, label %do.body119, label %do.end128, !dbg !1121, !llvm.loop !1128

do.end128:                                        ; preds = %do.cond121
  %98 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1130
  %99 = load i32, i32* %j107, align 4, !dbg !1131
  %idxprom129 = sext i32 %99 to i64, !dbg !1130
  %arrayidx130 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %98, i64 %idxprom129, !dbg !1130
  %100 = bitcast %struct.png_color_struct* %tmp_color to i8*, !dbg !1130
  %101 = bitcast %struct.png_color_struct* %arrayidx130 to i8*, !dbg !1130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %101, i64 3, i1 false), !dbg !1130
  %102 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1132
  %103 = load i32, i32* %j107, align 4, !dbg !1133
  %idxprom131 = sext i32 %103 to i64, !dbg !1132
  %arrayidx132 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %102, i64 %idxprom131, !dbg !1132
  %104 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1134
  %105 = load i32, i32* %i15, align 4, !dbg !1135
  %idxprom133 = sext i32 %105 to i64, !dbg !1134
  %arrayidx134 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %104, i64 %idxprom133, !dbg !1134
  %106 = bitcast %struct.png_color_struct* %arrayidx132 to i8*, !dbg !1134
  %107 = bitcast %struct.png_color_struct* %arrayidx134 to i8*, !dbg !1134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %107, i64 3, i1 false), !dbg !1134
  %108 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1136
  %109 = load i32, i32* %i15, align 4, !dbg !1137
  %idxprom135 = sext i32 %109 to i64, !dbg !1136
  %arrayidx136 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %108, i64 %idxprom135, !dbg !1136
  %110 = bitcast %struct.png_color_struct* %arrayidx136 to i8*, !dbg !1138
  %111 = bitcast %struct.png_color_struct* %tmp_color to i8*, !dbg !1138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %111, i64 3, i1 false), !dbg !1138
  %112 = load i32, i32* %i15, align 4, !dbg !1139
  %conv137 = trunc i32 %112 to i8, !dbg !1140
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1141
  %quantize_index138 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 105, !dbg !1142
  %114 = load i8*, i8** %quantize_index138, align 8, !dbg !1142
  %115 = load i32, i32* %j107, align 4, !dbg !1143
  %idxprom139 = sext i32 %115 to i64, !dbg !1141
  %arrayidx140 = getelementptr inbounds i8, i8* %114, i64 %idxprom139, !dbg !1141
  store i8 %conv137, i8* %arrayidx140, align 1, !dbg !1144
  %116 = load i32, i32* %j107, align 4, !dbg !1145
  %conv141 = trunc i32 %116 to i8, !dbg !1146
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1147
  %quantize_index142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 105, !dbg !1148
  %118 = load i8*, i8** %quantize_index142, align 8, !dbg !1148
  %119 = load i32, i32* %i15, align 4, !dbg !1149
  %idxprom143 = sext i32 %119 to i64, !dbg !1147
  %arrayidx144 = getelementptr inbounds i8, i8* %118, i64 %idxprom143, !dbg !1147
  store i8 %conv141, i8* %arrayidx144, align 1, !dbg !1150
  br label %if.end145, !dbg !1151

if.end145:                                        ; preds = %do.end128, %for.body111
  br label %for.inc146, !dbg !1152

for.inc146:                                       ; preds = %if.end145
  %120 = load i32, i32* %i15, align 4, !dbg !1153
  %inc147 = add nsw i32 %120, 1, !dbg !1153
  store i32 %inc147, i32* %i15, align 4, !dbg !1153
  br label %for.cond108, !dbg !1154, !llvm.loop !1155

for.end148:                                       ; preds = %for.cond108
  store i32 0, i32* %i15, align 4, !dbg !1157
  br label %for.cond149, !dbg !1159

for.cond149:                                      ; preds = %for.inc238, %for.end148
  %121 = load i32, i32* %i15, align 4, !dbg !1160
  %122 = load i32, i32* %num_palette.addr, align 4, !dbg !1162
  %cmp150 = icmp slt i32 %121, %122, !dbg !1163
  br i1 %cmp150, label %for.body152, label %for.end240, !dbg !1164

for.body152:                                      ; preds = %for.cond149
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1165
  %quantize_index153 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %123, i32 0, i32 105, !dbg !1168
  %124 = load i8*, i8** %quantize_index153, align 8, !dbg !1168
  %125 = load i32, i32* %i15, align 4, !dbg !1169
  %idxprom154 = sext i32 %125 to i64, !dbg !1165
  %arrayidx155 = getelementptr inbounds i8, i8* %124, i64 %idxprom154, !dbg !1165
  %126 = load i8, i8* %arrayidx155, align 1, !dbg !1165
  %conv156 = zext i8 %126 to i32, !dbg !1170
  %127 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1171
  %cmp157 = icmp sge i32 %conv156, %127, !dbg !1172
  br i1 %cmp157, label %if.then159, label %if.end237, !dbg !1173

if.then159:                                       ; preds = %for.body152
  call void @llvm.dbg.declare(metadata i32* %min_d, metadata !1174, metadata !DIExpression()), !dbg !1176
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1177, metadata !DIExpression()), !dbg !1178
  call void @llvm.dbg.declare(metadata i32* %min_k, metadata !1179, metadata !DIExpression()), !dbg !1180
  call void @llvm.dbg.declare(metadata i32* %d_index, metadata !1181, metadata !DIExpression()), !dbg !1182
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1183
  %quantize_index160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 105, !dbg !1184
  %129 = load i8*, i8** %quantize_index160, align 8, !dbg !1184
  %130 = load i32, i32* %i15, align 4, !dbg !1185
  %idxprom161 = sext i32 %130 to i64, !dbg !1183
  %arrayidx162 = getelementptr inbounds i8, i8* %129, i64 %idxprom161, !dbg !1183
  %131 = load i8, i8* %arrayidx162, align 1, !dbg !1183
  %conv163 = zext i8 %131 to i32, !dbg !1183
  store i32 %conv163, i32* %d_index, align 4, !dbg !1186
  %132 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %133 = load i32, i32* %d_index, align 4, !dbg !1187
  %idxprom164 = sext i32 %133 to i64, !dbg !1187
  %arrayidx165 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %132, i64 %idxprom164, !dbg !1187
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx165, i32 0, i32 0, !dbg !1187
  %134 = load i8, i8* %red, align 1, !dbg !1187
  %conv166 = zext i8 %134 to i32, !dbg !1187
  %135 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %arrayidx167 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %135, i64 0, !dbg !1187
  %red168 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx167, i32 0, i32 0, !dbg !1187
  %136 = load i8, i8* %red168, align 1, !dbg !1187
  %conv169 = zext i8 %136 to i32, !dbg !1187
  %sub170 = sub nsw i32 %conv166, %conv169, !dbg !1187
  %call171 = call i32 @abs(i32 %sub170) #7, !dbg !1187
  %137 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %138 = load i32, i32* %d_index, align 4, !dbg !1187
  %idxprom172 = sext i32 %138 to i64, !dbg !1187
  %arrayidx173 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %137, i64 %idxprom172, !dbg !1187
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx173, i32 0, i32 1, !dbg !1187
  %139 = load i8, i8* %green, align 1, !dbg !1187
  %conv174 = zext i8 %139 to i32, !dbg !1187
  %140 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %arrayidx175 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %140, i64 0, !dbg !1187
  %green176 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx175, i32 0, i32 1, !dbg !1187
  %141 = load i8, i8* %green176, align 1, !dbg !1187
  %conv177 = zext i8 %141 to i32, !dbg !1187
  %sub178 = sub nsw i32 %conv174, %conv177, !dbg !1187
  %call179 = call i32 @abs(i32 %sub178) #7, !dbg !1187
  %add180 = add nsw i32 %call171, %call179, !dbg !1187
  %142 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %143 = load i32, i32* %d_index, align 4, !dbg !1187
  %idxprom181 = sext i32 %143 to i64, !dbg !1187
  %arrayidx182 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %142, i64 %idxprom181, !dbg !1187
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx182, i32 0, i32 2, !dbg !1187
  %144 = load i8, i8* %blue, align 1, !dbg !1187
  %conv183 = zext i8 %144 to i32, !dbg !1187
  %145 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1187
  %arrayidx184 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %145, i64 0, !dbg !1187
  %blue185 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx184, i32 0, i32 2, !dbg !1187
  %146 = load i8, i8* %blue185, align 1, !dbg !1187
  %conv186 = zext i8 %146 to i32, !dbg !1187
  %sub187 = sub nsw i32 %conv183, %conv186, !dbg !1187
  %call188 = call i32 @abs(i32 %sub187) #7, !dbg !1187
  %add189 = add nsw i32 %add180, %call188, !dbg !1187
  store i32 %add189, i32* %min_d, align 4, !dbg !1188
  store i32 1, i32* %k, align 4, !dbg !1189
  store i32 0, i32* %min_k, align 4, !dbg !1191
  br label %for.cond190, !dbg !1192

for.cond190:                                      ; preds = %for.inc230, %if.then159
  %147 = load i32, i32* %k, align 4, !dbg !1193
  %148 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1195
  %cmp191 = icmp slt i32 %147, %148, !dbg !1196
  br i1 %cmp191, label %for.body193, label %for.end232, !dbg !1197

for.body193:                                      ; preds = %for.cond190
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1198, metadata !DIExpression()), !dbg !1200
  %149 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %150 = load i32, i32* %d_index, align 4, !dbg !1201
  %idxprom194 = sext i32 %150 to i64, !dbg !1201
  %arrayidx195 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %149, i64 %idxprom194, !dbg !1201
  %red196 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx195, i32 0, i32 0, !dbg !1201
  %151 = load i8, i8* %red196, align 1, !dbg !1201
  %conv197 = zext i8 %151 to i32, !dbg !1201
  %152 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %153 = load i32, i32* %k, align 4, !dbg !1201
  %idxprom198 = sext i32 %153 to i64, !dbg !1201
  %arrayidx199 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %152, i64 %idxprom198, !dbg !1201
  %red200 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx199, i32 0, i32 0, !dbg !1201
  %154 = load i8, i8* %red200, align 1, !dbg !1201
  %conv201 = zext i8 %154 to i32, !dbg !1201
  %sub202 = sub nsw i32 %conv197, %conv201, !dbg !1201
  %call203 = call i32 @abs(i32 %sub202) #7, !dbg !1201
  %155 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %156 = load i32, i32* %d_index, align 4, !dbg !1201
  %idxprom204 = sext i32 %156 to i64, !dbg !1201
  %arrayidx205 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %155, i64 %idxprom204, !dbg !1201
  %green206 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx205, i32 0, i32 1, !dbg !1201
  %157 = load i8, i8* %green206, align 1, !dbg !1201
  %conv207 = zext i8 %157 to i32, !dbg !1201
  %158 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %159 = load i32, i32* %k, align 4, !dbg !1201
  %idxprom208 = sext i32 %159 to i64, !dbg !1201
  %arrayidx209 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %158, i64 %idxprom208, !dbg !1201
  %green210 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx209, i32 0, i32 1, !dbg !1201
  %160 = load i8, i8* %green210, align 1, !dbg !1201
  %conv211 = zext i8 %160 to i32, !dbg !1201
  %sub212 = sub nsw i32 %conv207, %conv211, !dbg !1201
  %call213 = call i32 @abs(i32 %sub212) #7, !dbg !1201
  %add214 = add nsw i32 %call203, %call213, !dbg !1201
  %161 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %162 = load i32, i32* %d_index, align 4, !dbg !1201
  %idxprom215 = sext i32 %162 to i64, !dbg !1201
  %arrayidx216 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %161, i64 %idxprom215, !dbg !1201
  %blue217 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx216, i32 0, i32 2, !dbg !1201
  %163 = load i8, i8* %blue217, align 1, !dbg !1201
  %conv218 = zext i8 %163 to i32, !dbg !1201
  %164 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1201
  %165 = load i32, i32* %k, align 4, !dbg !1201
  %idxprom219 = sext i32 %165 to i64, !dbg !1201
  %arrayidx220 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %164, i64 %idxprom219, !dbg !1201
  %blue221 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx220, i32 0, i32 2, !dbg !1201
  %166 = load i8, i8* %blue221, align 1, !dbg !1201
  %conv222 = zext i8 %166 to i32, !dbg !1201
  %sub223 = sub nsw i32 %conv218, %conv222, !dbg !1201
  %call224 = call i32 @abs(i32 %sub223) #7, !dbg !1201
  %add225 = add nsw i32 %add214, %call224, !dbg !1201
  store i32 %add225, i32* %d, align 4, !dbg !1202
  %167 = load i32, i32* %d, align 4, !dbg !1203
  %168 = load i32, i32* %min_d, align 4, !dbg !1205
  %cmp226 = icmp slt i32 %167, %168, !dbg !1206
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !1207

if.then228:                                       ; preds = %for.body193
  %169 = load i32, i32* %d, align 4, !dbg !1208
  store i32 %169, i32* %min_d, align 4, !dbg !1210
  %170 = load i32, i32* %k, align 4, !dbg !1211
  store i32 %170, i32* %min_k, align 4, !dbg !1212
  br label %if.end229, !dbg !1213

if.end229:                                        ; preds = %if.then228, %for.body193
  br label %for.inc230, !dbg !1214

for.inc230:                                       ; preds = %if.end229
  %171 = load i32, i32* %k, align 4, !dbg !1215
  %inc231 = add nsw i32 %171, 1, !dbg !1215
  store i32 %inc231, i32* %k, align 4, !dbg !1215
  br label %for.cond190, !dbg !1216, !llvm.loop !1217

for.end232:                                       ; preds = %for.cond190
  %172 = load i32, i32* %min_k, align 4, !dbg !1219
  %conv233 = trunc i32 %172 to i8, !dbg !1220
  %173 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1221
  %quantize_index234 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %173, i32 0, i32 105, !dbg !1222
  %174 = load i8*, i8** %quantize_index234, align 8, !dbg !1222
  %175 = load i32, i32* %i15, align 4, !dbg !1223
  %idxprom235 = sext i32 %175 to i64, !dbg !1221
  %arrayidx236 = getelementptr inbounds i8, i8* %174, i64 %idxprom235, !dbg !1221
  store i8 %conv233, i8* %arrayidx236, align 1, !dbg !1224
  br label %if.end237, !dbg !1225

if.end237:                                        ; preds = %for.end232, %for.body152
  br label %for.inc238, !dbg !1226

for.inc238:                                       ; preds = %if.end237
  %176 = load i32, i32* %i15, align 4, !dbg !1227
  %inc239 = add nsw i32 %176, 1, !dbg !1227
  store i32 %inc239, i32* %i15, align 4, !dbg !1227
  br label %for.cond149, !dbg !1228, !llvm.loop !1229

for.end240:                                       ; preds = %for.cond149
  br label %if.end241

if.end241:                                        ; preds = %for.end240, %for.end106
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1231
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1232
  %quantize_sort242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %178, i32 0, i32 131, !dbg !1233
  %179 = load i8*, i8** %quantize_sort242, align 8, !dbg !1233
  call void @png_free(%struct.png_struct_def* %177, i8* %179), !dbg !1234
  %180 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1235
  %quantize_sort243 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %180, i32 0, i32 131, !dbg !1236
  store i8* null, i8** %quantize_sort243, align 8, !dbg !1237
  br label %if.end511, !dbg !1238

if.else244:                                       ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %i245, metadata !1239, metadata !DIExpression()), !dbg !1241
  call void @llvm.dbg.declare(metadata i32* %max_d, metadata !1242, metadata !DIExpression()), !dbg !1243
  call void @llvm.dbg.declare(metadata i32* %num_new_palette, metadata !1244, metadata !DIExpression()), !dbg !1245
  call void @llvm.dbg.declare(metadata %struct.png_dsort_struct** %t246, metadata !1246, metadata !DIExpression()), !dbg !1247
  call void @llvm.dbg.declare(metadata %struct.png_dsort_struct*** %hash, metadata !1248, metadata !DIExpression()), !dbg !1249
  store %struct.png_dsort_struct* null, %struct.png_dsort_struct** %t246, align 8, !dbg !1250
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1251
  %182 = load i32, i32* %num_palette.addr, align 4, !dbg !1252
  %conv247 = sext i32 %182 to i64, !dbg !1252
  %mul248 = mul i64 %conv247, 1, !dbg !1253
  %conv249 = trunc i64 %mul248 to i32, !dbg !1254
  %conv250 = zext i32 %conv249 to i64, !dbg !1254
  %call251 = call noalias i8* @png_malloc(%struct.png_struct_def* %181, i64 %conv250), !dbg !1255
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1256
  %index_to_palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 132, !dbg !1257
  store i8* %call251, i8** %index_to_palette, align 8, !dbg !1258
  %184 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1259
  %185 = load i32, i32* %num_palette.addr, align 4, !dbg !1260
  %conv252 = sext i32 %185 to i64, !dbg !1260
  %mul253 = mul i64 %conv252, 1, !dbg !1261
  %conv254 = trunc i64 %mul253 to i32, !dbg !1262
  %conv255 = zext i32 %conv254 to i64, !dbg !1262
  %call256 = call noalias i8* @png_malloc(%struct.png_struct_def* %184, i64 %conv255), !dbg !1263
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1264
  %palette_to_index = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %186, i32 0, i32 133, !dbg !1265
  store i8* %call256, i8** %palette_to_index, align 8, !dbg !1266
  store i32 0, i32* %i245, align 4, !dbg !1267
  br label %for.cond257, !dbg !1269

for.cond257:                                      ; preds = %for.inc269, %if.else244
  %187 = load i32, i32* %i245, align 4, !dbg !1270
  %188 = load i32, i32* %num_palette.addr, align 4, !dbg !1272
  %cmp258 = icmp slt i32 %187, %188, !dbg !1273
  br i1 %cmp258, label %for.body260, label %for.end271, !dbg !1274

for.body260:                                      ; preds = %for.cond257
  %189 = load i32, i32* %i245, align 4, !dbg !1275
  %conv261 = trunc i32 %189 to i8, !dbg !1277
  %190 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1278
  %index_to_palette262 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %190, i32 0, i32 132, !dbg !1279
  %191 = load i8*, i8** %index_to_palette262, align 8, !dbg !1279
  %192 = load i32, i32* %i245, align 4, !dbg !1280
  %idxprom263 = sext i32 %192 to i64, !dbg !1278
  %arrayidx264 = getelementptr inbounds i8, i8* %191, i64 %idxprom263, !dbg !1278
  store i8 %conv261, i8* %arrayidx264, align 1, !dbg !1281
  %193 = load i32, i32* %i245, align 4, !dbg !1282
  %conv265 = trunc i32 %193 to i8, !dbg !1283
  %194 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1284
  %palette_to_index266 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %194, i32 0, i32 133, !dbg !1285
  %195 = load i8*, i8** %palette_to_index266, align 8, !dbg !1285
  %196 = load i32, i32* %i245, align 4, !dbg !1286
  %idxprom267 = sext i32 %196 to i64, !dbg !1284
  %arrayidx268 = getelementptr inbounds i8, i8* %195, i64 %idxprom267, !dbg !1284
  store i8 %conv265, i8* %arrayidx268, align 1, !dbg !1287
  br label %for.inc269, !dbg !1288

for.inc269:                                       ; preds = %for.body260
  %197 = load i32, i32* %i245, align 4, !dbg !1289
  %inc270 = add nsw i32 %197, 1, !dbg !1289
  store i32 %inc270, i32* %i245, align 4, !dbg !1289
  br label %for.cond257, !dbg !1290, !llvm.loop !1291

for.end271:                                       ; preds = %for.cond257
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1293
  %call272 = call noalias i8* @png_calloc(%struct.png_struct_def* %198, i64 6152), !dbg !1294
  %199 = bitcast i8* %call272 to %struct.png_dsort_struct**, !dbg !1295
  store %struct.png_dsort_struct** %199, %struct.png_dsort_struct*** %hash, align 8, !dbg !1296
  %200 = load i32, i32* %num_palette.addr, align 4, !dbg !1297
  store i32 %200, i32* %num_new_palette, align 4, !dbg !1298
  store i32 96, i32* %max_d, align 4, !dbg !1299
  br label %while.cond, !dbg !1300

while.cond:                                       ; preds = %for.end504, %for.end271
  %201 = load i32, i32* %num_new_palette, align 4, !dbg !1301
  %202 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1302
  %cmp273 = icmp sgt i32 %201, %202, !dbg !1303
  br i1 %cmp273, label %while.body, label %while.end506, !dbg !1300

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %i245, align 4, !dbg !1304
  br label %for.cond275, !dbg !1307

for.cond275:                                      ; preds = %for.inc341, %while.body
  %203 = load i32, i32* %i245, align 4, !dbg !1308
  %204 = load i32, i32* %num_new_palette, align 4, !dbg !1310
  %sub276 = sub nsw i32 %204, 1, !dbg !1311
  %cmp277 = icmp slt i32 %203, %sub276, !dbg !1312
  br i1 %cmp277, label %for.body279, label %for.end343, !dbg !1313

for.body279:                                      ; preds = %for.cond275
  call void @llvm.dbg.declare(metadata i32* %j280, metadata !1314, metadata !DIExpression()), !dbg !1316
  %205 = load i32, i32* %i245, align 4, !dbg !1317
  %add281 = add nsw i32 %205, 1, !dbg !1319
  store i32 %add281, i32* %j280, align 4, !dbg !1320
  br label %for.cond282, !dbg !1321

for.cond282:                                      ; preds = %for.inc334, %for.body279
  %206 = load i32, i32* %j280, align 4, !dbg !1322
  %207 = load i32, i32* %num_new_palette, align 4, !dbg !1324
  %cmp283 = icmp slt i32 %206, %207, !dbg !1325
  br i1 %cmp283, label %for.body285, label %for.end336, !dbg !1326

for.body285:                                      ; preds = %for.cond282
  call void @llvm.dbg.declare(metadata i32* %d286, metadata !1327, metadata !DIExpression()), !dbg !1329
  %208 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %209 = load i32, i32* %i245, align 4, !dbg !1330
  %idxprom287 = sext i32 %209 to i64, !dbg !1330
  %arrayidx288 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %208, i64 %idxprom287, !dbg !1330
  %red289 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx288, i32 0, i32 0, !dbg !1330
  %210 = load i8, i8* %red289, align 1, !dbg !1330
  %conv290 = zext i8 %210 to i32, !dbg !1330
  %211 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %212 = load i32, i32* %j280, align 4, !dbg !1330
  %idxprom291 = sext i32 %212 to i64, !dbg !1330
  %arrayidx292 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %211, i64 %idxprom291, !dbg !1330
  %red293 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx292, i32 0, i32 0, !dbg !1330
  %213 = load i8, i8* %red293, align 1, !dbg !1330
  %conv294 = zext i8 %213 to i32, !dbg !1330
  %sub295 = sub nsw i32 %conv290, %conv294, !dbg !1330
  %call296 = call i32 @abs(i32 %sub295) #7, !dbg !1330
  %214 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %215 = load i32, i32* %i245, align 4, !dbg !1330
  %idxprom297 = sext i32 %215 to i64, !dbg !1330
  %arrayidx298 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %214, i64 %idxprom297, !dbg !1330
  %green299 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx298, i32 0, i32 1, !dbg !1330
  %216 = load i8, i8* %green299, align 1, !dbg !1330
  %conv300 = zext i8 %216 to i32, !dbg !1330
  %217 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %218 = load i32, i32* %j280, align 4, !dbg !1330
  %idxprom301 = sext i32 %218 to i64, !dbg !1330
  %arrayidx302 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %217, i64 %idxprom301, !dbg !1330
  %green303 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx302, i32 0, i32 1, !dbg !1330
  %219 = load i8, i8* %green303, align 1, !dbg !1330
  %conv304 = zext i8 %219 to i32, !dbg !1330
  %sub305 = sub nsw i32 %conv300, %conv304, !dbg !1330
  %call306 = call i32 @abs(i32 %sub305) #7, !dbg !1330
  %add307 = add nsw i32 %call296, %call306, !dbg !1330
  %220 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %221 = load i32, i32* %i245, align 4, !dbg !1330
  %idxprom308 = sext i32 %221 to i64, !dbg !1330
  %arrayidx309 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %220, i64 %idxprom308, !dbg !1330
  %blue310 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx309, i32 0, i32 2, !dbg !1330
  %222 = load i8, i8* %blue310, align 1, !dbg !1330
  %conv311 = zext i8 %222 to i32, !dbg !1330
  %223 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1330
  %224 = load i32, i32* %j280, align 4, !dbg !1330
  %idxprom312 = sext i32 %224 to i64, !dbg !1330
  %arrayidx313 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %223, i64 %idxprom312, !dbg !1330
  %blue314 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx313, i32 0, i32 2, !dbg !1330
  %225 = load i8, i8* %blue314, align 1, !dbg !1330
  %conv315 = zext i8 %225 to i32, !dbg !1330
  %sub316 = sub nsw i32 %conv311, %conv315, !dbg !1330
  %call317 = call i32 @abs(i32 %sub316) #7, !dbg !1330
  %add318 = add nsw i32 %add307, %call317, !dbg !1330
  store i32 %add318, i32* %d286, align 4, !dbg !1331
  %226 = load i32, i32* %d286, align 4, !dbg !1332
  %227 = load i32, i32* %max_d, align 4, !dbg !1334
  %cmp319 = icmp sle i32 %226, %227, !dbg !1335
  br i1 %cmp319, label %if.then321, label %if.end333, !dbg !1336

if.then321:                                       ; preds = %for.body285
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1337
  %call322 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %228, i64 16), !dbg !1339
  %229 = bitcast i8* %call322 to %struct.png_dsort_struct*, !dbg !1340
  store %struct.png_dsort_struct* %229, %struct.png_dsort_struct** %t246, align 8, !dbg !1341
  %230 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1342
  %cmp323 = icmp eq %struct.png_dsort_struct* %230, null, !dbg !1344
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !1345

if.then325:                                       ; preds = %if.then321
  br label %for.end336, !dbg !1346

if.end326:                                        ; preds = %if.then321
  %231 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1347
  %232 = load i32, i32* %d286, align 4, !dbg !1348
  %idxprom327 = sext i32 %232 to i64, !dbg !1347
  %arrayidx328 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %231, i64 %idxprom327, !dbg !1347
  %233 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %arrayidx328, align 8, !dbg !1347
  %234 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1349
  %next = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %234, i32 0, i32 0, !dbg !1350
  store %struct.png_dsort_struct* %233, %struct.png_dsort_struct** %next, align 8, !dbg !1351
  %235 = load i32, i32* %i245, align 4, !dbg !1352
  %conv329 = trunc i32 %235 to i8, !dbg !1353
  %236 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1354
  %left = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %236, i32 0, i32 1, !dbg !1355
  store i8 %conv329, i8* %left, align 8, !dbg !1356
  %237 = load i32, i32* %j280, align 4, !dbg !1357
  %conv330 = trunc i32 %237 to i8, !dbg !1358
  %238 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1359
  %right = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %238, i32 0, i32 2, !dbg !1360
  store i8 %conv330, i8* %right, align 1, !dbg !1361
  %239 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1362
  %240 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1363
  %241 = load i32, i32* %d286, align 4, !dbg !1364
  %idxprom331 = sext i32 %241 to i64, !dbg !1363
  %arrayidx332 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %240, i64 %idxprom331, !dbg !1363
  store %struct.png_dsort_struct* %239, %struct.png_dsort_struct** %arrayidx332, align 8, !dbg !1365
  br label %if.end333, !dbg !1366

if.end333:                                        ; preds = %if.end326, %for.body285
  br label %for.inc334, !dbg !1367

for.inc334:                                       ; preds = %if.end333
  %242 = load i32, i32* %j280, align 4, !dbg !1368
  %inc335 = add nsw i32 %242, 1, !dbg !1368
  store i32 %inc335, i32* %j280, align 4, !dbg !1368
  br label %for.cond282, !dbg !1369, !llvm.loop !1370

for.end336:                                       ; preds = %if.then325, %for.cond282
  %243 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1372
  %cmp337 = icmp eq %struct.png_dsort_struct* %243, null, !dbg !1374
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !1375

if.then339:                                       ; preds = %for.end336
  br label %for.end343, !dbg !1376

if.end340:                                        ; preds = %for.end336
  br label %for.inc341, !dbg !1377

for.inc341:                                       ; preds = %if.end340
  %244 = load i32, i32* %i245, align 4, !dbg !1378
  %inc342 = add nsw i32 %244, 1, !dbg !1378
  store i32 %inc342, i32* %i245, align 4, !dbg !1378
  br label %for.cond275, !dbg !1379, !llvm.loop !1380

for.end343:                                       ; preds = %if.then339, %for.cond275
  %245 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1382
  %cmp344 = icmp ne %struct.png_dsort_struct* %245, null, !dbg !1384
  br i1 %cmp344, label %if.then346, label %if.end482, !dbg !1385

if.then346:                                       ; preds = %for.end343
  store i32 0, i32* %i245, align 4, !dbg !1386
  br label %for.cond347, !dbg !1388

for.cond347:                                      ; preds = %for.inc479, %if.then346
  %246 = load i32, i32* %i245, align 4, !dbg !1389
  %247 = load i32, i32* %max_d, align 4, !dbg !1391
  %cmp348 = icmp sle i32 %246, %247, !dbg !1392
  br i1 %cmp348, label %for.body350, label %for.end481, !dbg !1393

for.body350:                                      ; preds = %for.cond347
  %248 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1394
  %249 = load i32, i32* %i245, align 4, !dbg !1397
  %idxprom351 = sext i32 %249 to i64, !dbg !1394
  %arrayidx352 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %248, i64 %idxprom351, !dbg !1394
  %250 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %arrayidx352, align 8, !dbg !1394
  %cmp353 = icmp ne %struct.png_dsort_struct* %250, null, !dbg !1398
  br i1 %cmp353, label %if.then355, label %if.end478, !dbg !1399

if.then355:                                       ; preds = %for.body350
  call void @llvm.dbg.declare(metadata %struct.png_dsort_struct** %p, metadata !1400, metadata !DIExpression()), !dbg !1402
  %251 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1403
  %252 = load i32, i32* %i245, align 4, !dbg !1405
  %idxprom356 = sext i32 %252 to i64, !dbg !1403
  %arrayidx357 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %251, i64 %idxprom356, !dbg !1403
  %253 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %arrayidx357, align 8, !dbg !1403
  store %struct.png_dsort_struct* %253, %struct.png_dsort_struct** %p, align 8, !dbg !1406
  br label %for.cond358, !dbg !1407

for.cond358:                                      ; preds = %for.inc471, %if.then355
  %254 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1408
  %tobool359 = icmp ne %struct.png_dsort_struct* %254, null, !dbg !1410
  br i1 %tobool359, label %for.body360, label %for.end473, !dbg !1410

for.body360:                                      ; preds = %for.cond358
  %255 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1411
  %index_to_palette361 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %255, i32 0, i32 132, !dbg !1414
  %256 = load i8*, i8** %index_to_palette361, align 8, !dbg !1414
  %257 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1415
  %left362 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %257, i32 0, i32 1, !dbg !1416
  %258 = load i8, i8* %left362, align 8, !dbg !1416
  %idxprom363 = zext i8 %258 to i64, !dbg !1411
  %arrayidx364 = getelementptr inbounds i8, i8* %256, i64 %idxprom363, !dbg !1411
  %259 = load i8, i8* %arrayidx364, align 1, !dbg !1411
  %conv365 = zext i8 %259 to i32, !dbg !1417
  %260 = load i32, i32* %num_new_palette, align 4, !dbg !1418
  %cmp366 = icmp slt i32 %conv365, %260, !dbg !1419
  br i1 %cmp366, label %land.lhs.true, label %if.end466, !dbg !1420

land.lhs.true:                                    ; preds = %for.body360
  %261 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1421
  %index_to_palette368 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %261, i32 0, i32 132, !dbg !1422
  %262 = load i8*, i8** %index_to_palette368, align 8, !dbg !1422
  %263 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1423
  %right369 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %263, i32 0, i32 2, !dbg !1424
  %264 = load i8, i8* %right369, align 1, !dbg !1424
  %idxprom370 = zext i8 %264 to i64, !dbg !1421
  %arrayidx371 = getelementptr inbounds i8, i8* %262, i64 %idxprom370, !dbg !1421
  %265 = load i8, i8* %arrayidx371, align 1, !dbg !1421
  %conv372 = zext i8 %265 to i32, !dbg !1425
  %266 = load i32, i32* %num_new_palette, align 4, !dbg !1426
  %cmp373 = icmp slt i32 %conv372, %266, !dbg !1427
  br i1 %cmp373, label %if.then375, label %if.end466, !dbg !1428

if.then375:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %j376, metadata !1429, metadata !DIExpression()), !dbg !1431
  call void @llvm.dbg.declare(metadata i32* %next_j, metadata !1432, metadata !DIExpression()), !dbg !1433
  %267 = load i32, i32* %num_new_palette, align 4, !dbg !1434
  %and = and i32 %267, 1, !dbg !1436
  %tobool377 = icmp ne i32 %and, 0, !dbg !1436
  br i1 %tobool377, label %if.then378, label %if.else383, !dbg !1437

if.then378:                                       ; preds = %if.then375
  %268 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1438
  %left379 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %268, i32 0, i32 1, !dbg !1440
  %269 = load i8, i8* %left379, align 8, !dbg !1440
  %conv380 = zext i8 %269 to i32, !dbg !1438
  store i32 %conv380, i32* %j376, align 4, !dbg !1441
  %270 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1442
  %right381 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %270, i32 0, i32 2, !dbg !1443
  %271 = load i8, i8* %right381, align 1, !dbg !1443
  %conv382 = zext i8 %271 to i32, !dbg !1442
  store i32 %conv382, i32* %next_j, align 4, !dbg !1444
  br label %if.end388, !dbg !1445

if.else383:                                       ; preds = %if.then375
  %272 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1446
  %right384 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %272, i32 0, i32 2, !dbg !1448
  %273 = load i8, i8* %right384, align 1, !dbg !1448
  %conv385 = zext i8 %273 to i32, !dbg !1446
  store i32 %conv385, i32* %j376, align 4, !dbg !1449
  %274 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1450
  %left386 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %274, i32 0, i32 1, !dbg !1451
  %275 = load i8, i8* %left386, align 8, !dbg !1451
  %conv387 = zext i8 %275 to i32, !dbg !1450
  store i32 %conv387, i32* %next_j, align 4, !dbg !1452
  br label %if.end388

if.end388:                                        ; preds = %if.else383, %if.then378
  %276 = load i32, i32* %num_new_palette, align 4, !dbg !1453
  %dec389 = add nsw i32 %276, -1, !dbg !1453
  store i32 %dec389, i32* %num_new_palette, align 4, !dbg !1453
  %277 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1454
  %278 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1455
  %index_to_palette390 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %278, i32 0, i32 132, !dbg !1456
  %279 = load i8*, i8** %index_to_palette390, align 8, !dbg !1456
  %280 = load i32, i32* %j376, align 4, !dbg !1457
  %idxprom391 = sext i32 %280 to i64, !dbg !1455
  %arrayidx392 = getelementptr inbounds i8, i8* %279, i64 %idxprom391, !dbg !1455
  %281 = load i8, i8* %arrayidx392, align 1, !dbg !1455
  %idxprom393 = zext i8 %281 to i64, !dbg !1454
  %arrayidx394 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %277, i64 %idxprom393, !dbg !1454
  %282 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1458
  %283 = load i32, i32* %num_new_palette, align 4, !dbg !1459
  %idxprom395 = sext i32 %283 to i64, !dbg !1458
  %arrayidx396 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %282, i64 %idxprom395, !dbg !1458
  %284 = bitcast %struct.png_color_struct* %arrayidx394 to i8*, !dbg !1458
  %285 = bitcast %struct.png_color_struct* %arrayidx396 to i8*, !dbg !1458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %284, i8* align 1 %285, i64 3, i1 false), !dbg !1458
  %286 = load i32, i32* %full_quantize.addr, align 4, !dbg !1460
  %tobool397 = icmp ne i32 %286, 0, !dbg !1460
  br i1 %tobool397, label %if.end439, label %if.then398, !dbg !1462

if.then398:                                       ; preds = %if.end388
  call void @llvm.dbg.declare(metadata i32* %k399, metadata !1463, metadata !DIExpression()), !dbg !1465
  store i32 0, i32* %k399, align 4, !dbg !1466
  br label %for.cond400, !dbg !1468

for.cond400:                                      ; preds = %for.inc436, %if.then398
  %287 = load i32, i32* %k399, align 4, !dbg !1469
  %288 = load i32, i32* %num_palette.addr, align 4, !dbg !1471
  %cmp401 = icmp slt i32 %287, %288, !dbg !1472
  br i1 %cmp401, label %for.body403, label %for.end438, !dbg !1473

for.body403:                                      ; preds = %for.cond400
  %289 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1474
  %quantize_index404 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %289, i32 0, i32 105, !dbg !1477
  %290 = load i8*, i8** %quantize_index404, align 8, !dbg !1477
  %291 = load i32, i32* %k399, align 4, !dbg !1478
  %idxprom405 = sext i32 %291 to i64, !dbg !1474
  %arrayidx406 = getelementptr inbounds i8, i8* %290, i64 %idxprom405, !dbg !1474
  %292 = load i8, i8* %arrayidx406, align 1, !dbg !1474
  %conv407 = zext i8 %292 to i32, !dbg !1474
  %293 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1479
  %index_to_palette408 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %293, i32 0, i32 132, !dbg !1480
  %294 = load i8*, i8** %index_to_palette408, align 8, !dbg !1480
  %295 = load i32, i32* %j376, align 4, !dbg !1481
  %idxprom409 = sext i32 %295 to i64, !dbg !1479
  %arrayidx410 = getelementptr inbounds i8, i8* %294, i64 %idxprom409, !dbg !1479
  %296 = load i8, i8* %arrayidx410, align 1, !dbg !1479
  %conv411 = zext i8 %296 to i32, !dbg !1479
  %cmp412 = icmp eq i32 %conv407, %conv411, !dbg !1482
  br i1 %cmp412, label %if.then414, label %if.end421, !dbg !1483

if.then414:                                       ; preds = %for.body403
  %297 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1484
  %index_to_palette415 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %297, i32 0, i32 132, !dbg !1485
  %298 = load i8*, i8** %index_to_palette415, align 8, !dbg !1485
  %299 = load i32, i32* %next_j, align 4, !dbg !1486
  %idxprom416 = sext i32 %299 to i64, !dbg !1484
  %arrayidx417 = getelementptr inbounds i8, i8* %298, i64 %idxprom416, !dbg !1484
  %300 = load i8, i8* %arrayidx417, align 1, !dbg !1484
  %301 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1487
  %quantize_index418 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %301, i32 0, i32 105, !dbg !1488
  %302 = load i8*, i8** %quantize_index418, align 8, !dbg !1488
  %303 = load i32, i32* %k399, align 4, !dbg !1489
  %idxprom419 = sext i32 %303 to i64, !dbg !1487
  %arrayidx420 = getelementptr inbounds i8, i8* %302, i64 %idxprom419, !dbg !1487
  store i8 %300, i8* %arrayidx420, align 1, !dbg !1490
  br label %if.end421, !dbg !1487

if.end421:                                        ; preds = %if.then414, %for.body403
  %304 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1491
  %quantize_index422 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %304, i32 0, i32 105, !dbg !1493
  %305 = load i8*, i8** %quantize_index422, align 8, !dbg !1493
  %306 = load i32, i32* %k399, align 4, !dbg !1494
  %idxprom423 = sext i32 %306 to i64, !dbg !1491
  %arrayidx424 = getelementptr inbounds i8, i8* %305, i64 %idxprom423, !dbg !1491
  %307 = load i8, i8* %arrayidx424, align 1, !dbg !1491
  %conv425 = zext i8 %307 to i32, !dbg !1495
  %308 = load i32, i32* %num_new_palette, align 4, !dbg !1496
  %cmp426 = icmp eq i32 %conv425, %308, !dbg !1497
  br i1 %cmp426, label %if.then428, label %if.end435, !dbg !1498

if.then428:                                       ; preds = %if.end421
  %309 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1499
  %index_to_palette429 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %309, i32 0, i32 132, !dbg !1500
  %310 = load i8*, i8** %index_to_palette429, align 8, !dbg !1500
  %311 = load i32, i32* %j376, align 4, !dbg !1501
  %idxprom430 = sext i32 %311 to i64, !dbg !1499
  %arrayidx431 = getelementptr inbounds i8, i8* %310, i64 %idxprom430, !dbg !1499
  %312 = load i8, i8* %arrayidx431, align 1, !dbg !1499
  %313 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1502
  %quantize_index432 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %313, i32 0, i32 105, !dbg !1503
  %314 = load i8*, i8** %quantize_index432, align 8, !dbg !1503
  %315 = load i32, i32* %k399, align 4, !dbg !1504
  %idxprom433 = sext i32 %315 to i64, !dbg !1502
  %arrayidx434 = getelementptr inbounds i8, i8* %314, i64 %idxprom433, !dbg !1502
  store i8 %312, i8* %arrayidx434, align 1, !dbg !1505
  br label %if.end435, !dbg !1502

if.end435:                                        ; preds = %if.then428, %if.end421
  br label %for.inc436, !dbg !1506

for.inc436:                                       ; preds = %if.end435
  %316 = load i32, i32* %k399, align 4, !dbg !1507
  %inc437 = add nsw i32 %316, 1, !dbg !1507
  store i32 %inc437, i32* %k399, align 4, !dbg !1507
  br label %for.cond400, !dbg !1508, !llvm.loop !1509

for.end438:                                       ; preds = %for.cond400
  br label %if.end439, !dbg !1511

if.end439:                                        ; preds = %for.end438, %if.end388
  %317 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1512
  %index_to_palette440 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %317, i32 0, i32 132, !dbg !1513
  %318 = load i8*, i8** %index_to_palette440, align 8, !dbg !1513
  %319 = load i32, i32* %j376, align 4, !dbg !1514
  %idxprom441 = sext i32 %319 to i64, !dbg !1512
  %arrayidx442 = getelementptr inbounds i8, i8* %318, i64 %idxprom441, !dbg !1512
  %320 = load i8, i8* %arrayidx442, align 1, !dbg !1512
  %321 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1515
  %index_to_palette443 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %321, i32 0, i32 132, !dbg !1516
  %322 = load i8*, i8** %index_to_palette443, align 8, !dbg !1516
  %323 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1517
  %palette_to_index444 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %323, i32 0, i32 133, !dbg !1518
  %324 = load i8*, i8** %palette_to_index444, align 8, !dbg !1518
  %325 = load i32, i32* %num_new_palette, align 4, !dbg !1519
  %idxprom445 = sext i32 %325 to i64, !dbg !1517
  %arrayidx446 = getelementptr inbounds i8, i8* %324, i64 %idxprom445, !dbg !1517
  %326 = load i8, i8* %arrayidx446, align 1, !dbg !1517
  %idxprom447 = zext i8 %326 to i64, !dbg !1515
  %arrayidx448 = getelementptr inbounds i8, i8* %322, i64 %idxprom447, !dbg !1515
  store i8 %320, i8* %arrayidx448, align 1, !dbg !1520
  %327 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1521
  %palette_to_index449 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %327, i32 0, i32 133, !dbg !1522
  %328 = load i8*, i8** %palette_to_index449, align 8, !dbg !1522
  %329 = load i32, i32* %num_new_palette, align 4, !dbg !1523
  %idxprom450 = sext i32 %329 to i64, !dbg !1521
  %arrayidx451 = getelementptr inbounds i8, i8* %328, i64 %idxprom450, !dbg !1521
  %330 = load i8, i8* %arrayidx451, align 1, !dbg !1521
  %331 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1524
  %palette_to_index452 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %331, i32 0, i32 133, !dbg !1525
  %332 = load i8*, i8** %palette_to_index452, align 8, !dbg !1525
  %333 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1526
  %index_to_palette453 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %333, i32 0, i32 132, !dbg !1527
  %334 = load i8*, i8** %index_to_palette453, align 8, !dbg !1527
  %335 = load i32, i32* %j376, align 4, !dbg !1528
  %idxprom454 = sext i32 %335 to i64, !dbg !1526
  %arrayidx455 = getelementptr inbounds i8, i8* %334, i64 %idxprom454, !dbg !1526
  %336 = load i8, i8* %arrayidx455, align 1, !dbg !1526
  %idxprom456 = zext i8 %336 to i64, !dbg !1524
  %arrayidx457 = getelementptr inbounds i8, i8* %332, i64 %idxprom456, !dbg !1524
  store i8 %330, i8* %arrayidx457, align 1, !dbg !1529
  %337 = load i32, i32* %num_new_palette, align 4, !dbg !1530
  %conv458 = trunc i32 %337 to i8, !dbg !1531
  %338 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1532
  %index_to_palette459 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %338, i32 0, i32 132, !dbg !1533
  %339 = load i8*, i8** %index_to_palette459, align 8, !dbg !1533
  %340 = load i32, i32* %j376, align 4, !dbg !1534
  %idxprom460 = sext i32 %340 to i64, !dbg !1532
  %arrayidx461 = getelementptr inbounds i8, i8* %339, i64 %idxprom460, !dbg !1532
  store i8 %conv458, i8* %arrayidx461, align 1, !dbg !1535
  %341 = load i32, i32* %j376, align 4, !dbg !1536
  %conv462 = trunc i32 %341 to i8, !dbg !1537
  %342 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1538
  %palette_to_index463 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %342, i32 0, i32 133, !dbg !1539
  %343 = load i8*, i8** %palette_to_index463, align 8, !dbg !1539
  %344 = load i32, i32* %num_new_palette, align 4, !dbg !1540
  %idxprom464 = sext i32 %344 to i64, !dbg !1538
  %arrayidx465 = getelementptr inbounds i8, i8* %343, i64 %idxprom464, !dbg !1538
  store i8 %conv462, i8* %arrayidx465, align 1, !dbg !1541
  br label %if.end466, !dbg !1542

if.end466:                                        ; preds = %if.end439, %land.lhs.true, %for.body360
  %345 = load i32, i32* %num_new_palette, align 4, !dbg !1543
  %346 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1545
  %cmp467 = icmp sle i32 %345, %346, !dbg !1546
  br i1 %cmp467, label %if.then469, label %if.end470, !dbg !1547

if.then469:                                       ; preds = %if.end466
  br label %for.end473, !dbg !1548

if.end470:                                        ; preds = %if.end466
  br label %for.inc471, !dbg !1549

for.inc471:                                       ; preds = %if.end470
  %347 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p, align 8, !dbg !1550
  %next472 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %347, i32 0, i32 0, !dbg !1551
  %348 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %next472, align 8, !dbg !1551
  store %struct.png_dsort_struct* %348, %struct.png_dsort_struct** %p, align 8, !dbg !1552
  br label %for.cond358, !dbg !1553, !llvm.loop !1554

for.end473:                                       ; preds = %if.then469, %for.cond358
  %349 = load i32, i32* %num_new_palette, align 4, !dbg !1556
  %350 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1558
  %cmp474 = icmp sle i32 %349, %350, !dbg !1559
  br i1 %cmp474, label %if.then476, label %if.end477, !dbg !1560

if.then476:                                       ; preds = %for.end473
  br label %for.end481, !dbg !1561

if.end477:                                        ; preds = %for.end473
  br label %if.end478, !dbg !1562

if.end478:                                        ; preds = %if.end477, %for.body350
  br label %for.inc479, !dbg !1563

for.inc479:                                       ; preds = %if.end478
  %351 = load i32, i32* %i245, align 4, !dbg !1564
  %inc480 = add nsw i32 %351, 1, !dbg !1564
  store i32 %inc480, i32* %i245, align 4, !dbg !1564
  br label %for.cond347, !dbg !1565, !llvm.loop !1566

for.end481:                                       ; preds = %if.then476, %for.cond347
  br label %if.end482, !dbg !1567

if.end482:                                        ; preds = %for.end481, %for.end343
  store i32 0, i32* %i245, align 4, !dbg !1568
  br label %for.cond483, !dbg !1570

for.cond483:                                      ; preds = %for.inc502, %if.end482
  %352 = load i32, i32* %i245, align 4, !dbg !1571
  %cmp484 = icmp slt i32 %352, 769, !dbg !1573
  br i1 %cmp484, label %for.body486, label %for.end504, !dbg !1574

for.body486:                                      ; preds = %for.cond483
  %353 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1575
  %354 = load i32, i32* %i245, align 4, !dbg !1578
  %idxprom487 = sext i32 %354 to i64, !dbg !1575
  %arrayidx488 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %353, i64 %idxprom487, !dbg !1575
  %355 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %arrayidx488, align 8, !dbg !1575
  %cmp489 = icmp ne %struct.png_dsort_struct* %355, null, !dbg !1579
  br i1 %cmp489, label %if.then491, label %if.end499, !dbg !1580

if.then491:                                       ; preds = %for.body486
  call void @llvm.dbg.declare(metadata %struct.png_dsort_struct** %p492, metadata !1581, metadata !DIExpression()), !dbg !1583
  %356 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1584
  %357 = load i32, i32* %i245, align 4, !dbg !1585
  %idxprom493 = sext i32 %357 to i64, !dbg !1584
  %arrayidx494 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %356, i64 %idxprom493, !dbg !1584
  %358 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %arrayidx494, align 8, !dbg !1584
  store %struct.png_dsort_struct* %358, %struct.png_dsort_struct** %p492, align 8, !dbg !1583
  br label %while.cond495, !dbg !1586

while.cond495:                                    ; preds = %while.body497, %if.then491
  %359 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p492, align 8, !dbg !1587
  %tobool496 = icmp ne %struct.png_dsort_struct* %359, null, !dbg !1586
  br i1 %tobool496, label %while.body497, label %while.end, !dbg !1586

while.body497:                                    ; preds = %while.cond495
  %360 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p492, align 8, !dbg !1588
  %next498 = getelementptr inbounds %struct.png_dsort_struct, %struct.png_dsort_struct* %360, i32 0, i32 0, !dbg !1590
  %361 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %next498, align 8, !dbg !1590
  store %struct.png_dsort_struct* %361, %struct.png_dsort_struct** %t246, align 8, !dbg !1591
  %362 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1592
  %363 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %p492, align 8, !dbg !1593
  %364 = bitcast %struct.png_dsort_struct* %363 to i8*, !dbg !1593
  call void @png_free(%struct.png_struct_def* %362, i8* %364), !dbg !1594
  %365 = load %struct.png_dsort_struct*, %struct.png_dsort_struct** %t246, align 8, !dbg !1595
  store %struct.png_dsort_struct* %365, %struct.png_dsort_struct** %p492, align 8, !dbg !1596
  br label %while.cond495, !dbg !1586, !llvm.loop !1597

while.end:                                        ; preds = %while.cond495
  br label %if.end499, !dbg !1599

if.end499:                                        ; preds = %while.end, %for.body486
  %366 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1600
  %367 = load i32, i32* %i245, align 4, !dbg !1601
  %idxprom500 = sext i32 %367 to i64, !dbg !1600
  %arrayidx501 = getelementptr inbounds %struct.png_dsort_struct*, %struct.png_dsort_struct** %366, i64 %idxprom500, !dbg !1600
  store %struct.png_dsort_struct* null, %struct.png_dsort_struct** %arrayidx501, align 8, !dbg !1602
  br label %for.inc502, !dbg !1603

for.inc502:                                       ; preds = %if.end499
  %368 = load i32, i32* %i245, align 4, !dbg !1604
  %inc503 = add nsw i32 %368, 1, !dbg !1604
  store i32 %inc503, i32* %i245, align 4, !dbg !1604
  br label %for.cond483, !dbg !1605, !llvm.loop !1606

for.end504:                                       ; preds = %for.cond483
  %369 = load i32, i32* %max_d, align 4, !dbg !1608
  %add505 = add nsw i32 %369, 96, !dbg !1608
  store i32 %add505, i32* %max_d, align 4, !dbg !1608
  br label %while.cond, !dbg !1300, !llvm.loop !1609

while.end506:                                     ; preds = %while.cond
  %370 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1611
  %371 = load %struct.png_dsort_struct**, %struct.png_dsort_struct*** %hash, align 8, !dbg !1612
  %372 = bitcast %struct.png_dsort_struct** %371 to i8*, !dbg !1612
  call void @png_free(%struct.png_struct_def* %370, i8* %372), !dbg !1613
  %373 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1614
  %374 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1615
  %palette_to_index507 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %374, i32 0, i32 133, !dbg !1616
  %375 = load i8*, i8** %palette_to_index507, align 8, !dbg !1616
  call void @png_free(%struct.png_struct_def* %373, i8* %375), !dbg !1617
  %376 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1618
  %377 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1619
  %index_to_palette508 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %377, i32 0, i32 132, !dbg !1620
  %378 = load i8*, i8** %index_to_palette508, align 8, !dbg !1620
  call void @png_free(%struct.png_struct_def* %376, i8* %378), !dbg !1621
  %379 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1622
  %palette_to_index509 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %379, i32 0, i32 133, !dbg !1623
  store i8* null, i8** %palette_to_index509, align 8, !dbg !1624
  %380 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1625
  %index_to_palette510 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %380, i32 0, i32 132, !dbg !1626
  store i8* null, i8** %index_to_palette510, align 8, !dbg !1627
  br label %if.end511

if.end511:                                        ; preds = %while.end506, %if.end241
  %381 = load i32, i32* %maximum_colors.addr, align 4, !dbg !1628
  store i32 %381, i32* %num_palette.addr, align 4, !dbg !1629
  br label %if.end512, !dbg !1630

if.end512:                                        ; preds = %if.end511, %if.end8
  %382 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1631
  %palette513 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %382, i32 0, i32 47, !dbg !1633
  %383 = load %struct.png_color_struct*, %struct.png_color_struct** %palette513, align 8, !dbg !1633
  %cmp514 = icmp eq %struct.png_color_struct* %383, null, !dbg !1634
  br i1 %cmp514, label %if.then516, label %if.end518, !dbg !1635

if.then516:                                       ; preds = %if.end512
  %384 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1636
  %385 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1638
  %palette517 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %385, i32 0, i32 47, !dbg !1639
  store %struct.png_color_struct* %384, %struct.png_color_struct** %palette517, align 8, !dbg !1640
  br label %if.end518, !dbg !1641

if.end518:                                        ; preds = %if.then516, %if.end512
  %386 = load i32, i32* %num_palette.addr, align 4, !dbg !1642
  %conv519 = trunc i32 %386 to i16, !dbg !1643
  %387 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1644
  %num_palette520 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %387, i32 0, i32 48, !dbg !1645
  store i16 %conv519, i16* %num_palette520, align 8, !dbg !1646
  %388 = load i32, i32* %full_quantize.addr, align 4, !dbg !1647
  %tobool521 = icmp ne i32 %388, 0, !dbg !1647
  br i1 %tobool521, label %if.then522, label %if.end630, !dbg !1649

if.then522:                                       ; preds = %if.end518
  call void @llvm.dbg.declare(metadata i32* %i523, metadata !1650, metadata !DIExpression()), !dbg !1652
  call void @llvm.dbg.declare(metadata i8** %distance, metadata !1653, metadata !DIExpression()), !dbg !1654
  call void @llvm.dbg.declare(metadata i32* %total_bits, metadata !1655, metadata !DIExpression()), !dbg !1656
  store i32 15, i32* %total_bits, align 4, !dbg !1656
  call void @llvm.dbg.declare(metadata i32* %num_red, metadata !1657, metadata !DIExpression()), !dbg !1658
  store i32 32, i32* %num_red, align 4, !dbg !1658
  call void @llvm.dbg.declare(metadata i32* %num_green, metadata !1659, metadata !DIExpression()), !dbg !1660
  store i32 32, i32* %num_green, align 4, !dbg !1660
  call void @llvm.dbg.declare(metadata i32* %num_blue, metadata !1661, metadata !DIExpression()), !dbg !1662
  store i32 32, i32* %num_blue, align 4, !dbg !1662
  call void @llvm.dbg.declare(metadata i64* %num_entries, metadata !1663, metadata !DIExpression()), !dbg !1664
  %389 = load i32, i32* %total_bits, align 4, !dbg !1665
  %sh_prom = zext i32 %389 to i64, !dbg !1666
  %shl = shl i64 1, %sh_prom, !dbg !1666
  store i64 %shl, i64* %num_entries, align 8, !dbg !1664
  %390 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1667
  %391 = load i64, i64* %num_entries, align 8, !dbg !1668
  %mul524 = mul i64 %391, 1, !dbg !1669
  %conv525 = trunc i64 %mul524 to i32, !dbg !1670
  %conv526 = zext i32 %conv525 to i64, !dbg !1670
  %call527 = call noalias i8* @png_calloc(%struct.png_struct_def* %390, i64 %conv526), !dbg !1671
  %392 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1672
  %palette_lookup = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %392, i32 0, i32 104, !dbg !1673
  store i8* %call527, i8** %palette_lookup, align 8, !dbg !1674
  %393 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1675
  %394 = load i64, i64* %num_entries, align 8, !dbg !1676
  %mul528 = mul i64 %394, 1, !dbg !1677
  %conv529 = trunc i64 %mul528 to i32, !dbg !1678
  %conv530 = zext i32 %conv529 to i64, !dbg !1678
  %call531 = call noalias i8* @png_malloc(%struct.png_struct_def* %393, i64 %conv530), !dbg !1679
  store i8* %call531, i8** %distance, align 8, !dbg !1680
  %395 = load i8*, i8** %distance, align 8, !dbg !1681
  %396 = load i64, i64* %num_entries, align 8, !dbg !1682
  %mul532 = mul i64 %396, 1, !dbg !1683
  call void @llvm.memset.p0i8.i64(i8* align 1 %395, i8 -1, i64 %mul532, i1 false), !dbg !1684
  store i32 0, i32* %i523, align 4, !dbg !1685
  br label %for.cond533, !dbg !1687

for.cond533:                                      ; preds = %for.inc627, %if.then522
  %397 = load i32, i32* %i523, align 4, !dbg !1688
  %398 = load i32, i32* %num_palette.addr, align 4, !dbg !1690
  %cmp534 = icmp slt i32 %397, %398, !dbg !1691
  br i1 %cmp534, label %for.body536, label %for.end629, !dbg !1692

for.body536:                                      ; preds = %for.cond533
  call void @llvm.dbg.declare(metadata i32* %ir, metadata !1693, metadata !DIExpression()), !dbg !1695
  call void @llvm.dbg.declare(metadata i32* %ig, metadata !1696, metadata !DIExpression()), !dbg !1697
  call void @llvm.dbg.declare(metadata i32* %ib, metadata !1698, metadata !DIExpression()), !dbg !1699
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1700, metadata !DIExpression()), !dbg !1701
  %399 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1702
  %400 = load i32, i32* %i523, align 4, !dbg !1703
  %idxprom537 = sext i32 %400 to i64, !dbg !1702
  %arrayidx538 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %399, i64 %idxprom537, !dbg !1702
  %red539 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx538, i32 0, i32 0, !dbg !1704
  %401 = load i8, i8* %red539, align 1, !dbg !1704
  %conv540 = zext i8 %401 to i32, !dbg !1702
  %shr = ashr i32 %conv540, 3, !dbg !1705
  store i32 %shr, i32* %r, align 4, !dbg !1701
  call void @llvm.dbg.declare(metadata i32* %g, metadata !1706, metadata !DIExpression()), !dbg !1707
  %402 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1708
  %403 = load i32, i32* %i523, align 4, !dbg !1709
  %idxprom541 = sext i32 %403 to i64, !dbg !1708
  %arrayidx542 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %402, i64 %idxprom541, !dbg !1708
  %green543 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx542, i32 0, i32 1, !dbg !1710
  %404 = load i8, i8* %green543, align 1, !dbg !1710
  %conv544 = zext i8 %404 to i32, !dbg !1708
  %shr545 = ashr i32 %conv544, 3, !dbg !1711
  store i32 %shr545, i32* %g, align 4, !dbg !1707
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1712, metadata !DIExpression()), !dbg !1713
  %405 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !1714
  %406 = load i32, i32* %i523, align 4, !dbg !1715
  %idxprom546 = sext i32 %406 to i64, !dbg !1714
  %arrayidx547 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %405, i64 %idxprom546, !dbg !1714
  %blue548 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx547, i32 0, i32 2, !dbg !1716
  %407 = load i8, i8* %blue548, align 1, !dbg !1716
  %conv549 = zext i8 %407 to i32, !dbg !1714
  %shr550 = ashr i32 %conv549, 3, !dbg !1717
  store i32 %shr550, i32* %b, align 4, !dbg !1713
  store i32 0, i32* %ir, align 4, !dbg !1718
  br label %for.cond551, !dbg !1720

for.cond551:                                      ; preds = %for.inc624, %for.body536
  %408 = load i32, i32* %ir, align 4, !dbg !1721
  %409 = load i32, i32* %num_red, align 4, !dbg !1723
  %cmp552 = icmp slt i32 %408, %409, !dbg !1724
  br i1 %cmp552, label %for.body554, label %for.end626, !dbg !1725

for.body554:                                      ; preds = %for.cond551
  call void @llvm.dbg.declare(metadata i32* %dr, metadata !1726, metadata !DIExpression()), !dbg !1728
  %410 = load i32, i32* %ir, align 4, !dbg !1729
  %411 = load i32, i32* %r, align 4, !dbg !1730
  %cmp555 = icmp sgt i32 %410, %411, !dbg !1731
  br i1 %cmp555, label %cond.true, label %cond.false, !dbg !1732

cond.true:                                        ; preds = %for.body554
  %412 = load i32, i32* %ir, align 4, !dbg !1733
  %413 = load i32, i32* %r, align 4, !dbg !1734
  %sub557 = sub nsw i32 %412, %413, !dbg !1735
  br label %cond.end, !dbg !1732

cond.false:                                       ; preds = %for.body554
  %414 = load i32, i32* %r, align 4, !dbg !1736
  %415 = load i32, i32* %ir, align 4, !dbg !1737
  %sub558 = sub nsw i32 %414, %415, !dbg !1738
  br label %cond.end, !dbg !1732

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub557, %cond.true ], [ %sub558, %cond.false ], !dbg !1732
  store i32 %cond, i32* %dr, align 4, !dbg !1728
  call void @llvm.dbg.declare(metadata i32* %index_r, metadata !1739, metadata !DIExpression()), !dbg !1740
  %416 = load i32, i32* %ir, align 4, !dbg !1741
  %shl559 = shl i32 %416, 10, !dbg !1742
  store i32 %shl559, i32* %index_r, align 4, !dbg !1740
  store i32 0, i32* %ig, align 4, !dbg !1743
  br label %for.cond560, !dbg !1745

for.cond560:                                      ; preds = %for.inc621, %cond.end
  %417 = load i32, i32* %ig, align 4, !dbg !1746
  %418 = load i32, i32* %num_green, align 4, !dbg !1748
  %cmp561 = icmp slt i32 %417, %418, !dbg !1749
  br i1 %cmp561, label %for.body563, label %for.end623, !dbg !1750

for.body563:                                      ; preds = %for.cond560
  call void @llvm.dbg.declare(metadata i32* %dg, metadata !1751, metadata !DIExpression()), !dbg !1753
  %419 = load i32, i32* %ig, align 4, !dbg !1754
  %420 = load i32, i32* %g, align 4, !dbg !1755
  %cmp564 = icmp sgt i32 %419, %420, !dbg !1756
  br i1 %cmp564, label %cond.true566, label %cond.false568, !dbg !1757

cond.true566:                                     ; preds = %for.body563
  %421 = load i32, i32* %ig, align 4, !dbg !1758
  %422 = load i32, i32* %g, align 4, !dbg !1759
  %sub567 = sub nsw i32 %421, %422, !dbg !1760
  br label %cond.end570, !dbg !1757

cond.false568:                                    ; preds = %for.body563
  %423 = load i32, i32* %g, align 4, !dbg !1761
  %424 = load i32, i32* %ig, align 4, !dbg !1762
  %sub569 = sub nsw i32 %423, %424, !dbg !1763
  br label %cond.end570, !dbg !1757

cond.end570:                                      ; preds = %cond.false568, %cond.true566
  %cond571 = phi i32 [ %sub567, %cond.true566 ], [ %sub569, %cond.false568 ], !dbg !1757
  store i32 %cond571, i32* %dg, align 4, !dbg !1753
  call void @llvm.dbg.declare(metadata i32* %dt, metadata !1764, metadata !DIExpression()), !dbg !1765
  %425 = load i32, i32* %dr, align 4, !dbg !1766
  %426 = load i32, i32* %dg, align 4, !dbg !1767
  %add572 = add nsw i32 %425, %426, !dbg !1768
  store i32 %add572, i32* %dt, align 4, !dbg !1765
  call void @llvm.dbg.declare(metadata i32* %dm, metadata !1769, metadata !DIExpression()), !dbg !1770
  %427 = load i32, i32* %dr, align 4, !dbg !1771
  %428 = load i32, i32* %dg, align 4, !dbg !1772
  %cmp573 = icmp sgt i32 %427, %428, !dbg !1773
  br i1 %cmp573, label %cond.true575, label %cond.false576, !dbg !1774

cond.true575:                                     ; preds = %cond.end570
  %429 = load i32, i32* %dr, align 4, !dbg !1775
  br label %cond.end577, !dbg !1774

cond.false576:                                    ; preds = %cond.end570
  %430 = load i32, i32* %dg, align 4, !dbg !1776
  br label %cond.end577, !dbg !1774

cond.end577:                                      ; preds = %cond.false576, %cond.true575
  %cond578 = phi i32 [ %429, %cond.true575 ], [ %430, %cond.false576 ], !dbg !1774
  store i32 %cond578, i32* %dm, align 4, !dbg !1770
  call void @llvm.dbg.declare(metadata i32* %index_g, metadata !1777, metadata !DIExpression()), !dbg !1778
  %431 = load i32, i32* %index_r, align 4, !dbg !1779
  %432 = load i32, i32* %ig, align 4, !dbg !1780
  %shl579 = shl i32 %432, 5, !dbg !1781
  %or580 = or i32 %431, %shl579, !dbg !1782
  store i32 %or580, i32* %index_g, align 4, !dbg !1778
  store i32 0, i32* %ib, align 4, !dbg !1783
  br label %for.cond581, !dbg !1785

for.cond581:                                      ; preds = %for.inc618, %cond.end577
  %433 = load i32, i32* %ib, align 4, !dbg !1786
  %434 = load i32, i32* %num_blue, align 4, !dbg !1788
  %cmp582 = icmp slt i32 %433, %434, !dbg !1789
  br i1 %cmp582, label %for.body584, label %for.end620, !dbg !1790

for.body584:                                      ; preds = %for.cond581
  call void @llvm.dbg.declare(metadata i32* %d_index585, metadata !1791, metadata !DIExpression()), !dbg !1793
  %435 = load i32, i32* %index_g, align 4, !dbg !1794
  %436 = load i32, i32* %ib, align 4, !dbg !1795
  %or586 = or i32 %435, %436, !dbg !1796
  store i32 %or586, i32* %d_index585, align 4, !dbg !1793
  call void @llvm.dbg.declare(metadata i32* %db, metadata !1797, metadata !DIExpression()), !dbg !1798
  %437 = load i32, i32* %ib, align 4, !dbg !1799
  %438 = load i32, i32* %b, align 4, !dbg !1800
  %cmp587 = icmp sgt i32 %437, %438, !dbg !1801
  br i1 %cmp587, label %cond.true589, label %cond.false591, !dbg !1802

cond.true589:                                     ; preds = %for.body584
  %439 = load i32, i32* %ib, align 4, !dbg !1803
  %440 = load i32, i32* %b, align 4, !dbg !1804
  %sub590 = sub nsw i32 %439, %440, !dbg !1805
  br label %cond.end593, !dbg !1802

cond.false591:                                    ; preds = %for.body584
  %441 = load i32, i32* %b, align 4, !dbg !1806
  %442 = load i32, i32* %ib, align 4, !dbg !1807
  %sub592 = sub nsw i32 %441, %442, !dbg !1808
  br label %cond.end593, !dbg !1802

cond.end593:                                      ; preds = %cond.false591, %cond.true589
  %cond594 = phi i32 [ %sub590, %cond.true589 ], [ %sub592, %cond.false591 ], !dbg !1802
  store i32 %cond594, i32* %db, align 4, !dbg !1798
  call void @llvm.dbg.declare(metadata i32* %dmax, metadata !1809, metadata !DIExpression()), !dbg !1810
  %443 = load i32, i32* %dm, align 4, !dbg !1811
  %444 = load i32, i32* %db, align 4, !dbg !1812
  %cmp595 = icmp sgt i32 %443, %444, !dbg !1813
  br i1 %cmp595, label %cond.true597, label %cond.false598, !dbg !1814

cond.true597:                                     ; preds = %cond.end593
  %445 = load i32, i32* %dm, align 4, !dbg !1815
  br label %cond.end599, !dbg !1814

cond.false598:                                    ; preds = %cond.end593
  %446 = load i32, i32* %db, align 4, !dbg !1816
  br label %cond.end599, !dbg !1814

cond.end599:                                      ; preds = %cond.false598, %cond.true597
  %cond600 = phi i32 [ %445, %cond.true597 ], [ %446, %cond.false598 ], !dbg !1814
  store i32 %cond600, i32* %dmax, align 4, !dbg !1810
  call void @llvm.dbg.declare(metadata i32* %d601, metadata !1817, metadata !DIExpression()), !dbg !1818
  %447 = load i32, i32* %dmax, align 4, !dbg !1819
  %448 = load i32, i32* %dt, align 4, !dbg !1820
  %add602 = add nsw i32 %447, %448, !dbg !1821
  %449 = load i32, i32* %db, align 4, !dbg !1822
  %add603 = add nsw i32 %add602, %449, !dbg !1823
  store i32 %add603, i32* %d601, align 4, !dbg !1818
  %450 = load i32, i32* %d601, align 4, !dbg !1824
  %451 = load i8*, i8** %distance, align 8, !dbg !1826
  %452 = load i32, i32* %d_index585, align 4, !dbg !1827
  %idxprom604 = sext i32 %452 to i64, !dbg !1826
  %arrayidx605 = getelementptr inbounds i8, i8* %451, i64 %idxprom604, !dbg !1826
  %453 = load i8, i8* %arrayidx605, align 1, !dbg !1826
  %conv606 = zext i8 %453 to i32, !dbg !1828
  %cmp607 = icmp slt i32 %450, %conv606, !dbg !1829
  br i1 %cmp607, label %if.then609, label %if.end617, !dbg !1830

if.then609:                                       ; preds = %cond.end599
  %454 = load i32, i32* %d601, align 4, !dbg !1831
  %conv610 = trunc i32 %454 to i8, !dbg !1833
  %455 = load i8*, i8** %distance, align 8, !dbg !1834
  %456 = load i32, i32* %d_index585, align 4, !dbg !1835
  %idxprom611 = sext i32 %456 to i64, !dbg !1834
  %arrayidx612 = getelementptr inbounds i8, i8* %455, i64 %idxprom611, !dbg !1834
  store i8 %conv610, i8* %arrayidx612, align 1, !dbg !1836
  %457 = load i32, i32* %i523, align 4, !dbg !1837
  %conv613 = trunc i32 %457 to i8, !dbg !1838
  %458 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1839
  %palette_lookup614 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %458, i32 0, i32 104, !dbg !1840
  %459 = load i8*, i8** %palette_lookup614, align 8, !dbg !1840
  %460 = load i32, i32* %d_index585, align 4, !dbg !1841
  %idxprom615 = sext i32 %460 to i64, !dbg !1839
  %arrayidx616 = getelementptr inbounds i8, i8* %459, i64 %idxprom615, !dbg !1839
  store i8 %conv613, i8* %arrayidx616, align 1, !dbg !1842
  br label %if.end617, !dbg !1843

if.end617:                                        ; preds = %if.then609, %cond.end599
  br label %for.inc618, !dbg !1844

for.inc618:                                       ; preds = %if.end617
  %461 = load i32, i32* %ib, align 4, !dbg !1845
  %inc619 = add nsw i32 %461, 1, !dbg !1845
  store i32 %inc619, i32* %ib, align 4, !dbg !1845
  br label %for.cond581, !dbg !1846, !llvm.loop !1847

for.end620:                                       ; preds = %for.cond581
  br label %for.inc621, !dbg !1849

for.inc621:                                       ; preds = %for.end620
  %462 = load i32, i32* %ig, align 4, !dbg !1850
  %inc622 = add nsw i32 %462, 1, !dbg !1850
  store i32 %inc622, i32* %ig, align 4, !dbg !1850
  br label %for.cond560, !dbg !1851, !llvm.loop !1852

for.end623:                                       ; preds = %for.cond560
  br label %for.inc624, !dbg !1854

for.inc624:                                       ; preds = %for.end623
  %463 = load i32, i32* %ir, align 4, !dbg !1855
  %inc625 = add nsw i32 %463, 1, !dbg !1855
  store i32 %inc625, i32* %ir, align 4, !dbg !1855
  br label %for.cond551, !dbg !1856, !llvm.loop !1857

for.end626:                                       ; preds = %for.cond551
  br label %for.inc627, !dbg !1859

for.inc627:                                       ; preds = %for.end626
  %464 = load i32, i32* %i523, align 4, !dbg !1860
  %inc628 = add nsw i32 %464, 1, !dbg !1860
  store i32 %inc628, i32* %i523, align 4, !dbg !1860
  br label %for.cond533, !dbg !1861, !llvm.loop !1862

for.end629:                                       ; preds = %for.cond533
  %465 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1864
  %466 = load i8*, i8** %distance, align 8, !dbg !1865
  call void @png_free(%struct.png_struct_def* %465, i8* %466), !dbg !1866
  br label %if.end630, !dbg !1867

if.end630:                                        ; preds = %if.then, %for.end629, %if.end518
  ret void, !dbg !1868
}

declare dso_local noalias i8* @png_malloc(%struct.png_struct_def*, i64) #2

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #5

declare dso_local void @png_free(%struct.png_struct_def*, i8*) #2

declare dso_local noalias i8* @png_calloc(%struct.png_struct_def*, i64) #2

declare dso_local noalias i8* @png_malloc_warn(%struct.png_struct_def*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_gamma_fixed(%struct.png_struct_def* %png_ptr, i32 %scrn_gamma, i32 %file_gamma) #0 !dbg !1869 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %scrn_gamma.addr = alloca i32, align 4
  %file_gamma.addr = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1872, metadata !DIExpression()), !dbg !1873
  store i32 %scrn_gamma, i32* %scrn_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scrn_gamma.addr, metadata !1874, metadata !DIExpression()), !dbg !1875
  store i32 %file_gamma, i32* %file_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %file_gamma.addr, metadata !1876, metadata !DIExpression()), !dbg !1877
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1878
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !1880
  br i1 %cmp, label %if.then, label %if.end, !dbg !1881

if.then:                                          ; preds = %entry
  br label %return, !dbg !1882

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1883
  %2 = load i32, i32* %scrn_gamma.addr, align 4, !dbg !1884
  %call = call i32 @translate_gamma_flags(%struct.png_struct_def* %1, i32 %2, i32 1), !dbg !1885
  store i32 %call, i32* %scrn_gamma.addr, align 4, !dbg !1886
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1887
  %4 = load i32, i32* %file_gamma.addr, align 4, !dbg !1888
  %call1 = call i32 @translate_gamma_flags(%struct.png_struct_def* %3, i32 %4, i32 0), !dbg !1889
  store i32 %call1, i32* %file_gamma.addr, align 4, !dbg !1890
  %5 = load i32, i32* %file_gamma.addr, align 4, !dbg !1891
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1892
  %gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 75, !dbg !1893
  store i32 %5, i32* %gamma, align 4, !dbg !1894
  %7 = load i32, i32* %scrn_gamma.addr, align 4, !dbg !1895
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1896
  %screen_gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 76, !dbg !1897
  store i32 %7, i32* %screen_gamma, align 8, !dbg !1898
  br label %return, !dbg !1899

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1899
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_gamma(%struct.png_struct_def* %png_ptr, double %scrn_gamma, double %file_gamma) #0 !dbg !1900 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %scrn_gamma.addr = alloca double, align 8
  %file_gamma.addr = alloca double, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1903, metadata !DIExpression()), !dbg !1904
  store double %scrn_gamma, double* %scrn_gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %scrn_gamma.addr, metadata !1905, metadata !DIExpression()), !dbg !1906
  store double %file_gamma, double* %file_gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %file_gamma.addr, metadata !1907, metadata !DIExpression()), !dbg !1908
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1909
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1910
  %2 = load double, double* %scrn_gamma.addr, align 8, !dbg !1911
  %call = call i32 @convert_gamma_value(%struct.png_struct_def* %1, double %2), !dbg !1912
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1913
  %4 = load double, double* %file_gamma.addr, align 8, !dbg !1914
  %call1 = call i32 @convert_gamma_value(%struct.png_struct_def* %3, double %4), !dbg !1915
  call void @png_set_gamma_fixed(%struct.png_struct_def* %0, i32 %call, i32 %call1), !dbg !1916
  ret void, !dbg !1917
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_expand(%struct.png_struct_def* %png_ptr) #0 !dbg !1918 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1919, metadata !DIExpression()), !dbg !1920
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1921
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !1923
  br i1 %cmp, label %if.then, label %if.end, !dbg !1924

if.then:                                          ; preds = %entry
  br label %return, !dbg !1925

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1926
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !1927
  %2 = load i32, i32* %transformations, align 4, !dbg !1928
  %or = or i32 %2, 33558528, !dbg !1928
  store i32 %or, i32* %transformations, align 4, !dbg !1928
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1929
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 14, !dbg !1930
  %4 = load i32, i32* %flags, align 8, !dbg !1931
  %and = and i32 %4, -65, !dbg !1931
  store i32 %and, i32* %flags, align 8, !dbg !1931
  br label %return, !dbg !1932

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1932
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_palette_to_rgb(%struct.png_struct_def* %png_ptr) #0 !dbg !1933 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1934, metadata !DIExpression()), !dbg !1935
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1936
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !1938
  br i1 %cmp, label %if.then, label %if.end, !dbg !1939

if.then:                                          ; preds = %entry
  br label %return, !dbg !1940

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1941
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !1942
  %2 = load i32, i32* %transformations, align 4, !dbg !1943
  %or = or i32 %2, 33558528, !dbg !1943
  store i32 %or, i32* %transformations, align 4, !dbg !1943
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1944
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 14, !dbg !1945
  %4 = load i32, i32* %flags, align 8, !dbg !1946
  %and = and i32 %4, -65, !dbg !1946
  store i32 %and, i32* %flags, align 8, !dbg !1946
  br label %return, !dbg !1947

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1947
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* %png_ptr) #0 !dbg !1948 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1949, metadata !DIExpression()), !dbg !1950
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1951
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !1953
  br i1 %cmp, label %if.then, label %if.end, !dbg !1954

if.then:                                          ; preds = %entry
  br label %return, !dbg !1955

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1956
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !1957
  %2 = load i32, i32* %transformations, align 4, !dbg !1958
  %or = or i32 %2, 4096, !dbg !1958
  store i32 %or, i32* %transformations, align 4, !dbg !1958
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1959
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 14, !dbg !1960
  %4 = load i32, i32* %flags, align 8, !dbg !1961
  %and = and i32 %4, -65, !dbg !1961
  store i32 %and, i32* %flags, align 8, !dbg !1961
  br label %return, !dbg !1962

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1962
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_tRNS_to_alpha(%struct.png_struct_def* %png_ptr) #0 !dbg !1963 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1964, metadata !DIExpression()), !dbg !1965
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1966
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 15, !dbg !1967
  %1 = load i32, i32* %transformations, align 4, !dbg !1968
  %or = or i32 %1, 33558528, !dbg !1968
  store i32 %or, i32* %transformations, align 4, !dbg !1968
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1969
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 14, !dbg !1970
  %3 = load i32, i32* %flags, align 8, !dbg !1971
  %and = and i32 %3, -65, !dbg !1971
  store i32 %and, i32* %flags, align 8, !dbg !1971
  ret void, !dbg !1972
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_expand_16(%struct.png_struct_def* %png_ptr) #0 !dbg !1973 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1974, metadata !DIExpression()), !dbg !1975
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1976
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !1978
  br i1 %cmp, label %if.then, label %if.end, !dbg !1979

if.then:                                          ; preds = %entry
  br label %return, !dbg !1980

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1981
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !1982
  %2 = load i32, i32* %transformations, align 4, !dbg !1983
  %or = or i32 %2, 33559040, !dbg !1983
  store i32 %or, i32* %transformations, align 4, !dbg !1983
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1984
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 14, !dbg !1985
  %4 = load i32, i32* %flags, align 8, !dbg !1986
  %and = and i32 %4, -65, !dbg !1986
  store i32 %and, i32* %flags, align 8, !dbg !1986
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1987
  %flags1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 14, !dbg !1988
  %6 = load i32, i32* %flags1, align 8, !dbg !1989
  %or2 = or i32 %6, 16384, !dbg !1989
  store i32 %or2, i32* %flags1, align 8, !dbg !1989
  br label %return, !dbg !1990

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1990
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_gray_to_rgb(%struct.png_struct_def* %png_ptr) #0 !dbg !1991 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1992, metadata !DIExpression()), !dbg !1993
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1994
  %cmp = icmp ne %struct.png_struct_def* %0, null, !dbg !1996
  br i1 %cmp, label %if.then, label %if.end, !dbg !1997

if.then:                                          ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1998
  call void @png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* %1), !dbg !2000
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2001
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 15, !dbg !2002
  %3 = load i32, i32* %transformations, align 4, !dbg !2003
  %or = or i32 %3, 16384, !dbg !2003
  store i32 %or, i32* %transformations, align 4, !dbg !2003
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2004
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 14, !dbg !2005
  %5 = load i32, i32* %flags, align 8, !dbg !2006
  %and = and i32 %5, -65, !dbg !2006
  store i32 %and, i32* %flags, align 8, !dbg !2006
  br label %if.end, !dbg !2007

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2008
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* %png_ptr, i32 %error_action, i32 %red, i32 %green) #0 !dbg !2009 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %error_action.addr = alloca i32, align 4
  %red.addr = alloca i32, align 4
  %green.addr = alloca i32, align 4
  %red_int = alloca i16, align 2
  %green_int = alloca i16, align 2
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2012, metadata !DIExpression()), !dbg !2013
  store i32 %error_action, i32* %error_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error_action.addr, metadata !2014, metadata !DIExpression()), !dbg !2015
  store i32 %red, i32* %red.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %red.addr, metadata !2016, metadata !DIExpression()), !dbg !2017
  store i32 %green, i32* %green.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %green.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2020
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !2022
  br i1 %cmp, label %if.then, label %if.end, !dbg !2023

if.then:                                          ; preds = %entry
  br label %if.end45, !dbg !2024

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %error_action.addr, align 4, !dbg !2025
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb4
  ], !dbg !2026

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2027
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 15, !dbg !2029
  %3 = load i32, i32* %transformations, align 4, !dbg !2030
  %or = or i32 %3, 6291456, !dbg !2030
  store i32 %or, i32* %transformations, align 4, !dbg !2030
  br label %sw.epilog, !dbg !2031

sw.bb1:                                           ; preds = %if.end
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2032
  %transformations2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 15, !dbg !2033
  %5 = load i32, i32* %transformations2, align 4, !dbg !2034
  %or3 = or i32 %5, 4194304, !dbg !2034
  store i32 %or3, i32* %transformations2, align 4, !dbg !2034
  br label %sw.epilog, !dbg !2035

sw.bb4:                                           ; preds = %if.end
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2036
  %transformations5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 15, !dbg !2037
  %7 = load i32, i32* %transformations5, align 4, !dbg !2038
  %or6 = or i32 %7, 2097152, !dbg !2038
  store i32 %or6, i32* %transformations5, align 4, !dbg !2038
  br label %sw.epilog, !dbg !2039

sw.default:                                       ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2040
  call void @png_error(%struct.png_struct_def* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2041
  unreachable, !dbg !2041

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb1, %sw.bb
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2042
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 56, !dbg !2044
  %10 = load i8, i8* %color_type, align 1, !dbg !2044
  %conv = zext i8 %10 to i32, !dbg !2042
  %cmp7 = icmp eq i32 %conv, 3, !dbg !2045
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !2046

if.then9:                                         ; preds = %sw.epilog
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2047
  %transformations10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 15, !dbg !2048
  %12 = load i32, i32* %transformations10, align 4, !dbg !2049
  %or11 = or i32 %12, 4096, !dbg !2049
  store i32 %or11, i32* %transformations10, align 4, !dbg !2049
  br label %if.end12, !dbg !2047

if.end12:                                         ; preds = %if.then9, %sw.epilog
  %13 = load i32, i32* %red.addr, align 4, !dbg !2050
  %cmp13 = icmp sge i32 %13, 0, !dbg !2053
  br i1 %cmp13, label %land.lhs.true, label %if.else, !dbg !2054

land.lhs.true:                                    ; preds = %if.end12
  %14 = load i32, i32* %green.addr, align 4, !dbg !2055
  %cmp15 = icmp sge i32 %14, 0, !dbg !2056
  br i1 %cmp15, label %land.lhs.true17, label %if.else, !dbg !2057

land.lhs.true17:                                  ; preds = %land.lhs.true
  %15 = load i32, i32* %red.addr, align 4, !dbg !2058
  %16 = load i32, i32* %green.addr, align 4, !dbg !2059
  %add = add nsw i32 %15, %16, !dbg !2060
  %cmp18 = icmp sle i32 %add, 100000, !dbg !2061
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !2062

if.then20:                                        ; preds = %land.lhs.true17
  call void @llvm.dbg.declare(metadata i16* %red_int, metadata !2063, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.declare(metadata i16* %green_int, metadata !2066, metadata !DIExpression()), !dbg !2067
  %17 = load i32, i32* %red.addr, align 4, !dbg !2068
  %mul = mul i32 %17, 32768, !dbg !2069
  %div = udiv i32 %mul, 100000, !dbg !2070
  %conv21 = trunc i32 %div to i16, !dbg !2071
  store i16 %conv21, i16* %red_int, align 2, !dbg !2072
  %18 = load i32, i32* %green.addr, align 4, !dbg !2073
  %mul22 = mul i32 %18, 32768, !dbg !2074
  %div23 = udiv i32 %mul22, 100000, !dbg !2075
  %conv24 = trunc i32 %div23 to i16, !dbg !2076
  store i16 %conv24, i16* %green_int, align 2, !dbg !2077
  %19 = load i16, i16* %red_int, align 2, !dbg !2078
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2079
  %rgb_to_gray_red_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 123, !dbg !2080
  store i16 %19, i16* %rgb_to_gray_red_coeff, align 4, !dbg !2081
  %21 = load i16, i16* %green_int, align 2, !dbg !2082
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2083
  %rgb_to_gray_green_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 124, !dbg !2084
  store i16 %21, i16* %rgb_to_gray_green_coeff, align 2, !dbg !2085
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2086
  %rgb_to_gray_coefficients_set = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 122, !dbg !2087
  store i8 1, i8* %rgb_to_gray_coefficients_set, align 2, !dbg !2088
  br label %if.end45, !dbg !2089

if.else:                                          ; preds = %land.lhs.true17, %land.lhs.true, %if.end12
  %24 = load i32, i32* %red.addr, align 4, !dbg !2090
  %cmp25 = icmp sge i32 %24, 0, !dbg !2093
  br i1 %cmp25, label %land.lhs.true27, label %if.end31, !dbg !2094

land.lhs.true27:                                  ; preds = %if.else
  %25 = load i32, i32* %green.addr, align 4, !dbg !2095
  %cmp28 = icmp sge i32 %25, 0, !dbg !2096
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2097

if.then30:                                        ; preds = %land.lhs.true27
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2098
  call void @png_warning(%struct.png_struct_def* %26, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0)), !dbg !2099
  br label %if.end31, !dbg !2099

if.end31:                                         ; preds = %if.then30, %land.lhs.true27, %if.else
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2100
  %rgb_to_gray_red_coeff32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 123, !dbg !2102
  %28 = load i16, i16* %rgb_to_gray_red_coeff32, align 4, !dbg !2102
  %conv33 = zext i16 %28 to i32, !dbg !2100
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !2103
  br i1 %cmp34, label %land.lhs.true36, label %if.end44, !dbg !2104

land.lhs.true36:                                  ; preds = %if.end31
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2105
  %rgb_to_gray_green_coeff37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 124, !dbg !2106
  %30 = load i16, i16* %rgb_to_gray_green_coeff37, align 2, !dbg !2106
  %conv38 = zext i16 %30 to i32, !dbg !2105
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !2107
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !2108

if.then41:                                        ; preds = %land.lhs.true36
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2109
  %rgb_to_gray_red_coeff42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 123, !dbg !2111
  store i16 6968, i16* %rgb_to_gray_red_coeff42, align 4, !dbg !2112
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2113
  %rgb_to_gray_green_coeff43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 124, !dbg !2114
  store i16 23434, i16* %rgb_to_gray_green_coeff43, align 2, !dbg !2115
  br label %if.end44, !dbg !2116

if.end44:                                         ; preds = %if.then41, %land.lhs.true36, %if.end31
  br label %if.end45

if.end45:                                         ; preds = %if.then, %if.end44, %if.then20
  ret void, !dbg !2117
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_rgb_to_gray(%struct.png_struct_def* %png_ptr, i32 %error_action, double %red, double %green) #0 !dbg !2118 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %error_action.addr = alloca i32, align 4
  %red.addr = alloca double, align 8
  %green.addr = alloca double, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2121, metadata !DIExpression()), !dbg !2122
  store i32 %error_action, i32* %error_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error_action.addr, metadata !2123, metadata !DIExpression()), !dbg !2124
  store double %red, double* %red.addr, align 8
  call void @llvm.dbg.declare(metadata double* %red.addr, metadata !2125, metadata !DIExpression()), !dbg !2126
  store double %green, double* %green.addr, align 8
  call void @llvm.dbg.declare(metadata double* %green.addr, metadata !2127, metadata !DIExpression()), !dbg !2128
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2129
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !2131
  br i1 %cmp, label %if.then, label %if.end, !dbg !2132

if.then:                                          ; preds = %entry
  br label %return, !dbg !2133

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2134
  %2 = load i32, i32* %error_action.addr, align 4, !dbg !2135
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2136
  %4 = load double, double* %red.addr, align 8, !dbg !2137
  %call = call i32 @png_fixed(%struct.png_struct_def* %3, double %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)), !dbg !2138
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2139
  %6 = load double, double* %green.addr, align 8, !dbg !2140
  %call1 = call i32 @png_fixed(%struct.png_struct_def* %5, double %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0)), !dbg !2141
  call void @png_set_rgb_to_gray_fixed(%struct.png_struct_def* %1, i32 %2, i32 %call, i32 %call1), !dbg !2142
  br label %return, !dbg !2143

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2143
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_set_read_user_transform_fn(%struct.png_struct_def* %png_ptr, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %read_user_transform_fn) #0 !dbg !2144 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %read_user_transform_fn.addr = alloca void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2147, metadata !DIExpression()), !dbg !2148
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %read_user_transform_fn, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn.addr, metadata !2149, metadata !DIExpression()), !dbg !2150
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2151
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !2153
  br i1 %cmp, label %if.then, label %if.end, !dbg !2154

if.then:                                          ; preds = %entry
  br label %return, !dbg !2155

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2156
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 15, !dbg !2157
  %2 = load i32, i32* %transformations, align 4, !dbg !2158
  %or = or i32 %2, 1048576, !dbg !2158
  store i32 %or, i32* %transformations, align 4, !dbg !2158
  %3 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn.addr, align 8, !dbg !2159
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2160
  %read_user_transform_fn1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 8, !dbg !2161
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %3, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn1, align 8, !dbg !2162
  br label %return, !dbg !2163

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2163
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_init_read_transformations(%struct.png_struct_def* %png_ptr) #0 !dbg !2164 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %gamma_correction = alloca i32, align 4
  %back = alloca %struct.png_color_struct, align 1
  %back_1 = alloca %struct.png_color_struct, align 1
  %palette = alloca %struct.png_color_struct*, align 8
  %num_palette = alloca i32, align 4
  %i = alloca i32, align 4
  %g = alloca i32, align 4
  %gs = alloca i32, align 4
  %v = alloca i8, align 1
  %w = alloca i8, align 1
  %temp = alloca i16, align 2
  %temp436 = alloca i16, align 2
  %temp478 = alloca i16, align 2
  %gs_sig = alloca i32, align 4
  %g_sig = alloca i32, align 4
  %g547 = alloca i32, align 4
  %gs548 = alloca i32, align 4
  %palette692 = alloca %struct.png_color_struct*, align 8
  %num_palette694 = alloca i32, align 4
  %i697 = alloca i32, align 4
  %i746 = alloca i32, align 4
  %istop = alloca i32, align 4
  %back749 = alloca %struct.png_color_struct, align 1
  %palette750 = alloca %struct.png_color_struct*, align 8
  %temp785 = alloca i16, align 2
  %temp821 = alloca i16, align 2
  %temp857 = alloca i16, align 2
  %i915 = alloca i32, align 4
  %istop916 = alloca i32, align 4
  %shift = alloca i32, align 4
  %component = alloca i32, align 4
  %component963 = alloca i32, align 4
  %component993 = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2165, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.declare(metadata i32* %gamma_correction, metadata !2167, metadata !DIExpression()), !dbg !2169
  store i32 0, i32* %gamma_correction, align 4, !dbg !2169
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2170
  %gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 75, !dbg !2172
  %1 = load i32, i32* %gamma, align 4, !dbg !2172
  %cmp = icmp ne i32 %1, 0, !dbg !2173
  br i1 %cmp, label %if.then, label %if.else8, !dbg !2174

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2175
  %screen_gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 76, !dbg !2178
  %3 = load i32, i32* %screen_gamma, align 8, !dbg !2178
  %cmp1 = icmp ne i32 %3, 0, !dbg !2179
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !2180

if.then2:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2181
  %gamma3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 75, !dbg !2182
  %5 = load i32, i32* %gamma3, align 4, !dbg !2182
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2183
  %screen_gamma4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 76, !dbg !2184
  %7 = load i32, i32* %screen_gamma4, align 8, !dbg !2184
  %call = call i32 @png_gamma_threshold(i32 %5, i32 %7), !dbg !2185
  store i32 %call, i32* %gamma_correction, align 4, !dbg !2186
  br label %if.end, !dbg !2187

if.else:                                          ; preds = %if.then
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2188
  %gamma5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 75, !dbg !2189
  %9 = load i32, i32* %gamma5, align 4, !dbg !2189
  %call6 = call i32 @png_reciprocal(i32 %9), !dbg !2190
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2191
  %screen_gamma7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 76, !dbg !2192
  store i32 %call6, i32* %screen_gamma7, align 8, !dbg !2193
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end19, !dbg !2194

if.else8:                                         ; preds = %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2195
  %screen_gamma9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 76, !dbg !2197
  %12 = load i32, i32* %screen_gamma9, align 8, !dbg !2197
  %cmp10 = icmp ne i32 %12, 0, !dbg !2198
  br i1 %cmp10, label %if.then11, label %if.else15, !dbg !2199

if.then11:                                        ; preds = %if.else8
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2200
  %screen_gamma12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 76, !dbg !2201
  %14 = load i32, i32* %screen_gamma12, align 8, !dbg !2201
  %call13 = call i32 @png_reciprocal(i32 %14), !dbg !2202
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2203
  %gamma14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 75, !dbg !2204
  store i32 %call13, i32* %gamma14, align 4, !dbg !2205
  br label %if.end18, !dbg !2203

if.else15:                                        ; preds = %if.else8
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2206
  %gamma16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 75, !dbg !2207
  store i32 100000, i32* %gamma16, align 4, !dbg !2208
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2209
  %screen_gamma17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 76, !dbg !2210
  store i32 100000, i32* %screen_gamma17, align 8, !dbg !2211
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then11
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  %18 = load i32, i32* %gamma_correction, align 4, !dbg !2212
  %tobool = icmp ne i32 %18, 0, !dbg !2212
  br i1 %tobool, label %if.then20, label %if.else21, !dbg !2214

if.then20:                                        ; preds = %if.end19
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2215
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 15, !dbg !2216
  %20 = load i32, i32* %transformations, align 4, !dbg !2217
  %or = or i32 %20, 8192, !dbg !2217
  store i32 %or, i32* %transformations, align 4, !dbg !2217
  br label %if.end23, !dbg !2215

if.else21:                                        ; preds = %if.end19
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2218
  %transformations22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 15, !dbg !2219
  %22 = load i32, i32* %transformations22, align 4, !dbg !2220
  %and = and i32 %22, -8193, !dbg !2220
  store i32 %and, i32* %transformations22, align 4, !dbg !2220
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then20
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2221
  %transformations24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 15, !dbg !2223
  %24 = load i32, i32* %transformations24, align 4, !dbg !2223
  %and25 = and i32 %24, 262144, !dbg !2224
  %tobool26 = icmp ne i32 %and25, 0, !dbg !2224
  br i1 %tobool26, label %land.lhs.true, label %if.end34, !dbg !2225

land.lhs.true:                                    ; preds = %if.end23
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2226
  %transformations27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 15, !dbg !2227
  %26 = load i32, i32* %transformations27, align 4, !dbg !2227
  %and28 = and i32 %26, 128, !dbg !2228
  %tobool29 = icmp ne i32 %and28, 0, !dbg !2228
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !2229

if.then30:                                        ; preds = %land.lhs.true
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2230
  %transformations31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 15, !dbg !2232
  %28 = load i32, i32* %transformations31, align 4, !dbg !2233
  %and32 = and i32 %28, -41943297, !dbg !2233
  store i32 %and32, i32* %transformations31, align 4, !dbg !2233
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2234
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 14, !dbg !2235
  %30 = load i32, i32* %flags, align 8, !dbg !2236
  %and33 = and i32 %30, -8193, !dbg !2236
  store i32 %and33, i32* %flags, align 8, !dbg !2236
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2237
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 50, !dbg !2238
  store i16 0, i16* %num_trans, align 8, !dbg !2239
  br label %if.end34, !dbg !2240

if.end34:                                         ; preds = %if.then30, %land.lhs.true, %if.end23
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2241
  %screen_gamma35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 76, !dbg !2243
  %33 = load i32, i32* %screen_gamma35, align 8, !dbg !2243
  %call36 = call i32 @png_gamma_significant(i32 %33), !dbg !2244
  %tobool37 = icmp ne i32 %call36, 0, !dbg !2244
  br i1 %tobool37, label %if.end43, label %if.then38, !dbg !2245

if.then38:                                        ; preds = %if.end34
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2246
  %transformations39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 15, !dbg !2248
  %35 = load i32, i32* %transformations39, align 4, !dbg !2249
  %and40 = and i32 %35, -8388609, !dbg !2249
  store i32 %and40, i32* %transformations39, align 4, !dbg !2249
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2250
  %flags41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 14, !dbg !2251
  %37 = load i32, i32* %flags41, align 8, !dbg !2252
  %and42 = and i32 %37, -8193, !dbg !2252
  store i32 %and42, i32* %flags41, align 8, !dbg !2252
  br label %if.end43, !dbg !2253

if.end43:                                         ; preds = %if.then38, %if.end34
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2254
  %transformations44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 15, !dbg !2256
  %39 = load i32, i32* %transformations44, align 4, !dbg !2256
  %and45 = and i32 %39, 256, !dbg !2257
  %tobool46 = icmp ne i32 %and45, 0, !dbg !2257
  br i1 %tobool46, label %if.then47, label %if.else53, !dbg !2258

if.then47:                                        ; preds = %if.end43
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2259
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 56, !dbg !2262
  %41 = load i8, i8* %color_type, align 1, !dbg !2262
  %conv = zext i8 %41 to i32, !dbg !2259
  %and48 = and i32 %conv, 2, !dbg !2263
  %tobool49 = icmp ne i32 %and48, 0, !dbg !2263
  br i1 %tobool49, label %if.end52, label %if.then50, !dbg !2264

if.then50:                                        ; preds = %if.then47
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2265
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 13, !dbg !2266
  %43 = load i32, i32* %mode, align 4, !dbg !2267
  %or51 = or i32 %43, 2048, !dbg !2267
  store i32 %or51, i32* %mode, align 4, !dbg !2267
  br label %if.end52, !dbg !2265

if.end52:                                         ; preds = %if.then50, %if.then47
  br label %if.end84, !dbg !2268

if.else53:                                        ; preds = %if.end43
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2269
  %transformations54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 15, !dbg !2271
  %45 = load i32, i32* %transformations54, align 4, !dbg !2271
  %and55 = and i32 %45, 128, !dbg !2272
  %tobool56 = icmp ne i32 %and55, 0, !dbg !2272
  br i1 %tobool56, label %if.then57, label %if.end83, !dbg !2273

if.then57:                                        ; preds = %if.else53
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2274
  %transformations58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 15, !dbg !2277
  %47 = load i32, i32* %transformations58, align 4, !dbg !2277
  %and59 = and i32 %47, 16384, !dbg !2278
  %tobool60 = icmp ne i32 %and59, 0, !dbg !2278
  br i1 %tobool60, label %if.then61, label %if.end82, !dbg !2279

if.then61:                                        ; preds = %if.then57
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2280
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 69, !dbg !2283
  %red = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 1, !dbg !2284
  %49 = load i16, i16* %red, align 2, !dbg !2284
  %conv62 = zext i16 %49 to i32, !dbg !2280
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2285
  %background63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 69, !dbg !2286
  %green = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background63, i32 0, i32 2, !dbg !2287
  %51 = load i16, i16* %green, align 4, !dbg !2287
  %conv64 = zext i16 %51 to i32, !dbg !2285
  %cmp65 = icmp eq i32 %conv62, %conv64, !dbg !2288
  br i1 %cmp65, label %land.lhs.true67, label %if.end81, !dbg !2289

land.lhs.true67:                                  ; preds = %if.then61
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2290
  %background68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 69, !dbg !2291
  %red69 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background68, i32 0, i32 1, !dbg !2292
  %53 = load i16, i16* %red69, align 2, !dbg !2292
  %conv70 = zext i16 %53 to i32, !dbg !2290
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2293
  %background71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 69, !dbg !2294
  %blue = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background71, i32 0, i32 3, !dbg !2295
  %55 = load i16, i16* %blue, align 2, !dbg !2295
  %conv72 = zext i16 %55 to i32, !dbg !2293
  %cmp73 = icmp eq i32 %conv70, %conv72, !dbg !2296
  br i1 %cmp73, label %if.then75, label %if.end81, !dbg !2297

if.then75:                                        ; preds = %land.lhs.true67
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2298
  %mode76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 13, !dbg !2300
  %57 = load i32, i32* %mode76, align 4, !dbg !2301
  %or77 = or i32 %57, 2048, !dbg !2301
  store i32 %or77, i32* %mode76, align 4, !dbg !2301
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2302
  %background78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 69, !dbg !2303
  %red79 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background78, i32 0, i32 1, !dbg !2304
  %59 = load i16, i16* %red79, align 2, !dbg !2304
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2305
  %background80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 69, !dbg !2306
  %gray = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background80, i32 0, i32 4, !dbg !2307
  store i16 %59, i16* %gray, align 8, !dbg !2308
  br label %if.end81, !dbg !2309

if.end81:                                         ; preds = %if.then75, %land.lhs.true67, %if.then61
  br label %if.end82, !dbg !2310

if.end82:                                         ; preds = %if.end81, %if.then57
  br label %if.end83, !dbg !2311

if.end83:                                         ; preds = %if.end82, %if.else53
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end52
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2312
  %color_type85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 56, !dbg !2314
  %62 = load i8, i8* %color_type85, align 1, !dbg !2314
  %conv86 = zext i8 %62 to i32, !dbg !2312
  %cmp87 = icmp eq i32 %conv86, 3, !dbg !2315
  br i1 %cmp87, label %if.then89, label %if.else90, !dbg !2316

if.then89:                                        ; preds = %if.end84
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2317
  call void @png_init_palette_transformations(%struct.png_struct_def* %63), !dbg !2318
  br label %if.end91, !dbg !2318

if.else90:                                        ; preds = %if.end84
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2319
  call void @png_init_rgb_transformations(%struct.png_struct_def* %64), !dbg !2320
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then89
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2321
  %transformations92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 15, !dbg !2323
  %66 = load i32, i32* %transformations92, align 4, !dbg !2323
  %and93 = and i32 %66, 512, !dbg !2324
  %tobool94 = icmp ne i32 %and93, 0, !dbg !2324
  br i1 %tobool94, label %land.lhs.true95, label %if.end141, !dbg !2325

land.lhs.true95:                                  ; preds = %if.end91
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2326
  %transformations96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 15, !dbg !2327
  %68 = load i32, i32* %transformations96, align 4, !dbg !2327
  %and97 = and i32 %68, 128, !dbg !2328
  %tobool98 = icmp ne i32 %and97, 0, !dbg !2328
  br i1 %tobool98, label %land.lhs.true99, label %if.end141, !dbg !2329

land.lhs.true99:                                  ; preds = %land.lhs.true95
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2330
  %transformations100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 15, !dbg !2331
  %70 = load i32, i32* %transformations100, align 4, !dbg !2331
  %and101 = and i32 %70, 256, !dbg !2332
  %tobool102 = icmp ne i32 %and101, 0, !dbg !2332
  br i1 %tobool102, label %if.end141, label %land.lhs.true103, !dbg !2333

land.lhs.true103:                                 ; preds = %land.lhs.true99
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2334
  %bit_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 57, !dbg !2335
  %72 = load i8, i8* %bit_depth, align 8, !dbg !2335
  %conv104 = zext i8 %72 to i32, !dbg !2334
  %cmp105 = icmp ne i32 %conv104, 16, !dbg !2336
  br i1 %cmp105, label %if.then107, label %if.end141, !dbg !2337

if.then107:                                       ; preds = %land.lhs.true103
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2338
  %background108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 69, !dbg !2338
  %red109 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background108, i32 0, i32 1, !dbg !2338
  %74 = load i16, i16* %red109, align 2, !dbg !2338
  %conv110 = zext i16 %74 to i32, !dbg !2338
  %mul = mul i32 %conv110, 255, !dbg !2338
  %add = add i32 %mul, 32895, !dbg !2338
  %shr = lshr i32 %add, 16, !dbg !2338
  %conv111 = trunc i32 %shr to i16, !dbg !2338
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2338
  %background112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 69, !dbg !2338
  %red113 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background112, i32 0, i32 1, !dbg !2338
  store i16 %conv111, i16* %red113, align 2, !dbg !2338
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2340
  %background114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 69, !dbg !2340
  %green115 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background114, i32 0, i32 2, !dbg !2340
  %77 = load i16, i16* %green115, align 4, !dbg !2340
  %conv116 = zext i16 %77 to i32, !dbg !2340
  %mul117 = mul i32 %conv116, 255, !dbg !2340
  %add118 = add i32 %mul117, 32895, !dbg !2340
  %shr119 = lshr i32 %add118, 16, !dbg !2340
  %conv120 = trunc i32 %shr119 to i16, !dbg !2340
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2340
  %background121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 69, !dbg !2340
  %green122 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background121, i32 0, i32 2, !dbg !2340
  store i16 %conv120, i16* %green122, align 4, !dbg !2340
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2341
  %background123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %79, i32 0, i32 69, !dbg !2341
  %blue124 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background123, i32 0, i32 3, !dbg !2341
  %80 = load i16, i16* %blue124, align 2, !dbg !2341
  %conv125 = zext i16 %80 to i32, !dbg !2341
  %mul126 = mul i32 %conv125, 255, !dbg !2341
  %add127 = add i32 %mul126, 32895, !dbg !2341
  %shr128 = lshr i32 %add127, 16, !dbg !2341
  %conv129 = trunc i32 %shr128 to i16, !dbg !2341
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2341
  %background130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %81, i32 0, i32 69, !dbg !2341
  %blue131 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background130, i32 0, i32 3, !dbg !2341
  store i16 %conv129, i16* %blue131, align 2, !dbg !2341
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2342
  %background132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 69, !dbg !2342
  %gray133 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background132, i32 0, i32 4, !dbg !2342
  %83 = load i16, i16* %gray133, align 8, !dbg !2342
  %conv134 = zext i16 %83 to i32, !dbg !2342
  %mul135 = mul i32 %conv134, 255, !dbg !2342
  %add136 = add i32 %mul135, 32895, !dbg !2342
  %shr137 = lshr i32 %add136, 16, !dbg !2342
  %conv138 = trunc i32 %shr137 to i16, !dbg !2342
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2342
  %background139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 69, !dbg !2342
  %gray140 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background139, i32 0, i32 4, !dbg !2342
  store i16 %conv138, i16* %gray140, align 8, !dbg !2342
  br label %if.end141, !dbg !2343

if.end141:                                        ; preds = %if.then107, %land.lhs.true103, %land.lhs.true99, %land.lhs.true95, %if.end91
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2344
  %transformations142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 15, !dbg !2346
  %86 = load i32, i32* %transformations142, align 4, !dbg !2346
  %and143 = and i32 %86, 67109888, !dbg !2347
  %tobool144 = icmp ne i32 %and143, 0, !dbg !2347
  br i1 %tobool144, label %land.lhs.true145, label %if.end187, !dbg !2348

land.lhs.true145:                                 ; preds = %if.end141
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2349
  %transformations146 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 15, !dbg !2350
  %88 = load i32, i32* %transformations146, align 4, !dbg !2350
  %and147 = and i32 %88, 128, !dbg !2351
  %tobool148 = icmp ne i32 %and147, 0, !dbg !2351
  br i1 %tobool148, label %land.lhs.true149, label %if.end187, !dbg !2352

land.lhs.true149:                                 ; preds = %land.lhs.true145
  %89 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2353
  %transformations150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %89, i32 0, i32 15, !dbg !2354
  %90 = load i32, i32* %transformations150, align 4, !dbg !2354
  %and151 = and i32 %90, 256, !dbg !2355
  %tobool152 = icmp ne i32 %and151, 0, !dbg !2355
  br i1 %tobool152, label %if.end187, label %land.lhs.true153, !dbg !2356

land.lhs.true153:                                 ; preds = %land.lhs.true149
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2357
  %bit_depth154 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %91, i32 0, i32 57, !dbg !2358
  %92 = load i8, i8* %bit_depth154, align 8, !dbg !2358
  %conv155 = zext i8 %92 to i32, !dbg !2357
  %cmp156 = icmp eq i32 %conv155, 16, !dbg !2359
  br i1 %cmp156, label %if.then158, label %if.end187, !dbg !2360

if.then158:                                       ; preds = %land.lhs.true153
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2361
  %background159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %93, i32 0, i32 69, !dbg !2363
  %red160 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background159, i32 0, i32 1, !dbg !2364
  %94 = load i16, i16* %red160, align 2, !dbg !2364
  %conv161 = zext i16 %94 to i32, !dbg !2361
  %mul162 = mul nsw i32 %conv161, 257, !dbg !2365
  %conv163 = trunc i32 %mul162 to i16, !dbg !2366
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2367
  %background164 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 69, !dbg !2368
  %red165 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background164, i32 0, i32 1, !dbg !2369
  store i16 %conv163, i16* %red165, align 2, !dbg !2370
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2371
  %background166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 69, !dbg !2372
  %green167 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background166, i32 0, i32 2, !dbg !2373
  %97 = load i16, i16* %green167, align 4, !dbg !2373
  %conv168 = zext i16 %97 to i32, !dbg !2371
  %mul169 = mul nsw i32 %conv168, 257, !dbg !2374
  %conv170 = trunc i32 %mul169 to i16, !dbg !2375
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2376
  %background171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 69, !dbg !2377
  %green172 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background171, i32 0, i32 2, !dbg !2378
  store i16 %conv170, i16* %green172, align 4, !dbg !2379
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2380
  %background173 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 69, !dbg !2381
  %blue174 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background173, i32 0, i32 3, !dbg !2382
  %100 = load i16, i16* %blue174, align 2, !dbg !2382
  %conv175 = zext i16 %100 to i32, !dbg !2380
  %mul176 = mul nsw i32 %conv175, 257, !dbg !2383
  %conv177 = trunc i32 %mul176 to i16, !dbg !2384
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2385
  %background178 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 69, !dbg !2386
  %blue179 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background178, i32 0, i32 3, !dbg !2387
  store i16 %conv177, i16* %blue179, align 2, !dbg !2388
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2389
  %background180 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 69, !dbg !2390
  %gray181 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background180, i32 0, i32 4, !dbg !2391
  %103 = load i16, i16* %gray181, align 8, !dbg !2391
  %conv182 = zext i16 %103 to i32, !dbg !2389
  %mul183 = mul nsw i32 %conv182, 257, !dbg !2392
  %conv184 = trunc i32 %mul183 to i16, !dbg !2393
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2394
  %background185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 69, !dbg !2395
  %gray186 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background185, i32 0, i32 4, !dbg !2396
  store i16 %conv184, i16* %gray186, align 8, !dbg !2397
  br label %if.end187, !dbg !2398

if.end187:                                        ; preds = %if.then158, %land.lhs.true153, %land.lhs.true149, %land.lhs.true145, %if.end141
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2399
  %background_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 70, !dbg !2400
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2401
  %background188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %106, i32 0, i32 69, !dbg !2402
  %107 = bitcast %struct.png_color_16_struct* %background_1 to i8*, !dbg !2402
  %108 = bitcast %struct.png_color_16_struct* %background188 to i8*, !dbg !2402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %107, i8* align 8 %108, i64 10, i1 false), !dbg !2402
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2403
  %transformations189 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %109, i32 0, i32 15, !dbg !2405
  %110 = load i32, i32* %transformations189, align 4, !dbg !2405
  %and190 = and i32 %110, 8192, !dbg !2406
  %tobool191 = icmp ne i32 %and190, 0, !dbg !2406
  br i1 %tobool191, label %if.then230, label %lor.lhs.false, !dbg !2407

lor.lhs.false:                                    ; preds = %if.end187
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2408
  %transformations192 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 15, !dbg !2409
  %112 = load i32, i32* %transformations192, align 4, !dbg !2409
  %and193 = and i32 %112, 6291456, !dbg !2410
  %tobool194 = icmp ne i32 %and193, 0, !dbg !2410
  br i1 %tobool194, label %land.lhs.true195, label %lor.lhs.false203, !dbg !2411

land.lhs.true195:                                 ; preds = %lor.lhs.false
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2412
  %gamma196 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 75, !dbg !2413
  %114 = load i32, i32* %gamma196, align 4, !dbg !2413
  %call197 = call i32 @png_gamma_significant(i32 %114), !dbg !2414
  %tobool198 = icmp ne i32 %call197, 0, !dbg !2414
  br i1 %tobool198, label %if.then230, label %lor.lhs.false199, !dbg !2415

lor.lhs.false199:                                 ; preds = %land.lhs.true195
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2416
  %screen_gamma200 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 76, !dbg !2417
  %116 = load i32, i32* %screen_gamma200, align 8, !dbg !2417
  %call201 = call i32 @png_gamma_significant(i32 %116), !dbg !2418
  %tobool202 = icmp ne i32 %call201, 0, !dbg !2418
  br i1 %tobool202, label %if.then230, label %lor.lhs.false203, !dbg !2419

lor.lhs.false203:                                 ; preds = %lor.lhs.false199, %lor.lhs.false
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2420
  %transformations204 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %117, i32 0, i32 15, !dbg !2421
  %118 = load i32, i32* %transformations204, align 4, !dbg !2421
  %and205 = and i32 %118, 128, !dbg !2422
  %tobool206 = icmp ne i32 %and205, 0, !dbg !2422
  br i1 %tobool206, label %land.lhs.true207, label %lor.lhs.false222, !dbg !2423

land.lhs.true207:                                 ; preds = %lor.lhs.false203
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2424
  %gamma208 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 75, !dbg !2425
  %120 = load i32, i32* %gamma208, align 4, !dbg !2425
  %call209 = call i32 @png_gamma_significant(i32 %120), !dbg !2426
  %tobool210 = icmp ne i32 %call209, 0, !dbg !2426
  br i1 %tobool210, label %if.then230, label %lor.lhs.false211, !dbg !2427

lor.lhs.false211:                                 ; preds = %land.lhs.true207
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2428
  %screen_gamma212 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 76, !dbg !2429
  %122 = load i32, i32* %screen_gamma212, align 8, !dbg !2429
  %call213 = call i32 @png_gamma_significant(i32 %122), !dbg !2430
  %tobool214 = icmp ne i32 %call213, 0, !dbg !2430
  br i1 %tobool214, label %if.then230, label %lor.lhs.false215, !dbg !2431

lor.lhs.false215:                                 ; preds = %lor.lhs.false211
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2432
  %background_gamma_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %123, i32 0, i32 67, !dbg !2433
  %124 = load i8, i8* %background_gamma_type, align 8, !dbg !2433
  %conv216 = zext i8 %124 to i32, !dbg !2432
  %cmp217 = icmp eq i32 %conv216, 3, !dbg !2434
  br i1 %cmp217, label %land.lhs.true219, label %lor.lhs.false222, !dbg !2435

land.lhs.true219:                                 ; preds = %lor.lhs.false215
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2436
  %background_gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 68, !dbg !2437
  %126 = load i32, i32* %background_gamma, align 4, !dbg !2437
  %call220 = call i32 @png_gamma_significant(i32 %126), !dbg !2438
  %tobool221 = icmp ne i32 %call220, 0, !dbg !2438
  br i1 %tobool221, label %if.then230, label %lor.lhs.false222, !dbg !2439

lor.lhs.false222:                                 ; preds = %land.lhs.true219, %lor.lhs.false215, %lor.lhs.false203
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2440
  %transformations223 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 15, !dbg !2441
  %128 = load i32, i32* %transformations223, align 4, !dbg !2441
  %and224 = and i32 %128, 8388608, !dbg !2442
  %tobool225 = icmp ne i32 %and224, 0, !dbg !2442
  br i1 %tobool225, label %land.lhs.true226, label %if.else736, !dbg !2443

land.lhs.true226:                                 ; preds = %lor.lhs.false222
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2444
  %screen_gamma227 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %129, i32 0, i32 76, !dbg !2445
  %130 = load i32, i32* %screen_gamma227, align 8, !dbg !2445
  %call228 = call i32 @png_gamma_significant(i32 %130), !dbg !2446
  %tobool229 = icmp ne i32 %call228, 0, !dbg !2446
  br i1 %tobool229, label %if.then230, label %if.else736, !dbg !2447

if.then230:                                       ; preds = %land.lhs.true226, %land.lhs.true219, %lor.lhs.false211, %land.lhs.true207, %lor.lhs.false199, %land.lhs.true195, %if.end187
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2448
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2450
  %bit_depth231 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 57, !dbg !2451
  %133 = load i8, i8* %bit_depth231, align 8, !dbg !2451
  %conv232 = zext i8 %133 to i32, !dbg !2450
  call void @png_build_gamma_table(%struct.png_struct_def* %131, i32 %conv232), !dbg !2452
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2453
  %transformations233 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 15, !dbg !2455
  %135 = load i32, i32* %transformations233, align 4, !dbg !2455
  %and234 = and i32 %135, 128, !dbg !2456
  %tobool235 = icmp ne i32 %and234, 0, !dbg !2456
  br i1 %tobool235, label %if.then236, label %if.else676, !dbg !2457

if.then236:                                       ; preds = %if.then230
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2458
  %transformations237 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 15, !dbg !2461
  %137 = load i32, i32* %transformations237, align 4, !dbg !2461
  %and238 = and i32 %137, 6291456, !dbg !2462
  %tobool239 = icmp ne i32 %and238, 0, !dbg !2462
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !2463

if.then240:                                       ; preds = %if.then236
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2464
  call void @png_warning(%struct.png_struct_def* %138, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)), !dbg !2465
  br label %if.end241, !dbg !2465

if.end241:                                        ; preds = %if.then240, %if.then236
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2466
  %color_type242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 56, !dbg !2468
  %140 = load i8, i8* %color_type242, align 1, !dbg !2468
  %conv243 = zext i8 %140 to i32, !dbg !2466
  %cmp244 = icmp eq i32 %conv243, 3, !dbg !2469
  br i1 %cmp244, label %if.then246, label %if.else546, !dbg !2470

if.then246:                                       ; preds = %if.end241
  call void @llvm.dbg.declare(metadata %struct.png_color_struct* %back, metadata !2471, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.declare(metadata %struct.png_color_struct* %back_1, metadata !2474, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette, metadata !2476, metadata !DIExpression()), !dbg !2477
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2478
  %palette247 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %141, i32 0, i32 47, !dbg !2479
  %142 = load %struct.png_color_struct*, %struct.png_color_struct** %palette247, align 8, !dbg !2479
  store %struct.png_color_struct* %142, %struct.png_color_struct** %palette, align 8, !dbg !2477
  call void @llvm.dbg.declare(metadata i32* %num_palette, metadata !2480, metadata !DIExpression()), !dbg !2481
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2482
  %num_palette248 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %143, i32 0, i32 48, !dbg !2483
  %144 = load i16, i16* %num_palette248, align 8, !dbg !2483
  %conv249 = zext i16 %144 to i32, !dbg !2482
  store i32 %conv249, i32* %num_palette, align 4, !dbg !2481
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2484, metadata !DIExpression()), !dbg !2485
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2486
  %background_gamma_type250 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 67, !dbg !2488
  %146 = load i8, i8* %background_gamma_type250, align 8, !dbg !2488
  %conv251 = zext i8 %146 to i32, !dbg !2486
  %cmp252 = icmp eq i32 %conv251, 2, !dbg !2489
  br i1 %cmp252, label %if.then254, label %if.else287, !dbg !2490

if.then254:                                       ; preds = %if.then246
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2491
  %gamma_table = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 77, !dbg !2493
  %148 = load i8*, i8** %gamma_table, align 8, !dbg !2493
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2494
  %background255 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 69, !dbg !2495
  %red256 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background255, i32 0, i32 1, !dbg !2496
  %150 = load i16, i16* %red256, align 2, !dbg !2496
  %idxprom = zext i16 %150 to i64, !dbg !2491
  %arrayidx = getelementptr inbounds i8, i8* %148, i64 %idxprom, !dbg !2491
  %151 = load i8, i8* %arrayidx, align 1, !dbg !2491
  %red257 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 0, !dbg !2497
  store i8 %151, i8* %red257, align 1, !dbg !2498
  %152 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2499
  %gamma_table258 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %152, i32 0, i32 77, !dbg !2500
  %153 = load i8*, i8** %gamma_table258, align 8, !dbg !2500
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2501
  %background259 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 69, !dbg !2502
  %green260 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background259, i32 0, i32 2, !dbg !2503
  %155 = load i16, i16* %green260, align 4, !dbg !2503
  %idxprom261 = zext i16 %155 to i64, !dbg !2499
  %arrayidx262 = getelementptr inbounds i8, i8* %153, i64 %idxprom261, !dbg !2499
  %156 = load i8, i8* %arrayidx262, align 1, !dbg !2499
  %green263 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 1, !dbg !2504
  store i8 %156, i8* %green263, align 1, !dbg !2505
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2506
  %gamma_table264 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %157, i32 0, i32 77, !dbg !2507
  %158 = load i8*, i8** %gamma_table264, align 8, !dbg !2507
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2508
  %background265 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %159, i32 0, i32 69, !dbg !2509
  %blue266 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background265, i32 0, i32 3, !dbg !2510
  %160 = load i16, i16* %blue266, align 2, !dbg !2510
  %idxprom267 = zext i16 %160 to i64, !dbg !2506
  %arrayidx268 = getelementptr inbounds i8, i8* %158, i64 %idxprom267, !dbg !2506
  %161 = load i8, i8* %arrayidx268, align 1, !dbg !2506
  %blue269 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 2, !dbg !2511
  store i8 %161, i8* %blue269, align 1, !dbg !2512
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2513
  %gamma_to_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %162, i32 0, i32 80, !dbg !2514
  %163 = load i8*, i8** %gamma_to_1, align 8, !dbg !2514
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2515
  %background270 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %164, i32 0, i32 69, !dbg !2516
  %red271 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background270, i32 0, i32 1, !dbg !2517
  %165 = load i16, i16* %red271, align 2, !dbg !2517
  %idxprom272 = zext i16 %165 to i64, !dbg !2513
  %arrayidx273 = getelementptr inbounds i8, i8* %163, i64 %idxprom272, !dbg !2513
  %166 = load i8, i8* %arrayidx273, align 1, !dbg !2513
  %red274 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 0, !dbg !2518
  store i8 %166, i8* %red274, align 1, !dbg !2519
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2520
  %gamma_to_1275 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 80, !dbg !2521
  %168 = load i8*, i8** %gamma_to_1275, align 8, !dbg !2521
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2522
  %background276 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 69, !dbg !2523
  %green277 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background276, i32 0, i32 2, !dbg !2524
  %170 = load i16, i16* %green277, align 4, !dbg !2524
  %idxprom278 = zext i16 %170 to i64, !dbg !2520
  %arrayidx279 = getelementptr inbounds i8, i8* %168, i64 %idxprom278, !dbg !2520
  %171 = load i8, i8* %arrayidx279, align 1, !dbg !2520
  %green280 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 1, !dbg !2525
  store i8 %171, i8* %green280, align 1, !dbg !2526
  %172 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2527
  %gamma_to_1281 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %172, i32 0, i32 80, !dbg !2528
  %173 = load i8*, i8** %gamma_to_1281, align 8, !dbg !2528
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2529
  %background282 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %174, i32 0, i32 69, !dbg !2530
  %blue283 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background282, i32 0, i32 3, !dbg !2531
  %175 = load i16, i16* %blue283, align 2, !dbg !2531
  %idxprom284 = zext i16 %175 to i64, !dbg !2527
  %arrayidx285 = getelementptr inbounds i8, i8* %173, i64 %idxprom284, !dbg !2527
  %176 = load i8, i8* %arrayidx285, align 1, !dbg !2527
  %blue286 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 2, !dbg !2532
  store i8 %176, i8* %blue286, align 1, !dbg !2533
  br label %if.end367, !dbg !2534

if.else287:                                       ; preds = %if.then246
  call void @llvm.dbg.declare(metadata i32* %g, metadata !2535, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.declare(metadata i32* %gs, metadata !2538, metadata !DIExpression()), !dbg !2539
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2540
  %background_gamma_type288 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %177, i32 0, i32 67, !dbg !2541
  %178 = load i8, i8* %background_gamma_type288, align 8, !dbg !2541
  %conv289 = zext i8 %178 to i32, !dbg !2540
  switch i32 %conv289, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb291
    i32 3, label %sw.bb297
  ], !dbg !2542

sw.bb:                                            ; preds = %if.else287
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2543
  %screen_gamma290 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %179, i32 0, i32 76, !dbg !2545
  %180 = load i32, i32* %screen_gamma290, align 8, !dbg !2545
  store i32 %180, i32* %g, align 4, !dbg !2546
  store i32 100000, i32* %gs, align 4, !dbg !2547
  br label %sw.epilog, !dbg !2548

sw.bb291:                                         ; preds = %if.else287
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2549
  %gamma292 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 75, !dbg !2550
  %182 = load i32, i32* %gamma292, align 4, !dbg !2550
  %call293 = call i32 @png_reciprocal(i32 %182), !dbg !2551
  store i32 %call293, i32* %g, align 4, !dbg !2552
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2553
  %gamma294 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 75, !dbg !2554
  %184 = load i32, i32* %gamma294, align 4, !dbg !2554
  %185 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2555
  %screen_gamma295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %185, i32 0, i32 76, !dbg !2556
  %186 = load i32, i32* %screen_gamma295, align 8, !dbg !2556
  %call296 = call i32 @png_reciprocal2(i32 %184, i32 %186), !dbg !2557
  store i32 %call296, i32* %gs, align 4, !dbg !2558
  br label %sw.epilog, !dbg !2559

sw.bb297:                                         ; preds = %if.else287
  %187 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2560
  %background_gamma298 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %187, i32 0, i32 68, !dbg !2561
  %188 = load i32, i32* %background_gamma298, align 4, !dbg !2561
  %call299 = call i32 @png_reciprocal(i32 %188), !dbg !2562
  store i32 %call299, i32* %g, align 4, !dbg !2563
  %189 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2564
  %background_gamma300 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %189, i32 0, i32 68, !dbg !2565
  %190 = load i32, i32* %background_gamma300, align 4, !dbg !2565
  %191 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2566
  %screen_gamma301 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %191, i32 0, i32 76, !dbg !2567
  %192 = load i32, i32* %screen_gamma301, align 8, !dbg !2567
  %call302 = call i32 @png_reciprocal2(i32 %190, i32 %192), !dbg !2568
  store i32 %call302, i32* %gs, align 4, !dbg !2569
  br label %sw.epilog, !dbg !2570

sw.default:                                       ; preds = %if.else287
  store i32 100000, i32* %g, align 4, !dbg !2571
  store i32 100000, i32* %gs, align 4, !dbg !2572
  br label %sw.epilog, !dbg !2573

sw.epilog:                                        ; preds = %sw.default, %sw.bb297, %sw.bb291, %sw.bb
  %193 = load i32, i32* %gs, align 4, !dbg !2574
  %call303 = call i32 @png_gamma_significant(i32 %193), !dbg !2576
  %tobool304 = icmp ne i32 %call303, 0, !dbg !2576
  br i1 %tobool304, label %if.then305, label %if.else321, !dbg !2577

if.then305:                                       ; preds = %sw.epilog
  %194 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2578
  %background306 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %194, i32 0, i32 69, !dbg !2580
  %red307 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background306, i32 0, i32 1, !dbg !2581
  %195 = load i16, i16* %red307, align 2, !dbg !2581
  %conv308 = zext i16 %195 to i32, !dbg !2578
  %196 = load i32, i32* %gs, align 4, !dbg !2582
  %call309 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv308, i32 %196), !dbg !2583
  %red310 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 0, !dbg !2584
  store i8 %call309, i8* %red310, align 1, !dbg !2585
  %197 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2586
  %background311 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %197, i32 0, i32 69, !dbg !2587
  %green312 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background311, i32 0, i32 2, !dbg !2588
  %198 = load i16, i16* %green312, align 4, !dbg !2588
  %conv313 = zext i16 %198 to i32, !dbg !2586
  %199 = load i32, i32* %gs, align 4, !dbg !2589
  %call314 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv313, i32 %199), !dbg !2590
  %green315 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 1, !dbg !2591
  store i8 %call314, i8* %green315, align 1, !dbg !2592
  %200 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2593
  %background316 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %200, i32 0, i32 69, !dbg !2594
  %blue317 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background316, i32 0, i32 3, !dbg !2595
  %201 = load i16, i16* %blue317, align 2, !dbg !2595
  %conv318 = zext i16 %201 to i32, !dbg !2593
  %202 = load i32, i32* %gs, align 4, !dbg !2596
  %call319 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv318, i32 %202), !dbg !2597
  %blue320 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 2, !dbg !2598
  store i8 %call319, i8* %blue320, align 1, !dbg !2599
  br label %if.end334, !dbg !2600

if.else321:                                       ; preds = %sw.epilog
  %203 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2601
  %background322 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %203, i32 0, i32 69, !dbg !2603
  %red323 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background322, i32 0, i32 1, !dbg !2604
  %204 = load i16, i16* %red323, align 2, !dbg !2604
  %conv324 = trunc i16 %204 to i8, !dbg !2605
  %red325 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 0, !dbg !2606
  store i8 %conv324, i8* %red325, align 1, !dbg !2607
  %205 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2608
  %background326 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %205, i32 0, i32 69, !dbg !2609
  %green327 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background326, i32 0, i32 2, !dbg !2610
  %206 = load i16, i16* %green327, align 4, !dbg !2610
  %conv328 = trunc i16 %206 to i8, !dbg !2611
  %green329 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 1, !dbg !2612
  store i8 %conv328, i8* %green329, align 1, !dbg !2613
  %207 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2614
  %background330 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %207, i32 0, i32 69, !dbg !2615
  %blue331 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background330, i32 0, i32 3, !dbg !2616
  %208 = load i16, i16* %blue331, align 2, !dbg !2616
  %conv332 = trunc i16 %208 to i8, !dbg !2617
  %blue333 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back, i32 0, i32 2, !dbg !2618
  store i8 %conv332, i8* %blue333, align 1, !dbg !2619
  br label %if.end334

if.end334:                                        ; preds = %if.else321, %if.then305
  %209 = load i32, i32* %g, align 4, !dbg !2620
  %call335 = call i32 @png_gamma_significant(i32 %209), !dbg !2622
  %tobool336 = icmp ne i32 %call335, 0, !dbg !2622
  br i1 %tobool336, label %if.then337, label %if.else353, !dbg !2623

if.then337:                                       ; preds = %if.end334
  %210 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2624
  %background338 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %210, i32 0, i32 69, !dbg !2626
  %red339 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background338, i32 0, i32 1, !dbg !2627
  %211 = load i16, i16* %red339, align 2, !dbg !2627
  %conv340 = zext i16 %211 to i32, !dbg !2624
  %212 = load i32, i32* %g, align 4, !dbg !2628
  %call341 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv340, i32 %212), !dbg !2629
  %red342 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 0, !dbg !2630
  store i8 %call341, i8* %red342, align 1, !dbg !2631
  %213 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2632
  %background343 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %213, i32 0, i32 69, !dbg !2633
  %green344 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background343, i32 0, i32 2, !dbg !2634
  %214 = load i16, i16* %green344, align 4, !dbg !2634
  %conv345 = zext i16 %214 to i32, !dbg !2632
  %215 = load i32, i32* %g, align 4, !dbg !2635
  %call346 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv345, i32 %215), !dbg !2636
  %green347 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 1, !dbg !2637
  store i8 %call346, i8* %green347, align 1, !dbg !2638
  %216 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2639
  %background348 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %216, i32 0, i32 69, !dbg !2640
  %blue349 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background348, i32 0, i32 3, !dbg !2641
  %217 = load i16, i16* %blue349, align 2, !dbg !2641
  %conv350 = zext i16 %217 to i32, !dbg !2639
  %218 = load i32, i32* %g, align 4, !dbg !2642
  %call351 = call zeroext i8 @png_gamma_8bit_correct(i32 %conv350, i32 %218), !dbg !2643
  %blue352 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 2, !dbg !2644
  store i8 %call351, i8* %blue352, align 1, !dbg !2645
  br label %if.end366, !dbg !2646

if.else353:                                       ; preds = %if.end334
  %219 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2647
  %background354 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %219, i32 0, i32 69, !dbg !2649
  %red355 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background354, i32 0, i32 1, !dbg !2650
  %220 = load i16, i16* %red355, align 2, !dbg !2650
  %conv356 = trunc i16 %220 to i8, !dbg !2651
  %red357 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 0, !dbg !2652
  store i8 %conv356, i8* %red357, align 1, !dbg !2653
  %221 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2654
  %background358 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %221, i32 0, i32 69, !dbg !2655
  %green359 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background358, i32 0, i32 2, !dbg !2656
  %222 = load i16, i16* %green359, align 4, !dbg !2656
  %conv360 = trunc i16 %222 to i8, !dbg !2657
  %green361 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 1, !dbg !2658
  store i8 %conv360, i8* %green361, align 1, !dbg !2659
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2660
  %background362 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 69, !dbg !2661
  %blue363 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background362, i32 0, i32 3, !dbg !2662
  %224 = load i16, i16* %blue363, align 2, !dbg !2662
  %conv364 = trunc i16 %224 to i8, !dbg !2663
  %blue365 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 2, !dbg !2664
  store i8 %conv364, i8* %blue365, align 1, !dbg !2665
  br label %if.end366

if.end366:                                        ; preds = %if.else353, %if.then337
  br label %if.end367

if.end367:                                        ; preds = %if.end366, %if.then254
  store i32 0, i32* %i, align 4, !dbg !2666
  br label %for.cond, !dbg !2668

for.cond:                                         ; preds = %for.inc, %if.end367
  %225 = load i32, i32* %i, align 4, !dbg !2669
  %226 = load i32, i32* %num_palette, align 4, !dbg !2671
  %cmp368 = icmp slt i32 %225, %226, !dbg !2672
  br i1 %cmp368, label %for.body, label %for.end, !dbg !2673

for.body:                                         ; preds = %for.cond
  %227 = load i32, i32* %i, align 4, !dbg !2674
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2677
  %num_trans370 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %228, i32 0, i32 50, !dbg !2678
  %229 = load i16, i16* %num_trans370, align 8, !dbg !2678
  %conv371 = zext i16 %229 to i32, !dbg !2679
  %cmp372 = icmp slt i32 %227, %conv371, !dbg !2680
  br i1 %cmp372, label %land.lhs.true374, label %if.else515, !dbg !2681

land.lhs.true374:                                 ; preds = %for.body
  %230 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2682
  %trans_alpha = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %230, i32 0, i32 85, !dbg !2683
  %231 = load i8*, i8** %trans_alpha, align 8, !dbg !2683
  %232 = load i32, i32* %i, align 4, !dbg !2684
  %idxprom375 = sext i32 %232 to i64, !dbg !2682
  %arrayidx376 = getelementptr inbounds i8, i8* %231, i64 %idxprom375, !dbg !2682
  %233 = load i8, i8* %arrayidx376, align 1, !dbg !2682
  %conv377 = zext i8 %233 to i32, !dbg !2682
  %cmp378 = icmp ne i32 %conv377, 255, !dbg !2685
  br i1 %cmp378, label %if.then380, label %if.else515, !dbg !2686

if.then380:                                       ; preds = %land.lhs.true374
  %234 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2687
  %trans_alpha381 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %234, i32 0, i32 85, !dbg !2690
  %235 = load i8*, i8** %trans_alpha381, align 8, !dbg !2690
  %236 = load i32, i32* %i, align 4, !dbg !2691
  %idxprom382 = sext i32 %236 to i64, !dbg !2687
  %arrayidx383 = getelementptr inbounds i8, i8* %235, i64 %idxprom382, !dbg !2687
  %237 = load i8, i8* %arrayidx383, align 1, !dbg !2687
  %conv384 = zext i8 %237 to i32, !dbg !2687
  %cmp385 = icmp eq i32 %conv384, 0, !dbg !2692
  br i1 %cmp385, label %if.then387, label %if.else390, !dbg !2693

if.then387:                                       ; preds = %if.then380
  %238 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2694
  %239 = load i32, i32* %i, align 4, !dbg !2696
  %idxprom388 = sext i32 %239 to i64, !dbg !2694
  %arrayidx389 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %238, i64 %idxprom388, !dbg !2694
  %240 = bitcast %struct.png_color_struct* %arrayidx389 to i8*, !dbg !2697
  %241 = bitcast %struct.png_color_struct* %back to i8*, !dbg !2697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %240, i8* align 1 %241, i64 3, i1 false), !dbg !2697
  br label %if.end514, !dbg !2698

if.else390:                                       ; preds = %if.then380
  call void @llvm.dbg.declare(metadata i8* %v, metadata !2699, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata i8* %w, metadata !2702, metadata !DIExpression()), !dbg !2703
  %242 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2704
  %gamma_to_1391 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %242, i32 0, i32 80, !dbg !2705
  %243 = load i8*, i8** %gamma_to_1391, align 8, !dbg !2705
  %244 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2706
  %245 = load i32, i32* %i, align 4, !dbg !2707
  %idxprom392 = sext i32 %245 to i64, !dbg !2706
  %arrayidx393 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %244, i64 %idxprom392, !dbg !2706
  %red394 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx393, i32 0, i32 0, !dbg !2708
  %246 = load i8, i8* %red394, align 1, !dbg !2708
  %idxprom395 = zext i8 %246 to i64, !dbg !2704
  %arrayidx396 = getelementptr inbounds i8, i8* %243, i64 %idxprom395, !dbg !2704
  %247 = load i8, i8* %arrayidx396, align 1, !dbg !2704
  store i8 %247, i8* %v, align 1, !dbg !2709
  call void @llvm.dbg.declare(metadata i16* %temp, metadata !2710, metadata !DIExpression()), !dbg !2712
  %248 = load i8, i8* %v, align 1, !dbg !2712
  %conv397 = zext i8 %248 to i16, !dbg !2712
  %conv398 = zext i16 %conv397 to i32, !dbg !2712
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2712
  %trans_alpha399 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %249, i32 0, i32 85, !dbg !2712
  %250 = load i8*, i8** %trans_alpha399, align 8, !dbg !2712
  %251 = load i32, i32* %i, align 4, !dbg !2712
  %idxprom400 = sext i32 %251 to i64, !dbg !2712
  %arrayidx401 = getelementptr inbounds i8, i8* %250, i64 %idxprom400, !dbg !2712
  %252 = load i8, i8* %arrayidx401, align 1, !dbg !2712
  %conv402 = zext i8 %252 to i16, !dbg !2712
  %conv403 = zext i16 %conv402 to i32, !dbg !2712
  %mul404 = mul nsw i32 %conv398, %conv403, !dbg !2712
  %red405 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 0, !dbg !2712
  %253 = load i8, i8* %red405, align 1, !dbg !2712
  %conv406 = zext i8 %253 to i16, !dbg !2712
  %conv407 = zext i16 %conv406 to i32, !dbg !2712
  %254 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2712
  %trans_alpha408 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %254, i32 0, i32 85, !dbg !2712
  %255 = load i8*, i8** %trans_alpha408, align 8, !dbg !2712
  %256 = load i32, i32* %i, align 4, !dbg !2712
  %idxprom409 = sext i32 %256 to i64, !dbg !2712
  %arrayidx410 = getelementptr inbounds i8, i8* %255, i64 %idxprom409, !dbg !2712
  %257 = load i8, i8* %arrayidx410, align 1, !dbg !2712
  %conv411 = zext i8 %257 to i16, !dbg !2712
  %conv412 = zext i16 %conv411 to i32, !dbg !2712
  %sub = sub nsw i32 255, %conv412, !dbg !2712
  %conv413 = trunc i32 %sub to i16, !dbg !2712
  %conv414 = zext i16 %conv413 to i32, !dbg !2712
  %mul415 = mul nsw i32 %conv407, %conv414, !dbg !2712
  %add416 = add nsw i32 %mul404, %mul415, !dbg !2712
  %add417 = add nsw i32 %add416, 128, !dbg !2712
  %conv418 = trunc i32 %add417 to i16, !dbg !2712
  store i16 %conv418, i16* %temp, align 2, !dbg !2712
  %258 = load i16, i16* %temp, align 2, !dbg !2712
  %conv419 = zext i16 %258 to i32, !dbg !2712
  %259 = load i16, i16* %temp, align 2, !dbg !2712
  %conv420 = zext i16 %259 to i32, !dbg !2712
  %shr421 = ashr i32 %conv420, 8, !dbg !2712
  %add422 = add nsw i32 %conv419, %shr421, !dbg !2712
  %shr423 = ashr i32 %add422, 8, !dbg !2712
  %conv424 = trunc i32 %shr423 to i8, !dbg !2712
  store i8 %conv424, i8* %w, align 1, !dbg !2712
  %260 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2713
  %gamma_from_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %260, i32 0, i32 79, !dbg !2714
  %261 = load i8*, i8** %gamma_from_1, align 8, !dbg !2714
  %262 = load i8, i8* %w, align 1, !dbg !2715
  %idxprom425 = zext i8 %262 to i64, !dbg !2713
  %arrayidx426 = getelementptr inbounds i8, i8* %261, i64 %idxprom425, !dbg !2713
  %263 = load i8, i8* %arrayidx426, align 1, !dbg !2713
  %264 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2716
  %265 = load i32, i32* %i, align 4, !dbg !2717
  %idxprom427 = sext i32 %265 to i64, !dbg !2716
  %arrayidx428 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %264, i64 %idxprom427, !dbg !2716
  %red429 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx428, i32 0, i32 0, !dbg !2718
  store i8 %263, i8* %red429, align 1, !dbg !2719
  %266 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2720
  %gamma_to_1430 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %266, i32 0, i32 80, !dbg !2721
  %267 = load i8*, i8** %gamma_to_1430, align 8, !dbg !2721
  %268 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2722
  %269 = load i32, i32* %i, align 4, !dbg !2723
  %idxprom431 = sext i32 %269 to i64, !dbg !2722
  %arrayidx432 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %268, i64 %idxprom431, !dbg !2722
  %green433 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx432, i32 0, i32 1, !dbg !2724
  %270 = load i8, i8* %green433, align 1, !dbg !2724
  %idxprom434 = zext i8 %270 to i64, !dbg !2720
  %arrayidx435 = getelementptr inbounds i8, i8* %267, i64 %idxprom434, !dbg !2720
  %271 = load i8, i8* %arrayidx435, align 1, !dbg !2720
  store i8 %271, i8* %v, align 1, !dbg !2725
  call void @llvm.dbg.declare(metadata i16* %temp436, metadata !2726, metadata !DIExpression()), !dbg !2728
  %272 = load i8, i8* %v, align 1, !dbg !2728
  %conv437 = zext i8 %272 to i16, !dbg !2728
  %conv438 = zext i16 %conv437 to i32, !dbg !2728
  %273 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2728
  %trans_alpha439 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %273, i32 0, i32 85, !dbg !2728
  %274 = load i8*, i8** %trans_alpha439, align 8, !dbg !2728
  %275 = load i32, i32* %i, align 4, !dbg !2728
  %idxprom440 = sext i32 %275 to i64, !dbg !2728
  %arrayidx441 = getelementptr inbounds i8, i8* %274, i64 %idxprom440, !dbg !2728
  %276 = load i8, i8* %arrayidx441, align 1, !dbg !2728
  %conv442 = zext i8 %276 to i16, !dbg !2728
  %conv443 = zext i16 %conv442 to i32, !dbg !2728
  %mul444 = mul nsw i32 %conv438, %conv443, !dbg !2728
  %green445 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 1, !dbg !2728
  %277 = load i8, i8* %green445, align 1, !dbg !2728
  %conv446 = zext i8 %277 to i16, !dbg !2728
  %conv447 = zext i16 %conv446 to i32, !dbg !2728
  %278 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2728
  %trans_alpha448 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %278, i32 0, i32 85, !dbg !2728
  %279 = load i8*, i8** %trans_alpha448, align 8, !dbg !2728
  %280 = load i32, i32* %i, align 4, !dbg !2728
  %idxprom449 = sext i32 %280 to i64, !dbg !2728
  %arrayidx450 = getelementptr inbounds i8, i8* %279, i64 %idxprom449, !dbg !2728
  %281 = load i8, i8* %arrayidx450, align 1, !dbg !2728
  %conv451 = zext i8 %281 to i16, !dbg !2728
  %conv452 = zext i16 %conv451 to i32, !dbg !2728
  %sub453 = sub nsw i32 255, %conv452, !dbg !2728
  %conv454 = trunc i32 %sub453 to i16, !dbg !2728
  %conv455 = zext i16 %conv454 to i32, !dbg !2728
  %mul456 = mul nsw i32 %conv447, %conv455, !dbg !2728
  %add457 = add nsw i32 %mul444, %mul456, !dbg !2728
  %add458 = add nsw i32 %add457, 128, !dbg !2728
  %conv459 = trunc i32 %add458 to i16, !dbg !2728
  store i16 %conv459, i16* %temp436, align 2, !dbg !2728
  %282 = load i16, i16* %temp436, align 2, !dbg !2728
  %conv460 = zext i16 %282 to i32, !dbg !2728
  %283 = load i16, i16* %temp436, align 2, !dbg !2728
  %conv461 = zext i16 %283 to i32, !dbg !2728
  %shr462 = ashr i32 %conv461, 8, !dbg !2728
  %add463 = add nsw i32 %conv460, %shr462, !dbg !2728
  %shr464 = ashr i32 %add463, 8, !dbg !2728
  %conv465 = trunc i32 %shr464 to i8, !dbg !2728
  store i8 %conv465, i8* %w, align 1, !dbg !2728
  %284 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2729
  %gamma_from_1466 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %284, i32 0, i32 79, !dbg !2730
  %285 = load i8*, i8** %gamma_from_1466, align 8, !dbg !2730
  %286 = load i8, i8* %w, align 1, !dbg !2731
  %idxprom467 = zext i8 %286 to i64, !dbg !2729
  %arrayidx468 = getelementptr inbounds i8, i8* %285, i64 %idxprom467, !dbg !2729
  %287 = load i8, i8* %arrayidx468, align 1, !dbg !2729
  %288 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2732
  %289 = load i32, i32* %i, align 4, !dbg !2733
  %idxprom469 = sext i32 %289 to i64, !dbg !2732
  %arrayidx470 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %288, i64 %idxprom469, !dbg !2732
  %green471 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx470, i32 0, i32 1, !dbg !2734
  store i8 %287, i8* %green471, align 1, !dbg !2735
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2736
  %gamma_to_1472 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %290, i32 0, i32 80, !dbg !2737
  %291 = load i8*, i8** %gamma_to_1472, align 8, !dbg !2737
  %292 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2738
  %293 = load i32, i32* %i, align 4, !dbg !2739
  %idxprom473 = sext i32 %293 to i64, !dbg !2738
  %arrayidx474 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %292, i64 %idxprom473, !dbg !2738
  %blue475 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx474, i32 0, i32 2, !dbg !2740
  %294 = load i8, i8* %blue475, align 1, !dbg !2740
  %idxprom476 = zext i8 %294 to i64, !dbg !2736
  %arrayidx477 = getelementptr inbounds i8, i8* %291, i64 %idxprom476, !dbg !2736
  %295 = load i8, i8* %arrayidx477, align 1, !dbg !2736
  store i8 %295, i8* %v, align 1, !dbg !2741
  call void @llvm.dbg.declare(metadata i16* %temp478, metadata !2742, metadata !DIExpression()), !dbg !2744
  %296 = load i8, i8* %v, align 1, !dbg !2744
  %conv479 = zext i8 %296 to i16, !dbg !2744
  %conv480 = zext i16 %conv479 to i32, !dbg !2744
  %297 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2744
  %trans_alpha481 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %297, i32 0, i32 85, !dbg !2744
  %298 = load i8*, i8** %trans_alpha481, align 8, !dbg !2744
  %299 = load i32, i32* %i, align 4, !dbg !2744
  %idxprom482 = sext i32 %299 to i64, !dbg !2744
  %arrayidx483 = getelementptr inbounds i8, i8* %298, i64 %idxprom482, !dbg !2744
  %300 = load i8, i8* %arrayidx483, align 1, !dbg !2744
  %conv484 = zext i8 %300 to i16, !dbg !2744
  %conv485 = zext i16 %conv484 to i32, !dbg !2744
  %mul486 = mul nsw i32 %conv480, %conv485, !dbg !2744
  %blue487 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back_1, i32 0, i32 2, !dbg !2744
  %301 = load i8, i8* %blue487, align 1, !dbg !2744
  %conv488 = zext i8 %301 to i16, !dbg !2744
  %conv489 = zext i16 %conv488 to i32, !dbg !2744
  %302 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2744
  %trans_alpha490 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %302, i32 0, i32 85, !dbg !2744
  %303 = load i8*, i8** %trans_alpha490, align 8, !dbg !2744
  %304 = load i32, i32* %i, align 4, !dbg !2744
  %idxprom491 = sext i32 %304 to i64, !dbg !2744
  %arrayidx492 = getelementptr inbounds i8, i8* %303, i64 %idxprom491, !dbg !2744
  %305 = load i8, i8* %arrayidx492, align 1, !dbg !2744
  %conv493 = zext i8 %305 to i16, !dbg !2744
  %conv494 = zext i16 %conv493 to i32, !dbg !2744
  %sub495 = sub nsw i32 255, %conv494, !dbg !2744
  %conv496 = trunc i32 %sub495 to i16, !dbg !2744
  %conv497 = zext i16 %conv496 to i32, !dbg !2744
  %mul498 = mul nsw i32 %conv489, %conv497, !dbg !2744
  %add499 = add nsw i32 %mul486, %mul498, !dbg !2744
  %add500 = add nsw i32 %add499, 128, !dbg !2744
  %conv501 = trunc i32 %add500 to i16, !dbg !2744
  store i16 %conv501, i16* %temp478, align 2, !dbg !2744
  %306 = load i16, i16* %temp478, align 2, !dbg !2744
  %conv502 = zext i16 %306 to i32, !dbg !2744
  %307 = load i16, i16* %temp478, align 2, !dbg !2744
  %conv503 = zext i16 %307 to i32, !dbg !2744
  %shr504 = ashr i32 %conv503, 8, !dbg !2744
  %add505 = add nsw i32 %conv502, %shr504, !dbg !2744
  %shr506 = ashr i32 %add505, 8, !dbg !2744
  %conv507 = trunc i32 %shr506 to i8, !dbg !2744
  store i8 %conv507, i8* %w, align 1, !dbg !2744
  %308 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2745
  %gamma_from_1508 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %308, i32 0, i32 79, !dbg !2746
  %309 = load i8*, i8** %gamma_from_1508, align 8, !dbg !2746
  %310 = load i8, i8* %w, align 1, !dbg !2747
  %idxprom509 = zext i8 %310 to i64, !dbg !2745
  %arrayidx510 = getelementptr inbounds i8, i8* %309, i64 %idxprom509, !dbg !2745
  %311 = load i8, i8* %arrayidx510, align 1, !dbg !2745
  %312 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2748
  %313 = load i32, i32* %i, align 4, !dbg !2749
  %idxprom511 = sext i32 %313 to i64, !dbg !2748
  %arrayidx512 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %312, i64 %idxprom511, !dbg !2748
  %blue513 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx512, i32 0, i32 2, !dbg !2750
  store i8 %311, i8* %blue513, align 1, !dbg !2751
  br label %if.end514

if.end514:                                        ; preds = %if.else390, %if.then387
  br label %if.end543, !dbg !2752

if.else515:                                       ; preds = %land.lhs.true374, %for.body
  %314 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2753
  %gamma_table516 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %314, i32 0, i32 77, !dbg !2755
  %315 = load i8*, i8** %gamma_table516, align 8, !dbg !2755
  %316 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2756
  %317 = load i32, i32* %i, align 4, !dbg !2757
  %idxprom517 = sext i32 %317 to i64, !dbg !2756
  %arrayidx518 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %316, i64 %idxprom517, !dbg !2756
  %red519 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx518, i32 0, i32 0, !dbg !2758
  %318 = load i8, i8* %red519, align 1, !dbg !2758
  %idxprom520 = zext i8 %318 to i64, !dbg !2753
  %arrayidx521 = getelementptr inbounds i8, i8* %315, i64 %idxprom520, !dbg !2753
  %319 = load i8, i8* %arrayidx521, align 1, !dbg !2753
  %320 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2759
  %321 = load i32, i32* %i, align 4, !dbg !2760
  %idxprom522 = sext i32 %321 to i64, !dbg !2759
  %arrayidx523 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %320, i64 %idxprom522, !dbg !2759
  %red524 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx523, i32 0, i32 0, !dbg !2761
  store i8 %319, i8* %red524, align 1, !dbg !2762
  %322 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2763
  %gamma_table525 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %322, i32 0, i32 77, !dbg !2764
  %323 = load i8*, i8** %gamma_table525, align 8, !dbg !2764
  %324 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2765
  %325 = load i32, i32* %i, align 4, !dbg !2766
  %idxprom526 = sext i32 %325 to i64, !dbg !2765
  %arrayidx527 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %324, i64 %idxprom526, !dbg !2765
  %green528 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx527, i32 0, i32 1, !dbg !2767
  %326 = load i8, i8* %green528, align 1, !dbg !2767
  %idxprom529 = zext i8 %326 to i64, !dbg !2763
  %arrayidx530 = getelementptr inbounds i8, i8* %323, i64 %idxprom529, !dbg !2763
  %327 = load i8, i8* %arrayidx530, align 1, !dbg !2763
  %328 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2768
  %329 = load i32, i32* %i, align 4, !dbg !2769
  %idxprom531 = sext i32 %329 to i64, !dbg !2768
  %arrayidx532 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %328, i64 %idxprom531, !dbg !2768
  %green533 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx532, i32 0, i32 1, !dbg !2770
  store i8 %327, i8* %green533, align 1, !dbg !2771
  %330 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2772
  %gamma_table534 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %330, i32 0, i32 77, !dbg !2773
  %331 = load i8*, i8** %gamma_table534, align 8, !dbg !2773
  %332 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2774
  %333 = load i32, i32* %i, align 4, !dbg !2775
  %idxprom535 = sext i32 %333 to i64, !dbg !2774
  %arrayidx536 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %332, i64 %idxprom535, !dbg !2774
  %blue537 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx536, i32 0, i32 2, !dbg !2776
  %334 = load i8, i8* %blue537, align 1, !dbg !2776
  %idxprom538 = zext i8 %334 to i64, !dbg !2772
  %arrayidx539 = getelementptr inbounds i8, i8* %331, i64 %idxprom538, !dbg !2772
  %335 = load i8, i8* %arrayidx539, align 1, !dbg !2772
  %336 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !2777
  %337 = load i32, i32* %i, align 4, !dbg !2778
  %idxprom540 = sext i32 %337 to i64, !dbg !2777
  %arrayidx541 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %336, i64 %idxprom540, !dbg !2777
  %blue542 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx541, i32 0, i32 2, !dbg !2779
  store i8 %335, i8* %blue542, align 1, !dbg !2780
  br label %if.end543

if.end543:                                        ; preds = %if.else515, %if.end514
  br label %for.inc, !dbg !2781

for.inc:                                          ; preds = %if.end543
  %338 = load i32, i32* %i, align 4, !dbg !2782
  %inc = add nsw i32 %338, 1, !dbg !2782
  store i32 %inc, i32* %i, align 4, !dbg !2782
  br label %for.cond, !dbg !2783, !llvm.loop !2784

for.end:                                          ; preds = %for.cond
  %339 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2786
  %transformations544 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %339, i32 0, i32 15, !dbg !2787
  %340 = load i32, i32* %transformations544, align 4, !dbg !2788
  %and545 = and i32 %340, -8321, !dbg !2788
  store i32 %and545, i32* %transformations544, align 4, !dbg !2788
  br label %if.end675, !dbg !2789

if.else546:                                       ; preds = %if.end241
  call void @llvm.dbg.declare(metadata i32* %gs_sig, metadata !2790, metadata !DIExpression()), !dbg !2792
  call void @llvm.dbg.declare(metadata i32* %g_sig, metadata !2793, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.declare(metadata i32* %g547, metadata !2795, metadata !DIExpression()), !dbg !2796
  store i32 100000, i32* %g547, align 4, !dbg !2796
  call void @llvm.dbg.declare(metadata i32* %gs548, metadata !2797, metadata !DIExpression()), !dbg !2798
  store i32 100000, i32* %gs548, align 4, !dbg !2798
  %341 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2799
  %background_gamma_type549 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %341, i32 0, i32 67, !dbg !2800
  %342 = load i8, i8* %background_gamma_type549, align 8, !dbg !2800
  %conv550 = zext i8 %342 to i32, !dbg !2799
  switch i32 %conv550, label %sw.default565 [
    i32 1, label %sw.bb551
    i32 2, label %sw.bb553
    i32 3, label %sw.bb559
  ], !dbg !2801

sw.bb551:                                         ; preds = %if.else546
  %343 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2802
  %screen_gamma552 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %343, i32 0, i32 76, !dbg !2804
  %344 = load i32, i32* %screen_gamma552, align 8, !dbg !2804
  store i32 %344, i32* %g547, align 4, !dbg !2805
  br label %sw.epilog566, !dbg !2806

sw.bb553:                                         ; preds = %if.else546
  %345 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2807
  %gamma554 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %345, i32 0, i32 75, !dbg !2808
  %346 = load i32, i32* %gamma554, align 4, !dbg !2808
  %call555 = call i32 @png_reciprocal(i32 %346), !dbg !2809
  store i32 %call555, i32* %g547, align 4, !dbg !2810
  %347 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2811
  %gamma556 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %347, i32 0, i32 75, !dbg !2812
  %348 = load i32, i32* %gamma556, align 4, !dbg !2812
  %349 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2813
  %screen_gamma557 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %349, i32 0, i32 76, !dbg !2814
  %350 = load i32, i32* %screen_gamma557, align 8, !dbg !2814
  %call558 = call i32 @png_reciprocal2(i32 %348, i32 %350), !dbg !2815
  store i32 %call558, i32* %gs548, align 4, !dbg !2816
  br label %sw.epilog566, !dbg !2817

sw.bb559:                                         ; preds = %if.else546
  %351 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2818
  %background_gamma560 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %351, i32 0, i32 68, !dbg !2819
  %352 = load i32, i32* %background_gamma560, align 4, !dbg !2819
  %call561 = call i32 @png_reciprocal(i32 %352), !dbg !2820
  store i32 %call561, i32* %g547, align 4, !dbg !2821
  %353 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2822
  %background_gamma562 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %353, i32 0, i32 68, !dbg !2823
  %354 = load i32, i32* %background_gamma562, align 4, !dbg !2823
  %355 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2824
  %screen_gamma563 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %355, i32 0, i32 76, !dbg !2825
  %356 = load i32, i32* %screen_gamma563, align 8, !dbg !2825
  %call564 = call i32 @png_reciprocal2(i32 %354, i32 %356), !dbg !2826
  store i32 %call564, i32* %gs548, align 4, !dbg !2827
  br label %sw.epilog566, !dbg !2828

sw.default565:                                    ; preds = %if.else546
  %357 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2829
  call void @png_error(%struct.png_struct_def* %357, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2830
  unreachable, !dbg !2830

sw.epilog566:                                     ; preds = %sw.bb559, %sw.bb553, %sw.bb551
  %358 = load i32, i32* %g547, align 4, !dbg !2831
  %call567 = call i32 @png_gamma_significant(i32 %358), !dbg !2832
  store i32 %call567, i32* %g_sig, align 4, !dbg !2833
  %359 = load i32, i32* %gs548, align 4, !dbg !2834
  %call568 = call i32 @png_gamma_significant(i32 %359), !dbg !2835
  store i32 %call568, i32* %gs_sig, align 4, !dbg !2836
  %360 = load i32, i32* %g_sig, align 4, !dbg !2837
  %tobool569 = icmp ne i32 %360, 0, !dbg !2837
  br i1 %tobool569, label %if.then570, label %if.end577, !dbg !2839

if.then570:                                       ; preds = %sw.epilog566
  %361 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2840
  %362 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2841
  %background571 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %362, i32 0, i32 69, !dbg !2842
  %gray572 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background571, i32 0, i32 4, !dbg !2843
  %363 = load i16, i16* %gray572, align 8, !dbg !2843
  %conv573 = zext i16 %363 to i32, !dbg !2841
  %364 = load i32, i32* %g547, align 4, !dbg !2844
  %call574 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %361, i32 %conv573, i32 %364), !dbg !2845
  %365 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2846
  %background_1575 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %365, i32 0, i32 70, !dbg !2847
  %gray576 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1575, i32 0, i32 4, !dbg !2848
  store i16 %call574, i16* %gray576, align 2, !dbg !2849
  br label %if.end577, !dbg !2846

if.end577:                                        ; preds = %if.then570, %sw.epilog566
  %366 = load i32, i32* %gs_sig, align 4, !dbg !2850
  %tobool578 = icmp ne i32 %366, 0, !dbg !2850
  br i1 %tobool578, label %if.then579, label %if.end586, !dbg !2852

if.then579:                                       ; preds = %if.end577
  %367 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2853
  %368 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2854
  %background580 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %368, i32 0, i32 69, !dbg !2855
  %gray581 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background580, i32 0, i32 4, !dbg !2856
  %369 = load i16, i16* %gray581, align 8, !dbg !2856
  %conv582 = zext i16 %369 to i32, !dbg !2854
  %370 = load i32, i32* %gs548, align 4, !dbg !2857
  %call583 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %367, i32 %conv582, i32 %370), !dbg !2858
  %371 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2859
  %background584 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %371, i32 0, i32 69, !dbg !2860
  %gray585 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background584, i32 0, i32 4, !dbg !2861
  store i16 %call583, i16* %gray585, align 8, !dbg !2862
  br label %if.end586, !dbg !2859

if.end586:                                        ; preds = %if.then579, %if.end577
  %372 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2863
  %background587 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %372, i32 0, i32 69, !dbg !2865
  %red588 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background587, i32 0, i32 1, !dbg !2866
  %373 = load i16, i16* %red588, align 2, !dbg !2866
  %conv589 = zext i16 %373 to i32, !dbg !2863
  %374 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2867
  %background590 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %374, i32 0, i32 69, !dbg !2868
  %green591 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background590, i32 0, i32 2, !dbg !2869
  %375 = load i16, i16* %green591, align 4, !dbg !2869
  %conv592 = zext i16 %375 to i32, !dbg !2867
  %cmp593 = icmp ne i32 %conv589, %conv592, !dbg !2870
  br i1 %cmp593, label %if.then613, label %lor.lhs.false595, !dbg !2871

lor.lhs.false595:                                 ; preds = %if.end586
  %376 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2872
  %background596 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %376, i32 0, i32 69, !dbg !2873
  %red597 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background596, i32 0, i32 1, !dbg !2874
  %377 = load i16, i16* %red597, align 2, !dbg !2874
  %conv598 = zext i16 %377 to i32, !dbg !2872
  %378 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2875
  %background599 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %378, i32 0, i32 69, !dbg !2876
  %blue600 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background599, i32 0, i32 3, !dbg !2877
  %379 = load i16, i16* %blue600, align 2, !dbg !2877
  %conv601 = zext i16 %379 to i32, !dbg !2875
  %cmp602 = icmp ne i32 %conv598, %conv601, !dbg !2878
  br i1 %cmp602, label %if.then613, label %lor.lhs.false604, !dbg !2879

lor.lhs.false604:                                 ; preds = %lor.lhs.false595
  %380 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2880
  %background605 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %380, i32 0, i32 69, !dbg !2881
  %red606 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background605, i32 0, i32 1, !dbg !2882
  %381 = load i16, i16* %red606, align 2, !dbg !2882
  %conv607 = zext i16 %381 to i32, !dbg !2880
  %382 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2883
  %background608 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %382, i32 0, i32 69, !dbg !2884
  %gray609 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background608, i32 0, i32 4, !dbg !2885
  %383 = load i16, i16* %gray609, align 8, !dbg !2885
  %conv610 = zext i16 %383 to i32, !dbg !2883
  %cmp611 = icmp ne i32 %conv607, %conv610, !dbg !2886
  br i1 %cmp611, label %if.then613, label %if.else656, !dbg !2887

if.then613:                                       ; preds = %lor.lhs.false604, %lor.lhs.false595, %if.end586
  %384 = load i32, i32* %g_sig, align 4, !dbg !2888
  %tobool614 = icmp ne i32 %384, 0, !dbg !2888
  br i1 %tobool614, label %if.then615, label %if.end634, !dbg !2891

if.then615:                                       ; preds = %if.then613
  %385 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2892
  %386 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2894
  %background616 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %386, i32 0, i32 69, !dbg !2895
  %red617 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background616, i32 0, i32 1, !dbg !2896
  %387 = load i16, i16* %red617, align 2, !dbg !2896
  %conv618 = zext i16 %387 to i32, !dbg !2894
  %388 = load i32, i32* %g547, align 4, !dbg !2897
  %call619 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %385, i32 %conv618, i32 %388), !dbg !2898
  %389 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2899
  %background_1620 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %389, i32 0, i32 70, !dbg !2900
  %red621 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1620, i32 0, i32 1, !dbg !2901
  store i16 %call619, i16* %red621, align 2, !dbg !2902
  %390 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2903
  %391 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2904
  %background622 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %391, i32 0, i32 69, !dbg !2905
  %green623 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background622, i32 0, i32 2, !dbg !2906
  %392 = load i16, i16* %green623, align 4, !dbg !2906
  %conv624 = zext i16 %392 to i32, !dbg !2904
  %393 = load i32, i32* %g547, align 4, !dbg !2907
  %call625 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %390, i32 %conv624, i32 %393), !dbg !2908
  %394 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2909
  %background_1626 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %394, i32 0, i32 70, !dbg !2910
  %green627 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1626, i32 0, i32 2, !dbg !2911
  store i16 %call625, i16* %green627, align 2, !dbg !2912
  %395 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2913
  %396 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2914
  %background628 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %396, i32 0, i32 69, !dbg !2915
  %blue629 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background628, i32 0, i32 3, !dbg !2916
  %397 = load i16, i16* %blue629, align 2, !dbg !2916
  %conv630 = zext i16 %397 to i32, !dbg !2914
  %398 = load i32, i32* %g547, align 4, !dbg !2917
  %call631 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %395, i32 %conv630, i32 %398), !dbg !2918
  %399 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2919
  %background_1632 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %399, i32 0, i32 70, !dbg !2920
  %blue633 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1632, i32 0, i32 3, !dbg !2921
  store i16 %call631, i16* %blue633, align 2, !dbg !2922
  br label %if.end634, !dbg !2923

if.end634:                                        ; preds = %if.then615, %if.then613
  %400 = load i32, i32* %gs_sig, align 4, !dbg !2924
  %tobool635 = icmp ne i32 %400, 0, !dbg !2924
  br i1 %tobool635, label %if.then636, label %if.end655, !dbg !2926

if.then636:                                       ; preds = %if.end634
  %401 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2927
  %402 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2929
  %background637 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %402, i32 0, i32 69, !dbg !2930
  %red638 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background637, i32 0, i32 1, !dbg !2931
  %403 = load i16, i16* %red638, align 2, !dbg !2931
  %conv639 = zext i16 %403 to i32, !dbg !2929
  %404 = load i32, i32* %gs548, align 4, !dbg !2932
  %call640 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %401, i32 %conv639, i32 %404), !dbg !2933
  %405 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2934
  %background641 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %405, i32 0, i32 69, !dbg !2935
  %red642 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background641, i32 0, i32 1, !dbg !2936
  store i16 %call640, i16* %red642, align 2, !dbg !2937
  %406 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2938
  %407 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2939
  %background643 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %407, i32 0, i32 69, !dbg !2940
  %green644 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background643, i32 0, i32 2, !dbg !2941
  %408 = load i16, i16* %green644, align 4, !dbg !2941
  %conv645 = zext i16 %408 to i32, !dbg !2939
  %409 = load i32, i32* %gs548, align 4, !dbg !2942
  %call646 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %406, i32 %conv645, i32 %409), !dbg !2943
  %410 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2944
  %background647 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %410, i32 0, i32 69, !dbg !2945
  %green648 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background647, i32 0, i32 2, !dbg !2946
  store i16 %call646, i16* %green648, align 4, !dbg !2947
  %411 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2948
  %412 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2949
  %background649 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %412, i32 0, i32 69, !dbg !2950
  %blue650 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background649, i32 0, i32 3, !dbg !2951
  %413 = load i16, i16* %blue650, align 2, !dbg !2951
  %conv651 = zext i16 %413 to i32, !dbg !2949
  %414 = load i32, i32* %gs548, align 4, !dbg !2952
  %call652 = call zeroext i16 @png_gamma_correct(%struct.png_struct_def* %411, i32 %conv651, i32 %414), !dbg !2953
  %415 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2954
  %background653 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %415, i32 0, i32 69, !dbg !2955
  %blue654 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background653, i32 0, i32 3, !dbg !2956
  store i16 %call652, i16* %blue654, align 2, !dbg !2957
  br label %if.end655, !dbg !2958

if.end655:                                        ; preds = %if.then636, %if.end634
  br label %if.end673, !dbg !2959

if.else656:                                       ; preds = %lor.lhs.false604
  %416 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2960
  %background_1657 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %416, i32 0, i32 70, !dbg !2962
  %gray658 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1657, i32 0, i32 4, !dbg !2963
  %417 = load i16, i16* %gray658, align 2, !dbg !2963
  %418 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2964
  %background_1659 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %418, i32 0, i32 70, !dbg !2965
  %blue660 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1659, i32 0, i32 3, !dbg !2966
  store i16 %417, i16* %blue660, align 2, !dbg !2967
  %419 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2968
  %background_1661 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %419, i32 0, i32 70, !dbg !2969
  %green662 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1661, i32 0, i32 2, !dbg !2970
  store i16 %417, i16* %green662, align 2, !dbg !2971
  %420 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2972
  %background_1663 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %420, i32 0, i32 70, !dbg !2973
  %red664 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1663, i32 0, i32 1, !dbg !2974
  store i16 %417, i16* %red664, align 2, !dbg !2975
  %421 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2976
  %background665 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %421, i32 0, i32 69, !dbg !2977
  %gray666 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background665, i32 0, i32 4, !dbg !2978
  %422 = load i16, i16* %gray666, align 8, !dbg !2978
  %423 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2979
  %background667 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %423, i32 0, i32 69, !dbg !2980
  %blue668 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background667, i32 0, i32 3, !dbg !2981
  store i16 %422, i16* %blue668, align 2, !dbg !2982
  %424 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2983
  %background669 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %424, i32 0, i32 69, !dbg !2984
  %green670 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background669, i32 0, i32 2, !dbg !2985
  store i16 %422, i16* %green670, align 4, !dbg !2986
  %425 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2987
  %background671 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %425, i32 0, i32 69, !dbg !2988
  %red672 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background671, i32 0, i32 1, !dbg !2989
  store i16 %422, i16* %red672, align 2, !dbg !2990
  br label %if.end673

if.end673:                                        ; preds = %if.else656, %if.end655
  %426 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2991
  %background_gamma_type674 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %426, i32 0, i32 67, !dbg !2992
  store i8 1, i8* %background_gamma_type674, align 8, !dbg !2993
  br label %if.end675

if.end675:                                        ; preds = %if.end673, %for.end
  br label %if.end735, !dbg !2994

if.else676:                                       ; preds = %if.then230
  %427 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2995
  %color_type677 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %427, i32 0, i32 56, !dbg !2997
  %428 = load i8, i8* %color_type677, align 1, !dbg !2997
  %conv678 = zext i8 %428 to i32, !dbg !2995
  %cmp679 = icmp eq i32 %conv678, 3, !dbg !2998
  br i1 %cmp679, label %land.lhs.true681, label %if.end734, !dbg !2999

land.lhs.true681:                                 ; preds = %if.else676
  %429 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3000
  %transformations682 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %429, i32 0, i32 15, !dbg !3001
  %430 = load i32, i32* %transformations682, align 4, !dbg !3001
  %and683 = and i32 %430, 4096, !dbg !3002
  %cmp684 = icmp eq i32 %and683, 0, !dbg !3003
  br i1 %cmp684, label %if.then691, label %lor.lhs.false686, !dbg !3004

lor.lhs.false686:                                 ; preds = %land.lhs.true681
  %431 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3005
  %transformations687 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %431, i32 0, i32 15, !dbg !3006
  %432 = load i32, i32* %transformations687, align 4, !dbg !3006
  %and688 = and i32 %432, 6291456, !dbg !3007
  %cmp689 = icmp eq i32 %and688, 0, !dbg !3008
  br i1 %cmp689, label %if.then691, label %if.end734, !dbg !3009

if.then691:                                       ; preds = %lor.lhs.false686, %land.lhs.true681
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette692, metadata !3010, metadata !DIExpression()), !dbg !3012
  %433 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3013
  %palette693 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %433, i32 0, i32 47, !dbg !3014
  %434 = load %struct.png_color_struct*, %struct.png_color_struct** %palette693, align 8, !dbg !3014
  store %struct.png_color_struct* %434, %struct.png_color_struct** %palette692, align 8, !dbg !3012
  call void @llvm.dbg.declare(metadata i32* %num_palette694, metadata !3015, metadata !DIExpression()), !dbg !3016
  %435 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3017
  %num_palette695 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %435, i32 0, i32 48, !dbg !3018
  %436 = load i16, i16* %num_palette695, align 8, !dbg !3018
  %conv696 = zext i16 %436 to i32, !dbg !3017
  store i32 %conv696, i32* %num_palette694, align 4, !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %i697, metadata !3019, metadata !DIExpression()), !dbg !3020
  store i32 0, i32* %i697, align 4, !dbg !3021
  br label %for.cond698, !dbg !3023

for.cond698:                                      ; preds = %for.inc729, %if.then691
  %437 = load i32, i32* %i697, align 4, !dbg !3024
  %438 = load i32, i32* %num_palette694, align 4, !dbg !3026
  %cmp699 = icmp slt i32 %437, %438, !dbg !3027
  br i1 %cmp699, label %for.body701, label %for.end731, !dbg !3028

for.body701:                                      ; preds = %for.cond698
  %439 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3029
  %gamma_table702 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %439, i32 0, i32 77, !dbg !3031
  %440 = load i8*, i8** %gamma_table702, align 8, !dbg !3031
  %441 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3032
  %442 = load i32, i32* %i697, align 4, !dbg !3033
  %idxprom703 = sext i32 %442 to i64, !dbg !3032
  %arrayidx704 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %441, i64 %idxprom703, !dbg !3032
  %red705 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx704, i32 0, i32 0, !dbg !3034
  %443 = load i8, i8* %red705, align 1, !dbg !3034
  %idxprom706 = zext i8 %443 to i64, !dbg !3029
  %arrayidx707 = getelementptr inbounds i8, i8* %440, i64 %idxprom706, !dbg !3029
  %444 = load i8, i8* %arrayidx707, align 1, !dbg !3029
  %445 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3035
  %446 = load i32, i32* %i697, align 4, !dbg !3036
  %idxprom708 = sext i32 %446 to i64, !dbg !3035
  %arrayidx709 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %445, i64 %idxprom708, !dbg !3035
  %red710 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx709, i32 0, i32 0, !dbg !3037
  store i8 %444, i8* %red710, align 1, !dbg !3038
  %447 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3039
  %gamma_table711 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %447, i32 0, i32 77, !dbg !3040
  %448 = load i8*, i8** %gamma_table711, align 8, !dbg !3040
  %449 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3041
  %450 = load i32, i32* %i697, align 4, !dbg !3042
  %idxprom712 = sext i32 %450 to i64, !dbg !3041
  %arrayidx713 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %449, i64 %idxprom712, !dbg !3041
  %green714 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx713, i32 0, i32 1, !dbg !3043
  %451 = load i8, i8* %green714, align 1, !dbg !3043
  %idxprom715 = zext i8 %451 to i64, !dbg !3039
  %arrayidx716 = getelementptr inbounds i8, i8* %448, i64 %idxprom715, !dbg !3039
  %452 = load i8, i8* %arrayidx716, align 1, !dbg !3039
  %453 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3044
  %454 = load i32, i32* %i697, align 4, !dbg !3045
  %idxprom717 = sext i32 %454 to i64, !dbg !3044
  %arrayidx718 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %453, i64 %idxprom717, !dbg !3044
  %green719 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx718, i32 0, i32 1, !dbg !3046
  store i8 %452, i8* %green719, align 1, !dbg !3047
  %455 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3048
  %gamma_table720 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %455, i32 0, i32 77, !dbg !3049
  %456 = load i8*, i8** %gamma_table720, align 8, !dbg !3049
  %457 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3050
  %458 = load i32, i32* %i697, align 4, !dbg !3051
  %idxprom721 = sext i32 %458 to i64, !dbg !3050
  %arrayidx722 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %457, i64 %idxprom721, !dbg !3050
  %blue723 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx722, i32 0, i32 2, !dbg !3052
  %459 = load i8, i8* %blue723, align 1, !dbg !3052
  %idxprom724 = zext i8 %459 to i64, !dbg !3048
  %arrayidx725 = getelementptr inbounds i8, i8* %456, i64 %idxprom724, !dbg !3048
  %460 = load i8, i8* %arrayidx725, align 1, !dbg !3048
  %461 = load %struct.png_color_struct*, %struct.png_color_struct** %palette692, align 8, !dbg !3053
  %462 = load i32, i32* %i697, align 4, !dbg !3054
  %idxprom726 = sext i32 %462 to i64, !dbg !3053
  %arrayidx727 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %461, i64 %idxprom726, !dbg !3053
  %blue728 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx727, i32 0, i32 2, !dbg !3055
  store i8 %460, i8* %blue728, align 1, !dbg !3056
  br label %for.inc729, !dbg !3057

for.inc729:                                       ; preds = %for.body701
  %463 = load i32, i32* %i697, align 4, !dbg !3058
  %inc730 = add nsw i32 %463, 1, !dbg !3058
  store i32 %inc730, i32* %i697, align 4, !dbg !3058
  br label %for.cond698, !dbg !3059, !llvm.loop !3060

for.end731:                                       ; preds = %for.cond698
  %464 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3062
  %transformations732 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %464, i32 0, i32 15, !dbg !3063
  %465 = load i32, i32* %transformations732, align 4, !dbg !3064
  %and733 = and i32 %465, -8193, !dbg !3064
  store i32 %and733, i32* %transformations732, align 4, !dbg !3064
  br label %if.end734, !dbg !3065

if.end734:                                        ; preds = %for.end731, %lor.lhs.false686, %if.else676
  br label %if.end735

if.end735:                                        ; preds = %if.end734, %if.end675
  br label %if.end901, !dbg !3066

if.else736:                                       ; preds = %land.lhs.true226, %lor.lhs.false222
  %466 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3067
  %transformations737 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %466, i32 0, i32 15, !dbg !3069
  %467 = load i32, i32* %transformations737, align 4, !dbg !3069
  %and738 = and i32 %467, 128, !dbg !3070
  %tobool739 = icmp ne i32 %and738, 0, !dbg !3070
  br i1 %tobool739, label %land.lhs.true740, label %if.end900, !dbg !3071

land.lhs.true740:                                 ; preds = %if.else736
  %468 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3072
  %color_type741 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %468, i32 0, i32 56, !dbg !3073
  %469 = load i8, i8* %color_type741, align 1, !dbg !3073
  %conv742 = zext i8 %469 to i32, !dbg !3072
  %cmp743 = icmp eq i32 %conv742, 3, !dbg !3074
  br i1 %cmp743, label %if.then745, label %if.end900, !dbg !3075

if.then745:                                       ; preds = %land.lhs.true740
  call void @llvm.dbg.declare(metadata i32* %i746, metadata !3076, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.declare(metadata i32* %istop, metadata !3079, metadata !DIExpression()), !dbg !3080
  %470 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3081
  %num_trans747 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %470, i32 0, i32 50, !dbg !3082
  %471 = load i16, i16* %num_trans747, align 8, !dbg !3082
  %conv748 = zext i16 %471 to i32, !dbg !3083
  store i32 %conv748, i32* %istop, align 4, !dbg !3080
  call void @llvm.dbg.declare(metadata %struct.png_color_struct* %back749, metadata !3084, metadata !DIExpression()), !dbg !3085
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette750, metadata !3086, metadata !DIExpression()), !dbg !3087
  %472 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3088
  %palette751 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %472, i32 0, i32 47, !dbg !3089
  %473 = load %struct.png_color_struct*, %struct.png_color_struct** %palette751, align 8, !dbg !3089
  store %struct.png_color_struct* %473, %struct.png_color_struct** %palette750, align 8, !dbg !3087
  %474 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3090
  %background752 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %474, i32 0, i32 69, !dbg !3091
  %red753 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background752, i32 0, i32 1, !dbg !3092
  %475 = load i16, i16* %red753, align 2, !dbg !3092
  %conv754 = trunc i16 %475 to i8, !dbg !3093
  %red755 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 0, !dbg !3094
  store i8 %conv754, i8* %red755, align 1, !dbg !3095
  %476 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3096
  %background756 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %476, i32 0, i32 69, !dbg !3097
  %green757 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background756, i32 0, i32 2, !dbg !3098
  %477 = load i16, i16* %green757, align 4, !dbg !3098
  %conv758 = trunc i16 %477 to i8, !dbg !3099
  %green759 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 1, !dbg !3100
  store i8 %conv758, i8* %green759, align 1, !dbg !3101
  %478 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3102
  %background760 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %478, i32 0, i32 69, !dbg !3103
  %blue761 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background760, i32 0, i32 3, !dbg !3104
  %479 = load i16, i16* %blue761, align 2, !dbg !3104
  %conv762 = trunc i16 %479 to i8, !dbg !3105
  %blue763 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 2, !dbg !3106
  store i8 %conv762, i8* %blue763, align 1, !dbg !3107
  store i32 0, i32* %i746, align 4, !dbg !3108
  br label %for.cond764, !dbg !3110

for.cond764:                                      ; preds = %for.inc895, %if.then745
  %480 = load i32, i32* %i746, align 4, !dbg !3111
  %481 = load i32, i32* %istop, align 4, !dbg !3113
  %cmp765 = icmp slt i32 %480, %481, !dbg !3114
  br i1 %cmp765, label %for.body767, label %for.end897, !dbg !3115

for.body767:                                      ; preds = %for.cond764
  %482 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3116
  %trans_alpha768 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %482, i32 0, i32 85, !dbg !3119
  %483 = load i8*, i8** %trans_alpha768, align 8, !dbg !3119
  %484 = load i32, i32* %i746, align 4, !dbg !3120
  %idxprom769 = sext i32 %484 to i64, !dbg !3116
  %arrayidx770 = getelementptr inbounds i8, i8* %483, i64 %idxprom769, !dbg !3116
  %485 = load i8, i8* %arrayidx770, align 1, !dbg !3116
  %conv771 = zext i8 %485 to i32, !dbg !3116
  %cmp772 = icmp eq i32 %conv771, 0, !dbg !3121
  br i1 %cmp772, label %if.then774, label %if.else777, !dbg !3122

if.then774:                                       ; preds = %for.body767
  %486 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3123
  %487 = load i32, i32* %i746, align 4, !dbg !3125
  %idxprom775 = sext i32 %487 to i64, !dbg !3123
  %arrayidx776 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %486, i64 %idxprom775, !dbg !3123
  %488 = bitcast %struct.png_color_struct* %arrayidx776 to i8*, !dbg !3126
  %489 = bitcast %struct.png_color_struct* %back749 to i8*, !dbg !3126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %488, i8* align 1 %489, i64 3, i1 false), !dbg !3126
  br label %if.end894, !dbg !3127

if.else777:                                       ; preds = %for.body767
  %490 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3128
  %trans_alpha778 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %490, i32 0, i32 85, !dbg !3130
  %491 = load i8*, i8** %trans_alpha778, align 8, !dbg !3130
  %492 = load i32, i32* %i746, align 4, !dbg !3131
  %idxprom779 = sext i32 %492 to i64, !dbg !3128
  %arrayidx780 = getelementptr inbounds i8, i8* %491, i64 %idxprom779, !dbg !3128
  %493 = load i8, i8* %arrayidx780, align 1, !dbg !3128
  %conv781 = zext i8 %493 to i32, !dbg !3128
  %cmp782 = icmp ne i32 %conv781, 255, !dbg !3132
  br i1 %cmp782, label %if.then784, label %if.end893, !dbg !3133

if.then784:                                       ; preds = %if.else777
  call void @llvm.dbg.declare(metadata i16* %temp785, metadata !3134, metadata !DIExpression()), !dbg !3137
  %494 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3137
  %495 = load i32, i32* %i746, align 4, !dbg !3137
  %idxprom786 = sext i32 %495 to i64, !dbg !3137
  %arrayidx787 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %494, i64 %idxprom786, !dbg !3137
  %red788 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx787, i32 0, i32 0, !dbg !3137
  %496 = load i8, i8* %red788, align 1, !dbg !3137
  %conv789 = zext i8 %496 to i16, !dbg !3137
  %conv790 = zext i16 %conv789 to i32, !dbg !3137
  %497 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3137
  %trans_alpha791 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %497, i32 0, i32 85, !dbg !3137
  %498 = load i8*, i8** %trans_alpha791, align 8, !dbg !3137
  %499 = load i32, i32* %i746, align 4, !dbg !3137
  %idxprom792 = sext i32 %499 to i64, !dbg !3137
  %arrayidx793 = getelementptr inbounds i8, i8* %498, i64 %idxprom792, !dbg !3137
  %500 = load i8, i8* %arrayidx793, align 1, !dbg !3137
  %conv794 = zext i8 %500 to i16, !dbg !3137
  %conv795 = zext i16 %conv794 to i32, !dbg !3137
  %mul796 = mul nsw i32 %conv790, %conv795, !dbg !3137
  %red797 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 0, !dbg !3137
  %501 = load i8, i8* %red797, align 1, !dbg !3137
  %conv798 = zext i8 %501 to i16, !dbg !3137
  %conv799 = zext i16 %conv798 to i32, !dbg !3137
  %502 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3137
  %trans_alpha800 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %502, i32 0, i32 85, !dbg !3137
  %503 = load i8*, i8** %trans_alpha800, align 8, !dbg !3137
  %504 = load i32, i32* %i746, align 4, !dbg !3137
  %idxprom801 = sext i32 %504 to i64, !dbg !3137
  %arrayidx802 = getelementptr inbounds i8, i8* %503, i64 %idxprom801, !dbg !3137
  %505 = load i8, i8* %arrayidx802, align 1, !dbg !3137
  %conv803 = zext i8 %505 to i16, !dbg !3137
  %conv804 = zext i16 %conv803 to i32, !dbg !3137
  %sub805 = sub nsw i32 255, %conv804, !dbg !3137
  %conv806 = trunc i32 %sub805 to i16, !dbg !3137
  %conv807 = zext i16 %conv806 to i32, !dbg !3137
  %mul808 = mul nsw i32 %conv799, %conv807, !dbg !3137
  %add809 = add nsw i32 %mul796, %mul808, !dbg !3137
  %add810 = add nsw i32 %add809, 128, !dbg !3137
  %conv811 = trunc i32 %add810 to i16, !dbg !3137
  store i16 %conv811, i16* %temp785, align 2, !dbg !3137
  %506 = load i16, i16* %temp785, align 2, !dbg !3137
  %conv812 = zext i16 %506 to i32, !dbg !3137
  %507 = load i16, i16* %temp785, align 2, !dbg !3137
  %conv813 = zext i16 %507 to i32, !dbg !3137
  %shr814 = ashr i32 %conv813, 8, !dbg !3137
  %add815 = add nsw i32 %conv812, %shr814, !dbg !3137
  %shr816 = ashr i32 %add815, 8, !dbg !3137
  %conv817 = trunc i32 %shr816 to i8, !dbg !3137
  %508 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3137
  %509 = load i32, i32* %i746, align 4, !dbg !3137
  %idxprom818 = sext i32 %509 to i64, !dbg !3137
  %arrayidx819 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %508, i64 %idxprom818, !dbg !3137
  %red820 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx819, i32 0, i32 0, !dbg !3137
  store i8 %conv817, i8* %red820, align 1, !dbg !3137
  call void @llvm.dbg.declare(metadata i16* %temp821, metadata !3138, metadata !DIExpression()), !dbg !3140
  %510 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3140
  %511 = load i32, i32* %i746, align 4, !dbg !3140
  %idxprom822 = sext i32 %511 to i64, !dbg !3140
  %arrayidx823 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %510, i64 %idxprom822, !dbg !3140
  %green824 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx823, i32 0, i32 1, !dbg !3140
  %512 = load i8, i8* %green824, align 1, !dbg !3140
  %conv825 = zext i8 %512 to i16, !dbg !3140
  %conv826 = zext i16 %conv825 to i32, !dbg !3140
  %513 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3140
  %trans_alpha827 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %513, i32 0, i32 85, !dbg !3140
  %514 = load i8*, i8** %trans_alpha827, align 8, !dbg !3140
  %515 = load i32, i32* %i746, align 4, !dbg !3140
  %idxprom828 = sext i32 %515 to i64, !dbg !3140
  %arrayidx829 = getelementptr inbounds i8, i8* %514, i64 %idxprom828, !dbg !3140
  %516 = load i8, i8* %arrayidx829, align 1, !dbg !3140
  %conv830 = zext i8 %516 to i16, !dbg !3140
  %conv831 = zext i16 %conv830 to i32, !dbg !3140
  %mul832 = mul nsw i32 %conv826, %conv831, !dbg !3140
  %green833 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 1, !dbg !3140
  %517 = load i8, i8* %green833, align 1, !dbg !3140
  %conv834 = zext i8 %517 to i16, !dbg !3140
  %conv835 = zext i16 %conv834 to i32, !dbg !3140
  %518 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3140
  %trans_alpha836 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %518, i32 0, i32 85, !dbg !3140
  %519 = load i8*, i8** %trans_alpha836, align 8, !dbg !3140
  %520 = load i32, i32* %i746, align 4, !dbg !3140
  %idxprom837 = sext i32 %520 to i64, !dbg !3140
  %arrayidx838 = getelementptr inbounds i8, i8* %519, i64 %idxprom837, !dbg !3140
  %521 = load i8, i8* %arrayidx838, align 1, !dbg !3140
  %conv839 = zext i8 %521 to i16, !dbg !3140
  %conv840 = zext i16 %conv839 to i32, !dbg !3140
  %sub841 = sub nsw i32 255, %conv840, !dbg !3140
  %conv842 = trunc i32 %sub841 to i16, !dbg !3140
  %conv843 = zext i16 %conv842 to i32, !dbg !3140
  %mul844 = mul nsw i32 %conv835, %conv843, !dbg !3140
  %add845 = add nsw i32 %mul832, %mul844, !dbg !3140
  %add846 = add nsw i32 %add845, 128, !dbg !3140
  %conv847 = trunc i32 %add846 to i16, !dbg !3140
  store i16 %conv847, i16* %temp821, align 2, !dbg !3140
  %522 = load i16, i16* %temp821, align 2, !dbg !3140
  %conv848 = zext i16 %522 to i32, !dbg !3140
  %523 = load i16, i16* %temp821, align 2, !dbg !3140
  %conv849 = zext i16 %523 to i32, !dbg !3140
  %shr850 = ashr i32 %conv849, 8, !dbg !3140
  %add851 = add nsw i32 %conv848, %shr850, !dbg !3140
  %shr852 = ashr i32 %add851, 8, !dbg !3140
  %conv853 = trunc i32 %shr852 to i8, !dbg !3140
  %524 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3140
  %525 = load i32, i32* %i746, align 4, !dbg !3140
  %idxprom854 = sext i32 %525 to i64, !dbg !3140
  %arrayidx855 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %524, i64 %idxprom854, !dbg !3140
  %green856 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx855, i32 0, i32 1, !dbg !3140
  store i8 %conv853, i8* %green856, align 1, !dbg !3140
  call void @llvm.dbg.declare(metadata i16* %temp857, metadata !3141, metadata !DIExpression()), !dbg !3143
  %526 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3143
  %527 = load i32, i32* %i746, align 4, !dbg !3143
  %idxprom858 = sext i32 %527 to i64, !dbg !3143
  %arrayidx859 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %526, i64 %idxprom858, !dbg !3143
  %blue860 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx859, i32 0, i32 2, !dbg !3143
  %528 = load i8, i8* %blue860, align 1, !dbg !3143
  %conv861 = zext i8 %528 to i16, !dbg !3143
  %conv862 = zext i16 %conv861 to i32, !dbg !3143
  %529 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3143
  %trans_alpha863 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %529, i32 0, i32 85, !dbg !3143
  %530 = load i8*, i8** %trans_alpha863, align 8, !dbg !3143
  %531 = load i32, i32* %i746, align 4, !dbg !3143
  %idxprom864 = sext i32 %531 to i64, !dbg !3143
  %arrayidx865 = getelementptr inbounds i8, i8* %530, i64 %idxprom864, !dbg !3143
  %532 = load i8, i8* %arrayidx865, align 1, !dbg !3143
  %conv866 = zext i8 %532 to i16, !dbg !3143
  %conv867 = zext i16 %conv866 to i32, !dbg !3143
  %mul868 = mul nsw i32 %conv862, %conv867, !dbg !3143
  %blue869 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %back749, i32 0, i32 2, !dbg !3143
  %533 = load i8, i8* %blue869, align 1, !dbg !3143
  %conv870 = zext i8 %533 to i16, !dbg !3143
  %conv871 = zext i16 %conv870 to i32, !dbg !3143
  %534 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3143
  %trans_alpha872 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %534, i32 0, i32 85, !dbg !3143
  %535 = load i8*, i8** %trans_alpha872, align 8, !dbg !3143
  %536 = load i32, i32* %i746, align 4, !dbg !3143
  %idxprom873 = sext i32 %536 to i64, !dbg !3143
  %arrayidx874 = getelementptr inbounds i8, i8* %535, i64 %idxprom873, !dbg !3143
  %537 = load i8, i8* %arrayidx874, align 1, !dbg !3143
  %conv875 = zext i8 %537 to i16, !dbg !3143
  %conv876 = zext i16 %conv875 to i32, !dbg !3143
  %sub877 = sub nsw i32 255, %conv876, !dbg !3143
  %conv878 = trunc i32 %sub877 to i16, !dbg !3143
  %conv879 = zext i16 %conv878 to i32, !dbg !3143
  %mul880 = mul nsw i32 %conv871, %conv879, !dbg !3143
  %add881 = add nsw i32 %mul868, %mul880, !dbg !3143
  %add882 = add nsw i32 %add881, 128, !dbg !3143
  %conv883 = trunc i32 %add882 to i16, !dbg !3143
  store i16 %conv883, i16* %temp857, align 2, !dbg !3143
  %538 = load i16, i16* %temp857, align 2, !dbg !3143
  %conv884 = zext i16 %538 to i32, !dbg !3143
  %539 = load i16, i16* %temp857, align 2, !dbg !3143
  %conv885 = zext i16 %539 to i32, !dbg !3143
  %shr886 = ashr i32 %conv885, 8, !dbg !3143
  %add887 = add nsw i32 %conv884, %shr886, !dbg !3143
  %shr888 = ashr i32 %add887, 8, !dbg !3143
  %conv889 = trunc i32 %shr888 to i8, !dbg !3143
  %540 = load %struct.png_color_struct*, %struct.png_color_struct** %palette750, align 8, !dbg !3143
  %541 = load i32, i32* %i746, align 4, !dbg !3143
  %idxprom890 = sext i32 %541 to i64, !dbg !3143
  %arrayidx891 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %540, i64 %idxprom890, !dbg !3143
  %blue892 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx891, i32 0, i32 2, !dbg !3143
  store i8 %conv889, i8* %blue892, align 1, !dbg !3143
  br label %if.end893, !dbg !3144

if.end893:                                        ; preds = %if.then784, %if.else777
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.then774
  br label %for.inc895, !dbg !3145

for.inc895:                                       ; preds = %if.end894
  %542 = load i32, i32* %i746, align 4, !dbg !3146
  %inc896 = add nsw i32 %542, 1, !dbg !3146
  store i32 %inc896, i32* %i746, align 4, !dbg !3146
  br label %for.cond764, !dbg !3147, !llvm.loop !3148

for.end897:                                       ; preds = %for.cond764
  %543 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3150
  %transformations898 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %543, i32 0, i32 15, !dbg !3151
  %544 = load i32, i32* %transformations898, align 4, !dbg !3152
  %and899 = and i32 %544, -129, !dbg !3152
  store i32 %and899, i32* %transformations898, align 4, !dbg !3152
  br label %if.end900, !dbg !3153

if.end900:                                        ; preds = %for.end897, %land.lhs.true740, %if.else736
  br label %if.end901

if.end901:                                        ; preds = %if.end900, %if.end735
  %545 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3154
  %transformations902 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %545, i32 0, i32 15, !dbg !3156
  %546 = load i32, i32* %transformations902, align 4, !dbg !3156
  %and903 = and i32 %546, 8, !dbg !3157
  %tobool904 = icmp ne i32 %and903, 0, !dbg !3157
  br i1 %tobool904, label %land.lhs.true905, label %if.end1009, !dbg !3158

land.lhs.true905:                                 ; preds = %if.end901
  %547 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3159
  %transformations906 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %547, i32 0, i32 15, !dbg !3160
  %548 = load i32, i32* %transformations906, align 4, !dbg !3160
  %and907 = and i32 %548, 4096, !dbg !3161
  %tobool908 = icmp ne i32 %and907, 0, !dbg !3161
  br i1 %tobool908, label %if.end1009, label %land.lhs.true909, !dbg !3162

land.lhs.true909:                                 ; preds = %land.lhs.true905
  %549 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3163
  %color_type910 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %549, i32 0, i32 56, !dbg !3164
  %550 = load i8, i8* %color_type910, align 1, !dbg !3164
  %conv911 = zext i8 %550 to i32, !dbg !3163
  %cmp912 = icmp eq i32 %conv911, 3, !dbg !3165
  br i1 %cmp912, label %if.then914, label %if.end1009, !dbg !3166

if.then914:                                       ; preds = %land.lhs.true909
  call void @llvm.dbg.declare(metadata i32* %i915, metadata !3167, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.declare(metadata i32* %istop916, metadata !3170, metadata !DIExpression()), !dbg !3171
  %551 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3172
  %num_palette917 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %551, i32 0, i32 48, !dbg !3173
  %552 = load i16, i16* %num_palette917, align 8, !dbg !3173
  %conv918 = zext i16 %552 to i32, !dbg !3172
  store i32 %conv918, i32* %istop916, align 4, !dbg !3171
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3174, metadata !DIExpression()), !dbg !3175
  %553 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3176
  %sig_bit = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %553, i32 0, i32 83, !dbg !3177
  %red919 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit, i32 0, i32 0, !dbg !3178
  %554 = load i8, i8* %red919, align 8, !dbg !3178
  %conv920 = zext i8 %554 to i32, !dbg !3176
  %sub921 = sub nsw i32 8, %conv920, !dbg !3179
  store i32 %sub921, i32* %shift, align 4, !dbg !3175
  %555 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3180
  %transformations922 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %555, i32 0, i32 15, !dbg !3181
  %556 = load i32, i32* %transformations922, align 4, !dbg !3182
  %and923 = and i32 %556, -9, !dbg !3182
  store i32 %and923, i32* %transformations922, align 4, !dbg !3182
  %557 = load i32, i32* %shift, align 4, !dbg !3183
  %cmp924 = icmp sgt i32 %557, 0, !dbg !3185
  br i1 %cmp924, label %land.lhs.true926, label %if.end948, !dbg !3186

land.lhs.true926:                                 ; preds = %if.then914
  %558 = load i32, i32* %shift, align 4, !dbg !3187
  %cmp927 = icmp slt i32 %558, 8, !dbg !3188
  br i1 %cmp927, label %if.then929, label %if.end948, !dbg !3189

if.then929:                                       ; preds = %land.lhs.true926
  store i32 0, i32* %i915, align 4, !dbg !3190
  br label %for.cond930, !dbg !3192

for.cond930:                                      ; preds = %for.inc945, %if.then929
  %559 = load i32, i32* %i915, align 4, !dbg !3193
  %560 = load i32, i32* %istop916, align 4, !dbg !3195
  %cmp931 = icmp slt i32 %559, %560, !dbg !3196
  br i1 %cmp931, label %for.body933, label %for.end947, !dbg !3197

for.body933:                                      ; preds = %for.cond930
  call void @llvm.dbg.declare(metadata i32* %component, metadata !3198, metadata !DIExpression()), !dbg !3200
  %561 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3201
  %palette934 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %561, i32 0, i32 47, !dbg !3202
  %562 = load %struct.png_color_struct*, %struct.png_color_struct** %palette934, align 8, !dbg !3202
  %563 = load i32, i32* %i915, align 4, !dbg !3203
  %idxprom935 = sext i32 %563 to i64, !dbg !3201
  %arrayidx936 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %562, i64 %idxprom935, !dbg !3201
  %red937 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx936, i32 0, i32 0, !dbg !3204
  %564 = load i8, i8* %red937, align 1, !dbg !3204
  %conv938 = zext i8 %564 to i32, !dbg !3201
  store i32 %conv938, i32* %component, align 4, !dbg !3200
  %565 = load i32, i32* %shift, align 4, !dbg !3205
  %566 = load i32, i32* %component, align 4, !dbg !3206
  %shr939 = ashr i32 %566, %565, !dbg !3206
  store i32 %shr939, i32* %component, align 4, !dbg !3206
  %567 = load i32, i32* %component, align 4, !dbg !3207
  %conv940 = trunc i32 %567 to i8, !dbg !3208
  %568 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3209
  %palette941 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %568, i32 0, i32 47, !dbg !3210
  %569 = load %struct.png_color_struct*, %struct.png_color_struct** %palette941, align 8, !dbg !3210
  %570 = load i32, i32* %i915, align 4, !dbg !3211
  %idxprom942 = sext i32 %570 to i64, !dbg !3209
  %arrayidx943 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %569, i64 %idxprom942, !dbg !3209
  %red944 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx943, i32 0, i32 0, !dbg !3212
  store i8 %conv940, i8* %red944, align 1, !dbg !3213
  br label %for.inc945, !dbg !3214

for.inc945:                                       ; preds = %for.body933
  %571 = load i32, i32* %i915, align 4, !dbg !3215
  %inc946 = add nsw i32 %571, 1, !dbg !3215
  store i32 %inc946, i32* %i915, align 4, !dbg !3215
  br label %for.cond930, !dbg !3216, !llvm.loop !3217

for.end947:                                       ; preds = %for.cond930
  br label %if.end948, !dbg !3218

if.end948:                                        ; preds = %for.end947, %land.lhs.true926, %if.then914
  %572 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3219
  %sig_bit949 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %572, i32 0, i32 83, !dbg !3220
  %green950 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit949, i32 0, i32 1, !dbg !3221
  %573 = load i8, i8* %green950, align 1, !dbg !3221
  %conv951 = zext i8 %573 to i32, !dbg !3219
  %sub952 = sub nsw i32 8, %conv951, !dbg !3222
  store i32 %sub952, i32* %shift, align 4, !dbg !3223
  %574 = load i32, i32* %shift, align 4, !dbg !3224
  %cmp953 = icmp sgt i32 %574, 0, !dbg !3226
  br i1 %cmp953, label %land.lhs.true955, label %if.end978, !dbg !3227

land.lhs.true955:                                 ; preds = %if.end948
  %575 = load i32, i32* %shift, align 4, !dbg !3228
  %cmp956 = icmp slt i32 %575, 8, !dbg !3229
  br i1 %cmp956, label %if.then958, label %if.end978, !dbg !3230

if.then958:                                       ; preds = %land.lhs.true955
  store i32 0, i32* %i915, align 4, !dbg !3231
  br label %for.cond959, !dbg !3233

for.cond959:                                      ; preds = %for.inc975, %if.then958
  %576 = load i32, i32* %i915, align 4, !dbg !3234
  %577 = load i32, i32* %istop916, align 4, !dbg !3236
  %cmp960 = icmp slt i32 %576, %577, !dbg !3237
  br i1 %cmp960, label %for.body962, label %for.end977, !dbg !3238

for.body962:                                      ; preds = %for.cond959
  call void @llvm.dbg.declare(metadata i32* %component963, metadata !3239, metadata !DIExpression()), !dbg !3241
  %578 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3242
  %palette964 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %578, i32 0, i32 47, !dbg !3243
  %579 = load %struct.png_color_struct*, %struct.png_color_struct** %palette964, align 8, !dbg !3243
  %580 = load i32, i32* %i915, align 4, !dbg !3244
  %idxprom965 = sext i32 %580 to i64, !dbg !3242
  %arrayidx966 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %579, i64 %idxprom965, !dbg !3242
  %green967 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx966, i32 0, i32 1, !dbg !3245
  %581 = load i8, i8* %green967, align 1, !dbg !3245
  %conv968 = zext i8 %581 to i32, !dbg !3242
  store i32 %conv968, i32* %component963, align 4, !dbg !3241
  %582 = load i32, i32* %shift, align 4, !dbg !3246
  %583 = load i32, i32* %component963, align 4, !dbg !3247
  %shr969 = ashr i32 %583, %582, !dbg !3247
  store i32 %shr969, i32* %component963, align 4, !dbg !3247
  %584 = load i32, i32* %component963, align 4, !dbg !3248
  %conv970 = trunc i32 %584 to i8, !dbg !3249
  %585 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3250
  %palette971 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %585, i32 0, i32 47, !dbg !3251
  %586 = load %struct.png_color_struct*, %struct.png_color_struct** %palette971, align 8, !dbg !3251
  %587 = load i32, i32* %i915, align 4, !dbg !3252
  %idxprom972 = sext i32 %587 to i64, !dbg !3250
  %arrayidx973 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %586, i64 %idxprom972, !dbg !3250
  %green974 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx973, i32 0, i32 1, !dbg !3253
  store i8 %conv970, i8* %green974, align 1, !dbg !3254
  br label %for.inc975, !dbg !3255

for.inc975:                                       ; preds = %for.body962
  %588 = load i32, i32* %i915, align 4, !dbg !3256
  %inc976 = add nsw i32 %588, 1, !dbg !3256
  store i32 %inc976, i32* %i915, align 4, !dbg !3256
  br label %for.cond959, !dbg !3257, !llvm.loop !3258

for.end977:                                       ; preds = %for.cond959
  br label %if.end978, !dbg !3259

if.end978:                                        ; preds = %for.end977, %land.lhs.true955, %if.end948
  %589 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3260
  %sig_bit979 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %589, i32 0, i32 83, !dbg !3261
  %blue980 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit979, i32 0, i32 2, !dbg !3262
  %590 = load i8, i8* %blue980, align 2, !dbg !3262
  %conv981 = zext i8 %590 to i32, !dbg !3260
  %sub982 = sub nsw i32 8, %conv981, !dbg !3263
  store i32 %sub982, i32* %shift, align 4, !dbg !3264
  %591 = load i32, i32* %shift, align 4, !dbg !3265
  %cmp983 = icmp sgt i32 %591, 0, !dbg !3267
  br i1 %cmp983, label %land.lhs.true985, label %if.end1008, !dbg !3268

land.lhs.true985:                                 ; preds = %if.end978
  %592 = load i32, i32* %shift, align 4, !dbg !3269
  %cmp986 = icmp slt i32 %592, 8, !dbg !3270
  br i1 %cmp986, label %if.then988, label %if.end1008, !dbg !3271

if.then988:                                       ; preds = %land.lhs.true985
  store i32 0, i32* %i915, align 4, !dbg !3272
  br label %for.cond989, !dbg !3274

for.cond989:                                      ; preds = %for.inc1005, %if.then988
  %593 = load i32, i32* %i915, align 4, !dbg !3275
  %594 = load i32, i32* %istop916, align 4, !dbg !3277
  %cmp990 = icmp slt i32 %593, %594, !dbg !3278
  br i1 %cmp990, label %for.body992, label %for.end1007, !dbg !3279

for.body992:                                      ; preds = %for.cond989
  call void @llvm.dbg.declare(metadata i32* %component993, metadata !3280, metadata !DIExpression()), !dbg !3282
  %595 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3283
  %palette994 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %595, i32 0, i32 47, !dbg !3284
  %596 = load %struct.png_color_struct*, %struct.png_color_struct** %palette994, align 8, !dbg !3284
  %597 = load i32, i32* %i915, align 4, !dbg !3285
  %idxprom995 = sext i32 %597 to i64, !dbg !3283
  %arrayidx996 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %596, i64 %idxprom995, !dbg !3283
  %blue997 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx996, i32 0, i32 2, !dbg !3286
  %598 = load i8, i8* %blue997, align 1, !dbg !3286
  %conv998 = zext i8 %598 to i32, !dbg !3283
  store i32 %conv998, i32* %component993, align 4, !dbg !3282
  %599 = load i32, i32* %shift, align 4, !dbg !3287
  %600 = load i32, i32* %component993, align 4, !dbg !3288
  %shr999 = ashr i32 %600, %599, !dbg !3288
  store i32 %shr999, i32* %component993, align 4, !dbg !3288
  %601 = load i32, i32* %component993, align 4, !dbg !3289
  %conv1000 = trunc i32 %601 to i8, !dbg !3290
  %602 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3291
  %palette1001 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %602, i32 0, i32 47, !dbg !3292
  %603 = load %struct.png_color_struct*, %struct.png_color_struct** %palette1001, align 8, !dbg !3292
  %604 = load i32, i32* %i915, align 4, !dbg !3293
  %idxprom1002 = sext i32 %604 to i64, !dbg !3291
  %arrayidx1003 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %603, i64 %idxprom1002, !dbg !3291
  %blue1004 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx1003, i32 0, i32 2, !dbg !3294
  store i8 %conv1000, i8* %blue1004, align 1, !dbg !3295
  br label %for.inc1005, !dbg !3296

for.inc1005:                                      ; preds = %for.body992
  %605 = load i32, i32* %i915, align 4, !dbg !3297
  %inc1006 = add nsw i32 %605, 1, !dbg !3297
  store i32 %inc1006, i32* %i915, align 4, !dbg !3297
  br label %for.cond989, !dbg !3298, !llvm.loop !3299

for.end1007:                                      ; preds = %for.cond989
  br label %if.end1008, !dbg !3300

if.end1008:                                       ; preds = %for.end1007, %land.lhs.true985, %if.end978
  br label %if.end1009, !dbg !3301

if.end1009:                                       ; preds = %if.end1008, %land.lhs.true909, %land.lhs.true905, %if.end901
  ret void, !dbg !3302
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @png_gamma_threshold(i32 %screen_gamma, i32 %file_gamma) #0 !dbg !3303 {
entry:
  %screen_gamma.addr = alloca i32, align 4
  %file_gamma.addr = alloca i32, align 4
  %gtest = alloca i32, align 4
  store i32 %screen_gamma, i32* %screen_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %screen_gamma.addr, metadata !3306, metadata !DIExpression()), !dbg !3307
  store i32 %file_gamma, i32* %file_gamma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %file_gamma.addr, metadata !3308, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.declare(metadata i32* %gtest, metadata !3310, metadata !DIExpression()), !dbg !3311
  %0 = load i32, i32* %screen_gamma.addr, align 4, !dbg !3312
  %1 = load i32, i32* %file_gamma.addr, align 4, !dbg !3313
  %call = call i32 @png_muldiv(i32* %gtest, i32 %0, i32 %1, i32 100000), !dbg !3314
  %tobool = icmp ne i32 %call, 0, !dbg !3314
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3315

lor.rhs:                                          ; preds = %entry
  %2 = load i32, i32* %gtest, align 4, !dbg !3316
  %call1 = call i32 @png_gamma_significant(i32 %2), !dbg !3317
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3315
  br label %lor.end, !dbg !3315

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !3315
  ret i32 %lor.ext, !dbg !3318
}

declare dso_local i32 @png_gamma_significant(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @png_init_palette_transformations(%struct.png_struct_def* %png_ptr) #0 !dbg !3319 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %input_has_alpha = alloca i32, align 4
  %input_has_transparency = alloca i32, align 4
  %i = alloca i32, align 4
  %i64 = alloca i32, align 4
  %istop = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3320, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.declare(metadata i32* %input_has_alpha, metadata !3322, metadata !DIExpression()), !dbg !3323
  store i32 0, i32* %input_has_alpha, align 4, !dbg !3323
  call void @llvm.dbg.declare(metadata i32* %input_has_transparency, metadata !3324, metadata !DIExpression()), !dbg !3325
  store i32 0, i32* %input_has_transparency, align 4, !dbg !3325
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3326
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 50, !dbg !3328
  %1 = load i16, i16* %num_trans, align 8, !dbg !3328
  %conv = zext i16 %1 to i32, !dbg !3326
  %cmp = icmp sgt i32 %conv, 0, !dbg !3329
  br i1 %cmp, label %if.then, label %if.end19, !dbg !3330

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3331, metadata !DIExpression()), !dbg !3333
  store i32 0, i32* %i, align 4, !dbg !3334
  br label %for.cond, !dbg !3336

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !3337
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3339
  %num_trans2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 50, !dbg !3340
  %4 = load i16, i16* %num_trans2, align 8, !dbg !3340
  %conv3 = zext i16 %4 to i32, !dbg !3339
  %cmp4 = icmp slt i32 %2, %conv3, !dbg !3341
  br i1 %cmp4, label %for.body, label %for.end, !dbg !3342

for.body:                                         ; preds = %for.cond
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3343
  %trans_alpha = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 85, !dbg !3345
  %6 = load i8*, i8** %trans_alpha, align 8, !dbg !3345
  %7 = load i32, i32* %i, align 4, !dbg !3346
  %idxprom = sext i32 %7 to i64, !dbg !3343
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !3343
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3343
  %conv6 = zext i8 %8 to i32, !dbg !3343
  %cmp7 = icmp eq i32 %conv6, 255, !dbg !3347
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !3348

if.then9:                                         ; preds = %for.body
  br label %for.inc, !dbg !3349

if.else:                                          ; preds = %for.body
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3350
  %trans_alpha10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 85, !dbg !3352
  %10 = load i8*, i8** %trans_alpha10, align 8, !dbg !3352
  %11 = load i32, i32* %i, align 4, !dbg !3353
  %idxprom11 = sext i32 %11 to i64, !dbg !3350
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i64 %idxprom11, !dbg !3350
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !3350
  %conv13 = zext i8 %12 to i32, !dbg !3350
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !3354
  br i1 %cmp14, label %if.then16, label %if.else17, !dbg !3355

if.then16:                                        ; preds = %if.else
  store i32 1, i32* %input_has_transparency, align 4, !dbg !3356
  br label %if.end, !dbg !3357

if.else17:                                        ; preds = %if.else
  store i32 1, i32* %input_has_alpha, align 4, !dbg !3358
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then16
  br label %if.end18

if.end18:                                         ; preds = %if.end
  br label %for.inc, !dbg !3359

for.inc:                                          ; preds = %if.end18, %if.then9
  %13 = load i32, i32* %i, align 4, !dbg !3360
  %inc = add nsw i32 %13, 1, !dbg !3360
  store i32 %inc, i32* %i, align 4, !dbg !3360
  br label %for.cond, !dbg !3361, !llvm.loop !3362

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !3364

if.end19:                                         ; preds = %for.end, %entry
  %14 = load i32, i32* %input_has_alpha, align 4, !dbg !3365
  %tobool = icmp ne i32 %14, 0, !dbg !3365
  br i1 %tobool, label %if.end27, label %if.then20, !dbg !3367

if.then20:                                        ; preds = %if.end19
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3368
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 15, !dbg !3370
  %16 = load i32, i32* %transformations, align 4, !dbg !3371
  %and = and i32 %16, -8388609, !dbg !3371
  store i32 %and, i32* %transformations, align 4, !dbg !3371
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3372
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 14, !dbg !3373
  %18 = load i32, i32* %flags, align 8, !dbg !3374
  %and21 = and i32 %18, -8193, !dbg !3374
  store i32 %and21, i32* %flags, align 8, !dbg !3374
  %19 = load i32, i32* %input_has_transparency, align 4, !dbg !3375
  %tobool22 = icmp ne i32 %19, 0, !dbg !3375
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !3377

if.then23:                                        ; preds = %if.then20
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3378
  %transformations24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 15, !dbg !3379
  %21 = load i32, i32* %transformations24, align 4, !dbg !3380
  %and25 = and i32 %21, -385, !dbg !3380
  store i32 %and25, i32* %transformations24, align 4, !dbg !3380
  br label %if.end26, !dbg !3378

if.end26:                                         ; preds = %if.then23, %if.then20
  br label %if.end27, !dbg !3381

if.end27:                                         ; preds = %if.end26, %if.end19
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3382
  %transformations28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 15, !dbg !3384
  %23 = load i32, i32* %transformations28, align 4, !dbg !3384
  %and29 = and i32 %23, 256, !dbg !3385
  %tobool30 = icmp ne i32 %and29, 0, !dbg !3385
  br i1 %tobool30, label %land.lhs.true, label %if.end84, !dbg !3386

land.lhs.true:                                    ; preds = %if.end27
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3387
  %transformations31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 15, !dbg !3388
  %25 = load i32, i32* %transformations31, align 4, !dbg !3388
  %and32 = and i32 %25, 4096, !dbg !3389
  %tobool33 = icmp ne i32 %and32, 0, !dbg !3389
  br i1 %tobool33, label %if.then34, label %if.end84, !dbg !3390

if.then34:                                        ; preds = %land.lhs.true
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3391
  %palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 47, !dbg !3394
  %27 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !3394
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3395
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 69, !dbg !3396
  %index = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 0, !dbg !3397
  %29 = load i8, i8* %index, align 8, !dbg !3397
  %idxprom35 = zext i8 %29 to i64, !dbg !3391
  %arrayidx36 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %27, i64 %idxprom35, !dbg !3391
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx36, i32 0, i32 0, !dbg !3398
  %30 = load i8, i8* %red, align 1, !dbg !3398
  %conv37 = zext i8 %30 to i16, !dbg !3391
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3399
  %background38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 69, !dbg !3400
  %red39 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background38, i32 0, i32 1, !dbg !3401
  store i16 %conv37, i16* %red39, align 2, !dbg !3402
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3403
  %palette40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 47, !dbg !3404
  %33 = load %struct.png_color_struct*, %struct.png_color_struct** %palette40, align 8, !dbg !3404
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3405
  %background41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 69, !dbg !3406
  %index42 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background41, i32 0, i32 0, !dbg !3407
  %35 = load i8, i8* %index42, align 8, !dbg !3407
  %idxprom43 = zext i8 %35 to i64, !dbg !3403
  %arrayidx44 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %33, i64 %idxprom43, !dbg !3403
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx44, i32 0, i32 1, !dbg !3408
  %36 = load i8, i8* %green, align 1, !dbg !3408
  %conv45 = zext i8 %36 to i16, !dbg !3403
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3409
  %background46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 69, !dbg !3410
  %green47 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background46, i32 0, i32 2, !dbg !3411
  store i16 %conv45, i16* %green47, align 4, !dbg !3412
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3413
  %palette48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 47, !dbg !3414
  %39 = load %struct.png_color_struct*, %struct.png_color_struct** %palette48, align 8, !dbg !3414
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3415
  %background49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 69, !dbg !3416
  %index50 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background49, i32 0, i32 0, !dbg !3417
  %41 = load i8, i8* %index50, align 8, !dbg !3417
  %idxprom51 = zext i8 %41 to i64, !dbg !3413
  %arrayidx52 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %39, i64 %idxprom51, !dbg !3413
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx52, i32 0, i32 2, !dbg !3418
  %42 = load i8, i8* %blue, align 1, !dbg !3418
  %conv53 = zext i8 %42 to i16, !dbg !3413
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3419
  %background54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 69, !dbg !3420
  %blue55 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background54, i32 0, i32 3, !dbg !3421
  store i16 %conv53, i16* %blue55, align 2, !dbg !3422
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3423
  %transformations56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 15, !dbg !3425
  %45 = load i32, i32* %transformations56, align 4, !dbg !3425
  %and57 = and i32 %45, 524288, !dbg !3426
  %tobool58 = icmp ne i32 %and57, 0, !dbg !3426
  br i1 %tobool58, label %if.then59, label %if.end83, !dbg !3427

if.then59:                                        ; preds = %if.then34
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3428
  %transformations60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 15, !dbg !3431
  %47 = load i32, i32* %transformations60, align 4, !dbg !3431
  %and61 = and i32 %47, 33554432, !dbg !3432
  %tobool62 = icmp ne i32 %and61, 0, !dbg !3432
  br i1 %tobool62, label %if.end82, label %if.then63, !dbg !3433

if.then63:                                        ; preds = %if.then59
  call void @llvm.dbg.declare(metadata i32* %i64, metadata !3434, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %istop, metadata !3437, metadata !DIExpression()), !dbg !3438
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3439
  %num_trans65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 50, !dbg !3440
  %49 = load i16, i16* %num_trans65, align 8, !dbg !3440
  %conv66 = zext i16 %49 to i32, !dbg !3439
  store i32 %conv66, i32* %istop, align 4, !dbg !3438
  store i32 0, i32* %i64, align 4, !dbg !3441
  br label %for.cond67, !dbg !3443

for.cond67:                                       ; preds = %for.inc79, %if.then63
  %50 = load i32, i32* %i64, align 4, !dbg !3444
  %51 = load i32, i32* %istop, align 4, !dbg !3446
  %cmp68 = icmp slt i32 %50, %51, !dbg !3447
  br i1 %cmp68, label %for.body70, label %for.end81, !dbg !3448

for.body70:                                       ; preds = %for.cond67
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3449
  %trans_alpha71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 85, !dbg !3450
  %53 = load i8*, i8** %trans_alpha71, align 8, !dbg !3450
  %54 = load i32, i32* %i64, align 4, !dbg !3451
  %idxprom72 = sext i32 %54 to i64, !dbg !3449
  %arrayidx73 = getelementptr inbounds i8, i8* %53, i64 %idxprom72, !dbg !3449
  %55 = load i8, i8* %arrayidx73, align 1, !dbg !3449
  %conv74 = zext i8 %55 to i32, !dbg !3449
  %sub = sub nsw i32 255, %conv74, !dbg !3452
  %conv75 = trunc i32 %sub to i8, !dbg !3453
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3454
  %trans_alpha76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 85, !dbg !3455
  %57 = load i8*, i8** %trans_alpha76, align 8, !dbg !3455
  %58 = load i32, i32* %i64, align 4, !dbg !3456
  %idxprom77 = sext i32 %58 to i64, !dbg !3454
  %arrayidx78 = getelementptr inbounds i8, i8* %57, i64 %idxprom77, !dbg !3454
  store i8 %conv75, i8* %arrayidx78, align 1, !dbg !3457
  br label %for.inc79, !dbg !3454

for.inc79:                                        ; preds = %for.body70
  %59 = load i32, i32* %i64, align 4, !dbg !3458
  %inc80 = add nsw i32 %59, 1, !dbg !3458
  store i32 %inc80, i32* %i64, align 4, !dbg !3458
  br label %for.cond67, !dbg !3459, !llvm.loop !3460

for.end81:                                        ; preds = %for.cond67
  br label %if.end82, !dbg !3462

if.end82:                                         ; preds = %for.end81, %if.then59
  br label %if.end83, !dbg !3463

if.end83:                                         ; preds = %if.end82, %if.then34
  br label %if.end84, !dbg !3464

if.end84:                                         ; preds = %if.end83, %land.lhs.true, %if.end27
  ret void, !dbg !3465
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_init_rgb_transformations(%struct.png_struct_def* %png_ptr) #0 !dbg !3466 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %input_has_alpha = alloca i32, align 4
  %input_has_transparency = alloca i32, align 4
  %gray = alloca i32, align 4
  %trans_gray = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3467, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.declare(metadata i32* %input_has_alpha, metadata !3469, metadata !DIExpression()), !dbg !3470
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3471
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 56, !dbg !3472
  %1 = load i8, i8* %color_type, align 1, !dbg !3472
  %conv = zext i8 %1 to i32, !dbg !3471
  %and = and i32 %conv, 4, !dbg !3473
  %cmp = icmp ne i32 %and, 0, !dbg !3474
  %conv1 = zext i1 %cmp to i32, !dbg !3474
  store i32 %conv1, i32* %input_has_alpha, align 4, !dbg !3470
  call void @llvm.dbg.declare(metadata i32* %input_has_transparency, metadata !3475, metadata !DIExpression()), !dbg !3476
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3477
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 50, !dbg !3478
  %3 = load i16, i16* %num_trans, align 8, !dbg !3478
  %conv2 = zext i16 %3 to i32, !dbg !3477
  %cmp3 = icmp sgt i32 %conv2, 0, !dbg !3479
  %conv4 = zext i1 %cmp3 to i32, !dbg !3479
  store i32 %conv4, i32* %input_has_transparency, align 4, !dbg !3476
  %4 = load i32, i32* %input_has_alpha, align 4, !dbg !3480
  %tobool = icmp ne i32 %4, 0, !dbg !3480
  br i1 %tobool, label %if.end11, label %if.then, !dbg !3482

if.then:                                          ; preds = %entry
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3483
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 15, !dbg !3485
  %6 = load i32, i32* %transformations, align 4, !dbg !3486
  %and5 = and i32 %6, -8388609, !dbg !3486
  store i32 %and5, i32* %transformations, align 4, !dbg !3486
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3487
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 14, !dbg !3488
  %8 = load i32, i32* %flags, align 8, !dbg !3489
  %and6 = and i32 %8, -8193, !dbg !3489
  store i32 %and6, i32* %flags, align 8, !dbg !3489
  %9 = load i32, i32* %input_has_transparency, align 4, !dbg !3490
  %tobool7 = icmp ne i32 %9, 0, !dbg !3490
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !3492

if.then8:                                         ; preds = %if.then
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3493
  %transformations9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 15, !dbg !3494
  %11 = load i32, i32* %transformations9, align 4, !dbg !3495
  %and10 = and i32 %11, -385, !dbg !3495
  store i32 %and10, i32* %transformations9, align 4, !dbg !3495
  br label %if.end, !dbg !3493

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end11, !dbg !3496

if.end11:                                         ; preds = %if.end, %entry
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3497
  %transformations12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 15, !dbg !3499
  %13 = load i32, i32* %transformations12, align 4, !dbg !3499
  %and13 = and i32 %13, 256, !dbg !3500
  %tobool14 = icmp ne i32 %and13, 0, !dbg !3500
  br i1 %tobool14, label %land.lhs.true, label %if.end53, !dbg !3501

land.lhs.true:                                    ; preds = %if.end11
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3502
  %transformations15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 15, !dbg !3503
  %15 = load i32, i32* %transformations15, align 4, !dbg !3503
  %and16 = and i32 %15, 4096, !dbg !3504
  %tobool17 = icmp ne i32 %and16, 0, !dbg !3504
  br i1 %tobool17, label %land.lhs.true18, label %if.end53, !dbg !3505

land.lhs.true18:                                  ; preds = %land.lhs.true
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3506
  %color_type19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 56, !dbg !3507
  %17 = load i8, i8* %color_type19, align 1, !dbg !3507
  %conv20 = zext i8 %17 to i32, !dbg !3506
  %and21 = and i32 %conv20, 2, !dbg !3508
  %tobool22 = icmp ne i32 %and21, 0, !dbg !3508
  br i1 %tobool22, label %if.end53, label %if.then23, !dbg !3509

if.then23:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %gray, metadata !3510, metadata !DIExpression()), !dbg !3513
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3514
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 69, !dbg !3515
  %gray24 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 4, !dbg !3516
  %19 = load i16, i16* %gray24, align 8, !dbg !3516
  %conv25 = zext i16 %19 to i32, !dbg !3514
  store i32 %conv25, i32* %gray, align 4, !dbg !3513
  call void @llvm.dbg.declare(metadata i32* %trans_gray, metadata !3517, metadata !DIExpression()), !dbg !3518
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3519
  %trans_color = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 86, !dbg !3520
  %gray26 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color, i32 0, i32 4, !dbg !3521
  %21 = load i16, i16* %gray26, align 8, !dbg !3521
  %conv27 = zext i16 %21 to i32, !dbg !3519
  store i32 %conv27, i32* %trans_gray, align 4, !dbg !3518
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3522
  %bit_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 57, !dbg !3523
  %23 = load i8, i8* %bit_depth, align 8, !dbg !3523
  %conv28 = zext i8 %23 to i32, !dbg !3522
  switch i32 %conv28, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb30
    i32 4, label %sw.bb33
    i32 8, label %sw.bb36
    i32 16, label %sw.bb36
  ], !dbg !3524

sw.bb:                                            ; preds = %if.then23
  %24 = load i32, i32* %gray, align 4, !dbg !3525
  %mul = mul nsw i32 %24, 255, !dbg !3525
  store i32 %mul, i32* %gray, align 4, !dbg !3525
  %25 = load i32, i32* %trans_gray, align 4, !dbg !3527
  %mul29 = mul nsw i32 %25, 255, !dbg !3527
  store i32 %mul29, i32* %trans_gray, align 4, !dbg !3527
  br label %sw.epilog, !dbg !3528

sw.bb30:                                          ; preds = %if.then23
  %26 = load i32, i32* %gray, align 4, !dbg !3529
  %mul31 = mul nsw i32 %26, 85, !dbg !3529
  store i32 %mul31, i32* %gray, align 4, !dbg !3529
  %27 = load i32, i32* %trans_gray, align 4, !dbg !3530
  %mul32 = mul nsw i32 %27, 85, !dbg !3530
  store i32 %mul32, i32* %trans_gray, align 4, !dbg !3530
  br label %sw.epilog, !dbg !3531

sw.bb33:                                          ; preds = %if.then23
  %28 = load i32, i32* %gray, align 4, !dbg !3532
  %mul34 = mul nsw i32 %28, 17, !dbg !3532
  store i32 %mul34, i32* %gray, align 4, !dbg !3532
  %29 = load i32, i32* %trans_gray, align 4, !dbg !3533
  %mul35 = mul nsw i32 %29, 17, !dbg !3533
  store i32 %mul35, i32* %trans_gray, align 4, !dbg !3533
  br label %sw.epilog, !dbg !3534

sw.default:                                       ; preds = %if.then23
  br label %sw.bb36, !dbg !3534

sw.bb36:                                          ; preds = %if.then23, %if.then23, %sw.default
  br label %sw.epilog, !dbg !3535

sw.epilog:                                        ; preds = %sw.bb36, %sw.bb33, %sw.bb30, %sw.bb
  %30 = load i32, i32* %gray, align 4, !dbg !3536
  %conv37 = trunc i32 %30 to i16, !dbg !3537
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3538
  %background38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 69, !dbg !3539
  %blue = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background38, i32 0, i32 3, !dbg !3540
  store i16 %conv37, i16* %blue, align 2, !dbg !3541
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3542
  %background39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 69, !dbg !3543
  %green = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background39, i32 0, i32 2, !dbg !3544
  store i16 %conv37, i16* %green, align 4, !dbg !3545
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3546
  %background40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 69, !dbg !3547
  %red = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background40, i32 0, i32 1, !dbg !3548
  store i16 %conv37, i16* %red, align 2, !dbg !3549
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3550
  %transformations41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 15, !dbg !3552
  %35 = load i32, i32* %transformations41, align 4, !dbg !3552
  %and42 = and i32 %35, 33554432, !dbg !3553
  %tobool43 = icmp ne i32 %and42, 0, !dbg !3553
  br i1 %tobool43, label %if.end52, label %if.then44, !dbg !3554

if.then44:                                        ; preds = %sw.epilog
  %36 = load i32, i32* %trans_gray, align 4, !dbg !3555
  %conv45 = trunc i32 %36 to i16, !dbg !3557
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3558
  %trans_color46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 86, !dbg !3559
  %blue47 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color46, i32 0, i32 3, !dbg !3560
  store i16 %conv45, i16* %blue47, align 2, !dbg !3561
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3562
  %trans_color48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 86, !dbg !3563
  %green49 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color48, i32 0, i32 2, !dbg !3564
  store i16 %conv45, i16* %green49, align 4, !dbg !3565
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3566
  %trans_color50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 86, !dbg !3567
  %red51 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color50, i32 0, i32 1, !dbg !3568
  store i16 %conv45, i16* %red51, align 2, !dbg !3569
  br label %if.end52, !dbg !3570

if.end52:                                         ; preds = %if.then44, %sw.epilog
  br label %if.end53, !dbg !3571

if.end53:                                         ; preds = %if.end52, %land.lhs.true18, %land.lhs.true, %if.end11
  ret void, !dbg !3572
}

declare dso_local void @png_build_gamma_table(%struct.png_struct_def*, i32) #2

declare dso_local i32 @png_reciprocal2(i32, i32) #2

declare dso_local zeroext i8 @png_gamma_8bit_correct(i32, i32) #2

declare dso_local zeroext i16 @png_gamma_correct(%struct.png_struct_def*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_read_transform_info(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr) #0 !dbg !3573 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3574, metadata !DIExpression()), !dbg !3575
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3576, metadata !DIExpression()), !dbg !3577
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3578
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 15, !dbg !3580
  %1 = load i32, i32* %transformations, align 4, !dbg !3580
  %and = and i32 %1, 4096, !dbg !3581
  %tobool = icmp ne i32 %and, 0, !dbg !3581
  br i1 %tobool, label %if.then, label %if.end32, !dbg !3582

if.then:                                          ; preds = %entry
  %2 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3583
  %color_type = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %2, i32 0, i32 8, !dbg !3586
  %3 = load i8, i8* %color_type, align 1, !dbg !3586
  %conv = zext i8 %3 to i32, !dbg !3583
  %cmp = icmp eq i32 %conv, 3, !dbg !3587
  br i1 %cmp, label %if.then2, label %if.else10, !dbg !3588

if.then2:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3589
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 50, !dbg !3592
  %5 = load i16, i16* %num_trans, align 8, !dbg !3592
  %conv3 = zext i16 %5 to i32, !dbg !3589
  %cmp4 = icmp sgt i32 %conv3, 0, !dbg !3593
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3594

if.then6:                                         ; preds = %if.then2
  %6 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3595
  %color_type7 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %6, i32 0, i32 8, !dbg !3596
  store i8 6, i8* %color_type7, align 1, !dbg !3597
  br label %if.end, !dbg !3595

if.else:                                          ; preds = %if.then2
  %7 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3598
  %color_type8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %7, i32 0, i32 8, !dbg !3599
  store i8 2, i8* %color_type8, align 1, !dbg !3600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3601
  %bit_depth = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %8, i32 0, i32 7, !dbg !3602
  store i8 8, i8* %bit_depth, align 4, !dbg !3603
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3604
  %num_trans9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 6, !dbg !3605
  store i16 0, i16* %num_trans9, align 2, !dbg !3606
  br label %if.end31, !dbg !3607

if.else10:                                        ; preds = %if.then
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3608
  %num_trans11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 50, !dbg !3611
  %11 = load i16, i16* %num_trans11, align 8, !dbg !3611
  %tobool12 = icmp ne i16 %11, 0, !dbg !3608
  br i1 %tobool12, label %if.then13, label %if.end22, !dbg !3612

if.then13:                                        ; preds = %if.else10
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3613
  %transformations14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 15, !dbg !3616
  %13 = load i32, i32* %transformations14, align 4, !dbg !3616
  %and15 = and i32 %13, 33554432, !dbg !3617
  %tobool16 = icmp ne i32 %and15, 0, !dbg !3617
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !3618

if.then17:                                        ; preds = %if.then13
  %14 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3619
  %color_type18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 8, !dbg !3620
  %15 = load i8, i8* %color_type18, align 1, !dbg !3621
  %conv19 = zext i8 %15 to i32, !dbg !3621
  %or = or i32 %conv19, 4, !dbg !3621
  %conv20 = trunc i32 %or to i8, !dbg !3621
  store i8 %conv20, i8* %color_type18, align 1, !dbg !3621
  br label %if.end21, !dbg !3619

if.end21:                                         ; preds = %if.then17, %if.then13
  br label %if.end22, !dbg !3622

if.end22:                                         ; preds = %if.end21, %if.else10
  %16 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3623
  %bit_depth23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 7, !dbg !3625
  %17 = load i8, i8* %bit_depth23, align 4, !dbg !3625
  %conv24 = zext i8 %17 to i32, !dbg !3623
  %cmp25 = icmp slt i32 %conv24, 8, !dbg !3626
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !3627

if.then27:                                        ; preds = %if.end22
  %18 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3628
  %bit_depth28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %18, i32 0, i32 7, !dbg !3629
  store i8 8, i8* %bit_depth28, align 4, !dbg !3630
  br label %if.end29, !dbg !3628

if.end29:                                         ; preds = %if.then27, %if.end22
  %19 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3631
  %num_trans30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %19, i32 0, i32 6, !dbg !3632
  store i16 0, i16* %num_trans30, align 2, !dbg !3633
  br label %if.end31

if.end31:                                         ; preds = %if.end29, %if.end
  br label %if.end32, !dbg !3634

if.end32:                                         ; preds = %if.end31, %entry
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3635
  %transformations33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 15, !dbg !3637
  %21 = load i32, i32* %transformations33, align 4, !dbg !3637
  %and34 = and i32 %21, 128, !dbg !3638
  %tobool35 = icmp ne i32 %and34, 0, !dbg !3638
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !3639

if.then36:                                        ; preds = %if.end32
  %22 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3640
  %background = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %22, i32 0, i32 25, !dbg !3641
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3642
  %background37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 69, !dbg !3643
  %24 = bitcast %struct.png_color_16_struct* %background to i8*, !dbg !3643
  %25 = bitcast %struct.png_color_16_struct* %background37 to i8*, !dbg !3643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %24, i8* align 8 %25, i64 10, i1 false), !dbg !3643
  br label %if.end38, !dbg !3640

if.end38:                                         ; preds = %if.then36, %if.end32
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3644
  %gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 75, !dbg !3645
  %27 = load i32, i32* %gamma, align 4, !dbg !3645
  %28 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3646
  %gamma39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 16, !dbg !3647
  store i32 %27, i32* %gamma39, align 4, !dbg !3648
  %29 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3649
  %bit_depth40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 7, !dbg !3651
  %30 = load i8, i8* %bit_depth40, align 4, !dbg !3651
  %conv41 = zext i8 %30 to i32, !dbg !3649
  %cmp42 = icmp eq i32 %conv41, 16, !dbg !3652
  br i1 %cmp42, label %if.then44, label %if.end57, !dbg !3653

if.then44:                                        ; preds = %if.end38
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3654
  %transformations45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 15, !dbg !3657
  %32 = load i32, i32* %transformations45, align 4, !dbg !3657
  %and46 = and i32 %32, 67108864, !dbg !3658
  %tobool47 = icmp ne i32 %and46, 0, !dbg !3658
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !3659

if.then48:                                        ; preds = %if.then44
  %33 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3660
  %bit_depth49 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 7, !dbg !3661
  store i8 8, i8* %bit_depth49, align 4, !dbg !3662
  br label %if.end50, !dbg !3660

if.end50:                                         ; preds = %if.then48, %if.then44
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3663
  %transformations51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 15, !dbg !3665
  %35 = load i32, i32* %transformations51, align 4, !dbg !3665
  %and52 = and i32 %35, 1024, !dbg !3666
  %tobool53 = icmp ne i32 %and52, 0, !dbg !3666
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !3667

if.then54:                                        ; preds = %if.end50
  %36 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3668
  %bit_depth55 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %36, i32 0, i32 7, !dbg !3669
  store i8 8, i8* %bit_depth55, align 4, !dbg !3670
  br label %if.end56, !dbg !3668

if.end56:                                         ; preds = %if.then54, %if.end50
  br label %if.end57, !dbg !3671

if.end57:                                         ; preds = %if.end56, %if.end38
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3672
  %transformations58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 15, !dbg !3674
  %38 = load i32, i32* %transformations58, align 4, !dbg !3674
  %and59 = and i32 %38, 16384, !dbg !3675
  %tobool60 = icmp ne i32 %and59, 0, !dbg !3675
  br i1 %tobool60, label %if.then61, label %if.end67, !dbg !3676

if.then61:                                        ; preds = %if.end57
  %39 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3677
  %color_type62 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 8, !dbg !3678
  %40 = load i8, i8* %color_type62, align 1, !dbg !3678
  %conv63 = zext i8 %40 to i32, !dbg !3677
  %or64 = or i32 %conv63, 2, !dbg !3679
  %conv65 = trunc i32 %or64 to i8, !dbg !3680
  %41 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3681
  %color_type66 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 8, !dbg !3682
  store i8 %conv65, i8* %color_type66, align 1, !dbg !3683
  br label %if.end67, !dbg !3681

if.end67:                                         ; preds = %if.then61, %if.end57
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3684
  %transformations68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 15, !dbg !3686
  %43 = load i32, i32* %transformations68, align 4, !dbg !3686
  %and69 = and i32 %43, 6291456, !dbg !3687
  %tobool70 = icmp ne i32 %and69, 0, !dbg !3687
  br i1 %tobool70, label %if.then71, label %if.end77, !dbg !3688

if.then71:                                        ; preds = %if.end67
  %44 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3689
  %color_type72 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %44, i32 0, i32 8, !dbg !3690
  %45 = load i8, i8* %color_type72, align 1, !dbg !3690
  %conv73 = zext i8 %45 to i32, !dbg !3689
  %and74 = and i32 %conv73, -3, !dbg !3691
  %conv75 = trunc i32 %and74 to i8, !dbg !3692
  %46 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3693
  %color_type76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %46, i32 0, i32 8, !dbg !3694
  store i8 %conv75, i8* %color_type76, align 1, !dbg !3695
  br label %if.end77, !dbg !3693

if.end77:                                         ; preds = %if.then71, %if.end67
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3696
  %transformations78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 15, !dbg !3698
  %48 = load i32, i32* %transformations78, align 4, !dbg !3698
  %and79 = and i32 %48, 64, !dbg !3699
  %tobool80 = icmp ne i32 %and79, 0, !dbg !3699
  br i1 %tobool80, label %if.then81, label %if.end99, !dbg !3700

if.then81:                                        ; preds = %if.end77
  %49 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3701
  %color_type82 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 8, !dbg !3704
  %50 = load i8, i8* %color_type82, align 1, !dbg !3704
  %conv83 = zext i8 %50 to i32, !dbg !3701
  %cmp84 = icmp eq i32 %conv83, 2, !dbg !3705
  br i1 %cmp84, label %land.lhs.true, label %lor.lhs.false, !dbg !3706

lor.lhs.false:                                    ; preds = %if.then81
  %51 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3707
  %color_type86 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 8, !dbg !3708
  %52 = load i8, i8* %color_type86, align 1, !dbg !3708
  %conv87 = zext i8 %52 to i32, !dbg !3707
  %cmp88 = icmp eq i32 %conv87, 6, !dbg !3709
  br i1 %cmp88, label %land.lhs.true, label %if.end98, !dbg !3710

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then81
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3711
  %palette_lookup = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 104, !dbg !3712
  %54 = load i8*, i8** %palette_lookup, align 8, !dbg !3712
  %tobool90 = icmp ne i8* %54, null, !dbg !3711
  br i1 %tobool90, label %land.lhs.true91, label %if.end98, !dbg !3713

land.lhs.true91:                                  ; preds = %land.lhs.true
  %55 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3714
  %bit_depth92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %55, i32 0, i32 7, !dbg !3715
  %56 = load i8, i8* %bit_depth92, align 4, !dbg !3715
  %conv93 = zext i8 %56 to i32, !dbg !3714
  %cmp94 = icmp eq i32 %conv93, 8, !dbg !3716
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !3717

if.then96:                                        ; preds = %land.lhs.true91
  %57 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3718
  %color_type97 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %57, i32 0, i32 8, !dbg !3720
  store i8 3, i8* %color_type97, align 1, !dbg !3721
  br label %if.end98, !dbg !3722

if.end98:                                         ; preds = %if.then96, %land.lhs.true91, %land.lhs.true, %lor.lhs.false
  br label %if.end99, !dbg !3723

if.end99:                                         ; preds = %if.end98, %if.end77
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3724
  %transformations100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 15, !dbg !3726
  %59 = load i32, i32* %transformations100, align 4, !dbg !3726
  %and101 = and i32 %59, 512, !dbg !3727
  %tobool102 = icmp ne i32 %and101, 0, !dbg !3727
  br i1 %tobool102, label %land.lhs.true103, label %if.end115, !dbg !3728

land.lhs.true103:                                 ; preds = %if.end99
  %60 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3729
  %bit_depth104 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %60, i32 0, i32 7, !dbg !3730
  %61 = load i8, i8* %bit_depth104, align 4, !dbg !3730
  %conv105 = zext i8 %61 to i32, !dbg !3729
  %cmp106 = icmp eq i32 %conv105, 8, !dbg !3731
  br i1 %cmp106, label %land.lhs.true108, label %if.end115, !dbg !3732

land.lhs.true108:                                 ; preds = %land.lhs.true103
  %62 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3733
  %color_type109 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %62, i32 0, i32 8, !dbg !3734
  %63 = load i8, i8* %color_type109, align 1, !dbg !3734
  %conv110 = zext i8 %63 to i32, !dbg !3733
  %cmp111 = icmp ne i32 %conv110, 3, !dbg !3735
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !3736

if.then113:                                       ; preds = %land.lhs.true108
  %64 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3737
  %bit_depth114 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %64, i32 0, i32 7, !dbg !3739
  store i8 16, i8* %bit_depth114, align 4, !dbg !3740
  br label %if.end115, !dbg !3741

if.end115:                                        ; preds = %if.then113, %land.lhs.true108, %land.lhs.true103, %if.end99
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3742
  %transformations116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 15, !dbg !3744
  %66 = load i32, i32* %transformations116, align 4, !dbg !3744
  %and117 = and i32 %66, 4, !dbg !3745
  %tobool118 = icmp ne i32 %and117, 0, !dbg !3745
  br i1 %tobool118, label %land.lhs.true119, label %if.end126, !dbg !3746

land.lhs.true119:                                 ; preds = %if.end115
  %67 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3747
  %bit_depth120 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 7, !dbg !3748
  %68 = load i8, i8* %bit_depth120, align 4, !dbg !3748
  %conv121 = zext i8 %68 to i32, !dbg !3747
  %cmp122 = icmp slt i32 %conv121, 8, !dbg !3749
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !3750

if.then124:                                       ; preds = %land.lhs.true119
  %69 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3751
  %bit_depth125 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 7, !dbg !3752
  store i8 8, i8* %bit_depth125, align 4, !dbg !3753
  br label %if.end126, !dbg !3751

if.end126:                                        ; preds = %if.then124, %land.lhs.true119, %if.end115
  %70 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3754
  %color_type127 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %70, i32 0, i32 8, !dbg !3756
  %71 = load i8, i8* %color_type127, align 1, !dbg !3756
  %conv128 = zext i8 %71 to i32, !dbg !3754
  %cmp129 = icmp eq i32 %conv128, 3, !dbg !3757
  br i1 %cmp129, label %if.then131, label %if.else132, !dbg !3758

if.then131:                                       ; preds = %if.end126
  %72 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3759
  %channels = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %72, i32 0, i32 12, !dbg !3760
  store i8 1, i8* %channels, align 1, !dbg !3761
  br label %if.end142, !dbg !3759

if.else132:                                       ; preds = %if.end126
  %73 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3762
  %color_type133 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %73, i32 0, i32 8, !dbg !3764
  %74 = load i8, i8* %color_type133, align 1, !dbg !3764
  %conv134 = zext i8 %74 to i32, !dbg !3762
  %and135 = and i32 %conv134, 2, !dbg !3765
  %tobool136 = icmp ne i32 %and135, 0, !dbg !3765
  br i1 %tobool136, label %if.then137, label %if.else139, !dbg !3766

if.then137:                                       ; preds = %if.else132
  %75 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3767
  %channels138 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %75, i32 0, i32 12, !dbg !3768
  store i8 3, i8* %channels138, align 1, !dbg !3769
  br label %if.end141, !dbg !3767

if.else139:                                       ; preds = %if.else132
  %76 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3770
  %channels140 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %76, i32 0, i32 12, !dbg !3771
  store i8 1, i8* %channels140, align 1, !dbg !3772
  br label %if.end141

if.end141:                                        ; preds = %if.else139, %if.then137
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then131
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3773
  %transformations143 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 15, !dbg !3775
  %78 = load i32, i32* %transformations143, align 4, !dbg !3775
  %and144 = and i32 %78, 262144, !dbg !3776
  %tobool145 = icmp ne i32 %and144, 0, !dbg !3776
  br i1 %tobool145, label %if.then146, label %if.end153, !dbg !3777

if.then146:                                       ; preds = %if.end142
  %79 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3778
  %color_type147 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %79, i32 0, i32 8, !dbg !3780
  %80 = load i8, i8* %color_type147, align 1, !dbg !3780
  %conv148 = zext i8 %80 to i32, !dbg !3778
  %and149 = and i32 %conv148, -5, !dbg !3781
  %conv150 = trunc i32 %and149 to i8, !dbg !3782
  %81 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3783
  %color_type151 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %81, i32 0, i32 8, !dbg !3784
  store i8 %conv150, i8* %color_type151, align 1, !dbg !3785
  %82 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3786
  %num_trans152 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %82, i32 0, i32 6, !dbg !3787
  store i16 0, i16* %num_trans152, align 2, !dbg !3788
  br label %if.end153, !dbg !3789

if.end153:                                        ; preds = %if.then146, %if.end142
  %83 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3790
  %color_type154 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %83, i32 0, i32 8, !dbg !3792
  %84 = load i8, i8* %color_type154, align 1, !dbg !3792
  %conv155 = zext i8 %84 to i32, !dbg !3790
  %and156 = and i32 %conv155, 4, !dbg !3793
  %tobool157 = icmp ne i32 %and156, 0, !dbg !3793
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !3794

if.then158:                                       ; preds = %if.end153
  %85 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3795
  %channels159 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %85, i32 0, i32 12, !dbg !3796
  %86 = load i8, i8* %channels159, align 1, !dbg !3797
  %inc = add i8 %86, 1, !dbg !3797
  store i8 %inc, i8* %channels159, align 1, !dbg !3797
  br label %if.end160, !dbg !3795

if.end160:                                        ; preds = %if.then158, %if.end153
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3798
  %transformations161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 15, !dbg !3800
  %88 = load i32, i32* %transformations161, align 4, !dbg !3800
  %and162 = and i32 %88, 32768, !dbg !3801
  %tobool163 = icmp ne i32 %and162, 0, !dbg !3801
  br i1 %tobool163, label %land.lhs.true164, label %if.end186, !dbg !3802

land.lhs.true164:                                 ; preds = %if.end160
  %89 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3803
  %color_type165 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %89, i32 0, i32 8, !dbg !3804
  %90 = load i8, i8* %color_type165, align 1, !dbg !3804
  %conv166 = zext i8 %90 to i32, !dbg !3803
  %cmp167 = icmp eq i32 %conv166, 2, !dbg !3805
  br i1 %cmp167, label %if.then174, label %lor.lhs.false169, !dbg !3806

lor.lhs.false169:                                 ; preds = %land.lhs.true164
  %91 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3807
  %color_type170 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %91, i32 0, i32 8, !dbg !3808
  %92 = load i8, i8* %color_type170, align 1, !dbg !3808
  %conv171 = zext i8 %92 to i32, !dbg !3807
  %cmp172 = icmp eq i32 %conv171, 0, !dbg !3809
  br i1 %cmp172, label %if.then174, label %if.end186, !dbg !3810

if.then174:                                       ; preds = %lor.lhs.false169, %land.lhs.true164
  %93 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3811
  %channels175 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %93, i32 0, i32 12, !dbg !3813
  %94 = load i8, i8* %channels175, align 1, !dbg !3814
  %inc176 = add i8 %94, 1, !dbg !3814
  store i8 %inc176, i8* %channels175, align 1, !dbg !3814
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3815
  %transformations177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 15, !dbg !3817
  %96 = load i32, i32* %transformations177, align 4, !dbg !3817
  %and178 = and i32 %96, 16777216, !dbg !3818
  %tobool179 = icmp ne i32 %and178, 0, !dbg !3818
  br i1 %tobool179, label %if.then180, label %if.end185, !dbg !3819

if.then180:                                       ; preds = %if.then174
  %97 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3820
  %color_type181 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %97, i32 0, i32 8, !dbg !3821
  %98 = load i8, i8* %color_type181, align 1, !dbg !3822
  %conv182 = zext i8 %98 to i32, !dbg !3822
  %or183 = or i32 %conv182, 4, !dbg !3822
  %conv184 = trunc i32 %or183 to i8, !dbg !3822
  store i8 %conv184, i8* %color_type181, align 1, !dbg !3822
  br label %if.end185, !dbg !3820

if.end185:                                        ; preds = %if.then180, %if.then174
  br label %if.end186, !dbg !3823

if.end186:                                        ; preds = %if.end185, %lor.lhs.false169, %if.end160
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3824
  %transformations187 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 15, !dbg !3826
  %100 = load i32, i32* %transformations187, align 4, !dbg !3826
  %and188 = and i32 %100, 1048576, !dbg !3827
  %tobool189 = icmp ne i32 %and188, 0, !dbg !3827
  br i1 %tobool189, label %if.then190, label %if.end209, !dbg !3828

if.then190:                                       ; preds = %if.end186
  %101 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3829
  %bit_depth191 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %101, i32 0, i32 7, !dbg !3832
  %102 = load i8, i8* %bit_depth191, align 4, !dbg !3832
  %conv192 = zext i8 %102 to i32, !dbg !3829
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3833
  %user_transform_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 11, !dbg !3834
  %104 = load i8, i8* %user_transform_depth, align 8, !dbg !3834
  %conv193 = zext i8 %104 to i32, !dbg !3833
  %cmp194 = icmp slt i32 %conv192, %conv193, !dbg !3835
  br i1 %cmp194, label %if.then196, label %if.end199, !dbg !3836

if.then196:                                       ; preds = %if.then190
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3837
  %user_transform_depth197 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 11, !dbg !3838
  %106 = load i8, i8* %user_transform_depth197, align 8, !dbg !3838
  %107 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3839
  %bit_depth198 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %107, i32 0, i32 7, !dbg !3840
  store i8 %106, i8* %bit_depth198, align 4, !dbg !3841
  br label %if.end199, !dbg !3839

if.end199:                                        ; preds = %if.then196, %if.then190
  %108 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3842
  %channels200 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %108, i32 0, i32 12, !dbg !3844
  %109 = load i8, i8* %channels200, align 1, !dbg !3844
  %conv201 = zext i8 %109 to i32, !dbg !3842
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3845
  %user_transform_channels = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 12, !dbg !3846
  %111 = load i8, i8* %user_transform_channels, align 1, !dbg !3846
  %conv202 = zext i8 %111 to i32, !dbg !3845
  %cmp203 = icmp slt i32 %conv201, %conv202, !dbg !3847
  br i1 %cmp203, label %if.then205, label %if.end208, !dbg !3848

if.then205:                                       ; preds = %if.end199
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3849
  %user_transform_channels206 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 12, !dbg !3850
  %113 = load i8, i8* %user_transform_channels206, align 1, !dbg !3850
  %114 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3851
  %channels207 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %114, i32 0, i32 12, !dbg !3852
  store i8 %113, i8* %channels207, align 1, !dbg !3853
  br label %if.end208, !dbg !3851

if.end208:                                        ; preds = %if.then205, %if.end199
  br label %if.end209, !dbg !3854

if.end209:                                        ; preds = %if.end208, %if.end186
  %115 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3855
  %channels210 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %115, i32 0, i32 12, !dbg !3856
  %116 = load i8, i8* %channels210, align 1, !dbg !3856
  %conv211 = zext i8 %116 to i32, !dbg !3855
  %117 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3857
  %bit_depth212 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %117, i32 0, i32 7, !dbg !3858
  %118 = load i8, i8* %bit_depth212, align 4, !dbg !3858
  %conv213 = zext i8 %118 to i32, !dbg !3857
  %mul = mul nsw i32 %conv211, %conv213, !dbg !3859
  %conv214 = trunc i32 %mul to i8, !dbg !3860
  %119 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3861
  %pixel_depth = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %119, i32 0, i32 13, !dbg !3862
  store i8 %conv214, i8* %pixel_depth, align 2, !dbg !3863
  %120 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3864
  %pixel_depth215 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %120, i32 0, i32 13, !dbg !3864
  %121 = load i8, i8* %pixel_depth215, align 2, !dbg !3864
  %conv216 = zext i8 %121 to i32, !dbg !3864
  %cmp217 = icmp sge i32 %conv216, 8, !dbg !3864
  br i1 %cmp217, label %cond.true, label %cond.false, !dbg !3864

cond.true:                                        ; preds = %if.end209
  %122 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3864
  %width = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %122, i32 0, i32 0, !dbg !3864
  %123 = load i32, i32* %width, align 8, !dbg !3864
  %conv219 = zext i32 %123 to i64, !dbg !3864
  %124 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3864
  %pixel_depth220 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %124, i32 0, i32 13, !dbg !3864
  %125 = load i8, i8* %pixel_depth220, align 2, !dbg !3864
  %conv221 = zext i8 %125 to i64, !dbg !3864
  %shr = lshr i64 %conv221, 3, !dbg !3864
  %mul222 = mul i64 %conv219, %shr, !dbg !3864
  br label %cond.end, !dbg !3864

cond.false:                                       ; preds = %if.end209
  %126 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3864
  %width223 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %126, i32 0, i32 0, !dbg !3864
  %127 = load i32, i32* %width223, align 8, !dbg !3864
  %conv224 = zext i32 %127 to i64, !dbg !3864
  %128 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3864
  %pixel_depth225 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %128, i32 0, i32 13, !dbg !3864
  %129 = load i8, i8* %pixel_depth225, align 2, !dbg !3864
  %conv226 = zext i8 %129 to i64, !dbg !3864
  %mul227 = mul i64 %conv224, %conv226, !dbg !3864
  %add = add i64 %mul227, 7, !dbg !3864
  %shr228 = lshr i64 %add, 3, !dbg !3864
  br label %cond.end, !dbg !3864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul222, %cond.true ], [ %shr228, %cond.false ], !dbg !3864
  %130 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3865
  %rowbytes = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %130, i32 0, i32 3, !dbg !3866
  store i64 %cond, i64* %rowbytes, align 8, !dbg !3867
  %131 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3868
  %rowbytes229 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %131, i32 0, i32 3, !dbg !3869
  %132 = load i64, i64* %rowbytes229, align 8, !dbg !3869
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3870
  %info_rowbytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %133, i32 0, i32 44, !dbg !3871
  store i64 %132, i64* %info_rowbytes, align 8, !dbg !3872
  ret void, !dbg !3873
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_transformations(%struct.png_struct_def* %png_ptr, %struct.png_row_info_struct* %row_info) #0 !dbg !3874 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %rgb_error = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3877, metadata !DIExpression()), !dbg !3878
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3881
  %row_buf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 39, !dbg !3883
  %1 = load i8*, i8** %row_buf, align 8, !dbg !3883
  %cmp = icmp eq i8* %1, null, !dbg !3884
  br i1 %cmp, label %if.then, label %if.end, !dbg !3885

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3886
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3888
  unreachable, !dbg !3888

if.end:                                           ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3889
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 14, !dbg !3891
  %4 = load i32, i32* %flags, align 8, !dbg !3891
  %and = and i32 %4, 16384, !dbg !3892
  %cmp1 = icmp ne i32 %and, 0, !dbg !3893
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !3894

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3895
  %flags2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 14, !dbg !3896
  %6 = load i32, i32* %flags2, align 8, !dbg !3896
  %and3 = and i32 %6, 64, !dbg !3897
  %tobool = icmp ne i32 %and3, 0, !dbg !3897
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !3898

if.then4:                                         ; preds = %land.lhs.true
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3899
  call void @png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3901
  unreachable, !dbg !3901

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3902
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 15, !dbg !3904
  %9 = load i32, i32* %transformations, align 4, !dbg !3904
  %and6 = and i32 %9, 4096, !dbg !3905
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3905
  br i1 %tobool7, label %if.then8, label %if.end29, !dbg !3906

if.then8:                                         ; preds = %if.end5
  %10 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3907
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %10, i32 0, i32 2, !dbg !3910
  %11 = load i8, i8* %color_type, align 8, !dbg !3910
  %conv = zext i8 %11 to i32, !dbg !3907
  %cmp9 = icmp eq i32 %conv, 3, !dbg !3911
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3912

if.then11:                                        ; preds = %if.then8
  %12 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3913
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3915
  %row_buf12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 39, !dbg !3916
  %14 = load i8*, i8** %row_buf12, align 8, !dbg !3916
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 1, !dbg !3917
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3918
  %palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 47, !dbg !3919
  %16 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !3919
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3920
  %trans_alpha = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 85, !dbg !3921
  %18 = load i8*, i8** %trans_alpha, align 8, !dbg !3921
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3922
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 50, !dbg !3923
  %20 = load i16, i16* %num_trans, align 8, !dbg !3923
  %conv13 = zext i16 %20 to i32, !dbg !3922
  call void @png_do_expand_palette(%struct.png_row_info_struct* %12, i8* %add.ptr, %struct.png_color_struct* %16, i8* %18, i32 %conv13), !dbg !3924
  br label %if.end28, !dbg !3925

if.else:                                          ; preds = %if.then8
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3926
  %num_trans14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 50, !dbg !3929
  %22 = load i16, i16* %num_trans14, align 8, !dbg !3929
  %conv15 = zext i16 %22 to i32, !dbg !3926
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !3926
  br i1 %tobool16, label %land.lhs.true17, label %if.else24, !dbg !3930

land.lhs.true17:                                  ; preds = %if.else
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3931
  %transformations18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 15, !dbg !3932
  %24 = load i32, i32* %transformations18, align 4, !dbg !3932
  %and19 = and i32 %24, 33554432, !dbg !3933
  %tobool20 = icmp ne i32 %and19, 0, !dbg !3933
  br i1 %tobool20, label %if.then21, label %if.else24, !dbg !3934

if.then21:                                        ; preds = %land.lhs.true17
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3935
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3936
  %row_buf22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 39, !dbg !3937
  %27 = load i8*, i8** %row_buf22, align 8, !dbg !3937
  %add.ptr23 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !3938
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3939
  %trans_color = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 86, !dbg !3940
  call void @png_do_expand(%struct.png_row_info_struct* %25, i8* %add.ptr23, %struct.png_color_16_struct* %trans_color), !dbg !3941
  br label %if.end27, !dbg !3941

if.else24:                                        ; preds = %land.lhs.true17, %if.else
  %29 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3942
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3943
  %row_buf25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 39, !dbg !3944
  %31 = load i8*, i8** %row_buf25, align 8, !dbg !3944
  %add.ptr26 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !3945
  call void @png_do_expand(%struct.png_row_info_struct* %29, i8* %add.ptr26, %struct.png_color_16_struct* null), !dbg !3946
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then11
  br label %if.end29, !dbg !3947

if.end29:                                         ; preds = %if.end28, %if.end5
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3948
  %transformations30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 15, !dbg !3950
  %33 = load i32, i32* %transformations30, align 4, !dbg !3950
  %and31 = and i32 %33, 262144, !dbg !3951
  %tobool32 = icmp ne i32 %and31, 0, !dbg !3951
  br i1 %tobool32, label %land.lhs.true33, label %if.end49, !dbg !3952

land.lhs.true33:                                  ; preds = %if.end29
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3953
  %transformations34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 15, !dbg !3954
  %35 = load i32, i32* %transformations34, align 4, !dbg !3954
  %and35 = and i32 %35, 128, !dbg !3955
  %tobool36 = icmp ne i32 %and35, 0, !dbg !3955
  br i1 %tobool36, label %if.end49, label %land.lhs.true37, !dbg !3956

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %36 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3957
  %color_type38 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %36, i32 0, i32 2, !dbg !3958
  %37 = load i8, i8* %color_type38, align 8, !dbg !3958
  %conv39 = zext i8 %37 to i32, !dbg !3957
  %cmp40 = icmp eq i32 %conv39, 6, !dbg !3959
  br i1 %cmp40, label %if.then46, label %lor.lhs.false, !dbg !3960

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %38 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3961
  %color_type42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %38, i32 0, i32 2, !dbg !3962
  %39 = load i8, i8* %color_type42, align 8, !dbg !3962
  %conv43 = zext i8 %39 to i32, !dbg !3961
  %cmp44 = icmp eq i32 %conv43, 4, !dbg !3963
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !3964

if.then46:                                        ; preds = %lor.lhs.false, %land.lhs.true37
  %40 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3965
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3966
  %row_buf47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 39, !dbg !3967
  %42 = load i8*, i8** %row_buf47, align 8, !dbg !3967
  %add.ptr48 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !3968
  call void @png_do_strip_channel(%struct.png_row_info_struct* %40, i8* %add.ptr48, i32 0), !dbg !3969
  br label %if.end49, !dbg !3969

if.end49:                                         ; preds = %if.then46, %lor.lhs.false, %land.lhs.true33, %if.end29
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3970
  %transformations50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 15, !dbg !3972
  %44 = load i32, i32* %transformations50, align 4, !dbg !3972
  %and51 = and i32 %44, 6291456, !dbg !3973
  %tobool52 = icmp ne i32 %and51, 0, !dbg !3973
  br i1 %tobool52, label %if.then53, label %if.end71, !dbg !3974

if.then53:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %rgb_error, metadata !3975, metadata !DIExpression()), !dbg !3977
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3978
  %46 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !3979
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3980
  %row_buf54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 39, !dbg !3981
  %48 = load i8*, i8** %row_buf54, align 8, !dbg !3981
  %add.ptr55 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !3982
  %call = call i32 @png_do_rgb_to_gray(%struct.png_struct_def* %45, %struct.png_row_info_struct* %46, i8* %add.ptr55), !dbg !3983
  store i32 %call, i32* %rgb_error, align 4, !dbg !3977
  %49 = load i32, i32* %rgb_error, align 4, !dbg !3984
  %tobool56 = icmp ne i32 %49, 0, !dbg !3984
  br i1 %tobool56, label %if.then57, label %if.end70, !dbg !3986

if.then57:                                        ; preds = %if.then53
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3987
  %rgb_to_gray_status = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 121, !dbg !3989
  store i8 1, i8* %rgb_to_gray_status, align 1, !dbg !3990
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3991
  %transformations58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 15, !dbg !3993
  %52 = load i32, i32* %transformations58, align 4, !dbg !3993
  %and59 = and i32 %52, 6291456, !dbg !3994
  %cmp60 = icmp eq i32 %and59, 4194304, !dbg !3995
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !3996

if.then62:                                        ; preds = %if.then57
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3997
  call void @png_warning(%struct.png_struct_def* %53, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0)), !dbg !3998
  br label %if.end63, !dbg !3998

if.end63:                                         ; preds = %if.then62, %if.then57
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3999
  %transformations64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 15, !dbg !4001
  %55 = load i32, i32* %transformations64, align 4, !dbg !4001
  %and65 = and i32 %55, 6291456, !dbg !4002
  %cmp66 = icmp eq i32 %and65, 2097152, !dbg !4003
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !4004

if.then68:                                        ; preds = %if.end63
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4005
  call void @png_error(%struct.png_struct_def* %56, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4006
  unreachable, !dbg !4006

if.end69:                                         ; preds = %if.end63
  br label %if.end70, !dbg !4007

if.end70:                                         ; preds = %if.end69, %if.then53
  br label %if.end71, !dbg !4008

if.end71:                                         ; preds = %if.end70, %if.end49
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4009
  %transformations72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 15, !dbg !4011
  %58 = load i32, i32* %transformations72, align 4, !dbg !4011
  %and73 = and i32 %58, 16384, !dbg !4012
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4012
  br i1 %tobool74, label %land.lhs.true75, label %if.end81, !dbg !4013

land.lhs.true75:                                  ; preds = %if.end71
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4014
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 13, !dbg !4015
  %60 = load i32, i32* %mode, align 4, !dbg !4015
  %and76 = and i32 %60, 2048, !dbg !4016
  %tobool77 = icmp ne i32 %and76, 0, !dbg !4016
  br i1 %tobool77, label %if.end81, label %if.then78, !dbg !4017

if.then78:                                        ; preds = %land.lhs.true75
  %61 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4018
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4019
  %row_buf79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 39, !dbg !4020
  %63 = load i8*, i8** %row_buf79, align 8, !dbg !4020
  %add.ptr80 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !4021
  call void @png_do_gray_to_rgb(%struct.png_row_info_struct* %61, i8* %add.ptr80), !dbg !4022
  br label %if.end81, !dbg !4022

if.end81:                                         ; preds = %if.then78, %land.lhs.true75, %if.end71
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4023
  %transformations82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 15, !dbg !4025
  %65 = load i32, i32* %transformations82, align 4, !dbg !4025
  %and83 = and i32 %65, 128, !dbg !4026
  %tobool84 = icmp ne i32 %and83, 0, !dbg !4026
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !4027

if.then85:                                        ; preds = %if.end81
  %66 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4028
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4029
  %row_buf86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 39, !dbg !4030
  %68 = load i8*, i8** %row_buf86, align 8, !dbg !4030
  %add.ptr87 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !4031
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4032
  call void @png_do_compose(%struct.png_row_info_struct* %66, i8* %add.ptr87, %struct.png_struct_def* %69), !dbg !4033
  br label %if.end88, !dbg !4033

if.end88:                                         ; preds = %if.then85, %if.end81
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4034
  %transformations89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 15, !dbg !4036
  %71 = load i32, i32* %transformations89, align 4, !dbg !4036
  %and90 = and i32 %71, 8192, !dbg !4037
  %tobool91 = icmp ne i32 %and90, 0, !dbg !4037
  br i1 %tobool91, label %land.lhs.true92, label %if.end118, !dbg !4038

land.lhs.true92:                                  ; preds = %if.end88
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4039
  %transformations93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 15, !dbg !4040
  %73 = load i32, i32* %transformations93, align 4, !dbg !4040
  %and94 = and i32 %73, 6291456, !dbg !4041
  %tobool95 = icmp ne i32 %and94, 0, !dbg !4041
  br i1 %tobool95, label %if.end118, label %land.lhs.true96, !dbg !4042

land.lhs.true96:                                  ; preds = %land.lhs.true92
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4043
  %transformations97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 15, !dbg !4044
  %75 = load i32, i32* %transformations97, align 4, !dbg !4044
  %and98 = and i32 %75, 128, !dbg !4045
  %tobool99 = icmp ne i32 %and98, 0, !dbg !4045
  br i1 %tobool99, label %land.lhs.true100, label %land.lhs.true110, !dbg !4046

land.lhs.true100:                                 ; preds = %land.lhs.true96
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4047
  %num_trans101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 50, !dbg !4048
  %77 = load i16, i16* %num_trans101, align 8, !dbg !4048
  %conv102 = zext i16 %77 to i32, !dbg !4047
  %cmp103 = icmp ne i32 %conv102, 0, !dbg !4049
  br i1 %cmp103, label %if.end118, label %lor.lhs.false105, !dbg !4050

lor.lhs.false105:                                 ; preds = %land.lhs.true100
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4051
  %color_type106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 56, !dbg !4052
  %79 = load i8, i8* %color_type106, align 1, !dbg !4052
  %conv107 = zext i8 %79 to i32, !dbg !4051
  %and108 = and i32 %conv107, 4, !dbg !4053
  %tobool109 = icmp ne i32 %and108, 0, !dbg !4053
  br i1 %tobool109, label %if.end118, label %land.lhs.true110, !dbg !4054

land.lhs.true110:                                 ; preds = %lor.lhs.false105, %land.lhs.true96
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4055
  %color_type111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 56, !dbg !4056
  %81 = load i8, i8* %color_type111, align 1, !dbg !4056
  %conv112 = zext i8 %81 to i32, !dbg !4055
  %cmp113 = icmp ne i32 %conv112, 3, !dbg !4057
  br i1 %cmp113, label %if.then115, label %if.end118, !dbg !4058

if.then115:                                       ; preds = %land.lhs.true110
  %82 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4059
  %83 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4060
  %row_buf116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %83, i32 0, i32 39, !dbg !4061
  %84 = load i8*, i8** %row_buf116, align 8, !dbg !4061
  %add.ptr117 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !4062
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4063
  call void @png_do_gamma(%struct.png_row_info_struct* %82, i8* %add.ptr117, %struct.png_struct_def* %85), !dbg !4064
  br label %if.end118, !dbg !4064

if.end118:                                        ; preds = %if.then115, %land.lhs.true110, %lor.lhs.false105, %land.lhs.true100, %land.lhs.true92, %if.end88
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4065
  %transformations119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 15, !dbg !4067
  %87 = load i32, i32* %transformations119, align 4, !dbg !4067
  %and120 = and i32 %87, 262144, !dbg !4068
  %tobool121 = icmp ne i32 %and120, 0, !dbg !4068
  br i1 %tobool121, label %land.lhs.true122, label %if.end139, !dbg !4069

land.lhs.true122:                                 ; preds = %if.end118
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4070
  %transformations123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 15, !dbg !4071
  %89 = load i32, i32* %transformations123, align 4, !dbg !4071
  %and124 = and i32 %89, 128, !dbg !4072
  %tobool125 = icmp ne i32 %and124, 0, !dbg !4072
  br i1 %tobool125, label %land.lhs.true126, label %if.end139, !dbg !4073

land.lhs.true126:                                 ; preds = %land.lhs.true122
  %90 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4074
  %color_type127 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %90, i32 0, i32 2, !dbg !4075
  %91 = load i8, i8* %color_type127, align 8, !dbg !4075
  %conv128 = zext i8 %91 to i32, !dbg !4074
  %cmp129 = icmp eq i32 %conv128, 6, !dbg !4076
  br i1 %cmp129, label %if.then136, label %lor.lhs.false131, !dbg !4077

lor.lhs.false131:                                 ; preds = %land.lhs.true126
  %92 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4078
  %color_type132 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %92, i32 0, i32 2, !dbg !4079
  %93 = load i8, i8* %color_type132, align 8, !dbg !4079
  %conv133 = zext i8 %93 to i32, !dbg !4078
  %cmp134 = icmp eq i32 %conv133, 4, !dbg !4080
  br i1 %cmp134, label %if.then136, label %if.end139, !dbg !4081

if.then136:                                       ; preds = %lor.lhs.false131, %land.lhs.true126
  %94 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4082
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4083
  %row_buf137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 39, !dbg !4084
  %96 = load i8*, i8** %row_buf137, align 8, !dbg !4084
  %add.ptr138 = getelementptr inbounds i8, i8* %96, i64 1, !dbg !4085
  call void @png_do_strip_channel(%struct.png_row_info_struct* %94, i8* %add.ptr138, i32 0), !dbg !4086
  br label %if.end139, !dbg !4086

if.end139:                                        ; preds = %if.then136, %lor.lhs.false131, %land.lhs.true122, %if.end118
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4087
  %transformations140 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 15, !dbg !4089
  %98 = load i32, i32* %transformations140, align 4, !dbg !4089
  %and141 = and i32 %98, 8388608, !dbg !4090
  %tobool142 = icmp ne i32 %and141, 0, !dbg !4090
  br i1 %tobool142, label %land.lhs.true143, label %if.end151, !dbg !4091

land.lhs.true143:                                 ; preds = %if.end139
  %99 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4092
  %color_type144 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %99, i32 0, i32 2, !dbg !4093
  %100 = load i8, i8* %color_type144, align 8, !dbg !4093
  %conv145 = zext i8 %100 to i32, !dbg !4092
  %and146 = and i32 %conv145, 4, !dbg !4094
  %tobool147 = icmp ne i32 %and146, 0, !dbg !4094
  br i1 %tobool147, label %if.then148, label %if.end151, !dbg !4095

if.then148:                                       ; preds = %land.lhs.true143
  %101 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4096
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4097
  %row_buf149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 39, !dbg !4098
  %103 = load i8*, i8** %row_buf149, align 8, !dbg !4098
  %add.ptr150 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !4099
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4100
  call void @png_do_encode_alpha(%struct.png_row_info_struct* %101, i8* %add.ptr150, %struct.png_struct_def* %104), !dbg !4101
  br label %if.end151, !dbg !4101

if.end151:                                        ; preds = %if.then148, %land.lhs.true143, %if.end139
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4102
  %transformations152 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 15, !dbg !4104
  %106 = load i32, i32* %transformations152, align 4, !dbg !4104
  %and153 = and i32 %106, 67108864, !dbg !4105
  %tobool154 = icmp ne i32 %and153, 0, !dbg !4105
  br i1 %tobool154, label %if.then155, label %if.end158, !dbg !4106

if.then155:                                       ; preds = %if.end151
  %107 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4107
  %108 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4108
  %row_buf156 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %108, i32 0, i32 39, !dbg !4109
  %109 = load i8*, i8** %row_buf156, align 8, !dbg !4109
  %add.ptr157 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !4110
  call void @png_do_scale_16_to_8(%struct.png_row_info_struct* %107, i8* %add.ptr157), !dbg !4111
  br label %if.end158, !dbg !4111

if.end158:                                        ; preds = %if.then155, %if.end151
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4112
  %transformations159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 15, !dbg !4114
  %111 = load i32, i32* %transformations159, align 4, !dbg !4114
  %and160 = and i32 %111, 1024, !dbg !4115
  %tobool161 = icmp ne i32 %and160, 0, !dbg !4115
  br i1 %tobool161, label %if.then162, label %if.end165, !dbg !4116

if.then162:                                       ; preds = %if.end158
  %112 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4117
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4118
  %row_buf163 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 39, !dbg !4119
  %114 = load i8*, i8** %row_buf163, align 8, !dbg !4119
  %add.ptr164 = getelementptr inbounds i8, i8* %114, i64 1, !dbg !4120
  call void @png_do_chop(%struct.png_row_info_struct* %112, i8* %add.ptr164), !dbg !4121
  br label %if.end165, !dbg !4121

if.end165:                                        ; preds = %if.then162, %if.end158
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4122
  %transformations166 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 15, !dbg !4124
  %116 = load i32, i32* %transformations166, align 4, !dbg !4124
  %and167 = and i32 %116, 64, !dbg !4125
  %tobool168 = icmp ne i32 %and167, 0, !dbg !4125
  br i1 %tobool168, label %if.then169, label %if.end176, !dbg !4126

if.then169:                                       ; preds = %if.end165
  %117 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4127
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4129
  %row_buf170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 39, !dbg !4130
  %119 = load i8*, i8** %row_buf170, align 8, !dbg !4130
  %add.ptr171 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !4131
  %120 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4132
  %palette_lookup = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %120, i32 0, i32 104, !dbg !4133
  %121 = load i8*, i8** %palette_lookup, align 8, !dbg !4133
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4134
  %quantize_index = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %122, i32 0, i32 105, !dbg !4135
  %123 = load i8*, i8** %quantize_index, align 8, !dbg !4135
  call void @png_do_quantize(%struct.png_row_info_struct* %117, i8* %add.ptr171, i8* %121, i8* %123), !dbg !4136
  %124 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4137
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %124, i32 0, i32 1, !dbg !4139
  %125 = load i64, i64* %rowbytes, align 8, !dbg !4139
  %cmp172 = icmp eq i64 %125, 0, !dbg !4140
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !4141

if.then174:                                       ; preds = %if.then169
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4142
  call void @png_error(%struct.png_struct_def* %126, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4143
  unreachable, !dbg !4143

if.end175:                                        ; preds = %if.then169
  br label %if.end176, !dbg !4144

if.end176:                                        ; preds = %if.end175, %if.end165
  %127 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4145
  %transformations177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %127, i32 0, i32 15, !dbg !4147
  %128 = load i32, i32* %transformations177, align 4, !dbg !4147
  %and178 = and i32 %128, 512, !dbg !4148
  %tobool179 = icmp ne i32 %and178, 0, !dbg !4148
  br i1 %tobool179, label %if.then180, label %if.end183, !dbg !4149

if.then180:                                       ; preds = %if.end176
  %129 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4150
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4151
  %row_buf181 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %130, i32 0, i32 39, !dbg !4152
  %131 = load i8*, i8** %row_buf181, align 8, !dbg !4152
  %add.ptr182 = getelementptr inbounds i8, i8* %131, i64 1, !dbg !4153
  call void @png_do_expand_16(%struct.png_row_info_struct* %129, i8* %add.ptr182), !dbg !4154
  br label %if.end183, !dbg !4154

if.end183:                                        ; preds = %if.then180, %if.end176
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4155
  %transformations184 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 15, !dbg !4157
  %133 = load i32, i32* %transformations184, align 4, !dbg !4157
  %and185 = and i32 %133, 16384, !dbg !4158
  %tobool186 = icmp ne i32 %and185, 0, !dbg !4158
  br i1 %tobool186, label %land.lhs.true187, label %if.end194, !dbg !4159

land.lhs.true187:                                 ; preds = %if.end183
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4160
  %mode188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 13, !dbg !4161
  %135 = load i32, i32* %mode188, align 4, !dbg !4161
  %and189 = and i32 %135, 2048, !dbg !4162
  %tobool190 = icmp ne i32 %and189, 0, !dbg !4162
  br i1 %tobool190, label %if.then191, label %if.end194, !dbg !4163

if.then191:                                       ; preds = %land.lhs.true187
  %136 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4164
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4165
  %row_buf192 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 39, !dbg !4166
  %138 = load i8*, i8** %row_buf192, align 8, !dbg !4166
  %add.ptr193 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !4167
  call void @png_do_gray_to_rgb(%struct.png_row_info_struct* %136, i8* %add.ptr193), !dbg !4168
  br label %if.end194, !dbg !4168

if.end194:                                        ; preds = %if.then191, %land.lhs.true187, %if.end183
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4169
  %transformations195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 15, !dbg !4171
  %140 = load i32, i32* %transformations195, align 4, !dbg !4171
  %and196 = and i32 %140, 32, !dbg !4172
  %tobool197 = icmp ne i32 %and196, 0, !dbg !4172
  br i1 %tobool197, label %if.then198, label %if.end201, !dbg !4173

if.then198:                                       ; preds = %if.end194
  %141 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4174
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4175
  %row_buf199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %142, i32 0, i32 39, !dbg !4176
  %143 = load i8*, i8** %row_buf199, align 8, !dbg !4176
  %add.ptr200 = getelementptr inbounds i8, i8* %143, i64 1, !dbg !4177
  call void @png_do_invert(%struct.png_row_info_struct* %141, i8* %add.ptr200), !dbg !4178
  br label %if.end201, !dbg !4178

if.end201:                                        ; preds = %if.then198, %if.end194
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4179
  %transformations202 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %144, i32 0, i32 15, !dbg !4181
  %145 = load i32, i32* %transformations202, align 4, !dbg !4181
  %and203 = and i32 %145, 8, !dbg !4182
  %tobool204 = icmp ne i32 %and203, 0, !dbg !4182
  br i1 %tobool204, label %if.then205, label %if.end208, !dbg !4183

if.then205:                                       ; preds = %if.end201
  %146 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4184
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4185
  %row_buf206 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 39, !dbg !4186
  %148 = load i8*, i8** %row_buf206, align 8, !dbg !4186
  %add.ptr207 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !4187
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4188
  %shift = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %149, i32 0, i32 84, !dbg !4189
  call void @png_do_unshift(%struct.png_row_info_struct* %146, i8* %add.ptr207, %struct.png_color_8_struct* %shift), !dbg !4190
  br label %if.end208, !dbg !4190

if.end208:                                        ; preds = %if.then205, %if.end201
  %150 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4191
  %transformations209 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %150, i32 0, i32 15, !dbg !4193
  %151 = load i32, i32* %transformations209, align 4, !dbg !4193
  %and210 = and i32 %151, 4, !dbg !4194
  %tobool211 = icmp ne i32 %and210, 0, !dbg !4194
  br i1 %tobool211, label %if.then212, label %if.end215, !dbg !4195

if.then212:                                       ; preds = %if.end208
  %152 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4196
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4197
  %row_buf213 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %153, i32 0, i32 39, !dbg !4198
  %154 = load i8*, i8** %row_buf213, align 8, !dbg !4198
  %add.ptr214 = getelementptr inbounds i8, i8* %154, i64 1, !dbg !4199
  call void @png_do_unpack(%struct.png_row_info_struct* %152, i8* %add.ptr214), !dbg !4200
  br label %if.end215, !dbg !4200

if.end215:                                        ; preds = %if.then212, %if.end208
  %155 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4201
  %color_type216 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %155, i32 0, i32 2, !dbg !4203
  %156 = load i8, i8* %color_type216, align 8, !dbg !4203
  %conv217 = zext i8 %156 to i32, !dbg !4201
  %cmp218 = icmp eq i32 %conv217, 3, !dbg !4204
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !4205

if.then220:                                       ; preds = %if.end215
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4206
  %158 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4207
  call void @png_do_check_palette_indexes(%struct.png_struct_def* %157, %struct.png_row_info_struct* %158), !dbg !4208
  br label %if.end221, !dbg !4208

if.end221:                                        ; preds = %if.then220, %if.end215
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4209
  %transformations222 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %159, i32 0, i32 15, !dbg !4211
  %160 = load i32, i32* %transformations222, align 4, !dbg !4211
  %and223 = and i32 %160, 1, !dbg !4212
  %tobool224 = icmp ne i32 %and223, 0, !dbg !4212
  br i1 %tobool224, label %if.then225, label %if.end228, !dbg !4213

if.then225:                                       ; preds = %if.end221
  %161 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4214
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4215
  %row_buf226 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %162, i32 0, i32 39, !dbg !4216
  %163 = load i8*, i8** %row_buf226, align 8, !dbg !4216
  %add.ptr227 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !4217
  call void @png_do_bgr(%struct.png_row_info_struct* %161, i8* %add.ptr227), !dbg !4218
  br label %if.end228, !dbg !4218

if.end228:                                        ; preds = %if.then225, %if.end221
  %164 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4219
  %transformations229 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %164, i32 0, i32 15, !dbg !4221
  %165 = load i32, i32* %transformations229, align 4, !dbg !4221
  %and230 = and i32 %165, 65536, !dbg !4222
  %tobool231 = icmp ne i32 %and230, 0, !dbg !4222
  br i1 %tobool231, label %if.then232, label %if.end235, !dbg !4223

if.then232:                                       ; preds = %if.end228
  %166 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4224
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4225
  %row_buf233 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 39, !dbg !4226
  %168 = load i8*, i8** %row_buf233, align 8, !dbg !4226
  %add.ptr234 = getelementptr inbounds i8, i8* %168, i64 1, !dbg !4227
  call void @png_do_packswap(%struct.png_row_info_struct* %166, i8* %add.ptr234), !dbg !4228
  br label %if.end235, !dbg !4228

if.end235:                                        ; preds = %if.then232, %if.end228
  %169 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4229
  %transformations236 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %169, i32 0, i32 15, !dbg !4231
  %170 = load i32, i32* %transformations236, align 4, !dbg !4231
  %and237 = and i32 %170, 32768, !dbg !4232
  %tobool238 = icmp ne i32 %and237, 0, !dbg !4232
  br i1 %tobool238, label %if.then239, label %if.end244, !dbg !4233

if.then239:                                       ; preds = %if.end235
  %171 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4234
  %172 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4235
  %row_buf240 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %172, i32 0, i32 39, !dbg !4236
  %173 = load i8*, i8** %row_buf240, align 8, !dbg !4236
  %add.ptr241 = getelementptr inbounds i8, i8* %173, i64 1, !dbg !4237
  %174 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4238
  %filler = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %174, i32 0, i32 66, !dbg !4239
  %175 = load i16, i16* %filler, align 2, !dbg !4239
  %conv242 = zext i16 %175 to i32, !dbg !4240
  %176 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4241
  %flags243 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %176, i32 0, i32 14, !dbg !4242
  %177 = load i32, i32* %flags243, align 8, !dbg !4242
  call void @png_do_read_filler(%struct.png_row_info_struct* %171, i8* %add.ptr241, i32 %conv242, i32 %177), !dbg !4243
  br label %if.end244, !dbg !4243

if.end244:                                        ; preds = %if.then239, %if.end235
  %178 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4244
  %transformations245 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %178, i32 0, i32 15, !dbg !4246
  %179 = load i32, i32* %transformations245, align 4, !dbg !4246
  %and246 = and i32 %179, 524288, !dbg !4247
  %tobool247 = icmp ne i32 %and246, 0, !dbg !4247
  br i1 %tobool247, label %if.then248, label %if.end251, !dbg !4248

if.then248:                                       ; preds = %if.end244
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4249
  %181 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4250
  %row_buf249 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %181, i32 0, i32 39, !dbg !4251
  %182 = load i8*, i8** %row_buf249, align 8, !dbg !4251
  %add.ptr250 = getelementptr inbounds i8, i8* %182, i64 1, !dbg !4252
  call void @png_do_read_invert_alpha(%struct.png_row_info_struct* %180, i8* %add.ptr250), !dbg !4253
  br label %if.end251, !dbg !4253

if.end251:                                        ; preds = %if.then248, %if.end244
  %183 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4254
  %transformations252 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %183, i32 0, i32 15, !dbg !4256
  %184 = load i32, i32* %transformations252, align 4, !dbg !4256
  %and253 = and i32 %184, 131072, !dbg !4257
  %tobool254 = icmp ne i32 %and253, 0, !dbg !4257
  br i1 %tobool254, label %if.then255, label %if.end258, !dbg !4258

if.then255:                                       ; preds = %if.end251
  %185 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4259
  %186 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4260
  %row_buf256 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %186, i32 0, i32 39, !dbg !4261
  %187 = load i8*, i8** %row_buf256, align 8, !dbg !4261
  %add.ptr257 = getelementptr inbounds i8, i8* %187, i64 1, !dbg !4262
  call void @png_do_read_swap_alpha(%struct.png_row_info_struct* %185, i8* %add.ptr257), !dbg !4263
  br label %if.end258, !dbg !4263

if.end258:                                        ; preds = %if.then255, %if.end251
  %188 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4264
  %transformations259 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %188, i32 0, i32 15, !dbg !4266
  %189 = load i32, i32* %transformations259, align 4, !dbg !4266
  %and260 = and i32 %189, 16, !dbg !4267
  %tobool261 = icmp ne i32 %and260, 0, !dbg !4267
  br i1 %tobool261, label %if.then262, label %if.end265, !dbg !4268

if.then262:                                       ; preds = %if.end258
  %190 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4269
  %191 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4270
  %row_buf263 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %191, i32 0, i32 39, !dbg !4271
  %192 = load i8*, i8** %row_buf263, align 8, !dbg !4271
  %add.ptr264 = getelementptr inbounds i8, i8* %192, i64 1, !dbg !4272
  call void @png_do_swap(%struct.png_row_info_struct* %190, i8* %add.ptr264), !dbg !4273
  br label %if.end265, !dbg !4273

if.end265:                                        ; preds = %if.then262, %if.end258
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4274
  %transformations266 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 15, !dbg !4276
  %194 = load i32, i32* %transformations266, align 4, !dbg !4276
  %and267 = and i32 %194, 1048576, !dbg !4277
  %tobool268 = icmp ne i32 %and267, 0, !dbg !4277
  br i1 %tobool268, label %if.then269, label %if.end305, !dbg !4278

if.then269:                                       ; preds = %if.end265
  %195 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4279
  %read_user_transform_fn = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %195, i32 0, i32 8, !dbg !4282
  %196 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn, align 8, !dbg !4282
  %cmp270 = icmp ne void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %196, null, !dbg !4283
  br i1 %cmp270, label %if.then272, label %if.end276, !dbg !4284

if.then272:                                       ; preds = %if.then269
  %197 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4285
  %read_user_transform_fn273 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %197, i32 0, i32 8, !dbg !4286
  %198 = load void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %read_user_transform_fn273, align 8, !dbg !4286
  %199 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4287
  %200 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4288
  %201 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4289
  %row_buf274 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %201, i32 0, i32 39, !dbg !4290
  %202 = load i8*, i8** %row_buf274, align 8, !dbg !4290
  %add.ptr275 = getelementptr inbounds i8, i8* %202, i64 1, !dbg !4291
  call void %198(%struct.png_struct_def* %199, %struct.png_row_info_struct* %200, i8* %add.ptr275), !dbg !4292
  br label %if.end276, !dbg !4292

if.end276:                                        ; preds = %if.then272, %if.then269
  %203 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4293
  %user_transform_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %203, i32 0, i32 11, !dbg !4295
  %204 = load i8, i8* %user_transform_depth, align 8, !dbg !4295
  %tobool277 = icmp ne i8 %204, 0, !dbg !4293
  br i1 %tobool277, label %if.then278, label %if.end280, !dbg !4296

if.then278:                                       ; preds = %if.end276
  %205 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4297
  %user_transform_depth279 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %205, i32 0, i32 11, !dbg !4298
  %206 = load i8, i8* %user_transform_depth279, align 8, !dbg !4298
  %207 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4299
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %207, i32 0, i32 3, !dbg !4300
  store i8 %206, i8* %bit_depth, align 1, !dbg !4301
  br label %if.end280, !dbg !4299

if.end280:                                        ; preds = %if.then278, %if.end276
  %208 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4302
  %user_transform_channels = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %208, i32 0, i32 12, !dbg !4304
  %209 = load i8, i8* %user_transform_channels, align 1, !dbg !4304
  %tobool281 = icmp ne i8 %209, 0, !dbg !4302
  br i1 %tobool281, label %if.then282, label %if.end284, !dbg !4305

if.then282:                                       ; preds = %if.end280
  %210 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4306
  %user_transform_channels283 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %210, i32 0, i32 12, !dbg !4307
  %211 = load i8, i8* %user_transform_channels283, align 1, !dbg !4307
  %212 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4308
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %212, i32 0, i32 4, !dbg !4309
  store i8 %211, i8* %channels, align 2, !dbg !4310
  br label %if.end284, !dbg !4308

if.end284:                                        ; preds = %if.then282, %if.end280
  %213 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4311
  %bit_depth285 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %213, i32 0, i32 3, !dbg !4312
  %214 = load i8, i8* %bit_depth285, align 1, !dbg !4312
  %conv286 = zext i8 %214 to i32, !dbg !4311
  %215 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4313
  %channels287 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %215, i32 0, i32 4, !dbg !4314
  %216 = load i8, i8* %channels287, align 2, !dbg !4314
  %conv288 = zext i8 %216 to i32, !dbg !4313
  %mul = mul nsw i32 %conv286, %conv288, !dbg !4315
  %conv289 = trunc i32 %mul to i8, !dbg !4316
  %217 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4317
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %217, i32 0, i32 5, !dbg !4318
  store i8 %conv289, i8* %pixel_depth, align 1, !dbg !4319
  %218 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4320
  %pixel_depth290 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %218, i32 0, i32 5, !dbg !4320
  %219 = load i8, i8* %pixel_depth290, align 1, !dbg !4320
  %conv291 = zext i8 %219 to i32, !dbg !4320
  %cmp292 = icmp sge i32 %conv291, 8, !dbg !4320
  br i1 %cmp292, label %cond.true, label %cond.false, !dbg !4320

cond.true:                                        ; preds = %if.end284
  %220 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4320
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %220, i32 0, i32 0, !dbg !4320
  %221 = load i32, i32* %width, align 8, !dbg !4320
  %conv294 = zext i32 %221 to i64, !dbg !4320
  %222 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4320
  %pixel_depth295 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %222, i32 0, i32 5, !dbg !4320
  %223 = load i8, i8* %pixel_depth295, align 1, !dbg !4320
  %conv296 = zext i8 %223 to i64, !dbg !4320
  %shr = lshr i64 %conv296, 3, !dbg !4320
  %mul297 = mul i64 %conv294, %shr, !dbg !4320
  br label %cond.end, !dbg !4320

cond.false:                                       ; preds = %if.end284
  %224 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4320
  %width298 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %224, i32 0, i32 0, !dbg !4320
  %225 = load i32, i32* %width298, align 8, !dbg !4320
  %conv299 = zext i32 %225 to i64, !dbg !4320
  %226 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4320
  %pixel_depth300 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %226, i32 0, i32 5, !dbg !4320
  %227 = load i8, i8* %pixel_depth300, align 1, !dbg !4320
  %conv301 = zext i8 %227 to i64, !dbg !4320
  %mul302 = mul i64 %conv299, %conv301, !dbg !4320
  %add = add i64 %mul302, 7, !dbg !4320
  %shr303 = lshr i64 %add, 3, !dbg !4320
  br label %cond.end, !dbg !4320

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul297, %cond.true ], [ %shr303, %cond.false ], !dbg !4320
  %228 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4321
  %rowbytes304 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %228, i32 0, i32 1, !dbg !4322
  store i64 %cond, i64* %rowbytes304, align 8, !dbg !4323
  br label %if.end305, !dbg !4324

if.end305:                                        ; preds = %cond.end, %if.end265
  ret void, !dbg !4325
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_expand_palette(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_color_struct* %palette, i8* %trans_alpha, i32 %num_trans) #0 !dbg !4326 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %palette.addr = alloca %struct.png_color_struct*, align 8
  %trans_alpha.addr = alloca i8*, align 8
  %num_trans.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %value = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !4332, metadata !DIExpression()), !dbg !4333
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !4334, metadata !DIExpression()), !dbg !4335
  store %struct.png_color_struct* %palette, %struct.png_color_struct** %palette.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette.addr, metadata !4336, metadata !DIExpression()), !dbg !4337
  store i8* %trans_alpha, i8** %trans_alpha.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %trans_alpha.addr, metadata !4338, metadata !DIExpression()), !dbg !4339
  store i32 %num_trans, i32* %num_trans.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_trans.addr, metadata !4340, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !4342, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4344, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !4346, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !4348, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4350, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !4352, metadata !DIExpression()), !dbg !4353
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4354
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !4355
  %1 = load i32, i32* %width, align 8, !dbg !4355
  store i32 %1, i32* %row_width, align 4, !dbg !4353
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4356
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !4358
  %3 = load i8, i8* %color_type, align 8, !dbg !4358
  %conv = zext i8 %3 to i32, !dbg !4356
  %cmp = icmp eq i32 %conv, 3, !dbg !4359
  br i1 %cmp, label %if.then, label %if.end170, !dbg !4360

if.then:                                          ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4361
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !4364
  %5 = load i8, i8* %bit_depth, align 1, !dbg !4364
  %conv2 = zext i8 %5 to i32, !dbg !4361
  %cmp3 = icmp slt i32 %conv2, 8, !dbg !4365
  br i1 %cmp3, label %if.then5, label %if.end87, !dbg !4366

if.then5:                                         ; preds = %if.then
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4367
  %bit_depth6 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 3, !dbg !4369
  %7 = load i8, i8* %bit_depth6, align 1, !dbg !4369
  %conv7 = zext i8 %7 to i32, !dbg !4367
  switch i32 %conv7, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb26
    i32 4, label %sw.bb56
  ], !dbg !4370

sw.bb:                                            ; preds = %if.then5
  %8 = load i8*, i8** %row.addr, align 8, !dbg !4371
  %9 = load i32, i32* %row_width, align 4, !dbg !4374
  %sub = sub i32 %9, 1, !dbg !4375
  %shr = lshr i32 %sub, 3, !dbg !4376
  %conv8 = zext i32 %shr to i64, !dbg !4377
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %conv8, !dbg !4378
  store i8* %add.ptr, i8** %sp, align 8, !dbg !4379
  %10 = load i8*, i8** %row.addr, align 8, !dbg !4380
  %11 = load i32, i32* %row_width, align 4, !dbg !4381
  %conv9 = zext i32 %11 to i64, !dbg !4382
  %add.ptr10 = getelementptr inbounds i8, i8* %10, i64 %conv9, !dbg !4383
  %add.ptr11 = getelementptr inbounds i8, i8* %add.ptr10, i64 -1, !dbg !4384
  store i8* %add.ptr11, i8** %dp, align 8, !dbg !4385
  %12 = load i32, i32* %row_width, align 4, !dbg !4386
  %add = add i32 %12, 7, !dbg !4387
  %and = and i32 %add, 7, !dbg !4388
  %sub12 = sub nsw i32 7, %and, !dbg !4389
  store i32 %sub12, i32* %shift, align 4, !dbg !4390
  store i32 0, i32* %i, align 4, !dbg !4391
  br label %for.cond, !dbg !4393

for.cond:                                         ; preds = %for.inc, %sw.bb
  %13 = load i32, i32* %i, align 4, !dbg !4394
  %14 = load i32, i32* %row_width, align 4, !dbg !4396
  %cmp13 = icmp ult i32 %13, %14, !dbg !4397
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4398

for.body:                                         ; preds = %for.cond
  %15 = load i8*, i8** %sp, align 8, !dbg !4399
  %16 = load i8, i8* %15, align 1, !dbg !4402
  %conv15 = zext i8 %16 to i32, !dbg !4402
  %17 = load i32, i32* %shift, align 4, !dbg !4403
  %shr16 = ashr i32 %conv15, %17, !dbg !4404
  %and17 = and i32 %shr16, 1, !dbg !4405
  %tobool = icmp ne i32 %and17, 0, !dbg !4405
  br i1 %tobool, label %if.then18, label %if.else, !dbg !4406

if.then18:                                        ; preds = %for.body
  %18 = load i8*, i8** %dp, align 8, !dbg !4407
  store i8 1, i8* %18, align 1, !dbg !4408
  br label %if.end, !dbg !4409

if.else:                                          ; preds = %for.body
  %19 = load i8*, i8** %dp, align 8, !dbg !4410
  store i8 0, i8* %19, align 1, !dbg !4411
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  %20 = load i32, i32* %shift, align 4, !dbg !4412
  %cmp19 = icmp eq i32 %20, 7, !dbg !4414
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !4415

if.then21:                                        ; preds = %if.end
  store i32 0, i32* %shift, align 4, !dbg !4416
  %21 = load i8*, i8** %sp, align 8, !dbg !4418
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i32 -1, !dbg !4418
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !4418
  br label %if.end23, !dbg !4419

if.else22:                                        ; preds = %if.end
  %22 = load i32, i32* %shift, align 4, !dbg !4420
  %inc = add nsw i32 %22, 1, !dbg !4420
  store i32 %inc, i32* %shift, align 4, !dbg !4420
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  %23 = load i8*, i8** %dp, align 8, !dbg !4421
  %incdec.ptr24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !4421
  store i8* %incdec.ptr24, i8** %dp, align 8, !dbg !4421
  br label %for.inc, !dbg !4422

for.inc:                                          ; preds = %if.end23
  %24 = load i32, i32* %i, align 4, !dbg !4423
  %inc25 = add i32 %24, 1, !dbg !4423
  store i32 %inc25, i32* %i, align 4, !dbg !4423
  br label %for.cond, !dbg !4424, !llvm.loop !4425

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4427

sw.bb26:                                          ; preds = %if.then5
  %25 = load i8*, i8** %row.addr, align 8, !dbg !4428
  %26 = load i32, i32* %row_width, align 4, !dbg !4430
  %sub27 = sub i32 %26, 1, !dbg !4431
  %shr28 = lshr i32 %sub27, 2, !dbg !4432
  %conv29 = zext i32 %shr28 to i64, !dbg !4433
  %add.ptr30 = getelementptr inbounds i8, i8* %25, i64 %conv29, !dbg !4434
  store i8* %add.ptr30, i8** %sp, align 8, !dbg !4435
  %27 = load i8*, i8** %row.addr, align 8, !dbg !4436
  %28 = load i32, i32* %row_width, align 4, !dbg !4437
  %conv31 = zext i32 %28 to i64, !dbg !4438
  %add.ptr32 = getelementptr inbounds i8, i8* %27, i64 %conv31, !dbg !4439
  %add.ptr33 = getelementptr inbounds i8, i8* %add.ptr32, i64 -1, !dbg !4440
  store i8* %add.ptr33, i8** %dp, align 8, !dbg !4441
  %29 = load i32, i32* %row_width, align 4, !dbg !4442
  %add34 = add i32 %29, 3, !dbg !4443
  %and35 = and i32 %add34, 3, !dbg !4444
  %sub36 = sub i32 3, %and35, !dbg !4445
  %shl = shl i32 %sub36, 1, !dbg !4446
  store i32 %shl, i32* %shift, align 4, !dbg !4447
  store i32 0, i32* %i, align 4, !dbg !4448
  br label %for.cond37, !dbg !4450

for.cond37:                                       ; preds = %for.inc53, %sw.bb26
  %30 = load i32, i32* %i, align 4, !dbg !4451
  %31 = load i32, i32* %row_width, align 4, !dbg !4453
  %cmp38 = icmp ult i32 %30, %31, !dbg !4454
  br i1 %cmp38, label %for.body40, label %for.end55, !dbg !4455

for.body40:                                       ; preds = %for.cond37
  %32 = load i8*, i8** %sp, align 8, !dbg !4456
  %33 = load i8, i8* %32, align 1, !dbg !4458
  %conv41 = zext i8 %33 to i32, !dbg !4458
  %34 = load i32, i32* %shift, align 4, !dbg !4459
  %shr42 = ashr i32 %conv41, %34, !dbg !4460
  %and43 = and i32 %shr42, 3, !dbg !4461
  store i32 %and43, i32* %value, align 4, !dbg !4462
  %35 = load i32, i32* %value, align 4, !dbg !4463
  %conv44 = trunc i32 %35 to i8, !dbg !4464
  %36 = load i8*, i8** %dp, align 8, !dbg !4465
  store i8 %conv44, i8* %36, align 1, !dbg !4466
  %37 = load i32, i32* %shift, align 4, !dbg !4467
  %cmp45 = icmp eq i32 %37, 6, !dbg !4469
  br i1 %cmp45, label %if.then47, label %if.else49, !dbg !4470

if.then47:                                        ; preds = %for.body40
  store i32 0, i32* %shift, align 4, !dbg !4471
  %38 = load i8*, i8** %sp, align 8, !dbg !4473
  %incdec.ptr48 = getelementptr inbounds i8, i8* %38, i32 -1, !dbg !4473
  store i8* %incdec.ptr48, i8** %sp, align 8, !dbg !4473
  br label %if.end51, !dbg !4474

if.else49:                                        ; preds = %for.body40
  %39 = load i32, i32* %shift, align 4, !dbg !4475
  %add50 = add nsw i32 %39, 2, !dbg !4475
  store i32 %add50, i32* %shift, align 4, !dbg !4475
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then47
  %40 = load i8*, i8** %dp, align 8, !dbg !4476
  %incdec.ptr52 = getelementptr inbounds i8, i8* %40, i32 -1, !dbg !4476
  store i8* %incdec.ptr52, i8** %dp, align 8, !dbg !4476
  br label %for.inc53, !dbg !4477

for.inc53:                                        ; preds = %if.end51
  %41 = load i32, i32* %i, align 4, !dbg !4478
  %inc54 = add i32 %41, 1, !dbg !4478
  store i32 %inc54, i32* %i, align 4, !dbg !4478
  br label %for.cond37, !dbg !4479, !llvm.loop !4480

for.end55:                                        ; preds = %for.cond37
  br label %sw.epilog, !dbg !4482

sw.bb56:                                          ; preds = %if.then5
  %42 = load i8*, i8** %row.addr, align 8, !dbg !4483
  %43 = load i32, i32* %row_width, align 4, !dbg !4485
  %sub57 = sub i32 %43, 1, !dbg !4486
  %shr58 = lshr i32 %sub57, 1, !dbg !4487
  %conv59 = zext i32 %shr58 to i64, !dbg !4488
  %add.ptr60 = getelementptr inbounds i8, i8* %42, i64 %conv59, !dbg !4489
  store i8* %add.ptr60, i8** %sp, align 8, !dbg !4490
  %44 = load i8*, i8** %row.addr, align 8, !dbg !4491
  %45 = load i32, i32* %row_width, align 4, !dbg !4492
  %conv61 = zext i32 %45 to i64, !dbg !4493
  %add.ptr62 = getelementptr inbounds i8, i8* %44, i64 %conv61, !dbg !4494
  %add.ptr63 = getelementptr inbounds i8, i8* %add.ptr62, i64 -1, !dbg !4495
  store i8* %add.ptr63, i8** %dp, align 8, !dbg !4496
  %46 = load i32, i32* %row_width, align 4, !dbg !4497
  %and64 = and i32 %46, 1, !dbg !4498
  %shl65 = shl i32 %and64, 2, !dbg !4499
  store i32 %shl65, i32* %shift, align 4, !dbg !4500
  store i32 0, i32* %i, align 4, !dbg !4501
  br label %for.cond66, !dbg !4503

for.cond66:                                       ; preds = %for.inc82, %sw.bb56
  %47 = load i32, i32* %i, align 4, !dbg !4504
  %48 = load i32, i32* %row_width, align 4, !dbg !4506
  %cmp67 = icmp ult i32 %47, %48, !dbg !4507
  br i1 %cmp67, label %for.body69, label %for.end84, !dbg !4508

for.body69:                                       ; preds = %for.cond66
  %49 = load i8*, i8** %sp, align 8, !dbg !4509
  %50 = load i8, i8* %49, align 1, !dbg !4511
  %conv70 = zext i8 %50 to i32, !dbg !4511
  %51 = load i32, i32* %shift, align 4, !dbg !4512
  %shr71 = ashr i32 %conv70, %51, !dbg !4513
  %and72 = and i32 %shr71, 15, !dbg !4514
  store i32 %and72, i32* %value, align 4, !dbg !4515
  %52 = load i32, i32* %value, align 4, !dbg !4516
  %conv73 = trunc i32 %52 to i8, !dbg !4517
  %53 = load i8*, i8** %dp, align 8, !dbg !4518
  store i8 %conv73, i8* %53, align 1, !dbg !4519
  %54 = load i32, i32* %shift, align 4, !dbg !4520
  %cmp74 = icmp eq i32 %54, 4, !dbg !4522
  br i1 %cmp74, label %if.then76, label %if.else78, !dbg !4523

if.then76:                                        ; preds = %for.body69
  store i32 0, i32* %shift, align 4, !dbg !4524
  %55 = load i8*, i8** %sp, align 8, !dbg !4526
  %incdec.ptr77 = getelementptr inbounds i8, i8* %55, i32 -1, !dbg !4526
  store i8* %incdec.ptr77, i8** %sp, align 8, !dbg !4526
  br label %if.end80, !dbg !4527

if.else78:                                        ; preds = %for.body69
  %56 = load i32, i32* %shift, align 4, !dbg !4528
  %add79 = add nsw i32 %56, 4, !dbg !4528
  store i32 %add79, i32* %shift, align 4, !dbg !4528
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.then76
  %57 = load i8*, i8** %dp, align 8, !dbg !4529
  %incdec.ptr81 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !4529
  store i8* %incdec.ptr81, i8** %dp, align 8, !dbg !4529
  br label %for.inc82, !dbg !4530

for.inc82:                                        ; preds = %if.end80
  %58 = load i32, i32* %i, align 4, !dbg !4531
  %inc83 = add i32 %58, 1, !dbg !4531
  store i32 %inc83, i32* %i, align 4, !dbg !4531
  br label %for.cond66, !dbg !4532, !llvm.loop !4533

for.end84:                                        ; preds = %for.cond66
  br label %sw.epilog, !dbg !4535

sw.default:                                       ; preds = %if.then5
  br label %sw.epilog, !dbg !4536

sw.epilog:                                        ; preds = %sw.default, %for.end84, %for.end55, %for.end
  %59 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4537
  %bit_depth85 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %59, i32 0, i32 3, !dbg !4538
  store i8 8, i8* %bit_depth85, align 1, !dbg !4539
  %60 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4540
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %60, i32 0, i32 5, !dbg !4541
  store i8 8, i8* %pixel_depth, align 1, !dbg !4542
  %61 = load i32, i32* %row_width, align 4, !dbg !4543
  %conv86 = zext i32 %61 to i64, !dbg !4543
  %62 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4544
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %62, i32 0, i32 1, !dbg !4545
  store i64 %conv86, i64* %rowbytes, align 8, !dbg !4546
  br label %if.end87, !dbg !4547

if.end87:                                         ; preds = %sw.epilog, %if.then
  %63 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4548
  %bit_depth88 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %63, i32 0, i32 3, !dbg !4550
  %64 = load i8, i8* %bit_depth88, align 1, !dbg !4550
  %conv89 = zext i8 %64 to i32, !dbg !4548
  %cmp90 = icmp eq i32 %conv89, 8, !dbg !4551
  br i1 %cmp90, label %if.then92, label %if.end169, !dbg !4552

if.then92:                                        ; preds = %if.end87
  %65 = load i32, i32* %num_trans.addr, align 4, !dbg !4553
  %cmp93 = icmp sgt i32 %65, 0, !dbg !4557
  br i1 %cmp93, label %if.then95, label %if.else133, !dbg !4558

if.then95:                                        ; preds = %if.then92
  %66 = load i8*, i8** %row.addr, align 8, !dbg !4559
  %67 = load i32, i32* %row_width, align 4, !dbg !4561
  %conv96 = zext i32 %67 to i64, !dbg !4562
  %add.ptr97 = getelementptr inbounds i8, i8* %66, i64 %conv96, !dbg !4563
  %add.ptr98 = getelementptr inbounds i8, i8* %add.ptr97, i64 -1, !dbg !4564
  store i8* %add.ptr98, i8** %sp, align 8, !dbg !4565
  %68 = load i8*, i8** %row.addr, align 8, !dbg !4566
  %69 = load i32, i32* %row_width, align 4, !dbg !4567
  %shl99 = shl i32 %69, 2, !dbg !4568
  %conv100 = zext i32 %shl99 to i64, !dbg !4569
  %add.ptr101 = getelementptr inbounds i8, i8* %68, i64 %conv100, !dbg !4570
  %add.ptr102 = getelementptr inbounds i8, i8* %add.ptr101, i64 -1, !dbg !4571
  store i8* %add.ptr102, i8** %dp, align 8, !dbg !4572
  store i32 0, i32* %i, align 4, !dbg !4573
  br label %for.cond103, !dbg !4575

for.cond103:                                      ; preds = %for.inc125, %if.then95
  %70 = load i32, i32* %i, align 4, !dbg !4576
  %71 = load i32, i32* %row_width, align 4, !dbg !4578
  %cmp104 = icmp ult i32 %70, %71, !dbg !4579
  br i1 %cmp104, label %for.body106, label %for.end127, !dbg !4580

for.body106:                                      ; preds = %for.cond103
  %72 = load i8*, i8** %sp, align 8, !dbg !4581
  %73 = load i8, i8* %72, align 1, !dbg !4584
  %conv107 = zext i8 %73 to i32, !dbg !4585
  %74 = load i32, i32* %num_trans.addr, align 4, !dbg !4586
  %cmp108 = icmp sge i32 %conv107, %74, !dbg !4587
  br i1 %cmp108, label %if.then110, label %if.else112, !dbg !4588

if.then110:                                       ; preds = %for.body106
  %75 = load i8*, i8** %dp, align 8, !dbg !4589
  %incdec.ptr111 = getelementptr inbounds i8, i8* %75, i32 -1, !dbg !4589
  store i8* %incdec.ptr111, i8** %dp, align 8, !dbg !4589
  store i8 -1, i8* %75, align 1, !dbg !4590
  br label %if.end114, !dbg !4591

if.else112:                                       ; preds = %for.body106
  %76 = load i8*, i8** %trans_alpha.addr, align 8, !dbg !4592
  %77 = load i8*, i8** %sp, align 8, !dbg !4593
  %78 = load i8, i8* %77, align 1, !dbg !4594
  %idxprom = zext i8 %78 to i64, !dbg !4592
  %arrayidx = getelementptr inbounds i8, i8* %76, i64 %idxprom, !dbg !4592
  %79 = load i8, i8* %arrayidx, align 1, !dbg !4592
  %80 = load i8*, i8** %dp, align 8, !dbg !4595
  %incdec.ptr113 = getelementptr inbounds i8, i8* %80, i32 -1, !dbg !4595
  store i8* %incdec.ptr113, i8** %dp, align 8, !dbg !4595
  store i8 %79, i8* %80, align 1, !dbg !4596
  br label %if.end114

if.end114:                                        ; preds = %if.else112, %if.then110
  %81 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4597
  %82 = load i8*, i8** %sp, align 8, !dbg !4598
  %83 = load i8, i8* %82, align 1, !dbg !4599
  %idxprom115 = zext i8 %83 to i64, !dbg !4597
  %arrayidx116 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %81, i64 %idxprom115, !dbg !4597
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx116, i32 0, i32 2, !dbg !4600
  %84 = load i8, i8* %blue, align 1, !dbg !4600
  %85 = load i8*, i8** %dp, align 8, !dbg !4601
  %incdec.ptr117 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !4601
  store i8* %incdec.ptr117, i8** %dp, align 8, !dbg !4601
  store i8 %84, i8* %85, align 1, !dbg !4602
  %86 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4603
  %87 = load i8*, i8** %sp, align 8, !dbg !4604
  %88 = load i8, i8* %87, align 1, !dbg !4605
  %idxprom118 = zext i8 %88 to i64, !dbg !4603
  %arrayidx119 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %86, i64 %idxprom118, !dbg !4603
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx119, i32 0, i32 1, !dbg !4606
  %89 = load i8, i8* %green, align 1, !dbg !4606
  %90 = load i8*, i8** %dp, align 8, !dbg !4607
  %incdec.ptr120 = getelementptr inbounds i8, i8* %90, i32 -1, !dbg !4607
  store i8* %incdec.ptr120, i8** %dp, align 8, !dbg !4607
  store i8 %89, i8* %90, align 1, !dbg !4608
  %91 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4609
  %92 = load i8*, i8** %sp, align 8, !dbg !4610
  %93 = load i8, i8* %92, align 1, !dbg !4611
  %idxprom121 = zext i8 %93 to i64, !dbg !4609
  %arrayidx122 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %91, i64 %idxprom121, !dbg !4609
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx122, i32 0, i32 0, !dbg !4612
  %94 = load i8, i8* %red, align 1, !dbg !4612
  %95 = load i8*, i8** %dp, align 8, !dbg !4613
  %incdec.ptr123 = getelementptr inbounds i8, i8* %95, i32 -1, !dbg !4613
  store i8* %incdec.ptr123, i8** %dp, align 8, !dbg !4613
  store i8 %94, i8* %95, align 1, !dbg !4614
  %96 = load i8*, i8** %sp, align 8, !dbg !4615
  %incdec.ptr124 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !4615
  store i8* %incdec.ptr124, i8** %sp, align 8, !dbg !4615
  br label %for.inc125, !dbg !4616

for.inc125:                                       ; preds = %if.end114
  %97 = load i32, i32* %i, align 4, !dbg !4617
  %inc126 = add i32 %97, 1, !dbg !4617
  store i32 %inc126, i32* %i, align 4, !dbg !4617
  br label %for.cond103, !dbg !4618, !llvm.loop !4619

for.end127:                                       ; preds = %for.cond103
  %98 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4621
  %bit_depth128 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %98, i32 0, i32 3, !dbg !4622
  store i8 8, i8* %bit_depth128, align 1, !dbg !4623
  %99 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4624
  %pixel_depth129 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %99, i32 0, i32 5, !dbg !4625
  store i8 32, i8* %pixel_depth129, align 1, !dbg !4626
  %100 = load i32, i32* %row_width, align 4, !dbg !4627
  %mul = mul i32 %100, 4, !dbg !4628
  %conv130 = zext i32 %mul to i64, !dbg !4627
  %101 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4629
  %rowbytes131 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %101, i32 0, i32 1, !dbg !4630
  store i64 %conv130, i64* %rowbytes131, align 8, !dbg !4631
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4632
  %color_type132 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 2, !dbg !4633
  store i8 6, i8* %color_type132, align 8, !dbg !4634
  %103 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4635
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %103, i32 0, i32 4, !dbg !4636
  store i8 4, i8* %channels, align 2, !dbg !4637
  br label %if.end168, !dbg !4638

if.else133:                                       ; preds = %if.then92
  %104 = load i8*, i8** %row.addr, align 8, !dbg !4639
  %105 = load i32, i32* %row_width, align 4, !dbg !4641
  %conv134 = zext i32 %105 to i64, !dbg !4642
  %add.ptr135 = getelementptr inbounds i8, i8* %104, i64 %conv134, !dbg !4643
  %add.ptr136 = getelementptr inbounds i8, i8* %add.ptr135, i64 -1, !dbg !4644
  store i8* %add.ptr136, i8** %sp, align 8, !dbg !4645
  %106 = load i8*, i8** %row.addr, align 8, !dbg !4646
  %107 = load i32, i32* %row_width, align 4, !dbg !4647
  %mul137 = mul i32 %107, 3, !dbg !4648
  %conv138 = zext i32 %mul137 to i64, !dbg !4649
  %add.ptr139 = getelementptr inbounds i8, i8* %106, i64 %conv138, !dbg !4650
  %add.ptr140 = getelementptr inbounds i8, i8* %add.ptr139, i64 -1, !dbg !4651
  store i8* %add.ptr140, i8** %dp, align 8, !dbg !4652
  store i32 0, i32* %i, align 4, !dbg !4653
  br label %for.cond141, !dbg !4655

for.cond141:                                      ; preds = %for.inc158, %if.else133
  %108 = load i32, i32* %i, align 4, !dbg !4656
  %109 = load i32, i32* %row_width, align 4, !dbg !4658
  %cmp142 = icmp ult i32 %108, %109, !dbg !4659
  br i1 %cmp142, label %for.body144, label %for.end160, !dbg !4660

for.body144:                                      ; preds = %for.cond141
  %110 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4661
  %111 = load i8*, i8** %sp, align 8, !dbg !4663
  %112 = load i8, i8* %111, align 1, !dbg !4664
  %idxprom145 = zext i8 %112 to i64, !dbg !4661
  %arrayidx146 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %110, i64 %idxprom145, !dbg !4661
  %blue147 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx146, i32 0, i32 2, !dbg !4665
  %113 = load i8, i8* %blue147, align 1, !dbg !4665
  %114 = load i8*, i8** %dp, align 8, !dbg !4666
  %incdec.ptr148 = getelementptr inbounds i8, i8* %114, i32 -1, !dbg !4666
  store i8* %incdec.ptr148, i8** %dp, align 8, !dbg !4666
  store i8 %113, i8* %114, align 1, !dbg !4667
  %115 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4668
  %116 = load i8*, i8** %sp, align 8, !dbg !4669
  %117 = load i8, i8* %116, align 1, !dbg !4670
  %idxprom149 = zext i8 %117 to i64, !dbg !4668
  %arrayidx150 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %115, i64 %idxprom149, !dbg !4668
  %green151 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx150, i32 0, i32 1, !dbg !4671
  %118 = load i8, i8* %green151, align 1, !dbg !4671
  %119 = load i8*, i8** %dp, align 8, !dbg !4672
  %incdec.ptr152 = getelementptr inbounds i8, i8* %119, i32 -1, !dbg !4672
  store i8* %incdec.ptr152, i8** %dp, align 8, !dbg !4672
  store i8 %118, i8* %119, align 1, !dbg !4673
  %120 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !4674
  %121 = load i8*, i8** %sp, align 8, !dbg !4675
  %122 = load i8, i8* %121, align 1, !dbg !4676
  %idxprom153 = zext i8 %122 to i64, !dbg !4674
  %arrayidx154 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %120, i64 %idxprom153, !dbg !4674
  %red155 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx154, i32 0, i32 0, !dbg !4677
  %123 = load i8, i8* %red155, align 1, !dbg !4677
  %124 = load i8*, i8** %dp, align 8, !dbg !4678
  %incdec.ptr156 = getelementptr inbounds i8, i8* %124, i32 -1, !dbg !4678
  store i8* %incdec.ptr156, i8** %dp, align 8, !dbg !4678
  store i8 %123, i8* %124, align 1, !dbg !4679
  %125 = load i8*, i8** %sp, align 8, !dbg !4680
  %incdec.ptr157 = getelementptr inbounds i8, i8* %125, i32 -1, !dbg !4680
  store i8* %incdec.ptr157, i8** %sp, align 8, !dbg !4680
  br label %for.inc158, !dbg !4681

for.inc158:                                       ; preds = %for.body144
  %126 = load i32, i32* %i, align 4, !dbg !4682
  %inc159 = add i32 %126, 1, !dbg !4682
  store i32 %inc159, i32* %i, align 4, !dbg !4682
  br label %for.cond141, !dbg !4683, !llvm.loop !4684

for.end160:                                       ; preds = %for.cond141
  %127 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4686
  %bit_depth161 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %127, i32 0, i32 3, !dbg !4687
  store i8 8, i8* %bit_depth161, align 1, !dbg !4688
  %128 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4689
  %pixel_depth162 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %128, i32 0, i32 5, !dbg !4690
  store i8 24, i8* %pixel_depth162, align 1, !dbg !4691
  %129 = load i32, i32* %row_width, align 4, !dbg !4692
  %mul163 = mul i32 %129, 3, !dbg !4693
  %conv164 = zext i32 %mul163 to i64, !dbg !4692
  %130 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4694
  %rowbytes165 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %130, i32 0, i32 1, !dbg !4695
  store i64 %conv164, i64* %rowbytes165, align 8, !dbg !4696
  %131 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4697
  %color_type166 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %131, i32 0, i32 2, !dbg !4698
  store i8 2, i8* %color_type166, align 8, !dbg !4699
  %132 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4700
  %channels167 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %132, i32 0, i32 4, !dbg !4701
  store i8 3, i8* %channels167, align 2, !dbg !4702
  br label %if.end168

if.end168:                                        ; preds = %for.end160, %for.end127
  br label %if.end169, !dbg !4703

if.end169:                                        ; preds = %if.end168, %if.end87
  br label %if.end170, !dbg !4704

if.end170:                                        ; preds = %if.end169, %entry
  ret void, !dbg !4705
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_expand(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_color_16_struct* %trans_color) #0 !dbg !4706 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %trans_color.addr = alloca %struct.png_color_16_struct*, align 8
  %shift = alloca i32, align 4
  %value = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %gray = alloca i16, align 2
  %gray_high = alloca i8, align 1
  %gray_low = alloca i8, align 1
  %red = alloca i8, align 1
  %green = alloca i8, align 1
  %blue = alloca i8, align 1
  %red_high = alloca i8, align 1
  %green_high = alloca i8, align 1
  %blue_high = alloca i8, align 1
  %red_low = alloca i8, align 1
  %green_low = alloca i8, align 1
  %blue_low = alloca i8, align 1
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !4709, metadata !DIExpression()), !dbg !4710
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  store %struct.png_color_16_struct* %trans_color, %struct.png_color_16_struct** %trans_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_16_struct** %trans_color.addr, metadata !4713, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !4715, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4717, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4723, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !4725, metadata !DIExpression()), !dbg !4726
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4727
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !4728
  %1 = load i32, i32* %width, align 8, !dbg !4728
  store i32 %1, i32* %row_width, align 4, !dbg !4726
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4729
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !4732
  %3 = load i8, i8* %color_type, align 8, !dbg !4732
  %conv = zext i8 %3 to i32, !dbg !4729
  %cmp = icmp eq i32 %conv, 0, !dbg !4733
  br i1 %cmp, label %if.then, label %if.else223, !dbg !4734

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %gray, metadata !4735, metadata !DIExpression()), !dbg !4737
  %4 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !4738
  %tobool = icmp ne %struct.png_color_16_struct* %4, null, !dbg !4738
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4738

cond.true:                                        ; preds = %if.then
  %5 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !4739
  %gray2 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i32 0, i32 4, !dbg !4740
  %6 = load i16, i16* %gray2, align 2, !dbg !4740
  %conv3 = zext i16 %6 to i32, !dbg !4739
  br label %cond.end, !dbg !4738

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4738

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ 0, %cond.false ], !dbg !4738
  %conv4 = trunc i32 %cond to i16, !dbg !4741
  store i16 %conv4, i16* %gray, align 2, !dbg !4737
  %7 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4742
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 3, !dbg !4744
  %8 = load i8, i8* %bit_depth, align 1, !dbg !4744
  %conv5 = zext i8 %8 to i32, !dbg !4742
  %cmp6 = icmp slt i32 %conv5, 8, !dbg !4745
  br i1 %cmp6, label %if.then8, label %if.end110, !dbg !4746

if.then8:                                         ; preds = %cond.end
  %9 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4747
  %bit_depth9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %9, i32 0, i32 3, !dbg !4749
  %10 = load i8, i8* %bit_depth9, align 1, !dbg !4749
  %conv10 = zext i8 %10 to i32, !dbg !4747
  switch i32 %conv10, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb33
    i32 4, label %sw.bb72
  ], !dbg !4750

sw.bb:                                            ; preds = %if.then8
  %11 = load i16, i16* %gray, align 2, !dbg !4751
  %conv11 = zext i16 %11 to i32, !dbg !4751
  %and = and i32 %conv11, 1, !dbg !4754
  %mul = mul nsw i32 %and, 255, !dbg !4755
  %conv12 = trunc i32 %mul to i16, !dbg !4756
  store i16 %conv12, i16* %gray, align 2, !dbg !4757
  %12 = load i8*, i8** %row.addr, align 8, !dbg !4758
  %13 = load i32, i32* %row_width, align 4, !dbg !4759
  %sub = sub i32 %13, 1, !dbg !4760
  %shr = lshr i32 %sub, 3, !dbg !4761
  %conv13 = zext i32 %shr to i64, !dbg !4762
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %conv13, !dbg !4763
  store i8* %add.ptr, i8** %sp, align 8, !dbg !4764
  %14 = load i8*, i8** %row.addr, align 8, !dbg !4765
  %15 = load i32, i32* %row_width, align 4, !dbg !4766
  %conv14 = zext i32 %15 to i64, !dbg !4767
  %add.ptr15 = getelementptr inbounds i8, i8* %14, i64 %conv14, !dbg !4768
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr15, i64 -1, !dbg !4769
  store i8* %add.ptr16, i8** %dp, align 8, !dbg !4770
  %16 = load i32, i32* %row_width, align 4, !dbg !4771
  %add = add i32 %16, 7, !dbg !4772
  %and17 = and i32 %add, 7, !dbg !4773
  %sub18 = sub nsw i32 7, %and17, !dbg !4774
  store i32 %sub18, i32* %shift, align 4, !dbg !4775
  store i32 0, i32* %i, align 4, !dbg !4776
  br label %for.cond, !dbg !4778

for.cond:                                         ; preds = %for.inc, %sw.bb
  %17 = load i32, i32* %i, align 4, !dbg !4779
  %18 = load i32, i32* %row_width, align 4, !dbg !4781
  %cmp19 = icmp ult i32 %17, %18, !dbg !4782
  br i1 %cmp19, label %for.body, label %for.end, !dbg !4783

for.body:                                         ; preds = %for.cond
  %19 = load i8*, i8** %sp, align 8, !dbg !4784
  %20 = load i8, i8* %19, align 1, !dbg !4787
  %conv21 = zext i8 %20 to i32, !dbg !4787
  %21 = load i32, i32* %shift, align 4, !dbg !4788
  %shr22 = ashr i32 %conv21, %21, !dbg !4789
  %and23 = and i32 %shr22, 1, !dbg !4790
  %tobool24 = icmp ne i32 %and23, 0, !dbg !4790
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !4791

if.then25:                                        ; preds = %for.body
  %22 = load i8*, i8** %dp, align 8, !dbg !4792
  store i8 -1, i8* %22, align 1, !dbg !4793
  br label %if.end, !dbg !4794

if.else:                                          ; preds = %for.body
  %23 = load i8*, i8** %dp, align 8, !dbg !4795
  store i8 0, i8* %23, align 1, !dbg !4796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then25
  %24 = load i32, i32* %shift, align 4, !dbg !4797
  %cmp26 = icmp eq i32 %24, 7, !dbg !4799
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !4800

if.then28:                                        ; preds = %if.end
  store i32 0, i32* %shift, align 4, !dbg !4801
  %25 = load i8*, i8** %sp, align 8, !dbg !4803
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 -1, !dbg !4803
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !4803
  br label %if.end30, !dbg !4804

if.else29:                                        ; preds = %if.end
  %26 = load i32, i32* %shift, align 4, !dbg !4805
  %inc = add nsw i32 %26, 1, !dbg !4805
  store i32 %inc, i32* %shift, align 4, !dbg !4805
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then28
  %27 = load i8*, i8** %dp, align 8, !dbg !4806
  %incdec.ptr31 = getelementptr inbounds i8, i8* %27, i32 -1, !dbg !4806
  store i8* %incdec.ptr31, i8** %dp, align 8, !dbg !4806
  br label %for.inc, !dbg !4807

for.inc:                                          ; preds = %if.end30
  %28 = load i32, i32* %i, align 4, !dbg !4808
  %inc32 = add i32 %28, 1, !dbg !4808
  store i32 %inc32, i32* %i, align 4, !dbg !4808
  br label %for.cond, !dbg !4809, !llvm.loop !4810

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4812

sw.bb33:                                          ; preds = %if.then8
  %29 = load i16, i16* %gray, align 2, !dbg !4813
  %conv34 = zext i16 %29 to i32, !dbg !4813
  %and35 = and i32 %conv34, 3, !dbg !4815
  %mul36 = mul nsw i32 %and35, 85, !dbg !4816
  %conv37 = trunc i32 %mul36 to i16, !dbg !4817
  store i16 %conv37, i16* %gray, align 2, !dbg !4818
  %30 = load i8*, i8** %row.addr, align 8, !dbg !4819
  %31 = load i32, i32* %row_width, align 4, !dbg !4820
  %sub38 = sub i32 %31, 1, !dbg !4821
  %shr39 = lshr i32 %sub38, 2, !dbg !4822
  %conv40 = zext i32 %shr39 to i64, !dbg !4823
  %add.ptr41 = getelementptr inbounds i8, i8* %30, i64 %conv40, !dbg !4824
  store i8* %add.ptr41, i8** %sp, align 8, !dbg !4825
  %32 = load i8*, i8** %row.addr, align 8, !dbg !4826
  %33 = load i32, i32* %row_width, align 4, !dbg !4827
  %conv42 = zext i32 %33 to i64, !dbg !4828
  %add.ptr43 = getelementptr inbounds i8, i8* %32, i64 %conv42, !dbg !4829
  %add.ptr44 = getelementptr inbounds i8, i8* %add.ptr43, i64 -1, !dbg !4830
  store i8* %add.ptr44, i8** %dp, align 8, !dbg !4831
  %34 = load i32, i32* %row_width, align 4, !dbg !4832
  %add45 = add i32 %34, 3, !dbg !4833
  %and46 = and i32 %add45, 3, !dbg !4834
  %sub47 = sub i32 3, %and46, !dbg !4835
  %shl = shl i32 %sub47, 1, !dbg !4836
  store i32 %shl, i32* %shift, align 4, !dbg !4837
  store i32 0, i32* %i, align 4, !dbg !4838
  br label %for.cond48, !dbg !4840

for.cond48:                                       ; preds = %for.inc69, %sw.bb33
  %35 = load i32, i32* %i, align 4, !dbg !4841
  %36 = load i32, i32* %row_width, align 4, !dbg !4843
  %cmp49 = icmp ult i32 %35, %36, !dbg !4844
  br i1 %cmp49, label %for.body51, label %for.end71, !dbg !4845

for.body51:                                       ; preds = %for.cond48
  %37 = load i8*, i8** %sp, align 8, !dbg !4846
  %38 = load i8, i8* %37, align 1, !dbg !4848
  %conv52 = zext i8 %38 to i32, !dbg !4848
  %39 = load i32, i32* %shift, align 4, !dbg !4849
  %shr53 = ashr i32 %conv52, %39, !dbg !4850
  %and54 = and i32 %shr53, 3, !dbg !4851
  store i32 %and54, i32* %value, align 4, !dbg !4852
  %40 = load i32, i32* %value, align 4, !dbg !4853
  %41 = load i32, i32* %value, align 4, !dbg !4854
  %shl55 = shl i32 %41, 2, !dbg !4855
  %or = or i32 %40, %shl55, !dbg !4856
  %42 = load i32, i32* %value, align 4, !dbg !4857
  %shl56 = shl i32 %42, 4, !dbg !4858
  %or57 = or i32 %or, %shl56, !dbg !4859
  %43 = load i32, i32* %value, align 4, !dbg !4860
  %shl58 = shl i32 %43, 6, !dbg !4861
  %or59 = or i32 %or57, %shl58, !dbg !4862
  %conv60 = trunc i32 %or59 to i8, !dbg !4863
  %44 = load i8*, i8** %dp, align 8, !dbg !4864
  store i8 %conv60, i8* %44, align 1, !dbg !4865
  %45 = load i32, i32* %shift, align 4, !dbg !4866
  %cmp61 = icmp eq i32 %45, 6, !dbg !4868
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !4869

if.then63:                                        ; preds = %for.body51
  store i32 0, i32* %shift, align 4, !dbg !4870
  %46 = load i8*, i8** %sp, align 8, !dbg !4872
  %incdec.ptr64 = getelementptr inbounds i8, i8* %46, i32 -1, !dbg !4872
  store i8* %incdec.ptr64, i8** %sp, align 8, !dbg !4872
  br label %if.end67, !dbg !4873

if.else65:                                        ; preds = %for.body51
  %47 = load i32, i32* %shift, align 4, !dbg !4874
  %add66 = add nsw i32 %47, 2, !dbg !4874
  store i32 %add66, i32* %shift, align 4, !dbg !4874
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then63
  %48 = load i8*, i8** %dp, align 8, !dbg !4875
  %incdec.ptr68 = getelementptr inbounds i8, i8* %48, i32 -1, !dbg !4875
  store i8* %incdec.ptr68, i8** %dp, align 8, !dbg !4875
  br label %for.inc69, !dbg !4876

for.inc69:                                        ; preds = %if.end67
  %49 = load i32, i32* %i, align 4, !dbg !4877
  %inc70 = add i32 %49, 1, !dbg !4877
  store i32 %inc70, i32* %i, align 4, !dbg !4877
  br label %for.cond48, !dbg !4878, !llvm.loop !4879

for.end71:                                        ; preds = %for.cond48
  br label %sw.epilog, !dbg !4881

sw.bb72:                                          ; preds = %if.then8
  %50 = load i16, i16* %gray, align 2, !dbg !4882
  %conv73 = zext i16 %50 to i32, !dbg !4882
  %and74 = and i32 %conv73, 15, !dbg !4884
  %mul75 = mul nsw i32 %and74, 17, !dbg !4885
  %conv76 = trunc i32 %mul75 to i16, !dbg !4886
  store i16 %conv76, i16* %gray, align 2, !dbg !4887
  %51 = load i8*, i8** %row.addr, align 8, !dbg !4888
  %52 = load i32, i32* %row_width, align 4, !dbg !4889
  %sub77 = sub i32 %52, 1, !dbg !4890
  %shr78 = lshr i32 %sub77, 1, !dbg !4891
  %conv79 = zext i32 %shr78 to i64, !dbg !4892
  %add.ptr80 = getelementptr inbounds i8, i8* %51, i64 %conv79, !dbg !4893
  store i8* %add.ptr80, i8** %sp, align 8, !dbg !4894
  %53 = load i8*, i8** %row.addr, align 8, !dbg !4895
  %54 = load i32, i32* %row_width, align 4, !dbg !4896
  %conv81 = zext i32 %54 to i64, !dbg !4897
  %add.ptr82 = getelementptr inbounds i8, i8* %53, i64 %conv81, !dbg !4898
  %add.ptr83 = getelementptr inbounds i8, i8* %add.ptr82, i64 -1, !dbg !4899
  store i8* %add.ptr83, i8** %dp, align 8, !dbg !4900
  %55 = load i32, i32* %row_width, align 4, !dbg !4901
  %add84 = add i32 %55, 1, !dbg !4902
  %and85 = and i32 %add84, 1, !dbg !4903
  %sub86 = sub i32 1, %and85, !dbg !4904
  %shl87 = shl i32 %sub86, 2, !dbg !4905
  store i32 %shl87, i32* %shift, align 4, !dbg !4906
  store i32 0, i32* %i, align 4, !dbg !4907
  br label %for.cond88, !dbg !4909

for.cond88:                                       ; preds = %for.inc105, %sw.bb72
  %56 = load i32, i32* %i, align 4, !dbg !4910
  %57 = load i32, i32* %row_width, align 4, !dbg !4912
  %cmp89 = icmp ult i32 %56, %57, !dbg !4913
  br i1 %cmp89, label %for.body91, label %for.end107, !dbg !4914

for.body91:                                       ; preds = %for.cond88
  %58 = load i8*, i8** %sp, align 8, !dbg !4915
  %59 = load i8, i8* %58, align 1, !dbg !4917
  %conv92 = zext i8 %59 to i32, !dbg !4917
  %60 = load i32, i32* %shift, align 4, !dbg !4918
  %shr93 = ashr i32 %conv92, %60, !dbg !4919
  %and94 = and i32 %shr93, 15, !dbg !4920
  store i32 %and94, i32* %value, align 4, !dbg !4921
  %61 = load i32, i32* %value, align 4, !dbg !4922
  %62 = load i32, i32* %value, align 4, !dbg !4923
  %shl95 = shl i32 %62, 4, !dbg !4924
  %or96 = or i32 %61, %shl95, !dbg !4925
  %conv97 = trunc i32 %or96 to i8, !dbg !4926
  %63 = load i8*, i8** %dp, align 8, !dbg !4927
  store i8 %conv97, i8* %63, align 1, !dbg !4928
  %64 = load i32, i32* %shift, align 4, !dbg !4929
  %cmp98 = icmp eq i32 %64, 4, !dbg !4931
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !4932

if.then100:                                       ; preds = %for.body91
  store i32 0, i32* %shift, align 4, !dbg !4933
  %65 = load i8*, i8** %sp, align 8, !dbg !4935
  %incdec.ptr101 = getelementptr inbounds i8, i8* %65, i32 -1, !dbg !4935
  store i8* %incdec.ptr101, i8** %sp, align 8, !dbg !4935
  br label %if.end103, !dbg !4936

if.else102:                                       ; preds = %for.body91
  store i32 4, i32* %shift, align 4, !dbg !4937
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then100
  %66 = load i8*, i8** %dp, align 8, !dbg !4938
  %incdec.ptr104 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !4938
  store i8* %incdec.ptr104, i8** %dp, align 8, !dbg !4938
  br label %for.inc105, !dbg !4939

for.inc105:                                       ; preds = %if.end103
  %67 = load i32, i32* %i, align 4, !dbg !4940
  %inc106 = add i32 %67, 1, !dbg !4940
  store i32 %inc106, i32* %i, align 4, !dbg !4940
  br label %for.cond88, !dbg !4941, !llvm.loop !4942

for.end107:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !4944

sw.default:                                       ; preds = %if.then8
  br label %sw.epilog, !dbg !4945

sw.epilog:                                        ; preds = %sw.default, %for.end107, %for.end71, %for.end
  %68 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4946
  %bit_depth108 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %68, i32 0, i32 3, !dbg !4947
  store i8 8, i8* %bit_depth108, align 1, !dbg !4948
  %69 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4949
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %69, i32 0, i32 5, !dbg !4950
  store i8 8, i8* %pixel_depth, align 1, !dbg !4951
  %70 = load i32, i32* %row_width, align 4, !dbg !4952
  %conv109 = zext i32 %70 to i64, !dbg !4952
  %71 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4953
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %71, i32 0, i32 1, !dbg !4954
  store i64 %conv109, i64* %rowbytes, align 8, !dbg !4955
  br label %if.end110, !dbg !4956

if.end110:                                        ; preds = %sw.epilog, %cond.end
  %72 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !4957
  %cmp111 = icmp ne %struct.png_color_16_struct* %72, null, !dbg !4959
  br i1 %cmp111, label %if.then113, label %if.end222, !dbg !4960

if.then113:                                       ; preds = %if.end110
  %73 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !4961
  %bit_depth114 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %73, i32 0, i32 3, !dbg !4964
  %74 = load i8, i8* %bit_depth114, align 1, !dbg !4964
  %conv115 = zext i8 %74 to i32, !dbg !4961
  %cmp116 = icmp eq i32 %conv115, 8, !dbg !4965
  br i1 %cmp116, label %if.then118, label %if.else147, !dbg !4966

if.then118:                                       ; preds = %if.then113
  %75 = load i16, i16* %gray, align 2, !dbg !4967
  %conv119 = zext i16 %75 to i32, !dbg !4967
  %and120 = and i32 %conv119, 255, !dbg !4969
  %conv121 = trunc i32 %and120 to i16, !dbg !4967
  store i16 %conv121, i16* %gray, align 2, !dbg !4970
  %76 = load i8*, i8** %row.addr, align 8, !dbg !4971
  %77 = load i32, i32* %row_width, align 4, !dbg !4972
  %conv122 = zext i32 %77 to i64, !dbg !4973
  %add.ptr123 = getelementptr inbounds i8, i8* %76, i64 %conv122, !dbg !4974
  %add.ptr124 = getelementptr inbounds i8, i8* %add.ptr123, i64 -1, !dbg !4975
  store i8* %add.ptr124, i8** %sp, align 8, !dbg !4976
  %78 = load i8*, i8** %row.addr, align 8, !dbg !4977
  %79 = load i32, i32* %row_width, align 4, !dbg !4978
  %shl125 = shl i32 %79, 1, !dbg !4979
  %conv126 = zext i32 %shl125 to i64, !dbg !4980
  %add.ptr127 = getelementptr inbounds i8, i8* %78, i64 %conv126, !dbg !4981
  %add.ptr128 = getelementptr inbounds i8, i8* %add.ptr127, i64 -1, !dbg !4982
  store i8* %add.ptr128, i8** %dp, align 8, !dbg !4983
  store i32 0, i32* %i, align 4, !dbg !4984
  br label %for.cond129, !dbg !4986

for.cond129:                                      ; preds = %for.inc144, %if.then118
  %80 = load i32, i32* %i, align 4, !dbg !4987
  %81 = load i32, i32* %row_width, align 4, !dbg !4989
  %cmp130 = icmp ult i32 %80, %81, !dbg !4990
  br i1 %cmp130, label %for.body132, label %for.end146, !dbg !4991

for.body132:                                      ; preds = %for.cond129
  %82 = load i8*, i8** %sp, align 8, !dbg !4992
  %83 = load i8, i8* %82, align 1, !dbg !4995
  %conv133 = zext i8 %83 to i32, !dbg !4995
  %84 = load i16, i16* %gray, align 2, !dbg !4996
  %conv134 = zext i16 %84 to i32, !dbg !4996
  %cmp135 = icmp eq i32 %conv133, %conv134, !dbg !4997
  br i1 %cmp135, label %if.then137, label %if.else139, !dbg !4998

if.then137:                                       ; preds = %for.body132
  %85 = load i8*, i8** %dp, align 8, !dbg !4999
  %incdec.ptr138 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !4999
  store i8* %incdec.ptr138, i8** %dp, align 8, !dbg !4999
  store i8 0, i8* %85, align 1, !dbg !5000
  br label %if.end141, !dbg !5001

if.else139:                                       ; preds = %for.body132
  %86 = load i8*, i8** %dp, align 8, !dbg !5002
  %incdec.ptr140 = getelementptr inbounds i8, i8* %86, i32 -1, !dbg !5002
  store i8* %incdec.ptr140, i8** %dp, align 8, !dbg !5002
  store i8 -1, i8* %86, align 1, !dbg !5003
  br label %if.end141

if.end141:                                        ; preds = %if.else139, %if.then137
  %87 = load i8*, i8** %sp, align 8, !dbg !5004
  %incdec.ptr142 = getelementptr inbounds i8, i8* %87, i32 -1, !dbg !5004
  store i8* %incdec.ptr142, i8** %sp, align 8, !dbg !5004
  %88 = load i8, i8* %87, align 1, !dbg !5005
  %89 = load i8*, i8** %dp, align 8, !dbg !5006
  %incdec.ptr143 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !5006
  store i8* %incdec.ptr143, i8** %dp, align 8, !dbg !5006
  store i8 %88, i8* %89, align 1, !dbg !5007
  br label %for.inc144, !dbg !5008

for.inc144:                                       ; preds = %if.end141
  %90 = load i32, i32* %i, align 4, !dbg !5009
  %inc145 = add i32 %90, 1, !dbg !5009
  store i32 %inc145, i32* %i, align 4, !dbg !5009
  br label %for.cond129, !dbg !5010, !llvm.loop !5011

for.end146:                                       ; preds = %for.cond129
  br label %if.end195, !dbg !5013

if.else147:                                       ; preds = %if.then113
  %91 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5014
  %bit_depth148 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %91, i32 0, i32 3, !dbg !5016
  %92 = load i8, i8* %bit_depth148, align 1, !dbg !5016
  %conv149 = zext i8 %92 to i32, !dbg !5014
  %cmp150 = icmp eq i32 %conv149, 16, !dbg !5017
  br i1 %cmp150, label %if.then152, label %if.end194, !dbg !5018

if.then152:                                       ; preds = %if.else147
  call void @llvm.dbg.declare(metadata i8* %gray_high, metadata !5019, metadata !DIExpression()), !dbg !5021
  %93 = load i16, i16* %gray, align 2, !dbg !5022
  %conv153 = zext i16 %93 to i32, !dbg !5022
  %shr154 = ashr i32 %conv153, 8, !dbg !5023
  %and155 = and i32 %shr154, 255, !dbg !5024
  %conv156 = trunc i32 %and155 to i8, !dbg !5025
  store i8 %conv156, i8* %gray_high, align 1, !dbg !5021
  call void @llvm.dbg.declare(metadata i8* %gray_low, metadata !5026, metadata !DIExpression()), !dbg !5027
  %94 = load i16, i16* %gray, align 2, !dbg !5028
  %conv157 = zext i16 %94 to i32, !dbg !5028
  %and158 = and i32 %conv157, 255, !dbg !5029
  %conv159 = trunc i32 %and158 to i8, !dbg !5030
  store i8 %conv159, i8* %gray_low, align 1, !dbg !5027
  %95 = load i8*, i8** %row.addr, align 8, !dbg !5031
  %96 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5032
  %rowbytes160 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %96, i32 0, i32 1, !dbg !5033
  %97 = load i64, i64* %rowbytes160, align 8, !dbg !5033
  %add.ptr161 = getelementptr inbounds i8, i8* %95, i64 %97, !dbg !5034
  %add.ptr162 = getelementptr inbounds i8, i8* %add.ptr161, i64 -1, !dbg !5035
  store i8* %add.ptr162, i8** %sp, align 8, !dbg !5036
  %98 = load i8*, i8** %row.addr, align 8, !dbg !5037
  %99 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5038
  %rowbytes163 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %99, i32 0, i32 1, !dbg !5039
  %100 = load i64, i64* %rowbytes163, align 8, !dbg !5039
  %shl164 = shl i64 %100, 1, !dbg !5040
  %add.ptr165 = getelementptr inbounds i8, i8* %98, i64 %shl164, !dbg !5041
  %add.ptr166 = getelementptr inbounds i8, i8* %add.ptr165, i64 -1, !dbg !5042
  store i8* %add.ptr166, i8** %dp, align 8, !dbg !5043
  store i32 0, i32* %i, align 4, !dbg !5044
  br label %for.cond167, !dbg !5046

for.cond167:                                      ; preds = %for.inc191, %if.then152
  %101 = load i32, i32* %i, align 4, !dbg !5047
  %102 = load i32, i32* %row_width, align 4, !dbg !5049
  %cmp168 = icmp ult i32 %101, %102, !dbg !5050
  br i1 %cmp168, label %for.body170, label %for.end193, !dbg !5051

for.body170:                                      ; preds = %for.cond167
  %103 = load i8*, i8** %sp, align 8, !dbg !5052
  %add.ptr171 = getelementptr inbounds i8, i8* %103, i64 -1, !dbg !5055
  %104 = load i8, i8* %add.ptr171, align 1, !dbg !5056
  %conv172 = zext i8 %104 to i32, !dbg !5056
  %105 = load i8, i8* %gray_high, align 1, !dbg !5057
  %conv173 = zext i8 %105 to i32, !dbg !5057
  %cmp174 = icmp eq i32 %conv172, %conv173, !dbg !5058
  br i1 %cmp174, label %land.lhs.true, label %if.else183, !dbg !5059

land.lhs.true:                                    ; preds = %for.body170
  %106 = load i8*, i8** %sp, align 8, !dbg !5060
  %107 = load i8, i8* %106, align 1, !dbg !5061
  %conv176 = zext i8 %107 to i32, !dbg !5061
  %108 = load i8, i8* %gray_low, align 1, !dbg !5062
  %conv177 = zext i8 %108 to i32, !dbg !5062
  %cmp178 = icmp eq i32 %conv176, %conv177, !dbg !5063
  br i1 %cmp178, label %if.then180, label %if.else183, !dbg !5064

if.then180:                                       ; preds = %land.lhs.true
  %109 = load i8*, i8** %dp, align 8, !dbg !5065
  %incdec.ptr181 = getelementptr inbounds i8, i8* %109, i32 -1, !dbg !5065
  store i8* %incdec.ptr181, i8** %dp, align 8, !dbg !5065
  store i8 0, i8* %109, align 1, !dbg !5067
  %110 = load i8*, i8** %dp, align 8, !dbg !5068
  %incdec.ptr182 = getelementptr inbounds i8, i8* %110, i32 -1, !dbg !5068
  store i8* %incdec.ptr182, i8** %dp, align 8, !dbg !5068
  store i8 0, i8* %110, align 1, !dbg !5069
  br label %if.end186, !dbg !5070

if.else183:                                       ; preds = %land.lhs.true, %for.body170
  %111 = load i8*, i8** %dp, align 8, !dbg !5071
  %incdec.ptr184 = getelementptr inbounds i8, i8* %111, i32 -1, !dbg !5071
  store i8* %incdec.ptr184, i8** %dp, align 8, !dbg !5071
  store i8 -1, i8* %111, align 1, !dbg !5073
  %112 = load i8*, i8** %dp, align 8, !dbg !5074
  %incdec.ptr185 = getelementptr inbounds i8, i8* %112, i32 -1, !dbg !5074
  store i8* %incdec.ptr185, i8** %dp, align 8, !dbg !5074
  store i8 -1, i8* %112, align 1, !dbg !5075
  br label %if.end186

if.end186:                                        ; preds = %if.else183, %if.then180
  %113 = load i8*, i8** %sp, align 8, !dbg !5076
  %incdec.ptr187 = getelementptr inbounds i8, i8* %113, i32 -1, !dbg !5076
  store i8* %incdec.ptr187, i8** %sp, align 8, !dbg !5076
  %114 = load i8, i8* %113, align 1, !dbg !5077
  %115 = load i8*, i8** %dp, align 8, !dbg !5078
  %incdec.ptr188 = getelementptr inbounds i8, i8* %115, i32 -1, !dbg !5078
  store i8* %incdec.ptr188, i8** %dp, align 8, !dbg !5078
  store i8 %114, i8* %115, align 1, !dbg !5079
  %116 = load i8*, i8** %sp, align 8, !dbg !5080
  %incdec.ptr189 = getelementptr inbounds i8, i8* %116, i32 -1, !dbg !5080
  store i8* %incdec.ptr189, i8** %sp, align 8, !dbg !5080
  %117 = load i8, i8* %116, align 1, !dbg !5081
  %118 = load i8*, i8** %dp, align 8, !dbg !5082
  %incdec.ptr190 = getelementptr inbounds i8, i8* %118, i32 -1, !dbg !5082
  store i8* %incdec.ptr190, i8** %dp, align 8, !dbg !5082
  store i8 %117, i8* %118, align 1, !dbg !5083
  br label %for.inc191, !dbg !5084

for.inc191:                                       ; preds = %if.end186
  %119 = load i32, i32* %i, align 4, !dbg !5085
  %inc192 = add i32 %119, 1, !dbg !5085
  store i32 %inc192, i32* %i, align 4, !dbg !5085
  br label %for.cond167, !dbg !5086, !llvm.loop !5087

for.end193:                                       ; preds = %for.cond167
  br label %if.end194, !dbg !5089

if.end194:                                        ; preds = %for.end193, %if.else147
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %for.end146
  %120 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5090
  %color_type196 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %120, i32 0, i32 2, !dbg !5091
  store i8 4, i8* %color_type196, align 8, !dbg !5092
  %121 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5093
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %121, i32 0, i32 4, !dbg !5094
  store i8 2, i8* %channels, align 2, !dbg !5095
  %122 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5096
  %bit_depth197 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %122, i32 0, i32 3, !dbg !5097
  %123 = load i8, i8* %bit_depth197, align 1, !dbg !5097
  %conv198 = zext i8 %123 to i32, !dbg !5096
  %shl199 = shl i32 %conv198, 1, !dbg !5098
  %conv200 = trunc i32 %shl199 to i8, !dbg !5099
  %124 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5100
  %pixel_depth201 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %124, i32 0, i32 5, !dbg !5101
  store i8 %conv200, i8* %pixel_depth201, align 1, !dbg !5102
  %125 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5103
  %pixel_depth202 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %125, i32 0, i32 5, !dbg !5103
  %126 = load i8, i8* %pixel_depth202, align 1, !dbg !5103
  %conv203 = zext i8 %126 to i32, !dbg !5103
  %cmp204 = icmp sge i32 %conv203, 8, !dbg !5103
  br i1 %cmp204, label %cond.true206, label %cond.false212, !dbg !5103

cond.true206:                                     ; preds = %if.end195
  %127 = load i32, i32* %row_width, align 4, !dbg !5103
  %conv207 = zext i32 %127 to i64, !dbg !5103
  %128 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5103
  %pixel_depth208 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %128, i32 0, i32 5, !dbg !5103
  %129 = load i8, i8* %pixel_depth208, align 1, !dbg !5103
  %conv209 = zext i8 %129 to i64, !dbg !5103
  %shr210 = lshr i64 %conv209, 3, !dbg !5103
  %mul211 = mul i64 %conv207, %shr210, !dbg !5103
  br label %cond.end219, !dbg !5103

cond.false212:                                    ; preds = %if.end195
  %130 = load i32, i32* %row_width, align 4, !dbg !5103
  %conv213 = zext i32 %130 to i64, !dbg !5103
  %131 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5103
  %pixel_depth214 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %131, i32 0, i32 5, !dbg !5103
  %132 = load i8, i8* %pixel_depth214, align 1, !dbg !5103
  %conv215 = zext i8 %132 to i64, !dbg !5103
  %mul216 = mul i64 %conv213, %conv215, !dbg !5103
  %add217 = add i64 %mul216, 7, !dbg !5103
  %shr218 = lshr i64 %add217, 3, !dbg !5103
  br label %cond.end219, !dbg !5103

cond.end219:                                      ; preds = %cond.false212, %cond.true206
  %cond220 = phi i64 [ %mul211, %cond.true206 ], [ %shr218, %cond.false212 ], !dbg !5103
  %133 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5104
  %rowbytes221 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %133, i32 0, i32 1, !dbg !5105
  store i64 %cond220, i64* %rowbytes221, align 8, !dbg !5106
  br label %if.end222, !dbg !5107

if.end222:                                        ; preds = %cond.end219, %if.end110
  br label %if.end419, !dbg !5108

if.else223:                                       ; preds = %entry
  %134 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5109
  %color_type224 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %134, i32 0, i32 2, !dbg !5111
  %135 = load i8, i8* %color_type224, align 8, !dbg !5111
  %conv225 = zext i8 %135 to i32, !dbg !5109
  %cmp226 = icmp eq i32 %conv225, 2, !dbg !5112
  br i1 %cmp226, label %land.lhs.true228, label %if.end418, !dbg !5113

land.lhs.true228:                                 ; preds = %if.else223
  %136 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5114
  %tobool229 = icmp ne %struct.png_color_16_struct* %136, null, !dbg !5114
  br i1 %tobool229, label %if.then230, label %if.end418, !dbg !5115

if.then230:                                       ; preds = %land.lhs.true228
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5116
  %bit_depth231 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 3, !dbg !5119
  %138 = load i8, i8* %bit_depth231, align 1, !dbg !5119
  %conv232 = zext i8 %138 to i32, !dbg !5116
  %cmp233 = icmp eq i32 %conv232, 8, !dbg !5120
  br i1 %cmp233, label %if.then235, label %if.else289, !dbg !5121

if.then235:                                       ; preds = %if.then230
  call void @llvm.dbg.declare(metadata i8* %red, metadata !5122, metadata !DIExpression()), !dbg !5124
  %139 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5125
  %red236 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %139, i32 0, i32 1, !dbg !5126
  %140 = load i16, i16* %red236, align 2, !dbg !5126
  %conv237 = zext i16 %140 to i32, !dbg !5125
  %and238 = and i32 %conv237, 255, !dbg !5127
  %conv239 = trunc i32 %and238 to i8, !dbg !5128
  store i8 %conv239, i8* %red, align 1, !dbg !5124
  call void @llvm.dbg.declare(metadata i8* %green, metadata !5129, metadata !DIExpression()), !dbg !5130
  %141 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5131
  %green240 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %141, i32 0, i32 2, !dbg !5132
  %142 = load i16, i16* %green240, align 2, !dbg !5132
  %conv241 = zext i16 %142 to i32, !dbg !5131
  %and242 = and i32 %conv241, 255, !dbg !5133
  %conv243 = trunc i32 %and242 to i8, !dbg !5134
  store i8 %conv243, i8* %green, align 1, !dbg !5130
  call void @llvm.dbg.declare(metadata i8* %blue, metadata !5135, metadata !DIExpression()), !dbg !5136
  %143 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5137
  %blue244 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %143, i32 0, i32 3, !dbg !5138
  %144 = load i16, i16* %blue244, align 2, !dbg !5138
  %conv245 = zext i16 %144 to i32, !dbg !5137
  %and246 = and i32 %conv245, 255, !dbg !5139
  %conv247 = trunc i32 %and246 to i8, !dbg !5140
  store i8 %conv247, i8* %blue, align 1, !dbg !5136
  %145 = load i8*, i8** %row.addr, align 8, !dbg !5141
  %146 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5142
  %rowbytes248 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %146, i32 0, i32 1, !dbg !5143
  %147 = load i64, i64* %rowbytes248, align 8, !dbg !5143
  %add.ptr249 = getelementptr inbounds i8, i8* %145, i64 %147, !dbg !5144
  %add.ptr250 = getelementptr inbounds i8, i8* %add.ptr249, i64 -1, !dbg !5145
  store i8* %add.ptr250, i8** %sp, align 8, !dbg !5146
  %148 = load i8*, i8** %row.addr, align 8, !dbg !5147
  %149 = load i32, i32* %row_width, align 4, !dbg !5148
  %shl251 = shl i32 %149, 2, !dbg !5149
  %conv252 = zext i32 %shl251 to i64, !dbg !5150
  %add.ptr253 = getelementptr inbounds i8, i8* %148, i64 %conv252, !dbg !5151
  %add.ptr254 = getelementptr inbounds i8, i8* %add.ptr253, i64 -1, !dbg !5152
  store i8* %add.ptr254, i8** %dp, align 8, !dbg !5153
  store i32 0, i32* %i, align 4, !dbg !5154
  br label %for.cond255, !dbg !5156

for.cond255:                                      ; preds = %for.inc286, %if.then235
  %150 = load i32, i32* %i, align 4, !dbg !5157
  %151 = load i32, i32* %row_width, align 4, !dbg !5159
  %cmp256 = icmp ult i32 %150, %151, !dbg !5160
  br i1 %cmp256, label %for.body258, label %for.end288, !dbg !5161

for.body258:                                      ; preds = %for.cond255
  %152 = load i8*, i8** %sp, align 8, !dbg !5162
  %add.ptr259 = getelementptr inbounds i8, i8* %152, i64 -2, !dbg !5165
  %153 = load i8, i8* %add.ptr259, align 1, !dbg !5166
  %conv260 = zext i8 %153 to i32, !dbg !5166
  %154 = load i8, i8* %red, align 1, !dbg !5167
  %conv261 = zext i8 %154 to i32, !dbg !5167
  %cmp262 = icmp eq i32 %conv260, %conv261, !dbg !5168
  br i1 %cmp262, label %land.lhs.true264, label %if.else277, !dbg !5169

land.lhs.true264:                                 ; preds = %for.body258
  %155 = load i8*, i8** %sp, align 8, !dbg !5170
  %add.ptr265 = getelementptr inbounds i8, i8* %155, i64 -1, !dbg !5171
  %156 = load i8, i8* %add.ptr265, align 1, !dbg !5172
  %conv266 = zext i8 %156 to i32, !dbg !5172
  %157 = load i8, i8* %green, align 1, !dbg !5173
  %conv267 = zext i8 %157 to i32, !dbg !5173
  %cmp268 = icmp eq i32 %conv266, %conv267, !dbg !5174
  br i1 %cmp268, label %land.lhs.true270, label %if.else277, !dbg !5175

land.lhs.true270:                                 ; preds = %land.lhs.true264
  %158 = load i8*, i8** %sp, align 8, !dbg !5176
  %159 = load i8, i8* %158, align 1, !dbg !5177
  %conv271 = zext i8 %159 to i32, !dbg !5177
  %160 = load i8, i8* %blue, align 1, !dbg !5178
  %conv272 = zext i8 %160 to i32, !dbg !5178
  %cmp273 = icmp eq i32 %conv271, %conv272, !dbg !5179
  br i1 %cmp273, label %if.then275, label %if.else277, !dbg !5180

if.then275:                                       ; preds = %land.lhs.true270
  %161 = load i8*, i8** %dp, align 8, !dbg !5181
  %incdec.ptr276 = getelementptr inbounds i8, i8* %161, i32 -1, !dbg !5181
  store i8* %incdec.ptr276, i8** %dp, align 8, !dbg !5181
  store i8 0, i8* %161, align 1, !dbg !5182
  br label %if.end279, !dbg !5183

if.else277:                                       ; preds = %land.lhs.true270, %land.lhs.true264, %for.body258
  %162 = load i8*, i8** %dp, align 8, !dbg !5184
  %incdec.ptr278 = getelementptr inbounds i8, i8* %162, i32 -1, !dbg !5184
  store i8* %incdec.ptr278, i8** %dp, align 8, !dbg !5184
  store i8 -1, i8* %162, align 1, !dbg !5185
  br label %if.end279

if.end279:                                        ; preds = %if.else277, %if.then275
  %163 = load i8*, i8** %sp, align 8, !dbg !5186
  %incdec.ptr280 = getelementptr inbounds i8, i8* %163, i32 -1, !dbg !5186
  store i8* %incdec.ptr280, i8** %sp, align 8, !dbg !5186
  %164 = load i8, i8* %163, align 1, !dbg !5187
  %165 = load i8*, i8** %dp, align 8, !dbg !5188
  %incdec.ptr281 = getelementptr inbounds i8, i8* %165, i32 -1, !dbg !5188
  store i8* %incdec.ptr281, i8** %dp, align 8, !dbg !5188
  store i8 %164, i8* %165, align 1, !dbg !5189
  %166 = load i8*, i8** %sp, align 8, !dbg !5190
  %incdec.ptr282 = getelementptr inbounds i8, i8* %166, i32 -1, !dbg !5190
  store i8* %incdec.ptr282, i8** %sp, align 8, !dbg !5190
  %167 = load i8, i8* %166, align 1, !dbg !5191
  %168 = load i8*, i8** %dp, align 8, !dbg !5192
  %incdec.ptr283 = getelementptr inbounds i8, i8* %168, i32 -1, !dbg !5192
  store i8* %incdec.ptr283, i8** %dp, align 8, !dbg !5192
  store i8 %167, i8* %168, align 1, !dbg !5193
  %169 = load i8*, i8** %sp, align 8, !dbg !5194
  %incdec.ptr284 = getelementptr inbounds i8, i8* %169, i32 -1, !dbg !5194
  store i8* %incdec.ptr284, i8** %sp, align 8, !dbg !5194
  %170 = load i8, i8* %169, align 1, !dbg !5195
  %171 = load i8*, i8** %dp, align 8, !dbg !5196
  %incdec.ptr285 = getelementptr inbounds i8, i8* %171, i32 -1, !dbg !5196
  store i8* %incdec.ptr285, i8** %dp, align 8, !dbg !5196
  store i8 %170, i8* %171, align 1, !dbg !5197
  br label %for.inc286, !dbg !5198

for.inc286:                                       ; preds = %if.end279
  %172 = load i32, i32* %i, align 4, !dbg !5199
  %inc287 = add i32 %172, 1, !dbg !5199
  store i32 %inc287, i32* %i, align 4, !dbg !5199
  br label %for.cond255, !dbg !5200, !llvm.loop !5201

for.end288:                                       ; preds = %for.cond255
  br label %if.end390, !dbg !5203

if.else289:                                       ; preds = %if.then230
  %173 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5204
  %bit_depth290 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %173, i32 0, i32 3, !dbg !5206
  %174 = load i8, i8* %bit_depth290, align 1, !dbg !5206
  %conv291 = zext i8 %174 to i32, !dbg !5204
  %cmp292 = icmp eq i32 %conv291, 16, !dbg !5207
  br i1 %cmp292, label %if.then294, label %if.end389, !dbg !5208

if.then294:                                       ; preds = %if.else289
  call void @llvm.dbg.declare(metadata i8* %red_high, metadata !5209, metadata !DIExpression()), !dbg !5211
  %175 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5212
  %red295 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %175, i32 0, i32 1, !dbg !5213
  %176 = load i16, i16* %red295, align 2, !dbg !5213
  %conv296 = zext i16 %176 to i32, !dbg !5212
  %shr297 = ashr i32 %conv296, 8, !dbg !5214
  %and298 = and i32 %shr297, 255, !dbg !5215
  %conv299 = trunc i32 %and298 to i8, !dbg !5216
  store i8 %conv299, i8* %red_high, align 1, !dbg !5211
  call void @llvm.dbg.declare(metadata i8* %green_high, metadata !5217, metadata !DIExpression()), !dbg !5218
  %177 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5219
  %green300 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %177, i32 0, i32 2, !dbg !5220
  %178 = load i16, i16* %green300, align 2, !dbg !5220
  %conv301 = zext i16 %178 to i32, !dbg !5219
  %shr302 = ashr i32 %conv301, 8, !dbg !5221
  %and303 = and i32 %shr302, 255, !dbg !5222
  %conv304 = trunc i32 %and303 to i8, !dbg !5223
  store i8 %conv304, i8* %green_high, align 1, !dbg !5218
  call void @llvm.dbg.declare(metadata i8* %blue_high, metadata !5224, metadata !DIExpression()), !dbg !5225
  %179 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5226
  %blue305 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %179, i32 0, i32 3, !dbg !5227
  %180 = load i16, i16* %blue305, align 2, !dbg !5227
  %conv306 = zext i16 %180 to i32, !dbg !5226
  %shr307 = ashr i32 %conv306, 8, !dbg !5228
  %and308 = and i32 %shr307, 255, !dbg !5229
  %conv309 = trunc i32 %and308 to i8, !dbg !5230
  store i8 %conv309, i8* %blue_high, align 1, !dbg !5225
  call void @llvm.dbg.declare(metadata i8* %red_low, metadata !5231, metadata !DIExpression()), !dbg !5232
  %181 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5233
  %red310 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %181, i32 0, i32 1, !dbg !5234
  %182 = load i16, i16* %red310, align 2, !dbg !5234
  %conv311 = zext i16 %182 to i32, !dbg !5233
  %and312 = and i32 %conv311, 255, !dbg !5235
  %conv313 = trunc i32 %and312 to i8, !dbg !5236
  store i8 %conv313, i8* %red_low, align 1, !dbg !5232
  call void @llvm.dbg.declare(metadata i8* %green_low, metadata !5237, metadata !DIExpression()), !dbg !5238
  %183 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5239
  %green314 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %183, i32 0, i32 2, !dbg !5240
  %184 = load i16, i16* %green314, align 2, !dbg !5240
  %conv315 = zext i16 %184 to i32, !dbg !5239
  %and316 = and i32 %conv315, 255, !dbg !5241
  %conv317 = trunc i32 %and316 to i8, !dbg !5242
  store i8 %conv317, i8* %green_low, align 1, !dbg !5238
  call void @llvm.dbg.declare(metadata i8* %blue_low, metadata !5243, metadata !DIExpression()), !dbg !5244
  %185 = load %struct.png_color_16_struct*, %struct.png_color_16_struct** %trans_color.addr, align 8, !dbg !5245
  %blue318 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %185, i32 0, i32 3, !dbg !5246
  %186 = load i16, i16* %blue318, align 2, !dbg !5246
  %conv319 = zext i16 %186 to i32, !dbg !5245
  %and320 = and i32 %conv319, 255, !dbg !5247
  %conv321 = trunc i32 %and320 to i8, !dbg !5248
  store i8 %conv321, i8* %blue_low, align 1, !dbg !5244
  %187 = load i8*, i8** %row.addr, align 8, !dbg !5249
  %188 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5250
  %rowbytes322 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %188, i32 0, i32 1, !dbg !5251
  %189 = load i64, i64* %rowbytes322, align 8, !dbg !5251
  %add.ptr323 = getelementptr inbounds i8, i8* %187, i64 %189, !dbg !5252
  %add.ptr324 = getelementptr inbounds i8, i8* %add.ptr323, i64 -1, !dbg !5253
  store i8* %add.ptr324, i8** %sp, align 8, !dbg !5254
  %190 = load i8*, i8** %row.addr, align 8, !dbg !5255
  %191 = load i32, i32* %row_width, align 4, !dbg !5256
  %shl325 = shl i32 %191, 3, !dbg !5257
  %conv326 = zext i32 %shl325 to i64, !dbg !5258
  %add.ptr327 = getelementptr inbounds i8, i8* %190, i64 %conv326, !dbg !5259
  %add.ptr328 = getelementptr inbounds i8, i8* %add.ptr327, i64 -1, !dbg !5260
  store i8* %add.ptr328, i8** %dp, align 8, !dbg !5261
  store i32 0, i32* %i, align 4, !dbg !5262
  br label %for.cond329, !dbg !5264

for.cond329:                                      ; preds = %for.inc386, %if.then294
  %192 = load i32, i32* %i, align 4, !dbg !5265
  %193 = load i32, i32* %row_width, align 4, !dbg !5267
  %cmp330 = icmp ult i32 %192, %193, !dbg !5268
  br i1 %cmp330, label %for.body332, label %for.end388, !dbg !5269

for.body332:                                      ; preds = %for.cond329
  %194 = load i8*, i8** %sp, align 8, !dbg !5270
  %add.ptr333 = getelementptr inbounds i8, i8* %194, i64 -5, !dbg !5273
  %195 = load i8, i8* %add.ptr333, align 1, !dbg !5274
  %conv334 = zext i8 %195 to i32, !dbg !5274
  %196 = load i8, i8* %red_high, align 1, !dbg !5275
  %conv335 = zext i8 %196 to i32, !dbg !5275
  %cmp336 = icmp eq i32 %conv334, %conv335, !dbg !5276
  br i1 %cmp336, label %land.lhs.true338, label %if.else370, !dbg !5277

land.lhs.true338:                                 ; preds = %for.body332
  %197 = load i8*, i8** %sp, align 8, !dbg !5278
  %add.ptr339 = getelementptr inbounds i8, i8* %197, i64 -4, !dbg !5279
  %198 = load i8, i8* %add.ptr339, align 1, !dbg !5280
  %conv340 = zext i8 %198 to i32, !dbg !5280
  %199 = load i8, i8* %red_low, align 1, !dbg !5281
  %conv341 = zext i8 %199 to i32, !dbg !5281
  %cmp342 = icmp eq i32 %conv340, %conv341, !dbg !5282
  br i1 %cmp342, label %land.lhs.true344, label %if.else370, !dbg !5283

land.lhs.true344:                                 ; preds = %land.lhs.true338
  %200 = load i8*, i8** %sp, align 8, !dbg !5284
  %add.ptr345 = getelementptr inbounds i8, i8* %200, i64 -3, !dbg !5285
  %201 = load i8, i8* %add.ptr345, align 1, !dbg !5286
  %conv346 = zext i8 %201 to i32, !dbg !5286
  %202 = load i8, i8* %green_high, align 1, !dbg !5287
  %conv347 = zext i8 %202 to i32, !dbg !5287
  %cmp348 = icmp eq i32 %conv346, %conv347, !dbg !5288
  br i1 %cmp348, label %land.lhs.true350, label %if.else370, !dbg !5289

land.lhs.true350:                                 ; preds = %land.lhs.true344
  %203 = load i8*, i8** %sp, align 8, !dbg !5290
  %add.ptr351 = getelementptr inbounds i8, i8* %203, i64 -2, !dbg !5291
  %204 = load i8, i8* %add.ptr351, align 1, !dbg !5292
  %conv352 = zext i8 %204 to i32, !dbg !5292
  %205 = load i8, i8* %green_low, align 1, !dbg !5293
  %conv353 = zext i8 %205 to i32, !dbg !5293
  %cmp354 = icmp eq i32 %conv352, %conv353, !dbg !5294
  br i1 %cmp354, label %land.lhs.true356, label %if.else370, !dbg !5295

land.lhs.true356:                                 ; preds = %land.lhs.true350
  %206 = load i8*, i8** %sp, align 8, !dbg !5296
  %add.ptr357 = getelementptr inbounds i8, i8* %206, i64 -1, !dbg !5297
  %207 = load i8, i8* %add.ptr357, align 1, !dbg !5298
  %conv358 = zext i8 %207 to i32, !dbg !5298
  %208 = load i8, i8* %blue_high, align 1, !dbg !5299
  %conv359 = zext i8 %208 to i32, !dbg !5299
  %cmp360 = icmp eq i32 %conv358, %conv359, !dbg !5300
  br i1 %cmp360, label %land.lhs.true362, label %if.else370, !dbg !5301

land.lhs.true362:                                 ; preds = %land.lhs.true356
  %209 = load i8*, i8** %sp, align 8, !dbg !5302
  %210 = load i8, i8* %209, align 1, !dbg !5303
  %conv363 = zext i8 %210 to i32, !dbg !5303
  %211 = load i8, i8* %blue_low, align 1, !dbg !5304
  %conv364 = zext i8 %211 to i32, !dbg !5304
  %cmp365 = icmp eq i32 %conv363, %conv364, !dbg !5305
  br i1 %cmp365, label %if.then367, label %if.else370, !dbg !5306

if.then367:                                       ; preds = %land.lhs.true362
  %212 = load i8*, i8** %dp, align 8, !dbg !5307
  %incdec.ptr368 = getelementptr inbounds i8, i8* %212, i32 -1, !dbg !5307
  store i8* %incdec.ptr368, i8** %dp, align 8, !dbg !5307
  store i8 0, i8* %212, align 1, !dbg !5309
  %213 = load i8*, i8** %dp, align 8, !dbg !5310
  %incdec.ptr369 = getelementptr inbounds i8, i8* %213, i32 -1, !dbg !5310
  store i8* %incdec.ptr369, i8** %dp, align 8, !dbg !5310
  store i8 0, i8* %213, align 1, !dbg !5311
  br label %if.end373, !dbg !5312

if.else370:                                       ; preds = %land.lhs.true362, %land.lhs.true356, %land.lhs.true350, %land.lhs.true344, %land.lhs.true338, %for.body332
  %214 = load i8*, i8** %dp, align 8, !dbg !5313
  %incdec.ptr371 = getelementptr inbounds i8, i8* %214, i32 -1, !dbg !5313
  store i8* %incdec.ptr371, i8** %dp, align 8, !dbg !5313
  store i8 -1, i8* %214, align 1, !dbg !5315
  %215 = load i8*, i8** %dp, align 8, !dbg !5316
  %incdec.ptr372 = getelementptr inbounds i8, i8* %215, i32 -1, !dbg !5316
  store i8* %incdec.ptr372, i8** %dp, align 8, !dbg !5316
  store i8 -1, i8* %215, align 1, !dbg !5317
  br label %if.end373

if.end373:                                        ; preds = %if.else370, %if.then367
  %216 = load i8*, i8** %sp, align 8, !dbg !5318
  %incdec.ptr374 = getelementptr inbounds i8, i8* %216, i32 -1, !dbg !5318
  store i8* %incdec.ptr374, i8** %sp, align 8, !dbg !5318
  %217 = load i8, i8* %216, align 1, !dbg !5319
  %218 = load i8*, i8** %dp, align 8, !dbg !5320
  %incdec.ptr375 = getelementptr inbounds i8, i8* %218, i32 -1, !dbg !5320
  store i8* %incdec.ptr375, i8** %dp, align 8, !dbg !5320
  store i8 %217, i8* %218, align 1, !dbg !5321
  %219 = load i8*, i8** %sp, align 8, !dbg !5322
  %incdec.ptr376 = getelementptr inbounds i8, i8* %219, i32 -1, !dbg !5322
  store i8* %incdec.ptr376, i8** %sp, align 8, !dbg !5322
  %220 = load i8, i8* %219, align 1, !dbg !5323
  %221 = load i8*, i8** %dp, align 8, !dbg !5324
  %incdec.ptr377 = getelementptr inbounds i8, i8* %221, i32 -1, !dbg !5324
  store i8* %incdec.ptr377, i8** %dp, align 8, !dbg !5324
  store i8 %220, i8* %221, align 1, !dbg !5325
  %222 = load i8*, i8** %sp, align 8, !dbg !5326
  %incdec.ptr378 = getelementptr inbounds i8, i8* %222, i32 -1, !dbg !5326
  store i8* %incdec.ptr378, i8** %sp, align 8, !dbg !5326
  %223 = load i8, i8* %222, align 1, !dbg !5327
  %224 = load i8*, i8** %dp, align 8, !dbg !5328
  %incdec.ptr379 = getelementptr inbounds i8, i8* %224, i32 -1, !dbg !5328
  store i8* %incdec.ptr379, i8** %dp, align 8, !dbg !5328
  store i8 %223, i8* %224, align 1, !dbg !5329
  %225 = load i8*, i8** %sp, align 8, !dbg !5330
  %incdec.ptr380 = getelementptr inbounds i8, i8* %225, i32 -1, !dbg !5330
  store i8* %incdec.ptr380, i8** %sp, align 8, !dbg !5330
  %226 = load i8, i8* %225, align 1, !dbg !5331
  %227 = load i8*, i8** %dp, align 8, !dbg !5332
  %incdec.ptr381 = getelementptr inbounds i8, i8* %227, i32 -1, !dbg !5332
  store i8* %incdec.ptr381, i8** %dp, align 8, !dbg !5332
  store i8 %226, i8* %227, align 1, !dbg !5333
  %228 = load i8*, i8** %sp, align 8, !dbg !5334
  %incdec.ptr382 = getelementptr inbounds i8, i8* %228, i32 -1, !dbg !5334
  store i8* %incdec.ptr382, i8** %sp, align 8, !dbg !5334
  %229 = load i8, i8* %228, align 1, !dbg !5335
  %230 = load i8*, i8** %dp, align 8, !dbg !5336
  %incdec.ptr383 = getelementptr inbounds i8, i8* %230, i32 -1, !dbg !5336
  store i8* %incdec.ptr383, i8** %dp, align 8, !dbg !5336
  store i8 %229, i8* %230, align 1, !dbg !5337
  %231 = load i8*, i8** %sp, align 8, !dbg !5338
  %incdec.ptr384 = getelementptr inbounds i8, i8* %231, i32 -1, !dbg !5338
  store i8* %incdec.ptr384, i8** %sp, align 8, !dbg !5338
  %232 = load i8, i8* %231, align 1, !dbg !5339
  %233 = load i8*, i8** %dp, align 8, !dbg !5340
  %incdec.ptr385 = getelementptr inbounds i8, i8* %233, i32 -1, !dbg !5340
  store i8* %incdec.ptr385, i8** %dp, align 8, !dbg !5340
  store i8 %232, i8* %233, align 1, !dbg !5341
  br label %for.inc386, !dbg !5342

for.inc386:                                       ; preds = %if.end373
  %234 = load i32, i32* %i, align 4, !dbg !5343
  %inc387 = add i32 %234, 1, !dbg !5343
  store i32 %inc387, i32* %i, align 4, !dbg !5343
  br label %for.cond329, !dbg !5344, !llvm.loop !5345

for.end388:                                       ; preds = %for.cond329
  br label %if.end389, !dbg !5347

if.end389:                                        ; preds = %for.end388, %if.else289
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %for.end288
  %235 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5348
  %color_type391 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %235, i32 0, i32 2, !dbg !5349
  store i8 6, i8* %color_type391, align 8, !dbg !5350
  %236 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5351
  %channels392 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %236, i32 0, i32 4, !dbg !5352
  store i8 4, i8* %channels392, align 2, !dbg !5353
  %237 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5354
  %bit_depth393 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %237, i32 0, i32 3, !dbg !5355
  %238 = load i8, i8* %bit_depth393, align 1, !dbg !5355
  %conv394 = zext i8 %238 to i32, !dbg !5354
  %shl395 = shl i32 %conv394, 2, !dbg !5356
  %conv396 = trunc i32 %shl395 to i8, !dbg !5357
  %239 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5358
  %pixel_depth397 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %239, i32 0, i32 5, !dbg !5359
  store i8 %conv396, i8* %pixel_depth397, align 1, !dbg !5360
  %240 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5361
  %pixel_depth398 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %240, i32 0, i32 5, !dbg !5361
  %241 = load i8, i8* %pixel_depth398, align 1, !dbg !5361
  %conv399 = zext i8 %241 to i32, !dbg !5361
  %cmp400 = icmp sge i32 %conv399, 8, !dbg !5361
  br i1 %cmp400, label %cond.true402, label %cond.false408, !dbg !5361

cond.true402:                                     ; preds = %if.end390
  %242 = load i32, i32* %row_width, align 4, !dbg !5361
  %conv403 = zext i32 %242 to i64, !dbg !5361
  %243 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5361
  %pixel_depth404 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %243, i32 0, i32 5, !dbg !5361
  %244 = load i8, i8* %pixel_depth404, align 1, !dbg !5361
  %conv405 = zext i8 %244 to i64, !dbg !5361
  %shr406 = lshr i64 %conv405, 3, !dbg !5361
  %mul407 = mul i64 %conv403, %shr406, !dbg !5361
  br label %cond.end415, !dbg !5361

cond.false408:                                    ; preds = %if.end390
  %245 = load i32, i32* %row_width, align 4, !dbg !5361
  %conv409 = zext i32 %245 to i64, !dbg !5361
  %246 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5361
  %pixel_depth410 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %246, i32 0, i32 5, !dbg !5361
  %247 = load i8, i8* %pixel_depth410, align 1, !dbg !5361
  %conv411 = zext i8 %247 to i64, !dbg !5361
  %mul412 = mul i64 %conv409, %conv411, !dbg !5361
  %add413 = add i64 %mul412, 7, !dbg !5361
  %shr414 = lshr i64 %add413, 3, !dbg !5361
  br label %cond.end415, !dbg !5361

cond.end415:                                      ; preds = %cond.false408, %cond.true402
  %cond416 = phi i64 [ %mul407, %cond.true402 ], [ %shr414, %cond.false408 ], !dbg !5361
  %248 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5362
  %rowbytes417 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %248, i32 0, i32 1, !dbg !5363
  store i64 %cond416, i64* %rowbytes417, align 8, !dbg !5364
  br label %if.end418, !dbg !5365

if.end418:                                        ; preds = %cond.end415, %land.lhs.true228, %if.else223
  br label %if.end419

if.end419:                                        ; preds = %if.end418, %if.end222
  ret void, !dbg !5366
}

declare dso_local void @png_do_strip_channel(%struct.png_row_info_struct*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_do_rgb_to_gray(%struct.png_struct_def* %png_ptr, %struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !5367 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %rgb_error = alloca i32, align 4
  %rc = alloca i32, align 4
  %gc = alloca i32, align 4
  %bc = alloca i32, align 4
  %row_width = alloca i32, align 4
  %have_alpha = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %i = alloca i32, align 4
  %red = alloca i8, align 1
  %green = alloca i8, align 1
  %blue = alloca i8, align 1
  %sp67 = alloca i8*, align 8
  %dp68 = alloca i8*, align 8
  %i69 = alloca i32, align 4
  %red74 = alloca i8, align 1
  %green76 = alloca i8, align 1
  %blue78 = alloca i8, align 1
  %sp121 = alloca i8*, align 8
  %dp122 = alloca i8*, align 8
  %i123 = alloca i32, align 4
  %red128 = alloca i16, align 2
  %green129 = alloca i16, align 2
  %blue130 = alloca i16, align 2
  %w = alloca i16, align 2
  %red_1 = alloca i16, align 2
  %green_1 = alloca i16, align 2
  %blue_1 = alloca i16, align 2
  %gray16 = alloca i16, align 2
  %sp253 = alloca i8*, align 8
  %dp254 = alloca i8*, align 8
  %i255 = alloca i32, align 4
  %red260 = alloca i16, align 2
  %green261 = alloca i16, align 2
  %blue262 = alloca i16, align 2
  %gray16263 = alloca i16, align 2
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %rgb_error, metadata !5376, metadata !DIExpression()), !dbg !5377
  store i32 0, i32* %rgb_error, align 4, !dbg !5377
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5378
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 2, !dbg !5380
  %1 = load i8, i8* %color_type, align 8, !dbg !5380
  %conv = zext i8 %1 to i32, !dbg !5378
  %and = and i32 %conv, 1, !dbg !5381
  %tobool = icmp ne i32 %and, 0, !dbg !5381
  br i1 %tobool, label %if.end359, label %land.lhs.true, !dbg !5382

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5383
  %color_type1 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !5384
  %3 = load i8, i8* %color_type1, align 8, !dbg !5384
  %conv2 = zext i8 %3 to i32, !dbg !5383
  %and3 = and i32 %conv2, 2, !dbg !5385
  %tobool4 = icmp ne i32 %and3, 0, !dbg !5385
  br i1 %tobool4, label %if.then, label %if.end359, !dbg !5386

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5387, metadata !DIExpression()), !dbg !5390
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5391
  %rgb_to_gray_red_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 123, !dbg !5392
  %5 = load i16, i16* %rgb_to_gray_red_coeff, align 4, !dbg !5392
  %conv5 = zext i16 %5 to i32, !dbg !5391
  store i32 %conv5, i32* %rc, align 4, !dbg !5390
  call void @llvm.dbg.declare(metadata i32* %gc, metadata !5393, metadata !DIExpression()), !dbg !5394
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5395
  %rgb_to_gray_green_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 124, !dbg !5396
  %7 = load i16, i16* %rgb_to_gray_green_coeff, align 2, !dbg !5396
  %conv6 = zext i16 %7 to i32, !dbg !5395
  store i32 %conv6, i32* %gc, align 4, !dbg !5394
  call void @llvm.dbg.declare(metadata i32* %bc, metadata !5397, metadata !DIExpression()), !dbg !5398
  %8 = load i32, i32* %rc, align 4, !dbg !5399
  %sub = sub i32 32768, %8, !dbg !5400
  %9 = load i32, i32* %gc, align 4, !dbg !5401
  %sub7 = sub i32 %sub, %9, !dbg !5402
  store i32 %sub7, i32* %bc, align 4, !dbg !5398
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !5403, metadata !DIExpression()), !dbg !5404
  %10 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5405
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %10, i32 0, i32 0, !dbg !5406
  %11 = load i32, i32* %width, align 8, !dbg !5406
  store i32 %11, i32* %row_width, align 4, !dbg !5404
  call void @llvm.dbg.declare(metadata i32* %have_alpha, metadata !5407, metadata !DIExpression()), !dbg !5409
  %12 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5410
  %color_type8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %12, i32 0, i32 2, !dbg !5411
  %13 = load i8, i8* %color_type8, align 8, !dbg !5411
  %conv9 = zext i8 %13 to i32, !dbg !5410
  %and10 = and i32 %conv9, 4, !dbg !5412
  %cmp = icmp ne i32 %and10, 0, !dbg !5413
  %conv11 = zext i1 %cmp to i32, !dbg !5413
  store i32 %conv11, i32* %have_alpha, align 4, !dbg !5409
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5414
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 3, !dbg !5416
  %15 = load i8, i8* %bit_depth, align 1, !dbg !5416
  %conv12 = zext i8 %15 to i32, !dbg !5414
  %cmp13 = icmp eq i32 %conv12, 8, !dbg !5417
  br i1 %cmp13, label %if.then15, label %if.else114, !dbg !5418

if.then15:                                        ; preds = %if.then
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5419
  %gamma_from_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 79, !dbg !5422
  %17 = load i8*, i8** %gamma_from_1, align 8, !dbg !5422
  %cmp16 = icmp ne i8* %17, null, !dbg !5423
  br i1 %cmp16, label %land.lhs.true18, label %if.else66, !dbg !5424

land.lhs.true18:                                  ; preds = %if.then15
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5425
  %gamma_to_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 80, !dbg !5426
  %19 = load i8*, i8** %gamma_to_1, align 8, !dbg !5426
  %cmp19 = icmp ne i8* %19, null, !dbg !5427
  br i1 %cmp19, label %if.then21, label %if.else66, !dbg !5428

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !5429, metadata !DIExpression()), !dbg !5431
  %20 = load i8*, i8** %row.addr, align 8, !dbg !5432
  store i8* %20, i8** %sp, align 8, !dbg !5431
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !5433, metadata !DIExpression()), !dbg !5434
  %21 = load i8*, i8** %row.addr, align 8, !dbg !5435
  store i8* %21, i8** %dp, align 8, !dbg !5434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5436, metadata !DIExpression()), !dbg !5437
  store i32 0, i32* %i, align 4, !dbg !5438
  br label %for.cond, !dbg !5440

for.cond:                                         ; preds = %for.inc, %if.then21
  %22 = load i32, i32* %i, align 4, !dbg !5441
  %23 = load i32, i32* %row_width, align 4, !dbg !5443
  %cmp22 = icmp ult i32 %22, %23, !dbg !5444
  br i1 %cmp22, label %for.body, label %for.end, !dbg !5445

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %red, metadata !5446, metadata !DIExpression()), !dbg !5448
  %24 = load i8*, i8** %sp, align 8, !dbg !5449
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !5449
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !5449
  %25 = load i8, i8* %24, align 1, !dbg !5450
  store i8 %25, i8* %red, align 1, !dbg !5448
  call void @llvm.dbg.declare(metadata i8* %green, metadata !5451, metadata !DIExpression()), !dbg !5452
  %26 = load i8*, i8** %sp, align 8, !dbg !5453
  %incdec.ptr24 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !5453
  store i8* %incdec.ptr24, i8** %sp, align 8, !dbg !5453
  %27 = load i8, i8* %26, align 1, !dbg !5454
  store i8 %27, i8* %green, align 1, !dbg !5452
  call void @llvm.dbg.declare(metadata i8* %blue, metadata !5455, metadata !DIExpression()), !dbg !5456
  %28 = load i8*, i8** %sp, align 8, !dbg !5457
  %incdec.ptr25 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !5457
  store i8* %incdec.ptr25, i8** %sp, align 8, !dbg !5457
  %29 = load i8, i8* %28, align 1, !dbg !5458
  store i8 %29, i8* %blue, align 1, !dbg !5456
  %30 = load i8, i8* %red, align 1, !dbg !5459
  %conv26 = zext i8 %30 to i32, !dbg !5459
  %31 = load i8, i8* %green, align 1, !dbg !5461
  %conv27 = zext i8 %31 to i32, !dbg !5461
  %cmp28 = icmp ne i32 %conv26, %conv27, !dbg !5462
  br i1 %cmp28, label %if.then34, label %lor.lhs.false, !dbg !5463

lor.lhs.false:                                    ; preds = %for.body
  %32 = load i8, i8* %red, align 1, !dbg !5464
  %conv30 = zext i8 %32 to i32, !dbg !5464
  %33 = load i8, i8* %blue, align 1, !dbg !5465
  %conv31 = zext i8 %33 to i32, !dbg !5465
  %cmp32 = icmp ne i32 %conv30, %conv31, !dbg !5466
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !5467

if.then34:                                        ; preds = %lor.lhs.false, %for.body
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5468
  %gamma_to_135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 80, !dbg !5470
  %35 = load i8*, i8** %gamma_to_135, align 8, !dbg !5470
  %36 = load i8, i8* %red, align 1, !dbg !5471
  %idxprom = zext i8 %36 to i64, !dbg !5468
  %arrayidx = getelementptr inbounds i8, i8* %35, i64 %idxprom, !dbg !5468
  %37 = load i8, i8* %arrayidx, align 1, !dbg !5468
  store i8 %37, i8* %red, align 1, !dbg !5472
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5473
  %gamma_to_136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 80, !dbg !5474
  %39 = load i8*, i8** %gamma_to_136, align 8, !dbg !5474
  %40 = load i8, i8* %green, align 1, !dbg !5475
  %idxprom37 = zext i8 %40 to i64, !dbg !5473
  %arrayidx38 = getelementptr inbounds i8, i8* %39, i64 %idxprom37, !dbg !5473
  %41 = load i8, i8* %arrayidx38, align 1, !dbg !5473
  store i8 %41, i8* %green, align 1, !dbg !5476
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5477
  %gamma_to_139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 80, !dbg !5478
  %43 = load i8*, i8** %gamma_to_139, align 8, !dbg !5478
  %44 = load i8, i8* %blue, align 1, !dbg !5479
  %idxprom40 = zext i8 %44 to i64, !dbg !5477
  %arrayidx41 = getelementptr inbounds i8, i8* %43, i64 %idxprom40, !dbg !5477
  %45 = load i8, i8* %arrayidx41, align 1, !dbg !5477
  store i8 %45, i8* %blue, align 1, !dbg !5480
  %46 = load i32, i32* %rgb_error, align 4, !dbg !5481
  %or = or i32 %46, 1, !dbg !5481
  store i32 %or, i32* %rgb_error, align 4, !dbg !5481
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5482
  %gamma_from_142 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 79, !dbg !5483
  %48 = load i8*, i8** %gamma_from_142, align 8, !dbg !5483
  %49 = load i32, i32* %rc, align 4, !dbg !5484
  %50 = load i8, i8* %red, align 1, !dbg !5485
  %conv43 = zext i8 %50 to i32, !dbg !5485
  %mul = mul i32 %49, %conv43, !dbg !5486
  %51 = load i32, i32* %gc, align 4, !dbg !5487
  %52 = load i8, i8* %green, align 1, !dbg !5488
  %conv44 = zext i8 %52 to i32, !dbg !5488
  %mul45 = mul i32 %51, %conv44, !dbg !5489
  %add = add i32 %mul, %mul45, !dbg !5490
  %53 = load i32, i32* %bc, align 4, !dbg !5491
  %54 = load i8, i8* %blue, align 1, !dbg !5492
  %conv46 = zext i8 %54 to i32, !dbg !5492
  %mul47 = mul i32 %53, %conv46, !dbg !5493
  %add48 = add i32 %add, %mul47, !dbg !5494
  %add49 = add i32 %add48, 16384, !dbg !5495
  %shr = lshr i32 %add49, 15, !dbg !5496
  %idxprom50 = zext i32 %shr to i64, !dbg !5482
  %arrayidx51 = getelementptr inbounds i8, i8* %48, i64 %idxprom50, !dbg !5482
  %55 = load i8, i8* %arrayidx51, align 1, !dbg !5482
  %56 = load i8*, i8** %dp, align 8, !dbg !5497
  %incdec.ptr52 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5497
  store i8* %incdec.ptr52, i8** %dp, align 8, !dbg !5497
  store i8 %55, i8* %56, align 1, !dbg !5498
  br label %if.end60, !dbg !5499

if.else:                                          ; preds = %lor.lhs.false
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5500
  %gamma_table = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 77, !dbg !5503
  %58 = load i8*, i8** %gamma_table, align 8, !dbg !5503
  %cmp53 = icmp ne i8* %58, null, !dbg !5504
  br i1 %cmp53, label %if.then55, label %if.end, !dbg !5505

if.then55:                                        ; preds = %if.else
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5506
  %gamma_table56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 77, !dbg !5507
  %60 = load i8*, i8** %gamma_table56, align 8, !dbg !5507
  %61 = load i8, i8* %red, align 1, !dbg !5508
  %idxprom57 = zext i8 %61 to i64, !dbg !5506
  %arrayidx58 = getelementptr inbounds i8, i8* %60, i64 %idxprom57, !dbg !5506
  %62 = load i8, i8* %arrayidx58, align 1, !dbg !5506
  store i8 %62, i8* %red, align 1, !dbg !5509
  br label %if.end, !dbg !5510

if.end:                                           ; preds = %if.then55, %if.else
  %63 = load i8, i8* %red, align 1, !dbg !5511
  %64 = load i8*, i8** %dp, align 8, !dbg !5512
  %incdec.ptr59 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !5512
  store i8* %incdec.ptr59, i8** %dp, align 8, !dbg !5512
  store i8 %63, i8* %64, align 1, !dbg !5513
  br label %if.end60

if.end60:                                         ; preds = %if.end, %if.then34
  %65 = load i32, i32* %have_alpha, align 4, !dbg !5514
  %tobool61 = icmp ne i32 %65, 0, !dbg !5514
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !5516

if.then62:                                        ; preds = %if.end60
  %66 = load i8*, i8** %sp, align 8, !dbg !5517
  %incdec.ptr63 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !5517
  store i8* %incdec.ptr63, i8** %sp, align 8, !dbg !5517
  %67 = load i8, i8* %66, align 1, !dbg !5518
  %68 = load i8*, i8** %dp, align 8, !dbg !5519
  %incdec.ptr64 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !5519
  store i8* %incdec.ptr64, i8** %dp, align 8, !dbg !5519
  store i8 %67, i8* %68, align 1, !dbg !5520
  br label %if.end65, !dbg !5521

if.end65:                                         ; preds = %if.then62, %if.end60
  br label %for.inc, !dbg !5522

for.inc:                                          ; preds = %if.end65
  %69 = load i32, i32* %i, align 4, !dbg !5523
  %inc = add i32 %69, 1, !dbg !5523
  store i32 %inc, i32* %i, align 4, !dbg !5523
  br label %for.cond, !dbg !5524, !llvm.loop !5525

for.end:                                          ; preds = %for.cond
  br label %if.end113, !dbg !5527

if.else66:                                        ; preds = %land.lhs.true18, %if.then15
  call void @llvm.dbg.declare(metadata i8** %sp67, metadata !5528, metadata !DIExpression()), !dbg !5530
  %70 = load i8*, i8** %row.addr, align 8, !dbg !5531
  store i8* %70, i8** %sp67, align 8, !dbg !5530
  call void @llvm.dbg.declare(metadata i8** %dp68, metadata !5532, metadata !DIExpression()), !dbg !5533
  %71 = load i8*, i8** %row.addr, align 8, !dbg !5534
  store i8* %71, i8** %dp68, align 8, !dbg !5533
  call void @llvm.dbg.declare(metadata i32* %i69, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i32 0, i32* %i69, align 4, !dbg !5537
  br label %for.cond70, !dbg !5539

for.cond70:                                       ; preds = %for.inc110, %if.else66
  %72 = load i32, i32* %i69, align 4, !dbg !5540
  %73 = load i32, i32* %row_width, align 4, !dbg !5542
  %cmp71 = icmp ult i32 %72, %73, !dbg !5543
  br i1 %cmp71, label %for.body73, label %for.end112, !dbg !5544

for.body73:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata i8* %red74, metadata !5545, metadata !DIExpression()), !dbg !5547
  %74 = load i8*, i8** %sp67, align 8, !dbg !5548
  %incdec.ptr75 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !5548
  store i8* %incdec.ptr75, i8** %sp67, align 8, !dbg !5548
  %75 = load i8, i8* %74, align 1, !dbg !5549
  store i8 %75, i8* %red74, align 1, !dbg !5547
  call void @llvm.dbg.declare(metadata i8* %green76, metadata !5550, metadata !DIExpression()), !dbg !5551
  %76 = load i8*, i8** %sp67, align 8, !dbg !5552
  %incdec.ptr77 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !5552
  store i8* %incdec.ptr77, i8** %sp67, align 8, !dbg !5552
  %77 = load i8, i8* %76, align 1, !dbg !5553
  store i8 %77, i8* %green76, align 1, !dbg !5551
  call void @llvm.dbg.declare(metadata i8* %blue78, metadata !5554, metadata !DIExpression()), !dbg !5555
  %78 = load i8*, i8** %sp67, align 8, !dbg !5556
  %incdec.ptr79 = getelementptr inbounds i8, i8* %78, i32 1, !dbg !5556
  store i8* %incdec.ptr79, i8** %sp67, align 8, !dbg !5556
  %79 = load i8, i8* %78, align 1, !dbg !5557
  store i8 %79, i8* %blue78, align 1, !dbg !5555
  %80 = load i8, i8* %red74, align 1, !dbg !5558
  %conv80 = zext i8 %80 to i32, !dbg !5558
  %81 = load i8, i8* %green76, align 1, !dbg !5560
  %conv81 = zext i8 %81 to i32, !dbg !5560
  %cmp82 = icmp ne i32 %conv80, %conv81, !dbg !5561
  br i1 %cmp82, label %if.then89, label %lor.lhs.false84, !dbg !5562

lor.lhs.false84:                                  ; preds = %for.body73
  %82 = load i8, i8* %red74, align 1, !dbg !5563
  %conv85 = zext i8 %82 to i32, !dbg !5563
  %83 = load i8, i8* %blue78, align 1, !dbg !5564
  %conv86 = zext i8 %83 to i32, !dbg !5564
  %cmp87 = icmp ne i32 %conv85, %conv86, !dbg !5565
  br i1 %cmp87, label %if.then89, label %if.else102, !dbg !5566

if.then89:                                        ; preds = %lor.lhs.false84, %for.body73
  %84 = load i32, i32* %rgb_error, align 4, !dbg !5567
  %or90 = or i32 %84, 1, !dbg !5567
  store i32 %or90, i32* %rgb_error, align 4, !dbg !5567
  %85 = load i32, i32* %rc, align 4, !dbg !5569
  %86 = load i8, i8* %red74, align 1, !dbg !5570
  %conv91 = zext i8 %86 to i32, !dbg !5570
  %mul92 = mul i32 %85, %conv91, !dbg !5571
  %87 = load i32, i32* %gc, align 4, !dbg !5572
  %88 = load i8, i8* %green76, align 1, !dbg !5573
  %conv93 = zext i8 %88 to i32, !dbg !5573
  %mul94 = mul i32 %87, %conv93, !dbg !5574
  %add95 = add i32 %mul92, %mul94, !dbg !5575
  %89 = load i32, i32* %bc, align 4, !dbg !5576
  %90 = load i8, i8* %blue78, align 1, !dbg !5577
  %conv96 = zext i8 %90 to i32, !dbg !5577
  %mul97 = mul i32 %89, %conv96, !dbg !5578
  %add98 = add i32 %add95, %mul97, !dbg !5579
  %shr99 = lshr i32 %add98, 15, !dbg !5580
  %conv100 = trunc i32 %shr99 to i8, !dbg !5581
  %91 = load i8*, i8** %dp68, align 8, !dbg !5582
  %incdec.ptr101 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !5582
  store i8* %incdec.ptr101, i8** %dp68, align 8, !dbg !5582
  store i8 %conv100, i8* %91, align 1, !dbg !5583
  br label %if.end104, !dbg !5584

if.else102:                                       ; preds = %lor.lhs.false84
  %92 = load i8, i8* %red74, align 1, !dbg !5585
  %93 = load i8*, i8** %dp68, align 8, !dbg !5586
  %incdec.ptr103 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !5586
  store i8* %incdec.ptr103, i8** %dp68, align 8, !dbg !5586
  store i8 %92, i8* %93, align 1, !dbg !5587
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then89
  %94 = load i32, i32* %have_alpha, align 4, !dbg !5588
  %tobool105 = icmp ne i32 %94, 0, !dbg !5588
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !5590

if.then106:                                       ; preds = %if.end104
  %95 = load i8*, i8** %sp67, align 8, !dbg !5591
  %incdec.ptr107 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !5591
  store i8* %incdec.ptr107, i8** %sp67, align 8, !dbg !5591
  %96 = load i8, i8* %95, align 1, !dbg !5592
  %97 = load i8*, i8** %dp68, align 8, !dbg !5593
  %incdec.ptr108 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !5593
  store i8* %incdec.ptr108, i8** %dp68, align 8, !dbg !5593
  store i8 %96, i8* %97, align 1, !dbg !5594
  br label %if.end109, !dbg !5595

if.end109:                                        ; preds = %if.then106, %if.end104
  br label %for.inc110, !dbg !5596

for.inc110:                                       ; preds = %if.end109
  %98 = load i32, i32* %i69, align 4, !dbg !5597
  %inc111 = add i32 %98, 1, !dbg !5597
  store i32 %inc111, i32* %i69, align 4, !dbg !5597
  br label %for.cond70, !dbg !5598, !llvm.loop !5599

for.end112:                                       ; preds = %for.cond70
  br label %if.end113

if.end113:                                        ; preds = %for.end112, %for.end
  br label %if.end328, !dbg !5601

if.else114:                                       ; preds = %if.then
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5602
  %gamma_16_to_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %99, i32 0, i32 82, !dbg !5605
  %100 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !5605
  %cmp115 = icmp ne i16** %100, null, !dbg !5606
  br i1 %cmp115, label %land.lhs.true117, label %if.else252, !dbg !5607

land.lhs.true117:                                 ; preds = %if.else114
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5608
  %gamma_16_from_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 81, !dbg !5609
  %102 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !5609
  %cmp118 = icmp ne i16** %102, null, !dbg !5610
  br i1 %cmp118, label %if.then120, label %if.else252, !dbg !5611

if.then120:                                       ; preds = %land.lhs.true117
  call void @llvm.dbg.declare(metadata i8** %sp121, metadata !5612, metadata !DIExpression()), !dbg !5614
  %103 = load i8*, i8** %row.addr, align 8, !dbg !5615
  store i8* %103, i8** %sp121, align 8, !dbg !5614
  call void @llvm.dbg.declare(metadata i8** %dp122, metadata !5616, metadata !DIExpression()), !dbg !5617
  %104 = load i8*, i8** %row.addr, align 8, !dbg !5618
  store i8* %104, i8** %dp122, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %i123, metadata !5619, metadata !DIExpression()), !dbg !5620
  store i32 0, i32* %i123, align 4, !dbg !5621
  br label %for.cond124, !dbg !5623

for.cond124:                                      ; preds = %for.inc249, %if.then120
  %105 = load i32, i32* %i123, align 4, !dbg !5624
  %106 = load i32, i32* %row_width, align 4, !dbg !5626
  %cmp125 = icmp ult i32 %105, %106, !dbg !5627
  br i1 %cmp125, label %for.body127, label %for.end251, !dbg !5628

for.body127:                                      ; preds = %for.cond124
  call void @llvm.dbg.declare(metadata i16* %red128, metadata !5629, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.declare(metadata i16* %green129, metadata !5632, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.declare(metadata i16* %blue130, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata i16* %w, metadata !5636, metadata !DIExpression()), !dbg !5637
  %107 = load i8*, i8** %sp121, align 8, !dbg !5638
  %108 = load i8, i8* %107, align 1, !dbg !5639
  %conv131 = zext i8 %108 to i32, !dbg !5640
  %shl = shl i32 %conv131, 8, !dbg !5641
  %109 = load i8*, i8** %sp121, align 8, !dbg !5642
  %add.ptr = getelementptr inbounds i8, i8* %109, i64 1, !dbg !5643
  %110 = load i8, i8* %add.ptr, align 1, !dbg !5644
  %conv132 = zext i8 %110 to i32, !dbg !5644
  %or133 = or i32 %shl, %conv132, !dbg !5645
  %conv134 = trunc i32 %or133 to i16, !dbg !5646
  store i16 %conv134, i16* %red128, align 2, !dbg !5647
  %111 = load i8*, i8** %sp121, align 8, !dbg !5648
  %add.ptr135 = getelementptr inbounds i8, i8* %111, i64 2, !dbg !5648
  store i8* %add.ptr135, i8** %sp121, align 8, !dbg !5648
  %112 = load i8*, i8** %sp121, align 8, !dbg !5649
  %113 = load i8, i8* %112, align 1, !dbg !5650
  %conv136 = zext i8 %113 to i32, !dbg !5651
  %shl137 = shl i32 %conv136, 8, !dbg !5652
  %114 = load i8*, i8** %sp121, align 8, !dbg !5653
  %add.ptr138 = getelementptr inbounds i8, i8* %114, i64 1, !dbg !5654
  %115 = load i8, i8* %add.ptr138, align 1, !dbg !5655
  %conv139 = zext i8 %115 to i32, !dbg !5655
  %or140 = or i32 %shl137, %conv139, !dbg !5656
  %conv141 = trunc i32 %or140 to i16, !dbg !5657
  store i16 %conv141, i16* %green129, align 2, !dbg !5658
  %116 = load i8*, i8** %sp121, align 8, !dbg !5659
  %add.ptr142 = getelementptr inbounds i8, i8* %116, i64 2, !dbg !5659
  store i8* %add.ptr142, i8** %sp121, align 8, !dbg !5659
  %117 = load i8*, i8** %sp121, align 8, !dbg !5660
  %118 = load i8, i8* %117, align 1, !dbg !5661
  %conv143 = zext i8 %118 to i32, !dbg !5662
  %shl144 = shl i32 %conv143, 8, !dbg !5663
  %119 = load i8*, i8** %sp121, align 8, !dbg !5664
  %add.ptr145 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !5665
  %120 = load i8, i8* %add.ptr145, align 1, !dbg !5666
  %conv146 = zext i8 %120 to i32, !dbg !5666
  %or147 = or i32 %shl144, %conv146, !dbg !5667
  %conv148 = trunc i32 %or147 to i16, !dbg !5668
  store i16 %conv148, i16* %blue130, align 2, !dbg !5669
  %121 = load i8*, i8** %sp121, align 8, !dbg !5670
  %add.ptr149 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !5670
  store i8* %add.ptr149, i8** %sp121, align 8, !dbg !5670
  %122 = load i16, i16* %red128, align 2, !dbg !5671
  %conv150 = zext i16 %122 to i32, !dbg !5671
  %123 = load i16, i16* %green129, align 2, !dbg !5673
  %conv151 = zext i16 %123 to i32, !dbg !5673
  %cmp152 = icmp eq i32 %conv150, %conv151, !dbg !5674
  br i1 %cmp152, label %land.lhs.true154, label %if.else175, !dbg !5675

land.lhs.true154:                                 ; preds = %for.body127
  %124 = load i16, i16* %red128, align 2, !dbg !5676
  %conv155 = zext i16 %124 to i32, !dbg !5676
  %125 = load i16, i16* %blue130, align 2, !dbg !5677
  %conv156 = zext i16 %125 to i32, !dbg !5677
  %cmp157 = icmp eq i32 %conv155, %conv156, !dbg !5678
  br i1 %cmp157, label %if.then159, label %if.else175, !dbg !5679

if.then159:                                       ; preds = %land.lhs.true154
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5680
  %gamma_16_table = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %126, i32 0, i32 78, !dbg !5683
  %127 = load i16**, i16*** %gamma_16_table, align 8, !dbg !5683
  %cmp160 = icmp ne i16** %127, null, !dbg !5684
  br i1 %cmp160, label %if.then162, label %if.else173, !dbg !5685

if.then162:                                       ; preds = %if.then159
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5686
  %gamma_16_table163 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 78, !dbg !5687
  %129 = load i16**, i16*** %gamma_16_table163, align 8, !dbg !5687
  %130 = load i16, i16* %red128, align 2, !dbg !5688
  %conv164 = zext i16 %130 to i32, !dbg !5688
  %and165 = and i32 %conv164, 255, !dbg !5689
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5690
  %gamma_shift = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 74, !dbg !5691
  %132 = load i32, i32* %gamma_shift, align 8, !dbg !5691
  %shr166 = ashr i32 %and165, %132, !dbg !5692
  %idxprom167 = sext i32 %shr166 to i64, !dbg !5686
  %arrayidx168 = getelementptr inbounds i16*, i16** %129, i64 %idxprom167, !dbg !5686
  %133 = load i16*, i16** %arrayidx168, align 8, !dbg !5686
  %134 = load i16, i16* %red128, align 2, !dbg !5693
  %conv169 = zext i16 %134 to i32, !dbg !5693
  %shr170 = ashr i32 %conv169, 8, !dbg !5694
  %idxprom171 = sext i32 %shr170 to i64, !dbg !5686
  %arrayidx172 = getelementptr inbounds i16, i16* %133, i64 %idxprom171, !dbg !5686
  %135 = load i16, i16* %arrayidx172, align 2, !dbg !5686
  store i16 %135, i16* %w, align 2, !dbg !5695
  br label %if.end174, !dbg !5696

if.else173:                                       ; preds = %if.then159
  %136 = load i16, i16* %red128, align 2, !dbg !5697
  store i16 %136, i16* %w, align 2, !dbg !5698
  br label %if.end174

if.end174:                                        ; preds = %if.else173, %if.then162
  br label %if.end232, !dbg !5699

if.else175:                                       ; preds = %land.lhs.true154, %for.body127
  call void @llvm.dbg.declare(metadata i16* %red_1, metadata !5700, metadata !DIExpression()), !dbg !5702
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5703
  %gamma_16_to_1176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 82, !dbg !5704
  %138 = load i16**, i16*** %gamma_16_to_1176, align 8, !dbg !5704
  %139 = load i16, i16* %red128, align 2, !dbg !5705
  %conv177 = zext i16 %139 to i32, !dbg !5705
  %and178 = and i32 %conv177, 255, !dbg !5706
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5707
  %gamma_shift179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 74, !dbg !5708
  %141 = load i32, i32* %gamma_shift179, align 8, !dbg !5708
  %shr180 = ashr i32 %and178, %141, !dbg !5709
  %idxprom181 = sext i32 %shr180 to i64, !dbg !5703
  %arrayidx182 = getelementptr inbounds i16*, i16** %138, i64 %idxprom181, !dbg !5703
  %142 = load i16*, i16** %arrayidx182, align 8, !dbg !5703
  %143 = load i16, i16* %red128, align 2, !dbg !5710
  %conv183 = zext i16 %143 to i32, !dbg !5710
  %shr184 = ashr i32 %conv183, 8, !dbg !5711
  %idxprom185 = sext i32 %shr184 to i64, !dbg !5703
  %arrayidx186 = getelementptr inbounds i16, i16* %142, i64 %idxprom185, !dbg !5703
  %144 = load i16, i16* %arrayidx186, align 2, !dbg !5703
  store i16 %144, i16* %red_1, align 2, !dbg !5702
  call void @llvm.dbg.declare(metadata i16* %green_1, metadata !5712, metadata !DIExpression()), !dbg !5713
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5714
  %gamma_16_to_1187 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 82, !dbg !5715
  %146 = load i16**, i16*** %gamma_16_to_1187, align 8, !dbg !5715
  %147 = load i16, i16* %green129, align 2, !dbg !5716
  %conv188 = zext i16 %147 to i32, !dbg !5716
  %and189 = and i32 %conv188, 255, !dbg !5717
  %148 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5718
  %gamma_shift190 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %148, i32 0, i32 74, !dbg !5719
  %149 = load i32, i32* %gamma_shift190, align 8, !dbg !5719
  %shr191 = ashr i32 %and189, %149, !dbg !5720
  %idxprom192 = sext i32 %shr191 to i64, !dbg !5714
  %arrayidx193 = getelementptr inbounds i16*, i16** %146, i64 %idxprom192, !dbg !5714
  %150 = load i16*, i16** %arrayidx193, align 8, !dbg !5714
  %151 = load i16, i16* %green129, align 2, !dbg !5721
  %conv194 = zext i16 %151 to i32, !dbg !5721
  %shr195 = ashr i32 %conv194, 8, !dbg !5722
  %idxprom196 = sext i32 %shr195 to i64, !dbg !5714
  %arrayidx197 = getelementptr inbounds i16, i16* %150, i64 %idxprom196, !dbg !5714
  %152 = load i16, i16* %arrayidx197, align 2, !dbg !5714
  store i16 %152, i16* %green_1, align 2, !dbg !5713
  call void @llvm.dbg.declare(metadata i16* %blue_1, metadata !5723, metadata !DIExpression()), !dbg !5724
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5725
  %gamma_16_to_1198 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %153, i32 0, i32 82, !dbg !5726
  %154 = load i16**, i16*** %gamma_16_to_1198, align 8, !dbg !5726
  %155 = load i16, i16* %blue130, align 2, !dbg !5727
  %conv199 = zext i16 %155 to i32, !dbg !5727
  %and200 = and i32 %conv199, 255, !dbg !5728
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5729
  %gamma_shift201 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %156, i32 0, i32 74, !dbg !5730
  %157 = load i32, i32* %gamma_shift201, align 8, !dbg !5730
  %shr202 = ashr i32 %and200, %157, !dbg !5731
  %idxprom203 = sext i32 %shr202 to i64, !dbg !5725
  %arrayidx204 = getelementptr inbounds i16*, i16** %154, i64 %idxprom203, !dbg !5725
  %158 = load i16*, i16** %arrayidx204, align 8, !dbg !5725
  %159 = load i16, i16* %blue130, align 2, !dbg !5732
  %conv205 = zext i16 %159 to i32, !dbg !5732
  %shr206 = ashr i32 %conv205, 8, !dbg !5733
  %idxprom207 = sext i32 %shr206 to i64, !dbg !5725
  %arrayidx208 = getelementptr inbounds i16, i16* %158, i64 %idxprom207, !dbg !5725
  %160 = load i16, i16* %arrayidx208, align 2, !dbg !5725
  store i16 %160, i16* %blue_1, align 2, !dbg !5724
  call void @llvm.dbg.declare(metadata i16* %gray16, metadata !5734, metadata !DIExpression()), !dbg !5735
  %161 = load i32, i32* %rc, align 4, !dbg !5736
  %162 = load i16, i16* %red_1, align 2, !dbg !5737
  %conv209 = zext i16 %162 to i32, !dbg !5737
  %mul210 = mul i32 %161, %conv209, !dbg !5738
  %163 = load i32, i32* %gc, align 4, !dbg !5739
  %164 = load i16, i16* %green_1, align 2, !dbg !5740
  %conv211 = zext i16 %164 to i32, !dbg !5740
  %mul212 = mul i32 %163, %conv211, !dbg !5741
  %add213 = add i32 %mul210, %mul212, !dbg !5742
  %165 = load i32, i32* %bc, align 4, !dbg !5743
  %166 = load i16, i16* %blue_1, align 2, !dbg !5744
  %conv214 = zext i16 %166 to i32, !dbg !5744
  %mul215 = mul i32 %165, %conv214, !dbg !5745
  %add216 = add i32 %add213, %mul215, !dbg !5746
  %add217 = add i32 %add216, 16384, !dbg !5747
  %shr218 = lshr i32 %add217, 15, !dbg !5748
  %conv219 = trunc i32 %shr218 to i16, !dbg !5749
  store i16 %conv219, i16* %gray16, align 2, !dbg !5735
  %167 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5750
  %gamma_16_from_1220 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %167, i32 0, i32 81, !dbg !5751
  %168 = load i16**, i16*** %gamma_16_from_1220, align 8, !dbg !5751
  %169 = load i16, i16* %gray16, align 2, !dbg !5752
  %conv221 = zext i16 %169 to i32, !dbg !5752
  %and222 = and i32 %conv221, 255, !dbg !5753
  %170 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5754
  %gamma_shift223 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %170, i32 0, i32 74, !dbg !5755
  %171 = load i32, i32* %gamma_shift223, align 8, !dbg !5755
  %shr224 = ashr i32 %and222, %171, !dbg !5756
  %idxprom225 = sext i32 %shr224 to i64, !dbg !5750
  %arrayidx226 = getelementptr inbounds i16*, i16** %168, i64 %idxprom225, !dbg !5750
  %172 = load i16*, i16** %arrayidx226, align 8, !dbg !5750
  %173 = load i16, i16* %gray16, align 2, !dbg !5757
  %conv227 = zext i16 %173 to i32, !dbg !5757
  %shr228 = ashr i32 %conv227, 8, !dbg !5758
  %idxprom229 = sext i32 %shr228 to i64, !dbg !5750
  %arrayidx230 = getelementptr inbounds i16, i16* %172, i64 %idxprom229, !dbg !5750
  %174 = load i16, i16* %arrayidx230, align 2, !dbg !5750
  store i16 %174, i16* %w, align 2, !dbg !5759
  %175 = load i32, i32* %rgb_error, align 4, !dbg !5760
  %or231 = or i32 %175, 1, !dbg !5760
  store i32 %or231, i32* %rgb_error, align 4, !dbg !5760
  br label %if.end232

if.end232:                                        ; preds = %if.else175, %if.end174
  %176 = load i16, i16* %w, align 2, !dbg !5761
  %conv233 = zext i16 %176 to i32, !dbg !5761
  %shr234 = ashr i32 %conv233, 8, !dbg !5762
  %and235 = and i32 %shr234, 255, !dbg !5763
  %conv236 = trunc i32 %and235 to i8, !dbg !5764
  %177 = load i8*, i8** %dp122, align 8, !dbg !5765
  %incdec.ptr237 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !5765
  store i8* %incdec.ptr237, i8** %dp122, align 8, !dbg !5765
  store i8 %conv236, i8* %177, align 1, !dbg !5766
  %178 = load i16, i16* %w, align 2, !dbg !5767
  %conv238 = zext i16 %178 to i32, !dbg !5767
  %and239 = and i32 %conv238, 255, !dbg !5768
  %conv240 = trunc i32 %and239 to i8, !dbg !5769
  %179 = load i8*, i8** %dp122, align 8, !dbg !5770
  %incdec.ptr241 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !5770
  store i8* %incdec.ptr241, i8** %dp122, align 8, !dbg !5770
  store i8 %conv240, i8* %179, align 1, !dbg !5771
  %180 = load i32, i32* %have_alpha, align 4, !dbg !5772
  %tobool242 = icmp ne i32 %180, 0, !dbg !5772
  br i1 %tobool242, label %if.then243, label %if.end248, !dbg !5774

if.then243:                                       ; preds = %if.end232
  %181 = load i8*, i8** %sp121, align 8, !dbg !5775
  %incdec.ptr244 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !5775
  store i8* %incdec.ptr244, i8** %sp121, align 8, !dbg !5775
  %182 = load i8, i8* %181, align 1, !dbg !5777
  %183 = load i8*, i8** %dp122, align 8, !dbg !5778
  %incdec.ptr245 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !5778
  store i8* %incdec.ptr245, i8** %dp122, align 8, !dbg !5778
  store i8 %182, i8* %183, align 1, !dbg !5779
  %184 = load i8*, i8** %sp121, align 8, !dbg !5780
  %incdec.ptr246 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !5780
  store i8* %incdec.ptr246, i8** %sp121, align 8, !dbg !5780
  %185 = load i8, i8* %184, align 1, !dbg !5781
  %186 = load i8*, i8** %dp122, align 8, !dbg !5782
  %incdec.ptr247 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !5782
  store i8* %incdec.ptr247, i8** %dp122, align 8, !dbg !5782
  store i8 %185, i8* %186, align 1, !dbg !5783
  br label %if.end248, !dbg !5784

if.end248:                                        ; preds = %if.then243, %if.end232
  br label %for.inc249, !dbg !5785

for.inc249:                                       ; preds = %if.end248
  %187 = load i32, i32* %i123, align 4, !dbg !5786
  %inc250 = add i32 %187, 1, !dbg !5786
  store i32 %inc250, i32* %i123, align 4, !dbg !5786
  br label %for.cond124, !dbg !5787, !llvm.loop !5788

for.end251:                                       ; preds = %for.cond124
  br label %if.end327, !dbg !5790

if.else252:                                       ; preds = %land.lhs.true117, %if.else114
  call void @llvm.dbg.declare(metadata i8** %sp253, metadata !5791, metadata !DIExpression()), !dbg !5793
  %188 = load i8*, i8** %row.addr, align 8, !dbg !5794
  store i8* %188, i8** %sp253, align 8, !dbg !5793
  call void @llvm.dbg.declare(metadata i8** %dp254, metadata !5795, metadata !DIExpression()), !dbg !5796
  %189 = load i8*, i8** %row.addr, align 8, !dbg !5797
  store i8* %189, i8** %dp254, align 8, !dbg !5796
  call void @llvm.dbg.declare(metadata i32* %i255, metadata !5798, metadata !DIExpression()), !dbg !5799
  store i32 0, i32* %i255, align 4, !dbg !5800
  br label %for.cond256, !dbg !5802

for.cond256:                                      ; preds = %for.inc324, %if.else252
  %190 = load i32, i32* %i255, align 4, !dbg !5803
  %191 = load i32, i32* %row_width, align 4, !dbg !5805
  %cmp257 = icmp ult i32 %190, %191, !dbg !5806
  br i1 %cmp257, label %for.body259, label %for.end326, !dbg !5807

for.body259:                                      ; preds = %for.cond256
  call void @llvm.dbg.declare(metadata i16* %red260, metadata !5808, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.declare(metadata i16* %green261, metadata !5811, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.declare(metadata i16* %blue262, metadata !5813, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata i16* %gray16263, metadata !5815, metadata !DIExpression()), !dbg !5816
  %192 = load i8*, i8** %sp253, align 8, !dbg !5817
  %193 = load i8, i8* %192, align 1, !dbg !5818
  %conv264 = zext i8 %193 to i32, !dbg !5819
  %shl265 = shl i32 %conv264, 8, !dbg !5820
  %194 = load i8*, i8** %sp253, align 8, !dbg !5821
  %add.ptr266 = getelementptr inbounds i8, i8* %194, i64 1, !dbg !5822
  %195 = load i8, i8* %add.ptr266, align 1, !dbg !5823
  %conv267 = zext i8 %195 to i32, !dbg !5823
  %or268 = or i32 %shl265, %conv267, !dbg !5824
  %conv269 = trunc i32 %or268 to i16, !dbg !5825
  store i16 %conv269, i16* %red260, align 2, !dbg !5826
  %196 = load i8*, i8** %sp253, align 8, !dbg !5827
  %add.ptr270 = getelementptr inbounds i8, i8* %196, i64 2, !dbg !5827
  store i8* %add.ptr270, i8** %sp253, align 8, !dbg !5827
  %197 = load i8*, i8** %sp253, align 8, !dbg !5828
  %198 = load i8, i8* %197, align 1, !dbg !5829
  %conv271 = zext i8 %198 to i32, !dbg !5830
  %shl272 = shl i32 %conv271, 8, !dbg !5831
  %199 = load i8*, i8** %sp253, align 8, !dbg !5832
  %add.ptr273 = getelementptr inbounds i8, i8* %199, i64 1, !dbg !5833
  %200 = load i8, i8* %add.ptr273, align 1, !dbg !5834
  %conv274 = zext i8 %200 to i32, !dbg !5834
  %or275 = or i32 %shl272, %conv274, !dbg !5835
  %conv276 = trunc i32 %or275 to i16, !dbg !5836
  store i16 %conv276, i16* %green261, align 2, !dbg !5837
  %201 = load i8*, i8** %sp253, align 8, !dbg !5838
  %add.ptr277 = getelementptr inbounds i8, i8* %201, i64 2, !dbg !5838
  store i8* %add.ptr277, i8** %sp253, align 8, !dbg !5838
  %202 = load i8*, i8** %sp253, align 8, !dbg !5839
  %203 = load i8, i8* %202, align 1, !dbg !5840
  %conv278 = zext i8 %203 to i32, !dbg !5841
  %shl279 = shl i32 %conv278, 8, !dbg !5842
  %204 = load i8*, i8** %sp253, align 8, !dbg !5843
  %add.ptr280 = getelementptr inbounds i8, i8* %204, i64 1, !dbg !5844
  %205 = load i8, i8* %add.ptr280, align 1, !dbg !5845
  %conv281 = zext i8 %205 to i32, !dbg !5845
  %or282 = or i32 %shl279, %conv281, !dbg !5846
  %conv283 = trunc i32 %or282 to i16, !dbg !5847
  store i16 %conv283, i16* %blue262, align 2, !dbg !5848
  %206 = load i8*, i8** %sp253, align 8, !dbg !5849
  %add.ptr284 = getelementptr inbounds i8, i8* %206, i64 2, !dbg !5849
  store i8* %add.ptr284, i8** %sp253, align 8, !dbg !5849
  %207 = load i16, i16* %red260, align 2, !dbg !5850
  %conv285 = zext i16 %207 to i32, !dbg !5850
  %208 = load i16, i16* %green261, align 2, !dbg !5852
  %conv286 = zext i16 %208 to i32, !dbg !5852
  %cmp287 = icmp ne i32 %conv285, %conv286, !dbg !5853
  br i1 %cmp287, label %if.then294, label %lor.lhs.false289, !dbg !5854

lor.lhs.false289:                                 ; preds = %for.body259
  %209 = load i16, i16* %red260, align 2, !dbg !5855
  %conv290 = zext i16 %209 to i32, !dbg !5855
  %210 = load i16, i16* %blue262, align 2, !dbg !5856
  %conv291 = zext i16 %210 to i32, !dbg !5856
  %cmp292 = icmp ne i32 %conv290, %conv291, !dbg !5857
  br i1 %cmp292, label %if.then294, label %if.end296, !dbg !5858

if.then294:                                       ; preds = %lor.lhs.false289, %for.body259
  %211 = load i32, i32* %rgb_error, align 4, !dbg !5859
  %or295 = or i32 %211, 1, !dbg !5859
  store i32 %or295, i32* %rgb_error, align 4, !dbg !5859
  br label %if.end296, !dbg !5860

if.end296:                                        ; preds = %if.then294, %lor.lhs.false289
  %212 = load i32, i32* %rc, align 4, !dbg !5861
  %213 = load i16, i16* %red260, align 2, !dbg !5862
  %conv297 = zext i16 %213 to i32, !dbg !5862
  %mul298 = mul i32 %212, %conv297, !dbg !5863
  %214 = load i32, i32* %gc, align 4, !dbg !5864
  %215 = load i16, i16* %green261, align 2, !dbg !5865
  %conv299 = zext i16 %215 to i32, !dbg !5865
  %mul300 = mul i32 %214, %conv299, !dbg !5866
  %add301 = add i32 %mul298, %mul300, !dbg !5867
  %216 = load i32, i32* %bc, align 4, !dbg !5868
  %217 = load i16, i16* %blue262, align 2, !dbg !5869
  %conv302 = zext i16 %217 to i32, !dbg !5869
  %mul303 = mul i32 %216, %conv302, !dbg !5870
  %add304 = add i32 %add301, %mul303, !dbg !5871
  %add305 = add i32 %add304, 16384, !dbg !5872
  %shr306 = lshr i32 %add305, 15, !dbg !5873
  %conv307 = trunc i32 %shr306 to i16, !dbg !5874
  store i16 %conv307, i16* %gray16263, align 2, !dbg !5875
  %218 = load i16, i16* %gray16263, align 2, !dbg !5876
  %conv308 = zext i16 %218 to i32, !dbg !5876
  %shr309 = ashr i32 %conv308, 8, !dbg !5877
  %and310 = and i32 %shr309, 255, !dbg !5878
  %conv311 = trunc i32 %and310 to i8, !dbg !5879
  %219 = load i8*, i8** %dp254, align 8, !dbg !5880
  %incdec.ptr312 = getelementptr inbounds i8, i8* %219, i32 1, !dbg !5880
  store i8* %incdec.ptr312, i8** %dp254, align 8, !dbg !5880
  store i8 %conv311, i8* %219, align 1, !dbg !5881
  %220 = load i16, i16* %gray16263, align 2, !dbg !5882
  %conv313 = zext i16 %220 to i32, !dbg !5882
  %and314 = and i32 %conv313, 255, !dbg !5883
  %conv315 = trunc i32 %and314 to i8, !dbg !5884
  %221 = load i8*, i8** %dp254, align 8, !dbg !5885
  %incdec.ptr316 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !5885
  store i8* %incdec.ptr316, i8** %dp254, align 8, !dbg !5885
  store i8 %conv315, i8* %221, align 1, !dbg !5886
  %222 = load i32, i32* %have_alpha, align 4, !dbg !5887
  %tobool317 = icmp ne i32 %222, 0, !dbg !5887
  br i1 %tobool317, label %if.then318, label %if.end323, !dbg !5889

if.then318:                                       ; preds = %if.end296
  %223 = load i8*, i8** %sp253, align 8, !dbg !5890
  %incdec.ptr319 = getelementptr inbounds i8, i8* %223, i32 1, !dbg !5890
  store i8* %incdec.ptr319, i8** %sp253, align 8, !dbg !5890
  %224 = load i8, i8* %223, align 1, !dbg !5892
  %225 = load i8*, i8** %dp254, align 8, !dbg !5893
  %incdec.ptr320 = getelementptr inbounds i8, i8* %225, i32 1, !dbg !5893
  store i8* %incdec.ptr320, i8** %dp254, align 8, !dbg !5893
  store i8 %224, i8* %225, align 1, !dbg !5894
  %226 = load i8*, i8** %sp253, align 8, !dbg !5895
  %incdec.ptr321 = getelementptr inbounds i8, i8* %226, i32 1, !dbg !5895
  store i8* %incdec.ptr321, i8** %sp253, align 8, !dbg !5895
  %227 = load i8, i8* %226, align 1, !dbg !5896
  %228 = load i8*, i8** %dp254, align 8, !dbg !5897
  %incdec.ptr322 = getelementptr inbounds i8, i8* %228, i32 1, !dbg !5897
  store i8* %incdec.ptr322, i8** %dp254, align 8, !dbg !5897
  store i8 %227, i8* %228, align 1, !dbg !5898
  br label %if.end323, !dbg !5899

if.end323:                                        ; preds = %if.then318, %if.end296
  br label %for.inc324, !dbg !5900

for.inc324:                                       ; preds = %if.end323
  %229 = load i32, i32* %i255, align 4, !dbg !5901
  %inc325 = add i32 %229, 1, !dbg !5901
  store i32 %inc325, i32* %i255, align 4, !dbg !5901
  br label %for.cond256, !dbg !5902, !llvm.loop !5903

for.end326:                                       ; preds = %for.cond256
  br label %if.end327

if.end327:                                        ; preds = %for.end326, %for.end251
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end113
  %230 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5905
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %230, i32 0, i32 4, !dbg !5906
  %231 = load i8, i8* %channels, align 2, !dbg !5906
  %conv329 = zext i8 %231 to i32, !dbg !5905
  %sub330 = sub nsw i32 %conv329, 2, !dbg !5907
  %conv331 = trunc i32 %sub330 to i8, !dbg !5908
  %232 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5909
  %channels332 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %232, i32 0, i32 4, !dbg !5910
  store i8 %conv331, i8* %channels332, align 2, !dbg !5911
  %233 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5912
  %color_type333 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %233, i32 0, i32 2, !dbg !5913
  %234 = load i8, i8* %color_type333, align 8, !dbg !5913
  %conv334 = zext i8 %234 to i32, !dbg !5912
  %and335 = and i32 %conv334, -3, !dbg !5914
  %conv336 = trunc i32 %and335 to i8, !dbg !5915
  %235 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5916
  %color_type337 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %235, i32 0, i32 2, !dbg !5917
  store i8 %conv336, i8* %color_type337, align 8, !dbg !5918
  %236 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5919
  %channels338 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %236, i32 0, i32 4, !dbg !5920
  %237 = load i8, i8* %channels338, align 2, !dbg !5920
  %conv339 = zext i8 %237 to i32, !dbg !5919
  %238 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5921
  %bit_depth340 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %238, i32 0, i32 3, !dbg !5922
  %239 = load i8, i8* %bit_depth340, align 1, !dbg !5922
  %conv341 = zext i8 %239 to i32, !dbg !5921
  %mul342 = mul nsw i32 %conv339, %conv341, !dbg !5923
  %conv343 = trunc i32 %mul342 to i8, !dbg !5924
  %240 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5925
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %240, i32 0, i32 5, !dbg !5926
  store i8 %conv343, i8* %pixel_depth, align 1, !dbg !5927
  %241 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5928
  %pixel_depth344 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %241, i32 0, i32 5, !dbg !5928
  %242 = load i8, i8* %pixel_depth344, align 1, !dbg !5928
  %conv345 = zext i8 %242 to i32, !dbg !5928
  %cmp346 = icmp sge i32 %conv345, 8, !dbg !5928
  br i1 %cmp346, label %cond.true, label %cond.false, !dbg !5928

cond.true:                                        ; preds = %if.end328
  %243 = load i32, i32* %row_width, align 4, !dbg !5928
  %conv348 = zext i32 %243 to i64, !dbg !5928
  %244 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5928
  %pixel_depth349 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %244, i32 0, i32 5, !dbg !5928
  %245 = load i8, i8* %pixel_depth349, align 1, !dbg !5928
  %conv350 = zext i8 %245 to i64, !dbg !5928
  %shr351 = lshr i64 %conv350, 3, !dbg !5928
  %mul352 = mul i64 %conv348, %shr351, !dbg !5928
  br label %cond.end, !dbg !5928

cond.false:                                       ; preds = %if.end328
  %246 = load i32, i32* %row_width, align 4, !dbg !5928
  %conv353 = zext i32 %246 to i64, !dbg !5928
  %247 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5928
  %pixel_depth354 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %247, i32 0, i32 5, !dbg !5928
  %248 = load i8, i8* %pixel_depth354, align 1, !dbg !5928
  %conv355 = zext i8 %248 to i64, !dbg !5928
  %mul356 = mul i64 %conv353, %conv355, !dbg !5928
  %add357 = add i64 %mul356, 7, !dbg !5928
  %shr358 = lshr i64 %add357, 3, !dbg !5928
  br label %cond.end, !dbg !5928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul352, %cond.true ], [ %shr358, %cond.false ], !dbg !5928
  %249 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5929
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %249, i32 0, i32 1, !dbg !5930
  store i64 %cond, i64* %rowbytes, align 8, !dbg !5931
  br label %if.end359, !dbg !5932

if.end359:                                        ; preds = %cond.end, %land.lhs.true, %entry
  %250 = load i32, i32* %rgb_error, align 4, !dbg !5933
  ret i32 %250, !dbg !5934
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_gray_to_rgb(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !5935 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %sp22 = alloca i8*, align 8
  %dp27 = alloca i8*, align 8
  %sp59 = alloca i8*, align 8
  %dp64 = alloca i8*, align 8
  %sp82 = alloca i8*, align 8
  %dp87 = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !5944, metadata !DIExpression()), !dbg !5945
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5946
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !5947
  %1 = load i32, i32* %width, align 8, !dbg !5947
  store i32 %1, i32* %row_width, align 4, !dbg !5945
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5948
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 3, !dbg !5950
  %3 = load i8, i8* %bit_depth, align 1, !dbg !5950
  %conv = zext i8 %3 to i32, !dbg !5948
  %cmp = icmp sge i32 %conv, 8, !dbg !5951
  br i1 %cmp, label %land.lhs.true, label %if.end141, !dbg !5952

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5953
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 2, !dbg !5954
  %5 = load i8, i8* %color_type, align 8, !dbg !5954
  %conv2 = zext i8 %5 to i32, !dbg !5953
  %and = and i32 %conv2, 2, !dbg !5955
  %tobool = icmp ne i32 %and, 0, !dbg !5955
  br i1 %tobool, label %if.end141, label %if.then, !dbg !5956

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5957
  %color_type3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 2, !dbg !5960
  %7 = load i8, i8* %color_type3, align 8, !dbg !5960
  %conv4 = zext i8 %7 to i32, !dbg !5957
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !5961
  br i1 %cmp5, label %if.then7, label %if.else48, !dbg !5962

if.then7:                                         ; preds = %if.then
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5963
  %bit_depth8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 3, !dbg !5966
  %9 = load i8, i8* %bit_depth8, align 1, !dbg !5966
  %conv9 = zext i8 %9 to i32, !dbg !5963
  %cmp10 = icmp eq i32 %conv9, 8, !dbg !5967
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !5968

if.then12:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !5969, metadata !DIExpression()), !dbg !5971
  %10 = load i8*, i8** %row.addr, align 8, !dbg !5972
  %11 = load i32, i32* %row_width, align 4, !dbg !5973
  %conv13 = zext i32 %11 to i64, !dbg !5974
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %conv13, !dbg !5975
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !5976
  store i8* %add.ptr14, i8** %sp, align 8, !dbg !5971
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !5977, metadata !DIExpression()), !dbg !5978
  %12 = load i8*, i8** %sp, align 8, !dbg !5979
  %13 = load i32, i32* %row_width, align 4, !dbg !5980
  %conv15 = zext i32 %13 to i64, !dbg !5981
  %mul = mul i64 %conv15, 2, !dbg !5982
  %add.ptr16 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !5983
  store i8* %add.ptr16, i8** %dp, align 8, !dbg !5978
  store i32 0, i32* %i, align 4, !dbg !5984
  br label %for.cond, !dbg !5986

for.cond:                                         ; preds = %for.inc, %if.then12
  %14 = load i32, i32* %i, align 4, !dbg !5987
  %15 = load i32, i32* %row_width, align 4, !dbg !5989
  %cmp17 = icmp ult i32 %14, %15, !dbg !5990
  br i1 %cmp17, label %for.body, label %for.end, !dbg !5991

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %sp, align 8, !dbg !5992
  %17 = load i8, i8* %16, align 1, !dbg !5994
  %18 = load i8*, i8** %dp, align 8, !dbg !5995
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5995
  store i8* %incdec.ptr, i8** %dp, align 8, !dbg !5995
  store i8 %17, i8* %18, align 1, !dbg !5996
  %19 = load i8*, i8** %sp, align 8, !dbg !5997
  %20 = load i8, i8* %19, align 1, !dbg !5998
  %21 = load i8*, i8** %dp, align 8, !dbg !5999
  %incdec.ptr19 = getelementptr inbounds i8, i8* %21, i32 -1, !dbg !5999
  store i8* %incdec.ptr19, i8** %dp, align 8, !dbg !5999
  store i8 %20, i8* %21, align 1, !dbg !6000
  %22 = load i8*, i8** %sp, align 8, !dbg !6001
  %incdec.ptr20 = getelementptr inbounds i8, i8* %22, i32 -1, !dbg !6001
  store i8* %incdec.ptr20, i8** %sp, align 8, !dbg !6001
  %23 = load i8, i8* %22, align 1, !dbg !6002
  %24 = load i8*, i8** %dp, align 8, !dbg !6003
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 -1, !dbg !6003
  store i8* %incdec.ptr21, i8** %dp, align 8, !dbg !6003
  store i8 %23, i8* %24, align 1, !dbg !6004
  br label %for.inc, !dbg !6005

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !6006
  %inc = add i32 %25, 1, !dbg !6006
  store i32 %inc, i32* %i, align 4, !dbg !6006
  br label %for.cond, !dbg !6007, !llvm.loop !6008

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6010

if.else:                                          ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i8** %sp22, metadata !6011, metadata !DIExpression()), !dbg !6013
  %26 = load i8*, i8** %row.addr, align 8, !dbg !6014
  %27 = load i32, i32* %row_width, align 4, !dbg !6015
  %conv23 = zext i32 %27 to i64, !dbg !6016
  %mul24 = mul i64 %conv23, 2, !dbg !6017
  %add.ptr25 = getelementptr inbounds i8, i8* %26, i64 %mul24, !dbg !6018
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr25, i64 -1, !dbg !6019
  store i8* %add.ptr26, i8** %sp22, align 8, !dbg !6013
  call void @llvm.dbg.declare(metadata i8** %dp27, metadata !6020, metadata !DIExpression()), !dbg !6021
  %28 = load i8*, i8** %sp22, align 8, !dbg !6022
  %29 = load i32, i32* %row_width, align 4, !dbg !6023
  %conv28 = zext i32 %29 to i64, !dbg !6024
  %mul29 = mul i64 %conv28, 4, !dbg !6025
  %add.ptr30 = getelementptr inbounds i8, i8* %28, i64 %mul29, !dbg !6026
  store i8* %add.ptr30, i8** %dp27, align 8, !dbg !6021
  store i32 0, i32* %i, align 4, !dbg !6027
  br label %for.cond31, !dbg !6029

for.cond31:                                       ; preds = %for.inc45, %if.else
  %30 = load i32, i32* %i, align 4, !dbg !6030
  %31 = load i32, i32* %row_width, align 4, !dbg !6032
  %cmp32 = icmp ult i32 %30, %31, !dbg !6033
  br i1 %cmp32, label %for.body34, label %for.end47, !dbg !6034

for.body34:                                       ; preds = %for.cond31
  %32 = load i8*, i8** %sp22, align 8, !dbg !6035
  %33 = load i8, i8* %32, align 1, !dbg !6037
  %34 = load i8*, i8** %dp27, align 8, !dbg !6038
  %incdec.ptr35 = getelementptr inbounds i8, i8* %34, i32 -1, !dbg !6038
  store i8* %incdec.ptr35, i8** %dp27, align 8, !dbg !6038
  store i8 %33, i8* %34, align 1, !dbg !6039
  %35 = load i8*, i8** %sp22, align 8, !dbg !6040
  %add.ptr36 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !6041
  %36 = load i8, i8* %add.ptr36, align 1, !dbg !6042
  %37 = load i8*, i8** %dp27, align 8, !dbg !6043
  %incdec.ptr37 = getelementptr inbounds i8, i8* %37, i32 -1, !dbg !6043
  store i8* %incdec.ptr37, i8** %dp27, align 8, !dbg !6043
  store i8 %36, i8* %37, align 1, !dbg !6044
  %38 = load i8*, i8** %sp22, align 8, !dbg !6045
  %39 = load i8, i8* %38, align 1, !dbg !6046
  %40 = load i8*, i8** %dp27, align 8, !dbg !6047
  %incdec.ptr38 = getelementptr inbounds i8, i8* %40, i32 -1, !dbg !6047
  store i8* %incdec.ptr38, i8** %dp27, align 8, !dbg !6047
  store i8 %39, i8* %40, align 1, !dbg !6048
  %41 = load i8*, i8** %sp22, align 8, !dbg !6049
  %add.ptr39 = getelementptr inbounds i8, i8* %41, i64 -1, !dbg !6050
  %42 = load i8, i8* %add.ptr39, align 1, !dbg !6051
  %43 = load i8*, i8** %dp27, align 8, !dbg !6052
  %incdec.ptr40 = getelementptr inbounds i8, i8* %43, i32 -1, !dbg !6052
  store i8* %incdec.ptr40, i8** %dp27, align 8, !dbg !6052
  store i8 %42, i8* %43, align 1, !dbg !6053
  %44 = load i8*, i8** %sp22, align 8, !dbg !6054
  %incdec.ptr41 = getelementptr inbounds i8, i8* %44, i32 -1, !dbg !6054
  store i8* %incdec.ptr41, i8** %sp22, align 8, !dbg !6054
  %45 = load i8, i8* %44, align 1, !dbg !6055
  %46 = load i8*, i8** %dp27, align 8, !dbg !6056
  %incdec.ptr42 = getelementptr inbounds i8, i8* %46, i32 -1, !dbg !6056
  store i8* %incdec.ptr42, i8** %dp27, align 8, !dbg !6056
  store i8 %45, i8* %46, align 1, !dbg !6057
  %47 = load i8*, i8** %sp22, align 8, !dbg !6058
  %incdec.ptr43 = getelementptr inbounds i8, i8* %47, i32 -1, !dbg !6058
  store i8* %incdec.ptr43, i8** %sp22, align 8, !dbg !6058
  %48 = load i8, i8* %47, align 1, !dbg !6059
  %49 = load i8*, i8** %dp27, align 8, !dbg !6060
  %incdec.ptr44 = getelementptr inbounds i8, i8* %49, i32 -1, !dbg !6060
  store i8* %incdec.ptr44, i8** %dp27, align 8, !dbg !6060
  store i8 %48, i8* %49, align 1, !dbg !6061
  br label %for.inc45, !dbg !6062

for.inc45:                                        ; preds = %for.body34
  %50 = load i32, i32* %i, align 4, !dbg !6063
  %inc46 = add i32 %50, 1, !dbg !6063
  store i32 %inc46, i32* %i, align 4, !dbg !6063
  br label %for.cond31, !dbg !6064, !llvm.loop !6065

for.end47:                                        ; preds = %for.cond31
  br label %if.end

if.end:                                           ; preds = %for.end47, %for.end
  br label %if.end114, !dbg !6067

if.else48:                                        ; preds = %if.then
  %51 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6068
  %color_type49 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %51, i32 0, i32 2, !dbg !6070
  %52 = load i8, i8* %color_type49, align 8, !dbg !6070
  %conv50 = zext i8 %52 to i32, !dbg !6068
  %cmp51 = icmp eq i32 %conv50, 4, !dbg !6071
  br i1 %cmp51, label %if.then53, label %if.end113, !dbg !6072

if.then53:                                        ; preds = %if.else48
  %53 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6073
  %bit_depth54 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %53, i32 0, i32 3, !dbg !6076
  %54 = load i8, i8* %bit_depth54, align 1, !dbg !6076
  %conv55 = zext i8 %54 to i32, !dbg !6073
  %cmp56 = icmp eq i32 %conv55, 8, !dbg !6077
  br i1 %cmp56, label %if.then58, label %if.else81, !dbg !6078

if.then58:                                        ; preds = %if.then53
  call void @llvm.dbg.declare(metadata i8** %sp59, metadata !6079, metadata !DIExpression()), !dbg !6081
  %55 = load i8*, i8** %row.addr, align 8, !dbg !6082
  %56 = load i32, i32* %row_width, align 4, !dbg !6083
  %conv60 = zext i32 %56 to i64, !dbg !6084
  %mul61 = mul i64 %conv60, 2, !dbg !6085
  %add.ptr62 = getelementptr inbounds i8, i8* %55, i64 %mul61, !dbg !6086
  %add.ptr63 = getelementptr inbounds i8, i8* %add.ptr62, i64 -1, !dbg !6087
  store i8* %add.ptr63, i8** %sp59, align 8, !dbg !6081
  call void @llvm.dbg.declare(metadata i8** %dp64, metadata !6088, metadata !DIExpression()), !dbg !6089
  %57 = load i8*, i8** %sp59, align 8, !dbg !6090
  %58 = load i32, i32* %row_width, align 4, !dbg !6091
  %conv65 = zext i32 %58 to i64, !dbg !6092
  %mul66 = mul i64 %conv65, 2, !dbg !6093
  %add.ptr67 = getelementptr inbounds i8, i8* %57, i64 %mul66, !dbg !6094
  store i8* %add.ptr67, i8** %dp64, align 8, !dbg !6089
  store i32 0, i32* %i, align 4, !dbg !6095
  br label %for.cond68, !dbg !6097

for.cond68:                                       ; preds = %for.inc78, %if.then58
  %59 = load i32, i32* %i, align 4, !dbg !6098
  %60 = load i32, i32* %row_width, align 4, !dbg !6100
  %cmp69 = icmp ult i32 %59, %60, !dbg !6101
  br i1 %cmp69, label %for.body71, label %for.end80, !dbg !6102

for.body71:                                       ; preds = %for.cond68
  %61 = load i8*, i8** %sp59, align 8, !dbg !6103
  %incdec.ptr72 = getelementptr inbounds i8, i8* %61, i32 -1, !dbg !6103
  store i8* %incdec.ptr72, i8** %sp59, align 8, !dbg !6103
  %62 = load i8, i8* %61, align 1, !dbg !6105
  %63 = load i8*, i8** %dp64, align 8, !dbg !6106
  %incdec.ptr73 = getelementptr inbounds i8, i8* %63, i32 -1, !dbg !6106
  store i8* %incdec.ptr73, i8** %dp64, align 8, !dbg !6106
  store i8 %62, i8* %63, align 1, !dbg !6107
  %64 = load i8*, i8** %sp59, align 8, !dbg !6108
  %65 = load i8, i8* %64, align 1, !dbg !6109
  %66 = load i8*, i8** %dp64, align 8, !dbg !6110
  %incdec.ptr74 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !6110
  store i8* %incdec.ptr74, i8** %dp64, align 8, !dbg !6110
  store i8 %65, i8* %66, align 1, !dbg !6111
  %67 = load i8*, i8** %sp59, align 8, !dbg !6112
  %68 = load i8, i8* %67, align 1, !dbg !6113
  %69 = load i8*, i8** %dp64, align 8, !dbg !6114
  %incdec.ptr75 = getelementptr inbounds i8, i8* %69, i32 -1, !dbg !6114
  store i8* %incdec.ptr75, i8** %dp64, align 8, !dbg !6114
  store i8 %68, i8* %69, align 1, !dbg !6115
  %70 = load i8*, i8** %sp59, align 8, !dbg !6116
  %incdec.ptr76 = getelementptr inbounds i8, i8* %70, i32 -1, !dbg !6116
  store i8* %incdec.ptr76, i8** %sp59, align 8, !dbg !6116
  %71 = load i8, i8* %70, align 1, !dbg !6117
  %72 = load i8*, i8** %dp64, align 8, !dbg !6118
  %incdec.ptr77 = getelementptr inbounds i8, i8* %72, i32 -1, !dbg !6118
  store i8* %incdec.ptr77, i8** %dp64, align 8, !dbg !6118
  store i8 %71, i8* %72, align 1, !dbg !6119
  br label %for.inc78, !dbg !6120

for.inc78:                                        ; preds = %for.body71
  %73 = load i32, i32* %i, align 4, !dbg !6121
  %inc79 = add i32 %73, 1, !dbg !6121
  store i32 %inc79, i32* %i, align 4, !dbg !6121
  br label %for.cond68, !dbg !6122, !llvm.loop !6123

for.end80:                                        ; preds = %for.cond68
  br label %if.end112, !dbg !6125

if.else81:                                        ; preds = %if.then53
  call void @llvm.dbg.declare(metadata i8** %sp82, metadata !6126, metadata !DIExpression()), !dbg !6128
  %74 = load i8*, i8** %row.addr, align 8, !dbg !6129
  %75 = load i32, i32* %row_width, align 4, !dbg !6130
  %conv83 = zext i32 %75 to i64, !dbg !6131
  %mul84 = mul i64 %conv83, 4, !dbg !6132
  %add.ptr85 = getelementptr inbounds i8, i8* %74, i64 %mul84, !dbg !6133
  %add.ptr86 = getelementptr inbounds i8, i8* %add.ptr85, i64 -1, !dbg !6134
  store i8* %add.ptr86, i8** %sp82, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata i8** %dp87, metadata !6135, metadata !DIExpression()), !dbg !6136
  %76 = load i8*, i8** %sp82, align 8, !dbg !6137
  %77 = load i32, i32* %row_width, align 4, !dbg !6138
  %conv88 = zext i32 %77 to i64, !dbg !6139
  %mul89 = mul i64 %conv88, 4, !dbg !6140
  %add.ptr90 = getelementptr inbounds i8, i8* %76, i64 %mul89, !dbg !6141
  store i8* %add.ptr90, i8** %dp87, align 8, !dbg !6136
  store i32 0, i32* %i, align 4, !dbg !6142
  br label %for.cond91, !dbg !6144

for.cond91:                                       ; preds = %for.inc109, %if.else81
  %78 = load i32, i32* %i, align 4, !dbg !6145
  %79 = load i32, i32* %row_width, align 4, !dbg !6147
  %cmp92 = icmp ult i32 %78, %79, !dbg !6148
  br i1 %cmp92, label %for.body94, label %for.end111, !dbg !6149

for.body94:                                       ; preds = %for.cond91
  %80 = load i8*, i8** %sp82, align 8, !dbg !6150
  %incdec.ptr95 = getelementptr inbounds i8, i8* %80, i32 -1, !dbg !6150
  store i8* %incdec.ptr95, i8** %sp82, align 8, !dbg !6150
  %81 = load i8, i8* %80, align 1, !dbg !6152
  %82 = load i8*, i8** %dp87, align 8, !dbg !6153
  %incdec.ptr96 = getelementptr inbounds i8, i8* %82, i32 -1, !dbg !6153
  store i8* %incdec.ptr96, i8** %dp87, align 8, !dbg !6153
  store i8 %81, i8* %82, align 1, !dbg !6154
  %83 = load i8*, i8** %sp82, align 8, !dbg !6155
  %incdec.ptr97 = getelementptr inbounds i8, i8* %83, i32 -1, !dbg !6155
  store i8* %incdec.ptr97, i8** %sp82, align 8, !dbg !6155
  %84 = load i8, i8* %83, align 1, !dbg !6156
  %85 = load i8*, i8** %dp87, align 8, !dbg !6157
  %incdec.ptr98 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !6157
  store i8* %incdec.ptr98, i8** %dp87, align 8, !dbg !6157
  store i8 %84, i8* %85, align 1, !dbg !6158
  %86 = load i8*, i8** %sp82, align 8, !dbg !6159
  %87 = load i8, i8* %86, align 1, !dbg !6160
  %88 = load i8*, i8** %dp87, align 8, !dbg !6161
  %incdec.ptr99 = getelementptr inbounds i8, i8* %88, i32 -1, !dbg !6161
  store i8* %incdec.ptr99, i8** %dp87, align 8, !dbg !6161
  store i8 %87, i8* %88, align 1, !dbg !6162
  %89 = load i8*, i8** %sp82, align 8, !dbg !6163
  %add.ptr100 = getelementptr inbounds i8, i8* %89, i64 -1, !dbg !6164
  %90 = load i8, i8* %add.ptr100, align 1, !dbg !6165
  %91 = load i8*, i8** %dp87, align 8, !dbg !6166
  %incdec.ptr101 = getelementptr inbounds i8, i8* %91, i32 -1, !dbg !6166
  store i8* %incdec.ptr101, i8** %dp87, align 8, !dbg !6166
  store i8 %90, i8* %91, align 1, !dbg !6167
  %92 = load i8*, i8** %sp82, align 8, !dbg !6168
  %93 = load i8, i8* %92, align 1, !dbg !6169
  %94 = load i8*, i8** %dp87, align 8, !dbg !6170
  %incdec.ptr102 = getelementptr inbounds i8, i8* %94, i32 -1, !dbg !6170
  store i8* %incdec.ptr102, i8** %dp87, align 8, !dbg !6170
  store i8 %93, i8* %94, align 1, !dbg !6171
  %95 = load i8*, i8** %sp82, align 8, !dbg !6172
  %add.ptr103 = getelementptr inbounds i8, i8* %95, i64 -1, !dbg !6173
  %96 = load i8, i8* %add.ptr103, align 1, !dbg !6174
  %97 = load i8*, i8** %dp87, align 8, !dbg !6175
  %incdec.ptr104 = getelementptr inbounds i8, i8* %97, i32 -1, !dbg !6175
  store i8* %incdec.ptr104, i8** %dp87, align 8, !dbg !6175
  store i8 %96, i8* %97, align 1, !dbg !6176
  %98 = load i8*, i8** %sp82, align 8, !dbg !6177
  %incdec.ptr105 = getelementptr inbounds i8, i8* %98, i32 -1, !dbg !6177
  store i8* %incdec.ptr105, i8** %sp82, align 8, !dbg !6177
  %99 = load i8, i8* %98, align 1, !dbg !6178
  %100 = load i8*, i8** %dp87, align 8, !dbg !6179
  %incdec.ptr106 = getelementptr inbounds i8, i8* %100, i32 -1, !dbg !6179
  store i8* %incdec.ptr106, i8** %dp87, align 8, !dbg !6179
  store i8 %99, i8* %100, align 1, !dbg !6180
  %101 = load i8*, i8** %sp82, align 8, !dbg !6181
  %incdec.ptr107 = getelementptr inbounds i8, i8* %101, i32 -1, !dbg !6181
  store i8* %incdec.ptr107, i8** %sp82, align 8, !dbg !6181
  %102 = load i8, i8* %101, align 1, !dbg !6182
  %103 = load i8*, i8** %dp87, align 8, !dbg !6183
  %incdec.ptr108 = getelementptr inbounds i8, i8* %103, i32 -1, !dbg !6183
  store i8* %incdec.ptr108, i8** %dp87, align 8, !dbg !6183
  store i8 %102, i8* %103, align 1, !dbg !6184
  br label %for.inc109, !dbg !6185

for.inc109:                                       ; preds = %for.body94
  %104 = load i32, i32* %i, align 4, !dbg !6186
  %inc110 = add i32 %104, 1, !dbg !6186
  store i32 %inc110, i32* %i, align 4, !dbg !6186
  br label %for.cond91, !dbg !6187, !llvm.loop !6188

for.end111:                                       ; preds = %for.cond91
  br label %if.end112

if.end112:                                        ; preds = %for.end111, %for.end80
  br label %if.end113, !dbg !6190

if.end113:                                        ; preds = %if.end112, %if.else48
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end
  %105 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6191
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %105, i32 0, i32 4, !dbg !6192
  %106 = load i8, i8* %channels, align 2, !dbg !6192
  %conv115 = zext i8 %106 to i32, !dbg !6191
  %add = add nsw i32 %conv115, 2, !dbg !6193
  %conv116 = trunc i32 %add to i8, !dbg !6194
  %107 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6195
  %channels117 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %107, i32 0, i32 4, !dbg !6196
  store i8 %conv116, i8* %channels117, align 2, !dbg !6197
  %108 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6198
  %color_type118 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %108, i32 0, i32 2, !dbg !6199
  %109 = load i8, i8* %color_type118, align 8, !dbg !6200
  %conv119 = zext i8 %109 to i32, !dbg !6200
  %or = or i32 %conv119, 2, !dbg !6200
  %conv120 = trunc i32 %or to i8, !dbg !6200
  store i8 %conv120, i8* %color_type118, align 8, !dbg !6200
  %110 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6201
  %channels121 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %110, i32 0, i32 4, !dbg !6202
  %111 = load i8, i8* %channels121, align 2, !dbg !6202
  %conv122 = zext i8 %111 to i32, !dbg !6201
  %112 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6203
  %bit_depth123 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %112, i32 0, i32 3, !dbg !6204
  %113 = load i8, i8* %bit_depth123, align 1, !dbg !6204
  %conv124 = zext i8 %113 to i32, !dbg !6203
  %mul125 = mul nsw i32 %conv122, %conv124, !dbg !6205
  %conv126 = trunc i32 %mul125 to i8, !dbg !6206
  %114 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6207
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %114, i32 0, i32 5, !dbg !6208
  store i8 %conv126, i8* %pixel_depth, align 1, !dbg !6209
  %115 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6210
  %pixel_depth127 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %115, i32 0, i32 5, !dbg !6210
  %116 = load i8, i8* %pixel_depth127, align 1, !dbg !6210
  %conv128 = zext i8 %116 to i32, !dbg !6210
  %cmp129 = icmp sge i32 %conv128, 8, !dbg !6210
  br i1 %cmp129, label %cond.true, label %cond.false, !dbg !6210

cond.true:                                        ; preds = %if.end114
  %117 = load i32, i32* %row_width, align 4, !dbg !6210
  %conv131 = zext i32 %117 to i64, !dbg !6210
  %118 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6210
  %pixel_depth132 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %118, i32 0, i32 5, !dbg !6210
  %119 = load i8, i8* %pixel_depth132, align 1, !dbg !6210
  %conv133 = zext i8 %119 to i64, !dbg !6210
  %shr = lshr i64 %conv133, 3, !dbg !6210
  %mul134 = mul i64 %conv131, %shr, !dbg !6210
  br label %cond.end, !dbg !6210

cond.false:                                       ; preds = %if.end114
  %120 = load i32, i32* %row_width, align 4, !dbg !6210
  %conv135 = zext i32 %120 to i64, !dbg !6210
  %121 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6210
  %pixel_depth136 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %121, i32 0, i32 5, !dbg !6210
  %122 = load i8, i8* %pixel_depth136, align 1, !dbg !6210
  %conv137 = zext i8 %122 to i64, !dbg !6210
  %mul138 = mul i64 %conv135, %conv137, !dbg !6210
  %add139 = add i64 %mul138, 7, !dbg !6210
  %shr140 = lshr i64 %add139, 3, !dbg !6210
  br label %cond.end, !dbg !6210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul134, %cond.true ], [ %shr140, %cond.false ], !dbg !6210
  %123 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6211
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %123, i32 0, i32 1, !dbg !6212
  store i64 %cond, i64* %rowbytes, align 8, !dbg !6213
  br label %if.end141, !dbg !6214

if.end141:                                        ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !6215
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_compose(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_struct_def* %png_ptr) #0 !dbg !6216 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %gamma_table = alloca i8*, align 8
  %gamma_from_1 = alloca i8*, align 8
  %gamma_to_1 = alloca i8*, align 8
  %gamma_16 = alloca i16**, align 8
  %gamma_16_from_1 = alloca i16**, align 8
  %gamma_16_to_1 = alloca i16**, align 8
  %gamma_shift = alloca i32, align 4
  %sp = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %optimize = alloca i32, align 4
  %shift = alloca i32, align 4
  %p = alloca i8, align 1
  %g = alloca i8, align 1
  %p195 = alloca i8, align 1
  %g200 = alloca i8, align 1
  %v = alloca i16, align 2
  %v384 = alloca i16, align 2
  %r = alloca i16, align 2
  %g534 = alloca i16, align 2
  %b = alloca i16, align 2
  %v609 = alloca i16, align 2
  %r669 = alloca i16, align 2
  %g676 = alloca i16, align 2
  %b684 = alloca i16, align 2
  %a = alloca i16, align 2
  %v794 = alloca i8, align 1
  %w = alloca i8, align 1
  %temp = alloca i16, align 2
  %a832 = alloca i8, align 1
  %temp846 = alloca i16, align 2
  %a891 = alloca i16, align 2
  %v903 = alloca i16, align 2
  %g937 = alloca i16, align 2
  %v938 = alloca i16, align 2
  %w939 = alloca i16, align 2
  %temp947 = alloca i32, align 4
  %a995 = alloca i16, align 2
  %g1024 = alloca i16, align 2
  %v1025 = alloca i16, align 2
  %temp1032 = alloca i32, align 4
  %a1083 = alloca i8, align 1
  %v1116 = alloca i8, align 1
  %w1117 = alloca i8, align 1
  %temp1120 = alloca i16, align 2
  %temp1152 = alloca i16, align 2
  %temp1185 = alloca i16, align 2
  %a1226 = alloca i8, align 1
  %temp1248 = alloca i16, align 2
  %temp1272 = alloca i16, align 2
  %temp1298 = alloca i16, align 2
  %a1345 = alloca i16, align 2
  %v1359 = alloca i16, align 2
  %v1453 = alloca i16, align 2
  %w1454 = alloca i16, align 2
  %temp1462 = alloca i32, align 4
  %temp1506 = alloca i32, align 4
  %temp1551 = alloca i32, align 4
  %a1599 = alloca i16, align 2
  %v1656 = alloca i16, align 2
  %r1657 = alloca i16, align 2
  %g1664 = alloca i16, align 2
  %b1672 = alloca i16, align 2
  %temp1680 = alloca i32, align 4
  %temp1704 = alloca i32, align 4
  %temp1729 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !6219, metadata !DIExpression()), !dbg !6220
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata i8** %gamma_table, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6227
  %gamma_table1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 77, !dbg !6228
  %1 = load i8*, i8** %gamma_table1, align 8, !dbg !6228
  store i8* %1, i8** %gamma_table, align 8, !dbg !6226
  call void @llvm.dbg.declare(metadata i8** %gamma_from_1, metadata !6229, metadata !DIExpression()), !dbg !6230
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6231
  %gamma_from_12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 79, !dbg !6232
  %3 = load i8*, i8** %gamma_from_12, align 8, !dbg !6232
  store i8* %3, i8** %gamma_from_1, align 8, !dbg !6230
  call void @llvm.dbg.declare(metadata i8** %gamma_to_1, metadata !6233, metadata !DIExpression()), !dbg !6234
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6235
  %gamma_to_13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 80, !dbg !6236
  %5 = load i8*, i8** %gamma_to_13, align 8, !dbg !6236
  store i8* %5, i8** %gamma_to_1, align 8, !dbg !6234
  call void @llvm.dbg.declare(metadata i16*** %gamma_16, metadata !6237, metadata !DIExpression()), !dbg !6242
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6243
  %gamma_16_table = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 78, !dbg !6244
  %7 = load i16**, i16*** %gamma_16_table, align 8, !dbg !6244
  store i16** %7, i16*** %gamma_16, align 8, !dbg !6242
  call void @llvm.dbg.declare(metadata i16*** %gamma_16_from_1, metadata !6245, metadata !DIExpression()), !dbg !6246
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6247
  %gamma_16_from_14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 81, !dbg !6248
  %9 = load i16**, i16*** %gamma_16_from_14, align 8, !dbg !6248
  store i16** %9, i16*** %gamma_16_from_1, align 8, !dbg !6246
  call void @llvm.dbg.declare(metadata i16*** %gamma_16_to_1, metadata !6249, metadata !DIExpression()), !dbg !6250
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6251
  %gamma_16_to_15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 82, !dbg !6252
  %11 = load i16**, i16*** %gamma_16_to_15, align 8, !dbg !6252
  store i16** %11, i16*** %gamma_16_to_1, align 8, !dbg !6250
  call void @llvm.dbg.declare(metadata i32* %gamma_shift, metadata !6253, metadata !DIExpression()), !dbg !6254
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6255
  %gamma_shift6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 74, !dbg !6256
  %13 = load i32, i32* %gamma_shift6, align 8, !dbg !6256
  store i32 %13, i32* %gamma_shift, align 4, !dbg !6254
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !6257, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !6261, metadata !DIExpression()), !dbg !6262
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6263
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 0, !dbg !6264
  %15 = load i32, i32* %width, align 8, !dbg !6264
  store i32 %15, i32* %row_width, align 4, !dbg !6262
  call void @llvm.dbg.declare(metadata i32* %optimize, metadata !6265, metadata !DIExpression()), !dbg !6266
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6267
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 14, !dbg !6268
  %17 = load i32, i32* %flags, align 8, !dbg !6268
  %and = and i32 %17, 8192, !dbg !6269
  %cmp = icmp ne i32 %and, 0, !dbg !6270
  %conv = zext i1 %cmp to i32, !dbg !6270
  store i32 %conv, i32* %optimize, align 4, !dbg !6266
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !6271, metadata !DIExpression()), !dbg !6272
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6273
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 2, !dbg !6275
  %19 = load i8, i8* %color_type, align 8, !dbg !6275
  %conv7 = zext i8 %19 to i32, !dbg !6273
  switch i32 %conv7, label %sw.default1762 [
    i32 0, label %sw.bb
    i32 2, label %sw.bb416
    i32 4, label %sw.bb758
    i32 6, label %sw.bb1064
  ], !dbg !6276

sw.bb:                                            ; preds = %entry
  %20 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6277
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %20, i32 0, i32 3, !dbg !6280
  %21 = load i8, i8* %bit_depth, align 1, !dbg !6280
  %conv8 = zext i8 %21 to i32, !dbg !6277
  switch i32 %conv8, label %sw.default [
    i32 1, label %sw.bb9
    i32 2, label %sw.bb34
    i32 4, label %sw.bb158
    i32 8, label %sw.bb280
    i32 16, label %sw.bb327
  ], !dbg !6281

sw.bb9:                                           ; preds = %sw.bb
  %22 = load i8*, i8** %row.addr, align 8, !dbg !6282
  store i8* %22, i8** %sp, align 8, !dbg !6285
  store i32 7, i32* %shift, align 4, !dbg !6286
  store i32 0, i32* %i, align 4, !dbg !6287
  br label %for.cond, !dbg !6289

for.cond:                                         ; preds = %for.inc, %sw.bb9
  %23 = load i32, i32* %i, align 4, !dbg !6290
  %24 = load i32, i32* %row_width, align 4, !dbg !6292
  %cmp10 = icmp ult i32 %23, %24, !dbg !6293
  br i1 %cmp10, label %for.body, label %for.end, !dbg !6294

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %sp, align 8, !dbg !6295
  %26 = load i8, i8* %25, align 1, !dbg !6298
  %conv12 = zext i8 %26 to i32, !dbg !6298
  %27 = load i32, i32* %shift, align 4, !dbg !6299
  %shr = ashr i32 %conv12, %27, !dbg !6300
  %and13 = and i32 %shr, 1, !dbg !6301
  %conv14 = trunc i32 %and13 to i16, !dbg !6302
  %conv15 = zext i16 %conv14 to i32, !dbg !6302
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6303
  %trans_color = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 86, !dbg !6304
  %gray = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color, i32 0, i32 4, !dbg !6305
  %29 = load i16, i16* %gray, align 8, !dbg !6305
  %conv16 = zext i16 %29 to i32, !dbg !6303
  %cmp17 = icmp eq i32 %conv15, %conv16, !dbg !6306
  br i1 %cmp17, label %if.then, label %if.end, !dbg !6307

if.then:                                          ; preds = %for.body
  %30 = load i32, i32* %shift, align 4, !dbg !6308
  %sub = sub nsw i32 7, %30, !dbg !6310
  %shr19 = ashr i32 32639, %sub, !dbg !6311
  %and20 = and i32 %shr19, 255, !dbg !6312
  %conv21 = trunc i32 %and20 to i8, !dbg !6313
  %conv22 = zext i8 %conv21 to i32, !dbg !6313
  %31 = load i8*, i8** %sp, align 8, !dbg !6314
  %32 = load i8, i8* %31, align 1, !dbg !6315
  %conv23 = zext i8 %32 to i32, !dbg !6315
  %and24 = and i32 %conv23, %conv22, !dbg !6315
  %conv25 = trunc i32 %and24 to i8, !dbg !6315
  store i8 %conv25, i8* %31, align 1, !dbg !6315
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6316
  %background = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 69, !dbg !6317
  %gray26 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 4, !dbg !6318
  %34 = load i16, i16* %gray26, align 8, !dbg !6318
  %conv27 = zext i16 %34 to i32, !dbg !6316
  %35 = load i32, i32* %shift, align 4, !dbg !6319
  %shl = shl i32 %conv27, %35, !dbg !6320
  %conv28 = trunc i32 %shl to i8, !dbg !6321
  %conv29 = zext i8 %conv28 to i32, !dbg !6321
  %36 = load i8*, i8** %sp, align 8, !dbg !6322
  %37 = load i8, i8* %36, align 1, !dbg !6323
  %conv30 = zext i8 %37 to i32, !dbg !6323
  %or = or i32 %conv30, %conv29, !dbg !6323
  %conv31 = trunc i32 %or to i8, !dbg !6323
  store i8 %conv31, i8* %36, align 1, !dbg !6323
  br label %if.end, !dbg !6324

if.end:                                           ; preds = %if.then, %for.body
  %38 = load i32, i32* %shift, align 4, !dbg !6325
  %tobool = icmp ne i32 %38, 0, !dbg !6325
  br i1 %tobool, label %if.else, label %if.then32, !dbg !6327

if.then32:                                        ; preds = %if.end
  store i32 7, i32* %shift, align 4, !dbg !6328
  %39 = load i8*, i8** %sp, align 8, !dbg !6330
  %incdec.ptr = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6330
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !6330
  br label %if.end33, !dbg !6331

if.else:                                          ; preds = %if.end
  %40 = load i32, i32* %shift, align 4, !dbg !6332
  %dec = add nsw i32 %40, -1, !dbg !6332
  store i32 %dec, i32* %shift, align 4, !dbg !6332
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then32
  br label %for.inc, !dbg !6333

for.inc:                                          ; preds = %if.end33
  %41 = load i32, i32* %i, align 4, !dbg !6334
  %inc = add i32 %41, 1, !dbg !6334
  store i32 %inc, i32* %i, align 4, !dbg !6334
  br label %for.cond, !dbg !6335, !llvm.loop !6336

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6338

sw.bb34:                                          ; preds = %sw.bb
  %42 = load i8*, i8** %gamma_table, align 8, !dbg !6339
  %cmp35 = icmp ne i8* %42, null, !dbg !6342
  br i1 %cmp35, label %if.then37, label %if.else114, !dbg !6343

if.then37:                                        ; preds = %sw.bb34
  %43 = load i8*, i8** %row.addr, align 8, !dbg !6344
  store i8* %43, i8** %sp, align 8, !dbg !6346
  store i32 6, i32* %shift, align 4, !dbg !6347
  store i32 0, i32* %i, align 4, !dbg !6348
  br label %for.cond38, !dbg !6350

for.cond38:                                       ; preds = %for.inc111, %if.then37
  %44 = load i32, i32* %i, align 4, !dbg !6351
  %45 = load i32, i32* %row_width, align 4, !dbg !6353
  %cmp39 = icmp ult i32 %44, %45, !dbg !6354
  br i1 %cmp39, label %for.body41, label %for.end113, !dbg !6355

for.body41:                                       ; preds = %for.cond38
  %46 = load i8*, i8** %sp, align 8, !dbg !6356
  %47 = load i8, i8* %46, align 1, !dbg !6359
  %conv42 = zext i8 %47 to i32, !dbg !6359
  %48 = load i32, i32* %shift, align 4, !dbg !6360
  %shr43 = ashr i32 %conv42, %48, !dbg !6361
  %and44 = and i32 %shr43, 3, !dbg !6362
  %conv45 = trunc i32 %and44 to i16, !dbg !6363
  %conv46 = zext i16 %conv45 to i32, !dbg !6363
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6364
  %trans_color47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 86, !dbg !6365
  %gray48 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color47, i32 0, i32 4, !dbg !6366
  %50 = load i16, i16* %gray48, align 8, !dbg !6366
  %conv49 = zext i16 %50 to i32, !dbg !6364
  %cmp50 = icmp eq i32 %conv46, %conv49, !dbg !6367
  br i1 %cmp50, label %if.then52, label %if.else70, !dbg !6368

if.then52:                                        ; preds = %for.body41
  %51 = load i32, i32* %shift, align 4, !dbg !6369
  %sub53 = sub nsw i32 6, %51, !dbg !6371
  %shr54 = ashr i32 16191, %sub53, !dbg !6372
  %and55 = and i32 %shr54, 255, !dbg !6373
  %conv56 = trunc i32 %and55 to i8, !dbg !6374
  %conv57 = zext i8 %conv56 to i32, !dbg !6374
  %52 = load i8*, i8** %sp, align 8, !dbg !6375
  %53 = load i8, i8* %52, align 1, !dbg !6376
  %conv58 = zext i8 %53 to i32, !dbg !6376
  %and59 = and i32 %conv58, %conv57, !dbg !6376
  %conv60 = trunc i32 %and59 to i8, !dbg !6376
  store i8 %conv60, i8* %52, align 1, !dbg !6376
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6377
  %background61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 69, !dbg !6378
  %gray62 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background61, i32 0, i32 4, !dbg !6379
  %55 = load i16, i16* %gray62, align 8, !dbg !6379
  %conv63 = zext i16 %55 to i32, !dbg !6377
  %56 = load i32, i32* %shift, align 4, !dbg !6380
  %shl64 = shl i32 %conv63, %56, !dbg !6381
  %conv65 = trunc i32 %shl64 to i8, !dbg !6382
  %conv66 = zext i8 %conv65 to i32, !dbg !6382
  %57 = load i8*, i8** %sp, align 8, !dbg !6383
  %58 = load i8, i8* %57, align 1, !dbg !6384
  %conv67 = zext i8 %58 to i32, !dbg !6384
  %or68 = or i32 %conv67, %conv66, !dbg !6384
  %conv69 = trunc i32 %or68 to i8, !dbg !6384
  store i8 %conv69, i8* %57, align 1, !dbg !6384
  br label %if.end104, !dbg !6385

if.else70:                                        ; preds = %for.body41
  call void @llvm.dbg.declare(metadata i8* %p, metadata !6386, metadata !DIExpression()), !dbg !6388
  %59 = load i8*, i8** %sp, align 8, !dbg !6389
  %60 = load i8, i8* %59, align 1, !dbg !6390
  %conv71 = zext i8 %60 to i32, !dbg !6390
  %61 = load i32, i32* %shift, align 4, !dbg !6391
  %shr72 = ashr i32 %conv71, %61, !dbg !6392
  %and73 = and i32 %shr72, 3, !dbg !6393
  %conv74 = trunc i32 %and73 to i8, !dbg !6394
  store i8 %conv74, i8* %p, align 1, !dbg !6388
  call void @llvm.dbg.declare(metadata i8* %g, metadata !6395, metadata !DIExpression()), !dbg !6396
  %62 = load i8*, i8** %gamma_table, align 8, !dbg !6397
  %63 = load i8, i8* %p, align 1, !dbg !6398
  %conv75 = zext i8 %63 to i32, !dbg !6398
  %64 = load i8, i8* %p, align 1, !dbg !6399
  %conv76 = zext i8 %64 to i32, !dbg !6399
  %shl77 = shl i32 %conv76, 2, !dbg !6400
  %or78 = or i32 %conv75, %shl77, !dbg !6401
  %65 = load i8, i8* %p, align 1, !dbg !6402
  %conv79 = zext i8 %65 to i32, !dbg !6402
  %shl80 = shl i32 %conv79, 4, !dbg !6403
  %or81 = or i32 %or78, %shl80, !dbg !6404
  %66 = load i8, i8* %p, align 1, !dbg !6405
  %conv82 = zext i8 %66 to i32, !dbg !6405
  %shl83 = shl i32 %conv82, 6, !dbg !6406
  %or84 = or i32 %or81, %shl83, !dbg !6407
  %idxprom = sext i32 %or84 to i64, !dbg !6397
  %arrayidx = getelementptr inbounds i8, i8* %62, i64 %idxprom, !dbg !6397
  %67 = load i8, i8* %arrayidx, align 1, !dbg !6397
  %conv85 = zext i8 %67 to i32, !dbg !6397
  %shr86 = ashr i32 %conv85, 6, !dbg !6408
  %and87 = and i32 %shr86, 3, !dbg !6409
  %conv88 = trunc i32 %and87 to i8, !dbg !6410
  store i8 %conv88, i8* %g, align 1, !dbg !6396
  %68 = load i32, i32* %shift, align 4, !dbg !6411
  %sub89 = sub nsw i32 6, %68, !dbg !6412
  %shr90 = ashr i32 16191, %sub89, !dbg !6413
  %and91 = and i32 %shr90, 255, !dbg !6414
  %conv92 = trunc i32 %and91 to i8, !dbg !6415
  %conv93 = zext i8 %conv92 to i32, !dbg !6415
  %69 = load i8*, i8** %sp, align 8, !dbg !6416
  %70 = load i8, i8* %69, align 1, !dbg !6417
  %conv94 = zext i8 %70 to i32, !dbg !6417
  %and95 = and i32 %conv94, %conv93, !dbg !6417
  %conv96 = trunc i32 %and95 to i8, !dbg !6417
  store i8 %conv96, i8* %69, align 1, !dbg !6417
  %71 = load i8, i8* %g, align 1, !dbg !6418
  %conv97 = zext i8 %71 to i32, !dbg !6418
  %72 = load i32, i32* %shift, align 4, !dbg !6419
  %shl98 = shl i32 %conv97, %72, !dbg !6420
  %conv99 = trunc i32 %shl98 to i8, !dbg !6421
  %conv100 = zext i8 %conv99 to i32, !dbg !6421
  %73 = load i8*, i8** %sp, align 8, !dbg !6422
  %74 = load i8, i8* %73, align 1, !dbg !6423
  %conv101 = zext i8 %74 to i32, !dbg !6423
  %or102 = or i32 %conv101, %conv100, !dbg !6423
  %conv103 = trunc i32 %or102 to i8, !dbg !6423
  store i8 %conv103, i8* %73, align 1, !dbg !6423
  br label %if.end104

if.end104:                                        ; preds = %if.else70, %if.then52
  %75 = load i32, i32* %shift, align 4, !dbg !6424
  %tobool105 = icmp ne i32 %75, 0, !dbg !6424
  br i1 %tobool105, label %if.else108, label %if.then106, !dbg !6426

if.then106:                                       ; preds = %if.end104
  store i32 6, i32* %shift, align 4, !dbg !6427
  %76 = load i8*, i8** %sp, align 8, !dbg !6429
  %incdec.ptr107 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !6429
  store i8* %incdec.ptr107, i8** %sp, align 8, !dbg !6429
  br label %if.end110, !dbg !6430

if.else108:                                       ; preds = %if.end104
  %77 = load i32, i32* %shift, align 4, !dbg !6431
  %sub109 = sub nsw i32 %77, 2, !dbg !6431
  store i32 %sub109, i32* %shift, align 4, !dbg !6431
  br label %if.end110

if.end110:                                        ; preds = %if.else108, %if.then106
  br label %for.inc111, !dbg !6432

for.inc111:                                       ; preds = %if.end110
  %78 = load i32, i32* %i, align 4, !dbg !6433
  %inc112 = add i32 %78, 1, !dbg !6433
  store i32 %inc112, i32* %i, align 4, !dbg !6433
  br label %for.cond38, !dbg !6434, !llvm.loop !6435

for.end113:                                       ; preds = %for.cond38
  br label %if.end157, !dbg !6437

if.else114:                                       ; preds = %sw.bb34
  %79 = load i8*, i8** %row.addr, align 8, !dbg !6438
  store i8* %79, i8** %sp, align 8, !dbg !6440
  store i32 6, i32* %shift, align 4, !dbg !6441
  store i32 0, i32* %i, align 4, !dbg !6442
  br label %for.cond115, !dbg !6444

for.cond115:                                      ; preds = %for.inc154, %if.else114
  %80 = load i32, i32* %i, align 4, !dbg !6445
  %81 = load i32, i32* %row_width, align 4, !dbg !6447
  %cmp116 = icmp ult i32 %80, %81, !dbg !6448
  br i1 %cmp116, label %for.body118, label %for.end156, !dbg !6449

for.body118:                                      ; preds = %for.cond115
  %82 = load i8*, i8** %sp, align 8, !dbg !6450
  %83 = load i8, i8* %82, align 1, !dbg !6453
  %conv119 = zext i8 %83 to i32, !dbg !6453
  %84 = load i32, i32* %shift, align 4, !dbg !6454
  %shr120 = ashr i32 %conv119, %84, !dbg !6455
  %and121 = and i32 %shr120, 3, !dbg !6456
  %conv122 = trunc i32 %and121 to i16, !dbg !6457
  %conv123 = zext i16 %conv122 to i32, !dbg !6457
  %85 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6458
  %trans_color124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %85, i32 0, i32 86, !dbg !6459
  %gray125 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color124, i32 0, i32 4, !dbg !6460
  %86 = load i16, i16* %gray125, align 8, !dbg !6460
  %conv126 = zext i16 %86 to i32, !dbg !6458
  %cmp127 = icmp eq i32 %conv123, %conv126, !dbg !6461
  br i1 %cmp127, label %if.then129, label %if.end147, !dbg !6462

if.then129:                                       ; preds = %for.body118
  %87 = load i32, i32* %shift, align 4, !dbg !6463
  %sub130 = sub nsw i32 6, %87, !dbg !6465
  %shr131 = ashr i32 16191, %sub130, !dbg !6466
  %and132 = and i32 %shr131, 255, !dbg !6467
  %conv133 = trunc i32 %and132 to i8, !dbg !6468
  %conv134 = zext i8 %conv133 to i32, !dbg !6468
  %88 = load i8*, i8** %sp, align 8, !dbg !6469
  %89 = load i8, i8* %88, align 1, !dbg !6470
  %conv135 = zext i8 %89 to i32, !dbg !6470
  %and136 = and i32 %conv135, %conv134, !dbg !6470
  %conv137 = trunc i32 %and136 to i8, !dbg !6470
  store i8 %conv137, i8* %88, align 1, !dbg !6470
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6471
  %background138 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 69, !dbg !6472
  %gray139 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background138, i32 0, i32 4, !dbg !6473
  %91 = load i16, i16* %gray139, align 8, !dbg !6473
  %conv140 = zext i16 %91 to i32, !dbg !6471
  %92 = load i32, i32* %shift, align 4, !dbg !6474
  %shl141 = shl i32 %conv140, %92, !dbg !6475
  %conv142 = trunc i32 %shl141 to i8, !dbg !6476
  %conv143 = zext i8 %conv142 to i32, !dbg !6476
  %93 = load i8*, i8** %sp, align 8, !dbg !6477
  %94 = load i8, i8* %93, align 1, !dbg !6478
  %conv144 = zext i8 %94 to i32, !dbg !6478
  %or145 = or i32 %conv144, %conv143, !dbg !6478
  %conv146 = trunc i32 %or145 to i8, !dbg !6478
  store i8 %conv146, i8* %93, align 1, !dbg !6478
  br label %if.end147, !dbg !6479

if.end147:                                        ; preds = %if.then129, %for.body118
  %95 = load i32, i32* %shift, align 4, !dbg !6480
  %tobool148 = icmp ne i32 %95, 0, !dbg !6480
  br i1 %tobool148, label %if.else151, label %if.then149, !dbg !6482

if.then149:                                       ; preds = %if.end147
  store i32 6, i32* %shift, align 4, !dbg !6483
  %96 = load i8*, i8** %sp, align 8, !dbg !6485
  %incdec.ptr150 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !6485
  store i8* %incdec.ptr150, i8** %sp, align 8, !dbg !6485
  br label %if.end153, !dbg !6486

if.else151:                                       ; preds = %if.end147
  %97 = load i32, i32* %shift, align 4, !dbg !6487
  %sub152 = sub nsw i32 %97, 2, !dbg !6487
  store i32 %sub152, i32* %shift, align 4, !dbg !6487
  br label %if.end153

if.end153:                                        ; preds = %if.else151, %if.then149
  br label %for.inc154, !dbg !6488

for.inc154:                                       ; preds = %if.end153
  %98 = load i32, i32* %i, align 4, !dbg !6489
  %inc155 = add i32 %98, 1, !dbg !6489
  store i32 %inc155, i32* %i, align 4, !dbg !6489
  br label %for.cond115, !dbg !6490, !llvm.loop !6491

for.end156:                                       ; preds = %for.cond115
  br label %if.end157

if.end157:                                        ; preds = %for.end156, %for.end113
  br label %sw.epilog, !dbg !6493

sw.bb158:                                         ; preds = %sw.bb
  %99 = load i8*, i8** %gamma_table, align 8, !dbg !6494
  %cmp159 = icmp ne i8* %99, null, !dbg !6497
  br i1 %cmp159, label %if.then161, label %if.else236, !dbg !6498

if.then161:                                       ; preds = %sw.bb158
  %100 = load i8*, i8** %row.addr, align 8, !dbg !6499
  store i8* %100, i8** %sp, align 8, !dbg !6501
  store i32 4, i32* %shift, align 4, !dbg !6502
  store i32 0, i32* %i, align 4, !dbg !6503
  br label %for.cond162, !dbg !6505

for.cond162:                                      ; preds = %for.inc233, %if.then161
  %101 = load i32, i32* %i, align 4, !dbg !6506
  %102 = load i32, i32* %row_width, align 4, !dbg !6508
  %cmp163 = icmp ult i32 %101, %102, !dbg !6509
  br i1 %cmp163, label %for.body165, label %for.end235, !dbg !6510

for.body165:                                      ; preds = %for.cond162
  %103 = load i8*, i8** %sp, align 8, !dbg !6511
  %104 = load i8, i8* %103, align 1, !dbg !6514
  %conv166 = zext i8 %104 to i32, !dbg !6514
  %105 = load i32, i32* %shift, align 4, !dbg !6515
  %shr167 = ashr i32 %conv166, %105, !dbg !6516
  %and168 = and i32 %shr167, 15, !dbg !6517
  %conv169 = trunc i32 %and168 to i16, !dbg !6518
  %conv170 = zext i16 %conv169 to i32, !dbg !6518
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6519
  %trans_color171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %106, i32 0, i32 86, !dbg !6520
  %gray172 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color171, i32 0, i32 4, !dbg !6521
  %107 = load i16, i16* %gray172, align 8, !dbg !6521
  %conv173 = zext i16 %107 to i32, !dbg !6519
  %cmp174 = icmp eq i32 %conv170, %conv173, !dbg !6522
  br i1 %cmp174, label %if.then176, label %if.else194, !dbg !6523

if.then176:                                       ; preds = %for.body165
  %108 = load i32, i32* %shift, align 4, !dbg !6524
  %sub177 = sub nsw i32 4, %108, !dbg !6526
  %shr178 = ashr i32 3855, %sub177, !dbg !6527
  %and179 = and i32 %shr178, 255, !dbg !6528
  %conv180 = trunc i32 %and179 to i8, !dbg !6529
  %conv181 = zext i8 %conv180 to i32, !dbg !6529
  %109 = load i8*, i8** %sp, align 8, !dbg !6530
  %110 = load i8, i8* %109, align 1, !dbg !6531
  %conv182 = zext i8 %110 to i32, !dbg !6531
  %and183 = and i32 %conv182, %conv181, !dbg !6531
  %conv184 = trunc i32 %and183 to i8, !dbg !6531
  store i8 %conv184, i8* %109, align 1, !dbg !6531
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6532
  %background185 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 69, !dbg !6533
  %gray186 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background185, i32 0, i32 4, !dbg !6534
  %112 = load i16, i16* %gray186, align 8, !dbg !6534
  %conv187 = zext i16 %112 to i32, !dbg !6532
  %113 = load i32, i32* %shift, align 4, !dbg !6535
  %shl188 = shl i32 %conv187, %113, !dbg !6536
  %conv189 = trunc i32 %shl188 to i8, !dbg !6537
  %conv190 = zext i8 %conv189 to i32, !dbg !6537
  %114 = load i8*, i8** %sp, align 8, !dbg !6538
  %115 = load i8, i8* %114, align 1, !dbg !6539
  %conv191 = zext i8 %115 to i32, !dbg !6539
  %or192 = or i32 %conv191, %conv190, !dbg !6539
  %conv193 = trunc i32 %or192 to i8, !dbg !6539
  store i8 %conv193, i8* %114, align 1, !dbg !6539
  br label %if.end226, !dbg !6540

if.else194:                                       ; preds = %for.body165
  call void @llvm.dbg.declare(metadata i8* %p195, metadata !6541, metadata !DIExpression()), !dbg !6543
  %116 = load i8*, i8** %sp, align 8, !dbg !6544
  %117 = load i8, i8* %116, align 1, !dbg !6545
  %conv196 = zext i8 %117 to i32, !dbg !6545
  %118 = load i32, i32* %shift, align 4, !dbg !6546
  %shr197 = ashr i32 %conv196, %118, !dbg !6547
  %and198 = and i32 %shr197, 15, !dbg !6548
  %conv199 = trunc i32 %and198 to i8, !dbg !6549
  store i8 %conv199, i8* %p195, align 1, !dbg !6543
  call void @llvm.dbg.declare(metadata i8* %g200, metadata !6550, metadata !DIExpression()), !dbg !6551
  %119 = load i8*, i8** %gamma_table, align 8, !dbg !6552
  %120 = load i8, i8* %p195, align 1, !dbg !6553
  %conv201 = zext i8 %120 to i32, !dbg !6553
  %121 = load i8, i8* %p195, align 1, !dbg !6554
  %conv202 = zext i8 %121 to i32, !dbg !6554
  %shl203 = shl i32 %conv202, 4, !dbg !6555
  %or204 = or i32 %conv201, %shl203, !dbg !6556
  %idxprom205 = sext i32 %or204 to i64, !dbg !6552
  %arrayidx206 = getelementptr inbounds i8, i8* %119, i64 %idxprom205, !dbg !6552
  %122 = load i8, i8* %arrayidx206, align 1, !dbg !6552
  %conv207 = zext i8 %122 to i32, !dbg !6552
  %shr208 = ashr i32 %conv207, 4, !dbg !6557
  %and209 = and i32 %shr208, 15, !dbg !6558
  %conv210 = trunc i32 %and209 to i8, !dbg !6559
  store i8 %conv210, i8* %g200, align 1, !dbg !6551
  %123 = load i32, i32* %shift, align 4, !dbg !6560
  %sub211 = sub nsw i32 4, %123, !dbg !6561
  %shr212 = ashr i32 3855, %sub211, !dbg !6562
  %and213 = and i32 %shr212, 255, !dbg !6563
  %conv214 = trunc i32 %and213 to i8, !dbg !6564
  %conv215 = zext i8 %conv214 to i32, !dbg !6564
  %124 = load i8*, i8** %sp, align 8, !dbg !6565
  %125 = load i8, i8* %124, align 1, !dbg !6566
  %conv216 = zext i8 %125 to i32, !dbg !6566
  %and217 = and i32 %conv216, %conv215, !dbg !6566
  %conv218 = trunc i32 %and217 to i8, !dbg !6566
  store i8 %conv218, i8* %124, align 1, !dbg !6566
  %126 = load i8, i8* %g200, align 1, !dbg !6567
  %conv219 = zext i8 %126 to i32, !dbg !6567
  %127 = load i32, i32* %shift, align 4, !dbg !6568
  %shl220 = shl i32 %conv219, %127, !dbg !6569
  %conv221 = trunc i32 %shl220 to i8, !dbg !6570
  %conv222 = zext i8 %conv221 to i32, !dbg !6570
  %128 = load i8*, i8** %sp, align 8, !dbg !6571
  %129 = load i8, i8* %128, align 1, !dbg !6572
  %conv223 = zext i8 %129 to i32, !dbg !6572
  %or224 = or i32 %conv223, %conv222, !dbg !6572
  %conv225 = trunc i32 %or224 to i8, !dbg !6572
  store i8 %conv225, i8* %128, align 1, !dbg !6572
  br label %if.end226

if.end226:                                        ; preds = %if.else194, %if.then176
  %130 = load i32, i32* %shift, align 4, !dbg !6573
  %tobool227 = icmp ne i32 %130, 0, !dbg !6573
  br i1 %tobool227, label %if.else230, label %if.then228, !dbg !6575

if.then228:                                       ; preds = %if.end226
  store i32 4, i32* %shift, align 4, !dbg !6576
  %131 = load i8*, i8** %sp, align 8, !dbg !6578
  %incdec.ptr229 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !6578
  store i8* %incdec.ptr229, i8** %sp, align 8, !dbg !6578
  br label %if.end232, !dbg !6579

if.else230:                                       ; preds = %if.end226
  %132 = load i32, i32* %shift, align 4, !dbg !6580
  %sub231 = sub nsw i32 %132, 4, !dbg !6580
  store i32 %sub231, i32* %shift, align 4, !dbg !6580
  br label %if.end232

if.end232:                                        ; preds = %if.else230, %if.then228
  br label %for.inc233, !dbg !6581

for.inc233:                                       ; preds = %if.end232
  %133 = load i32, i32* %i, align 4, !dbg !6582
  %inc234 = add i32 %133, 1, !dbg !6582
  store i32 %inc234, i32* %i, align 4, !dbg !6582
  br label %for.cond162, !dbg !6583, !llvm.loop !6584

for.end235:                                       ; preds = %for.cond162
  br label %if.end279, !dbg !6586

if.else236:                                       ; preds = %sw.bb158
  %134 = load i8*, i8** %row.addr, align 8, !dbg !6587
  store i8* %134, i8** %sp, align 8, !dbg !6589
  store i32 4, i32* %shift, align 4, !dbg !6590
  store i32 0, i32* %i, align 4, !dbg !6591
  br label %for.cond237, !dbg !6593

for.cond237:                                      ; preds = %for.inc276, %if.else236
  %135 = load i32, i32* %i, align 4, !dbg !6594
  %136 = load i32, i32* %row_width, align 4, !dbg !6596
  %cmp238 = icmp ult i32 %135, %136, !dbg !6597
  br i1 %cmp238, label %for.body240, label %for.end278, !dbg !6598

for.body240:                                      ; preds = %for.cond237
  %137 = load i8*, i8** %sp, align 8, !dbg !6599
  %138 = load i8, i8* %137, align 1, !dbg !6602
  %conv241 = zext i8 %138 to i32, !dbg !6602
  %139 = load i32, i32* %shift, align 4, !dbg !6603
  %shr242 = ashr i32 %conv241, %139, !dbg !6604
  %and243 = and i32 %shr242, 15, !dbg !6605
  %conv244 = trunc i32 %and243 to i16, !dbg !6606
  %conv245 = zext i16 %conv244 to i32, !dbg !6606
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6607
  %trans_color246 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 86, !dbg !6608
  %gray247 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color246, i32 0, i32 4, !dbg !6609
  %141 = load i16, i16* %gray247, align 8, !dbg !6609
  %conv248 = zext i16 %141 to i32, !dbg !6607
  %cmp249 = icmp eq i32 %conv245, %conv248, !dbg !6610
  br i1 %cmp249, label %if.then251, label %if.end269, !dbg !6611

if.then251:                                       ; preds = %for.body240
  %142 = load i32, i32* %shift, align 4, !dbg !6612
  %sub252 = sub nsw i32 4, %142, !dbg !6614
  %shr253 = ashr i32 3855, %sub252, !dbg !6615
  %and254 = and i32 %shr253, 255, !dbg !6616
  %conv255 = trunc i32 %and254 to i8, !dbg !6617
  %conv256 = zext i8 %conv255 to i32, !dbg !6617
  %143 = load i8*, i8** %sp, align 8, !dbg !6618
  %144 = load i8, i8* %143, align 1, !dbg !6619
  %conv257 = zext i8 %144 to i32, !dbg !6619
  %and258 = and i32 %conv257, %conv256, !dbg !6619
  %conv259 = trunc i32 %and258 to i8, !dbg !6619
  store i8 %conv259, i8* %143, align 1, !dbg !6619
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6620
  %background260 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 69, !dbg !6621
  %gray261 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background260, i32 0, i32 4, !dbg !6622
  %146 = load i16, i16* %gray261, align 8, !dbg !6622
  %conv262 = zext i16 %146 to i32, !dbg !6620
  %147 = load i32, i32* %shift, align 4, !dbg !6623
  %shl263 = shl i32 %conv262, %147, !dbg !6624
  %conv264 = trunc i32 %shl263 to i8, !dbg !6625
  %conv265 = zext i8 %conv264 to i32, !dbg !6625
  %148 = load i8*, i8** %sp, align 8, !dbg !6626
  %149 = load i8, i8* %148, align 1, !dbg !6627
  %conv266 = zext i8 %149 to i32, !dbg !6627
  %or267 = or i32 %conv266, %conv265, !dbg !6627
  %conv268 = trunc i32 %or267 to i8, !dbg !6627
  store i8 %conv268, i8* %148, align 1, !dbg !6627
  br label %if.end269, !dbg !6628

if.end269:                                        ; preds = %if.then251, %for.body240
  %150 = load i32, i32* %shift, align 4, !dbg !6629
  %tobool270 = icmp ne i32 %150, 0, !dbg !6629
  br i1 %tobool270, label %if.else273, label %if.then271, !dbg !6631

if.then271:                                       ; preds = %if.end269
  store i32 4, i32* %shift, align 4, !dbg !6632
  %151 = load i8*, i8** %sp, align 8, !dbg !6634
  %incdec.ptr272 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !6634
  store i8* %incdec.ptr272, i8** %sp, align 8, !dbg !6634
  br label %if.end275, !dbg !6635

if.else273:                                       ; preds = %if.end269
  %152 = load i32, i32* %shift, align 4, !dbg !6636
  %sub274 = sub nsw i32 %152, 4, !dbg !6636
  store i32 %sub274, i32* %shift, align 4, !dbg !6636
  br label %if.end275

if.end275:                                        ; preds = %if.else273, %if.then271
  br label %for.inc276, !dbg !6637

for.inc276:                                       ; preds = %if.end275
  %153 = load i32, i32* %i, align 4, !dbg !6638
  %inc277 = add i32 %153, 1, !dbg !6638
  store i32 %inc277, i32* %i, align 4, !dbg !6638
  br label %for.cond237, !dbg !6639, !llvm.loop !6640

for.end278:                                       ; preds = %for.cond237
  br label %if.end279

if.end279:                                        ; preds = %for.end278, %for.end235
  br label %sw.epilog, !dbg !6642

sw.bb280:                                         ; preds = %sw.bb
  %154 = load i8*, i8** %gamma_table, align 8, !dbg !6643
  %cmp281 = icmp ne i8* %154, null, !dbg !6646
  br i1 %cmp281, label %if.then283, label %if.else306, !dbg !6647

if.then283:                                       ; preds = %sw.bb280
  %155 = load i8*, i8** %row.addr, align 8, !dbg !6648
  store i8* %155, i8** %sp, align 8, !dbg !6650
  store i32 0, i32* %i, align 4, !dbg !6651
  br label %for.cond284, !dbg !6653

for.cond284:                                      ; preds = %for.inc302, %if.then283
  %156 = load i32, i32* %i, align 4, !dbg !6654
  %157 = load i32, i32* %row_width, align 4, !dbg !6656
  %cmp285 = icmp ult i32 %156, %157, !dbg !6657
  br i1 %cmp285, label %for.body287, label %for.end305, !dbg !6658

for.body287:                                      ; preds = %for.cond284
  %158 = load i8*, i8** %sp, align 8, !dbg !6659
  %159 = load i8, i8* %158, align 1, !dbg !6662
  %conv288 = zext i8 %159 to i32, !dbg !6662
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6663
  %trans_color289 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %160, i32 0, i32 86, !dbg !6664
  %gray290 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color289, i32 0, i32 4, !dbg !6665
  %161 = load i16, i16* %gray290, align 8, !dbg !6665
  %conv291 = zext i16 %161 to i32, !dbg !6663
  %cmp292 = icmp eq i32 %conv288, %conv291, !dbg !6666
  br i1 %cmp292, label %if.then294, label %if.else298, !dbg !6667

if.then294:                                       ; preds = %for.body287
  %162 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6668
  %background295 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %162, i32 0, i32 69, !dbg !6669
  %gray296 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background295, i32 0, i32 4, !dbg !6670
  %163 = load i16, i16* %gray296, align 8, !dbg !6670
  %conv297 = trunc i16 %163 to i8, !dbg !6671
  %164 = load i8*, i8** %sp, align 8, !dbg !6672
  store i8 %conv297, i8* %164, align 1, !dbg !6673
  br label %if.end301, !dbg !6674

if.else298:                                       ; preds = %for.body287
  %165 = load i8*, i8** %gamma_table, align 8, !dbg !6675
  %166 = load i8*, i8** %sp, align 8, !dbg !6676
  %167 = load i8, i8* %166, align 1, !dbg !6677
  %idxprom299 = zext i8 %167 to i64, !dbg !6675
  %arrayidx300 = getelementptr inbounds i8, i8* %165, i64 %idxprom299, !dbg !6675
  %168 = load i8, i8* %arrayidx300, align 1, !dbg !6675
  %169 = load i8*, i8** %sp, align 8, !dbg !6678
  store i8 %168, i8* %169, align 1, !dbg !6679
  br label %if.end301

if.end301:                                        ; preds = %if.else298, %if.then294
  br label %for.inc302, !dbg !6680

for.inc302:                                       ; preds = %if.end301
  %170 = load i32, i32* %i, align 4, !dbg !6681
  %inc303 = add i32 %170, 1, !dbg !6681
  store i32 %inc303, i32* %i, align 4, !dbg !6681
  %171 = load i8*, i8** %sp, align 8, !dbg !6682
  %incdec.ptr304 = getelementptr inbounds i8, i8* %171, i32 1, !dbg !6682
  store i8* %incdec.ptr304, i8** %sp, align 8, !dbg !6682
  br label %for.cond284, !dbg !6683, !llvm.loop !6684

for.end305:                                       ; preds = %for.cond284
  br label %if.end326, !dbg !6686

if.else306:                                       ; preds = %sw.bb280
  %172 = load i8*, i8** %row.addr, align 8, !dbg !6687
  store i8* %172, i8** %sp, align 8, !dbg !6689
  store i32 0, i32* %i, align 4, !dbg !6690
  br label %for.cond307, !dbg !6692

for.cond307:                                      ; preds = %for.inc322, %if.else306
  %173 = load i32, i32* %i, align 4, !dbg !6693
  %174 = load i32, i32* %row_width, align 4, !dbg !6695
  %cmp308 = icmp ult i32 %173, %174, !dbg !6696
  br i1 %cmp308, label %for.body310, label %for.end325, !dbg !6697

for.body310:                                      ; preds = %for.cond307
  %175 = load i8*, i8** %sp, align 8, !dbg !6698
  %176 = load i8, i8* %175, align 1, !dbg !6701
  %conv311 = zext i8 %176 to i32, !dbg !6701
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6702
  %trans_color312 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %177, i32 0, i32 86, !dbg !6703
  %gray313 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color312, i32 0, i32 4, !dbg !6704
  %178 = load i16, i16* %gray313, align 8, !dbg !6704
  %conv314 = zext i16 %178 to i32, !dbg !6702
  %cmp315 = icmp eq i32 %conv311, %conv314, !dbg !6705
  br i1 %cmp315, label %if.then317, label %if.end321, !dbg !6706

if.then317:                                       ; preds = %for.body310
  %179 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6707
  %background318 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %179, i32 0, i32 69, !dbg !6708
  %gray319 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background318, i32 0, i32 4, !dbg !6709
  %180 = load i16, i16* %gray319, align 8, !dbg !6709
  %conv320 = trunc i16 %180 to i8, !dbg !6710
  %181 = load i8*, i8** %sp, align 8, !dbg !6711
  store i8 %conv320, i8* %181, align 1, !dbg !6712
  br label %if.end321, !dbg !6713

if.end321:                                        ; preds = %if.then317, %for.body310
  br label %for.inc322, !dbg !6714

for.inc322:                                       ; preds = %if.end321
  %182 = load i32, i32* %i, align 4, !dbg !6715
  %inc323 = add i32 %182, 1, !dbg !6715
  store i32 %inc323, i32* %i, align 4, !dbg !6715
  %183 = load i8*, i8** %sp, align 8, !dbg !6716
  %incdec.ptr324 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !6716
  store i8* %incdec.ptr324, i8** %sp, align 8, !dbg !6716
  br label %for.cond307, !dbg !6717, !llvm.loop !6718

for.end325:                                       ; preds = %for.cond307
  br label %if.end326

if.end326:                                        ; preds = %for.end325, %for.end305
  br label %sw.epilog, !dbg !6720

sw.bb327:                                         ; preds = %sw.bb
  %184 = load i16**, i16*** %gamma_16, align 8, !dbg !6721
  %cmp328 = icmp ne i16** %184, null, !dbg !6724
  br i1 %cmp328, label %if.then330, label %if.else379, !dbg !6725

if.then330:                                       ; preds = %sw.bb327
  %185 = load i8*, i8** %row.addr, align 8, !dbg !6726
  store i8* %185, i8** %sp, align 8, !dbg !6728
  store i32 0, i32* %i, align 4, !dbg !6729
  br label %for.cond331, !dbg !6731

for.cond331:                                      ; preds = %for.inc375, %if.then330
  %186 = load i32, i32* %i, align 4, !dbg !6732
  %187 = load i32, i32* %row_width, align 4, !dbg !6734
  %cmp332 = icmp ult i32 %186, %187, !dbg !6735
  br i1 %cmp332, label %for.body334, label %for.end378, !dbg !6736

for.body334:                                      ; preds = %for.cond331
  call void @llvm.dbg.declare(metadata i16* %v, metadata !6737, metadata !DIExpression()), !dbg !6739
  %188 = load i8*, i8** %sp, align 8, !dbg !6740
  %189 = load i8, i8* %188, align 1, !dbg !6741
  %conv335 = zext i8 %189 to i32, !dbg !6742
  %shl336 = shl i32 %conv335, 8, !dbg !6743
  %190 = load i8*, i8** %sp, align 8, !dbg !6744
  %add.ptr = getelementptr inbounds i8, i8* %190, i64 1, !dbg !6745
  %191 = load i8, i8* %add.ptr, align 1, !dbg !6746
  %conv337 = zext i8 %191 to i32, !dbg !6746
  %add = add nsw i32 %shl336, %conv337, !dbg !6747
  %conv338 = trunc i32 %add to i16, !dbg !6748
  store i16 %conv338, i16* %v, align 2, !dbg !6749
  %192 = load i16, i16* %v, align 2, !dbg !6750
  %conv339 = zext i16 %192 to i32, !dbg !6750
  %193 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6752
  %trans_color340 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %193, i32 0, i32 86, !dbg !6753
  %gray341 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color340, i32 0, i32 4, !dbg !6754
  %194 = load i16, i16* %gray341, align 8, !dbg !6754
  %conv342 = zext i16 %194 to i32, !dbg !6752
  %cmp343 = icmp eq i32 %conv339, %conv342, !dbg !6755
  br i1 %cmp343, label %if.then345, label %if.else358, !dbg !6756

if.then345:                                       ; preds = %for.body334
  %195 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6757
  %background346 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %195, i32 0, i32 69, !dbg !6759
  %gray347 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background346, i32 0, i32 4, !dbg !6760
  %196 = load i16, i16* %gray347, align 8, !dbg !6760
  %conv348 = zext i16 %196 to i32, !dbg !6757
  %shr349 = ashr i32 %conv348, 8, !dbg !6761
  %and350 = and i32 %shr349, 255, !dbg !6762
  %conv351 = trunc i32 %and350 to i8, !dbg !6763
  %197 = load i8*, i8** %sp, align 8, !dbg !6764
  store i8 %conv351, i8* %197, align 1, !dbg !6765
  %198 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6766
  %background352 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %198, i32 0, i32 69, !dbg !6767
  %gray353 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background352, i32 0, i32 4, !dbg !6768
  %199 = load i16, i16* %gray353, align 8, !dbg !6768
  %conv354 = zext i16 %199 to i32, !dbg !6766
  %and355 = and i32 %conv354, 255, !dbg !6769
  %conv356 = trunc i32 %and355 to i8, !dbg !6770
  %200 = load i8*, i8** %sp, align 8, !dbg !6771
  %add.ptr357 = getelementptr inbounds i8, i8* %200, i64 1, !dbg !6772
  store i8 %conv356, i8* %add.ptr357, align 1, !dbg !6773
  br label %if.end374, !dbg !6774

if.else358:                                       ; preds = %for.body334
  %201 = load i16**, i16*** %gamma_16, align 8, !dbg !6775
  %202 = load i8*, i8** %sp, align 8, !dbg !6777
  %add.ptr359 = getelementptr inbounds i8, i8* %202, i64 1, !dbg !6778
  %203 = load i8, i8* %add.ptr359, align 1, !dbg !6779
  %conv360 = zext i8 %203 to i32, !dbg !6779
  %204 = load i32, i32* %gamma_shift, align 4, !dbg !6780
  %shr361 = ashr i32 %conv360, %204, !dbg !6781
  %idxprom362 = sext i32 %shr361 to i64, !dbg !6775
  %arrayidx363 = getelementptr inbounds i16*, i16** %201, i64 %idxprom362, !dbg !6775
  %205 = load i16*, i16** %arrayidx363, align 8, !dbg !6775
  %206 = load i8*, i8** %sp, align 8, !dbg !6782
  %207 = load i8, i8* %206, align 1, !dbg !6783
  %idxprom364 = zext i8 %207 to i64, !dbg !6775
  %arrayidx365 = getelementptr inbounds i16, i16* %205, i64 %idxprom364, !dbg !6775
  %208 = load i16, i16* %arrayidx365, align 2, !dbg !6775
  store i16 %208, i16* %v, align 2, !dbg !6784
  %209 = load i16, i16* %v, align 2, !dbg !6785
  %conv366 = zext i16 %209 to i32, !dbg !6785
  %shr367 = ashr i32 %conv366, 8, !dbg !6786
  %and368 = and i32 %shr367, 255, !dbg !6787
  %conv369 = trunc i32 %and368 to i8, !dbg !6788
  %210 = load i8*, i8** %sp, align 8, !dbg !6789
  store i8 %conv369, i8* %210, align 1, !dbg !6790
  %211 = load i16, i16* %v, align 2, !dbg !6791
  %conv370 = zext i16 %211 to i32, !dbg !6791
  %and371 = and i32 %conv370, 255, !dbg !6792
  %conv372 = trunc i32 %and371 to i8, !dbg !6793
  %212 = load i8*, i8** %sp, align 8, !dbg !6794
  %add.ptr373 = getelementptr inbounds i8, i8* %212, i64 1, !dbg !6795
  store i8 %conv372, i8* %add.ptr373, align 1, !dbg !6796
  br label %if.end374

if.end374:                                        ; preds = %if.else358, %if.then345
  br label %for.inc375, !dbg !6797

for.inc375:                                       ; preds = %if.end374
  %213 = load i32, i32* %i, align 4, !dbg !6798
  %inc376 = add i32 %213, 1, !dbg !6798
  store i32 %inc376, i32* %i, align 4, !dbg !6798
  %214 = load i8*, i8** %sp, align 8, !dbg !6799
  %add.ptr377 = getelementptr inbounds i8, i8* %214, i64 2, !dbg !6799
  store i8* %add.ptr377, i8** %sp, align 8, !dbg !6799
  br label %for.cond331, !dbg !6800, !llvm.loop !6801

for.end378:                                       ; preds = %for.cond331
  br label %if.end415, !dbg !6803

if.else379:                                       ; preds = %sw.bb327
  %215 = load i8*, i8** %row.addr, align 8, !dbg !6804
  store i8* %215, i8** %sp, align 8, !dbg !6806
  store i32 0, i32* %i, align 4, !dbg !6807
  br label %for.cond380, !dbg !6809

for.cond380:                                      ; preds = %for.inc411, %if.else379
  %216 = load i32, i32* %i, align 4, !dbg !6810
  %217 = load i32, i32* %row_width, align 4, !dbg !6812
  %cmp381 = icmp ult i32 %216, %217, !dbg !6813
  br i1 %cmp381, label %for.body383, label %for.end414, !dbg !6814

for.body383:                                      ; preds = %for.cond380
  call void @llvm.dbg.declare(metadata i16* %v384, metadata !6815, metadata !DIExpression()), !dbg !6817
  %218 = load i8*, i8** %sp, align 8, !dbg !6818
  %219 = load i8, i8* %218, align 1, !dbg !6819
  %conv385 = zext i8 %219 to i32, !dbg !6820
  %shl386 = shl i32 %conv385, 8, !dbg !6821
  %220 = load i8*, i8** %sp, align 8, !dbg !6822
  %add.ptr387 = getelementptr inbounds i8, i8* %220, i64 1, !dbg !6823
  %221 = load i8, i8* %add.ptr387, align 1, !dbg !6824
  %conv388 = zext i8 %221 to i32, !dbg !6824
  %add389 = add nsw i32 %shl386, %conv388, !dbg !6825
  %conv390 = trunc i32 %add389 to i16, !dbg !6826
  store i16 %conv390, i16* %v384, align 2, !dbg !6827
  %222 = load i16, i16* %v384, align 2, !dbg !6828
  %conv391 = zext i16 %222 to i32, !dbg !6828
  %223 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6830
  %trans_color392 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %223, i32 0, i32 86, !dbg !6831
  %gray393 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color392, i32 0, i32 4, !dbg !6832
  %224 = load i16, i16* %gray393, align 8, !dbg !6832
  %conv394 = zext i16 %224 to i32, !dbg !6830
  %cmp395 = icmp eq i32 %conv391, %conv394, !dbg !6833
  br i1 %cmp395, label %if.then397, label %if.end410, !dbg !6834

if.then397:                                       ; preds = %for.body383
  %225 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6835
  %background398 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %225, i32 0, i32 69, !dbg !6837
  %gray399 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background398, i32 0, i32 4, !dbg !6838
  %226 = load i16, i16* %gray399, align 8, !dbg !6838
  %conv400 = zext i16 %226 to i32, !dbg !6835
  %shr401 = ashr i32 %conv400, 8, !dbg !6839
  %and402 = and i32 %shr401, 255, !dbg !6840
  %conv403 = trunc i32 %and402 to i8, !dbg !6841
  %227 = load i8*, i8** %sp, align 8, !dbg !6842
  store i8 %conv403, i8* %227, align 1, !dbg !6843
  %228 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6844
  %background404 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %228, i32 0, i32 69, !dbg !6845
  %gray405 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background404, i32 0, i32 4, !dbg !6846
  %229 = load i16, i16* %gray405, align 8, !dbg !6846
  %conv406 = zext i16 %229 to i32, !dbg !6844
  %and407 = and i32 %conv406, 255, !dbg !6847
  %conv408 = trunc i32 %and407 to i8, !dbg !6848
  %230 = load i8*, i8** %sp, align 8, !dbg !6849
  %add.ptr409 = getelementptr inbounds i8, i8* %230, i64 1, !dbg !6850
  store i8 %conv408, i8* %add.ptr409, align 1, !dbg !6851
  br label %if.end410, !dbg !6852

if.end410:                                        ; preds = %if.then397, %for.body383
  br label %for.inc411, !dbg !6853

for.inc411:                                       ; preds = %if.end410
  %231 = load i32, i32* %i, align 4, !dbg !6854
  %inc412 = add i32 %231, 1, !dbg !6854
  store i32 %inc412, i32* %i, align 4, !dbg !6854
  %232 = load i8*, i8** %sp, align 8, !dbg !6855
  %add.ptr413 = getelementptr inbounds i8, i8* %232, i64 2, !dbg !6855
  store i8* %add.ptr413, i8** %sp, align 8, !dbg !6855
  br label %for.cond380, !dbg !6856, !llvm.loop !6857

for.end414:                                       ; preds = %for.cond380
  br label %if.end415

if.end415:                                        ; preds = %for.end414, %for.end378
  br label %sw.epilog, !dbg !6859

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog, !dbg !6860

sw.epilog:                                        ; preds = %sw.default, %if.end415, %if.end326, %if.end279, %if.end157, %for.end
  br label %sw.epilog1763, !dbg !6861

sw.bb416:                                         ; preds = %entry
  %233 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6862
  %bit_depth417 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %233, i32 0, i32 3, !dbg !6865
  %234 = load i8, i8* %bit_depth417, align 1, !dbg !6865
  %conv418 = zext i8 %234 to i32, !dbg !6862
  %cmp419 = icmp eq i32 %conv418, 8, !dbg !6866
  br i1 %cmp419, label %if.then421, label %if.else520, !dbg !6867

if.then421:                                       ; preds = %sw.bb416
  %235 = load i8*, i8** %gamma_table, align 8, !dbg !6868
  %cmp422 = icmp ne i8* %235, null, !dbg !6871
  br i1 %cmp422, label %if.then424, label %if.else475, !dbg !6872

if.then424:                                       ; preds = %if.then421
  %236 = load i8*, i8** %row.addr, align 8, !dbg !6873
  store i8* %236, i8** %sp, align 8, !dbg !6875
  store i32 0, i32* %i, align 4, !dbg !6876
  br label %for.cond425, !dbg !6878

for.cond425:                                      ; preds = %for.inc471, %if.then424
  %237 = load i32, i32* %i, align 4, !dbg !6879
  %238 = load i32, i32* %row_width, align 4, !dbg !6881
  %cmp426 = icmp ult i32 %237, %238, !dbg !6882
  br i1 %cmp426, label %for.body428, label %for.end474, !dbg !6883

for.body428:                                      ; preds = %for.cond425
  %239 = load i8*, i8** %sp, align 8, !dbg !6884
  %240 = load i8, i8* %239, align 1, !dbg !6887
  %conv429 = zext i8 %240 to i32, !dbg !6887
  %241 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6888
  %trans_color430 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %241, i32 0, i32 86, !dbg !6889
  %red = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color430, i32 0, i32 1, !dbg !6890
  %242 = load i16, i16* %red, align 2, !dbg !6890
  %conv431 = zext i16 %242 to i32, !dbg !6888
  %cmp432 = icmp eq i32 %conv429, %conv431, !dbg !6891
  br i1 %cmp432, label %land.lhs.true, label %if.else459, !dbg !6892

land.lhs.true:                                    ; preds = %for.body428
  %243 = load i8*, i8** %sp, align 8, !dbg !6893
  %add.ptr434 = getelementptr inbounds i8, i8* %243, i64 1, !dbg !6894
  %244 = load i8, i8* %add.ptr434, align 1, !dbg !6895
  %conv435 = zext i8 %244 to i32, !dbg !6895
  %245 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6896
  %trans_color436 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %245, i32 0, i32 86, !dbg !6897
  %green = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color436, i32 0, i32 2, !dbg !6898
  %246 = load i16, i16* %green, align 4, !dbg !6898
  %conv437 = zext i16 %246 to i32, !dbg !6896
  %cmp438 = icmp eq i32 %conv435, %conv437, !dbg !6899
  br i1 %cmp438, label %land.lhs.true440, label %if.else459, !dbg !6900

land.lhs.true440:                                 ; preds = %land.lhs.true
  %247 = load i8*, i8** %sp, align 8, !dbg !6901
  %add.ptr441 = getelementptr inbounds i8, i8* %247, i64 2, !dbg !6902
  %248 = load i8, i8* %add.ptr441, align 1, !dbg !6903
  %conv442 = zext i8 %248 to i32, !dbg !6903
  %249 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6904
  %trans_color443 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %249, i32 0, i32 86, !dbg !6905
  %blue = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color443, i32 0, i32 3, !dbg !6906
  %250 = load i16, i16* %blue, align 2, !dbg !6906
  %conv444 = zext i16 %250 to i32, !dbg !6904
  %cmp445 = icmp eq i32 %conv442, %conv444, !dbg !6907
  br i1 %cmp445, label %if.then447, label %if.else459, !dbg !6908

if.then447:                                       ; preds = %land.lhs.true440
  %251 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6909
  %background448 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %251, i32 0, i32 69, !dbg !6911
  %red449 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background448, i32 0, i32 1, !dbg !6912
  %252 = load i16, i16* %red449, align 2, !dbg !6912
  %conv450 = trunc i16 %252 to i8, !dbg !6913
  %253 = load i8*, i8** %sp, align 8, !dbg !6914
  store i8 %conv450, i8* %253, align 1, !dbg !6915
  %254 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6916
  %background451 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %254, i32 0, i32 69, !dbg !6917
  %green452 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background451, i32 0, i32 2, !dbg !6918
  %255 = load i16, i16* %green452, align 4, !dbg !6918
  %conv453 = trunc i16 %255 to i8, !dbg !6919
  %256 = load i8*, i8** %sp, align 8, !dbg !6920
  %add.ptr454 = getelementptr inbounds i8, i8* %256, i64 1, !dbg !6921
  store i8 %conv453, i8* %add.ptr454, align 1, !dbg !6922
  %257 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6923
  %background455 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %257, i32 0, i32 69, !dbg !6924
  %blue456 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background455, i32 0, i32 3, !dbg !6925
  %258 = load i16, i16* %blue456, align 2, !dbg !6925
  %conv457 = trunc i16 %258 to i8, !dbg !6926
  %259 = load i8*, i8** %sp, align 8, !dbg !6927
  %add.ptr458 = getelementptr inbounds i8, i8* %259, i64 2, !dbg !6928
  store i8 %conv457, i8* %add.ptr458, align 1, !dbg !6929
  br label %if.end470, !dbg !6930

if.else459:                                       ; preds = %land.lhs.true440, %land.lhs.true, %for.body428
  %260 = load i8*, i8** %gamma_table, align 8, !dbg !6931
  %261 = load i8*, i8** %sp, align 8, !dbg !6933
  %262 = load i8, i8* %261, align 1, !dbg !6934
  %idxprom460 = zext i8 %262 to i64, !dbg !6931
  %arrayidx461 = getelementptr inbounds i8, i8* %260, i64 %idxprom460, !dbg !6931
  %263 = load i8, i8* %arrayidx461, align 1, !dbg !6931
  %264 = load i8*, i8** %sp, align 8, !dbg !6935
  store i8 %263, i8* %264, align 1, !dbg !6936
  %265 = load i8*, i8** %gamma_table, align 8, !dbg !6937
  %266 = load i8*, i8** %sp, align 8, !dbg !6938
  %add.ptr462 = getelementptr inbounds i8, i8* %266, i64 1, !dbg !6939
  %267 = load i8, i8* %add.ptr462, align 1, !dbg !6940
  %idxprom463 = zext i8 %267 to i64, !dbg !6937
  %arrayidx464 = getelementptr inbounds i8, i8* %265, i64 %idxprom463, !dbg !6937
  %268 = load i8, i8* %arrayidx464, align 1, !dbg !6937
  %269 = load i8*, i8** %sp, align 8, !dbg !6941
  %add.ptr465 = getelementptr inbounds i8, i8* %269, i64 1, !dbg !6942
  store i8 %268, i8* %add.ptr465, align 1, !dbg !6943
  %270 = load i8*, i8** %gamma_table, align 8, !dbg !6944
  %271 = load i8*, i8** %sp, align 8, !dbg !6945
  %add.ptr466 = getelementptr inbounds i8, i8* %271, i64 2, !dbg !6946
  %272 = load i8, i8* %add.ptr466, align 1, !dbg !6947
  %idxprom467 = zext i8 %272 to i64, !dbg !6944
  %arrayidx468 = getelementptr inbounds i8, i8* %270, i64 %idxprom467, !dbg !6944
  %273 = load i8, i8* %arrayidx468, align 1, !dbg !6944
  %274 = load i8*, i8** %sp, align 8, !dbg !6948
  %add.ptr469 = getelementptr inbounds i8, i8* %274, i64 2, !dbg !6949
  store i8 %273, i8* %add.ptr469, align 1, !dbg !6950
  br label %if.end470

if.end470:                                        ; preds = %if.else459, %if.then447
  br label %for.inc471, !dbg !6951

for.inc471:                                       ; preds = %if.end470
  %275 = load i32, i32* %i, align 4, !dbg !6952
  %inc472 = add i32 %275, 1, !dbg !6952
  store i32 %inc472, i32* %i, align 4, !dbg !6952
  %276 = load i8*, i8** %sp, align 8, !dbg !6953
  %add.ptr473 = getelementptr inbounds i8, i8* %276, i64 3, !dbg !6953
  store i8* %add.ptr473, i8** %sp, align 8, !dbg !6953
  br label %for.cond425, !dbg !6954, !llvm.loop !6955

for.end474:                                       ; preds = %for.cond425
  br label %if.end519, !dbg !6957

if.else475:                                       ; preds = %if.then421
  %277 = load i8*, i8** %row.addr, align 8, !dbg !6958
  store i8* %277, i8** %sp, align 8, !dbg !6960
  store i32 0, i32* %i, align 4, !dbg !6961
  br label %for.cond476, !dbg !6963

for.cond476:                                      ; preds = %for.inc515, %if.else475
  %278 = load i32, i32* %i, align 4, !dbg !6964
  %279 = load i32, i32* %row_width, align 4, !dbg !6966
  %cmp477 = icmp ult i32 %278, %279, !dbg !6967
  br i1 %cmp477, label %for.body479, label %for.end518, !dbg !6968

for.body479:                                      ; preds = %for.cond476
  %280 = load i8*, i8** %sp, align 8, !dbg !6969
  %281 = load i8, i8* %280, align 1, !dbg !6972
  %conv480 = zext i8 %281 to i32, !dbg !6972
  %282 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6973
  %trans_color481 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %282, i32 0, i32 86, !dbg !6974
  %red482 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color481, i32 0, i32 1, !dbg !6975
  %283 = load i16, i16* %red482, align 2, !dbg !6975
  %conv483 = zext i16 %283 to i32, !dbg !6973
  %cmp484 = icmp eq i32 %conv480, %conv483, !dbg !6976
  br i1 %cmp484, label %land.lhs.true486, label %if.end514, !dbg !6977

land.lhs.true486:                                 ; preds = %for.body479
  %284 = load i8*, i8** %sp, align 8, !dbg !6978
  %add.ptr487 = getelementptr inbounds i8, i8* %284, i64 1, !dbg !6979
  %285 = load i8, i8* %add.ptr487, align 1, !dbg !6980
  %conv488 = zext i8 %285 to i32, !dbg !6980
  %286 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6981
  %trans_color489 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %286, i32 0, i32 86, !dbg !6982
  %green490 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color489, i32 0, i32 2, !dbg !6983
  %287 = load i16, i16* %green490, align 4, !dbg !6983
  %conv491 = zext i16 %287 to i32, !dbg !6981
  %cmp492 = icmp eq i32 %conv488, %conv491, !dbg !6984
  br i1 %cmp492, label %land.lhs.true494, label %if.end514, !dbg !6985

land.lhs.true494:                                 ; preds = %land.lhs.true486
  %288 = load i8*, i8** %sp, align 8, !dbg !6986
  %add.ptr495 = getelementptr inbounds i8, i8* %288, i64 2, !dbg !6987
  %289 = load i8, i8* %add.ptr495, align 1, !dbg !6988
  %conv496 = zext i8 %289 to i32, !dbg !6988
  %290 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6989
  %trans_color497 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %290, i32 0, i32 86, !dbg !6990
  %blue498 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color497, i32 0, i32 3, !dbg !6991
  %291 = load i16, i16* %blue498, align 2, !dbg !6991
  %conv499 = zext i16 %291 to i32, !dbg !6989
  %cmp500 = icmp eq i32 %conv496, %conv499, !dbg !6992
  br i1 %cmp500, label %if.then502, label %if.end514, !dbg !6993

if.then502:                                       ; preds = %land.lhs.true494
  %292 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6994
  %background503 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %292, i32 0, i32 69, !dbg !6996
  %red504 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background503, i32 0, i32 1, !dbg !6997
  %293 = load i16, i16* %red504, align 2, !dbg !6997
  %conv505 = trunc i16 %293 to i8, !dbg !6998
  %294 = load i8*, i8** %sp, align 8, !dbg !6999
  store i8 %conv505, i8* %294, align 1, !dbg !7000
  %295 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7001
  %background506 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %295, i32 0, i32 69, !dbg !7002
  %green507 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background506, i32 0, i32 2, !dbg !7003
  %296 = load i16, i16* %green507, align 4, !dbg !7003
  %conv508 = trunc i16 %296 to i8, !dbg !7004
  %297 = load i8*, i8** %sp, align 8, !dbg !7005
  %add.ptr509 = getelementptr inbounds i8, i8* %297, i64 1, !dbg !7006
  store i8 %conv508, i8* %add.ptr509, align 1, !dbg !7007
  %298 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7008
  %background510 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %298, i32 0, i32 69, !dbg !7009
  %blue511 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background510, i32 0, i32 3, !dbg !7010
  %299 = load i16, i16* %blue511, align 2, !dbg !7010
  %conv512 = trunc i16 %299 to i8, !dbg !7011
  %300 = load i8*, i8** %sp, align 8, !dbg !7012
  %add.ptr513 = getelementptr inbounds i8, i8* %300, i64 2, !dbg !7013
  store i8 %conv512, i8* %add.ptr513, align 1, !dbg !7014
  br label %if.end514, !dbg !7015

if.end514:                                        ; preds = %if.then502, %land.lhs.true494, %land.lhs.true486, %for.body479
  br label %for.inc515, !dbg !7016

for.inc515:                                       ; preds = %if.end514
  %301 = load i32, i32* %i, align 4, !dbg !7017
  %inc516 = add i32 %301, 1, !dbg !7017
  store i32 %inc516, i32* %i, align 4, !dbg !7017
  %302 = load i8*, i8** %sp, align 8, !dbg !7018
  %add.ptr517 = getelementptr inbounds i8, i8* %302, i64 3, !dbg !7018
  store i8* %add.ptr517, i8** %sp, align 8, !dbg !7018
  br label %for.cond476, !dbg !7019, !llvm.loop !7020

for.end518:                                       ; preds = %for.cond476
  br label %if.end519

if.end519:                                        ; preds = %for.end518, %for.end474
  br label %if.end757, !dbg !7022

if.else520:                                       ; preds = %sw.bb416
  %303 = load i16**, i16*** %gamma_16, align 8, !dbg !7023
  %cmp521 = icmp ne i16** %303, null, !dbg !7026
  br i1 %cmp521, label %if.then523, label %if.else664, !dbg !7027

if.then523:                                       ; preds = %if.else520
  %304 = load i8*, i8** %row.addr, align 8, !dbg !7028
  store i8* %304, i8** %sp, align 8, !dbg !7030
  store i32 0, i32* %i, align 4, !dbg !7031
  br label %for.cond524, !dbg !7033

for.cond524:                                      ; preds = %for.inc660, %if.then523
  %305 = load i32, i32* %i, align 4, !dbg !7034
  %306 = load i32, i32* %row_width, align 4, !dbg !7036
  %cmp525 = icmp ult i32 %305, %306, !dbg !7037
  br i1 %cmp525, label %for.body527, label %for.end663, !dbg !7038

for.body527:                                      ; preds = %for.cond524
  call void @llvm.dbg.declare(metadata i16* %r, metadata !7039, metadata !DIExpression()), !dbg !7041
  %307 = load i8*, i8** %sp, align 8, !dbg !7042
  %308 = load i8, i8* %307, align 1, !dbg !7043
  %conv528 = zext i8 %308 to i32, !dbg !7044
  %shl529 = shl i32 %conv528, 8, !dbg !7045
  %309 = load i8*, i8** %sp, align 8, !dbg !7046
  %add.ptr530 = getelementptr inbounds i8, i8* %309, i64 1, !dbg !7047
  %310 = load i8, i8* %add.ptr530, align 1, !dbg !7048
  %conv531 = zext i8 %310 to i32, !dbg !7048
  %add532 = add nsw i32 %shl529, %conv531, !dbg !7049
  %conv533 = trunc i32 %add532 to i16, !dbg !7050
  store i16 %conv533, i16* %r, align 2, !dbg !7041
  call void @llvm.dbg.declare(metadata i16* %g534, metadata !7051, metadata !DIExpression()), !dbg !7052
  %311 = load i8*, i8** %sp, align 8, !dbg !7053
  %add.ptr535 = getelementptr inbounds i8, i8* %311, i64 2, !dbg !7054
  %312 = load i8, i8* %add.ptr535, align 1, !dbg !7055
  %conv536 = zext i8 %312 to i32, !dbg !7056
  %shl537 = shl i32 %conv536, 8, !dbg !7057
  %313 = load i8*, i8** %sp, align 8, !dbg !7058
  %add.ptr538 = getelementptr inbounds i8, i8* %313, i64 3, !dbg !7059
  %314 = load i8, i8* %add.ptr538, align 1, !dbg !7060
  %conv539 = zext i8 %314 to i32, !dbg !7060
  %add540 = add nsw i32 %shl537, %conv539, !dbg !7061
  %conv541 = trunc i32 %add540 to i16, !dbg !7062
  store i16 %conv541, i16* %g534, align 2, !dbg !7052
  call void @llvm.dbg.declare(metadata i16* %b, metadata !7063, metadata !DIExpression()), !dbg !7064
  %315 = load i8*, i8** %sp, align 8, !dbg !7065
  %add.ptr542 = getelementptr inbounds i8, i8* %315, i64 4, !dbg !7066
  %316 = load i8, i8* %add.ptr542, align 1, !dbg !7067
  %conv543 = zext i8 %316 to i32, !dbg !7068
  %shl544 = shl i32 %conv543, 8, !dbg !7069
  %317 = load i8*, i8** %sp, align 8, !dbg !7070
  %add.ptr545 = getelementptr inbounds i8, i8* %317, i64 5, !dbg !7071
  %318 = load i8, i8* %add.ptr545, align 1, !dbg !7072
  %conv546 = zext i8 %318 to i32, !dbg !7072
  %add547 = add nsw i32 %shl544, %conv546, !dbg !7073
  %conv548 = trunc i32 %add547 to i16, !dbg !7074
  store i16 %conv548, i16* %b, align 2, !dbg !7064
  %319 = load i16, i16* %r, align 2, !dbg !7075
  %conv549 = zext i16 %319 to i32, !dbg !7075
  %320 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7077
  %trans_color550 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %320, i32 0, i32 86, !dbg !7078
  %red551 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color550, i32 0, i32 1, !dbg !7079
  %321 = load i16, i16* %red551, align 2, !dbg !7079
  %conv552 = zext i16 %321 to i32, !dbg !7077
  %cmp553 = icmp eq i32 %conv549, %conv552, !dbg !7080
  br i1 %cmp553, label %land.lhs.true555, label %if.else608, !dbg !7081

land.lhs.true555:                                 ; preds = %for.body527
  %322 = load i16, i16* %g534, align 2, !dbg !7082
  %conv556 = zext i16 %322 to i32, !dbg !7082
  %323 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7083
  %trans_color557 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %323, i32 0, i32 86, !dbg !7084
  %green558 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color557, i32 0, i32 2, !dbg !7085
  %324 = load i16, i16* %green558, align 4, !dbg !7085
  %conv559 = zext i16 %324 to i32, !dbg !7083
  %cmp560 = icmp eq i32 %conv556, %conv559, !dbg !7086
  br i1 %cmp560, label %land.lhs.true562, label %if.else608, !dbg !7087

land.lhs.true562:                                 ; preds = %land.lhs.true555
  %325 = load i16, i16* %b, align 2, !dbg !7088
  %conv563 = zext i16 %325 to i32, !dbg !7088
  %326 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7089
  %trans_color564 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %326, i32 0, i32 86, !dbg !7090
  %blue565 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color564, i32 0, i32 3, !dbg !7091
  %327 = load i16, i16* %blue565, align 2, !dbg !7091
  %conv566 = zext i16 %327 to i32, !dbg !7089
  %cmp567 = icmp eq i32 %conv563, %conv566, !dbg !7092
  br i1 %cmp567, label %if.then569, label %if.else608, !dbg !7093

if.then569:                                       ; preds = %land.lhs.true562
  %328 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7094
  %background570 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %328, i32 0, i32 69, !dbg !7096
  %red571 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background570, i32 0, i32 1, !dbg !7097
  %329 = load i16, i16* %red571, align 2, !dbg !7097
  %conv572 = zext i16 %329 to i32, !dbg !7094
  %shr573 = ashr i32 %conv572, 8, !dbg !7098
  %and574 = and i32 %shr573, 255, !dbg !7099
  %conv575 = trunc i32 %and574 to i8, !dbg !7100
  %330 = load i8*, i8** %sp, align 8, !dbg !7101
  store i8 %conv575, i8* %330, align 1, !dbg !7102
  %331 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7103
  %background576 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %331, i32 0, i32 69, !dbg !7104
  %red577 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background576, i32 0, i32 1, !dbg !7105
  %332 = load i16, i16* %red577, align 2, !dbg !7105
  %conv578 = zext i16 %332 to i32, !dbg !7103
  %and579 = and i32 %conv578, 255, !dbg !7106
  %conv580 = trunc i32 %and579 to i8, !dbg !7107
  %333 = load i8*, i8** %sp, align 8, !dbg !7108
  %add.ptr581 = getelementptr inbounds i8, i8* %333, i64 1, !dbg !7109
  store i8 %conv580, i8* %add.ptr581, align 1, !dbg !7110
  %334 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7111
  %background582 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %334, i32 0, i32 69, !dbg !7112
  %green583 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background582, i32 0, i32 2, !dbg !7113
  %335 = load i16, i16* %green583, align 4, !dbg !7113
  %conv584 = zext i16 %335 to i32, !dbg !7111
  %shr585 = ashr i32 %conv584, 8, !dbg !7114
  %and586 = and i32 %shr585, 255, !dbg !7115
  %conv587 = trunc i32 %and586 to i8, !dbg !7116
  %336 = load i8*, i8** %sp, align 8, !dbg !7117
  %add.ptr588 = getelementptr inbounds i8, i8* %336, i64 2, !dbg !7118
  store i8 %conv587, i8* %add.ptr588, align 1, !dbg !7119
  %337 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7120
  %background589 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %337, i32 0, i32 69, !dbg !7121
  %green590 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background589, i32 0, i32 2, !dbg !7122
  %338 = load i16, i16* %green590, align 4, !dbg !7122
  %conv591 = zext i16 %338 to i32, !dbg !7120
  %and592 = and i32 %conv591, 255, !dbg !7123
  %conv593 = trunc i32 %and592 to i8, !dbg !7124
  %339 = load i8*, i8** %sp, align 8, !dbg !7125
  %add.ptr594 = getelementptr inbounds i8, i8* %339, i64 3, !dbg !7126
  store i8 %conv593, i8* %add.ptr594, align 1, !dbg !7127
  %340 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7128
  %background595 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %340, i32 0, i32 69, !dbg !7129
  %blue596 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background595, i32 0, i32 3, !dbg !7130
  %341 = load i16, i16* %blue596, align 2, !dbg !7130
  %conv597 = zext i16 %341 to i32, !dbg !7128
  %shr598 = ashr i32 %conv597, 8, !dbg !7131
  %and599 = and i32 %shr598, 255, !dbg !7132
  %conv600 = trunc i32 %and599 to i8, !dbg !7133
  %342 = load i8*, i8** %sp, align 8, !dbg !7134
  %add.ptr601 = getelementptr inbounds i8, i8* %342, i64 4, !dbg !7135
  store i8 %conv600, i8* %add.ptr601, align 1, !dbg !7136
  %343 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7137
  %background602 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %343, i32 0, i32 69, !dbg !7138
  %blue603 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background602, i32 0, i32 3, !dbg !7139
  %344 = load i16, i16* %blue603, align 2, !dbg !7139
  %conv604 = zext i16 %344 to i32, !dbg !7137
  %and605 = and i32 %conv604, 255, !dbg !7140
  %conv606 = trunc i32 %and605 to i8, !dbg !7141
  %345 = load i8*, i8** %sp, align 8, !dbg !7142
  %add.ptr607 = getelementptr inbounds i8, i8* %345, i64 5, !dbg !7143
  store i8 %conv606, i8* %add.ptr607, align 1, !dbg !7144
  br label %if.end659, !dbg !7145

if.else608:                                       ; preds = %land.lhs.true562, %land.lhs.true555, %for.body527
  call void @llvm.dbg.declare(metadata i16* %v609, metadata !7146, metadata !DIExpression()), !dbg !7148
  %346 = load i16**, i16*** %gamma_16, align 8, !dbg !7149
  %347 = load i8*, i8** %sp, align 8, !dbg !7150
  %add.ptr610 = getelementptr inbounds i8, i8* %347, i64 1, !dbg !7151
  %348 = load i8, i8* %add.ptr610, align 1, !dbg !7152
  %conv611 = zext i8 %348 to i32, !dbg !7152
  %349 = load i32, i32* %gamma_shift, align 4, !dbg !7153
  %shr612 = ashr i32 %conv611, %349, !dbg !7154
  %idxprom613 = sext i32 %shr612 to i64, !dbg !7149
  %arrayidx614 = getelementptr inbounds i16*, i16** %346, i64 %idxprom613, !dbg !7149
  %350 = load i16*, i16** %arrayidx614, align 8, !dbg !7149
  %351 = load i8*, i8** %sp, align 8, !dbg !7155
  %352 = load i8, i8* %351, align 1, !dbg !7156
  %idxprom615 = zext i8 %352 to i64, !dbg !7149
  %arrayidx616 = getelementptr inbounds i16, i16* %350, i64 %idxprom615, !dbg !7149
  %353 = load i16, i16* %arrayidx616, align 2, !dbg !7149
  store i16 %353, i16* %v609, align 2, !dbg !7148
  %354 = load i16, i16* %v609, align 2, !dbg !7157
  %conv617 = zext i16 %354 to i32, !dbg !7157
  %shr618 = ashr i32 %conv617, 8, !dbg !7158
  %and619 = and i32 %shr618, 255, !dbg !7159
  %conv620 = trunc i32 %and619 to i8, !dbg !7160
  %355 = load i8*, i8** %sp, align 8, !dbg !7161
  store i8 %conv620, i8* %355, align 1, !dbg !7162
  %356 = load i16, i16* %v609, align 2, !dbg !7163
  %conv621 = zext i16 %356 to i32, !dbg !7163
  %and622 = and i32 %conv621, 255, !dbg !7164
  %conv623 = trunc i32 %and622 to i8, !dbg !7165
  %357 = load i8*, i8** %sp, align 8, !dbg !7166
  %add.ptr624 = getelementptr inbounds i8, i8* %357, i64 1, !dbg !7167
  store i8 %conv623, i8* %add.ptr624, align 1, !dbg !7168
  %358 = load i16**, i16*** %gamma_16, align 8, !dbg !7169
  %359 = load i8*, i8** %sp, align 8, !dbg !7170
  %add.ptr625 = getelementptr inbounds i8, i8* %359, i64 3, !dbg !7171
  %360 = load i8, i8* %add.ptr625, align 1, !dbg !7172
  %conv626 = zext i8 %360 to i32, !dbg !7172
  %361 = load i32, i32* %gamma_shift, align 4, !dbg !7173
  %shr627 = ashr i32 %conv626, %361, !dbg !7174
  %idxprom628 = sext i32 %shr627 to i64, !dbg !7169
  %arrayidx629 = getelementptr inbounds i16*, i16** %358, i64 %idxprom628, !dbg !7169
  %362 = load i16*, i16** %arrayidx629, align 8, !dbg !7169
  %363 = load i8*, i8** %sp, align 8, !dbg !7175
  %add.ptr630 = getelementptr inbounds i8, i8* %363, i64 2, !dbg !7176
  %364 = load i8, i8* %add.ptr630, align 1, !dbg !7177
  %idxprom631 = zext i8 %364 to i64, !dbg !7169
  %arrayidx632 = getelementptr inbounds i16, i16* %362, i64 %idxprom631, !dbg !7169
  %365 = load i16, i16* %arrayidx632, align 2, !dbg !7169
  store i16 %365, i16* %v609, align 2, !dbg !7178
  %366 = load i16, i16* %v609, align 2, !dbg !7179
  %conv633 = zext i16 %366 to i32, !dbg !7179
  %shr634 = ashr i32 %conv633, 8, !dbg !7180
  %and635 = and i32 %shr634, 255, !dbg !7181
  %conv636 = trunc i32 %and635 to i8, !dbg !7182
  %367 = load i8*, i8** %sp, align 8, !dbg !7183
  %add.ptr637 = getelementptr inbounds i8, i8* %367, i64 2, !dbg !7184
  store i8 %conv636, i8* %add.ptr637, align 1, !dbg !7185
  %368 = load i16, i16* %v609, align 2, !dbg !7186
  %conv638 = zext i16 %368 to i32, !dbg !7186
  %and639 = and i32 %conv638, 255, !dbg !7187
  %conv640 = trunc i32 %and639 to i8, !dbg !7188
  %369 = load i8*, i8** %sp, align 8, !dbg !7189
  %add.ptr641 = getelementptr inbounds i8, i8* %369, i64 3, !dbg !7190
  store i8 %conv640, i8* %add.ptr641, align 1, !dbg !7191
  %370 = load i16**, i16*** %gamma_16, align 8, !dbg !7192
  %371 = load i8*, i8** %sp, align 8, !dbg !7193
  %add.ptr642 = getelementptr inbounds i8, i8* %371, i64 5, !dbg !7194
  %372 = load i8, i8* %add.ptr642, align 1, !dbg !7195
  %conv643 = zext i8 %372 to i32, !dbg !7195
  %373 = load i32, i32* %gamma_shift, align 4, !dbg !7196
  %shr644 = ashr i32 %conv643, %373, !dbg !7197
  %idxprom645 = sext i32 %shr644 to i64, !dbg !7192
  %arrayidx646 = getelementptr inbounds i16*, i16** %370, i64 %idxprom645, !dbg !7192
  %374 = load i16*, i16** %arrayidx646, align 8, !dbg !7192
  %375 = load i8*, i8** %sp, align 8, !dbg !7198
  %add.ptr647 = getelementptr inbounds i8, i8* %375, i64 4, !dbg !7199
  %376 = load i8, i8* %add.ptr647, align 1, !dbg !7200
  %idxprom648 = zext i8 %376 to i64, !dbg !7192
  %arrayidx649 = getelementptr inbounds i16, i16* %374, i64 %idxprom648, !dbg !7192
  %377 = load i16, i16* %arrayidx649, align 2, !dbg !7192
  store i16 %377, i16* %v609, align 2, !dbg !7201
  %378 = load i16, i16* %v609, align 2, !dbg !7202
  %conv650 = zext i16 %378 to i32, !dbg !7202
  %shr651 = ashr i32 %conv650, 8, !dbg !7203
  %and652 = and i32 %shr651, 255, !dbg !7204
  %conv653 = trunc i32 %and652 to i8, !dbg !7205
  %379 = load i8*, i8** %sp, align 8, !dbg !7206
  %add.ptr654 = getelementptr inbounds i8, i8* %379, i64 4, !dbg !7207
  store i8 %conv653, i8* %add.ptr654, align 1, !dbg !7208
  %380 = load i16, i16* %v609, align 2, !dbg !7209
  %conv655 = zext i16 %380 to i32, !dbg !7209
  %and656 = and i32 %conv655, 255, !dbg !7210
  %conv657 = trunc i32 %and656 to i8, !dbg !7211
  %381 = load i8*, i8** %sp, align 8, !dbg !7212
  %add.ptr658 = getelementptr inbounds i8, i8* %381, i64 5, !dbg !7213
  store i8 %conv657, i8* %add.ptr658, align 1, !dbg !7214
  br label %if.end659

if.end659:                                        ; preds = %if.else608, %if.then569
  br label %for.inc660, !dbg !7215

for.inc660:                                       ; preds = %if.end659
  %382 = load i32, i32* %i, align 4, !dbg !7216
  %inc661 = add i32 %382, 1, !dbg !7216
  store i32 %inc661, i32* %i, align 4, !dbg !7216
  %383 = load i8*, i8** %sp, align 8, !dbg !7217
  %add.ptr662 = getelementptr inbounds i8, i8* %383, i64 6, !dbg !7217
  store i8* %add.ptr662, i8** %sp, align 8, !dbg !7217
  br label %for.cond524, !dbg !7218, !llvm.loop !7219

for.end663:                                       ; preds = %for.cond524
  br label %if.end756, !dbg !7221

if.else664:                                       ; preds = %if.else520
  %384 = load i8*, i8** %row.addr, align 8, !dbg !7222
  store i8* %384, i8** %sp, align 8, !dbg !7224
  store i32 0, i32* %i, align 4, !dbg !7225
  br label %for.cond665, !dbg !7227

for.cond665:                                      ; preds = %for.inc752, %if.else664
  %385 = load i32, i32* %i, align 4, !dbg !7228
  %386 = load i32, i32* %row_width, align 4, !dbg !7230
  %cmp666 = icmp ult i32 %385, %386, !dbg !7231
  br i1 %cmp666, label %for.body668, label %for.end755, !dbg !7232

for.body668:                                      ; preds = %for.cond665
  call void @llvm.dbg.declare(metadata i16* %r669, metadata !7233, metadata !DIExpression()), !dbg !7235
  %387 = load i8*, i8** %sp, align 8, !dbg !7236
  %388 = load i8, i8* %387, align 1, !dbg !7237
  %conv670 = zext i8 %388 to i32, !dbg !7238
  %shl671 = shl i32 %conv670, 8, !dbg !7239
  %389 = load i8*, i8** %sp, align 8, !dbg !7240
  %add.ptr672 = getelementptr inbounds i8, i8* %389, i64 1, !dbg !7241
  %390 = load i8, i8* %add.ptr672, align 1, !dbg !7242
  %conv673 = zext i8 %390 to i32, !dbg !7242
  %add674 = add nsw i32 %shl671, %conv673, !dbg !7243
  %conv675 = trunc i32 %add674 to i16, !dbg !7244
  store i16 %conv675, i16* %r669, align 2, !dbg !7235
  call void @llvm.dbg.declare(metadata i16* %g676, metadata !7245, metadata !DIExpression()), !dbg !7246
  %391 = load i8*, i8** %sp, align 8, !dbg !7247
  %add.ptr677 = getelementptr inbounds i8, i8* %391, i64 2, !dbg !7248
  %392 = load i8, i8* %add.ptr677, align 1, !dbg !7249
  %conv678 = zext i8 %392 to i32, !dbg !7250
  %shl679 = shl i32 %conv678, 8, !dbg !7251
  %393 = load i8*, i8** %sp, align 8, !dbg !7252
  %add.ptr680 = getelementptr inbounds i8, i8* %393, i64 3, !dbg !7253
  %394 = load i8, i8* %add.ptr680, align 1, !dbg !7254
  %conv681 = zext i8 %394 to i32, !dbg !7254
  %add682 = add nsw i32 %shl679, %conv681, !dbg !7255
  %conv683 = trunc i32 %add682 to i16, !dbg !7256
  store i16 %conv683, i16* %g676, align 2, !dbg !7246
  call void @llvm.dbg.declare(metadata i16* %b684, metadata !7257, metadata !DIExpression()), !dbg !7258
  %395 = load i8*, i8** %sp, align 8, !dbg !7259
  %add.ptr685 = getelementptr inbounds i8, i8* %395, i64 4, !dbg !7260
  %396 = load i8, i8* %add.ptr685, align 1, !dbg !7261
  %conv686 = zext i8 %396 to i32, !dbg !7262
  %shl687 = shl i32 %conv686, 8, !dbg !7263
  %397 = load i8*, i8** %sp, align 8, !dbg !7264
  %add.ptr688 = getelementptr inbounds i8, i8* %397, i64 5, !dbg !7265
  %398 = load i8, i8* %add.ptr688, align 1, !dbg !7266
  %conv689 = zext i8 %398 to i32, !dbg !7266
  %add690 = add nsw i32 %shl687, %conv689, !dbg !7267
  %conv691 = trunc i32 %add690 to i16, !dbg !7268
  store i16 %conv691, i16* %b684, align 2, !dbg !7258
  %399 = load i16, i16* %r669, align 2, !dbg !7269
  %conv692 = zext i16 %399 to i32, !dbg !7269
  %400 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7271
  %trans_color693 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %400, i32 0, i32 86, !dbg !7272
  %red694 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color693, i32 0, i32 1, !dbg !7273
  %401 = load i16, i16* %red694, align 2, !dbg !7273
  %conv695 = zext i16 %401 to i32, !dbg !7271
  %cmp696 = icmp eq i32 %conv692, %conv695, !dbg !7274
  br i1 %cmp696, label %land.lhs.true698, label %if.end751, !dbg !7275

land.lhs.true698:                                 ; preds = %for.body668
  %402 = load i16, i16* %g676, align 2, !dbg !7276
  %conv699 = zext i16 %402 to i32, !dbg !7276
  %403 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7277
  %trans_color700 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %403, i32 0, i32 86, !dbg !7278
  %green701 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color700, i32 0, i32 2, !dbg !7279
  %404 = load i16, i16* %green701, align 4, !dbg !7279
  %conv702 = zext i16 %404 to i32, !dbg !7277
  %cmp703 = icmp eq i32 %conv699, %conv702, !dbg !7280
  br i1 %cmp703, label %land.lhs.true705, label %if.end751, !dbg !7281

land.lhs.true705:                                 ; preds = %land.lhs.true698
  %405 = load i16, i16* %b684, align 2, !dbg !7282
  %conv706 = zext i16 %405 to i32, !dbg !7282
  %406 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7283
  %trans_color707 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %406, i32 0, i32 86, !dbg !7284
  %blue708 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color707, i32 0, i32 3, !dbg !7285
  %407 = load i16, i16* %blue708, align 2, !dbg !7285
  %conv709 = zext i16 %407 to i32, !dbg !7283
  %cmp710 = icmp eq i32 %conv706, %conv709, !dbg !7286
  br i1 %cmp710, label %if.then712, label %if.end751, !dbg !7287

if.then712:                                       ; preds = %land.lhs.true705
  %408 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7288
  %background713 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %408, i32 0, i32 69, !dbg !7290
  %red714 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background713, i32 0, i32 1, !dbg !7291
  %409 = load i16, i16* %red714, align 2, !dbg !7291
  %conv715 = zext i16 %409 to i32, !dbg !7288
  %shr716 = ashr i32 %conv715, 8, !dbg !7292
  %and717 = and i32 %shr716, 255, !dbg !7293
  %conv718 = trunc i32 %and717 to i8, !dbg !7294
  %410 = load i8*, i8** %sp, align 8, !dbg !7295
  store i8 %conv718, i8* %410, align 1, !dbg !7296
  %411 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7297
  %background719 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %411, i32 0, i32 69, !dbg !7298
  %red720 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background719, i32 0, i32 1, !dbg !7299
  %412 = load i16, i16* %red720, align 2, !dbg !7299
  %conv721 = zext i16 %412 to i32, !dbg !7297
  %and722 = and i32 %conv721, 255, !dbg !7300
  %conv723 = trunc i32 %and722 to i8, !dbg !7301
  %413 = load i8*, i8** %sp, align 8, !dbg !7302
  %add.ptr724 = getelementptr inbounds i8, i8* %413, i64 1, !dbg !7303
  store i8 %conv723, i8* %add.ptr724, align 1, !dbg !7304
  %414 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7305
  %background725 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %414, i32 0, i32 69, !dbg !7306
  %green726 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background725, i32 0, i32 2, !dbg !7307
  %415 = load i16, i16* %green726, align 4, !dbg !7307
  %conv727 = zext i16 %415 to i32, !dbg !7305
  %shr728 = ashr i32 %conv727, 8, !dbg !7308
  %and729 = and i32 %shr728, 255, !dbg !7309
  %conv730 = trunc i32 %and729 to i8, !dbg !7310
  %416 = load i8*, i8** %sp, align 8, !dbg !7311
  %add.ptr731 = getelementptr inbounds i8, i8* %416, i64 2, !dbg !7312
  store i8 %conv730, i8* %add.ptr731, align 1, !dbg !7313
  %417 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7314
  %background732 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %417, i32 0, i32 69, !dbg !7315
  %green733 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background732, i32 0, i32 2, !dbg !7316
  %418 = load i16, i16* %green733, align 4, !dbg !7316
  %conv734 = zext i16 %418 to i32, !dbg !7314
  %and735 = and i32 %conv734, 255, !dbg !7317
  %conv736 = trunc i32 %and735 to i8, !dbg !7318
  %419 = load i8*, i8** %sp, align 8, !dbg !7319
  %add.ptr737 = getelementptr inbounds i8, i8* %419, i64 3, !dbg !7320
  store i8 %conv736, i8* %add.ptr737, align 1, !dbg !7321
  %420 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7322
  %background738 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %420, i32 0, i32 69, !dbg !7323
  %blue739 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background738, i32 0, i32 3, !dbg !7324
  %421 = load i16, i16* %blue739, align 2, !dbg !7324
  %conv740 = zext i16 %421 to i32, !dbg !7322
  %shr741 = ashr i32 %conv740, 8, !dbg !7325
  %and742 = and i32 %shr741, 255, !dbg !7326
  %conv743 = trunc i32 %and742 to i8, !dbg !7327
  %422 = load i8*, i8** %sp, align 8, !dbg !7328
  %add.ptr744 = getelementptr inbounds i8, i8* %422, i64 4, !dbg !7329
  store i8 %conv743, i8* %add.ptr744, align 1, !dbg !7330
  %423 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7331
  %background745 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %423, i32 0, i32 69, !dbg !7332
  %blue746 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background745, i32 0, i32 3, !dbg !7333
  %424 = load i16, i16* %blue746, align 2, !dbg !7333
  %conv747 = zext i16 %424 to i32, !dbg !7331
  %and748 = and i32 %conv747, 255, !dbg !7334
  %conv749 = trunc i32 %and748 to i8, !dbg !7335
  %425 = load i8*, i8** %sp, align 8, !dbg !7336
  %add.ptr750 = getelementptr inbounds i8, i8* %425, i64 5, !dbg !7337
  store i8 %conv749, i8* %add.ptr750, align 1, !dbg !7338
  br label %if.end751, !dbg !7339

if.end751:                                        ; preds = %if.then712, %land.lhs.true705, %land.lhs.true698, %for.body668
  br label %for.inc752, !dbg !7340

for.inc752:                                       ; preds = %if.end751
  %426 = load i32, i32* %i, align 4, !dbg !7341
  %inc753 = add i32 %426, 1, !dbg !7341
  store i32 %inc753, i32* %i, align 4, !dbg !7341
  %427 = load i8*, i8** %sp, align 8, !dbg !7342
  %add.ptr754 = getelementptr inbounds i8, i8* %427, i64 6, !dbg !7342
  store i8* %add.ptr754, i8** %sp, align 8, !dbg !7342
  br label %for.cond665, !dbg !7343, !llvm.loop !7344

for.end755:                                       ; preds = %for.cond665
  br label %if.end756

if.end756:                                        ; preds = %for.end755, %for.end663
  br label %if.end757

if.end757:                                        ; preds = %if.end756, %if.end519
  br label %sw.epilog1763, !dbg !7346

sw.bb758:                                         ; preds = %entry
  %428 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7347
  %bit_depth759 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %428, i32 0, i32 3, !dbg !7350
  %429 = load i8, i8* %bit_depth759, align 1, !dbg !7350
  %conv760 = zext i8 %429 to i32, !dbg !7347
  %cmp761 = icmp eq i32 %conv760, 8, !dbg !7351
  br i1 %cmp761, label %if.then763, label %if.else877, !dbg !7352

if.then763:                                       ; preds = %sw.bb758
  %430 = load i8*, i8** %gamma_to_1, align 8, !dbg !7353
  %cmp764 = icmp ne i8* %430, null, !dbg !7356
  br i1 %cmp764, label %land.lhs.true766, label %if.else827, !dbg !7357

land.lhs.true766:                                 ; preds = %if.then763
  %431 = load i8*, i8** %gamma_from_1, align 8, !dbg !7358
  %cmp767 = icmp ne i8* %431, null, !dbg !7359
  br i1 %cmp767, label %land.lhs.true769, label %if.else827, !dbg !7360

land.lhs.true769:                                 ; preds = %land.lhs.true766
  %432 = load i8*, i8** %gamma_table, align 8, !dbg !7361
  %cmp770 = icmp ne i8* %432, null, !dbg !7362
  br i1 %cmp770, label %if.then772, label %if.else827, !dbg !7363

if.then772:                                       ; preds = %land.lhs.true769
  %433 = load i8*, i8** %row.addr, align 8, !dbg !7364
  store i8* %433, i8** %sp, align 8, !dbg !7366
  store i32 0, i32* %i, align 4, !dbg !7367
  br label %for.cond773, !dbg !7369

for.cond773:                                      ; preds = %for.inc823, %if.then772
  %434 = load i32, i32* %i, align 4, !dbg !7370
  %435 = load i32, i32* %row_width, align 4, !dbg !7372
  %cmp774 = icmp ult i32 %434, %435, !dbg !7373
  br i1 %cmp774, label %for.body776, label %for.end826, !dbg !7374

for.body776:                                      ; preds = %for.cond773
  call void @llvm.dbg.declare(metadata i16* %a, metadata !7375, metadata !DIExpression()), !dbg !7377
  %436 = load i8*, i8** %sp, align 8, !dbg !7378
  %add.ptr777 = getelementptr inbounds i8, i8* %436, i64 1, !dbg !7379
  %437 = load i8, i8* %add.ptr777, align 1, !dbg !7380
  %conv778 = zext i8 %437 to i16, !dbg !7380
  store i16 %conv778, i16* %a, align 2, !dbg !7377
  %438 = load i16, i16* %a, align 2, !dbg !7381
  %conv779 = zext i16 %438 to i32, !dbg !7381
  %cmp780 = icmp eq i32 %conv779, 255, !dbg !7383
  br i1 %cmp780, label %if.then782, label %if.else785, !dbg !7384

if.then782:                                       ; preds = %for.body776
  %439 = load i8*, i8** %gamma_table, align 8, !dbg !7385
  %440 = load i8*, i8** %sp, align 8, !dbg !7386
  %441 = load i8, i8* %440, align 1, !dbg !7387
  %idxprom783 = zext i8 %441 to i64, !dbg !7385
  %arrayidx784 = getelementptr inbounds i8, i8* %439, i64 %idxprom783, !dbg !7385
  %442 = load i8, i8* %arrayidx784, align 1, !dbg !7385
  %443 = load i8*, i8** %sp, align 8, !dbg !7388
  store i8 %442, i8* %443, align 1, !dbg !7389
  br label %if.end822, !dbg !7390

if.else785:                                       ; preds = %for.body776
  %444 = load i16, i16* %a, align 2, !dbg !7391
  %conv786 = zext i16 %444 to i32, !dbg !7391
  %cmp787 = icmp eq i32 %conv786, 0, !dbg !7393
  br i1 %cmp787, label %if.then789, label %if.else793, !dbg !7394

if.then789:                                       ; preds = %if.else785
  %445 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7395
  %background790 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %445, i32 0, i32 69, !dbg !7397
  %gray791 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background790, i32 0, i32 4, !dbg !7398
  %446 = load i16, i16* %gray791, align 8, !dbg !7398
  %conv792 = trunc i16 %446 to i8, !dbg !7399
  %447 = load i8*, i8** %sp, align 8, !dbg !7400
  store i8 %conv792, i8* %447, align 1, !dbg !7401
  br label %if.end821, !dbg !7402

if.else793:                                       ; preds = %if.else785
  call void @llvm.dbg.declare(metadata i8* %v794, metadata !7403, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.declare(metadata i8* %w, metadata !7406, metadata !DIExpression()), !dbg !7407
  %448 = load i8*, i8** %gamma_to_1, align 8, !dbg !7408
  %449 = load i8*, i8** %sp, align 8, !dbg !7409
  %450 = load i8, i8* %449, align 1, !dbg !7410
  %idxprom795 = zext i8 %450 to i64, !dbg !7408
  %arrayidx796 = getelementptr inbounds i8, i8* %448, i64 %idxprom795, !dbg !7408
  %451 = load i8, i8* %arrayidx796, align 1, !dbg !7408
  store i8 %451, i8* %v794, align 1, !dbg !7411
  call void @llvm.dbg.declare(metadata i16* %temp, metadata !7412, metadata !DIExpression()), !dbg !7414
  %452 = load i8, i8* %v794, align 1, !dbg !7414
  %conv797 = zext i8 %452 to i16, !dbg !7414
  %conv798 = zext i16 %conv797 to i32, !dbg !7414
  %453 = load i16, i16* %a, align 2, !dbg !7414
  %conv799 = zext i16 %453 to i32, !dbg !7414
  %mul = mul nsw i32 %conv798, %conv799, !dbg !7414
  %454 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7414
  %background_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %454, i32 0, i32 70, !dbg !7414
  %gray800 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1, i32 0, i32 4, !dbg !7414
  %455 = load i16, i16* %gray800, align 2, !dbg !7414
  %conv801 = zext i16 %455 to i32, !dbg !7414
  %456 = load i16, i16* %a, align 2, !dbg !7414
  %conv802 = zext i16 %456 to i32, !dbg !7414
  %sub803 = sub nsw i32 255, %conv802, !dbg !7414
  %conv804 = trunc i32 %sub803 to i16, !dbg !7414
  %conv805 = zext i16 %conv804 to i32, !dbg !7414
  %mul806 = mul nsw i32 %conv801, %conv805, !dbg !7414
  %add807 = add nsw i32 %mul, %mul806, !dbg !7414
  %add808 = add nsw i32 %add807, 128, !dbg !7414
  %conv809 = trunc i32 %add808 to i16, !dbg !7414
  store i16 %conv809, i16* %temp, align 2, !dbg !7414
  %457 = load i16, i16* %temp, align 2, !dbg !7414
  %conv810 = zext i16 %457 to i32, !dbg !7414
  %458 = load i16, i16* %temp, align 2, !dbg !7414
  %conv811 = zext i16 %458 to i32, !dbg !7414
  %shr812 = ashr i32 %conv811, 8, !dbg !7414
  %add813 = add nsw i32 %conv810, %shr812, !dbg !7414
  %shr814 = ashr i32 %add813, 8, !dbg !7414
  %conv815 = trunc i32 %shr814 to i8, !dbg !7414
  store i8 %conv815, i8* %w, align 1, !dbg !7414
  %459 = load i32, i32* %optimize, align 4, !dbg !7415
  %tobool816 = icmp ne i32 %459, 0, !dbg !7415
  br i1 %tobool816, label %if.end820, label %if.then817, !dbg !7417

if.then817:                                       ; preds = %if.else793
  %460 = load i8*, i8** %gamma_from_1, align 8, !dbg !7418
  %461 = load i8, i8* %w, align 1, !dbg !7419
  %idxprom818 = zext i8 %461 to i64, !dbg !7418
  %arrayidx819 = getelementptr inbounds i8, i8* %460, i64 %idxprom818, !dbg !7418
  %462 = load i8, i8* %arrayidx819, align 1, !dbg !7418
  store i8 %462, i8* %w, align 1, !dbg !7420
  br label %if.end820, !dbg !7421

if.end820:                                        ; preds = %if.then817, %if.else793
  %463 = load i8, i8* %w, align 1, !dbg !7422
  %464 = load i8*, i8** %sp, align 8, !dbg !7423
  store i8 %463, i8* %464, align 1, !dbg !7424
  br label %if.end821

if.end821:                                        ; preds = %if.end820, %if.then789
  br label %if.end822

if.end822:                                        ; preds = %if.end821, %if.then782
  br label %for.inc823, !dbg !7425

for.inc823:                                       ; preds = %if.end822
  %465 = load i32, i32* %i, align 4, !dbg !7426
  %inc824 = add i32 %465, 1, !dbg !7426
  store i32 %inc824, i32* %i, align 4, !dbg !7426
  %466 = load i8*, i8** %sp, align 8, !dbg !7427
  %add.ptr825 = getelementptr inbounds i8, i8* %466, i64 2, !dbg !7427
  store i8* %add.ptr825, i8** %sp, align 8, !dbg !7427
  br label %for.cond773, !dbg !7428, !llvm.loop !7429

for.end826:                                       ; preds = %for.cond773
  br label %if.end876, !dbg !7431

if.else827:                                       ; preds = %land.lhs.true769, %land.lhs.true766, %if.then763
  %467 = load i8*, i8** %row.addr, align 8, !dbg !7432
  store i8* %467, i8** %sp, align 8, !dbg !7434
  store i32 0, i32* %i, align 4, !dbg !7435
  br label %for.cond828, !dbg !7437

for.cond828:                                      ; preds = %for.inc872, %if.else827
  %468 = load i32, i32* %i, align 4, !dbg !7438
  %469 = load i32, i32* %row_width, align 4, !dbg !7440
  %cmp829 = icmp ult i32 %468, %469, !dbg !7441
  br i1 %cmp829, label %for.body831, label %for.end875, !dbg !7442

for.body831:                                      ; preds = %for.cond828
  call void @llvm.dbg.declare(metadata i8* %a832, metadata !7443, metadata !DIExpression()), !dbg !7445
  %470 = load i8*, i8** %sp, align 8, !dbg !7446
  %add.ptr833 = getelementptr inbounds i8, i8* %470, i64 1, !dbg !7447
  %471 = load i8, i8* %add.ptr833, align 1, !dbg !7448
  store i8 %471, i8* %a832, align 1, !dbg !7445
  %472 = load i8, i8* %a832, align 1, !dbg !7449
  %conv834 = zext i8 %472 to i32, !dbg !7449
  %cmp835 = icmp eq i32 %conv834, 0, !dbg !7451
  br i1 %cmp835, label %if.then837, label %if.else841, !dbg !7452

if.then837:                                       ; preds = %for.body831
  %473 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7453
  %background838 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %473, i32 0, i32 69, !dbg !7454
  %gray839 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background838, i32 0, i32 4, !dbg !7455
  %474 = load i16, i16* %gray839, align 8, !dbg !7455
  %conv840 = trunc i16 %474 to i8, !dbg !7456
  %475 = load i8*, i8** %sp, align 8, !dbg !7457
  store i8 %conv840, i8* %475, align 1, !dbg !7458
  br label %if.end871, !dbg !7459

if.else841:                                       ; preds = %for.body831
  %476 = load i8, i8* %a832, align 1, !dbg !7460
  %conv842 = zext i8 %476 to i32, !dbg !7460
  %cmp843 = icmp slt i32 %conv842, 255, !dbg !7462
  br i1 %cmp843, label %if.then845, label %if.end870, !dbg !7463

if.then845:                                       ; preds = %if.else841
  call void @llvm.dbg.declare(metadata i16* %temp846, metadata !7464, metadata !DIExpression()), !dbg !7466
  %477 = load i8*, i8** %sp, align 8, !dbg !7466
  %478 = load i8, i8* %477, align 1, !dbg !7466
  %conv847 = zext i8 %478 to i16, !dbg !7466
  %conv848 = zext i16 %conv847 to i32, !dbg !7466
  %479 = load i8, i8* %a832, align 1, !dbg !7466
  %conv849 = zext i8 %479 to i16, !dbg !7466
  %conv850 = zext i16 %conv849 to i32, !dbg !7466
  %mul851 = mul nsw i32 %conv848, %conv850, !dbg !7466
  %480 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7466
  %background_1852 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %480, i32 0, i32 70, !dbg !7466
  %gray853 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1852, i32 0, i32 4, !dbg !7466
  %481 = load i16, i16* %gray853, align 2, !dbg !7466
  %conv854 = zext i16 %481 to i32, !dbg !7466
  %482 = load i8, i8* %a832, align 1, !dbg !7466
  %conv855 = zext i8 %482 to i16, !dbg !7466
  %conv856 = zext i16 %conv855 to i32, !dbg !7466
  %sub857 = sub nsw i32 255, %conv856, !dbg !7466
  %conv858 = trunc i32 %sub857 to i16, !dbg !7466
  %conv859 = zext i16 %conv858 to i32, !dbg !7466
  %mul860 = mul nsw i32 %conv854, %conv859, !dbg !7466
  %add861 = add nsw i32 %mul851, %mul860, !dbg !7466
  %add862 = add nsw i32 %add861, 128, !dbg !7466
  %conv863 = trunc i32 %add862 to i16, !dbg !7466
  store i16 %conv863, i16* %temp846, align 2, !dbg !7466
  %483 = load i16, i16* %temp846, align 2, !dbg !7466
  %conv864 = zext i16 %483 to i32, !dbg !7466
  %484 = load i16, i16* %temp846, align 2, !dbg !7466
  %conv865 = zext i16 %484 to i32, !dbg !7466
  %shr866 = ashr i32 %conv865, 8, !dbg !7466
  %add867 = add nsw i32 %conv864, %shr866, !dbg !7466
  %shr868 = ashr i32 %add867, 8, !dbg !7466
  %conv869 = trunc i32 %shr868 to i8, !dbg !7466
  %485 = load i8*, i8** %sp, align 8, !dbg !7466
  store i8 %conv869, i8* %485, align 1, !dbg !7466
  br label %if.end870, !dbg !7466

if.end870:                                        ; preds = %if.then845, %if.else841
  br label %if.end871

if.end871:                                        ; preds = %if.end870, %if.then837
  br label %for.inc872, !dbg !7467

for.inc872:                                       ; preds = %if.end871
  %486 = load i32, i32* %i, align 4, !dbg !7468
  %inc873 = add i32 %486, 1, !dbg !7468
  store i32 %inc873, i32* %i, align 4, !dbg !7468
  %487 = load i8*, i8** %sp, align 8, !dbg !7469
  %add.ptr874 = getelementptr inbounds i8, i8* %487, i64 2, !dbg !7469
  store i8* %add.ptr874, i8** %sp, align 8, !dbg !7469
  br label %for.cond828, !dbg !7470, !llvm.loop !7471

for.end875:                                       ; preds = %for.cond828
  br label %if.end876

if.end876:                                        ; preds = %for.end875, %for.end826
  br label %if.end1063, !dbg !7473

if.else877:                                       ; preds = %sw.bb758
  %488 = load i16**, i16*** %gamma_16, align 8, !dbg !7474
  %cmp878 = icmp ne i16** %488, null, !dbg !7477
  br i1 %cmp878, label %land.lhs.true880, label %if.else990, !dbg !7478

land.lhs.true880:                                 ; preds = %if.else877
  %489 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !7479
  %cmp881 = icmp ne i16** %489, null, !dbg !7480
  br i1 %cmp881, label %land.lhs.true883, label %if.else990, !dbg !7481

land.lhs.true883:                                 ; preds = %land.lhs.true880
  %490 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !7482
  %cmp884 = icmp ne i16** %490, null, !dbg !7483
  br i1 %cmp884, label %if.then886, label %if.else990, !dbg !7484

if.then886:                                       ; preds = %land.lhs.true883
  %491 = load i8*, i8** %row.addr, align 8, !dbg !7485
  store i8* %491, i8** %sp, align 8, !dbg !7487
  store i32 0, i32* %i, align 4, !dbg !7488
  br label %for.cond887, !dbg !7490

for.cond887:                                      ; preds = %for.inc986, %if.then886
  %492 = load i32, i32* %i, align 4, !dbg !7491
  %493 = load i32, i32* %row_width, align 4, !dbg !7493
  %cmp888 = icmp ult i32 %492, %493, !dbg !7494
  br i1 %cmp888, label %for.body890, label %for.end989, !dbg !7495

for.body890:                                      ; preds = %for.cond887
  call void @llvm.dbg.declare(metadata i16* %a891, metadata !7496, metadata !DIExpression()), !dbg !7498
  %494 = load i8*, i8** %sp, align 8, !dbg !7499
  %add.ptr892 = getelementptr inbounds i8, i8* %494, i64 2, !dbg !7500
  %495 = load i8, i8* %add.ptr892, align 1, !dbg !7501
  %conv893 = zext i8 %495 to i32, !dbg !7502
  %shl894 = shl i32 %conv893, 8, !dbg !7503
  %496 = load i8*, i8** %sp, align 8, !dbg !7504
  %add.ptr895 = getelementptr inbounds i8, i8* %496, i64 3, !dbg !7505
  %497 = load i8, i8* %add.ptr895, align 1, !dbg !7506
  %conv896 = zext i8 %497 to i32, !dbg !7506
  %add897 = add nsw i32 %shl894, %conv896, !dbg !7507
  %conv898 = trunc i32 %add897 to i16, !dbg !7508
  store i16 %conv898, i16* %a891, align 2, !dbg !7498
  %498 = load i16, i16* %a891, align 2, !dbg !7509
  %conv899 = zext i16 %498 to i32, !dbg !7509
  %cmp900 = icmp eq i32 %conv899, 65535, !dbg !7511
  br i1 %cmp900, label %if.then902, label %if.else919, !dbg !7512

if.then902:                                       ; preds = %for.body890
  call void @llvm.dbg.declare(metadata i16* %v903, metadata !7513, metadata !DIExpression()), !dbg !7515
  %499 = load i16**, i16*** %gamma_16, align 8, !dbg !7516
  %500 = load i8*, i8** %sp, align 8, !dbg !7517
  %add.ptr904 = getelementptr inbounds i8, i8* %500, i64 1, !dbg !7518
  %501 = load i8, i8* %add.ptr904, align 1, !dbg !7519
  %conv905 = zext i8 %501 to i32, !dbg !7519
  %502 = load i32, i32* %gamma_shift, align 4, !dbg !7520
  %shr906 = ashr i32 %conv905, %502, !dbg !7521
  %idxprom907 = sext i32 %shr906 to i64, !dbg !7516
  %arrayidx908 = getelementptr inbounds i16*, i16** %499, i64 %idxprom907, !dbg !7516
  %503 = load i16*, i16** %arrayidx908, align 8, !dbg !7516
  %504 = load i8*, i8** %sp, align 8, !dbg !7522
  %505 = load i8, i8* %504, align 1, !dbg !7523
  %idxprom909 = zext i8 %505 to i64, !dbg !7516
  %arrayidx910 = getelementptr inbounds i16, i16* %503, i64 %idxprom909, !dbg !7516
  %506 = load i16, i16* %arrayidx910, align 2, !dbg !7516
  store i16 %506, i16* %v903, align 2, !dbg !7524
  %507 = load i16, i16* %v903, align 2, !dbg !7525
  %conv911 = zext i16 %507 to i32, !dbg !7525
  %shr912 = ashr i32 %conv911, 8, !dbg !7526
  %and913 = and i32 %shr912, 255, !dbg !7527
  %conv914 = trunc i32 %and913 to i8, !dbg !7528
  %508 = load i8*, i8** %sp, align 8, !dbg !7529
  store i8 %conv914, i8* %508, align 1, !dbg !7530
  %509 = load i16, i16* %v903, align 2, !dbg !7531
  %conv915 = zext i16 %509 to i32, !dbg !7531
  %and916 = and i32 %conv915, 255, !dbg !7532
  %conv917 = trunc i32 %and916 to i8, !dbg !7533
  %510 = load i8*, i8** %sp, align 8, !dbg !7534
  %add.ptr918 = getelementptr inbounds i8, i8* %510, i64 1, !dbg !7535
  store i8 %conv917, i8* %add.ptr918, align 1, !dbg !7536
  br label %if.end985, !dbg !7537

if.else919:                                       ; preds = %for.body890
  %511 = load i16, i16* %a891, align 2, !dbg !7538
  %conv920 = zext i16 %511 to i32, !dbg !7538
  %cmp921 = icmp eq i32 %conv920, 0, !dbg !7540
  br i1 %cmp921, label %if.then923, label %if.else936, !dbg !7541

if.then923:                                       ; preds = %if.else919
  %512 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7542
  %background924 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %512, i32 0, i32 69, !dbg !7544
  %gray925 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background924, i32 0, i32 4, !dbg !7545
  %513 = load i16, i16* %gray925, align 8, !dbg !7545
  %conv926 = zext i16 %513 to i32, !dbg !7542
  %shr927 = ashr i32 %conv926, 8, !dbg !7546
  %and928 = and i32 %shr927, 255, !dbg !7547
  %conv929 = trunc i32 %and928 to i8, !dbg !7548
  %514 = load i8*, i8** %sp, align 8, !dbg !7549
  store i8 %conv929, i8* %514, align 1, !dbg !7550
  %515 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7551
  %background930 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %515, i32 0, i32 69, !dbg !7552
  %gray931 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background930, i32 0, i32 4, !dbg !7553
  %516 = load i16, i16* %gray931, align 8, !dbg !7553
  %conv932 = zext i16 %516 to i32, !dbg !7551
  %and933 = and i32 %conv932, 255, !dbg !7554
  %conv934 = trunc i32 %and933 to i8, !dbg !7555
  %517 = load i8*, i8** %sp, align 8, !dbg !7556
  %add.ptr935 = getelementptr inbounds i8, i8* %517, i64 1, !dbg !7557
  store i8 %conv934, i8* %add.ptr935, align 1, !dbg !7558
  br label %if.end984, !dbg !7559

if.else936:                                       ; preds = %if.else919
  call void @llvm.dbg.declare(metadata i16* %g937, metadata !7560, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i16* %v938, metadata !7563, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.declare(metadata i16* %w939, metadata !7565, metadata !DIExpression()), !dbg !7566
  %518 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !7567
  %519 = load i8*, i8** %sp, align 8, !dbg !7568
  %add.ptr940 = getelementptr inbounds i8, i8* %519, i64 1, !dbg !7569
  %520 = load i8, i8* %add.ptr940, align 1, !dbg !7570
  %conv941 = zext i8 %520 to i32, !dbg !7570
  %521 = load i32, i32* %gamma_shift, align 4, !dbg !7571
  %shr942 = ashr i32 %conv941, %521, !dbg !7572
  %idxprom943 = sext i32 %shr942 to i64, !dbg !7567
  %arrayidx944 = getelementptr inbounds i16*, i16** %518, i64 %idxprom943, !dbg !7567
  %522 = load i16*, i16** %arrayidx944, align 8, !dbg !7567
  %523 = load i8*, i8** %sp, align 8, !dbg !7573
  %524 = load i8, i8* %523, align 1, !dbg !7574
  %idxprom945 = zext i8 %524 to i64, !dbg !7567
  %arrayidx946 = getelementptr inbounds i16, i16* %522, i64 %idxprom945, !dbg !7567
  %525 = load i16, i16* %arrayidx946, align 2, !dbg !7567
  store i16 %525, i16* %g937, align 2, !dbg !7575
  call void @llvm.dbg.declare(metadata i32* %temp947, metadata !7576, metadata !DIExpression()), !dbg !7578
  %526 = load i16, i16* %g937, align 2, !dbg !7578
  %conv948 = zext i16 %526 to i32, !dbg !7578
  %527 = load i16, i16* %a891, align 2, !dbg !7578
  %conv949 = zext i16 %527 to i32, !dbg !7578
  %mul950 = mul i32 %conv948, %conv949, !dbg !7578
  %528 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7578
  %background_1951 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %528, i32 0, i32 70, !dbg !7578
  %gray952 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_1951, i32 0, i32 4, !dbg !7578
  %529 = load i16, i16* %gray952, align 2, !dbg !7578
  %conv953 = zext i16 %529 to i32, !dbg !7578
  %530 = load i16, i16* %a891, align 2, !dbg !7578
  %conv954 = zext i16 %530 to i32, !dbg !7578
  %sub955 = sub i32 65535, %conv954, !dbg !7578
  %mul956 = mul i32 %conv953, %sub955, !dbg !7578
  %add957 = add i32 %mul950, %mul956, !dbg !7578
  %add958 = add i32 %add957, 32768, !dbg !7578
  store i32 %add958, i32* %temp947, align 4, !dbg !7578
  %531 = load i32, i32* %temp947, align 4, !dbg !7578
  %532 = load i32, i32* %temp947, align 4, !dbg !7578
  %shr959 = lshr i32 %532, 16, !dbg !7578
  %add960 = add i32 %531, %shr959, !dbg !7578
  %shr961 = lshr i32 %add960, 16, !dbg !7578
  %conv962 = trunc i32 %shr961 to i16, !dbg !7578
  store i16 %conv962, i16* %v938, align 2, !dbg !7578
  %533 = load i32, i32* %optimize, align 4, !dbg !7579
  %tobool963 = icmp ne i32 %533, 0, !dbg !7579
  br i1 %tobool963, label %if.then964, label %if.else965, !dbg !7581

if.then964:                                       ; preds = %if.else936
  %534 = load i16, i16* %v938, align 2, !dbg !7582
  store i16 %534, i16* %w939, align 2, !dbg !7583
  br label %if.end975, !dbg !7584

if.else965:                                       ; preds = %if.else936
  %535 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !7585
  %536 = load i16, i16* %v938, align 2, !dbg !7586
  %conv966 = zext i16 %536 to i32, !dbg !7586
  %and967 = and i32 %conv966, 255, !dbg !7587
  %537 = load i32, i32* %gamma_shift, align 4, !dbg !7588
  %shr968 = ashr i32 %and967, %537, !dbg !7589
  %idxprom969 = sext i32 %shr968 to i64, !dbg !7585
  %arrayidx970 = getelementptr inbounds i16*, i16** %535, i64 %idxprom969, !dbg !7585
  %538 = load i16*, i16** %arrayidx970, align 8, !dbg !7585
  %539 = load i16, i16* %v938, align 2, !dbg !7590
  %conv971 = zext i16 %539 to i32, !dbg !7590
  %shr972 = ashr i32 %conv971, 8, !dbg !7591
  %idxprom973 = sext i32 %shr972 to i64, !dbg !7585
  %arrayidx974 = getelementptr inbounds i16, i16* %538, i64 %idxprom973, !dbg !7585
  %540 = load i16, i16* %arrayidx974, align 2, !dbg !7585
  store i16 %540, i16* %w939, align 2, !dbg !7592
  br label %if.end975

if.end975:                                        ; preds = %if.else965, %if.then964
  %541 = load i16, i16* %w939, align 2, !dbg !7593
  %conv976 = zext i16 %541 to i32, !dbg !7593
  %shr977 = ashr i32 %conv976, 8, !dbg !7594
  %and978 = and i32 %shr977, 255, !dbg !7595
  %conv979 = trunc i32 %and978 to i8, !dbg !7596
  %542 = load i8*, i8** %sp, align 8, !dbg !7597
  store i8 %conv979, i8* %542, align 1, !dbg !7598
  %543 = load i16, i16* %w939, align 2, !dbg !7599
  %conv980 = zext i16 %543 to i32, !dbg !7599
  %and981 = and i32 %conv980, 255, !dbg !7600
  %conv982 = trunc i32 %and981 to i8, !dbg !7601
  %544 = load i8*, i8** %sp, align 8, !dbg !7602
  %add.ptr983 = getelementptr inbounds i8, i8* %544, i64 1, !dbg !7603
  store i8 %conv982, i8* %add.ptr983, align 1, !dbg !7604
  br label %if.end984

if.end984:                                        ; preds = %if.end975, %if.then923
  br label %if.end985

if.end985:                                        ; preds = %if.end984, %if.then902
  br label %for.inc986, !dbg !7605

for.inc986:                                       ; preds = %if.end985
  %545 = load i32, i32* %i, align 4, !dbg !7606
  %inc987 = add i32 %545, 1, !dbg !7606
  store i32 %inc987, i32* %i, align 4, !dbg !7606
  %546 = load i8*, i8** %sp, align 8, !dbg !7607
  %add.ptr988 = getelementptr inbounds i8, i8* %546, i64 4, !dbg !7607
  store i8* %add.ptr988, i8** %sp, align 8, !dbg !7607
  br label %for.cond887, !dbg !7608, !llvm.loop !7609

for.end989:                                       ; preds = %for.cond887
  br label %if.end1062, !dbg !7611

if.else990:                                       ; preds = %land.lhs.true883, %land.lhs.true880, %if.else877
  %547 = load i8*, i8** %row.addr, align 8, !dbg !7612
  store i8* %547, i8** %sp, align 8, !dbg !7614
  store i32 0, i32* %i, align 4, !dbg !7615
  br label %for.cond991, !dbg !7617

for.cond991:                                      ; preds = %for.inc1058, %if.else990
  %548 = load i32, i32* %i, align 4, !dbg !7618
  %549 = load i32, i32* %row_width, align 4, !dbg !7620
  %cmp992 = icmp ult i32 %548, %549, !dbg !7621
  br i1 %cmp992, label %for.body994, label %for.end1061, !dbg !7622

for.body994:                                      ; preds = %for.cond991
  call void @llvm.dbg.declare(metadata i16* %a995, metadata !7623, metadata !DIExpression()), !dbg !7625
  %550 = load i8*, i8** %sp, align 8, !dbg !7626
  %add.ptr996 = getelementptr inbounds i8, i8* %550, i64 2, !dbg !7627
  %551 = load i8, i8* %add.ptr996, align 1, !dbg !7628
  %conv997 = zext i8 %551 to i32, !dbg !7629
  %shl998 = shl i32 %conv997, 8, !dbg !7630
  %552 = load i8*, i8** %sp, align 8, !dbg !7631
  %add.ptr999 = getelementptr inbounds i8, i8* %552, i64 3, !dbg !7632
  %553 = load i8, i8* %add.ptr999, align 1, !dbg !7633
  %conv1000 = zext i8 %553 to i32, !dbg !7633
  %add1001 = add nsw i32 %shl998, %conv1000, !dbg !7634
  %conv1002 = trunc i32 %add1001 to i16, !dbg !7635
  store i16 %conv1002, i16* %a995, align 2, !dbg !7625
  %554 = load i16, i16* %a995, align 2, !dbg !7636
  %conv1003 = zext i16 %554 to i32, !dbg !7636
  %cmp1004 = icmp eq i32 %conv1003, 0, !dbg !7638
  br i1 %cmp1004, label %if.then1006, label %if.else1019, !dbg !7639

if.then1006:                                      ; preds = %for.body994
  %555 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7640
  %background1007 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %555, i32 0, i32 69, !dbg !7642
  %gray1008 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1007, i32 0, i32 4, !dbg !7643
  %556 = load i16, i16* %gray1008, align 8, !dbg !7643
  %conv1009 = zext i16 %556 to i32, !dbg !7640
  %shr1010 = ashr i32 %conv1009, 8, !dbg !7644
  %and1011 = and i32 %shr1010, 255, !dbg !7645
  %conv1012 = trunc i32 %and1011 to i8, !dbg !7646
  %557 = load i8*, i8** %sp, align 8, !dbg !7647
  store i8 %conv1012, i8* %557, align 1, !dbg !7648
  %558 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7649
  %background1013 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %558, i32 0, i32 69, !dbg !7650
  %gray1014 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1013, i32 0, i32 4, !dbg !7651
  %559 = load i16, i16* %gray1014, align 8, !dbg !7651
  %conv1015 = zext i16 %559 to i32, !dbg !7649
  %and1016 = and i32 %conv1015, 255, !dbg !7652
  %conv1017 = trunc i32 %and1016 to i8, !dbg !7653
  %560 = load i8*, i8** %sp, align 8, !dbg !7654
  %add.ptr1018 = getelementptr inbounds i8, i8* %560, i64 1, !dbg !7655
  store i8 %conv1017, i8* %add.ptr1018, align 1, !dbg !7656
  br label %if.end1057, !dbg !7657

if.else1019:                                      ; preds = %for.body994
  %561 = load i16, i16* %a995, align 2, !dbg !7658
  %conv1020 = zext i16 %561 to i32, !dbg !7658
  %cmp1021 = icmp slt i32 %conv1020, 65535, !dbg !7660
  br i1 %cmp1021, label %if.then1023, label %if.end1056, !dbg !7661

if.then1023:                                      ; preds = %if.else1019
  call void @llvm.dbg.declare(metadata i16* %g1024, metadata !7662, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.declare(metadata i16* %v1025, metadata !7665, metadata !DIExpression()), !dbg !7666
  %562 = load i8*, i8** %sp, align 8, !dbg !7667
  %563 = load i8, i8* %562, align 1, !dbg !7668
  %conv1026 = zext i8 %563 to i32, !dbg !7669
  %shl1027 = shl i32 %conv1026, 8, !dbg !7670
  %564 = load i8*, i8** %sp, align 8, !dbg !7671
  %add.ptr1028 = getelementptr inbounds i8, i8* %564, i64 1, !dbg !7672
  %565 = load i8, i8* %add.ptr1028, align 1, !dbg !7673
  %conv1029 = zext i8 %565 to i32, !dbg !7673
  %add1030 = add nsw i32 %shl1027, %conv1029, !dbg !7674
  %conv1031 = trunc i32 %add1030 to i16, !dbg !7675
  store i16 %conv1031, i16* %g1024, align 2, !dbg !7676
  call void @llvm.dbg.declare(metadata i32* %temp1032, metadata !7677, metadata !DIExpression()), !dbg !7679
  %566 = load i16, i16* %g1024, align 2, !dbg !7679
  %conv1033 = zext i16 %566 to i32, !dbg !7679
  %567 = load i16, i16* %a995, align 2, !dbg !7679
  %conv1034 = zext i16 %567 to i32, !dbg !7679
  %mul1035 = mul i32 %conv1033, %conv1034, !dbg !7679
  %568 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7679
  %background_11036 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %568, i32 0, i32 70, !dbg !7679
  %gray1037 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11036, i32 0, i32 4, !dbg !7679
  %569 = load i16, i16* %gray1037, align 2, !dbg !7679
  %conv1038 = zext i16 %569 to i32, !dbg !7679
  %570 = load i16, i16* %a995, align 2, !dbg !7679
  %conv1039 = zext i16 %570 to i32, !dbg !7679
  %sub1040 = sub i32 65535, %conv1039, !dbg !7679
  %mul1041 = mul i32 %conv1038, %sub1040, !dbg !7679
  %add1042 = add i32 %mul1035, %mul1041, !dbg !7679
  %add1043 = add i32 %add1042, 32768, !dbg !7679
  store i32 %add1043, i32* %temp1032, align 4, !dbg !7679
  %571 = load i32, i32* %temp1032, align 4, !dbg !7679
  %572 = load i32, i32* %temp1032, align 4, !dbg !7679
  %shr1044 = lshr i32 %572, 16, !dbg !7679
  %add1045 = add i32 %571, %shr1044, !dbg !7679
  %shr1046 = lshr i32 %add1045, 16, !dbg !7679
  %conv1047 = trunc i32 %shr1046 to i16, !dbg !7679
  store i16 %conv1047, i16* %v1025, align 2, !dbg !7679
  %573 = load i16, i16* %v1025, align 2, !dbg !7680
  %conv1048 = zext i16 %573 to i32, !dbg !7680
  %shr1049 = ashr i32 %conv1048, 8, !dbg !7681
  %and1050 = and i32 %shr1049, 255, !dbg !7682
  %conv1051 = trunc i32 %and1050 to i8, !dbg !7683
  %574 = load i8*, i8** %sp, align 8, !dbg !7684
  store i8 %conv1051, i8* %574, align 1, !dbg !7685
  %575 = load i16, i16* %v1025, align 2, !dbg !7686
  %conv1052 = zext i16 %575 to i32, !dbg !7686
  %and1053 = and i32 %conv1052, 255, !dbg !7687
  %conv1054 = trunc i32 %and1053 to i8, !dbg !7688
  %576 = load i8*, i8** %sp, align 8, !dbg !7689
  %add.ptr1055 = getelementptr inbounds i8, i8* %576, i64 1, !dbg !7690
  store i8 %conv1054, i8* %add.ptr1055, align 1, !dbg !7691
  br label %if.end1056, !dbg !7692

if.end1056:                                       ; preds = %if.then1023, %if.else1019
  br label %if.end1057

if.end1057:                                       ; preds = %if.end1056, %if.then1006
  br label %for.inc1058, !dbg !7693

for.inc1058:                                      ; preds = %if.end1057
  %577 = load i32, i32* %i, align 4, !dbg !7694
  %inc1059 = add i32 %577, 1, !dbg !7694
  store i32 %inc1059, i32* %i, align 4, !dbg !7694
  %578 = load i8*, i8** %sp, align 8, !dbg !7695
  %add.ptr1060 = getelementptr inbounds i8, i8* %578, i64 4, !dbg !7695
  store i8* %add.ptr1060, i8** %sp, align 8, !dbg !7695
  br label %for.cond991, !dbg !7696, !llvm.loop !7697

for.end1061:                                      ; preds = %for.cond991
  br label %if.end1062

if.end1062:                                       ; preds = %for.end1061, %for.end989
  br label %if.end1063

if.end1063:                                       ; preds = %if.end1062, %if.end876
  br label %sw.epilog1763, !dbg !7699

sw.bb1064:                                        ; preds = %entry
  %579 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7700
  %bit_depth1065 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %579, i32 0, i32 3, !dbg !7703
  %580 = load i8, i8* %bit_depth1065, align 1, !dbg !7703
  %conv1066 = zext i8 %580 to i32, !dbg !7700
  %cmp1067 = icmp eq i32 %conv1066, 8, !dbg !7704
  br i1 %cmp1067, label %if.then1069, label %if.else1331, !dbg !7705

if.then1069:                                      ; preds = %sw.bb1064
  %581 = load i8*, i8** %gamma_to_1, align 8, !dbg !7706
  %cmp1070 = icmp ne i8* %581, null, !dbg !7709
  br i1 %cmp1070, label %land.lhs.true1072, label %if.else1221, !dbg !7710

land.lhs.true1072:                                ; preds = %if.then1069
  %582 = load i8*, i8** %gamma_from_1, align 8, !dbg !7711
  %cmp1073 = icmp ne i8* %582, null, !dbg !7712
  br i1 %cmp1073, label %land.lhs.true1075, label %if.else1221, !dbg !7713

land.lhs.true1075:                                ; preds = %land.lhs.true1072
  %583 = load i8*, i8** %gamma_table, align 8, !dbg !7714
  %cmp1076 = icmp ne i8* %583, null, !dbg !7715
  br i1 %cmp1076, label %if.then1078, label %if.else1221, !dbg !7716

if.then1078:                                      ; preds = %land.lhs.true1075
  %584 = load i8*, i8** %row.addr, align 8, !dbg !7717
  store i8* %584, i8** %sp, align 8, !dbg !7719
  store i32 0, i32* %i, align 4, !dbg !7720
  br label %for.cond1079, !dbg !7722

for.cond1079:                                     ; preds = %for.inc1217, %if.then1078
  %585 = load i32, i32* %i, align 4, !dbg !7723
  %586 = load i32, i32* %row_width, align 4, !dbg !7725
  %cmp1080 = icmp ult i32 %585, %586, !dbg !7726
  br i1 %cmp1080, label %for.body1082, label %for.end1220, !dbg !7727

for.body1082:                                     ; preds = %for.cond1079
  call void @llvm.dbg.declare(metadata i8* %a1083, metadata !7728, metadata !DIExpression()), !dbg !7730
  %587 = load i8*, i8** %sp, align 8, !dbg !7731
  %add.ptr1084 = getelementptr inbounds i8, i8* %587, i64 3, !dbg !7732
  %588 = load i8, i8* %add.ptr1084, align 1, !dbg !7733
  store i8 %588, i8* %a1083, align 1, !dbg !7730
  %589 = load i8, i8* %a1083, align 1, !dbg !7734
  %conv1085 = zext i8 %589 to i32, !dbg !7734
  %cmp1086 = icmp eq i32 %conv1085, 255, !dbg !7736
  br i1 %cmp1086, label %if.then1088, label %if.else1099, !dbg !7737

if.then1088:                                      ; preds = %for.body1082
  %590 = load i8*, i8** %gamma_table, align 8, !dbg !7738
  %591 = load i8*, i8** %sp, align 8, !dbg !7740
  %592 = load i8, i8* %591, align 1, !dbg !7741
  %idxprom1089 = zext i8 %592 to i64, !dbg !7738
  %arrayidx1090 = getelementptr inbounds i8, i8* %590, i64 %idxprom1089, !dbg !7738
  %593 = load i8, i8* %arrayidx1090, align 1, !dbg !7738
  %594 = load i8*, i8** %sp, align 8, !dbg !7742
  store i8 %593, i8* %594, align 1, !dbg !7743
  %595 = load i8*, i8** %gamma_table, align 8, !dbg !7744
  %596 = load i8*, i8** %sp, align 8, !dbg !7745
  %add.ptr1091 = getelementptr inbounds i8, i8* %596, i64 1, !dbg !7746
  %597 = load i8, i8* %add.ptr1091, align 1, !dbg !7747
  %idxprom1092 = zext i8 %597 to i64, !dbg !7744
  %arrayidx1093 = getelementptr inbounds i8, i8* %595, i64 %idxprom1092, !dbg !7744
  %598 = load i8, i8* %arrayidx1093, align 1, !dbg !7744
  %599 = load i8*, i8** %sp, align 8, !dbg !7748
  %add.ptr1094 = getelementptr inbounds i8, i8* %599, i64 1, !dbg !7749
  store i8 %598, i8* %add.ptr1094, align 1, !dbg !7750
  %600 = load i8*, i8** %gamma_table, align 8, !dbg !7751
  %601 = load i8*, i8** %sp, align 8, !dbg !7752
  %add.ptr1095 = getelementptr inbounds i8, i8* %601, i64 2, !dbg !7753
  %602 = load i8, i8* %add.ptr1095, align 1, !dbg !7754
  %idxprom1096 = zext i8 %602 to i64, !dbg !7751
  %arrayidx1097 = getelementptr inbounds i8, i8* %600, i64 %idxprom1096, !dbg !7751
  %603 = load i8, i8* %arrayidx1097, align 1, !dbg !7751
  %604 = load i8*, i8** %sp, align 8, !dbg !7755
  %add.ptr1098 = getelementptr inbounds i8, i8* %604, i64 2, !dbg !7756
  store i8 %603, i8* %add.ptr1098, align 1, !dbg !7757
  br label %if.end1216, !dbg !7758

if.else1099:                                      ; preds = %for.body1082
  %605 = load i8, i8* %a1083, align 1, !dbg !7759
  %conv1100 = zext i8 %605 to i32, !dbg !7759
  %cmp1101 = icmp eq i32 %conv1100, 0, !dbg !7761
  br i1 %cmp1101, label %if.then1103, label %if.else1115, !dbg !7762

if.then1103:                                      ; preds = %if.else1099
  %606 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7763
  %background1104 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %606, i32 0, i32 69, !dbg !7765
  %red1105 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1104, i32 0, i32 1, !dbg !7766
  %607 = load i16, i16* %red1105, align 2, !dbg !7766
  %conv1106 = trunc i16 %607 to i8, !dbg !7767
  %608 = load i8*, i8** %sp, align 8, !dbg !7768
  store i8 %conv1106, i8* %608, align 1, !dbg !7769
  %609 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7770
  %background1107 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %609, i32 0, i32 69, !dbg !7771
  %green1108 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1107, i32 0, i32 2, !dbg !7772
  %610 = load i16, i16* %green1108, align 4, !dbg !7772
  %conv1109 = trunc i16 %610 to i8, !dbg !7773
  %611 = load i8*, i8** %sp, align 8, !dbg !7774
  %add.ptr1110 = getelementptr inbounds i8, i8* %611, i64 1, !dbg !7775
  store i8 %conv1109, i8* %add.ptr1110, align 1, !dbg !7776
  %612 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7777
  %background1111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %612, i32 0, i32 69, !dbg !7778
  %blue1112 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1111, i32 0, i32 3, !dbg !7779
  %613 = load i16, i16* %blue1112, align 2, !dbg !7779
  %conv1113 = trunc i16 %613 to i8, !dbg !7780
  %614 = load i8*, i8** %sp, align 8, !dbg !7781
  %add.ptr1114 = getelementptr inbounds i8, i8* %614, i64 2, !dbg !7782
  store i8 %conv1113, i8* %add.ptr1114, align 1, !dbg !7783
  br label %if.end1215, !dbg !7784

if.else1115:                                      ; preds = %if.else1099
  call void @llvm.dbg.declare(metadata i8* %v1116, metadata !7785, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata i8* %w1117, metadata !7788, metadata !DIExpression()), !dbg !7789
  %615 = load i8*, i8** %gamma_to_1, align 8, !dbg !7790
  %616 = load i8*, i8** %sp, align 8, !dbg !7791
  %617 = load i8, i8* %616, align 1, !dbg !7792
  %idxprom1118 = zext i8 %617 to i64, !dbg !7790
  %arrayidx1119 = getelementptr inbounds i8, i8* %615, i64 %idxprom1118, !dbg !7790
  %618 = load i8, i8* %arrayidx1119, align 1, !dbg !7790
  store i8 %618, i8* %v1116, align 1, !dbg !7793
  call void @llvm.dbg.declare(metadata i16* %temp1120, metadata !7794, metadata !DIExpression()), !dbg !7796
  %619 = load i8, i8* %v1116, align 1, !dbg !7796
  %conv1121 = zext i8 %619 to i16, !dbg !7796
  %conv1122 = zext i16 %conv1121 to i32, !dbg !7796
  %620 = load i8, i8* %a1083, align 1, !dbg !7796
  %conv1123 = zext i8 %620 to i16, !dbg !7796
  %conv1124 = zext i16 %conv1123 to i32, !dbg !7796
  %mul1125 = mul nsw i32 %conv1122, %conv1124, !dbg !7796
  %621 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7796
  %background_11126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %621, i32 0, i32 70, !dbg !7796
  %red1127 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11126, i32 0, i32 1, !dbg !7796
  %622 = load i16, i16* %red1127, align 2, !dbg !7796
  %conv1128 = zext i16 %622 to i32, !dbg !7796
  %623 = load i8, i8* %a1083, align 1, !dbg !7796
  %conv1129 = zext i8 %623 to i16, !dbg !7796
  %conv1130 = zext i16 %conv1129 to i32, !dbg !7796
  %sub1131 = sub nsw i32 255, %conv1130, !dbg !7796
  %conv1132 = trunc i32 %sub1131 to i16, !dbg !7796
  %conv1133 = zext i16 %conv1132 to i32, !dbg !7796
  %mul1134 = mul nsw i32 %conv1128, %conv1133, !dbg !7796
  %add1135 = add nsw i32 %mul1125, %mul1134, !dbg !7796
  %add1136 = add nsw i32 %add1135, 128, !dbg !7796
  %conv1137 = trunc i32 %add1136 to i16, !dbg !7796
  store i16 %conv1137, i16* %temp1120, align 2, !dbg !7796
  %624 = load i16, i16* %temp1120, align 2, !dbg !7796
  %conv1138 = zext i16 %624 to i32, !dbg !7796
  %625 = load i16, i16* %temp1120, align 2, !dbg !7796
  %conv1139 = zext i16 %625 to i32, !dbg !7796
  %shr1140 = ashr i32 %conv1139, 8, !dbg !7796
  %add1141 = add nsw i32 %conv1138, %shr1140, !dbg !7796
  %shr1142 = ashr i32 %add1141, 8, !dbg !7796
  %conv1143 = trunc i32 %shr1142 to i8, !dbg !7796
  store i8 %conv1143, i8* %w1117, align 1, !dbg !7796
  %626 = load i32, i32* %optimize, align 4, !dbg !7797
  %tobool1144 = icmp ne i32 %626, 0, !dbg !7797
  br i1 %tobool1144, label %if.end1148, label %if.then1145, !dbg !7799

if.then1145:                                      ; preds = %if.else1115
  %627 = load i8*, i8** %gamma_from_1, align 8, !dbg !7800
  %628 = load i8, i8* %w1117, align 1, !dbg !7801
  %idxprom1146 = zext i8 %628 to i64, !dbg !7800
  %arrayidx1147 = getelementptr inbounds i8, i8* %627, i64 %idxprom1146, !dbg !7800
  %629 = load i8, i8* %arrayidx1147, align 1, !dbg !7800
  store i8 %629, i8* %w1117, align 1, !dbg !7802
  br label %if.end1148, !dbg !7803

if.end1148:                                       ; preds = %if.then1145, %if.else1115
  %630 = load i8, i8* %w1117, align 1, !dbg !7804
  %631 = load i8*, i8** %sp, align 8, !dbg !7805
  store i8 %630, i8* %631, align 1, !dbg !7806
  %632 = load i8*, i8** %gamma_to_1, align 8, !dbg !7807
  %633 = load i8*, i8** %sp, align 8, !dbg !7808
  %add.ptr1149 = getelementptr inbounds i8, i8* %633, i64 1, !dbg !7809
  %634 = load i8, i8* %add.ptr1149, align 1, !dbg !7810
  %idxprom1150 = zext i8 %634 to i64, !dbg !7807
  %arrayidx1151 = getelementptr inbounds i8, i8* %632, i64 %idxprom1150, !dbg !7807
  %635 = load i8, i8* %arrayidx1151, align 1, !dbg !7807
  store i8 %635, i8* %v1116, align 1, !dbg !7811
  call void @llvm.dbg.declare(metadata i16* %temp1152, metadata !7812, metadata !DIExpression()), !dbg !7814
  %636 = load i8, i8* %v1116, align 1, !dbg !7814
  %conv1153 = zext i8 %636 to i16, !dbg !7814
  %conv1154 = zext i16 %conv1153 to i32, !dbg !7814
  %637 = load i8, i8* %a1083, align 1, !dbg !7814
  %conv1155 = zext i8 %637 to i16, !dbg !7814
  %conv1156 = zext i16 %conv1155 to i32, !dbg !7814
  %mul1157 = mul nsw i32 %conv1154, %conv1156, !dbg !7814
  %638 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7814
  %background_11158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %638, i32 0, i32 70, !dbg !7814
  %green1159 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11158, i32 0, i32 2, !dbg !7814
  %639 = load i16, i16* %green1159, align 2, !dbg !7814
  %conv1160 = zext i16 %639 to i32, !dbg !7814
  %640 = load i8, i8* %a1083, align 1, !dbg !7814
  %conv1161 = zext i8 %640 to i16, !dbg !7814
  %conv1162 = zext i16 %conv1161 to i32, !dbg !7814
  %sub1163 = sub nsw i32 255, %conv1162, !dbg !7814
  %conv1164 = trunc i32 %sub1163 to i16, !dbg !7814
  %conv1165 = zext i16 %conv1164 to i32, !dbg !7814
  %mul1166 = mul nsw i32 %conv1160, %conv1165, !dbg !7814
  %add1167 = add nsw i32 %mul1157, %mul1166, !dbg !7814
  %add1168 = add nsw i32 %add1167, 128, !dbg !7814
  %conv1169 = trunc i32 %add1168 to i16, !dbg !7814
  store i16 %conv1169, i16* %temp1152, align 2, !dbg !7814
  %641 = load i16, i16* %temp1152, align 2, !dbg !7814
  %conv1170 = zext i16 %641 to i32, !dbg !7814
  %642 = load i16, i16* %temp1152, align 2, !dbg !7814
  %conv1171 = zext i16 %642 to i32, !dbg !7814
  %shr1172 = ashr i32 %conv1171, 8, !dbg !7814
  %add1173 = add nsw i32 %conv1170, %shr1172, !dbg !7814
  %shr1174 = ashr i32 %add1173, 8, !dbg !7814
  %conv1175 = trunc i32 %shr1174 to i8, !dbg !7814
  store i8 %conv1175, i8* %w1117, align 1, !dbg !7814
  %643 = load i32, i32* %optimize, align 4, !dbg !7815
  %tobool1176 = icmp ne i32 %643, 0, !dbg !7815
  br i1 %tobool1176, label %if.end1180, label %if.then1177, !dbg !7817

if.then1177:                                      ; preds = %if.end1148
  %644 = load i8*, i8** %gamma_from_1, align 8, !dbg !7818
  %645 = load i8, i8* %w1117, align 1, !dbg !7819
  %idxprom1178 = zext i8 %645 to i64, !dbg !7818
  %arrayidx1179 = getelementptr inbounds i8, i8* %644, i64 %idxprom1178, !dbg !7818
  %646 = load i8, i8* %arrayidx1179, align 1, !dbg !7818
  store i8 %646, i8* %w1117, align 1, !dbg !7820
  br label %if.end1180, !dbg !7821

if.end1180:                                       ; preds = %if.then1177, %if.end1148
  %647 = load i8, i8* %w1117, align 1, !dbg !7822
  %648 = load i8*, i8** %sp, align 8, !dbg !7823
  %add.ptr1181 = getelementptr inbounds i8, i8* %648, i64 1, !dbg !7824
  store i8 %647, i8* %add.ptr1181, align 1, !dbg !7825
  %649 = load i8*, i8** %gamma_to_1, align 8, !dbg !7826
  %650 = load i8*, i8** %sp, align 8, !dbg !7827
  %add.ptr1182 = getelementptr inbounds i8, i8* %650, i64 2, !dbg !7828
  %651 = load i8, i8* %add.ptr1182, align 1, !dbg !7829
  %idxprom1183 = zext i8 %651 to i64, !dbg !7826
  %arrayidx1184 = getelementptr inbounds i8, i8* %649, i64 %idxprom1183, !dbg !7826
  %652 = load i8, i8* %arrayidx1184, align 1, !dbg !7826
  store i8 %652, i8* %v1116, align 1, !dbg !7830
  call void @llvm.dbg.declare(metadata i16* %temp1185, metadata !7831, metadata !DIExpression()), !dbg !7833
  %653 = load i8, i8* %v1116, align 1, !dbg !7833
  %conv1186 = zext i8 %653 to i16, !dbg !7833
  %conv1187 = zext i16 %conv1186 to i32, !dbg !7833
  %654 = load i8, i8* %a1083, align 1, !dbg !7833
  %conv1188 = zext i8 %654 to i16, !dbg !7833
  %conv1189 = zext i16 %conv1188 to i32, !dbg !7833
  %mul1190 = mul nsw i32 %conv1187, %conv1189, !dbg !7833
  %655 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7833
  %background_11191 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %655, i32 0, i32 70, !dbg !7833
  %blue1192 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11191, i32 0, i32 3, !dbg !7833
  %656 = load i16, i16* %blue1192, align 2, !dbg !7833
  %conv1193 = zext i16 %656 to i32, !dbg !7833
  %657 = load i8, i8* %a1083, align 1, !dbg !7833
  %conv1194 = zext i8 %657 to i16, !dbg !7833
  %conv1195 = zext i16 %conv1194 to i32, !dbg !7833
  %sub1196 = sub nsw i32 255, %conv1195, !dbg !7833
  %conv1197 = trunc i32 %sub1196 to i16, !dbg !7833
  %conv1198 = zext i16 %conv1197 to i32, !dbg !7833
  %mul1199 = mul nsw i32 %conv1193, %conv1198, !dbg !7833
  %add1200 = add nsw i32 %mul1190, %mul1199, !dbg !7833
  %add1201 = add nsw i32 %add1200, 128, !dbg !7833
  %conv1202 = trunc i32 %add1201 to i16, !dbg !7833
  store i16 %conv1202, i16* %temp1185, align 2, !dbg !7833
  %658 = load i16, i16* %temp1185, align 2, !dbg !7833
  %conv1203 = zext i16 %658 to i32, !dbg !7833
  %659 = load i16, i16* %temp1185, align 2, !dbg !7833
  %conv1204 = zext i16 %659 to i32, !dbg !7833
  %shr1205 = ashr i32 %conv1204, 8, !dbg !7833
  %add1206 = add nsw i32 %conv1203, %shr1205, !dbg !7833
  %shr1207 = ashr i32 %add1206, 8, !dbg !7833
  %conv1208 = trunc i32 %shr1207 to i8, !dbg !7833
  store i8 %conv1208, i8* %w1117, align 1, !dbg !7833
  %660 = load i32, i32* %optimize, align 4, !dbg !7834
  %tobool1209 = icmp ne i32 %660, 0, !dbg !7834
  br i1 %tobool1209, label %if.end1213, label %if.then1210, !dbg !7836

if.then1210:                                      ; preds = %if.end1180
  %661 = load i8*, i8** %gamma_from_1, align 8, !dbg !7837
  %662 = load i8, i8* %w1117, align 1, !dbg !7838
  %idxprom1211 = zext i8 %662 to i64, !dbg !7837
  %arrayidx1212 = getelementptr inbounds i8, i8* %661, i64 %idxprom1211, !dbg !7837
  %663 = load i8, i8* %arrayidx1212, align 1, !dbg !7837
  store i8 %663, i8* %w1117, align 1, !dbg !7839
  br label %if.end1213, !dbg !7840

if.end1213:                                       ; preds = %if.then1210, %if.end1180
  %664 = load i8, i8* %w1117, align 1, !dbg !7841
  %665 = load i8*, i8** %sp, align 8, !dbg !7842
  %add.ptr1214 = getelementptr inbounds i8, i8* %665, i64 2, !dbg !7843
  store i8 %664, i8* %add.ptr1214, align 1, !dbg !7844
  br label %if.end1215

if.end1215:                                       ; preds = %if.end1213, %if.then1103
  br label %if.end1216

if.end1216:                                       ; preds = %if.end1215, %if.then1088
  br label %for.inc1217, !dbg !7845

for.inc1217:                                      ; preds = %if.end1216
  %666 = load i32, i32* %i, align 4, !dbg !7846
  %inc1218 = add i32 %666, 1, !dbg !7846
  store i32 %inc1218, i32* %i, align 4, !dbg !7846
  %667 = load i8*, i8** %sp, align 8, !dbg !7847
  %add.ptr1219 = getelementptr inbounds i8, i8* %667, i64 4, !dbg !7847
  store i8* %add.ptr1219, i8** %sp, align 8, !dbg !7847
  br label %for.cond1079, !dbg !7848, !llvm.loop !7849

for.end1220:                                      ; preds = %for.cond1079
  br label %if.end1330, !dbg !7851

if.else1221:                                      ; preds = %land.lhs.true1075, %land.lhs.true1072, %if.then1069
  %668 = load i8*, i8** %row.addr, align 8, !dbg !7852
  store i8* %668, i8** %sp, align 8, !dbg !7854
  store i32 0, i32* %i, align 4, !dbg !7855
  br label %for.cond1222, !dbg !7857

for.cond1222:                                     ; preds = %for.inc1326, %if.else1221
  %669 = load i32, i32* %i, align 4, !dbg !7858
  %670 = load i32, i32* %row_width, align 4, !dbg !7860
  %cmp1223 = icmp ult i32 %669, %670, !dbg !7861
  br i1 %cmp1223, label %for.body1225, label %for.end1329, !dbg !7862

for.body1225:                                     ; preds = %for.cond1222
  call void @llvm.dbg.declare(metadata i8* %a1226, metadata !7863, metadata !DIExpression()), !dbg !7865
  %671 = load i8*, i8** %sp, align 8, !dbg !7866
  %add.ptr1227 = getelementptr inbounds i8, i8* %671, i64 3, !dbg !7867
  %672 = load i8, i8* %add.ptr1227, align 1, !dbg !7868
  store i8 %672, i8* %a1226, align 1, !dbg !7865
  %673 = load i8, i8* %a1226, align 1, !dbg !7869
  %conv1228 = zext i8 %673 to i32, !dbg !7869
  %cmp1229 = icmp eq i32 %conv1228, 0, !dbg !7871
  br i1 %cmp1229, label %if.then1231, label %if.else1243, !dbg !7872

if.then1231:                                      ; preds = %for.body1225
  %674 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7873
  %background1232 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %674, i32 0, i32 69, !dbg !7875
  %red1233 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1232, i32 0, i32 1, !dbg !7876
  %675 = load i16, i16* %red1233, align 2, !dbg !7876
  %conv1234 = trunc i16 %675 to i8, !dbg !7877
  %676 = load i8*, i8** %sp, align 8, !dbg !7878
  store i8 %conv1234, i8* %676, align 1, !dbg !7879
  %677 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7880
  %background1235 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %677, i32 0, i32 69, !dbg !7881
  %green1236 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1235, i32 0, i32 2, !dbg !7882
  %678 = load i16, i16* %green1236, align 4, !dbg !7882
  %conv1237 = trunc i16 %678 to i8, !dbg !7883
  %679 = load i8*, i8** %sp, align 8, !dbg !7884
  %add.ptr1238 = getelementptr inbounds i8, i8* %679, i64 1, !dbg !7885
  store i8 %conv1237, i8* %add.ptr1238, align 1, !dbg !7886
  %680 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7887
  %background1239 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %680, i32 0, i32 69, !dbg !7888
  %blue1240 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1239, i32 0, i32 3, !dbg !7889
  %681 = load i16, i16* %blue1240, align 2, !dbg !7889
  %conv1241 = trunc i16 %681 to i8, !dbg !7890
  %682 = load i8*, i8** %sp, align 8, !dbg !7891
  %add.ptr1242 = getelementptr inbounds i8, i8* %682, i64 2, !dbg !7892
  store i8 %conv1241, i8* %add.ptr1242, align 1, !dbg !7893
  br label %if.end1325, !dbg !7894

if.else1243:                                      ; preds = %for.body1225
  %683 = load i8, i8* %a1226, align 1, !dbg !7895
  %conv1244 = zext i8 %683 to i32, !dbg !7895
  %cmp1245 = icmp slt i32 %conv1244, 255, !dbg !7897
  br i1 %cmp1245, label %if.then1247, label %if.end1324, !dbg !7898

if.then1247:                                      ; preds = %if.else1243
  call void @llvm.dbg.declare(metadata i16* %temp1248, metadata !7899, metadata !DIExpression()), !dbg !7902
  %684 = load i8*, i8** %sp, align 8, !dbg !7902
  %685 = load i8, i8* %684, align 1, !dbg !7902
  %conv1249 = zext i8 %685 to i16, !dbg !7902
  %conv1250 = zext i16 %conv1249 to i32, !dbg !7902
  %686 = load i8, i8* %a1226, align 1, !dbg !7902
  %conv1251 = zext i8 %686 to i16, !dbg !7902
  %conv1252 = zext i16 %conv1251 to i32, !dbg !7902
  %mul1253 = mul nsw i32 %conv1250, %conv1252, !dbg !7902
  %687 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7902
  %background1254 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %687, i32 0, i32 69, !dbg !7902
  %red1255 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1254, i32 0, i32 1, !dbg !7902
  %688 = load i16, i16* %red1255, align 2, !dbg !7902
  %conv1256 = zext i16 %688 to i32, !dbg !7902
  %689 = load i8, i8* %a1226, align 1, !dbg !7902
  %conv1257 = zext i8 %689 to i16, !dbg !7902
  %conv1258 = zext i16 %conv1257 to i32, !dbg !7902
  %sub1259 = sub nsw i32 255, %conv1258, !dbg !7902
  %conv1260 = trunc i32 %sub1259 to i16, !dbg !7902
  %conv1261 = zext i16 %conv1260 to i32, !dbg !7902
  %mul1262 = mul nsw i32 %conv1256, %conv1261, !dbg !7902
  %add1263 = add nsw i32 %mul1253, %mul1262, !dbg !7902
  %add1264 = add nsw i32 %add1263, 128, !dbg !7902
  %conv1265 = trunc i32 %add1264 to i16, !dbg !7902
  store i16 %conv1265, i16* %temp1248, align 2, !dbg !7902
  %690 = load i16, i16* %temp1248, align 2, !dbg !7902
  %conv1266 = zext i16 %690 to i32, !dbg !7902
  %691 = load i16, i16* %temp1248, align 2, !dbg !7902
  %conv1267 = zext i16 %691 to i32, !dbg !7902
  %shr1268 = ashr i32 %conv1267, 8, !dbg !7902
  %add1269 = add nsw i32 %conv1266, %shr1268, !dbg !7902
  %shr1270 = ashr i32 %add1269, 8, !dbg !7902
  %conv1271 = trunc i32 %shr1270 to i8, !dbg !7902
  %692 = load i8*, i8** %sp, align 8, !dbg !7902
  store i8 %conv1271, i8* %692, align 1, !dbg !7902
  call void @llvm.dbg.declare(metadata i16* %temp1272, metadata !7903, metadata !DIExpression()), !dbg !7905
  %693 = load i8*, i8** %sp, align 8, !dbg !7905
  %add.ptr1273 = getelementptr inbounds i8, i8* %693, i64 1, !dbg !7905
  %694 = load i8, i8* %add.ptr1273, align 1, !dbg !7905
  %conv1274 = zext i8 %694 to i16, !dbg !7905
  %conv1275 = zext i16 %conv1274 to i32, !dbg !7905
  %695 = load i8, i8* %a1226, align 1, !dbg !7905
  %conv1276 = zext i8 %695 to i16, !dbg !7905
  %conv1277 = zext i16 %conv1276 to i32, !dbg !7905
  %mul1278 = mul nsw i32 %conv1275, %conv1277, !dbg !7905
  %696 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7905
  %background1279 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %696, i32 0, i32 69, !dbg !7905
  %green1280 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1279, i32 0, i32 2, !dbg !7905
  %697 = load i16, i16* %green1280, align 4, !dbg !7905
  %conv1281 = zext i16 %697 to i32, !dbg !7905
  %698 = load i8, i8* %a1226, align 1, !dbg !7905
  %conv1282 = zext i8 %698 to i16, !dbg !7905
  %conv1283 = zext i16 %conv1282 to i32, !dbg !7905
  %sub1284 = sub nsw i32 255, %conv1283, !dbg !7905
  %conv1285 = trunc i32 %sub1284 to i16, !dbg !7905
  %conv1286 = zext i16 %conv1285 to i32, !dbg !7905
  %mul1287 = mul nsw i32 %conv1281, %conv1286, !dbg !7905
  %add1288 = add nsw i32 %mul1278, %mul1287, !dbg !7905
  %add1289 = add nsw i32 %add1288, 128, !dbg !7905
  %conv1290 = trunc i32 %add1289 to i16, !dbg !7905
  store i16 %conv1290, i16* %temp1272, align 2, !dbg !7905
  %699 = load i16, i16* %temp1272, align 2, !dbg !7905
  %conv1291 = zext i16 %699 to i32, !dbg !7905
  %700 = load i16, i16* %temp1272, align 2, !dbg !7905
  %conv1292 = zext i16 %700 to i32, !dbg !7905
  %shr1293 = ashr i32 %conv1292, 8, !dbg !7905
  %add1294 = add nsw i32 %conv1291, %shr1293, !dbg !7905
  %shr1295 = ashr i32 %add1294, 8, !dbg !7905
  %conv1296 = trunc i32 %shr1295 to i8, !dbg !7905
  %701 = load i8*, i8** %sp, align 8, !dbg !7905
  %add.ptr1297 = getelementptr inbounds i8, i8* %701, i64 1, !dbg !7905
  store i8 %conv1296, i8* %add.ptr1297, align 1, !dbg !7905
  call void @llvm.dbg.declare(metadata i16* %temp1298, metadata !7906, metadata !DIExpression()), !dbg !7908
  %702 = load i8*, i8** %sp, align 8, !dbg !7908
  %add.ptr1299 = getelementptr inbounds i8, i8* %702, i64 2, !dbg !7908
  %703 = load i8, i8* %add.ptr1299, align 1, !dbg !7908
  %conv1300 = zext i8 %703 to i16, !dbg !7908
  %conv1301 = zext i16 %conv1300 to i32, !dbg !7908
  %704 = load i8, i8* %a1226, align 1, !dbg !7908
  %conv1302 = zext i8 %704 to i16, !dbg !7908
  %conv1303 = zext i16 %conv1302 to i32, !dbg !7908
  %mul1304 = mul nsw i32 %conv1301, %conv1303, !dbg !7908
  %705 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7908
  %background1305 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %705, i32 0, i32 69, !dbg !7908
  %blue1306 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1305, i32 0, i32 3, !dbg !7908
  %706 = load i16, i16* %blue1306, align 2, !dbg !7908
  %conv1307 = zext i16 %706 to i32, !dbg !7908
  %707 = load i8, i8* %a1226, align 1, !dbg !7908
  %conv1308 = zext i8 %707 to i16, !dbg !7908
  %conv1309 = zext i16 %conv1308 to i32, !dbg !7908
  %sub1310 = sub nsw i32 255, %conv1309, !dbg !7908
  %conv1311 = trunc i32 %sub1310 to i16, !dbg !7908
  %conv1312 = zext i16 %conv1311 to i32, !dbg !7908
  %mul1313 = mul nsw i32 %conv1307, %conv1312, !dbg !7908
  %add1314 = add nsw i32 %mul1304, %mul1313, !dbg !7908
  %add1315 = add nsw i32 %add1314, 128, !dbg !7908
  %conv1316 = trunc i32 %add1315 to i16, !dbg !7908
  store i16 %conv1316, i16* %temp1298, align 2, !dbg !7908
  %708 = load i16, i16* %temp1298, align 2, !dbg !7908
  %conv1317 = zext i16 %708 to i32, !dbg !7908
  %709 = load i16, i16* %temp1298, align 2, !dbg !7908
  %conv1318 = zext i16 %709 to i32, !dbg !7908
  %shr1319 = ashr i32 %conv1318, 8, !dbg !7908
  %add1320 = add nsw i32 %conv1317, %shr1319, !dbg !7908
  %shr1321 = ashr i32 %add1320, 8, !dbg !7908
  %conv1322 = trunc i32 %shr1321 to i8, !dbg !7908
  %710 = load i8*, i8** %sp, align 8, !dbg !7908
  %add.ptr1323 = getelementptr inbounds i8, i8* %710, i64 2, !dbg !7908
  store i8 %conv1322, i8* %add.ptr1323, align 1, !dbg !7908
  br label %if.end1324, !dbg !7909

if.end1324:                                       ; preds = %if.then1247, %if.else1243
  br label %if.end1325

if.end1325:                                       ; preds = %if.end1324, %if.then1231
  br label %for.inc1326, !dbg !7910

for.inc1326:                                      ; preds = %if.end1325
  %711 = load i32, i32* %i, align 4, !dbg !7911
  %inc1327 = add i32 %711, 1, !dbg !7911
  store i32 %inc1327, i32* %i, align 4, !dbg !7911
  %712 = load i8*, i8** %sp, align 8, !dbg !7912
  %add.ptr1328 = getelementptr inbounds i8, i8* %712, i64 4, !dbg !7912
  store i8* %add.ptr1328, i8** %sp, align 8, !dbg !7912
  br label %for.cond1222, !dbg !7913, !llvm.loop !7914

for.end1329:                                      ; preds = %for.cond1222
  br label %if.end1330

if.end1330:                                       ; preds = %for.end1329, %for.end1220
  br label %if.end1761, !dbg !7916

if.else1331:                                      ; preds = %sw.bb1064
  %713 = load i16**, i16*** %gamma_16, align 8, !dbg !7917
  %cmp1332 = icmp ne i16** %713, null, !dbg !7920
  br i1 %cmp1332, label %land.lhs.true1334, label %if.else1594, !dbg !7921

land.lhs.true1334:                                ; preds = %if.else1331
  %714 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !7922
  %cmp1335 = icmp ne i16** %714, null, !dbg !7923
  br i1 %cmp1335, label %land.lhs.true1337, label %if.else1594, !dbg !7924

land.lhs.true1337:                                ; preds = %land.lhs.true1334
  %715 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !7925
  %cmp1338 = icmp ne i16** %715, null, !dbg !7926
  br i1 %cmp1338, label %if.then1340, label %if.else1594, !dbg !7927

if.then1340:                                      ; preds = %land.lhs.true1337
  %716 = load i8*, i8** %row.addr, align 8, !dbg !7928
  store i8* %716, i8** %sp, align 8, !dbg !7930
  store i32 0, i32* %i, align 4, !dbg !7931
  br label %for.cond1341, !dbg !7933

for.cond1341:                                     ; preds = %for.inc1590, %if.then1340
  %717 = load i32, i32* %i, align 4, !dbg !7934
  %718 = load i32, i32* %row_width, align 4, !dbg !7936
  %cmp1342 = icmp ult i32 %717, %718, !dbg !7937
  br i1 %cmp1342, label %for.body1344, label %for.end1593, !dbg !7938

for.body1344:                                     ; preds = %for.cond1341
  call void @llvm.dbg.declare(metadata i16* %a1345, metadata !7939, metadata !DIExpression()), !dbg !7941
  %719 = load i8*, i8** %sp, align 8, !dbg !7942
  %add.ptr1346 = getelementptr inbounds i8, i8* %719, i64 6, !dbg !7943
  %720 = load i8, i8* %add.ptr1346, align 1, !dbg !7944
  %conv1347 = zext i8 %720 to i16, !dbg !7945
  %conv1348 = zext i16 %conv1347 to i32, !dbg !7945
  %shl1349 = shl i32 %conv1348, 8, !dbg !7946
  %721 = load i8*, i8** %sp, align 8, !dbg !7947
  %add.ptr1350 = getelementptr inbounds i8, i8* %721, i64 7, !dbg !7948
  %722 = load i8, i8* %add.ptr1350, align 1, !dbg !7949
  %conv1351 = zext i8 %722 to i16, !dbg !7950
  %conv1352 = zext i16 %conv1351 to i32, !dbg !7950
  %add1353 = add nsw i32 %shl1349, %conv1352, !dbg !7951
  %conv1354 = trunc i32 %add1353 to i16, !dbg !7952
  store i16 %conv1354, i16* %a1345, align 2, !dbg !7941
  %723 = load i16, i16* %a1345, align 2, !dbg !7953
  %conv1355 = zext i16 %723 to i32, !dbg !7953
  %cmp1356 = icmp eq i32 %conv1355, 65535, !dbg !7955
  br i1 %cmp1356, label %if.then1358, label %if.else1409, !dbg !7956

if.then1358:                                      ; preds = %for.body1344
  call void @llvm.dbg.declare(metadata i16* %v1359, metadata !7957, metadata !DIExpression()), !dbg !7959
  %724 = load i16**, i16*** %gamma_16, align 8, !dbg !7960
  %725 = load i8*, i8** %sp, align 8, !dbg !7961
  %add.ptr1360 = getelementptr inbounds i8, i8* %725, i64 1, !dbg !7962
  %726 = load i8, i8* %add.ptr1360, align 1, !dbg !7963
  %conv1361 = zext i8 %726 to i32, !dbg !7963
  %727 = load i32, i32* %gamma_shift, align 4, !dbg !7964
  %shr1362 = ashr i32 %conv1361, %727, !dbg !7965
  %idxprom1363 = sext i32 %shr1362 to i64, !dbg !7960
  %arrayidx1364 = getelementptr inbounds i16*, i16** %724, i64 %idxprom1363, !dbg !7960
  %728 = load i16*, i16** %arrayidx1364, align 8, !dbg !7960
  %729 = load i8*, i8** %sp, align 8, !dbg !7966
  %730 = load i8, i8* %729, align 1, !dbg !7967
  %idxprom1365 = zext i8 %730 to i64, !dbg !7960
  %arrayidx1366 = getelementptr inbounds i16, i16* %728, i64 %idxprom1365, !dbg !7960
  %731 = load i16, i16* %arrayidx1366, align 2, !dbg !7960
  store i16 %731, i16* %v1359, align 2, !dbg !7968
  %732 = load i16, i16* %v1359, align 2, !dbg !7969
  %conv1367 = zext i16 %732 to i32, !dbg !7969
  %shr1368 = ashr i32 %conv1367, 8, !dbg !7970
  %and1369 = and i32 %shr1368, 255, !dbg !7971
  %conv1370 = trunc i32 %and1369 to i8, !dbg !7972
  %733 = load i8*, i8** %sp, align 8, !dbg !7973
  store i8 %conv1370, i8* %733, align 1, !dbg !7974
  %734 = load i16, i16* %v1359, align 2, !dbg !7975
  %conv1371 = zext i16 %734 to i32, !dbg !7975
  %and1372 = and i32 %conv1371, 255, !dbg !7976
  %conv1373 = trunc i32 %and1372 to i8, !dbg !7977
  %735 = load i8*, i8** %sp, align 8, !dbg !7978
  %add.ptr1374 = getelementptr inbounds i8, i8* %735, i64 1, !dbg !7979
  store i8 %conv1373, i8* %add.ptr1374, align 1, !dbg !7980
  %736 = load i16**, i16*** %gamma_16, align 8, !dbg !7981
  %737 = load i8*, i8** %sp, align 8, !dbg !7982
  %add.ptr1375 = getelementptr inbounds i8, i8* %737, i64 3, !dbg !7983
  %738 = load i8, i8* %add.ptr1375, align 1, !dbg !7984
  %conv1376 = zext i8 %738 to i32, !dbg !7984
  %739 = load i32, i32* %gamma_shift, align 4, !dbg !7985
  %shr1377 = ashr i32 %conv1376, %739, !dbg !7986
  %idxprom1378 = sext i32 %shr1377 to i64, !dbg !7981
  %arrayidx1379 = getelementptr inbounds i16*, i16** %736, i64 %idxprom1378, !dbg !7981
  %740 = load i16*, i16** %arrayidx1379, align 8, !dbg !7981
  %741 = load i8*, i8** %sp, align 8, !dbg !7987
  %add.ptr1380 = getelementptr inbounds i8, i8* %741, i64 2, !dbg !7988
  %742 = load i8, i8* %add.ptr1380, align 1, !dbg !7989
  %idxprom1381 = zext i8 %742 to i64, !dbg !7981
  %arrayidx1382 = getelementptr inbounds i16, i16* %740, i64 %idxprom1381, !dbg !7981
  %743 = load i16, i16* %arrayidx1382, align 2, !dbg !7981
  store i16 %743, i16* %v1359, align 2, !dbg !7990
  %744 = load i16, i16* %v1359, align 2, !dbg !7991
  %conv1383 = zext i16 %744 to i32, !dbg !7991
  %shr1384 = ashr i32 %conv1383, 8, !dbg !7992
  %and1385 = and i32 %shr1384, 255, !dbg !7993
  %conv1386 = trunc i32 %and1385 to i8, !dbg !7994
  %745 = load i8*, i8** %sp, align 8, !dbg !7995
  %add.ptr1387 = getelementptr inbounds i8, i8* %745, i64 2, !dbg !7996
  store i8 %conv1386, i8* %add.ptr1387, align 1, !dbg !7997
  %746 = load i16, i16* %v1359, align 2, !dbg !7998
  %conv1388 = zext i16 %746 to i32, !dbg !7998
  %and1389 = and i32 %conv1388, 255, !dbg !7999
  %conv1390 = trunc i32 %and1389 to i8, !dbg !8000
  %747 = load i8*, i8** %sp, align 8, !dbg !8001
  %add.ptr1391 = getelementptr inbounds i8, i8* %747, i64 3, !dbg !8002
  store i8 %conv1390, i8* %add.ptr1391, align 1, !dbg !8003
  %748 = load i16**, i16*** %gamma_16, align 8, !dbg !8004
  %749 = load i8*, i8** %sp, align 8, !dbg !8005
  %add.ptr1392 = getelementptr inbounds i8, i8* %749, i64 5, !dbg !8006
  %750 = load i8, i8* %add.ptr1392, align 1, !dbg !8007
  %conv1393 = zext i8 %750 to i32, !dbg !8007
  %751 = load i32, i32* %gamma_shift, align 4, !dbg !8008
  %shr1394 = ashr i32 %conv1393, %751, !dbg !8009
  %idxprom1395 = sext i32 %shr1394 to i64, !dbg !8004
  %arrayidx1396 = getelementptr inbounds i16*, i16** %748, i64 %idxprom1395, !dbg !8004
  %752 = load i16*, i16** %arrayidx1396, align 8, !dbg !8004
  %753 = load i8*, i8** %sp, align 8, !dbg !8010
  %add.ptr1397 = getelementptr inbounds i8, i8* %753, i64 4, !dbg !8011
  %754 = load i8, i8* %add.ptr1397, align 1, !dbg !8012
  %idxprom1398 = zext i8 %754 to i64, !dbg !8004
  %arrayidx1399 = getelementptr inbounds i16, i16* %752, i64 %idxprom1398, !dbg !8004
  %755 = load i16, i16* %arrayidx1399, align 2, !dbg !8004
  store i16 %755, i16* %v1359, align 2, !dbg !8013
  %756 = load i16, i16* %v1359, align 2, !dbg !8014
  %conv1400 = zext i16 %756 to i32, !dbg !8014
  %shr1401 = ashr i32 %conv1400, 8, !dbg !8015
  %and1402 = and i32 %shr1401, 255, !dbg !8016
  %conv1403 = trunc i32 %and1402 to i8, !dbg !8017
  %757 = load i8*, i8** %sp, align 8, !dbg !8018
  %add.ptr1404 = getelementptr inbounds i8, i8* %757, i64 4, !dbg !8019
  store i8 %conv1403, i8* %add.ptr1404, align 1, !dbg !8020
  %758 = load i16, i16* %v1359, align 2, !dbg !8021
  %conv1405 = zext i16 %758 to i32, !dbg !8021
  %and1406 = and i32 %conv1405, 255, !dbg !8022
  %conv1407 = trunc i32 %and1406 to i8, !dbg !8023
  %759 = load i8*, i8** %sp, align 8, !dbg !8024
  %add.ptr1408 = getelementptr inbounds i8, i8* %759, i64 5, !dbg !8025
  store i8 %conv1407, i8* %add.ptr1408, align 1, !dbg !8026
  br label %if.end1589, !dbg !8027

if.else1409:                                      ; preds = %for.body1344
  %760 = load i16, i16* %a1345, align 2, !dbg !8028
  %conv1410 = zext i16 %760 to i32, !dbg !8028
  %cmp1411 = icmp eq i32 %conv1410, 0, !dbg !8030
  br i1 %cmp1411, label %if.then1413, label %if.else1452, !dbg !8031

if.then1413:                                      ; preds = %if.else1409
  %761 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8032
  %background1414 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %761, i32 0, i32 69, !dbg !8034
  %red1415 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1414, i32 0, i32 1, !dbg !8035
  %762 = load i16, i16* %red1415, align 2, !dbg !8035
  %conv1416 = zext i16 %762 to i32, !dbg !8032
  %shr1417 = ashr i32 %conv1416, 8, !dbg !8036
  %and1418 = and i32 %shr1417, 255, !dbg !8037
  %conv1419 = trunc i32 %and1418 to i8, !dbg !8038
  %763 = load i8*, i8** %sp, align 8, !dbg !8039
  store i8 %conv1419, i8* %763, align 1, !dbg !8040
  %764 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8041
  %background1420 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %764, i32 0, i32 69, !dbg !8042
  %red1421 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1420, i32 0, i32 1, !dbg !8043
  %765 = load i16, i16* %red1421, align 2, !dbg !8043
  %conv1422 = zext i16 %765 to i32, !dbg !8041
  %and1423 = and i32 %conv1422, 255, !dbg !8044
  %conv1424 = trunc i32 %and1423 to i8, !dbg !8045
  %766 = load i8*, i8** %sp, align 8, !dbg !8046
  %add.ptr1425 = getelementptr inbounds i8, i8* %766, i64 1, !dbg !8047
  store i8 %conv1424, i8* %add.ptr1425, align 1, !dbg !8048
  %767 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8049
  %background1426 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %767, i32 0, i32 69, !dbg !8050
  %green1427 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1426, i32 0, i32 2, !dbg !8051
  %768 = load i16, i16* %green1427, align 4, !dbg !8051
  %conv1428 = zext i16 %768 to i32, !dbg !8049
  %shr1429 = ashr i32 %conv1428, 8, !dbg !8052
  %and1430 = and i32 %shr1429, 255, !dbg !8053
  %conv1431 = trunc i32 %and1430 to i8, !dbg !8054
  %769 = load i8*, i8** %sp, align 8, !dbg !8055
  %add.ptr1432 = getelementptr inbounds i8, i8* %769, i64 2, !dbg !8056
  store i8 %conv1431, i8* %add.ptr1432, align 1, !dbg !8057
  %770 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8058
  %background1433 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %770, i32 0, i32 69, !dbg !8059
  %green1434 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1433, i32 0, i32 2, !dbg !8060
  %771 = load i16, i16* %green1434, align 4, !dbg !8060
  %conv1435 = zext i16 %771 to i32, !dbg !8058
  %and1436 = and i32 %conv1435, 255, !dbg !8061
  %conv1437 = trunc i32 %and1436 to i8, !dbg !8062
  %772 = load i8*, i8** %sp, align 8, !dbg !8063
  %add.ptr1438 = getelementptr inbounds i8, i8* %772, i64 3, !dbg !8064
  store i8 %conv1437, i8* %add.ptr1438, align 1, !dbg !8065
  %773 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8066
  %background1439 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %773, i32 0, i32 69, !dbg !8067
  %blue1440 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1439, i32 0, i32 3, !dbg !8068
  %774 = load i16, i16* %blue1440, align 2, !dbg !8068
  %conv1441 = zext i16 %774 to i32, !dbg !8066
  %shr1442 = ashr i32 %conv1441, 8, !dbg !8069
  %and1443 = and i32 %shr1442, 255, !dbg !8070
  %conv1444 = trunc i32 %and1443 to i8, !dbg !8071
  %775 = load i8*, i8** %sp, align 8, !dbg !8072
  %add.ptr1445 = getelementptr inbounds i8, i8* %775, i64 4, !dbg !8073
  store i8 %conv1444, i8* %add.ptr1445, align 1, !dbg !8074
  %776 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8075
  %background1446 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %776, i32 0, i32 69, !dbg !8076
  %blue1447 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1446, i32 0, i32 3, !dbg !8077
  %777 = load i16, i16* %blue1447, align 2, !dbg !8077
  %conv1448 = zext i16 %777 to i32, !dbg !8075
  %and1449 = and i32 %conv1448, 255, !dbg !8078
  %conv1450 = trunc i32 %and1449 to i8, !dbg !8079
  %778 = load i8*, i8** %sp, align 8, !dbg !8080
  %add.ptr1451 = getelementptr inbounds i8, i8* %778, i64 5, !dbg !8081
  store i8 %conv1450, i8* %add.ptr1451, align 1, !dbg !8082
  br label %if.end1588, !dbg !8083

if.else1452:                                      ; preds = %if.else1409
  call void @llvm.dbg.declare(metadata i16* %v1453, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.declare(metadata i16* %w1454, metadata !8087, metadata !DIExpression()), !dbg !8088
  %779 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !8089
  %780 = load i8*, i8** %sp, align 8, !dbg !8090
  %add.ptr1455 = getelementptr inbounds i8, i8* %780, i64 1, !dbg !8091
  %781 = load i8, i8* %add.ptr1455, align 1, !dbg !8092
  %conv1456 = zext i8 %781 to i32, !dbg !8092
  %782 = load i32, i32* %gamma_shift, align 4, !dbg !8093
  %shr1457 = ashr i32 %conv1456, %782, !dbg !8094
  %idxprom1458 = sext i32 %shr1457 to i64, !dbg !8089
  %arrayidx1459 = getelementptr inbounds i16*, i16** %779, i64 %idxprom1458, !dbg !8089
  %783 = load i16*, i16** %arrayidx1459, align 8, !dbg !8089
  %784 = load i8*, i8** %sp, align 8, !dbg !8095
  %785 = load i8, i8* %784, align 1, !dbg !8096
  %idxprom1460 = zext i8 %785 to i64, !dbg !8089
  %arrayidx1461 = getelementptr inbounds i16, i16* %783, i64 %idxprom1460, !dbg !8089
  %786 = load i16, i16* %arrayidx1461, align 2, !dbg !8089
  store i16 %786, i16* %v1453, align 2, !dbg !8097
  call void @llvm.dbg.declare(metadata i32* %temp1462, metadata !8098, metadata !DIExpression()), !dbg !8100
  %787 = load i16, i16* %v1453, align 2, !dbg !8100
  %conv1463 = zext i16 %787 to i32, !dbg !8100
  %788 = load i16, i16* %a1345, align 2, !dbg !8100
  %conv1464 = zext i16 %788 to i32, !dbg !8100
  %mul1465 = mul i32 %conv1463, %conv1464, !dbg !8100
  %789 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8100
  %background_11466 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %789, i32 0, i32 70, !dbg !8100
  %red1467 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11466, i32 0, i32 1, !dbg !8100
  %790 = load i16, i16* %red1467, align 2, !dbg !8100
  %conv1468 = zext i16 %790 to i32, !dbg !8100
  %791 = load i16, i16* %a1345, align 2, !dbg !8100
  %conv1469 = zext i16 %791 to i32, !dbg !8100
  %sub1470 = sub i32 65535, %conv1469, !dbg !8100
  %mul1471 = mul i32 %conv1468, %sub1470, !dbg !8100
  %add1472 = add i32 %mul1465, %mul1471, !dbg !8100
  %add1473 = add i32 %add1472, 32768, !dbg !8100
  store i32 %add1473, i32* %temp1462, align 4, !dbg !8100
  %792 = load i32, i32* %temp1462, align 4, !dbg !8100
  %793 = load i32, i32* %temp1462, align 4, !dbg !8100
  %shr1474 = lshr i32 %793, 16, !dbg !8100
  %add1475 = add i32 %792, %shr1474, !dbg !8100
  %shr1476 = lshr i32 %add1475, 16, !dbg !8100
  %conv1477 = trunc i32 %shr1476 to i16, !dbg !8100
  store i16 %conv1477, i16* %w1454, align 2, !dbg !8100
  %794 = load i32, i32* %optimize, align 4, !dbg !8101
  %tobool1478 = icmp ne i32 %794, 0, !dbg !8101
  br i1 %tobool1478, label %if.end1489, label %if.then1479, !dbg !8103

if.then1479:                                      ; preds = %if.else1452
  %795 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !8104
  %796 = load i16, i16* %w1454, align 2, !dbg !8105
  %conv1480 = zext i16 %796 to i32, !dbg !8105
  %and1481 = and i32 %conv1480, 255, !dbg !8106
  %797 = load i32, i32* %gamma_shift, align 4, !dbg !8107
  %shr1482 = ashr i32 %and1481, %797, !dbg !8108
  %idxprom1483 = sext i32 %shr1482 to i64, !dbg !8104
  %arrayidx1484 = getelementptr inbounds i16*, i16** %795, i64 %idxprom1483, !dbg !8104
  %798 = load i16*, i16** %arrayidx1484, align 8, !dbg !8104
  %799 = load i16, i16* %w1454, align 2, !dbg !8109
  %conv1485 = zext i16 %799 to i32, !dbg !8109
  %shr1486 = ashr i32 %conv1485, 8, !dbg !8110
  %idxprom1487 = sext i32 %shr1486 to i64, !dbg !8104
  %arrayidx1488 = getelementptr inbounds i16, i16* %798, i64 %idxprom1487, !dbg !8104
  %800 = load i16, i16* %arrayidx1488, align 2, !dbg !8104
  store i16 %800, i16* %w1454, align 2, !dbg !8111
  br label %if.end1489, !dbg !8112

if.end1489:                                       ; preds = %if.then1479, %if.else1452
  %801 = load i16, i16* %w1454, align 2, !dbg !8113
  %conv1490 = zext i16 %801 to i32, !dbg !8113
  %shr1491 = ashr i32 %conv1490, 8, !dbg !8114
  %and1492 = and i32 %shr1491, 255, !dbg !8115
  %conv1493 = trunc i32 %and1492 to i8, !dbg !8116
  %802 = load i8*, i8** %sp, align 8, !dbg !8117
  store i8 %conv1493, i8* %802, align 1, !dbg !8118
  %803 = load i16, i16* %w1454, align 2, !dbg !8119
  %conv1494 = zext i16 %803 to i32, !dbg !8119
  %and1495 = and i32 %conv1494, 255, !dbg !8120
  %conv1496 = trunc i32 %and1495 to i8, !dbg !8121
  %804 = load i8*, i8** %sp, align 8, !dbg !8122
  %add.ptr1497 = getelementptr inbounds i8, i8* %804, i64 1, !dbg !8123
  store i8 %conv1496, i8* %add.ptr1497, align 1, !dbg !8124
  %805 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !8125
  %806 = load i8*, i8** %sp, align 8, !dbg !8126
  %add.ptr1498 = getelementptr inbounds i8, i8* %806, i64 3, !dbg !8127
  %807 = load i8, i8* %add.ptr1498, align 1, !dbg !8128
  %conv1499 = zext i8 %807 to i32, !dbg !8128
  %808 = load i32, i32* %gamma_shift, align 4, !dbg !8129
  %shr1500 = ashr i32 %conv1499, %808, !dbg !8130
  %idxprom1501 = sext i32 %shr1500 to i64, !dbg !8125
  %arrayidx1502 = getelementptr inbounds i16*, i16** %805, i64 %idxprom1501, !dbg !8125
  %809 = load i16*, i16** %arrayidx1502, align 8, !dbg !8125
  %810 = load i8*, i8** %sp, align 8, !dbg !8131
  %add.ptr1503 = getelementptr inbounds i8, i8* %810, i64 2, !dbg !8132
  %811 = load i8, i8* %add.ptr1503, align 1, !dbg !8133
  %idxprom1504 = zext i8 %811 to i64, !dbg !8125
  %arrayidx1505 = getelementptr inbounds i16, i16* %809, i64 %idxprom1504, !dbg !8125
  %812 = load i16, i16* %arrayidx1505, align 2, !dbg !8125
  store i16 %812, i16* %v1453, align 2, !dbg !8134
  call void @llvm.dbg.declare(metadata i32* %temp1506, metadata !8135, metadata !DIExpression()), !dbg !8137
  %813 = load i16, i16* %v1453, align 2, !dbg !8137
  %conv1507 = zext i16 %813 to i32, !dbg !8137
  %814 = load i16, i16* %a1345, align 2, !dbg !8137
  %conv1508 = zext i16 %814 to i32, !dbg !8137
  %mul1509 = mul i32 %conv1507, %conv1508, !dbg !8137
  %815 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8137
  %background_11510 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %815, i32 0, i32 70, !dbg !8137
  %green1511 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11510, i32 0, i32 2, !dbg !8137
  %816 = load i16, i16* %green1511, align 2, !dbg !8137
  %conv1512 = zext i16 %816 to i32, !dbg !8137
  %817 = load i16, i16* %a1345, align 2, !dbg !8137
  %conv1513 = zext i16 %817 to i32, !dbg !8137
  %sub1514 = sub i32 65535, %conv1513, !dbg !8137
  %mul1515 = mul i32 %conv1512, %sub1514, !dbg !8137
  %add1516 = add i32 %mul1509, %mul1515, !dbg !8137
  %add1517 = add i32 %add1516, 32768, !dbg !8137
  store i32 %add1517, i32* %temp1506, align 4, !dbg !8137
  %818 = load i32, i32* %temp1506, align 4, !dbg !8137
  %819 = load i32, i32* %temp1506, align 4, !dbg !8137
  %shr1518 = lshr i32 %819, 16, !dbg !8137
  %add1519 = add i32 %818, %shr1518, !dbg !8137
  %shr1520 = lshr i32 %add1519, 16, !dbg !8137
  %conv1521 = trunc i32 %shr1520 to i16, !dbg !8137
  store i16 %conv1521, i16* %w1454, align 2, !dbg !8137
  %820 = load i32, i32* %optimize, align 4, !dbg !8138
  %tobool1522 = icmp ne i32 %820, 0, !dbg !8138
  br i1 %tobool1522, label %if.end1533, label %if.then1523, !dbg !8140

if.then1523:                                      ; preds = %if.end1489
  %821 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !8141
  %822 = load i16, i16* %w1454, align 2, !dbg !8142
  %conv1524 = zext i16 %822 to i32, !dbg !8142
  %and1525 = and i32 %conv1524, 255, !dbg !8143
  %823 = load i32, i32* %gamma_shift, align 4, !dbg !8144
  %shr1526 = ashr i32 %and1525, %823, !dbg !8145
  %idxprom1527 = sext i32 %shr1526 to i64, !dbg !8141
  %arrayidx1528 = getelementptr inbounds i16*, i16** %821, i64 %idxprom1527, !dbg !8141
  %824 = load i16*, i16** %arrayidx1528, align 8, !dbg !8141
  %825 = load i16, i16* %w1454, align 2, !dbg !8146
  %conv1529 = zext i16 %825 to i32, !dbg !8146
  %shr1530 = ashr i32 %conv1529, 8, !dbg !8147
  %idxprom1531 = sext i32 %shr1530 to i64, !dbg !8141
  %arrayidx1532 = getelementptr inbounds i16, i16* %824, i64 %idxprom1531, !dbg !8141
  %826 = load i16, i16* %arrayidx1532, align 2, !dbg !8141
  store i16 %826, i16* %w1454, align 2, !dbg !8148
  br label %if.end1533, !dbg !8149

if.end1533:                                       ; preds = %if.then1523, %if.end1489
  %827 = load i16, i16* %w1454, align 2, !dbg !8150
  %conv1534 = zext i16 %827 to i32, !dbg !8150
  %shr1535 = ashr i32 %conv1534, 8, !dbg !8151
  %and1536 = and i32 %shr1535, 255, !dbg !8152
  %conv1537 = trunc i32 %and1536 to i8, !dbg !8153
  %828 = load i8*, i8** %sp, align 8, !dbg !8154
  %add.ptr1538 = getelementptr inbounds i8, i8* %828, i64 2, !dbg !8155
  store i8 %conv1537, i8* %add.ptr1538, align 1, !dbg !8156
  %829 = load i16, i16* %w1454, align 2, !dbg !8157
  %conv1539 = zext i16 %829 to i32, !dbg !8157
  %and1540 = and i32 %conv1539, 255, !dbg !8158
  %conv1541 = trunc i32 %and1540 to i8, !dbg !8159
  %830 = load i8*, i8** %sp, align 8, !dbg !8160
  %add.ptr1542 = getelementptr inbounds i8, i8* %830, i64 3, !dbg !8161
  store i8 %conv1541, i8* %add.ptr1542, align 1, !dbg !8162
  %831 = load i16**, i16*** %gamma_16_to_1, align 8, !dbg !8163
  %832 = load i8*, i8** %sp, align 8, !dbg !8164
  %add.ptr1543 = getelementptr inbounds i8, i8* %832, i64 5, !dbg !8165
  %833 = load i8, i8* %add.ptr1543, align 1, !dbg !8166
  %conv1544 = zext i8 %833 to i32, !dbg !8166
  %834 = load i32, i32* %gamma_shift, align 4, !dbg !8167
  %shr1545 = ashr i32 %conv1544, %834, !dbg !8168
  %idxprom1546 = sext i32 %shr1545 to i64, !dbg !8163
  %arrayidx1547 = getelementptr inbounds i16*, i16** %831, i64 %idxprom1546, !dbg !8163
  %835 = load i16*, i16** %arrayidx1547, align 8, !dbg !8163
  %836 = load i8*, i8** %sp, align 8, !dbg !8169
  %add.ptr1548 = getelementptr inbounds i8, i8* %836, i64 4, !dbg !8170
  %837 = load i8, i8* %add.ptr1548, align 1, !dbg !8171
  %idxprom1549 = zext i8 %837 to i64, !dbg !8163
  %arrayidx1550 = getelementptr inbounds i16, i16* %835, i64 %idxprom1549, !dbg !8163
  %838 = load i16, i16* %arrayidx1550, align 2, !dbg !8163
  store i16 %838, i16* %v1453, align 2, !dbg !8172
  call void @llvm.dbg.declare(metadata i32* %temp1551, metadata !8173, metadata !DIExpression()), !dbg !8175
  %839 = load i16, i16* %v1453, align 2, !dbg !8175
  %conv1552 = zext i16 %839 to i32, !dbg !8175
  %840 = load i16, i16* %a1345, align 2, !dbg !8175
  %conv1553 = zext i16 %840 to i32, !dbg !8175
  %mul1554 = mul i32 %conv1552, %conv1553, !dbg !8175
  %841 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8175
  %background_11555 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %841, i32 0, i32 70, !dbg !8175
  %blue1556 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background_11555, i32 0, i32 3, !dbg !8175
  %842 = load i16, i16* %blue1556, align 2, !dbg !8175
  %conv1557 = zext i16 %842 to i32, !dbg !8175
  %843 = load i16, i16* %a1345, align 2, !dbg !8175
  %conv1558 = zext i16 %843 to i32, !dbg !8175
  %sub1559 = sub i32 65535, %conv1558, !dbg !8175
  %mul1560 = mul i32 %conv1557, %sub1559, !dbg !8175
  %add1561 = add i32 %mul1554, %mul1560, !dbg !8175
  %add1562 = add i32 %add1561, 32768, !dbg !8175
  store i32 %add1562, i32* %temp1551, align 4, !dbg !8175
  %844 = load i32, i32* %temp1551, align 4, !dbg !8175
  %845 = load i32, i32* %temp1551, align 4, !dbg !8175
  %shr1563 = lshr i32 %845, 16, !dbg !8175
  %add1564 = add i32 %844, %shr1563, !dbg !8175
  %shr1565 = lshr i32 %add1564, 16, !dbg !8175
  %conv1566 = trunc i32 %shr1565 to i16, !dbg !8175
  store i16 %conv1566, i16* %w1454, align 2, !dbg !8175
  %846 = load i32, i32* %optimize, align 4, !dbg !8176
  %tobool1567 = icmp ne i32 %846, 0, !dbg !8176
  br i1 %tobool1567, label %if.end1578, label %if.then1568, !dbg !8178

if.then1568:                                      ; preds = %if.end1533
  %847 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !8179
  %848 = load i16, i16* %w1454, align 2, !dbg !8180
  %conv1569 = zext i16 %848 to i32, !dbg !8180
  %and1570 = and i32 %conv1569, 255, !dbg !8181
  %849 = load i32, i32* %gamma_shift, align 4, !dbg !8182
  %shr1571 = ashr i32 %and1570, %849, !dbg !8183
  %idxprom1572 = sext i32 %shr1571 to i64, !dbg !8179
  %arrayidx1573 = getelementptr inbounds i16*, i16** %847, i64 %idxprom1572, !dbg !8179
  %850 = load i16*, i16** %arrayidx1573, align 8, !dbg !8179
  %851 = load i16, i16* %w1454, align 2, !dbg !8184
  %conv1574 = zext i16 %851 to i32, !dbg !8184
  %shr1575 = ashr i32 %conv1574, 8, !dbg !8185
  %idxprom1576 = sext i32 %shr1575 to i64, !dbg !8179
  %arrayidx1577 = getelementptr inbounds i16, i16* %850, i64 %idxprom1576, !dbg !8179
  %852 = load i16, i16* %arrayidx1577, align 2, !dbg !8179
  store i16 %852, i16* %w1454, align 2, !dbg !8186
  br label %if.end1578, !dbg !8187

if.end1578:                                       ; preds = %if.then1568, %if.end1533
  %853 = load i16, i16* %w1454, align 2, !dbg !8188
  %conv1579 = zext i16 %853 to i32, !dbg !8188
  %shr1580 = ashr i32 %conv1579, 8, !dbg !8189
  %and1581 = and i32 %shr1580, 255, !dbg !8190
  %conv1582 = trunc i32 %and1581 to i8, !dbg !8191
  %854 = load i8*, i8** %sp, align 8, !dbg !8192
  %add.ptr1583 = getelementptr inbounds i8, i8* %854, i64 4, !dbg !8193
  store i8 %conv1582, i8* %add.ptr1583, align 1, !dbg !8194
  %855 = load i16, i16* %w1454, align 2, !dbg !8195
  %conv1584 = zext i16 %855 to i32, !dbg !8195
  %and1585 = and i32 %conv1584, 255, !dbg !8196
  %conv1586 = trunc i32 %and1585 to i8, !dbg !8197
  %856 = load i8*, i8** %sp, align 8, !dbg !8198
  %add.ptr1587 = getelementptr inbounds i8, i8* %856, i64 5, !dbg !8199
  store i8 %conv1586, i8* %add.ptr1587, align 1, !dbg !8200
  br label %if.end1588

if.end1588:                                       ; preds = %if.end1578, %if.then1413
  br label %if.end1589

if.end1589:                                       ; preds = %if.end1588, %if.then1358
  br label %for.inc1590, !dbg !8201

for.inc1590:                                      ; preds = %if.end1589
  %857 = load i32, i32* %i, align 4, !dbg !8202
  %inc1591 = add i32 %857, 1, !dbg !8202
  store i32 %inc1591, i32* %i, align 4, !dbg !8202
  %858 = load i8*, i8** %sp, align 8, !dbg !8203
  %add.ptr1592 = getelementptr inbounds i8, i8* %858, i64 8, !dbg !8203
  store i8* %add.ptr1592, i8** %sp, align 8, !dbg !8203
  br label %for.cond1341, !dbg !8204, !llvm.loop !8205

for.end1593:                                      ; preds = %for.cond1341
  br label %if.end1760, !dbg !8207

if.else1594:                                      ; preds = %land.lhs.true1337, %land.lhs.true1334, %if.else1331
  %859 = load i8*, i8** %row.addr, align 8, !dbg !8208
  store i8* %859, i8** %sp, align 8, !dbg !8210
  store i32 0, i32* %i, align 4, !dbg !8211
  br label %for.cond1595, !dbg !8213

for.cond1595:                                     ; preds = %for.inc1756, %if.else1594
  %860 = load i32, i32* %i, align 4, !dbg !8214
  %861 = load i32, i32* %row_width, align 4, !dbg !8216
  %cmp1596 = icmp ult i32 %860, %861, !dbg !8217
  br i1 %cmp1596, label %for.body1598, label %for.end1759, !dbg !8218

for.body1598:                                     ; preds = %for.cond1595
  call void @llvm.dbg.declare(metadata i16* %a1599, metadata !8219, metadata !DIExpression()), !dbg !8221
  %862 = load i8*, i8** %sp, align 8, !dbg !8222
  %add.ptr1600 = getelementptr inbounds i8, i8* %862, i64 6, !dbg !8223
  %863 = load i8, i8* %add.ptr1600, align 1, !dbg !8224
  %conv1601 = zext i8 %863 to i16, !dbg !8225
  %conv1602 = zext i16 %conv1601 to i32, !dbg !8225
  %shl1603 = shl i32 %conv1602, 8, !dbg !8226
  %864 = load i8*, i8** %sp, align 8, !dbg !8227
  %add.ptr1604 = getelementptr inbounds i8, i8* %864, i64 7, !dbg !8228
  %865 = load i8, i8* %add.ptr1604, align 1, !dbg !8229
  %conv1605 = zext i8 %865 to i16, !dbg !8230
  %conv1606 = zext i16 %conv1605 to i32, !dbg !8230
  %add1607 = add nsw i32 %shl1603, %conv1606, !dbg !8231
  %conv1608 = trunc i32 %add1607 to i16, !dbg !8232
  store i16 %conv1608, i16* %a1599, align 2, !dbg !8221
  %866 = load i16, i16* %a1599, align 2, !dbg !8233
  %conv1609 = zext i16 %866 to i32, !dbg !8233
  %cmp1610 = icmp eq i32 %conv1609, 0, !dbg !8235
  br i1 %cmp1610, label %if.then1612, label %if.else1651, !dbg !8236

if.then1612:                                      ; preds = %for.body1598
  %867 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8237
  %background1613 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %867, i32 0, i32 69, !dbg !8239
  %red1614 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1613, i32 0, i32 1, !dbg !8240
  %868 = load i16, i16* %red1614, align 2, !dbg !8240
  %conv1615 = zext i16 %868 to i32, !dbg !8237
  %shr1616 = ashr i32 %conv1615, 8, !dbg !8241
  %and1617 = and i32 %shr1616, 255, !dbg !8242
  %conv1618 = trunc i32 %and1617 to i8, !dbg !8243
  %869 = load i8*, i8** %sp, align 8, !dbg !8244
  store i8 %conv1618, i8* %869, align 1, !dbg !8245
  %870 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8246
  %background1619 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %870, i32 0, i32 69, !dbg !8247
  %red1620 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1619, i32 0, i32 1, !dbg !8248
  %871 = load i16, i16* %red1620, align 2, !dbg !8248
  %conv1621 = zext i16 %871 to i32, !dbg !8246
  %and1622 = and i32 %conv1621, 255, !dbg !8249
  %conv1623 = trunc i32 %and1622 to i8, !dbg !8250
  %872 = load i8*, i8** %sp, align 8, !dbg !8251
  %add.ptr1624 = getelementptr inbounds i8, i8* %872, i64 1, !dbg !8252
  store i8 %conv1623, i8* %add.ptr1624, align 1, !dbg !8253
  %873 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8254
  %background1625 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %873, i32 0, i32 69, !dbg !8255
  %green1626 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1625, i32 0, i32 2, !dbg !8256
  %874 = load i16, i16* %green1626, align 4, !dbg !8256
  %conv1627 = zext i16 %874 to i32, !dbg !8254
  %shr1628 = ashr i32 %conv1627, 8, !dbg !8257
  %and1629 = and i32 %shr1628, 255, !dbg !8258
  %conv1630 = trunc i32 %and1629 to i8, !dbg !8259
  %875 = load i8*, i8** %sp, align 8, !dbg !8260
  %add.ptr1631 = getelementptr inbounds i8, i8* %875, i64 2, !dbg !8261
  store i8 %conv1630, i8* %add.ptr1631, align 1, !dbg !8262
  %876 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8263
  %background1632 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %876, i32 0, i32 69, !dbg !8264
  %green1633 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1632, i32 0, i32 2, !dbg !8265
  %877 = load i16, i16* %green1633, align 4, !dbg !8265
  %conv1634 = zext i16 %877 to i32, !dbg !8263
  %and1635 = and i32 %conv1634, 255, !dbg !8266
  %conv1636 = trunc i32 %and1635 to i8, !dbg !8267
  %878 = load i8*, i8** %sp, align 8, !dbg !8268
  %add.ptr1637 = getelementptr inbounds i8, i8* %878, i64 3, !dbg !8269
  store i8 %conv1636, i8* %add.ptr1637, align 1, !dbg !8270
  %879 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8271
  %background1638 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %879, i32 0, i32 69, !dbg !8272
  %blue1639 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1638, i32 0, i32 3, !dbg !8273
  %880 = load i16, i16* %blue1639, align 2, !dbg !8273
  %conv1640 = zext i16 %880 to i32, !dbg !8271
  %shr1641 = ashr i32 %conv1640, 8, !dbg !8274
  %and1642 = and i32 %shr1641, 255, !dbg !8275
  %conv1643 = trunc i32 %and1642 to i8, !dbg !8276
  %881 = load i8*, i8** %sp, align 8, !dbg !8277
  %add.ptr1644 = getelementptr inbounds i8, i8* %881, i64 4, !dbg !8278
  store i8 %conv1643, i8* %add.ptr1644, align 1, !dbg !8279
  %882 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8280
  %background1645 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %882, i32 0, i32 69, !dbg !8281
  %blue1646 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1645, i32 0, i32 3, !dbg !8282
  %883 = load i16, i16* %blue1646, align 2, !dbg !8282
  %conv1647 = zext i16 %883 to i32, !dbg !8280
  %and1648 = and i32 %conv1647, 255, !dbg !8283
  %conv1649 = trunc i32 %and1648 to i8, !dbg !8284
  %884 = load i8*, i8** %sp, align 8, !dbg !8285
  %add.ptr1650 = getelementptr inbounds i8, i8* %884, i64 5, !dbg !8286
  store i8 %conv1649, i8* %add.ptr1650, align 1, !dbg !8287
  br label %if.end1755, !dbg !8288

if.else1651:                                      ; preds = %for.body1598
  %885 = load i16, i16* %a1599, align 2, !dbg !8289
  %conv1652 = zext i16 %885 to i32, !dbg !8289
  %cmp1653 = icmp slt i32 %conv1652, 65535, !dbg !8291
  br i1 %cmp1653, label %if.then1655, label %if.end1754, !dbg !8292

if.then1655:                                      ; preds = %if.else1651
  call void @llvm.dbg.declare(metadata i16* %v1656, metadata !8293, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.declare(metadata i16* %r1657, metadata !8296, metadata !DIExpression()), !dbg !8297
  %886 = load i8*, i8** %sp, align 8, !dbg !8298
  %887 = load i8, i8* %886, align 1, !dbg !8299
  %conv1658 = zext i8 %887 to i32, !dbg !8300
  %shl1659 = shl i32 %conv1658, 8, !dbg !8301
  %888 = load i8*, i8** %sp, align 8, !dbg !8302
  %add.ptr1660 = getelementptr inbounds i8, i8* %888, i64 1, !dbg !8303
  %889 = load i8, i8* %add.ptr1660, align 1, !dbg !8304
  %conv1661 = zext i8 %889 to i32, !dbg !8304
  %add1662 = add nsw i32 %shl1659, %conv1661, !dbg !8305
  %conv1663 = trunc i32 %add1662 to i16, !dbg !8306
  store i16 %conv1663, i16* %r1657, align 2, !dbg !8297
  call void @llvm.dbg.declare(metadata i16* %g1664, metadata !8307, metadata !DIExpression()), !dbg !8308
  %890 = load i8*, i8** %sp, align 8, !dbg !8309
  %add.ptr1665 = getelementptr inbounds i8, i8* %890, i64 2, !dbg !8310
  %891 = load i8, i8* %add.ptr1665, align 1, !dbg !8311
  %conv1666 = zext i8 %891 to i32, !dbg !8312
  %shl1667 = shl i32 %conv1666, 8, !dbg !8313
  %892 = load i8*, i8** %sp, align 8, !dbg !8314
  %add.ptr1668 = getelementptr inbounds i8, i8* %892, i64 3, !dbg !8315
  %893 = load i8, i8* %add.ptr1668, align 1, !dbg !8316
  %conv1669 = zext i8 %893 to i32, !dbg !8316
  %add1670 = add nsw i32 %shl1667, %conv1669, !dbg !8317
  %conv1671 = trunc i32 %add1670 to i16, !dbg !8318
  store i16 %conv1671, i16* %g1664, align 2, !dbg !8308
  call void @llvm.dbg.declare(metadata i16* %b1672, metadata !8319, metadata !DIExpression()), !dbg !8320
  %894 = load i8*, i8** %sp, align 8, !dbg !8321
  %add.ptr1673 = getelementptr inbounds i8, i8* %894, i64 4, !dbg !8322
  %895 = load i8, i8* %add.ptr1673, align 1, !dbg !8323
  %conv1674 = zext i8 %895 to i32, !dbg !8324
  %shl1675 = shl i32 %conv1674, 8, !dbg !8325
  %896 = load i8*, i8** %sp, align 8, !dbg !8326
  %add.ptr1676 = getelementptr inbounds i8, i8* %896, i64 5, !dbg !8327
  %897 = load i8, i8* %add.ptr1676, align 1, !dbg !8328
  %conv1677 = zext i8 %897 to i32, !dbg !8328
  %add1678 = add nsw i32 %shl1675, %conv1677, !dbg !8329
  %conv1679 = trunc i32 %add1678 to i16, !dbg !8330
  store i16 %conv1679, i16* %b1672, align 2, !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %temp1680, metadata !8331, metadata !DIExpression()), !dbg !8333
  %898 = load i16, i16* %r1657, align 2, !dbg !8333
  %conv1681 = zext i16 %898 to i32, !dbg !8333
  %899 = load i16, i16* %a1599, align 2, !dbg !8333
  %conv1682 = zext i16 %899 to i32, !dbg !8333
  %mul1683 = mul i32 %conv1681, %conv1682, !dbg !8333
  %900 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8333
  %background1684 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %900, i32 0, i32 69, !dbg !8333
  %red1685 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1684, i32 0, i32 1, !dbg !8333
  %901 = load i16, i16* %red1685, align 2, !dbg !8333
  %conv1686 = zext i16 %901 to i32, !dbg !8333
  %902 = load i16, i16* %a1599, align 2, !dbg !8333
  %conv1687 = zext i16 %902 to i32, !dbg !8333
  %sub1688 = sub i32 65535, %conv1687, !dbg !8333
  %mul1689 = mul i32 %conv1686, %sub1688, !dbg !8333
  %add1690 = add i32 %mul1683, %mul1689, !dbg !8333
  %add1691 = add i32 %add1690, 32768, !dbg !8333
  store i32 %add1691, i32* %temp1680, align 4, !dbg !8333
  %903 = load i32, i32* %temp1680, align 4, !dbg !8333
  %904 = load i32, i32* %temp1680, align 4, !dbg !8333
  %shr1692 = lshr i32 %904, 16, !dbg !8333
  %add1693 = add i32 %903, %shr1692, !dbg !8333
  %shr1694 = lshr i32 %add1693, 16, !dbg !8333
  %conv1695 = trunc i32 %shr1694 to i16, !dbg !8333
  store i16 %conv1695, i16* %v1656, align 2, !dbg !8333
  %905 = load i16, i16* %v1656, align 2, !dbg !8334
  %conv1696 = zext i16 %905 to i32, !dbg !8334
  %shr1697 = ashr i32 %conv1696, 8, !dbg !8335
  %and1698 = and i32 %shr1697, 255, !dbg !8336
  %conv1699 = trunc i32 %and1698 to i8, !dbg !8337
  %906 = load i8*, i8** %sp, align 8, !dbg !8338
  store i8 %conv1699, i8* %906, align 1, !dbg !8339
  %907 = load i16, i16* %v1656, align 2, !dbg !8340
  %conv1700 = zext i16 %907 to i32, !dbg !8340
  %and1701 = and i32 %conv1700, 255, !dbg !8341
  %conv1702 = trunc i32 %and1701 to i8, !dbg !8342
  %908 = load i8*, i8** %sp, align 8, !dbg !8343
  %add.ptr1703 = getelementptr inbounds i8, i8* %908, i64 1, !dbg !8344
  store i8 %conv1702, i8* %add.ptr1703, align 1, !dbg !8345
  call void @llvm.dbg.declare(metadata i32* %temp1704, metadata !8346, metadata !DIExpression()), !dbg !8348
  %909 = load i16, i16* %g1664, align 2, !dbg !8348
  %conv1705 = zext i16 %909 to i32, !dbg !8348
  %910 = load i16, i16* %a1599, align 2, !dbg !8348
  %conv1706 = zext i16 %910 to i32, !dbg !8348
  %mul1707 = mul i32 %conv1705, %conv1706, !dbg !8348
  %911 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8348
  %background1708 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %911, i32 0, i32 69, !dbg !8348
  %green1709 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1708, i32 0, i32 2, !dbg !8348
  %912 = load i16, i16* %green1709, align 4, !dbg !8348
  %conv1710 = zext i16 %912 to i32, !dbg !8348
  %913 = load i16, i16* %a1599, align 2, !dbg !8348
  %conv1711 = zext i16 %913 to i32, !dbg !8348
  %sub1712 = sub i32 65535, %conv1711, !dbg !8348
  %mul1713 = mul i32 %conv1710, %sub1712, !dbg !8348
  %add1714 = add i32 %mul1707, %mul1713, !dbg !8348
  %add1715 = add i32 %add1714, 32768, !dbg !8348
  store i32 %add1715, i32* %temp1704, align 4, !dbg !8348
  %914 = load i32, i32* %temp1704, align 4, !dbg !8348
  %915 = load i32, i32* %temp1704, align 4, !dbg !8348
  %shr1716 = lshr i32 %915, 16, !dbg !8348
  %add1717 = add i32 %914, %shr1716, !dbg !8348
  %shr1718 = lshr i32 %add1717, 16, !dbg !8348
  %conv1719 = trunc i32 %shr1718 to i16, !dbg !8348
  store i16 %conv1719, i16* %v1656, align 2, !dbg !8348
  %916 = load i16, i16* %v1656, align 2, !dbg !8349
  %conv1720 = zext i16 %916 to i32, !dbg !8349
  %shr1721 = ashr i32 %conv1720, 8, !dbg !8350
  %and1722 = and i32 %shr1721, 255, !dbg !8351
  %conv1723 = trunc i32 %and1722 to i8, !dbg !8352
  %917 = load i8*, i8** %sp, align 8, !dbg !8353
  %add.ptr1724 = getelementptr inbounds i8, i8* %917, i64 2, !dbg !8354
  store i8 %conv1723, i8* %add.ptr1724, align 1, !dbg !8355
  %918 = load i16, i16* %v1656, align 2, !dbg !8356
  %conv1725 = zext i16 %918 to i32, !dbg !8356
  %and1726 = and i32 %conv1725, 255, !dbg !8357
  %conv1727 = trunc i32 %and1726 to i8, !dbg !8358
  %919 = load i8*, i8** %sp, align 8, !dbg !8359
  %add.ptr1728 = getelementptr inbounds i8, i8* %919, i64 3, !dbg !8360
  store i8 %conv1727, i8* %add.ptr1728, align 1, !dbg !8361
  call void @llvm.dbg.declare(metadata i32* %temp1729, metadata !8362, metadata !DIExpression()), !dbg !8364
  %920 = load i16, i16* %b1672, align 2, !dbg !8364
  %conv1730 = zext i16 %920 to i32, !dbg !8364
  %921 = load i16, i16* %a1599, align 2, !dbg !8364
  %conv1731 = zext i16 %921 to i32, !dbg !8364
  %mul1732 = mul i32 %conv1730, %conv1731, !dbg !8364
  %922 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8364
  %background1733 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %922, i32 0, i32 69, !dbg !8364
  %blue1734 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background1733, i32 0, i32 3, !dbg !8364
  %923 = load i16, i16* %blue1734, align 2, !dbg !8364
  %conv1735 = zext i16 %923 to i32, !dbg !8364
  %924 = load i16, i16* %a1599, align 2, !dbg !8364
  %conv1736 = zext i16 %924 to i32, !dbg !8364
  %sub1737 = sub i32 65535, %conv1736, !dbg !8364
  %mul1738 = mul i32 %conv1735, %sub1737, !dbg !8364
  %add1739 = add i32 %mul1732, %mul1738, !dbg !8364
  %add1740 = add i32 %add1739, 32768, !dbg !8364
  store i32 %add1740, i32* %temp1729, align 4, !dbg !8364
  %925 = load i32, i32* %temp1729, align 4, !dbg !8364
  %926 = load i32, i32* %temp1729, align 4, !dbg !8364
  %shr1741 = lshr i32 %926, 16, !dbg !8364
  %add1742 = add i32 %925, %shr1741, !dbg !8364
  %shr1743 = lshr i32 %add1742, 16, !dbg !8364
  %conv1744 = trunc i32 %shr1743 to i16, !dbg !8364
  store i16 %conv1744, i16* %v1656, align 2, !dbg !8364
  %927 = load i16, i16* %v1656, align 2, !dbg !8365
  %conv1745 = zext i16 %927 to i32, !dbg !8365
  %shr1746 = ashr i32 %conv1745, 8, !dbg !8366
  %and1747 = and i32 %shr1746, 255, !dbg !8367
  %conv1748 = trunc i32 %and1747 to i8, !dbg !8368
  %928 = load i8*, i8** %sp, align 8, !dbg !8369
  %add.ptr1749 = getelementptr inbounds i8, i8* %928, i64 4, !dbg !8370
  store i8 %conv1748, i8* %add.ptr1749, align 1, !dbg !8371
  %929 = load i16, i16* %v1656, align 2, !dbg !8372
  %conv1750 = zext i16 %929 to i32, !dbg !8372
  %and1751 = and i32 %conv1750, 255, !dbg !8373
  %conv1752 = trunc i32 %and1751 to i8, !dbg !8374
  %930 = load i8*, i8** %sp, align 8, !dbg !8375
  %add.ptr1753 = getelementptr inbounds i8, i8* %930, i64 5, !dbg !8376
  store i8 %conv1752, i8* %add.ptr1753, align 1, !dbg !8377
  br label %if.end1754, !dbg !8378

if.end1754:                                       ; preds = %if.then1655, %if.else1651
  br label %if.end1755

if.end1755:                                       ; preds = %if.end1754, %if.then1612
  br label %for.inc1756, !dbg !8379

for.inc1756:                                      ; preds = %if.end1755
  %931 = load i32, i32* %i, align 4, !dbg !8380
  %inc1757 = add i32 %931, 1, !dbg !8380
  store i32 %inc1757, i32* %i, align 4, !dbg !8380
  %932 = load i8*, i8** %sp, align 8, !dbg !8381
  %add.ptr1758 = getelementptr inbounds i8, i8* %932, i64 8, !dbg !8381
  store i8* %add.ptr1758, i8** %sp, align 8, !dbg !8381
  br label %for.cond1595, !dbg !8382, !llvm.loop !8383

for.end1759:                                      ; preds = %for.cond1595
  br label %if.end1760

if.end1760:                                       ; preds = %for.end1759, %for.end1593
  br label %if.end1761

if.end1761:                                       ; preds = %if.end1760, %if.end1330
  br label %sw.epilog1763, !dbg !8385

sw.default1762:                                   ; preds = %entry
  br label %sw.epilog1763, !dbg !8386

sw.epilog1763:                                    ; preds = %sw.default1762, %if.end1761, %if.end1063, %if.end757, %sw.epilog
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_gamma(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_struct_def* %png_ptr) #0 !dbg !8388 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %gamma_table = alloca i8*, align 8
  %gamma_16_table = alloca i16**, align 8
  %gamma_shift = alloca i32, align 4
  %sp = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %v = alloca i16, align 2
  %v108 = alloca i16, align 2
  %v182 = alloca i16, align 2
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %msb = alloca i32, align 4
  %lsb = alloca i32, align 4
  %v326 = alloca i16, align 2
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata i8** %gamma_table, metadata !8395, metadata !DIExpression()), !dbg !8396
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8397
  %gamma_table1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 77, !dbg !8398
  %1 = load i8*, i8** %gamma_table1, align 8, !dbg !8398
  store i8* %1, i8** %gamma_table, align 8, !dbg !8396
  call void @llvm.dbg.declare(metadata i16*** %gamma_16_table, metadata !8399, metadata !DIExpression()), !dbg !8400
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8401
  %gamma_16_table2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 78, !dbg !8402
  %3 = load i16**, i16*** %gamma_16_table2, align 8, !dbg !8402
  store i16** %3, i16*** %gamma_16_table, align 8, !dbg !8400
  call void @llvm.dbg.declare(metadata i32* %gamma_shift, metadata !8403, metadata !DIExpression()), !dbg !8404
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !8405
  %gamma_shift3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 74, !dbg !8406
  %5 = load i32, i32* %gamma_shift3, align 8, !dbg !8406
  store i32 %5, i32* %gamma_shift, align 4, !dbg !8404
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !8411, metadata !DIExpression()), !dbg !8412
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8413
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 0, !dbg !8414
  %7 = load i32, i32* %width, align 8, !dbg !8414
  store i32 %7, i32* %row_width, align 4, !dbg !8412
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8415
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 3, !dbg !8417
  %9 = load i8, i8* %bit_depth, align 1, !dbg !8417
  %conv = zext i8 %9 to i32, !dbg !8415
  %cmp = icmp sle i32 %conv, 8, !dbg !8418
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8419

land.lhs.true:                                    ; preds = %entry
  %10 = load i8*, i8** %gamma_table, align 8, !dbg !8420
  %cmp5 = icmp ne i8* %10, null, !dbg !8421
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !8422

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %11 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8423
  %bit_depth7 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %11, i32 0, i32 3, !dbg !8424
  %12 = load i8, i8* %bit_depth7, align 1, !dbg !8424
  %conv8 = zext i8 %12 to i32, !dbg !8423
  %cmp9 = icmp eq i32 %conv8, 16, !dbg !8425
  br i1 %cmp9, label %land.lhs.true11, label %if.end349, !dbg !8426

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %13 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8427
  %cmp12 = icmp ne i16** %13, null, !dbg !8428
  br i1 %cmp12, label %if.then, label %if.end349, !dbg !8429

if.then:                                          ; preds = %land.lhs.true11, %land.lhs.true
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8430
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 2, !dbg !8432
  %15 = load i8, i8* %color_type, align 8, !dbg !8432
  %conv14 = zext i8 %15 to i32, !dbg !8430
  switch i32 %conv14, label %sw.default [
    i32 2, label %sw.bb
    i32 6, label %sw.bb80
    i32 4, label %sw.bb161
    i32 0, label %sw.bb203
  ], !dbg !8433

sw.bb:                                            ; preds = %if.then
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8434
  %bit_depth15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 3, !dbg !8438
  %17 = load i8, i8* %bit_depth15, align 1, !dbg !8438
  %conv16 = zext i8 %17 to i32, !dbg !8434
  %cmp17 = icmp eq i32 %conv16, 8, !dbg !8439
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !8440

if.then19:                                        ; preds = %sw.bb
  %18 = load i8*, i8** %row.addr, align 8, !dbg !8441
  store i8* %18, i8** %sp, align 8, !dbg !8443
  store i32 0, i32* %i, align 4, !dbg !8444
  br label %for.cond, !dbg !8446

for.cond:                                         ; preds = %for.inc, %if.then19
  %19 = load i32, i32* %i, align 4, !dbg !8447
  %20 = load i32, i32* %row_width, align 4, !dbg !8449
  %cmp20 = icmp ult i32 %19, %20, !dbg !8450
  br i1 %cmp20, label %for.body, label %for.end, !dbg !8451

for.body:                                         ; preds = %for.cond
  %21 = load i8*, i8** %gamma_table, align 8, !dbg !8452
  %22 = load i8*, i8** %sp, align 8, !dbg !8454
  %23 = load i8, i8* %22, align 1, !dbg !8455
  %idxprom = zext i8 %23 to i64, !dbg !8452
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !8452
  %24 = load i8, i8* %arrayidx, align 1, !dbg !8452
  %25 = load i8*, i8** %sp, align 8, !dbg !8456
  store i8 %24, i8* %25, align 1, !dbg !8457
  %26 = load i8*, i8** %sp, align 8, !dbg !8458
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1, !dbg !8458
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !8458
  %27 = load i8*, i8** %gamma_table, align 8, !dbg !8459
  %28 = load i8*, i8** %sp, align 8, !dbg !8460
  %29 = load i8, i8* %28, align 1, !dbg !8461
  %idxprom22 = zext i8 %29 to i64, !dbg !8459
  %arrayidx23 = getelementptr inbounds i8, i8* %27, i64 %idxprom22, !dbg !8459
  %30 = load i8, i8* %arrayidx23, align 1, !dbg !8459
  %31 = load i8*, i8** %sp, align 8, !dbg !8462
  store i8 %30, i8* %31, align 1, !dbg !8463
  %32 = load i8*, i8** %sp, align 8, !dbg !8464
  %incdec.ptr24 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8464
  store i8* %incdec.ptr24, i8** %sp, align 8, !dbg !8464
  %33 = load i8*, i8** %gamma_table, align 8, !dbg !8465
  %34 = load i8*, i8** %sp, align 8, !dbg !8466
  %35 = load i8, i8* %34, align 1, !dbg !8467
  %idxprom25 = zext i8 %35 to i64, !dbg !8465
  %arrayidx26 = getelementptr inbounds i8, i8* %33, i64 %idxprom25, !dbg !8465
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !8465
  %37 = load i8*, i8** %sp, align 8, !dbg !8468
  store i8 %36, i8* %37, align 1, !dbg !8469
  %38 = load i8*, i8** %sp, align 8, !dbg !8470
  %incdec.ptr27 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !8470
  store i8* %incdec.ptr27, i8** %sp, align 8, !dbg !8470
  br label %for.inc, !dbg !8471

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !8472
  %inc = add i32 %39, 1, !dbg !8472
  store i32 %inc, i32* %i, align 4, !dbg !8472
  br label %for.cond, !dbg !8473, !llvm.loop !8474

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !8476

if.else:                                          ; preds = %sw.bb
  %40 = load i8*, i8** %row.addr, align 8, !dbg !8477
  store i8* %40, i8** %sp, align 8, !dbg !8479
  store i32 0, i32* %i, align 4, !dbg !8480
  br label %for.cond28, !dbg !8482

for.cond28:                                       ; preds = %for.inc77, %if.else
  %41 = load i32, i32* %i, align 4, !dbg !8483
  %42 = load i32, i32* %row_width, align 4, !dbg !8485
  %cmp29 = icmp ult i32 %41, %42, !dbg !8486
  br i1 %cmp29, label %for.body31, label %for.end79, !dbg !8487

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i16* %v, metadata !8488, metadata !DIExpression()), !dbg !8490
  %43 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8491
  %44 = load i8*, i8** %sp, align 8, !dbg !8492
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 1, !dbg !8493
  %45 = load i8, i8* %add.ptr, align 1, !dbg !8494
  %conv32 = zext i8 %45 to i32, !dbg !8494
  %46 = load i32, i32* %gamma_shift, align 4, !dbg !8495
  %shr = ashr i32 %conv32, %46, !dbg !8496
  %idxprom33 = sext i32 %shr to i64, !dbg !8491
  %arrayidx34 = getelementptr inbounds i16*, i16** %43, i64 %idxprom33, !dbg !8491
  %47 = load i16*, i16** %arrayidx34, align 8, !dbg !8491
  %48 = load i8*, i8** %sp, align 8, !dbg !8497
  %49 = load i8, i8* %48, align 1, !dbg !8498
  %idxprom35 = zext i8 %49 to i64, !dbg !8491
  %arrayidx36 = getelementptr inbounds i16, i16* %47, i64 %idxprom35, !dbg !8491
  %50 = load i16, i16* %arrayidx36, align 2, !dbg !8491
  store i16 %50, i16* %v, align 2, !dbg !8499
  %51 = load i16, i16* %v, align 2, !dbg !8500
  %conv37 = zext i16 %51 to i32, !dbg !8500
  %shr38 = ashr i32 %conv37, 8, !dbg !8501
  %and = and i32 %shr38, 255, !dbg !8502
  %conv39 = trunc i32 %and to i8, !dbg !8503
  %52 = load i8*, i8** %sp, align 8, !dbg !8504
  store i8 %conv39, i8* %52, align 1, !dbg !8505
  %53 = load i16, i16* %v, align 2, !dbg !8506
  %conv40 = zext i16 %53 to i32, !dbg !8506
  %and41 = and i32 %conv40, 255, !dbg !8507
  %conv42 = trunc i32 %and41 to i8, !dbg !8508
  %54 = load i8*, i8** %sp, align 8, !dbg !8509
  %add.ptr43 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !8510
  store i8 %conv42, i8* %add.ptr43, align 1, !dbg !8511
  %55 = load i8*, i8** %sp, align 8, !dbg !8512
  %add.ptr44 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !8512
  store i8* %add.ptr44, i8** %sp, align 8, !dbg !8512
  %56 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8513
  %57 = load i8*, i8** %sp, align 8, !dbg !8514
  %add.ptr45 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !8515
  %58 = load i8, i8* %add.ptr45, align 1, !dbg !8516
  %conv46 = zext i8 %58 to i32, !dbg !8516
  %59 = load i32, i32* %gamma_shift, align 4, !dbg !8517
  %shr47 = ashr i32 %conv46, %59, !dbg !8518
  %idxprom48 = sext i32 %shr47 to i64, !dbg !8513
  %arrayidx49 = getelementptr inbounds i16*, i16** %56, i64 %idxprom48, !dbg !8513
  %60 = load i16*, i16** %arrayidx49, align 8, !dbg !8513
  %61 = load i8*, i8** %sp, align 8, !dbg !8519
  %62 = load i8, i8* %61, align 1, !dbg !8520
  %idxprom50 = zext i8 %62 to i64, !dbg !8513
  %arrayidx51 = getelementptr inbounds i16, i16* %60, i64 %idxprom50, !dbg !8513
  %63 = load i16, i16* %arrayidx51, align 2, !dbg !8513
  store i16 %63, i16* %v, align 2, !dbg !8521
  %64 = load i16, i16* %v, align 2, !dbg !8522
  %conv52 = zext i16 %64 to i32, !dbg !8522
  %shr53 = ashr i32 %conv52, 8, !dbg !8523
  %and54 = and i32 %shr53, 255, !dbg !8524
  %conv55 = trunc i32 %and54 to i8, !dbg !8525
  %65 = load i8*, i8** %sp, align 8, !dbg !8526
  store i8 %conv55, i8* %65, align 1, !dbg !8527
  %66 = load i16, i16* %v, align 2, !dbg !8528
  %conv56 = zext i16 %66 to i32, !dbg !8528
  %and57 = and i32 %conv56, 255, !dbg !8529
  %conv58 = trunc i32 %and57 to i8, !dbg !8530
  %67 = load i8*, i8** %sp, align 8, !dbg !8531
  %add.ptr59 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !8532
  store i8 %conv58, i8* %add.ptr59, align 1, !dbg !8533
  %68 = load i8*, i8** %sp, align 8, !dbg !8534
  %add.ptr60 = getelementptr inbounds i8, i8* %68, i64 2, !dbg !8534
  store i8* %add.ptr60, i8** %sp, align 8, !dbg !8534
  %69 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8535
  %70 = load i8*, i8** %sp, align 8, !dbg !8536
  %add.ptr61 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !8537
  %71 = load i8, i8* %add.ptr61, align 1, !dbg !8538
  %conv62 = zext i8 %71 to i32, !dbg !8538
  %72 = load i32, i32* %gamma_shift, align 4, !dbg !8539
  %shr63 = ashr i32 %conv62, %72, !dbg !8540
  %idxprom64 = sext i32 %shr63 to i64, !dbg !8535
  %arrayidx65 = getelementptr inbounds i16*, i16** %69, i64 %idxprom64, !dbg !8535
  %73 = load i16*, i16** %arrayidx65, align 8, !dbg !8535
  %74 = load i8*, i8** %sp, align 8, !dbg !8541
  %75 = load i8, i8* %74, align 1, !dbg !8542
  %idxprom66 = zext i8 %75 to i64, !dbg !8535
  %arrayidx67 = getelementptr inbounds i16, i16* %73, i64 %idxprom66, !dbg !8535
  %76 = load i16, i16* %arrayidx67, align 2, !dbg !8535
  store i16 %76, i16* %v, align 2, !dbg !8543
  %77 = load i16, i16* %v, align 2, !dbg !8544
  %conv68 = zext i16 %77 to i32, !dbg !8544
  %shr69 = ashr i32 %conv68, 8, !dbg !8545
  %and70 = and i32 %shr69, 255, !dbg !8546
  %conv71 = trunc i32 %and70 to i8, !dbg !8547
  %78 = load i8*, i8** %sp, align 8, !dbg !8548
  store i8 %conv71, i8* %78, align 1, !dbg !8549
  %79 = load i16, i16* %v, align 2, !dbg !8550
  %conv72 = zext i16 %79 to i32, !dbg !8550
  %and73 = and i32 %conv72, 255, !dbg !8551
  %conv74 = trunc i32 %and73 to i8, !dbg !8552
  %80 = load i8*, i8** %sp, align 8, !dbg !8553
  %add.ptr75 = getelementptr inbounds i8, i8* %80, i64 1, !dbg !8554
  store i8 %conv74, i8* %add.ptr75, align 1, !dbg !8555
  %81 = load i8*, i8** %sp, align 8, !dbg !8556
  %add.ptr76 = getelementptr inbounds i8, i8* %81, i64 2, !dbg !8556
  store i8* %add.ptr76, i8** %sp, align 8, !dbg !8556
  br label %for.inc77, !dbg !8557

for.inc77:                                        ; preds = %for.body31
  %82 = load i32, i32* %i, align 4, !dbg !8558
  %inc78 = add i32 %82, 1, !dbg !8558
  store i32 %inc78, i32* %i, align 4, !dbg !8558
  br label %for.cond28, !dbg !8559, !llvm.loop !8560

for.end79:                                        ; preds = %for.cond28
  br label %if.end

if.end:                                           ; preds = %for.end79, %for.end
  br label %sw.epilog, !dbg !8562

sw.bb80:                                          ; preds = %if.then
  %83 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8563
  %bit_depth81 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %83, i32 0, i32 3, !dbg !8566
  %84 = load i8, i8* %bit_depth81, align 1, !dbg !8566
  %conv82 = zext i8 %84 to i32, !dbg !8563
  %cmp83 = icmp eq i32 %conv82, 8, !dbg !8567
  br i1 %cmp83, label %if.then85, label %if.else103, !dbg !8568

if.then85:                                        ; preds = %sw.bb80
  %85 = load i8*, i8** %row.addr, align 8, !dbg !8569
  store i8* %85, i8** %sp, align 8, !dbg !8571
  store i32 0, i32* %i, align 4, !dbg !8572
  br label %for.cond86, !dbg !8574

for.cond86:                                       ; preds = %for.inc100, %if.then85
  %86 = load i32, i32* %i, align 4, !dbg !8575
  %87 = load i32, i32* %row_width, align 4, !dbg !8577
  %cmp87 = icmp ult i32 %86, %87, !dbg !8578
  br i1 %cmp87, label %for.body89, label %for.end102, !dbg !8579

for.body89:                                       ; preds = %for.cond86
  %88 = load i8*, i8** %gamma_table, align 8, !dbg !8580
  %89 = load i8*, i8** %sp, align 8, !dbg !8582
  %90 = load i8, i8* %89, align 1, !dbg !8583
  %idxprom90 = zext i8 %90 to i64, !dbg !8580
  %arrayidx91 = getelementptr inbounds i8, i8* %88, i64 %idxprom90, !dbg !8580
  %91 = load i8, i8* %arrayidx91, align 1, !dbg !8580
  %92 = load i8*, i8** %sp, align 8, !dbg !8584
  store i8 %91, i8* %92, align 1, !dbg !8585
  %93 = load i8*, i8** %sp, align 8, !dbg !8586
  %incdec.ptr92 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !8586
  store i8* %incdec.ptr92, i8** %sp, align 8, !dbg !8586
  %94 = load i8*, i8** %gamma_table, align 8, !dbg !8587
  %95 = load i8*, i8** %sp, align 8, !dbg !8588
  %96 = load i8, i8* %95, align 1, !dbg !8589
  %idxprom93 = zext i8 %96 to i64, !dbg !8587
  %arrayidx94 = getelementptr inbounds i8, i8* %94, i64 %idxprom93, !dbg !8587
  %97 = load i8, i8* %arrayidx94, align 1, !dbg !8587
  %98 = load i8*, i8** %sp, align 8, !dbg !8590
  store i8 %97, i8* %98, align 1, !dbg !8591
  %99 = load i8*, i8** %sp, align 8, !dbg !8592
  %incdec.ptr95 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !8592
  store i8* %incdec.ptr95, i8** %sp, align 8, !dbg !8592
  %100 = load i8*, i8** %gamma_table, align 8, !dbg !8593
  %101 = load i8*, i8** %sp, align 8, !dbg !8594
  %102 = load i8, i8* %101, align 1, !dbg !8595
  %idxprom96 = zext i8 %102 to i64, !dbg !8593
  %arrayidx97 = getelementptr inbounds i8, i8* %100, i64 %idxprom96, !dbg !8593
  %103 = load i8, i8* %arrayidx97, align 1, !dbg !8593
  %104 = load i8*, i8** %sp, align 8, !dbg !8596
  store i8 %103, i8* %104, align 1, !dbg !8597
  %105 = load i8*, i8** %sp, align 8, !dbg !8598
  %incdec.ptr98 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !8598
  store i8* %incdec.ptr98, i8** %sp, align 8, !dbg !8598
  %106 = load i8*, i8** %sp, align 8, !dbg !8599
  %incdec.ptr99 = getelementptr inbounds i8, i8* %106, i32 1, !dbg !8599
  store i8* %incdec.ptr99, i8** %sp, align 8, !dbg !8599
  br label %for.inc100, !dbg !8600

for.inc100:                                       ; preds = %for.body89
  %107 = load i32, i32* %i, align 4, !dbg !8601
  %inc101 = add i32 %107, 1, !dbg !8601
  store i32 %inc101, i32* %i, align 4, !dbg !8601
  br label %for.cond86, !dbg !8602, !llvm.loop !8603

for.end102:                                       ; preds = %for.cond86
  br label %if.end160, !dbg !8605

if.else103:                                       ; preds = %sw.bb80
  %108 = load i8*, i8** %row.addr, align 8, !dbg !8606
  store i8* %108, i8** %sp, align 8, !dbg !8608
  store i32 0, i32* %i, align 4, !dbg !8609
  br label %for.cond104, !dbg !8611

for.cond104:                                      ; preds = %for.inc157, %if.else103
  %109 = load i32, i32* %i, align 4, !dbg !8612
  %110 = load i32, i32* %row_width, align 4, !dbg !8614
  %cmp105 = icmp ult i32 %109, %110, !dbg !8615
  br i1 %cmp105, label %for.body107, label %for.end159, !dbg !8616

for.body107:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata i16* %v108, metadata !8617, metadata !DIExpression()), !dbg !8619
  %111 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8620
  %112 = load i8*, i8** %sp, align 8, !dbg !8621
  %add.ptr109 = getelementptr inbounds i8, i8* %112, i64 1, !dbg !8622
  %113 = load i8, i8* %add.ptr109, align 1, !dbg !8623
  %conv110 = zext i8 %113 to i32, !dbg !8623
  %114 = load i32, i32* %gamma_shift, align 4, !dbg !8624
  %shr111 = ashr i32 %conv110, %114, !dbg !8625
  %idxprom112 = sext i32 %shr111 to i64, !dbg !8620
  %arrayidx113 = getelementptr inbounds i16*, i16** %111, i64 %idxprom112, !dbg !8620
  %115 = load i16*, i16** %arrayidx113, align 8, !dbg !8620
  %116 = load i8*, i8** %sp, align 8, !dbg !8626
  %117 = load i8, i8* %116, align 1, !dbg !8627
  %idxprom114 = zext i8 %117 to i64, !dbg !8620
  %arrayidx115 = getelementptr inbounds i16, i16* %115, i64 %idxprom114, !dbg !8620
  %118 = load i16, i16* %arrayidx115, align 2, !dbg !8620
  store i16 %118, i16* %v108, align 2, !dbg !8619
  %119 = load i16, i16* %v108, align 2, !dbg !8628
  %conv116 = zext i16 %119 to i32, !dbg !8628
  %shr117 = ashr i32 %conv116, 8, !dbg !8629
  %and118 = and i32 %shr117, 255, !dbg !8630
  %conv119 = trunc i32 %and118 to i8, !dbg !8631
  %120 = load i8*, i8** %sp, align 8, !dbg !8632
  store i8 %conv119, i8* %120, align 1, !dbg !8633
  %121 = load i16, i16* %v108, align 2, !dbg !8634
  %conv120 = zext i16 %121 to i32, !dbg !8634
  %and121 = and i32 %conv120, 255, !dbg !8635
  %conv122 = trunc i32 %and121 to i8, !dbg !8636
  %122 = load i8*, i8** %sp, align 8, !dbg !8637
  %add.ptr123 = getelementptr inbounds i8, i8* %122, i64 1, !dbg !8638
  store i8 %conv122, i8* %add.ptr123, align 1, !dbg !8639
  %123 = load i8*, i8** %sp, align 8, !dbg !8640
  %add.ptr124 = getelementptr inbounds i8, i8* %123, i64 2, !dbg !8640
  store i8* %add.ptr124, i8** %sp, align 8, !dbg !8640
  %124 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8641
  %125 = load i8*, i8** %sp, align 8, !dbg !8642
  %add.ptr125 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !8643
  %126 = load i8, i8* %add.ptr125, align 1, !dbg !8644
  %conv126 = zext i8 %126 to i32, !dbg !8644
  %127 = load i32, i32* %gamma_shift, align 4, !dbg !8645
  %shr127 = ashr i32 %conv126, %127, !dbg !8646
  %idxprom128 = sext i32 %shr127 to i64, !dbg !8641
  %arrayidx129 = getelementptr inbounds i16*, i16** %124, i64 %idxprom128, !dbg !8641
  %128 = load i16*, i16** %arrayidx129, align 8, !dbg !8641
  %129 = load i8*, i8** %sp, align 8, !dbg !8647
  %130 = load i8, i8* %129, align 1, !dbg !8648
  %idxprom130 = zext i8 %130 to i64, !dbg !8641
  %arrayidx131 = getelementptr inbounds i16, i16* %128, i64 %idxprom130, !dbg !8641
  %131 = load i16, i16* %arrayidx131, align 2, !dbg !8641
  store i16 %131, i16* %v108, align 2, !dbg !8649
  %132 = load i16, i16* %v108, align 2, !dbg !8650
  %conv132 = zext i16 %132 to i32, !dbg !8650
  %shr133 = ashr i32 %conv132, 8, !dbg !8651
  %and134 = and i32 %shr133, 255, !dbg !8652
  %conv135 = trunc i32 %and134 to i8, !dbg !8653
  %133 = load i8*, i8** %sp, align 8, !dbg !8654
  store i8 %conv135, i8* %133, align 1, !dbg !8655
  %134 = load i16, i16* %v108, align 2, !dbg !8656
  %conv136 = zext i16 %134 to i32, !dbg !8656
  %and137 = and i32 %conv136, 255, !dbg !8657
  %conv138 = trunc i32 %and137 to i8, !dbg !8658
  %135 = load i8*, i8** %sp, align 8, !dbg !8659
  %add.ptr139 = getelementptr inbounds i8, i8* %135, i64 1, !dbg !8660
  store i8 %conv138, i8* %add.ptr139, align 1, !dbg !8661
  %136 = load i8*, i8** %sp, align 8, !dbg !8662
  %add.ptr140 = getelementptr inbounds i8, i8* %136, i64 2, !dbg !8662
  store i8* %add.ptr140, i8** %sp, align 8, !dbg !8662
  %137 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8663
  %138 = load i8*, i8** %sp, align 8, !dbg !8664
  %add.ptr141 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !8665
  %139 = load i8, i8* %add.ptr141, align 1, !dbg !8666
  %conv142 = zext i8 %139 to i32, !dbg !8666
  %140 = load i32, i32* %gamma_shift, align 4, !dbg !8667
  %shr143 = ashr i32 %conv142, %140, !dbg !8668
  %idxprom144 = sext i32 %shr143 to i64, !dbg !8663
  %arrayidx145 = getelementptr inbounds i16*, i16** %137, i64 %idxprom144, !dbg !8663
  %141 = load i16*, i16** %arrayidx145, align 8, !dbg !8663
  %142 = load i8*, i8** %sp, align 8, !dbg !8669
  %143 = load i8, i8* %142, align 1, !dbg !8670
  %idxprom146 = zext i8 %143 to i64, !dbg !8663
  %arrayidx147 = getelementptr inbounds i16, i16* %141, i64 %idxprom146, !dbg !8663
  %144 = load i16, i16* %arrayidx147, align 2, !dbg !8663
  store i16 %144, i16* %v108, align 2, !dbg !8671
  %145 = load i16, i16* %v108, align 2, !dbg !8672
  %conv148 = zext i16 %145 to i32, !dbg !8672
  %shr149 = ashr i32 %conv148, 8, !dbg !8673
  %and150 = and i32 %shr149, 255, !dbg !8674
  %conv151 = trunc i32 %and150 to i8, !dbg !8675
  %146 = load i8*, i8** %sp, align 8, !dbg !8676
  store i8 %conv151, i8* %146, align 1, !dbg !8677
  %147 = load i16, i16* %v108, align 2, !dbg !8678
  %conv152 = zext i16 %147 to i32, !dbg !8678
  %and153 = and i32 %conv152, 255, !dbg !8679
  %conv154 = trunc i32 %and153 to i8, !dbg !8680
  %148 = load i8*, i8** %sp, align 8, !dbg !8681
  %add.ptr155 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !8682
  store i8 %conv154, i8* %add.ptr155, align 1, !dbg !8683
  %149 = load i8*, i8** %sp, align 8, !dbg !8684
  %add.ptr156 = getelementptr inbounds i8, i8* %149, i64 4, !dbg !8684
  store i8* %add.ptr156, i8** %sp, align 8, !dbg !8684
  br label %for.inc157, !dbg !8685

for.inc157:                                       ; preds = %for.body107
  %150 = load i32, i32* %i, align 4, !dbg !8686
  %inc158 = add i32 %150, 1, !dbg !8686
  store i32 %inc158, i32* %i, align 4, !dbg !8686
  br label %for.cond104, !dbg !8687, !llvm.loop !8688

for.end159:                                       ; preds = %for.cond104
  br label %if.end160

if.end160:                                        ; preds = %for.end159, %for.end102
  br label %sw.epilog, !dbg !8690

sw.bb161:                                         ; preds = %if.then
  %151 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8691
  %bit_depth162 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %151, i32 0, i32 3, !dbg !8694
  %152 = load i8, i8* %bit_depth162, align 1, !dbg !8694
  %conv163 = zext i8 %152 to i32, !dbg !8691
  %cmp164 = icmp eq i32 %conv163, 8, !dbg !8695
  br i1 %cmp164, label %if.then166, label %if.else177, !dbg !8696

if.then166:                                       ; preds = %sw.bb161
  %153 = load i8*, i8** %row.addr, align 8, !dbg !8697
  store i8* %153, i8** %sp, align 8, !dbg !8699
  store i32 0, i32* %i, align 4, !dbg !8700
  br label %for.cond167, !dbg !8702

for.cond167:                                      ; preds = %for.inc174, %if.then166
  %154 = load i32, i32* %i, align 4, !dbg !8703
  %155 = load i32, i32* %row_width, align 4, !dbg !8705
  %cmp168 = icmp ult i32 %154, %155, !dbg !8706
  br i1 %cmp168, label %for.body170, label %for.end176, !dbg !8707

for.body170:                                      ; preds = %for.cond167
  %156 = load i8*, i8** %gamma_table, align 8, !dbg !8708
  %157 = load i8*, i8** %sp, align 8, !dbg !8710
  %158 = load i8, i8* %157, align 1, !dbg !8711
  %idxprom171 = zext i8 %158 to i64, !dbg !8708
  %arrayidx172 = getelementptr inbounds i8, i8* %156, i64 %idxprom171, !dbg !8708
  %159 = load i8, i8* %arrayidx172, align 1, !dbg !8708
  %160 = load i8*, i8** %sp, align 8, !dbg !8712
  store i8 %159, i8* %160, align 1, !dbg !8713
  %161 = load i8*, i8** %sp, align 8, !dbg !8714
  %add.ptr173 = getelementptr inbounds i8, i8* %161, i64 2, !dbg !8714
  store i8* %add.ptr173, i8** %sp, align 8, !dbg !8714
  br label %for.inc174, !dbg !8715

for.inc174:                                       ; preds = %for.body170
  %162 = load i32, i32* %i, align 4, !dbg !8716
  %inc175 = add i32 %162, 1, !dbg !8716
  store i32 %inc175, i32* %i, align 4, !dbg !8716
  br label %for.cond167, !dbg !8717, !llvm.loop !8718

for.end176:                                       ; preds = %for.cond167
  br label %if.end202, !dbg !8720

if.else177:                                       ; preds = %sw.bb161
  %163 = load i8*, i8** %row.addr, align 8, !dbg !8721
  store i8* %163, i8** %sp, align 8, !dbg !8723
  store i32 0, i32* %i, align 4, !dbg !8724
  br label %for.cond178, !dbg !8726

for.cond178:                                      ; preds = %for.inc199, %if.else177
  %164 = load i32, i32* %i, align 4, !dbg !8727
  %165 = load i32, i32* %row_width, align 4, !dbg !8729
  %cmp179 = icmp ult i32 %164, %165, !dbg !8730
  br i1 %cmp179, label %for.body181, label %for.end201, !dbg !8731

for.body181:                                      ; preds = %for.cond178
  call void @llvm.dbg.declare(metadata i16* %v182, metadata !8732, metadata !DIExpression()), !dbg !8734
  %166 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8735
  %167 = load i8*, i8** %sp, align 8, !dbg !8736
  %add.ptr183 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !8737
  %168 = load i8, i8* %add.ptr183, align 1, !dbg !8738
  %conv184 = zext i8 %168 to i32, !dbg !8738
  %169 = load i32, i32* %gamma_shift, align 4, !dbg !8739
  %shr185 = ashr i32 %conv184, %169, !dbg !8740
  %idxprom186 = sext i32 %shr185 to i64, !dbg !8735
  %arrayidx187 = getelementptr inbounds i16*, i16** %166, i64 %idxprom186, !dbg !8735
  %170 = load i16*, i16** %arrayidx187, align 8, !dbg !8735
  %171 = load i8*, i8** %sp, align 8, !dbg !8741
  %172 = load i8, i8* %171, align 1, !dbg !8742
  %idxprom188 = zext i8 %172 to i64, !dbg !8735
  %arrayidx189 = getelementptr inbounds i16, i16* %170, i64 %idxprom188, !dbg !8735
  %173 = load i16, i16* %arrayidx189, align 2, !dbg !8735
  store i16 %173, i16* %v182, align 2, !dbg !8734
  %174 = load i16, i16* %v182, align 2, !dbg !8743
  %conv190 = zext i16 %174 to i32, !dbg !8743
  %shr191 = ashr i32 %conv190, 8, !dbg !8744
  %and192 = and i32 %shr191, 255, !dbg !8745
  %conv193 = trunc i32 %and192 to i8, !dbg !8746
  %175 = load i8*, i8** %sp, align 8, !dbg !8747
  store i8 %conv193, i8* %175, align 1, !dbg !8748
  %176 = load i16, i16* %v182, align 2, !dbg !8749
  %conv194 = zext i16 %176 to i32, !dbg !8749
  %and195 = and i32 %conv194, 255, !dbg !8750
  %conv196 = trunc i32 %and195 to i8, !dbg !8751
  %177 = load i8*, i8** %sp, align 8, !dbg !8752
  %add.ptr197 = getelementptr inbounds i8, i8* %177, i64 1, !dbg !8753
  store i8 %conv196, i8* %add.ptr197, align 1, !dbg !8754
  %178 = load i8*, i8** %sp, align 8, !dbg !8755
  %add.ptr198 = getelementptr inbounds i8, i8* %178, i64 4, !dbg !8755
  store i8* %add.ptr198, i8** %sp, align 8, !dbg !8755
  br label %for.inc199, !dbg !8756

for.inc199:                                       ; preds = %for.body181
  %179 = load i32, i32* %i, align 4, !dbg !8757
  %inc200 = add i32 %179, 1, !dbg !8757
  store i32 %inc200, i32* %i, align 4, !dbg !8757
  br label %for.cond178, !dbg !8758, !llvm.loop !8759

for.end201:                                       ; preds = %for.cond178
  br label %if.end202

if.end202:                                        ; preds = %for.end201, %for.end176
  br label %sw.epilog, !dbg !8761

sw.bb203:                                         ; preds = %if.then
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8762
  %bit_depth204 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %180, i32 0, i32 3, !dbg !8765
  %181 = load i8, i8* %bit_depth204, align 1, !dbg !8765
  %conv205 = zext i8 %181 to i32, !dbg !8762
  %cmp206 = icmp eq i32 %conv205, 2, !dbg !8766
  br i1 %cmp206, label %if.then208, label %if.end268, !dbg !8767

if.then208:                                       ; preds = %sw.bb203
  %182 = load i8*, i8** %row.addr, align 8, !dbg !8768
  store i8* %182, i8** %sp, align 8, !dbg !8770
  store i32 0, i32* %i, align 4, !dbg !8771
  br label %for.cond209, !dbg !8773

for.cond209:                                      ; preds = %for.inc266, %if.then208
  %183 = load i32, i32* %i, align 4, !dbg !8774
  %184 = load i32, i32* %row_width, align 4, !dbg !8776
  %cmp210 = icmp ult i32 %183, %184, !dbg !8777
  br i1 %cmp210, label %for.body212, label %for.end267, !dbg !8778

for.body212:                                      ; preds = %for.cond209
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8779, metadata !DIExpression()), !dbg !8781
  %185 = load i8*, i8** %sp, align 8, !dbg !8782
  %186 = load i8, i8* %185, align 1, !dbg !8783
  %conv213 = zext i8 %186 to i32, !dbg !8783
  %and214 = and i32 %conv213, 192, !dbg !8784
  store i32 %and214, i32* %a, align 4, !dbg !8781
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8785, metadata !DIExpression()), !dbg !8786
  %187 = load i8*, i8** %sp, align 8, !dbg !8787
  %188 = load i8, i8* %187, align 1, !dbg !8788
  %conv215 = zext i8 %188 to i32, !dbg !8788
  %and216 = and i32 %conv215, 48, !dbg !8789
  store i32 %and216, i32* %b, align 4, !dbg !8786
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8790, metadata !DIExpression()), !dbg !8791
  %189 = load i8*, i8** %sp, align 8, !dbg !8792
  %190 = load i8, i8* %189, align 1, !dbg !8793
  %conv217 = zext i8 %190 to i32, !dbg !8793
  %and218 = and i32 %conv217, 12, !dbg !8794
  store i32 %and218, i32* %c, align 4, !dbg !8791
  call void @llvm.dbg.declare(metadata i32* %d, metadata !8795, metadata !DIExpression()), !dbg !8796
  %191 = load i8*, i8** %sp, align 8, !dbg !8797
  %192 = load i8, i8* %191, align 1, !dbg !8798
  %conv219 = zext i8 %192 to i32, !dbg !8798
  %and220 = and i32 %conv219, 3, !dbg !8799
  store i32 %and220, i32* %d, align 4, !dbg !8796
  %193 = load i8*, i8** %gamma_table, align 8, !dbg !8800
  %194 = load i32, i32* %a, align 4, !dbg !8801
  %195 = load i32, i32* %a, align 4, !dbg !8802
  %shr221 = ashr i32 %195, 2, !dbg !8803
  %or = or i32 %194, %shr221, !dbg !8804
  %196 = load i32, i32* %a, align 4, !dbg !8805
  %shr222 = ashr i32 %196, 4, !dbg !8806
  %or223 = or i32 %or, %shr222, !dbg !8807
  %197 = load i32, i32* %a, align 4, !dbg !8808
  %shr224 = ashr i32 %197, 6, !dbg !8809
  %or225 = or i32 %or223, %shr224, !dbg !8810
  %idxprom226 = sext i32 %or225 to i64, !dbg !8800
  %arrayidx227 = getelementptr inbounds i8, i8* %193, i64 %idxprom226, !dbg !8800
  %198 = load i8, i8* %arrayidx227, align 1, !dbg !8800
  %conv228 = zext i8 %198 to i32, !dbg !8811
  %and229 = and i32 %conv228, 192, !dbg !8812
  %199 = load i8*, i8** %gamma_table, align 8, !dbg !8813
  %200 = load i32, i32* %b, align 4, !dbg !8814
  %shl = shl i32 %200, 2, !dbg !8815
  %201 = load i32, i32* %b, align 4, !dbg !8816
  %or230 = or i32 %shl, %201, !dbg !8817
  %202 = load i32, i32* %b, align 4, !dbg !8818
  %shr231 = ashr i32 %202, 2, !dbg !8819
  %or232 = or i32 %or230, %shr231, !dbg !8820
  %203 = load i32, i32* %b, align 4, !dbg !8821
  %shr233 = ashr i32 %203, 4, !dbg !8822
  %or234 = or i32 %or232, %shr233, !dbg !8823
  %idxprom235 = sext i32 %or234 to i64, !dbg !8813
  %arrayidx236 = getelementptr inbounds i8, i8* %199, i64 %idxprom235, !dbg !8813
  %204 = load i8, i8* %arrayidx236, align 1, !dbg !8813
  %conv237 = zext i8 %204 to i32, !dbg !8824
  %shr238 = ashr i32 %conv237, 2, !dbg !8825
  %and239 = and i32 %shr238, 48, !dbg !8826
  %or240 = or i32 %and229, %and239, !dbg !8827
  %205 = load i8*, i8** %gamma_table, align 8, !dbg !8828
  %206 = load i32, i32* %c, align 4, !dbg !8829
  %shl241 = shl i32 %206, 4, !dbg !8830
  %207 = load i32, i32* %c, align 4, !dbg !8831
  %shl242 = shl i32 %207, 2, !dbg !8832
  %or243 = or i32 %shl241, %shl242, !dbg !8833
  %208 = load i32, i32* %c, align 4, !dbg !8834
  %or244 = or i32 %or243, %208, !dbg !8835
  %209 = load i32, i32* %c, align 4, !dbg !8836
  %shr245 = ashr i32 %209, 2, !dbg !8837
  %or246 = or i32 %or244, %shr245, !dbg !8838
  %idxprom247 = sext i32 %or246 to i64, !dbg !8828
  %arrayidx248 = getelementptr inbounds i8, i8* %205, i64 %idxprom247, !dbg !8828
  %210 = load i8, i8* %arrayidx248, align 1, !dbg !8828
  %conv249 = zext i8 %210 to i32, !dbg !8839
  %shr250 = ashr i32 %conv249, 4, !dbg !8840
  %and251 = and i32 %shr250, 12, !dbg !8841
  %or252 = or i32 %or240, %and251, !dbg !8842
  %211 = load i8*, i8** %gamma_table, align 8, !dbg !8843
  %212 = load i32, i32* %d, align 4, !dbg !8844
  %shl253 = shl i32 %212, 6, !dbg !8845
  %213 = load i32, i32* %d, align 4, !dbg !8846
  %shl254 = shl i32 %213, 4, !dbg !8847
  %or255 = or i32 %shl253, %shl254, !dbg !8848
  %214 = load i32, i32* %d, align 4, !dbg !8849
  %shl256 = shl i32 %214, 2, !dbg !8850
  %or257 = or i32 %or255, %shl256, !dbg !8851
  %215 = load i32, i32* %d, align 4, !dbg !8852
  %or258 = or i32 %or257, %215, !dbg !8853
  %idxprom259 = sext i32 %or258 to i64, !dbg !8843
  %arrayidx260 = getelementptr inbounds i8, i8* %211, i64 %idxprom259, !dbg !8843
  %216 = load i8, i8* %arrayidx260, align 1, !dbg !8843
  %conv261 = zext i8 %216 to i32, !dbg !8854
  %shr262 = ashr i32 %conv261, 6, !dbg !8855
  %or263 = or i32 %or252, %shr262, !dbg !8856
  %conv264 = trunc i32 %or263 to i8, !dbg !8857
  %217 = load i8*, i8** %sp, align 8, !dbg !8858
  store i8 %conv264, i8* %217, align 1, !dbg !8859
  %218 = load i8*, i8** %sp, align 8, !dbg !8860
  %incdec.ptr265 = getelementptr inbounds i8, i8* %218, i32 1, !dbg !8860
  store i8* %incdec.ptr265, i8** %sp, align 8, !dbg !8860
  br label %for.inc266, !dbg !8861

for.inc266:                                       ; preds = %for.body212
  %219 = load i32, i32* %i, align 4, !dbg !8862
  %add = add i32 %219, 4, !dbg !8862
  store i32 %add, i32* %i, align 4, !dbg !8862
  br label %for.cond209, !dbg !8863, !llvm.loop !8864

for.end267:                                       ; preds = %for.cond209
  br label %if.end268, !dbg !8866

if.end268:                                        ; preds = %for.end267, %sw.bb203
  %220 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8867
  %bit_depth269 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %220, i32 0, i32 3, !dbg !8869
  %221 = load i8, i8* %bit_depth269, align 1, !dbg !8869
  %conv270 = zext i8 %221 to i32, !dbg !8867
  %cmp271 = icmp eq i32 %conv270, 4, !dbg !8870
  br i1 %cmp271, label %if.then273, label %if.else300, !dbg !8871

if.then273:                                       ; preds = %if.end268
  %222 = load i8*, i8** %row.addr, align 8, !dbg !8872
  store i8* %222, i8** %sp, align 8, !dbg !8874
  store i32 0, i32* %i, align 4, !dbg !8875
  br label %for.cond274, !dbg !8877

for.cond274:                                      ; preds = %for.inc297, %if.then273
  %223 = load i32, i32* %i, align 4, !dbg !8878
  %224 = load i32, i32* %row_width, align 4, !dbg !8880
  %cmp275 = icmp ult i32 %223, %224, !dbg !8881
  br i1 %cmp275, label %for.body277, label %for.end299, !dbg !8882

for.body277:                                      ; preds = %for.cond274
  call void @llvm.dbg.declare(metadata i32* %msb, metadata !8883, metadata !DIExpression()), !dbg !8885
  %225 = load i8*, i8** %sp, align 8, !dbg !8886
  %226 = load i8, i8* %225, align 1, !dbg !8887
  %conv278 = zext i8 %226 to i32, !dbg !8887
  %and279 = and i32 %conv278, 240, !dbg !8888
  store i32 %and279, i32* %msb, align 4, !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %lsb, metadata !8889, metadata !DIExpression()), !dbg !8890
  %227 = load i8*, i8** %sp, align 8, !dbg !8891
  %228 = load i8, i8* %227, align 1, !dbg !8892
  %conv280 = zext i8 %228 to i32, !dbg !8892
  %and281 = and i32 %conv280, 15, !dbg !8893
  store i32 %and281, i32* %lsb, align 4, !dbg !8890
  %229 = load i8*, i8** %gamma_table, align 8, !dbg !8894
  %230 = load i32, i32* %msb, align 4, !dbg !8895
  %231 = load i32, i32* %msb, align 4, !dbg !8896
  %shr282 = ashr i32 %231, 4, !dbg !8897
  %or283 = or i32 %230, %shr282, !dbg !8898
  %idxprom284 = sext i32 %or283 to i64, !dbg !8894
  %arrayidx285 = getelementptr inbounds i8, i8* %229, i64 %idxprom284, !dbg !8894
  %232 = load i8, i8* %arrayidx285, align 1, !dbg !8894
  %conv286 = zext i8 %232 to i32, !dbg !8899
  %and287 = and i32 %conv286, 240, !dbg !8900
  %233 = load i8*, i8** %gamma_table, align 8, !dbg !8901
  %234 = load i32, i32* %lsb, align 4, !dbg !8902
  %shl288 = shl i32 %234, 4, !dbg !8903
  %235 = load i32, i32* %lsb, align 4, !dbg !8904
  %or289 = or i32 %shl288, %235, !dbg !8905
  %idxprom290 = sext i32 %or289 to i64, !dbg !8901
  %arrayidx291 = getelementptr inbounds i8, i8* %233, i64 %idxprom290, !dbg !8901
  %236 = load i8, i8* %arrayidx291, align 1, !dbg !8901
  %conv292 = zext i8 %236 to i32, !dbg !8906
  %shr293 = ashr i32 %conv292, 4, !dbg !8907
  %or294 = or i32 %and287, %shr293, !dbg !8908
  %conv295 = trunc i32 %or294 to i8, !dbg !8909
  %237 = load i8*, i8** %sp, align 8, !dbg !8910
  store i8 %conv295, i8* %237, align 1, !dbg !8911
  %238 = load i8*, i8** %sp, align 8, !dbg !8912
  %incdec.ptr296 = getelementptr inbounds i8, i8* %238, i32 1, !dbg !8912
  store i8* %incdec.ptr296, i8** %sp, align 8, !dbg !8912
  br label %for.inc297, !dbg !8913

for.inc297:                                       ; preds = %for.body277
  %239 = load i32, i32* %i, align 4, !dbg !8914
  %add298 = add i32 %239, 2, !dbg !8914
  store i32 %add298, i32* %i, align 4, !dbg !8914
  br label %for.cond274, !dbg !8915, !llvm.loop !8916

for.end299:                                       ; preds = %for.cond274
  br label %if.end348, !dbg !8918

if.else300:                                       ; preds = %if.end268
  %240 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8919
  %bit_depth301 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %240, i32 0, i32 3, !dbg !8921
  %241 = load i8, i8* %bit_depth301, align 1, !dbg !8921
  %conv302 = zext i8 %241 to i32, !dbg !8919
  %cmp303 = icmp eq i32 %conv302, 8, !dbg !8922
  br i1 %cmp303, label %if.then305, label %if.else316, !dbg !8923

if.then305:                                       ; preds = %if.else300
  %242 = load i8*, i8** %row.addr, align 8, !dbg !8924
  store i8* %242, i8** %sp, align 8, !dbg !8926
  store i32 0, i32* %i, align 4, !dbg !8927
  br label %for.cond306, !dbg !8929

for.cond306:                                      ; preds = %for.inc313, %if.then305
  %243 = load i32, i32* %i, align 4, !dbg !8930
  %244 = load i32, i32* %row_width, align 4, !dbg !8932
  %cmp307 = icmp ult i32 %243, %244, !dbg !8933
  br i1 %cmp307, label %for.body309, label %for.end315, !dbg !8934

for.body309:                                      ; preds = %for.cond306
  %245 = load i8*, i8** %gamma_table, align 8, !dbg !8935
  %246 = load i8*, i8** %sp, align 8, !dbg !8937
  %247 = load i8, i8* %246, align 1, !dbg !8938
  %idxprom310 = zext i8 %247 to i64, !dbg !8935
  %arrayidx311 = getelementptr inbounds i8, i8* %245, i64 %idxprom310, !dbg !8935
  %248 = load i8, i8* %arrayidx311, align 1, !dbg !8935
  %249 = load i8*, i8** %sp, align 8, !dbg !8939
  store i8 %248, i8* %249, align 1, !dbg !8940
  %250 = load i8*, i8** %sp, align 8, !dbg !8941
  %incdec.ptr312 = getelementptr inbounds i8, i8* %250, i32 1, !dbg !8941
  store i8* %incdec.ptr312, i8** %sp, align 8, !dbg !8941
  br label %for.inc313, !dbg !8942

for.inc313:                                       ; preds = %for.body309
  %251 = load i32, i32* %i, align 4, !dbg !8943
  %inc314 = add i32 %251, 1, !dbg !8943
  store i32 %inc314, i32* %i, align 4, !dbg !8943
  br label %for.cond306, !dbg !8944, !llvm.loop !8945

for.end315:                                       ; preds = %for.cond306
  br label %if.end347, !dbg !8947

if.else316:                                       ; preds = %if.else300
  %252 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !8948
  %bit_depth317 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %252, i32 0, i32 3, !dbg !8950
  %253 = load i8, i8* %bit_depth317, align 1, !dbg !8950
  %conv318 = zext i8 %253 to i32, !dbg !8948
  %cmp319 = icmp eq i32 %conv318, 16, !dbg !8951
  br i1 %cmp319, label %if.then321, label %if.end346, !dbg !8952

if.then321:                                       ; preds = %if.else316
  %254 = load i8*, i8** %row.addr, align 8, !dbg !8953
  store i8* %254, i8** %sp, align 8, !dbg !8955
  store i32 0, i32* %i, align 4, !dbg !8956
  br label %for.cond322, !dbg !8958

for.cond322:                                      ; preds = %for.inc343, %if.then321
  %255 = load i32, i32* %i, align 4, !dbg !8959
  %256 = load i32, i32* %row_width, align 4, !dbg !8961
  %cmp323 = icmp ult i32 %255, %256, !dbg !8962
  br i1 %cmp323, label %for.body325, label %for.end345, !dbg !8963

for.body325:                                      ; preds = %for.cond322
  call void @llvm.dbg.declare(metadata i16* %v326, metadata !8964, metadata !DIExpression()), !dbg !8966
  %257 = load i16**, i16*** %gamma_16_table, align 8, !dbg !8967
  %258 = load i8*, i8** %sp, align 8, !dbg !8968
  %add.ptr327 = getelementptr inbounds i8, i8* %258, i64 1, !dbg !8969
  %259 = load i8, i8* %add.ptr327, align 1, !dbg !8970
  %conv328 = zext i8 %259 to i32, !dbg !8970
  %260 = load i32, i32* %gamma_shift, align 4, !dbg !8971
  %shr329 = ashr i32 %conv328, %260, !dbg !8972
  %idxprom330 = sext i32 %shr329 to i64, !dbg !8967
  %arrayidx331 = getelementptr inbounds i16*, i16** %257, i64 %idxprom330, !dbg !8967
  %261 = load i16*, i16** %arrayidx331, align 8, !dbg !8967
  %262 = load i8*, i8** %sp, align 8, !dbg !8973
  %263 = load i8, i8* %262, align 1, !dbg !8974
  %idxprom332 = zext i8 %263 to i64, !dbg !8967
  %arrayidx333 = getelementptr inbounds i16, i16* %261, i64 %idxprom332, !dbg !8967
  %264 = load i16, i16* %arrayidx333, align 2, !dbg !8967
  store i16 %264, i16* %v326, align 2, !dbg !8966
  %265 = load i16, i16* %v326, align 2, !dbg !8975
  %conv334 = zext i16 %265 to i32, !dbg !8975
  %shr335 = ashr i32 %conv334, 8, !dbg !8976
  %and336 = and i32 %shr335, 255, !dbg !8977
  %conv337 = trunc i32 %and336 to i8, !dbg !8978
  %266 = load i8*, i8** %sp, align 8, !dbg !8979
  store i8 %conv337, i8* %266, align 1, !dbg !8980
  %267 = load i16, i16* %v326, align 2, !dbg !8981
  %conv338 = zext i16 %267 to i32, !dbg !8981
  %and339 = and i32 %conv338, 255, !dbg !8982
  %conv340 = trunc i32 %and339 to i8, !dbg !8983
  %268 = load i8*, i8** %sp, align 8, !dbg !8984
  %add.ptr341 = getelementptr inbounds i8, i8* %268, i64 1, !dbg !8985
  store i8 %conv340, i8* %add.ptr341, align 1, !dbg !8986
  %269 = load i8*, i8** %sp, align 8, !dbg !8987
  %add.ptr342 = getelementptr inbounds i8, i8* %269, i64 2, !dbg !8987
  store i8* %add.ptr342, i8** %sp, align 8, !dbg !8987
  br label %for.inc343, !dbg !8988

for.inc343:                                       ; preds = %for.body325
  %270 = load i32, i32* %i, align 4, !dbg !8989
  %inc344 = add i32 %270, 1, !dbg !8989
  store i32 %inc344, i32* %i, align 4, !dbg !8989
  br label %for.cond322, !dbg !8990, !llvm.loop !8991

for.end345:                                       ; preds = %for.cond322
  br label %if.end346, !dbg !8993

if.end346:                                        ; preds = %for.end345, %if.else316
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %for.end315
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %for.end299
  br label %sw.epilog, !dbg !8994

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !8995

sw.epilog:                                        ; preds = %sw.default, %if.end348, %if.end202, %if.end160, %if.end
  br label %if.end349, !dbg !8996

if.end349:                                        ; preds = %sw.epilog, %land.lhs.true11, %lor.lhs.false
  ret void, !dbg !8997
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_encode_alpha(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_struct_def* %png_ptr) #0 !dbg !8998 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %row_width = alloca i32, align 4
  %table = alloca i8*, align 8
  %step = alloca i32, align 4
  %table20 = alloca i16**, align 8
  %gamma_shift = alloca i32, align 4
  %step25 = alloca i32, align 4
  %v = alloca i16, align 2
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !8999, metadata !DIExpression()), !dbg !9000
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !9005, metadata !DIExpression()), !dbg !9006
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9007
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !9008
  %1 = load i32, i32* %width, align 8, !dbg !9008
  store i32 %1, i32* %row_width, align 4, !dbg !9006
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9009
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !9011
  %3 = load i8, i8* %color_type, align 8, !dbg !9011
  %conv = zext i8 %3 to i32, !dbg !9009
  %and = and i32 %conv, 4, !dbg !9012
  %tobool = icmp ne i32 %and, 0, !dbg !9012
  br i1 %tobool, label %if.then, label %if.end60, !dbg !9013

if.then:                                          ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9014
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !9017
  %5 = load i8, i8* %bit_depth, align 1, !dbg !9017
  %conv1 = zext i8 %5 to i32, !dbg !9014
  %cmp = icmp eq i32 %conv1, 8, !dbg !9018
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9019

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %table, metadata !9020, metadata !DIExpression()), !dbg !9023
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !9024
  %gamma_from_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 79, !dbg !9025
  %7 = load i8*, i8** %gamma_from_1, align 8, !dbg !9025
  store i8* %7, i8** %table, align 8, !dbg !9023
  %8 = load i8*, i8** %table, align 8, !dbg !9026
  %cmp4 = icmp ne i8* %8, null, !dbg !9028
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9029

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %step, metadata !9030, metadata !DIExpression()), !dbg !9032
  %9 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9033
  %color_type7 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %9, i32 0, i32 2, !dbg !9034
  %10 = load i8, i8* %color_type7, align 8, !dbg !9034
  %conv8 = zext i8 %10 to i32, !dbg !9033
  %and9 = and i32 %conv8, 2, !dbg !9035
  %tobool10 = icmp ne i32 %and9, 0, !dbg !9036
  %11 = zext i1 %tobool10 to i64, !dbg !9036
  %cond = select i1 %tobool10, i32 4, i32 2, !dbg !9036
  store i32 %cond, i32* %step, align 4, !dbg !9032
  %12 = load i32, i32* %step, align 4, !dbg !9037
  %sub = sub nsw i32 %12, 1, !dbg !9038
  %13 = load i8*, i8** %row.addr, align 8, !dbg !9039
  %idx.ext = sext i32 %sub to i64, !dbg !9039
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !9039
  store i8* %add.ptr, i8** %row.addr, align 8, !dbg !9039
  br label %for.cond, !dbg !9040

for.cond:                                         ; preds = %for.inc, %if.then6
  %14 = load i32, i32* %row_width, align 4, !dbg !9041
  %cmp11 = icmp ugt i32 %14, 0, !dbg !9044
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9045

for.body:                                         ; preds = %for.cond
  %15 = load i8*, i8** %table, align 8, !dbg !9046
  %16 = load i8*, i8** %row.addr, align 8, !dbg !9047
  %17 = load i8, i8* %16, align 1, !dbg !9048
  %idxprom = zext i8 %17 to i64, !dbg !9046
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !9046
  %18 = load i8, i8* %arrayidx, align 1, !dbg !9046
  %19 = load i8*, i8** %row.addr, align 8, !dbg !9049
  store i8 %18, i8* %19, align 1, !dbg !9050
  br label %for.inc, !dbg !9051

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %row_width, align 4, !dbg !9052
  %dec = add i32 %20, -1, !dbg !9052
  store i32 %dec, i32* %row_width, align 4, !dbg !9052
  %21 = load i32, i32* %step, align 4, !dbg !9053
  %22 = load i8*, i8** %row.addr, align 8, !dbg !9054
  %idx.ext13 = sext i32 %21 to i64, !dbg !9054
  %add.ptr14 = getelementptr inbounds i8, i8* %22, i64 %idx.ext13, !dbg !9054
  store i8* %add.ptr14, i8** %row.addr, align 8, !dbg !9054
  br label %for.cond, !dbg !9055, !llvm.loop !9056

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !9058

if.end:                                           ; preds = %if.then3
  br label %if.end59, !dbg !9059

if.else:                                          ; preds = %if.then
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9060
  %bit_depth15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 3, !dbg !9062
  %24 = load i8, i8* %bit_depth15, align 1, !dbg !9062
  %conv16 = zext i8 %24 to i32, !dbg !9060
  %cmp17 = icmp eq i32 %conv16, 16, !dbg !9063
  br i1 %cmp17, label %if.then19, label %if.end58, !dbg !9064

if.then19:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16*** %table20, metadata !9065, metadata !DIExpression()), !dbg !9068
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !9069
  %gamma_16_from_1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 81, !dbg !9070
  %26 = load i16**, i16*** %gamma_16_from_1, align 8, !dbg !9070
  store i16** %26, i16*** %table20, align 8, !dbg !9068
  call void @llvm.dbg.declare(metadata i32* %gamma_shift, metadata !9071, metadata !DIExpression()), !dbg !9072
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !9073
  %gamma_shift21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 74, !dbg !9074
  %28 = load i32, i32* %gamma_shift21, align 8, !dbg !9074
  store i32 %28, i32* %gamma_shift, align 4, !dbg !9072
  %29 = load i16**, i16*** %table20, align 8, !dbg !9075
  %cmp22 = icmp ne i16** %29, null, !dbg !9077
  br i1 %cmp22, label %if.then24, label %if.end57, !dbg !9078

if.then24:                                        ; preds = %if.then19
  call void @llvm.dbg.declare(metadata i32* %step25, metadata !9079, metadata !DIExpression()), !dbg !9081
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9082
  %color_type26 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 2, !dbg !9083
  %31 = load i8, i8* %color_type26, align 8, !dbg !9083
  %conv27 = zext i8 %31 to i32, !dbg !9082
  %and28 = and i32 %conv27, 2, !dbg !9084
  %tobool29 = icmp ne i32 %and28, 0, !dbg !9085
  %32 = zext i1 %tobool29 to i64, !dbg !9085
  %cond30 = select i1 %tobool29, i32 8, i32 4, !dbg !9085
  store i32 %cond30, i32* %step25, align 4, !dbg !9081
  %33 = load i32, i32* %step25, align 4, !dbg !9086
  %sub31 = sub nsw i32 %33, 2, !dbg !9087
  %34 = load i8*, i8** %row.addr, align 8, !dbg !9088
  %idx.ext32 = sext i32 %sub31 to i64, !dbg !9088
  %add.ptr33 = getelementptr inbounds i8, i8* %34, i64 %idx.ext32, !dbg !9088
  store i8* %add.ptr33, i8** %row.addr, align 8, !dbg !9088
  br label %for.cond34, !dbg !9089

for.cond34:                                       ; preds = %for.inc52, %if.then24
  %35 = load i32, i32* %row_width, align 4, !dbg !9090
  %cmp35 = icmp ugt i32 %35, 0, !dbg !9093
  br i1 %cmp35, label %for.body37, label %for.end56, !dbg !9094

for.body37:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata i16* %v, metadata !9095, metadata !DIExpression()), !dbg !9097
  %36 = load i16**, i16*** %table20, align 8, !dbg !9098
  %37 = load i8*, i8** %row.addr, align 8, !dbg !9099
  %add.ptr38 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !9100
  %38 = load i8, i8* %add.ptr38, align 1, !dbg !9101
  %conv39 = zext i8 %38 to i32, !dbg !9101
  %39 = load i32, i32* %gamma_shift, align 4, !dbg !9102
  %shr = ashr i32 %conv39, %39, !dbg !9103
  %idxprom40 = sext i32 %shr to i64, !dbg !9098
  %arrayidx41 = getelementptr inbounds i16*, i16** %36, i64 %idxprom40, !dbg !9098
  %40 = load i16*, i16** %arrayidx41, align 8, !dbg !9098
  %41 = load i8*, i8** %row.addr, align 8, !dbg !9104
  %42 = load i8, i8* %41, align 1, !dbg !9105
  %idxprom42 = zext i8 %42 to i64, !dbg !9098
  %arrayidx43 = getelementptr inbounds i16, i16* %40, i64 %idxprom42, !dbg !9098
  %43 = load i16, i16* %arrayidx43, align 2, !dbg !9098
  store i16 %43, i16* %v, align 2, !dbg !9106
  %44 = load i16, i16* %v, align 2, !dbg !9107
  %conv44 = zext i16 %44 to i32, !dbg !9107
  %shr45 = ashr i32 %conv44, 8, !dbg !9108
  %and46 = and i32 %shr45, 255, !dbg !9109
  %conv47 = trunc i32 %and46 to i8, !dbg !9110
  %45 = load i8*, i8** %row.addr, align 8, !dbg !9111
  store i8 %conv47, i8* %45, align 1, !dbg !9112
  %46 = load i16, i16* %v, align 2, !dbg !9113
  %conv48 = zext i16 %46 to i32, !dbg !9113
  %and49 = and i32 %conv48, 255, !dbg !9114
  %conv50 = trunc i32 %and49 to i8, !dbg !9115
  %47 = load i8*, i8** %row.addr, align 8, !dbg !9116
  %add.ptr51 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !9117
  store i8 %conv50, i8* %add.ptr51, align 1, !dbg !9118
  br label %for.inc52, !dbg !9119

for.inc52:                                        ; preds = %for.body37
  %48 = load i32, i32* %row_width, align 4, !dbg !9120
  %dec53 = add i32 %48, -1, !dbg !9120
  store i32 %dec53, i32* %row_width, align 4, !dbg !9120
  %49 = load i32, i32* %step25, align 4, !dbg !9121
  %50 = load i8*, i8** %row.addr, align 8, !dbg !9122
  %idx.ext54 = sext i32 %49 to i64, !dbg !9122
  %add.ptr55 = getelementptr inbounds i8, i8* %50, i64 %idx.ext54, !dbg !9122
  store i8* %add.ptr55, i8** %row.addr, align 8, !dbg !9122
  br label %for.cond34, !dbg !9123, !llvm.loop !9124

for.end56:                                        ; preds = %for.cond34
  br label %return, !dbg !9126

if.end57:                                         ; preds = %if.then19
  br label %if.end58, !dbg !9127

if.end58:                                         ; preds = %if.end57, %if.else
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end
  br label %if.end60, !dbg !9128

if.end60:                                         ; preds = %if.end59, %entry
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !9129
  call void @png_warning(%struct.png_struct_def* %51, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0)), !dbg !9130
  br label %return, !dbg !9131

return:                                           ; preds = %if.end60, %for.end56, %for.end
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_scale_16_to_8(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !9132 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %ep = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9135, metadata !DIExpression()), !dbg !9136
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9137
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 3, !dbg !9139
  %1 = load i8, i8* %bit_depth, align 1, !dbg !9139
  %conv = zext i8 %1 to i32, !dbg !9137
  %cmp = icmp eq i32 %conv, 16, !dbg !9140
  br i1 %cmp, label %if.then, label %if.end, !dbg !9141

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !9142, metadata !DIExpression()), !dbg !9144
  %2 = load i8*, i8** %row.addr, align 8, !dbg !9145
  store i8* %2, i8** %sp, align 8, !dbg !9144
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !9146, metadata !DIExpression()), !dbg !9147
  %3 = load i8*, i8** %row.addr, align 8, !dbg !9148
  store i8* %3, i8** %dp, align 8, !dbg !9147
  call void @llvm.dbg.declare(metadata i8** %ep, metadata !9149, metadata !DIExpression()), !dbg !9150
  %4 = load i8*, i8** %sp, align 8, !dbg !9151
  %5 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9152
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 1, !dbg !9153
  %6 = load i64, i64* %rowbytes, align 8, !dbg !9153
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !9154
  store i8* %add.ptr, i8** %ep, align 8, !dbg !9150
  br label %while.cond, !dbg !9155

while.cond:                                       ; preds = %while.body, %if.then
  %7 = load i8*, i8** %sp, align 8, !dbg !9156
  %8 = load i8*, i8** %ep, align 8, !dbg !9157
  %cmp2 = icmp ult i8* %7, %8, !dbg !9158
  br i1 %cmp2, label %while.body, label %while.end, !dbg !9155

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9159, metadata !DIExpression()), !dbg !9161
  %9 = load i8*, i8** %sp, align 8, !dbg !9162
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9162
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !9162
  %10 = load i8, i8* %9, align 1, !dbg !9163
  %conv4 = zext i8 %10 to i32, !dbg !9163
  store i32 %conv4, i32* %tmp, align 4, !dbg !9161
  %11 = load i8*, i8** %sp, align 8, !dbg !9164
  %incdec.ptr5 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9164
  store i8* %incdec.ptr5, i8** %sp, align 8, !dbg !9164
  %12 = load i8, i8* %11, align 1, !dbg !9165
  %conv6 = zext i8 %12 to i32, !dbg !9166
  %13 = load i32, i32* %tmp, align 4, !dbg !9167
  %sub = sub nsw i32 %conv6, %13, !dbg !9168
  %add = add nsw i32 %sub, 128, !dbg !9169
  %mul = mul nsw i32 %add, 65535, !dbg !9170
  %shr = ashr i32 %mul, 24, !dbg !9171
  %14 = load i32, i32* %tmp, align 4, !dbg !9172
  %add7 = add nsw i32 %14, %shr, !dbg !9172
  store i32 %add7, i32* %tmp, align 4, !dbg !9172
  %15 = load i32, i32* %tmp, align 4, !dbg !9173
  %conv8 = trunc i32 %15 to i8, !dbg !9174
  %16 = load i8*, i8** %dp, align 8, !dbg !9175
  %incdec.ptr9 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !9175
  store i8* %incdec.ptr9, i8** %dp, align 8, !dbg !9175
  store i8 %conv8, i8* %16, align 1, !dbg !9176
  br label %while.cond, !dbg !9155, !llvm.loop !9177

while.end:                                        ; preds = %while.cond
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9179
  %bit_depth10 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 3, !dbg !9180
  store i8 8, i8* %bit_depth10, align 1, !dbg !9181
  %18 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9182
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %18, i32 0, i32 4, !dbg !9183
  %19 = load i8, i8* %channels, align 2, !dbg !9183
  %conv11 = zext i8 %19 to i32, !dbg !9182
  %mul12 = mul nsw i32 8, %conv11, !dbg !9184
  %conv13 = trunc i32 %mul12 to i8, !dbg !9185
  %20 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9186
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %20, i32 0, i32 5, !dbg !9187
  store i8 %conv13, i8* %pixel_depth, align 1, !dbg !9188
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9189
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 0, !dbg !9190
  %22 = load i32, i32* %width, align 8, !dbg !9190
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9191
  %channels14 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 4, !dbg !9192
  %24 = load i8, i8* %channels14, align 2, !dbg !9192
  %conv15 = zext i8 %24 to i32, !dbg !9191
  %mul16 = mul i32 %22, %conv15, !dbg !9193
  %conv17 = zext i32 %mul16 to i64, !dbg !9189
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9194
  %rowbytes18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 1, !dbg !9195
  store i64 %conv17, i64* %rowbytes18, align 8, !dbg !9196
  br label %if.end, !dbg !9197

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !9198
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_chop(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !9199 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %ep = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9200, metadata !DIExpression()), !dbg !9201
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9202, metadata !DIExpression()), !dbg !9203
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9204
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 3, !dbg !9206
  %1 = load i8, i8* %bit_depth, align 1, !dbg !9206
  %conv = zext i8 %1 to i32, !dbg !9204
  %cmp = icmp eq i32 %conv, 16, !dbg !9207
  br i1 %cmp, label %if.then, label %if.end, !dbg !9208

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !9209, metadata !DIExpression()), !dbg !9211
  %2 = load i8*, i8** %row.addr, align 8, !dbg !9212
  store i8* %2, i8** %sp, align 8, !dbg !9211
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !9213, metadata !DIExpression()), !dbg !9214
  %3 = load i8*, i8** %row.addr, align 8, !dbg !9215
  store i8* %3, i8** %dp, align 8, !dbg !9214
  call void @llvm.dbg.declare(metadata i8** %ep, metadata !9216, metadata !DIExpression()), !dbg !9217
  %4 = load i8*, i8** %sp, align 8, !dbg !9218
  %5 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9219
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 1, !dbg !9220
  %6 = load i64, i64* %rowbytes, align 8, !dbg !9220
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !9221
  store i8* %add.ptr, i8** %ep, align 8, !dbg !9217
  br label %while.cond, !dbg !9222

while.cond:                                       ; preds = %while.body, %if.then
  %7 = load i8*, i8** %sp, align 8, !dbg !9223
  %8 = load i8*, i8** %ep, align 8, !dbg !9224
  %cmp2 = icmp ult i8* %7, %8, !dbg !9225
  br i1 %cmp2, label %while.body, label %while.end, !dbg !9222

while.body:                                       ; preds = %while.cond
  %9 = load i8*, i8** %sp, align 8, !dbg !9226
  %10 = load i8, i8* %9, align 1, !dbg !9228
  %11 = load i8*, i8** %dp, align 8, !dbg !9229
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9229
  store i8* %incdec.ptr, i8** %dp, align 8, !dbg !9229
  store i8 %10, i8* %11, align 1, !dbg !9230
  %12 = load i8*, i8** %sp, align 8, !dbg !9231
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !9231
  store i8* %add.ptr4, i8** %sp, align 8, !dbg !9231
  br label %while.cond, !dbg !9222, !llvm.loop !9232

while.end:                                        ; preds = %while.cond
  %13 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9234
  %bit_depth5 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %13, i32 0, i32 3, !dbg !9235
  store i8 8, i8* %bit_depth5, align 1, !dbg !9236
  %14 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9237
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %14, i32 0, i32 4, !dbg !9238
  %15 = load i8, i8* %channels, align 2, !dbg !9238
  %conv6 = zext i8 %15 to i32, !dbg !9237
  %mul = mul nsw i32 8, %conv6, !dbg !9239
  %conv7 = trunc i32 %mul to i8, !dbg !9240
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9241
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 5, !dbg !9242
  store i8 %conv7, i8* %pixel_depth, align 1, !dbg !9243
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9244
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 0, !dbg !9245
  %18 = load i32, i32* %width, align 8, !dbg !9245
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9246
  %channels8 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 4, !dbg !9247
  %20 = load i8, i8* %channels8, align 2, !dbg !9247
  %conv9 = zext i8 %20 to i32, !dbg !9246
  %mul10 = mul i32 %18, %conv9, !dbg !9248
  %conv11 = zext i32 %mul10 to i64, !dbg !9244
  %21 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9249
  %rowbytes12 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %21, i32 0, i32 1, !dbg !9250
  store i64 %conv11, i64* %rowbytes12, align 8, !dbg !9251
  br label %if.end, !dbg !9252

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !9253
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_quantize(%struct.png_row_info_struct* %row_info, i8* %row, i8* %palette_lookup, i8* %quantize_lookup) #0 !dbg !9254 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %palette_lookup.addr = alloca i8*, align 8
  %quantize_lookup.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %r = alloca i32, align 4
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %p = alloca i32, align 4
  %r43 = alloca i32, align 4
  %g44 = alloca i32, align 4
  %b45 = alloca i32, align 4
  %p46 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  store i8* %palette_lookup, i8** %palette_lookup.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %palette_lookup.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  store i8* %quantize_lookup, i8** %quantize_lookup.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %quantize_lookup.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9273
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !9274
  %1 = load i32, i32* %width, align 8, !dbg !9274
  store i32 %1, i32* %row_width, align 4, !dbg !9272
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9275
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 3, !dbg !9277
  %3 = load i8, i8* %bit_depth, align 1, !dbg !9277
  %conv = zext i8 %3 to i32, !dbg !9275
  %cmp = icmp eq i32 %conv, 8, !dbg !9278
  br i1 %cmp, label %if.then, label %if.end118, !dbg !9279

if.then:                                          ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9280
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 2, !dbg !9283
  %5 = load i8, i8* %color_type, align 8, !dbg !9283
  %conv2 = zext i8 %5 to i32, !dbg !9280
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !9284
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !9285

land.lhs.true:                                    ; preds = %if.then
  %6 = load i8*, i8** %palette_lookup.addr, align 8, !dbg !9286
  %tobool = icmp ne i8* %6, null, !dbg !9286
  br i1 %tobool, label %if.then5, label %if.else, !dbg !9287

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.declare(metadata i32* %g, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9293, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9295, metadata !DIExpression()), !dbg !9296
  %7 = load i8*, i8** %row.addr, align 8, !dbg !9297
  store i8* %7, i8** %sp, align 8, !dbg !9298
  %8 = load i8*, i8** %row.addr, align 8, !dbg !9299
  store i8* %8, i8** %dp, align 8, !dbg !9300
  store i32 0, i32* %i, align 4, !dbg !9301
  br label %for.cond, !dbg !9303

for.cond:                                         ; preds = %for.inc, %if.then5
  %9 = load i32, i32* %i, align 4, !dbg !9304
  %10 = load i32, i32* %row_width, align 4, !dbg !9306
  %cmp6 = icmp ult i32 %9, %10, !dbg !9307
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9308

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %sp, align 8, !dbg !9309
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9309
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !9309
  %12 = load i8, i8* %11, align 1, !dbg !9311
  %conv8 = zext i8 %12 to i32, !dbg !9311
  store i32 %conv8, i32* %r, align 4, !dbg !9312
  %13 = load i8*, i8** %sp, align 8, !dbg !9313
  %incdec.ptr9 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9313
  store i8* %incdec.ptr9, i8** %sp, align 8, !dbg !9313
  %14 = load i8, i8* %13, align 1, !dbg !9314
  %conv10 = zext i8 %14 to i32, !dbg !9314
  store i32 %conv10, i32* %g, align 4, !dbg !9315
  %15 = load i8*, i8** %sp, align 8, !dbg !9316
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !9316
  store i8* %incdec.ptr11, i8** %sp, align 8, !dbg !9316
  %16 = load i8, i8* %15, align 1, !dbg !9317
  %conv12 = zext i8 %16 to i32, !dbg !9317
  store i32 %conv12, i32* %b, align 4, !dbg !9318
  %17 = load i32, i32* %r, align 4, !dbg !9319
  %shr = ashr i32 %17, 3, !dbg !9320
  %and = and i32 %shr, 31, !dbg !9321
  %shl = shl i32 %and, 10, !dbg !9322
  %18 = load i32, i32* %g, align 4, !dbg !9323
  %shr13 = ashr i32 %18, 3, !dbg !9324
  %and14 = and i32 %shr13, 31, !dbg !9325
  %shl15 = shl i32 %and14, 5, !dbg !9326
  %or = or i32 %shl, %shl15, !dbg !9327
  %19 = load i32, i32* %b, align 4, !dbg !9328
  %shr16 = ashr i32 %19, 3, !dbg !9329
  %and17 = and i32 %shr16, 31, !dbg !9330
  %or18 = or i32 %or, %and17, !dbg !9331
  store i32 %or18, i32* %p, align 4, !dbg !9332
  %20 = load i8*, i8** %palette_lookup.addr, align 8, !dbg !9333
  %21 = load i32, i32* %p, align 4, !dbg !9334
  %idxprom = sext i32 %21 to i64, !dbg !9333
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 %idxprom, !dbg !9333
  %22 = load i8, i8* %arrayidx, align 1, !dbg !9333
  %23 = load i8*, i8** %dp, align 8, !dbg !9335
  %incdec.ptr19 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9335
  store i8* %incdec.ptr19, i8** %dp, align 8, !dbg !9335
  store i8 %22, i8* %23, align 1, !dbg !9336
  br label %for.inc, !dbg !9337

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !9338
  %inc = add i32 %24, 1, !dbg !9338
  store i32 %inc, i32* %i, align 4, !dbg !9338
  br label %for.cond, !dbg !9339, !llvm.loop !9340

for.end:                                          ; preds = %for.cond
  %25 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9342
  %color_type20 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %25, i32 0, i32 2, !dbg !9343
  store i8 3, i8* %color_type20, align 8, !dbg !9344
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9345
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 4, !dbg !9346
  store i8 1, i8* %channels, align 2, !dbg !9347
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9348
  %bit_depth21 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 3, !dbg !9349
  %28 = load i8, i8* %bit_depth21, align 1, !dbg !9349
  %29 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9350
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %29, i32 0, i32 5, !dbg !9351
  store i8 %28, i8* %pixel_depth, align 1, !dbg !9352
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9353
  %pixel_depth22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 5, !dbg !9353
  %31 = load i8, i8* %pixel_depth22, align 1, !dbg !9353
  %conv23 = zext i8 %31 to i32, !dbg !9353
  %cmp24 = icmp sge i32 %conv23, 8, !dbg !9353
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !9353

cond.true:                                        ; preds = %for.end
  %32 = load i32, i32* %row_width, align 4, !dbg !9353
  %conv26 = zext i32 %32 to i64, !dbg !9353
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9353
  %pixel_depth27 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 5, !dbg !9353
  %34 = load i8, i8* %pixel_depth27, align 1, !dbg !9353
  %conv28 = zext i8 %34 to i64, !dbg !9353
  %shr29 = lshr i64 %conv28, 3, !dbg !9353
  %mul = mul i64 %conv26, %shr29, !dbg !9353
  br label %cond.end, !dbg !9353

cond.false:                                       ; preds = %for.end
  %35 = load i32, i32* %row_width, align 4, !dbg !9353
  %conv30 = zext i32 %35 to i64, !dbg !9353
  %36 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9353
  %pixel_depth31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %36, i32 0, i32 5, !dbg !9353
  %37 = load i8, i8* %pixel_depth31, align 1, !dbg !9353
  %conv32 = zext i8 %37 to i64, !dbg !9353
  %mul33 = mul i64 %conv30, %conv32, !dbg !9353
  %add = add i64 %mul33, 7, !dbg !9353
  %shr34 = lshr i64 %add, 3, !dbg !9353
  br label %cond.end, !dbg !9353

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul, %cond.true ], [ %shr34, %cond.false ], !dbg !9353
  %38 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9354
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %38, i32 0, i32 1, !dbg !9355
  store i64 %cond, i64* %rowbytes, align 8, !dbg !9356
  br label %if.end117, !dbg !9357

if.else:                                          ; preds = %land.lhs.true, %if.then
  %39 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9358
  %color_type35 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %39, i32 0, i32 2, !dbg !9360
  %40 = load i8, i8* %color_type35, align 8, !dbg !9360
  %conv36 = zext i8 %40 to i32, !dbg !9358
  %cmp37 = icmp eq i32 %conv36, 6, !dbg !9361
  br i1 %cmp37, label %land.lhs.true39, label %if.else98, !dbg !9362

land.lhs.true39:                                  ; preds = %if.else
  %41 = load i8*, i8** %palette_lookup.addr, align 8, !dbg !9363
  %cmp40 = icmp ne i8* %41, null, !dbg !9364
  br i1 %cmp40, label %if.then42, label %if.else98, !dbg !9365

if.then42:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %r43, metadata !9366, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata i32* %g44, metadata !9369, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.declare(metadata i32* %b45, metadata !9371, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.declare(metadata i32* %p46, metadata !9373, metadata !DIExpression()), !dbg !9374
  %42 = load i8*, i8** %row.addr, align 8, !dbg !9375
  store i8* %42, i8** %sp, align 8, !dbg !9376
  %43 = load i8*, i8** %row.addr, align 8, !dbg !9377
  store i8* %43, i8** %dp, align 8, !dbg !9378
  store i32 0, i32* %i, align 4, !dbg !9379
  br label %for.cond47, !dbg !9381

for.cond47:                                       ; preds = %for.inc71, %if.then42
  %44 = load i32, i32* %i, align 4, !dbg !9382
  %45 = load i32, i32* %row_width, align 4, !dbg !9384
  %cmp48 = icmp ult i32 %44, %45, !dbg !9385
  br i1 %cmp48, label %for.body50, label %for.end73, !dbg !9386

for.body50:                                       ; preds = %for.cond47
  %46 = load i8*, i8** %sp, align 8, !dbg !9387
  %incdec.ptr51 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !9387
  store i8* %incdec.ptr51, i8** %sp, align 8, !dbg !9387
  %47 = load i8, i8* %46, align 1, !dbg !9389
  %conv52 = zext i8 %47 to i32, !dbg !9389
  store i32 %conv52, i32* %r43, align 4, !dbg !9390
  %48 = load i8*, i8** %sp, align 8, !dbg !9391
  %incdec.ptr53 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !9391
  store i8* %incdec.ptr53, i8** %sp, align 8, !dbg !9391
  %49 = load i8, i8* %48, align 1, !dbg !9392
  %conv54 = zext i8 %49 to i32, !dbg !9392
  store i32 %conv54, i32* %g44, align 4, !dbg !9393
  %50 = load i8*, i8** %sp, align 8, !dbg !9394
  %incdec.ptr55 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !9394
  store i8* %incdec.ptr55, i8** %sp, align 8, !dbg !9394
  %51 = load i8, i8* %50, align 1, !dbg !9395
  %conv56 = zext i8 %51 to i32, !dbg !9395
  store i32 %conv56, i32* %b45, align 4, !dbg !9396
  %52 = load i8*, i8** %sp, align 8, !dbg !9397
  %incdec.ptr57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !9397
  store i8* %incdec.ptr57, i8** %sp, align 8, !dbg !9397
  %53 = load i32, i32* %r43, align 4, !dbg !9398
  %shr58 = ashr i32 %53, 3, !dbg !9399
  %and59 = and i32 %shr58, 31, !dbg !9400
  %shl60 = shl i32 %and59, 10, !dbg !9401
  %54 = load i32, i32* %g44, align 4, !dbg !9402
  %shr61 = ashr i32 %54, 3, !dbg !9403
  %and62 = and i32 %shr61, 31, !dbg !9404
  %shl63 = shl i32 %and62, 5, !dbg !9405
  %or64 = or i32 %shl60, %shl63, !dbg !9406
  %55 = load i32, i32* %b45, align 4, !dbg !9407
  %shr65 = ashr i32 %55, 3, !dbg !9408
  %and66 = and i32 %shr65, 31, !dbg !9409
  %or67 = or i32 %or64, %and66, !dbg !9410
  store i32 %or67, i32* %p46, align 4, !dbg !9411
  %56 = load i8*, i8** %palette_lookup.addr, align 8, !dbg !9412
  %57 = load i32, i32* %p46, align 4, !dbg !9413
  %idxprom68 = sext i32 %57 to i64, !dbg !9412
  %arrayidx69 = getelementptr inbounds i8, i8* %56, i64 %idxprom68, !dbg !9412
  %58 = load i8, i8* %arrayidx69, align 1, !dbg !9412
  %59 = load i8*, i8** %dp, align 8, !dbg !9414
  %incdec.ptr70 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !9414
  store i8* %incdec.ptr70, i8** %dp, align 8, !dbg !9414
  store i8 %58, i8* %59, align 1, !dbg !9415
  br label %for.inc71, !dbg !9416

for.inc71:                                        ; preds = %for.body50
  %60 = load i32, i32* %i, align 4, !dbg !9417
  %inc72 = add i32 %60, 1, !dbg !9417
  store i32 %inc72, i32* %i, align 4, !dbg !9417
  br label %for.cond47, !dbg !9418, !llvm.loop !9419

for.end73:                                        ; preds = %for.cond47
  %61 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9421
  %color_type74 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %61, i32 0, i32 2, !dbg !9422
  store i8 3, i8* %color_type74, align 8, !dbg !9423
  %62 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9424
  %channels75 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %62, i32 0, i32 4, !dbg !9425
  store i8 1, i8* %channels75, align 2, !dbg !9426
  %63 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9427
  %bit_depth76 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %63, i32 0, i32 3, !dbg !9428
  %64 = load i8, i8* %bit_depth76, align 1, !dbg !9428
  %65 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9429
  %pixel_depth77 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %65, i32 0, i32 5, !dbg !9430
  store i8 %64, i8* %pixel_depth77, align 1, !dbg !9431
  %66 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9432
  %pixel_depth78 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %66, i32 0, i32 5, !dbg !9432
  %67 = load i8, i8* %pixel_depth78, align 1, !dbg !9432
  %conv79 = zext i8 %67 to i32, !dbg !9432
  %cmp80 = icmp sge i32 %conv79, 8, !dbg !9432
  br i1 %cmp80, label %cond.true82, label %cond.false88, !dbg !9432

cond.true82:                                      ; preds = %for.end73
  %68 = load i32, i32* %row_width, align 4, !dbg !9432
  %conv83 = zext i32 %68 to i64, !dbg !9432
  %69 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9432
  %pixel_depth84 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %69, i32 0, i32 5, !dbg !9432
  %70 = load i8, i8* %pixel_depth84, align 1, !dbg !9432
  %conv85 = zext i8 %70 to i64, !dbg !9432
  %shr86 = lshr i64 %conv85, 3, !dbg !9432
  %mul87 = mul i64 %conv83, %shr86, !dbg !9432
  br label %cond.end95, !dbg !9432

cond.false88:                                     ; preds = %for.end73
  %71 = load i32, i32* %row_width, align 4, !dbg !9432
  %conv89 = zext i32 %71 to i64, !dbg !9432
  %72 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9432
  %pixel_depth90 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %72, i32 0, i32 5, !dbg !9432
  %73 = load i8, i8* %pixel_depth90, align 1, !dbg !9432
  %conv91 = zext i8 %73 to i64, !dbg !9432
  %mul92 = mul i64 %conv89, %conv91, !dbg !9432
  %add93 = add i64 %mul92, 7, !dbg !9432
  %shr94 = lshr i64 %add93, 3, !dbg !9432
  br label %cond.end95, !dbg !9432

cond.end95:                                       ; preds = %cond.false88, %cond.true82
  %cond96 = phi i64 [ %mul87, %cond.true82 ], [ %shr94, %cond.false88 ], !dbg !9432
  %74 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9433
  %rowbytes97 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %74, i32 0, i32 1, !dbg !9434
  store i64 %cond96, i64* %rowbytes97, align 8, !dbg !9435
  br label %if.end116, !dbg !9436

if.else98:                                        ; preds = %land.lhs.true39, %if.else
  %75 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9437
  %color_type99 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %75, i32 0, i32 2, !dbg !9439
  %76 = load i8, i8* %color_type99, align 8, !dbg !9439
  %conv100 = zext i8 %76 to i32, !dbg !9437
  %cmp101 = icmp eq i32 %conv100, 3, !dbg !9440
  br i1 %cmp101, label %land.lhs.true103, label %if.end, !dbg !9441

land.lhs.true103:                                 ; preds = %if.else98
  %77 = load i8*, i8** %quantize_lookup.addr, align 8, !dbg !9442
  %tobool104 = icmp ne i8* %77, null, !dbg !9442
  br i1 %tobool104, label %if.then105, label %if.end, !dbg !9443

if.then105:                                       ; preds = %land.lhs.true103
  %78 = load i8*, i8** %row.addr, align 8, !dbg !9444
  store i8* %78, i8** %sp, align 8, !dbg !9446
  store i32 0, i32* %i, align 4, !dbg !9447
  br label %for.cond106, !dbg !9449

for.cond106:                                      ; preds = %for.inc112, %if.then105
  %79 = load i32, i32* %i, align 4, !dbg !9450
  %80 = load i32, i32* %row_width, align 4, !dbg !9452
  %cmp107 = icmp ult i32 %79, %80, !dbg !9453
  br i1 %cmp107, label %for.body109, label %for.end115, !dbg !9454

for.body109:                                      ; preds = %for.cond106
  %81 = load i8*, i8** %quantize_lookup.addr, align 8, !dbg !9455
  %82 = load i8*, i8** %sp, align 8, !dbg !9457
  %83 = load i8, i8* %82, align 1, !dbg !9458
  %idxprom110 = zext i8 %83 to i64, !dbg !9455
  %arrayidx111 = getelementptr inbounds i8, i8* %81, i64 %idxprom110, !dbg !9455
  %84 = load i8, i8* %arrayidx111, align 1, !dbg !9455
  %85 = load i8*, i8** %sp, align 8, !dbg !9459
  store i8 %84, i8* %85, align 1, !dbg !9460
  br label %for.inc112, !dbg !9461

for.inc112:                                       ; preds = %for.body109
  %86 = load i32, i32* %i, align 4, !dbg !9462
  %inc113 = add i32 %86, 1, !dbg !9462
  store i32 %inc113, i32* %i, align 4, !dbg !9462
  %87 = load i8*, i8** %sp, align 8, !dbg !9463
  %incdec.ptr114 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !9463
  store i8* %incdec.ptr114, i8** %sp, align 8, !dbg !9463
  br label %for.cond106, !dbg !9464, !llvm.loop !9465

for.end115:                                       ; preds = %for.cond106
  br label %if.end, !dbg !9467

if.end:                                           ; preds = %for.end115, %land.lhs.true103, %if.else98
  br label %if.end116

if.end116:                                        ; preds = %if.end, %cond.end95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %cond.end
  br label %if.end118, !dbg !9468

if.end118:                                        ; preds = %if.end117, %entry
  ret void, !dbg !9469
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_expand_16(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !9470 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9471, metadata !DIExpression()), !dbg !9472
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9473, metadata !DIExpression()), !dbg !9474
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9475
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 3, !dbg !9477
  %1 = load i8, i8* %bit_depth, align 1, !dbg !9477
  %conv = zext i8 %1 to i32, !dbg !9475
  %cmp = icmp eq i32 %conv, 8, !dbg !9478
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9479

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9480
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !9481
  %3 = load i8, i8* %color_type, align 8, !dbg !9481
  %conv2 = zext i8 %3 to i32, !dbg !9480
  %cmp3 = icmp ne i32 %conv2, 3, !dbg !9482
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9483

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !9484, metadata !DIExpression()), !dbg !9486
  %4 = load i8*, i8** %row.addr, align 8, !dbg !9487
  %5 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9488
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %5, i32 0, i32 1, !dbg !9489
  %6 = load i64, i64* %rowbytes, align 8, !dbg !9489
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !9490
  store i8* %add.ptr, i8** %sp, align 8, !dbg !9486
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !9491, metadata !DIExpression()), !dbg !9492
  %7 = load i8*, i8** %sp, align 8, !dbg !9493
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9494
  %rowbytes5 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 1, !dbg !9495
  %9 = load i64, i64* %rowbytes5, align 8, !dbg !9495
  %add.ptr6 = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !9496
  store i8* %add.ptr6, i8** %dp, align 8, !dbg !9492
  br label %while.cond, !dbg !9497

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load i8*, i8** %dp, align 8, !dbg !9498
  %11 = load i8*, i8** %sp, align 8, !dbg !9499
  %cmp7 = icmp ugt i8* %10, %11, !dbg !9500
  br i1 %cmp7, label %while.body, label %while.end, !dbg !9497

while.body:                                       ; preds = %while.cond
  %12 = load i8*, i8** %sp, align 8, !dbg !9501
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 -1, !dbg !9501
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !9501
  %13 = load i8, i8* %incdec.ptr, align 1, !dbg !9502
  %14 = load i8*, i8** %dp, align 8, !dbg !9503
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !9503
  store i8 %13, i8* %arrayidx, align 1, !dbg !9504
  %15 = load i8*, i8** %dp, align 8, !dbg !9505
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i64 -2, !dbg !9505
  store i8 %13, i8* %arrayidx9, align 1, !dbg !9506
  %16 = load i8*, i8** %dp, align 8, !dbg !9507
  %add.ptr10 = getelementptr inbounds i8, i8* %16, i64 -2, !dbg !9507
  store i8* %add.ptr10, i8** %dp, align 8, !dbg !9507
  br label %while.cond, !dbg !9497, !llvm.loop !9508

while.end:                                        ; preds = %while.cond
  %17 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9510
  %rowbytes11 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %17, i32 0, i32 1, !dbg !9511
  %18 = load i64, i64* %rowbytes11, align 8, !dbg !9512
  %mul = mul i64 %18, 2, !dbg !9512
  store i64 %mul, i64* %rowbytes11, align 8, !dbg !9512
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9513
  %bit_depth12 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 3, !dbg !9514
  store i8 16, i8* %bit_depth12, align 1, !dbg !9515
  %20 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9516
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %20, i32 0, i32 4, !dbg !9517
  %21 = load i8, i8* %channels, align 2, !dbg !9517
  %conv13 = zext i8 %21 to i32, !dbg !9516
  %mul14 = mul nsw i32 %conv13, 16, !dbg !9518
  %conv15 = trunc i32 %mul14 to i8, !dbg !9519
  %22 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9520
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %22, i32 0, i32 5, !dbg !9521
  store i8 %conv15, i8* %pixel_depth, align 1, !dbg !9522
  br label %if.end, !dbg !9523

if.end:                                           ; preds = %while.end, %land.lhs.true, %entry
  ret void, !dbg !9524
}

declare dso_local void @png_do_invert(%struct.png_row_info_struct*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_unshift(%struct.png_row_info_struct* %row_info, i8* %row, %struct.png_color_8_struct* %sig_bits) #0 !dbg !9525 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %sig_bits.addr = alloca %struct.png_color_8_struct*, align 8
  %color_type = alloca i32, align 4
  %shift = alloca [4 x i32], align 16
  %channels = alloca i32, align 4
  %bit_depth = alloca i32, align 4
  %c = alloca i32, align 4
  %have_shift = alloca i32, align 4
  %bp = alloca i8*, align 8
  %bp_end = alloca i8*, align 8
  %b = alloca i32, align 4
  %bp56 = alloca i8*, align 8
  %bp_end57 = alloca i8*, align 8
  %gray_shift = alloca i32, align 4
  %mask = alloca i32, align 4
  %b66 = alloca i32, align 4
  %bp74 = alloca i8*, align 8
  %bp_end75 = alloca i8*, align 8
  %channel = alloca i32, align 4
  %b82 = alloca i32, align 4
  %bp96 = alloca i8*, align 8
  %bp_end97 = alloca i8*, align 8
  %channel100 = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9531, metadata !DIExpression()), !dbg !9532
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9533, metadata !DIExpression()), !dbg !9534
  store %struct.png_color_8_struct* %sig_bits, %struct.png_color_8_struct** %sig_bits.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_8_struct** %sig_bits.addr, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata i32* %color_type, metadata !9537, metadata !DIExpression()), !dbg !9538
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9539
  %color_type1 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 2, !dbg !9540
  %1 = load i8, i8* %color_type1, align 8, !dbg !9540
  %conv = zext i8 %1 to i32, !dbg !9539
  store i32 %conv, i32* %color_type, align 4, !dbg !9541
  %2 = load i32, i32* %color_type, align 4, !dbg !9542
  %cmp = icmp ne i32 %2, 3, !dbg !9544
  br i1 %cmp, label %if.then, label %if.end125, !dbg !9545

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i32]* %shift, metadata !9546, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !9550, metadata !DIExpression()), !dbg !9551
  store i32 0, i32* %channels, align 4, !dbg !9551
  call void @llvm.dbg.declare(metadata i32* %bit_depth, metadata !9552, metadata !DIExpression()), !dbg !9553
  %3 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9554
  %bit_depth3 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i32 0, i32 3, !dbg !9555
  %4 = load i8, i8* %bit_depth3, align 1, !dbg !9555
  %conv4 = zext i8 %4 to i32, !dbg !9554
  store i32 %conv4, i32* %bit_depth, align 4, !dbg !9553
  %5 = load i32, i32* %color_type, align 4, !dbg !9556
  %and = and i32 %5, 2, !dbg !9558
  %tobool = icmp ne i32 %and, 0, !dbg !9558
  br i1 %tobool, label %if.then5, label %if.else, !dbg !9559

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %bit_depth, align 4, !dbg !9560
  %7 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %sig_bits.addr, align 8, !dbg !9562
  %red = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %7, i32 0, i32 0, !dbg !9563
  %8 = load i8, i8* %red, align 1, !dbg !9563
  %conv6 = zext i8 %8 to i32, !dbg !9562
  %sub = sub nsw i32 %6, %conv6, !dbg !9564
  %9 = load i32, i32* %channels, align 4, !dbg !9565
  %inc = add nsw i32 %9, 1, !dbg !9565
  store i32 %inc, i32* %channels, align 4, !dbg !9565
  %idxprom = sext i32 %9 to i64, !dbg !9566
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom, !dbg !9566
  store i32 %sub, i32* %arrayidx, align 4, !dbg !9567
  %10 = load i32, i32* %bit_depth, align 4, !dbg !9568
  %11 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %sig_bits.addr, align 8, !dbg !9569
  %green = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %11, i32 0, i32 1, !dbg !9570
  %12 = load i8, i8* %green, align 1, !dbg !9570
  %conv7 = zext i8 %12 to i32, !dbg !9569
  %sub8 = sub nsw i32 %10, %conv7, !dbg !9571
  %13 = load i32, i32* %channels, align 4, !dbg !9572
  %inc9 = add nsw i32 %13, 1, !dbg !9572
  store i32 %inc9, i32* %channels, align 4, !dbg !9572
  %idxprom10 = sext i32 %13 to i64, !dbg !9573
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom10, !dbg !9573
  store i32 %sub8, i32* %arrayidx11, align 4, !dbg !9574
  %14 = load i32, i32* %bit_depth, align 4, !dbg !9575
  %15 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %sig_bits.addr, align 8, !dbg !9576
  %blue = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %15, i32 0, i32 2, !dbg !9577
  %16 = load i8, i8* %blue, align 1, !dbg !9577
  %conv12 = zext i8 %16 to i32, !dbg !9576
  %sub13 = sub nsw i32 %14, %conv12, !dbg !9578
  %17 = load i32, i32* %channels, align 4, !dbg !9579
  %inc14 = add nsw i32 %17, 1, !dbg !9579
  store i32 %inc14, i32* %channels, align 4, !dbg !9579
  %idxprom15 = sext i32 %17 to i64, !dbg !9580
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom15, !dbg !9580
  store i32 %sub13, i32* %arrayidx16, align 4, !dbg !9581
  br label %if.end, !dbg !9582

if.else:                                          ; preds = %if.then
  %18 = load i32, i32* %bit_depth, align 4, !dbg !9583
  %19 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %sig_bits.addr, align 8, !dbg !9585
  %gray = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %19, i32 0, i32 3, !dbg !9586
  %20 = load i8, i8* %gray, align 1, !dbg !9586
  %conv17 = zext i8 %20 to i32, !dbg !9585
  %sub18 = sub nsw i32 %18, %conv17, !dbg !9587
  %21 = load i32, i32* %channels, align 4, !dbg !9588
  %inc19 = add nsw i32 %21, 1, !dbg !9588
  store i32 %inc19, i32* %channels, align 4, !dbg !9588
  %idxprom20 = sext i32 %21 to i64, !dbg !9589
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom20, !dbg !9589
  store i32 %sub18, i32* %arrayidx21, align 4, !dbg !9590
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %22 = load i32, i32* %color_type, align 4, !dbg !9591
  %and22 = and i32 %22, 4, !dbg !9593
  %tobool23 = icmp ne i32 %and22, 0, !dbg !9593
  br i1 %tobool23, label %if.then24, label %if.end30, !dbg !9594

if.then24:                                        ; preds = %if.end
  %23 = load i32, i32* %bit_depth, align 4, !dbg !9595
  %24 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %sig_bits.addr, align 8, !dbg !9597
  %alpha = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %24, i32 0, i32 4, !dbg !9598
  %25 = load i8, i8* %alpha, align 1, !dbg !9598
  %conv25 = zext i8 %25 to i32, !dbg !9597
  %sub26 = sub nsw i32 %23, %conv25, !dbg !9599
  %26 = load i32, i32* %channels, align 4, !dbg !9600
  %inc27 = add nsw i32 %26, 1, !dbg !9600
  store i32 %inc27, i32* %channels, align 4, !dbg !9600
  %idxprom28 = sext i32 %26 to i64, !dbg !9601
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom28, !dbg !9601
  store i32 %sub26, i32* %arrayidx29, align 4, !dbg !9602
  br label %if.end30, !dbg !9603

if.end30:                                         ; preds = %if.then24, %if.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9604, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.declare(metadata i32* %have_shift, metadata !9607, metadata !DIExpression()), !dbg !9608
  store i32 0, i32* %have_shift, align 4, !dbg !9609
  store i32 0, i32* %c, align 4, !dbg !9611
  br label %for.cond, !dbg !9612

for.cond:                                         ; preds = %for.inc, %if.end30
  %27 = load i32, i32* %c, align 4, !dbg !9613
  %28 = load i32, i32* %channels, align 4, !dbg !9615
  %cmp31 = icmp slt i32 %27, %28, !dbg !9616
  br i1 %cmp31, label %for.body, label %for.end, !dbg !9617

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %c, align 4, !dbg !9618
  %idxprom33 = sext i32 %29 to i64, !dbg !9621
  %arrayidx34 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom33, !dbg !9621
  %30 = load i32, i32* %arrayidx34, align 4, !dbg !9621
  %cmp35 = icmp sle i32 %30, 0, !dbg !9622
  br i1 %cmp35, label %if.then41, label %lor.lhs.false, !dbg !9623

lor.lhs.false:                                    ; preds = %for.body
  %31 = load i32, i32* %c, align 4, !dbg !9624
  %idxprom37 = sext i32 %31 to i64, !dbg !9625
  %arrayidx38 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom37, !dbg !9625
  %32 = load i32, i32* %arrayidx38, align 4, !dbg !9625
  %33 = load i32, i32* %bit_depth, align 4, !dbg !9626
  %cmp39 = icmp sge i32 %32, %33, !dbg !9627
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !9628

if.then41:                                        ; preds = %lor.lhs.false, %for.body
  %34 = load i32, i32* %c, align 4, !dbg !9629
  %idxprom42 = sext i32 %34 to i64, !dbg !9630
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom42, !dbg !9630
  store i32 0, i32* %arrayidx43, align 4, !dbg !9631
  br label %if.end45, !dbg !9630

if.else44:                                        ; preds = %lor.lhs.false
  store i32 1, i32* %have_shift, align 4, !dbg !9632
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then41
  br label %for.inc, !dbg !9633

for.inc:                                          ; preds = %if.end45
  %35 = load i32, i32* %c, align 4, !dbg !9634
  %inc46 = add nsw i32 %35, 1, !dbg !9634
  store i32 %inc46, i32* %c, align 4, !dbg !9634
  br label %for.cond, !dbg !9635, !llvm.loop !9636

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %have_shift, align 4, !dbg !9638
  %tobool47 = icmp ne i32 %36, 0, !dbg !9638
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !9640

if.then48:                                        ; preds = %for.end
  br label %if.end125, !dbg !9641

if.end49:                                         ; preds = %for.end
  %37 = load i32, i32* %bit_depth, align 4, !dbg !9642
  switch i32 %37, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb55
    i32 8, label %sw.bb73
    i32 16, label %sw.bb95
  ], !dbg !9643

sw.default:                                       ; preds = %if.end49
  br label %sw.epilog, !dbg !9644

sw.bb:                                            ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !9646, metadata !DIExpression()), !dbg !9648
  %38 = load i8*, i8** %row.addr, align 8, !dbg !9649
  store i8* %38, i8** %bp, align 8, !dbg !9648
  call void @llvm.dbg.declare(metadata i8** %bp_end, metadata !9650, metadata !DIExpression()), !dbg !9651
  %39 = load i8*, i8** %bp, align 8, !dbg !9652
  %40 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9653
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %40, i32 0, i32 1, !dbg !9654
  %41 = load i64, i64* %rowbytes, align 8, !dbg !9654
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %41, !dbg !9655
  store i8* %add.ptr, i8** %bp_end, align 8, !dbg !9651
  br label %while.cond, !dbg !9656

while.cond:                                       ; preds = %while.body, %sw.bb
  %42 = load i8*, i8** %bp, align 8, !dbg !9657
  %43 = load i8*, i8** %bp_end, align 8, !dbg !9658
  %cmp50 = icmp ult i8* %42, %43, !dbg !9659
  br i1 %cmp50, label %while.body, label %while.end, !dbg !9656

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9660, metadata !DIExpression()), !dbg !9662
  %44 = load i8*, i8** %bp, align 8, !dbg !9663
  %45 = load i8, i8* %44, align 1, !dbg !9664
  %conv52 = zext i8 %45 to i32, !dbg !9664
  %shr = ashr i32 %conv52, 1, !dbg !9665
  %and53 = and i32 %shr, 85, !dbg !9666
  store i32 %and53, i32* %b, align 4, !dbg !9662
  %46 = load i32, i32* %b, align 4, !dbg !9667
  %conv54 = trunc i32 %46 to i8, !dbg !9668
  %47 = load i8*, i8** %bp, align 8, !dbg !9669
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !9669
  store i8* %incdec.ptr, i8** %bp, align 8, !dbg !9669
  store i8 %conv54, i8* %47, align 1, !dbg !9670
  br label %while.cond, !dbg !9656, !llvm.loop !9671

while.end:                                        ; preds = %while.cond
  br label %sw.epilog, !dbg !9673

sw.bb55:                                          ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %bp56, metadata !9674, metadata !DIExpression()), !dbg !9676
  %48 = load i8*, i8** %row.addr, align 8, !dbg !9677
  store i8* %48, i8** %bp56, align 8, !dbg !9676
  call void @llvm.dbg.declare(metadata i8** %bp_end57, metadata !9678, metadata !DIExpression()), !dbg !9679
  %49 = load i8*, i8** %bp56, align 8, !dbg !9680
  %50 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9681
  %rowbytes58 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %50, i32 0, i32 1, !dbg !9682
  %51 = load i64, i64* %rowbytes58, align 8, !dbg !9682
  %add.ptr59 = getelementptr inbounds i8, i8* %49, i64 %51, !dbg !9683
  store i8* %add.ptr59, i8** %bp_end57, align 8, !dbg !9679
  call void @llvm.dbg.declare(metadata i32* %gray_shift, metadata !9684, metadata !DIExpression()), !dbg !9685
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 0, !dbg !9686
  %52 = load i32, i32* %arrayidx60, align 16, !dbg !9686
  store i32 %52, i32* %gray_shift, align 4, !dbg !9685
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9687, metadata !DIExpression()), !dbg !9688
  %53 = load i32, i32* %gray_shift, align 4, !dbg !9689
  %shr61 = ashr i32 15, %53, !dbg !9690
  store i32 %shr61, i32* %mask, align 4, !dbg !9688
  %54 = load i32, i32* %mask, align 4, !dbg !9691
  %shl = shl i32 %54, 4, !dbg !9692
  %55 = load i32, i32* %mask, align 4, !dbg !9693
  %or = or i32 %55, %shl, !dbg !9693
  store i32 %or, i32* %mask, align 4, !dbg !9693
  br label %while.cond62, !dbg !9694

while.cond62:                                     ; preds = %while.body65, %sw.bb55
  %56 = load i8*, i8** %bp56, align 8, !dbg !9695
  %57 = load i8*, i8** %bp_end57, align 8, !dbg !9696
  %cmp63 = icmp ult i8* %56, %57, !dbg !9697
  br i1 %cmp63, label %while.body65, label %while.end72, !dbg !9694

while.body65:                                     ; preds = %while.cond62
  call void @llvm.dbg.declare(metadata i32* %b66, metadata !9698, metadata !DIExpression()), !dbg !9700
  %58 = load i8*, i8** %bp56, align 8, !dbg !9701
  %59 = load i8, i8* %58, align 1, !dbg !9702
  %conv67 = zext i8 %59 to i32, !dbg !9702
  %60 = load i32, i32* %gray_shift, align 4, !dbg !9703
  %shr68 = ashr i32 %conv67, %60, !dbg !9704
  %61 = load i32, i32* %mask, align 4, !dbg !9705
  %and69 = and i32 %shr68, %61, !dbg !9706
  store i32 %and69, i32* %b66, align 4, !dbg !9700
  %62 = load i32, i32* %b66, align 4, !dbg !9707
  %conv70 = trunc i32 %62 to i8, !dbg !9708
  %63 = load i8*, i8** %bp56, align 8, !dbg !9709
  %incdec.ptr71 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !9709
  store i8* %incdec.ptr71, i8** %bp56, align 8, !dbg !9709
  store i8 %conv70, i8* %63, align 1, !dbg !9710
  br label %while.cond62, !dbg !9694, !llvm.loop !9711

while.end72:                                      ; preds = %while.cond62
  br label %sw.epilog, !dbg !9713

sw.bb73:                                          ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %bp74, metadata !9714, metadata !DIExpression()), !dbg !9716
  %64 = load i8*, i8** %row.addr, align 8, !dbg !9717
  store i8* %64, i8** %bp74, align 8, !dbg !9716
  call void @llvm.dbg.declare(metadata i8** %bp_end75, metadata !9718, metadata !DIExpression()), !dbg !9719
  %65 = load i8*, i8** %bp74, align 8, !dbg !9720
  %66 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9721
  %rowbytes76 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %66, i32 0, i32 1, !dbg !9722
  %67 = load i64, i64* %rowbytes76, align 8, !dbg !9722
  %add.ptr77 = getelementptr inbounds i8, i8* %65, i64 %67, !dbg !9723
  store i8* %add.ptr77, i8** %bp_end75, align 8, !dbg !9719
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !9724, metadata !DIExpression()), !dbg !9725
  store i32 0, i32* %channel, align 4, !dbg !9725
  br label %while.cond78, !dbg !9726

while.cond78:                                     ; preds = %if.end91, %sw.bb73
  %68 = load i8*, i8** %bp74, align 8, !dbg !9727
  %69 = load i8*, i8** %bp_end75, align 8, !dbg !9728
  %cmp79 = icmp ult i8* %68, %69, !dbg !9729
  br i1 %cmp79, label %while.body81, label %while.end94, !dbg !9726

while.body81:                                     ; preds = %while.cond78
  call void @llvm.dbg.declare(metadata i32* %b82, metadata !9730, metadata !DIExpression()), !dbg !9732
  %70 = load i8*, i8** %bp74, align 8, !dbg !9733
  %71 = load i8, i8* %70, align 1, !dbg !9734
  %conv83 = zext i8 %71 to i32, !dbg !9734
  %72 = load i32, i32* %channel, align 4, !dbg !9735
  %idxprom84 = sext i32 %72 to i64, !dbg !9736
  %arrayidx85 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom84, !dbg !9736
  %73 = load i32, i32* %arrayidx85, align 4, !dbg !9736
  %shr86 = ashr i32 %conv83, %73, !dbg !9737
  store i32 %shr86, i32* %b82, align 4, !dbg !9732
  %74 = load i32, i32* %channel, align 4, !dbg !9738
  %inc87 = add nsw i32 %74, 1, !dbg !9738
  store i32 %inc87, i32* %channel, align 4, !dbg !9738
  %75 = load i32, i32* %channels, align 4, !dbg !9740
  %cmp88 = icmp sge i32 %inc87, %75, !dbg !9741
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !9742

if.then90:                                        ; preds = %while.body81
  store i32 0, i32* %channel, align 4, !dbg !9743
  br label %if.end91, !dbg !9744

if.end91:                                         ; preds = %if.then90, %while.body81
  %76 = load i32, i32* %b82, align 4, !dbg !9745
  %conv92 = trunc i32 %76 to i8, !dbg !9746
  %77 = load i8*, i8** %bp74, align 8, !dbg !9747
  %incdec.ptr93 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !9747
  store i8* %incdec.ptr93, i8** %bp74, align 8, !dbg !9747
  store i8 %conv92, i8* %77, align 1, !dbg !9748
  br label %while.cond78, !dbg !9726, !llvm.loop !9749

while.end94:                                      ; preds = %while.cond78
  br label %sw.epilog, !dbg !9751

sw.bb95:                                          ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %bp96, metadata !9752, metadata !DIExpression()), !dbg !9754
  %78 = load i8*, i8** %row.addr, align 8, !dbg !9755
  store i8* %78, i8** %bp96, align 8, !dbg !9754
  call void @llvm.dbg.declare(metadata i8** %bp_end97, metadata !9756, metadata !DIExpression()), !dbg !9757
  %79 = load i8*, i8** %bp96, align 8, !dbg !9758
  %80 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9759
  %rowbytes98 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %80, i32 0, i32 1, !dbg !9760
  %81 = load i64, i64* %rowbytes98, align 8, !dbg !9760
  %add.ptr99 = getelementptr inbounds i8, i8* %79, i64 %81, !dbg !9761
  store i8* %add.ptr99, i8** %bp_end97, align 8, !dbg !9757
  call void @llvm.dbg.declare(metadata i32* %channel100, metadata !9762, metadata !DIExpression()), !dbg !9763
  store i32 0, i32* %channel100, align 4, !dbg !9763
  br label %while.cond101, !dbg !9764

while.cond101:                                    ; preds = %if.end117, %sw.bb95
  %82 = load i8*, i8** %bp96, align 8, !dbg !9765
  %83 = load i8*, i8** %bp_end97, align 8, !dbg !9766
  %cmp102 = icmp ult i8* %82, %83, !dbg !9767
  br i1 %cmp102, label %while.body104, label %while.end124, !dbg !9764

while.body104:                                    ; preds = %while.cond101
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9768, metadata !DIExpression()), !dbg !9770
  %84 = load i8*, i8** %bp96, align 8, !dbg !9771
  %arrayidx105 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !9771
  %85 = load i8, i8* %arrayidx105, align 1, !dbg !9771
  %conv106 = zext i8 %85 to i32, !dbg !9771
  %shl107 = shl i32 %conv106, 8, !dbg !9772
  %86 = load i8*, i8** %bp96, align 8, !dbg !9773
  %arrayidx108 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !9773
  %87 = load i8, i8* %arrayidx108, align 1, !dbg !9773
  %conv109 = zext i8 %87 to i32, !dbg !9773
  %add = add nsw i32 %shl107, %conv109, !dbg !9774
  store i32 %add, i32* %value, align 4, !dbg !9770
  %88 = load i32, i32* %channel100, align 4, !dbg !9775
  %idxprom110 = sext i32 %88 to i64, !dbg !9776
  %arrayidx111 = getelementptr inbounds [4 x i32], [4 x i32]* %shift, i64 0, i64 %idxprom110, !dbg !9776
  %89 = load i32, i32* %arrayidx111, align 4, !dbg !9776
  %90 = load i32, i32* %value, align 4, !dbg !9777
  %shr112 = ashr i32 %90, %89, !dbg !9777
  store i32 %shr112, i32* %value, align 4, !dbg !9777
  %91 = load i32, i32* %channel100, align 4, !dbg !9778
  %inc113 = add nsw i32 %91, 1, !dbg !9778
  store i32 %inc113, i32* %channel100, align 4, !dbg !9778
  %92 = load i32, i32* %channels, align 4, !dbg !9780
  %cmp114 = icmp sge i32 %inc113, %92, !dbg !9781
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !9782

if.then116:                                       ; preds = %while.body104
  store i32 0, i32* %channel100, align 4, !dbg !9783
  br label %if.end117, !dbg !9784

if.end117:                                        ; preds = %if.then116, %while.body104
  %93 = load i32, i32* %value, align 4, !dbg !9785
  %shr118 = ashr i32 %93, 8, !dbg !9786
  %conv119 = trunc i32 %shr118 to i8, !dbg !9787
  %94 = load i8*, i8** %bp96, align 8, !dbg !9788
  %incdec.ptr120 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !9788
  store i8* %incdec.ptr120, i8** %bp96, align 8, !dbg !9788
  store i8 %conv119, i8* %94, align 1, !dbg !9789
  %95 = load i32, i32* %value, align 4, !dbg !9790
  %and121 = and i32 %95, 255, !dbg !9791
  %conv122 = trunc i32 %and121 to i8, !dbg !9792
  %96 = load i8*, i8** %bp96, align 8, !dbg !9793
  %incdec.ptr123 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !9793
  store i8* %incdec.ptr123, i8** %bp96, align 8, !dbg !9793
  store i8 %conv122, i8* %96, align 1, !dbg !9794
  br label %while.cond101, !dbg !9764, !llvm.loop !9795

while.end124:                                     ; preds = %while.cond101
  br label %sw.epilog, !dbg !9797

sw.epilog:                                        ; preds = %while.end124, %while.end94, %while.end72, %while.end, %sw.default
  br label %if.end125, !dbg !9798

if.end125:                                        ; preds = %if.then48, %sw.epilog, %entry
  ret void, !dbg !9799
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_unpack(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !9800 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %shift = alloca i32, align 4
  %sp21 = alloca i8*, align 8
  %dp26 = alloca i8*, align 8
  %shift30 = alloca i32, align 4
  %sp54 = alloca i8*, align 8
  %dp59 = alloca i8*, align 8
  %shift63 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !9801, metadata !DIExpression()), !dbg !9802
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !9803, metadata !DIExpression()), !dbg !9804
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9805
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 3, !dbg !9807
  %1 = load i8, i8* %bit_depth, align 1, !dbg !9807
  %conv = zext i8 %1 to i32, !dbg !9805
  %cmp = icmp slt i32 %conv, 8, !dbg !9808
  br i1 %cmp, label %if.then, label %if.end93, !dbg !9809

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9810, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !9813, metadata !DIExpression()), !dbg !9814
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9815
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 0, !dbg !9816
  %3 = load i32, i32* %width, align 8, !dbg !9816
  store i32 %3, i32* %row_width, align 4, !dbg !9814
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9817
  %bit_depth2 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !9818
  %5 = load i8, i8* %bit_depth2, align 1, !dbg !9818
  %conv3 = zext i8 %5 to i32, !dbg !9817
  switch i32 %conv3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb20
    i32 4, label %sw.bb53
  ], !dbg !9819

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !9820, metadata !DIExpression()), !dbg !9823
  %6 = load i8*, i8** %row.addr, align 8, !dbg !9824
  %7 = load i32, i32* %row_width, align 4, !dbg !9825
  %sub = sub i32 %7, 1, !dbg !9826
  %shr = lshr i32 %sub, 3, !dbg !9827
  %conv4 = zext i32 %shr to i64, !dbg !9828
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %conv4, !dbg !9829
  store i8* %add.ptr, i8** %sp, align 8, !dbg !9823
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !9830, metadata !DIExpression()), !dbg !9831
  %8 = load i8*, i8** %row.addr, align 8, !dbg !9832
  %9 = load i32, i32* %row_width, align 4, !dbg !9833
  %conv5 = zext i32 %9 to i64, !dbg !9834
  %add.ptr6 = getelementptr inbounds i8, i8* %8, i64 %conv5, !dbg !9835
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr6, i64 -1, !dbg !9836
  store i8* %add.ptr7, i8** %dp, align 8, !dbg !9831
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !9837, metadata !DIExpression()), !dbg !9838
  %10 = load i32, i32* %row_width, align 4, !dbg !9839
  %add = add i32 %10, 7, !dbg !9840
  %and = and i32 %add, 7, !dbg !9841
  %sub8 = sub nsw i32 7, %and, !dbg !9842
  store i32 %sub8, i32* %shift, align 4, !dbg !9838
  store i32 0, i32* %i, align 4, !dbg !9843
  br label %for.cond, !dbg !9845

for.cond:                                         ; preds = %for.inc, %sw.bb
  %11 = load i32, i32* %i, align 4, !dbg !9846
  %12 = load i32, i32* %row_width, align 4, !dbg !9848
  %cmp9 = icmp ult i32 %11, %12, !dbg !9849
  br i1 %cmp9, label %for.body, label %for.end, !dbg !9850

for.body:                                         ; preds = %for.cond
  %13 = load i8*, i8** %sp, align 8, !dbg !9851
  %14 = load i8, i8* %13, align 1, !dbg !9853
  %conv11 = zext i8 %14 to i32, !dbg !9853
  %15 = load i32, i32* %shift, align 4, !dbg !9854
  %shr12 = ashr i32 %conv11, %15, !dbg !9855
  %and13 = and i32 %shr12, 1, !dbg !9856
  %conv14 = trunc i32 %and13 to i8, !dbg !9857
  %16 = load i8*, i8** %dp, align 8, !dbg !9858
  store i8 %conv14, i8* %16, align 1, !dbg !9859
  %17 = load i32, i32* %shift, align 4, !dbg !9860
  %cmp15 = icmp eq i32 %17, 7, !dbg !9862
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !9863

if.then17:                                        ; preds = %for.body
  store i32 0, i32* %shift, align 4, !dbg !9864
  %18 = load i8*, i8** %sp, align 8, !dbg !9866
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !9866
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !9866
  br label %if.end, !dbg !9867

if.else:                                          ; preds = %for.body
  %19 = load i32, i32* %shift, align 4, !dbg !9868
  %inc = add i32 %19, 1, !dbg !9868
  store i32 %inc, i32* %shift, align 4, !dbg !9868
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %20 = load i8*, i8** %dp, align 8, !dbg !9869
  %incdec.ptr18 = getelementptr inbounds i8, i8* %20, i32 -1, !dbg !9869
  store i8* %incdec.ptr18, i8** %dp, align 8, !dbg !9869
  br label %for.inc, !dbg !9870

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !9871
  %inc19 = add i32 %21, 1, !dbg !9871
  store i32 %inc19, i32* %i, align 4, !dbg !9871
  br label %for.cond, !dbg !9872, !llvm.loop !9873

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !9875

sw.bb20:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp21, metadata !9876, metadata !DIExpression()), !dbg !9878
  %22 = load i8*, i8** %row.addr, align 8, !dbg !9879
  %23 = load i32, i32* %row_width, align 4, !dbg !9880
  %sub22 = sub i32 %23, 1, !dbg !9881
  %shr23 = lshr i32 %sub22, 2, !dbg !9882
  %conv24 = zext i32 %shr23 to i64, !dbg !9883
  %add.ptr25 = getelementptr inbounds i8, i8* %22, i64 %conv24, !dbg !9884
  store i8* %add.ptr25, i8** %sp21, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i8** %dp26, metadata !9885, metadata !DIExpression()), !dbg !9886
  %24 = load i8*, i8** %row.addr, align 8, !dbg !9887
  %25 = load i32, i32* %row_width, align 4, !dbg !9888
  %conv27 = zext i32 %25 to i64, !dbg !9889
  %add.ptr28 = getelementptr inbounds i8, i8* %24, i64 %conv27, !dbg !9890
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr28, i64 -1, !dbg !9891
  store i8* %add.ptr29, i8** %dp26, align 8, !dbg !9886
  call void @llvm.dbg.declare(metadata i32* %shift30, metadata !9892, metadata !DIExpression()), !dbg !9893
  %26 = load i32, i32* %row_width, align 4, !dbg !9894
  %add31 = add i32 %26, 3, !dbg !9895
  %and32 = and i32 %add31, 3, !dbg !9896
  %sub33 = sub i32 3, %and32, !dbg !9897
  %shl = shl i32 %sub33, 1, !dbg !9898
  store i32 %shl, i32* %shift30, align 4, !dbg !9893
  store i32 0, i32* %i, align 4, !dbg !9899
  br label %for.cond34, !dbg !9901

for.cond34:                                       ; preds = %for.inc50, %sw.bb20
  %27 = load i32, i32* %i, align 4, !dbg !9902
  %28 = load i32, i32* %row_width, align 4, !dbg !9904
  %cmp35 = icmp ult i32 %27, %28, !dbg !9905
  br i1 %cmp35, label %for.body37, label %for.end52, !dbg !9906

for.body37:                                       ; preds = %for.cond34
  %29 = load i8*, i8** %sp21, align 8, !dbg !9907
  %30 = load i8, i8* %29, align 1, !dbg !9909
  %conv38 = zext i8 %30 to i32, !dbg !9909
  %31 = load i32, i32* %shift30, align 4, !dbg !9910
  %shr39 = ashr i32 %conv38, %31, !dbg !9911
  %and40 = and i32 %shr39, 3, !dbg !9912
  %conv41 = trunc i32 %and40 to i8, !dbg !9913
  %32 = load i8*, i8** %dp26, align 8, !dbg !9914
  store i8 %conv41, i8* %32, align 1, !dbg !9915
  %33 = load i32, i32* %shift30, align 4, !dbg !9916
  %cmp42 = icmp eq i32 %33, 6, !dbg !9918
  br i1 %cmp42, label %if.then44, label %if.else46, !dbg !9919

if.then44:                                        ; preds = %for.body37
  store i32 0, i32* %shift30, align 4, !dbg !9920
  %34 = load i8*, i8** %sp21, align 8, !dbg !9922
  %incdec.ptr45 = getelementptr inbounds i8, i8* %34, i32 -1, !dbg !9922
  store i8* %incdec.ptr45, i8** %sp21, align 8, !dbg !9922
  br label %if.end48, !dbg !9923

if.else46:                                        ; preds = %for.body37
  %35 = load i32, i32* %shift30, align 4, !dbg !9924
  %add47 = add i32 %35, 2, !dbg !9924
  store i32 %add47, i32* %shift30, align 4, !dbg !9924
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then44
  %36 = load i8*, i8** %dp26, align 8, !dbg !9925
  %incdec.ptr49 = getelementptr inbounds i8, i8* %36, i32 -1, !dbg !9925
  store i8* %incdec.ptr49, i8** %dp26, align 8, !dbg !9925
  br label %for.inc50, !dbg !9926

for.inc50:                                        ; preds = %if.end48
  %37 = load i32, i32* %i, align 4, !dbg !9927
  %inc51 = add i32 %37, 1, !dbg !9927
  store i32 %inc51, i32* %i, align 4, !dbg !9927
  br label %for.cond34, !dbg !9928, !llvm.loop !9929

for.end52:                                        ; preds = %for.cond34
  br label %sw.epilog, !dbg !9931

sw.bb53:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp54, metadata !9932, metadata !DIExpression()), !dbg !9934
  %38 = load i8*, i8** %row.addr, align 8, !dbg !9935
  %39 = load i32, i32* %row_width, align 4, !dbg !9936
  %sub55 = sub i32 %39, 1, !dbg !9937
  %shr56 = lshr i32 %sub55, 1, !dbg !9938
  %conv57 = zext i32 %shr56 to i64, !dbg !9939
  %add.ptr58 = getelementptr inbounds i8, i8* %38, i64 %conv57, !dbg !9940
  store i8* %add.ptr58, i8** %sp54, align 8, !dbg !9934
  call void @llvm.dbg.declare(metadata i8** %dp59, metadata !9941, metadata !DIExpression()), !dbg !9942
  %40 = load i8*, i8** %row.addr, align 8, !dbg !9943
  %41 = load i32, i32* %row_width, align 4, !dbg !9944
  %conv60 = zext i32 %41 to i64, !dbg !9945
  %add.ptr61 = getelementptr inbounds i8, i8* %40, i64 %conv60, !dbg !9946
  %add.ptr62 = getelementptr inbounds i8, i8* %add.ptr61, i64 -1, !dbg !9947
  store i8* %add.ptr62, i8** %dp59, align 8, !dbg !9942
  call void @llvm.dbg.declare(metadata i32* %shift63, metadata !9948, metadata !DIExpression()), !dbg !9949
  %42 = load i32, i32* %row_width, align 4, !dbg !9950
  %add64 = add i32 %42, 1, !dbg !9951
  %and65 = and i32 %add64, 1, !dbg !9952
  %sub66 = sub i32 1, %and65, !dbg !9953
  %shl67 = shl i32 %sub66, 2, !dbg !9954
  store i32 %shl67, i32* %shift63, align 4, !dbg !9949
  store i32 0, i32* %i, align 4, !dbg !9955
  br label %for.cond68, !dbg !9957

for.cond68:                                       ; preds = %for.inc83, %sw.bb53
  %43 = load i32, i32* %i, align 4, !dbg !9958
  %44 = load i32, i32* %row_width, align 4, !dbg !9960
  %cmp69 = icmp ult i32 %43, %44, !dbg !9961
  br i1 %cmp69, label %for.body71, label %for.end85, !dbg !9962

for.body71:                                       ; preds = %for.cond68
  %45 = load i8*, i8** %sp54, align 8, !dbg !9963
  %46 = load i8, i8* %45, align 1, !dbg !9965
  %conv72 = zext i8 %46 to i32, !dbg !9965
  %47 = load i32, i32* %shift63, align 4, !dbg !9966
  %shr73 = ashr i32 %conv72, %47, !dbg !9967
  %and74 = and i32 %shr73, 15, !dbg !9968
  %conv75 = trunc i32 %and74 to i8, !dbg !9969
  %48 = load i8*, i8** %dp59, align 8, !dbg !9970
  store i8 %conv75, i8* %48, align 1, !dbg !9971
  %49 = load i32, i32* %shift63, align 4, !dbg !9972
  %cmp76 = icmp eq i32 %49, 4, !dbg !9974
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !9975

if.then78:                                        ; preds = %for.body71
  store i32 0, i32* %shift63, align 4, !dbg !9976
  %50 = load i8*, i8** %sp54, align 8, !dbg !9978
  %incdec.ptr79 = getelementptr inbounds i8, i8* %50, i32 -1, !dbg !9978
  store i8* %incdec.ptr79, i8** %sp54, align 8, !dbg !9978
  br label %if.end81, !dbg !9979

if.else80:                                        ; preds = %for.body71
  store i32 4, i32* %shift63, align 4, !dbg !9980
  br label %if.end81

if.end81:                                         ; preds = %if.else80, %if.then78
  %51 = load i8*, i8** %dp59, align 8, !dbg !9981
  %incdec.ptr82 = getelementptr inbounds i8, i8* %51, i32 -1, !dbg !9981
  store i8* %incdec.ptr82, i8** %dp59, align 8, !dbg !9981
  br label %for.inc83, !dbg !9982

for.inc83:                                        ; preds = %if.end81
  %52 = load i32, i32* %i, align 4, !dbg !9983
  %inc84 = add i32 %52, 1, !dbg !9983
  store i32 %inc84, i32* %i, align 4, !dbg !9983
  br label %for.cond68, !dbg !9984, !llvm.loop !9985

for.end85:                                        ; preds = %for.cond68
  br label %sw.epilog, !dbg !9987

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !9988

sw.epilog:                                        ; preds = %sw.default, %for.end85, %for.end52, %for.end
  %53 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9989
  %bit_depth86 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %53, i32 0, i32 3, !dbg !9990
  store i8 8, i8* %bit_depth86, align 1, !dbg !9991
  %54 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9992
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %54, i32 0, i32 4, !dbg !9993
  %55 = load i8, i8* %channels, align 2, !dbg !9993
  %conv87 = zext i8 %55 to i32, !dbg !9992
  %mul = mul nsw i32 8, %conv87, !dbg !9994
  %conv88 = trunc i32 %mul to i8, !dbg !9995
  %56 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !9996
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %56, i32 0, i32 5, !dbg !9997
  store i8 %conv88, i8* %pixel_depth, align 1, !dbg !9998
  %57 = load i32, i32* %row_width, align 4, !dbg !9999
  %58 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10000
  %channels89 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %58, i32 0, i32 4, !dbg !10001
  %59 = load i8, i8* %channels89, align 2, !dbg !10001
  %conv90 = zext i8 %59 to i32, !dbg !10000
  %mul91 = mul i32 %57, %conv90, !dbg !10002
  %conv92 = zext i32 %mul91 to i64, !dbg !9999
  %60 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10003
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %60, i32 0, i32 1, !dbg !10004
  store i64 %conv92, i64* %rowbytes, align 8, !dbg !10005
  br label %if.end93, !dbg !10006

if.end93:                                         ; preds = %sw.epilog, %entry
  ret void, !dbg !10007
}

declare dso_local void @png_do_check_palette_indexes(%struct.png_struct_def*, %struct.png_row_info_struct*) #2

declare dso_local void @png_do_bgr(%struct.png_row_info_struct*, i8*) #2

declare dso_local void @png_do_packswap(%struct.png_row_info_struct*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_filler(%struct.png_row_info_struct* %row_info, i8* %row, i32 %filler, i32 %flags) #0 !dbg !10008 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %filler.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %row_width = alloca i32, align 4
  %hi_filler = alloca i8, align 1
  %lo_filler = alloca i8, align 1
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %sp20 = alloca i8*, align 8
  %dp23 = alloca i8*, align 8
  %sp50 = alloca i8*, align 8
  %dp54 = alloca i8*, align 8
  %sp79 = alloca i8*, align 8
  %dp83 = alloca i8*, align 8
  %sp122 = alloca i8*, align 8
  %dp126 = alloca i8*, align 8
  %sp150 = alloca i8*, align 8
  %dp154 = alloca i8*, align 8
  %sp186 = alloca i8*, align 8
  %dp190 = alloca i8*, align 8
  %sp223 = alloca i8*, align 8
  %dp227 = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !10011, metadata !DIExpression()), !dbg !10012
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !10013, metadata !DIExpression()), !dbg !10014
  store i32 %filler, i32* %filler.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filler.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !10021, metadata !DIExpression()), !dbg !10022
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10023
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !10024
  %1 = load i32, i32* %width, align 8, !dbg !10024
  store i32 %1, i32* %row_width, align 4, !dbg !10022
  call void @llvm.dbg.declare(metadata i8* %hi_filler, metadata !10025, metadata !DIExpression()), !dbg !10026
  %2 = load i32, i32* %filler.addr, align 4, !dbg !10027
  %shr = lshr i32 %2, 8, !dbg !10028
  %and = and i32 %shr, 255, !dbg !10029
  %conv = trunc i32 %and to i8, !dbg !10030
  store i8 %conv, i8* %hi_filler, align 1, !dbg !10026
  call void @llvm.dbg.declare(metadata i8* %lo_filler, metadata !10031, metadata !DIExpression()), !dbg !10032
  %3 = load i32, i32* %filler.addr, align 4, !dbg !10033
  %and1 = and i32 %3, 255, !dbg !10034
  %conv2 = trunc i32 %and1 to i8, !dbg !10035
  store i8 %conv2, i8* %lo_filler, align 1, !dbg !10032
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10036
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 2, !dbg !10038
  %5 = load i8, i8* %color_type, align 8, !dbg !10038
  %conv3 = zext i8 %5 to i32, !dbg !10036
  %cmp = icmp eq i32 %conv3, 0, !dbg !10039
  br i1 %cmp, label %if.then, label %if.else108, !dbg !10040

if.then:                                          ; preds = %entry
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10041
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 3, !dbg !10044
  %7 = load i8, i8* %bit_depth, align 1, !dbg !10044
  %conv5 = zext i8 %7 to i32, !dbg !10041
  %cmp6 = icmp eq i32 %conv5, 8, !dbg !10045
  br i1 %cmp6, label %if.then8, label %if.else41, !dbg !10046

if.then8:                                         ; preds = %if.then
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10047
  %and9 = and i32 %8, 128, !dbg !10050
  %tobool = icmp ne i32 %and9, 0, !dbg !10050
  br i1 %tobool, label %if.then10, label %if.else, !dbg !10051

if.then10:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !10052, metadata !DIExpression()), !dbg !10054
  %9 = load i8*, i8** %row.addr, align 8, !dbg !10055
  %10 = load i32, i32* %row_width, align 4, !dbg !10056
  %conv11 = zext i32 %10 to i64, !dbg !10057
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %conv11, !dbg !10058
  store i8* %add.ptr, i8** %sp, align 8, !dbg !10054
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !10059, metadata !DIExpression()), !dbg !10060
  %11 = load i8*, i8** %sp, align 8, !dbg !10061
  %12 = load i32, i32* %row_width, align 4, !dbg !10062
  %conv12 = zext i32 %12 to i64, !dbg !10063
  %add.ptr13 = getelementptr inbounds i8, i8* %11, i64 %conv12, !dbg !10064
  store i8* %add.ptr13, i8** %dp, align 8, !dbg !10060
  store i32 1, i32* %i, align 4, !dbg !10065
  br label %for.cond, !dbg !10067

for.cond:                                         ; preds = %for.inc, %if.then10
  %13 = load i32, i32* %i, align 4, !dbg !10068
  %14 = load i32, i32* %row_width, align 4, !dbg !10070
  %cmp14 = icmp ult i32 %13, %14, !dbg !10071
  br i1 %cmp14, label %for.body, label %for.end, !dbg !10072

for.body:                                         ; preds = %for.cond
  %15 = load i8, i8* %lo_filler, align 1, !dbg !10073
  %16 = load i8*, i8** %dp, align 8, !dbg !10075
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 -1, !dbg !10075
  store i8* %incdec.ptr, i8** %dp, align 8, !dbg !10075
  store i8 %15, i8* %incdec.ptr, align 1, !dbg !10076
  %17 = load i8*, i8** %sp, align 8, !dbg !10077
  %incdec.ptr16 = getelementptr inbounds i8, i8* %17, i32 -1, !dbg !10077
  store i8* %incdec.ptr16, i8** %sp, align 8, !dbg !10077
  %18 = load i8, i8* %incdec.ptr16, align 1, !dbg !10078
  %19 = load i8*, i8** %dp, align 8, !dbg !10079
  %incdec.ptr17 = getelementptr inbounds i8, i8* %19, i32 -1, !dbg !10079
  store i8* %incdec.ptr17, i8** %dp, align 8, !dbg !10079
  store i8 %18, i8* %incdec.ptr17, align 1, !dbg !10080
  br label %for.inc, !dbg !10081

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !10082
  %inc = add i32 %20, 1, !dbg !10082
  store i32 %inc, i32* %i, align 4, !dbg !10082
  br label %for.cond, !dbg !10083, !llvm.loop !10084

for.end:                                          ; preds = %for.cond
  %21 = load i8, i8* %lo_filler, align 1, !dbg !10086
  %22 = load i8*, i8** %dp, align 8, !dbg !10087
  %incdec.ptr18 = getelementptr inbounds i8, i8* %22, i32 -1, !dbg !10087
  store i8* %incdec.ptr18, i8** %dp, align 8, !dbg !10087
  store i8 %21, i8* %incdec.ptr18, align 1, !dbg !10088
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10089
  %channels = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 4, !dbg !10090
  store i8 2, i8* %channels, align 2, !dbg !10091
  %24 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10092
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %24, i32 0, i32 5, !dbg !10093
  store i8 16, i8* %pixel_depth, align 1, !dbg !10094
  %25 = load i32, i32* %row_width, align 4, !dbg !10095
  %mul = mul i32 %25, 2, !dbg !10096
  %conv19 = zext i32 %mul to i64, !dbg !10095
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10097
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 1, !dbg !10098
  store i64 %conv19, i64* %rowbytes, align 8, !dbg !10099
  br label %if.end, !dbg !10100

if.else:                                          ; preds = %if.then8
  call void @llvm.dbg.declare(metadata i8** %sp20, metadata !10101, metadata !DIExpression()), !dbg !10103
  %27 = load i8*, i8** %row.addr, align 8, !dbg !10104
  %28 = load i32, i32* %row_width, align 4, !dbg !10105
  %conv21 = zext i32 %28 to i64, !dbg !10106
  %add.ptr22 = getelementptr inbounds i8, i8* %27, i64 %conv21, !dbg !10107
  store i8* %add.ptr22, i8** %sp20, align 8, !dbg !10103
  call void @llvm.dbg.declare(metadata i8** %dp23, metadata !10108, metadata !DIExpression()), !dbg !10109
  %29 = load i8*, i8** %sp20, align 8, !dbg !10110
  %30 = load i32, i32* %row_width, align 4, !dbg !10111
  %conv24 = zext i32 %30 to i64, !dbg !10112
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 %conv24, !dbg !10113
  store i8* %add.ptr25, i8** %dp23, align 8, !dbg !10109
  store i32 0, i32* %i, align 4, !dbg !10114
  br label %for.cond26, !dbg !10116

for.cond26:                                       ; preds = %for.inc33, %if.else
  %31 = load i32, i32* %i, align 4, !dbg !10117
  %32 = load i32, i32* %row_width, align 4, !dbg !10119
  %cmp27 = icmp ult i32 %31, %32, !dbg !10120
  br i1 %cmp27, label %for.body29, label %for.end35, !dbg !10121

for.body29:                                       ; preds = %for.cond26
  %33 = load i8*, i8** %sp20, align 8, !dbg !10122
  %incdec.ptr30 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !10122
  store i8* %incdec.ptr30, i8** %sp20, align 8, !dbg !10122
  %34 = load i8, i8* %incdec.ptr30, align 1, !dbg !10124
  %35 = load i8*, i8** %dp23, align 8, !dbg !10125
  %incdec.ptr31 = getelementptr inbounds i8, i8* %35, i32 -1, !dbg !10125
  store i8* %incdec.ptr31, i8** %dp23, align 8, !dbg !10125
  store i8 %34, i8* %incdec.ptr31, align 1, !dbg !10126
  %36 = load i8, i8* %lo_filler, align 1, !dbg !10127
  %37 = load i8*, i8** %dp23, align 8, !dbg !10128
  %incdec.ptr32 = getelementptr inbounds i8, i8* %37, i32 -1, !dbg !10128
  store i8* %incdec.ptr32, i8** %dp23, align 8, !dbg !10128
  store i8 %36, i8* %incdec.ptr32, align 1, !dbg !10129
  br label %for.inc33, !dbg !10130

for.inc33:                                        ; preds = %for.body29
  %38 = load i32, i32* %i, align 4, !dbg !10131
  %inc34 = add i32 %38, 1, !dbg !10131
  store i32 %inc34, i32* %i, align 4, !dbg !10131
  br label %for.cond26, !dbg !10132, !llvm.loop !10133

for.end35:                                        ; preds = %for.cond26
  %39 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10135
  %channels36 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %39, i32 0, i32 4, !dbg !10136
  store i8 2, i8* %channels36, align 2, !dbg !10137
  %40 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10138
  %pixel_depth37 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %40, i32 0, i32 5, !dbg !10139
  store i8 16, i8* %pixel_depth37, align 1, !dbg !10140
  %41 = load i32, i32* %row_width, align 4, !dbg !10141
  %mul38 = mul i32 %41, 2, !dbg !10142
  %conv39 = zext i32 %mul38 to i64, !dbg !10141
  %42 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10143
  %rowbytes40 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %42, i32 0, i32 1, !dbg !10144
  store i64 %conv39, i64* %rowbytes40, align 8, !dbg !10145
  br label %if.end

if.end:                                           ; preds = %for.end35, %for.end
  br label %if.end107, !dbg !10146

if.else41:                                        ; preds = %if.then
  %43 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10147
  %bit_depth42 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %43, i32 0, i32 3, !dbg !10149
  %44 = load i8, i8* %bit_depth42, align 1, !dbg !10149
  %conv43 = zext i8 %44 to i32, !dbg !10147
  %cmp44 = icmp eq i32 %conv43, 16, !dbg !10150
  br i1 %cmp44, label %if.then46, label %if.end106, !dbg !10151

if.then46:                                        ; preds = %if.else41
  %45 = load i32, i32* %flags.addr, align 4, !dbg !10152
  %and47 = and i32 %45, 128, !dbg !10155
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10155
  br i1 %tobool48, label %if.then49, label %if.else78, !dbg !10156

if.then49:                                        ; preds = %if.then46
  call void @llvm.dbg.declare(metadata i8** %sp50, metadata !10157, metadata !DIExpression()), !dbg !10159
  %46 = load i8*, i8** %row.addr, align 8, !dbg !10160
  %47 = load i32, i32* %row_width, align 4, !dbg !10161
  %conv51 = zext i32 %47 to i64, !dbg !10162
  %mul52 = mul i64 %conv51, 2, !dbg !10163
  %add.ptr53 = getelementptr inbounds i8, i8* %46, i64 %mul52, !dbg !10164
  store i8* %add.ptr53, i8** %sp50, align 8, !dbg !10159
  call void @llvm.dbg.declare(metadata i8** %dp54, metadata !10165, metadata !DIExpression()), !dbg !10166
  %48 = load i8*, i8** %sp50, align 8, !dbg !10167
  %49 = load i32, i32* %row_width, align 4, !dbg !10168
  %conv55 = zext i32 %49 to i64, !dbg !10169
  %mul56 = mul i64 %conv55, 2, !dbg !10170
  %add.ptr57 = getelementptr inbounds i8, i8* %48, i64 %mul56, !dbg !10171
  store i8* %add.ptr57, i8** %dp54, align 8, !dbg !10166
  store i32 1, i32* %i, align 4, !dbg !10172
  br label %for.cond58, !dbg !10174

for.cond58:                                       ; preds = %for.inc68, %if.then49
  %50 = load i32, i32* %i, align 4, !dbg !10175
  %51 = load i32, i32* %row_width, align 4, !dbg !10177
  %cmp59 = icmp ult i32 %50, %51, !dbg !10178
  br i1 %cmp59, label %for.body61, label %for.end70, !dbg !10179

for.body61:                                       ; preds = %for.cond58
  %52 = load i8, i8* %hi_filler, align 1, !dbg !10180
  %53 = load i8*, i8** %dp54, align 8, !dbg !10182
  %incdec.ptr62 = getelementptr inbounds i8, i8* %53, i32 -1, !dbg !10182
  store i8* %incdec.ptr62, i8** %dp54, align 8, !dbg !10182
  store i8 %52, i8* %incdec.ptr62, align 1, !dbg !10183
  %54 = load i8, i8* %lo_filler, align 1, !dbg !10184
  %55 = load i8*, i8** %dp54, align 8, !dbg !10185
  %incdec.ptr63 = getelementptr inbounds i8, i8* %55, i32 -1, !dbg !10185
  store i8* %incdec.ptr63, i8** %dp54, align 8, !dbg !10185
  store i8 %54, i8* %incdec.ptr63, align 1, !dbg !10186
  %56 = load i8*, i8** %sp50, align 8, !dbg !10187
  %incdec.ptr64 = getelementptr inbounds i8, i8* %56, i32 -1, !dbg !10187
  store i8* %incdec.ptr64, i8** %sp50, align 8, !dbg !10187
  %57 = load i8, i8* %incdec.ptr64, align 1, !dbg !10188
  %58 = load i8*, i8** %dp54, align 8, !dbg !10189
  %incdec.ptr65 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !10189
  store i8* %incdec.ptr65, i8** %dp54, align 8, !dbg !10189
  store i8 %57, i8* %incdec.ptr65, align 1, !dbg !10190
  %59 = load i8*, i8** %sp50, align 8, !dbg !10191
  %incdec.ptr66 = getelementptr inbounds i8, i8* %59, i32 -1, !dbg !10191
  store i8* %incdec.ptr66, i8** %sp50, align 8, !dbg !10191
  %60 = load i8, i8* %incdec.ptr66, align 1, !dbg !10192
  %61 = load i8*, i8** %dp54, align 8, !dbg !10193
  %incdec.ptr67 = getelementptr inbounds i8, i8* %61, i32 -1, !dbg !10193
  store i8* %incdec.ptr67, i8** %dp54, align 8, !dbg !10193
  store i8 %60, i8* %incdec.ptr67, align 1, !dbg !10194
  br label %for.inc68, !dbg !10195

for.inc68:                                        ; preds = %for.body61
  %62 = load i32, i32* %i, align 4, !dbg !10196
  %inc69 = add i32 %62, 1, !dbg !10196
  store i32 %inc69, i32* %i, align 4, !dbg !10196
  br label %for.cond58, !dbg !10197, !llvm.loop !10198

for.end70:                                        ; preds = %for.cond58
  %63 = load i8, i8* %hi_filler, align 1, !dbg !10200
  %64 = load i8*, i8** %dp54, align 8, !dbg !10201
  %incdec.ptr71 = getelementptr inbounds i8, i8* %64, i32 -1, !dbg !10201
  store i8* %incdec.ptr71, i8** %dp54, align 8, !dbg !10201
  store i8 %63, i8* %incdec.ptr71, align 1, !dbg !10202
  %65 = load i8, i8* %lo_filler, align 1, !dbg !10203
  %66 = load i8*, i8** %dp54, align 8, !dbg !10204
  %incdec.ptr72 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !10204
  store i8* %incdec.ptr72, i8** %dp54, align 8, !dbg !10204
  store i8 %65, i8* %incdec.ptr72, align 1, !dbg !10205
  %67 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10206
  %channels73 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %67, i32 0, i32 4, !dbg !10207
  store i8 2, i8* %channels73, align 2, !dbg !10208
  %68 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10209
  %pixel_depth74 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %68, i32 0, i32 5, !dbg !10210
  store i8 32, i8* %pixel_depth74, align 1, !dbg !10211
  %69 = load i32, i32* %row_width, align 4, !dbg !10212
  %mul75 = mul i32 %69, 4, !dbg !10213
  %conv76 = zext i32 %mul75 to i64, !dbg !10212
  %70 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10214
  %rowbytes77 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %70, i32 0, i32 1, !dbg !10215
  store i64 %conv76, i64* %rowbytes77, align 8, !dbg !10216
  br label %if.end105, !dbg !10217

if.else78:                                        ; preds = %if.then46
  call void @llvm.dbg.declare(metadata i8** %sp79, metadata !10218, metadata !DIExpression()), !dbg !10220
  %71 = load i8*, i8** %row.addr, align 8, !dbg !10221
  %72 = load i32, i32* %row_width, align 4, !dbg !10222
  %conv80 = zext i32 %72 to i64, !dbg !10223
  %mul81 = mul i64 %conv80, 2, !dbg !10224
  %add.ptr82 = getelementptr inbounds i8, i8* %71, i64 %mul81, !dbg !10225
  store i8* %add.ptr82, i8** %sp79, align 8, !dbg !10220
  call void @llvm.dbg.declare(metadata i8** %dp83, metadata !10226, metadata !DIExpression()), !dbg !10227
  %73 = load i8*, i8** %sp79, align 8, !dbg !10228
  %74 = load i32, i32* %row_width, align 4, !dbg !10229
  %conv84 = zext i32 %74 to i64, !dbg !10230
  %mul85 = mul i64 %conv84, 2, !dbg !10231
  %add.ptr86 = getelementptr inbounds i8, i8* %73, i64 %mul85, !dbg !10232
  store i8* %add.ptr86, i8** %dp83, align 8, !dbg !10227
  store i32 0, i32* %i, align 4, !dbg !10233
  br label %for.cond87, !dbg !10235

for.cond87:                                       ; preds = %for.inc97, %if.else78
  %75 = load i32, i32* %i, align 4, !dbg !10236
  %76 = load i32, i32* %row_width, align 4, !dbg !10238
  %cmp88 = icmp ult i32 %75, %76, !dbg !10239
  br i1 %cmp88, label %for.body90, label %for.end99, !dbg !10240

for.body90:                                       ; preds = %for.cond87
  %77 = load i8*, i8** %sp79, align 8, !dbg !10241
  %incdec.ptr91 = getelementptr inbounds i8, i8* %77, i32 -1, !dbg !10241
  store i8* %incdec.ptr91, i8** %sp79, align 8, !dbg !10241
  %78 = load i8, i8* %incdec.ptr91, align 1, !dbg !10243
  %79 = load i8*, i8** %dp83, align 8, !dbg !10244
  %incdec.ptr92 = getelementptr inbounds i8, i8* %79, i32 -1, !dbg !10244
  store i8* %incdec.ptr92, i8** %dp83, align 8, !dbg !10244
  store i8 %78, i8* %incdec.ptr92, align 1, !dbg !10245
  %80 = load i8*, i8** %sp79, align 8, !dbg !10246
  %incdec.ptr93 = getelementptr inbounds i8, i8* %80, i32 -1, !dbg !10246
  store i8* %incdec.ptr93, i8** %sp79, align 8, !dbg !10246
  %81 = load i8, i8* %incdec.ptr93, align 1, !dbg !10247
  %82 = load i8*, i8** %dp83, align 8, !dbg !10248
  %incdec.ptr94 = getelementptr inbounds i8, i8* %82, i32 -1, !dbg !10248
  store i8* %incdec.ptr94, i8** %dp83, align 8, !dbg !10248
  store i8 %81, i8* %incdec.ptr94, align 1, !dbg !10249
  %83 = load i8, i8* %hi_filler, align 1, !dbg !10250
  %84 = load i8*, i8** %dp83, align 8, !dbg !10251
  %incdec.ptr95 = getelementptr inbounds i8, i8* %84, i32 -1, !dbg !10251
  store i8* %incdec.ptr95, i8** %dp83, align 8, !dbg !10251
  store i8 %83, i8* %incdec.ptr95, align 1, !dbg !10252
  %85 = load i8, i8* %lo_filler, align 1, !dbg !10253
  %86 = load i8*, i8** %dp83, align 8, !dbg !10254
  %incdec.ptr96 = getelementptr inbounds i8, i8* %86, i32 -1, !dbg !10254
  store i8* %incdec.ptr96, i8** %dp83, align 8, !dbg !10254
  store i8 %85, i8* %incdec.ptr96, align 1, !dbg !10255
  br label %for.inc97, !dbg !10256

for.inc97:                                        ; preds = %for.body90
  %87 = load i32, i32* %i, align 4, !dbg !10257
  %inc98 = add i32 %87, 1, !dbg !10257
  store i32 %inc98, i32* %i, align 4, !dbg !10257
  br label %for.cond87, !dbg !10258, !llvm.loop !10259

for.end99:                                        ; preds = %for.cond87
  %88 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10261
  %channels100 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %88, i32 0, i32 4, !dbg !10262
  store i8 2, i8* %channels100, align 2, !dbg !10263
  %89 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10264
  %pixel_depth101 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %89, i32 0, i32 5, !dbg !10265
  store i8 32, i8* %pixel_depth101, align 1, !dbg !10266
  %90 = load i32, i32* %row_width, align 4, !dbg !10267
  %mul102 = mul i32 %90, 4, !dbg !10268
  %conv103 = zext i32 %mul102 to i64, !dbg !10267
  %91 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10269
  %rowbytes104 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %91, i32 0, i32 1, !dbg !10270
  store i64 %conv103, i64* %rowbytes104, align 8, !dbg !10271
  br label %if.end105

if.end105:                                        ; preds = %for.end99, %for.end70
  br label %if.end106, !dbg !10272

if.end106:                                        ; preds = %if.end105, %if.else41
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end
  br label %if.end261, !dbg !10273

if.else108:                                       ; preds = %entry
  %92 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10274
  %color_type109 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %92, i32 0, i32 2, !dbg !10276
  %93 = load i8, i8* %color_type109, align 8, !dbg !10276
  %conv110 = zext i8 %93 to i32, !dbg !10274
  %cmp111 = icmp eq i32 %conv110, 2, !dbg !10277
  br i1 %cmp111, label %if.then113, label %if.end260, !dbg !10278

if.then113:                                       ; preds = %if.else108
  %94 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10279
  %bit_depth114 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %94, i32 0, i32 3, !dbg !10282
  %95 = load i8, i8* %bit_depth114, align 1, !dbg !10282
  %conv115 = zext i8 %95 to i32, !dbg !10279
  %cmp116 = icmp eq i32 %conv115, 8, !dbg !10283
  br i1 %cmp116, label %if.then118, label %if.else177, !dbg !10284

if.then118:                                       ; preds = %if.then113
  %96 = load i32, i32* %flags.addr, align 4, !dbg !10285
  %and119 = and i32 %96, 128, !dbg !10288
  %tobool120 = icmp ne i32 %and119, 0, !dbg !10288
  br i1 %tobool120, label %if.then121, label %if.else149, !dbg !10289

if.then121:                                       ; preds = %if.then118
  call void @llvm.dbg.declare(metadata i8** %sp122, metadata !10290, metadata !DIExpression()), !dbg !10292
  %97 = load i8*, i8** %row.addr, align 8, !dbg !10293
  %98 = load i32, i32* %row_width, align 4, !dbg !10294
  %conv123 = zext i32 %98 to i64, !dbg !10295
  %mul124 = mul i64 %conv123, 3, !dbg !10296
  %add.ptr125 = getelementptr inbounds i8, i8* %97, i64 %mul124, !dbg !10297
  store i8* %add.ptr125, i8** %sp122, align 8, !dbg !10292
  call void @llvm.dbg.declare(metadata i8** %dp126, metadata !10298, metadata !DIExpression()), !dbg !10299
  %99 = load i8*, i8** %sp122, align 8, !dbg !10300
  %100 = load i32, i32* %row_width, align 4, !dbg !10301
  %conv127 = zext i32 %100 to i64, !dbg !10302
  %add.ptr128 = getelementptr inbounds i8, i8* %99, i64 %conv127, !dbg !10303
  store i8* %add.ptr128, i8** %dp126, align 8, !dbg !10299
  store i32 1, i32* %i, align 4, !dbg !10304
  br label %for.cond129, !dbg !10306

for.cond129:                                      ; preds = %for.inc140, %if.then121
  %101 = load i32, i32* %i, align 4, !dbg !10307
  %102 = load i32, i32* %row_width, align 4, !dbg !10309
  %cmp130 = icmp ult i32 %101, %102, !dbg !10310
  br i1 %cmp130, label %for.body132, label %for.end142, !dbg !10311

for.body132:                                      ; preds = %for.cond129
  %103 = load i8, i8* %lo_filler, align 1, !dbg !10312
  %104 = load i8*, i8** %dp126, align 8, !dbg !10314
  %incdec.ptr133 = getelementptr inbounds i8, i8* %104, i32 -1, !dbg !10314
  store i8* %incdec.ptr133, i8** %dp126, align 8, !dbg !10314
  store i8 %103, i8* %incdec.ptr133, align 1, !dbg !10315
  %105 = load i8*, i8** %sp122, align 8, !dbg !10316
  %incdec.ptr134 = getelementptr inbounds i8, i8* %105, i32 -1, !dbg !10316
  store i8* %incdec.ptr134, i8** %sp122, align 8, !dbg !10316
  %106 = load i8, i8* %incdec.ptr134, align 1, !dbg !10317
  %107 = load i8*, i8** %dp126, align 8, !dbg !10318
  %incdec.ptr135 = getelementptr inbounds i8, i8* %107, i32 -1, !dbg !10318
  store i8* %incdec.ptr135, i8** %dp126, align 8, !dbg !10318
  store i8 %106, i8* %incdec.ptr135, align 1, !dbg !10319
  %108 = load i8*, i8** %sp122, align 8, !dbg !10320
  %incdec.ptr136 = getelementptr inbounds i8, i8* %108, i32 -1, !dbg !10320
  store i8* %incdec.ptr136, i8** %sp122, align 8, !dbg !10320
  %109 = load i8, i8* %incdec.ptr136, align 1, !dbg !10321
  %110 = load i8*, i8** %dp126, align 8, !dbg !10322
  %incdec.ptr137 = getelementptr inbounds i8, i8* %110, i32 -1, !dbg !10322
  store i8* %incdec.ptr137, i8** %dp126, align 8, !dbg !10322
  store i8 %109, i8* %incdec.ptr137, align 1, !dbg !10323
  %111 = load i8*, i8** %sp122, align 8, !dbg !10324
  %incdec.ptr138 = getelementptr inbounds i8, i8* %111, i32 -1, !dbg !10324
  store i8* %incdec.ptr138, i8** %sp122, align 8, !dbg !10324
  %112 = load i8, i8* %incdec.ptr138, align 1, !dbg !10325
  %113 = load i8*, i8** %dp126, align 8, !dbg !10326
  %incdec.ptr139 = getelementptr inbounds i8, i8* %113, i32 -1, !dbg !10326
  store i8* %incdec.ptr139, i8** %dp126, align 8, !dbg !10326
  store i8 %112, i8* %incdec.ptr139, align 1, !dbg !10327
  br label %for.inc140, !dbg !10328

for.inc140:                                       ; preds = %for.body132
  %114 = load i32, i32* %i, align 4, !dbg !10329
  %inc141 = add i32 %114, 1, !dbg !10329
  store i32 %inc141, i32* %i, align 4, !dbg !10329
  br label %for.cond129, !dbg !10330, !llvm.loop !10331

for.end142:                                       ; preds = %for.cond129
  %115 = load i8, i8* %lo_filler, align 1, !dbg !10333
  %116 = load i8*, i8** %dp126, align 8, !dbg !10334
  %incdec.ptr143 = getelementptr inbounds i8, i8* %116, i32 -1, !dbg !10334
  store i8* %incdec.ptr143, i8** %dp126, align 8, !dbg !10334
  store i8 %115, i8* %incdec.ptr143, align 1, !dbg !10335
  %117 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10336
  %channels144 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %117, i32 0, i32 4, !dbg !10337
  store i8 4, i8* %channels144, align 2, !dbg !10338
  %118 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10339
  %pixel_depth145 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %118, i32 0, i32 5, !dbg !10340
  store i8 32, i8* %pixel_depth145, align 1, !dbg !10341
  %119 = load i32, i32* %row_width, align 4, !dbg !10342
  %mul146 = mul i32 %119, 4, !dbg !10343
  %conv147 = zext i32 %mul146 to i64, !dbg !10342
  %120 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10344
  %rowbytes148 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %120, i32 0, i32 1, !dbg !10345
  store i64 %conv147, i64* %rowbytes148, align 8, !dbg !10346
  br label %if.end176, !dbg !10347

if.else149:                                       ; preds = %if.then118
  call void @llvm.dbg.declare(metadata i8** %sp150, metadata !10348, metadata !DIExpression()), !dbg !10350
  %121 = load i8*, i8** %row.addr, align 8, !dbg !10351
  %122 = load i32, i32* %row_width, align 4, !dbg !10352
  %conv151 = zext i32 %122 to i64, !dbg !10353
  %mul152 = mul i64 %conv151, 3, !dbg !10354
  %add.ptr153 = getelementptr inbounds i8, i8* %121, i64 %mul152, !dbg !10355
  store i8* %add.ptr153, i8** %sp150, align 8, !dbg !10350
  call void @llvm.dbg.declare(metadata i8** %dp154, metadata !10356, metadata !DIExpression()), !dbg !10357
  %123 = load i8*, i8** %sp150, align 8, !dbg !10358
  %124 = load i32, i32* %row_width, align 4, !dbg !10359
  %conv155 = zext i32 %124 to i64, !dbg !10360
  %add.ptr156 = getelementptr inbounds i8, i8* %123, i64 %conv155, !dbg !10361
  store i8* %add.ptr156, i8** %dp154, align 8, !dbg !10357
  store i32 0, i32* %i, align 4, !dbg !10362
  br label %for.cond157, !dbg !10364

for.cond157:                                      ; preds = %for.inc168, %if.else149
  %125 = load i32, i32* %i, align 4, !dbg !10365
  %126 = load i32, i32* %row_width, align 4, !dbg !10367
  %cmp158 = icmp ult i32 %125, %126, !dbg !10368
  br i1 %cmp158, label %for.body160, label %for.end170, !dbg !10369

for.body160:                                      ; preds = %for.cond157
  %127 = load i8*, i8** %sp150, align 8, !dbg !10370
  %incdec.ptr161 = getelementptr inbounds i8, i8* %127, i32 -1, !dbg !10370
  store i8* %incdec.ptr161, i8** %sp150, align 8, !dbg !10370
  %128 = load i8, i8* %incdec.ptr161, align 1, !dbg !10372
  %129 = load i8*, i8** %dp154, align 8, !dbg !10373
  %incdec.ptr162 = getelementptr inbounds i8, i8* %129, i32 -1, !dbg !10373
  store i8* %incdec.ptr162, i8** %dp154, align 8, !dbg !10373
  store i8 %128, i8* %incdec.ptr162, align 1, !dbg !10374
  %130 = load i8*, i8** %sp150, align 8, !dbg !10375
  %incdec.ptr163 = getelementptr inbounds i8, i8* %130, i32 -1, !dbg !10375
  store i8* %incdec.ptr163, i8** %sp150, align 8, !dbg !10375
  %131 = load i8, i8* %incdec.ptr163, align 1, !dbg !10376
  %132 = load i8*, i8** %dp154, align 8, !dbg !10377
  %incdec.ptr164 = getelementptr inbounds i8, i8* %132, i32 -1, !dbg !10377
  store i8* %incdec.ptr164, i8** %dp154, align 8, !dbg !10377
  store i8 %131, i8* %incdec.ptr164, align 1, !dbg !10378
  %133 = load i8*, i8** %sp150, align 8, !dbg !10379
  %incdec.ptr165 = getelementptr inbounds i8, i8* %133, i32 -1, !dbg !10379
  store i8* %incdec.ptr165, i8** %sp150, align 8, !dbg !10379
  %134 = load i8, i8* %incdec.ptr165, align 1, !dbg !10380
  %135 = load i8*, i8** %dp154, align 8, !dbg !10381
  %incdec.ptr166 = getelementptr inbounds i8, i8* %135, i32 -1, !dbg !10381
  store i8* %incdec.ptr166, i8** %dp154, align 8, !dbg !10381
  store i8 %134, i8* %incdec.ptr166, align 1, !dbg !10382
  %136 = load i8, i8* %lo_filler, align 1, !dbg !10383
  %137 = load i8*, i8** %dp154, align 8, !dbg !10384
  %incdec.ptr167 = getelementptr inbounds i8, i8* %137, i32 -1, !dbg !10384
  store i8* %incdec.ptr167, i8** %dp154, align 8, !dbg !10384
  store i8 %136, i8* %incdec.ptr167, align 1, !dbg !10385
  br label %for.inc168, !dbg !10386

for.inc168:                                       ; preds = %for.body160
  %138 = load i32, i32* %i, align 4, !dbg !10387
  %inc169 = add i32 %138, 1, !dbg !10387
  store i32 %inc169, i32* %i, align 4, !dbg !10387
  br label %for.cond157, !dbg !10388, !llvm.loop !10389

for.end170:                                       ; preds = %for.cond157
  %139 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10391
  %channels171 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %139, i32 0, i32 4, !dbg !10392
  store i8 4, i8* %channels171, align 2, !dbg !10393
  %140 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10394
  %pixel_depth172 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %140, i32 0, i32 5, !dbg !10395
  store i8 32, i8* %pixel_depth172, align 1, !dbg !10396
  %141 = load i32, i32* %row_width, align 4, !dbg !10397
  %mul173 = mul i32 %141, 4, !dbg !10398
  %conv174 = zext i32 %mul173 to i64, !dbg !10397
  %142 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10399
  %rowbytes175 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %142, i32 0, i32 1, !dbg !10400
  store i64 %conv174, i64* %rowbytes175, align 8, !dbg !10401
  br label %if.end176

if.end176:                                        ; preds = %for.end170, %for.end142
  br label %if.end259, !dbg !10402

if.else177:                                       ; preds = %if.then113
  %143 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10403
  %bit_depth178 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %143, i32 0, i32 3, !dbg !10405
  %144 = load i8, i8* %bit_depth178, align 1, !dbg !10405
  %conv179 = zext i8 %144 to i32, !dbg !10403
  %cmp180 = icmp eq i32 %conv179, 16, !dbg !10406
  br i1 %cmp180, label %if.then182, label %if.end258, !dbg !10407

if.then182:                                       ; preds = %if.else177
  %145 = load i32, i32* %flags.addr, align 4, !dbg !10408
  %and183 = and i32 %145, 128, !dbg !10411
  %tobool184 = icmp ne i32 %and183, 0, !dbg !10411
  br i1 %tobool184, label %if.then185, label %if.else222, !dbg !10412

if.then185:                                       ; preds = %if.then182
  call void @llvm.dbg.declare(metadata i8** %sp186, metadata !10413, metadata !DIExpression()), !dbg !10415
  %146 = load i8*, i8** %row.addr, align 8, !dbg !10416
  %147 = load i32, i32* %row_width, align 4, !dbg !10417
  %conv187 = zext i32 %147 to i64, !dbg !10418
  %mul188 = mul i64 %conv187, 6, !dbg !10419
  %add.ptr189 = getelementptr inbounds i8, i8* %146, i64 %mul188, !dbg !10420
  store i8* %add.ptr189, i8** %sp186, align 8, !dbg !10415
  call void @llvm.dbg.declare(metadata i8** %dp190, metadata !10421, metadata !DIExpression()), !dbg !10422
  %148 = load i8*, i8** %sp186, align 8, !dbg !10423
  %149 = load i32, i32* %row_width, align 4, !dbg !10424
  %conv191 = zext i32 %149 to i64, !dbg !10425
  %mul192 = mul i64 %conv191, 2, !dbg !10426
  %add.ptr193 = getelementptr inbounds i8, i8* %148, i64 %mul192, !dbg !10427
  store i8* %add.ptr193, i8** %dp190, align 8, !dbg !10422
  store i32 1, i32* %i, align 4, !dbg !10428
  br label %for.cond194, !dbg !10430

for.cond194:                                      ; preds = %for.inc212, %if.then185
  %150 = load i32, i32* %i, align 4, !dbg !10431
  %151 = load i32, i32* %row_width, align 4, !dbg !10433
  %cmp195 = icmp ult i32 %150, %151, !dbg !10434
  br i1 %cmp195, label %for.body197, label %for.end214, !dbg !10435

for.body197:                                      ; preds = %for.cond194
  %152 = load i8, i8* %hi_filler, align 1, !dbg !10436
  %153 = load i8*, i8** %dp190, align 8, !dbg !10438
  %incdec.ptr198 = getelementptr inbounds i8, i8* %153, i32 -1, !dbg !10438
  store i8* %incdec.ptr198, i8** %dp190, align 8, !dbg !10438
  store i8 %152, i8* %incdec.ptr198, align 1, !dbg !10439
  %154 = load i8, i8* %lo_filler, align 1, !dbg !10440
  %155 = load i8*, i8** %dp190, align 8, !dbg !10441
  %incdec.ptr199 = getelementptr inbounds i8, i8* %155, i32 -1, !dbg !10441
  store i8* %incdec.ptr199, i8** %dp190, align 8, !dbg !10441
  store i8 %154, i8* %incdec.ptr199, align 1, !dbg !10442
  %156 = load i8*, i8** %sp186, align 8, !dbg !10443
  %incdec.ptr200 = getelementptr inbounds i8, i8* %156, i32 -1, !dbg !10443
  store i8* %incdec.ptr200, i8** %sp186, align 8, !dbg !10443
  %157 = load i8, i8* %incdec.ptr200, align 1, !dbg !10444
  %158 = load i8*, i8** %dp190, align 8, !dbg !10445
  %incdec.ptr201 = getelementptr inbounds i8, i8* %158, i32 -1, !dbg !10445
  store i8* %incdec.ptr201, i8** %dp190, align 8, !dbg !10445
  store i8 %157, i8* %incdec.ptr201, align 1, !dbg !10446
  %159 = load i8*, i8** %sp186, align 8, !dbg !10447
  %incdec.ptr202 = getelementptr inbounds i8, i8* %159, i32 -1, !dbg !10447
  store i8* %incdec.ptr202, i8** %sp186, align 8, !dbg !10447
  %160 = load i8, i8* %incdec.ptr202, align 1, !dbg !10448
  %161 = load i8*, i8** %dp190, align 8, !dbg !10449
  %incdec.ptr203 = getelementptr inbounds i8, i8* %161, i32 -1, !dbg !10449
  store i8* %incdec.ptr203, i8** %dp190, align 8, !dbg !10449
  store i8 %160, i8* %incdec.ptr203, align 1, !dbg !10450
  %162 = load i8*, i8** %sp186, align 8, !dbg !10451
  %incdec.ptr204 = getelementptr inbounds i8, i8* %162, i32 -1, !dbg !10451
  store i8* %incdec.ptr204, i8** %sp186, align 8, !dbg !10451
  %163 = load i8, i8* %incdec.ptr204, align 1, !dbg !10452
  %164 = load i8*, i8** %dp190, align 8, !dbg !10453
  %incdec.ptr205 = getelementptr inbounds i8, i8* %164, i32 -1, !dbg !10453
  store i8* %incdec.ptr205, i8** %dp190, align 8, !dbg !10453
  store i8 %163, i8* %incdec.ptr205, align 1, !dbg !10454
  %165 = load i8*, i8** %sp186, align 8, !dbg !10455
  %incdec.ptr206 = getelementptr inbounds i8, i8* %165, i32 -1, !dbg !10455
  store i8* %incdec.ptr206, i8** %sp186, align 8, !dbg !10455
  %166 = load i8, i8* %incdec.ptr206, align 1, !dbg !10456
  %167 = load i8*, i8** %dp190, align 8, !dbg !10457
  %incdec.ptr207 = getelementptr inbounds i8, i8* %167, i32 -1, !dbg !10457
  store i8* %incdec.ptr207, i8** %dp190, align 8, !dbg !10457
  store i8 %166, i8* %incdec.ptr207, align 1, !dbg !10458
  %168 = load i8*, i8** %sp186, align 8, !dbg !10459
  %incdec.ptr208 = getelementptr inbounds i8, i8* %168, i32 -1, !dbg !10459
  store i8* %incdec.ptr208, i8** %sp186, align 8, !dbg !10459
  %169 = load i8, i8* %incdec.ptr208, align 1, !dbg !10460
  %170 = load i8*, i8** %dp190, align 8, !dbg !10461
  %incdec.ptr209 = getelementptr inbounds i8, i8* %170, i32 -1, !dbg !10461
  store i8* %incdec.ptr209, i8** %dp190, align 8, !dbg !10461
  store i8 %169, i8* %incdec.ptr209, align 1, !dbg !10462
  %171 = load i8*, i8** %sp186, align 8, !dbg !10463
  %incdec.ptr210 = getelementptr inbounds i8, i8* %171, i32 -1, !dbg !10463
  store i8* %incdec.ptr210, i8** %sp186, align 8, !dbg !10463
  %172 = load i8, i8* %incdec.ptr210, align 1, !dbg !10464
  %173 = load i8*, i8** %dp190, align 8, !dbg !10465
  %incdec.ptr211 = getelementptr inbounds i8, i8* %173, i32 -1, !dbg !10465
  store i8* %incdec.ptr211, i8** %dp190, align 8, !dbg !10465
  store i8 %172, i8* %incdec.ptr211, align 1, !dbg !10466
  br label %for.inc212, !dbg !10467

for.inc212:                                       ; preds = %for.body197
  %174 = load i32, i32* %i, align 4, !dbg !10468
  %inc213 = add i32 %174, 1, !dbg !10468
  store i32 %inc213, i32* %i, align 4, !dbg !10468
  br label %for.cond194, !dbg !10469, !llvm.loop !10470

for.end214:                                       ; preds = %for.cond194
  %175 = load i8, i8* %hi_filler, align 1, !dbg !10472
  %176 = load i8*, i8** %dp190, align 8, !dbg !10473
  %incdec.ptr215 = getelementptr inbounds i8, i8* %176, i32 -1, !dbg !10473
  store i8* %incdec.ptr215, i8** %dp190, align 8, !dbg !10473
  store i8 %175, i8* %incdec.ptr215, align 1, !dbg !10474
  %177 = load i8, i8* %lo_filler, align 1, !dbg !10475
  %178 = load i8*, i8** %dp190, align 8, !dbg !10476
  %incdec.ptr216 = getelementptr inbounds i8, i8* %178, i32 -1, !dbg !10476
  store i8* %incdec.ptr216, i8** %dp190, align 8, !dbg !10476
  store i8 %177, i8* %incdec.ptr216, align 1, !dbg !10477
  %179 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10478
  %channels217 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %179, i32 0, i32 4, !dbg !10479
  store i8 4, i8* %channels217, align 2, !dbg !10480
  %180 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10481
  %pixel_depth218 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %180, i32 0, i32 5, !dbg !10482
  store i8 64, i8* %pixel_depth218, align 1, !dbg !10483
  %181 = load i32, i32* %row_width, align 4, !dbg !10484
  %mul219 = mul i32 %181, 8, !dbg !10485
  %conv220 = zext i32 %mul219 to i64, !dbg !10484
  %182 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10486
  %rowbytes221 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %182, i32 0, i32 1, !dbg !10487
  store i64 %conv220, i64* %rowbytes221, align 8, !dbg !10488
  br label %if.end257, !dbg !10489

if.else222:                                       ; preds = %if.then182
  call void @llvm.dbg.declare(metadata i8** %sp223, metadata !10490, metadata !DIExpression()), !dbg !10492
  %183 = load i8*, i8** %row.addr, align 8, !dbg !10493
  %184 = load i32, i32* %row_width, align 4, !dbg !10494
  %conv224 = zext i32 %184 to i64, !dbg !10495
  %mul225 = mul i64 %conv224, 6, !dbg !10496
  %add.ptr226 = getelementptr inbounds i8, i8* %183, i64 %mul225, !dbg !10497
  store i8* %add.ptr226, i8** %sp223, align 8, !dbg !10492
  call void @llvm.dbg.declare(metadata i8** %dp227, metadata !10498, metadata !DIExpression()), !dbg !10499
  %185 = load i8*, i8** %sp223, align 8, !dbg !10500
  %186 = load i32, i32* %row_width, align 4, !dbg !10501
  %conv228 = zext i32 %186 to i64, !dbg !10502
  %mul229 = mul i64 %conv228, 2, !dbg !10503
  %add.ptr230 = getelementptr inbounds i8, i8* %185, i64 %mul229, !dbg !10504
  store i8* %add.ptr230, i8** %dp227, align 8, !dbg !10499
  store i32 0, i32* %i, align 4, !dbg !10505
  br label %for.cond231, !dbg !10507

for.cond231:                                      ; preds = %for.inc249, %if.else222
  %187 = load i32, i32* %i, align 4, !dbg !10508
  %188 = load i32, i32* %row_width, align 4, !dbg !10510
  %cmp232 = icmp ult i32 %187, %188, !dbg !10511
  br i1 %cmp232, label %for.body234, label %for.end251, !dbg !10512

for.body234:                                      ; preds = %for.cond231
  %189 = load i8*, i8** %sp223, align 8, !dbg !10513
  %incdec.ptr235 = getelementptr inbounds i8, i8* %189, i32 -1, !dbg !10513
  store i8* %incdec.ptr235, i8** %sp223, align 8, !dbg !10513
  %190 = load i8, i8* %incdec.ptr235, align 1, !dbg !10515
  %191 = load i8*, i8** %dp227, align 8, !dbg !10516
  %incdec.ptr236 = getelementptr inbounds i8, i8* %191, i32 -1, !dbg !10516
  store i8* %incdec.ptr236, i8** %dp227, align 8, !dbg !10516
  store i8 %190, i8* %incdec.ptr236, align 1, !dbg !10517
  %192 = load i8*, i8** %sp223, align 8, !dbg !10518
  %incdec.ptr237 = getelementptr inbounds i8, i8* %192, i32 -1, !dbg !10518
  store i8* %incdec.ptr237, i8** %sp223, align 8, !dbg !10518
  %193 = load i8, i8* %incdec.ptr237, align 1, !dbg !10519
  %194 = load i8*, i8** %dp227, align 8, !dbg !10520
  %incdec.ptr238 = getelementptr inbounds i8, i8* %194, i32 -1, !dbg !10520
  store i8* %incdec.ptr238, i8** %dp227, align 8, !dbg !10520
  store i8 %193, i8* %incdec.ptr238, align 1, !dbg !10521
  %195 = load i8*, i8** %sp223, align 8, !dbg !10522
  %incdec.ptr239 = getelementptr inbounds i8, i8* %195, i32 -1, !dbg !10522
  store i8* %incdec.ptr239, i8** %sp223, align 8, !dbg !10522
  %196 = load i8, i8* %incdec.ptr239, align 1, !dbg !10523
  %197 = load i8*, i8** %dp227, align 8, !dbg !10524
  %incdec.ptr240 = getelementptr inbounds i8, i8* %197, i32 -1, !dbg !10524
  store i8* %incdec.ptr240, i8** %dp227, align 8, !dbg !10524
  store i8 %196, i8* %incdec.ptr240, align 1, !dbg !10525
  %198 = load i8*, i8** %sp223, align 8, !dbg !10526
  %incdec.ptr241 = getelementptr inbounds i8, i8* %198, i32 -1, !dbg !10526
  store i8* %incdec.ptr241, i8** %sp223, align 8, !dbg !10526
  %199 = load i8, i8* %incdec.ptr241, align 1, !dbg !10527
  %200 = load i8*, i8** %dp227, align 8, !dbg !10528
  %incdec.ptr242 = getelementptr inbounds i8, i8* %200, i32 -1, !dbg !10528
  store i8* %incdec.ptr242, i8** %dp227, align 8, !dbg !10528
  store i8 %199, i8* %incdec.ptr242, align 1, !dbg !10529
  %201 = load i8*, i8** %sp223, align 8, !dbg !10530
  %incdec.ptr243 = getelementptr inbounds i8, i8* %201, i32 -1, !dbg !10530
  store i8* %incdec.ptr243, i8** %sp223, align 8, !dbg !10530
  %202 = load i8, i8* %incdec.ptr243, align 1, !dbg !10531
  %203 = load i8*, i8** %dp227, align 8, !dbg !10532
  %incdec.ptr244 = getelementptr inbounds i8, i8* %203, i32 -1, !dbg !10532
  store i8* %incdec.ptr244, i8** %dp227, align 8, !dbg !10532
  store i8 %202, i8* %incdec.ptr244, align 1, !dbg !10533
  %204 = load i8*, i8** %sp223, align 8, !dbg !10534
  %incdec.ptr245 = getelementptr inbounds i8, i8* %204, i32 -1, !dbg !10534
  store i8* %incdec.ptr245, i8** %sp223, align 8, !dbg !10534
  %205 = load i8, i8* %incdec.ptr245, align 1, !dbg !10535
  %206 = load i8*, i8** %dp227, align 8, !dbg !10536
  %incdec.ptr246 = getelementptr inbounds i8, i8* %206, i32 -1, !dbg !10536
  store i8* %incdec.ptr246, i8** %dp227, align 8, !dbg !10536
  store i8 %205, i8* %incdec.ptr246, align 1, !dbg !10537
  %207 = load i8, i8* %hi_filler, align 1, !dbg !10538
  %208 = load i8*, i8** %dp227, align 8, !dbg !10539
  %incdec.ptr247 = getelementptr inbounds i8, i8* %208, i32 -1, !dbg !10539
  store i8* %incdec.ptr247, i8** %dp227, align 8, !dbg !10539
  store i8 %207, i8* %incdec.ptr247, align 1, !dbg !10540
  %209 = load i8, i8* %lo_filler, align 1, !dbg !10541
  %210 = load i8*, i8** %dp227, align 8, !dbg !10542
  %incdec.ptr248 = getelementptr inbounds i8, i8* %210, i32 -1, !dbg !10542
  store i8* %incdec.ptr248, i8** %dp227, align 8, !dbg !10542
  store i8 %209, i8* %incdec.ptr248, align 1, !dbg !10543
  br label %for.inc249, !dbg !10544

for.inc249:                                       ; preds = %for.body234
  %211 = load i32, i32* %i, align 4, !dbg !10545
  %inc250 = add i32 %211, 1, !dbg !10545
  store i32 %inc250, i32* %i, align 4, !dbg !10545
  br label %for.cond231, !dbg !10546, !llvm.loop !10547

for.end251:                                       ; preds = %for.cond231
  %212 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10549
  %channels252 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %212, i32 0, i32 4, !dbg !10550
  store i8 4, i8* %channels252, align 2, !dbg !10551
  %213 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10552
  %pixel_depth253 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %213, i32 0, i32 5, !dbg !10553
  store i8 64, i8* %pixel_depth253, align 1, !dbg !10554
  %214 = load i32, i32* %row_width, align 4, !dbg !10555
  %mul254 = mul i32 %214, 8, !dbg !10556
  %conv255 = zext i32 %mul254 to i64, !dbg !10555
  %215 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10557
  %rowbytes256 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %215, i32 0, i32 1, !dbg !10558
  store i64 %conv255, i64* %rowbytes256, align 8, !dbg !10559
  br label %if.end257

if.end257:                                        ; preds = %for.end251, %for.end214
  br label %if.end258, !dbg !10560

if.end258:                                        ; preds = %if.end257, %if.else177
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.end176
  br label %if.end260, !dbg !10561

if.end260:                                        ; preds = %if.end259, %if.else108
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.end107
  ret void, !dbg !10562
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_invert_alpha(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !10563 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %row_width = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %i = alloca i32, align 4
  %sp12 = alloca i8*, align 8
  %dp15 = alloca i8*, align 8
  %i16 = alloca i32, align 4
  %sp46 = alloca i8*, align 8
  %dp49 = alloca i8*, align 8
  %i50 = alloca i32, align 4
  %sp66 = alloca i8*, align 8
  %dp69 = alloca i8*, align 8
  %i70 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !10566, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !10568, metadata !DIExpression()), !dbg !10569
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10570
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !10571
  %1 = load i32, i32* %width, align 8, !dbg !10571
  store i32 %1, i32* %row_width, align 4, !dbg !10572
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10573
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !10575
  %3 = load i8, i8* %color_type, align 8, !dbg !10575
  %conv = zext i8 %3 to i32, !dbg !10573
  %cmp = icmp eq i32 %conv, 6, !dbg !10576
  br i1 %cmp, label %if.then, label %if.else35, !dbg !10577

if.then:                                          ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10578
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !10581
  %5 = load i8, i8* %bit_depth, align 1, !dbg !10581
  %conv2 = zext i8 %5 to i32, !dbg !10578
  %cmp3 = icmp eq i32 %conv2, 8, !dbg !10582
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !10583

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !10584, metadata !DIExpression()), !dbg !10586
  %6 = load i8*, i8** %row.addr, align 8, !dbg !10587
  %7 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10588
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 1, !dbg !10589
  %8 = load i64, i64* %rowbytes, align 8, !dbg !10589
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %8, !dbg !10590
  store i8* %add.ptr, i8** %sp, align 8, !dbg !10586
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !10591, metadata !DIExpression()), !dbg !10592
  %9 = load i8*, i8** %sp, align 8, !dbg !10593
  store i8* %9, i8** %dp, align 8, !dbg !10592
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10594, metadata !DIExpression()), !dbg !10595
  store i32 0, i32* %i, align 4, !dbg !10596
  br label %for.cond, !dbg !10598

for.cond:                                         ; preds = %for.inc, %if.then5
  %10 = load i32, i32* %i, align 4, !dbg !10599
  %11 = load i32, i32* %row_width, align 4, !dbg !10601
  %cmp6 = icmp ult i32 %10, %11, !dbg !10602
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10603

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %sp, align 8, !dbg !10604
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 -1, !dbg !10604
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !10604
  %13 = load i8, i8* %incdec.ptr, align 1, !dbg !10606
  %conv8 = zext i8 %13 to i32, !dbg !10606
  %sub = sub nsw i32 255, %conv8, !dbg !10607
  %conv9 = trunc i32 %sub to i8, !dbg !10608
  %14 = load i8*, i8** %dp, align 8, !dbg !10609
  %incdec.ptr10 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !10609
  store i8* %incdec.ptr10, i8** %dp, align 8, !dbg !10609
  store i8 %conv9, i8* %incdec.ptr10, align 1, !dbg !10610
  %15 = load i8*, i8** %sp, align 8, !dbg !10611
  %add.ptr11 = getelementptr inbounds i8, i8* %15, i64 -3, !dbg !10611
  store i8* %add.ptr11, i8** %sp, align 8, !dbg !10611
  %16 = load i8*, i8** %sp, align 8, !dbg !10612
  store i8* %16, i8** %dp, align 8, !dbg !10613
  br label %for.inc, !dbg !10614

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10615
  %inc = add i32 %17, 1, !dbg !10615
  store i32 %inc, i32* %i, align 4, !dbg !10615
  br label %for.cond, !dbg !10616, !llvm.loop !10617

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10619

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp12, metadata !10620, metadata !DIExpression()), !dbg !10622
  %18 = load i8*, i8** %row.addr, align 8, !dbg !10623
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10624
  %rowbytes13 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 1, !dbg !10625
  %20 = load i64, i64* %rowbytes13, align 8, !dbg !10625
  %add.ptr14 = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !10626
  store i8* %add.ptr14, i8** %sp12, align 8, !dbg !10622
  call void @llvm.dbg.declare(metadata i8** %dp15, metadata !10627, metadata !DIExpression()), !dbg !10628
  %21 = load i8*, i8** %sp12, align 8, !dbg !10629
  store i8* %21, i8** %dp15, align 8, !dbg !10628
  call void @llvm.dbg.declare(metadata i32* %i16, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i32 0, i32* %i16, align 4, !dbg !10632
  br label %for.cond17, !dbg !10634

for.cond17:                                       ; preds = %for.inc32, %if.else
  %22 = load i32, i32* %i16, align 4, !dbg !10635
  %23 = load i32, i32* %row_width, align 4, !dbg !10637
  %cmp18 = icmp ult i32 %22, %23, !dbg !10638
  br i1 %cmp18, label %for.body20, label %for.end34, !dbg !10639

for.body20:                                       ; preds = %for.cond17
  %24 = load i8*, i8** %sp12, align 8, !dbg !10640
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 -1, !dbg !10640
  store i8* %incdec.ptr21, i8** %sp12, align 8, !dbg !10640
  %25 = load i8, i8* %incdec.ptr21, align 1, !dbg !10642
  %conv22 = zext i8 %25 to i32, !dbg !10642
  %sub23 = sub nsw i32 255, %conv22, !dbg !10643
  %conv24 = trunc i32 %sub23 to i8, !dbg !10644
  %26 = load i8*, i8** %dp15, align 8, !dbg !10645
  %incdec.ptr25 = getelementptr inbounds i8, i8* %26, i32 -1, !dbg !10645
  store i8* %incdec.ptr25, i8** %dp15, align 8, !dbg !10645
  store i8 %conv24, i8* %incdec.ptr25, align 1, !dbg !10646
  %27 = load i8*, i8** %sp12, align 8, !dbg !10647
  %incdec.ptr26 = getelementptr inbounds i8, i8* %27, i32 -1, !dbg !10647
  store i8* %incdec.ptr26, i8** %sp12, align 8, !dbg !10647
  %28 = load i8, i8* %incdec.ptr26, align 1, !dbg !10648
  %conv27 = zext i8 %28 to i32, !dbg !10648
  %sub28 = sub nsw i32 255, %conv27, !dbg !10649
  %conv29 = trunc i32 %sub28 to i8, !dbg !10650
  %29 = load i8*, i8** %dp15, align 8, !dbg !10651
  %incdec.ptr30 = getelementptr inbounds i8, i8* %29, i32 -1, !dbg !10651
  store i8* %incdec.ptr30, i8** %dp15, align 8, !dbg !10651
  store i8 %conv29, i8* %incdec.ptr30, align 1, !dbg !10652
  %30 = load i8*, i8** %sp12, align 8, !dbg !10653
  %add.ptr31 = getelementptr inbounds i8, i8* %30, i64 -6, !dbg !10653
  store i8* %add.ptr31, i8** %sp12, align 8, !dbg !10653
  %31 = load i8*, i8** %sp12, align 8, !dbg !10654
  store i8* %31, i8** %dp15, align 8, !dbg !10655
  br label %for.inc32, !dbg !10656

for.inc32:                                        ; preds = %for.body20
  %32 = load i32, i32* %i16, align 4, !dbg !10657
  %inc33 = add i32 %32, 1, !dbg !10657
  store i32 %inc33, i32* %i16, align 4, !dbg !10657
  br label %for.cond17, !dbg !10658, !llvm.loop !10659

for.end34:                                        ; preds = %for.cond17
  br label %if.end

if.end:                                           ; preds = %for.end34, %for.end
  br label %if.end91, !dbg !10661

if.else35:                                        ; preds = %entry
  %33 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10662
  %color_type36 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %33, i32 0, i32 2, !dbg !10664
  %34 = load i8, i8* %color_type36, align 8, !dbg !10664
  %conv37 = zext i8 %34 to i32, !dbg !10662
  %cmp38 = icmp eq i32 %conv37, 4, !dbg !10665
  br i1 %cmp38, label %if.then40, label %if.end90, !dbg !10666

if.then40:                                        ; preds = %if.else35
  %35 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10667
  %bit_depth41 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %35, i32 0, i32 3, !dbg !10670
  %36 = load i8, i8* %bit_depth41, align 1, !dbg !10670
  %conv42 = zext i8 %36 to i32, !dbg !10667
  %cmp43 = icmp eq i32 %conv42, 8, !dbg !10671
  br i1 %cmp43, label %if.then45, label %if.else65, !dbg !10672

if.then45:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata i8** %sp46, metadata !10673, metadata !DIExpression()), !dbg !10675
  %37 = load i8*, i8** %row.addr, align 8, !dbg !10676
  %38 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10677
  %rowbytes47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %38, i32 0, i32 1, !dbg !10678
  %39 = load i64, i64* %rowbytes47, align 8, !dbg !10678
  %add.ptr48 = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !10679
  store i8* %add.ptr48, i8** %sp46, align 8, !dbg !10675
  call void @llvm.dbg.declare(metadata i8** %dp49, metadata !10680, metadata !DIExpression()), !dbg !10681
  %40 = load i8*, i8** %sp46, align 8, !dbg !10682
  store i8* %40, i8** %dp49, align 8, !dbg !10681
  call void @llvm.dbg.declare(metadata i32* %i50, metadata !10683, metadata !DIExpression()), !dbg !10684
  store i32 0, i32* %i50, align 4, !dbg !10685
  br label %for.cond51, !dbg !10687

for.cond51:                                       ; preds = %for.inc62, %if.then45
  %41 = load i32, i32* %i50, align 4, !dbg !10688
  %42 = load i32, i32* %row_width, align 4, !dbg !10690
  %cmp52 = icmp ult i32 %41, %42, !dbg !10691
  br i1 %cmp52, label %for.body54, label %for.end64, !dbg !10692

for.body54:                                       ; preds = %for.cond51
  %43 = load i8*, i8** %sp46, align 8, !dbg !10693
  %incdec.ptr55 = getelementptr inbounds i8, i8* %43, i32 -1, !dbg !10693
  store i8* %incdec.ptr55, i8** %sp46, align 8, !dbg !10693
  %44 = load i8, i8* %incdec.ptr55, align 1, !dbg !10695
  %conv56 = zext i8 %44 to i32, !dbg !10695
  %sub57 = sub nsw i32 255, %conv56, !dbg !10696
  %conv58 = trunc i32 %sub57 to i8, !dbg !10697
  %45 = load i8*, i8** %dp49, align 8, !dbg !10698
  %incdec.ptr59 = getelementptr inbounds i8, i8* %45, i32 -1, !dbg !10698
  store i8* %incdec.ptr59, i8** %dp49, align 8, !dbg !10698
  store i8 %conv58, i8* %incdec.ptr59, align 1, !dbg !10699
  %46 = load i8*, i8** %sp46, align 8, !dbg !10700
  %incdec.ptr60 = getelementptr inbounds i8, i8* %46, i32 -1, !dbg !10700
  store i8* %incdec.ptr60, i8** %sp46, align 8, !dbg !10700
  %47 = load i8, i8* %incdec.ptr60, align 1, !dbg !10701
  %48 = load i8*, i8** %dp49, align 8, !dbg !10702
  %incdec.ptr61 = getelementptr inbounds i8, i8* %48, i32 -1, !dbg !10702
  store i8* %incdec.ptr61, i8** %dp49, align 8, !dbg !10702
  store i8 %47, i8* %incdec.ptr61, align 1, !dbg !10703
  br label %for.inc62, !dbg !10704

for.inc62:                                        ; preds = %for.body54
  %49 = load i32, i32* %i50, align 4, !dbg !10705
  %inc63 = add i32 %49, 1, !dbg !10705
  store i32 %inc63, i32* %i50, align 4, !dbg !10705
  br label %for.cond51, !dbg !10706, !llvm.loop !10707

for.end64:                                        ; preds = %for.cond51
  br label %if.end89, !dbg !10709

if.else65:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata i8** %sp66, metadata !10710, metadata !DIExpression()), !dbg !10712
  %50 = load i8*, i8** %row.addr, align 8, !dbg !10713
  %51 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10714
  %rowbytes67 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %51, i32 0, i32 1, !dbg !10715
  %52 = load i64, i64* %rowbytes67, align 8, !dbg !10715
  %add.ptr68 = getelementptr inbounds i8, i8* %50, i64 %52, !dbg !10716
  store i8* %add.ptr68, i8** %sp66, align 8, !dbg !10712
  call void @llvm.dbg.declare(metadata i8** %dp69, metadata !10717, metadata !DIExpression()), !dbg !10718
  %53 = load i8*, i8** %sp66, align 8, !dbg !10719
  store i8* %53, i8** %dp69, align 8, !dbg !10718
  call void @llvm.dbg.declare(metadata i32* %i70, metadata !10720, metadata !DIExpression()), !dbg !10721
  store i32 0, i32* %i70, align 4, !dbg !10722
  br label %for.cond71, !dbg !10724

for.cond71:                                       ; preds = %for.inc86, %if.else65
  %54 = load i32, i32* %i70, align 4, !dbg !10725
  %55 = load i32, i32* %row_width, align 4, !dbg !10727
  %cmp72 = icmp ult i32 %54, %55, !dbg !10728
  br i1 %cmp72, label %for.body74, label %for.end88, !dbg !10729

for.body74:                                       ; preds = %for.cond71
  %56 = load i8*, i8** %sp66, align 8, !dbg !10730
  %incdec.ptr75 = getelementptr inbounds i8, i8* %56, i32 -1, !dbg !10730
  store i8* %incdec.ptr75, i8** %sp66, align 8, !dbg !10730
  %57 = load i8, i8* %incdec.ptr75, align 1, !dbg !10732
  %conv76 = zext i8 %57 to i32, !dbg !10732
  %sub77 = sub nsw i32 255, %conv76, !dbg !10733
  %conv78 = trunc i32 %sub77 to i8, !dbg !10734
  %58 = load i8*, i8** %dp69, align 8, !dbg !10735
  %incdec.ptr79 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !10735
  store i8* %incdec.ptr79, i8** %dp69, align 8, !dbg !10735
  store i8 %conv78, i8* %incdec.ptr79, align 1, !dbg !10736
  %59 = load i8*, i8** %sp66, align 8, !dbg !10737
  %incdec.ptr80 = getelementptr inbounds i8, i8* %59, i32 -1, !dbg !10737
  store i8* %incdec.ptr80, i8** %sp66, align 8, !dbg !10737
  %60 = load i8, i8* %incdec.ptr80, align 1, !dbg !10738
  %conv81 = zext i8 %60 to i32, !dbg !10738
  %sub82 = sub nsw i32 255, %conv81, !dbg !10739
  %conv83 = trunc i32 %sub82 to i8, !dbg !10740
  %61 = load i8*, i8** %dp69, align 8, !dbg !10741
  %incdec.ptr84 = getelementptr inbounds i8, i8* %61, i32 -1, !dbg !10741
  store i8* %incdec.ptr84, i8** %dp69, align 8, !dbg !10741
  store i8 %conv83, i8* %incdec.ptr84, align 1, !dbg !10742
  %62 = load i8*, i8** %sp66, align 8, !dbg !10743
  %add.ptr85 = getelementptr inbounds i8, i8* %62, i64 -2, !dbg !10743
  store i8* %add.ptr85, i8** %sp66, align 8, !dbg !10743
  %63 = load i8*, i8** %sp66, align 8, !dbg !10744
  store i8* %63, i8** %dp69, align 8, !dbg !10745
  br label %for.inc86, !dbg !10746

for.inc86:                                        ; preds = %for.body74
  %64 = load i32, i32* %i70, align 4, !dbg !10747
  %inc87 = add i32 %64, 1, !dbg !10747
  store i32 %inc87, i32* %i70, align 4, !dbg !10747
  br label %for.cond71, !dbg !10748, !llvm.loop !10749

for.end88:                                        ; preds = %for.cond71
  br label %if.end89

if.end89:                                         ; preds = %for.end88, %for.end64
  br label %if.end90, !dbg !10751

if.end90:                                         ; preds = %if.end89, %if.else35
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end
  ret void, !dbg !10752
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_swap_alpha(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !10753 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %row_width = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %save = alloca i8, align 1
  %i = alloca i32, align 4
  %sp15 = alloca i8*, align 8
  %dp18 = alloca i8*, align 8
  %save19 = alloca [2 x i8], align 1
  %i20 = alloca i32, align 4
  %sp58 = alloca i8*, align 8
  %dp61 = alloca i8*, align 8
  %save62 = alloca i8, align 1
  %i63 = alloca i32, align 4
  %sp76 = alloca i8*, align 8
  %dp79 = alloca i8*, align 8
  %save80 = alloca [2 x i8], align 1
  %i81 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !10758, metadata !DIExpression()), !dbg !10760
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10761
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 0, !dbg !10762
  %1 = load i32, i32* %width, align 8, !dbg !10762
  store i32 %1, i32* %row_width, align 4, !dbg !10760
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10763
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 2, !dbg !10765
  %3 = load i8, i8* %color_type, align 8, !dbg !10765
  %conv = zext i8 %3 to i32, !dbg !10763
  %cmp = icmp eq i32 %conv, 6, !dbg !10766
  br i1 %cmp, label %if.then, label %if.else47, !dbg !10767

if.then:                                          ; preds = %entry
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10768
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !10771
  %5 = load i8, i8* %bit_depth, align 1, !dbg !10771
  %conv2 = zext i8 %5 to i32, !dbg !10768
  %cmp3 = icmp eq i32 %conv2, 8, !dbg !10772
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !10773

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !10774, metadata !DIExpression()), !dbg !10776
  %6 = load i8*, i8** %row.addr, align 8, !dbg !10777
  %7 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10778
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %7, i32 0, i32 1, !dbg !10779
  %8 = load i64, i64* %rowbytes, align 8, !dbg !10779
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %8, !dbg !10780
  store i8* %add.ptr, i8** %sp, align 8, !dbg !10776
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !10781, metadata !DIExpression()), !dbg !10782
  %9 = load i8*, i8** %sp, align 8, !dbg !10783
  store i8* %9, i8** %dp, align 8, !dbg !10782
  call void @llvm.dbg.declare(metadata i8* %save, metadata !10784, metadata !DIExpression()), !dbg !10785
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10786, metadata !DIExpression()), !dbg !10787
  store i32 0, i32* %i, align 4, !dbg !10788
  br label %for.cond, !dbg !10790

for.cond:                                         ; preds = %for.inc, %if.then5
  %10 = load i32, i32* %i, align 4, !dbg !10791
  %11 = load i32, i32* %row_width, align 4, !dbg !10793
  %cmp6 = icmp ult i32 %10, %11, !dbg !10794
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10795

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %sp, align 8, !dbg !10796
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 -1, !dbg !10796
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !10796
  %13 = load i8, i8* %incdec.ptr, align 1, !dbg !10798
  store i8 %13, i8* %save, align 1, !dbg !10799
  %14 = load i8*, i8** %sp, align 8, !dbg !10800
  %incdec.ptr8 = getelementptr inbounds i8, i8* %14, i32 -1, !dbg !10800
  store i8* %incdec.ptr8, i8** %sp, align 8, !dbg !10800
  %15 = load i8, i8* %incdec.ptr8, align 1, !dbg !10801
  %16 = load i8*, i8** %dp, align 8, !dbg !10802
  %incdec.ptr9 = getelementptr inbounds i8, i8* %16, i32 -1, !dbg !10802
  store i8* %incdec.ptr9, i8** %dp, align 8, !dbg !10802
  store i8 %15, i8* %incdec.ptr9, align 1, !dbg !10803
  %17 = load i8*, i8** %sp, align 8, !dbg !10804
  %incdec.ptr10 = getelementptr inbounds i8, i8* %17, i32 -1, !dbg !10804
  store i8* %incdec.ptr10, i8** %sp, align 8, !dbg !10804
  %18 = load i8, i8* %incdec.ptr10, align 1, !dbg !10805
  %19 = load i8*, i8** %dp, align 8, !dbg !10806
  %incdec.ptr11 = getelementptr inbounds i8, i8* %19, i32 -1, !dbg !10806
  store i8* %incdec.ptr11, i8** %dp, align 8, !dbg !10806
  store i8 %18, i8* %incdec.ptr11, align 1, !dbg !10807
  %20 = load i8*, i8** %sp, align 8, !dbg !10808
  %incdec.ptr12 = getelementptr inbounds i8, i8* %20, i32 -1, !dbg !10808
  store i8* %incdec.ptr12, i8** %sp, align 8, !dbg !10808
  %21 = load i8, i8* %incdec.ptr12, align 1, !dbg !10809
  %22 = load i8*, i8** %dp, align 8, !dbg !10810
  %incdec.ptr13 = getelementptr inbounds i8, i8* %22, i32 -1, !dbg !10810
  store i8* %incdec.ptr13, i8** %dp, align 8, !dbg !10810
  store i8 %21, i8* %incdec.ptr13, align 1, !dbg !10811
  %23 = load i8, i8* %save, align 1, !dbg !10812
  %24 = load i8*, i8** %dp, align 8, !dbg !10813
  %incdec.ptr14 = getelementptr inbounds i8, i8* %24, i32 -1, !dbg !10813
  store i8* %incdec.ptr14, i8** %dp, align 8, !dbg !10813
  store i8 %23, i8* %incdec.ptr14, align 1, !dbg !10814
  br label %for.inc, !dbg !10815

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !10816
  %inc = add i32 %25, 1, !dbg !10816
  store i32 %inc, i32* %i, align 4, !dbg !10816
  br label %for.cond, !dbg !10817, !llvm.loop !10818

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10820

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp15, metadata !10821, metadata !DIExpression()), !dbg !10823
  %26 = load i8*, i8** %row.addr, align 8, !dbg !10824
  %27 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10825
  %rowbytes16 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %27, i32 0, i32 1, !dbg !10826
  %28 = load i64, i64* %rowbytes16, align 8, !dbg !10826
  %add.ptr17 = getelementptr inbounds i8, i8* %26, i64 %28, !dbg !10827
  store i8* %add.ptr17, i8** %sp15, align 8, !dbg !10823
  call void @llvm.dbg.declare(metadata i8** %dp18, metadata !10828, metadata !DIExpression()), !dbg !10829
  %29 = load i8*, i8** %sp15, align 8, !dbg !10830
  store i8* %29, i8** %dp18, align 8, !dbg !10829
  call void @llvm.dbg.declare(metadata [2 x i8]* %save19, metadata !10831, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i32* %i20, metadata !10836, metadata !DIExpression()), !dbg !10837
  store i32 0, i32* %i20, align 4, !dbg !10838
  br label %for.cond21, !dbg !10840

for.cond21:                                       ; preds = %for.inc44, %if.else
  %30 = load i32, i32* %i20, align 4, !dbg !10841
  %31 = load i32, i32* %row_width, align 4, !dbg !10843
  %cmp22 = icmp ult i32 %30, %31, !dbg !10844
  br i1 %cmp22, label %for.body24, label %for.end46, !dbg !10845

for.body24:                                       ; preds = %for.cond21
  %32 = load i8*, i8** %sp15, align 8, !dbg !10846
  %incdec.ptr25 = getelementptr inbounds i8, i8* %32, i32 -1, !dbg !10846
  store i8* %incdec.ptr25, i8** %sp15, align 8, !dbg !10846
  %33 = load i8, i8* %incdec.ptr25, align 1, !dbg !10848
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %save19, i64 0, i64 0, !dbg !10849
  store i8 %33, i8* %arrayidx, align 1, !dbg !10850
  %34 = load i8*, i8** %sp15, align 8, !dbg !10851
  %incdec.ptr26 = getelementptr inbounds i8, i8* %34, i32 -1, !dbg !10851
  store i8* %incdec.ptr26, i8** %sp15, align 8, !dbg !10851
  %35 = load i8, i8* %incdec.ptr26, align 1, !dbg !10852
  %arrayidx27 = getelementptr inbounds [2 x i8], [2 x i8]* %save19, i64 0, i64 1, !dbg !10853
  store i8 %35, i8* %arrayidx27, align 1, !dbg !10854
  %36 = load i8*, i8** %sp15, align 8, !dbg !10855
  %incdec.ptr28 = getelementptr inbounds i8, i8* %36, i32 -1, !dbg !10855
  store i8* %incdec.ptr28, i8** %sp15, align 8, !dbg !10855
  %37 = load i8, i8* %incdec.ptr28, align 1, !dbg !10856
  %38 = load i8*, i8** %dp18, align 8, !dbg !10857
  %incdec.ptr29 = getelementptr inbounds i8, i8* %38, i32 -1, !dbg !10857
  store i8* %incdec.ptr29, i8** %dp18, align 8, !dbg !10857
  store i8 %37, i8* %incdec.ptr29, align 1, !dbg !10858
  %39 = load i8*, i8** %sp15, align 8, !dbg !10859
  %incdec.ptr30 = getelementptr inbounds i8, i8* %39, i32 -1, !dbg !10859
  store i8* %incdec.ptr30, i8** %sp15, align 8, !dbg !10859
  %40 = load i8, i8* %incdec.ptr30, align 1, !dbg !10860
  %41 = load i8*, i8** %dp18, align 8, !dbg !10861
  %incdec.ptr31 = getelementptr inbounds i8, i8* %41, i32 -1, !dbg !10861
  store i8* %incdec.ptr31, i8** %dp18, align 8, !dbg !10861
  store i8 %40, i8* %incdec.ptr31, align 1, !dbg !10862
  %42 = load i8*, i8** %sp15, align 8, !dbg !10863
  %incdec.ptr32 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !10863
  store i8* %incdec.ptr32, i8** %sp15, align 8, !dbg !10863
  %43 = load i8, i8* %incdec.ptr32, align 1, !dbg !10864
  %44 = load i8*, i8** %dp18, align 8, !dbg !10865
  %incdec.ptr33 = getelementptr inbounds i8, i8* %44, i32 -1, !dbg !10865
  store i8* %incdec.ptr33, i8** %dp18, align 8, !dbg !10865
  store i8 %43, i8* %incdec.ptr33, align 1, !dbg !10866
  %45 = load i8*, i8** %sp15, align 8, !dbg !10867
  %incdec.ptr34 = getelementptr inbounds i8, i8* %45, i32 -1, !dbg !10867
  store i8* %incdec.ptr34, i8** %sp15, align 8, !dbg !10867
  %46 = load i8, i8* %incdec.ptr34, align 1, !dbg !10868
  %47 = load i8*, i8** %dp18, align 8, !dbg !10869
  %incdec.ptr35 = getelementptr inbounds i8, i8* %47, i32 -1, !dbg !10869
  store i8* %incdec.ptr35, i8** %dp18, align 8, !dbg !10869
  store i8 %46, i8* %incdec.ptr35, align 1, !dbg !10870
  %48 = load i8*, i8** %sp15, align 8, !dbg !10871
  %incdec.ptr36 = getelementptr inbounds i8, i8* %48, i32 -1, !dbg !10871
  store i8* %incdec.ptr36, i8** %sp15, align 8, !dbg !10871
  %49 = load i8, i8* %incdec.ptr36, align 1, !dbg !10872
  %50 = load i8*, i8** %dp18, align 8, !dbg !10873
  %incdec.ptr37 = getelementptr inbounds i8, i8* %50, i32 -1, !dbg !10873
  store i8* %incdec.ptr37, i8** %dp18, align 8, !dbg !10873
  store i8 %49, i8* %incdec.ptr37, align 1, !dbg !10874
  %51 = load i8*, i8** %sp15, align 8, !dbg !10875
  %incdec.ptr38 = getelementptr inbounds i8, i8* %51, i32 -1, !dbg !10875
  store i8* %incdec.ptr38, i8** %sp15, align 8, !dbg !10875
  %52 = load i8, i8* %incdec.ptr38, align 1, !dbg !10876
  %53 = load i8*, i8** %dp18, align 8, !dbg !10877
  %incdec.ptr39 = getelementptr inbounds i8, i8* %53, i32 -1, !dbg !10877
  store i8* %incdec.ptr39, i8** %dp18, align 8, !dbg !10877
  store i8 %52, i8* %incdec.ptr39, align 1, !dbg !10878
  %arrayidx40 = getelementptr inbounds [2 x i8], [2 x i8]* %save19, i64 0, i64 0, !dbg !10879
  %54 = load i8, i8* %arrayidx40, align 1, !dbg !10879
  %55 = load i8*, i8** %dp18, align 8, !dbg !10880
  %incdec.ptr41 = getelementptr inbounds i8, i8* %55, i32 -1, !dbg !10880
  store i8* %incdec.ptr41, i8** %dp18, align 8, !dbg !10880
  store i8 %54, i8* %incdec.ptr41, align 1, !dbg !10881
  %arrayidx42 = getelementptr inbounds [2 x i8], [2 x i8]* %save19, i64 0, i64 1, !dbg !10882
  %56 = load i8, i8* %arrayidx42, align 1, !dbg !10882
  %57 = load i8*, i8** %dp18, align 8, !dbg !10883
  %incdec.ptr43 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !10883
  store i8* %incdec.ptr43, i8** %dp18, align 8, !dbg !10883
  store i8 %56, i8* %incdec.ptr43, align 1, !dbg !10884
  br label %for.inc44, !dbg !10885

for.inc44:                                        ; preds = %for.body24
  %58 = load i32, i32* %i20, align 4, !dbg !10886
  %inc45 = add i32 %58, 1, !dbg !10886
  store i32 %inc45, i32* %i20, align 4, !dbg !10886
  br label %for.cond21, !dbg !10887, !llvm.loop !10888

for.end46:                                        ; preds = %for.cond21
  br label %if.end

if.end:                                           ; preds = %for.end46, %for.end
  br label %if.end103, !dbg !10890

if.else47:                                        ; preds = %entry
  %59 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10891
  %color_type48 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %59, i32 0, i32 2, !dbg !10893
  %60 = load i8, i8* %color_type48, align 8, !dbg !10893
  %conv49 = zext i8 %60 to i32, !dbg !10891
  %cmp50 = icmp eq i32 %conv49, 4, !dbg !10894
  br i1 %cmp50, label %if.then52, label %if.end102, !dbg !10895

if.then52:                                        ; preds = %if.else47
  %61 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10896
  %bit_depth53 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %61, i32 0, i32 3, !dbg !10899
  %62 = load i8, i8* %bit_depth53, align 1, !dbg !10899
  %conv54 = zext i8 %62 to i32, !dbg !10896
  %cmp55 = icmp eq i32 %conv54, 8, !dbg !10900
  br i1 %cmp55, label %if.then57, label %if.else75, !dbg !10901

if.then57:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i8** %sp58, metadata !10902, metadata !DIExpression()), !dbg !10904
  %63 = load i8*, i8** %row.addr, align 8, !dbg !10905
  %64 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10906
  %rowbytes59 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %64, i32 0, i32 1, !dbg !10907
  %65 = load i64, i64* %rowbytes59, align 8, !dbg !10907
  %add.ptr60 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !10908
  store i8* %add.ptr60, i8** %sp58, align 8, !dbg !10904
  call void @llvm.dbg.declare(metadata i8** %dp61, metadata !10909, metadata !DIExpression()), !dbg !10910
  %66 = load i8*, i8** %sp58, align 8, !dbg !10911
  store i8* %66, i8** %dp61, align 8, !dbg !10910
  call void @llvm.dbg.declare(metadata i8* %save62, metadata !10912, metadata !DIExpression()), !dbg !10913
  call void @llvm.dbg.declare(metadata i32* %i63, metadata !10914, metadata !DIExpression()), !dbg !10915
  store i32 0, i32* %i63, align 4, !dbg !10916
  br label %for.cond64, !dbg !10918

for.cond64:                                       ; preds = %for.inc72, %if.then57
  %67 = load i32, i32* %i63, align 4, !dbg !10919
  %68 = load i32, i32* %row_width, align 4, !dbg !10921
  %cmp65 = icmp ult i32 %67, %68, !dbg !10922
  br i1 %cmp65, label %for.body67, label %for.end74, !dbg !10923

for.body67:                                       ; preds = %for.cond64
  %69 = load i8*, i8** %sp58, align 8, !dbg !10924
  %incdec.ptr68 = getelementptr inbounds i8, i8* %69, i32 -1, !dbg !10924
  store i8* %incdec.ptr68, i8** %sp58, align 8, !dbg !10924
  %70 = load i8, i8* %incdec.ptr68, align 1, !dbg !10926
  store i8 %70, i8* %save62, align 1, !dbg !10927
  %71 = load i8*, i8** %sp58, align 8, !dbg !10928
  %incdec.ptr69 = getelementptr inbounds i8, i8* %71, i32 -1, !dbg !10928
  store i8* %incdec.ptr69, i8** %sp58, align 8, !dbg !10928
  %72 = load i8, i8* %incdec.ptr69, align 1, !dbg !10929
  %73 = load i8*, i8** %dp61, align 8, !dbg !10930
  %incdec.ptr70 = getelementptr inbounds i8, i8* %73, i32 -1, !dbg !10930
  store i8* %incdec.ptr70, i8** %dp61, align 8, !dbg !10930
  store i8 %72, i8* %incdec.ptr70, align 1, !dbg !10931
  %74 = load i8, i8* %save62, align 1, !dbg !10932
  %75 = load i8*, i8** %dp61, align 8, !dbg !10933
  %incdec.ptr71 = getelementptr inbounds i8, i8* %75, i32 -1, !dbg !10933
  store i8* %incdec.ptr71, i8** %dp61, align 8, !dbg !10933
  store i8 %74, i8* %incdec.ptr71, align 1, !dbg !10934
  br label %for.inc72, !dbg !10935

for.inc72:                                        ; preds = %for.body67
  %76 = load i32, i32* %i63, align 4, !dbg !10936
  %inc73 = add i32 %76, 1, !dbg !10936
  store i32 %inc73, i32* %i63, align 4, !dbg !10936
  br label %for.cond64, !dbg !10937, !llvm.loop !10938

for.end74:                                        ; preds = %for.cond64
  br label %if.end101, !dbg !10940

if.else75:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i8** %sp76, metadata !10941, metadata !DIExpression()), !dbg !10943
  %77 = load i8*, i8** %row.addr, align 8, !dbg !10944
  %78 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !10945
  %rowbytes77 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %78, i32 0, i32 1, !dbg !10946
  %79 = load i64, i64* %rowbytes77, align 8, !dbg !10946
  %add.ptr78 = getelementptr inbounds i8, i8* %77, i64 %79, !dbg !10947
  store i8* %add.ptr78, i8** %sp76, align 8, !dbg !10943
  call void @llvm.dbg.declare(metadata i8** %dp79, metadata !10948, metadata !DIExpression()), !dbg !10949
  %80 = load i8*, i8** %sp76, align 8, !dbg !10950
  store i8* %80, i8** %dp79, align 8, !dbg !10949
  call void @llvm.dbg.declare(metadata [2 x i8]* %save80, metadata !10951, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.declare(metadata i32* %i81, metadata !10953, metadata !DIExpression()), !dbg !10954
  store i32 0, i32* %i81, align 4, !dbg !10955
  br label %for.cond82, !dbg !10957

for.cond82:                                       ; preds = %for.inc98, %if.else75
  %81 = load i32, i32* %i81, align 4, !dbg !10958
  %82 = load i32, i32* %row_width, align 4, !dbg !10960
  %cmp83 = icmp ult i32 %81, %82, !dbg !10961
  br i1 %cmp83, label %for.body85, label %for.end100, !dbg !10962

for.body85:                                       ; preds = %for.cond82
  %83 = load i8*, i8** %sp76, align 8, !dbg !10963
  %incdec.ptr86 = getelementptr inbounds i8, i8* %83, i32 -1, !dbg !10963
  store i8* %incdec.ptr86, i8** %sp76, align 8, !dbg !10963
  %84 = load i8, i8* %incdec.ptr86, align 1, !dbg !10965
  %arrayidx87 = getelementptr inbounds [2 x i8], [2 x i8]* %save80, i64 0, i64 0, !dbg !10966
  store i8 %84, i8* %arrayidx87, align 1, !dbg !10967
  %85 = load i8*, i8** %sp76, align 8, !dbg !10968
  %incdec.ptr88 = getelementptr inbounds i8, i8* %85, i32 -1, !dbg !10968
  store i8* %incdec.ptr88, i8** %sp76, align 8, !dbg !10968
  %86 = load i8, i8* %incdec.ptr88, align 1, !dbg !10969
  %arrayidx89 = getelementptr inbounds [2 x i8], [2 x i8]* %save80, i64 0, i64 1, !dbg !10970
  store i8 %86, i8* %arrayidx89, align 1, !dbg !10971
  %87 = load i8*, i8** %sp76, align 8, !dbg !10972
  %incdec.ptr90 = getelementptr inbounds i8, i8* %87, i32 -1, !dbg !10972
  store i8* %incdec.ptr90, i8** %sp76, align 8, !dbg !10972
  %88 = load i8, i8* %incdec.ptr90, align 1, !dbg !10973
  %89 = load i8*, i8** %dp79, align 8, !dbg !10974
  %incdec.ptr91 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10974
  store i8* %incdec.ptr91, i8** %dp79, align 8, !dbg !10974
  store i8 %88, i8* %incdec.ptr91, align 1, !dbg !10975
  %90 = load i8*, i8** %sp76, align 8, !dbg !10976
  %incdec.ptr92 = getelementptr inbounds i8, i8* %90, i32 -1, !dbg !10976
  store i8* %incdec.ptr92, i8** %sp76, align 8, !dbg !10976
  %91 = load i8, i8* %incdec.ptr92, align 1, !dbg !10977
  %92 = load i8*, i8** %dp79, align 8, !dbg !10978
  %incdec.ptr93 = getelementptr inbounds i8, i8* %92, i32 -1, !dbg !10978
  store i8* %incdec.ptr93, i8** %dp79, align 8, !dbg !10978
  store i8 %91, i8* %incdec.ptr93, align 1, !dbg !10979
  %arrayidx94 = getelementptr inbounds [2 x i8], [2 x i8]* %save80, i64 0, i64 0, !dbg !10980
  %93 = load i8, i8* %arrayidx94, align 1, !dbg !10980
  %94 = load i8*, i8** %dp79, align 8, !dbg !10981
  %incdec.ptr95 = getelementptr inbounds i8, i8* %94, i32 -1, !dbg !10981
  store i8* %incdec.ptr95, i8** %dp79, align 8, !dbg !10981
  store i8 %93, i8* %incdec.ptr95, align 1, !dbg !10982
  %arrayidx96 = getelementptr inbounds [2 x i8], [2 x i8]* %save80, i64 0, i64 1, !dbg !10983
  %95 = load i8, i8* %arrayidx96, align 1, !dbg !10983
  %96 = load i8*, i8** %dp79, align 8, !dbg !10984
  %incdec.ptr97 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !10984
  store i8* %incdec.ptr97, i8** %dp79, align 8, !dbg !10984
  store i8 %95, i8* %incdec.ptr97, align 1, !dbg !10985
  br label %for.inc98, !dbg !10986

for.inc98:                                        ; preds = %for.body85
  %97 = load i32, i32* %i81, align 4, !dbg !10987
  %inc99 = add i32 %97, 1, !dbg !10987
  store i32 %inc99, i32* %i81, align 4, !dbg !10987
  br label %for.cond82, !dbg !10988, !llvm.loop !10989

for.end100:                                       ; preds = %for.cond82
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %for.end74
  br label %if.end102, !dbg !10991

if.end102:                                        ; preds = %if.end101, %if.else47
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end
  ret void, !dbg !10992
}

declare dso_local void @png_do_swap(%struct.png_row_info_struct*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_build_grayscale_palette(i32 %bit_depth, %struct.png_color_struct* %palette) #0 !dbg !10993 {
entry:
  %bit_depth.addr = alloca i32, align 4
  %palette.addr = alloca %struct.png_color_struct*, align 8
  %num_palette = alloca i32, align 4
  %color_inc = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  store i32 %bit_depth, i32* %bit_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_depth.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  store %struct.png_color_struct* %palette, %struct.png_color_struct** %palette.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %palette.addr, metadata !10998, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata i32* %num_palette, metadata !11000, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata i32* %color_inc, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata i32* %v, metadata !11006, metadata !DIExpression()), !dbg !11007
  %0 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !11008
  %cmp = icmp eq %struct.png_color_struct* %0, null, !dbg !11010
  br i1 %cmp, label %if.then, label %if.end, !dbg !11011

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !11012

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bit_depth.addr, align 4, !dbg !11013
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ], !dbg !11014

sw.bb:                                            ; preds = %if.end
  store i32 2, i32* %num_palette, align 4, !dbg !11015
  store i32 255, i32* %color_inc, align 4, !dbg !11017
  br label %sw.epilog, !dbg !11018

sw.bb1:                                           ; preds = %if.end
  store i32 4, i32* %num_palette, align 4, !dbg !11019
  store i32 85, i32* %color_inc, align 4, !dbg !11020
  br label %sw.epilog, !dbg !11021

sw.bb2:                                           ; preds = %if.end
  store i32 16, i32* %num_palette, align 4, !dbg !11022
  store i32 17, i32* %color_inc, align 4, !dbg !11023
  br label %sw.epilog, !dbg !11024

sw.bb3:                                           ; preds = %if.end
  store i32 256, i32* %num_palette, align 4, !dbg !11025
  store i32 1, i32* %color_inc, align 4, !dbg !11026
  br label %sw.epilog, !dbg !11027

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %num_palette, align 4, !dbg !11028
  store i32 0, i32* %color_inc, align 4, !dbg !11029
  br label %sw.epilog, !dbg !11030

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !11031
  store i32 0, i32* %v, align 4, !dbg !11033
  br label %for.cond, !dbg !11034

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %2 = load i32, i32* %i, align 4, !dbg !11035
  %3 = load i32, i32* %num_palette, align 4, !dbg !11037
  %cmp4 = icmp slt i32 %2, %3, !dbg !11038
  br i1 %cmp4, label %for.body, label %for.end, !dbg !11039

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %v, align 4, !dbg !11040
  %conv = trunc i32 %4 to i8, !dbg !11042
  %5 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !11043
  %6 = load i32, i32* %i, align 4, !dbg !11044
  %idxprom = sext i32 %6 to i64, !dbg !11043
  %arrayidx = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %5, i64 %idxprom, !dbg !11043
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx, i32 0, i32 0, !dbg !11045
  store i8 %conv, i8* %red, align 1, !dbg !11046
  %7 = load i32, i32* %v, align 4, !dbg !11047
  %conv5 = trunc i32 %7 to i8, !dbg !11048
  %8 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !11049
  %9 = load i32, i32* %i, align 4, !dbg !11050
  %idxprom6 = sext i32 %9 to i64, !dbg !11049
  %arrayidx7 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %8, i64 %idxprom6, !dbg !11049
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx7, i32 0, i32 1, !dbg !11051
  store i8 %conv5, i8* %green, align 1, !dbg !11052
  %10 = load i32, i32* %v, align 4, !dbg !11053
  %conv8 = trunc i32 %10 to i8, !dbg !11054
  %11 = load %struct.png_color_struct*, %struct.png_color_struct** %palette.addr, align 8, !dbg !11055
  %12 = load i32, i32* %i, align 4, !dbg !11056
  %idxprom9 = sext i32 %12 to i64, !dbg !11055
  %arrayidx10 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %11, i64 %idxprom9, !dbg !11055
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx10, i32 0, i32 2, !dbg !11057
  store i8 %conv8, i8* %blue, align 1, !dbg !11058
  br label %for.inc, !dbg !11059

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !11060
  %inc = add nsw i32 %13, 1, !dbg !11060
  store i32 %inc, i32* %i, align 4, !dbg !11060
  %14 = load i32, i32* %color_inc, align 4, !dbg !11061
  %15 = load i32, i32* %v, align 4, !dbg !11062
  %add = add nsw i32 %15, %14, !dbg !11062
  store i32 %add, i32* %v, align 4, !dbg !11062
  br label %for.cond, !dbg !11063, !llvm.loop !11064

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !11066
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_intrapixel(%struct.png_row_info_struct* %row_info, i8* %row) #0 !dbg !11067 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %bytes_per_pixel = alloca i32, align 4
  %row_width = alloca i32, align 4
  %rp = alloca i8*, align 8
  %i = alloca i32, align 4
  %rp39 = alloca i8*, align 8
  %i40 = alloca i32, align 4
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %red = alloca i32, align 4
  %blue = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !11068, metadata !DIExpression()), !dbg !11069
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11072
  %color_type = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 2, !dbg !11074
  %1 = load i8, i8* %color_type, align 8, !dbg !11074
  %conv = zext i8 %1 to i32, !dbg !11072
  %and = and i32 %conv, 2, !dbg !11075
  %tobool = icmp ne i32 %and, 0, !dbg !11075
  br i1 %tobool, label %if.then, label %if.end99, !dbg !11076

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bytes_per_pixel, metadata !11077, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !11080, metadata !DIExpression()), !dbg !11081
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11082
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 0, !dbg !11083
  %3 = load i32, i32* %width, align 8, !dbg !11083
  store i32 %3, i32* %row_width, align 4, !dbg !11081
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11084
  %bit_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 3, !dbg !11086
  %5 = load i8, i8* %bit_depth, align 1, !dbg !11086
  %conv1 = zext i8 %5 to i32, !dbg !11084
  %cmp = icmp eq i32 %conv1, 8, !dbg !11087
  br i1 %cmp, label %if.then3, label %if.else33, !dbg !11088

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !11089, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11092, metadata !DIExpression()), !dbg !11093
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11094
  %color_type4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 2, !dbg !11096
  %7 = load i8, i8* %color_type4, align 8, !dbg !11096
  %conv5 = zext i8 %7 to i32, !dbg !11094
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !11097
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !11098

if.then8:                                         ; preds = %if.then3
  store i32 3, i32* %bytes_per_pixel, align 4, !dbg !11099
  br label %if.end15, !dbg !11100

if.else:                                          ; preds = %if.then3
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11101
  %color_type9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %8, i32 0, i32 2, !dbg !11103
  %9 = load i8, i8* %color_type9, align 8, !dbg !11103
  %conv10 = zext i8 %9 to i32, !dbg !11101
  %cmp11 = icmp eq i32 %conv10, 6, !dbg !11104
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !11105

if.then13:                                        ; preds = %if.else
  store i32 4, i32* %bytes_per_pixel, align 4, !dbg !11106
  br label %if.end, !dbg !11107

if.else14:                                        ; preds = %if.else
  br label %if.end99, !dbg !11108

if.end:                                           ; preds = %if.then13
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then8
  store i32 0, i32* %i, align 4, !dbg !11109
  %10 = load i8*, i8** %row.addr, align 8, !dbg !11111
  store i8* %10, i8** %rp, align 8, !dbg !11112
  br label %for.cond, !dbg !11113

for.cond:                                         ; preds = %for.inc, %if.end15
  %11 = load i32, i32* %i, align 4, !dbg !11114
  %12 = load i32, i32* %row_width, align 4, !dbg !11116
  %cmp16 = icmp ult i32 %11, %12, !dbg !11117
  br i1 %cmp16, label %for.body, label %for.end, !dbg !11118

for.body:                                         ; preds = %for.cond
  %13 = load i8*, i8** %rp, align 8, !dbg !11119
  %14 = load i8, i8* %13, align 1, !dbg !11121
  %conv18 = zext i8 %14 to i32, !dbg !11121
  %add = add nsw i32 256, %conv18, !dbg !11122
  %15 = load i8*, i8** %rp, align 8, !dbg !11123
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 1, !dbg !11124
  %16 = load i8, i8* %add.ptr, align 1, !dbg !11125
  %conv19 = zext i8 %16 to i32, !dbg !11125
  %add20 = add nsw i32 %add, %conv19, !dbg !11126
  %and21 = and i32 %add20, 255, !dbg !11127
  %conv22 = trunc i32 %and21 to i8, !dbg !11128
  %17 = load i8*, i8** %rp, align 8, !dbg !11129
  store i8 %conv22, i8* %17, align 1, !dbg !11130
  %18 = load i8*, i8** %rp, align 8, !dbg !11131
  %add.ptr23 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !11132
  %19 = load i8, i8* %add.ptr23, align 1, !dbg !11133
  %conv24 = zext i8 %19 to i32, !dbg !11133
  %add25 = add nsw i32 256, %conv24, !dbg !11134
  %20 = load i8*, i8** %rp, align 8, !dbg !11135
  %add.ptr26 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !11136
  %21 = load i8, i8* %add.ptr26, align 1, !dbg !11137
  %conv27 = zext i8 %21 to i32, !dbg !11137
  %add28 = add nsw i32 %add25, %conv27, !dbg !11138
  %and29 = and i32 %add28, 255, !dbg !11139
  %conv30 = trunc i32 %and29 to i8, !dbg !11140
  %22 = load i8*, i8** %rp, align 8, !dbg !11141
  %add.ptr31 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !11142
  store i8 %conv30, i8* %add.ptr31, align 1, !dbg !11143
  br label %for.inc, !dbg !11144

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !11145
  %inc = add i32 %23, 1, !dbg !11145
  store i32 %inc, i32* %i, align 4, !dbg !11145
  %24 = load i32, i32* %bytes_per_pixel, align 4, !dbg !11146
  %25 = load i8*, i8** %rp, align 8, !dbg !11147
  %idx.ext = sext i32 %24 to i64, !dbg !11147
  %add.ptr32 = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !11147
  store i8* %add.ptr32, i8** %rp, align 8, !dbg !11147
  br label %for.cond, !dbg !11148, !llvm.loop !11149

for.end:                                          ; preds = %for.cond
  br label %if.end98, !dbg !11151

if.else33:                                        ; preds = %if.then
  %26 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11152
  %bit_depth34 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %26, i32 0, i32 3, !dbg !11154
  %27 = load i8, i8* %bit_depth34, align 1, !dbg !11154
  %conv35 = zext i8 %27 to i32, !dbg !11152
  %cmp36 = icmp eq i32 %conv35, 16, !dbg !11155
  br i1 %cmp36, label %if.then38, label %if.end97, !dbg !11156

if.then38:                                        ; preds = %if.else33
  call void @llvm.dbg.declare(metadata i8** %rp39, metadata !11157, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.declare(metadata i32* %i40, metadata !11160, metadata !DIExpression()), !dbg !11161
  %28 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11162
  %color_type41 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %28, i32 0, i32 2, !dbg !11164
  %29 = load i8, i8* %color_type41, align 8, !dbg !11164
  %conv42 = zext i8 %29 to i32, !dbg !11162
  %cmp43 = icmp eq i32 %conv42, 2, !dbg !11165
  br i1 %cmp43, label %if.then45, label %if.else46, !dbg !11166

if.then45:                                        ; preds = %if.then38
  store i32 6, i32* %bytes_per_pixel, align 4, !dbg !11167
  br label %if.end54, !dbg !11168

if.else46:                                        ; preds = %if.then38
  %30 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !11169
  %color_type47 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %30, i32 0, i32 2, !dbg !11171
  %31 = load i8, i8* %color_type47, align 8, !dbg !11171
  %conv48 = zext i8 %31 to i32, !dbg !11169
  %cmp49 = icmp eq i32 %conv48, 6, !dbg !11172
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !11173

if.then51:                                        ; preds = %if.else46
  store i32 8, i32* %bytes_per_pixel, align 4, !dbg !11174
  br label %if.end53, !dbg !11175

if.else52:                                        ; preds = %if.else46
  br label %if.end99, !dbg !11176

if.end53:                                         ; preds = %if.then51
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then45
  store i32 0, i32* %i40, align 4, !dbg !11177
  %32 = load i8*, i8** %row.addr, align 8, !dbg !11179
  store i8* %32, i8** %rp39, align 8, !dbg !11180
  br label %for.cond55, !dbg !11181

for.cond55:                                       ; preds = %for.inc92, %if.end54
  %33 = load i32, i32* %i40, align 4, !dbg !11182
  %34 = load i32, i32* %row_width, align 4, !dbg !11184
  %cmp56 = icmp ult i32 %33, %34, !dbg !11185
  br i1 %cmp56, label %for.body58, label %for.end96, !dbg !11186

for.body58:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata i32* %s0, metadata !11187, metadata !DIExpression()), !dbg !11189
  %35 = load i8*, i8** %rp39, align 8, !dbg !11190
  %36 = load i8, i8* %35, align 1, !dbg !11191
  %conv59 = zext i8 %36 to i32, !dbg !11191
  %shl = shl i32 %conv59, 8, !dbg !11192
  %37 = load i8*, i8** %rp39, align 8, !dbg !11193
  %add.ptr60 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !11194
  %38 = load i8, i8* %add.ptr60, align 1, !dbg !11195
  %conv61 = zext i8 %38 to i32, !dbg !11195
  %or = or i32 %shl, %conv61, !dbg !11196
  store i32 %or, i32* %s0, align 4, !dbg !11189
  call void @llvm.dbg.declare(metadata i32* %s1, metadata !11197, metadata !DIExpression()), !dbg !11198
  %39 = load i8*, i8** %rp39, align 8, !dbg !11199
  %add.ptr62 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !11200
  %40 = load i8, i8* %add.ptr62, align 1, !dbg !11201
  %conv63 = zext i8 %40 to i32, !dbg !11201
  %shl64 = shl i32 %conv63, 8, !dbg !11202
  %41 = load i8*, i8** %rp39, align 8, !dbg !11203
  %add.ptr65 = getelementptr inbounds i8, i8* %41, i64 3, !dbg !11204
  %42 = load i8, i8* %add.ptr65, align 1, !dbg !11205
  %conv66 = zext i8 %42 to i32, !dbg !11205
  %or67 = or i32 %shl64, %conv66, !dbg !11206
  store i32 %or67, i32* %s1, align 4, !dbg !11198
  call void @llvm.dbg.declare(metadata i32* %s2, metadata !11207, metadata !DIExpression()), !dbg !11208
  %43 = load i8*, i8** %rp39, align 8, !dbg !11209
  %add.ptr68 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !11210
  %44 = load i8, i8* %add.ptr68, align 1, !dbg !11211
  %conv69 = zext i8 %44 to i32, !dbg !11211
  %shl70 = shl i32 %conv69, 8, !dbg !11212
  %45 = load i8*, i8** %rp39, align 8, !dbg !11213
  %add.ptr71 = getelementptr inbounds i8, i8* %45, i64 5, !dbg !11214
  %46 = load i8, i8* %add.ptr71, align 1, !dbg !11215
  %conv72 = zext i8 %46 to i32, !dbg !11215
  %or73 = or i32 %shl70, %conv72, !dbg !11216
  store i32 %or73, i32* %s2, align 4, !dbg !11208
  call void @llvm.dbg.declare(metadata i32* %red, metadata !11217, metadata !DIExpression()), !dbg !11218
  %47 = load i32, i32* %s0, align 4, !dbg !11219
  %48 = load i32, i32* %s1, align 4, !dbg !11220
  %add74 = add i32 %47, %48, !dbg !11221
  %add75 = add i32 %add74, 65536, !dbg !11222
  %and76 = and i32 %add75, 65535, !dbg !11223
  store i32 %and76, i32* %red, align 4, !dbg !11218
  call void @llvm.dbg.declare(metadata i32* %blue, metadata !11224, metadata !DIExpression()), !dbg !11225
  %49 = load i32, i32* %s2, align 4, !dbg !11226
  %50 = load i32, i32* %s1, align 4, !dbg !11227
  %add77 = add i32 %49, %50, !dbg !11228
  %add78 = add i32 %add77, 65536, !dbg !11229
  %and79 = and i32 %add78, 65535, !dbg !11230
  store i32 %and79, i32* %blue, align 4, !dbg !11225
  %51 = load i32, i32* %red, align 4, !dbg !11231
  %shr = lshr i32 %51, 8, !dbg !11232
  %and80 = and i32 %shr, 255, !dbg !11233
  %conv81 = trunc i32 %and80 to i8, !dbg !11234
  %52 = load i8*, i8** %rp39, align 8, !dbg !11235
  store i8 %conv81, i8* %52, align 1, !dbg !11236
  %53 = load i32, i32* %red, align 4, !dbg !11237
  %and82 = and i32 %53, 255, !dbg !11238
  %conv83 = trunc i32 %and82 to i8, !dbg !11239
  %54 = load i8*, i8** %rp39, align 8, !dbg !11240
  %add.ptr84 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !11241
  store i8 %conv83, i8* %add.ptr84, align 1, !dbg !11242
  %55 = load i32, i32* %blue, align 4, !dbg !11243
  %shr85 = lshr i32 %55, 8, !dbg !11244
  %and86 = and i32 %shr85, 255, !dbg !11245
  %conv87 = trunc i32 %and86 to i8, !dbg !11246
  %56 = load i8*, i8** %rp39, align 8, !dbg !11247
  %add.ptr88 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !11248
  store i8 %conv87, i8* %add.ptr88, align 1, !dbg !11249
  %57 = load i32, i32* %blue, align 4, !dbg !11250
  %and89 = and i32 %57, 255, !dbg !11251
  %conv90 = trunc i32 %and89 to i8, !dbg !11252
  %58 = load i8*, i8** %rp39, align 8, !dbg !11253
  %add.ptr91 = getelementptr inbounds i8, i8* %58, i64 5, !dbg !11254
  store i8 %conv90, i8* %add.ptr91, align 1, !dbg !11255
  br label %for.inc92, !dbg !11256

for.inc92:                                        ; preds = %for.body58
  %59 = load i32, i32* %i40, align 4, !dbg !11257
  %inc93 = add i32 %59, 1, !dbg !11257
  store i32 %inc93, i32* %i40, align 4, !dbg !11257
  %60 = load i32, i32* %bytes_per_pixel, align 4, !dbg !11258
  %61 = load i8*, i8** %rp39, align 8, !dbg !11259
  %idx.ext94 = sext i32 %60 to i64, !dbg !11259
  %add.ptr95 = getelementptr inbounds i8, i8* %61, i64 %idx.ext94, !dbg !11259
  store i8* %add.ptr95, i8** %rp39, align 8, !dbg !11259
  br label %for.cond55, !dbg !11260, !llvm.loop !11261

for.end96:                                        ; preds = %for.cond55
  br label %if.end97, !dbg !11263

if.end97:                                         ; preds = %for.end96, %if.else33
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %for.end
  br label %if.end99, !dbg !11264

if.end99:                                         ; preds = %if.else14, %if.else52, %if.end98, %entry
  ret void, !dbg !11265
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noreturn
declare dso_local void @png_fixed_error(%struct.png_struct_def*, i8*) #4

declare dso_local i32 @png_muldiv(i32*, i32, i32, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }
attributes #7 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!32, !33, !34}
!llvm.ident = !{!35}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "libpng/pngrtran.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{}
!3 = !{!4, !5, !8, !10, !12, !13, !23, !24, !26, !30}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_byte", file: !6, line: 449, baseType: !7)
!6 = !DIFile(filename: "libpng/pngconf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_bytep", file: !6, line: 526, baseType: !9)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_32", file: !6, line: 441, baseType: !11)
!11 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_dsortpp", file: !1, line: 378, baseType: !14)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_dsort", file: !1, line: 376, baseType: !17)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_dsort_struct", file: !1, line: 371, size: 128, elements: !18)
!18 = !{!19, !21, !22}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17, file: !1, line: 373, baseType: !20, size: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !17, file: !1, line: 374, baseType: !5, size: 8, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !17, file: !1, line: 375, baseType: !5, size: 8, offset: 72)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_dsortp", file: !1, line: 377, baseType: !15)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16", file: !6, line: 447, baseType: !25)
!25 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_size_t", file: !6, line: 454, baseType: !27)
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !28, line: 46, baseType: !29)
!28 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!29 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_fixed_point", file: !6, line: 521, baseType: !31)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_int_32", file: !6, line: 442, baseType: !12)
!32 = !{i32 7, !"Dwarf Version", i32 4}
!33 = !{i32 2, !"Debug Info Version", i32 3}
!34 = !{i32 1, !"wchar_size", i32 4}
!35 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!36 = distinct !DISubprogram(name: "png_set_crc_action", scope: !1, file: !1, line: 25, type: !37, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !39, !12, !12}
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_structp", file: !40, line: 851, baseType: !41)
!40 = !DIFile(filename: "libpng/png.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_struct", file: !40, line: 849, baseType: !43)
!43 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_struct_def", file: !44, line: 29, size: 9728, elements: !45)
!44 = !DIFile(filename: "libpng/pngstruct.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !71, !77, !86, !87, !89, !94, !95, !96, !112, !113, !114, !115, !116, !117, !118, !119, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !218, !219, !220, !221, !230, !231, !236, !237, !238, !239, !240, !241, !242, !246, !247, !248, !249, !250, !259, !260, !261, !262, !267, !269, !397, !402, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !430, !431, !432, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !453, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "longjmp_buffer", scope: !43, file: !44, line: 32, baseType: !47, size: 1600)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !48, line: 45, baseType: !49)
!48 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!49 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 1600, elements: !69)
!50 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !48, line: 33, size: 1600, elements: !51)
!51 = !{!52, !59, !60}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !50, file: !48, line: 39, baseType: !53, size: 512)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !54, line: 31, baseType: !55)
!54 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "")
!55 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 512, elements: !57)
!56 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!57 = !{!58}
!58 = !DISubrange(count: 8)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !50, file: !48, line: 40, baseType: !12, size: 32, offset: 512)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !50, file: !48, line: 41, baseType: !61, size: 1024, offset: 576)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !62, line: 8, baseType: !63)
!62 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 5, size: 1024, elements: !64)
!64 = !{!65}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !63, file: !62, line: 7, baseType: !66, size: 1024)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 1024, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 16)
!69 = !{!70}
!70 = !DISubrange(count: 1)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "longjmp_fn", scope: !43, file: !44, line: 33, baseType: !72, size: 64, offset: 1600)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_longjmp_ptr", file: !40, line: 913, baseType: !73)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{null, !76, !12}
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "error_fn", scope: !43, file: !44, line: 35, baseType: !78, size: 64, offset: 1664)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_error_ptr", file: !40, line: 861, baseType: !79)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !39, !82}
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_charp", file: !6, line: 537, baseType: !83)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !85)
!85 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "warning_fn", scope: !43, file: !44, line: 37, baseType: !78, size: 64, offset: 1728)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "error_ptr", scope: !43, file: !44, line: 39, baseType: !88, size: 64, offset: 1792)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_voidp", file: !6, line: 524, baseType: !4)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_fn", scope: !43, file: !44, line: 40, baseType: !90, size: 64, offset: 1856)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_rw_ptr", file: !40, line: 862, baseType: !91)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DISubroutineType(types: !93)
!93 = !{null, !39, !8, !26}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_fn", scope: !43, file: !44, line: 41, baseType: !90, size: 64, offset: 1920)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "io_ptr", scope: !43, file: !44, line: 42, baseType: !88, size: 64, offset: 1984)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "read_user_transform_fn", scope: !43, file: !44, line: 45, baseType: !97, size: 64, offset: 2048)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_user_transform_ptr", file: !40, line: 889, baseType: !98)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!99 = !DISubroutineType(types: !100)
!100 = !{null, !39, !101, !8}
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_row_infop", file: !40, line: 842, baseType: !102)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_row_info", file: !40, line: 840, baseType: !104)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_row_info_struct", file: !40, line: 832, size: 192, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !111}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !104, file: !40, line: 834, baseType: !10, size: 32)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !104, file: !40, line: 835, baseType: !26, size: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !104, file: !40, line: 836, baseType: !5, size: 8, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !104, file: !40, line: 837, baseType: !5, size: 8, offset: 136)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !104, file: !40, line: 838, baseType: !5, size: 8, offset: 144)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !104, file: !40, line: 839, baseType: !5, size: 8, offset: 152)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "write_user_transform_fn", scope: !43, file: !44, line: 49, baseType: !97, size: 64, offset: 2112)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_ptr", scope: !43, file: !44, line: 56, baseType: !88, size: 64, offset: 2176)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_depth", scope: !43, file: !44, line: 57, baseType: !5, size: 8, offset: 2240)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_channels", scope: !43, file: !44, line: 58, baseType: !5, size: 8, offset: 2248)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !43, file: !44, line: 62, baseType: !10, size: 32, offset: 2272)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !43, file: !44, line: 63, baseType: !10, size: 32, offset: 2304)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "transformations", scope: !43, file: !44, line: 64, baseType: !10, size: 32, offset: 2336)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "zstream", scope: !43, file: !44, line: 66, baseType: !120, size: 896, offset: 2368)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !121, line: 104, baseType: !122)
!121 = !DIFile(filename: "zlib/zlib.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !121, line: 85, size: 896, elements: !123)
!123 = !{!124, !129, !131, !133, !134, !135, !136, !138, !143, !149, !154, !155, !156, !157}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !122, file: !121, line: 86, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !127, line: 374, baseType: !128)
!127 = !DIFile(filename: "zlib/zconf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !127, line: 365, baseType: !7)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !122, file: !121, line: 87, baseType: !130, size: 32, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !127, line: 367, baseType: !11)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !122, file: !121, line: 88, baseType: !132, size: 64, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !127, line: 368, baseType: !29)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !122, file: !121, line: 90, baseType: !125, size: 64, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !122, file: !121, line: 91, baseType: !130, size: 32, offset: 256)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !122, file: !121, line: 92, baseType: !132, size: 64, offset: 320)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !122, file: !121, line: 94, baseType: !137, size: 64, offset: 384)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !122, file: !121, line: 95, baseType: !139, size: 64, offset: 448)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !121, line: 1714, size: 32, elements: !141)
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !140, file: !121, line: 1714, baseType: !12, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !122, file: !121, line: 97, baseType: !144, size: 64, offset: 512)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !121, line: 80, baseType: !145)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DISubroutineType(types: !147)
!147 = !{!148, !148, !130, !130}
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !127, line: 383, baseType: !4)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !122, file: !121, line: 98, baseType: !150, size: 64, offset: 576)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !121, line: 81, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DISubroutineType(types: !153)
!153 = !{null, !148, !148}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !122, file: !121, line: 99, baseType: !148, size: 64, offset: 640)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !122, file: !121, line: 101, baseType: !12, size: 32, offset: 704)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !122, file: !121, line: 102, baseType: !132, size: 64, offset: 768)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !122, file: !121, line: 103, baseType: !132, size: 64, offset: 832)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !43, file: !44, line: 67, baseType: !8, size: 64, offset: 3264)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_size", scope: !43, file: !44, line: 68, baseType: !130, size: 32, offset: 3328)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_state", scope: !43, file: !44, line: 80, baseType: !10, size: 32, offset: 3360)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_level", scope: !43, file: !44, line: 83, baseType: !12, size: 32, offset: 3392)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_method", scope: !43, file: !44, line: 84, baseType: !12, size: 32, offset: 3424)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_window_bits", scope: !43, file: !44, line: 85, baseType: !12, size: 32, offset: 3456)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_mem_level", scope: !43, file: !44, line: 86, baseType: !12, size: 32, offset: 3488)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_strategy", scope: !43, file: !44, line: 87, baseType: !12, size: 32, offset: 3520)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_level", scope: !43, file: !44, line: 92, baseType: !12, size: 32, offset: 3552)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_method", scope: !43, file: !44, line: 93, baseType: !12, size: 32, offset: 3584)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_window_bits", scope: !43, file: !44, line: 94, baseType: !12, size: 32, offset: 3616)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_mem_level", scope: !43, file: !44, line: 95, baseType: !12, size: 32, offset: 3648)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_strategy", scope: !43, file: !44, line: 96, baseType: !12, size: 32, offset: 3680)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !43, file: !44, line: 100, baseType: !10, size: 32, offset: 3712)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !43, file: !44, line: 101, baseType: !10, size: 32, offset: 3744)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "num_rows", scope: !43, file: !44, line: 102, baseType: !10, size: 32, offset: 3776)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "usr_width", scope: !43, file: !44, line: 103, baseType: !10, size: 32, offset: 3808)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !43, file: !44, line: 104, baseType: !26, size: 64, offset: 3840)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "iwidth", scope: !43, file: !44, line: 105, baseType: !10, size: 32, offset: 3904)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "row_number", scope: !43, file: !44, line: 106, baseType: !10, size: 32, offset: 3936)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_name", scope: !43, file: !44, line: 107, baseType: !10, size: 32, offset: 3968)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "prev_row", scope: !43, file: !44, line: 108, baseType: !8, size: 64, offset: 4032)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "row_buf", scope: !43, file: !44, line: 111, baseType: !8, size: 64, offset: 4096)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sub_row", scope: !43, file: !44, line: 114, baseType: !8, size: 64, offset: 4160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "up_row", scope: !43, file: !44, line: 115, baseType: !8, size: 64, offset: 4224)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "avg_row", scope: !43, file: !44, line: 116, baseType: !8, size: 64, offset: 4288)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "paeth_row", scope: !43, file: !44, line: 117, baseType: !8, size: 64, offset: 4352)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "info_rowbytes", scope: !43, file: !44, line: 118, baseType: !26, size: 64, offset: 4416)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "idat_size", scope: !43, file: !44, line: 120, baseType: !10, size: 32, offset: 4480)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !43, file: !44, line: 121, baseType: !10, size: 32, offset: 4512)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !43, file: !44, line: 122, baseType: !189, size: 64, offset: 4544)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_colorp", file: !40, line: 559, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color", file: !40, line: 558, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_struct", file: !40, line: 553, size: 24, elements: !193)
!193 = !{!194, !195, !196}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !192, file: !40, line: 555, baseType: !5, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !192, file: !40, line: 556, baseType: !5, size: 8, offset: 8)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !192, file: !40, line: 557, baseType: !5, size: 8, offset: 16)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette", scope: !43, file: !44, line: 123, baseType: !24, size: 16, offset: 4608)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette_max", scope: !43, file: !44, line: 127, baseType: !12, size: 32, offset: 4640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "num_trans", scope: !43, file: !44, line: 130, baseType: !24, size: 16, offset: 4672)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !43, file: !44, line: 131, baseType: !5, size: 8, offset: 4688)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !43, file: !44, line: 132, baseType: !5, size: 8, offset: 4696)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !43, file: !44, line: 133, baseType: !5, size: 8, offset: 4704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !43, file: !44, line: 134, baseType: !5, size: 8, offset: 4712)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "do_filter", scope: !43, file: !44, line: 135, baseType: !5, size: 8, offset: 4720)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !43, file: !44, line: 136, baseType: !5, size: 8, offset: 4728)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !43, file: !44, line: 137, baseType: !5, size: 8, offset: 4736)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "usr_bit_depth", scope: !43, file: !44, line: 138, baseType: !5, size: 8, offset: 4744)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !43, file: !44, line: 139, baseType: !5, size: 8, offset: 4752)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !43, file: !44, line: 140, baseType: !5, size: 8, offset: 4760)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "usr_channels", scope: !43, file: !44, line: 141, baseType: !5, size: 8, offset: 4768)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bytes", scope: !43, file: !44, line: 142, baseType: !5, size: 8, offset: 4776)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "maximum_pixel_depth", scope: !43, file: !44, line: 143, baseType: !5, size: 8, offset: 4784)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "transformed_pixel_depth", scope: !43, file: !44, line: 145, baseType: !5, size: 8, offset: 4792)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "io_chunk_string", scope: !43, file: !44, line: 147, baseType: !215, size: 40, offset: 4800)
!215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 40, elements: !216)
!216 = !{!217}
!217 = !DISubrange(count: 5)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "filler", scope: !43, file: !44, line: 151, baseType: !24, size: 16, offset: 4848)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "background_gamma_type", scope: !43, file: !44, line: 156, baseType: !5, size: 8, offset: 4864)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "background_gamma", scope: !43, file: !44, line: 157, baseType: !30, size: 32, offset: 4896)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "background", scope: !43, file: !44, line: 158, baseType: !222, size: 80, offset: 4928)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color_16", file: !40, line: 570, baseType: !223)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_16_struct", file: !40, line: 563, size: 80, elements: !224)
!224 = !{!225, !226, !227, !228, !229}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !223, file: !40, line: 565, baseType: !5, size: 8)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !223, file: !40, line: 566, baseType: !24, size: 16, offset: 16)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !223, file: !40, line: 567, baseType: !24, size: 16, offset: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !223, file: !40, line: 568, baseType: !24, size: 16, offset: 48)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "gray", scope: !223, file: !40, line: 569, baseType: !24, size: 16, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "background_1", scope: !43, file: !44, line: 160, baseType: !222, size: 80, offset: 5008)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "output_flush_fn", scope: !43, file: !44, line: 165, baseType: !232, size: 64, offset: 5120)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_flush_ptr", file: !40, line: 863, baseType: !233)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{null, !39}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "flush_dist", scope: !43, file: !44, line: 166, baseType: !10, size: 32, offset: 5184)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flush_rows", scope: !43, file: !44, line: 167, baseType: !10, size: 32, offset: 5216)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_shift", scope: !43, file: !44, line: 171, baseType: !12, size: 32, offset: 5248)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !43, file: !44, line: 172, baseType: !30, size: 32, offset: 5280)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "screen_gamma", scope: !43, file: !44, line: 173, baseType: !30, size: 32, offset: 5312)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_table", scope: !43, file: !44, line: 175, baseType: !8, size: 64, offset: 5376)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_table", scope: !43, file: !44, line: 176, baseType: !243, size: 64, offset: 5440)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16pp", file: !6, line: 556, baseType: !244)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_from_1", scope: !43, file: !44, line: 180, baseType: !8, size: 64, offset: 5504)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_to_1", scope: !43, file: !44, line: 181, baseType: !8, size: 64, offset: 5568)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_from_1", scope: !43, file: !44, line: 182, baseType: !243, size: 64, offset: 5632)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_to_1", scope: !43, file: !44, line: 183, baseType: !243, size: 64, offset: 5696)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bit", scope: !43, file: !44, line: 188, baseType: !251, size: 40, offset: 5760)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color_8", file: !40, line: 582, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_8_struct", file: !40, line: 575, size: 40, elements: !253)
!253 = !{!254, !255, !256, !257, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !252, file: !40, line: 577, baseType: !5, size: 8)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !252, file: !40, line: 578, baseType: !5, size: 8, offset: 8)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !252, file: !40, line: 579, baseType: !5, size: 8, offset: 16)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "gray", scope: !252, file: !40, line: 580, baseType: !5, size: 8, offset: 24)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !252, file: !40, line: 581, baseType: !5, size: 8, offset: 32)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !43, file: !44, line: 192, baseType: !251, size: 40, offset: 5800)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "trans_alpha", scope: !43, file: !44, line: 197, baseType: !8, size: 64, offset: 5888)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "trans_color", scope: !43, file: !44, line: 198, baseType: !222, size: 80, offset: 5952)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "read_row_fn", scope: !43, file: !44, line: 201, baseType: !263, size: 64, offset: 6080)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_read_status_ptr", file: !40, line: 864, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{null, !39, !10, !12}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "write_row_fn", scope: !43, file: !44, line: 202, baseType: !268, size: 64, offset: 6144)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_write_status_ptr", file: !40, line: 866, baseType: !264)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "info_fn", scope: !43, file: !44, line: 204, baseType: !270, size: 64, offset: 6208)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_info_ptr", file: !40, line: 870, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{null, !39, !274}
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_infop", file: !40, line: 723, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_info", file: !40, line: 722, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_info_def", file: !278, line: 56, size: 2496, elements: !279)
!278 = !DIFile(filename: "libpng/pnginfo.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!279 = !{!280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !297, !298, !299, !300, !301, !315, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !352, !353, !354, !355, !365, !366, !367, !368, !369, !370, !390, !391, !392, !393, !394}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !277, file: !278, line: 59, baseType: !10, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !277, file: !278, line: 60, baseType: !10, size: 32, offset: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !277, file: !278, line: 61, baseType: !10, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !277, file: !278, line: 62, baseType: !26, size: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !277, file: !278, line: 63, baseType: !189, size: 64, offset: 192)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette", scope: !277, file: !278, line: 64, baseType: !24, size: 16, offset: 256)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "num_trans", scope: !277, file: !278, line: 65, baseType: !24, size: 16, offset: 272)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !277, file: !278, line: 66, baseType: !5, size: 8, offset: 288)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !277, file: !278, line: 67, baseType: !5, size: 8, offset: 296)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "compression_type", scope: !277, file: !278, line: 69, baseType: !5, size: 8, offset: 304)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "filter_type", scope: !277, file: !278, line: 70, baseType: !5, size: 8, offset: 312)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_type", scope: !277, file: !278, line: 71, baseType: !5, size: 8, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !277, file: !278, line: 74, baseType: !5, size: 8, offset: 328)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !277, file: !278, line: 75, baseType: !5, size: 8, offset: 336)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "spare_byte", scope: !277, file: !278, line: 76, baseType: !5, size: 8, offset: 344)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !277, file: !278, line: 77, baseType: !296, size: 64, offset: 352)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !57)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !277, file: !278, line: 90, baseType: !30, size: 32, offset: 416)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "srgb_intent", scope: !277, file: !278, line: 96, baseType: !5, size: 8, offset: 448)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "num_text", scope: !277, file: !278, line: 108, baseType: !12, size: 32, offset: 480)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "max_text", scope: !277, file: !278, line: 109, baseType: !12, size: 32, offset: 512)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !277, file: !278, line: 110, baseType: !302, size: 64, offset: 576)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_textp", file: !40, line: 654, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_text", file: !40, line: 653, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_text_struct", file: !40, line: 637, size: 448, elements: !306)
!306 = !{!307, !308, !310, !311, !312, !313, !314}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !305, file: !40, line: 639, baseType: !12, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !305, file: !40, line: 644, baseType: !309, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_charp", file: !6, line: 536, baseType: !137)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !305, file: !40, line: 645, baseType: !309, size: 64, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "text_length", scope: !305, file: !40, line: 647, baseType: !26, size: 64, offset: 192)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "itxt_length", scope: !305, file: !40, line: 648, baseType: !26, size: 64, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "lang", scope: !305, file: !40, line: 649, baseType: !309, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lang_key", scope: !305, file: !40, line: 651, baseType: !309, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "mod_time", scope: !277, file: !278, line: 117, baseType: !316, size: 64, offset: 640)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_time", file: !40, line: 683, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_time_struct", file: !40, line: 675, size: 64, elements: !318)
!318 = !{!319, !320, !321, !322, !323, !324}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !317, file: !40, line: 677, baseType: !24, size: 16)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !317, file: !40, line: 678, baseType: !5, size: 8, offset: 16)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "day", scope: !317, file: !40, line: 679, baseType: !5, size: 8, offset: 24)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "hour", scope: !317, file: !40, line: 680, baseType: !5, size: 8, offset: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "minute", scope: !317, file: !40, line: 681, baseType: !5, size: 8, offset: 40)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !317, file: !40, line: 682, baseType: !5, size: 8, offset: 48)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bit", scope: !277, file: !278, line: 127, baseType: !251, size: 40, offset: 704)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "trans_alpha", scope: !277, file: !278, line: 141, baseType: !8, size: 64, offset: 768)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "trans_color", scope: !277, file: !278, line: 142, baseType: !222, size: 80, offset: 832)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "background", scope: !277, file: !278, line: 152, baseType: !222, size: 80, offset: 912)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "x_offset", scope: !277, file: !278, line: 161, baseType: !31, size: 32, offset: 992)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "y_offset", scope: !277, file: !278, line: 162, baseType: !31, size: 32, offset: 1024)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unit_type", scope: !277, file: !278, line: 163, baseType: !5, size: 8, offset: 1056)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "x_pixels_per_unit", scope: !277, file: !278, line: 171, baseType: !10, size: 32, offset: 1088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "y_pixels_per_unit", scope: !277, file: !278, line: 172, baseType: !10, size: 32, offset: 1120)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "phys_unit_type", scope: !277, file: !278, line: 173, baseType: !5, size: 8, offset: 1152)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !277, file: !278, line: 183, baseType: !336, size: 64, offset: 1216)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16p", file: !6, line: 532, baseType: !245)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "x_white", scope: !277, file: !278, line: 193, baseType: !30, size: 32, offset: 1280)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "y_white", scope: !277, file: !278, line: 194, baseType: !30, size: 32, offset: 1312)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "x_red", scope: !277, file: !278, line: 195, baseType: !30, size: 32, offset: 1344)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "y_red", scope: !277, file: !278, line: 196, baseType: !30, size: 32, offset: 1376)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "x_green", scope: !277, file: !278, line: 197, baseType: !30, size: 32, offset: 1408)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "y_green", scope: !277, file: !278, line: 198, baseType: !30, size: 32, offset: 1440)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "x_blue", scope: !277, file: !278, line: 199, baseType: !30, size: 32, offset: 1472)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "y_blue", scope: !277, file: !278, line: 200, baseType: !30, size: 32, offset: 1504)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_purpose", scope: !277, file: !278, line: 215, baseType: !309, size: 64, offset: 1536)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_X0", scope: !277, file: !278, line: 216, baseType: !31, size: 32, offset: 1600)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_X1", scope: !277, file: !278, line: 217, baseType: !31, size: 32, offset: 1632)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_units", scope: !277, file: !278, line: 218, baseType: !309, size: 64, offset: 1664)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_params", scope: !277, file: !278, line: 219, baseType: !350, size: 64, offset: 1728)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_charpp", file: !6, line: 559, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_type", scope: !277, file: !278, line: 220, baseType: !5, size: 8, offset: 1792)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_nparams", scope: !277, file: !278, line: 221, baseType: !5, size: 8, offset: 1800)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "free_me", scope: !277, file: !278, line: 225, baseType: !10, size: 32, offset: 1824)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunks", scope: !277, file: !278, line: 230, baseType: !356, size: 64, offset: 1856)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_unknown_chunkp", file: !40, line: 707, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_unknown_chunk", file: !40, line: 706, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_unknown_chunk_t", file: !40, line: 695, size: 256, elements: !360)
!360 = !{!361, !362, !363, !364}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !359, file: !40, line: 697, baseType: !215, size: 40)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !359, file: !40, line: 698, baseType: !9, size: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !359, file: !40, line: 699, baseType: !26, size: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !359, file: !40, line: 702, baseType: !5, size: 8, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunks_num", scope: !277, file: !278, line: 231, baseType: !12, size: 32, offset: 1920)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_name", scope: !277, file: !278, line: 236, baseType: !309, size: 64, offset: 1984)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_profile", scope: !277, file: !278, line: 237, baseType: !8, size: 64, offset: 2048)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_proflen", scope: !277, file: !278, line: 238, baseType: !10, size: 32, offset: 2112)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_compression", scope: !277, file: !278, line: 239, baseType: !5, size: 8, offset: 2144)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "splt_palettes", scope: !277, file: !278, line: 244, baseType: !371, size: 64, offset: 2176)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_tp", file: !40, line: 615, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_t", file: !40, line: 614, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_sPLT_struct", file: !40, line: 608, size: 256, elements: !375)
!375 = !{!376, !377, !378, !389}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !374, file: !40, line: 610, baseType: !309, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !374, file: !40, line: 611, baseType: !5, size: 8, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !374, file: !40, line: 612, baseType: !379, size: 64, offset: 128)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_entryp", file: !40, line: 599, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_entry", file: !40, line: 598, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_sPLT_entry_struct", file: !40, line: 591, size: 80, elements: !383)
!383 = !{!384, !385, !386, !387, !388}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !382, file: !40, line: 593, baseType: !24, size: 16)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !382, file: !40, line: 594, baseType: !24, size: 16, offset: 16)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !382, file: !40, line: 595, baseType: !24, size: 16, offset: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !382, file: !40, line: 596, baseType: !24, size: 16, offset: 48)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !382, file: !40, line: 597, baseType: !24, size: 16, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "nentries", scope: !374, file: !40, line: 613, baseType: !31, size: 32, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "splt_palettes_num", scope: !277, file: !278, line: 245, baseType: !10, size: 32, offset: 2240)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "scal_unit", scope: !277, file: !278, line: 256, baseType: !5, size: 8, offset: 2272)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "scal_s_width", scope: !277, file: !278, line: 257, baseType: !309, size: 64, offset: 2304)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "scal_s_height", scope: !277, file: !278, line: 258, baseType: !309, size: 64, offset: 2368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "row_pointers", scope: !277, file: !278, line: 265, baseType: !395, size: 64, offset: 2432)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_bytepp", file: !6, line: 553, baseType: !396)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "row_fn", scope: !43, file: !44, line: 205, baseType: !398, size: 64, offset: 6272)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_row_ptr", file: !40, line: 883, baseType: !399)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{null, !39, !8, !10, !12}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "end_fn", scope: !43, file: !44, line: 206, baseType: !403, size: 64, offset: 6336)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_end_ptr", file: !40, line: 871, baseType: !271)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_ptr", scope: !43, file: !44, line: 207, baseType: !8, size: 64, offset: 6400)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer", scope: !43, file: !44, line: 208, baseType: !8, size: 64, offset: 6464)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer_ptr", scope: !43, file: !44, line: 209, baseType: !8, size: 64, offset: 6528)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer", scope: !43, file: !44, line: 210, baseType: !8, size: 64, offset: 6592)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "push_length", scope: !43, file: !44, line: 211, baseType: !10, size: 32, offset: 6656)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "skip_length", scope: !43, file: !44, line: 212, baseType: !10, size: 32, offset: 6688)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_size", scope: !43, file: !44, line: 213, baseType: !26, size: 64, offset: 6720)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_max", scope: !43, file: !44, line: 214, baseType: !26, size: 64, offset: 6784)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !43, file: !44, line: 215, baseType: !26, size: 64, offset: 6848)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer_size", scope: !43, file: !44, line: 216, baseType: !26, size: 64, offset: 6912)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "process_mode", scope: !43, file: !44, line: 217, baseType: !12, size: 32, offset: 6976)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "cur_palette", scope: !43, file: !44, line: 218, baseType: !12, size: 32, offset: 7008)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "palette_lookup", scope: !43, file: !44, line: 232, baseType: !8, size: 64, offset: 7040)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_index", scope: !43, file: !44, line: 233, baseType: !8, size: 64, offset: 7104)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !43, file: !44, line: 237, baseType: !336, size: 64, offset: 7168)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "heuristic_method", scope: !43, file: !44, line: 241, baseType: !5, size: 8, offset: 7232)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "num_prev_filters", scope: !43, file: !44, line: 242, baseType: !5, size: 8, offset: 7240)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "prev_filters", scope: !43, file: !44, line: 243, baseType: !8, size: 64, offset: 7296)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "filter_weights", scope: !43, file: !44, line: 244, baseType: !336, size: 64, offset: 7360)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "inv_filter_weights", scope: !43, file: !44, line: 245, baseType: !336, size: 64, offset: 7424)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "filter_costs", scope: !43, file: !44, line: 246, baseType: !336, size: 64, offset: 7488)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "inv_filter_costs", scope: !43, file: !44, line: 247, baseType: !336, size: 64, offset: 7552)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "time_buffer", scope: !43, file: !44, line: 251, baseType: !427, size: 232, offset: 7616)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 232, elements: !428)
!428 = !{!429}
!429 = !DISubrange(count: 29)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "free_me", scope: !43, file: !44, line: 256, baseType: !10, size: 32, offset: 7872)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_ptr", scope: !43, file: !44, line: 259, baseType: !88, size: 64, offset: 7936)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "read_user_chunk_fn", scope: !43, file: !44, line: 260, baseType: !433, size: 64, offset: 8000)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_user_chunk_ptr", file: !40, line: 894, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!12, !39, !356}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "num_chunk_list", scope: !43, file: !44, line: 264, baseType: !12, size: 32, offset: 8064)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_list", scope: !43, file: !44, line: 265, baseType: !8, size: 64, offset: 8128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "is_sRGB", scope: !43, file: !44, line: 270, baseType: !5, size: 8, offset: 8192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_status", scope: !43, file: !44, line: 275, baseType: !5, size: 8, offset: 8200)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_coefficients_set", scope: !43, file: !44, line: 277, baseType: !5, size: 8, offset: 8208)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_red_coeff", scope: !43, file: !44, line: 279, baseType: !24, size: 16, offset: 8224)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_green_coeff", scope: !43, file: !44, line: 280, baseType: !24, size: 16, offset: 8240)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "mng_features_permitted", scope: !43, file: !44, line: 287, baseType: !10, size: 32, offset: 8256)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "filter_type", scope: !43, file: !44, line: 292, baseType: !5, size: 8, offset: 8288)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ptr", scope: !43, file: !44, line: 299, baseType: !88, size: 64, offset: 8320)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_fn", scope: !43, file: !44, line: 300, baseType: !448, size: 64, offset: 8384)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_malloc_ptr", file: !40, line: 950, baseType: !449)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DISubroutineType(types: !451)
!451 = !{!88, !39, !452}
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_alloc_size_t", file: !6, line: 591, baseType: !26)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !43, file: !44, line: 301, baseType: !454, size: 64, offset: 8448)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_free_ptr", file: !40, line: 952, baseType: !455)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DISubroutineType(types: !457)
!457 = !{null, !39, !88}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "big_row_buf", scope: !43, file: !44, line: 305, baseType: !8, size: 64, offset: 8512)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_sort", scope: !43, file: !44, line: 309, baseType: !8, size: 64, offset: 8576)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "index_to_palette", scope: !43, file: !44, line: 310, baseType: !8, size: 64, offset: 8640)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "palette_to_index", scope: !43, file: !44, line: 312, baseType: !8, size: 64, offset: 8704)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "compression_type", scope: !43, file: !44, line: 317, baseType: !5, size: 8, offset: 8768)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "user_width_max", scope: !43, file: !44, line: 320, baseType: !10, size: 32, offset: 8800)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "user_height_max", scope: !43, file: !44, line: 321, baseType: !10, size: 32, offset: 8832)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_cache_max", scope: !43, file: !44, line: 326, baseType: !10, size: 32, offset: 8864)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_malloc_max", scope: !43, file: !44, line: 331, baseType: !452, size: 64, offset: 8896)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunk", scope: !43, file: !44, line: 337, baseType: !358, size: 256, offset: 8960)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "old_big_row_buf_size", scope: !43, file: !44, line: 341, baseType: !26, size: 64, offset: 9216)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "chunkdata", scope: !43, file: !44, line: 344, baseType: !309, size: 64, offset: 9280)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "io_state", scope: !43, file: !44, line: 348, baseType: !10, size: 32, offset: 9344)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "big_prev_row", scope: !43, file: !44, line: 352, baseType: !8, size: 64, offset: 9408)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "read_filter", scope: !43, file: !44, line: 354, baseType: !473, size: 256, offset: 9472)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 256, elements: !480)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{null, !101, !8, !477}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_bytep", file: !6, line: 527, baseType: !478)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!480 = !{!481}
!481 = !DISubrange(count: 4)
!482 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !36, file: !1, line: 25, type: !39)
!483 = !DILocation(line: 25, column: 32, scope: !36)
!484 = !DILocalVariable(name: "crit_action", arg: 2, scope: !36, file: !1, line: 25, type: !12)
!485 = !DILocation(line: 25, column: 45, scope: !36)
!486 = !DILocalVariable(name: "ancil_action", arg: 3, scope: !36, file: !1, line: 25, type: !12)
!487 = !DILocation(line: 25, column: 62, scope: !36)
!488 = !DILocation(line: 29, column: 8, scope: !489)
!489 = distinct !DILexicalBlock(scope: !36, file: !1, line: 29, column: 8)
!490 = !DILocation(line: 29, column: 16, scope: !489)
!491 = !DILocation(line: 29, column: 8, scope: !36)
!492 = !DILocation(line: 30, column: 7, scope: !489)
!493 = !DILocation(line: 33, column: 12, scope: !36)
!494 = !DILocation(line: 33, column: 4, scope: !36)
!495 = !DILocation(line: 36, column: 10, scope: !496)
!496 = distinct !DILexicalBlock(scope: !36, file: !1, line: 34, column: 4)
!497 = !DILocation(line: 39, column: 10, scope: !496)
!498 = !DILocation(line: 39, column: 19, scope: !496)
!499 = !DILocation(line: 39, column: 25, scope: !496)
!500 = !DILocation(line: 40, column: 10, scope: !496)
!501 = !DILocation(line: 40, column: 19, scope: !496)
!502 = !DILocation(line: 40, column: 25, scope: !496)
!503 = !DILocation(line: 41, column: 10, scope: !496)
!504 = !DILocation(line: 44, column: 10, scope: !496)
!505 = !DILocation(line: 44, column: 19, scope: !496)
!506 = !DILocation(line: 44, column: 25, scope: !496)
!507 = !DILocation(line: 45, column: 10, scope: !496)
!508 = !DILocation(line: 45, column: 19, scope: !496)
!509 = !DILocation(line: 45, column: 25, scope: !496)
!510 = !DILocation(line: 47, column: 10, scope: !496)
!511 = !DILocation(line: 50, column: 22, scope: !496)
!512 = !DILocation(line: 50, column: 10, scope: !496)
!513 = !DILocation(line: 56, column: 10, scope: !496)
!514 = !DILocation(line: 56, column: 19, scope: !496)
!515 = !DILocation(line: 56, column: 25, scope: !496)
!516 = !DILocation(line: 57, column: 10, scope: !496)
!517 = !DILocation(line: 61, column: 12, scope: !36)
!518 = !DILocation(line: 61, column: 4, scope: !36)
!519 = !DILocation(line: 64, column: 10, scope: !520)
!520 = distinct !DILexicalBlock(scope: !36, file: !1, line: 62, column: 4)
!521 = !DILocation(line: 67, column: 10, scope: !520)
!522 = !DILocation(line: 67, column: 19, scope: !520)
!523 = !DILocation(line: 67, column: 25, scope: !520)
!524 = !DILocation(line: 68, column: 10, scope: !520)
!525 = !DILocation(line: 68, column: 19, scope: !520)
!526 = !DILocation(line: 68, column: 25, scope: !520)
!527 = !DILocation(line: 69, column: 10, scope: !520)
!528 = !DILocation(line: 72, column: 10, scope: !520)
!529 = !DILocation(line: 72, column: 19, scope: !520)
!530 = !DILocation(line: 72, column: 25, scope: !520)
!531 = !DILocation(line: 73, column: 10, scope: !520)
!532 = !DILocation(line: 73, column: 19, scope: !520)
!533 = !DILocation(line: 73, column: 25, scope: !520)
!534 = !DILocation(line: 75, column: 10, scope: !520)
!535 = !DILocation(line: 78, column: 10, scope: !520)
!536 = !DILocation(line: 78, column: 19, scope: !520)
!537 = !DILocation(line: 78, column: 25, scope: !520)
!538 = !DILocation(line: 79, column: 10, scope: !520)
!539 = !DILocation(line: 79, column: 19, scope: !520)
!540 = !DILocation(line: 79, column: 25, scope: !520)
!541 = !DILocation(line: 80, column: 10, scope: !520)
!542 = !DILocation(line: 86, column: 10, scope: !520)
!543 = !DILocation(line: 86, column: 19, scope: !520)
!544 = !DILocation(line: 86, column: 25, scope: !520)
!545 = !DILocation(line: 87, column: 10, scope: !520)
!546 = !DILocation(line: 89, column: 1, scope: !36)
!547 = distinct !DISubprogram(name: "png_set_background_fixed", scope: !1, file: !1, line: 94, type: !548, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!548 = !DISubroutineType(types: !549)
!549 = !{null, !39, !550, !12, !12, !30}
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_color_16p", file: !40, line: 572, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!553 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !547, file: !1, line: 94, type: !39)
!554 = !DILocation(line: 94, column: 38, scope: !547)
!555 = !DILocalVariable(name: "background_color", arg: 2, scope: !547, file: !1, line: 95, type: !550)
!556 = !DILocation(line: 95, column: 25, scope: !547)
!557 = !DILocalVariable(name: "background_gamma_code", arg: 3, scope: !547, file: !1, line: 95, type: !12)
!558 = !DILocation(line: 95, column: 47, scope: !547)
!559 = !DILocalVariable(name: "need_expand", arg: 4, scope: !547, file: !1, line: 96, type: !12)
!560 = !DILocation(line: 96, column: 9, scope: !547)
!561 = !DILocalVariable(name: "background_gamma", arg: 5, scope: !547, file: !1, line: 96, type: !30)
!562 = !DILocation(line: 96, column: 38, scope: !547)
!563 = !DILocation(line: 100, column: 8, scope: !564)
!564 = distinct !DILexicalBlock(scope: !547, file: !1, line: 100, column: 8)
!565 = !DILocation(line: 100, column: 16, scope: !564)
!566 = !DILocation(line: 100, column: 8, scope: !547)
!567 = !DILocation(line: 101, column: 7, scope: !564)
!568 = !DILocation(line: 103, column: 8, scope: !569)
!569 = distinct !DILexicalBlock(scope: !547, file: !1, line: 103, column: 8)
!570 = !DILocation(line: 103, column: 30, scope: !569)
!571 = !DILocation(line: 103, column: 8, scope: !547)
!572 = !DILocation(line: 105, column: 19, scope: !573)
!573 = distinct !DILexicalBlock(scope: !569, file: !1, line: 104, column: 4)
!574 = !DILocation(line: 105, column: 7, scope: !573)
!575 = !DILocation(line: 106, column: 7, scope: !573)
!576 = !DILocation(line: 109, column: 4, scope: !547)
!577 = !DILocation(line: 109, column: 13, scope: !547)
!578 = !DILocation(line: 109, column: 29, scope: !547)
!579 = !DILocation(line: 110, column: 4, scope: !547)
!580 = !DILocation(line: 110, column: 13, scope: !547)
!581 = !DILocation(line: 110, column: 29, scope: !547)
!582 = !DILocation(line: 111, column: 4, scope: !547)
!583 = !DILocation(line: 111, column: 13, scope: !547)
!584 = !DILocation(line: 111, column: 19, scope: !547)
!585 = !DILocation(line: 113, column: 17, scope: !547)
!586 = !DILocation(line: 113, column: 26, scope: !547)
!587 = !DILocation(line: 113, column: 4, scope: !547)
!588 = !DILocation(line: 113, column: 39, scope: !547)
!589 = !DILocation(line: 115, column: 32, scope: !547)
!590 = !DILocation(line: 115, column: 4, scope: !547)
!591 = !DILocation(line: 115, column: 13, scope: !547)
!592 = !DILocation(line: 115, column: 30, scope: !547)
!593 = !DILocation(line: 116, column: 48, scope: !547)
!594 = !DILocation(line: 116, column: 37, scope: !547)
!595 = !DILocation(line: 116, column: 4, scope: !547)
!596 = !DILocation(line: 116, column: 13, scope: !547)
!597 = !DILocation(line: 116, column: 35, scope: !547)
!598 = !DILocation(line: 117, column: 8, scope: !599)
!599 = distinct !DILexicalBlock(scope: !547, file: !1, line: 117, column: 8)
!600 = !DILocation(line: 117, column: 8, scope: !547)
!601 = !DILocation(line: 118, column: 7, scope: !599)
!602 = !DILocation(line: 118, column: 16, scope: !599)
!603 = !DILocation(line: 118, column: 32, scope: !599)
!604 = !DILocation(line: 120, column: 7, scope: !599)
!605 = !DILocation(line: 120, column: 16, scope: !599)
!606 = !DILocation(line: 120, column: 32, scope: !599)
!607 = !DILocation(line: 121, column: 1, scope: !547)
!608 = distinct !DISubprogram(name: "png_set_background", scope: !1, file: !1, line: 125, type: !609, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !39, !550, !12, !12, !611}
!611 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!612 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !608, file: !1, line: 125, type: !39)
!613 = !DILocation(line: 125, column: 32, scope: !608)
!614 = !DILocalVariable(name: "background_color", arg: 2, scope: !608, file: !1, line: 126, type: !550)
!615 = !DILocation(line: 126, column: 25, scope: !608)
!616 = !DILocalVariable(name: "background_gamma_code", arg: 3, scope: !608, file: !1, line: 126, type: !12)
!617 = !DILocation(line: 126, column: 47, scope: !608)
!618 = !DILocalVariable(name: "need_expand", arg: 4, scope: !608, file: !1, line: 127, type: !12)
!619 = !DILocation(line: 127, column: 9, scope: !608)
!620 = !DILocalVariable(name: "background_gamma", arg: 5, scope: !608, file: !1, line: 127, type: !611)
!621 = !DILocation(line: 127, column: 29, scope: !608)
!622 = !DILocation(line: 129, column: 29, scope: !608)
!623 = !DILocation(line: 129, column: 38, scope: !608)
!624 = !DILocation(line: 129, column: 56, scope: !608)
!625 = !DILocation(line: 130, column: 7, scope: !608)
!626 = !DILocation(line: 130, column: 30, scope: !608)
!627 = !DILocation(line: 130, column: 39, scope: !608)
!628 = !DILocation(line: 130, column: 20, scope: !608)
!629 = !DILocation(line: 129, column: 4, scope: !608)
!630 = !DILocation(line: 131, column: 1, scope: !608)
!631 = distinct !DISubprogram(name: "png_set_scale_16", scope: !1, file: !1, line: 141, type: !234, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!632 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !631, file: !1, line: 141, type: !39)
!633 = !DILocation(line: 141, column: 30, scope: !631)
!634 = !DILocation(line: 145, column: 8, scope: !635)
!635 = distinct !DILexicalBlock(scope: !631, file: !1, line: 145, column: 8)
!636 = !DILocation(line: 145, column: 16, scope: !635)
!637 = !DILocation(line: 145, column: 8, scope: !631)
!638 = !DILocation(line: 146, column: 7, scope: !635)
!639 = !DILocation(line: 148, column: 4, scope: !631)
!640 = !DILocation(line: 148, column: 13, scope: !631)
!641 = !DILocation(line: 148, column: 29, scope: !631)
!642 = !DILocation(line: 149, column: 1, scope: !631)
!643 = distinct !DISubprogram(name: "png_set_strip_16", scope: !1, file: !1, line: 155, type: !234, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!644 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !643, file: !1, line: 155, type: !39)
!645 = !DILocation(line: 155, column: 30, scope: !643)
!646 = !DILocation(line: 159, column: 8, scope: !647)
!647 = distinct !DILexicalBlock(scope: !643, file: !1, line: 159, column: 8)
!648 = !DILocation(line: 159, column: 16, scope: !647)
!649 = !DILocation(line: 159, column: 8, scope: !643)
!650 = !DILocation(line: 160, column: 7, scope: !647)
!651 = !DILocation(line: 162, column: 4, scope: !643)
!652 = !DILocation(line: 162, column: 13, scope: !643)
!653 = !DILocation(line: 162, column: 29, scope: !643)
!654 = !DILocation(line: 163, column: 1, scope: !643)
!655 = distinct !DISubprogram(name: "png_set_strip_alpha", scope: !1, file: !1, line: 168, type: !234, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!656 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !655, file: !1, line: 168, type: !39)
!657 = !DILocation(line: 168, column: 33, scope: !655)
!658 = !DILocation(line: 172, column: 8, scope: !659)
!659 = distinct !DILexicalBlock(scope: !655, file: !1, line: 172, column: 8)
!660 = !DILocation(line: 172, column: 16, scope: !659)
!661 = !DILocation(line: 172, column: 8, scope: !655)
!662 = !DILocation(line: 173, column: 7, scope: !659)
!663 = !DILocation(line: 175, column: 4, scope: !655)
!664 = !DILocation(line: 175, column: 13, scope: !655)
!665 = !DILocation(line: 175, column: 29, scope: !655)
!666 = !DILocation(line: 176, column: 1, scope: !655)
!667 = distinct !DISubprogram(name: "png_set_alpha_mode_fixed", scope: !1, file: !1, line: 243, type: !668, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !39, !12, !30}
!670 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !667, file: !1, line: 243, type: !39)
!671 = !DILocation(line: 243, column: 38, scope: !667)
!672 = !DILocalVariable(name: "mode", arg: 2, scope: !667, file: !1, line: 243, type: !12)
!673 = !DILocation(line: 243, column: 51, scope: !667)
!674 = !DILocalVariable(name: "output_gamma", arg: 3, scope: !667, file: !1, line: 244, type: !30)
!675 = !DILocation(line: 244, column: 20, scope: !667)
!676 = !DILocalVariable(name: "compose", scope: !667, file: !1, line: 246, type: !12)
!677 = !DILocation(line: 246, column: 8, scope: !667)
!678 = !DILocalVariable(name: "file_gamma", scope: !667, file: !1, line: 247, type: !30)
!679 = !DILocation(line: 247, column: 20, scope: !667)
!680 = !DILocation(line: 251, column: 8, scope: !681)
!681 = distinct !DILexicalBlock(scope: !667, file: !1, line: 251, column: 8)
!682 = !DILocation(line: 251, column: 16, scope: !681)
!683 = !DILocation(line: 251, column: 8, scope: !667)
!684 = !DILocation(line: 252, column: 7, scope: !681)
!685 = !DILocation(line: 254, column: 41, scope: !667)
!686 = !DILocation(line: 254, column: 50, scope: !667)
!687 = !DILocation(line: 254, column: 19, scope: !667)
!688 = !DILocation(line: 254, column: 17, scope: !667)
!689 = !DILocation(line: 262, column: 8, scope: !690)
!690 = distinct !DILexicalBlock(scope: !667, file: !1, line: 262, column: 8)
!691 = !DILocation(line: 262, column: 21, scope: !690)
!692 = !DILocation(line: 262, column: 29, scope: !690)
!693 = !DILocation(line: 262, column: 32, scope: !690)
!694 = !DILocation(line: 262, column: 45, scope: !690)
!695 = !DILocation(line: 262, column: 8, scope: !667)
!696 = !DILocation(line: 263, column: 17, scope: !690)
!697 = !DILocation(line: 263, column: 7, scope: !690)
!698 = !DILocation(line: 268, column: 32, scope: !667)
!699 = !DILocation(line: 268, column: 17, scope: !667)
!700 = !DILocation(line: 268, column: 15, scope: !667)
!701 = !DILocation(line: 286, column: 12, scope: !667)
!702 = !DILocation(line: 286, column: 4, scope: !667)
!703 = !DILocation(line: 290, column: 10, scope: !704)
!704 = distinct !DILexicalBlock(scope: !667, file: !1, line: 287, column: 4)
!705 = !DILocation(line: 290, column: 19, scope: !704)
!706 = !DILocation(line: 290, column: 35, scope: !704)
!707 = !DILocation(line: 291, column: 10, scope: !704)
!708 = !DILocation(line: 291, column: 19, scope: !704)
!709 = !DILocation(line: 291, column: 25, scope: !704)
!710 = !DILocation(line: 292, column: 10, scope: !704)
!711 = !DILocation(line: 295, column: 18, scope: !704)
!712 = !DILocation(line: 296, column: 10, scope: !704)
!713 = !DILocation(line: 296, column: 19, scope: !704)
!714 = !DILocation(line: 296, column: 35, scope: !704)
!715 = !DILocation(line: 297, column: 10, scope: !704)
!716 = !DILocation(line: 297, column: 19, scope: !704)
!717 = !DILocation(line: 297, column: 25, scope: !704)
!718 = !DILocation(line: 299, column: 23, scope: !704)
!719 = !DILocation(line: 300, column: 10, scope: !704)
!720 = !DILocation(line: 303, column: 18, scope: !704)
!721 = !DILocation(line: 304, column: 10, scope: !704)
!722 = !DILocation(line: 304, column: 19, scope: !704)
!723 = !DILocation(line: 304, column: 35, scope: !704)
!724 = !DILocation(line: 305, column: 10, scope: !704)
!725 = !DILocation(line: 305, column: 19, scope: !704)
!726 = !DILocation(line: 305, column: 25, scope: !704)
!727 = !DILocation(line: 307, column: 10, scope: !704)
!728 = !DILocation(line: 310, column: 18, scope: !704)
!729 = !DILocation(line: 311, column: 10, scope: !704)
!730 = !DILocation(line: 311, column: 19, scope: !704)
!731 = !DILocation(line: 311, column: 35, scope: !704)
!732 = !DILocation(line: 312, column: 10, scope: !704)
!733 = !DILocation(line: 312, column: 19, scope: !704)
!734 = !DILocation(line: 312, column: 25, scope: !704)
!735 = !DILocation(line: 313, column: 10, scope: !704)
!736 = !DILocation(line: 316, column: 20, scope: !704)
!737 = !DILocation(line: 316, column: 10, scope: !704)
!738 = !DILocation(line: 323, column: 8, scope: !739)
!739 = distinct !DILexicalBlock(scope: !667, file: !1, line: 323, column: 8)
!740 = !DILocation(line: 323, column: 17, scope: !739)
!741 = !DILocation(line: 323, column: 23, scope: !739)
!742 = !DILocation(line: 323, column: 8, scope: !667)
!743 = !DILocation(line: 324, column: 24, scope: !739)
!744 = !DILocation(line: 324, column: 7, scope: !739)
!745 = !DILocation(line: 324, column: 16, scope: !739)
!746 = !DILocation(line: 324, column: 22, scope: !739)
!747 = !DILocation(line: 327, column: 28, scope: !667)
!748 = !DILocation(line: 327, column: 4, scope: !667)
!749 = !DILocation(line: 327, column: 13, scope: !667)
!750 = !DILocation(line: 327, column: 26, scope: !667)
!751 = !DILocation(line: 332, column: 8, scope: !752)
!752 = distinct !DILexicalBlock(scope: !667, file: !1, line: 332, column: 8)
!753 = !DILocation(line: 332, column: 8, scope: !667)
!754 = !DILocation(line: 335, column: 19, scope: !755)
!755 = distinct !DILexicalBlock(scope: !752, file: !1, line: 333, column: 4)
!756 = !DILocation(line: 335, column: 28, scope: !755)
!757 = !DILocation(line: 335, column: 7, scope: !755)
!758 = !DILocation(line: 336, column: 35, scope: !755)
!759 = !DILocation(line: 336, column: 44, scope: !755)
!760 = !DILocation(line: 336, column: 7, scope: !755)
!761 = !DILocation(line: 336, column: 16, scope: !755)
!762 = !DILocation(line: 336, column: 33, scope: !755)
!763 = !DILocation(line: 337, column: 7, scope: !755)
!764 = !DILocation(line: 337, column: 16, scope: !755)
!765 = !DILocation(line: 337, column: 38, scope: !755)
!766 = !DILocation(line: 338, column: 7, scope: !755)
!767 = !DILocation(line: 338, column: 16, scope: !755)
!768 = !DILocation(line: 338, column: 32, scope: !755)
!769 = !DILocation(line: 340, column: 11, scope: !770)
!770 = distinct !DILexicalBlock(scope: !755, file: !1, line: 340, column: 11)
!771 = !DILocation(line: 340, column: 20, scope: !770)
!772 = !DILocation(line: 340, column: 36, scope: !770)
!773 = !DILocation(line: 340, column: 11, scope: !755)
!774 = !DILocation(line: 341, column: 20, scope: !770)
!775 = !DILocation(line: 341, column: 10, scope: !770)
!776 = !DILocation(line: 344, column: 7, scope: !755)
!777 = !DILocation(line: 344, column: 16, scope: !755)
!778 = !DILocation(line: 344, column: 32, scope: !755)
!779 = !DILocation(line: 345, column: 4, scope: !755)
!780 = !DILocation(line: 348, column: 4, scope: !667)
!781 = !DILocation(line: 348, column: 13, scope: !667)
!782 = !DILocation(line: 348, column: 19, scope: !667)
!783 = !DILocation(line: 349, column: 1, scope: !667)
!784 = distinct !DISubprogram(name: "translate_gamma_flags", scope: !1, file: !1, line: 181, type: !785, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!785 = !DISubroutineType(types: !786)
!786 = !{!30, !39, !30, !12}
!787 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !784, file: !1, line: 181, type: !39)
!788 = !DILocation(line: 181, column: 35, scope: !784)
!789 = !DILocalVariable(name: "output_gamma", arg: 2, scope: !784, file: !1, line: 181, type: !30)
!790 = !DILocation(line: 181, column: 60, scope: !784)
!791 = !DILocalVariable(name: "is_screen", arg: 3, scope: !784, file: !1, line: 182, type: !12)
!792 = !DILocation(line: 182, column: 8, scope: !784)
!793 = !DILocation(line: 189, column: 8, scope: !794)
!794 = distinct !DILexicalBlock(scope: !784, file: !1, line: 189, column: 8)
!795 = !DILocation(line: 189, column: 21, scope: !794)
!796 = !DILocation(line: 189, column: 41, scope: !794)
!797 = !DILocation(line: 190, column: 7, scope: !794)
!798 = !DILocation(line: 190, column: 20, scope: !794)
!799 = !DILocation(line: 189, column: 8, scope: !784)
!800 = !DILocation(line: 196, column: 10, scope: !801)
!801 = distinct !DILexicalBlock(scope: !794, file: !1, line: 191, column: 4)
!802 = !DILocation(line: 196, column: 19, scope: !801)
!803 = !DILocation(line: 196, column: 25, scope: !801)
!804 = !DILocation(line: 198, column: 11, scope: !805)
!805 = distinct !DILexicalBlock(scope: !801, file: !1, line: 198, column: 11)
!806 = !DILocation(line: 198, column: 11, scope: !801)
!807 = !DILocation(line: 199, column: 23, scope: !805)
!808 = !DILocation(line: 199, column: 10, scope: !805)
!809 = !DILocation(line: 201, column: 23, scope: !805)
!810 = !DILocation(line: 202, column: 4, scope: !801)
!811 = !DILocation(line: 204, column: 13, scope: !812)
!812 = distinct !DILexicalBlock(scope: !794, file: !1, line: 204, column: 13)
!813 = !DILocation(line: 204, column: 26, scope: !812)
!814 = !DILocation(line: 204, column: 46, scope: !812)
!815 = !DILocation(line: 205, column: 7, scope: !812)
!816 = !DILocation(line: 205, column: 20, scope: !812)
!817 = !DILocation(line: 204, column: 13, scope: !794)
!818 = !DILocation(line: 207, column: 11, scope: !819)
!819 = distinct !DILexicalBlock(scope: !820, file: !1, line: 207, column: 11)
!820 = distinct !DILexicalBlock(scope: !812, file: !1, line: 206, column: 4)
!821 = !DILocation(line: 207, column: 11, scope: !820)
!822 = !DILocation(line: 208, column: 23, scope: !819)
!823 = !DILocation(line: 208, column: 10, scope: !819)
!824 = !DILocation(line: 210, column: 23, scope: !819)
!825 = !DILocation(line: 211, column: 4, scope: !820)
!826 = !DILocation(line: 213, column: 11, scope: !784)
!827 = !DILocation(line: 213, column: 4, scope: !784)
!828 = distinct !DISubprogram(name: "png_set_alpha_mode", scope: !1, file: !1, line: 353, type: !829, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !39, !12, !611}
!831 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !828, file: !1, line: 353, type: !39)
!832 = !DILocation(line: 353, column: 32, scope: !828)
!833 = !DILocalVariable(name: "mode", arg: 2, scope: !828, file: !1, line: 353, type: !12)
!834 = !DILocation(line: 353, column: 45, scope: !828)
!835 = !DILocalVariable(name: "output_gamma", arg: 3, scope: !828, file: !1, line: 353, type: !611)
!836 = !DILocation(line: 353, column: 58, scope: !828)
!837 = !DILocation(line: 355, column: 29, scope: !828)
!838 = !DILocation(line: 355, column: 38, scope: !828)
!839 = !DILocation(line: 355, column: 64, scope: !828)
!840 = !DILocation(line: 356, column: 7, scope: !828)
!841 = !DILocation(line: 355, column: 44, scope: !828)
!842 = !DILocation(line: 355, column: 4, scope: !828)
!843 = !DILocation(line: 357, column: 1, scope: !828)
!844 = distinct !DISubprogram(name: "convert_gamma_value", scope: !1, file: !1, line: 218, type: !845, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!845 = !DISubroutineType(types: !846)
!846 = !{!30, !39, !611}
!847 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !844, file: !1, line: 218, type: !39)
!848 = !DILocation(line: 218, column: 33, scope: !844)
!849 = !DILocalVariable(name: "output_gamma", arg: 2, scope: !844, file: !1, line: 218, type: !611)
!850 = !DILocation(line: 218, column: 49, scope: !844)
!851 = !DILocation(line: 227, column: 8, scope: !852)
!852 = distinct !DILexicalBlock(scope: !844, file: !1, line: 227, column: 8)
!853 = !DILocation(line: 227, column: 21, scope: !852)
!854 = !DILocation(line: 227, column: 25, scope: !852)
!855 = !DILocation(line: 227, column: 28, scope: !852)
!856 = !DILocation(line: 227, column: 41, scope: !852)
!857 = !DILocation(line: 227, column: 8, scope: !844)
!858 = !DILocation(line: 228, column: 20, scope: !852)
!859 = !DILocation(line: 228, column: 7, scope: !852)
!860 = !DILocation(line: 231, column: 25, scope: !844)
!861 = !DILocation(line: 231, column: 38, scope: !844)
!862 = !DILocation(line: 231, column: 19, scope: !844)
!863 = !DILocation(line: 231, column: 17, scope: !844)
!864 = !DILocation(line: 233, column: 8, scope: !865)
!865 = distinct !DILexicalBlock(scope: !844, file: !1, line: 233, column: 8)
!866 = !DILocation(line: 233, column: 21, scope: !865)
!867 = !DILocation(line: 233, column: 34, scope: !865)
!868 = !DILocation(line: 233, column: 37, scope: !865)
!869 = !DILocation(line: 233, column: 50, scope: !865)
!870 = !DILocation(line: 233, column: 8, scope: !844)
!871 = !DILocation(line: 234, column: 23, scope: !865)
!872 = !DILocation(line: 234, column: 7, scope: !865)
!873 = !DILocation(line: 236, column: 28, scope: !844)
!874 = !DILocation(line: 236, column: 11, scope: !844)
!875 = !DILocation(line: 236, column: 4, scope: !844)
!876 = distinct !DISubprogram(name: "png_set_quantize", scope: !1, file: !1, line: 381, type: !877, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!877 = !DISubroutineType(types: !878)
!878 = !{null, !39, !189, !12, !12, !879, !12}
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_uint_16p", file: !6, line: 533, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!882 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !876, file: !1, line: 381, type: !39)
!883 = !DILocation(line: 381, column: 30, scope: !876)
!884 = !DILocalVariable(name: "palette", arg: 2, scope: !876, file: !1, line: 381, type: !189)
!885 = !DILocation(line: 381, column: 50, scope: !876)
!886 = !DILocalVariable(name: "num_palette", arg: 3, scope: !876, file: !1, line: 382, type: !12)
!887 = !DILocation(line: 382, column: 9, scope: !876)
!888 = !DILocalVariable(name: "maximum_colors", arg: 4, scope: !876, file: !1, line: 382, type: !12)
!889 = !DILocation(line: 382, column: 26, scope: !876)
!890 = !DILocalVariable(name: "histogram", arg: 5, scope: !876, file: !1, line: 382, type: !879)
!891 = !DILocation(line: 382, column: 61, scope: !876)
!892 = !DILocalVariable(name: "full_quantize", arg: 6, scope: !876, file: !1, line: 383, type: !12)
!893 = !DILocation(line: 383, column: 9, scope: !876)
!894 = !DILocation(line: 387, column: 8, scope: !895)
!895 = distinct !DILexicalBlock(scope: !876, file: !1, line: 387, column: 8)
!896 = !DILocation(line: 387, column: 16, scope: !895)
!897 = !DILocation(line: 387, column: 8, scope: !876)
!898 = !DILocation(line: 388, column: 7, scope: !895)
!899 = !DILocation(line: 390, column: 4, scope: !876)
!900 = !DILocation(line: 390, column: 13, scope: !876)
!901 = !DILocation(line: 390, column: 29, scope: !876)
!902 = !DILocation(line: 392, column: 9, scope: !903)
!903 = distinct !DILexicalBlock(scope: !876, file: !1, line: 392, column: 8)
!904 = !DILocation(line: 392, column: 8, scope: !876)
!905 = !DILocalVariable(name: "i", scope: !906, file: !1, line: 394, type: !12)
!906 = distinct !DILexicalBlock(scope: !903, file: !1, line: 393, column: 4)
!907 = !DILocation(line: 394, column: 11, scope: !906)
!908 = !DILocation(line: 396, column: 55, scope: !906)
!909 = !DILocation(line: 397, column: 25, scope: !906)
!910 = !DILocation(line: 397, column: 37, scope: !906)
!911 = !DILocation(line: 397, column: 11, scope: !906)
!912 = !DILocation(line: 396, column: 44, scope: !906)
!913 = !DILocation(line: 396, column: 7, scope: !906)
!914 = !DILocation(line: 396, column: 16, scope: !906)
!915 = !DILocation(line: 396, column: 31, scope: !906)
!916 = !DILocation(line: 398, column: 14, scope: !917)
!917 = distinct !DILexicalBlock(scope: !906, file: !1, line: 398, column: 7)
!918 = !DILocation(line: 398, column: 12, scope: !917)
!919 = !DILocation(line: 398, column: 19, scope: !920)
!920 = distinct !DILexicalBlock(scope: !917, file: !1, line: 398, column: 7)
!921 = !DILocation(line: 398, column: 23, scope: !920)
!922 = !DILocation(line: 398, column: 21, scope: !920)
!923 = !DILocation(line: 398, column: 7, scope: !917)
!924 = !DILocation(line: 399, column: 49, scope: !920)
!925 = !DILocation(line: 399, column: 39, scope: !920)
!926 = !DILocation(line: 399, column: 10, scope: !920)
!927 = !DILocation(line: 399, column: 19, scope: !920)
!928 = !DILocation(line: 399, column: 34, scope: !920)
!929 = !DILocation(line: 399, column: 37, scope: !920)
!930 = !DILocation(line: 398, column: 37, scope: !920)
!931 = !DILocation(line: 398, column: 7, scope: !920)
!932 = distinct !{!932, !923, !933}
!933 = !DILocation(line: 399, column: 49, scope: !917)
!934 = !DILocation(line: 400, column: 4, scope: !906)
!935 = !DILocation(line: 402, column: 8, scope: !936)
!936 = distinct !DILexicalBlock(scope: !876, file: !1, line: 402, column: 8)
!937 = !DILocation(line: 402, column: 22, scope: !936)
!938 = !DILocation(line: 402, column: 20, scope: !936)
!939 = !DILocation(line: 402, column: 8, scope: !876)
!940 = !DILocation(line: 404, column: 11, scope: !941)
!941 = distinct !DILexicalBlock(scope: !942, file: !1, line: 404, column: 11)
!942 = distinct !DILexicalBlock(scope: !936, file: !1, line: 403, column: 4)
!943 = !DILocation(line: 404, column: 21, scope: !941)
!944 = !DILocation(line: 404, column: 11, scope: !942)
!945 = !DILocalVariable(name: "i", scope: !946, file: !1, line: 410, type: !12)
!946 = distinct !DILexicalBlock(scope: !941, file: !1, line: 405, column: 7)
!947 = !DILocation(line: 410, column: 14, scope: !946)
!948 = !DILocation(line: 413, column: 57, scope: !946)
!949 = !DILocation(line: 414, column: 28, scope: !946)
!950 = !DILocation(line: 414, column: 40, scope: !946)
!951 = !DILocation(line: 414, column: 14, scope: !946)
!952 = !DILocation(line: 413, column: 46, scope: !946)
!953 = !DILocation(line: 413, column: 10, scope: !946)
!954 = !DILocation(line: 413, column: 19, scope: !946)
!955 = !DILocation(line: 413, column: 33, scope: !946)
!956 = !DILocation(line: 417, column: 17, scope: !957)
!957 = distinct !DILexicalBlock(scope: !946, file: !1, line: 417, column: 10)
!958 = !DILocation(line: 417, column: 15, scope: !957)
!959 = !DILocation(line: 417, column: 22, scope: !960)
!960 = distinct !DILexicalBlock(scope: !957, file: !1, line: 417, column: 10)
!961 = !DILocation(line: 417, column: 26, scope: !960)
!962 = !DILocation(line: 417, column: 24, scope: !960)
!963 = !DILocation(line: 417, column: 10, scope: !957)
!964 = !DILocation(line: 418, column: 51, scope: !960)
!965 = !DILocation(line: 418, column: 41, scope: !960)
!966 = !DILocation(line: 418, column: 13, scope: !960)
!967 = !DILocation(line: 418, column: 22, scope: !960)
!968 = !DILocation(line: 418, column: 36, scope: !960)
!969 = !DILocation(line: 418, column: 39, scope: !960)
!970 = !DILocation(line: 417, column: 40, scope: !960)
!971 = !DILocation(line: 417, column: 10, scope: !960)
!972 = distinct !{!972, !963, !973}
!973 = !DILocation(line: 418, column: 51, scope: !957)
!974 = !DILocation(line: 427, column: 19, scope: !975)
!975 = distinct !DILexicalBlock(scope: !946, file: !1, line: 427, column: 10)
!976 = !DILocation(line: 427, column: 31, scope: !975)
!977 = !DILocation(line: 427, column: 17, scope: !975)
!978 = !DILocation(line: 427, column: 15, scope: !975)
!979 = !DILocation(line: 427, column: 36, scope: !980)
!980 = distinct !DILexicalBlock(scope: !975, file: !1, line: 427, column: 10)
!981 = !DILocation(line: 427, column: 41, scope: !980)
!982 = !DILocation(line: 427, column: 38, scope: !980)
!983 = !DILocation(line: 427, column: 10, scope: !975)
!984 = !DILocalVariable(name: "done", scope: !985, file: !1, line: 429, type: !12)
!985 = distinct !DILexicalBlock(scope: !980, file: !1, line: 428, column: 10)
!986 = !DILocation(line: 429, column: 17, scope: !985)
!987 = !DILocalVariable(name: "j", scope: !985, file: !1, line: 430, type: !12)
!988 = !DILocation(line: 430, column: 17, scope: !985)
!989 = !DILocation(line: 432, column: 18, scope: !985)
!990 = !DILocation(line: 433, column: 20, scope: !991)
!991 = distinct !DILexicalBlock(scope: !985, file: !1, line: 433, column: 13)
!992 = !DILocation(line: 433, column: 18, scope: !991)
!993 = !DILocation(line: 433, column: 25, scope: !994)
!994 = distinct !DILexicalBlock(scope: !991, file: !1, line: 433, column: 13)
!995 = !DILocation(line: 433, column: 29, scope: !994)
!996 = !DILocation(line: 433, column: 27, scope: !994)
!997 = !DILocation(line: 433, column: 13, scope: !991)
!998 = !DILocation(line: 435, column: 20, scope: !999)
!999 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 435, column: 20)
!1000 = distinct !DILexicalBlock(scope: !994, file: !1, line: 434, column: 13)
!1001 = !DILocation(line: 435, column: 30, scope: !999)
!1002 = !DILocation(line: 435, column: 39, scope: !999)
!1003 = !DILocation(line: 435, column: 53, scope: !999)
!1004 = !DILocation(line: 436, column: 22, scope: !999)
!1005 = !DILocation(line: 436, column: 32, scope: !999)
!1006 = !DILocation(line: 436, column: 41, scope: !999)
!1007 = !DILocation(line: 436, column: 55, scope: !999)
!1008 = !DILocation(line: 436, column: 57, scope: !999)
!1009 = !DILocation(line: 436, column: 20, scope: !999)
!1010 = !DILocation(line: 435, column: 20, scope: !1000)
!1011 = !DILocalVariable(name: "t", scope: !1012, file: !1, line: 438, type: !5)
!1012 = distinct !DILexicalBlock(scope: !999, file: !1, line: 437, column: 16)
!1013 = !DILocation(line: 438, column: 28, scope: !1012)
!1014 = !DILocation(line: 440, column: 23, scope: !1012)
!1015 = !DILocation(line: 440, column: 32, scope: !1012)
!1016 = !DILocation(line: 440, column: 46, scope: !1012)
!1017 = !DILocation(line: 440, column: 21, scope: !1012)
!1018 = !DILocation(line: 441, column: 47, scope: !1012)
!1019 = !DILocation(line: 441, column: 56, scope: !1012)
!1020 = !DILocation(line: 441, column: 70, scope: !1012)
!1021 = !DILocation(line: 441, column: 72, scope: !1012)
!1022 = !DILocation(line: 441, column: 19, scope: !1012)
!1023 = !DILocation(line: 441, column: 28, scope: !1012)
!1024 = !DILocation(line: 441, column: 42, scope: !1012)
!1025 = !DILocation(line: 441, column: 45, scope: !1012)
!1026 = !DILocation(line: 442, column: 51, scope: !1012)
!1027 = !DILocation(line: 442, column: 19, scope: !1012)
!1028 = !DILocation(line: 442, column: 28, scope: !1012)
!1029 = !DILocation(line: 442, column: 42, scope: !1012)
!1030 = !DILocation(line: 442, column: 44, scope: !1012)
!1031 = !DILocation(line: 442, column: 49, scope: !1012)
!1032 = !DILocation(line: 443, column: 24, scope: !1012)
!1033 = !DILocation(line: 444, column: 16, scope: !1012)
!1034 = !DILocation(line: 445, column: 13, scope: !1000)
!1035 = !DILocation(line: 433, column: 33, scope: !994)
!1036 = !DILocation(line: 433, column: 13, scope: !994)
!1037 = distinct !{!1037, !997, !1038}
!1038 = !DILocation(line: 445, column: 13, scope: !991)
!1039 = !DILocation(line: 447, column: 17, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !985, file: !1, line: 447, column: 17)
!1041 = !DILocation(line: 447, column: 17, scope: !985)
!1042 = !DILocation(line: 448, column: 16, scope: !1040)
!1043 = !DILocation(line: 449, column: 10, scope: !985)
!1044 = !DILocation(line: 427, column: 58, scope: !980)
!1045 = !DILocation(line: 427, column: 10, scope: !980)
!1046 = distinct !{!1046, !983, !1047}
!1047 = !DILocation(line: 449, column: 10, scope: !975)
!1048 = !DILocation(line: 452, column: 14, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !946, file: !1, line: 452, column: 14)
!1050 = !DILocation(line: 452, column: 14, scope: !946)
!1051 = !DILocalVariable(name: "j", scope: !1052, file: !1, line: 454, type: !12)
!1052 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 453, column: 10)
!1053 = !DILocation(line: 454, column: 17, scope: !1052)
!1054 = !DILocation(line: 454, column: 21, scope: !1052)
!1055 = !DILocation(line: 459, column: 20, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 459, column: 13)
!1057 = !DILocation(line: 459, column: 18, scope: !1056)
!1058 = !DILocation(line: 459, column: 25, scope: !1059)
!1059 = distinct !DILexicalBlock(scope: !1056, file: !1, line: 459, column: 13)
!1060 = !DILocation(line: 459, column: 29, scope: !1059)
!1061 = !DILocation(line: 459, column: 27, scope: !1059)
!1062 = !DILocation(line: 459, column: 13, scope: !1056)
!1063 = !DILocation(line: 461, column: 25, scope: !1064)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !1, line: 461, column: 20)
!1065 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 460, column: 13)
!1066 = !DILocation(line: 461, column: 34, scope: !1064)
!1067 = !DILocation(line: 461, column: 48, scope: !1064)
!1068 = !DILocation(line: 461, column: 20, scope: !1064)
!1069 = !DILocation(line: 461, column: 54, scope: !1064)
!1070 = !DILocation(line: 461, column: 51, scope: !1064)
!1071 = !DILocation(line: 461, column: 20, scope: !1065)
!1072 = !DILocation(line: 463, column: 19, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1064, file: !1, line: 462, column: 16)
!1074 = !DILocation(line: 464, column: 23, scope: !1073)
!1075 = !DILocation(line: 464, column: 22, scope: !1073)
!1076 = !DILocation(line: 465, column: 31, scope: !1073)
!1077 = !DILocation(line: 465, column: 40, scope: !1073)
!1078 = !DILocation(line: 465, column: 54, scope: !1073)
!1079 = !DILocation(line: 465, column: 26, scope: !1073)
!1080 = !DILocation(line: 465, column: 60, scope: !1073)
!1081 = !DILocation(line: 465, column: 57, scope: !1073)
!1082 = distinct !{!1082, !1072, !1083}
!1083 = !DILocation(line: 465, column: 74, scope: !1073)
!1084 = !DILocation(line: 467, column: 19, scope: !1073)
!1085 = !DILocation(line: 467, column: 27, scope: !1073)
!1086 = !DILocation(line: 467, column: 32, scope: !1073)
!1087 = !DILocation(line: 467, column: 40, scope: !1073)
!1088 = !DILocation(line: 468, column: 16, scope: !1073)
!1089 = !DILocation(line: 469, column: 13, scope: !1065)
!1090 = !DILocation(line: 459, column: 46, scope: !1059)
!1091 = !DILocation(line: 459, column: 13, scope: !1059)
!1092 = distinct !{!1092, !1062, !1093}
!1093 = !DILocation(line: 469, column: 13, scope: !1056)
!1094 = !DILocation(line: 470, column: 10, scope: !1052)
!1095 = !DILocalVariable(name: "j", scope: !1096, file: !1, line: 473, type: !12)
!1096 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 472, column: 10)
!1097 = !DILocation(line: 473, column: 17, scope: !1096)
!1098 = !DILocation(line: 473, column: 21, scope: !1096)
!1099 = !DILocation(line: 478, column: 20, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1096, file: !1, line: 478, column: 13)
!1101 = !DILocation(line: 478, column: 18, scope: !1100)
!1102 = !DILocation(line: 478, column: 25, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1100, file: !1, line: 478, column: 13)
!1104 = !DILocation(line: 478, column: 29, scope: !1103)
!1105 = !DILocation(line: 478, column: 27, scope: !1103)
!1106 = !DILocation(line: 478, column: 13, scope: !1100)
!1107 = !DILocation(line: 481, column: 25, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !1, line: 481, column: 20)
!1109 = distinct !DILexicalBlock(scope: !1103, file: !1, line: 479, column: 13)
!1110 = !DILocation(line: 481, column: 34, scope: !1108)
!1111 = !DILocation(line: 481, column: 48, scope: !1108)
!1112 = !DILocation(line: 481, column: 20, scope: !1108)
!1113 = !DILocation(line: 481, column: 54, scope: !1108)
!1114 = !DILocation(line: 481, column: 51, scope: !1108)
!1115 = !DILocation(line: 481, column: 20, scope: !1109)
!1116 = !DILocalVariable(name: "tmp_color", scope: !1117, file: !1, line: 483, type: !191)
!1117 = distinct !DILexicalBlock(scope: !1108, file: !1, line: 482, column: 16)
!1118 = !DILocation(line: 483, column: 29, scope: !1117)
!1119 = !DILocation(line: 485, column: 19, scope: !1117)
!1120 = !DILocation(line: 486, column: 23, scope: !1117)
!1121 = !DILocation(line: 486, column: 22, scope: !1117)
!1122 = !DILocation(line: 487, column: 31, scope: !1117)
!1123 = !DILocation(line: 487, column: 40, scope: !1117)
!1124 = !DILocation(line: 487, column: 54, scope: !1117)
!1125 = !DILocation(line: 487, column: 26, scope: !1117)
!1126 = !DILocation(line: 487, column: 60, scope: !1117)
!1127 = !DILocation(line: 487, column: 57, scope: !1117)
!1128 = distinct !{!1128, !1119, !1129}
!1129 = !DILocation(line: 487, column: 74, scope: !1117)
!1130 = !DILocation(line: 489, column: 31, scope: !1117)
!1131 = !DILocation(line: 489, column: 39, scope: !1117)
!1132 = !DILocation(line: 490, column: 19, scope: !1117)
!1133 = !DILocation(line: 490, column: 27, scope: !1117)
!1134 = !DILocation(line: 490, column: 32, scope: !1117)
!1135 = !DILocation(line: 490, column: 40, scope: !1117)
!1136 = !DILocation(line: 491, column: 19, scope: !1117)
!1137 = !DILocation(line: 491, column: 27, scope: !1117)
!1138 = !DILocation(line: 491, column: 32, scope: !1117)
!1139 = !DILocation(line: 493, column: 58, scope: !1117)
!1140 = !DILocation(line: 493, column: 48, scope: !1117)
!1141 = !DILocation(line: 493, column: 19, scope: !1117)
!1142 = !DILocation(line: 493, column: 28, scope: !1117)
!1143 = !DILocation(line: 493, column: 43, scope: !1117)
!1144 = !DILocation(line: 493, column: 46, scope: !1117)
!1145 = !DILocation(line: 494, column: 58, scope: !1117)
!1146 = !DILocation(line: 494, column: 48, scope: !1117)
!1147 = !DILocation(line: 494, column: 19, scope: !1117)
!1148 = !DILocation(line: 494, column: 28, scope: !1117)
!1149 = !DILocation(line: 494, column: 43, scope: !1117)
!1150 = !DILocation(line: 494, column: 46, scope: !1117)
!1151 = !DILocation(line: 495, column: 16, scope: !1117)
!1152 = !DILocation(line: 496, column: 13, scope: !1109)
!1153 = !DILocation(line: 478, column: 46, scope: !1103)
!1154 = !DILocation(line: 478, column: 13, scope: !1103)
!1155 = distinct !{!1155, !1106, !1156}
!1156 = !DILocation(line: 496, column: 13, scope: !1100)
!1157 = !DILocation(line: 499, column: 20, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1096, file: !1, line: 499, column: 13)
!1159 = !DILocation(line: 499, column: 18, scope: !1158)
!1160 = !DILocation(line: 499, column: 25, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1158, file: !1, line: 499, column: 13)
!1162 = !DILocation(line: 499, column: 29, scope: !1161)
!1163 = !DILocation(line: 499, column: 27, scope: !1161)
!1164 = !DILocation(line: 499, column: 13, scope: !1158)
!1165 = !DILocation(line: 501, column: 25, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 501, column: 20)
!1167 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 500, column: 13)
!1168 = !DILocation(line: 501, column: 34, scope: !1166)
!1169 = !DILocation(line: 501, column: 49, scope: !1166)
!1170 = !DILocation(line: 501, column: 20, scope: !1166)
!1171 = !DILocation(line: 501, column: 55, scope: !1166)
!1172 = !DILocation(line: 501, column: 52, scope: !1166)
!1173 = !DILocation(line: 501, column: 20, scope: !1167)
!1174 = !DILocalVariable(name: "min_d", scope: !1175, file: !1, line: 503, type: !12)
!1175 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 502, column: 16)
!1176 = !DILocation(line: 503, column: 23, scope: !1175)
!1177 = !DILocalVariable(name: "k", scope: !1175, file: !1, line: 503, type: !12)
!1178 = !DILocation(line: 503, column: 30, scope: !1175)
!1179 = !DILocalVariable(name: "min_k", scope: !1175, file: !1, line: 503, type: !12)
!1180 = !DILocation(line: 503, column: 33, scope: !1175)
!1181 = !DILocalVariable(name: "d_index", scope: !1175, file: !1, line: 503, type: !12)
!1182 = !DILocation(line: 503, column: 40, scope: !1175)
!1183 = !DILocation(line: 506, column: 29, scope: !1175)
!1184 = !DILocation(line: 506, column: 38, scope: !1175)
!1185 = !DILocation(line: 506, column: 53, scope: !1175)
!1186 = !DILocation(line: 506, column: 27, scope: !1175)
!1187 = !DILocation(line: 507, column: 27, scope: !1175)
!1188 = !DILocation(line: 507, column: 25, scope: !1175)
!1189 = !DILocation(line: 508, column: 26, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1175, file: !1, line: 508, column: 19)
!1191 = !DILocation(line: 508, column: 37, scope: !1190)
!1192 = !DILocation(line: 508, column: 24, scope: !1190)
!1193 = !DILocation(line: 508, column: 42, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1190, file: !1, line: 508, column: 19)
!1195 = !DILocation(line: 508, column: 46, scope: !1194)
!1196 = !DILocation(line: 508, column: 44, scope: !1194)
!1197 = !DILocation(line: 508, column: 19, scope: !1190)
!1198 = !DILocalVariable(name: "d", scope: !1199, file: !1, line: 510, type: !12)
!1199 = distinct !DILexicalBlock(scope: !1194, file: !1, line: 509, column: 19)
!1200 = !DILocation(line: 510, column: 26, scope: !1199)
!1201 = !DILocation(line: 512, column: 26, scope: !1199)
!1202 = !DILocation(line: 512, column: 24, scope: !1199)
!1203 = !DILocation(line: 514, column: 26, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1199, file: !1, line: 514, column: 26)
!1205 = !DILocation(line: 514, column: 30, scope: !1204)
!1206 = !DILocation(line: 514, column: 28, scope: !1204)
!1207 = !DILocation(line: 514, column: 26, scope: !1199)
!1208 = !DILocation(line: 516, column: 33, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 515, column: 22)
!1210 = !DILocation(line: 516, column: 31, scope: !1209)
!1211 = !DILocation(line: 517, column: 33, scope: !1209)
!1212 = !DILocation(line: 517, column: 31, scope: !1209)
!1213 = !DILocation(line: 518, column: 22, scope: !1209)
!1214 = !DILocation(line: 519, column: 19, scope: !1199)
!1215 = !DILocation(line: 508, column: 63, scope: !1194)
!1216 = !DILocation(line: 508, column: 19, scope: !1194)
!1217 = distinct !{!1217, !1197, !1218}
!1218 = !DILocation(line: 519, column: 19, scope: !1190)
!1219 = !DILocation(line: 521, column: 58, scope: !1175)
!1220 = !DILocation(line: 521, column: 48, scope: !1175)
!1221 = !DILocation(line: 521, column: 19, scope: !1175)
!1222 = !DILocation(line: 521, column: 28, scope: !1175)
!1223 = !DILocation(line: 521, column: 43, scope: !1175)
!1224 = !DILocation(line: 521, column: 46, scope: !1175)
!1225 = !DILocation(line: 522, column: 16, scope: !1175)
!1226 = !DILocation(line: 523, column: 13, scope: !1167)
!1227 = !DILocation(line: 499, column: 43, scope: !1161)
!1228 = !DILocation(line: 499, column: 13, scope: !1161)
!1229 = distinct !{!1229, !1164, !1230}
!1230 = !DILocation(line: 523, column: 13, scope: !1158)
!1231 = !DILocation(line: 525, column: 19, scope: !946)
!1232 = !DILocation(line: 525, column: 28, scope: !946)
!1233 = !DILocation(line: 525, column: 37, scope: !946)
!1234 = !DILocation(line: 525, column: 10, scope: !946)
!1235 = !DILocation(line: 526, column: 10, scope: !946)
!1236 = !DILocation(line: 526, column: 19, scope: !946)
!1237 = !DILocation(line: 526, column: 33, scope: !946)
!1238 = !DILocation(line: 527, column: 7, scope: !946)
!1239 = !DILocalVariable(name: "i", scope: !1240, file: !1, line: 538, type: !12)
!1240 = distinct !DILexicalBlock(scope: !941, file: !1, line: 529, column: 7)
!1241 = !DILocation(line: 538, column: 14, scope: !1240)
!1242 = !DILocalVariable(name: "max_d", scope: !1240, file: !1, line: 539, type: !12)
!1243 = !DILocation(line: 539, column: 14, scope: !1240)
!1244 = !DILocalVariable(name: "num_new_palette", scope: !1240, file: !1, line: 540, type: !12)
!1245 = !DILocation(line: 540, column: 14, scope: !1240)
!1246 = !DILocalVariable(name: "t", scope: !1240, file: !1, line: 541, type: !23)
!1247 = !DILocation(line: 541, column: 21, scope: !1240)
!1248 = !DILocalVariable(name: "hash", scope: !1240, file: !1, line: 542, type: !13)
!1249 = !DILocation(line: 542, column: 22, scope: !1240)
!1250 = !DILocation(line: 544, column: 12, scope: !1240)
!1251 = !DILocation(line: 547, column: 60, scope: !1240)
!1252 = !DILocation(line: 548, column: 28, scope: !1240)
!1253 = !DILocation(line: 548, column: 40, scope: !1240)
!1254 = !DILocation(line: 548, column: 14, scope: !1240)
!1255 = !DILocation(line: 547, column: 49, scope: !1240)
!1256 = !DILocation(line: 547, column: 10, scope: !1240)
!1257 = !DILocation(line: 547, column: 19, scope: !1240)
!1258 = !DILocation(line: 547, column: 36, scope: !1240)
!1259 = !DILocation(line: 549, column: 60, scope: !1240)
!1260 = !DILocation(line: 550, column: 28, scope: !1240)
!1261 = !DILocation(line: 550, column: 40, scope: !1240)
!1262 = !DILocation(line: 550, column: 14, scope: !1240)
!1263 = !DILocation(line: 549, column: 49, scope: !1240)
!1264 = !DILocation(line: 549, column: 10, scope: !1240)
!1265 = !DILocation(line: 549, column: 19, scope: !1240)
!1266 = !DILocation(line: 549, column: 36, scope: !1240)
!1267 = !DILocation(line: 553, column: 17, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 553, column: 10)
!1269 = !DILocation(line: 553, column: 15, scope: !1268)
!1270 = !DILocation(line: 553, column: 22, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1268, file: !1, line: 553, column: 10)
!1272 = !DILocation(line: 553, column: 26, scope: !1271)
!1273 = !DILocation(line: 553, column: 24, scope: !1271)
!1274 = !DILocation(line: 553, column: 10, scope: !1268)
!1275 = !DILocation(line: 555, column: 54, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 554, column: 10)
!1277 = !DILocation(line: 555, column: 44, scope: !1276)
!1278 = !DILocation(line: 555, column: 13, scope: !1276)
!1279 = !DILocation(line: 555, column: 22, scope: !1276)
!1280 = !DILocation(line: 555, column: 39, scope: !1276)
!1281 = !DILocation(line: 555, column: 42, scope: !1276)
!1282 = !DILocation(line: 556, column: 54, scope: !1276)
!1283 = !DILocation(line: 556, column: 44, scope: !1276)
!1284 = !DILocation(line: 556, column: 13, scope: !1276)
!1285 = !DILocation(line: 556, column: 22, scope: !1276)
!1286 = !DILocation(line: 556, column: 39, scope: !1276)
!1287 = !DILocation(line: 556, column: 42, scope: !1276)
!1288 = !DILocation(line: 557, column: 10, scope: !1276)
!1289 = !DILocation(line: 553, column: 40, scope: !1271)
!1290 = !DILocation(line: 553, column: 10, scope: !1271)
!1291 = distinct !{!1291, !1274, !1292}
!1292 = !DILocation(line: 557, column: 10, scope: !1268)
!1293 = !DILocation(line: 559, column: 41, scope: !1240)
!1294 = !DILocation(line: 559, column: 30, scope: !1240)
!1295 = !DILocation(line: 559, column: 17, scope: !1240)
!1296 = !DILocation(line: 559, column: 15, scope: !1240)
!1297 = !DILocation(line: 562, column: 28, scope: !1240)
!1298 = !DILocation(line: 562, column: 26, scope: !1240)
!1299 = !DILocation(line: 572, column: 16, scope: !1240)
!1300 = !DILocation(line: 574, column: 10, scope: !1240)
!1301 = !DILocation(line: 574, column: 17, scope: !1240)
!1302 = !DILocation(line: 574, column: 35, scope: !1240)
!1303 = !DILocation(line: 574, column: 33, scope: !1240)
!1304 = !DILocation(line: 576, column: 20, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !1, line: 576, column: 13)
!1306 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 575, column: 10)
!1307 = !DILocation(line: 576, column: 18, scope: !1305)
!1308 = !DILocation(line: 576, column: 25, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1305, file: !1, line: 576, column: 13)
!1310 = !DILocation(line: 576, column: 29, scope: !1309)
!1311 = !DILocation(line: 576, column: 45, scope: !1309)
!1312 = !DILocation(line: 576, column: 27, scope: !1309)
!1313 = !DILocation(line: 576, column: 13, scope: !1305)
!1314 = !DILocalVariable(name: "j", scope: !1315, file: !1, line: 578, type: !12)
!1315 = distinct !DILexicalBlock(scope: !1309, file: !1, line: 577, column: 13)
!1316 = !DILocation(line: 578, column: 20, scope: !1315)
!1317 = !DILocation(line: 580, column: 25, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1315, file: !1, line: 580, column: 16)
!1319 = !DILocation(line: 580, column: 27, scope: !1318)
!1320 = !DILocation(line: 580, column: 23, scope: !1318)
!1321 = !DILocation(line: 580, column: 21, scope: !1318)
!1322 = !DILocation(line: 580, column: 32, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1318, file: !1, line: 580, column: 16)
!1324 = !DILocation(line: 580, column: 36, scope: !1323)
!1325 = !DILocation(line: 580, column: 34, scope: !1323)
!1326 = !DILocation(line: 580, column: 16, scope: !1318)
!1327 = !DILocalVariable(name: "d", scope: !1328, file: !1, line: 582, type: !12)
!1328 = distinct !DILexicalBlock(scope: !1323, file: !1, line: 581, column: 16)
!1329 = !DILocation(line: 582, column: 23, scope: !1328)
!1330 = !DILocation(line: 584, column: 23, scope: !1328)
!1331 = !DILocation(line: 584, column: 21, scope: !1328)
!1332 = !DILocation(line: 586, column: 23, scope: !1333)
!1333 = distinct !DILexicalBlock(scope: !1328, file: !1, line: 586, column: 23)
!1334 = !DILocation(line: 586, column: 28, scope: !1333)
!1335 = !DILocation(line: 586, column: 25, scope: !1333)
!1336 = !DILocation(line: 586, column: 23, scope: !1328)
!1337 = !DILocation(line: 589, column: 54, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1333, file: !1, line: 587, column: 19)
!1339 = !DILocation(line: 589, column: 38, scope: !1338)
!1340 = !DILocation(line: 589, column: 26, scope: !1338)
!1341 = !DILocation(line: 589, column: 24, scope: !1338)
!1342 = !DILocation(line: 592, column: 26, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1338, file: !1, line: 592, column: 26)
!1344 = !DILocation(line: 592, column: 28, scope: !1343)
!1345 = !DILocation(line: 592, column: 26, scope: !1338)
!1346 = !DILocation(line: 593, column: 26, scope: !1343)
!1347 = !DILocation(line: 595, column: 32, scope: !1338)
!1348 = !DILocation(line: 595, column: 37, scope: !1338)
!1349 = !DILocation(line: 595, column: 22, scope: !1338)
!1350 = !DILocation(line: 595, column: 25, scope: !1338)
!1351 = !DILocation(line: 595, column: 30, scope: !1338)
!1352 = !DILocation(line: 596, column: 42, scope: !1338)
!1353 = !DILocation(line: 596, column: 32, scope: !1338)
!1354 = !DILocation(line: 596, column: 22, scope: !1338)
!1355 = !DILocation(line: 596, column: 25, scope: !1338)
!1356 = !DILocation(line: 596, column: 30, scope: !1338)
!1357 = !DILocation(line: 597, column: 43, scope: !1338)
!1358 = !DILocation(line: 597, column: 33, scope: !1338)
!1359 = !DILocation(line: 597, column: 22, scope: !1338)
!1360 = !DILocation(line: 597, column: 25, scope: !1338)
!1361 = !DILocation(line: 597, column: 31, scope: !1338)
!1362 = !DILocation(line: 598, column: 32, scope: !1338)
!1363 = !DILocation(line: 598, column: 22, scope: !1338)
!1364 = !DILocation(line: 598, column: 27, scope: !1338)
!1365 = !DILocation(line: 598, column: 30, scope: !1338)
!1366 = !DILocation(line: 599, column: 19, scope: !1338)
!1367 = !DILocation(line: 600, column: 16, scope: !1328)
!1368 = !DILocation(line: 580, column: 54, scope: !1323)
!1369 = !DILocation(line: 580, column: 16, scope: !1323)
!1370 = distinct !{!1370, !1326, !1371}
!1371 = !DILocation(line: 600, column: 16, scope: !1318)
!1372 = !DILocation(line: 601, column: 20, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1315, file: !1, line: 601, column: 20)
!1374 = !DILocation(line: 601, column: 22, scope: !1373)
!1375 = !DILocation(line: 601, column: 20, scope: !1315)
!1376 = !DILocation(line: 602, column: 19, scope: !1373)
!1377 = !DILocation(line: 603, column: 13, scope: !1315)
!1378 = !DILocation(line: 576, column: 51, scope: !1309)
!1379 = !DILocation(line: 576, column: 13, scope: !1309)
!1380 = distinct !{!1380, !1313, !1381}
!1381 = !DILocation(line: 603, column: 13, scope: !1305)
!1382 = !DILocation(line: 605, column: 17, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1306, file: !1, line: 605, column: 17)
!1384 = !DILocation(line: 605, column: 19, scope: !1383)
!1385 = !DILocation(line: 605, column: 17, scope: !1306)
!1386 = !DILocation(line: 606, column: 20, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1383, file: !1, line: 606, column: 13)
!1388 = !DILocation(line: 606, column: 18, scope: !1387)
!1389 = !DILocation(line: 606, column: 25, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1387, file: !1, line: 606, column: 13)
!1391 = !DILocation(line: 606, column: 30, scope: !1390)
!1392 = !DILocation(line: 606, column: 27, scope: !1390)
!1393 = !DILocation(line: 606, column: 13, scope: !1387)
!1394 = !DILocation(line: 608, column: 20, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1396, file: !1, line: 608, column: 20)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !1, line: 607, column: 13)
!1397 = !DILocation(line: 608, column: 25, scope: !1395)
!1398 = !DILocation(line: 608, column: 28, scope: !1395)
!1399 = !DILocation(line: 608, column: 20, scope: !1396)
!1400 = !DILocalVariable(name: "p", scope: !1401, file: !1, line: 610, type: !23)
!1401 = distinct !DILexicalBlock(scope: !1395, file: !1, line: 609, column: 16)
!1402 = !DILocation(line: 610, column: 30, scope: !1401)
!1403 = !DILocation(line: 612, column: 28, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1401, file: !1, line: 612, column: 19)
!1405 = !DILocation(line: 612, column: 33, scope: !1404)
!1406 = !DILocation(line: 612, column: 26, scope: !1404)
!1407 = !DILocation(line: 612, column: 24, scope: !1404)
!1408 = !DILocation(line: 612, column: 37, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1404, file: !1, line: 612, column: 19)
!1410 = !DILocation(line: 612, column: 19, scope: !1404)
!1411 = !DILocation(line: 614, column: 31, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 614, column: 26)
!1413 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 613, column: 19)
!1414 = !DILocation(line: 614, column: 40, scope: !1412)
!1415 = !DILocation(line: 614, column: 57, scope: !1412)
!1416 = !DILocation(line: 614, column: 60, scope: !1412)
!1417 = !DILocation(line: 614, column: 26, scope: !1412)
!1418 = !DILocation(line: 615, column: 28, scope: !1412)
!1419 = !DILocation(line: 615, column: 26, scope: !1412)
!1420 = !DILocation(line: 615, column: 44, scope: !1412)
!1421 = !DILocation(line: 616, column: 31, scope: !1412)
!1422 = !DILocation(line: 616, column: 40, scope: !1412)
!1423 = !DILocation(line: 616, column: 57, scope: !1412)
!1424 = !DILocation(line: 616, column: 60, scope: !1412)
!1425 = !DILocation(line: 616, column: 26, scope: !1412)
!1426 = !DILocation(line: 617, column: 28, scope: !1412)
!1427 = !DILocation(line: 617, column: 26, scope: !1412)
!1428 = !DILocation(line: 614, column: 26, scope: !1413)
!1429 = !DILocalVariable(name: "j", scope: !1430, file: !1, line: 619, type: !12)
!1430 = distinct !DILexicalBlock(scope: !1412, file: !1, line: 618, column: 22)
!1431 = !DILocation(line: 619, column: 29, scope: !1430)
!1432 = !DILocalVariable(name: "next_j", scope: !1430, file: !1, line: 619, type: !12)
!1433 = !DILocation(line: 619, column: 32, scope: !1430)
!1434 = !DILocation(line: 621, column: 29, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !1430, file: !1, line: 621, column: 29)
!1436 = !DILocation(line: 621, column: 45, scope: !1435)
!1437 = !DILocation(line: 621, column: 29, scope: !1430)
!1438 = !DILocation(line: 623, column: 32, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1435, file: !1, line: 622, column: 25)
!1440 = !DILocation(line: 623, column: 35, scope: !1439)
!1441 = !DILocation(line: 623, column: 30, scope: !1439)
!1442 = !DILocation(line: 624, column: 37, scope: !1439)
!1443 = !DILocation(line: 624, column: 40, scope: !1439)
!1444 = !DILocation(line: 624, column: 35, scope: !1439)
!1445 = !DILocation(line: 625, column: 25, scope: !1439)
!1446 = !DILocation(line: 628, column: 32, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1435, file: !1, line: 627, column: 25)
!1448 = !DILocation(line: 628, column: 35, scope: !1447)
!1449 = !DILocation(line: 628, column: 30, scope: !1447)
!1450 = !DILocation(line: 629, column: 37, scope: !1447)
!1451 = !DILocation(line: 629, column: 40, scope: !1447)
!1452 = !DILocation(line: 629, column: 35, scope: !1447)
!1453 = !DILocation(line: 632, column: 40, scope: !1430)
!1454 = !DILocation(line: 633, column: 25, scope: !1430)
!1455 = !DILocation(line: 633, column: 33, scope: !1430)
!1456 = !DILocation(line: 633, column: 42, scope: !1430)
!1457 = !DILocation(line: 633, column: 59, scope: !1430)
!1458 = !DILocation(line: 634, column: 31, scope: !1430)
!1459 = !DILocation(line: 634, column: 39, scope: !1430)
!1460 = !DILocation(line: 635, column: 30, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1430, file: !1, line: 635, column: 29)
!1462 = !DILocation(line: 635, column: 29, scope: !1430)
!1463 = !DILocalVariable(name: "k", scope: !1464, file: !1, line: 637, type: !12)
!1464 = distinct !DILexicalBlock(scope: !1461, file: !1, line: 636, column: 25)
!1465 = !DILocation(line: 637, column: 32, scope: !1464)
!1466 = !DILocation(line: 639, column: 35, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1464, file: !1, line: 639, column: 28)
!1468 = !DILocation(line: 639, column: 33, scope: !1467)
!1469 = !DILocation(line: 639, column: 40, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !1, line: 639, column: 28)
!1471 = !DILocation(line: 639, column: 44, scope: !1470)
!1472 = !DILocation(line: 639, column: 42, scope: !1470)
!1473 = !DILocation(line: 639, column: 28, scope: !1467)
!1474 = !DILocation(line: 641, column: 35, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 641, column: 35)
!1476 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 640, column: 28)
!1477 = !DILocation(line: 641, column: 44, scope: !1475)
!1478 = !DILocation(line: 641, column: 59, scope: !1475)
!1479 = !DILocation(line: 642, column: 35, scope: !1475)
!1480 = !DILocation(line: 642, column: 44, scope: !1475)
!1481 = !DILocation(line: 642, column: 61, scope: !1475)
!1482 = !DILocation(line: 641, column: 62, scope: !1475)
!1483 = !DILocation(line: 641, column: 35, scope: !1476)
!1484 = !DILocation(line: 644, column: 38, scope: !1475)
!1485 = !DILocation(line: 644, column: 47, scope: !1475)
!1486 = !DILocation(line: 644, column: 64, scope: !1475)
!1487 = !DILocation(line: 643, column: 34, scope: !1475)
!1488 = !DILocation(line: 643, column: 43, scope: !1475)
!1489 = !DILocation(line: 643, column: 58, scope: !1475)
!1490 = !DILocation(line: 643, column: 61, scope: !1475)
!1491 = !DILocation(line: 646, column: 40, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 646, column: 35)
!1493 = !DILocation(line: 646, column: 49, scope: !1492)
!1494 = !DILocation(line: 646, column: 64, scope: !1492)
!1495 = !DILocation(line: 646, column: 35, scope: !1492)
!1496 = !DILocation(line: 647, column: 35, scope: !1492)
!1497 = !DILocation(line: 646, column: 67, scope: !1492)
!1498 = !DILocation(line: 646, column: 35, scope: !1476)
!1499 = !DILocation(line: 649, column: 38, scope: !1492)
!1500 = !DILocation(line: 649, column: 47, scope: !1492)
!1501 = !DILocation(line: 649, column: 64, scope: !1492)
!1502 = !DILocation(line: 648, column: 34, scope: !1492)
!1503 = !DILocation(line: 648, column: 43, scope: !1492)
!1504 = !DILocation(line: 648, column: 58, scope: !1492)
!1505 = !DILocation(line: 648, column: 61, scope: !1492)
!1506 = !DILocation(line: 650, column: 28, scope: !1476)
!1507 = !DILocation(line: 639, column: 58, scope: !1470)
!1508 = !DILocation(line: 639, column: 28, scope: !1470)
!1509 = distinct !{!1509, !1473, !1510}
!1510 = !DILocation(line: 650, column: 28, scope: !1467)
!1511 = !DILocation(line: 651, column: 25, scope: !1464)
!1512 = !DILocation(line: 654, column: 50, scope: !1430)
!1513 = !DILocation(line: 654, column: 59, scope: !1430)
!1514 = !DILocation(line: 654, column: 76, scope: !1430)
!1515 = !DILocation(line: 653, column: 25, scope: !1430)
!1516 = !DILocation(line: 653, column: 34, scope: !1430)
!1517 = !DILocation(line: 653, column: 51, scope: !1430)
!1518 = !DILocation(line: 653, column: 60, scope: !1430)
!1519 = !DILocation(line: 654, column: 30, scope: !1430)
!1520 = !DILocation(line: 654, column: 48, scope: !1430)
!1521 = !DILocation(line: 657, column: 31, scope: !1430)
!1522 = !DILocation(line: 657, column: 40, scope: !1430)
!1523 = !DILocation(line: 657, column: 57, scope: !1430)
!1524 = !DILocation(line: 656, column: 25, scope: !1430)
!1525 = !DILocation(line: 656, column: 34, scope: !1430)
!1526 = !DILocation(line: 656, column: 51, scope: !1430)
!1527 = !DILocation(line: 656, column: 60, scope: !1430)
!1528 = !DILocation(line: 656, column: 77, scope: !1430)
!1529 = !DILocation(line: 657, column: 29, scope: !1430)
!1530 = !DILocation(line: 660, column: 39, scope: !1430)
!1531 = !DILocation(line: 660, column: 29, scope: !1430)
!1532 = !DILocation(line: 659, column: 25, scope: !1430)
!1533 = !DILocation(line: 659, column: 34, scope: !1430)
!1534 = !DILocation(line: 659, column: 51, scope: !1430)
!1535 = !DILocation(line: 659, column: 54, scope: !1430)
!1536 = !DILocation(line: 663, column: 39, scope: !1430)
!1537 = !DILocation(line: 663, column: 29, scope: !1430)
!1538 = !DILocation(line: 662, column: 25, scope: !1430)
!1539 = !DILocation(line: 662, column: 34, scope: !1430)
!1540 = !DILocation(line: 662, column: 51, scope: !1430)
!1541 = !DILocation(line: 662, column: 68, scope: !1430)
!1542 = !DILocation(line: 664, column: 22, scope: !1430)
!1543 = !DILocation(line: 665, column: 26, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 665, column: 26)
!1545 = !DILocation(line: 665, column: 45, scope: !1544)
!1546 = !DILocation(line: 665, column: 42, scope: !1544)
!1547 = !DILocation(line: 665, column: 26, scope: !1413)
!1548 = !DILocation(line: 666, column: 25, scope: !1544)
!1549 = !DILocation(line: 667, column: 19, scope: !1413)
!1550 = !DILocation(line: 612, column: 44, scope: !1409)
!1551 = !DILocation(line: 612, column: 47, scope: !1409)
!1552 = !DILocation(line: 612, column: 42, scope: !1409)
!1553 = !DILocation(line: 612, column: 19, scope: !1409)
!1554 = distinct !{!1554, !1410, !1555}
!1555 = !DILocation(line: 667, column: 19, scope: !1404)
!1556 = !DILocation(line: 668, column: 23, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1401, file: !1, line: 668, column: 23)
!1558 = !DILocation(line: 668, column: 42, scope: !1557)
!1559 = !DILocation(line: 668, column: 39, scope: !1557)
!1560 = !DILocation(line: 668, column: 23, scope: !1401)
!1561 = !DILocation(line: 669, column: 22, scope: !1557)
!1562 = !DILocation(line: 670, column: 16, scope: !1401)
!1563 = !DILocation(line: 671, column: 13, scope: !1396)
!1564 = !DILocation(line: 606, column: 38, scope: !1390)
!1565 = !DILocation(line: 606, column: 13, scope: !1390)
!1566 = distinct !{!1566, !1393, !1567}
!1567 = !DILocation(line: 671, column: 13, scope: !1387)
!1568 = !DILocation(line: 673, column: 20, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1306, file: !1, line: 673, column: 13)
!1570 = !DILocation(line: 673, column: 18, scope: !1569)
!1571 = !DILocation(line: 673, column: 25, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1569, file: !1, line: 673, column: 13)
!1573 = !DILocation(line: 673, column: 27, scope: !1572)
!1574 = !DILocation(line: 673, column: 13, scope: !1569)
!1575 = !DILocation(line: 675, column: 20, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1577, file: !1, line: 675, column: 20)
!1577 = distinct !DILexicalBlock(scope: !1572, file: !1, line: 674, column: 13)
!1578 = !DILocation(line: 675, column: 25, scope: !1576)
!1579 = !DILocation(line: 675, column: 28, scope: !1576)
!1580 = !DILocation(line: 675, column: 20, scope: !1577)
!1581 = !DILocalVariable(name: "p", scope: !1582, file: !1, line: 677, type: !23)
!1582 = distinct !DILexicalBlock(scope: !1576, file: !1, line: 676, column: 16)
!1583 = !DILocation(line: 677, column: 30, scope: !1582)
!1584 = !DILocation(line: 677, column: 34, scope: !1582)
!1585 = !DILocation(line: 677, column: 39, scope: !1582)
!1586 = !DILocation(line: 678, column: 19, scope: !1582)
!1587 = !DILocation(line: 678, column: 26, scope: !1582)
!1588 = !DILocation(line: 680, column: 26, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1582, file: !1, line: 679, column: 19)
!1590 = !DILocation(line: 680, column: 29, scope: !1589)
!1591 = !DILocation(line: 680, column: 24, scope: !1589)
!1592 = !DILocation(line: 681, column: 31, scope: !1589)
!1593 = !DILocation(line: 681, column: 40, scope: !1589)
!1594 = !DILocation(line: 681, column: 22, scope: !1589)
!1595 = !DILocation(line: 682, column: 26, scope: !1589)
!1596 = !DILocation(line: 682, column: 24, scope: !1589)
!1597 = distinct !{!1597, !1586, !1598}
!1598 = !DILocation(line: 683, column: 19, scope: !1582)
!1599 = !DILocation(line: 684, column: 16, scope: !1582)
!1600 = !DILocation(line: 685, column: 16, scope: !1577)
!1601 = !DILocation(line: 685, column: 21, scope: !1577)
!1602 = !DILocation(line: 685, column: 24, scope: !1577)
!1603 = !DILocation(line: 686, column: 13, scope: !1577)
!1604 = !DILocation(line: 673, column: 35, scope: !1572)
!1605 = !DILocation(line: 673, column: 13, scope: !1572)
!1606 = distinct !{!1606, !1574, !1607}
!1607 = !DILocation(line: 686, column: 13, scope: !1569)
!1608 = !DILocation(line: 687, column: 19, scope: !1306)
!1609 = distinct !{!1609, !1300, !1610}
!1610 = !DILocation(line: 688, column: 10, scope: !1240)
!1611 = !DILocation(line: 689, column: 19, scope: !1240)
!1612 = !DILocation(line: 689, column: 28, scope: !1240)
!1613 = !DILocation(line: 689, column: 10, scope: !1240)
!1614 = !DILocation(line: 690, column: 19, scope: !1240)
!1615 = !DILocation(line: 690, column: 28, scope: !1240)
!1616 = !DILocation(line: 690, column: 37, scope: !1240)
!1617 = !DILocation(line: 690, column: 10, scope: !1240)
!1618 = !DILocation(line: 691, column: 19, scope: !1240)
!1619 = !DILocation(line: 691, column: 28, scope: !1240)
!1620 = !DILocation(line: 691, column: 37, scope: !1240)
!1621 = !DILocation(line: 691, column: 10, scope: !1240)
!1622 = !DILocation(line: 692, column: 10, scope: !1240)
!1623 = !DILocation(line: 692, column: 19, scope: !1240)
!1624 = !DILocation(line: 692, column: 36, scope: !1240)
!1625 = !DILocation(line: 693, column: 10, scope: !1240)
!1626 = !DILocation(line: 693, column: 19, scope: !1240)
!1627 = !DILocation(line: 693, column: 36, scope: !1240)
!1628 = !DILocation(line: 695, column: 21, scope: !942)
!1629 = !DILocation(line: 695, column: 19, scope: !942)
!1630 = !DILocation(line: 696, column: 4, scope: !942)
!1631 = !DILocation(line: 697, column: 8, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !876, file: !1, line: 697, column: 8)
!1633 = !DILocation(line: 697, column: 17, scope: !1632)
!1634 = !DILocation(line: 697, column: 25, scope: !1632)
!1635 = !DILocation(line: 697, column: 8, scope: !876)
!1636 = !DILocation(line: 699, column: 26, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 698, column: 4)
!1638 = !DILocation(line: 699, column: 7, scope: !1637)
!1639 = !DILocation(line: 699, column: 16, scope: !1637)
!1640 = !DILocation(line: 699, column: 24, scope: !1637)
!1641 = !DILocation(line: 700, column: 4, scope: !1637)
!1642 = !DILocation(line: 701, column: 40, scope: !876)
!1643 = !DILocation(line: 701, column: 27, scope: !876)
!1644 = !DILocation(line: 701, column: 4, scope: !876)
!1645 = !DILocation(line: 701, column: 13, scope: !876)
!1646 = !DILocation(line: 701, column: 25, scope: !876)
!1647 = !DILocation(line: 703, column: 8, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !876, file: !1, line: 703, column: 8)
!1649 = !DILocation(line: 703, column: 8, scope: !876)
!1650 = !DILocalVariable(name: "i", scope: !1651, file: !1, line: 705, type: !12)
!1651 = distinct !DILexicalBlock(scope: !1648, file: !1, line: 704, column: 4)
!1652 = !DILocation(line: 705, column: 11, scope: !1651)
!1653 = !DILocalVariable(name: "distance", scope: !1651, file: !1, line: 706, type: !8)
!1654 = !DILocation(line: 706, column: 17, scope: !1651)
!1655 = !DILocalVariable(name: "total_bits", scope: !1651, file: !1, line: 707, type: !12)
!1656 = !DILocation(line: 707, column: 11, scope: !1651)
!1657 = !DILocalVariable(name: "num_red", scope: !1651, file: !1, line: 709, type: !12)
!1658 = !DILocation(line: 709, column: 11, scope: !1651)
!1659 = !DILocalVariable(name: "num_green", scope: !1651, file: !1, line: 710, type: !12)
!1660 = !DILocation(line: 710, column: 11, scope: !1651)
!1661 = !DILocalVariable(name: "num_blue", scope: !1651, file: !1, line: 711, type: !12)
!1662 = !DILocation(line: 711, column: 11, scope: !1651)
!1663 = !DILocalVariable(name: "num_entries", scope: !1651, file: !1, line: 712, type: !26)
!1664 = !DILocation(line: 712, column: 18, scope: !1651)
!1665 = !DILocation(line: 712, column: 50, scope: !1651)
!1666 = !DILocation(line: 712, column: 47, scope: !1651)
!1667 = !DILocation(line: 714, column: 55, scope: !1651)
!1668 = !DILocation(line: 715, column: 25, scope: !1651)
!1669 = !DILocation(line: 715, column: 37, scope: !1651)
!1670 = !DILocation(line: 715, column: 11, scope: !1651)
!1671 = !DILocation(line: 714, column: 44, scope: !1651)
!1672 = !DILocation(line: 714, column: 7, scope: !1651)
!1673 = !DILocation(line: 714, column: 16, scope: !1651)
!1674 = !DILocation(line: 714, column: 31, scope: !1651)
!1675 = !DILocation(line: 717, column: 40, scope: !1651)
!1676 = !DILocation(line: 717, column: 63, scope: !1651)
!1677 = !DILocation(line: 717, column: 75, scope: !1651)
!1678 = !DILocation(line: 717, column: 49, scope: !1651)
!1679 = !DILocation(line: 717, column: 29, scope: !1651)
!1680 = !DILocation(line: 717, column: 16, scope: !1651)
!1681 = !DILocation(line: 720, column: 18, scope: !1651)
!1682 = !DILocation(line: 720, column: 34, scope: !1651)
!1683 = !DILocation(line: 720, column: 46, scope: !1651)
!1684 = !DILocation(line: 720, column: 7, scope: !1651)
!1685 = !DILocation(line: 722, column: 14, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 722, column: 7)
!1687 = !DILocation(line: 722, column: 12, scope: !1686)
!1688 = !DILocation(line: 722, column: 19, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1686, file: !1, line: 722, column: 7)
!1690 = !DILocation(line: 722, column: 23, scope: !1689)
!1691 = !DILocation(line: 722, column: 21, scope: !1689)
!1692 = !DILocation(line: 722, column: 7, scope: !1686)
!1693 = !DILocalVariable(name: "ir", scope: !1694, file: !1, line: 724, type: !12)
!1694 = distinct !DILexicalBlock(scope: !1689, file: !1, line: 723, column: 7)
!1695 = !DILocation(line: 724, column: 14, scope: !1694)
!1696 = !DILocalVariable(name: "ig", scope: !1694, file: !1, line: 724, type: !12)
!1697 = !DILocation(line: 724, column: 18, scope: !1694)
!1698 = !DILocalVariable(name: "ib", scope: !1694, file: !1, line: 724, type: !12)
!1699 = !DILocation(line: 724, column: 22, scope: !1694)
!1700 = !DILocalVariable(name: "r", scope: !1694, file: !1, line: 725, type: !12)
!1701 = !DILocation(line: 725, column: 14, scope: !1694)
!1702 = !DILocation(line: 725, column: 19, scope: !1694)
!1703 = !DILocation(line: 725, column: 27, scope: !1694)
!1704 = !DILocation(line: 725, column: 30, scope: !1694)
!1705 = !DILocation(line: 725, column: 34, scope: !1694)
!1706 = !DILocalVariable(name: "g", scope: !1694, file: !1, line: 726, type: !12)
!1707 = !DILocation(line: 726, column: 14, scope: !1694)
!1708 = !DILocation(line: 726, column: 19, scope: !1694)
!1709 = !DILocation(line: 726, column: 27, scope: !1694)
!1710 = !DILocation(line: 726, column: 30, scope: !1694)
!1711 = !DILocation(line: 726, column: 36, scope: !1694)
!1712 = !DILocalVariable(name: "b", scope: !1694, file: !1, line: 727, type: !12)
!1713 = !DILocation(line: 727, column: 14, scope: !1694)
!1714 = !DILocation(line: 727, column: 19, scope: !1694)
!1715 = !DILocation(line: 727, column: 27, scope: !1694)
!1716 = !DILocation(line: 727, column: 30, scope: !1694)
!1717 = !DILocation(line: 727, column: 35, scope: !1694)
!1718 = !DILocation(line: 729, column: 18, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1694, file: !1, line: 729, column: 10)
!1720 = !DILocation(line: 729, column: 15, scope: !1719)
!1721 = !DILocation(line: 729, column: 23, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1719, file: !1, line: 729, column: 10)
!1723 = !DILocation(line: 729, column: 28, scope: !1722)
!1724 = !DILocation(line: 729, column: 26, scope: !1722)
!1725 = !DILocation(line: 729, column: 10, scope: !1719)
!1726 = !DILocalVariable(name: "dr", scope: !1727, file: !1, line: 732, type: !12)
!1727 = distinct !DILexicalBlock(scope: !1722, file: !1, line: 730, column: 10)
!1728 = !DILocation(line: 732, column: 17, scope: !1727)
!1729 = !DILocation(line: 732, column: 24, scope: !1727)
!1730 = !DILocation(line: 732, column: 29, scope: !1727)
!1731 = !DILocation(line: 732, column: 27, scope: !1727)
!1732 = !DILocation(line: 732, column: 23, scope: !1727)
!1733 = !DILocation(line: 732, column: 34, scope: !1727)
!1734 = !DILocation(line: 732, column: 39, scope: !1727)
!1735 = !DILocation(line: 732, column: 37, scope: !1727)
!1736 = !DILocation(line: 732, column: 43, scope: !1727)
!1737 = !DILocation(line: 732, column: 47, scope: !1727)
!1738 = !DILocation(line: 732, column: 45, scope: !1727)
!1739 = !DILocalVariable(name: "index_r", scope: !1727, file: !1, line: 733, type: !12)
!1740 = !DILocation(line: 733, column: 17, scope: !1727)
!1741 = !DILocation(line: 733, column: 28, scope: !1727)
!1742 = !DILocation(line: 733, column: 31, scope: !1727)
!1743 = !DILocation(line: 736, column: 21, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 736, column: 13)
!1745 = !DILocation(line: 736, column: 18, scope: !1744)
!1746 = !DILocation(line: 736, column: 26, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 736, column: 13)
!1748 = !DILocation(line: 736, column: 31, scope: !1747)
!1749 = !DILocation(line: 736, column: 29, scope: !1747)
!1750 = !DILocation(line: 736, column: 13, scope: !1744)
!1751 = !DILocalVariable(name: "dg", scope: !1752, file: !1, line: 739, type: !12)
!1752 = distinct !DILexicalBlock(scope: !1747, file: !1, line: 737, column: 13)
!1753 = !DILocation(line: 739, column: 20, scope: !1752)
!1754 = !DILocation(line: 739, column: 27, scope: !1752)
!1755 = !DILocation(line: 739, column: 32, scope: !1752)
!1756 = !DILocation(line: 739, column: 30, scope: !1752)
!1757 = !DILocation(line: 739, column: 26, scope: !1752)
!1758 = !DILocation(line: 739, column: 37, scope: !1752)
!1759 = !DILocation(line: 739, column: 42, scope: !1752)
!1760 = !DILocation(line: 739, column: 40, scope: !1752)
!1761 = !DILocation(line: 739, column: 46, scope: !1752)
!1762 = !DILocation(line: 739, column: 50, scope: !1752)
!1763 = !DILocation(line: 739, column: 48, scope: !1752)
!1764 = !DILocalVariable(name: "dt", scope: !1752, file: !1, line: 740, type: !12)
!1765 = !DILocation(line: 740, column: 20, scope: !1752)
!1766 = !DILocation(line: 740, column: 25, scope: !1752)
!1767 = !DILocation(line: 740, column: 30, scope: !1752)
!1768 = !DILocation(line: 740, column: 28, scope: !1752)
!1769 = !DILocalVariable(name: "dm", scope: !1752, file: !1, line: 741, type: !12)
!1770 = !DILocation(line: 741, column: 20, scope: !1752)
!1771 = !DILocation(line: 741, column: 27, scope: !1752)
!1772 = !DILocation(line: 741, column: 32, scope: !1752)
!1773 = !DILocation(line: 741, column: 30, scope: !1752)
!1774 = !DILocation(line: 741, column: 26, scope: !1752)
!1775 = !DILocation(line: 741, column: 38, scope: !1752)
!1776 = !DILocation(line: 741, column: 43, scope: !1752)
!1777 = !DILocalVariable(name: "index_g", scope: !1752, file: !1, line: 742, type: !12)
!1778 = !DILocation(line: 742, column: 20, scope: !1752)
!1779 = !DILocation(line: 742, column: 30, scope: !1752)
!1780 = !DILocation(line: 742, column: 41, scope: !1752)
!1781 = !DILocation(line: 742, column: 44, scope: !1752)
!1782 = !DILocation(line: 742, column: 38, scope: !1752)
!1783 = !DILocation(line: 744, column: 24, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1752, file: !1, line: 744, column: 16)
!1785 = !DILocation(line: 744, column: 21, scope: !1784)
!1786 = !DILocation(line: 744, column: 29, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 744, column: 16)
!1788 = !DILocation(line: 744, column: 34, scope: !1787)
!1789 = !DILocation(line: 744, column: 32, scope: !1787)
!1790 = !DILocation(line: 744, column: 16, scope: !1784)
!1791 = !DILocalVariable(name: "d_index", scope: !1792, file: !1, line: 746, type: !12)
!1792 = distinct !DILexicalBlock(scope: !1787, file: !1, line: 745, column: 16)
!1793 = !DILocation(line: 746, column: 23, scope: !1792)
!1794 = !DILocation(line: 746, column: 33, scope: !1792)
!1795 = !DILocation(line: 746, column: 43, scope: !1792)
!1796 = !DILocation(line: 746, column: 41, scope: !1792)
!1797 = !DILocalVariable(name: "db", scope: !1792, file: !1, line: 748, type: !12)
!1798 = !DILocation(line: 748, column: 23, scope: !1792)
!1799 = !DILocation(line: 748, column: 30, scope: !1792)
!1800 = !DILocation(line: 748, column: 35, scope: !1792)
!1801 = !DILocation(line: 748, column: 33, scope: !1792)
!1802 = !DILocation(line: 748, column: 29, scope: !1792)
!1803 = !DILocation(line: 748, column: 40, scope: !1792)
!1804 = !DILocation(line: 748, column: 45, scope: !1792)
!1805 = !DILocation(line: 748, column: 43, scope: !1792)
!1806 = !DILocation(line: 748, column: 49, scope: !1792)
!1807 = !DILocation(line: 748, column: 53, scope: !1792)
!1808 = !DILocation(line: 748, column: 51, scope: !1792)
!1809 = !DILocalVariable(name: "dmax", scope: !1792, file: !1, line: 749, type: !12)
!1810 = !DILocation(line: 749, column: 23, scope: !1792)
!1811 = !DILocation(line: 749, column: 32, scope: !1792)
!1812 = !DILocation(line: 749, column: 37, scope: !1792)
!1813 = !DILocation(line: 749, column: 35, scope: !1792)
!1814 = !DILocation(line: 749, column: 31, scope: !1792)
!1815 = !DILocation(line: 749, column: 43, scope: !1792)
!1816 = !DILocation(line: 749, column: 48, scope: !1792)
!1817 = !DILocalVariable(name: "d", scope: !1792, file: !1, line: 750, type: !12)
!1818 = !DILocation(line: 750, column: 23, scope: !1792)
!1819 = !DILocation(line: 750, column: 27, scope: !1792)
!1820 = !DILocation(line: 750, column: 34, scope: !1792)
!1821 = !DILocation(line: 750, column: 32, scope: !1792)
!1822 = !DILocation(line: 750, column: 39, scope: !1792)
!1823 = !DILocation(line: 750, column: 37, scope: !1792)
!1824 = !DILocation(line: 752, column: 23, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 752, column: 23)
!1826 = !DILocation(line: 752, column: 32, scope: !1825)
!1827 = !DILocation(line: 752, column: 41, scope: !1825)
!1828 = !DILocation(line: 752, column: 27, scope: !1825)
!1829 = !DILocation(line: 752, column: 25, scope: !1825)
!1830 = !DILocation(line: 752, column: 23, scope: !1792)
!1831 = !DILocation(line: 754, column: 52, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 753, column: 19)
!1833 = !DILocation(line: 754, column: 42, scope: !1832)
!1834 = !DILocation(line: 754, column: 22, scope: !1832)
!1835 = !DILocation(line: 754, column: 31, scope: !1832)
!1836 = !DILocation(line: 754, column: 40, scope: !1832)
!1837 = !DILocation(line: 755, column: 67, scope: !1832)
!1838 = !DILocation(line: 755, column: 57, scope: !1832)
!1839 = !DILocation(line: 755, column: 22, scope: !1832)
!1840 = !DILocation(line: 755, column: 31, scope: !1832)
!1841 = !DILocation(line: 755, column: 46, scope: !1832)
!1842 = !DILocation(line: 755, column: 55, scope: !1832)
!1843 = !DILocation(line: 756, column: 19, scope: !1832)
!1844 = !DILocation(line: 757, column: 16, scope: !1792)
!1845 = !DILocation(line: 744, column: 46, scope: !1787)
!1846 = !DILocation(line: 744, column: 16, scope: !1787)
!1847 = distinct !{!1847, !1790, !1848}
!1848 = !DILocation(line: 757, column: 16, scope: !1784)
!1849 = !DILocation(line: 758, column: 13, scope: !1752)
!1850 = !DILocation(line: 736, column: 44, scope: !1747)
!1851 = !DILocation(line: 736, column: 13, scope: !1747)
!1852 = distinct !{!1852, !1750, !1853}
!1853 = !DILocation(line: 758, column: 13, scope: !1744)
!1854 = !DILocation(line: 759, column: 10, scope: !1727)
!1855 = !DILocation(line: 729, column: 39, scope: !1722)
!1856 = !DILocation(line: 729, column: 10, scope: !1722)
!1857 = distinct !{!1857, !1725, !1858}
!1858 = !DILocation(line: 759, column: 10, scope: !1719)
!1859 = !DILocation(line: 760, column: 7, scope: !1694)
!1860 = !DILocation(line: 722, column: 37, scope: !1689)
!1861 = !DILocation(line: 722, column: 7, scope: !1689)
!1862 = distinct !{!1862, !1692, !1863}
!1863 = !DILocation(line: 760, column: 7, scope: !1686)
!1864 = !DILocation(line: 762, column: 16, scope: !1651)
!1865 = !DILocation(line: 762, column: 25, scope: !1651)
!1866 = !DILocation(line: 762, column: 7, scope: !1651)
!1867 = !DILocation(line: 763, column: 4, scope: !1651)
!1868 = !DILocation(line: 764, column: 1, scope: !876)
!1869 = distinct !DISubprogram(name: "png_set_gamma_fixed", scope: !1, file: !1, line: 769, type: !1870, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !39, !30, !30}
!1872 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1869, file: !1, line: 769, type: !39)
!1873 = !DILocation(line: 769, column: 33, scope: !1869)
!1874 = !DILocalVariable(name: "scrn_gamma", arg: 2, scope: !1869, file: !1, line: 769, type: !30)
!1875 = !DILocation(line: 769, column: 58, scope: !1869)
!1876 = !DILocalVariable(name: "file_gamma", arg: 3, scope: !1869, file: !1, line: 770, type: !30)
!1877 = !DILocation(line: 770, column: 20, scope: !1869)
!1878 = !DILocation(line: 774, column: 8, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1869, file: !1, line: 774, column: 8)
!1880 = !DILocation(line: 774, column: 16, scope: !1879)
!1881 = !DILocation(line: 774, column: 8, scope: !1869)
!1882 = !DILocation(line: 775, column: 7, scope: !1879)
!1883 = !DILocation(line: 778, column: 39, scope: !1869)
!1884 = !DILocation(line: 778, column: 48, scope: !1869)
!1885 = !DILocation(line: 778, column: 17, scope: !1869)
!1886 = !DILocation(line: 778, column: 15, scope: !1869)
!1887 = !DILocation(line: 779, column: 39, scope: !1869)
!1888 = !DILocation(line: 779, column: 48, scope: !1869)
!1889 = !DILocation(line: 779, column: 17, scope: !1869)
!1890 = !DILocation(line: 779, column: 15, scope: !1869)
!1891 = !DILocation(line: 803, column: 21, scope: !1869)
!1892 = !DILocation(line: 803, column: 4, scope: !1869)
!1893 = !DILocation(line: 803, column: 13, scope: !1869)
!1894 = !DILocation(line: 803, column: 19, scope: !1869)
!1895 = !DILocation(line: 804, column: 28, scope: !1869)
!1896 = !DILocation(line: 804, column: 4, scope: !1869)
!1897 = !DILocation(line: 804, column: 13, scope: !1869)
!1898 = !DILocation(line: 804, column: 26, scope: !1869)
!1899 = !DILocation(line: 805, column: 1, scope: !1869)
!1900 = distinct !DISubprogram(name: "png_set_gamma", scope: !1, file: !1, line: 809, type: !1901, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !39, !611, !611}
!1903 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1900, file: !1, line: 809, type: !39)
!1904 = !DILocation(line: 809, column: 27, scope: !1900)
!1905 = !DILocalVariable(name: "scrn_gamma", arg: 2, scope: !1900, file: !1, line: 809, type: !611)
!1906 = !DILocation(line: 809, column: 43, scope: !1900)
!1907 = !DILocalVariable(name: "file_gamma", arg: 3, scope: !1900, file: !1, line: 809, type: !611)
!1908 = !DILocation(line: 809, column: 62, scope: !1900)
!1909 = !DILocation(line: 811, column: 24, scope: !1900)
!1910 = !DILocation(line: 811, column: 53, scope: !1900)
!1911 = !DILocation(line: 811, column: 62, scope: !1900)
!1912 = !DILocation(line: 811, column: 33, scope: !1900)
!1913 = !DILocation(line: 812, column: 27, scope: !1900)
!1914 = !DILocation(line: 812, column: 36, scope: !1900)
!1915 = !DILocation(line: 812, column: 7, scope: !1900)
!1916 = !DILocation(line: 811, column: 4, scope: !1900)
!1917 = !DILocation(line: 813, column: 1, scope: !1900)
!1918 = distinct !DISubprogram(name: "png_set_expand", scope: !1, file: !1, line: 823, type: !234, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1919 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1918, file: !1, line: 823, type: !39)
!1920 = !DILocation(line: 823, column: 28, scope: !1918)
!1921 = !DILocation(line: 827, column: 8, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1918, file: !1, line: 827, column: 8)
!1923 = !DILocation(line: 827, column: 16, scope: !1922)
!1924 = !DILocation(line: 827, column: 8, scope: !1918)
!1925 = !DILocation(line: 828, column: 7, scope: !1922)
!1926 = !DILocation(line: 830, column: 4, scope: !1918)
!1927 = !DILocation(line: 830, column: 13, scope: !1918)
!1928 = !DILocation(line: 830, column: 29, scope: !1918)
!1929 = !DILocation(line: 831, column: 4, scope: !1918)
!1930 = !DILocation(line: 831, column: 13, scope: !1918)
!1931 = !DILocation(line: 831, column: 19, scope: !1918)
!1932 = !DILocation(line: 832, column: 1, scope: !1918)
!1933 = distinct !DISubprogram(name: "png_set_palette_to_rgb", scope: !1, file: !1, line: 854, type: !234, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1934 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1933, file: !1, line: 854, type: !39)
!1935 = !DILocation(line: 854, column: 36, scope: !1933)
!1936 = !DILocation(line: 858, column: 8, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1933, file: !1, line: 858, column: 8)
!1938 = !DILocation(line: 858, column: 16, scope: !1937)
!1939 = !DILocation(line: 858, column: 8, scope: !1933)
!1940 = !DILocation(line: 859, column: 7, scope: !1937)
!1941 = !DILocation(line: 861, column: 4, scope: !1933)
!1942 = !DILocation(line: 861, column: 13, scope: !1933)
!1943 = !DILocation(line: 861, column: 29, scope: !1933)
!1944 = !DILocation(line: 862, column: 4, scope: !1933)
!1945 = !DILocation(line: 862, column: 13, scope: !1933)
!1946 = !DILocation(line: 862, column: 19, scope: !1933)
!1947 = !DILocation(line: 863, column: 1, scope: !1933)
!1948 = distinct !DISubprogram(name: "png_set_expand_gray_1_2_4_to_8", scope: !1, file: !1, line: 867, type: !234, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1949 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1948, file: !1, line: 867, type: !39)
!1950 = !DILocation(line: 867, column: 44, scope: !1948)
!1951 = !DILocation(line: 871, column: 8, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1948, file: !1, line: 871, column: 8)
!1953 = !DILocation(line: 871, column: 16, scope: !1952)
!1954 = !DILocation(line: 871, column: 8, scope: !1948)
!1955 = !DILocation(line: 872, column: 7, scope: !1952)
!1956 = !DILocation(line: 874, column: 4, scope: !1948)
!1957 = !DILocation(line: 874, column: 13, scope: !1948)
!1958 = !DILocation(line: 874, column: 29, scope: !1948)
!1959 = !DILocation(line: 875, column: 4, scope: !1948)
!1960 = !DILocation(line: 875, column: 13, scope: !1948)
!1961 = !DILocation(line: 875, column: 19, scope: !1948)
!1962 = !DILocation(line: 876, column: 1, scope: !1948)
!1963 = distinct !DISubprogram(name: "png_set_tRNS_to_alpha", scope: !1, file: !1, line: 882, type: !234, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1964 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1963, file: !1, line: 882, type: !39)
!1965 = !DILocation(line: 882, column: 35, scope: !1963)
!1966 = !DILocation(line: 886, column: 4, scope: !1963)
!1967 = !DILocation(line: 886, column: 13, scope: !1963)
!1968 = !DILocation(line: 886, column: 29, scope: !1963)
!1969 = !DILocation(line: 887, column: 4, scope: !1963)
!1970 = !DILocation(line: 887, column: 13, scope: !1963)
!1971 = !DILocation(line: 887, column: 19, scope: !1963)
!1972 = !DILocation(line: 888, column: 1, scope: !1963)
!1973 = distinct !DISubprogram(name: "png_set_expand_16", scope: !1, file: !1, line: 896, type: !234, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1974 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1973, file: !1, line: 896, type: !39)
!1975 = !DILocation(line: 896, column: 31, scope: !1973)
!1976 = !DILocation(line: 900, column: 8, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1973, file: !1, line: 900, column: 8)
!1978 = !DILocation(line: 900, column: 16, scope: !1977)
!1979 = !DILocation(line: 900, column: 8, scope: !1973)
!1980 = !DILocation(line: 901, column: 7, scope: !1977)
!1981 = !DILocation(line: 903, column: 4, scope: !1973)
!1982 = !DILocation(line: 903, column: 13, scope: !1973)
!1983 = !DILocation(line: 903, column: 29, scope: !1973)
!1984 = !DILocation(line: 904, column: 4, scope: !1973)
!1985 = !DILocation(line: 904, column: 13, scope: !1973)
!1986 = !DILocation(line: 904, column: 19, scope: !1973)
!1987 = !DILocation(line: 907, column: 4, scope: !1973)
!1988 = !DILocation(line: 907, column: 13, scope: !1973)
!1989 = !DILocation(line: 907, column: 19, scope: !1973)
!1990 = !DILocation(line: 908, column: 1, scope: !1973)
!1991 = distinct !DISubprogram(name: "png_set_gray_to_rgb", scope: !1, file: !1, line: 913, type: !234, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1992 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1991, file: !1, line: 913, type: !39)
!1993 = !DILocation(line: 913, column: 33, scope: !1991)
!1994 = !DILocation(line: 917, column: 8, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1991, file: !1, line: 917, column: 8)
!1996 = !DILocation(line: 917, column: 16, scope: !1995)
!1997 = !DILocation(line: 917, column: 8, scope: !1991)
!1998 = !DILocation(line: 920, column: 38, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1995, file: !1, line: 918, column: 4)
!2000 = !DILocation(line: 920, column: 7, scope: !1999)
!2001 = !DILocation(line: 921, column: 7, scope: !1999)
!2002 = !DILocation(line: 921, column: 16, scope: !1999)
!2003 = !DILocation(line: 921, column: 32, scope: !1999)
!2004 = !DILocation(line: 922, column: 7, scope: !1999)
!2005 = !DILocation(line: 922, column: 16, scope: !1999)
!2006 = !DILocation(line: 922, column: 22, scope: !1999)
!2007 = !DILocation(line: 923, column: 4, scope: !1999)
!2008 = !DILocation(line: 924, column: 1, scope: !1991)
!2009 = distinct !DISubprogram(name: "png_set_rgb_to_gray_fixed", scope: !1, file: !1, line: 929, type: !2010, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !39, !12, !30, !30}
!2012 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2009, file: !1, line: 929, type: !39)
!2013 = !DILocation(line: 929, column: 39, scope: !2009)
!2014 = !DILocalVariable(name: "error_action", arg: 2, scope: !2009, file: !1, line: 929, type: !12)
!2015 = !DILocation(line: 929, column: 52, scope: !2009)
!2016 = !DILocalVariable(name: "red", arg: 3, scope: !2009, file: !1, line: 930, type: !30)
!2017 = !DILocation(line: 930, column: 21, scope: !2009)
!2018 = !DILocalVariable(name: "green", arg: 4, scope: !2009, file: !1, line: 930, type: !30)
!2019 = !DILocation(line: 930, column: 42, scope: !2009)
!2020 = !DILocation(line: 934, column: 8, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !2009, file: !1, line: 934, column: 8)
!2022 = !DILocation(line: 934, column: 16, scope: !2021)
!2023 = !DILocation(line: 934, column: 8, scope: !2009)
!2024 = !DILocation(line: 935, column: 7, scope: !2021)
!2025 = !DILocation(line: 937, column: 11, scope: !2009)
!2026 = !DILocation(line: 937, column: 4, scope: !2009)
!2027 = !DILocation(line: 940, column: 10, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2009, file: !1, line: 938, column: 4)
!2029 = !DILocation(line: 940, column: 19, scope: !2028)
!2030 = !DILocation(line: 940, column: 35, scope: !2028)
!2031 = !DILocation(line: 941, column: 10, scope: !2028)
!2032 = !DILocation(line: 944, column: 10, scope: !2028)
!2033 = !DILocation(line: 944, column: 19, scope: !2028)
!2034 = !DILocation(line: 944, column: 35, scope: !2028)
!2035 = !DILocation(line: 945, column: 10, scope: !2028)
!2036 = !DILocation(line: 948, column: 10, scope: !2028)
!2037 = !DILocation(line: 948, column: 19, scope: !2028)
!2038 = !DILocation(line: 948, column: 35, scope: !2028)
!2039 = !DILocation(line: 949, column: 10, scope: !2028)
!2040 = !DILocation(line: 952, column: 20, scope: !2028)
!2041 = !DILocation(line: 952, column: 10, scope: !2028)
!2042 = !DILocation(line: 955, column: 8, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2009, file: !1, line: 955, column: 8)
!2044 = !DILocation(line: 955, column: 17, scope: !2043)
!2045 = !DILocation(line: 955, column: 28, scope: !2043)
!2046 = !DILocation(line: 955, column: 8, scope: !2009)
!2047 = !DILocation(line: 957, column: 7, scope: !2043)
!2048 = !DILocation(line: 957, column: 16, scope: !2043)
!2049 = !DILocation(line: 957, column: 32, scope: !2043)
!2050 = !DILocation(line: 967, column: 11, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 967, column: 11)
!2052 = distinct !DILexicalBlock(scope: !2009, file: !1, line: 966, column: 4)
!2053 = !DILocation(line: 967, column: 15, scope: !2051)
!2054 = !DILocation(line: 967, column: 20, scope: !2051)
!2055 = !DILocation(line: 967, column: 23, scope: !2051)
!2056 = !DILocation(line: 967, column: 29, scope: !2051)
!2057 = !DILocation(line: 967, column: 34, scope: !2051)
!2058 = !DILocation(line: 967, column: 37, scope: !2051)
!2059 = !DILocation(line: 967, column: 43, scope: !2051)
!2060 = !DILocation(line: 967, column: 41, scope: !2051)
!2061 = !DILocation(line: 967, column: 49, scope: !2051)
!2062 = !DILocation(line: 967, column: 11, scope: !2052)
!2063 = !DILocalVariable(name: "red_int", scope: !2064, file: !1, line: 969, type: !24)
!2064 = distinct !DILexicalBlock(scope: !2051, file: !1, line: 968, column: 7)
!2065 = !DILocation(line: 969, column: 22, scope: !2064)
!2066 = !DILocalVariable(name: "green_int", scope: !2064, file: !1, line: 969, type: !24)
!2067 = !DILocation(line: 969, column: 31, scope: !2064)
!2068 = !DILocation(line: 976, column: 48, scope: !2064)
!2069 = !DILocation(line: 976, column: 51, scope: !2064)
!2070 = !DILocation(line: 976, column: 58, scope: !2064)
!2071 = !DILocation(line: 976, column: 20, scope: !2064)
!2072 = !DILocation(line: 976, column: 18, scope: !2064)
!2073 = !DILocation(line: 977, column: 50, scope: !2064)
!2074 = !DILocation(line: 977, column: 55, scope: !2064)
!2075 = !DILocation(line: 977, column: 62, scope: !2064)
!2076 = !DILocation(line: 977, column: 22, scope: !2064)
!2077 = !DILocation(line: 977, column: 20, scope: !2064)
!2078 = !DILocation(line: 979, column: 45, scope: !2064)
!2079 = !DILocation(line: 979, column: 10, scope: !2064)
!2080 = !DILocation(line: 979, column: 19, scope: !2064)
!2081 = !DILocation(line: 979, column: 43, scope: !2064)
!2082 = !DILocation(line: 980, column: 45, scope: !2064)
!2083 = !DILocation(line: 980, column: 10, scope: !2064)
!2084 = !DILocation(line: 980, column: 19, scope: !2064)
!2085 = !DILocation(line: 980, column: 43, scope: !2064)
!2086 = !DILocation(line: 981, column: 10, scope: !2064)
!2087 = !DILocation(line: 981, column: 19, scope: !2064)
!2088 = !DILocation(line: 981, column: 48, scope: !2064)
!2089 = !DILocation(line: 982, column: 7, scope: !2064)
!2090 = !DILocation(line: 986, column: 14, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2092, file: !1, line: 986, column: 14)
!2092 = distinct !DILexicalBlock(scope: !2051, file: !1, line: 985, column: 7)
!2093 = !DILocation(line: 986, column: 18, scope: !2091)
!2094 = !DILocation(line: 986, column: 23, scope: !2091)
!2095 = !DILocation(line: 986, column: 26, scope: !2091)
!2096 = !DILocation(line: 986, column: 32, scope: !2091)
!2097 = !DILocation(line: 986, column: 14, scope: !2092)
!2098 = !DILocation(line: 987, column: 25, scope: !2091)
!2099 = !DILocation(line: 987, column: 13, scope: !2091)
!2100 = !DILocation(line: 996, column: 14, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2092, file: !1, line: 996, column: 14)
!2102 = !DILocation(line: 996, column: 23, scope: !2101)
!2103 = !DILocation(line: 996, column: 45, scope: !2101)
!2104 = !DILocation(line: 996, column: 50, scope: !2101)
!2105 = !DILocation(line: 997, column: 13, scope: !2101)
!2106 = !DILocation(line: 997, column: 22, scope: !2101)
!2107 = !DILocation(line: 997, column: 46, scope: !2101)
!2108 = !DILocation(line: 996, column: 14, scope: !2092)
!2109 = !DILocation(line: 999, column: 13, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2101, file: !1, line: 998, column: 10)
!2111 = !DILocation(line: 999, column: 22, scope: !2110)
!2112 = !DILocation(line: 999, column: 46, scope: !2110)
!2113 = !DILocation(line: 1000, column: 13, scope: !2110)
!2114 = !DILocation(line: 1000, column: 22, scope: !2110)
!2115 = !DILocation(line: 1000, column: 46, scope: !2110)
!2116 = !DILocation(line: 1002, column: 10, scope: !2110)
!2117 = !DILocation(line: 1005, column: 1, scope: !2009)
!2118 = distinct !DISubprogram(name: "png_set_rgb_to_gray", scope: !1, file: !1, line: 1013, type: !2119, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{null, !39, !12, !611, !611}
!2121 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2118, file: !1, line: 1013, type: !39)
!2122 = !DILocation(line: 1013, column: 33, scope: !2118)
!2123 = !DILocalVariable(name: "error_action", arg: 2, scope: !2118, file: !1, line: 1013, type: !12)
!2124 = !DILocation(line: 1013, column: 46, scope: !2118)
!2125 = !DILocalVariable(name: "red", arg: 3, scope: !2118, file: !1, line: 1013, type: !611)
!2126 = !DILocation(line: 1013, column: 67, scope: !2118)
!2127 = !DILocalVariable(name: "green", arg: 4, scope: !2118, file: !1, line: 1014, type: !611)
!2128 = !DILocation(line: 1014, column: 11, scope: !2118)
!2129 = !DILocation(line: 1016, column: 8, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2118, file: !1, line: 1016, column: 8)
!2131 = !DILocation(line: 1016, column: 16, scope: !2130)
!2132 = !DILocation(line: 1016, column: 8, scope: !2118)
!2133 = !DILocation(line: 1017, column: 7, scope: !2130)
!2134 = !DILocation(line: 1019, column: 30, scope: !2118)
!2135 = !DILocation(line: 1019, column: 39, scope: !2118)
!2136 = !DILocation(line: 1020, column: 17, scope: !2118)
!2137 = !DILocation(line: 1020, column: 26, scope: !2118)
!2138 = !DILocation(line: 1020, column: 7, scope: !2118)
!2139 = !DILocation(line: 1021, column: 17, scope: !2118)
!2140 = !DILocation(line: 1021, column: 26, scope: !2118)
!2141 = !DILocation(line: 1021, column: 7, scope: !2118)
!2142 = !DILocation(line: 1019, column: 4, scope: !2118)
!2143 = !DILocation(line: 1022, column: 1, scope: !2118)
!2144 = distinct !DISubprogram(name: "png_set_read_user_transform_fn", scope: !1, file: !1, line: 1030, type: !2145, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null, !39, !97}
!2147 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2144, file: !1, line: 1030, type: !39)
!2148 = !DILocation(line: 1030, column: 44, scope: !2144)
!2149 = !DILocalVariable(name: "read_user_transform_fn", arg: 2, scope: !2144, file: !1, line: 1031, type: !97)
!2150 = !DILocation(line: 1031, column: 5, scope: !2144)
!2151 = !DILocation(line: 1035, column: 8, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1035, column: 8)
!2153 = !DILocation(line: 1035, column: 16, scope: !2152)
!2154 = !DILocation(line: 1035, column: 8, scope: !2144)
!2155 = !DILocation(line: 1036, column: 7, scope: !2152)
!2156 = !DILocation(line: 1039, column: 4, scope: !2144)
!2157 = !DILocation(line: 1039, column: 13, scope: !2144)
!2158 = !DILocation(line: 1039, column: 29, scope: !2144)
!2159 = !DILocation(line: 1040, column: 38, scope: !2144)
!2160 = !DILocation(line: 1040, column: 4, scope: !2144)
!2161 = !DILocation(line: 1040, column: 13, scope: !2144)
!2162 = !DILocation(line: 1040, column: 36, scope: !2144)
!2163 = !DILocation(line: 1042, column: 1, scope: !2144)
!2164 = distinct !DISubprogram(name: "png_init_read_transformations", scope: !1, file: !1, line: 1245, type: !234, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2165 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2164, file: !1, line: 1245, type: !39)
!2166 = !DILocation(line: 1245, column: 43, scope: !2164)
!2167 = !DILocalVariable(name: "gamma_correction", scope: !2168, file: !1, line: 1268, type: !12)
!2168 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1264, column: 4)
!2169 = !DILocation(line: 1268, column: 11, scope: !2168)
!2170 = !DILocation(line: 1270, column: 11, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 1270, column: 11)
!2172 = !DILocation(line: 1270, column: 20, scope: !2171)
!2173 = !DILocation(line: 1270, column: 26, scope: !2171)
!2174 = !DILocation(line: 1270, column: 11, scope: !2168)
!2175 = !DILocation(line: 1272, column: 14, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2177, file: !1, line: 1272, column: 14)
!2177 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 1271, column: 7)
!2178 = !DILocation(line: 1272, column: 23, scope: !2176)
!2179 = !DILocation(line: 1272, column: 36, scope: !2176)
!2180 = !DILocation(line: 1272, column: 14, scope: !2177)
!2181 = !DILocation(line: 1273, column: 52, scope: !2176)
!2182 = !DILocation(line: 1273, column: 61, scope: !2176)
!2183 = !DILocation(line: 1274, column: 16, scope: !2176)
!2184 = !DILocation(line: 1274, column: 25, scope: !2176)
!2185 = !DILocation(line: 1273, column: 32, scope: !2176)
!2186 = !DILocation(line: 1273, column: 30, scope: !2176)
!2187 = !DILocation(line: 1273, column: 13, scope: !2176)
!2188 = !DILocation(line: 1280, column: 52, scope: !2176)
!2189 = !DILocation(line: 1280, column: 61, scope: !2176)
!2190 = !DILocation(line: 1280, column: 37, scope: !2176)
!2191 = !DILocation(line: 1280, column: 13, scope: !2176)
!2192 = !DILocation(line: 1280, column: 22, scope: !2176)
!2193 = !DILocation(line: 1280, column: 35, scope: !2176)
!2194 = !DILocation(line: 1281, column: 7, scope: !2177)
!2195 = !DILocation(line: 1283, column: 16, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 1283, column: 16)
!2197 = !DILocation(line: 1283, column: 25, scope: !2196)
!2198 = !DILocation(line: 1283, column: 38, scope: !2196)
!2199 = !DILocation(line: 1283, column: 16, scope: !2171)
!2200 = !DILocation(line: 1289, column: 42, scope: !2196)
!2201 = !DILocation(line: 1289, column: 51, scope: !2196)
!2202 = !DILocation(line: 1289, column: 27, scope: !2196)
!2203 = !DILocation(line: 1289, column: 10, scope: !2196)
!2204 = !DILocation(line: 1289, column: 19, scope: !2196)
!2205 = !DILocation(line: 1289, column: 25, scope: !2196)
!2206 = !DILocation(line: 1297, column: 34, scope: !2196)
!2207 = !DILocation(line: 1297, column: 43, scope: !2196)
!2208 = !DILocation(line: 1297, column: 49, scope: !2196)
!2209 = !DILocation(line: 1297, column: 10, scope: !2196)
!2210 = !DILocation(line: 1297, column: 19, scope: !2196)
!2211 = !DILocation(line: 1297, column: 32, scope: !2196)
!2212 = !DILocation(line: 1307, column: 11, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 1307, column: 11)
!2214 = !DILocation(line: 1307, column: 11, scope: !2168)
!2215 = !DILocation(line: 1308, column: 10, scope: !2213)
!2216 = !DILocation(line: 1308, column: 19, scope: !2213)
!2217 = !DILocation(line: 1308, column: 35, scope: !2213)
!2218 = !DILocation(line: 1311, column: 10, scope: !2213)
!2219 = !DILocation(line: 1311, column: 19, scope: !2213)
!2220 = !DILocation(line: 1311, column: 35, scope: !2213)
!2221 = !DILocation(line: 1345, column: 9, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1345, column: 8)
!2223 = !DILocation(line: 1345, column: 18, scope: !2222)
!2224 = !DILocation(line: 1345, column: 34, scope: !2222)
!2225 = !DILocation(line: 1345, column: 53, scope: !2222)
!2226 = !DILocation(line: 1346, column: 9, scope: !2222)
!2227 = !DILocation(line: 1346, column: 18, scope: !2222)
!2228 = !DILocation(line: 1346, column: 34, scope: !2222)
!2229 = !DILocation(line: 1345, column: 8, scope: !2164)
!2230 = !DILocation(line: 1353, column: 7, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2222, file: !1, line: 1347, column: 4)
!2232 = !DILocation(line: 1353, column: 16, scope: !2231)
!2233 = !DILocation(line: 1353, column: 32, scope: !2231)
!2234 = !DILocation(line: 1355, column: 7, scope: !2231)
!2235 = !DILocation(line: 1355, column: 16, scope: !2231)
!2236 = !DILocation(line: 1355, column: 22, scope: !2231)
!2237 = !DILocation(line: 1364, column: 7, scope: !2231)
!2238 = !DILocation(line: 1364, column: 16, scope: !2231)
!2239 = !DILocation(line: 1364, column: 26, scope: !2231)
!2240 = !DILocation(line: 1365, column: 4, scope: !2231)
!2241 = !DILocation(line: 1372, column: 31, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1372, column: 8)
!2243 = !DILocation(line: 1372, column: 40, scope: !2242)
!2244 = !DILocation(line: 1372, column: 9, scope: !2242)
!2245 = !DILocation(line: 1372, column: 8, scope: !2164)
!2246 = !DILocation(line: 1374, column: 7, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2242, file: !1, line: 1373, column: 4)
!2248 = !DILocation(line: 1374, column: 16, scope: !2247)
!2249 = !DILocation(line: 1374, column: 32, scope: !2247)
!2250 = !DILocation(line: 1375, column: 7, scope: !2247)
!2251 = !DILocation(line: 1375, column: 16, scope: !2247)
!2252 = !DILocation(line: 1375, column: 22, scope: !2247)
!2253 = !DILocation(line: 1376, column: 4, scope: !2247)
!2254 = !DILocation(line: 1397, column: 8, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1397, column: 8)
!2256 = !DILocation(line: 1397, column: 17, scope: !2255)
!2257 = !DILocation(line: 1397, column: 33, scope: !2255)
!2258 = !DILocation(line: 1397, column: 8, scope: !2164)
!2259 = !DILocation(line: 1402, column: 13, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !1, line: 1402, column: 11)
!2261 = distinct !DILexicalBlock(scope: !2255, file: !1, line: 1398, column: 4)
!2262 = !DILocation(line: 1402, column: 22, scope: !2260)
!2263 = !DILocation(line: 1402, column: 33, scope: !2260)
!2264 = !DILocation(line: 1402, column: 11, scope: !2261)
!2265 = !DILocation(line: 1403, column: 10, scope: !2260)
!2266 = !DILocation(line: 1403, column: 19, scope: !2260)
!2267 = !DILocation(line: 1403, column: 24, scope: !2260)
!2268 = !DILocation(line: 1404, column: 4, scope: !2261)
!2269 = !DILocation(line: 1406, column: 13, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2255, file: !1, line: 1406, column: 13)
!2271 = !DILocation(line: 1406, column: 22, scope: !2270)
!2272 = !DILocation(line: 1406, column: 38, scope: !2270)
!2273 = !DILocation(line: 1406, column: 13, scope: !2255)
!2274 = !DILocation(line: 1413, column: 11, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2276, file: !1, line: 1413, column: 11)
!2276 = distinct !DILexicalBlock(scope: !2270, file: !1, line: 1407, column: 4)
!2277 = !DILocation(line: 1413, column: 20, scope: !2275)
!2278 = !DILocation(line: 1413, column: 36, scope: !2275)
!2279 = !DILocation(line: 1413, column: 11, scope: !2276)
!2280 = !DILocation(line: 1415, column: 14, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2282, file: !1, line: 1415, column: 14)
!2282 = distinct !DILexicalBlock(scope: !2275, file: !1, line: 1414, column: 7)
!2283 = !DILocation(line: 1415, column: 23, scope: !2281)
!2284 = !DILocation(line: 1415, column: 34, scope: !2281)
!2285 = !DILocation(line: 1415, column: 41, scope: !2281)
!2286 = !DILocation(line: 1415, column: 50, scope: !2281)
!2287 = !DILocation(line: 1415, column: 61, scope: !2281)
!2288 = !DILocation(line: 1415, column: 38, scope: !2281)
!2289 = !DILocation(line: 1415, column: 67, scope: !2281)
!2290 = !DILocation(line: 1416, column: 14, scope: !2281)
!2291 = !DILocation(line: 1416, column: 23, scope: !2281)
!2292 = !DILocation(line: 1416, column: 34, scope: !2281)
!2293 = !DILocation(line: 1416, column: 41, scope: !2281)
!2294 = !DILocation(line: 1416, column: 50, scope: !2281)
!2295 = !DILocation(line: 1416, column: 61, scope: !2281)
!2296 = !DILocation(line: 1416, column: 38, scope: !2281)
!2297 = !DILocation(line: 1415, column: 14, scope: !2282)
!2298 = !DILocation(line: 1418, column: 13, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2281, file: !1, line: 1417, column: 10)
!2300 = !DILocation(line: 1418, column: 22, scope: !2299)
!2301 = !DILocation(line: 1418, column: 27, scope: !2299)
!2302 = !DILocation(line: 1419, column: 40, scope: !2299)
!2303 = !DILocation(line: 1419, column: 49, scope: !2299)
!2304 = !DILocation(line: 1419, column: 60, scope: !2299)
!2305 = !DILocation(line: 1419, column: 13, scope: !2299)
!2306 = !DILocation(line: 1419, column: 22, scope: !2299)
!2307 = !DILocation(line: 1419, column: 33, scope: !2299)
!2308 = !DILocation(line: 1419, column: 38, scope: !2299)
!2309 = !DILocation(line: 1420, column: 10, scope: !2299)
!2310 = !DILocation(line: 1421, column: 7, scope: !2282)
!2311 = !DILocation(line: 1422, column: 4, scope: !2276)
!2312 = !DILocation(line: 1436, column: 8, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1436, column: 8)
!2314 = !DILocation(line: 1436, column: 17, scope: !2313)
!2315 = !DILocation(line: 1436, column: 28, scope: !2313)
!2316 = !DILocation(line: 1436, column: 8, scope: !2164)
!2317 = !DILocation(line: 1437, column: 40, scope: !2313)
!2318 = !DILocation(line: 1437, column: 7, scope: !2313)
!2319 = !DILocation(line: 1440, column: 36, scope: !2313)
!2320 = !DILocation(line: 1440, column: 7, scope: !2313)
!2321 = !DILocation(line: 1444, column: 9, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1444, column: 8)
!2323 = !DILocation(line: 1444, column: 18, scope: !2322)
!2324 = !DILocation(line: 1444, column: 34, scope: !2322)
!2325 = !DILocation(line: 1444, column: 51, scope: !2322)
!2326 = !DILocation(line: 1445, column: 8, scope: !2322)
!2327 = !DILocation(line: 1445, column: 17, scope: !2322)
!2328 = !DILocation(line: 1445, column: 33, scope: !2322)
!2329 = !DILocation(line: 1445, column: 48, scope: !2322)
!2330 = !DILocation(line: 1446, column: 9, scope: !2322)
!2331 = !DILocation(line: 1446, column: 18, scope: !2322)
!2332 = !DILocation(line: 1446, column: 34, scope: !2322)
!2333 = !DILocation(line: 1446, column: 59, scope: !2322)
!2334 = !DILocation(line: 1447, column: 7, scope: !2322)
!2335 = !DILocation(line: 1447, column: 16, scope: !2322)
!2336 = !DILocation(line: 1447, column: 26, scope: !2322)
!2337 = !DILocation(line: 1444, column: 8, scope: !2164)
!2338 = !DILocation(line: 1460, column: 7, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 1448, column: 4)
!2340 = !DILocation(line: 1461, column: 7, scope: !2339)
!2341 = !DILocation(line: 1462, column: 7, scope: !2339)
!2342 = !DILocation(line: 1463, column: 7, scope: !2339)
!2343 = !DILocation(line: 1465, column: 4, scope: !2339)
!2344 = !DILocation(line: 1471, column: 9, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1471, column: 8)
!2346 = !DILocation(line: 1471, column: 18, scope: !2345)
!2347 = !DILocation(line: 1471, column: 34, scope: !2345)
!2348 = !DILocation(line: 1471, column: 69, scope: !2345)
!2349 = !DILocation(line: 1472, column: 8, scope: !2345)
!2350 = !DILocation(line: 1472, column: 17, scope: !2345)
!2351 = !DILocation(line: 1472, column: 33, scope: !2345)
!2352 = !DILocation(line: 1472, column: 48, scope: !2345)
!2353 = !DILocation(line: 1473, column: 9, scope: !2345)
!2354 = !DILocation(line: 1473, column: 18, scope: !2345)
!2355 = !DILocation(line: 1473, column: 34, scope: !2345)
!2356 = !DILocation(line: 1473, column: 59, scope: !2345)
!2357 = !DILocation(line: 1474, column: 7, scope: !2345)
!2358 = !DILocation(line: 1474, column: 16, scope: !2345)
!2359 = !DILocation(line: 1474, column: 26, scope: !2345)
!2360 = !DILocation(line: 1471, column: 8, scope: !2164)
!2361 = !DILocation(line: 1482, column: 47, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 1475, column: 4)
!2363 = !DILocation(line: 1482, column: 56, scope: !2362)
!2364 = !DILocation(line: 1482, column: 67, scope: !2362)
!2365 = !DILocation(line: 1482, column: 71, scope: !2362)
!2366 = !DILocation(line: 1482, column: 33, scope: !2362)
!2367 = !DILocation(line: 1482, column: 7, scope: !2362)
!2368 = !DILocation(line: 1482, column: 16, scope: !2362)
!2369 = !DILocation(line: 1482, column: 27, scope: !2362)
!2370 = !DILocation(line: 1482, column: 31, scope: !2362)
!2371 = !DILocation(line: 1484, column: 24, scope: !2362)
!2372 = !DILocation(line: 1484, column: 33, scope: !2362)
!2373 = !DILocation(line: 1484, column: 44, scope: !2362)
!2374 = !DILocation(line: 1484, column: 50, scope: !2362)
!2375 = !DILocation(line: 1484, column: 10, scope: !2362)
!2376 = !DILocation(line: 1483, column: 7, scope: !2362)
!2377 = !DILocation(line: 1483, column: 16, scope: !2362)
!2378 = !DILocation(line: 1483, column: 27, scope: !2362)
!2379 = !DILocation(line: 1483, column: 33, scope: !2362)
!2380 = !DILocation(line: 1485, column: 48, scope: !2362)
!2381 = !DILocation(line: 1485, column: 57, scope: !2362)
!2382 = !DILocation(line: 1485, column: 68, scope: !2362)
!2383 = !DILocation(line: 1485, column: 73, scope: !2362)
!2384 = !DILocation(line: 1485, column: 34, scope: !2362)
!2385 = !DILocation(line: 1485, column: 7, scope: !2362)
!2386 = !DILocation(line: 1485, column: 16, scope: !2362)
!2387 = !DILocation(line: 1485, column: 27, scope: !2362)
!2388 = !DILocation(line: 1485, column: 32, scope: !2362)
!2389 = !DILocation(line: 1486, column: 48, scope: !2362)
!2390 = !DILocation(line: 1486, column: 57, scope: !2362)
!2391 = !DILocation(line: 1486, column: 68, scope: !2362)
!2392 = !DILocation(line: 1486, column: 73, scope: !2362)
!2393 = !DILocation(line: 1486, column: 34, scope: !2362)
!2394 = !DILocation(line: 1486, column: 7, scope: !2362)
!2395 = !DILocation(line: 1486, column: 16, scope: !2362)
!2396 = !DILocation(line: 1486, column: 27, scope: !2362)
!2397 = !DILocation(line: 1486, column: 32, scope: !2362)
!2398 = !DILocation(line: 1487, column: 4, scope: !2362)
!2399 = !DILocation(line: 1501, column: 7, scope: !2164)
!2400 = !DILocation(line: 1501, column: 16, scope: !2164)
!2401 = !DILocation(line: 1501, column: 31, scope: !2164)
!2402 = !DILocation(line: 1501, column: 40, scope: !2164)
!2403 = !DILocation(line: 1517, column: 9, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1517, column: 8)
!2405 = !DILocation(line: 1517, column: 18, scope: !2404)
!2406 = !DILocation(line: 1517, column: 34, scope: !2404)
!2407 = !DILocation(line: 1518, column: 7, scope: !2404)
!2408 = !DILocation(line: 1518, column: 12, scope: !2404)
!2409 = !DILocation(line: 1518, column: 21, scope: !2404)
!2410 = !DILocation(line: 1518, column: 37, scope: !2404)
!2411 = !DILocation(line: 1519, column: 10, scope: !2404)
!2412 = !DILocation(line: 1519, column: 36, scope: !2404)
!2413 = !DILocation(line: 1519, column: 45, scope: !2404)
!2414 = !DILocation(line: 1519, column: 14, scope: !2404)
!2415 = !DILocation(line: 1519, column: 52, scope: !2404)
!2416 = !DILocation(line: 1520, column: 35, scope: !2404)
!2417 = !DILocation(line: 1520, column: 44, scope: !2404)
!2418 = !DILocation(line: 1520, column: 13, scope: !2404)
!2419 = !DILocation(line: 1521, column: 7, scope: !2404)
!2420 = !DILocation(line: 1521, column: 12, scope: !2404)
!2421 = !DILocation(line: 1521, column: 21, scope: !2404)
!2422 = !DILocation(line: 1521, column: 37, scope: !2404)
!2423 = !DILocation(line: 1522, column: 10, scope: !2404)
!2424 = !DILocation(line: 1522, column: 36, scope: !2404)
!2425 = !DILocation(line: 1522, column: 45, scope: !2404)
!2426 = !DILocation(line: 1522, column: 14, scope: !2404)
!2427 = !DILocation(line: 1523, column: 13, scope: !2404)
!2428 = !DILocation(line: 1523, column: 38, scope: !2404)
!2429 = !DILocation(line: 1523, column: 47, scope: !2404)
!2430 = !DILocation(line: 1523, column: 16, scope: !2404)
!2431 = !DILocation(line: 1525, column: 13, scope: !2404)
!2432 = !DILocation(line: 1525, column: 17, scope: !2404)
!2433 = !DILocation(line: 1525, column: 26, scope: !2404)
!2434 = !DILocation(line: 1525, column: 48, scope: !2404)
!2435 = !DILocation(line: 1526, column: 16, scope: !2404)
!2436 = !DILocation(line: 1526, column: 41, scope: !2404)
!2437 = !DILocation(line: 1526, column: 50, scope: !2404)
!2438 = !DILocation(line: 1526, column: 19, scope: !2404)
!2439 = !DILocation(line: 1528, column: 10, scope: !2404)
!2440 = !DILocation(line: 1528, column: 15, scope: !2404)
!2441 = !DILocation(line: 1528, column: 24, scope: !2404)
!2442 = !DILocation(line: 1528, column: 40, scope: !2404)
!2443 = !DILocation(line: 1529, column: 10, scope: !2404)
!2444 = !DILocation(line: 1529, column: 35, scope: !2404)
!2445 = !DILocation(line: 1529, column: 44, scope: !2404)
!2446 = !DILocation(line: 1529, column: 13, scope: !2404)
!2447 = !DILocation(line: 1517, column: 8, scope: !2164)
!2448 = !DILocation(line: 1532, column: 29, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 1531, column: 4)
!2450 = !DILocation(line: 1532, column: 38, scope: !2449)
!2451 = !DILocation(line: 1532, column: 47, scope: !2449)
!2452 = !DILocation(line: 1532, column: 7, scope: !2449)
!2453 = !DILocation(line: 1535, column: 11, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2449, file: !1, line: 1535, column: 11)
!2455 = !DILocation(line: 1535, column: 20, scope: !2454)
!2456 = !DILocation(line: 1535, column: 36, scope: !2454)
!2457 = !DILocation(line: 1535, column: 11, scope: !2449)
!2458 = !DILocation(line: 1543, column: 14, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 1543, column: 14)
!2460 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 1536, column: 7)
!2461 = !DILocation(line: 1543, column: 23, scope: !2459)
!2462 = !DILocation(line: 1543, column: 39, scope: !2459)
!2463 = !DILocation(line: 1543, column: 14, scope: !2460)
!2464 = !DILocation(line: 1544, column: 25, scope: !2459)
!2465 = !DILocation(line: 1544, column: 13, scope: !2459)
!2466 = !DILocation(line: 1547, column: 14, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 1547, column: 14)
!2468 = !DILocation(line: 1547, column: 23, scope: !2467)
!2469 = !DILocation(line: 1547, column: 34, scope: !2467)
!2470 = !DILocation(line: 1547, column: 14, scope: !2460)
!2471 = !DILocalVariable(name: "back", scope: !2472, file: !1, line: 1552, type: !191)
!2472 = distinct !DILexicalBlock(scope: !2467, file: !1, line: 1548, column: 10)
!2473 = !DILocation(line: 1552, column: 23, scope: !2472)
!2474 = !DILocalVariable(name: "back_1", scope: !2472, file: !1, line: 1552, type: !191)
!2475 = !DILocation(line: 1552, column: 29, scope: !2472)
!2476 = !DILocalVariable(name: "palette", scope: !2472, file: !1, line: 1553, type: !189)
!2477 = !DILocation(line: 1553, column: 24, scope: !2472)
!2478 = !DILocation(line: 1553, column: 34, scope: !2472)
!2479 = !DILocation(line: 1553, column: 43, scope: !2472)
!2480 = !DILocalVariable(name: "num_palette", scope: !2472, file: !1, line: 1554, type: !12)
!2481 = !DILocation(line: 1554, column: 17, scope: !2472)
!2482 = !DILocation(line: 1554, column: 31, scope: !2472)
!2483 = !DILocation(line: 1554, column: 40, scope: !2472)
!2484 = !DILocalVariable(name: "i", scope: !2472, file: !1, line: 1555, type: !12)
!2485 = !DILocation(line: 1555, column: 17, scope: !2472)
!2486 = !DILocation(line: 1556, column: 17, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 1556, column: 17)
!2488 = !DILocation(line: 1556, column: 26, scope: !2487)
!2489 = !DILocation(line: 1556, column: 48, scope: !2487)
!2490 = !DILocation(line: 1556, column: 17, scope: !2472)
!2491 = !DILocation(line: 1559, column: 27, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2487, file: !1, line: 1557, column: 13)
!2493 = !DILocation(line: 1559, column: 36, scope: !2492)
!2494 = !DILocation(line: 1559, column: 48, scope: !2492)
!2495 = !DILocation(line: 1559, column: 57, scope: !2492)
!2496 = !DILocation(line: 1559, column: 68, scope: !2492)
!2497 = !DILocation(line: 1559, column: 21, scope: !2492)
!2498 = !DILocation(line: 1559, column: 25, scope: !2492)
!2499 = !DILocation(line: 1560, column: 29, scope: !2492)
!2500 = !DILocation(line: 1560, column: 38, scope: !2492)
!2501 = !DILocation(line: 1560, column: 50, scope: !2492)
!2502 = !DILocation(line: 1560, column: 59, scope: !2492)
!2503 = !DILocation(line: 1560, column: 70, scope: !2492)
!2504 = !DILocation(line: 1560, column: 21, scope: !2492)
!2505 = !DILocation(line: 1560, column: 27, scope: !2492)
!2506 = !DILocation(line: 1561, column: 28, scope: !2492)
!2507 = !DILocation(line: 1561, column: 37, scope: !2492)
!2508 = !DILocation(line: 1561, column: 49, scope: !2492)
!2509 = !DILocation(line: 1561, column: 58, scope: !2492)
!2510 = !DILocation(line: 1561, column: 69, scope: !2492)
!2511 = !DILocation(line: 1561, column: 21, scope: !2492)
!2512 = !DILocation(line: 1561, column: 26, scope: !2492)
!2513 = !DILocation(line: 1563, column: 29, scope: !2492)
!2514 = !DILocation(line: 1563, column: 38, scope: !2492)
!2515 = !DILocation(line: 1563, column: 49, scope: !2492)
!2516 = !DILocation(line: 1563, column: 58, scope: !2492)
!2517 = !DILocation(line: 1563, column: 69, scope: !2492)
!2518 = !DILocation(line: 1563, column: 23, scope: !2492)
!2519 = !DILocation(line: 1563, column: 27, scope: !2492)
!2520 = !DILocation(line: 1564, column: 31, scope: !2492)
!2521 = !DILocation(line: 1564, column: 40, scope: !2492)
!2522 = !DILocation(line: 1564, column: 51, scope: !2492)
!2523 = !DILocation(line: 1564, column: 60, scope: !2492)
!2524 = !DILocation(line: 1564, column: 71, scope: !2492)
!2525 = !DILocation(line: 1564, column: 23, scope: !2492)
!2526 = !DILocation(line: 1564, column: 29, scope: !2492)
!2527 = !DILocation(line: 1565, column: 30, scope: !2492)
!2528 = !DILocation(line: 1565, column: 39, scope: !2492)
!2529 = !DILocation(line: 1565, column: 50, scope: !2492)
!2530 = !DILocation(line: 1565, column: 59, scope: !2492)
!2531 = !DILocation(line: 1565, column: 70, scope: !2492)
!2532 = !DILocation(line: 1565, column: 23, scope: !2492)
!2533 = !DILocation(line: 1565, column: 28, scope: !2492)
!2534 = !DILocation(line: 1566, column: 13, scope: !2492)
!2535 = !DILocalVariable(name: "g", scope: !2536, file: !1, line: 1569, type: !30)
!2536 = distinct !DILexicalBlock(scope: !2487, file: !1, line: 1568, column: 13)
!2537 = !DILocation(line: 1569, column: 32, scope: !2536)
!2538 = !DILocalVariable(name: "gs", scope: !2536, file: !1, line: 1569, type: !30)
!2539 = !DILocation(line: 1569, column: 35, scope: !2536)
!2540 = !DILocation(line: 1571, column: 24, scope: !2536)
!2541 = !DILocation(line: 1571, column: 33, scope: !2536)
!2542 = !DILocation(line: 1571, column: 16, scope: !2536)
!2543 = !DILocation(line: 1574, column: 27, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 1572, column: 16)
!2545 = !DILocation(line: 1574, column: 36, scope: !2544)
!2546 = !DILocation(line: 1574, column: 24, scope: !2544)
!2547 = !DILocation(line: 1575, column: 25, scope: !2544)
!2548 = !DILocation(line: 1576, column: 22, scope: !2544)
!2549 = !DILocation(line: 1579, column: 41, scope: !2544)
!2550 = !DILocation(line: 1579, column: 50, scope: !2544)
!2551 = !DILocation(line: 1579, column: 26, scope: !2544)
!2552 = !DILocation(line: 1579, column: 24, scope: !2544)
!2553 = !DILocation(line: 1580, column: 43, scope: !2544)
!2554 = !DILocation(line: 1580, column: 52, scope: !2544)
!2555 = !DILocation(line: 1581, column: 25, scope: !2544)
!2556 = !DILocation(line: 1581, column: 34, scope: !2544)
!2557 = !DILocation(line: 1580, column: 27, scope: !2544)
!2558 = !DILocation(line: 1580, column: 25, scope: !2544)
!2559 = !DILocation(line: 1582, column: 22, scope: !2544)
!2560 = !DILocation(line: 1585, column: 41, scope: !2544)
!2561 = !DILocation(line: 1585, column: 50, scope: !2544)
!2562 = !DILocation(line: 1585, column: 26, scope: !2544)
!2563 = !DILocation(line: 1585, column: 24, scope: !2544)
!2564 = !DILocation(line: 1586, column: 43, scope: !2544)
!2565 = !DILocation(line: 1586, column: 52, scope: !2544)
!2566 = !DILocation(line: 1587, column: 25, scope: !2544)
!2567 = !DILocation(line: 1587, column: 34, scope: !2544)
!2568 = !DILocation(line: 1586, column: 27, scope: !2544)
!2569 = !DILocation(line: 1586, column: 25, scope: !2544)
!2570 = !DILocation(line: 1588, column: 22, scope: !2544)
!2571 = !DILocation(line: 1590, column: 24, scope: !2544)
!2572 = !DILocation(line: 1591, column: 25, scope: !2544)
!2573 = !DILocation(line: 1592, column: 22, scope: !2544)
!2574 = !DILocation(line: 1595, column: 42, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 1595, column: 20)
!2576 = !DILocation(line: 1595, column: 20, scope: !2575)
!2577 = !DILocation(line: 1595, column: 20, scope: !2536)
!2578 = !DILocation(line: 1597, column: 53, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 1596, column: 16)
!2580 = !DILocation(line: 1597, column: 62, scope: !2579)
!2581 = !DILocation(line: 1597, column: 73, scope: !2579)
!2582 = !DILocation(line: 1598, column: 23, scope: !2579)
!2583 = !DILocation(line: 1597, column: 30, scope: !2579)
!2584 = !DILocation(line: 1597, column: 24, scope: !2579)
!2585 = !DILocation(line: 1597, column: 28, scope: !2579)
!2586 = !DILocation(line: 1599, column: 55, scope: !2579)
!2587 = !DILocation(line: 1599, column: 64, scope: !2579)
!2588 = !DILocation(line: 1599, column: 75, scope: !2579)
!2589 = !DILocation(line: 1600, column: 23, scope: !2579)
!2590 = !DILocation(line: 1599, column: 32, scope: !2579)
!2591 = !DILocation(line: 1599, column: 24, scope: !2579)
!2592 = !DILocation(line: 1599, column: 30, scope: !2579)
!2593 = !DILocation(line: 1601, column: 54, scope: !2579)
!2594 = !DILocation(line: 1601, column: 63, scope: !2579)
!2595 = !DILocation(line: 1601, column: 74, scope: !2579)
!2596 = !DILocation(line: 1602, column: 23, scope: !2579)
!2597 = !DILocation(line: 1601, column: 31, scope: !2579)
!2598 = !DILocation(line: 1601, column: 24, scope: !2579)
!2599 = !DILocation(line: 1601, column: 29, scope: !2579)
!2600 = !DILocation(line: 1603, column: 16, scope: !2579)
!2601 = !DILocation(line: 1607, column: 42, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 1606, column: 16)
!2603 = !DILocation(line: 1607, column: 51, scope: !2602)
!2604 = !DILocation(line: 1607, column: 62, scope: !2602)
!2605 = !DILocation(line: 1607, column: 32, scope: !2602)
!2606 = !DILocation(line: 1607, column: 24, scope: !2602)
!2607 = !DILocation(line: 1607, column: 30, scope: !2602)
!2608 = !DILocation(line: 1608, column: 42, scope: !2602)
!2609 = !DILocation(line: 1608, column: 51, scope: !2602)
!2610 = !DILocation(line: 1608, column: 62, scope: !2602)
!2611 = !DILocation(line: 1608, column: 32, scope: !2602)
!2612 = !DILocation(line: 1608, column: 24, scope: !2602)
!2613 = !DILocation(line: 1608, column: 30, scope: !2602)
!2614 = !DILocation(line: 1609, column: 42, scope: !2602)
!2615 = !DILocation(line: 1609, column: 51, scope: !2602)
!2616 = !DILocation(line: 1609, column: 62, scope: !2602)
!2617 = !DILocation(line: 1609, column: 32, scope: !2602)
!2618 = !DILocation(line: 1609, column: 24, scope: !2602)
!2619 = !DILocation(line: 1609, column: 30, scope: !2602)
!2620 = !DILocation(line: 1612, column: 42, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 1612, column: 20)
!2622 = !DILocation(line: 1612, column: 20, scope: !2621)
!2623 = !DILocation(line: 1612, column: 20, scope: !2536)
!2624 = !DILocation(line: 1614, column: 55, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2621, file: !1, line: 1613, column: 16)
!2626 = !DILocation(line: 1614, column: 64, scope: !2625)
!2627 = !DILocation(line: 1614, column: 75, scope: !2625)
!2628 = !DILocation(line: 1615, column: 22, scope: !2625)
!2629 = !DILocation(line: 1614, column: 32, scope: !2625)
!2630 = !DILocation(line: 1614, column: 26, scope: !2625)
!2631 = !DILocation(line: 1614, column: 30, scope: !2625)
!2632 = !DILocation(line: 1617, column: 22, scope: !2625)
!2633 = !DILocation(line: 1617, column: 31, scope: !2625)
!2634 = !DILocation(line: 1617, column: 42, scope: !2625)
!2635 = !DILocation(line: 1617, column: 49, scope: !2625)
!2636 = !DILocation(line: 1616, column: 34, scope: !2625)
!2637 = !DILocation(line: 1616, column: 26, scope: !2625)
!2638 = !DILocation(line: 1616, column: 32, scope: !2625)
!2639 = !DILocation(line: 1618, column: 56, scope: !2625)
!2640 = !DILocation(line: 1618, column: 65, scope: !2625)
!2641 = !DILocation(line: 1618, column: 76, scope: !2625)
!2642 = !DILocation(line: 1619, column: 22, scope: !2625)
!2643 = !DILocation(line: 1618, column: 33, scope: !2625)
!2644 = !DILocation(line: 1618, column: 26, scope: !2625)
!2645 = !DILocation(line: 1618, column: 31, scope: !2625)
!2646 = !DILocation(line: 1620, column: 16, scope: !2625)
!2647 = !DILocation(line: 1624, column: 44, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2621, file: !1, line: 1623, column: 16)
!2649 = !DILocation(line: 1624, column: 53, scope: !2648)
!2650 = !DILocation(line: 1624, column: 64, scope: !2648)
!2651 = !DILocation(line: 1624, column: 34, scope: !2648)
!2652 = !DILocation(line: 1624, column: 26, scope: !2648)
!2653 = !DILocation(line: 1624, column: 32, scope: !2648)
!2654 = !DILocation(line: 1625, column: 44, scope: !2648)
!2655 = !DILocation(line: 1625, column: 53, scope: !2648)
!2656 = !DILocation(line: 1625, column: 64, scope: !2648)
!2657 = !DILocation(line: 1625, column: 34, scope: !2648)
!2658 = !DILocation(line: 1625, column: 26, scope: !2648)
!2659 = !DILocation(line: 1625, column: 32, scope: !2648)
!2660 = !DILocation(line: 1626, column: 44, scope: !2648)
!2661 = !DILocation(line: 1626, column: 53, scope: !2648)
!2662 = !DILocation(line: 1626, column: 64, scope: !2648)
!2663 = !DILocation(line: 1626, column: 34, scope: !2648)
!2664 = !DILocation(line: 1626, column: 26, scope: !2648)
!2665 = !DILocation(line: 1626, column: 32, scope: !2648)
!2666 = !DILocation(line: 1630, column: 20, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 1630, column: 13)
!2668 = !DILocation(line: 1630, column: 18, scope: !2667)
!2669 = !DILocation(line: 1630, column: 25, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2667, file: !1, line: 1630, column: 13)
!2671 = !DILocation(line: 1630, column: 29, scope: !2670)
!2672 = !DILocation(line: 1630, column: 27, scope: !2670)
!2673 = !DILocation(line: 1630, column: 13, scope: !2667)
!2674 = !DILocation(line: 1632, column: 20, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !1, line: 1632, column: 20)
!2676 = distinct !DILexicalBlock(scope: !2670, file: !1, line: 1631, column: 13)
!2677 = !DILocation(line: 1632, column: 29, scope: !2675)
!2678 = !DILocation(line: 1632, column: 38, scope: !2675)
!2679 = !DILocation(line: 1632, column: 24, scope: !2675)
!2680 = !DILocation(line: 1632, column: 22, scope: !2675)
!2681 = !DILocation(line: 1632, column: 48, scope: !2675)
!2682 = !DILocation(line: 1633, column: 20, scope: !2675)
!2683 = !DILocation(line: 1633, column: 29, scope: !2675)
!2684 = !DILocation(line: 1633, column: 41, scope: !2675)
!2685 = !DILocation(line: 1633, column: 44, scope: !2675)
!2686 = !DILocation(line: 1632, column: 20, scope: !2676)
!2687 = !DILocation(line: 1635, column: 23, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 1635, column: 23)
!2689 = distinct !DILexicalBlock(scope: !2675, file: !1, line: 1634, column: 16)
!2690 = !DILocation(line: 1635, column: 32, scope: !2688)
!2691 = !DILocation(line: 1635, column: 44, scope: !2688)
!2692 = !DILocation(line: 1635, column: 47, scope: !2688)
!2693 = !DILocation(line: 1635, column: 23, scope: !2689)
!2694 = !DILocation(line: 1637, column: 22, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 1636, column: 19)
!2696 = !DILocation(line: 1637, column: 30, scope: !2695)
!2697 = !DILocation(line: 1637, column: 35, scope: !2695)
!2698 = !DILocation(line: 1638, column: 19, scope: !2695)
!2699 = !DILocalVariable(name: "v", scope: !2700, file: !1, line: 1641, type: !5)
!2700 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 1640, column: 19)
!2701 = !DILocation(line: 1641, column: 31, scope: !2700)
!2702 = !DILocalVariable(name: "w", scope: !2700, file: !1, line: 1641, type: !5)
!2703 = !DILocation(line: 1641, column: 34, scope: !2700)
!2704 = !DILocation(line: 1643, column: 26, scope: !2700)
!2705 = !DILocation(line: 1643, column: 35, scope: !2700)
!2706 = !DILocation(line: 1643, column: 46, scope: !2700)
!2707 = !DILocation(line: 1643, column: 54, scope: !2700)
!2708 = !DILocation(line: 1643, column: 57, scope: !2700)
!2709 = !DILocation(line: 1643, column: 24, scope: !2700)
!2710 = !DILocalVariable(name: "temp", scope: !2711, file: !1, line: 1644, type: !24)
!2711 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1644, column: 22)
!2712 = !DILocation(line: 1644, column: 22, scope: !2711)
!2713 = !DILocation(line: 1645, column: 39, scope: !2700)
!2714 = !DILocation(line: 1645, column: 48, scope: !2700)
!2715 = !DILocation(line: 1645, column: 61, scope: !2700)
!2716 = !DILocation(line: 1645, column: 22, scope: !2700)
!2717 = !DILocation(line: 1645, column: 30, scope: !2700)
!2718 = !DILocation(line: 1645, column: 33, scope: !2700)
!2719 = !DILocation(line: 1645, column: 37, scope: !2700)
!2720 = !DILocation(line: 1647, column: 26, scope: !2700)
!2721 = !DILocation(line: 1647, column: 35, scope: !2700)
!2722 = !DILocation(line: 1647, column: 46, scope: !2700)
!2723 = !DILocation(line: 1647, column: 54, scope: !2700)
!2724 = !DILocation(line: 1647, column: 57, scope: !2700)
!2725 = !DILocation(line: 1647, column: 24, scope: !2700)
!2726 = !DILocalVariable(name: "temp", scope: !2727, file: !1, line: 1648, type: !24)
!2727 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1648, column: 22)
!2728 = !DILocation(line: 1648, column: 22, scope: !2727)
!2729 = !DILocation(line: 1649, column: 41, scope: !2700)
!2730 = !DILocation(line: 1649, column: 50, scope: !2700)
!2731 = !DILocation(line: 1649, column: 63, scope: !2700)
!2732 = !DILocation(line: 1649, column: 22, scope: !2700)
!2733 = !DILocation(line: 1649, column: 30, scope: !2700)
!2734 = !DILocation(line: 1649, column: 33, scope: !2700)
!2735 = !DILocation(line: 1649, column: 39, scope: !2700)
!2736 = !DILocation(line: 1651, column: 26, scope: !2700)
!2737 = !DILocation(line: 1651, column: 35, scope: !2700)
!2738 = !DILocation(line: 1651, column: 46, scope: !2700)
!2739 = !DILocation(line: 1651, column: 54, scope: !2700)
!2740 = !DILocation(line: 1651, column: 57, scope: !2700)
!2741 = !DILocation(line: 1651, column: 24, scope: !2700)
!2742 = !DILocalVariable(name: "temp", scope: !2743, file: !1, line: 1652, type: !24)
!2743 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 1652, column: 22)
!2744 = !DILocation(line: 1652, column: 22, scope: !2743)
!2745 = !DILocation(line: 1653, column: 40, scope: !2700)
!2746 = !DILocation(line: 1653, column: 49, scope: !2700)
!2747 = !DILocation(line: 1653, column: 62, scope: !2700)
!2748 = !DILocation(line: 1653, column: 22, scope: !2700)
!2749 = !DILocation(line: 1653, column: 30, scope: !2700)
!2750 = !DILocation(line: 1653, column: 33, scope: !2700)
!2751 = !DILocation(line: 1653, column: 38, scope: !2700)
!2752 = !DILocation(line: 1655, column: 16, scope: !2689)
!2753 = !DILocation(line: 1658, column: 36, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2675, file: !1, line: 1657, column: 16)
!2755 = !DILocation(line: 1658, column: 45, scope: !2754)
!2756 = !DILocation(line: 1658, column: 57, scope: !2754)
!2757 = !DILocation(line: 1658, column: 65, scope: !2754)
!2758 = !DILocation(line: 1658, column: 68, scope: !2754)
!2759 = !DILocation(line: 1658, column: 19, scope: !2754)
!2760 = !DILocation(line: 1658, column: 27, scope: !2754)
!2761 = !DILocation(line: 1658, column: 30, scope: !2754)
!2762 = !DILocation(line: 1658, column: 34, scope: !2754)
!2763 = !DILocation(line: 1659, column: 38, scope: !2754)
!2764 = !DILocation(line: 1659, column: 47, scope: !2754)
!2765 = !DILocation(line: 1659, column: 59, scope: !2754)
!2766 = !DILocation(line: 1659, column: 67, scope: !2754)
!2767 = !DILocation(line: 1659, column: 70, scope: !2754)
!2768 = !DILocation(line: 1659, column: 19, scope: !2754)
!2769 = !DILocation(line: 1659, column: 27, scope: !2754)
!2770 = !DILocation(line: 1659, column: 30, scope: !2754)
!2771 = !DILocation(line: 1659, column: 36, scope: !2754)
!2772 = !DILocation(line: 1660, column: 37, scope: !2754)
!2773 = !DILocation(line: 1660, column: 46, scope: !2754)
!2774 = !DILocation(line: 1660, column: 58, scope: !2754)
!2775 = !DILocation(line: 1660, column: 66, scope: !2754)
!2776 = !DILocation(line: 1660, column: 69, scope: !2754)
!2777 = !DILocation(line: 1660, column: 19, scope: !2754)
!2778 = !DILocation(line: 1660, column: 27, scope: !2754)
!2779 = !DILocation(line: 1660, column: 30, scope: !2754)
!2780 = !DILocation(line: 1660, column: 35, scope: !2754)
!2781 = !DILocation(line: 1662, column: 13, scope: !2676)
!2782 = !DILocation(line: 1630, column: 43, scope: !2670)
!2783 = !DILocation(line: 1630, column: 13, scope: !2670)
!2784 = distinct !{!2784, !2673, !2785}
!2785 = !DILocation(line: 1662, column: 13, scope: !2667)
!2786 = !DILocation(line: 1670, column: 13, scope: !2472)
!2787 = !DILocation(line: 1670, column: 22, scope: !2472)
!2788 = !DILocation(line: 1670, column: 38, scope: !2472)
!2789 = !DILocation(line: 1671, column: 10, scope: !2472)
!2790 = !DILocalVariable(name: "gs_sig", scope: !2791, file: !1, line: 1676, type: !12)
!2791 = distinct !DILexicalBlock(scope: !2467, file: !1, line: 1675, column: 10)
!2792 = !DILocation(line: 1676, column: 17, scope: !2791)
!2793 = !DILocalVariable(name: "g_sig", scope: !2791, file: !1, line: 1676, type: !12)
!2794 = !DILocation(line: 1676, column: 25, scope: !2791)
!2795 = !DILocalVariable(name: "g", scope: !2791, file: !1, line: 1677, type: !30)
!2796 = !DILocation(line: 1677, column: 29, scope: !2791)
!2797 = !DILocalVariable(name: "gs", scope: !2791, file: !1, line: 1678, type: !30)
!2798 = !DILocation(line: 1678, column: 29, scope: !2791)
!2799 = !DILocation(line: 1680, column: 21, scope: !2791)
!2800 = !DILocation(line: 1680, column: 30, scope: !2791)
!2801 = !DILocation(line: 1680, column: 13, scope: !2791)
!2802 = !DILocation(line: 1683, column: 23, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1681, column: 13)
!2804 = !DILocation(line: 1683, column: 32, scope: !2803)
!2805 = !DILocation(line: 1683, column: 21, scope: !2803)
!2806 = !DILocation(line: 1685, column: 19, scope: !2803)
!2807 = !DILocation(line: 1688, column: 38, scope: !2803)
!2808 = !DILocation(line: 1688, column: 47, scope: !2803)
!2809 = !DILocation(line: 1688, column: 23, scope: !2803)
!2810 = !DILocation(line: 1688, column: 21, scope: !2803)
!2811 = !DILocation(line: 1689, column: 40, scope: !2803)
!2812 = !DILocation(line: 1689, column: 49, scope: !2803)
!2813 = !DILocation(line: 1689, column: 56, scope: !2803)
!2814 = !DILocation(line: 1689, column: 65, scope: !2803)
!2815 = !DILocation(line: 1689, column: 24, scope: !2803)
!2816 = !DILocation(line: 1689, column: 22, scope: !2803)
!2817 = !DILocation(line: 1690, column: 19, scope: !2803)
!2818 = !DILocation(line: 1693, column: 38, scope: !2803)
!2819 = !DILocation(line: 1693, column: 47, scope: !2803)
!2820 = !DILocation(line: 1693, column: 23, scope: !2803)
!2821 = !DILocation(line: 1693, column: 21, scope: !2803)
!2822 = !DILocation(line: 1694, column: 40, scope: !2803)
!2823 = !DILocation(line: 1694, column: 49, scope: !2803)
!2824 = !DILocation(line: 1695, column: 23, scope: !2803)
!2825 = !DILocation(line: 1695, column: 32, scope: !2803)
!2826 = !DILocation(line: 1694, column: 24, scope: !2803)
!2827 = !DILocation(line: 1694, column: 22, scope: !2803)
!2828 = !DILocation(line: 1696, column: 19, scope: !2803)
!2829 = !DILocation(line: 1699, column: 29, scope: !2803)
!2830 = !DILocation(line: 1699, column: 19, scope: !2803)
!2831 = !DILocation(line: 1702, column: 43, scope: !2791)
!2832 = !DILocation(line: 1702, column: 21, scope: !2791)
!2833 = !DILocation(line: 1702, column: 19, scope: !2791)
!2834 = !DILocation(line: 1703, column: 44, scope: !2791)
!2835 = !DILocation(line: 1703, column: 22, scope: !2791)
!2836 = !DILocation(line: 1703, column: 20, scope: !2791)
!2837 = !DILocation(line: 1705, column: 17, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1705, column: 17)
!2839 = !DILocation(line: 1705, column: 17, scope: !2791)
!2840 = !DILocation(line: 1706, column: 63, scope: !2838)
!2841 = !DILocation(line: 1707, column: 20, scope: !2838)
!2842 = !DILocation(line: 1707, column: 29, scope: !2838)
!2843 = !DILocation(line: 1707, column: 40, scope: !2838)
!2844 = !DILocation(line: 1707, column: 46, scope: !2838)
!2845 = !DILocation(line: 1706, column: 45, scope: !2838)
!2846 = !DILocation(line: 1706, column: 16, scope: !2838)
!2847 = !DILocation(line: 1706, column: 25, scope: !2838)
!2848 = !DILocation(line: 1706, column: 38, scope: !2838)
!2849 = !DILocation(line: 1706, column: 43, scope: !2838)
!2850 = !DILocation(line: 1709, column: 17, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1709, column: 17)
!2852 = !DILocation(line: 1709, column: 17, scope: !2791)
!2853 = !DILocation(line: 1710, column: 61, scope: !2851)
!2854 = !DILocation(line: 1711, column: 20, scope: !2851)
!2855 = !DILocation(line: 1711, column: 29, scope: !2851)
!2856 = !DILocation(line: 1711, column: 40, scope: !2851)
!2857 = !DILocation(line: 1711, column: 46, scope: !2851)
!2858 = !DILocation(line: 1710, column: 43, scope: !2851)
!2859 = !DILocation(line: 1710, column: 16, scope: !2851)
!2860 = !DILocation(line: 1710, column: 25, scope: !2851)
!2861 = !DILocation(line: 1710, column: 36, scope: !2851)
!2862 = !DILocation(line: 1710, column: 41, scope: !2851)
!2863 = !DILocation(line: 1713, column: 18, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1713, column: 17)
!2865 = !DILocation(line: 1713, column: 27, scope: !2864)
!2866 = !DILocation(line: 1713, column: 38, scope: !2864)
!2867 = !DILocation(line: 1713, column: 45, scope: !2864)
!2868 = !DILocation(line: 1713, column: 54, scope: !2864)
!2869 = !DILocation(line: 1713, column: 65, scope: !2864)
!2870 = !DILocation(line: 1713, column: 42, scope: !2864)
!2871 = !DILocation(line: 1713, column: 72, scope: !2864)
!2872 = !DILocation(line: 1714, column: 18, scope: !2864)
!2873 = !DILocation(line: 1714, column: 27, scope: !2864)
!2874 = !DILocation(line: 1714, column: 38, scope: !2864)
!2875 = !DILocation(line: 1714, column: 45, scope: !2864)
!2876 = !DILocation(line: 1714, column: 54, scope: !2864)
!2877 = !DILocation(line: 1714, column: 65, scope: !2864)
!2878 = !DILocation(line: 1714, column: 42, scope: !2864)
!2879 = !DILocation(line: 1714, column: 71, scope: !2864)
!2880 = !DILocation(line: 1715, column: 18, scope: !2864)
!2881 = !DILocation(line: 1715, column: 27, scope: !2864)
!2882 = !DILocation(line: 1715, column: 38, scope: !2864)
!2883 = !DILocation(line: 1715, column: 45, scope: !2864)
!2884 = !DILocation(line: 1715, column: 54, scope: !2864)
!2885 = !DILocation(line: 1715, column: 65, scope: !2864)
!2886 = !DILocation(line: 1715, column: 42, scope: !2864)
!2887 = !DILocation(line: 1713, column: 17, scope: !2791)
!2888 = !DILocation(line: 1718, column: 20, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !1, line: 1718, column: 20)
!2890 = distinct !DILexicalBlock(scope: !2864, file: !1, line: 1716, column: 13)
!2891 = !DILocation(line: 1718, column: 20, scope: !2890)
!2892 = !DILocation(line: 1720, column: 65, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !1, line: 1719, column: 16)
!2894 = !DILocation(line: 1721, column: 23, scope: !2893)
!2895 = !DILocation(line: 1721, column: 32, scope: !2893)
!2896 = !DILocation(line: 1721, column: 43, scope: !2893)
!2897 = !DILocation(line: 1721, column: 48, scope: !2893)
!2898 = !DILocation(line: 1720, column: 47, scope: !2893)
!2899 = !DILocation(line: 1720, column: 19, scope: !2893)
!2900 = !DILocation(line: 1720, column: 28, scope: !2893)
!2901 = !DILocation(line: 1720, column: 41, scope: !2893)
!2902 = !DILocation(line: 1720, column: 45, scope: !2893)
!2903 = !DILocation(line: 1723, column: 67, scope: !2893)
!2904 = !DILocation(line: 1724, column: 23, scope: !2893)
!2905 = !DILocation(line: 1724, column: 32, scope: !2893)
!2906 = !DILocation(line: 1724, column: 43, scope: !2893)
!2907 = !DILocation(line: 1724, column: 50, scope: !2893)
!2908 = !DILocation(line: 1723, column: 49, scope: !2893)
!2909 = !DILocation(line: 1723, column: 19, scope: !2893)
!2910 = !DILocation(line: 1723, column: 28, scope: !2893)
!2911 = !DILocation(line: 1723, column: 41, scope: !2893)
!2912 = !DILocation(line: 1723, column: 47, scope: !2893)
!2913 = !DILocation(line: 1726, column: 66, scope: !2893)
!2914 = !DILocation(line: 1727, column: 23, scope: !2893)
!2915 = !DILocation(line: 1727, column: 32, scope: !2893)
!2916 = !DILocation(line: 1727, column: 43, scope: !2893)
!2917 = !DILocation(line: 1727, column: 49, scope: !2893)
!2918 = !DILocation(line: 1726, column: 48, scope: !2893)
!2919 = !DILocation(line: 1726, column: 19, scope: !2893)
!2920 = !DILocation(line: 1726, column: 28, scope: !2893)
!2921 = !DILocation(line: 1726, column: 41, scope: !2893)
!2922 = !DILocation(line: 1726, column: 46, scope: !2893)
!2923 = !DILocation(line: 1728, column: 16, scope: !2893)
!2924 = !DILocation(line: 1730, column: 20, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2890, file: !1, line: 1730, column: 20)
!2926 = !DILocation(line: 1730, column: 20, scope: !2890)
!2927 = !DILocation(line: 1732, column: 63, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 1731, column: 16)
!2929 = !DILocation(line: 1733, column: 23, scope: !2928)
!2930 = !DILocation(line: 1733, column: 32, scope: !2928)
!2931 = !DILocation(line: 1733, column: 43, scope: !2928)
!2932 = !DILocation(line: 1733, column: 48, scope: !2928)
!2933 = !DILocation(line: 1732, column: 45, scope: !2928)
!2934 = !DILocation(line: 1732, column: 19, scope: !2928)
!2935 = !DILocation(line: 1732, column: 28, scope: !2928)
!2936 = !DILocation(line: 1732, column: 39, scope: !2928)
!2937 = !DILocation(line: 1732, column: 43, scope: !2928)
!2938 = !DILocation(line: 1735, column: 65, scope: !2928)
!2939 = !DILocation(line: 1736, column: 23, scope: !2928)
!2940 = !DILocation(line: 1736, column: 32, scope: !2928)
!2941 = !DILocation(line: 1736, column: 43, scope: !2928)
!2942 = !DILocation(line: 1736, column: 50, scope: !2928)
!2943 = !DILocation(line: 1735, column: 47, scope: !2928)
!2944 = !DILocation(line: 1735, column: 19, scope: !2928)
!2945 = !DILocation(line: 1735, column: 28, scope: !2928)
!2946 = !DILocation(line: 1735, column: 39, scope: !2928)
!2947 = !DILocation(line: 1735, column: 45, scope: !2928)
!2948 = !DILocation(line: 1738, column: 64, scope: !2928)
!2949 = !DILocation(line: 1739, column: 23, scope: !2928)
!2950 = !DILocation(line: 1739, column: 32, scope: !2928)
!2951 = !DILocation(line: 1739, column: 43, scope: !2928)
!2952 = !DILocation(line: 1739, column: 49, scope: !2928)
!2953 = !DILocation(line: 1738, column: 46, scope: !2928)
!2954 = !DILocation(line: 1738, column: 19, scope: !2928)
!2955 = !DILocation(line: 1738, column: 28, scope: !2928)
!2956 = !DILocation(line: 1738, column: 39, scope: !2928)
!2957 = !DILocation(line: 1738, column: 44, scope: !2928)
!2958 = !DILocation(line: 1740, column: 16, scope: !2928)
!2959 = !DILocation(line: 1741, column: 13, scope: !2890)
!2960 = !DILocation(line: 1747, column: 51, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2864, file: !1, line: 1744, column: 13)
!2962 = !DILocation(line: 1747, column: 60, scope: !2961)
!2963 = !DILocation(line: 1747, column: 73, scope: !2961)
!2964 = !DILocation(line: 1747, column: 22, scope: !2961)
!2965 = !DILocation(line: 1747, column: 31, scope: !2961)
!2966 = !DILocation(line: 1747, column: 44, scope: !2961)
!2967 = !DILocation(line: 1747, column: 49, scope: !2961)
!2968 = !DILocation(line: 1746, column: 44, scope: !2961)
!2969 = !DILocation(line: 1746, column: 53, scope: !2961)
!2970 = !DILocation(line: 1746, column: 66, scope: !2961)
!2971 = !DILocation(line: 1747, column: 20, scope: !2961)
!2972 = !DILocation(line: 1746, column: 16, scope: !2961)
!2973 = !DILocation(line: 1746, column: 25, scope: !2961)
!2974 = !DILocation(line: 1746, column: 38, scope: !2961)
!2975 = !DILocation(line: 1746, column: 42, scope: !2961)
!2976 = !DILocation(line: 1750, column: 49, scope: !2961)
!2977 = !DILocation(line: 1750, column: 58, scope: !2961)
!2978 = !DILocation(line: 1750, column: 69, scope: !2961)
!2979 = !DILocation(line: 1750, column: 22, scope: !2961)
!2980 = !DILocation(line: 1750, column: 31, scope: !2961)
!2981 = !DILocation(line: 1750, column: 42, scope: !2961)
!2982 = !DILocation(line: 1750, column: 47, scope: !2961)
!2983 = !DILocation(line: 1749, column: 42, scope: !2961)
!2984 = !DILocation(line: 1749, column: 51, scope: !2961)
!2985 = !DILocation(line: 1749, column: 62, scope: !2961)
!2986 = !DILocation(line: 1750, column: 20, scope: !2961)
!2987 = !DILocation(line: 1749, column: 16, scope: !2961)
!2988 = !DILocation(line: 1749, column: 25, scope: !2961)
!2989 = !DILocation(line: 1749, column: 36, scope: !2961)
!2990 = !DILocation(line: 1749, column: 40, scope: !2961)
!2991 = !DILocation(line: 1754, column: 13, scope: !2791)
!2992 = !DILocation(line: 1754, column: 22, scope: !2791)
!2993 = !DILocation(line: 1754, column: 44, scope: !2791)
!2994 = !DILocation(line: 1756, column: 7, scope: !2460)
!2995 = !DILocation(line: 1761, column: 11, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 1761, column: 11)
!2997 = !DILocation(line: 1761, column: 20, scope: !2996)
!2998 = !DILocation(line: 1761, column: 31, scope: !2996)
!2999 = !DILocation(line: 1764, column: 10, scope: !2996)
!3000 = !DILocation(line: 1764, column: 15, scope: !2996)
!3001 = !DILocation(line: 1764, column: 24, scope: !2996)
!3002 = !DILocation(line: 1764, column: 40, scope: !2996)
!3003 = !DILocation(line: 1764, column: 54, scope: !2996)
!3004 = !DILocation(line: 1764, column: 59, scope: !2996)
!3005 = !DILocation(line: 1765, column: 11, scope: !2996)
!3006 = !DILocation(line: 1765, column: 20, scope: !2996)
!3007 = !DILocation(line: 1765, column: 36, scope: !2996)
!3008 = !DILocation(line: 1765, column: 55, scope: !2996)
!3009 = !DILocation(line: 1761, column: 11, scope: !2454)
!3010 = !DILocalVariable(name: "palette", scope: !3011, file: !1, line: 1769, type: !189)
!3011 = distinct !DILexicalBlock(scope: !2996, file: !1, line: 1768, column: 7)
!3012 = !DILocation(line: 1769, column: 21, scope: !3011)
!3013 = !DILocation(line: 1769, column: 31, scope: !3011)
!3014 = !DILocation(line: 1769, column: 40, scope: !3011)
!3015 = !DILocalVariable(name: "num_palette", scope: !3011, file: !1, line: 1770, type: !12)
!3016 = !DILocation(line: 1770, column: 14, scope: !3011)
!3017 = !DILocation(line: 1770, column: 28, scope: !3011)
!3018 = !DILocation(line: 1770, column: 37, scope: !3011)
!3019 = !DILocalVariable(name: "i", scope: !3011, file: !1, line: 1771, type: !12)
!3020 = !DILocation(line: 1771, column: 14, scope: !3011)
!3021 = !DILocation(line: 1776, column: 17, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3011, file: !1, line: 1776, column: 10)
!3023 = !DILocation(line: 1776, column: 15, scope: !3022)
!3024 = !DILocation(line: 1776, column: 22, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3022, file: !1, line: 1776, column: 10)
!3026 = !DILocation(line: 1776, column: 26, scope: !3025)
!3027 = !DILocation(line: 1776, column: 24, scope: !3025)
!3028 = !DILocation(line: 1776, column: 10, scope: !3022)
!3029 = !DILocation(line: 1778, column: 30, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 1777, column: 10)
!3031 = !DILocation(line: 1778, column: 39, scope: !3030)
!3032 = !DILocation(line: 1778, column: 51, scope: !3030)
!3033 = !DILocation(line: 1778, column: 59, scope: !3030)
!3034 = !DILocation(line: 1778, column: 62, scope: !3030)
!3035 = !DILocation(line: 1778, column: 13, scope: !3030)
!3036 = !DILocation(line: 1778, column: 21, scope: !3030)
!3037 = !DILocation(line: 1778, column: 24, scope: !3030)
!3038 = !DILocation(line: 1778, column: 28, scope: !3030)
!3039 = !DILocation(line: 1779, column: 32, scope: !3030)
!3040 = !DILocation(line: 1779, column: 41, scope: !3030)
!3041 = !DILocation(line: 1779, column: 53, scope: !3030)
!3042 = !DILocation(line: 1779, column: 61, scope: !3030)
!3043 = !DILocation(line: 1779, column: 64, scope: !3030)
!3044 = !DILocation(line: 1779, column: 13, scope: !3030)
!3045 = !DILocation(line: 1779, column: 21, scope: !3030)
!3046 = !DILocation(line: 1779, column: 24, scope: !3030)
!3047 = !DILocation(line: 1779, column: 30, scope: !3030)
!3048 = !DILocation(line: 1780, column: 31, scope: !3030)
!3049 = !DILocation(line: 1780, column: 40, scope: !3030)
!3050 = !DILocation(line: 1780, column: 52, scope: !3030)
!3051 = !DILocation(line: 1780, column: 60, scope: !3030)
!3052 = !DILocation(line: 1780, column: 63, scope: !3030)
!3053 = !DILocation(line: 1780, column: 13, scope: !3030)
!3054 = !DILocation(line: 1780, column: 21, scope: !3030)
!3055 = !DILocation(line: 1780, column: 24, scope: !3030)
!3056 = !DILocation(line: 1780, column: 29, scope: !3030)
!3057 = !DILocation(line: 1781, column: 10, scope: !3030)
!3058 = !DILocation(line: 1776, column: 40, scope: !3025)
!3059 = !DILocation(line: 1776, column: 10, scope: !3025)
!3060 = distinct !{!3060, !3028, !3061}
!3061 = !DILocation(line: 1781, column: 10, scope: !3022)
!3062 = !DILocation(line: 1784, column: 10, scope: !3011)
!3063 = !DILocation(line: 1784, column: 19, scope: !3011)
!3064 = !DILocation(line: 1784, column: 35, scope: !3011)
!3065 = !DILocation(line: 1785, column: 7, scope: !3011)
!3066 = !DILocation(line: 1786, column: 4, scope: !2449)
!3067 = !DILocation(line: 1794, column: 9, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 1794, column: 8)
!3069 = !DILocation(line: 1794, column: 18, scope: !3068)
!3070 = !DILocation(line: 1794, column: 34, scope: !3068)
!3071 = !DILocation(line: 1794, column: 49, scope: !3068)
!3072 = !DILocation(line: 1795, column: 9, scope: !3068)
!3073 = !DILocation(line: 1795, column: 18, scope: !3068)
!3074 = !DILocation(line: 1795, column: 29, scope: !3068)
!3075 = !DILocation(line: 1794, column: 8, scope: !2404)
!3076 = !DILocalVariable(name: "i", scope: !3077, file: !1, line: 1797, type: !12)
!3077 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1796, column: 4)
!3078 = !DILocation(line: 1797, column: 11, scope: !3077)
!3079 = !DILocalVariable(name: "istop", scope: !3077, file: !1, line: 1798, type: !12)
!3080 = !DILocation(line: 1798, column: 11, scope: !3077)
!3081 = !DILocation(line: 1798, column: 24, scope: !3077)
!3082 = !DILocation(line: 1798, column: 33, scope: !3077)
!3083 = !DILocation(line: 1798, column: 19, scope: !3077)
!3084 = !DILocalVariable(name: "back", scope: !3077, file: !1, line: 1799, type: !191)
!3085 = !DILocation(line: 1799, column: 17, scope: !3077)
!3086 = !DILocalVariable(name: "palette", scope: !3077, file: !1, line: 1800, type: !189)
!3087 = !DILocation(line: 1800, column: 18, scope: !3077)
!3088 = !DILocation(line: 1800, column: 28, scope: !3077)
!3089 = !DILocation(line: 1800, column: 37, scope: !3077)
!3090 = !DILocation(line: 1802, column: 30, scope: !3077)
!3091 = !DILocation(line: 1802, column: 39, scope: !3077)
!3092 = !DILocation(line: 1802, column: 50, scope: !3077)
!3093 = !DILocation(line: 1802, column: 20, scope: !3077)
!3094 = !DILocation(line: 1802, column: 12, scope: !3077)
!3095 = !DILocation(line: 1802, column: 18, scope: !3077)
!3096 = !DILocation(line: 1803, column: 30, scope: !3077)
!3097 = !DILocation(line: 1803, column: 39, scope: !3077)
!3098 = !DILocation(line: 1803, column: 50, scope: !3077)
!3099 = !DILocation(line: 1803, column: 20, scope: !3077)
!3100 = !DILocation(line: 1803, column: 12, scope: !3077)
!3101 = !DILocation(line: 1803, column: 18, scope: !3077)
!3102 = !DILocation(line: 1804, column: 30, scope: !3077)
!3103 = !DILocation(line: 1804, column: 39, scope: !3077)
!3104 = !DILocation(line: 1804, column: 50, scope: !3077)
!3105 = !DILocation(line: 1804, column: 20, scope: !3077)
!3106 = !DILocation(line: 1804, column: 12, scope: !3077)
!3107 = !DILocation(line: 1804, column: 18, scope: !3077)
!3108 = !DILocation(line: 1806, column: 14, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3077, file: !1, line: 1806, column: 7)
!3110 = !DILocation(line: 1806, column: 12, scope: !3109)
!3111 = !DILocation(line: 1806, column: 19, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3109, file: !1, line: 1806, column: 7)
!3113 = !DILocation(line: 1806, column: 23, scope: !3112)
!3114 = !DILocation(line: 1806, column: 21, scope: !3112)
!3115 = !DILocation(line: 1806, column: 7, scope: !3109)
!3116 = !DILocation(line: 1808, column: 14, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !1, line: 1808, column: 14)
!3118 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 1807, column: 7)
!3119 = !DILocation(line: 1808, column: 23, scope: !3117)
!3120 = !DILocation(line: 1808, column: 35, scope: !3117)
!3121 = !DILocation(line: 1808, column: 38, scope: !3117)
!3122 = !DILocation(line: 1808, column: 14, scope: !3118)
!3123 = !DILocation(line: 1810, column: 13, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1809, column: 10)
!3125 = !DILocation(line: 1810, column: 21, scope: !3124)
!3126 = !DILocation(line: 1810, column: 26, scope: !3124)
!3127 = !DILocation(line: 1811, column: 10, scope: !3124)
!3128 = !DILocation(line: 1813, column: 19, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 1813, column: 19)
!3130 = !DILocation(line: 1813, column: 28, scope: !3129)
!3131 = !DILocation(line: 1813, column: 40, scope: !3129)
!3132 = !DILocation(line: 1813, column: 43, scope: !3129)
!3133 = !DILocation(line: 1813, column: 19, scope: !3117)
!3134 = !DILocalVariable(name: "temp", scope: !3135, file: !1, line: 1816, type: !24)
!3135 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 1816, column: 13)
!3136 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 1814, column: 10)
!3137 = !DILocation(line: 1816, column: 13, scope: !3135)
!3138 = !DILocalVariable(name: "temp", scope: !3139, file: !1, line: 1819, type: !24)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 1819, column: 13)
!3140 = !DILocation(line: 1819, column: 13, scope: !3139)
!3141 = !DILocalVariable(name: "temp", scope: !3142, file: !1, line: 1822, type: !24)
!3142 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 1822, column: 13)
!3143 = !DILocation(line: 1822, column: 13, scope: !3142)
!3144 = !DILocation(line: 1824, column: 10, scope: !3136)
!3145 = !DILocation(line: 1825, column: 7, scope: !3118)
!3146 = !DILocation(line: 1806, column: 31, scope: !3112)
!3147 = !DILocation(line: 1806, column: 7, scope: !3112)
!3148 = distinct !{!3148, !3115, !3149}
!3149 = !DILocation(line: 1825, column: 7, scope: !3109)
!3150 = !DILocation(line: 1827, column: 7, scope: !3077)
!3151 = !DILocation(line: 1827, column: 16, scope: !3077)
!3152 = !DILocation(line: 1827, column: 32, scope: !3077)
!3153 = !DILocation(line: 1828, column: 4, scope: !3077)
!3154 = !DILocation(line: 1832, column: 9, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1832, column: 8)
!3156 = !DILocation(line: 1832, column: 18, scope: !3155)
!3157 = !DILocation(line: 1832, column: 34, scope: !3155)
!3158 = !DILocation(line: 1832, column: 47, scope: !3155)
!3159 = !DILocation(line: 1833, column: 9, scope: !3155)
!3160 = !DILocation(line: 1833, column: 18, scope: !3155)
!3161 = !DILocation(line: 1833, column: 34, scope: !3155)
!3162 = !DILocation(line: 1833, column: 48, scope: !3155)
!3163 = !DILocation(line: 1834, column: 9, scope: !3155)
!3164 = !DILocation(line: 1834, column: 18, scope: !3155)
!3165 = !DILocation(line: 1834, column: 29, scope: !3155)
!3166 = !DILocation(line: 1832, column: 8, scope: !2164)
!3167 = !DILocalVariable(name: "i", scope: !3168, file: !1, line: 1836, type: !12)
!3168 = distinct !DILexicalBlock(scope: !3155, file: !1, line: 1835, column: 4)
!3169 = !DILocation(line: 1836, column: 11, scope: !3168)
!3170 = !DILocalVariable(name: "istop", scope: !3168, file: !1, line: 1837, type: !12)
!3171 = !DILocation(line: 1837, column: 11, scope: !3168)
!3172 = !DILocation(line: 1837, column: 19, scope: !3168)
!3173 = !DILocation(line: 1837, column: 28, scope: !3168)
!3174 = !DILocalVariable(name: "shift", scope: !3168, file: !1, line: 1838, type: !12)
!3175 = !DILocation(line: 1838, column: 11, scope: !3168)
!3176 = !DILocation(line: 1838, column: 23, scope: !3168)
!3177 = !DILocation(line: 1838, column: 32, scope: !3168)
!3178 = !DILocation(line: 1838, column: 40, scope: !3168)
!3179 = !DILocation(line: 1838, column: 21, scope: !3168)
!3180 = !DILocation(line: 1840, column: 7, scope: !3168)
!3181 = !DILocation(line: 1840, column: 16, scope: !3168)
!3182 = !DILocation(line: 1840, column: 32, scope: !3168)
!3183 = !DILocation(line: 1846, column: 11, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3168, file: !1, line: 1846, column: 11)
!3185 = !DILocation(line: 1846, column: 17, scope: !3184)
!3186 = !DILocation(line: 1846, column: 21, scope: !3184)
!3187 = !DILocation(line: 1846, column: 24, scope: !3184)
!3188 = !DILocation(line: 1846, column: 30, scope: !3184)
!3189 = !DILocation(line: 1846, column: 11, scope: !3168)
!3190 = !DILocation(line: 1846, column: 41, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3184, file: !1, line: 1846, column: 35)
!3192 = !DILocation(line: 1846, column: 40, scope: !3191)
!3193 = !DILocation(line: 1846, column: 45, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3191, file: !1, line: 1846, column: 35)
!3195 = !DILocation(line: 1846, column: 47, scope: !3194)
!3196 = !DILocation(line: 1846, column: 46, scope: !3194)
!3197 = !DILocation(line: 1846, column: 35, scope: !3191)
!3198 = !DILocalVariable(name: "component", scope: !3199, file: !1, line: 1848, type: !12)
!3199 = distinct !DILexicalBlock(scope: !3194, file: !1, line: 1847, column: 7)
!3200 = !DILocation(line: 1848, column: 14, scope: !3199)
!3201 = !DILocation(line: 1848, column: 26, scope: !3199)
!3202 = !DILocation(line: 1848, column: 35, scope: !3199)
!3203 = !DILocation(line: 1848, column: 43, scope: !3199)
!3204 = !DILocation(line: 1848, column: 46, scope: !3199)
!3205 = !DILocation(line: 1850, column: 24, scope: !3199)
!3206 = !DILocation(line: 1850, column: 20, scope: !3199)
!3207 = !DILocation(line: 1851, column: 46, scope: !3199)
!3208 = !DILocation(line: 1851, column: 36, scope: !3199)
!3209 = !DILocation(line: 1851, column: 10, scope: !3199)
!3210 = !DILocation(line: 1851, column: 19, scope: !3199)
!3211 = !DILocation(line: 1851, column: 27, scope: !3199)
!3212 = !DILocation(line: 1851, column: 30, scope: !3199)
!3213 = !DILocation(line: 1851, column: 34, scope: !3199)
!3214 = !DILocation(line: 1852, column: 7, scope: !3199)
!3215 = !DILocation(line: 1846, column: 54, scope: !3194)
!3216 = !DILocation(line: 1846, column: 35, scope: !3194)
!3217 = distinct !{!3217, !3197, !3218}
!3218 = !DILocation(line: 1852, column: 7, scope: !3191)
!3219 = !DILocation(line: 1854, column: 19, scope: !3168)
!3220 = !DILocation(line: 1854, column: 28, scope: !3168)
!3221 = !DILocation(line: 1854, column: 36, scope: !3168)
!3222 = !DILocation(line: 1854, column: 17, scope: !3168)
!3223 = !DILocation(line: 1854, column: 13, scope: !3168)
!3224 = !DILocation(line: 1855, column: 11, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3168, file: !1, line: 1855, column: 11)
!3226 = !DILocation(line: 1855, column: 17, scope: !3225)
!3227 = !DILocation(line: 1855, column: 21, scope: !3225)
!3228 = !DILocation(line: 1855, column: 24, scope: !3225)
!3229 = !DILocation(line: 1855, column: 30, scope: !3225)
!3230 = !DILocation(line: 1855, column: 11, scope: !3168)
!3231 = !DILocation(line: 1855, column: 41, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 1855, column: 35)
!3233 = !DILocation(line: 1855, column: 40, scope: !3232)
!3234 = !DILocation(line: 1855, column: 45, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3232, file: !1, line: 1855, column: 35)
!3236 = !DILocation(line: 1855, column: 47, scope: !3235)
!3237 = !DILocation(line: 1855, column: 46, scope: !3235)
!3238 = !DILocation(line: 1855, column: 35, scope: !3232)
!3239 = !DILocalVariable(name: "component", scope: !3240, file: !1, line: 1857, type: !12)
!3240 = distinct !DILexicalBlock(scope: !3235, file: !1, line: 1856, column: 7)
!3241 = !DILocation(line: 1857, column: 14, scope: !3240)
!3242 = !DILocation(line: 1857, column: 26, scope: !3240)
!3243 = !DILocation(line: 1857, column: 35, scope: !3240)
!3244 = !DILocation(line: 1857, column: 43, scope: !3240)
!3245 = !DILocation(line: 1857, column: 46, scope: !3240)
!3246 = !DILocation(line: 1859, column: 24, scope: !3240)
!3247 = !DILocation(line: 1859, column: 20, scope: !3240)
!3248 = !DILocation(line: 1860, column: 48, scope: !3240)
!3249 = !DILocation(line: 1860, column: 38, scope: !3240)
!3250 = !DILocation(line: 1860, column: 10, scope: !3240)
!3251 = !DILocation(line: 1860, column: 19, scope: !3240)
!3252 = !DILocation(line: 1860, column: 27, scope: !3240)
!3253 = !DILocation(line: 1860, column: 30, scope: !3240)
!3254 = !DILocation(line: 1860, column: 36, scope: !3240)
!3255 = !DILocation(line: 1861, column: 7, scope: !3240)
!3256 = !DILocation(line: 1855, column: 54, scope: !3235)
!3257 = !DILocation(line: 1855, column: 35, scope: !3235)
!3258 = distinct !{!3258, !3238, !3259}
!3259 = !DILocation(line: 1861, column: 7, scope: !3232)
!3260 = !DILocation(line: 1863, column: 19, scope: !3168)
!3261 = !DILocation(line: 1863, column: 28, scope: !3168)
!3262 = !DILocation(line: 1863, column: 36, scope: !3168)
!3263 = !DILocation(line: 1863, column: 17, scope: !3168)
!3264 = !DILocation(line: 1863, column: 13, scope: !3168)
!3265 = !DILocation(line: 1864, column: 11, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3168, file: !1, line: 1864, column: 11)
!3267 = !DILocation(line: 1864, column: 17, scope: !3266)
!3268 = !DILocation(line: 1864, column: 21, scope: !3266)
!3269 = !DILocation(line: 1864, column: 24, scope: !3266)
!3270 = !DILocation(line: 1864, column: 30, scope: !3266)
!3271 = !DILocation(line: 1864, column: 11, scope: !3168)
!3272 = !DILocation(line: 1864, column: 41, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3266, file: !1, line: 1864, column: 35)
!3274 = !DILocation(line: 1864, column: 40, scope: !3273)
!3275 = !DILocation(line: 1864, column: 45, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3273, file: !1, line: 1864, column: 35)
!3277 = !DILocation(line: 1864, column: 47, scope: !3276)
!3278 = !DILocation(line: 1864, column: 46, scope: !3276)
!3279 = !DILocation(line: 1864, column: 35, scope: !3273)
!3280 = !DILocalVariable(name: "component", scope: !3281, file: !1, line: 1866, type: !12)
!3281 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1865, column: 7)
!3282 = !DILocation(line: 1866, column: 14, scope: !3281)
!3283 = !DILocation(line: 1866, column: 26, scope: !3281)
!3284 = !DILocation(line: 1866, column: 35, scope: !3281)
!3285 = !DILocation(line: 1866, column: 43, scope: !3281)
!3286 = !DILocation(line: 1866, column: 46, scope: !3281)
!3287 = !DILocation(line: 1868, column: 24, scope: !3281)
!3288 = !DILocation(line: 1868, column: 20, scope: !3281)
!3289 = !DILocation(line: 1869, column: 47, scope: !3281)
!3290 = !DILocation(line: 1869, column: 37, scope: !3281)
!3291 = !DILocation(line: 1869, column: 10, scope: !3281)
!3292 = !DILocation(line: 1869, column: 19, scope: !3281)
!3293 = !DILocation(line: 1869, column: 27, scope: !3281)
!3294 = !DILocation(line: 1869, column: 30, scope: !3281)
!3295 = !DILocation(line: 1869, column: 35, scope: !3281)
!3296 = !DILocation(line: 1870, column: 7, scope: !3281)
!3297 = !DILocation(line: 1864, column: 54, scope: !3276)
!3298 = !DILocation(line: 1864, column: 35, scope: !3276)
!3299 = distinct !{!3299, !3279, !3300}
!3300 = !DILocation(line: 1870, column: 7, scope: !3273)
!3301 = !DILocation(line: 1871, column: 4, scope: !3168)
!3302 = !DILocation(line: 1873, column: 1, scope: !2164)
!3303 = distinct !DISubprogram(name: "png_gamma_threshold", scope: !1, file: !1, line: 1052, type: !3304, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!12, !30, !30}
!3306 = !DILocalVariable(name: "screen_gamma", arg: 1, scope: !3303, file: !1, line: 1052, type: !30)
!3307 = !DILocation(line: 1052, column: 37, scope: !3303)
!3308 = !DILocalVariable(name: "file_gamma", arg: 2, scope: !3303, file: !1, line: 1052, type: !30)
!3309 = !DILocation(line: 1052, column: 67, scope: !3303)
!3310 = !DILocalVariable(name: "gtest", scope: !3303, file: !1, line: 1061, type: !30)
!3311 = !DILocation(line: 1061, column: 20, scope: !3303)
!3312 = !DILocation(line: 1062, column: 31, scope: !3303)
!3313 = !DILocation(line: 1062, column: 45, scope: !3303)
!3314 = !DILocation(line: 1062, column: 12, scope: !3303)
!3315 = !DILocation(line: 1062, column: 67, scope: !3303)
!3316 = !DILocation(line: 1063, column: 30, scope: !3303)
!3317 = !DILocation(line: 1063, column: 8, scope: !3303)
!3318 = !DILocation(line: 1062, column: 4, scope: !3303)
!3319 = distinct !DISubprogram(name: "png_init_palette_transformations", scope: !1, file: !1, line: 1077, type: !234, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3320 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3319, file: !1, line: 1077, type: !39)
!3321 = !DILocation(line: 1077, column: 46, scope: !3319)
!3322 = !DILocalVariable(name: "input_has_alpha", scope: !3319, file: !1, line: 1087, type: !12)
!3323 = !DILocation(line: 1087, column: 8, scope: !3319)
!3324 = !DILocalVariable(name: "input_has_transparency", scope: !3319, file: !1, line: 1088, type: !12)
!3325 = !DILocation(line: 1088, column: 8, scope: !3319)
!3326 = !DILocation(line: 1090, column: 8, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1090, column: 8)
!3328 = !DILocation(line: 1090, column: 17, scope: !3327)
!3329 = !DILocation(line: 1090, column: 27, scope: !3327)
!3330 = !DILocation(line: 1090, column: 8, scope: !3319)
!3331 = !DILocalVariable(name: "i", scope: !3332, file: !1, line: 1092, type: !12)
!3332 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 1091, column: 4)
!3333 = !DILocation(line: 1092, column: 11, scope: !3332)
!3334 = !DILocation(line: 1095, column: 13, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 1095, column: 7)
!3336 = !DILocation(line: 1095, column: 12, scope: !3335)
!3337 = !DILocation(line: 1095, column: 17, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !1, line: 1095, column: 7)
!3339 = !DILocation(line: 1095, column: 19, scope: !3338)
!3340 = !DILocation(line: 1095, column: 28, scope: !3338)
!3341 = !DILocation(line: 1095, column: 18, scope: !3338)
!3342 = !DILocation(line: 1095, column: 7, scope: !3335)
!3343 = !DILocation(line: 1096, column: 14, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 1096, column: 14)
!3345 = !DILocation(line: 1096, column: 23, scope: !3344)
!3346 = !DILocation(line: 1096, column: 35, scope: !3344)
!3347 = !DILocation(line: 1096, column: 38, scope: !3344)
!3348 = !DILocation(line: 1096, column: 14, scope: !3338)
!3349 = !DILocation(line: 1097, column: 13, scope: !3344)
!3350 = !DILocation(line: 1098, column: 19, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3344, file: !1, line: 1098, column: 19)
!3352 = !DILocation(line: 1098, column: 28, scope: !3351)
!3353 = !DILocation(line: 1098, column: 40, scope: !3351)
!3354 = !DILocation(line: 1098, column: 43, scope: !3351)
!3355 = !DILocation(line: 1098, column: 19, scope: !3344)
!3356 = !DILocation(line: 1099, column: 36, scope: !3351)
!3357 = !DILocation(line: 1099, column: 13, scope: !3351)
!3358 = !DILocation(line: 1101, column: 29, scope: !3351)
!3359 = !DILocation(line: 1096, column: 41, scope: !3344)
!3360 = !DILocation(line: 1095, column: 39, scope: !3338)
!3361 = !DILocation(line: 1095, column: 7, scope: !3338)
!3362 = distinct !{!3362, !3342, !3363}
!3363 = !DILocation(line: 1101, column: 31, scope: !3335)
!3364 = !DILocation(line: 1102, column: 4, scope: !3332)
!3365 = !DILocation(line: 1105, column: 9, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1105, column: 8)
!3367 = !DILocation(line: 1105, column: 8, scope: !3319)
!3368 = !DILocation(line: 1111, column: 7, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3366, file: !1, line: 1106, column: 4)
!3370 = !DILocation(line: 1111, column: 16, scope: !3369)
!3371 = !DILocation(line: 1111, column: 32, scope: !3369)
!3372 = !DILocation(line: 1112, column: 7, scope: !3369)
!3373 = !DILocation(line: 1112, column: 16, scope: !3369)
!3374 = !DILocation(line: 1112, column: 22, scope: !3369)
!3375 = !DILocation(line: 1114, column: 12, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3369, file: !1, line: 1114, column: 11)
!3377 = !DILocation(line: 1114, column: 11, scope: !3369)
!3378 = !DILocation(line: 1115, column: 10, scope: !3376)
!3379 = !DILocation(line: 1115, column: 19, scope: !3376)
!3380 = !DILocation(line: 1115, column: 35, scope: !3376)
!3381 = !DILocation(line: 1116, column: 4, scope: !3369)
!3382 = !DILocation(line: 1127, column: 9, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1127, column: 8)
!3384 = !DILocation(line: 1127, column: 18, scope: !3383)
!3385 = !DILocation(line: 1127, column: 34, scope: !3383)
!3386 = !DILocation(line: 1127, column: 59, scope: !3383)
!3387 = !DILocation(line: 1128, column: 9, scope: !3383)
!3388 = !DILocation(line: 1128, column: 18, scope: !3383)
!3389 = !DILocation(line: 1128, column: 34, scope: !3383)
!3390 = !DILocation(line: 1127, column: 8, scope: !3319)
!3391 = !DILocation(line: 1132, column: 14, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !1, line: 1130, column: 7)
!3393 = distinct !DILexicalBlock(scope: !3383, file: !1, line: 1129, column: 4)
!3394 = !DILocation(line: 1132, column: 23, scope: !3392)
!3395 = !DILocation(line: 1132, column: 31, scope: !3392)
!3396 = !DILocation(line: 1132, column: 40, scope: !3392)
!3397 = !DILocation(line: 1132, column: 51, scope: !3392)
!3398 = !DILocation(line: 1132, column: 58, scope: !3392)
!3399 = !DILocation(line: 1131, column: 10, scope: !3392)
!3400 = !DILocation(line: 1131, column: 19, scope: !3392)
!3401 = !DILocation(line: 1131, column: 30, scope: !3392)
!3402 = !DILocation(line: 1131, column: 36, scope: !3392)
!3403 = !DILocation(line: 1134, column: 14, scope: !3392)
!3404 = !DILocation(line: 1134, column: 23, scope: !3392)
!3405 = !DILocation(line: 1134, column: 31, scope: !3392)
!3406 = !DILocation(line: 1134, column: 40, scope: !3392)
!3407 = !DILocation(line: 1134, column: 51, scope: !3392)
!3408 = !DILocation(line: 1134, column: 58, scope: !3392)
!3409 = !DILocation(line: 1133, column: 10, scope: !3392)
!3410 = !DILocation(line: 1133, column: 19, scope: !3392)
!3411 = !DILocation(line: 1133, column: 30, scope: !3392)
!3412 = !DILocation(line: 1133, column: 36, scope: !3392)
!3413 = !DILocation(line: 1136, column: 14, scope: !3392)
!3414 = !DILocation(line: 1136, column: 23, scope: !3392)
!3415 = !DILocation(line: 1136, column: 31, scope: !3392)
!3416 = !DILocation(line: 1136, column: 40, scope: !3392)
!3417 = !DILocation(line: 1136, column: 51, scope: !3392)
!3418 = !DILocation(line: 1136, column: 58, scope: !3392)
!3419 = !DILocation(line: 1135, column: 10, scope: !3392)
!3420 = !DILocation(line: 1135, column: 19, scope: !3392)
!3421 = !DILocation(line: 1135, column: 30, scope: !3392)
!3422 = !DILocation(line: 1135, column: 36, scope: !3392)
!3423 = !DILocation(line: 1139, column: 13, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3392, file: !1, line: 1139, column: 13)
!3425 = !DILocation(line: 1139, column: 22, scope: !3424)
!3426 = !DILocation(line: 1139, column: 38, scope: !3424)
!3427 = !DILocation(line: 1139, column: 13, scope: !3392)
!3428 = !DILocation(line: 1141, column: 18, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1141, column: 16)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !1, line: 1140, column: 9)
!3431 = !DILocation(line: 1141, column: 27, scope: !3429)
!3432 = !DILocation(line: 1141, column: 43, scope: !3429)
!3433 = !DILocation(line: 1141, column: 16, scope: !3430)
!3434 = !DILocalVariable(name: "i", scope: !3435, file: !1, line: 1146, type: !12)
!3435 = distinct !DILexicalBlock(scope: !3429, file: !1, line: 1142, column: 12)
!3436 = !DILocation(line: 1146, column: 19, scope: !3435)
!3437 = !DILocalVariable(name: "istop", scope: !3435, file: !1, line: 1146, type: !12)
!3438 = !DILocation(line: 1146, column: 22, scope: !3435)
!3439 = !DILocation(line: 1146, column: 30, scope: !3435)
!3440 = !DILocation(line: 1146, column: 39, scope: !3435)
!3441 = !DILocation(line: 1148, column: 21, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3435, file: !1, line: 1148, column: 15)
!3443 = !DILocation(line: 1148, column: 20, scope: !3442)
!3444 = !DILocation(line: 1148, column: 25, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3442, file: !1, line: 1148, column: 15)
!3446 = !DILocation(line: 1148, column: 27, scope: !3445)
!3447 = !DILocation(line: 1148, column: 26, scope: !3445)
!3448 = !DILocation(line: 1148, column: 15, scope: !3442)
!3449 = !DILocation(line: 1150, column: 21, scope: !3445)
!3450 = !DILocation(line: 1150, column: 30, scope: !3445)
!3451 = !DILocation(line: 1150, column: 42, scope: !3445)
!3452 = !DILocation(line: 1149, column: 59, scope: !3445)
!3453 = !DILocation(line: 1149, column: 44, scope: !3445)
!3454 = !DILocation(line: 1149, column: 18, scope: !3445)
!3455 = !DILocation(line: 1149, column: 27, scope: !3445)
!3456 = !DILocation(line: 1149, column: 39, scope: !3445)
!3457 = !DILocation(line: 1149, column: 42, scope: !3445)
!3458 = !DILocation(line: 1148, column: 35, scope: !3445)
!3459 = !DILocation(line: 1148, column: 15, scope: !3445)
!3460 = distinct !{!3460, !3448, !3461}
!3461 = !DILocation(line: 1150, column: 44, scope: !3442)
!3462 = !DILocation(line: 1151, column: 12, scope: !3435)
!3463 = !DILocation(line: 1152, column: 9, scope: !3430)
!3464 = !DILocation(line: 1155, column: 4, scope: !3393)
!3465 = !DILocation(line: 1157, column: 1, scope: !3319)
!3466 = distinct !DISubprogram(name: "png_init_rgb_transformations", scope: !1, file: !1, line: 1160, type: !234, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3467 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3466, file: !1, line: 1160, type: !39)
!3468 = !DILocation(line: 1160, column: 42, scope: !3466)
!3469 = !DILocalVariable(name: "input_has_alpha", scope: !3466, file: !1, line: 1166, type: !12)
!3470 = !DILocation(line: 1166, column: 8, scope: !3466)
!3471 = !DILocation(line: 1166, column: 27, scope: !3466)
!3472 = !DILocation(line: 1166, column: 36, scope: !3466)
!3473 = !DILocation(line: 1166, column: 47, scope: !3466)
!3474 = !DILocation(line: 1166, column: 71, scope: !3466)
!3475 = !DILocalVariable(name: "input_has_transparency", scope: !3466, file: !1, line: 1167, type: !12)
!3476 = !DILocation(line: 1167, column: 8, scope: !3466)
!3477 = !DILocation(line: 1167, column: 33, scope: !3466)
!3478 = !DILocation(line: 1167, column: 42, scope: !3466)
!3479 = !DILocation(line: 1167, column: 52, scope: !3466)
!3480 = !DILocation(line: 1170, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 1170, column: 8)
!3482 = !DILocation(line: 1170, column: 8, scope: !3466)
!3483 = !DILocation(line: 1177, column: 10, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !1, line: 1171, column: 4)
!3485 = !DILocation(line: 1177, column: 19, scope: !3484)
!3486 = !DILocation(line: 1177, column: 35, scope: !3484)
!3487 = !DILocation(line: 1178, column: 10, scope: !3484)
!3488 = !DILocation(line: 1178, column: 19, scope: !3484)
!3489 = !DILocation(line: 1178, column: 25, scope: !3484)
!3490 = !DILocation(line: 1181, column: 12, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !1, line: 1181, column: 11)
!3492 = !DILocation(line: 1181, column: 11, scope: !3484)
!3493 = !DILocation(line: 1182, column: 10, scope: !3491)
!3494 = !DILocation(line: 1182, column: 19, scope: !3491)
!3495 = !DILocation(line: 1182, column: 35, scope: !3491)
!3496 = !DILocation(line: 1183, column: 4, scope: !3484)
!3497 = !DILocation(line: 1194, column: 9, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 1194, column: 8)
!3499 = !DILocation(line: 1194, column: 18, scope: !3498)
!3500 = !DILocation(line: 1194, column: 34, scope: !3498)
!3501 = !DILocation(line: 1194, column: 59, scope: !3498)
!3502 = !DILocation(line: 1195, column: 9, scope: !3498)
!3503 = !DILocation(line: 1195, column: 18, scope: !3498)
!3504 = !DILocation(line: 1195, column: 34, scope: !3498)
!3505 = !DILocation(line: 1195, column: 48, scope: !3498)
!3506 = !DILocation(line: 1196, column: 10, scope: !3498)
!3507 = !DILocation(line: 1196, column: 19, scope: !3498)
!3508 = !DILocation(line: 1196, column: 30, scope: !3498)
!3509 = !DILocation(line: 1194, column: 8, scope: !3466)
!3510 = !DILocalVariable(name: "gray", scope: !3511, file: !1, line: 1201, type: !12)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 1199, column: 7)
!3512 = distinct !DILexicalBlock(scope: !3498, file: !1, line: 1198, column: 4)
!3513 = !DILocation(line: 1201, column: 14, scope: !3511)
!3514 = !DILocation(line: 1201, column: 21, scope: !3511)
!3515 = !DILocation(line: 1201, column: 30, scope: !3511)
!3516 = !DILocation(line: 1201, column: 41, scope: !3511)
!3517 = !DILocalVariable(name: "trans_gray", scope: !3511, file: !1, line: 1202, type: !12)
!3518 = !DILocation(line: 1202, column: 14, scope: !3511)
!3519 = !DILocation(line: 1202, column: 27, scope: !3511)
!3520 = !DILocation(line: 1202, column: 36, scope: !3511)
!3521 = !DILocation(line: 1202, column: 48, scope: !3511)
!3522 = !DILocation(line: 1204, column: 18, scope: !3511)
!3523 = !DILocation(line: 1204, column: 27, scope: !3511)
!3524 = !DILocation(line: 1204, column: 10, scope: !3511)
!3525 = !DILocation(line: 1207, column: 21, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3511, file: !1, line: 1205, column: 10)
!3527 = !DILocation(line: 1208, column: 27, scope: !3526)
!3528 = !DILocation(line: 1209, column: 16, scope: !3526)
!3529 = !DILocation(line: 1212, column: 21, scope: !3526)
!3530 = !DILocation(line: 1213, column: 27, scope: !3526)
!3531 = !DILocation(line: 1214, column: 16, scope: !3526)
!3532 = !DILocation(line: 1217, column: 21, scope: !3526)
!3533 = !DILocation(line: 1218, column: 27, scope: !3526)
!3534 = !DILocation(line: 1219, column: 16, scope: !3526)
!3535 = !DILocation(line: 1228, column: 16, scope: !3526)
!3536 = !DILocation(line: 1232, column: 53, scope: !3511)
!3537 = !DILocation(line: 1232, column: 40, scope: !3511)
!3538 = !DILocation(line: 1232, column: 13, scope: !3511)
!3539 = !DILocation(line: 1232, column: 22, scope: !3511)
!3540 = !DILocation(line: 1232, column: 33, scope: !3511)
!3541 = !DILocation(line: 1232, column: 38, scope: !3511)
!3542 = !DILocation(line: 1231, column: 36, scope: !3511)
!3543 = !DILocation(line: 1231, column: 45, scope: !3511)
!3544 = !DILocation(line: 1231, column: 56, scope: !3511)
!3545 = !DILocation(line: 1231, column: 62, scope: !3511)
!3546 = !DILocation(line: 1231, column: 10, scope: !3511)
!3547 = !DILocation(line: 1231, column: 19, scope: !3511)
!3548 = !DILocation(line: 1231, column: 30, scope: !3511)
!3549 = !DILocation(line: 1231, column: 34, scope: !3511)
!3550 = !DILocation(line: 1234, column: 16, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3511, file: !1, line: 1234, column: 14)
!3552 = !DILocation(line: 1234, column: 25, scope: !3551)
!3553 = !DILocation(line: 1234, column: 41, scope: !3551)
!3554 = !DILocation(line: 1234, column: 14, scope: !3511)
!3555 = !DILocation(line: 1237, column: 57, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3551, file: !1, line: 1235, column: 10)
!3557 = !DILocation(line: 1237, column: 44, scope: !3556)
!3558 = !DILocation(line: 1237, column: 16, scope: !3556)
!3559 = !DILocation(line: 1237, column: 25, scope: !3556)
!3560 = !DILocation(line: 1237, column: 37, scope: !3556)
!3561 = !DILocation(line: 1237, column: 42, scope: !3556)
!3562 = !DILocation(line: 1236, column: 40, scope: !3556)
!3563 = !DILocation(line: 1236, column: 49, scope: !3556)
!3564 = !DILocation(line: 1236, column: 61, scope: !3556)
!3565 = !DILocation(line: 1236, column: 67, scope: !3556)
!3566 = !DILocation(line: 1236, column: 13, scope: !3556)
!3567 = !DILocation(line: 1236, column: 22, scope: !3556)
!3568 = !DILocation(line: 1236, column: 34, scope: !3556)
!3569 = !DILocation(line: 1236, column: 38, scope: !3556)
!3570 = !DILocation(line: 1238, column: 10, scope: !3556)
!3571 = !DILocation(line: 1240, column: 4, scope: !3512)
!3572 = !DILocation(line: 1242, column: 1, scope: !3466)
!3573 = distinct !DISubprogram(name: "png_read_transform_info", scope: !1, file: !1, line: 1880, type: !272, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3574 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3573, file: !1, line: 1880, type: !39)
!3575 = !DILocation(line: 1880, column: 37, scope: !3573)
!3576 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3573, file: !1, line: 1880, type: !274)
!3577 = !DILocation(line: 1880, column: 56, scope: !3573)
!3578 = !DILocation(line: 1885, column: 8, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1885, column: 8)
!3580 = !DILocation(line: 1885, column: 17, scope: !3579)
!3581 = !DILocation(line: 1885, column: 33, scope: !3579)
!3582 = !DILocation(line: 1885, column: 8, scope: !3573)
!3583 = !DILocation(line: 1887, column: 11, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !1, line: 1887, column: 11)
!3585 = distinct !DILexicalBlock(scope: !3579, file: !1, line: 1886, column: 4)
!3586 = !DILocation(line: 1887, column: 21, scope: !3584)
!3587 = !DILocation(line: 1887, column: 32, scope: !3584)
!3588 = !DILocation(line: 1887, column: 11, scope: !3585)
!3589 = !DILocation(line: 1893, column: 14, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !1, line: 1893, column: 14)
!3591 = distinct !DILexicalBlock(scope: !3584, file: !1, line: 1888, column: 7)
!3592 = !DILocation(line: 1893, column: 23, scope: !3590)
!3593 = !DILocation(line: 1893, column: 33, scope: !3590)
!3594 = !DILocation(line: 1893, column: 14, scope: !3591)
!3595 = !DILocation(line: 1894, column: 13, scope: !3590)
!3596 = !DILocation(line: 1894, column: 23, scope: !3590)
!3597 = !DILocation(line: 1894, column: 34, scope: !3590)
!3598 = !DILocation(line: 1897, column: 13, scope: !3590)
!3599 = !DILocation(line: 1897, column: 23, scope: !3590)
!3600 = !DILocation(line: 1897, column: 34, scope: !3590)
!3601 = !DILocation(line: 1899, column: 10, scope: !3591)
!3602 = !DILocation(line: 1899, column: 20, scope: !3591)
!3603 = !DILocation(line: 1899, column: 30, scope: !3591)
!3604 = !DILocation(line: 1900, column: 10, scope: !3591)
!3605 = !DILocation(line: 1900, column: 20, scope: !3591)
!3606 = !DILocation(line: 1900, column: 30, scope: !3591)
!3607 = !DILocation(line: 1901, column: 7, scope: !3591)
!3608 = !DILocation(line: 1904, column: 14, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !1, line: 1904, column: 14)
!3610 = distinct !DILexicalBlock(scope: !3584, file: !1, line: 1903, column: 7)
!3611 = !DILocation(line: 1904, column: 23, scope: !3609)
!3612 = !DILocation(line: 1904, column: 14, scope: !3610)
!3613 = !DILocation(line: 1906, column: 17, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 1906, column: 17)
!3615 = distinct !DILexicalBlock(scope: !3609, file: !1, line: 1905, column: 10)
!3616 = !DILocation(line: 1906, column: 26, scope: !3614)
!3617 = !DILocation(line: 1906, column: 42, scope: !3614)
!3618 = !DILocation(line: 1906, column: 17, scope: !3615)
!3619 = !DILocation(line: 1907, column: 16, scope: !3614)
!3620 = !DILocation(line: 1907, column: 26, scope: !3614)
!3621 = !DILocation(line: 1907, column: 37, scope: !3614)
!3622 = !DILocation(line: 1908, column: 10, scope: !3615)
!3623 = !DILocation(line: 1909, column: 14, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3610, file: !1, line: 1909, column: 14)
!3625 = !DILocation(line: 1909, column: 24, scope: !3624)
!3626 = !DILocation(line: 1909, column: 34, scope: !3624)
!3627 = !DILocation(line: 1909, column: 14, scope: !3610)
!3628 = !DILocation(line: 1910, column: 13, scope: !3624)
!3629 = !DILocation(line: 1910, column: 23, scope: !3624)
!3630 = !DILocation(line: 1910, column: 33, scope: !3624)
!3631 = !DILocation(line: 1912, column: 10, scope: !3610)
!3632 = !DILocation(line: 1912, column: 20, scope: !3610)
!3633 = !DILocation(line: 1912, column: 30, scope: !3610)
!3634 = !DILocation(line: 1914, column: 4, scope: !3585)
!3635 = !DILocation(line: 1922, column: 8, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1922, column: 8)
!3637 = !DILocation(line: 1922, column: 17, scope: !3636)
!3638 = !DILocation(line: 1922, column: 33, scope: !3636)
!3639 = !DILocation(line: 1922, column: 8, scope: !3573)
!3640 = !DILocation(line: 1923, column: 7, scope: !3636)
!3641 = !DILocation(line: 1923, column: 17, scope: !3636)
!3642 = !DILocation(line: 1923, column: 30, scope: !3636)
!3643 = !DILocation(line: 1923, column: 39, scope: !3636)
!3644 = !DILocation(line: 1932, column: 22, scope: !3573)
!3645 = !DILocation(line: 1932, column: 31, scope: !3573)
!3646 = !DILocation(line: 1932, column: 4, scope: !3573)
!3647 = !DILocation(line: 1932, column: 14, scope: !3573)
!3648 = !DILocation(line: 1932, column: 20, scope: !3573)
!3649 = !DILocation(line: 1935, column: 8, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1935, column: 8)
!3651 = !DILocation(line: 1935, column: 18, scope: !3650)
!3652 = !DILocation(line: 1935, column: 28, scope: !3650)
!3653 = !DILocation(line: 1935, column: 8, scope: !3573)
!3654 = !DILocation(line: 1939, column: 14, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !1, line: 1939, column: 14)
!3656 = distinct !DILexicalBlock(scope: !3650, file: !1, line: 1936, column: 4)
!3657 = !DILocation(line: 1939, column: 23, scope: !3655)
!3658 = !DILocation(line: 1939, column: 39, scope: !3655)
!3659 = !DILocation(line: 1939, column: 14, scope: !3656)
!3660 = !DILocation(line: 1940, column: 13, scope: !3655)
!3661 = !DILocation(line: 1940, column: 23, scope: !3655)
!3662 = !DILocation(line: 1940, column: 33, scope: !3655)
!3663 = !DILocation(line: 1944, column: 14, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3656, file: !1, line: 1944, column: 14)
!3665 = !DILocation(line: 1944, column: 23, scope: !3664)
!3666 = !DILocation(line: 1944, column: 39, scope: !3664)
!3667 = !DILocation(line: 1944, column: 14, scope: !3656)
!3668 = !DILocation(line: 1945, column: 13, scope: !3664)
!3669 = !DILocation(line: 1945, column: 23, scope: !3664)
!3670 = !DILocation(line: 1945, column: 33, scope: !3664)
!3671 = !DILocation(line: 1971, column: 4, scope: !3656)
!3672 = !DILocation(line: 1974, column: 8, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1974, column: 8)
!3674 = !DILocation(line: 1974, column: 17, scope: !3673)
!3675 = !DILocation(line: 1974, column: 33, scope: !3673)
!3676 = !DILocation(line: 1974, column: 8, scope: !3573)
!3677 = !DILocation(line: 1975, column: 41, scope: !3673)
!3678 = !DILocation(line: 1975, column: 51, scope: !3673)
!3679 = !DILocation(line: 1975, column: 62, scope: !3673)
!3680 = !DILocation(line: 1975, column: 30, scope: !3673)
!3681 = !DILocation(line: 1975, column: 7, scope: !3673)
!3682 = !DILocation(line: 1975, column: 17, scope: !3673)
!3683 = !DILocation(line: 1975, column: 28, scope: !3673)
!3684 = !DILocation(line: 1980, column: 8, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1980, column: 8)
!3686 = !DILocation(line: 1980, column: 17, scope: !3685)
!3687 = !DILocation(line: 1980, column: 33, scope: !3685)
!3688 = !DILocation(line: 1980, column: 8, scope: !3573)
!3689 = !DILocation(line: 1981, column: 41, scope: !3685)
!3690 = !DILocation(line: 1981, column: 51, scope: !3685)
!3691 = !DILocation(line: 1981, column: 62, scope: !3685)
!3692 = !DILocation(line: 1981, column: 30, scope: !3685)
!3693 = !DILocation(line: 1981, column: 7, scope: !3685)
!3694 = !DILocation(line: 1981, column: 17, scope: !3685)
!3695 = !DILocation(line: 1981, column: 28, scope: !3685)
!3696 = !DILocation(line: 1986, column: 8, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1986, column: 8)
!3698 = !DILocation(line: 1986, column: 17, scope: !3697)
!3699 = !DILocation(line: 1986, column: 33, scope: !3697)
!3700 = !DILocation(line: 1986, column: 8, scope: !3573)
!3701 = !DILocation(line: 1988, column: 13, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !1, line: 1988, column: 11)
!3703 = distinct !DILexicalBlock(scope: !3697, file: !1, line: 1987, column: 4)
!3704 = !DILocation(line: 1988, column: 23, scope: !3702)
!3705 = !DILocation(line: 1988, column: 34, scope: !3702)
!3706 = !DILocation(line: 1988, column: 57, scope: !3702)
!3707 = !DILocation(line: 1989, column: 12, scope: !3702)
!3708 = !DILocation(line: 1989, column: 22, scope: !3702)
!3709 = !DILocation(line: 1989, column: 33, scope: !3702)
!3710 = !DILocation(line: 1989, column: 63, scope: !3702)
!3711 = !DILocation(line: 1990, column: 11, scope: !3702)
!3712 = !DILocation(line: 1990, column: 20, scope: !3702)
!3713 = !DILocation(line: 1990, column: 35, scope: !3702)
!3714 = !DILocation(line: 1990, column: 38, scope: !3702)
!3715 = !DILocation(line: 1990, column: 48, scope: !3702)
!3716 = !DILocation(line: 1990, column: 58, scope: !3702)
!3717 = !DILocation(line: 1988, column: 11, scope: !3703)
!3718 = !DILocation(line: 1992, column: 10, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 1991, column: 7)
!3720 = !DILocation(line: 1992, column: 20, scope: !3719)
!3721 = !DILocation(line: 1992, column: 31, scope: !3719)
!3722 = !DILocation(line: 1993, column: 7, scope: !3719)
!3723 = !DILocation(line: 1994, column: 4, scope: !3703)
!3724 = !DILocation(line: 1998, column: 8, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 1998, column: 8)
!3726 = !DILocation(line: 1998, column: 17, scope: !3725)
!3727 = !DILocation(line: 1998, column: 33, scope: !3725)
!3728 = !DILocation(line: 1998, column: 49, scope: !3725)
!3729 = !DILocation(line: 1998, column: 52, scope: !3725)
!3730 = !DILocation(line: 1998, column: 62, scope: !3725)
!3731 = !DILocation(line: 1998, column: 72, scope: !3725)
!3732 = !DILocation(line: 1998, column: 77, scope: !3725)
!3733 = !DILocation(line: 1999, column: 7, scope: !3725)
!3734 = !DILocation(line: 1999, column: 17, scope: !3725)
!3735 = !DILocation(line: 1999, column: 28, scope: !3725)
!3736 = !DILocation(line: 1998, column: 8, scope: !3573)
!3737 = !DILocation(line: 2001, column: 7, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3725, file: !1, line: 2000, column: 4)
!3739 = !DILocation(line: 2001, column: 17, scope: !3738)
!3740 = !DILocation(line: 2001, column: 27, scope: !3738)
!3741 = !DILocation(line: 2002, column: 4, scope: !3738)
!3742 = !DILocation(line: 2006, column: 9, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2006, column: 8)
!3744 = !DILocation(line: 2006, column: 18, scope: !3743)
!3745 = !DILocation(line: 2006, column: 34, scope: !3743)
!3746 = !DILocation(line: 2006, column: 46, scope: !3743)
!3747 = !DILocation(line: 2006, column: 50, scope: !3743)
!3748 = !DILocation(line: 2006, column: 60, scope: !3743)
!3749 = !DILocation(line: 2006, column: 70, scope: !3743)
!3750 = !DILocation(line: 2006, column: 8, scope: !3573)
!3751 = !DILocation(line: 2007, column: 7, scope: !3743)
!3752 = !DILocation(line: 2007, column: 17, scope: !3743)
!3753 = !DILocation(line: 2007, column: 27, scope: !3743)
!3754 = !DILocation(line: 2010, column: 8, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2010, column: 8)
!3756 = !DILocation(line: 2010, column: 18, scope: !3755)
!3757 = !DILocation(line: 2010, column: 29, scope: !3755)
!3758 = !DILocation(line: 2010, column: 8, scope: !3573)
!3759 = !DILocation(line: 2011, column: 7, scope: !3755)
!3760 = !DILocation(line: 2011, column: 17, scope: !3755)
!3761 = !DILocation(line: 2011, column: 26, scope: !3755)
!3762 = !DILocation(line: 2013, column: 13, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2013, column: 13)
!3764 = !DILocation(line: 2013, column: 23, scope: !3763)
!3765 = !DILocation(line: 2013, column: 34, scope: !3763)
!3766 = !DILocation(line: 2013, column: 13, scope: !3755)
!3767 = !DILocation(line: 2014, column: 7, scope: !3763)
!3768 = !DILocation(line: 2014, column: 17, scope: !3763)
!3769 = !DILocation(line: 2014, column: 26, scope: !3763)
!3770 = !DILocation(line: 2017, column: 7, scope: !3763)
!3771 = !DILocation(line: 2017, column: 17, scope: !3763)
!3772 = !DILocation(line: 2017, column: 26, scope: !3763)
!3773 = !DILocation(line: 2020, column: 8, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2020, column: 8)
!3775 = !DILocation(line: 2020, column: 17, scope: !3774)
!3776 = !DILocation(line: 2020, column: 33, scope: !3774)
!3777 = !DILocation(line: 2020, column: 8, scope: !3573)
!3778 = !DILocation(line: 2022, column: 41, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 2021, column: 4)
!3780 = !DILocation(line: 2022, column: 51, scope: !3779)
!3781 = !DILocation(line: 2022, column: 62, scope: !3779)
!3782 = !DILocation(line: 2022, column: 30, scope: !3779)
!3783 = !DILocation(line: 2022, column: 7, scope: !3779)
!3784 = !DILocation(line: 2022, column: 17, scope: !3779)
!3785 = !DILocation(line: 2022, column: 28, scope: !3779)
!3786 = !DILocation(line: 2024, column: 7, scope: !3779)
!3787 = !DILocation(line: 2024, column: 17, scope: !3779)
!3788 = !DILocation(line: 2024, column: 27, scope: !3779)
!3789 = !DILocation(line: 2025, column: 4, scope: !3779)
!3790 = !DILocation(line: 2028, column: 8, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2028, column: 8)
!3792 = !DILocation(line: 2028, column: 18, scope: !3791)
!3793 = !DILocation(line: 2028, column: 29, scope: !3791)
!3794 = !DILocation(line: 2028, column: 8, scope: !3573)
!3795 = !DILocation(line: 2029, column: 7, scope: !3791)
!3796 = !DILocation(line: 2029, column: 17, scope: !3791)
!3797 = !DILocation(line: 2029, column: 25, scope: !3791)
!3798 = !DILocation(line: 2033, column: 9, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2033, column: 8)
!3800 = !DILocation(line: 2033, column: 18, scope: !3799)
!3801 = !DILocation(line: 2033, column: 34, scope: !3799)
!3802 = !DILocation(line: 2033, column: 48, scope: !3799)
!3803 = !DILocation(line: 2034, column: 10, scope: !3799)
!3804 = !DILocation(line: 2034, column: 20, scope: !3799)
!3805 = !DILocation(line: 2034, column: 31, scope: !3799)
!3806 = !DILocation(line: 2034, column: 54, scope: !3799)
!3807 = !DILocation(line: 2035, column: 9, scope: !3799)
!3808 = !DILocation(line: 2035, column: 19, scope: !3799)
!3809 = !DILocation(line: 2035, column: 30, scope: !3799)
!3810 = !DILocation(line: 2033, column: 8, scope: !3573)
!3811 = !DILocation(line: 2037, column: 7, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3799, file: !1, line: 2036, column: 4)
!3813 = !DILocation(line: 2037, column: 17, scope: !3812)
!3814 = !DILocation(line: 2037, column: 25, scope: !3812)
!3815 = !DILocation(line: 2039, column: 11, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3812, file: !1, line: 2039, column: 11)
!3817 = !DILocation(line: 2039, column: 20, scope: !3816)
!3818 = !DILocation(line: 2039, column: 36, scope: !3816)
!3819 = !DILocation(line: 2039, column: 11, scope: !3812)
!3820 = !DILocation(line: 2040, column: 10, scope: !3816)
!3821 = !DILocation(line: 2040, column: 20, scope: !3816)
!3822 = !DILocation(line: 2040, column: 31, scope: !3816)
!3823 = !DILocation(line: 2041, column: 4, scope: !3812)
!3824 = !DILocation(line: 2046, column: 8, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3573, file: !1, line: 2046, column: 8)
!3826 = !DILocation(line: 2046, column: 17, scope: !3825)
!3827 = !DILocation(line: 2046, column: 33, scope: !3825)
!3828 = !DILocation(line: 2046, column: 8, scope: !3573)
!3829 = !DILocation(line: 2048, column: 11, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 2048, column: 11)
!3831 = distinct !DILexicalBlock(scope: !3825, file: !1, line: 2047, column: 4)
!3832 = !DILocation(line: 2048, column: 21, scope: !3830)
!3833 = !DILocation(line: 2048, column: 33, scope: !3830)
!3834 = !DILocation(line: 2048, column: 42, scope: !3830)
!3835 = !DILocation(line: 2048, column: 31, scope: !3830)
!3836 = !DILocation(line: 2048, column: 11, scope: !3831)
!3837 = !DILocation(line: 2049, column: 32, scope: !3830)
!3838 = !DILocation(line: 2049, column: 41, scope: !3830)
!3839 = !DILocation(line: 2049, column: 10, scope: !3830)
!3840 = !DILocation(line: 2049, column: 20, scope: !3830)
!3841 = !DILocation(line: 2049, column: 30, scope: !3830)
!3842 = !DILocation(line: 2051, column: 11, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 2051, column: 11)
!3844 = !DILocation(line: 2051, column: 21, scope: !3843)
!3845 = !DILocation(line: 2051, column: 32, scope: !3843)
!3846 = !DILocation(line: 2051, column: 41, scope: !3843)
!3847 = !DILocation(line: 2051, column: 30, scope: !3843)
!3848 = !DILocation(line: 2051, column: 11, scope: !3831)
!3849 = !DILocation(line: 2052, column: 31, scope: !3843)
!3850 = !DILocation(line: 2052, column: 40, scope: !3843)
!3851 = !DILocation(line: 2052, column: 10, scope: !3843)
!3852 = !DILocation(line: 2052, column: 20, scope: !3843)
!3853 = !DILocation(line: 2052, column: 29, scope: !3843)
!3854 = !DILocation(line: 2053, column: 4, scope: !3831)
!3855 = !DILocation(line: 2056, column: 39, scope: !3573)
!3856 = !DILocation(line: 2056, column: 49, scope: !3573)
!3857 = !DILocation(line: 2057, column: 8, scope: !3573)
!3858 = !DILocation(line: 2057, column: 18, scope: !3573)
!3859 = !DILocation(line: 2056, column: 58, scope: !3573)
!3860 = !DILocation(line: 2056, column: 28, scope: !3573)
!3861 = !DILocation(line: 2056, column: 4, scope: !3573)
!3862 = !DILocation(line: 2056, column: 14, scope: !3573)
!3863 = !DILocation(line: 2056, column: 26, scope: !3573)
!3864 = !DILocation(line: 2059, column: 25, scope: !3573)
!3865 = !DILocation(line: 2059, column: 4, scope: !3573)
!3866 = !DILocation(line: 2059, column: 14, scope: !3573)
!3867 = !DILocation(line: 2059, column: 23, scope: !3573)
!3868 = !DILocation(line: 2067, column: 29, scope: !3573)
!3869 = !DILocation(line: 2067, column: 39, scope: !3573)
!3870 = !DILocation(line: 2067, column: 4, scope: !3573)
!3871 = !DILocation(line: 2067, column: 13, scope: !3573)
!3872 = !DILocation(line: 2067, column: 27, scope: !3573)
!3873 = !DILocation(line: 2073, column: 1, scope: !3573)
!3874 = distinct !DISubprogram(name: "png_do_read_transformations", scope: !1, file: !1, line: 2080, type: !3875, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{null, !39, !101}
!3877 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3874, file: !1, line: 2080, type: !39)
!3878 = !DILocation(line: 2080, column: 41, scope: !3874)
!3879 = !DILocalVariable(name: "row_info", arg: 2, scope: !3874, file: !1, line: 2080, type: !101)
!3880 = !DILocation(line: 2080, column: 64, scope: !3874)
!3881 = !DILocation(line: 2084, column: 8, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2084, column: 8)
!3883 = !DILocation(line: 2084, column: 17, scope: !3882)
!3884 = !DILocation(line: 2084, column: 25, scope: !3882)
!3885 = !DILocation(line: 2084, column: 8, scope: !3874)
!3886 = !DILocation(line: 2090, column: 17, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 2085, column: 4)
!3888 = !DILocation(line: 2090, column: 7, scope: !3887)
!3889 = !DILocation(line: 2098, column: 9, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2098, column: 8)
!3891 = !DILocation(line: 2098, column: 18, scope: !3890)
!3892 = !DILocation(line: 2098, column: 24, scope: !3890)
!3893 = !DILocation(line: 2098, column: 57, scope: !3890)
!3894 = !DILocation(line: 2098, column: 62, scope: !3890)
!3895 = !DILocation(line: 2099, column: 9, scope: !3890)
!3896 = !DILocation(line: 2099, column: 18, scope: !3890)
!3897 = !DILocation(line: 2099, column: 24, scope: !3890)
!3898 = !DILocation(line: 2098, column: 8, scope: !3874)
!3899 = !DILocation(line: 2105, column: 17, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3890, file: !1, line: 2100, column: 4)
!3901 = !DILocation(line: 2105, column: 7, scope: !3900)
!3902 = !DILocation(line: 2109, column: 8, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2109, column: 8)
!3904 = !DILocation(line: 2109, column: 17, scope: !3903)
!3905 = !DILocation(line: 2109, column: 33, scope: !3903)
!3906 = !DILocation(line: 2109, column: 8, scope: !3874)
!3907 = !DILocation(line: 2111, column: 11, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 2111, column: 11)
!3909 = distinct !DILexicalBlock(scope: !3903, file: !1, line: 2110, column: 4)
!3910 = !DILocation(line: 2111, column: 21, scope: !3908)
!3911 = !DILocation(line: 2111, column: 32, scope: !3908)
!3912 = !DILocation(line: 2111, column: 11, scope: !3909)
!3913 = !DILocation(line: 2113, column: 32, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3908, file: !1, line: 2112, column: 7)
!3915 = !DILocation(line: 2113, column: 42, scope: !3914)
!3916 = !DILocation(line: 2113, column: 51, scope: !3914)
!3917 = !DILocation(line: 2113, column: 59, scope: !3914)
!3918 = !DILocation(line: 2114, column: 14, scope: !3914)
!3919 = !DILocation(line: 2114, column: 23, scope: !3914)
!3920 = !DILocation(line: 2114, column: 32, scope: !3914)
!3921 = !DILocation(line: 2114, column: 41, scope: !3914)
!3922 = !DILocation(line: 2114, column: 54, scope: !3914)
!3923 = !DILocation(line: 2114, column: 63, scope: !3914)
!3924 = !DILocation(line: 2113, column: 10, scope: !3914)
!3925 = !DILocation(line: 2115, column: 7, scope: !3914)
!3926 = !DILocation(line: 2119, column: 14, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !1, line: 2119, column: 14)
!3928 = distinct !DILexicalBlock(scope: !3908, file: !1, line: 2118, column: 7)
!3929 = !DILocation(line: 2119, column: 23, scope: !3927)
!3930 = !DILocation(line: 2119, column: 33, scope: !3927)
!3931 = !DILocation(line: 2120, column: 15, scope: !3927)
!3932 = !DILocation(line: 2120, column: 24, scope: !3927)
!3933 = !DILocation(line: 2120, column: 40, scope: !3927)
!3934 = !DILocation(line: 2119, column: 14, scope: !3928)
!3935 = !DILocation(line: 2121, column: 27, scope: !3927)
!3936 = !DILocation(line: 2121, column: 37, scope: !3927)
!3937 = !DILocation(line: 2121, column: 46, scope: !3927)
!3938 = !DILocation(line: 2121, column: 54, scope: !3927)
!3939 = !DILocation(line: 2122, column: 19, scope: !3927)
!3940 = !DILocation(line: 2122, column: 28, scope: !3927)
!3941 = !DILocation(line: 2121, column: 13, scope: !3927)
!3942 = !DILocation(line: 2125, column: 27, scope: !3927)
!3943 = !DILocation(line: 2125, column: 37, scope: !3927)
!3944 = !DILocation(line: 2125, column: 46, scope: !3927)
!3945 = !DILocation(line: 2125, column: 54, scope: !3927)
!3946 = !DILocation(line: 2125, column: 13, scope: !3927)
!3947 = !DILocation(line: 2128, column: 4, scope: !3909)
!3948 = !DILocation(line: 2132, column: 9, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2132, column: 8)
!3950 = !DILocation(line: 2132, column: 18, scope: !3949)
!3951 = !DILocation(line: 2132, column: 34, scope: !3949)
!3952 = !DILocation(line: 2132, column: 53, scope: !3949)
!3953 = !DILocation(line: 2133, column: 9, scope: !3949)
!3954 = !DILocation(line: 2133, column: 18, scope: !3949)
!3955 = !DILocation(line: 2133, column: 34, scope: !3949)
!3956 = !DILocation(line: 2133, column: 49, scope: !3949)
!3957 = !DILocation(line: 2134, column: 8, scope: !3949)
!3958 = !DILocation(line: 2134, column: 18, scope: !3949)
!3959 = !DILocation(line: 2134, column: 29, scope: !3949)
!3960 = !DILocation(line: 2134, column: 57, scope: !3949)
!3961 = !DILocation(line: 2135, column: 7, scope: !3949)
!3962 = !DILocation(line: 2135, column: 17, scope: !3949)
!3963 = !DILocation(line: 2135, column: 28, scope: !3949)
!3964 = !DILocation(line: 2132, column: 8, scope: !3874)
!3965 = !DILocation(line: 2136, column: 28, scope: !3949)
!3966 = !DILocation(line: 2136, column: 38, scope: !3949)
!3967 = !DILocation(line: 2136, column: 47, scope: !3949)
!3968 = !DILocation(line: 2136, column: 55, scope: !3949)
!3969 = !DILocation(line: 2136, column: 7, scope: !3949)
!3970 = !DILocation(line: 2141, column: 8, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2141, column: 8)
!3972 = !DILocation(line: 2141, column: 17, scope: !3971)
!3973 = !DILocation(line: 2141, column: 33, scope: !3971)
!3974 = !DILocation(line: 2141, column: 8, scope: !3874)
!3975 = !DILocalVariable(name: "rgb_error", scope: !3976, file: !1, line: 2143, type: !12)
!3976 = distinct !DILexicalBlock(scope: !3971, file: !1, line: 2142, column: 4)
!3977 = !DILocation(line: 2143, column: 11, scope: !3976)
!3978 = !DILocation(line: 2144, column: 30, scope: !3976)
!3979 = !DILocation(line: 2144, column: 39, scope: !3976)
!3980 = !DILocation(line: 2145, column: 15, scope: !3976)
!3981 = !DILocation(line: 2145, column: 24, scope: !3976)
!3982 = !DILocation(line: 2145, column: 32, scope: !3976)
!3983 = !DILocation(line: 2144, column: 11, scope: !3976)
!3984 = !DILocation(line: 2147, column: 11, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 2147, column: 11)
!3986 = !DILocation(line: 2147, column: 11, scope: !3976)
!3987 = !DILocation(line: 2149, column: 10, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 2148, column: 7)
!3989 = !DILocation(line: 2149, column: 19, scope: !3988)
!3990 = !DILocation(line: 2149, column: 37, scope: !3988)
!3991 = !DILocation(line: 2150, column: 15, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !1, line: 2150, column: 14)
!3993 = !DILocation(line: 2150, column: 24, scope: !3992)
!3994 = !DILocation(line: 2150, column: 40, scope: !3992)
!3995 = !DILocation(line: 2150, column: 59, scope: !3992)
!3996 = !DILocation(line: 2150, column: 14, scope: !3988)
!3997 = !DILocation(line: 2152, column: 25, scope: !3992)
!3998 = !DILocation(line: 2152, column: 13, scope: !3992)
!3999 = !DILocation(line: 2154, column: 15, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3988, file: !1, line: 2154, column: 14)
!4001 = !DILocation(line: 2154, column: 24, scope: !4000)
!4002 = !DILocation(line: 2154, column: 40, scope: !4000)
!4003 = !DILocation(line: 2154, column: 59, scope: !4000)
!4004 = !DILocation(line: 2154, column: 14, scope: !3988)
!4005 = !DILocation(line: 2156, column: 23, scope: !4000)
!4006 = !DILocation(line: 2156, column: 13, scope: !4000)
!4007 = !DILocation(line: 2157, column: 7, scope: !3988)
!4008 = !DILocation(line: 2158, column: 4, scope: !3976)
!4009 = !DILocation(line: 2196, column: 9, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2196, column: 8)
!4011 = !DILocation(line: 2196, column: 18, scope: !4010)
!4012 = !DILocation(line: 2196, column: 34, scope: !4010)
!4013 = !DILocation(line: 2196, column: 53, scope: !4010)
!4014 = !DILocation(line: 2197, column: 10, scope: !4010)
!4015 = !DILocation(line: 2197, column: 19, scope: !4010)
!4016 = !DILocation(line: 2197, column: 24, scope: !4010)
!4017 = !DILocation(line: 2196, column: 8, scope: !3874)
!4018 = !DILocation(line: 2198, column: 26, scope: !4010)
!4019 = !DILocation(line: 2198, column: 36, scope: !4010)
!4020 = !DILocation(line: 2198, column: 45, scope: !4010)
!4021 = !DILocation(line: 2198, column: 53, scope: !4010)
!4022 = !DILocation(line: 2198, column: 7, scope: !4010)
!4023 = !DILocation(line: 2203, column: 8, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2203, column: 8)
!4025 = !DILocation(line: 2203, column: 17, scope: !4024)
!4026 = !DILocation(line: 2203, column: 33, scope: !4024)
!4027 = !DILocation(line: 2203, column: 8, scope: !3874)
!4028 = !DILocation(line: 2204, column: 22, scope: !4024)
!4029 = !DILocation(line: 2204, column: 32, scope: !4024)
!4030 = !DILocation(line: 2204, column: 41, scope: !4024)
!4031 = !DILocation(line: 2204, column: 49, scope: !4024)
!4032 = !DILocation(line: 2204, column: 54, scope: !4024)
!4033 = !DILocation(line: 2204, column: 7, scope: !4024)
!4034 = !DILocation(line: 2208, column: 9, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2208, column: 8)
!4036 = !DILocation(line: 2208, column: 18, scope: !4035)
!4037 = !DILocation(line: 2208, column: 34, scope: !4035)
!4038 = !DILocation(line: 2208, column: 47, scope: !4035)
!4039 = !DILocation(line: 2211, column: 9, scope: !4035)
!4040 = !DILocation(line: 2211, column: 18, scope: !4035)
!4041 = !DILocation(line: 2211, column: 34, scope: !4035)
!4042 = !DILocation(line: 2211, column: 53, scope: !4035)
!4043 = !DILocation(line: 2218, column: 11, scope: !4035)
!4044 = !DILocation(line: 2218, column: 20, scope: !4035)
!4045 = !DILocation(line: 2218, column: 36, scope: !4035)
!4046 = !DILocation(line: 2218, column: 51, scope: !4035)
!4047 = !DILocation(line: 2219, column: 10, scope: !4035)
!4048 = !DILocation(line: 2219, column: 19, scope: !4035)
!4049 = !DILocation(line: 2219, column: 29, scope: !4035)
!4050 = !DILocation(line: 2219, column: 35, scope: !4035)
!4051 = !DILocation(line: 2220, column: 9, scope: !4035)
!4052 = !DILocation(line: 2220, column: 18, scope: !4035)
!4053 = !DILocation(line: 2220, column: 29, scope: !4035)
!4054 = !DILocation(line: 2220, column: 55, scope: !4035)
!4055 = !DILocation(line: 2225, column: 9, scope: !4035)
!4056 = !DILocation(line: 2225, column: 18, scope: !4035)
!4057 = !DILocation(line: 2225, column: 29, scope: !4035)
!4058 = !DILocation(line: 2208, column: 8, scope: !3874)
!4059 = !DILocation(line: 2226, column: 20, scope: !4035)
!4060 = !DILocation(line: 2226, column: 30, scope: !4035)
!4061 = !DILocation(line: 2226, column: 39, scope: !4035)
!4062 = !DILocation(line: 2226, column: 47, scope: !4035)
!4063 = !DILocation(line: 2226, column: 52, scope: !4035)
!4064 = !DILocation(line: 2226, column: 7, scope: !4035)
!4065 = !DILocation(line: 2230, column: 9, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2230, column: 8)
!4067 = !DILocation(line: 2230, column: 18, scope: !4066)
!4068 = !DILocation(line: 2230, column: 34, scope: !4066)
!4069 = !DILocation(line: 2230, column: 53, scope: !4066)
!4070 = !DILocation(line: 2231, column: 8, scope: !4066)
!4071 = !DILocation(line: 2231, column: 17, scope: !4066)
!4072 = !DILocation(line: 2231, column: 33, scope: !4066)
!4073 = !DILocation(line: 2231, column: 48, scope: !4066)
!4074 = !DILocation(line: 2232, column: 8, scope: !4066)
!4075 = !DILocation(line: 2232, column: 18, scope: !4066)
!4076 = !DILocation(line: 2232, column: 29, scope: !4066)
!4077 = !DILocation(line: 2232, column: 57, scope: !4066)
!4078 = !DILocation(line: 2233, column: 7, scope: !4066)
!4079 = !DILocation(line: 2233, column: 17, scope: !4066)
!4080 = !DILocation(line: 2233, column: 28, scope: !4066)
!4081 = !DILocation(line: 2230, column: 8, scope: !3874)
!4082 = !DILocation(line: 2234, column: 28, scope: !4066)
!4083 = !DILocation(line: 2234, column: 38, scope: !4066)
!4084 = !DILocation(line: 2234, column: 47, scope: !4066)
!4085 = !DILocation(line: 2234, column: 55, scope: !4066)
!4086 = !DILocation(line: 2234, column: 7, scope: !4066)
!4087 = !DILocation(line: 2239, column: 9, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2239, column: 8)
!4089 = !DILocation(line: 2239, column: 18, scope: !4088)
!4090 = !DILocation(line: 2239, column: 34, scope: !4088)
!4091 = !DILocation(line: 2239, column: 54, scope: !4088)
!4092 = !DILocation(line: 2240, column: 8, scope: !4088)
!4093 = !DILocation(line: 2240, column: 18, scope: !4088)
!4094 = !DILocation(line: 2240, column: 29, scope: !4088)
!4095 = !DILocation(line: 2239, column: 8, scope: !3874)
!4096 = !DILocation(line: 2241, column: 27, scope: !4088)
!4097 = !DILocation(line: 2241, column: 37, scope: !4088)
!4098 = !DILocation(line: 2241, column: 46, scope: !4088)
!4099 = !DILocation(line: 2241, column: 54, scope: !4088)
!4100 = !DILocation(line: 2241, column: 59, scope: !4088)
!4101 = !DILocation(line: 2241, column: 7, scope: !4088)
!4102 = !DILocation(line: 2245, column: 8, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2245, column: 8)
!4104 = !DILocation(line: 2245, column: 17, scope: !4103)
!4105 = !DILocation(line: 2245, column: 33, scope: !4103)
!4106 = !DILocation(line: 2245, column: 8, scope: !3874)
!4107 = !DILocation(line: 2246, column: 28, scope: !4103)
!4108 = !DILocation(line: 2246, column: 38, scope: !4103)
!4109 = !DILocation(line: 2246, column: 47, scope: !4103)
!4110 = !DILocation(line: 2246, column: 55, scope: !4103)
!4111 = !DILocation(line: 2246, column: 7, scope: !4103)
!4112 = !DILocation(line: 2254, column: 8, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2254, column: 8)
!4114 = !DILocation(line: 2254, column: 17, scope: !4113)
!4115 = !DILocation(line: 2254, column: 33, scope: !4113)
!4116 = !DILocation(line: 2254, column: 8, scope: !3874)
!4117 = !DILocation(line: 2255, column: 19, scope: !4113)
!4118 = !DILocation(line: 2255, column: 29, scope: !4113)
!4119 = !DILocation(line: 2255, column: 38, scope: !4113)
!4120 = !DILocation(line: 2255, column: 46, scope: !4113)
!4121 = !DILocation(line: 2255, column: 7, scope: !4113)
!4122 = !DILocation(line: 2259, column: 8, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2259, column: 8)
!4124 = !DILocation(line: 2259, column: 17, scope: !4123)
!4125 = !DILocation(line: 2259, column: 33, scope: !4123)
!4126 = !DILocation(line: 2259, column: 8, scope: !3874)
!4127 = !DILocation(line: 2261, column: 23, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4123, file: !1, line: 2260, column: 4)
!4129 = !DILocation(line: 2261, column: 33, scope: !4128)
!4130 = !DILocation(line: 2261, column: 42, scope: !4128)
!4131 = !DILocation(line: 2261, column: 50, scope: !4128)
!4132 = !DILocation(line: 2262, column: 11, scope: !4128)
!4133 = !DILocation(line: 2262, column: 20, scope: !4128)
!4134 = !DILocation(line: 2262, column: 36, scope: !4128)
!4135 = !DILocation(line: 2262, column: 45, scope: !4128)
!4136 = !DILocation(line: 2261, column: 7, scope: !4128)
!4137 = !DILocation(line: 2264, column: 11, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4128, file: !1, line: 2264, column: 11)
!4139 = !DILocation(line: 2264, column: 21, scope: !4138)
!4140 = !DILocation(line: 2264, column: 30, scope: !4138)
!4141 = !DILocation(line: 2264, column: 11, scope: !4128)
!4142 = !DILocation(line: 2265, column: 20, scope: !4138)
!4143 = !DILocation(line: 2265, column: 10, scope: !4138)
!4144 = !DILocation(line: 2266, column: 4, scope: !4128)
!4145 = !DILocation(line: 2275, column: 8, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2275, column: 8)
!4147 = !DILocation(line: 2275, column: 17, scope: !4146)
!4148 = !DILocation(line: 2275, column: 33, scope: !4146)
!4149 = !DILocation(line: 2275, column: 8, scope: !3874)
!4150 = !DILocation(line: 2276, column: 24, scope: !4146)
!4151 = !DILocation(line: 2276, column: 34, scope: !4146)
!4152 = !DILocation(line: 2276, column: 43, scope: !4146)
!4153 = !DILocation(line: 2276, column: 51, scope: !4146)
!4154 = !DILocation(line: 2276, column: 7, scope: !4146)
!4155 = !DILocation(line: 2281, column: 9, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2281, column: 8)
!4157 = !DILocation(line: 2281, column: 18, scope: !4156)
!4158 = !DILocation(line: 2281, column: 34, scope: !4156)
!4159 = !DILocation(line: 2281, column: 53, scope: !4156)
!4160 = !DILocation(line: 2282, column: 9, scope: !4156)
!4161 = !DILocation(line: 2282, column: 18, scope: !4156)
!4162 = !DILocation(line: 2282, column: 23, scope: !4156)
!4163 = !DILocation(line: 2281, column: 8, scope: !3874)
!4164 = !DILocation(line: 2283, column: 26, scope: !4156)
!4165 = !DILocation(line: 2283, column: 36, scope: !4156)
!4166 = !DILocation(line: 2283, column: 45, scope: !4156)
!4167 = !DILocation(line: 2283, column: 53, scope: !4156)
!4168 = !DILocation(line: 2283, column: 7, scope: !4156)
!4169 = !DILocation(line: 2287, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2287, column: 8)
!4171 = !DILocation(line: 2287, column: 17, scope: !4170)
!4172 = !DILocation(line: 2287, column: 33, scope: !4170)
!4173 = !DILocation(line: 2287, column: 8, scope: !3874)
!4174 = !DILocation(line: 2288, column: 21, scope: !4170)
!4175 = !DILocation(line: 2288, column: 31, scope: !4170)
!4176 = !DILocation(line: 2288, column: 40, scope: !4170)
!4177 = !DILocation(line: 2288, column: 48, scope: !4170)
!4178 = !DILocation(line: 2288, column: 7, scope: !4170)
!4179 = !DILocation(line: 2292, column: 8, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2292, column: 8)
!4181 = !DILocation(line: 2292, column: 17, scope: !4180)
!4182 = !DILocation(line: 2292, column: 33, scope: !4180)
!4183 = !DILocation(line: 2292, column: 8, scope: !3874)
!4184 = !DILocation(line: 2293, column: 22, scope: !4180)
!4185 = !DILocation(line: 2293, column: 32, scope: !4180)
!4186 = !DILocation(line: 2293, column: 41, scope: !4180)
!4187 = !DILocation(line: 2293, column: 49, scope: !4180)
!4188 = !DILocation(line: 2294, column: 13, scope: !4180)
!4189 = !DILocation(line: 2294, column: 22, scope: !4180)
!4190 = !DILocation(line: 2293, column: 7, scope: !4180)
!4191 = !DILocation(line: 2298, column: 8, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2298, column: 8)
!4193 = !DILocation(line: 2298, column: 17, scope: !4192)
!4194 = !DILocation(line: 2298, column: 33, scope: !4192)
!4195 = !DILocation(line: 2298, column: 8, scope: !3874)
!4196 = !DILocation(line: 2299, column: 21, scope: !4192)
!4197 = !DILocation(line: 2299, column: 31, scope: !4192)
!4198 = !DILocation(line: 2299, column: 40, scope: !4192)
!4199 = !DILocation(line: 2299, column: 48, scope: !4192)
!4200 = !DILocation(line: 2299, column: 7, scope: !4192)
!4201 = !DILocation(line: 2304, column: 8, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2304, column: 8)
!4203 = !DILocation(line: 2304, column: 18, scope: !4202)
!4204 = !DILocation(line: 2304, column: 29, scope: !4202)
!4205 = !DILocation(line: 2304, column: 8, scope: !3874)
!4206 = !DILocation(line: 2305, column: 36, scope: !4202)
!4207 = !DILocation(line: 2305, column: 45, scope: !4202)
!4208 = !DILocation(line: 2305, column: 7, scope: !4202)
!4209 = !DILocation(line: 2309, column: 8, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2309, column: 8)
!4211 = !DILocation(line: 2309, column: 17, scope: !4210)
!4212 = !DILocation(line: 2309, column: 33, scope: !4210)
!4213 = !DILocation(line: 2309, column: 8, scope: !3874)
!4214 = !DILocation(line: 2310, column: 18, scope: !4210)
!4215 = !DILocation(line: 2310, column: 28, scope: !4210)
!4216 = !DILocation(line: 2310, column: 37, scope: !4210)
!4217 = !DILocation(line: 2310, column: 45, scope: !4210)
!4218 = !DILocation(line: 2310, column: 7, scope: !4210)
!4219 = !DILocation(line: 2314, column: 8, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2314, column: 8)
!4221 = !DILocation(line: 2314, column: 17, scope: !4220)
!4222 = !DILocation(line: 2314, column: 33, scope: !4220)
!4223 = !DILocation(line: 2314, column: 8, scope: !3874)
!4224 = !DILocation(line: 2315, column: 23, scope: !4220)
!4225 = !DILocation(line: 2315, column: 33, scope: !4220)
!4226 = !DILocation(line: 2315, column: 42, scope: !4220)
!4227 = !DILocation(line: 2315, column: 50, scope: !4220)
!4228 = !DILocation(line: 2315, column: 7, scope: !4220)
!4229 = !DILocation(line: 2319, column: 8, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2319, column: 8)
!4231 = !DILocation(line: 2319, column: 17, scope: !4230)
!4232 = !DILocation(line: 2319, column: 33, scope: !4230)
!4233 = !DILocation(line: 2319, column: 8, scope: !3874)
!4234 = !DILocation(line: 2320, column: 26, scope: !4230)
!4235 = !DILocation(line: 2320, column: 36, scope: !4230)
!4236 = !DILocation(line: 2320, column: 45, scope: !4230)
!4237 = !DILocation(line: 2320, column: 53, scope: !4230)
!4238 = !DILocation(line: 2321, column: 24, scope: !4230)
!4239 = !DILocation(line: 2321, column: 33, scope: !4230)
!4240 = !DILocation(line: 2321, column: 11, scope: !4230)
!4241 = !DILocation(line: 2321, column: 41, scope: !4230)
!4242 = !DILocation(line: 2321, column: 50, scope: !4230)
!4243 = !DILocation(line: 2320, column: 7, scope: !4230)
!4244 = !DILocation(line: 2325, column: 8, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2325, column: 8)
!4246 = !DILocation(line: 2325, column: 17, scope: !4245)
!4247 = !DILocation(line: 2325, column: 33, scope: !4245)
!4248 = !DILocation(line: 2325, column: 8, scope: !3874)
!4249 = !DILocation(line: 2326, column: 32, scope: !4245)
!4250 = !DILocation(line: 2326, column: 42, scope: !4245)
!4251 = !DILocation(line: 2326, column: 51, scope: !4245)
!4252 = !DILocation(line: 2326, column: 59, scope: !4245)
!4253 = !DILocation(line: 2326, column: 7, scope: !4245)
!4254 = !DILocation(line: 2330, column: 8, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2330, column: 8)
!4256 = !DILocation(line: 2330, column: 17, scope: !4255)
!4257 = !DILocation(line: 2330, column: 33, scope: !4255)
!4258 = !DILocation(line: 2330, column: 8, scope: !3874)
!4259 = !DILocation(line: 2331, column: 30, scope: !4255)
!4260 = !DILocation(line: 2331, column: 40, scope: !4255)
!4261 = !DILocation(line: 2331, column: 49, scope: !4255)
!4262 = !DILocation(line: 2331, column: 57, scope: !4255)
!4263 = !DILocation(line: 2331, column: 7, scope: !4255)
!4264 = !DILocation(line: 2336, column: 8, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2336, column: 8)
!4266 = !DILocation(line: 2336, column: 17, scope: !4265)
!4267 = !DILocation(line: 2336, column: 33, scope: !4265)
!4268 = !DILocation(line: 2336, column: 8, scope: !3874)
!4269 = !DILocation(line: 2337, column: 19, scope: !4265)
!4270 = !DILocation(line: 2337, column: 29, scope: !4265)
!4271 = !DILocation(line: 2337, column: 38, scope: !4265)
!4272 = !DILocation(line: 2337, column: 46, scope: !4265)
!4273 = !DILocation(line: 2337, column: 7, scope: !4265)
!4274 = !DILocation(line: 2342, column: 8, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2342, column: 8)
!4276 = !DILocation(line: 2342, column: 17, scope: !4275)
!4277 = !DILocation(line: 2342, column: 33, scope: !4275)
!4278 = !DILocation(line: 2342, column: 8, scope: !3874)
!4279 = !DILocation(line: 2344, column: 11, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 2344, column: 11)
!4281 = distinct !DILexicalBlock(scope: !4275, file: !1, line: 2343, column: 5)
!4282 = !DILocation(line: 2344, column: 20, scope: !4280)
!4283 = !DILocation(line: 2344, column: 43, scope: !4280)
!4284 = !DILocation(line: 2344, column: 11, scope: !4281)
!4285 = !DILocation(line: 2345, column: 13, scope: !4280)
!4286 = !DILocation(line: 2345, column: 22, scope: !4280)
!4287 = !DILocation(line: 2346, column: 15, scope: !4280)
!4288 = !DILocation(line: 2347, column: 14, scope: !4280)
!4289 = !DILocation(line: 2354, column: 14, scope: !4280)
!4290 = !DILocation(line: 2354, column: 23, scope: !4280)
!4291 = !DILocation(line: 2354, column: 31, scope: !4280)
!4292 = !DILocation(line: 2345, column: 10, scope: !4280)
!4293 = !DILocation(line: 2356, column: 11, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 2356, column: 11)
!4295 = !DILocation(line: 2356, column: 20, scope: !4294)
!4296 = !DILocation(line: 2356, column: 11, scope: !4281)
!4297 = !DILocation(line: 2357, column: 32, scope: !4294)
!4298 = !DILocation(line: 2357, column: 41, scope: !4294)
!4299 = !DILocation(line: 2357, column: 10, scope: !4294)
!4300 = !DILocation(line: 2357, column: 20, scope: !4294)
!4301 = !DILocation(line: 2357, column: 30, scope: !4294)
!4302 = !DILocation(line: 2359, column: 11, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 2359, column: 11)
!4304 = !DILocation(line: 2359, column: 20, scope: !4303)
!4305 = !DILocation(line: 2359, column: 11, scope: !4281)
!4306 = !DILocation(line: 2360, column: 31, scope: !4303)
!4307 = !DILocation(line: 2360, column: 40, scope: !4303)
!4308 = !DILocation(line: 2360, column: 10, scope: !4303)
!4309 = !DILocation(line: 2360, column: 20, scope: !4303)
!4310 = !DILocation(line: 2360, column: 29, scope: !4303)
!4311 = !DILocation(line: 2362, column: 42, scope: !4281)
!4312 = !DILocation(line: 2362, column: 52, scope: !4281)
!4313 = !DILocation(line: 2363, column: 11, scope: !4281)
!4314 = !DILocation(line: 2363, column: 21, scope: !4281)
!4315 = !DILocation(line: 2362, column: 62, scope: !4281)
!4316 = !DILocation(line: 2362, column: 31, scope: !4281)
!4317 = !DILocation(line: 2362, column: 7, scope: !4281)
!4318 = !DILocation(line: 2362, column: 17, scope: !4281)
!4319 = !DILocation(line: 2362, column: 29, scope: !4281)
!4320 = !DILocation(line: 2365, column: 28, scope: !4281)
!4321 = !DILocation(line: 2365, column: 7, scope: !4281)
!4322 = !DILocation(line: 2365, column: 17, scope: !4281)
!4323 = !DILocation(line: 2365, column: 26, scope: !4281)
!4324 = !DILocation(line: 2366, column: 4, scope: !4281)
!4325 = !DILocation(line: 2368, column: 1, scope: !3874)
!4326 = distinct !DISubprogram(name: "png_do_expand_palette", scope: !1, file: !1, line: 4465, type: !4327, scopeLine: 4467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !101, !8, !4329, !477, !12}
!4329 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_colorp", file: !40, line: 560, baseType: !4330)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!4332 = !DILocalVariable(name: "row_info", arg: 1, scope: !4326, file: !1, line: 4465, type: !101)
!4333 = !DILocation(line: 4465, column: 37, scope: !4326)
!4334 = !DILocalVariable(name: "row", arg: 2, scope: !4326, file: !1, line: 4465, type: !8)
!4335 = !DILocation(line: 4465, column: 57, scope: !4326)
!4336 = !DILocalVariable(name: "palette", arg: 3, scope: !4326, file: !1, line: 4466, type: !4329)
!4337 = !DILocation(line: 4466, column: 21, scope: !4326)
!4338 = !DILocalVariable(name: "trans_alpha", arg: 4, scope: !4326, file: !1, line: 4466, type: !477)
!4339 = !DILocation(line: 4466, column: 46, scope: !4326)
!4340 = !DILocalVariable(name: "num_trans", arg: 5, scope: !4326, file: !1, line: 4466, type: !12)
!4341 = !DILocation(line: 4466, column: 63, scope: !4326)
!4342 = !DILocalVariable(name: "shift", scope: !4326, file: !1, line: 4468, type: !12)
!4343 = !DILocation(line: 4468, column: 8, scope: !4326)
!4344 = !DILocalVariable(name: "value", scope: !4326, file: !1, line: 4468, type: !12)
!4345 = !DILocation(line: 4468, column: 15, scope: !4326)
!4346 = !DILocalVariable(name: "sp", scope: !4326, file: !1, line: 4469, type: !8)
!4347 = !DILocation(line: 4469, column: 14, scope: !4326)
!4348 = !DILocalVariable(name: "dp", scope: !4326, file: !1, line: 4469, type: !8)
!4349 = !DILocation(line: 4469, column: 18, scope: !4326)
!4350 = !DILocalVariable(name: "i", scope: !4326, file: !1, line: 4470, type: !10)
!4351 = !DILocation(line: 4470, column: 16, scope: !4326)
!4352 = !DILocalVariable(name: "row_width", scope: !4326, file: !1, line: 4471, type: !10)
!4353 = !DILocation(line: 4471, column: 16, scope: !4326)
!4354 = !DILocation(line: 4471, column: 26, scope: !4326)
!4355 = !DILocation(line: 4471, column: 36, scope: !4326)
!4356 = !DILocation(line: 4475, column: 8, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 4475, column: 8)
!4358 = !DILocation(line: 4475, column: 18, scope: !4357)
!4359 = !DILocation(line: 4475, column: 29, scope: !4357)
!4360 = !DILocation(line: 4475, column: 8, scope: !4326)
!4361 = !DILocation(line: 4477, column: 11, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 4477, column: 11)
!4363 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 4476, column: 4)
!4364 = !DILocation(line: 4477, column: 21, scope: !4362)
!4365 = !DILocation(line: 4477, column: 31, scope: !4362)
!4366 = !DILocation(line: 4477, column: 11, scope: !4363)
!4367 = !DILocation(line: 4479, column: 18, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4362, file: !1, line: 4478, column: 7)
!4369 = !DILocation(line: 4479, column: 28, scope: !4368)
!4370 = !DILocation(line: 4479, column: 10, scope: !4368)
!4371 = !DILocation(line: 4483, column: 21, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 4482, column: 13)
!4373 = distinct !DILexicalBlock(scope: !4368, file: !1, line: 4480, column: 10)
!4374 = !DILocation(line: 4483, column: 41, scope: !4372)
!4375 = !DILocation(line: 4483, column: 51, scope: !4372)
!4376 = !DILocation(line: 4483, column: 56, scope: !4372)
!4377 = !DILocation(line: 4483, column: 27, scope: !4372)
!4378 = !DILocation(line: 4483, column: 25, scope: !4372)
!4379 = !DILocation(line: 4483, column: 19, scope: !4372)
!4380 = !DILocation(line: 4484, column: 21, scope: !4372)
!4381 = !DILocation(line: 4484, column: 39, scope: !4372)
!4382 = !DILocation(line: 4484, column: 27, scope: !4372)
!4383 = !DILocation(line: 4484, column: 25, scope: !4372)
!4384 = !DILocation(line: 4484, column: 49, scope: !4372)
!4385 = !DILocation(line: 4484, column: 19, scope: !4372)
!4386 = !DILocation(line: 4485, column: 35, scope: !4372)
!4387 = !DILocation(line: 4485, column: 45, scope: !4372)
!4388 = !DILocation(line: 4485, column: 50, scope: !4372)
!4389 = !DILocation(line: 4485, column: 26, scope: !4372)
!4390 = !DILocation(line: 4485, column: 22, scope: !4372)
!4391 = !DILocation(line: 4486, column: 23, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4372, file: !1, line: 4486, column: 16)
!4393 = !DILocation(line: 4486, column: 21, scope: !4392)
!4394 = !DILocation(line: 4486, column: 28, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 4486, column: 16)
!4396 = !DILocation(line: 4486, column: 32, scope: !4395)
!4397 = !DILocation(line: 4486, column: 30, scope: !4395)
!4398 = !DILocation(line: 4486, column: 16, scope: !4392)
!4399 = !DILocation(line: 4488, column: 25, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !1, line: 4488, column: 23)
!4401 = distinct !DILexicalBlock(scope: !4395, file: !1, line: 4487, column: 16)
!4402 = !DILocation(line: 4488, column: 24, scope: !4400)
!4403 = !DILocation(line: 4488, column: 31, scope: !4400)
!4404 = !DILocation(line: 4488, column: 28, scope: !4400)
!4405 = !DILocation(line: 4488, column: 38, scope: !4400)
!4406 = !DILocation(line: 4488, column: 23, scope: !4401)
!4407 = !DILocation(line: 4489, column: 23, scope: !4400)
!4408 = !DILocation(line: 4489, column: 26, scope: !4400)
!4409 = !DILocation(line: 4489, column: 22, scope: !4400)
!4410 = !DILocation(line: 4492, column: 23, scope: !4400)
!4411 = !DILocation(line: 4492, column: 26, scope: !4400)
!4412 = !DILocation(line: 4494, column: 23, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4401, file: !1, line: 4494, column: 23)
!4414 = !DILocation(line: 4494, column: 29, scope: !4413)
!4415 = !DILocation(line: 4494, column: 23, scope: !4401)
!4416 = !DILocation(line: 4496, column: 28, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4413, file: !1, line: 4495, column: 19)
!4418 = !DILocation(line: 4497, column: 24, scope: !4417)
!4419 = !DILocation(line: 4498, column: 19, scope: !4417)
!4420 = !DILocation(line: 4501, column: 27, scope: !4413)
!4421 = !DILocation(line: 4503, column: 21, scope: !4401)
!4422 = !DILocation(line: 4504, column: 16, scope: !4401)
!4423 = !DILocation(line: 4486, column: 44, scope: !4395)
!4424 = !DILocation(line: 4486, column: 16, scope: !4395)
!4425 = distinct !{!4425, !4398, !4426}
!4426 = !DILocation(line: 4504, column: 16, scope: !4392)
!4427 = !DILocation(line: 4505, column: 16, scope: !4372)
!4428 = !DILocation(line: 4510, column: 21, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 4509, column: 13)
!4430 = !DILocation(line: 4510, column: 41, scope: !4429)
!4431 = !DILocation(line: 4510, column: 51, scope: !4429)
!4432 = !DILocation(line: 4510, column: 56, scope: !4429)
!4433 = !DILocation(line: 4510, column: 27, scope: !4429)
!4434 = !DILocation(line: 4510, column: 25, scope: !4429)
!4435 = !DILocation(line: 4510, column: 19, scope: !4429)
!4436 = !DILocation(line: 4511, column: 21, scope: !4429)
!4437 = !DILocation(line: 4511, column: 39, scope: !4429)
!4438 = !DILocation(line: 4511, column: 27, scope: !4429)
!4439 = !DILocation(line: 4511, column: 25, scope: !4429)
!4440 = !DILocation(line: 4511, column: 49, scope: !4429)
!4441 = !DILocation(line: 4511, column: 19, scope: !4429)
!4442 = !DILocation(line: 4512, column: 37, scope: !4429)
!4443 = !DILocation(line: 4512, column: 47, scope: !4429)
!4444 = !DILocation(line: 4512, column: 52, scope: !4429)
!4445 = !DILocation(line: 4512, column: 33, scope: !4429)
!4446 = !DILocation(line: 4512, column: 61, scope: !4429)
!4447 = !DILocation(line: 4512, column: 22, scope: !4429)
!4448 = !DILocation(line: 4513, column: 23, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 4513, column: 16)
!4450 = !DILocation(line: 4513, column: 21, scope: !4449)
!4451 = !DILocation(line: 4513, column: 28, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4449, file: !1, line: 4513, column: 16)
!4453 = !DILocation(line: 4513, column: 32, scope: !4452)
!4454 = !DILocation(line: 4513, column: 30, scope: !4452)
!4455 = !DILocation(line: 4513, column: 16, scope: !4449)
!4456 = !DILocation(line: 4515, column: 29, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !1, line: 4514, column: 16)
!4458 = !DILocation(line: 4515, column: 28, scope: !4457)
!4459 = !DILocation(line: 4515, column: 35, scope: !4457)
!4460 = !DILocation(line: 4515, column: 32, scope: !4457)
!4461 = !DILocation(line: 4515, column: 42, scope: !4457)
!4462 = !DILocation(line: 4515, column: 25, scope: !4457)
!4463 = !DILocation(line: 4516, column: 35, scope: !4457)
!4464 = !DILocation(line: 4516, column: 25, scope: !4457)
!4465 = !DILocation(line: 4516, column: 20, scope: !4457)
!4466 = !DILocation(line: 4516, column: 23, scope: !4457)
!4467 = !DILocation(line: 4517, column: 23, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4457, file: !1, line: 4517, column: 23)
!4469 = !DILocation(line: 4517, column: 29, scope: !4468)
!4470 = !DILocation(line: 4517, column: 23, scope: !4457)
!4471 = !DILocation(line: 4519, column: 28, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4468, file: !1, line: 4518, column: 19)
!4473 = !DILocation(line: 4520, column: 24, scope: !4472)
!4474 = !DILocation(line: 4521, column: 19, scope: !4472)
!4475 = !DILocation(line: 4524, column: 28, scope: !4468)
!4476 = !DILocation(line: 4526, column: 21, scope: !4457)
!4477 = !DILocation(line: 4527, column: 16, scope: !4457)
!4478 = !DILocation(line: 4513, column: 44, scope: !4452)
!4479 = !DILocation(line: 4513, column: 16, scope: !4452)
!4480 = distinct !{!4480, !4455, !4481}
!4481 = !DILocation(line: 4527, column: 16, scope: !4449)
!4482 = !DILocation(line: 4528, column: 16, scope: !4429)
!4483 = !DILocation(line: 4533, column: 21, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 4532, column: 13)
!4485 = !DILocation(line: 4533, column: 41, scope: !4484)
!4486 = !DILocation(line: 4533, column: 51, scope: !4484)
!4487 = !DILocation(line: 4533, column: 56, scope: !4484)
!4488 = !DILocation(line: 4533, column: 27, scope: !4484)
!4489 = !DILocation(line: 4533, column: 25, scope: !4484)
!4490 = !DILocation(line: 4533, column: 19, scope: !4484)
!4491 = !DILocation(line: 4534, column: 21, scope: !4484)
!4492 = !DILocation(line: 4534, column: 39, scope: !4484)
!4493 = !DILocation(line: 4534, column: 27, scope: !4484)
!4494 = !DILocation(line: 4534, column: 25, scope: !4484)
!4495 = !DILocation(line: 4534, column: 49, scope: !4484)
!4496 = !DILocation(line: 4534, column: 19, scope: !4484)
!4497 = !DILocation(line: 4535, column: 31, scope: !4484)
!4498 = !DILocation(line: 4535, column: 41, scope: !4484)
!4499 = !DILocation(line: 4535, column: 49, scope: !4484)
!4500 = !DILocation(line: 4535, column: 22, scope: !4484)
!4501 = !DILocation(line: 4536, column: 23, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4484, file: !1, line: 4536, column: 16)
!4503 = !DILocation(line: 4536, column: 21, scope: !4502)
!4504 = !DILocation(line: 4536, column: 28, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !1, line: 4536, column: 16)
!4506 = !DILocation(line: 4536, column: 32, scope: !4505)
!4507 = !DILocation(line: 4536, column: 30, scope: !4505)
!4508 = !DILocation(line: 4536, column: 16, scope: !4502)
!4509 = !DILocation(line: 4538, column: 29, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !1, line: 4537, column: 16)
!4511 = !DILocation(line: 4538, column: 28, scope: !4510)
!4512 = !DILocation(line: 4538, column: 35, scope: !4510)
!4513 = !DILocation(line: 4538, column: 32, scope: !4510)
!4514 = !DILocation(line: 4538, column: 42, scope: !4510)
!4515 = !DILocation(line: 4538, column: 25, scope: !4510)
!4516 = !DILocation(line: 4539, column: 35, scope: !4510)
!4517 = !DILocation(line: 4539, column: 25, scope: !4510)
!4518 = !DILocation(line: 4539, column: 20, scope: !4510)
!4519 = !DILocation(line: 4539, column: 23, scope: !4510)
!4520 = !DILocation(line: 4540, column: 23, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4510, file: !1, line: 4540, column: 23)
!4522 = !DILocation(line: 4540, column: 29, scope: !4521)
!4523 = !DILocation(line: 4540, column: 23, scope: !4510)
!4524 = !DILocation(line: 4542, column: 28, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4521, file: !1, line: 4541, column: 19)
!4526 = !DILocation(line: 4543, column: 24, scope: !4525)
!4527 = !DILocation(line: 4544, column: 19, scope: !4525)
!4528 = !DILocation(line: 4547, column: 28, scope: !4521)
!4529 = !DILocation(line: 4549, column: 21, scope: !4510)
!4530 = !DILocation(line: 4550, column: 16, scope: !4510)
!4531 = !DILocation(line: 4536, column: 44, scope: !4505)
!4532 = !DILocation(line: 4536, column: 16, scope: !4505)
!4533 = distinct !{!4533, !4508, !4534}
!4534 = !DILocation(line: 4550, column: 16, scope: !4502)
!4535 = !DILocation(line: 4551, column: 16, scope: !4484)
!4536 = !DILocation(line: 4555, column: 16, scope: !4373)
!4537 = !DILocation(line: 4557, column: 10, scope: !4368)
!4538 = !DILocation(line: 4557, column: 20, scope: !4368)
!4539 = !DILocation(line: 4557, column: 30, scope: !4368)
!4540 = !DILocation(line: 4558, column: 10, scope: !4368)
!4541 = !DILocation(line: 4558, column: 20, scope: !4368)
!4542 = !DILocation(line: 4558, column: 32, scope: !4368)
!4543 = !DILocation(line: 4559, column: 31, scope: !4368)
!4544 = !DILocation(line: 4559, column: 10, scope: !4368)
!4545 = !DILocation(line: 4559, column: 20, scope: !4368)
!4546 = !DILocation(line: 4559, column: 29, scope: !4368)
!4547 = !DILocation(line: 4560, column: 7, scope: !4368)
!4548 = !DILocation(line: 4562, column: 11, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 4562, column: 11)
!4550 = !DILocation(line: 4562, column: 21, scope: !4549)
!4551 = !DILocation(line: 4562, column: 31, scope: !4549)
!4552 = !DILocation(line: 4562, column: 11, scope: !4363)
!4553 = !DILocation(line: 4565, column: 17, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !1, line: 4565, column: 17)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !1, line: 4564, column: 10)
!4556 = distinct !DILexicalBlock(scope: !4549, file: !1, line: 4563, column: 7)
!4557 = !DILocation(line: 4565, column: 27, scope: !4554)
!4558 = !DILocation(line: 4565, column: 17, scope: !4555)
!4559 = !DILocation(line: 4567, column: 21, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 4566, column: 13)
!4561 = !DILocation(line: 4567, column: 39, scope: !4560)
!4562 = !DILocation(line: 4567, column: 27, scope: !4560)
!4563 = !DILocation(line: 4567, column: 25, scope: !4560)
!4564 = !DILocation(line: 4567, column: 49, scope: !4560)
!4565 = !DILocation(line: 4567, column: 19, scope: !4560)
!4566 = !DILocation(line: 4568, column: 21, scope: !4560)
!4567 = !DILocation(line: 4568, column: 40, scope: !4560)
!4568 = !DILocation(line: 4568, column: 50, scope: !4560)
!4569 = !DILocation(line: 4568, column: 27, scope: !4560)
!4570 = !DILocation(line: 4568, column: 25, scope: !4560)
!4571 = !DILocation(line: 4568, column: 56, scope: !4560)
!4572 = !DILocation(line: 4568, column: 19, scope: !4560)
!4573 = !DILocation(line: 4570, column: 23, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 4570, column: 16)
!4575 = !DILocation(line: 4570, column: 21, scope: !4574)
!4576 = !DILocation(line: 4570, column: 28, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 4570, column: 16)
!4578 = !DILocation(line: 4570, column: 32, scope: !4577)
!4579 = !DILocation(line: 4570, column: 30, scope: !4577)
!4580 = !DILocation(line: 4570, column: 16, scope: !4574)
!4581 = !DILocation(line: 4572, column: 30, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !1, line: 4572, column: 23)
!4583 = distinct !DILexicalBlock(scope: !4577, file: !1, line: 4571, column: 16)
!4584 = !DILocation(line: 4572, column: 29, scope: !4582)
!4585 = !DILocation(line: 4572, column: 23, scope: !4582)
!4586 = !DILocation(line: 4572, column: 37, scope: !4582)
!4587 = !DILocation(line: 4572, column: 34, scope: !4582)
!4588 = !DILocation(line: 4572, column: 23, scope: !4583)
!4589 = !DILocation(line: 4573, column: 25, scope: !4582)
!4590 = !DILocation(line: 4573, column: 28, scope: !4582)
!4591 = !DILocation(line: 4573, column: 22, scope: !4582)
!4592 = !DILocation(line: 4576, column: 30, scope: !4582)
!4593 = !DILocation(line: 4576, column: 43, scope: !4582)
!4594 = !DILocation(line: 4576, column: 42, scope: !4582)
!4595 = !DILocation(line: 4576, column: 25, scope: !4582)
!4596 = !DILocation(line: 4576, column: 28, scope: !4582)
!4597 = !DILocation(line: 4578, column: 27, scope: !4583)
!4598 = !DILocation(line: 4578, column: 36, scope: !4583)
!4599 = !DILocation(line: 4578, column: 35, scope: !4583)
!4600 = !DILocation(line: 4578, column: 40, scope: !4583)
!4601 = !DILocation(line: 4578, column: 22, scope: !4583)
!4602 = !DILocation(line: 4578, column: 25, scope: !4583)
!4603 = !DILocation(line: 4579, column: 27, scope: !4583)
!4604 = !DILocation(line: 4579, column: 36, scope: !4583)
!4605 = !DILocation(line: 4579, column: 35, scope: !4583)
!4606 = !DILocation(line: 4579, column: 40, scope: !4583)
!4607 = !DILocation(line: 4579, column: 22, scope: !4583)
!4608 = !DILocation(line: 4579, column: 25, scope: !4583)
!4609 = !DILocation(line: 4580, column: 27, scope: !4583)
!4610 = !DILocation(line: 4580, column: 36, scope: !4583)
!4611 = !DILocation(line: 4580, column: 35, scope: !4583)
!4612 = !DILocation(line: 4580, column: 40, scope: !4583)
!4613 = !DILocation(line: 4580, column: 22, scope: !4583)
!4614 = !DILocation(line: 4580, column: 25, scope: !4583)
!4615 = !DILocation(line: 4581, column: 21, scope: !4583)
!4616 = !DILocation(line: 4582, column: 16, scope: !4583)
!4617 = !DILocation(line: 4570, column: 44, scope: !4577)
!4618 = !DILocation(line: 4570, column: 16, scope: !4577)
!4619 = distinct !{!4619, !4580, !4620}
!4620 = !DILocation(line: 4582, column: 16, scope: !4574)
!4621 = !DILocation(line: 4583, column: 16, scope: !4560)
!4622 = !DILocation(line: 4583, column: 26, scope: !4560)
!4623 = !DILocation(line: 4583, column: 36, scope: !4560)
!4624 = !DILocation(line: 4584, column: 16, scope: !4560)
!4625 = !DILocation(line: 4584, column: 26, scope: !4560)
!4626 = !DILocation(line: 4584, column: 38, scope: !4560)
!4627 = !DILocation(line: 4585, column: 37, scope: !4560)
!4628 = !DILocation(line: 4585, column: 47, scope: !4560)
!4629 = !DILocation(line: 4585, column: 16, scope: !4560)
!4630 = !DILocation(line: 4585, column: 26, scope: !4560)
!4631 = !DILocation(line: 4585, column: 35, scope: !4560)
!4632 = !DILocation(line: 4586, column: 16, scope: !4560)
!4633 = !DILocation(line: 4586, column: 26, scope: !4560)
!4634 = !DILocation(line: 4586, column: 37, scope: !4560)
!4635 = !DILocation(line: 4587, column: 16, scope: !4560)
!4636 = !DILocation(line: 4587, column: 26, scope: !4560)
!4637 = !DILocation(line: 4587, column: 35, scope: !4560)
!4638 = !DILocation(line: 4588, column: 13, scope: !4560)
!4639 = !DILocation(line: 4592, column: 21, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 4591, column: 13)
!4641 = !DILocation(line: 4592, column: 39, scope: !4640)
!4642 = !DILocation(line: 4592, column: 27, scope: !4640)
!4643 = !DILocation(line: 4592, column: 25, scope: !4640)
!4644 = !DILocation(line: 4592, column: 49, scope: !4640)
!4645 = !DILocation(line: 4592, column: 19, scope: !4640)
!4646 = !DILocation(line: 4593, column: 21, scope: !4640)
!4647 = !DILocation(line: 4593, column: 40, scope: !4640)
!4648 = !DILocation(line: 4593, column: 50, scope: !4640)
!4649 = !DILocation(line: 4593, column: 27, scope: !4640)
!4650 = !DILocation(line: 4593, column: 25, scope: !4640)
!4651 = !DILocation(line: 4593, column: 55, scope: !4640)
!4652 = !DILocation(line: 4593, column: 19, scope: !4640)
!4653 = !DILocation(line: 4595, column: 23, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4640, file: !1, line: 4595, column: 16)
!4655 = !DILocation(line: 4595, column: 21, scope: !4654)
!4656 = !DILocation(line: 4595, column: 28, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !1, line: 4595, column: 16)
!4658 = !DILocation(line: 4595, column: 32, scope: !4657)
!4659 = !DILocation(line: 4595, column: 30, scope: !4657)
!4660 = !DILocation(line: 4595, column: 16, scope: !4654)
!4661 = !DILocation(line: 4597, column: 27, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 4596, column: 16)
!4663 = !DILocation(line: 4597, column: 36, scope: !4662)
!4664 = !DILocation(line: 4597, column: 35, scope: !4662)
!4665 = !DILocation(line: 4597, column: 40, scope: !4662)
!4666 = !DILocation(line: 4597, column: 22, scope: !4662)
!4667 = !DILocation(line: 4597, column: 25, scope: !4662)
!4668 = !DILocation(line: 4598, column: 27, scope: !4662)
!4669 = !DILocation(line: 4598, column: 36, scope: !4662)
!4670 = !DILocation(line: 4598, column: 35, scope: !4662)
!4671 = !DILocation(line: 4598, column: 40, scope: !4662)
!4672 = !DILocation(line: 4598, column: 22, scope: !4662)
!4673 = !DILocation(line: 4598, column: 25, scope: !4662)
!4674 = !DILocation(line: 4599, column: 27, scope: !4662)
!4675 = !DILocation(line: 4599, column: 36, scope: !4662)
!4676 = !DILocation(line: 4599, column: 35, scope: !4662)
!4677 = !DILocation(line: 4599, column: 40, scope: !4662)
!4678 = !DILocation(line: 4599, column: 22, scope: !4662)
!4679 = !DILocation(line: 4599, column: 25, scope: !4662)
!4680 = !DILocation(line: 4600, column: 21, scope: !4662)
!4681 = !DILocation(line: 4601, column: 16, scope: !4662)
!4682 = !DILocation(line: 4595, column: 44, scope: !4657)
!4683 = !DILocation(line: 4595, column: 16, scope: !4657)
!4684 = distinct !{!4684, !4660, !4685}
!4685 = !DILocation(line: 4601, column: 16, scope: !4654)
!4686 = !DILocation(line: 4603, column: 16, scope: !4640)
!4687 = !DILocation(line: 4603, column: 26, scope: !4640)
!4688 = !DILocation(line: 4603, column: 36, scope: !4640)
!4689 = !DILocation(line: 4604, column: 16, scope: !4640)
!4690 = !DILocation(line: 4604, column: 26, scope: !4640)
!4691 = !DILocation(line: 4604, column: 38, scope: !4640)
!4692 = !DILocation(line: 4605, column: 37, scope: !4640)
!4693 = !DILocation(line: 4605, column: 47, scope: !4640)
!4694 = !DILocation(line: 4605, column: 16, scope: !4640)
!4695 = !DILocation(line: 4605, column: 26, scope: !4640)
!4696 = !DILocation(line: 4605, column: 35, scope: !4640)
!4697 = !DILocation(line: 4606, column: 16, scope: !4640)
!4698 = !DILocation(line: 4606, column: 26, scope: !4640)
!4699 = !DILocation(line: 4606, column: 37, scope: !4640)
!4700 = !DILocation(line: 4607, column: 16, scope: !4640)
!4701 = !DILocation(line: 4607, column: 26, scope: !4640)
!4702 = !DILocation(line: 4607, column: 35, scope: !4640)
!4703 = !DILocation(line: 4610, column: 7, scope: !4556)
!4704 = !DILocation(line: 4611, column: 4, scope: !4363)
!4705 = !DILocation(line: 4612, column: 1, scope: !4326)
!4706 = distinct !DISubprogram(name: "png_do_expand", scope: !1, file: !1, line: 4618, type: !4707, scopeLine: 4620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{null, !101, !8, !550}
!4709 = !DILocalVariable(name: "row_info", arg: 1, scope: !4706, file: !1, line: 4618, type: !101)
!4710 = !DILocation(line: 4618, column: 29, scope: !4706)
!4711 = !DILocalVariable(name: "row", arg: 2, scope: !4706, file: !1, line: 4618, type: !8)
!4712 = !DILocation(line: 4618, column: 49, scope: !4706)
!4713 = !DILocalVariable(name: "trans_color", arg: 3, scope: !4706, file: !1, line: 4619, type: !550)
!4714 = !DILocation(line: 4619, column: 25, scope: !4706)
!4715 = !DILocalVariable(name: "shift", scope: !4706, file: !1, line: 4621, type: !12)
!4716 = !DILocation(line: 4621, column: 8, scope: !4706)
!4717 = !DILocalVariable(name: "value", scope: !4706, file: !1, line: 4621, type: !12)
!4718 = !DILocation(line: 4621, column: 15, scope: !4706)
!4719 = !DILocalVariable(name: "sp", scope: !4706, file: !1, line: 4622, type: !8)
!4720 = !DILocation(line: 4622, column: 14, scope: !4706)
!4721 = !DILocalVariable(name: "dp", scope: !4706, file: !1, line: 4622, type: !8)
!4722 = !DILocation(line: 4622, column: 18, scope: !4706)
!4723 = !DILocalVariable(name: "i", scope: !4706, file: !1, line: 4623, type: !10)
!4724 = !DILocation(line: 4623, column: 16, scope: !4706)
!4725 = !DILocalVariable(name: "row_width", scope: !4706, file: !1, line: 4624, type: !10)
!4726 = !DILocation(line: 4624, column: 16, scope: !4706)
!4727 = !DILocation(line: 4624, column: 26, scope: !4706)
!4728 = !DILocation(line: 4624, column: 36, scope: !4706)
!4729 = !DILocation(line: 4629, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !1, line: 4629, column: 11)
!4731 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 4628, column: 4)
!4732 = !DILocation(line: 4629, column: 21, scope: !4730)
!4733 = !DILocation(line: 4629, column: 32, scope: !4730)
!4734 = !DILocation(line: 4629, column: 11, scope: !4731)
!4735 = !DILocalVariable(name: "gray", scope: !4736, file: !1, line: 4631, type: !24)
!4736 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 4630, column: 7)
!4737 = !DILocation(line: 4631, column: 22, scope: !4736)
!4738 = !DILocation(line: 4631, column: 43, scope: !4736)
!4739 = !DILocation(line: 4631, column: 57, scope: !4736)
!4740 = !DILocation(line: 4631, column: 70, scope: !4736)
!4741 = !DILocation(line: 4631, column: 29, scope: !4736)
!4742 = !DILocation(line: 4633, column: 14, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4736, file: !1, line: 4633, column: 14)
!4744 = !DILocation(line: 4633, column: 24, scope: !4743)
!4745 = !DILocation(line: 4633, column: 34, scope: !4743)
!4746 = !DILocation(line: 4633, column: 14, scope: !4736)
!4747 = !DILocation(line: 4635, column: 21, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !1, line: 4634, column: 10)
!4749 = !DILocation(line: 4635, column: 31, scope: !4748)
!4750 = !DILocation(line: 4635, column: 13, scope: !4748)
!4751 = !DILocation(line: 4639, column: 41, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 4638, column: 16)
!4753 = distinct !DILexicalBlock(scope: !4748, file: !1, line: 4636, column: 13)
!4754 = !DILocation(line: 4639, column: 46, scope: !4752)
!4755 = !DILocation(line: 4639, column: 54, scope: !4752)
!4756 = !DILocation(line: 4639, column: 26, scope: !4752)
!4757 = !DILocation(line: 4639, column: 24, scope: !4752)
!4758 = !DILocation(line: 4640, column: 24, scope: !4752)
!4759 = !DILocation(line: 4640, column: 44, scope: !4752)
!4760 = !DILocation(line: 4640, column: 54, scope: !4752)
!4761 = !DILocation(line: 4640, column: 59, scope: !4752)
!4762 = !DILocation(line: 4640, column: 30, scope: !4752)
!4763 = !DILocation(line: 4640, column: 28, scope: !4752)
!4764 = !DILocation(line: 4640, column: 22, scope: !4752)
!4765 = !DILocation(line: 4641, column: 24, scope: !4752)
!4766 = !DILocation(line: 4641, column: 42, scope: !4752)
!4767 = !DILocation(line: 4641, column: 30, scope: !4752)
!4768 = !DILocation(line: 4641, column: 28, scope: !4752)
!4769 = !DILocation(line: 4641, column: 52, scope: !4752)
!4770 = !DILocation(line: 4641, column: 22, scope: !4752)
!4771 = !DILocation(line: 4642, column: 38, scope: !4752)
!4772 = !DILocation(line: 4642, column: 48, scope: !4752)
!4773 = !DILocation(line: 4642, column: 53, scope: !4752)
!4774 = !DILocation(line: 4642, column: 29, scope: !4752)
!4775 = !DILocation(line: 4642, column: 25, scope: !4752)
!4776 = !DILocation(line: 4643, column: 26, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4752, file: !1, line: 4643, column: 19)
!4778 = !DILocation(line: 4643, column: 24, scope: !4777)
!4779 = !DILocation(line: 4643, column: 31, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !1, line: 4643, column: 19)
!4781 = !DILocation(line: 4643, column: 35, scope: !4780)
!4782 = !DILocation(line: 4643, column: 33, scope: !4780)
!4783 = !DILocation(line: 4643, column: 19, scope: !4777)
!4784 = !DILocation(line: 4645, column: 28, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 4645, column: 26)
!4786 = distinct !DILexicalBlock(scope: !4780, file: !1, line: 4644, column: 19)
!4787 = !DILocation(line: 4645, column: 27, scope: !4785)
!4788 = !DILocation(line: 4645, column: 34, scope: !4785)
!4789 = !DILocation(line: 4645, column: 31, scope: !4785)
!4790 = !DILocation(line: 4645, column: 41, scope: !4785)
!4791 = !DILocation(line: 4645, column: 26, scope: !4786)
!4792 = !DILocation(line: 4646, column: 26, scope: !4785)
!4793 = !DILocation(line: 4646, column: 29, scope: !4785)
!4794 = !DILocation(line: 4646, column: 25, scope: !4785)
!4795 = !DILocation(line: 4649, column: 26, scope: !4785)
!4796 = !DILocation(line: 4649, column: 29, scope: !4785)
!4797 = !DILocation(line: 4651, column: 26, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 4651, column: 26)
!4799 = !DILocation(line: 4651, column: 32, scope: !4798)
!4800 = !DILocation(line: 4651, column: 26, scope: !4786)
!4801 = !DILocation(line: 4653, column: 31, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !1, line: 4652, column: 22)
!4803 = !DILocation(line: 4654, column: 27, scope: !4802)
!4804 = !DILocation(line: 4655, column: 22, scope: !4802)
!4805 = !DILocation(line: 4658, column: 30, scope: !4798)
!4806 = !DILocation(line: 4660, column: 24, scope: !4786)
!4807 = !DILocation(line: 4661, column: 19, scope: !4786)
!4808 = !DILocation(line: 4643, column: 47, scope: !4780)
!4809 = !DILocation(line: 4643, column: 19, scope: !4780)
!4810 = distinct !{!4810, !4783, !4811}
!4811 = !DILocation(line: 4661, column: 19, scope: !4777)
!4812 = !DILocation(line: 4662, column: 19, scope: !4752)
!4813 = !DILocation(line: 4667, column: 41, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 4666, column: 16)
!4815 = !DILocation(line: 4667, column: 46, scope: !4814)
!4816 = !DILocation(line: 4667, column: 54, scope: !4814)
!4817 = !DILocation(line: 4667, column: 26, scope: !4814)
!4818 = !DILocation(line: 4667, column: 24, scope: !4814)
!4819 = !DILocation(line: 4668, column: 24, scope: !4814)
!4820 = !DILocation(line: 4668, column: 44, scope: !4814)
!4821 = !DILocation(line: 4668, column: 54, scope: !4814)
!4822 = !DILocation(line: 4668, column: 59, scope: !4814)
!4823 = !DILocation(line: 4668, column: 30, scope: !4814)
!4824 = !DILocation(line: 4668, column: 28, scope: !4814)
!4825 = !DILocation(line: 4668, column: 22, scope: !4814)
!4826 = !DILocation(line: 4669, column: 24, scope: !4814)
!4827 = !DILocation(line: 4669, column: 42, scope: !4814)
!4828 = !DILocation(line: 4669, column: 30, scope: !4814)
!4829 = !DILocation(line: 4669, column: 28, scope: !4814)
!4830 = !DILocation(line: 4669, column: 52, scope: !4814)
!4831 = !DILocation(line: 4669, column: 22, scope: !4814)
!4832 = !DILocation(line: 4670, column: 40, scope: !4814)
!4833 = !DILocation(line: 4670, column: 50, scope: !4814)
!4834 = !DILocation(line: 4670, column: 55, scope: !4814)
!4835 = !DILocation(line: 4670, column: 36, scope: !4814)
!4836 = !DILocation(line: 4670, column: 64, scope: !4814)
!4837 = !DILocation(line: 4670, column: 25, scope: !4814)
!4838 = !DILocation(line: 4671, column: 26, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 4671, column: 19)
!4840 = !DILocation(line: 4671, column: 24, scope: !4839)
!4841 = !DILocation(line: 4671, column: 31, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 4671, column: 19)
!4843 = !DILocation(line: 4671, column: 35, scope: !4842)
!4844 = !DILocation(line: 4671, column: 33, scope: !4842)
!4845 = !DILocation(line: 4671, column: 19, scope: !4839)
!4846 = !DILocation(line: 4673, column: 32, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4842, file: !1, line: 4672, column: 19)
!4848 = !DILocation(line: 4673, column: 31, scope: !4847)
!4849 = !DILocation(line: 4673, column: 38, scope: !4847)
!4850 = !DILocation(line: 4673, column: 35, scope: !4847)
!4851 = !DILocation(line: 4673, column: 45, scope: !4847)
!4852 = !DILocation(line: 4673, column: 28, scope: !4847)
!4853 = !DILocation(line: 4674, column: 39, scope: !4847)
!4854 = !DILocation(line: 4674, column: 48, scope: !4847)
!4855 = !DILocation(line: 4674, column: 54, scope: !4847)
!4856 = !DILocation(line: 4674, column: 45, scope: !4847)
!4857 = !DILocation(line: 4674, column: 63, scope: !4847)
!4858 = !DILocation(line: 4674, column: 69, scope: !4847)
!4859 = !DILocation(line: 4674, column: 60, scope: !4847)
!4860 = !DILocation(line: 4675, column: 26, scope: !4847)
!4861 = !DILocation(line: 4675, column: 32, scope: !4847)
!4862 = !DILocation(line: 4674, column: 75, scope: !4847)
!4863 = !DILocation(line: 4674, column: 28, scope: !4847)
!4864 = !DILocation(line: 4674, column: 23, scope: !4847)
!4865 = !DILocation(line: 4674, column: 26, scope: !4847)
!4866 = !DILocation(line: 4676, column: 26, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 4676, column: 26)
!4868 = !DILocation(line: 4676, column: 32, scope: !4867)
!4869 = !DILocation(line: 4676, column: 26, scope: !4847)
!4870 = !DILocation(line: 4678, column: 31, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4867, file: !1, line: 4677, column: 22)
!4872 = !DILocation(line: 4679, column: 27, scope: !4871)
!4873 = !DILocation(line: 4680, column: 22, scope: !4871)
!4874 = !DILocation(line: 4683, column: 31, scope: !4867)
!4875 = !DILocation(line: 4685, column: 24, scope: !4847)
!4876 = !DILocation(line: 4686, column: 19, scope: !4847)
!4877 = !DILocation(line: 4671, column: 47, scope: !4842)
!4878 = !DILocation(line: 4671, column: 19, scope: !4842)
!4879 = distinct !{!4879, !4845, !4880}
!4880 = !DILocation(line: 4686, column: 19, scope: !4839)
!4881 = !DILocation(line: 4687, column: 19, scope: !4814)
!4882 = !DILocation(line: 4692, column: 41, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 4691, column: 16)
!4884 = !DILocation(line: 4692, column: 46, scope: !4883)
!4885 = !DILocation(line: 4692, column: 54, scope: !4883)
!4886 = !DILocation(line: 4692, column: 26, scope: !4883)
!4887 = !DILocation(line: 4692, column: 24, scope: !4883)
!4888 = !DILocation(line: 4693, column: 24, scope: !4883)
!4889 = !DILocation(line: 4693, column: 44, scope: !4883)
!4890 = !DILocation(line: 4693, column: 54, scope: !4883)
!4891 = !DILocation(line: 4693, column: 59, scope: !4883)
!4892 = !DILocation(line: 4693, column: 30, scope: !4883)
!4893 = !DILocation(line: 4693, column: 28, scope: !4883)
!4894 = !DILocation(line: 4693, column: 22, scope: !4883)
!4895 = !DILocation(line: 4694, column: 24, scope: !4883)
!4896 = !DILocation(line: 4694, column: 42, scope: !4883)
!4897 = !DILocation(line: 4694, column: 30, scope: !4883)
!4898 = !DILocation(line: 4694, column: 28, scope: !4883)
!4899 = !DILocation(line: 4694, column: 52, scope: !4883)
!4900 = !DILocation(line: 4694, column: 22, scope: !4883)
!4901 = !DILocation(line: 4695, column: 40, scope: !4883)
!4902 = !DILocation(line: 4695, column: 50, scope: !4883)
!4903 = !DILocation(line: 4695, column: 55, scope: !4883)
!4904 = !DILocation(line: 4695, column: 36, scope: !4883)
!4905 = !DILocation(line: 4695, column: 64, scope: !4883)
!4906 = !DILocation(line: 4695, column: 25, scope: !4883)
!4907 = !DILocation(line: 4696, column: 26, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4883, file: !1, line: 4696, column: 19)
!4909 = !DILocation(line: 4696, column: 24, scope: !4908)
!4910 = !DILocation(line: 4696, column: 31, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4908, file: !1, line: 4696, column: 19)
!4912 = !DILocation(line: 4696, column: 35, scope: !4911)
!4913 = !DILocation(line: 4696, column: 33, scope: !4911)
!4914 = !DILocation(line: 4696, column: 19, scope: !4908)
!4915 = !DILocation(line: 4698, column: 32, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4911, file: !1, line: 4697, column: 19)
!4917 = !DILocation(line: 4698, column: 31, scope: !4916)
!4918 = !DILocation(line: 4698, column: 38, scope: !4916)
!4919 = !DILocation(line: 4698, column: 35, scope: !4916)
!4920 = !DILocation(line: 4698, column: 45, scope: !4916)
!4921 = !DILocation(line: 4698, column: 28, scope: !4916)
!4922 = !DILocation(line: 4699, column: 39, scope: !4916)
!4923 = !DILocation(line: 4699, column: 48, scope: !4916)
!4924 = !DILocation(line: 4699, column: 54, scope: !4916)
!4925 = !DILocation(line: 4699, column: 45, scope: !4916)
!4926 = !DILocation(line: 4699, column: 28, scope: !4916)
!4927 = !DILocation(line: 4699, column: 23, scope: !4916)
!4928 = !DILocation(line: 4699, column: 26, scope: !4916)
!4929 = !DILocation(line: 4700, column: 26, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4916, file: !1, line: 4700, column: 26)
!4931 = !DILocation(line: 4700, column: 32, scope: !4930)
!4932 = !DILocation(line: 4700, column: 26, scope: !4916)
!4933 = !DILocation(line: 4702, column: 31, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4930, file: !1, line: 4701, column: 22)
!4935 = !DILocation(line: 4703, column: 27, scope: !4934)
!4936 = !DILocation(line: 4704, column: 22, scope: !4934)
!4937 = !DILocation(line: 4707, column: 31, scope: !4930)
!4938 = !DILocation(line: 4709, column: 24, scope: !4916)
!4939 = !DILocation(line: 4710, column: 19, scope: !4916)
!4940 = !DILocation(line: 4696, column: 47, scope: !4911)
!4941 = !DILocation(line: 4696, column: 19, scope: !4911)
!4942 = distinct !{!4942, !4914, !4943}
!4943 = !DILocation(line: 4710, column: 19, scope: !4908)
!4944 = !DILocation(line: 4711, column: 19, scope: !4883)
!4945 = !DILocation(line: 4715, column: 19, scope: !4753)
!4946 = !DILocation(line: 4718, column: 13, scope: !4748)
!4947 = !DILocation(line: 4718, column: 23, scope: !4748)
!4948 = !DILocation(line: 4718, column: 33, scope: !4748)
!4949 = !DILocation(line: 4719, column: 13, scope: !4748)
!4950 = !DILocation(line: 4719, column: 23, scope: !4748)
!4951 = !DILocation(line: 4719, column: 35, scope: !4748)
!4952 = !DILocation(line: 4720, column: 34, scope: !4748)
!4953 = !DILocation(line: 4720, column: 13, scope: !4748)
!4954 = !DILocation(line: 4720, column: 23, scope: !4748)
!4955 = !DILocation(line: 4720, column: 32, scope: !4748)
!4956 = !DILocation(line: 4721, column: 10, scope: !4748)
!4957 = !DILocation(line: 4723, column: 14, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4736, file: !1, line: 4723, column: 14)
!4959 = !DILocation(line: 4723, column: 26, scope: !4958)
!4960 = !DILocation(line: 4723, column: 14, scope: !4736)
!4961 = !DILocation(line: 4725, column: 17, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !1, line: 4725, column: 17)
!4963 = distinct !DILexicalBlock(scope: !4958, file: !1, line: 4724, column: 10)
!4964 = !DILocation(line: 4725, column: 27, scope: !4962)
!4965 = !DILocation(line: 4725, column: 37, scope: !4962)
!4966 = !DILocation(line: 4725, column: 17, scope: !4963)
!4967 = !DILocation(line: 4727, column: 23, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4962, file: !1, line: 4726, column: 13)
!4969 = !DILocation(line: 4727, column: 28, scope: !4968)
!4970 = !DILocation(line: 4727, column: 21, scope: !4968)
!4971 = !DILocation(line: 4728, column: 21, scope: !4968)
!4972 = !DILocation(line: 4728, column: 39, scope: !4968)
!4973 = !DILocation(line: 4728, column: 27, scope: !4968)
!4974 = !DILocation(line: 4728, column: 25, scope: !4968)
!4975 = !DILocation(line: 4728, column: 49, scope: !4968)
!4976 = !DILocation(line: 4728, column: 19, scope: !4968)
!4977 = !DILocation(line: 4729, column: 21, scope: !4968)
!4978 = !DILocation(line: 4729, column: 40, scope: !4968)
!4979 = !DILocation(line: 4729, column: 50, scope: !4968)
!4980 = !DILocation(line: 4729, column: 27, scope: !4968)
!4981 = !DILocation(line: 4729, column: 25, scope: !4968)
!4982 = !DILocation(line: 4729, column: 56, scope: !4968)
!4983 = !DILocation(line: 4729, column: 19, scope: !4968)
!4984 = !DILocation(line: 4731, column: 23, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 4731, column: 16)
!4986 = !DILocation(line: 4731, column: 21, scope: !4985)
!4987 = !DILocation(line: 4731, column: 28, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 4731, column: 16)
!4989 = !DILocation(line: 4731, column: 32, scope: !4988)
!4990 = !DILocation(line: 4731, column: 30, scope: !4988)
!4991 = !DILocation(line: 4731, column: 16, scope: !4985)
!4992 = !DILocation(line: 4733, column: 24, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !1, line: 4733, column: 23)
!4994 = distinct !DILexicalBlock(scope: !4988, file: !1, line: 4732, column: 16)
!4995 = !DILocation(line: 4733, column: 23, scope: !4993)
!4996 = !DILocation(line: 4733, column: 30, scope: !4993)
!4997 = !DILocation(line: 4733, column: 27, scope: !4993)
!4998 = !DILocation(line: 4733, column: 23, scope: !4994)
!4999 = !DILocation(line: 4734, column: 25, scope: !4993)
!5000 = !DILocation(line: 4734, column: 28, scope: !4993)
!5001 = !DILocation(line: 4734, column: 22, scope: !4993)
!5002 = !DILocation(line: 4737, column: 25, scope: !4993)
!5003 = !DILocation(line: 4737, column: 28, scope: !4993)
!5004 = !DILocation(line: 4739, column: 30, scope: !4994)
!5005 = !DILocation(line: 4739, column: 27, scope: !4994)
!5006 = !DILocation(line: 4739, column: 22, scope: !4994)
!5007 = !DILocation(line: 4739, column: 25, scope: !4994)
!5008 = !DILocation(line: 4740, column: 16, scope: !4994)
!5009 = !DILocation(line: 4731, column: 44, scope: !4988)
!5010 = !DILocation(line: 4731, column: 16, scope: !4988)
!5011 = distinct !{!5011, !4991, !5012}
!5012 = !DILocation(line: 4740, column: 16, scope: !4985)
!5013 = !DILocation(line: 4741, column: 13, scope: !4968)
!5014 = !DILocation(line: 4743, column: 22, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4962, file: !1, line: 4743, column: 22)
!5016 = !DILocation(line: 4743, column: 32, scope: !5015)
!5017 = !DILocation(line: 4743, column: 42, scope: !5015)
!5018 = !DILocation(line: 4743, column: 22, scope: !4962)
!5019 = !DILocalVariable(name: "gray_high", scope: !5020, file: !1, line: 4745, type: !5)
!5020 = distinct !DILexicalBlock(scope: !5015, file: !1, line: 4744, column: 13)
!5021 = !DILocation(line: 4745, column: 25, scope: !5020)
!5022 = !DILocation(line: 4745, column: 49, scope: !5020)
!5023 = !DILocation(line: 4745, column: 54, scope: !5020)
!5024 = !DILocation(line: 4745, column: 60, scope: !5020)
!5025 = !DILocation(line: 4745, column: 37, scope: !5020)
!5026 = !DILocalVariable(name: "gray_low", scope: !5020, file: !1, line: 4746, type: !5)
!5027 = !DILocation(line: 4746, column: 25, scope: !5020)
!5028 = !DILocation(line: 4746, column: 47, scope: !5020)
!5029 = !DILocation(line: 4746, column: 52, scope: !5020)
!5030 = !DILocation(line: 4746, column: 36, scope: !5020)
!5031 = !DILocation(line: 4747, column: 21, scope: !5020)
!5032 = !DILocation(line: 4747, column: 27, scope: !5020)
!5033 = !DILocation(line: 4747, column: 37, scope: !5020)
!5034 = !DILocation(line: 4747, column: 25, scope: !5020)
!5035 = !DILocation(line: 4747, column: 46, scope: !5020)
!5036 = !DILocation(line: 4747, column: 19, scope: !5020)
!5037 = !DILocation(line: 4748, column: 21, scope: !5020)
!5038 = !DILocation(line: 4748, column: 28, scope: !5020)
!5039 = !DILocation(line: 4748, column: 38, scope: !5020)
!5040 = !DILocation(line: 4748, column: 47, scope: !5020)
!5041 = !DILocation(line: 4748, column: 25, scope: !5020)
!5042 = !DILocation(line: 4748, column: 53, scope: !5020)
!5043 = !DILocation(line: 4748, column: 19, scope: !5020)
!5044 = !DILocation(line: 4749, column: 23, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5020, file: !1, line: 4749, column: 16)
!5046 = !DILocation(line: 4749, column: 21, scope: !5045)
!5047 = !DILocation(line: 4749, column: 28, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 4749, column: 16)
!5049 = !DILocation(line: 4749, column: 32, scope: !5048)
!5050 = !DILocation(line: 4749, column: 30, scope: !5048)
!5051 = !DILocation(line: 4749, column: 16, scope: !5045)
!5052 = !DILocation(line: 4751, column: 25, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 4751, column: 23)
!5054 = distinct !DILexicalBlock(scope: !5048, file: !1, line: 4750, column: 16)
!5055 = !DILocation(line: 4751, column: 28, scope: !5053)
!5056 = !DILocation(line: 4751, column: 23, scope: !5053)
!5057 = !DILocation(line: 4751, column: 36, scope: !5053)
!5058 = !DILocation(line: 4751, column: 33, scope: !5053)
!5059 = !DILocation(line: 4751, column: 46, scope: !5053)
!5060 = !DILocation(line: 4751, column: 51, scope: !5053)
!5061 = !DILocation(line: 4751, column: 49, scope: !5053)
!5062 = !DILocation(line: 4751, column: 58, scope: !5053)
!5063 = !DILocation(line: 4751, column: 55, scope: !5053)
!5064 = !DILocation(line: 4751, column: 23, scope: !5054)
!5065 = !DILocation(line: 4753, column: 25, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5053, file: !1, line: 4752, column: 19)
!5067 = !DILocation(line: 4753, column: 28, scope: !5066)
!5068 = !DILocation(line: 4754, column: 25, scope: !5066)
!5069 = !DILocation(line: 4754, column: 28, scope: !5066)
!5070 = !DILocation(line: 4755, column: 19, scope: !5066)
!5071 = !DILocation(line: 4759, column: 25, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5053, file: !1, line: 4758, column: 19)
!5073 = !DILocation(line: 4759, column: 28, scope: !5072)
!5074 = !DILocation(line: 4760, column: 25, scope: !5072)
!5075 = !DILocation(line: 4760, column: 28, scope: !5072)
!5076 = !DILocation(line: 4763, column: 30, scope: !5054)
!5077 = !DILocation(line: 4763, column: 27, scope: !5054)
!5078 = !DILocation(line: 4763, column: 22, scope: !5054)
!5079 = !DILocation(line: 4763, column: 25, scope: !5054)
!5080 = !DILocation(line: 4764, column: 30, scope: !5054)
!5081 = !DILocation(line: 4764, column: 27, scope: !5054)
!5082 = !DILocation(line: 4764, column: 22, scope: !5054)
!5083 = !DILocation(line: 4764, column: 25, scope: !5054)
!5084 = !DILocation(line: 4765, column: 16, scope: !5054)
!5085 = !DILocation(line: 4749, column: 44, scope: !5048)
!5086 = !DILocation(line: 4749, column: 16, scope: !5048)
!5087 = distinct !{!5087, !5051, !5088}
!5088 = !DILocation(line: 4765, column: 16, scope: !5045)
!5089 = !DILocation(line: 4766, column: 13, scope: !5020)
!5090 = !DILocation(line: 4768, column: 13, scope: !4963)
!5091 = !DILocation(line: 4768, column: 23, scope: !4963)
!5092 = !DILocation(line: 4768, column: 34, scope: !4963)
!5093 = !DILocation(line: 4769, column: 13, scope: !4963)
!5094 = !DILocation(line: 4769, column: 23, scope: !4963)
!5095 = !DILocation(line: 4769, column: 32, scope: !4963)
!5096 = !DILocation(line: 4770, column: 48, scope: !4963)
!5097 = !DILocation(line: 4770, column: 58, scope: !4963)
!5098 = !DILocation(line: 4770, column: 68, scope: !4963)
!5099 = !DILocation(line: 4770, column: 37, scope: !4963)
!5100 = !DILocation(line: 4770, column: 13, scope: !4963)
!5101 = !DILocation(line: 4770, column: 23, scope: !4963)
!5102 = !DILocation(line: 4770, column: 35, scope: !4963)
!5103 = !DILocation(line: 4771, column: 34, scope: !4963)
!5104 = !DILocation(line: 4771, column: 13, scope: !4963)
!5105 = !DILocation(line: 4771, column: 23, scope: !4963)
!5106 = !DILocation(line: 4771, column: 32, scope: !4963)
!5107 = !DILocation(line: 4773, column: 10, scope: !4963)
!5108 = !DILocation(line: 4774, column: 7, scope: !4736)
!5109 = !DILocation(line: 4775, column: 16, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 4775, column: 16)
!5111 = !DILocation(line: 4775, column: 26, scope: !5110)
!5112 = !DILocation(line: 4775, column: 37, scope: !5110)
!5113 = !DILocation(line: 4775, column: 59, scope: !5110)
!5114 = !DILocation(line: 4775, column: 62, scope: !5110)
!5115 = !DILocation(line: 4775, column: 16, scope: !4730)
!5116 = !DILocation(line: 4777, column: 14, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !1, line: 4777, column: 14)
!5118 = distinct !DILexicalBlock(scope: !5110, file: !1, line: 4776, column: 7)
!5119 = !DILocation(line: 4777, column: 24, scope: !5117)
!5120 = !DILocation(line: 4777, column: 34, scope: !5117)
!5121 = !DILocation(line: 4777, column: 14, scope: !5118)
!5122 = !DILocalVariable(name: "red", scope: !5123, file: !1, line: 4779, type: !5)
!5123 = distinct !DILexicalBlock(scope: !5117, file: !1, line: 4778, column: 10)
!5124 = !DILocation(line: 4779, column: 22, scope: !5123)
!5125 = !DILocation(line: 4779, column: 39, scope: !5123)
!5126 = !DILocation(line: 4779, column: 52, scope: !5123)
!5127 = !DILocation(line: 4779, column: 56, scope: !5123)
!5128 = !DILocation(line: 4779, column: 28, scope: !5123)
!5129 = !DILocalVariable(name: "green", scope: !5123, file: !1, line: 4780, type: !5)
!5130 = !DILocation(line: 4780, column: 22, scope: !5123)
!5131 = !DILocation(line: 4780, column: 41, scope: !5123)
!5132 = !DILocation(line: 4780, column: 54, scope: !5123)
!5133 = !DILocation(line: 4780, column: 60, scope: !5123)
!5134 = !DILocation(line: 4780, column: 30, scope: !5123)
!5135 = !DILocalVariable(name: "blue", scope: !5123, file: !1, line: 4781, type: !5)
!5136 = !DILocation(line: 4781, column: 22, scope: !5123)
!5137 = !DILocation(line: 4781, column: 40, scope: !5123)
!5138 = !DILocation(line: 4781, column: 53, scope: !5123)
!5139 = !DILocation(line: 4781, column: 58, scope: !5123)
!5140 = !DILocation(line: 4781, column: 29, scope: !5123)
!5141 = !DILocation(line: 4782, column: 18, scope: !5123)
!5142 = !DILocation(line: 4782, column: 36, scope: !5123)
!5143 = !DILocation(line: 4782, column: 46, scope: !5123)
!5144 = !DILocation(line: 4782, column: 22, scope: !5123)
!5145 = !DILocation(line: 4782, column: 55, scope: !5123)
!5146 = !DILocation(line: 4782, column: 16, scope: !5123)
!5147 = !DILocation(line: 4783, column: 18, scope: !5123)
!5148 = !DILocation(line: 4783, column: 37, scope: !5123)
!5149 = !DILocation(line: 4783, column: 47, scope: !5123)
!5150 = !DILocation(line: 4783, column: 24, scope: !5123)
!5151 = !DILocation(line: 4783, column: 22, scope: !5123)
!5152 = !DILocation(line: 4783, column: 53, scope: !5123)
!5153 = !DILocation(line: 4783, column: 16, scope: !5123)
!5154 = !DILocation(line: 4784, column: 20, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5123, file: !1, line: 4784, column: 13)
!5156 = !DILocation(line: 4784, column: 18, scope: !5155)
!5157 = !DILocation(line: 4784, column: 25, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5155, file: !1, line: 4784, column: 13)
!5159 = !DILocation(line: 4784, column: 29, scope: !5158)
!5160 = !DILocation(line: 4784, column: 27, scope: !5158)
!5161 = !DILocation(line: 4784, column: 13, scope: !5155)
!5162 = !DILocation(line: 4786, column: 22, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !1, line: 4786, column: 20)
!5164 = distinct !DILexicalBlock(scope: !5158, file: !1, line: 4785, column: 13)
!5165 = !DILocation(line: 4786, column: 25, scope: !5163)
!5166 = !DILocation(line: 4786, column: 20, scope: !5163)
!5167 = !DILocation(line: 4786, column: 33, scope: !5163)
!5168 = !DILocation(line: 4786, column: 30, scope: !5163)
!5169 = !DILocation(line: 4786, column: 37, scope: !5163)
!5170 = !DILocation(line: 4786, column: 42, scope: !5163)
!5171 = !DILocation(line: 4786, column: 45, scope: !5163)
!5172 = !DILocation(line: 4786, column: 40, scope: !5163)
!5173 = !DILocation(line: 4786, column: 53, scope: !5163)
!5174 = !DILocation(line: 4786, column: 50, scope: !5163)
!5175 = !DILocation(line: 4786, column: 59, scope: !5163)
!5176 = !DILocation(line: 4786, column: 64, scope: !5163)
!5177 = !DILocation(line: 4786, column: 62, scope: !5163)
!5178 = !DILocation(line: 4786, column: 71, scope: !5163)
!5179 = !DILocation(line: 4786, column: 68, scope: !5163)
!5180 = !DILocation(line: 4786, column: 20, scope: !5164)
!5181 = !DILocation(line: 4787, column: 22, scope: !5163)
!5182 = !DILocation(line: 4787, column: 25, scope: !5163)
!5183 = !DILocation(line: 4787, column: 19, scope: !5163)
!5184 = !DILocation(line: 4790, column: 22, scope: !5163)
!5185 = !DILocation(line: 4790, column: 25, scope: !5163)
!5186 = !DILocation(line: 4792, column: 27, scope: !5164)
!5187 = !DILocation(line: 4792, column: 24, scope: !5164)
!5188 = !DILocation(line: 4792, column: 19, scope: !5164)
!5189 = !DILocation(line: 4792, column: 22, scope: !5164)
!5190 = !DILocation(line: 4793, column: 27, scope: !5164)
!5191 = !DILocation(line: 4793, column: 24, scope: !5164)
!5192 = !DILocation(line: 4793, column: 19, scope: !5164)
!5193 = !DILocation(line: 4793, column: 22, scope: !5164)
!5194 = !DILocation(line: 4794, column: 27, scope: !5164)
!5195 = !DILocation(line: 4794, column: 24, scope: !5164)
!5196 = !DILocation(line: 4794, column: 19, scope: !5164)
!5197 = !DILocation(line: 4794, column: 22, scope: !5164)
!5198 = !DILocation(line: 4795, column: 13, scope: !5164)
!5199 = !DILocation(line: 4784, column: 41, scope: !5158)
!5200 = !DILocation(line: 4784, column: 13, scope: !5158)
!5201 = distinct !{!5201, !5161, !5202}
!5202 = !DILocation(line: 4795, column: 13, scope: !5155)
!5203 = !DILocation(line: 4796, column: 10, scope: !5123)
!5204 = !DILocation(line: 4797, column: 19, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5117, file: !1, line: 4797, column: 19)
!5206 = !DILocation(line: 4797, column: 29, scope: !5205)
!5207 = !DILocation(line: 4797, column: 39, scope: !5205)
!5208 = !DILocation(line: 4797, column: 19, scope: !5117)
!5209 = !DILocalVariable(name: "red_high", scope: !5210, file: !1, line: 4799, type: !5)
!5210 = distinct !DILexicalBlock(scope: !5205, file: !1, line: 4798, column: 10)
!5211 = !DILocation(line: 4799, column: 22, scope: !5210)
!5212 = !DILocation(line: 4799, column: 45, scope: !5210)
!5213 = !DILocation(line: 4799, column: 58, scope: !5210)
!5214 = !DILocation(line: 4799, column: 62, scope: !5210)
!5215 = !DILocation(line: 4799, column: 68, scope: !5210)
!5216 = !DILocation(line: 4799, column: 33, scope: !5210)
!5217 = !DILocalVariable(name: "green_high", scope: !5210, file: !1, line: 4800, type: !5)
!5218 = !DILocation(line: 4800, column: 22, scope: !5210)
!5219 = !DILocation(line: 4800, column: 47, scope: !5210)
!5220 = !DILocation(line: 4800, column: 60, scope: !5210)
!5221 = !DILocation(line: 4800, column: 66, scope: !5210)
!5222 = !DILocation(line: 4800, column: 72, scope: !5210)
!5223 = !DILocation(line: 4800, column: 35, scope: !5210)
!5224 = !DILocalVariable(name: "blue_high", scope: !5210, file: !1, line: 4801, type: !5)
!5225 = !DILocation(line: 4801, column: 22, scope: !5210)
!5226 = !DILocation(line: 4801, column: 46, scope: !5210)
!5227 = !DILocation(line: 4801, column: 59, scope: !5210)
!5228 = !DILocation(line: 4801, column: 64, scope: !5210)
!5229 = !DILocation(line: 4801, column: 70, scope: !5210)
!5230 = !DILocation(line: 4801, column: 34, scope: !5210)
!5231 = !DILocalVariable(name: "red_low", scope: !5210, file: !1, line: 4802, type: !5)
!5232 = !DILocation(line: 4802, column: 22, scope: !5210)
!5233 = !DILocation(line: 4802, column: 43, scope: !5210)
!5234 = !DILocation(line: 4802, column: 56, scope: !5210)
!5235 = !DILocation(line: 4802, column: 60, scope: !5210)
!5236 = !DILocation(line: 4802, column: 32, scope: !5210)
!5237 = !DILocalVariable(name: "green_low", scope: !5210, file: !1, line: 4803, type: !5)
!5238 = !DILocation(line: 4803, column: 22, scope: !5210)
!5239 = !DILocation(line: 4803, column: 45, scope: !5210)
!5240 = !DILocation(line: 4803, column: 58, scope: !5210)
!5241 = !DILocation(line: 4803, column: 64, scope: !5210)
!5242 = !DILocation(line: 4803, column: 34, scope: !5210)
!5243 = !DILocalVariable(name: "blue_low", scope: !5210, file: !1, line: 4804, type: !5)
!5244 = !DILocation(line: 4804, column: 22, scope: !5210)
!5245 = !DILocation(line: 4804, column: 44, scope: !5210)
!5246 = !DILocation(line: 4804, column: 57, scope: !5210)
!5247 = !DILocation(line: 4804, column: 62, scope: !5210)
!5248 = !DILocation(line: 4804, column: 33, scope: !5210)
!5249 = !DILocation(line: 4805, column: 18, scope: !5210)
!5250 = !DILocation(line: 4805, column: 24, scope: !5210)
!5251 = !DILocation(line: 4805, column: 34, scope: !5210)
!5252 = !DILocation(line: 4805, column: 22, scope: !5210)
!5253 = !DILocation(line: 4805, column: 43, scope: !5210)
!5254 = !DILocation(line: 4805, column: 16, scope: !5210)
!5255 = !DILocation(line: 4806, column: 18, scope: !5210)
!5256 = !DILocation(line: 4806, column: 37, scope: !5210)
!5257 = !DILocation(line: 4806, column: 47, scope: !5210)
!5258 = !DILocation(line: 4806, column: 24, scope: !5210)
!5259 = !DILocation(line: 4806, column: 22, scope: !5210)
!5260 = !DILocation(line: 4806, column: 53, scope: !5210)
!5261 = !DILocation(line: 4806, column: 16, scope: !5210)
!5262 = !DILocation(line: 4807, column: 20, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5210, file: !1, line: 4807, column: 13)
!5264 = !DILocation(line: 4807, column: 18, scope: !5263)
!5265 = !DILocation(line: 4807, column: 25, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5263, file: !1, line: 4807, column: 13)
!5267 = !DILocation(line: 4807, column: 29, scope: !5266)
!5268 = !DILocation(line: 4807, column: 27, scope: !5266)
!5269 = !DILocation(line: 4807, column: 13, scope: !5263)
!5270 = !DILocation(line: 4809, column: 22, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 4809, column: 20)
!5272 = distinct !DILexicalBlock(scope: !5266, file: !1, line: 4808, column: 13)
!5273 = !DILocation(line: 4809, column: 25, scope: !5271)
!5274 = !DILocation(line: 4809, column: 20, scope: !5271)
!5275 = !DILocation(line: 4809, column: 33, scope: !5271)
!5276 = !DILocation(line: 4809, column: 30, scope: !5271)
!5277 = !DILocation(line: 4809, column: 42, scope: !5271)
!5278 = !DILocation(line: 4810, column: 22, scope: !5271)
!5279 = !DILocation(line: 4810, column: 25, scope: !5271)
!5280 = !DILocation(line: 4810, column: 20, scope: !5271)
!5281 = !DILocation(line: 4810, column: 33, scope: !5271)
!5282 = !DILocation(line: 4810, column: 30, scope: !5271)
!5283 = !DILocation(line: 4810, column: 41, scope: !5271)
!5284 = !DILocation(line: 4811, column: 22, scope: !5271)
!5285 = !DILocation(line: 4811, column: 25, scope: !5271)
!5286 = !DILocation(line: 4811, column: 20, scope: !5271)
!5287 = !DILocation(line: 4811, column: 33, scope: !5271)
!5288 = !DILocation(line: 4811, column: 30, scope: !5271)
!5289 = !DILocation(line: 4811, column: 44, scope: !5271)
!5290 = !DILocation(line: 4812, column: 22, scope: !5271)
!5291 = !DILocation(line: 4812, column: 25, scope: !5271)
!5292 = !DILocation(line: 4812, column: 20, scope: !5271)
!5293 = !DILocation(line: 4812, column: 33, scope: !5271)
!5294 = !DILocation(line: 4812, column: 30, scope: !5271)
!5295 = !DILocation(line: 4812, column: 43, scope: !5271)
!5296 = !DILocation(line: 4813, column: 22, scope: !5271)
!5297 = !DILocation(line: 4813, column: 25, scope: !5271)
!5298 = !DILocation(line: 4813, column: 20, scope: !5271)
!5299 = !DILocation(line: 4813, column: 33, scope: !5271)
!5300 = !DILocation(line: 4813, column: 30, scope: !5271)
!5301 = !DILocation(line: 4813, column: 43, scope: !5271)
!5302 = !DILocation(line: 4814, column: 22, scope: !5271)
!5303 = !DILocation(line: 4814, column: 20, scope: !5271)
!5304 = !DILocation(line: 4814, column: 33, scope: !5271)
!5305 = !DILocation(line: 4814, column: 30, scope: !5271)
!5306 = !DILocation(line: 4809, column: 20, scope: !5272)
!5307 = !DILocation(line: 4816, column: 22, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 4815, column: 16)
!5309 = !DILocation(line: 4816, column: 25, scope: !5308)
!5310 = !DILocation(line: 4817, column: 22, scope: !5308)
!5311 = !DILocation(line: 4817, column: 25, scope: !5308)
!5312 = !DILocation(line: 4818, column: 16, scope: !5308)
!5313 = !DILocation(line: 4822, column: 22, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 4821, column: 16)
!5315 = !DILocation(line: 4822, column: 25, scope: !5314)
!5316 = !DILocation(line: 4823, column: 22, scope: !5314)
!5317 = !DILocation(line: 4823, column: 25, scope: !5314)
!5318 = !DILocation(line: 4826, column: 27, scope: !5272)
!5319 = !DILocation(line: 4826, column: 24, scope: !5272)
!5320 = !DILocation(line: 4826, column: 19, scope: !5272)
!5321 = !DILocation(line: 4826, column: 22, scope: !5272)
!5322 = !DILocation(line: 4827, column: 27, scope: !5272)
!5323 = !DILocation(line: 4827, column: 24, scope: !5272)
!5324 = !DILocation(line: 4827, column: 19, scope: !5272)
!5325 = !DILocation(line: 4827, column: 22, scope: !5272)
!5326 = !DILocation(line: 4828, column: 27, scope: !5272)
!5327 = !DILocation(line: 4828, column: 24, scope: !5272)
!5328 = !DILocation(line: 4828, column: 19, scope: !5272)
!5329 = !DILocation(line: 4828, column: 22, scope: !5272)
!5330 = !DILocation(line: 4829, column: 27, scope: !5272)
!5331 = !DILocation(line: 4829, column: 24, scope: !5272)
!5332 = !DILocation(line: 4829, column: 19, scope: !5272)
!5333 = !DILocation(line: 4829, column: 22, scope: !5272)
!5334 = !DILocation(line: 4830, column: 27, scope: !5272)
!5335 = !DILocation(line: 4830, column: 24, scope: !5272)
!5336 = !DILocation(line: 4830, column: 19, scope: !5272)
!5337 = !DILocation(line: 4830, column: 22, scope: !5272)
!5338 = !DILocation(line: 4831, column: 27, scope: !5272)
!5339 = !DILocation(line: 4831, column: 24, scope: !5272)
!5340 = !DILocation(line: 4831, column: 19, scope: !5272)
!5341 = !DILocation(line: 4831, column: 22, scope: !5272)
!5342 = !DILocation(line: 4832, column: 13, scope: !5272)
!5343 = !DILocation(line: 4807, column: 41, scope: !5266)
!5344 = !DILocation(line: 4807, column: 13, scope: !5266)
!5345 = distinct !{!5345, !5269, !5346}
!5346 = !DILocation(line: 4832, column: 13, scope: !5263)
!5347 = !DILocation(line: 4833, column: 10, scope: !5210)
!5348 = !DILocation(line: 4834, column: 10, scope: !5118)
!5349 = !DILocation(line: 4834, column: 20, scope: !5118)
!5350 = !DILocation(line: 4834, column: 31, scope: !5118)
!5351 = !DILocation(line: 4835, column: 10, scope: !5118)
!5352 = !DILocation(line: 4835, column: 20, scope: !5118)
!5353 = !DILocation(line: 4835, column: 29, scope: !5118)
!5354 = !DILocation(line: 4836, column: 45, scope: !5118)
!5355 = !DILocation(line: 4836, column: 55, scope: !5118)
!5356 = !DILocation(line: 4836, column: 65, scope: !5118)
!5357 = !DILocation(line: 4836, column: 34, scope: !5118)
!5358 = !DILocation(line: 4836, column: 10, scope: !5118)
!5359 = !DILocation(line: 4836, column: 20, scope: !5118)
!5360 = !DILocation(line: 4836, column: 32, scope: !5118)
!5361 = !DILocation(line: 4837, column: 31, scope: !5118)
!5362 = !DILocation(line: 4837, column: 10, scope: !5118)
!5363 = !DILocation(line: 4837, column: 20, scope: !5118)
!5364 = !DILocation(line: 4837, column: 29, scope: !5118)
!5365 = !DILocation(line: 4838, column: 7, scope: !5118)
!5366 = !DILocation(line: 4840, column: 1, scope: !4706)
!5367 = distinct !DISubprogram(name: "png_do_rgb_to_gray", scope: !1, file: !1, line: 3226, type: !5368, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!12, !39, !101, !8}
!5370 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !5367, file: !1, line: 3226, type: !39)
!5371 = !DILocation(line: 3226, column: 32, scope: !5367)
!5372 = !DILocalVariable(name: "row_info", arg: 2, scope: !5367, file: !1, line: 3226, type: !101)
!5373 = !DILocation(line: 3226, column: 55, scope: !5367)
!5374 = !DILocalVariable(name: "row", arg: 3, scope: !5367, file: !1, line: 3226, type: !8)
!5375 = !DILocation(line: 3226, column: 75, scope: !5367)
!5376 = !DILocalVariable(name: "rgb_error", scope: !5367, file: !1, line: 3229, type: !12)
!5377 = !DILocation(line: 3229, column: 8, scope: !5367)
!5378 = !DILocation(line: 3233, column: 10, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5367, file: !1, line: 3233, column: 8)
!5380 = !DILocation(line: 3233, column: 20, scope: !5379)
!5381 = !DILocation(line: 3233, column: 31, scope: !5379)
!5382 = !DILocation(line: 3233, column: 57, scope: !5379)
!5383 = !DILocation(line: 3234, column: 9, scope: !5379)
!5384 = !DILocation(line: 3234, column: 19, scope: !5379)
!5385 = !DILocation(line: 3234, column: 30, scope: !5379)
!5386 = !DILocation(line: 3233, column: 8, scope: !5367)
!5387 = !DILocalVariable(name: "rc", scope: !5388, file: !1, line: 3236, type: !5389)
!5388 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 3235, column: 4)
!5389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!5390 = !DILocation(line: 3236, column: 29, scope: !5388)
!5391 = !DILocation(line: 3236, column: 34, scope: !5388)
!5392 = !DILocation(line: 3236, column: 43, scope: !5388)
!5393 = !DILocalVariable(name: "gc", scope: !5388, file: !1, line: 3237, type: !5389)
!5394 = !DILocation(line: 3237, column: 29, scope: !5388)
!5395 = !DILocation(line: 3237, column: 34, scope: !5388)
!5396 = !DILocation(line: 3237, column: 43, scope: !5388)
!5397 = !DILocalVariable(name: "bc", scope: !5388, file: !1, line: 3238, type: !5389)
!5398 = !DILocation(line: 3238, column: 29, scope: !5388)
!5399 = !DILocation(line: 3238, column: 42, scope: !5388)
!5400 = !DILocation(line: 3238, column: 40, scope: !5388)
!5401 = !DILocation(line: 3238, column: 47, scope: !5388)
!5402 = !DILocation(line: 3238, column: 45, scope: !5388)
!5403 = !DILocalVariable(name: "row_width", scope: !5388, file: !1, line: 3239, type: !5389)
!5404 = !DILocation(line: 3239, column: 29, scope: !5388)
!5405 = !DILocation(line: 3239, column: 41, scope: !5388)
!5406 = !DILocation(line: 3239, column: 51, scope: !5388)
!5407 = !DILocalVariable(name: "have_alpha", scope: !5388, file: !1, line: 3240, type: !5408)
!5408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!5409 = !DILocation(line: 3240, column: 21, scope: !5388)
!5410 = !DILocation(line: 3241, column: 11, scope: !5388)
!5411 = !DILocation(line: 3241, column: 21, scope: !5388)
!5412 = !DILocation(line: 3241, column: 32, scope: !5388)
!5413 = !DILocation(line: 3241, column: 56, scope: !5388)
!5414 = !DILocation(line: 3243, column: 11, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5388, file: !1, line: 3243, column: 11)
!5416 = !DILocation(line: 3243, column: 21, scope: !5415)
!5417 = !DILocation(line: 3243, column: 31, scope: !5415)
!5418 = !DILocation(line: 3243, column: 11, scope: !5388)
!5419 = !DILocation(line: 3251, column: 14, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !1, line: 3251, column: 14)
!5421 = distinct !DILexicalBlock(scope: !5415, file: !1, line: 3244, column: 7)
!5422 = !DILocation(line: 3251, column: 23, scope: !5420)
!5423 = !DILocation(line: 3251, column: 36, scope: !5420)
!5424 = !DILocation(line: 3251, column: 44, scope: !5420)
!5425 = !DILocation(line: 3251, column: 47, scope: !5420)
!5426 = !DILocation(line: 3251, column: 56, scope: !5420)
!5427 = !DILocation(line: 3251, column: 67, scope: !5420)
!5428 = !DILocation(line: 3251, column: 14, scope: !5421)
!5429 = !DILocalVariable(name: "sp", scope: !5430, file: !1, line: 3253, type: !8)
!5430 = distinct !DILexicalBlock(scope: !5420, file: !1, line: 3252, column: 10)
!5431 = !DILocation(line: 3253, column: 23, scope: !5430)
!5432 = !DILocation(line: 3253, column: 28, scope: !5430)
!5433 = !DILocalVariable(name: "dp", scope: !5430, file: !1, line: 3254, type: !8)
!5434 = !DILocation(line: 3254, column: 23, scope: !5430)
!5435 = !DILocation(line: 3254, column: 28, scope: !5430)
!5436 = !DILocalVariable(name: "i", scope: !5430, file: !1, line: 3255, type: !10)
!5437 = !DILocation(line: 3255, column: 25, scope: !5430)
!5438 = !DILocation(line: 3257, column: 20, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 3257, column: 13)
!5440 = !DILocation(line: 3257, column: 18, scope: !5439)
!5441 = !DILocation(line: 3257, column: 25, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5439, file: !1, line: 3257, column: 13)
!5443 = !DILocation(line: 3257, column: 29, scope: !5442)
!5444 = !DILocation(line: 3257, column: 27, scope: !5442)
!5445 = !DILocation(line: 3257, column: 13, scope: !5439)
!5446 = !DILocalVariable(name: "red", scope: !5447, file: !1, line: 3259, type: !5)
!5447 = distinct !DILexicalBlock(scope: !5442, file: !1, line: 3258, column: 13)
!5448 = !DILocation(line: 3259, column: 25, scope: !5447)
!5449 = !DILocation(line: 3259, column: 37, scope: !5447)
!5450 = !DILocation(line: 3259, column: 33, scope: !5447)
!5451 = !DILocalVariable(name: "green", scope: !5447, file: !1, line: 3260, type: !5)
!5452 = !DILocation(line: 3260, column: 25, scope: !5447)
!5453 = !DILocation(line: 3260, column: 37, scope: !5447)
!5454 = !DILocation(line: 3260, column: 33, scope: !5447)
!5455 = !DILocalVariable(name: "blue", scope: !5447, file: !1, line: 3261, type: !5)
!5456 = !DILocation(line: 3261, column: 25, scope: !5447)
!5457 = !DILocation(line: 3261, column: 37, scope: !5447)
!5458 = !DILocation(line: 3261, column: 33, scope: !5447)
!5459 = !DILocation(line: 3263, column: 20, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 3263, column: 20)
!5461 = !DILocation(line: 3263, column: 27, scope: !5460)
!5462 = !DILocation(line: 3263, column: 24, scope: !5460)
!5463 = !DILocation(line: 3263, column: 33, scope: !5460)
!5464 = !DILocation(line: 3263, column: 36, scope: !5460)
!5465 = !DILocation(line: 3263, column: 43, scope: !5460)
!5466 = !DILocation(line: 3263, column: 40, scope: !5460)
!5467 = !DILocation(line: 3263, column: 20, scope: !5447)
!5468 = !DILocation(line: 3265, column: 25, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 3264, column: 16)
!5470 = !DILocation(line: 3265, column: 34, scope: !5469)
!5471 = !DILocation(line: 3265, column: 45, scope: !5469)
!5472 = !DILocation(line: 3265, column: 23, scope: !5469)
!5473 = !DILocation(line: 3266, column: 27, scope: !5469)
!5474 = !DILocation(line: 3266, column: 36, scope: !5469)
!5475 = !DILocation(line: 3266, column: 47, scope: !5469)
!5476 = !DILocation(line: 3266, column: 25, scope: !5469)
!5477 = !DILocation(line: 3267, column: 26, scope: !5469)
!5478 = !DILocation(line: 3267, column: 35, scope: !5469)
!5479 = !DILocation(line: 3267, column: 46, scope: !5469)
!5480 = !DILocation(line: 3267, column: 24, scope: !5469)
!5481 = !DILocation(line: 3269, column: 29, scope: !5469)
!5482 = !DILocation(line: 3270, column: 29, scope: !5469)
!5483 = !DILocation(line: 3270, column: 38, scope: !5469)
!5484 = !DILocation(line: 3271, column: 24, scope: !5469)
!5485 = !DILocation(line: 3271, column: 27, scope: !5469)
!5486 = !DILocation(line: 3271, column: 26, scope: !5469)
!5487 = !DILocation(line: 3271, column: 33, scope: !5469)
!5488 = !DILocation(line: 3271, column: 36, scope: !5469)
!5489 = !DILocation(line: 3271, column: 35, scope: !5469)
!5490 = !DILocation(line: 3271, column: 31, scope: !5469)
!5491 = !DILocation(line: 3271, column: 44, scope: !5469)
!5492 = !DILocation(line: 3271, column: 47, scope: !5469)
!5493 = !DILocation(line: 3271, column: 46, scope: !5469)
!5494 = !DILocation(line: 3271, column: 42, scope: !5469)
!5495 = !DILocation(line: 3271, column: 52, scope: !5469)
!5496 = !DILocation(line: 3271, column: 60, scope: !5469)
!5497 = !DILocation(line: 3270, column: 23, scope: !5469)
!5498 = !DILocation(line: 3270, column: 27, scope: !5469)
!5499 = !DILocation(line: 3272, column: 16, scope: !5469)
!5500 = !DILocation(line: 3279, column: 23, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !1, line: 3279, column: 23)
!5502 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 3275, column: 16)
!5503 = !DILocation(line: 3279, column: 32, scope: !5501)
!5504 = !DILocation(line: 3279, column: 44, scope: !5501)
!5505 = !DILocation(line: 3279, column: 23, scope: !5502)
!5506 = !DILocation(line: 3280, column: 28, scope: !5501)
!5507 = !DILocation(line: 3280, column: 37, scope: !5501)
!5508 = !DILocation(line: 3280, column: 49, scope: !5501)
!5509 = !DILocation(line: 3280, column: 26, scope: !5501)
!5510 = !DILocation(line: 3280, column: 22, scope: !5501)
!5511 = !DILocation(line: 3282, column: 29, scope: !5502)
!5512 = !DILocation(line: 3282, column: 23, scope: !5502)
!5513 = !DILocation(line: 3282, column: 27, scope: !5502)
!5514 = !DILocation(line: 3285, column: 20, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 3285, column: 20)
!5516 = !DILocation(line: 3285, column: 20, scope: !5447)
!5517 = !DILocation(line: 3286, column: 33, scope: !5515)
!5518 = !DILocation(line: 3286, column: 29, scope: !5515)
!5519 = !DILocation(line: 3286, column: 23, scope: !5515)
!5520 = !DILocation(line: 3286, column: 27, scope: !5515)
!5521 = !DILocation(line: 3286, column: 19, scope: !5515)
!5522 = !DILocation(line: 3287, column: 13, scope: !5447)
!5523 = !DILocation(line: 3257, column: 41, scope: !5442)
!5524 = !DILocation(line: 3257, column: 13, scope: !5442)
!5525 = distinct !{!5525, !5445, !5526}
!5526 = !DILocation(line: 3287, column: 13, scope: !5439)
!5527 = !DILocation(line: 3288, column: 10, scope: !5430)
!5528 = !DILocalVariable(name: "sp", scope: !5529, file: !1, line: 3292, type: !8)
!5529 = distinct !DILexicalBlock(scope: !5420, file: !1, line: 3291, column: 10)
!5530 = !DILocation(line: 3292, column: 23, scope: !5529)
!5531 = !DILocation(line: 3292, column: 28, scope: !5529)
!5532 = !DILocalVariable(name: "dp", scope: !5529, file: !1, line: 3293, type: !8)
!5533 = !DILocation(line: 3293, column: 23, scope: !5529)
!5534 = !DILocation(line: 3293, column: 28, scope: !5529)
!5535 = !DILocalVariable(name: "i", scope: !5529, file: !1, line: 3294, type: !10)
!5536 = !DILocation(line: 3294, column: 25, scope: !5529)
!5537 = !DILocation(line: 3296, column: 20, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 3296, column: 13)
!5539 = !DILocation(line: 3296, column: 18, scope: !5538)
!5540 = !DILocation(line: 3296, column: 25, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5538, file: !1, line: 3296, column: 13)
!5542 = !DILocation(line: 3296, column: 29, scope: !5541)
!5543 = !DILocation(line: 3296, column: 27, scope: !5541)
!5544 = !DILocation(line: 3296, column: 13, scope: !5538)
!5545 = !DILocalVariable(name: "red", scope: !5546, file: !1, line: 3298, type: !5)
!5546 = distinct !DILexicalBlock(scope: !5541, file: !1, line: 3297, column: 13)
!5547 = !DILocation(line: 3298, column: 25, scope: !5546)
!5548 = !DILocation(line: 3298, column: 37, scope: !5546)
!5549 = !DILocation(line: 3298, column: 33, scope: !5546)
!5550 = !DILocalVariable(name: "green", scope: !5546, file: !1, line: 3299, type: !5)
!5551 = !DILocation(line: 3299, column: 25, scope: !5546)
!5552 = !DILocation(line: 3299, column: 37, scope: !5546)
!5553 = !DILocation(line: 3299, column: 33, scope: !5546)
!5554 = !DILocalVariable(name: "blue", scope: !5546, file: !1, line: 3300, type: !5)
!5555 = !DILocation(line: 3300, column: 25, scope: !5546)
!5556 = !DILocation(line: 3300, column: 37, scope: !5546)
!5557 = !DILocation(line: 3300, column: 33, scope: !5546)
!5558 = !DILocation(line: 3302, column: 20, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5546, file: !1, line: 3302, column: 20)
!5560 = !DILocation(line: 3302, column: 27, scope: !5559)
!5561 = !DILocation(line: 3302, column: 24, scope: !5559)
!5562 = !DILocation(line: 3302, column: 33, scope: !5559)
!5563 = !DILocation(line: 3302, column: 36, scope: !5559)
!5564 = !DILocation(line: 3302, column: 43, scope: !5559)
!5565 = !DILocation(line: 3302, column: 40, scope: !5559)
!5566 = !DILocation(line: 3302, column: 20, scope: !5546)
!5567 = !DILocation(line: 3304, column: 29, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 3303, column: 16)
!5569 = !DILocation(line: 3308, column: 41, scope: !5568)
!5570 = !DILocation(line: 3308, column: 44, scope: !5568)
!5571 = !DILocation(line: 3308, column: 43, scope: !5568)
!5572 = !DILocation(line: 3308, column: 50, scope: !5568)
!5573 = !DILocation(line: 3308, column: 53, scope: !5568)
!5574 = !DILocation(line: 3308, column: 52, scope: !5568)
!5575 = !DILocation(line: 3308, column: 48, scope: !5568)
!5576 = !DILocation(line: 3308, column: 61, scope: !5568)
!5577 = !DILocation(line: 3308, column: 64, scope: !5568)
!5578 = !DILocation(line: 3308, column: 63, scope: !5568)
!5579 = !DILocation(line: 3308, column: 59, scope: !5568)
!5580 = !DILocation(line: 3308, column: 69, scope: !5568)
!5581 = !DILocation(line: 3308, column: 29, scope: !5568)
!5582 = !DILocation(line: 3308, column: 23, scope: !5568)
!5583 = !DILocation(line: 3308, column: 27, scope: !5568)
!5584 = !DILocation(line: 3309, column: 16, scope: !5568)
!5585 = !DILocation(line: 3312, column: 29, scope: !5559)
!5586 = !DILocation(line: 3312, column: 23, scope: !5559)
!5587 = !DILocation(line: 3312, column: 27, scope: !5559)
!5588 = !DILocation(line: 3314, column: 20, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5546, file: !1, line: 3314, column: 20)
!5590 = !DILocation(line: 3314, column: 20, scope: !5546)
!5591 = !DILocation(line: 3315, column: 33, scope: !5589)
!5592 = !DILocation(line: 3315, column: 29, scope: !5589)
!5593 = !DILocation(line: 3315, column: 23, scope: !5589)
!5594 = !DILocation(line: 3315, column: 27, scope: !5589)
!5595 = !DILocation(line: 3315, column: 19, scope: !5589)
!5596 = !DILocation(line: 3316, column: 13, scope: !5546)
!5597 = !DILocation(line: 3296, column: 41, scope: !5541)
!5598 = !DILocation(line: 3296, column: 13, scope: !5541)
!5599 = distinct !{!5599, !5544, !5600}
!5600 = !DILocation(line: 3316, column: 13, scope: !5538)
!5601 = !DILocation(line: 3318, column: 7, scope: !5421)
!5602 = !DILocation(line: 3323, column: 14, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5604, file: !1, line: 3323, column: 14)
!5604 = distinct !DILexicalBlock(scope: !5415, file: !1, line: 3321, column: 7)
!5605 = !DILocation(line: 3323, column: 23, scope: !5603)
!5606 = !DILocation(line: 3323, column: 37, scope: !5603)
!5607 = !DILocation(line: 3323, column: 45, scope: !5603)
!5608 = !DILocation(line: 3323, column: 48, scope: !5603)
!5609 = !DILocation(line: 3323, column: 57, scope: !5603)
!5610 = !DILocation(line: 3323, column: 73, scope: !5603)
!5611 = !DILocation(line: 3323, column: 14, scope: !5604)
!5612 = !DILocalVariable(name: "sp", scope: !5613, file: !1, line: 3325, type: !8)
!5613 = distinct !DILexicalBlock(scope: !5603, file: !1, line: 3324, column: 10)
!5614 = !DILocation(line: 3325, column: 23, scope: !5613)
!5615 = !DILocation(line: 3325, column: 28, scope: !5613)
!5616 = !DILocalVariable(name: "dp", scope: !5613, file: !1, line: 3326, type: !8)
!5617 = !DILocation(line: 3326, column: 23, scope: !5613)
!5618 = !DILocation(line: 3326, column: 28, scope: !5613)
!5619 = !DILocalVariable(name: "i", scope: !5613, file: !1, line: 3327, type: !10)
!5620 = !DILocation(line: 3327, column: 25, scope: !5613)
!5621 = !DILocation(line: 3329, column: 20, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5613, file: !1, line: 3329, column: 13)
!5623 = !DILocation(line: 3329, column: 18, scope: !5622)
!5624 = !DILocation(line: 3329, column: 25, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5622, file: !1, line: 3329, column: 13)
!5626 = !DILocation(line: 3329, column: 29, scope: !5625)
!5627 = !DILocation(line: 3329, column: 27, scope: !5625)
!5628 = !DILocation(line: 3329, column: 13, scope: !5622)
!5629 = !DILocalVariable(name: "red", scope: !5630, file: !1, line: 3331, type: !24)
!5630 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 3330, column: 13)
!5631 = !DILocation(line: 3331, column: 28, scope: !5630)
!5632 = !DILocalVariable(name: "green", scope: !5630, file: !1, line: 3331, type: !24)
!5633 = !DILocation(line: 3331, column: 33, scope: !5630)
!5634 = !DILocalVariable(name: "blue", scope: !5630, file: !1, line: 3331, type: !24)
!5635 = !DILocation(line: 3331, column: 40, scope: !5630)
!5636 = !DILocalVariable(name: "w", scope: !5630, file: !1, line: 3331, type: !24)
!5637 = !DILocation(line: 3331, column: 46, scope: !5630)
!5638 = !DILocation(line: 3333, column: 42, scope: !5630)
!5639 = !DILocation(line: 3333, column: 40, scope: !5630)
!5640 = !DILocation(line: 3333, column: 39, scope: !5630)
!5641 = !DILocation(line: 3333, column: 46, scope: !5630)
!5642 = !DILocation(line: 3333, column: 55, scope: !5630)
!5643 = !DILocation(line: 3333, column: 58, scope: !5630)
!5644 = !DILocation(line: 3333, column: 53, scope: !5630)
!5645 = !DILocation(line: 3333, column: 51, scope: !5630)
!5646 = !DILocation(line: 3333, column: 24, scope: !5630)
!5647 = !DILocation(line: 3333, column: 22, scope: !5630)
!5648 = !DILocation(line: 3333, column: 68, scope: !5630)
!5649 = !DILocation(line: 3334, column: 42, scope: !5630)
!5650 = !DILocation(line: 3334, column: 40, scope: !5630)
!5651 = !DILocation(line: 3334, column: 39, scope: !5630)
!5652 = !DILocation(line: 3334, column: 46, scope: !5630)
!5653 = !DILocation(line: 3334, column: 55, scope: !5630)
!5654 = !DILocation(line: 3334, column: 58, scope: !5630)
!5655 = !DILocation(line: 3334, column: 53, scope: !5630)
!5656 = !DILocation(line: 3334, column: 51, scope: !5630)
!5657 = !DILocation(line: 3334, column: 24, scope: !5630)
!5658 = !DILocation(line: 3334, column: 22, scope: !5630)
!5659 = !DILocation(line: 3334, column: 68, scope: !5630)
!5660 = !DILocation(line: 3335, column: 42, scope: !5630)
!5661 = !DILocation(line: 3335, column: 40, scope: !5630)
!5662 = !DILocation(line: 3335, column: 39, scope: !5630)
!5663 = !DILocation(line: 3335, column: 46, scope: !5630)
!5664 = !DILocation(line: 3335, column: 55, scope: !5630)
!5665 = !DILocation(line: 3335, column: 58, scope: !5630)
!5666 = !DILocation(line: 3335, column: 53, scope: !5630)
!5667 = !DILocation(line: 3335, column: 51, scope: !5630)
!5668 = !DILocation(line: 3335, column: 24, scope: !5630)
!5669 = !DILocation(line: 3335, column: 22, scope: !5630)
!5670 = !DILocation(line: 3335, column: 68, scope: !5630)
!5671 = !DILocation(line: 3337, column: 20, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5630, file: !1, line: 3337, column: 20)
!5673 = !DILocation(line: 3337, column: 27, scope: !5672)
!5674 = !DILocation(line: 3337, column: 24, scope: !5672)
!5675 = !DILocation(line: 3337, column: 33, scope: !5672)
!5676 = !DILocation(line: 3337, column: 36, scope: !5672)
!5677 = !DILocation(line: 3337, column: 43, scope: !5672)
!5678 = !DILocation(line: 3337, column: 40, scope: !5672)
!5679 = !DILocation(line: 3337, column: 20, scope: !5630)
!5680 = !DILocation(line: 3339, column: 23, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !1, line: 3339, column: 23)
!5682 = distinct !DILexicalBlock(scope: !5672, file: !1, line: 3338, column: 16)
!5683 = !DILocation(line: 3339, column: 32, scope: !5681)
!5684 = !DILocation(line: 3339, column: 47, scope: !5681)
!5685 = !DILocation(line: 3339, column: 23, scope: !5682)
!5686 = !DILocation(line: 3340, column: 26, scope: !5681)
!5687 = !DILocation(line: 3340, column: 35, scope: !5681)
!5688 = !DILocation(line: 3340, column: 51, scope: !5681)
!5689 = !DILocation(line: 3340, column: 54, scope: !5681)
!5690 = !DILocation(line: 3341, column: 29, scope: !5681)
!5691 = !DILocation(line: 3341, column: 38, scope: !5681)
!5692 = !DILocation(line: 3341, column: 26, scope: !5681)
!5693 = !DILocation(line: 3341, column: 51, scope: !5681)
!5694 = !DILocation(line: 3341, column: 54, scope: !5681)
!5695 = !DILocation(line: 3340, column: 24, scope: !5681)
!5696 = !DILocation(line: 3340, column: 22, scope: !5681)
!5697 = !DILocation(line: 3344, column: 26, scope: !5681)
!5698 = !DILocation(line: 3344, column: 24, scope: !5681)
!5699 = !DILocation(line: 3345, column: 16, scope: !5682)
!5700 = !DILocalVariable(name: "red_1", scope: !5701, file: !1, line: 3349, type: !24)
!5701 = distinct !DILexicalBlock(scope: !5672, file: !1, line: 3348, column: 16)
!5702 = !DILocation(line: 3349, column: 31, scope: !5701)
!5703 = !DILocation(line: 3349, column: 41, scope: !5701)
!5704 = !DILocation(line: 3349, column: 50, scope: !5701)
!5705 = !DILocation(line: 3349, column: 65, scope: !5701)
!5706 = !DILocation(line: 3349, column: 68, scope: !5701)
!5707 = !DILocation(line: 3350, column: 26, scope: !5701)
!5708 = !DILocation(line: 3350, column: 35, scope: !5701)
!5709 = !DILocation(line: 3350, column: 23, scope: !5701)
!5710 = !DILocation(line: 3350, column: 48, scope: !5701)
!5711 = !DILocation(line: 3350, column: 51, scope: !5701)
!5712 = !DILocalVariable(name: "green_1", scope: !5701, file: !1, line: 3351, type: !24)
!5713 = !DILocation(line: 3351, column: 31, scope: !5701)
!5714 = !DILocation(line: 3352, column: 23, scope: !5701)
!5715 = !DILocation(line: 3352, column: 32, scope: !5701)
!5716 = !DILocation(line: 3352, column: 47, scope: !5701)
!5717 = !DILocation(line: 3352, column: 52, scope: !5701)
!5718 = !DILocation(line: 3353, column: 23, scope: !5701)
!5719 = !DILocation(line: 3353, column: 32, scope: !5701)
!5720 = !DILocation(line: 3352, column: 59, scope: !5701)
!5721 = !DILocation(line: 3353, column: 45, scope: !5701)
!5722 = !DILocation(line: 3353, column: 50, scope: !5701)
!5723 = !DILocalVariable(name: "blue_1", scope: !5701, file: !1, line: 3354, type: !24)
!5724 = !DILocation(line: 3354, column: 31, scope: !5701)
!5725 = !DILocation(line: 3354, column: 41, scope: !5701)
!5726 = !DILocation(line: 3354, column: 50, scope: !5701)
!5727 = !DILocation(line: 3354, column: 65, scope: !5701)
!5728 = !DILocation(line: 3354, column: 69, scope: !5701)
!5729 = !DILocation(line: 3355, column: 26, scope: !5701)
!5730 = !DILocation(line: 3355, column: 35, scope: !5701)
!5731 = !DILocation(line: 3355, column: 23, scope: !5701)
!5732 = !DILocation(line: 3355, column: 48, scope: !5701)
!5733 = !DILocation(line: 3355, column: 52, scope: !5701)
!5734 = !DILocalVariable(name: "gray16", scope: !5701, file: !1, line: 3356, type: !24)
!5735 = !DILocation(line: 3356, column: 31, scope: !5701)
!5736 = !DILocation(line: 3356, column: 56, scope: !5701)
!5737 = !DILocation(line: 3356, column: 59, scope: !5701)
!5738 = !DILocation(line: 3356, column: 58, scope: !5701)
!5739 = !DILocation(line: 3356, column: 67, scope: !5701)
!5740 = !DILocation(line: 3356, column: 70, scope: !5701)
!5741 = !DILocation(line: 3356, column: 69, scope: !5701)
!5742 = !DILocation(line: 3356, column: 65, scope: !5701)
!5743 = !DILocation(line: 3357, column: 25, scope: !5701)
!5744 = !DILocation(line: 3357, column: 28, scope: !5701)
!5745 = !DILocation(line: 3357, column: 27, scope: !5701)
!5746 = !DILocation(line: 3357, column: 23, scope: !5701)
!5747 = !DILocation(line: 3357, column: 35, scope: !5701)
!5748 = !DILocation(line: 3357, column: 43, scope: !5701)
!5749 = !DILocation(line: 3356, column: 41, scope: !5701)
!5750 = !DILocation(line: 3358, column: 23, scope: !5701)
!5751 = !DILocation(line: 3358, column: 32, scope: !5701)
!5752 = !DILocation(line: 3358, column: 49, scope: !5701)
!5753 = !DILocation(line: 3358, column: 55, scope: !5701)
!5754 = !DILocation(line: 3359, column: 23, scope: !5701)
!5755 = !DILocation(line: 3359, column: 32, scope: !5701)
!5756 = !DILocation(line: 3358, column: 62, scope: !5701)
!5757 = !DILocation(line: 3359, column: 45, scope: !5701)
!5758 = !DILocation(line: 3359, column: 52, scope: !5701)
!5759 = !DILocation(line: 3358, column: 21, scope: !5701)
!5760 = !DILocation(line: 3360, column: 29, scope: !5701)
!5761 = !DILocation(line: 3363, column: 38, scope: !5630)
!5762 = !DILocation(line: 3363, column: 39, scope: !5630)
!5763 = !DILocation(line: 3363, column: 44, scope: !5630)
!5764 = !DILocation(line: 3363, column: 26, scope: !5630)
!5765 = !DILocation(line: 3363, column: 20, scope: !5630)
!5766 = !DILocation(line: 3363, column: 24, scope: !5630)
!5767 = !DILocation(line: 3364, column: 37, scope: !5630)
!5768 = !DILocation(line: 3364, column: 39, scope: !5630)
!5769 = !DILocation(line: 3364, column: 26, scope: !5630)
!5770 = !DILocation(line: 3364, column: 20, scope: !5630)
!5771 = !DILocation(line: 3364, column: 24, scope: !5630)
!5772 = !DILocation(line: 3366, column: 20, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5630, file: !1, line: 3366, column: 20)
!5774 = !DILocation(line: 3366, column: 20, scope: !5630)
!5775 = !DILocation(line: 3368, column: 33, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 3367, column: 16)
!5777 = !DILocation(line: 3368, column: 29, scope: !5776)
!5778 = !DILocation(line: 3368, column: 23, scope: !5776)
!5779 = !DILocation(line: 3368, column: 27, scope: !5776)
!5780 = !DILocation(line: 3369, column: 33, scope: !5776)
!5781 = !DILocation(line: 3369, column: 29, scope: !5776)
!5782 = !DILocation(line: 3369, column: 23, scope: !5776)
!5783 = !DILocation(line: 3369, column: 27, scope: !5776)
!5784 = !DILocation(line: 3370, column: 16, scope: !5776)
!5785 = !DILocation(line: 3371, column: 13, scope: !5630)
!5786 = !DILocation(line: 3329, column: 41, scope: !5625)
!5787 = !DILocation(line: 3329, column: 13, scope: !5625)
!5788 = distinct !{!5788, !5628, !5789}
!5789 = !DILocation(line: 3371, column: 13, scope: !5622)
!5790 = !DILocation(line: 3372, column: 10, scope: !5613)
!5791 = !DILocalVariable(name: "sp", scope: !5792, file: !1, line: 3376, type: !8)
!5792 = distinct !DILexicalBlock(scope: !5603, file: !1, line: 3375, column: 10)
!5793 = !DILocation(line: 3376, column: 23, scope: !5792)
!5794 = !DILocation(line: 3376, column: 28, scope: !5792)
!5795 = !DILocalVariable(name: "dp", scope: !5792, file: !1, line: 3377, type: !8)
!5796 = !DILocation(line: 3377, column: 23, scope: !5792)
!5797 = !DILocation(line: 3377, column: 28, scope: !5792)
!5798 = !DILocalVariable(name: "i", scope: !5792, file: !1, line: 3378, type: !10)
!5799 = !DILocation(line: 3378, column: 25, scope: !5792)
!5800 = !DILocation(line: 3380, column: 20, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5792, file: !1, line: 3380, column: 13)
!5802 = !DILocation(line: 3380, column: 18, scope: !5801)
!5803 = !DILocation(line: 3380, column: 25, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 3380, column: 13)
!5805 = !DILocation(line: 3380, column: 29, scope: !5804)
!5806 = !DILocation(line: 3380, column: 27, scope: !5804)
!5807 = !DILocation(line: 3380, column: 13, scope: !5801)
!5808 = !DILocalVariable(name: "red", scope: !5809, file: !1, line: 3382, type: !24)
!5809 = distinct !DILexicalBlock(scope: !5804, file: !1, line: 3381, column: 13)
!5810 = !DILocation(line: 3382, column: 28, scope: !5809)
!5811 = !DILocalVariable(name: "green", scope: !5809, file: !1, line: 3382, type: !24)
!5812 = !DILocation(line: 3382, column: 33, scope: !5809)
!5813 = !DILocalVariable(name: "blue", scope: !5809, file: !1, line: 3382, type: !24)
!5814 = !DILocation(line: 3382, column: 40, scope: !5809)
!5815 = !DILocalVariable(name: "gray16", scope: !5809, file: !1, line: 3382, type: !24)
!5816 = !DILocation(line: 3382, column: 46, scope: !5809)
!5817 = !DILocation(line: 3384, column: 42, scope: !5809)
!5818 = !DILocation(line: 3384, column: 40, scope: !5809)
!5819 = !DILocation(line: 3384, column: 39, scope: !5809)
!5820 = !DILocation(line: 3384, column: 46, scope: !5809)
!5821 = !DILocation(line: 3384, column: 55, scope: !5809)
!5822 = !DILocation(line: 3384, column: 58, scope: !5809)
!5823 = !DILocation(line: 3384, column: 53, scope: !5809)
!5824 = !DILocation(line: 3384, column: 51, scope: !5809)
!5825 = !DILocation(line: 3384, column: 24, scope: !5809)
!5826 = !DILocation(line: 3384, column: 22, scope: !5809)
!5827 = !DILocation(line: 3384, column: 68, scope: !5809)
!5828 = !DILocation(line: 3385, column: 42, scope: !5809)
!5829 = !DILocation(line: 3385, column: 40, scope: !5809)
!5830 = !DILocation(line: 3385, column: 39, scope: !5809)
!5831 = !DILocation(line: 3385, column: 46, scope: !5809)
!5832 = !DILocation(line: 3385, column: 55, scope: !5809)
!5833 = !DILocation(line: 3385, column: 58, scope: !5809)
!5834 = !DILocation(line: 3385, column: 53, scope: !5809)
!5835 = !DILocation(line: 3385, column: 51, scope: !5809)
!5836 = !DILocation(line: 3385, column: 24, scope: !5809)
!5837 = !DILocation(line: 3385, column: 22, scope: !5809)
!5838 = !DILocation(line: 3385, column: 68, scope: !5809)
!5839 = !DILocation(line: 3386, column: 42, scope: !5809)
!5840 = !DILocation(line: 3386, column: 40, scope: !5809)
!5841 = !DILocation(line: 3386, column: 39, scope: !5809)
!5842 = !DILocation(line: 3386, column: 46, scope: !5809)
!5843 = !DILocation(line: 3386, column: 55, scope: !5809)
!5844 = !DILocation(line: 3386, column: 58, scope: !5809)
!5845 = !DILocation(line: 3386, column: 53, scope: !5809)
!5846 = !DILocation(line: 3386, column: 51, scope: !5809)
!5847 = !DILocation(line: 3386, column: 24, scope: !5809)
!5848 = !DILocation(line: 3386, column: 22, scope: !5809)
!5849 = !DILocation(line: 3386, column: 68, scope: !5809)
!5850 = !DILocation(line: 3388, column: 20, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 3388, column: 20)
!5852 = !DILocation(line: 3388, column: 27, scope: !5851)
!5853 = !DILocation(line: 3388, column: 24, scope: !5851)
!5854 = !DILocation(line: 3388, column: 33, scope: !5851)
!5855 = !DILocation(line: 3388, column: 36, scope: !5851)
!5856 = !DILocation(line: 3388, column: 43, scope: !5851)
!5857 = !DILocation(line: 3388, column: 40, scope: !5851)
!5858 = !DILocation(line: 3388, column: 20, scope: !5809)
!5859 = !DILocation(line: 3389, column: 29, scope: !5851)
!5860 = !DILocation(line: 3389, column: 19, scope: !5851)
!5861 = !DILocation(line: 3395, column: 41, scope: !5809)
!5862 = !DILocation(line: 3395, column: 44, scope: !5809)
!5863 = !DILocation(line: 3395, column: 43, scope: !5809)
!5864 = !DILocation(line: 3395, column: 50, scope: !5809)
!5865 = !DILocation(line: 3395, column: 53, scope: !5809)
!5866 = !DILocation(line: 3395, column: 52, scope: !5809)
!5867 = !DILocation(line: 3395, column: 48, scope: !5809)
!5868 = !DILocation(line: 3395, column: 61, scope: !5809)
!5869 = !DILocation(line: 3395, column: 64, scope: !5809)
!5870 = !DILocation(line: 3395, column: 63, scope: !5809)
!5871 = !DILocation(line: 3395, column: 59, scope: !5809)
!5872 = !DILocation(line: 3395, column: 69, scope: !5809)
!5873 = !DILocation(line: 3395, column: 78, scope: !5809)
!5874 = !DILocation(line: 3395, column: 26, scope: !5809)
!5875 = !DILocation(line: 3395, column: 24, scope: !5809)
!5876 = !DILocation(line: 3397, column: 38, scope: !5809)
!5877 = !DILocation(line: 3397, column: 44, scope: !5809)
!5878 = !DILocation(line: 3397, column: 49, scope: !5809)
!5879 = !DILocation(line: 3397, column: 26, scope: !5809)
!5880 = !DILocation(line: 3397, column: 20, scope: !5809)
!5881 = !DILocation(line: 3397, column: 24, scope: !5809)
!5882 = !DILocation(line: 3398, column: 37, scope: !5809)
!5883 = !DILocation(line: 3398, column: 44, scope: !5809)
!5884 = !DILocation(line: 3398, column: 26, scope: !5809)
!5885 = !DILocation(line: 3398, column: 20, scope: !5809)
!5886 = !DILocation(line: 3398, column: 24, scope: !5809)
!5887 = !DILocation(line: 3400, column: 20, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 3400, column: 20)
!5889 = !DILocation(line: 3400, column: 20, scope: !5809)
!5890 = !DILocation(line: 3402, column: 33, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !1, line: 3401, column: 16)
!5892 = !DILocation(line: 3402, column: 29, scope: !5891)
!5893 = !DILocation(line: 3402, column: 23, scope: !5891)
!5894 = !DILocation(line: 3402, column: 27, scope: !5891)
!5895 = !DILocation(line: 3403, column: 33, scope: !5891)
!5896 = !DILocation(line: 3403, column: 29, scope: !5891)
!5897 = !DILocation(line: 3403, column: 23, scope: !5891)
!5898 = !DILocation(line: 3403, column: 27, scope: !5891)
!5899 = !DILocation(line: 3404, column: 16, scope: !5891)
!5900 = !DILocation(line: 3405, column: 13, scope: !5809)
!5901 = !DILocation(line: 3380, column: 41, scope: !5804)
!5902 = !DILocation(line: 3380, column: 13, scope: !5804)
!5903 = distinct !{!5903, !5807, !5904}
!5904 = !DILocation(line: 3405, column: 13, scope: !5801)
!5905 = !DILocation(line: 3409, column: 39, scope: !5388)
!5906 = !DILocation(line: 3409, column: 49, scope: !5388)
!5907 = !DILocation(line: 3409, column: 58, scope: !5388)
!5908 = !DILocation(line: 3409, column: 28, scope: !5388)
!5909 = !DILocation(line: 3409, column: 7, scope: !5388)
!5910 = !DILocation(line: 3409, column: 17, scope: !5388)
!5911 = !DILocation(line: 3409, column: 26, scope: !5388)
!5912 = !DILocation(line: 3410, column: 41, scope: !5388)
!5913 = !DILocation(line: 3410, column: 51, scope: !5388)
!5914 = !DILocation(line: 3410, column: 62, scope: !5388)
!5915 = !DILocation(line: 3410, column: 30, scope: !5388)
!5916 = !DILocation(line: 3410, column: 7, scope: !5388)
!5917 = !DILocation(line: 3410, column: 17, scope: !5388)
!5918 = !DILocation(line: 3410, column: 28, scope: !5388)
!5919 = !DILocation(line: 3412, column: 42, scope: !5388)
!5920 = !DILocation(line: 3412, column: 52, scope: !5388)
!5921 = !DILocation(line: 3413, column: 11, scope: !5388)
!5922 = !DILocation(line: 3413, column: 21, scope: !5388)
!5923 = !DILocation(line: 3412, column: 61, scope: !5388)
!5924 = !DILocation(line: 3412, column: 31, scope: !5388)
!5925 = !DILocation(line: 3412, column: 7, scope: !5388)
!5926 = !DILocation(line: 3412, column: 17, scope: !5388)
!5927 = !DILocation(line: 3412, column: 29, scope: !5388)
!5928 = !DILocation(line: 3414, column: 28, scope: !5388)
!5929 = !DILocation(line: 3414, column: 7, scope: !5388)
!5930 = !DILocation(line: 3414, column: 17, scope: !5388)
!5931 = !DILocation(line: 3414, column: 26, scope: !5388)
!5932 = !DILocation(line: 3415, column: 4, scope: !5388)
!5933 = !DILocation(line: 3416, column: 11, scope: !5367)
!5934 = !DILocation(line: 3416, column: 4, scope: !5367)
!5935 = distinct !DISubprogram(name: "png_do_gray_to_rgb", scope: !1, file: !1, line: 3087, type: !5936, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5936 = !DISubroutineType(types: !5937)
!5937 = !{null, !101, !8}
!5938 = !DILocalVariable(name: "row_info", arg: 1, scope: !5935, file: !1, line: 3087, type: !101)
!5939 = !DILocation(line: 3087, column: 34, scope: !5935)
!5940 = !DILocalVariable(name: "row", arg: 2, scope: !5935, file: !1, line: 3087, type: !8)
!5941 = !DILocation(line: 3087, column: 54, scope: !5935)
!5942 = !DILocalVariable(name: "i", scope: !5935, file: !1, line: 3089, type: !10)
!5943 = !DILocation(line: 3089, column: 16, scope: !5935)
!5944 = !DILocalVariable(name: "row_width", scope: !5935, file: !1, line: 3090, type: !10)
!5945 = !DILocation(line: 3090, column: 16, scope: !5935)
!5946 = !DILocation(line: 3090, column: 28, scope: !5935)
!5947 = !DILocation(line: 3090, column: 38, scope: !5935)
!5948 = !DILocation(line: 3094, column: 8, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5935, file: !1, line: 3094, column: 8)
!5950 = !DILocation(line: 3094, column: 18, scope: !5949)
!5951 = !DILocation(line: 3094, column: 28, scope: !5949)
!5952 = !DILocation(line: 3094, column: 33, scope: !5949)
!5953 = !DILocation(line: 3095, column: 10, scope: !5949)
!5954 = !DILocation(line: 3095, column: 20, scope: !5949)
!5955 = !DILocation(line: 3095, column: 31, scope: !5949)
!5956 = !DILocation(line: 3094, column: 8, scope: !5935)
!5957 = !DILocation(line: 3097, column: 11, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !1, line: 3097, column: 11)
!5959 = distinct !DILexicalBlock(scope: !5949, file: !1, line: 3096, column: 4)
!5960 = !DILocation(line: 3097, column: 21, scope: !5958)
!5961 = !DILocation(line: 3097, column: 32, scope: !5958)
!5962 = !DILocation(line: 3097, column: 11, scope: !5959)
!5963 = !DILocation(line: 3099, column: 14, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !1, line: 3099, column: 14)
!5965 = distinct !DILexicalBlock(scope: !5958, file: !1, line: 3098, column: 7)
!5966 = !DILocation(line: 3099, column: 24, scope: !5964)
!5967 = !DILocation(line: 3099, column: 34, scope: !5964)
!5968 = !DILocation(line: 3099, column: 14, scope: !5965)
!5969 = !DILocalVariable(name: "sp", scope: !5970, file: !1, line: 3102, type: !8)
!5970 = distinct !DILexicalBlock(scope: !5964, file: !1, line: 3100, column: 10)
!5971 = !DILocation(line: 3102, column: 23, scope: !5970)
!5972 = !DILocation(line: 3102, column: 28, scope: !5970)
!5973 = !DILocation(line: 3102, column: 46, scope: !5970)
!5974 = !DILocation(line: 3102, column: 34, scope: !5970)
!5975 = !DILocation(line: 3102, column: 32, scope: !5970)
!5976 = !DILocation(line: 3102, column: 56, scope: !5970)
!5977 = !DILocalVariable(name: "dp", scope: !5970, file: !1, line: 3103, type: !8)
!5978 = !DILocation(line: 3103, column: 23, scope: !5970)
!5979 = !DILocation(line: 3103, column: 28, scope: !5970)
!5980 = !DILocation(line: 3103, column: 46, scope: !5970)
!5981 = !DILocation(line: 3103, column: 34, scope: !5970)
!5982 = !DILocation(line: 3103, column: 56, scope: !5970)
!5983 = !DILocation(line: 3103, column: 32, scope: !5970)
!5984 = !DILocation(line: 3104, column: 20, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 3104, column: 13)
!5986 = !DILocation(line: 3104, column: 18, scope: !5985)
!5987 = !DILocation(line: 3104, column: 25, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3104, column: 13)
!5989 = !DILocation(line: 3104, column: 29, scope: !5988)
!5990 = !DILocation(line: 3104, column: 27, scope: !5988)
!5991 = !DILocation(line: 3104, column: 13, scope: !5985)
!5992 = !DILocation(line: 3106, column: 27, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5988, file: !1, line: 3105, column: 13)
!5994 = !DILocation(line: 3106, column: 26, scope: !5993)
!5995 = !DILocation(line: 3106, column: 20, scope: !5993)
!5996 = !DILocation(line: 3106, column: 24, scope: !5993)
!5997 = !DILocation(line: 3107, column: 27, scope: !5993)
!5998 = !DILocation(line: 3107, column: 26, scope: !5993)
!5999 = !DILocation(line: 3107, column: 20, scope: !5993)
!6000 = !DILocation(line: 3107, column: 24, scope: !5993)
!6001 = !DILocation(line: 3108, column: 30, scope: !5993)
!6002 = !DILocation(line: 3108, column: 26, scope: !5993)
!6003 = !DILocation(line: 3108, column: 20, scope: !5993)
!6004 = !DILocation(line: 3108, column: 24, scope: !5993)
!6005 = !DILocation(line: 3109, column: 13, scope: !5993)
!6006 = !DILocation(line: 3104, column: 41, scope: !5988)
!6007 = !DILocation(line: 3104, column: 13, scope: !5988)
!6008 = distinct !{!6008, !5991, !6009}
!6009 = !DILocation(line: 3109, column: 13, scope: !5985)
!6010 = !DILocation(line: 3110, column: 10, scope: !5970)
!6011 = !DILocalVariable(name: "sp", scope: !6012, file: !1, line: 3115, type: !8)
!6012 = distinct !DILexicalBlock(scope: !5964, file: !1, line: 3113, column: 10)
!6013 = !DILocation(line: 3115, column: 23, scope: !6012)
!6014 = !DILocation(line: 3115, column: 28, scope: !6012)
!6015 = !DILocation(line: 3115, column: 46, scope: !6012)
!6016 = !DILocation(line: 3115, column: 34, scope: !6012)
!6017 = !DILocation(line: 3115, column: 56, scope: !6012)
!6018 = !DILocation(line: 3115, column: 32, scope: !6012)
!6019 = !DILocation(line: 3115, column: 60, scope: !6012)
!6020 = !DILocalVariable(name: "dp", scope: !6012, file: !1, line: 3116, type: !8)
!6021 = !DILocation(line: 3116, column: 23, scope: !6012)
!6022 = !DILocation(line: 3116, column: 28, scope: !6012)
!6023 = !DILocation(line: 3116, column: 46, scope: !6012)
!6024 = !DILocation(line: 3116, column: 34, scope: !6012)
!6025 = !DILocation(line: 3116, column: 56, scope: !6012)
!6026 = !DILocation(line: 3116, column: 32, scope: !6012)
!6027 = !DILocation(line: 3117, column: 20, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6012, file: !1, line: 3117, column: 13)
!6029 = !DILocation(line: 3117, column: 18, scope: !6028)
!6030 = !DILocation(line: 3117, column: 25, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !1, line: 3117, column: 13)
!6032 = !DILocation(line: 3117, column: 29, scope: !6031)
!6033 = !DILocation(line: 3117, column: 27, scope: !6031)
!6034 = !DILocation(line: 3117, column: 13, scope: !6028)
!6035 = !DILocation(line: 3119, column: 27, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 3118, column: 13)
!6037 = !DILocation(line: 3119, column: 26, scope: !6036)
!6038 = !DILocation(line: 3119, column: 20, scope: !6036)
!6039 = !DILocation(line: 3119, column: 24, scope: !6036)
!6040 = !DILocation(line: 3120, column: 28, scope: !6036)
!6041 = !DILocation(line: 3120, column: 31, scope: !6036)
!6042 = !DILocation(line: 3120, column: 26, scope: !6036)
!6043 = !DILocation(line: 3120, column: 20, scope: !6036)
!6044 = !DILocation(line: 3120, column: 24, scope: !6036)
!6045 = !DILocation(line: 3121, column: 27, scope: !6036)
!6046 = !DILocation(line: 3121, column: 26, scope: !6036)
!6047 = !DILocation(line: 3121, column: 20, scope: !6036)
!6048 = !DILocation(line: 3121, column: 24, scope: !6036)
!6049 = !DILocation(line: 3122, column: 28, scope: !6036)
!6050 = !DILocation(line: 3122, column: 31, scope: !6036)
!6051 = !DILocation(line: 3122, column: 26, scope: !6036)
!6052 = !DILocation(line: 3122, column: 20, scope: !6036)
!6053 = !DILocation(line: 3122, column: 24, scope: !6036)
!6054 = !DILocation(line: 3123, column: 30, scope: !6036)
!6055 = !DILocation(line: 3123, column: 26, scope: !6036)
!6056 = !DILocation(line: 3123, column: 20, scope: !6036)
!6057 = !DILocation(line: 3123, column: 24, scope: !6036)
!6058 = !DILocation(line: 3124, column: 30, scope: !6036)
!6059 = !DILocation(line: 3124, column: 26, scope: !6036)
!6060 = !DILocation(line: 3124, column: 20, scope: !6036)
!6061 = !DILocation(line: 3124, column: 24, scope: !6036)
!6062 = !DILocation(line: 3125, column: 13, scope: !6036)
!6063 = !DILocation(line: 3117, column: 41, scope: !6031)
!6064 = !DILocation(line: 3117, column: 13, scope: !6031)
!6065 = distinct !{!6065, !6034, !6066}
!6066 = !DILocation(line: 3125, column: 13, scope: !6028)
!6067 = !DILocation(line: 3127, column: 7, scope: !5965)
!6068 = !DILocation(line: 3129, column: 16, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5958, file: !1, line: 3129, column: 16)
!6070 = !DILocation(line: 3129, column: 26, scope: !6069)
!6071 = !DILocation(line: 3129, column: 37, scope: !6069)
!6072 = !DILocation(line: 3129, column: 16, scope: !5958)
!6073 = !DILocation(line: 3131, column: 14, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !1, line: 3131, column: 14)
!6075 = distinct !DILexicalBlock(scope: !6069, file: !1, line: 3130, column: 7)
!6076 = !DILocation(line: 3131, column: 24, scope: !6074)
!6077 = !DILocation(line: 3131, column: 34, scope: !6074)
!6078 = !DILocation(line: 3131, column: 14, scope: !6075)
!6079 = !DILocalVariable(name: "sp", scope: !6080, file: !1, line: 3134, type: !8)
!6080 = distinct !DILexicalBlock(scope: !6074, file: !1, line: 3132, column: 10)
!6081 = !DILocation(line: 3134, column: 23, scope: !6080)
!6082 = !DILocation(line: 3134, column: 28, scope: !6080)
!6083 = !DILocation(line: 3134, column: 46, scope: !6080)
!6084 = !DILocation(line: 3134, column: 34, scope: !6080)
!6085 = !DILocation(line: 3134, column: 56, scope: !6080)
!6086 = !DILocation(line: 3134, column: 32, scope: !6080)
!6087 = !DILocation(line: 3134, column: 60, scope: !6080)
!6088 = !DILocalVariable(name: "dp", scope: !6080, file: !1, line: 3135, type: !8)
!6089 = !DILocation(line: 3135, column: 23, scope: !6080)
!6090 = !DILocation(line: 3135, column: 28, scope: !6080)
!6091 = !DILocation(line: 3135, column: 46, scope: !6080)
!6092 = !DILocation(line: 3135, column: 34, scope: !6080)
!6093 = !DILocation(line: 3135, column: 56, scope: !6080)
!6094 = !DILocation(line: 3135, column: 32, scope: !6080)
!6095 = !DILocation(line: 3136, column: 20, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 3136, column: 13)
!6097 = !DILocation(line: 3136, column: 18, scope: !6096)
!6098 = !DILocation(line: 3136, column: 25, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6096, file: !1, line: 3136, column: 13)
!6100 = !DILocation(line: 3136, column: 29, scope: !6099)
!6101 = !DILocation(line: 3136, column: 27, scope: !6099)
!6102 = !DILocation(line: 3136, column: 13, scope: !6096)
!6103 = !DILocation(line: 3138, column: 30, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !1, line: 3137, column: 13)
!6105 = !DILocation(line: 3138, column: 26, scope: !6104)
!6106 = !DILocation(line: 3138, column: 20, scope: !6104)
!6107 = !DILocation(line: 3138, column: 24, scope: !6104)
!6108 = !DILocation(line: 3139, column: 27, scope: !6104)
!6109 = !DILocation(line: 3139, column: 26, scope: !6104)
!6110 = !DILocation(line: 3139, column: 20, scope: !6104)
!6111 = !DILocation(line: 3139, column: 24, scope: !6104)
!6112 = !DILocation(line: 3140, column: 27, scope: !6104)
!6113 = !DILocation(line: 3140, column: 26, scope: !6104)
!6114 = !DILocation(line: 3140, column: 20, scope: !6104)
!6115 = !DILocation(line: 3140, column: 24, scope: !6104)
!6116 = !DILocation(line: 3141, column: 30, scope: !6104)
!6117 = !DILocation(line: 3141, column: 26, scope: !6104)
!6118 = !DILocation(line: 3141, column: 20, scope: !6104)
!6119 = !DILocation(line: 3141, column: 24, scope: !6104)
!6120 = !DILocation(line: 3142, column: 13, scope: !6104)
!6121 = !DILocation(line: 3136, column: 41, scope: !6099)
!6122 = !DILocation(line: 3136, column: 13, scope: !6099)
!6123 = distinct !{!6123, !6102, !6124}
!6124 = !DILocation(line: 3142, column: 13, scope: !6096)
!6125 = !DILocation(line: 3143, column: 10, scope: !6080)
!6126 = !DILocalVariable(name: "sp", scope: !6127, file: !1, line: 3148, type: !8)
!6127 = distinct !DILexicalBlock(scope: !6074, file: !1, line: 3146, column: 10)
!6128 = !DILocation(line: 3148, column: 23, scope: !6127)
!6129 = !DILocation(line: 3148, column: 28, scope: !6127)
!6130 = !DILocation(line: 3148, column: 46, scope: !6127)
!6131 = !DILocation(line: 3148, column: 34, scope: !6127)
!6132 = !DILocation(line: 3148, column: 56, scope: !6127)
!6133 = !DILocation(line: 3148, column: 32, scope: !6127)
!6134 = !DILocation(line: 3148, column: 60, scope: !6127)
!6135 = !DILocalVariable(name: "dp", scope: !6127, file: !1, line: 3149, type: !8)
!6136 = !DILocation(line: 3149, column: 23, scope: !6127)
!6137 = !DILocation(line: 3149, column: 28, scope: !6127)
!6138 = !DILocation(line: 3149, column: 46, scope: !6127)
!6139 = !DILocation(line: 3149, column: 34, scope: !6127)
!6140 = !DILocation(line: 3149, column: 56, scope: !6127)
!6141 = !DILocation(line: 3149, column: 32, scope: !6127)
!6142 = !DILocation(line: 3150, column: 20, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6127, file: !1, line: 3150, column: 13)
!6144 = !DILocation(line: 3150, column: 18, scope: !6143)
!6145 = !DILocation(line: 3150, column: 25, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6143, file: !1, line: 3150, column: 13)
!6147 = !DILocation(line: 3150, column: 29, scope: !6146)
!6148 = !DILocation(line: 3150, column: 27, scope: !6146)
!6149 = !DILocation(line: 3150, column: 13, scope: !6143)
!6150 = !DILocation(line: 3152, column: 30, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6146, file: !1, line: 3151, column: 13)
!6152 = !DILocation(line: 3152, column: 26, scope: !6151)
!6153 = !DILocation(line: 3152, column: 20, scope: !6151)
!6154 = !DILocation(line: 3152, column: 24, scope: !6151)
!6155 = !DILocation(line: 3153, column: 30, scope: !6151)
!6156 = !DILocation(line: 3153, column: 26, scope: !6151)
!6157 = !DILocation(line: 3153, column: 20, scope: !6151)
!6158 = !DILocation(line: 3153, column: 24, scope: !6151)
!6159 = !DILocation(line: 3154, column: 27, scope: !6151)
!6160 = !DILocation(line: 3154, column: 26, scope: !6151)
!6161 = !DILocation(line: 3154, column: 20, scope: !6151)
!6162 = !DILocation(line: 3154, column: 24, scope: !6151)
!6163 = !DILocation(line: 3155, column: 28, scope: !6151)
!6164 = !DILocation(line: 3155, column: 31, scope: !6151)
!6165 = !DILocation(line: 3155, column: 26, scope: !6151)
!6166 = !DILocation(line: 3155, column: 20, scope: !6151)
!6167 = !DILocation(line: 3155, column: 24, scope: !6151)
!6168 = !DILocation(line: 3156, column: 27, scope: !6151)
!6169 = !DILocation(line: 3156, column: 26, scope: !6151)
!6170 = !DILocation(line: 3156, column: 20, scope: !6151)
!6171 = !DILocation(line: 3156, column: 24, scope: !6151)
!6172 = !DILocation(line: 3157, column: 28, scope: !6151)
!6173 = !DILocation(line: 3157, column: 31, scope: !6151)
!6174 = !DILocation(line: 3157, column: 26, scope: !6151)
!6175 = !DILocation(line: 3157, column: 20, scope: !6151)
!6176 = !DILocation(line: 3157, column: 24, scope: !6151)
!6177 = !DILocation(line: 3158, column: 30, scope: !6151)
!6178 = !DILocation(line: 3158, column: 26, scope: !6151)
!6179 = !DILocation(line: 3158, column: 20, scope: !6151)
!6180 = !DILocation(line: 3158, column: 24, scope: !6151)
!6181 = !DILocation(line: 3159, column: 30, scope: !6151)
!6182 = !DILocation(line: 3159, column: 26, scope: !6151)
!6183 = !DILocation(line: 3159, column: 20, scope: !6151)
!6184 = !DILocation(line: 3159, column: 24, scope: !6151)
!6185 = !DILocation(line: 3160, column: 13, scope: !6151)
!6186 = !DILocation(line: 3150, column: 41, scope: !6146)
!6187 = !DILocation(line: 3150, column: 13, scope: !6146)
!6188 = distinct !{!6188, !6149, !6189}
!6189 = !DILocation(line: 3160, column: 13, scope: !6143)
!6190 = !DILocation(line: 3162, column: 7, scope: !6075)
!6191 = !DILocation(line: 3163, column: 39, scope: !5959)
!6192 = !DILocation(line: 3163, column: 49, scope: !5959)
!6193 = !DILocation(line: 3163, column: 58, scope: !5959)
!6194 = !DILocation(line: 3163, column: 28, scope: !5959)
!6195 = !DILocation(line: 3163, column: 7, scope: !5959)
!6196 = !DILocation(line: 3163, column: 17, scope: !5959)
!6197 = !DILocation(line: 3163, column: 26, scope: !5959)
!6198 = !DILocation(line: 3164, column: 7, scope: !5959)
!6199 = !DILocation(line: 3164, column: 17, scope: !5959)
!6200 = !DILocation(line: 3164, column: 28, scope: !5959)
!6201 = !DILocation(line: 3165, column: 42, scope: !5959)
!6202 = !DILocation(line: 3165, column: 52, scope: !5959)
!6203 = !DILocation(line: 3166, column: 11, scope: !5959)
!6204 = !DILocation(line: 3166, column: 21, scope: !5959)
!6205 = !DILocation(line: 3165, column: 61, scope: !5959)
!6206 = !DILocation(line: 3165, column: 31, scope: !5959)
!6207 = !DILocation(line: 3165, column: 7, scope: !5959)
!6208 = !DILocation(line: 3165, column: 17, scope: !5959)
!6209 = !DILocation(line: 3165, column: 29, scope: !5959)
!6210 = !DILocation(line: 3167, column: 28, scope: !5959)
!6211 = !DILocation(line: 3167, column: 7, scope: !5959)
!6212 = !DILocation(line: 3167, column: 17, scope: !5959)
!6213 = !DILocation(line: 3167, column: 26, scope: !5959)
!6214 = !DILocation(line: 3168, column: 4, scope: !5959)
!6215 = !DILocation(line: 3169, column: 1, scope: !5935)
!6216 = distinct !DISubprogram(name: "png_do_compose", scope: !1, file: !1, line: 3486, type: !6217, scopeLine: 3487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !101, !8, !39}
!6219 = !DILocalVariable(name: "row_info", arg: 1, scope: !6216, file: !1, line: 3486, type: !101)
!6220 = !DILocation(line: 3486, column: 30, scope: !6216)
!6221 = !DILocalVariable(name: "row", arg: 2, scope: !6216, file: !1, line: 3486, type: !8)
!6222 = !DILocation(line: 3486, column: 50, scope: !6216)
!6223 = !DILocalVariable(name: "png_ptr", arg: 3, scope: !6216, file: !1, line: 3486, type: !39)
!6224 = !DILocation(line: 3486, column: 67, scope: !6216)
!6225 = !DILocalVariable(name: "gamma_table", scope: !6216, file: !1, line: 3489, type: !477)
!6226 = !DILocation(line: 3489, column: 20, scope: !6216)
!6227 = !DILocation(line: 3489, column: 34, scope: !6216)
!6228 = !DILocation(line: 3489, column: 43, scope: !6216)
!6229 = !DILocalVariable(name: "gamma_from_1", scope: !6216, file: !1, line: 3490, type: !477)
!6230 = !DILocation(line: 3490, column: 20, scope: !6216)
!6231 = !DILocation(line: 3490, column: 35, scope: !6216)
!6232 = !DILocation(line: 3490, column: 44, scope: !6216)
!6233 = !DILocalVariable(name: "gamma_to_1", scope: !6216, file: !1, line: 3491, type: !477)
!6234 = !DILocation(line: 3491, column: 20, scope: !6216)
!6235 = !DILocation(line: 3491, column: 33, scope: !6216)
!6236 = !DILocation(line: 3491, column: 42, scope: !6216)
!6237 = !DILocalVariable(name: "gamma_16", scope: !6216, file: !1, line: 3492, type: !6238)
!6238 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_uint_16pp", file: !6239, line: 181, baseType: !6240)
!6239 = !DIFile(filename: "libpng/pngpriv.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6241, size: 64)
!6241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!6242 = !DILocation(line: 3492, column: 24, scope: !6216)
!6243 = !DILocation(line: 3492, column: 35, scope: !6216)
!6244 = !DILocation(line: 3492, column: 44, scope: !6216)
!6245 = !DILocalVariable(name: "gamma_16_from_1", scope: !6216, file: !1, line: 3493, type: !6238)
!6246 = !DILocation(line: 3493, column: 24, scope: !6216)
!6247 = !DILocation(line: 3493, column: 42, scope: !6216)
!6248 = !DILocation(line: 3493, column: 51, scope: !6216)
!6249 = !DILocalVariable(name: "gamma_16_to_1", scope: !6216, file: !1, line: 3494, type: !6238)
!6250 = !DILocation(line: 3494, column: 24, scope: !6216)
!6251 = !DILocation(line: 3494, column: 40, scope: !6216)
!6252 = !DILocation(line: 3494, column: 49, scope: !6216)
!6253 = !DILocalVariable(name: "gamma_shift", scope: !6216, file: !1, line: 3495, type: !12)
!6254 = !DILocation(line: 3495, column: 8, scope: !6216)
!6255 = !DILocation(line: 3495, column: 22, scope: !6216)
!6256 = !DILocation(line: 3495, column: 31, scope: !6216)
!6257 = !DILocalVariable(name: "sp", scope: !6216, file: !1, line: 3498, type: !8)
!6258 = !DILocation(line: 3498, column: 14, scope: !6216)
!6259 = !DILocalVariable(name: "i", scope: !6216, file: !1, line: 3499, type: !10)
!6260 = !DILocation(line: 3499, column: 16, scope: !6216)
!6261 = !DILocalVariable(name: "row_width", scope: !6216, file: !1, line: 3500, type: !10)
!6262 = !DILocation(line: 3500, column: 16, scope: !6216)
!6263 = !DILocation(line: 3500, column: 28, scope: !6216)
!6264 = !DILocation(line: 3500, column: 38, scope: !6216)
!6265 = !DILocalVariable(name: "optimize", scope: !6216, file: !1, line: 3501, type: !12)
!6266 = !DILocation(line: 3501, column: 8, scope: !6216)
!6267 = !DILocation(line: 3501, column: 20, scope: !6216)
!6268 = !DILocation(line: 3501, column: 29, scope: !6216)
!6269 = !DILocation(line: 3501, column: 35, scope: !6216)
!6270 = !DILocation(line: 3501, column: 62, scope: !6216)
!6271 = !DILocalVariable(name: "shift", scope: !6216, file: !1, line: 3502, type: !12)
!6272 = !DILocation(line: 3502, column: 8, scope: !6216)
!6273 = !DILocation(line: 3507, column: 15, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 3506, column: 4)
!6275 = !DILocation(line: 3507, column: 25, scope: !6274)
!6276 = !DILocation(line: 3507, column: 7, scope: !6274)
!6277 = !DILocation(line: 3511, column: 21, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !1, line: 3510, column: 10)
!6279 = distinct !DILexicalBlock(scope: !6274, file: !1, line: 3508, column: 7)
!6280 = !DILocation(line: 3511, column: 31, scope: !6278)
!6281 = !DILocation(line: 3511, column: 13, scope: !6278)
!6282 = !DILocation(line: 3515, column: 24, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3514, column: 16)
!6284 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 3512, column: 13)
!6285 = !DILocation(line: 3515, column: 22, scope: !6283)
!6286 = !DILocation(line: 3516, column: 25, scope: !6283)
!6287 = !DILocation(line: 3517, column: 26, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6283, file: !1, line: 3517, column: 19)
!6289 = !DILocation(line: 3517, column: 24, scope: !6288)
!6290 = !DILocation(line: 3517, column: 31, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6288, file: !1, line: 3517, column: 19)
!6292 = !DILocation(line: 3517, column: 35, scope: !6291)
!6293 = !DILocation(line: 3517, column: 33, scope: !6291)
!6294 = !DILocation(line: 3517, column: 19, scope: !6288)
!6295 = !DILocation(line: 3519, column: 42, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !1, line: 3519, column: 26)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !1, line: 3518, column: 19)
!6298 = !DILocation(line: 3519, column: 41, scope: !6296)
!6299 = !DILocation(line: 3519, column: 48, scope: !6296)
!6300 = !DILocation(line: 3519, column: 45, scope: !6296)
!6301 = !DILocation(line: 3519, column: 55, scope: !6296)
!6302 = !DILocation(line: 3519, column: 26, scope: !6296)
!6303 = !DILocation(line: 3520, column: 28, scope: !6296)
!6304 = !DILocation(line: 3520, column: 37, scope: !6296)
!6305 = !DILocation(line: 3520, column: 49, scope: !6296)
!6306 = !DILocation(line: 3520, column: 25, scope: !6296)
!6307 = !DILocation(line: 3519, column: 26, scope: !6297)
!6308 = !DILocation(line: 3522, column: 59, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6296, file: !1, line: 3521, column: 22)
!6310 = !DILocation(line: 3522, column: 57, scope: !6309)
!6311 = !DILocation(line: 3522, column: 51, scope: !6309)
!6312 = !DILocation(line: 3522, column: 67, scope: !6309)
!6313 = !DILocation(line: 3522, column: 32, scope: !6309)
!6314 = !DILocation(line: 3522, column: 26, scope: !6309)
!6315 = !DILocation(line: 3522, column: 29, scope: !6309)
!6316 = !DILocation(line: 3523, column: 43, scope: !6309)
!6317 = !DILocation(line: 3523, column: 52, scope: !6309)
!6318 = !DILocation(line: 3523, column: 63, scope: !6309)
!6319 = !DILocation(line: 3523, column: 71, scope: !6309)
!6320 = !DILocation(line: 3523, column: 68, scope: !6309)
!6321 = !DILocation(line: 3523, column: 32, scope: !6309)
!6322 = !DILocation(line: 3523, column: 26, scope: !6309)
!6323 = !DILocation(line: 3523, column: 29, scope: !6309)
!6324 = !DILocation(line: 3524, column: 22, scope: !6309)
!6325 = !DILocation(line: 3526, column: 27, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6297, file: !1, line: 3526, column: 26)
!6327 = !DILocation(line: 3526, column: 26, scope: !6297)
!6328 = !DILocation(line: 3528, column: 31, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6326, file: !1, line: 3527, column: 22)
!6330 = !DILocation(line: 3529, column: 27, scope: !6329)
!6331 = !DILocation(line: 3530, column: 22, scope: !6329)
!6332 = !DILocation(line: 3533, column: 30, scope: !6326)
!6333 = !DILocation(line: 3534, column: 19, scope: !6297)
!6334 = !DILocation(line: 3517, column: 47, scope: !6291)
!6335 = !DILocation(line: 3517, column: 19, scope: !6291)
!6336 = distinct !{!6336, !6294, !6337}
!6337 = !DILocation(line: 3534, column: 19, scope: !6288)
!6338 = !DILocation(line: 3535, column: 19, scope: !6283)
!6339 = !DILocation(line: 3541, column: 23, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !1, line: 3541, column: 23)
!6341 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3539, column: 16)
!6342 = !DILocation(line: 3541, column: 35, scope: !6340)
!6343 = !DILocation(line: 3541, column: 23, scope: !6341)
!6344 = !DILocation(line: 3543, column: 27, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !1, line: 3542, column: 19)
!6346 = !DILocation(line: 3543, column: 25, scope: !6345)
!6347 = !DILocation(line: 3544, column: 28, scope: !6345)
!6348 = !DILocation(line: 3545, column: 29, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6345, file: !1, line: 3545, column: 22)
!6350 = !DILocation(line: 3545, column: 27, scope: !6349)
!6351 = !DILocation(line: 3545, column: 34, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6349, file: !1, line: 3545, column: 22)
!6353 = !DILocation(line: 3545, column: 38, scope: !6352)
!6354 = !DILocation(line: 3545, column: 36, scope: !6352)
!6355 = !DILocation(line: 3545, column: 22, scope: !6349)
!6356 = !DILocation(line: 3547, column: 45, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !1, line: 3547, column: 29)
!6358 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 3546, column: 22)
!6359 = !DILocation(line: 3547, column: 44, scope: !6357)
!6360 = !DILocation(line: 3547, column: 51, scope: !6357)
!6361 = !DILocation(line: 3547, column: 48, scope: !6357)
!6362 = !DILocation(line: 3547, column: 58, scope: !6357)
!6363 = !DILocation(line: 3547, column: 29, scope: !6357)
!6364 = !DILocation(line: 3548, column: 32, scope: !6357)
!6365 = !DILocation(line: 3548, column: 41, scope: !6357)
!6366 = !DILocation(line: 3548, column: 53, scope: !6357)
!6367 = !DILocation(line: 3548, column: 29, scope: !6357)
!6368 = !DILocation(line: 3547, column: 29, scope: !6358)
!6369 = !DILocation(line: 3550, column: 62, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6357, file: !1, line: 3549, column: 25)
!6371 = !DILocation(line: 3550, column: 60, scope: !6370)
!6372 = !DILocation(line: 3550, column: 54, scope: !6370)
!6373 = !DILocation(line: 3550, column: 70, scope: !6370)
!6374 = !DILocation(line: 3550, column: 35, scope: !6370)
!6375 = !DILocation(line: 3550, column: 29, scope: !6370)
!6376 = !DILocation(line: 3550, column: 32, scope: !6370)
!6377 = !DILocation(line: 3551, column: 46, scope: !6370)
!6378 = !DILocation(line: 3551, column: 55, scope: !6370)
!6379 = !DILocation(line: 3551, column: 66, scope: !6370)
!6380 = !DILocation(line: 3551, column: 74, scope: !6370)
!6381 = !DILocation(line: 3551, column: 71, scope: !6370)
!6382 = !DILocation(line: 3551, column: 35, scope: !6370)
!6383 = !DILocation(line: 3551, column: 29, scope: !6370)
!6384 = !DILocation(line: 3551, column: 32, scope: !6370)
!6385 = !DILocation(line: 3552, column: 25, scope: !6370)
!6386 = !DILocalVariable(name: "p", scope: !6387, file: !1, line: 3556, type: !5)
!6387 = distinct !DILexicalBlock(scope: !6357, file: !1, line: 3555, column: 25)
!6388 = !DILocation(line: 3556, column: 37, scope: !6387)
!6389 = !DILocation(line: 3556, column: 54, scope: !6387)
!6390 = !DILocation(line: 3556, column: 53, scope: !6387)
!6391 = !DILocation(line: 3556, column: 60, scope: !6387)
!6392 = !DILocation(line: 3556, column: 57, scope: !6387)
!6393 = !DILocation(line: 3556, column: 67, scope: !6387)
!6394 = !DILocation(line: 3556, column: 41, scope: !6387)
!6395 = !DILocalVariable(name: "g", scope: !6387, file: !1, line: 3557, type: !5)
!6396 = !DILocation(line: 3557, column: 37, scope: !6387)
!6397 = !DILocation(line: 3557, column: 53, scope: !6387)
!6398 = !DILocation(line: 3557, column: 66, scope: !6387)
!6399 = !DILocation(line: 3557, column: 71, scope: !6387)
!6400 = !DILocation(line: 3557, column: 73, scope: !6387)
!6401 = !DILocation(line: 3557, column: 68, scope: !6387)
!6402 = !DILocation(line: 3558, column: 33, scope: !6387)
!6403 = !DILocation(line: 3558, column: 35, scope: !6387)
!6404 = !DILocation(line: 3557, column: 79, scope: !6387)
!6405 = !DILocation(line: 3558, column: 44, scope: !6387)
!6406 = !DILocation(line: 3558, column: 46, scope: !6387)
!6407 = !DILocation(line: 3558, column: 41, scope: !6387)
!6408 = !DILocation(line: 3558, column: 53, scope: !6387)
!6409 = !DILocation(line: 3558, column: 59, scope: !6387)
!6410 = !DILocation(line: 3557, column: 41, scope: !6387)
!6411 = !DILocation(line: 3559, column: 62, scope: !6387)
!6412 = !DILocation(line: 3559, column: 60, scope: !6387)
!6413 = !DILocation(line: 3559, column: 54, scope: !6387)
!6414 = !DILocation(line: 3559, column: 70, scope: !6387)
!6415 = !DILocation(line: 3559, column: 35, scope: !6387)
!6416 = !DILocation(line: 3559, column: 29, scope: !6387)
!6417 = !DILocation(line: 3559, column: 32, scope: !6387)
!6418 = !DILocation(line: 3560, column: 46, scope: !6387)
!6419 = !DILocation(line: 3560, column: 51, scope: !6387)
!6420 = !DILocation(line: 3560, column: 48, scope: !6387)
!6421 = !DILocation(line: 3560, column: 35, scope: !6387)
!6422 = !DILocation(line: 3560, column: 29, scope: !6387)
!6423 = !DILocation(line: 3560, column: 32, scope: !6387)
!6424 = !DILocation(line: 3563, column: 30, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6358, file: !1, line: 3563, column: 29)
!6426 = !DILocation(line: 3563, column: 29, scope: !6358)
!6427 = !DILocation(line: 3565, column: 34, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6425, file: !1, line: 3564, column: 25)
!6429 = !DILocation(line: 3566, column: 30, scope: !6428)
!6430 = !DILocation(line: 3567, column: 25, scope: !6428)
!6431 = !DILocation(line: 3570, column: 34, scope: !6425)
!6432 = !DILocation(line: 3571, column: 22, scope: !6358)
!6433 = !DILocation(line: 3545, column: 50, scope: !6352)
!6434 = !DILocation(line: 3545, column: 22, scope: !6352)
!6435 = distinct !{!6435, !6355, !6436}
!6436 = !DILocation(line: 3571, column: 22, scope: !6349)
!6437 = !DILocation(line: 3572, column: 19, scope: !6345)
!6438 = !DILocation(line: 3577, column: 27, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6340, file: !1, line: 3576, column: 19)
!6440 = !DILocation(line: 3577, column: 25, scope: !6439)
!6441 = !DILocation(line: 3578, column: 28, scope: !6439)
!6442 = !DILocation(line: 3579, column: 29, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6439, file: !1, line: 3579, column: 22)
!6444 = !DILocation(line: 3579, column: 27, scope: !6443)
!6445 = !DILocation(line: 3579, column: 34, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6443, file: !1, line: 3579, column: 22)
!6447 = !DILocation(line: 3579, column: 38, scope: !6446)
!6448 = !DILocation(line: 3579, column: 36, scope: !6446)
!6449 = !DILocation(line: 3579, column: 22, scope: !6443)
!6450 = !DILocation(line: 3581, column: 45, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 3581, column: 29)
!6452 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 3580, column: 22)
!6453 = !DILocation(line: 3581, column: 44, scope: !6451)
!6454 = !DILocation(line: 3581, column: 51, scope: !6451)
!6455 = !DILocation(line: 3581, column: 48, scope: !6451)
!6456 = !DILocation(line: 3581, column: 58, scope: !6451)
!6457 = !DILocation(line: 3581, column: 29, scope: !6451)
!6458 = !DILocation(line: 3582, column: 32, scope: !6451)
!6459 = !DILocation(line: 3582, column: 41, scope: !6451)
!6460 = !DILocation(line: 3582, column: 53, scope: !6451)
!6461 = !DILocation(line: 3582, column: 29, scope: !6451)
!6462 = !DILocation(line: 3581, column: 29, scope: !6452)
!6463 = !DILocation(line: 3584, column: 62, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6451, file: !1, line: 3583, column: 25)
!6465 = !DILocation(line: 3584, column: 60, scope: !6464)
!6466 = !DILocation(line: 3584, column: 54, scope: !6464)
!6467 = !DILocation(line: 3584, column: 70, scope: !6464)
!6468 = !DILocation(line: 3584, column: 35, scope: !6464)
!6469 = !DILocation(line: 3584, column: 29, scope: !6464)
!6470 = !DILocation(line: 3584, column: 32, scope: !6464)
!6471 = !DILocation(line: 3585, column: 46, scope: !6464)
!6472 = !DILocation(line: 3585, column: 55, scope: !6464)
!6473 = !DILocation(line: 3585, column: 66, scope: !6464)
!6474 = !DILocation(line: 3585, column: 74, scope: !6464)
!6475 = !DILocation(line: 3585, column: 71, scope: !6464)
!6476 = !DILocation(line: 3585, column: 35, scope: !6464)
!6477 = !DILocation(line: 3585, column: 29, scope: !6464)
!6478 = !DILocation(line: 3585, column: 32, scope: !6464)
!6479 = !DILocation(line: 3586, column: 25, scope: !6464)
!6480 = !DILocation(line: 3588, column: 30, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 3588, column: 29)
!6482 = !DILocation(line: 3588, column: 29, scope: !6452)
!6483 = !DILocation(line: 3590, column: 34, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !1, line: 3589, column: 25)
!6485 = !DILocation(line: 3591, column: 30, scope: !6484)
!6486 = !DILocation(line: 3592, column: 25, scope: !6484)
!6487 = !DILocation(line: 3595, column: 34, scope: !6481)
!6488 = !DILocation(line: 3596, column: 22, scope: !6452)
!6489 = !DILocation(line: 3579, column: 50, scope: !6446)
!6490 = !DILocation(line: 3579, column: 22, scope: !6446)
!6491 = distinct !{!6491, !6449, !6492}
!6492 = !DILocation(line: 3596, column: 22, scope: !6443)
!6493 = !DILocation(line: 3598, column: 19, scope: !6341)
!6494 = !DILocation(line: 3604, column: 23, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !1, line: 3604, column: 23)
!6496 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3602, column: 16)
!6497 = !DILocation(line: 3604, column: 35, scope: !6495)
!6498 = !DILocation(line: 3604, column: 23, scope: !6496)
!6499 = !DILocation(line: 3606, column: 27, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 3605, column: 19)
!6501 = !DILocation(line: 3606, column: 25, scope: !6500)
!6502 = !DILocation(line: 3607, column: 28, scope: !6500)
!6503 = !DILocation(line: 3608, column: 29, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6500, file: !1, line: 3608, column: 22)
!6505 = !DILocation(line: 3608, column: 27, scope: !6504)
!6506 = !DILocation(line: 3608, column: 34, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6504, file: !1, line: 3608, column: 22)
!6508 = !DILocation(line: 3608, column: 38, scope: !6507)
!6509 = !DILocation(line: 3608, column: 36, scope: !6507)
!6510 = !DILocation(line: 3608, column: 22, scope: !6504)
!6511 = !DILocation(line: 3610, column: 45, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !1, line: 3610, column: 29)
!6513 = distinct !DILexicalBlock(scope: !6507, file: !1, line: 3609, column: 22)
!6514 = !DILocation(line: 3610, column: 44, scope: !6512)
!6515 = !DILocation(line: 3610, column: 51, scope: !6512)
!6516 = !DILocation(line: 3610, column: 48, scope: !6512)
!6517 = !DILocation(line: 3610, column: 58, scope: !6512)
!6518 = !DILocation(line: 3610, column: 29, scope: !6512)
!6519 = !DILocation(line: 3611, column: 32, scope: !6512)
!6520 = !DILocation(line: 3611, column: 41, scope: !6512)
!6521 = !DILocation(line: 3611, column: 53, scope: !6512)
!6522 = !DILocation(line: 3611, column: 29, scope: !6512)
!6523 = !DILocation(line: 3610, column: 29, scope: !6513)
!6524 = !DILocation(line: 3613, column: 61, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 3612, column: 25)
!6526 = !DILocation(line: 3613, column: 59, scope: !6525)
!6527 = !DILocation(line: 3613, column: 53, scope: !6525)
!6528 = !DILocation(line: 3613, column: 69, scope: !6525)
!6529 = !DILocation(line: 3613, column: 35, scope: !6525)
!6530 = !DILocation(line: 3613, column: 29, scope: !6525)
!6531 = !DILocation(line: 3613, column: 32, scope: !6525)
!6532 = !DILocation(line: 3614, column: 46, scope: !6525)
!6533 = !DILocation(line: 3614, column: 55, scope: !6525)
!6534 = !DILocation(line: 3614, column: 66, scope: !6525)
!6535 = !DILocation(line: 3614, column: 74, scope: !6525)
!6536 = !DILocation(line: 3614, column: 71, scope: !6525)
!6537 = !DILocation(line: 3614, column: 35, scope: !6525)
!6538 = !DILocation(line: 3614, column: 29, scope: !6525)
!6539 = !DILocation(line: 3614, column: 32, scope: !6525)
!6540 = !DILocation(line: 3615, column: 25, scope: !6525)
!6541 = !DILocalVariable(name: "p", scope: !6542, file: !1, line: 3619, type: !5)
!6542 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 3618, column: 25)
!6543 = !DILocation(line: 3619, column: 37, scope: !6542)
!6544 = !DILocation(line: 3619, column: 54, scope: !6542)
!6545 = !DILocation(line: 3619, column: 53, scope: !6542)
!6546 = !DILocation(line: 3619, column: 60, scope: !6542)
!6547 = !DILocation(line: 3619, column: 57, scope: !6542)
!6548 = !DILocation(line: 3619, column: 67, scope: !6542)
!6549 = !DILocation(line: 3619, column: 41, scope: !6542)
!6550 = !DILocalVariable(name: "g", scope: !6542, file: !1, line: 3620, type: !5)
!6551 = !DILocation(line: 3620, column: 37, scope: !6542)
!6552 = !DILocation(line: 3620, column: 53, scope: !6542)
!6553 = !DILocation(line: 3620, column: 65, scope: !6542)
!6554 = !DILocation(line: 3621, column: 33, scope: !6542)
!6555 = !DILocation(line: 3621, column: 35, scope: !6542)
!6556 = !DILocation(line: 3620, column: 67, scope: !6542)
!6557 = !DILocation(line: 3621, column: 42, scope: !6542)
!6558 = !DILocation(line: 3621, column: 48, scope: !6542)
!6559 = !DILocation(line: 3620, column: 41, scope: !6542)
!6560 = !DILocation(line: 3622, column: 61, scope: !6542)
!6561 = !DILocation(line: 3622, column: 59, scope: !6542)
!6562 = !DILocation(line: 3622, column: 53, scope: !6542)
!6563 = !DILocation(line: 3622, column: 69, scope: !6542)
!6564 = !DILocation(line: 3622, column: 35, scope: !6542)
!6565 = !DILocation(line: 3622, column: 29, scope: !6542)
!6566 = !DILocation(line: 3622, column: 32, scope: !6542)
!6567 = !DILocation(line: 3623, column: 46, scope: !6542)
!6568 = !DILocation(line: 3623, column: 51, scope: !6542)
!6569 = !DILocation(line: 3623, column: 48, scope: !6542)
!6570 = !DILocation(line: 3623, column: 35, scope: !6542)
!6571 = !DILocation(line: 3623, column: 29, scope: !6542)
!6572 = !DILocation(line: 3623, column: 32, scope: !6542)
!6573 = !DILocation(line: 3626, column: 30, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6513, file: !1, line: 3626, column: 29)
!6575 = !DILocation(line: 3626, column: 29, scope: !6513)
!6576 = !DILocation(line: 3628, column: 34, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6574, file: !1, line: 3627, column: 25)
!6578 = !DILocation(line: 3629, column: 30, scope: !6577)
!6579 = !DILocation(line: 3630, column: 25, scope: !6577)
!6580 = !DILocation(line: 3633, column: 34, scope: !6574)
!6581 = !DILocation(line: 3634, column: 22, scope: !6513)
!6582 = !DILocation(line: 3608, column: 50, scope: !6507)
!6583 = !DILocation(line: 3608, column: 22, scope: !6507)
!6584 = distinct !{!6584, !6510, !6585}
!6585 = !DILocation(line: 3634, column: 22, scope: !6504)
!6586 = !DILocation(line: 3635, column: 19, scope: !6500)
!6587 = !DILocation(line: 3640, column: 27, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 3639, column: 19)
!6589 = !DILocation(line: 3640, column: 25, scope: !6588)
!6590 = !DILocation(line: 3641, column: 28, scope: !6588)
!6591 = !DILocation(line: 3642, column: 29, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6588, file: !1, line: 3642, column: 22)
!6593 = !DILocation(line: 3642, column: 27, scope: !6592)
!6594 = !DILocation(line: 3642, column: 34, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !1, line: 3642, column: 22)
!6596 = !DILocation(line: 3642, column: 38, scope: !6595)
!6597 = !DILocation(line: 3642, column: 36, scope: !6595)
!6598 = !DILocation(line: 3642, column: 22, scope: !6592)
!6599 = !DILocation(line: 3644, column: 45, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 3644, column: 29)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !1, line: 3643, column: 22)
!6602 = !DILocation(line: 3644, column: 44, scope: !6600)
!6603 = !DILocation(line: 3644, column: 51, scope: !6600)
!6604 = !DILocation(line: 3644, column: 48, scope: !6600)
!6605 = !DILocation(line: 3644, column: 58, scope: !6600)
!6606 = !DILocation(line: 3644, column: 29, scope: !6600)
!6607 = !DILocation(line: 3645, column: 32, scope: !6600)
!6608 = !DILocation(line: 3645, column: 41, scope: !6600)
!6609 = !DILocation(line: 3645, column: 53, scope: !6600)
!6610 = !DILocation(line: 3645, column: 29, scope: !6600)
!6611 = !DILocation(line: 3644, column: 29, scope: !6601)
!6612 = !DILocation(line: 3647, column: 61, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6600, file: !1, line: 3646, column: 25)
!6614 = !DILocation(line: 3647, column: 59, scope: !6613)
!6615 = !DILocation(line: 3647, column: 53, scope: !6613)
!6616 = !DILocation(line: 3647, column: 69, scope: !6613)
!6617 = !DILocation(line: 3647, column: 35, scope: !6613)
!6618 = !DILocation(line: 3647, column: 29, scope: !6613)
!6619 = !DILocation(line: 3647, column: 32, scope: !6613)
!6620 = !DILocation(line: 3648, column: 46, scope: !6613)
!6621 = !DILocation(line: 3648, column: 55, scope: !6613)
!6622 = !DILocation(line: 3648, column: 66, scope: !6613)
!6623 = !DILocation(line: 3648, column: 74, scope: !6613)
!6624 = !DILocation(line: 3648, column: 71, scope: !6613)
!6625 = !DILocation(line: 3648, column: 35, scope: !6613)
!6626 = !DILocation(line: 3648, column: 29, scope: !6613)
!6627 = !DILocation(line: 3648, column: 32, scope: !6613)
!6628 = !DILocation(line: 3649, column: 25, scope: !6613)
!6629 = !DILocation(line: 3651, column: 30, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 3651, column: 29)
!6631 = !DILocation(line: 3651, column: 29, scope: !6601)
!6632 = !DILocation(line: 3653, column: 34, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6630, file: !1, line: 3652, column: 25)
!6634 = !DILocation(line: 3654, column: 30, scope: !6633)
!6635 = !DILocation(line: 3655, column: 25, scope: !6633)
!6636 = !DILocation(line: 3658, column: 34, scope: !6630)
!6637 = !DILocation(line: 3659, column: 22, scope: !6601)
!6638 = !DILocation(line: 3642, column: 50, scope: !6595)
!6639 = !DILocation(line: 3642, column: 22, scope: !6595)
!6640 = distinct !{!6640, !6598, !6641}
!6641 = !DILocation(line: 3659, column: 22, scope: !6592)
!6642 = !DILocation(line: 3661, column: 19, scope: !6496)
!6643 = !DILocation(line: 3667, column: 23, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !1, line: 3667, column: 23)
!6645 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3665, column: 16)
!6646 = !DILocation(line: 3667, column: 35, scope: !6644)
!6647 = !DILocation(line: 3667, column: 23, scope: !6645)
!6648 = !DILocation(line: 3669, column: 27, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6644, file: !1, line: 3668, column: 19)
!6650 = !DILocation(line: 3669, column: 25, scope: !6649)
!6651 = !DILocation(line: 3670, column: 29, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !1, line: 3670, column: 22)
!6653 = !DILocation(line: 3670, column: 27, scope: !6652)
!6654 = !DILocation(line: 3670, column: 34, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6652, file: !1, line: 3670, column: 22)
!6656 = !DILocation(line: 3670, column: 38, scope: !6655)
!6657 = !DILocation(line: 3670, column: 36, scope: !6655)
!6658 = !DILocation(line: 3670, column: 22, scope: !6652)
!6659 = !DILocation(line: 3672, column: 30, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !1, line: 3672, column: 29)
!6661 = distinct !DILexicalBlock(scope: !6655, file: !1, line: 3671, column: 22)
!6662 = !DILocation(line: 3672, column: 29, scope: !6660)
!6663 = !DILocation(line: 3672, column: 36, scope: !6660)
!6664 = !DILocation(line: 3672, column: 45, scope: !6660)
!6665 = !DILocation(line: 3672, column: 57, scope: !6660)
!6666 = !DILocation(line: 3672, column: 33, scope: !6660)
!6667 = !DILocation(line: 3672, column: 29, scope: !6661)
!6668 = !DILocation(line: 3673, column: 44, scope: !6660)
!6669 = !DILocation(line: 3673, column: 53, scope: !6660)
!6670 = !DILocation(line: 3673, column: 64, scope: !6660)
!6671 = !DILocation(line: 3673, column: 34, scope: !6660)
!6672 = !DILocation(line: 3673, column: 29, scope: !6660)
!6673 = !DILocation(line: 3673, column: 32, scope: !6660)
!6674 = !DILocation(line: 3673, column: 28, scope: !6660)
!6675 = !DILocation(line: 3676, column: 34, scope: !6660)
!6676 = !DILocation(line: 3676, column: 47, scope: !6660)
!6677 = !DILocation(line: 3676, column: 46, scope: !6660)
!6678 = !DILocation(line: 3676, column: 29, scope: !6660)
!6679 = !DILocation(line: 3676, column: 32, scope: !6660)
!6680 = !DILocation(line: 3677, column: 22, scope: !6661)
!6681 = !DILocation(line: 3670, column: 50, scope: !6655)
!6682 = !DILocation(line: 3670, column: 56, scope: !6655)
!6683 = !DILocation(line: 3670, column: 22, scope: !6655)
!6684 = distinct !{!6684, !6658, !6685}
!6685 = !DILocation(line: 3677, column: 22, scope: !6652)
!6686 = !DILocation(line: 3678, column: 19, scope: !6649)
!6687 = !DILocation(line: 3682, column: 27, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6644, file: !1, line: 3681, column: 19)
!6689 = !DILocation(line: 3682, column: 25, scope: !6688)
!6690 = !DILocation(line: 3683, column: 29, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6688, file: !1, line: 3683, column: 22)
!6692 = !DILocation(line: 3683, column: 27, scope: !6691)
!6693 = !DILocation(line: 3683, column: 34, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6691, file: !1, line: 3683, column: 22)
!6695 = !DILocation(line: 3683, column: 38, scope: !6694)
!6696 = !DILocation(line: 3683, column: 36, scope: !6694)
!6697 = !DILocation(line: 3683, column: 22, scope: !6691)
!6698 = !DILocation(line: 3685, column: 30, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !1, line: 3685, column: 29)
!6700 = distinct !DILexicalBlock(scope: !6694, file: !1, line: 3684, column: 22)
!6701 = !DILocation(line: 3685, column: 29, scope: !6699)
!6702 = !DILocation(line: 3685, column: 36, scope: !6699)
!6703 = !DILocation(line: 3685, column: 45, scope: !6699)
!6704 = !DILocation(line: 3685, column: 57, scope: !6699)
!6705 = !DILocation(line: 3685, column: 33, scope: !6699)
!6706 = !DILocation(line: 3685, column: 29, scope: !6700)
!6707 = !DILocation(line: 3686, column: 44, scope: !6699)
!6708 = !DILocation(line: 3686, column: 53, scope: !6699)
!6709 = !DILocation(line: 3686, column: 64, scope: !6699)
!6710 = !DILocation(line: 3686, column: 34, scope: !6699)
!6711 = !DILocation(line: 3686, column: 29, scope: !6699)
!6712 = !DILocation(line: 3686, column: 32, scope: !6699)
!6713 = !DILocation(line: 3686, column: 28, scope: !6699)
!6714 = !DILocation(line: 3687, column: 22, scope: !6700)
!6715 = !DILocation(line: 3683, column: 50, scope: !6694)
!6716 = !DILocation(line: 3683, column: 56, scope: !6694)
!6717 = !DILocation(line: 3683, column: 22, scope: !6694)
!6718 = distinct !{!6718, !6697, !6719}
!6719 = !DILocation(line: 3687, column: 22, scope: !6691)
!6720 = !DILocation(line: 3689, column: 19, scope: !6645)
!6721 = !DILocation(line: 3695, column: 23, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !1, line: 3695, column: 23)
!6723 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3693, column: 16)
!6724 = !DILocation(line: 3695, column: 32, scope: !6722)
!6725 = !DILocation(line: 3695, column: 23, scope: !6723)
!6726 = !DILocation(line: 3697, column: 27, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6722, file: !1, line: 3696, column: 19)
!6728 = !DILocation(line: 3697, column: 25, scope: !6727)
!6729 = !DILocation(line: 3698, column: 29, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6727, file: !1, line: 3698, column: 22)
!6731 = !DILocation(line: 3698, column: 27, scope: !6730)
!6732 = !DILocation(line: 3698, column: 34, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6730, file: !1, line: 3698, column: 22)
!6734 = !DILocation(line: 3698, column: 38, scope: !6733)
!6735 = !DILocation(line: 3698, column: 36, scope: !6733)
!6736 = !DILocation(line: 3698, column: 22, scope: !6730)
!6737 = !DILocalVariable(name: "v", scope: !6738, file: !1, line: 3700, type: !24)
!6738 = distinct !DILexicalBlock(scope: !6733, file: !1, line: 3699, column: 22)
!6739 = !DILocation(line: 3700, column: 37, scope: !6738)
!6740 = !DILocation(line: 3702, column: 46, scope: !6738)
!6741 = !DILocation(line: 3702, column: 45, scope: !6738)
!6742 = !DILocation(line: 3702, column: 44, scope: !6738)
!6743 = !DILocation(line: 3702, column: 50, scope: !6738)
!6744 = !DILocation(line: 3702, column: 60, scope: !6738)
!6745 = !DILocation(line: 3702, column: 63, scope: !6738)
!6746 = !DILocation(line: 3702, column: 58, scope: !6738)
!6747 = !DILocation(line: 3702, column: 56, scope: !6738)
!6748 = !DILocation(line: 3702, column: 29, scope: !6738)
!6749 = !DILocation(line: 3702, column: 27, scope: !6738)
!6750 = !DILocation(line: 3704, column: 29, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 3704, column: 29)
!6752 = !DILocation(line: 3704, column: 34, scope: !6751)
!6753 = !DILocation(line: 3704, column: 43, scope: !6751)
!6754 = !DILocation(line: 3704, column: 55, scope: !6751)
!6755 = !DILocation(line: 3704, column: 31, scope: !6751)
!6756 = !DILocation(line: 3704, column: 29, scope: !6738)
!6757 = !DILocation(line: 3707, column: 46, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 3705, column: 25)
!6759 = !DILocation(line: 3707, column: 55, scope: !6758)
!6760 = !DILocation(line: 3707, column: 66, scope: !6758)
!6761 = !DILocation(line: 3707, column: 71, scope: !6758)
!6762 = !DILocation(line: 3707, column: 77, scope: !6758)
!6763 = !DILocation(line: 3707, column: 34, scope: !6758)
!6764 = !DILocation(line: 3707, column: 29, scope: !6758)
!6765 = !DILocation(line: 3707, column: 32, scope: !6758)
!6766 = !DILocation(line: 3708, column: 51, scope: !6758)
!6767 = !DILocation(line: 3708, column: 60, scope: !6758)
!6768 = !DILocation(line: 3708, column: 71, scope: !6758)
!6769 = !DILocation(line: 3708, column: 76, scope: !6758)
!6770 = !DILocation(line: 3708, column: 40, scope: !6758)
!6771 = !DILocation(line: 3708, column: 30, scope: !6758)
!6772 = !DILocation(line: 3708, column: 33, scope: !6758)
!6773 = !DILocation(line: 3708, column: 38, scope: !6758)
!6774 = !DILocation(line: 3709, column: 25, scope: !6758)
!6775 = !DILocation(line: 3713, column: 32, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 3712, column: 25)
!6777 = !DILocation(line: 3713, column: 43, scope: !6776)
!6778 = !DILocation(line: 3713, column: 46, scope: !6776)
!6779 = !DILocation(line: 3713, column: 41, scope: !6776)
!6780 = !DILocation(line: 3713, column: 54, scope: !6776)
!6781 = !DILocation(line: 3713, column: 51, scope: !6776)
!6782 = !DILocation(line: 3713, column: 68, scope: !6776)
!6783 = !DILocation(line: 3713, column: 67, scope: !6776)
!6784 = !DILocation(line: 3713, column: 30, scope: !6776)
!6785 = !DILocation(line: 3714, column: 46, scope: !6776)
!6786 = !DILocation(line: 3714, column: 48, scope: !6776)
!6787 = !DILocation(line: 3714, column: 54, scope: !6776)
!6788 = !DILocation(line: 3714, column: 34, scope: !6776)
!6789 = !DILocation(line: 3714, column: 29, scope: !6776)
!6790 = !DILocation(line: 3714, column: 32, scope: !6776)
!6791 = !DILocation(line: 3715, column: 51, scope: !6776)
!6792 = !DILocation(line: 3715, column: 53, scope: !6776)
!6793 = !DILocation(line: 3715, column: 40, scope: !6776)
!6794 = !DILocation(line: 3715, column: 30, scope: !6776)
!6795 = !DILocation(line: 3715, column: 33, scope: !6776)
!6796 = !DILocation(line: 3715, column: 38, scope: !6776)
!6797 = !DILocation(line: 3717, column: 22, scope: !6738)
!6798 = !DILocation(line: 3698, column: 50, scope: !6733)
!6799 = !DILocation(line: 3698, column: 57, scope: !6733)
!6800 = !DILocation(line: 3698, column: 22, scope: !6733)
!6801 = distinct !{!6801, !6736, !6802}
!6802 = !DILocation(line: 3717, column: 22, scope: !6730)
!6803 = !DILocation(line: 3718, column: 19, scope: !6727)
!6804 = !DILocation(line: 3722, column: 27, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6722, file: !1, line: 3721, column: 19)
!6806 = !DILocation(line: 3722, column: 25, scope: !6805)
!6807 = !DILocation(line: 3723, column: 29, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6805, file: !1, line: 3723, column: 22)
!6809 = !DILocation(line: 3723, column: 27, scope: !6808)
!6810 = !DILocation(line: 3723, column: 34, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6808, file: !1, line: 3723, column: 22)
!6812 = !DILocation(line: 3723, column: 38, scope: !6811)
!6813 = !DILocation(line: 3723, column: 36, scope: !6811)
!6814 = !DILocation(line: 3723, column: 22, scope: !6808)
!6815 = !DILocalVariable(name: "v", scope: !6816, file: !1, line: 3725, type: !24)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !1, line: 3724, column: 22)
!6817 = !DILocation(line: 3725, column: 37, scope: !6816)
!6818 = !DILocation(line: 3727, column: 46, scope: !6816)
!6819 = !DILocation(line: 3727, column: 45, scope: !6816)
!6820 = !DILocation(line: 3727, column: 44, scope: !6816)
!6821 = !DILocation(line: 3727, column: 50, scope: !6816)
!6822 = !DILocation(line: 3727, column: 60, scope: !6816)
!6823 = !DILocation(line: 3727, column: 63, scope: !6816)
!6824 = !DILocation(line: 3727, column: 58, scope: !6816)
!6825 = !DILocation(line: 3727, column: 56, scope: !6816)
!6826 = !DILocation(line: 3727, column: 29, scope: !6816)
!6827 = !DILocation(line: 3727, column: 27, scope: !6816)
!6828 = !DILocation(line: 3729, column: 29, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 3729, column: 29)
!6830 = !DILocation(line: 3729, column: 34, scope: !6829)
!6831 = !DILocation(line: 3729, column: 43, scope: !6829)
!6832 = !DILocation(line: 3729, column: 55, scope: !6829)
!6833 = !DILocation(line: 3729, column: 31, scope: !6829)
!6834 = !DILocation(line: 3729, column: 29, scope: !6816)
!6835 = !DILocation(line: 3731, column: 46, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6829, file: !1, line: 3730, column: 25)
!6837 = !DILocation(line: 3731, column: 55, scope: !6836)
!6838 = !DILocation(line: 3731, column: 66, scope: !6836)
!6839 = !DILocation(line: 3731, column: 71, scope: !6836)
!6840 = !DILocation(line: 3731, column: 77, scope: !6836)
!6841 = !DILocation(line: 3731, column: 34, scope: !6836)
!6842 = !DILocation(line: 3731, column: 29, scope: !6836)
!6843 = !DILocation(line: 3731, column: 32, scope: !6836)
!6844 = !DILocation(line: 3732, column: 51, scope: !6836)
!6845 = !DILocation(line: 3732, column: 60, scope: !6836)
!6846 = !DILocation(line: 3732, column: 71, scope: !6836)
!6847 = !DILocation(line: 3732, column: 76, scope: !6836)
!6848 = !DILocation(line: 3732, column: 40, scope: !6836)
!6849 = !DILocation(line: 3732, column: 30, scope: !6836)
!6850 = !DILocation(line: 3732, column: 33, scope: !6836)
!6851 = !DILocation(line: 3732, column: 38, scope: !6836)
!6852 = !DILocation(line: 3733, column: 25, scope: !6836)
!6853 = !DILocation(line: 3734, column: 22, scope: !6816)
!6854 = !DILocation(line: 3723, column: 50, scope: !6811)
!6855 = !DILocation(line: 3723, column: 57, scope: !6811)
!6856 = !DILocation(line: 3723, column: 22, scope: !6811)
!6857 = distinct !{!6857, !6814, !6858}
!6858 = !DILocation(line: 3734, column: 22, scope: !6808)
!6859 = !DILocation(line: 3736, column: 19, scope: !6723)
!6860 = !DILocation(line: 3740, column: 19, scope: !6284)
!6861 = !DILocation(line: 3742, column: 13, scope: !6278)
!6862 = !DILocation(line: 3747, column: 17, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !1, line: 3747, column: 17)
!6864 = distinct !DILexicalBlock(scope: !6279, file: !1, line: 3746, column: 10)
!6865 = !DILocation(line: 3747, column: 27, scope: !6863)
!6866 = !DILocation(line: 3747, column: 37, scope: !6863)
!6867 = !DILocation(line: 3747, column: 17, scope: !6864)
!6868 = !DILocation(line: 3750, column: 20, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !1, line: 3750, column: 20)
!6870 = distinct !DILexicalBlock(scope: !6863, file: !1, line: 3748, column: 13)
!6871 = !DILocation(line: 3750, column: 32, scope: !6869)
!6872 = !DILocation(line: 3750, column: 20, scope: !6870)
!6873 = !DILocation(line: 3752, column: 24, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !1, line: 3751, column: 16)
!6875 = !DILocation(line: 3752, column: 22, scope: !6874)
!6876 = !DILocation(line: 3753, column: 26, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6874, file: !1, line: 3753, column: 19)
!6878 = !DILocation(line: 3753, column: 24, scope: !6877)
!6879 = !DILocation(line: 3753, column: 31, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 3753, column: 19)
!6881 = !DILocation(line: 3753, column: 35, scope: !6880)
!6882 = !DILocation(line: 3753, column: 33, scope: !6880)
!6883 = !DILocation(line: 3753, column: 19, scope: !6877)
!6884 = !DILocation(line: 3755, column: 27, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !1, line: 3755, column: 26)
!6886 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 3754, column: 19)
!6887 = !DILocation(line: 3755, column: 26, scope: !6885)
!6888 = !DILocation(line: 3755, column: 33, scope: !6885)
!6889 = !DILocation(line: 3755, column: 42, scope: !6885)
!6890 = !DILocation(line: 3755, column: 54, scope: !6885)
!6891 = !DILocation(line: 3755, column: 30, scope: !6885)
!6892 = !DILocation(line: 3755, column: 58, scope: !6885)
!6893 = !DILocation(line: 3756, column: 28, scope: !6885)
!6894 = !DILocation(line: 3756, column: 31, scope: !6885)
!6895 = !DILocation(line: 3756, column: 26, scope: !6885)
!6896 = !DILocation(line: 3756, column: 39, scope: !6885)
!6897 = !DILocation(line: 3756, column: 48, scope: !6885)
!6898 = !DILocation(line: 3756, column: 60, scope: !6885)
!6899 = !DILocation(line: 3756, column: 36, scope: !6885)
!6900 = !DILocation(line: 3756, column: 66, scope: !6885)
!6901 = !DILocation(line: 3757, column: 28, scope: !6885)
!6902 = !DILocation(line: 3757, column: 31, scope: !6885)
!6903 = !DILocation(line: 3757, column: 26, scope: !6885)
!6904 = !DILocation(line: 3757, column: 39, scope: !6885)
!6905 = !DILocation(line: 3757, column: 48, scope: !6885)
!6906 = !DILocation(line: 3757, column: 60, scope: !6885)
!6907 = !DILocation(line: 3757, column: 36, scope: !6885)
!6908 = !DILocation(line: 3755, column: 26, scope: !6886)
!6909 = !DILocation(line: 3759, column: 41, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 3758, column: 22)
!6911 = !DILocation(line: 3759, column: 50, scope: !6910)
!6912 = !DILocation(line: 3759, column: 61, scope: !6910)
!6913 = !DILocation(line: 3759, column: 31, scope: !6910)
!6914 = !DILocation(line: 3759, column: 26, scope: !6910)
!6915 = !DILocation(line: 3759, column: 29, scope: !6910)
!6916 = !DILocation(line: 3760, column: 47, scope: !6910)
!6917 = !DILocation(line: 3760, column: 56, scope: !6910)
!6918 = !DILocation(line: 3760, column: 67, scope: !6910)
!6919 = !DILocation(line: 3760, column: 37, scope: !6910)
!6920 = !DILocation(line: 3760, column: 27, scope: !6910)
!6921 = !DILocation(line: 3760, column: 30, scope: !6910)
!6922 = !DILocation(line: 3760, column: 35, scope: !6910)
!6923 = !DILocation(line: 3761, column: 47, scope: !6910)
!6924 = !DILocation(line: 3761, column: 56, scope: !6910)
!6925 = !DILocation(line: 3761, column: 67, scope: !6910)
!6926 = !DILocation(line: 3761, column: 37, scope: !6910)
!6927 = !DILocation(line: 3761, column: 27, scope: !6910)
!6928 = !DILocation(line: 3761, column: 30, scope: !6910)
!6929 = !DILocation(line: 3761, column: 35, scope: !6910)
!6930 = !DILocation(line: 3762, column: 22, scope: !6910)
!6931 = !DILocation(line: 3766, column: 31, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 3765, column: 22)
!6933 = !DILocation(line: 3766, column: 44, scope: !6932)
!6934 = !DILocation(line: 3766, column: 43, scope: !6932)
!6935 = !DILocation(line: 3766, column: 26, scope: !6932)
!6936 = !DILocation(line: 3766, column: 29, scope: !6932)
!6937 = !DILocation(line: 3767, column: 37, scope: !6932)
!6938 = !DILocation(line: 3767, column: 51, scope: !6932)
!6939 = !DILocation(line: 3767, column: 54, scope: !6932)
!6940 = !DILocation(line: 3767, column: 49, scope: !6932)
!6941 = !DILocation(line: 3767, column: 27, scope: !6932)
!6942 = !DILocation(line: 3767, column: 30, scope: !6932)
!6943 = !DILocation(line: 3767, column: 35, scope: !6932)
!6944 = !DILocation(line: 3768, column: 37, scope: !6932)
!6945 = !DILocation(line: 3768, column: 51, scope: !6932)
!6946 = !DILocation(line: 3768, column: 54, scope: !6932)
!6947 = !DILocation(line: 3768, column: 49, scope: !6932)
!6948 = !DILocation(line: 3768, column: 27, scope: !6932)
!6949 = !DILocation(line: 3768, column: 30, scope: !6932)
!6950 = !DILocation(line: 3768, column: 35, scope: !6932)
!6951 = !DILocation(line: 3770, column: 19, scope: !6886)
!6952 = !DILocation(line: 3753, column: 47, scope: !6880)
!6953 = !DILocation(line: 3753, column: 54, scope: !6880)
!6954 = !DILocation(line: 3753, column: 19, scope: !6880)
!6955 = distinct !{!6955, !6883, !6956}
!6956 = !DILocation(line: 3770, column: 19, scope: !6877)
!6957 = !DILocation(line: 3771, column: 16, scope: !6874)
!6958 = !DILocation(line: 3775, column: 24, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6869, file: !1, line: 3774, column: 16)
!6960 = !DILocation(line: 3775, column: 22, scope: !6959)
!6961 = !DILocation(line: 3776, column: 26, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !1, line: 3776, column: 19)
!6963 = !DILocation(line: 3776, column: 24, scope: !6962)
!6964 = !DILocation(line: 3776, column: 31, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !1, line: 3776, column: 19)
!6966 = !DILocation(line: 3776, column: 35, scope: !6965)
!6967 = !DILocation(line: 3776, column: 33, scope: !6965)
!6968 = !DILocation(line: 3776, column: 19, scope: !6962)
!6969 = !DILocation(line: 3778, column: 27, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !1, line: 3778, column: 26)
!6971 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3777, column: 19)
!6972 = !DILocation(line: 3778, column: 26, scope: !6970)
!6973 = !DILocation(line: 3778, column: 33, scope: !6970)
!6974 = !DILocation(line: 3778, column: 42, scope: !6970)
!6975 = !DILocation(line: 3778, column: 54, scope: !6970)
!6976 = !DILocation(line: 3778, column: 30, scope: !6970)
!6977 = !DILocation(line: 3778, column: 58, scope: !6970)
!6978 = !DILocation(line: 3779, column: 28, scope: !6970)
!6979 = !DILocation(line: 3779, column: 31, scope: !6970)
!6980 = !DILocation(line: 3779, column: 26, scope: !6970)
!6981 = !DILocation(line: 3779, column: 39, scope: !6970)
!6982 = !DILocation(line: 3779, column: 48, scope: !6970)
!6983 = !DILocation(line: 3779, column: 60, scope: !6970)
!6984 = !DILocation(line: 3779, column: 36, scope: !6970)
!6985 = !DILocation(line: 3779, column: 66, scope: !6970)
!6986 = !DILocation(line: 3780, column: 28, scope: !6970)
!6987 = !DILocation(line: 3780, column: 31, scope: !6970)
!6988 = !DILocation(line: 3780, column: 26, scope: !6970)
!6989 = !DILocation(line: 3780, column: 39, scope: !6970)
!6990 = !DILocation(line: 3780, column: 48, scope: !6970)
!6991 = !DILocation(line: 3780, column: 60, scope: !6970)
!6992 = !DILocation(line: 3780, column: 36, scope: !6970)
!6993 = !DILocation(line: 3778, column: 26, scope: !6971)
!6994 = !DILocation(line: 3782, column: 41, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 3781, column: 22)
!6996 = !DILocation(line: 3782, column: 50, scope: !6995)
!6997 = !DILocation(line: 3782, column: 61, scope: !6995)
!6998 = !DILocation(line: 3782, column: 31, scope: !6995)
!6999 = !DILocation(line: 3782, column: 26, scope: !6995)
!7000 = !DILocation(line: 3782, column: 29, scope: !6995)
!7001 = !DILocation(line: 3783, column: 47, scope: !6995)
!7002 = !DILocation(line: 3783, column: 56, scope: !6995)
!7003 = !DILocation(line: 3783, column: 67, scope: !6995)
!7004 = !DILocation(line: 3783, column: 37, scope: !6995)
!7005 = !DILocation(line: 3783, column: 27, scope: !6995)
!7006 = !DILocation(line: 3783, column: 30, scope: !6995)
!7007 = !DILocation(line: 3783, column: 35, scope: !6995)
!7008 = !DILocation(line: 3784, column: 47, scope: !6995)
!7009 = !DILocation(line: 3784, column: 56, scope: !6995)
!7010 = !DILocation(line: 3784, column: 67, scope: !6995)
!7011 = !DILocation(line: 3784, column: 37, scope: !6995)
!7012 = !DILocation(line: 3784, column: 27, scope: !6995)
!7013 = !DILocation(line: 3784, column: 30, scope: !6995)
!7014 = !DILocation(line: 3784, column: 35, scope: !6995)
!7015 = !DILocation(line: 3785, column: 22, scope: !6995)
!7016 = !DILocation(line: 3786, column: 19, scope: !6971)
!7017 = !DILocation(line: 3776, column: 47, scope: !6965)
!7018 = !DILocation(line: 3776, column: 54, scope: !6965)
!7019 = !DILocation(line: 3776, column: 19, scope: !6965)
!7020 = distinct !{!7020, !6968, !7021}
!7021 = !DILocation(line: 3786, column: 19, scope: !6962)
!7022 = !DILocation(line: 3788, column: 13, scope: !6870)
!7023 = !DILocation(line: 3792, column: 20, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !1, line: 3792, column: 20)
!7025 = distinct !DILexicalBlock(scope: !6863, file: !1, line: 3790, column: 13)
!7026 = !DILocation(line: 3792, column: 29, scope: !7024)
!7027 = !DILocation(line: 3792, column: 20, scope: !7025)
!7028 = !DILocation(line: 3794, column: 24, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !1, line: 3793, column: 16)
!7030 = !DILocation(line: 3794, column: 22, scope: !7029)
!7031 = !DILocation(line: 3795, column: 26, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3795, column: 19)
!7033 = !DILocation(line: 3795, column: 24, scope: !7032)
!7034 = !DILocation(line: 3795, column: 31, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 3795, column: 19)
!7036 = !DILocation(line: 3795, column: 35, scope: !7035)
!7037 = !DILocation(line: 3795, column: 33, scope: !7035)
!7038 = !DILocation(line: 3795, column: 19, scope: !7032)
!7039 = !DILocalVariable(name: "r", scope: !7040, file: !1, line: 3797, type: !24)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !1, line: 3796, column: 19)
!7041 = !DILocation(line: 3797, column: 34, scope: !7040)
!7042 = !DILocation(line: 3797, column: 55, scope: !7040)
!7043 = !DILocation(line: 3797, column: 54, scope: !7040)
!7044 = !DILocation(line: 3797, column: 53, scope: !7040)
!7045 = !DILocation(line: 3797, column: 59, scope: !7040)
!7046 = !DILocation(line: 3797, column: 69, scope: !7040)
!7047 = !DILocation(line: 3797, column: 72, scope: !7040)
!7048 = !DILocation(line: 3797, column: 67, scope: !7040)
!7049 = !DILocation(line: 3797, column: 65, scope: !7040)
!7050 = !DILocation(line: 3797, column: 38, scope: !7040)
!7051 = !DILocalVariable(name: "g", scope: !7040, file: !1, line: 3799, type: !24)
!7052 = !DILocation(line: 3799, column: 34, scope: !7040)
!7053 = !DILocation(line: 3799, column: 56, scope: !7040)
!7054 = !DILocation(line: 3799, column: 59, scope: !7040)
!7055 = !DILocation(line: 3799, column: 54, scope: !7040)
!7056 = !DILocation(line: 3799, column: 53, scope: !7040)
!7057 = !DILocation(line: 3799, column: 65, scope: !7040)
!7058 = !DILocation(line: 3800, column: 30, scope: !7040)
!7059 = !DILocation(line: 3800, column: 33, scope: !7040)
!7060 = !DILocation(line: 3800, column: 28, scope: !7040)
!7061 = !DILocation(line: 3800, column: 26, scope: !7040)
!7062 = !DILocation(line: 3799, column: 38, scope: !7040)
!7063 = !DILocalVariable(name: "b", scope: !7040, file: !1, line: 3802, type: !24)
!7064 = !DILocation(line: 3802, column: 34, scope: !7040)
!7065 = !DILocation(line: 3802, column: 56, scope: !7040)
!7066 = !DILocation(line: 3802, column: 59, scope: !7040)
!7067 = !DILocation(line: 3802, column: 54, scope: !7040)
!7068 = !DILocation(line: 3802, column: 53, scope: !7040)
!7069 = !DILocation(line: 3802, column: 65, scope: !7040)
!7070 = !DILocation(line: 3803, column: 30, scope: !7040)
!7071 = !DILocation(line: 3803, column: 33, scope: !7040)
!7072 = !DILocation(line: 3803, column: 28, scope: !7040)
!7073 = !DILocation(line: 3803, column: 26, scope: !7040)
!7074 = !DILocation(line: 3802, column: 38, scope: !7040)
!7075 = !DILocation(line: 3805, column: 26, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7040, file: !1, line: 3805, column: 26)
!7077 = !DILocation(line: 3805, column: 31, scope: !7076)
!7078 = !DILocation(line: 3805, column: 40, scope: !7076)
!7079 = !DILocation(line: 3805, column: 52, scope: !7076)
!7080 = !DILocation(line: 3805, column: 28, scope: !7076)
!7081 = !DILocation(line: 3805, column: 56, scope: !7076)
!7082 = !DILocation(line: 3806, column: 26, scope: !7076)
!7083 = !DILocation(line: 3806, column: 31, scope: !7076)
!7084 = !DILocation(line: 3806, column: 40, scope: !7076)
!7085 = !DILocation(line: 3806, column: 52, scope: !7076)
!7086 = !DILocation(line: 3806, column: 28, scope: !7076)
!7087 = !DILocation(line: 3806, column: 58, scope: !7076)
!7088 = !DILocation(line: 3807, column: 26, scope: !7076)
!7089 = !DILocation(line: 3807, column: 31, scope: !7076)
!7090 = !DILocation(line: 3807, column: 40, scope: !7076)
!7091 = !DILocation(line: 3807, column: 52, scope: !7076)
!7092 = !DILocation(line: 3807, column: 28, scope: !7076)
!7093 = !DILocation(line: 3805, column: 26, scope: !7040)
!7094 = !DILocation(line: 3810, column: 43, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7076, file: !1, line: 3808, column: 22)
!7096 = !DILocation(line: 3810, column: 52, scope: !7095)
!7097 = !DILocation(line: 3810, column: 63, scope: !7095)
!7098 = !DILocation(line: 3810, column: 67, scope: !7095)
!7099 = !DILocation(line: 3810, column: 73, scope: !7095)
!7100 = !DILocation(line: 3810, column: 31, scope: !7095)
!7101 = !DILocation(line: 3810, column: 26, scope: !7095)
!7102 = !DILocation(line: 3810, column: 29, scope: !7095)
!7103 = !DILocation(line: 3811, column: 48, scope: !7095)
!7104 = !DILocation(line: 3811, column: 57, scope: !7095)
!7105 = !DILocation(line: 3811, column: 68, scope: !7095)
!7106 = !DILocation(line: 3811, column: 72, scope: !7095)
!7107 = !DILocation(line: 3811, column: 37, scope: !7095)
!7108 = !DILocation(line: 3811, column: 27, scope: !7095)
!7109 = !DILocation(line: 3811, column: 30, scope: !7095)
!7110 = !DILocation(line: 3811, column: 35, scope: !7095)
!7111 = !DILocation(line: 3812, column: 49, scope: !7095)
!7112 = !DILocation(line: 3812, column: 58, scope: !7095)
!7113 = !DILocation(line: 3812, column: 69, scope: !7095)
!7114 = !DILocation(line: 3812, column: 75, scope: !7095)
!7115 = !DILocation(line: 3812, column: 81, scope: !7095)
!7116 = !DILocation(line: 3812, column: 37, scope: !7095)
!7117 = !DILocation(line: 3812, column: 27, scope: !7095)
!7118 = !DILocation(line: 3812, column: 30, scope: !7095)
!7119 = !DILocation(line: 3812, column: 35, scope: !7095)
!7120 = !DILocation(line: 3813, column: 48, scope: !7095)
!7121 = !DILocation(line: 3813, column: 57, scope: !7095)
!7122 = !DILocation(line: 3813, column: 68, scope: !7095)
!7123 = !DILocation(line: 3813, column: 74, scope: !7095)
!7124 = !DILocation(line: 3813, column: 37, scope: !7095)
!7125 = !DILocation(line: 3813, column: 27, scope: !7095)
!7126 = !DILocation(line: 3813, column: 30, scope: !7095)
!7127 = !DILocation(line: 3813, column: 35, scope: !7095)
!7128 = !DILocation(line: 3814, column: 49, scope: !7095)
!7129 = !DILocation(line: 3814, column: 58, scope: !7095)
!7130 = !DILocation(line: 3814, column: 69, scope: !7095)
!7131 = !DILocation(line: 3814, column: 74, scope: !7095)
!7132 = !DILocation(line: 3814, column: 80, scope: !7095)
!7133 = !DILocation(line: 3814, column: 37, scope: !7095)
!7134 = !DILocation(line: 3814, column: 27, scope: !7095)
!7135 = !DILocation(line: 3814, column: 30, scope: !7095)
!7136 = !DILocation(line: 3814, column: 35, scope: !7095)
!7137 = !DILocation(line: 3815, column: 48, scope: !7095)
!7138 = !DILocation(line: 3815, column: 57, scope: !7095)
!7139 = !DILocation(line: 3815, column: 68, scope: !7095)
!7140 = !DILocation(line: 3815, column: 73, scope: !7095)
!7141 = !DILocation(line: 3815, column: 37, scope: !7095)
!7142 = !DILocation(line: 3815, column: 27, scope: !7095)
!7143 = !DILocation(line: 3815, column: 30, scope: !7095)
!7144 = !DILocation(line: 3815, column: 35, scope: !7095)
!7145 = !DILocation(line: 3816, column: 22, scope: !7095)
!7146 = !DILocalVariable(name: "v", scope: !7147, file: !1, line: 3820, type: !24)
!7147 = distinct !DILexicalBlock(scope: !7076, file: !1, line: 3819, column: 22)
!7148 = !DILocation(line: 3820, column: 37, scope: !7147)
!7149 = !DILocation(line: 3820, column: 41, scope: !7147)
!7150 = !DILocation(line: 3820, column: 52, scope: !7147)
!7151 = !DILocation(line: 3820, column: 55, scope: !7147)
!7152 = !DILocation(line: 3820, column: 50, scope: !7147)
!7153 = !DILocation(line: 3820, column: 63, scope: !7147)
!7154 = !DILocation(line: 3820, column: 60, scope: !7147)
!7155 = !DILocation(line: 3820, column: 77, scope: !7147)
!7156 = !DILocation(line: 3820, column: 76, scope: !7147)
!7157 = !DILocation(line: 3821, column: 43, scope: !7147)
!7158 = !DILocation(line: 3821, column: 45, scope: !7147)
!7159 = !DILocation(line: 3821, column: 51, scope: !7147)
!7160 = !DILocation(line: 3821, column: 31, scope: !7147)
!7161 = !DILocation(line: 3821, column: 26, scope: !7147)
!7162 = !DILocation(line: 3821, column: 29, scope: !7147)
!7163 = !DILocation(line: 3822, column: 48, scope: !7147)
!7164 = !DILocation(line: 3822, column: 50, scope: !7147)
!7165 = !DILocation(line: 3822, column: 37, scope: !7147)
!7166 = !DILocation(line: 3822, column: 27, scope: !7147)
!7167 = !DILocation(line: 3822, column: 30, scope: !7147)
!7168 = !DILocation(line: 3822, column: 35, scope: !7147)
!7169 = !DILocation(line: 3824, column: 29, scope: !7147)
!7170 = !DILocation(line: 3824, column: 40, scope: !7147)
!7171 = !DILocation(line: 3824, column: 43, scope: !7147)
!7172 = !DILocation(line: 3824, column: 38, scope: !7147)
!7173 = !DILocation(line: 3824, column: 51, scope: !7147)
!7174 = !DILocation(line: 3824, column: 48, scope: !7147)
!7175 = !DILocation(line: 3824, column: 66, scope: !7147)
!7176 = !DILocation(line: 3824, column: 69, scope: !7147)
!7177 = !DILocation(line: 3824, column: 64, scope: !7147)
!7178 = !DILocation(line: 3824, column: 27, scope: !7147)
!7179 = !DILocation(line: 3825, column: 49, scope: !7147)
!7180 = !DILocation(line: 3825, column: 51, scope: !7147)
!7181 = !DILocation(line: 3825, column: 57, scope: !7147)
!7182 = !DILocation(line: 3825, column: 37, scope: !7147)
!7183 = !DILocation(line: 3825, column: 27, scope: !7147)
!7184 = !DILocation(line: 3825, column: 30, scope: !7147)
!7185 = !DILocation(line: 3825, column: 35, scope: !7147)
!7186 = !DILocation(line: 3826, column: 48, scope: !7147)
!7187 = !DILocation(line: 3826, column: 50, scope: !7147)
!7188 = !DILocation(line: 3826, column: 37, scope: !7147)
!7189 = !DILocation(line: 3826, column: 27, scope: !7147)
!7190 = !DILocation(line: 3826, column: 30, scope: !7147)
!7191 = !DILocation(line: 3826, column: 35, scope: !7147)
!7192 = !DILocation(line: 3828, column: 29, scope: !7147)
!7193 = !DILocation(line: 3828, column: 40, scope: !7147)
!7194 = !DILocation(line: 3828, column: 43, scope: !7147)
!7195 = !DILocation(line: 3828, column: 38, scope: !7147)
!7196 = !DILocation(line: 3828, column: 51, scope: !7147)
!7197 = !DILocation(line: 3828, column: 48, scope: !7147)
!7198 = !DILocation(line: 3828, column: 66, scope: !7147)
!7199 = !DILocation(line: 3828, column: 69, scope: !7147)
!7200 = !DILocation(line: 3828, column: 64, scope: !7147)
!7201 = !DILocation(line: 3828, column: 27, scope: !7147)
!7202 = !DILocation(line: 3829, column: 49, scope: !7147)
!7203 = !DILocation(line: 3829, column: 51, scope: !7147)
!7204 = !DILocation(line: 3829, column: 57, scope: !7147)
!7205 = !DILocation(line: 3829, column: 37, scope: !7147)
!7206 = !DILocation(line: 3829, column: 27, scope: !7147)
!7207 = !DILocation(line: 3829, column: 30, scope: !7147)
!7208 = !DILocation(line: 3829, column: 35, scope: !7147)
!7209 = !DILocation(line: 3830, column: 48, scope: !7147)
!7210 = !DILocation(line: 3830, column: 50, scope: !7147)
!7211 = !DILocation(line: 3830, column: 37, scope: !7147)
!7212 = !DILocation(line: 3830, column: 27, scope: !7147)
!7213 = !DILocation(line: 3830, column: 30, scope: !7147)
!7214 = !DILocation(line: 3830, column: 35, scope: !7147)
!7215 = !DILocation(line: 3832, column: 19, scope: !7040)
!7216 = !DILocation(line: 3795, column: 47, scope: !7035)
!7217 = !DILocation(line: 3795, column: 54, scope: !7035)
!7218 = !DILocation(line: 3795, column: 19, scope: !7035)
!7219 = distinct !{!7219, !7038, !7220}
!7220 = !DILocation(line: 3832, column: 19, scope: !7032)
!7221 = !DILocation(line: 3833, column: 16, scope: !7029)
!7222 = !DILocation(line: 3838, column: 24, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7024, file: !1, line: 3837, column: 16)
!7224 = !DILocation(line: 3838, column: 22, scope: !7223)
!7225 = !DILocation(line: 3839, column: 26, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 3839, column: 19)
!7227 = !DILocation(line: 3839, column: 24, scope: !7226)
!7228 = !DILocation(line: 3839, column: 31, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !1, line: 3839, column: 19)
!7230 = !DILocation(line: 3839, column: 35, scope: !7229)
!7231 = !DILocation(line: 3839, column: 33, scope: !7229)
!7232 = !DILocation(line: 3839, column: 19, scope: !7226)
!7233 = !DILocalVariable(name: "r", scope: !7234, file: !1, line: 3841, type: !24)
!7234 = distinct !DILexicalBlock(scope: !7229, file: !1, line: 3840, column: 19)
!7235 = !DILocation(line: 3841, column: 34, scope: !7234)
!7236 = !DILocation(line: 3841, column: 55, scope: !7234)
!7237 = !DILocation(line: 3841, column: 54, scope: !7234)
!7238 = !DILocation(line: 3841, column: 53, scope: !7234)
!7239 = !DILocation(line: 3841, column: 59, scope: !7234)
!7240 = !DILocation(line: 3841, column: 69, scope: !7234)
!7241 = !DILocation(line: 3841, column: 72, scope: !7234)
!7242 = !DILocation(line: 3841, column: 67, scope: !7234)
!7243 = !DILocation(line: 3841, column: 65, scope: !7234)
!7244 = !DILocation(line: 3841, column: 38, scope: !7234)
!7245 = !DILocalVariable(name: "g", scope: !7234, file: !1, line: 3843, type: !24)
!7246 = !DILocation(line: 3843, column: 34, scope: !7234)
!7247 = !DILocation(line: 3843, column: 56, scope: !7234)
!7248 = !DILocation(line: 3843, column: 59, scope: !7234)
!7249 = !DILocation(line: 3843, column: 54, scope: !7234)
!7250 = !DILocation(line: 3843, column: 53, scope: !7234)
!7251 = !DILocation(line: 3843, column: 65, scope: !7234)
!7252 = !DILocation(line: 3844, column: 30, scope: !7234)
!7253 = !DILocation(line: 3844, column: 33, scope: !7234)
!7254 = !DILocation(line: 3844, column: 28, scope: !7234)
!7255 = !DILocation(line: 3844, column: 26, scope: !7234)
!7256 = !DILocation(line: 3843, column: 38, scope: !7234)
!7257 = !DILocalVariable(name: "b", scope: !7234, file: !1, line: 3846, type: !24)
!7258 = !DILocation(line: 3846, column: 34, scope: !7234)
!7259 = !DILocation(line: 3846, column: 56, scope: !7234)
!7260 = !DILocation(line: 3846, column: 59, scope: !7234)
!7261 = !DILocation(line: 3846, column: 54, scope: !7234)
!7262 = !DILocation(line: 3846, column: 53, scope: !7234)
!7263 = !DILocation(line: 3846, column: 65, scope: !7234)
!7264 = !DILocation(line: 3847, column: 30, scope: !7234)
!7265 = !DILocation(line: 3847, column: 33, scope: !7234)
!7266 = !DILocation(line: 3847, column: 28, scope: !7234)
!7267 = !DILocation(line: 3847, column: 26, scope: !7234)
!7268 = !DILocation(line: 3846, column: 38, scope: !7234)
!7269 = !DILocation(line: 3849, column: 26, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7234, file: !1, line: 3849, column: 26)
!7271 = !DILocation(line: 3849, column: 31, scope: !7270)
!7272 = !DILocation(line: 3849, column: 40, scope: !7270)
!7273 = !DILocation(line: 3849, column: 52, scope: !7270)
!7274 = !DILocation(line: 3849, column: 28, scope: !7270)
!7275 = !DILocation(line: 3849, column: 56, scope: !7270)
!7276 = !DILocation(line: 3850, column: 26, scope: !7270)
!7277 = !DILocation(line: 3850, column: 31, scope: !7270)
!7278 = !DILocation(line: 3850, column: 40, scope: !7270)
!7279 = !DILocation(line: 3850, column: 52, scope: !7270)
!7280 = !DILocation(line: 3850, column: 28, scope: !7270)
!7281 = !DILocation(line: 3850, column: 58, scope: !7270)
!7282 = !DILocation(line: 3851, column: 26, scope: !7270)
!7283 = !DILocation(line: 3851, column: 31, scope: !7270)
!7284 = !DILocation(line: 3851, column: 40, scope: !7270)
!7285 = !DILocation(line: 3851, column: 52, scope: !7270)
!7286 = !DILocation(line: 3851, column: 28, scope: !7270)
!7287 = !DILocation(line: 3849, column: 26, scope: !7234)
!7288 = !DILocation(line: 3853, column: 43, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7270, file: !1, line: 3852, column: 22)
!7290 = !DILocation(line: 3853, column: 52, scope: !7289)
!7291 = !DILocation(line: 3853, column: 63, scope: !7289)
!7292 = !DILocation(line: 3853, column: 67, scope: !7289)
!7293 = !DILocation(line: 3853, column: 73, scope: !7289)
!7294 = !DILocation(line: 3853, column: 31, scope: !7289)
!7295 = !DILocation(line: 3853, column: 26, scope: !7289)
!7296 = !DILocation(line: 3853, column: 29, scope: !7289)
!7297 = !DILocation(line: 3854, column: 48, scope: !7289)
!7298 = !DILocation(line: 3854, column: 57, scope: !7289)
!7299 = !DILocation(line: 3854, column: 68, scope: !7289)
!7300 = !DILocation(line: 3854, column: 72, scope: !7289)
!7301 = !DILocation(line: 3854, column: 37, scope: !7289)
!7302 = !DILocation(line: 3854, column: 27, scope: !7289)
!7303 = !DILocation(line: 3854, column: 30, scope: !7289)
!7304 = !DILocation(line: 3854, column: 35, scope: !7289)
!7305 = !DILocation(line: 3855, column: 49, scope: !7289)
!7306 = !DILocation(line: 3855, column: 58, scope: !7289)
!7307 = !DILocation(line: 3855, column: 69, scope: !7289)
!7308 = !DILocation(line: 3855, column: 75, scope: !7289)
!7309 = !DILocation(line: 3855, column: 81, scope: !7289)
!7310 = !DILocation(line: 3855, column: 37, scope: !7289)
!7311 = !DILocation(line: 3855, column: 27, scope: !7289)
!7312 = !DILocation(line: 3855, column: 30, scope: !7289)
!7313 = !DILocation(line: 3855, column: 35, scope: !7289)
!7314 = !DILocation(line: 3856, column: 48, scope: !7289)
!7315 = !DILocation(line: 3856, column: 57, scope: !7289)
!7316 = !DILocation(line: 3856, column: 68, scope: !7289)
!7317 = !DILocation(line: 3856, column: 74, scope: !7289)
!7318 = !DILocation(line: 3856, column: 37, scope: !7289)
!7319 = !DILocation(line: 3856, column: 27, scope: !7289)
!7320 = !DILocation(line: 3856, column: 30, scope: !7289)
!7321 = !DILocation(line: 3856, column: 35, scope: !7289)
!7322 = !DILocation(line: 3857, column: 49, scope: !7289)
!7323 = !DILocation(line: 3857, column: 58, scope: !7289)
!7324 = !DILocation(line: 3857, column: 69, scope: !7289)
!7325 = !DILocation(line: 3857, column: 74, scope: !7289)
!7326 = !DILocation(line: 3857, column: 80, scope: !7289)
!7327 = !DILocation(line: 3857, column: 37, scope: !7289)
!7328 = !DILocation(line: 3857, column: 27, scope: !7289)
!7329 = !DILocation(line: 3857, column: 30, scope: !7289)
!7330 = !DILocation(line: 3857, column: 35, scope: !7289)
!7331 = !DILocation(line: 3858, column: 48, scope: !7289)
!7332 = !DILocation(line: 3858, column: 57, scope: !7289)
!7333 = !DILocation(line: 3858, column: 68, scope: !7289)
!7334 = !DILocation(line: 3858, column: 73, scope: !7289)
!7335 = !DILocation(line: 3858, column: 37, scope: !7289)
!7336 = !DILocation(line: 3858, column: 27, scope: !7289)
!7337 = !DILocation(line: 3858, column: 30, scope: !7289)
!7338 = !DILocation(line: 3858, column: 35, scope: !7289)
!7339 = !DILocation(line: 3859, column: 22, scope: !7289)
!7340 = !DILocation(line: 3860, column: 19, scope: !7234)
!7341 = !DILocation(line: 3839, column: 47, scope: !7229)
!7342 = !DILocation(line: 3839, column: 54, scope: !7229)
!7343 = !DILocation(line: 3839, column: 19, scope: !7229)
!7344 = distinct !{!7344, !7232, !7345}
!7345 = !DILocation(line: 3860, column: 19, scope: !7226)
!7346 = !DILocation(line: 3863, column: 13, scope: !6864)
!7347 = !DILocation(line: 3868, column: 17, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3868, column: 17)
!7349 = distinct !DILexicalBlock(scope: !6279, file: !1, line: 3867, column: 10)
!7350 = !DILocation(line: 3868, column: 27, scope: !7348)
!7351 = !DILocation(line: 3868, column: 37, scope: !7348)
!7352 = !DILocation(line: 3868, column: 17, scope: !7349)
!7353 = !DILocation(line: 3871, column: 20, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !1, line: 3871, column: 20)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 3869, column: 13)
!7356 = !DILocation(line: 3871, column: 31, scope: !7354)
!7357 = !DILocation(line: 3871, column: 39, scope: !7354)
!7358 = !DILocation(line: 3871, column: 42, scope: !7354)
!7359 = !DILocation(line: 3871, column: 55, scope: !7354)
!7360 = !DILocation(line: 3871, column: 63, scope: !7354)
!7361 = !DILocation(line: 3872, column: 20, scope: !7354)
!7362 = !DILocation(line: 3872, column: 32, scope: !7354)
!7363 = !DILocation(line: 3871, column: 20, scope: !7355)
!7364 = !DILocation(line: 3874, column: 24, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7354, file: !1, line: 3873, column: 16)
!7366 = !DILocation(line: 3874, column: 22, scope: !7365)
!7367 = !DILocation(line: 3875, column: 26, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7365, file: !1, line: 3875, column: 19)
!7369 = !DILocation(line: 3875, column: 24, scope: !7368)
!7370 = !DILocation(line: 3875, column: 31, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7368, file: !1, line: 3875, column: 19)
!7372 = !DILocation(line: 3875, column: 35, scope: !7371)
!7373 = !DILocation(line: 3875, column: 33, scope: !7371)
!7374 = !DILocation(line: 3875, column: 19, scope: !7368)
!7375 = !DILocalVariable(name: "a", scope: !7376, file: !1, line: 3877, type: !24)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !1, line: 3876, column: 19)
!7377 = !DILocation(line: 3877, column: 34, scope: !7376)
!7378 = !DILocation(line: 3877, column: 40, scope: !7376)
!7379 = !DILocation(line: 3877, column: 43, scope: !7376)
!7380 = !DILocation(line: 3877, column: 38, scope: !7376)
!7381 = !DILocation(line: 3879, column: 26, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7376, file: !1, line: 3879, column: 26)
!7383 = !DILocation(line: 3879, column: 28, scope: !7382)
!7384 = !DILocation(line: 3879, column: 26, scope: !7376)
!7385 = !DILocation(line: 3880, column: 31, scope: !7382)
!7386 = !DILocation(line: 3880, column: 44, scope: !7382)
!7387 = !DILocation(line: 3880, column: 43, scope: !7382)
!7388 = !DILocation(line: 3880, column: 26, scope: !7382)
!7389 = !DILocation(line: 3880, column: 29, scope: !7382)
!7390 = !DILocation(line: 3880, column: 25, scope: !7382)
!7391 = !DILocation(line: 3882, column: 31, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7382, file: !1, line: 3882, column: 31)
!7393 = !DILocation(line: 3882, column: 33, scope: !7392)
!7394 = !DILocation(line: 3882, column: 31, scope: !7382)
!7395 = !DILocation(line: 3885, column: 41, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !1, line: 3883, column: 22)
!7397 = !DILocation(line: 3885, column: 50, scope: !7396)
!7398 = !DILocation(line: 3885, column: 61, scope: !7396)
!7399 = !DILocation(line: 3885, column: 31, scope: !7396)
!7400 = !DILocation(line: 3885, column: 26, scope: !7396)
!7401 = !DILocation(line: 3885, column: 29, scope: !7396)
!7402 = !DILocation(line: 3886, column: 22, scope: !7396)
!7403 = !DILocalVariable(name: "v", scope: !7404, file: !1, line: 3890, type: !5)
!7404 = distinct !DILexicalBlock(scope: !7392, file: !1, line: 3889, column: 22)
!7405 = !DILocation(line: 3890, column: 34, scope: !7404)
!7406 = !DILocalVariable(name: "w", scope: !7404, file: !1, line: 3890, type: !5)
!7407 = !DILocation(line: 3890, column: 37, scope: !7404)
!7408 = !DILocation(line: 3892, column: 29, scope: !7404)
!7409 = !DILocation(line: 3892, column: 41, scope: !7404)
!7410 = !DILocation(line: 3892, column: 40, scope: !7404)
!7411 = !DILocation(line: 3892, column: 27, scope: !7404)
!7412 = !DILocalVariable(name: "temp", scope: !7413, file: !1, line: 3893, type: !24)
!7413 = distinct !DILexicalBlock(scope: !7404, file: !1, line: 3893, column: 25)
!7414 = !DILocation(line: 3893, column: 25, scope: !7413)
!7415 = !DILocation(line: 3894, column: 30, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7404, file: !1, line: 3894, column: 29)
!7417 = !DILocation(line: 3894, column: 29, scope: !7404)
!7418 = !DILocation(line: 3895, column: 32, scope: !7416)
!7419 = !DILocation(line: 3895, column: 45, scope: !7416)
!7420 = !DILocation(line: 3895, column: 30, scope: !7416)
!7421 = !DILocation(line: 3895, column: 28, scope: !7416)
!7422 = !DILocation(line: 3896, column: 31, scope: !7404)
!7423 = !DILocation(line: 3896, column: 26, scope: !7404)
!7424 = !DILocation(line: 3896, column: 29, scope: !7404)
!7425 = !DILocation(line: 3898, column: 19, scope: !7376)
!7426 = !DILocation(line: 3875, column: 47, scope: !7371)
!7427 = !DILocation(line: 3875, column: 54, scope: !7371)
!7428 = !DILocation(line: 3875, column: 19, scope: !7371)
!7429 = distinct !{!7429, !7374, !7430}
!7430 = !DILocation(line: 3898, column: 19, scope: !7368)
!7431 = !DILocation(line: 3899, column: 16, scope: !7365)
!7432 = !DILocation(line: 3903, column: 24, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7354, file: !1, line: 3902, column: 16)
!7434 = !DILocation(line: 3903, column: 22, scope: !7433)
!7435 = !DILocation(line: 3904, column: 26, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7433, file: !1, line: 3904, column: 19)
!7437 = !DILocation(line: 3904, column: 24, scope: !7436)
!7438 = !DILocation(line: 3904, column: 31, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7436, file: !1, line: 3904, column: 19)
!7440 = !DILocation(line: 3904, column: 35, scope: !7439)
!7441 = !DILocation(line: 3904, column: 33, scope: !7439)
!7442 = !DILocation(line: 3904, column: 19, scope: !7436)
!7443 = !DILocalVariable(name: "a", scope: !7444, file: !1, line: 3906, type: !5)
!7444 = distinct !DILexicalBlock(scope: !7439, file: !1, line: 3905, column: 19)
!7445 = !DILocation(line: 3906, column: 31, scope: !7444)
!7446 = !DILocation(line: 3906, column: 37, scope: !7444)
!7447 = !DILocation(line: 3906, column: 40, scope: !7444)
!7448 = !DILocation(line: 3906, column: 35, scope: !7444)
!7449 = !DILocation(line: 3908, column: 26, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7444, file: !1, line: 3908, column: 26)
!7451 = !DILocation(line: 3908, column: 28, scope: !7450)
!7452 = !DILocation(line: 3908, column: 26, scope: !7444)
!7453 = !DILocation(line: 3909, column: 41, scope: !7450)
!7454 = !DILocation(line: 3909, column: 50, scope: !7450)
!7455 = !DILocation(line: 3909, column: 61, scope: !7450)
!7456 = !DILocation(line: 3909, column: 31, scope: !7450)
!7457 = !DILocation(line: 3909, column: 26, scope: !7450)
!7458 = !DILocation(line: 3909, column: 29, scope: !7450)
!7459 = !DILocation(line: 3909, column: 25, scope: !7450)
!7460 = !DILocation(line: 3911, column: 31, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7450, file: !1, line: 3911, column: 31)
!7462 = !DILocation(line: 3911, column: 33, scope: !7461)
!7463 = !DILocation(line: 3911, column: 31, scope: !7450)
!7464 = !DILocalVariable(name: "temp", scope: !7465, file: !1, line: 3912, type: !24)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !1, line: 3912, column: 25)
!7466 = !DILocation(line: 3912, column: 25, scope: !7465)
!7467 = !DILocation(line: 3913, column: 19, scope: !7444)
!7468 = !DILocation(line: 3904, column: 47, scope: !7439)
!7469 = !DILocation(line: 3904, column: 54, scope: !7439)
!7470 = !DILocation(line: 3904, column: 19, scope: !7439)
!7471 = distinct !{!7471, !7442, !7472}
!7472 = !DILocation(line: 3913, column: 19, scope: !7436)
!7473 = !DILocation(line: 3915, column: 13, scope: !7355)
!7474 = !DILocation(line: 3919, column: 20, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 3919, column: 20)
!7476 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 3917, column: 13)
!7477 = !DILocation(line: 3919, column: 29, scope: !7475)
!7478 = !DILocation(line: 3919, column: 37, scope: !7475)
!7479 = !DILocation(line: 3919, column: 40, scope: !7475)
!7480 = !DILocation(line: 3919, column: 56, scope: !7475)
!7481 = !DILocation(line: 3919, column: 64, scope: !7475)
!7482 = !DILocation(line: 3920, column: 20, scope: !7475)
!7483 = !DILocation(line: 3920, column: 34, scope: !7475)
!7484 = !DILocation(line: 3919, column: 20, scope: !7476)
!7485 = !DILocation(line: 3922, column: 24, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 3921, column: 16)
!7487 = !DILocation(line: 3922, column: 22, scope: !7486)
!7488 = !DILocation(line: 3923, column: 26, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !1, line: 3923, column: 19)
!7490 = !DILocation(line: 3923, column: 24, scope: !7489)
!7491 = !DILocation(line: 3923, column: 31, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !1, line: 3923, column: 19)
!7493 = !DILocation(line: 3923, column: 35, scope: !7492)
!7494 = !DILocation(line: 3923, column: 33, scope: !7492)
!7495 = !DILocation(line: 3923, column: 19, scope: !7489)
!7496 = !DILocalVariable(name: "a", scope: !7497, file: !1, line: 3925, type: !24)
!7497 = distinct !DILexicalBlock(scope: !7492, file: !1, line: 3924, column: 19)
!7498 = !DILocation(line: 3925, column: 34, scope: !7497)
!7499 = !DILocation(line: 3925, column: 56, scope: !7497)
!7500 = !DILocation(line: 3925, column: 59, scope: !7497)
!7501 = !DILocation(line: 3925, column: 54, scope: !7497)
!7502 = !DILocation(line: 3925, column: 53, scope: !7497)
!7503 = !DILocation(line: 3925, column: 65, scope: !7497)
!7504 = !DILocation(line: 3926, column: 30, scope: !7497)
!7505 = !DILocation(line: 3926, column: 33, scope: !7497)
!7506 = !DILocation(line: 3926, column: 28, scope: !7497)
!7507 = !DILocation(line: 3926, column: 26, scope: !7497)
!7508 = !DILocation(line: 3925, column: 38, scope: !7497)
!7509 = !DILocation(line: 3928, column: 26, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7497, file: !1, line: 3928, column: 26)
!7511 = !DILocation(line: 3928, column: 28, scope: !7510)
!7512 = !DILocation(line: 3928, column: 26, scope: !7497)
!7513 = !DILocalVariable(name: "v", scope: !7514, file: !1, line: 3930, type: !24)
!7514 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 3929, column: 22)
!7515 = !DILocation(line: 3930, column: 37, scope: !7514)
!7516 = !DILocation(line: 3932, column: 29, scope: !7514)
!7517 = !DILocation(line: 3932, column: 40, scope: !7514)
!7518 = !DILocation(line: 3932, column: 43, scope: !7514)
!7519 = !DILocation(line: 3932, column: 38, scope: !7514)
!7520 = !DILocation(line: 3932, column: 51, scope: !7514)
!7521 = !DILocation(line: 3932, column: 48, scope: !7514)
!7522 = !DILocation(line: 3932, column: 65, scope: !7514)
!7523 = !DILocation(line: 3932, column: 64, scope: !7514)
!7524 = !DILocation(line: 3932, column: 27, scope: !7514)
!7525 = !DILocation(line: 3933, column: 43, scope: !7514)
!7526 = !DILocation(line: 3933, column: 45, scope: !7514)
!7527 = !DILocation(line: 3933, column: 51, scope: !7514)
!7528 = !DILocation(line: 3933, column: 31, scope: !7514)
!7529 = !DILocation(line: 3933, column: 26, scope: !7514)
!7530 = !DILocation(line: 3933, column: 29, scope: !7514)
!7531 = !DILocation(line: 3934, column: 48, scope: !7514)
!7532 = !DILocation(line: 3934, column: 50, scope: !7514)
!7533 = !DILocation(line: 3934, column: 37, scope: !7514)
!7534 = !DILocation(line: 3934, column: 27, scope: !7514)
!7535 = !DILocation(line: 3934, column: 30, scope: !7514)
!7536 = !DILocation(line: 3934, column: 35, scope: !7514)
!7537 = !DILocation(line: 3935, column: 22, scope: !7514)
!7538 = !DILocation(line: 3937, column: 31, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 3937, column: 31)
!7540 = !DILocation(line: 3937, column: 33, scope: !7539)
!7541 = !DILocation(line: 3937, column: 31, scope: !7510)
!7542 = !DILocation(line: 3940, column: 43, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !1, line: 3938, column: 22)
!7544 = !DILocation(line: 3940, column: 52, scope: !7543)
!7545 = !DILocation(line: 3940, column: 63, scope: !7543)
!7546 = !DILocation(line: 3940, column: 68, scope: !7543)
!7547 = !DILocation(line: 3940, column: 74, scope: !7543)
!7548 = !DILocation(line: 3940, column: 31, scope: !7543)
!7549 = !DILocation(line: 3940, column: 26, scope: !7543)
!7550 = !DILocation(line: 3940, column: 29, scope: !7543)
!7551 = !DILocation(line: 3941, column: 48, scope: !7543)
!7552 = !DILocation(line: 3941, column: 57, scope: !7543)
!7553 = !DILocation(line: 3941, column: 68, scope: !7543)
!7554 = !DILocation(line: 3941, column: 73, scope: !7543)
!7555 = !DILocation(line: 3941, column: 37, scope: !7543)
!7556 = !DILocation(line: 3941, column: 27, scope: !7543)
!7557 = !DILocation(line: 3941, column: 30, scope: !7543)
!7558 = !DILocation(line: 3941, column: 35, scope: !7543)
!7559 = !DILocation(line: 3942, column: 22, scope: !7543)
!7560 = !DILocalVariable(name: "g", scope: !7561, file: !1, line: 3946, type: !24)
!7561 = distinct !DILexicalBlock(scope: !7539, file: !1, line: 3945, column: 22)
!7562 = !DILocation(line: 3946, column: 37, scope: !7561)
!7563 = !DILocalVariable(name: "v", scope: !7561, file: !1, line: 3946, type: !24)
!7564 = !DILocation(line: 3946, column: 40, scope: !7561)
!7565 = !DILocalVariable(name: "w", scope: !7561, file: !1, line: 3946, type: !24)
!7566 = !DILocation(line: 3946, column: 43, scope: !7561)
!7567 = !DILocation(line: 3948, column: 29, scope: !7561)
!7568 = !DILocation(line: 3948, column: 45, scope: !7561)
!7569 = !DILocation(line: 3948, column: 48, scope: !7561)
!7570 = !DILocation(line: 3948, column: 43, scope: !7561)
!7571 = !DILocation(line: 3948, column: 56, scope: !7561)
!7572 = !DILocation(line: 3948, column: 53, scope: !7561)
!7573 = !DILocation(line: 3948, column: 70, scope: !7561)
!7574 = !DILocation(line: 3948, column: 69, scope: !7561)
!7575 = !DILocation(line: 3948, column: 27, scope: !7561)
!7576 = !DILocalVariable(name: "temp", scope: !7577, file: !1, line: 3949, type: !10)
!7577 = distinct !DILexicalBlock(scope: !7561, file: !1, line: 3949, column: 25)
!7578 = !DILocation(line: 3949, column: 25, scope: !7577)
!7579 = !DILocation(line: 3950, column: 29, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7561, file: !1, line: 3950, column: 29)
!7581 = !DILocation(line: 3950, column: 29, scope: !7561)
!7582 = !DILocation(line: 3951, column: 32, scope: !7580)
!7583 = !DILocation(line: 3951, column: 30, scope: !7580)
!7584 = !DILocation(line: 3951, column: 28, scope: !7580)
!7585 = !DILocation(line: 3953, column: 32, scope: !7580)
!7586 = !DILocation(line: 3953, column: 49, scope: !7580)
!7587 = !DILocation(line: 3953, column: 50, scope: !7580)
!7588 = !DILocation(line: 3953, column: 60, scope: !7580)
!7589 = !DILocation(line: 3953, column: 57, scope: !7580)
!7590 = !DILocation(line: 3953, column: 73, scope: !7580)
!7591 = !DILocation(line: 3953, column: 75, scope: !7580)
!7592 = !DILocation(line: 3953, column: 30, scope: !7580)
!7593 = !DILocation(line: 3954, column: 43, scope: !7561)
!7594 = !DILocation(line: 3954, column: 45, scope: !7561)
!7595 = !DILocation(line: 3954, column: 51, scope: !7561)
!7596 = !DILocation(line: 3954, column: 31, scope: !7561)
!7597 = !DILocation(line: 3954, column: 26, scope: !7561)
!7598 = !DILocation(line: 3954, column: 29, scope: !7561)
!7599 = !DILocation(line: 3955, column: 48, scope: !7561)
!7600 = !DILocation(line: 3955, column: 50, scope: !7561)
!7601 = !DILocation(line: 3955, column: 37, scope: !7561)
!7602 = !DILocation(line: 3955, column: 27, scope: !7561)
!7603 = !DILocation(line: 3955, column: 30, scope: !7561)
!7604 = !DILocation(line: 3955, column: 35, scope: !7561)
!7605 = !DILocation(line: 3957, column: 19, scope: !7497)
!7606 = !DILocation(line: 3923, column: 47, scope: !7492)
!7607 = !DILocation(line: 3923, column: 54, scope: !7492)
!7608 = !DILocation(line: 3923, column: 19, scope: !7492)
!7609 = distinct !{!7609, !7495, !7610}
!7610 = !DILocation(line: 3957, column: 19, scope: !7489)
!7611 = !DILocation(line: 3958, column: 16, scope: !7486)
!7612 = !DILocation(line: 3962, column: 24, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 3961, column: 16)
!7614 = !DILocation(line: 3962, column: 22, scope: !7613)
!7615 = !DILocation(line: 3963, column: 26, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7613, file: !1, line: 3963, column: 19)
!7617 = !DILocation(line: 3963, column: 24, scope: !7616)
!7618 = !DILocation(line: 3963, column: 31, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7616, file: !1, line: 3963, column: 19)
!7620 = !DILocation(line: 3963, column: 35, scope: !7619)
!7621 = !DILocation(line: 3963, column: 33, scope: !7619)
!7622 = !DILocation(line: 3963, column: 19, scope: !7616)
!7623 = !DILocalVariable(name: "a", scope: !7624, file: !1, line: 3965, type: !24)
!7624 = distinct !DILexicalBlock(scope: !7619, file: !1, line: 3964, column: 19)
!7625 = !DILocation(line: 3965, column: 34, scope: !7624)
!7626 = !DILocation(line: 3965, column: 56, scope: !7624)
!7627 = !DILocation(line: 3965, column: 59, scope: !7624)
!7628 = !DILocation(line: 3965, column: 54, scope: !7624)
!7629 = !DILocation(line: 3965, column: 53, scope: !7624)
!7630 = !DILocation(line: 3965, column: 65, scope: !7624)
!7631 = !DILocation(line: 3966, column: 30, scope: !7624)
!7632 = !DILocation(line: 3966, column: 33, scope: !7624)
!7633 = !DILocation(line: 3966, column: 28, scope: !7624)
!7634 = !DILocation(line: 3966, column: 26, scope: !7624)
!7635 = !DILocation(line: 3965, column: 38, scope: !7624)
!7636 = !DILocation(line: 3968, column: 26, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7624, file: !1, line: 3968, column: 26)
!7638 = !DILocation(line: 3968, column: 28, scope: !7637)
!7639 = !DILocation(line: 3968, column: 26, scope: !7624)
!7640 = !DILocation(line: 3970, column: 43, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !1, line: 3969, column: 22)
!7642 = !DILocation(line: 3970, column: 52, scope: !7641)
!7643 = !DILocation(line: 3970, column: 63, scope: !7641)
!7644 = !DILocation(line: 3970, column: 68, scope: !7641)
!7645 = !DILocation(line: 3970, column: 74, scope: !7641)
!7646 = !DILocation(line: 3970, column: 31, scope: !7641)
!7647 = !DILocation(line: 3970, column: 26, scope: !7641)
!7648 = !DILocation(line: 3970, column: 29, scope: !7641)
!7649 = !DILocation(line: 3971, column: 48, scope: !7641)
!7650 = !DILocation(line: 3971, column: 57, scope: !7641)
!7651 = !DILocation(line: 3971, column: 68, scope: !7641)
!7652 = !DILocation(line: 3971, column: 73, scope: !7641)
!7653 = !DILocation(line: 3971, column: 37, scope: !7641)
!7654 = !DILocation(line: 3971, column: 27, scope: !7641)
!7655 = !DILocation(line: 3971, column: 30, scope: !7641)
!7656 = !DILocation(line: 3971, column: 35, scope: !7641)
!7657 = !DILocation(line: 3972, column: 22, scope: !7641)
!7658 = !DILocation(line: 3974, column: 31, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7637, file: !1, line: 3974, column: 31)
!7660 = !DILocation(line: 3974, column: 33, scope: !7659)
!7661 = !DILocation(line: 3974, column: 31, scope: !7637)
!7662 = !DILocalVariable(name: "g", scope: !7663, file: !1, line: 3976, type: !24)
!7663 = distinct !DILexicalBlock(scope: !7659, file: !1, line: 3975, column: 22)
!7664 = !DILocation(line: 3976, column: 37, scope: !7663)
!7665 = !DILocalVariable(name: "v", scope: !7663, file: !1, line: 3976, type: !24)
!7666 = !DILocation(line: 3976, column: 40, scope: !7663)
!7667 = !DILocation(line: 3978, column: 46, scope: !7663)
!7668 = !DILocation(line: 3978, column: 45, scope: !7663)
!7669 = !DILocation(line: 3978, column: 44, scope: !7663)
!7670 = !DILocation(line: 3978, column: 50, scope: !7663)
!7671 = !DILocation(line: 3978, column: 60, scope: !7663)
!7672 = !DILocation(line: 3978, column: 63, scope: !7663)
!7673 = !DILocation(line: 3978, column: 58, scope: !7663)
!7674 = !DILocation(line: 3978, column: 56, scope: !7663)
!7675 = !DILocation(line: 3978, column: 29, scope: !7663)
!7676 = !DILocation(line: 3978, column: 27, scope: !7663)
!7677 = !DILocalVariable(name: "temp", scope: !7678, file: !1, line: 3979, type: !10)
!7678 = distinct !DILexicalBlock(scope: !7663, file: !1, line: 3979, column: 25)
!7679 = !DILocation(line: 3979, column: 25, scope: !7678)
!7680 = !DILocation(line: 3980, column: 43, scope: !7663)
!7681 = !DILocation(line: 3980, column: 45, scope: !7663)
!7682 = !DILocation(line: 3980, column: 51, scope: !7663)
!7683 = !DILocation(line: 3980, column: 31, scope: !7663)
!7684 = !DILocation(line: 3980, column: 26, scope: !7663)
!7685 = !DILocation(line: 3980, column: 29, scope: !7663)
!7686 = !DILocation(line: 3981, column: 48, scope: !7663)
!7687 = !DILocation(line: 3981, column: 50, scope: !7663)
!7688 = !DILocation(line: 3981, column: 37, scope: !7663)
!7689 = !DILocation(line: 3981, column: 27, scope: !7663)
!7690 = !DILocation(line: 3981, column: 30, scope: !7663)
!7691 = !DILocation(line: 3981, column: 35, scope: !7663)
!7692 = !DILocation(line: 3982, column: 22, scope: !7663)
!7693 = !DILocation(line: 3983, column: 19, scope: !7624)
!7694 = !DILocation(line: 3963, column: 47, scope: !7619)
!7695 = !DILocation(line: 3963, column: 54, scope: !7619)
!7696 = !DILocation(line: 3963, column: 19, scope: !7619)
!7697 = distinct !{!7697, !7622, !7698}
!7698 = !DILocation(line: 3983, column: 19, scope: !7616)
!7699 = !DILocation(line: 3986, column: 13, scope: !7349)
!7700 = !DILocation(line: 3991, column: 17, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !1, line: 3991, column: 17)
!7702 = distinct !DILexicalBlock(scope: !6279, file: !1, line: 3990, column: 10)
!7703 = !DILocation(line: 3991, column: 27, scope: !7701)
!7704 = !DILocation(line: 3991, column: 37, scope: !7701)
!7705 = !DILocation(line: 3991, column: 17, scope: !7702)
!7706 = !DILocation(line: 3994, column: 20, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !1, line: 3994, column: 20)
!7708 = distinct !DILexicalBlock(scope: !7701, file: !1, line: 3992, column: 13)
!7709 = !DILocation(line: 3994, column: 31, scope: !7707)
!7710 = !DILocation(line: 3994, column: 39, scope: !7707)
!7711 = !DILocation(line: 3994, column: 42, scope: !7707)
!7712 = !DILocation(line: 3994, column: 55, scope: !7707)
!7713 = !DILocation(line: 3994, column: 63, scope: !7707)
!7714 = !DILocation(line: 3995, column: 20, scope: !7707)
!7715 = !DILocation(line: 3995, column: 32, scope: !7707)
!7716 = !DILocation(line: 3994, column: 20, scope: !7708)
!7717 = !DILocation(line: 3997, column: 24, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7707, file: !1, line: 3996, column: 16)
!7719 = !DILocation(line: 3997, column: 22, scope: !7718)
!7720 = !DILocation(line: 3998, column: 26, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7718, file: !1, line: 3998, column: 19)
!7722 = !DILocation(line: 3998, column: 24, scope: !7721)
!7723 = !DILocation(line: 3998, column: 31, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7721, file: !1, line: 3998, column: 19)
!7725 = !DILocation(line: 3998, column: 35, scope: !7724)
!7726 = !DILocation(line: 3998, column: 33, scope: !7724)
!7727 = !DILocation(line: 3998, column: 19, scope: !7721)
!7728 = !DILocalVariable(name: "a", scope: !7729, file: !1, line: 4000, type: !5)
!7729 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 3999, column: 19)
!7730 = !DILocation(line: 4000, column: 31, scope: !7729)
!7731 = !DILocation(line: 4000, column: 37, scope: !7729)
!7732 = !DILocation(line: 4000, column: 40, scope: !7729)
!7733 = !DILocation(line: 4000, column: 35, scope: !7729)
!7734 = !DILocation(line: 4002, column: 26, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7729, file: !1, line: 4002, column: 26)
!7736 = !DILocation(line: 4002, column: 28, scope: !7735)
!7737 = !DILocation(line: 4002, column: 26, scope: !7729)
!7738 = !DILocation(line: 4004, column: 31, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7735, file: !1, line: 4003, column: 22)
!7740 = !DILocation(line: 4004, column: 44, scope: !7739)
!7741 = !DILocation(line: 4004, column: 43, scope: !7739)
!7742 = !DILocation(line: 4004, column: 26, scope: !7739)
!7743 = !DILocation(line: 4004, column: 29, scope: !7739)
!7744 = !DILocation(line: 4005, column: 37, scope: !7739)
!7745 = !DILocation(line: 4005, column: 51, scope: !7739)
!7746 = !DILocation(line: 4005, column: 54, scope: !7739)
!7747 = !DILocation(line: 4005, column: 49, scope: !7739)
!7748 = !DILocation(line: 4005, column: 27, scope: !7739)
!7749 = !DILocation(line: 4005, column: 30, scope: !7739)
!7750 = !DILocation(line: 4005, column: 35, scope: !7739)
!7751 = !DILocation(line: 4006, column: 37, scope: !7739)
!7752 = !DILocation(line: 4006, column: 51, scope: !7739)
!7753 = !DILocation(line: 4006, column: 54, scope: !7739)
!7754 = !DILocation(line: 4006, column: 49, scope: !7739)
!7755 = !DILocation(line: 4006, column: 27, scope: !7739)
!7756 = !DILocation(line: 4006, column: 30, scope: !7739)
!7757 = !DILocation(line: 4006, column: 35, scope: !7739)
!7758 = !DILocation(line: 4007, column: 22, scope: !7739)
!7759 = !DILocation(line: 4009, column: 31, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7735, file: !1, line: 4009, column: 31)
!7761 = !DILocation(line: 4009, column: 33, scope: !7760)
!7762 = !DILocation(line: 4009, column: 31, scope: !7735)
!7763 = !DILocation(line: 4012, column: 41, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !1, line: 4010, column: 22)
!7765 = !DILocation(line: 4012, column: 50, scope: !7764)
!7766 = !DILocation(line: 4012, column: 61, scope: !7764)
!7767 = !DILocation(line: 4012, column: 31, scope: !7764)
!7768 = !DILocation(line: 4012, column: 26, scope: !7764)
!7769 = !DILocation(line: 4012, column: 29, scope: !7764)
!7770 = !DILocation(line: 4013, column: 47, scope: !7764)
!7771 = !DILocation(line: 4013, column: 56, scope: !7764)
!7772 = !DILocation(line: 4013, column: 67, scope: !7764)
!7773 = !DILocation(line: 4013, column: 37, scope: !7764)
!7774 = !DILocation(line: 4013, column: 27, scope: !7764)
!7775 = !DILocation(line: 4013, column: 30, scope: !7764)
!7776 = !DILocation(line: 4013, column: 35, scope: !7764)
!7777 = !DILocation(line: 4014, column: 47, scope: !7764)
!7778 = !DILocation(line: 4014, column: 56, scope: !7764)
!7779 = !DILocation(line: 4014, column: 67, scope: !7764)
!7780 = !DILocation(line: 4014, column: 37, scope: !7764)
!7781 = !DILocation(line: 4014, column: 27, scope: !7764)
!7782 = !DILocation(line: 4014, column: 30, scope: !7764)
!7783 = !DILocation(line: 4014, column: 35, scope: !7764)
!7784 = !DILocation(line: 4015, column: 22, scope: !7764)
!7785 = !DILocalVariable(name: "v", scope: !7786, file: !1, line: 4019, type: !5)
!7786 = distinct !DILexicalBlock(scope: !7760, file: !1, line: 4018, column: 22)
!7787 = !DILocation(line: 4019, column: 34, scope: !7786)
!7788 = !DILocalVariable(name: "w", scope: !7786, file: !1, line: 4019, type: !5)
!7789 = !DILocation(line: 4019, column: 37, scope: !7786)
!7790 = !DILocation(line: 4021, column: 29, scope: !7786)
!7791 = !DILocation(line: 4021, column: 41, scope: !7786)
!7792 = !DILocation(line: 4021, column: 40, scope: !7786)
!7793 = !DILocation(line: 4021, column: 27, scope: !7786)
!7794 = !DILocalVariable(name: "temp", scope: !7795, file: !1, line: 4022, type: !24)
!7795 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4022, column: 25)
!7796 = !DILocation(line: 4022, column: 25, scope: !7795)
!7797 = !DILocation(line: 4023, column: 30, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4023, column: 29)
!7799 = !DILocation(line: 4023, column: 29, scope: !7786)
!7800 = !DILocation(line: 4023, column: 44, scope: !7798)
!7801 = !DILocation(line: 4023, column: 57, scope: !7798)
!7802 = !DILocation(line: 4023, column: 42, scope: !7798)
!7803 = !DILocation(line: 4023, column: 40, scope: !7798)
!7804 = !DILocation(line: 4024, column: 31, scope: !7786)
!7805 = !DILocation(line: 4024, column: 26, scope: !7786)
!7806 = !DILocation(line: 4024, column: 29, scope: !7786)
!7807 = !DILocation(line: 4026, column: 29, scope: !7786)
!7808 = !DILocation(line: 4026, column: 42, scope: !7786)
!7809 = !DILocation(line: 4026, column: 45, scope: !7786)
!7810 = !DILocation(line: 4026, column: 40, scope: !7786)
!7811 = !DILocation(line: 4026, column: 27, scope: !7786)
!7812 = !DILocalVariable(name: "temp", scope: !7813, file: !1, line: 4027, type: !24)
!7813 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4027, column: 25)
!7814 = !DILocation(line: 4027, column: 25, scope: !7813)
!7815 = !DILocation(line: 4028, column: 30, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4028, column: 29)
!7817 = !DILocation(line: 4028, column: 29, scope: !7786)
!7818 = !DILocation(line: 4028, column: 44, scope: !7816)
!7819 = !DILocation(line: 4028, column: 57, scope: !7816)
!7820 = !DILocation(line: 4028, column: 42, scope: !7816)
!7821 = !DILocation(line: 4028, column: 40, scope: !7816)
!7822 = !DILocation(line: 4029, column: 37, scope: !7786)
!7823 = !DILocation(line: 4029, column: 27, scope: !7786)
!7824 = !DILocation(line: 4029, column: 30, scope: !7786)
!7825 = !DILocation(line: 4029, column: 35, scope: !7786)
!7826 = !DILocation(line: 4031, column: 29, scope: !7786)
!7827 = !DILocation(line: 4031, column: 42, scope: !7786)
!7828 = !DILocation(line: 4031, column: 45, scope: !7786)
!7829 = !DILocation(line: 4031, column: 40, scope: !7786)
!7830 = !DILocation(line: 4031, column: 27, scope: !7786)
!7831 = !DILocalVariable(name: "temp", scope: !7832, file: !1, line: 4032, type: !24)
!7832 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4032, column: 25)
!7833 = !DILocation(line: 4032, column: 25, scope: !7832)
!7834 = !DILocation(line: 4033, column: 30, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 4033, column: 29)
!7836 = !DILocation(line: 4033, column: 29, scope: !7786)
!7837 = !DILocation(line: 4033, column: 44, scope: !7835)
!7838 = !DILocation(line: 4033, column: 57, scope: !7835)
!7839 = !DILocation(line: 4033, column: 42, scope: !7835)
!7840 = !DILocation(line: 4033, column: 40, scope: !7835)
!7841 = !DILocation(line: 4034, column: 37, scope: !7786)
!7842 = !DILocation(line: 4034, column: 27, scope: !7786)
!7843 = !DILocation(line: 4034, column: 30, scope: !7786)
!7844 = !DILocation(line: 4034, column: 35, scope: !7786)
!7845 = !DILocation(line: 4036, column: 19, scope: !7729)
!7846 = !DILocation(line: 3998, column: 47, scope: !7724)
!7847 = !DILocation(line: 3998, column: 54, scope: !7724)
!7848 = !DILocation(line: 3998, column: 19, scope: !7724)
!7849 = distinct !{!7849, !7727, !7850}
!7850 = !DILocation(line: 4036, column: 19, scope: !7721)
!7851 = !DILocation(line: 4037, column: 16, scope: !7718)
!7852 = !DILocation(line: 4041, column: 24, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7707, file: !1, line: 4040, column: 16)
!7854 = !DILocation(line: 4041, column: 22, scope: !7853)
!7855 = !DILocation(line: 4042, column: 26, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !1, line: 4042, column: 19)
!7857 = !DILocation(line: 4042, column: 24, scope: !7856)
!7858 = !DILocation(line: 4042, column: 31, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7856, file: !1, line: 4042, column: 19)
!7860 = !DILocation(line: 4042, column: 35, scope: !7859)
!7861 = !DILocation(line: 4042, column: 33, scope: !7859)
!7862 = !DILocation(line: 4042, column: 19, scope: !7856)
!7863 = !DILocalVariable(name: "a", scope: !7864, file: !1, line: 4044, type: !5)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 4043, column: 19)
!7865 = !DILocation(line: 4044, column: 31, scope: !7864)
!7866 = !DILocation(line: 4044, column: 37, scope: !7864)
!7867 = !DILocation(line: 4044, column: 40, scope: !7864)
!7868 = !DILocation(line: 4044, column: 35, scope: !7864)
!7869 = !DILocation(line: 4046, column: 26, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7864, file: !1, line: 4046, column: 26)
!7871 = !DILocation(line: 4046, column: 28, scope: !7870)
!7872 = !DILocation(line: 4046, column: 26, scope: !7864)
!7873 = !DILocation(line: 4048, column: 41, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 4047, column: 22)
!7875 = !DILocation(line: 4048, column: 50, scope: !7874)
!7876 = !DILocation(line: 4048, column: 61, scope: !7874)
!7877 = !DILocation(line: 4048, column: 31, scope: !7874)
!7878 = !DILocation(line: 4048, column: 26, scope: !7874)
!7879 = !DILocation(line: 4048, column: 29, scope: !7874)
!7880 = !DILocation(line: 4049, column: 47, scope: !7874)
!7881 = !DILocation(line: 4049, column: 56, scope: !7874)
!7882 = !DILocation(line: 4049, column: 67, scope: !7874)
!7883 = !DILocation(line: 4049, column: 37, scope: !7874)
!7884 = !DILocation(line: 4049, column: 27, scope: !7874)
!7885 = !DILocation(line: 4049, column: 30, scope: !7874)
!7886 = !DILocation(line: 4049, column: 35, scope: !7874)
!7887 = !DILocation(line: 4050, column: 47, scope: !7874)
!7888 = !DILocation(line: 4050, column: 56, scope: !7874)
!7889 = !DILocation(line: 4050, column: 67, scope: !7874)
!7890 = !DILocation(line: 4050, column: 37, scope: !7874)
!7891 = !DILocation(line: 4050, column: 27, scope: !7874)
!7892 = !DILocation(line: 4050, column: 30, scope: !7874)
!7893 = !DILocation(line: 4050, column: 35, scope: !7874)
!7894 = !DILocation(line: 4051, column: 22, scope: !7874)
!7895 = !DILocation(line: 4053, column: 31, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 4053, column: 31)
!7897 = !DILocation(line: 4053, column: 33, scope: !7896)
!7898 = !DILocation(line: 4053, column: 31, scope: !7870)
!7899 = !DILocalVariable(name: "temp", scope: !7900, file: !1, line: 4055, type: !24)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 4055, column: 25)
!7901 = distinct !DILexicalBlock(scope: !7896, file: !1, line: 4054, column: 22)
!7902 = !DILocation(line: 4055, column: 25, scope: !7900)
!7903 = !DILocalVariable(name: "temp", scope: !7904, file: !1, line: 4057, type: !24)
!7904 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 4057, column: 25)
!7905 = !DILocation(line: 4057, column: 25, scope: !7904)
!7906 = !DILocalVariable(name: "temp", scope: !7907, file: !1, line: 4060, type: !24)
!7907 = distinct !DILexicalBlock(scope: !7901, file: !1, line: 4060, column: 25)
!7908 = !DILocation(line: 4060, column: 25, scope: !7907)
!7909 = !DILocation(line: 4062, column: 22, scope: !7901)
!7910 = !DILocation(line: 4063, column: 19, scope: !7864)
!7911 = !DILocation(line: 4042, column: 47, scope: !7859)
!7912 = !DILocation(line: 4042, column: 54, scope: !7859)
!7913 = !DILocation(line: 4042, column: 19, scope: !7859)
!7914 = distinct !{!7914, !7862, !7915}
!7915 = !DILocation(line: 4063, column: 19, scope: !7856)
!7916 = !DILocation(line: 4065, column: 13, scope: !7708)
!7917 = !DILocation(line: 4069, column: 20, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !1, line: 4069, column: 20)
!7919 = distinct !DILexicalBlock(scope: !7701, file: !1, line: 4067, column: 13)
!7920 = !DILocation(line: 4069, column: 29, scope: !7918)
!7921 = !DILocation(line: 4069, column: 37, scope: !7918)
!7922 = !DILocation(line: 4069, column: 40, scope: !7918)
!7923 = !DILocation(line: 4069, column: 56, scope: !7918)
!7924 = !DILocation(line: 4069, column: 64, scope: !7918)
!7925 = !DILocation(line: 4070, column: 20, scope: !7918)
!7926 = !DILocation(line: 4070, column: 34, scope: !7918)
!7927 = !DILocation(line: 4069, column: 20, scope: !7919)
!7928 = !DILocation(line: 4072, column: 24, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 4071, column: 16)
!7930 = !DILocation(line: 4072, column: 22, scope: !7929)
!7931 = !DILocation(line: 4073, column: 26, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7929, file: !1, line: 4073, column: 19)
!7933 = !DILocation(line: 4073, column: 24, scope: !7932)
!7934 = !DILocation(line: 4073, column: 31, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7932, file: !1, line: 4073, column: 19)
!7936 = !DILocation(line: 4073, column: 35, scope: !7935)
!7937 = !DILocation(line: 4073, column: 33, scope: !7935)
!7938 = !DILocation(line: 4073, column: 19, scope: !7932)
!7939 = !DILocalVariable(name: "a", scope: !7940, file: !1, line: 4075, type: !24)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !1, line: 4074, column: 19)
!7941 = !DILocation(line: 4075, column: 34, scope: !7940)
!7942 = !DILocation(line: 4075, column: 69, scope: !7940)
!7943 = !DILocation(line: 4075, column: 72, scope: !7940)
!7944 = !DILocation(line: 4075, column: 67, scope: !7940)
!7945 = !DILocation(line: 4075, column: 53, scope: !7940)
!7946 = !DILocation(line: 4076, column: 26, scope: !7940)
!7947 = !DILocation(line: 4076, column: 50, scope: !7940)
!7948 = !DILocation(line: 4076, column: 53, scope: !7940)
!7949 = !DILocation(line: 4076, column: 48, scope: !7940)
!7950 = !DILocation(line: 4076, column: 34, scope: !7940)
!7951 = !DILocation(line: 4076, column: 32, scope: !7940)
!7952 = !DILocation(line: 4075, column: 38, scope: !7940)
!7953 = !DILocation(line: 4078, column: 26, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7940, file: !1, line: 4078, column: 26)
!7955 = !DILocation(line: 4078, column: 28, scope: !7954)
!7956 = !DILocation(line: 4078, column: 26, scope: !7940)
!7957 = !DILocalVariable(name: "v", scope: !7958, file: !1, line: 4080, type: !24)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 4079, column: 22)
!7959 = !DILocation(line: 4080, column: 37, scope: !7958)
!7960 = !DILocation(line: 4082, column: 29, scope: !7958)
!7961 = !DILocation(line: 4082, column: 40, scope: !7958)
!7962 = !DILocation(line: 4082, column: 43, scope: !7958)
!7963 = !DILocation(line: 4082, column: 38, scope: !7958)
!7964 = !DILocation(line: 4082, column: 51, scope: !7958)
!7965 = !DILocation(line: 4082, column: 48, scope: !7958)
!7966 = !DILocation(line: 4082, column: 65, scope: !7958)
!7967 = !DILocation(line: 4082, column: 64, scope: !7958)
!7968 = !DILocation(line: 4082, column: 27, scope: !7958)
!7969 = !DILocation(line: 4083, column: 43, scope: !7958)
!7970 = !DILocation(line: 4083, column: 45, scope: !7958)
!7971 = !DILocation(line: 4083, column: 51, scope: !7958)
!7972 = !DILocation(line: 4083, column: 31, scope: !7958)
!7973 = !DILocation(line: 4083, column: 26, scope: !7958)
!7974 = !DILocation(line: 4083, column: 29, scope: !7958)
!7975 = !DILocation(line: 4084, column: 48, scope: !7958)
!7976 = !DILocation(line: 4084, column: 50, scope: !7958)
!7977 = !DILocation(line: 4084, column: 37, scope: !7958)
!7978 = !DILocation(line: 4084, column: 27, scope: !7958)
!7979 = !DILocation(line: 4084, column: 30, scope: !7958)
!7980 = !DILocation(line: 4084, column: 35, scope: !7958)
!7981 = !DILocation(line: 4086, column: 29, scope: !7958)
!7982 = !DILocation(line: 4086, column: 40, scope: !7958)
!7983 = !DILocation(line: 4086, column: 43, scope: !7958)
!7984 = !DILocation(line: 4086, column: 38, scope: !7958)
!7985 = !DILocation(line: 4086, column: 51, scope: !7958)
!7986 = !DILocation(line: 4086, column: 48, scope: !7958)
!7987 = !DILocation(line: 4086, column: 66, scope: !7958)
!7988 = !DILocation(line: 4086, column: 69, scope: !7958)
!7989 = !DILocation(line: 4086, column: 64, scope: !7958)
!7990 = !DILocation(line: 4086, column: 27, scope: !7958)
!7991 = !DILocation(line: 4087, column: 49, scope: !7958)
!7992 = !DILocation(line: 4087, column: 51, scope: !7958)
!7993 = !DILocation(line: 4087, column: 57, scope: !7958)
!7994 = !DILocation(line: 4087, column: 37, scope: !7958)
!7995 = !DILocation(line: 4087, column: 27, scope: !7958)
!7996 = !DILocation(line: 4087, column: 30, scope: !7958)
!7997 = !DILocation(line: 4087, column: 35, scope: !7958)
!7998 = !DILocation(line: 4088, column: 48, scope: !7958)
!7999 = !DILocation(line: 4088, column: 50, scope: !7958)
!8000 = !DILocation(line: 4088, column: 37, scope: !7958)
!8001 = !DILocation(line: 4088, column: 27, scope: !7958)
!8002 = !DILocation(line: 4088, column: 30, scope: !7958)
!8003 = !DILocation(line: 4088, column: 35, scope: !7958)
!8004 = !DILocation(line: 4090, column: 29, scope: !7958)
!8005 = !DILocation(line: 4090, column: 40, scope: !7958)
!8006 = !DILocation(line: 4090, column: 43, scope: !7958)
!8007 = !DILocation(line: 4090, column: 38, scope: !7958)
!8008 = !DILocation(line: 4090, column: 51, scope: !7958)
!8009 = !DILocation(line: 4090, column: 48, scope: !7958)
!8010 = !DILocation(line: 4090, column: 66, scope: !7958)
!8011 = !DILocation(line: 4090, column: 69, scope: !7958)
!8012 = !DILocation(line: 4090, column: 64, scope: !7958)
!8013 = !DILocation(line: 4090, column: 27, scope: !7958)
!8014 = !DILocation(line: 4091, column: 49, scope: !7958)
!8015 = !DILocation(line: 4091, column: 51, scope: !7958)
!8016 = !DILocation(line: 4091, column: 57, scope: !7958)
!8017 = !DILocation(line: 4091, column: 37, scope: !7958)
!8018 = !DILocation(line: 4091, column: 27, scope: !7958)
!8019 = !DILocation(line: 4091, column: 30, scope: !7958)
!8020 = !DILocation(line: 4091, column: 35, scope: !7958)
!8021 = !DILocation(line: 4092, column: 48, scope: !7958)
!8022 = !DILocation(line: 4092, column: 50, scope: !7958)
!8023 = !DILocation(line: 4092, column: 37, scope: !7958)
!8024 = !DILocation(line: 4092, column: 27, scope: !7958)
!8025 = !DILocation(line: 4092, column: 30, scope: !7958)
!8026 = !DILocation(line: 4092, column: 35, scope: !7958)
!8027 = !DILocation(line: 4093, column: 22, scope: !7958)
!8028 = !DILocation(line: 4095, column: 31, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 4095, column: 31)
!8030 = !DILocation(line: 4095, column: 33, scope: !8029)
!8031 = !DILocation(line: 4095, column: 31, scope: !7954)
!8032 = !DILocation(line: 4098, column: 43, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8029, file: !1, line: 4096, column: 22)
!8034 = !DILocation(line: 4098, column: 52, scope: !8033)
!8035 = !DILocation(line: 4098, column: 63, scope: !8033)
!8036 = !DILocation(line: 4098, column: 67, scope: !8033)
!8037 = !DILocation(line: 4098, column: 73, scope: !8033)
!8038 = !DILocation(line: 4098, column: 31, scope: !8033)
!8039 = !DILocation(line: 4098, column: 26, scope: !8033)
!8040 = !DILocation(line: 4098, column: 29, scope: !8033)
!8041 = !DILocation(line: 4099, column: 48, scope: !8033)
!8042 = !DILocation(line: 4099, column: 57, scope: !8033)
!8043 = !DILocation(line: 4099, column: 68, scope: !8033)
!8044 = !DILocation(line: 4099, column: 72, scope: !8033)
!8045 = !DILocation(line: 4099, column: 37, scope: !8033)
!8046 = !DILocation(line: 4099, column: 27, scope: !8033)
!8047 = !DILocation(line: 4099, column: 30, scope: !8033)
!8048 = !DILocation(line: 4099, column: 35, scope: !8033)
!8049 = !DILocation(line: 4100, column: 49, scope: !8033)
!8050 = !DILocation(line: 4100, column: 58, scope: !8033)
!8051 = !DILocation(line: 4100, column: 69, scope: !8033)
!8052 = !DILocation(line: 4100, column: 75, scope: !8033)
!8053 = !DILocation(line: 4100, column: 81, scope: !8033)
!8054 = !DILocation(line: 4100, column: 37, scope: !8033)
!8055 = !DILocation(line: 4100, column: 27, scope: !8033)
!8056 = !DILocation(line: 4100, column: 30, scope: !8033)
!8057 = !DILocation(line: 4100, column: 35, scope: !8033)
!8058 = !DILocation(line: 4101, column: 48, scope: !8033)
!8059 = !DILocation(line: 4101, column: 57, scope: !8033)
!8060 = !DILocation(line: 4101, column: 68, scope: !8033)
!8061 = !DILocation(line: 4101, column: 74, scope: !8033)
!8062 = !DILocation(line: 4101, column: 37, scope: !8033)
!8063 = !DILocation(line: 4101, column: 27, scope: !8033)
!8064 = !DILocation(line: 4101, column: 30, scope: !8033)
!8065 = !DILocation(line: 4101, column: 35, scope: !8033)
!8066 = !DILocation(line: 4102, column: 49, scope: !8033)
!8067 = !DILocation(line: 4102, column: 58, scope: !8033)
!8068 = !DILocation(line: 4102, column: 69, scope: !8033)
!8069 = !DILocation(line: 4102, column: 74, scope: !8033)
!8070 = !DILocation(line: 4102, column: 80, scope: !8033)
!8071 = !DILocation(line: 4102, column: 37, scope: !8033)
!8072 = !DILocation(line: 4102, column: 27, scope: !8033)
!8073 = !DILocation(line: 4102, column: 30, scope: !8033)
!8074 = !DILocation(line: 4102, column: 35, scope: !8033)
!8075 = !DILocation(line: 4103, column: 48, scope: !8033)
!8076 = !DILocation(line: 4103, column: 57, scope: !8033)
!8077 = !DILocation(line: 4103, column: 68, scope: !8033)
!8078 = !DILocation(line: 4103, column: 73, scope: !8033)
!8079 = !DILocation(line: 4103, column: 37, scope: !8033)
!8080 = !DILocation(line: 4103, column: 27, scope: !8033)
!8081 = !DILocation(line: 4103, column: 30, scope: !8033)
!8082 = !DILocation(line: 4103, column: 35, scope: !8033)
!8083 = !DILocation(line: 4104, column: 22, scope: !8033)
!8084 = !DILocalVariable(name: "v", scope: !8085, file: !1, line: 4108, type: !24)
!8085 = distinct !DILexicalBlock(scope: !8029, file: !1, line: 4107, column: 22)
!8086 = !DILocation(line: 4108, column: 37, scope: !8085)
!8087 = !DILocalVariable(name: "w", scope: !8085, file: !1, line: 4108, type: !24)
!8088 = !DILocation(line: 4108, column: 40, scope: !8085)
!8089 = !DILocation(line: 4110, column: 29, scope: !8085)
!8090 = !DILocation(line: 4110, column: 45, scope: !8085)
!8091 = !DILocation(line: 4110, column: 48, scope: !8085)
!8092 = !DILocation(line: 4110, column: 43, scope: !8085)
!8093 = !DILocation(line: 4110, column: 56, scope: !8085)
!8094 = !DILocation(line: 4110, column: 53, scope: !8085)
!8095 = !DILocation(line: 4110, column: 70, scope: !8085)
!8096 = !DILocation(line: 4110, column: 69, scope: !8085)
!8097 = !DILocation(line: 4110, column: 27, scope: !8085)
!8098 = !DILocalVariable(name: "temp", scope: !8099, file: !1, line: 4111, type: !10)
!8099 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4111, column: 25)
!8100 = !DILocation(line: 4111, column: 25, scope: !8099)
!8101 = !DILocation(line: 4112, column: 30, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4112, column: 29)
!8103 = !DILocation(line: 4112, column: 29, scope: !8085)
!8104 = !DILocation(line: 4113, column: 32, scope: !8102)
!8105 = !DILocation(line: 4113, column: 50, scope: !8102)
!8106 = !DILocation(line: 4113, column: 51, scope: !8102)
!8107 = !DILocation(line: 4113, column: 61, scope: !8102)
!8108 = !DILocation(line: 4113, column: 58, scope: !8102)
!8109 = !DILocation(line: 4113, column: 75, scope: !8102)
!8110 = !DILocation(line: 4113, column: 77, scope: !8102)
!8111 = !DILocation(line: 4113, column: 30, scope: !8102)
!8112 = !DILocation(line: 4113, column: 28, scope: !8102)
!8113 = !DILocation(line: 4114, column: 43, scope: !8085)
!8114 = !DILocation(line: 4114, column: 45, scope: !8085)
!8115 = !DILocation(line: 4114, column: 51, scope: !8085)
!8116 = !DILocation(line: 4114, column: 31, scope: !8085)
!8117 = !DILocation(line: 4114, column: 26, scope: !8085)
!8118 = !DILocation(line: 4114, column: 29, scope: !8085)
!8119 = !DILocation(line: 4115, column: 48, scope: !8085)
!8120 = !DILocation(line: 4115, column: 50, scope: !8085)
!8121 = !DILocation(line: 4115, column: 37, scope: !8085)
!8122 = !DILocation(line: 4115, column: 27, scope: !8085)
!8123 = !DILocation(line: 4115, column: 30, scope: !8085)
!8124 = !DILocation(line: 4115, column: 35, scope: !8085)
!8125 = !DILocation(line: 4117, column: 29, scope: !8085)
!8126 = !DILocation(line: 4117, column: 45, scope: !8085)
!8127 = !DILocation(line: 4117, column: 48, scope: !8085)
!8128 = !DILocation(line: 4117, column: 43, scope: !8085)
!8129 = !DILocation(line: 4117, column: 56, scope: !8085)
!8130 = !DILocation(line: 4117, column: 53, scope: !8085)
!8131 = !DILocation(line: 4117, column: 71, scope: !8085)
!8132 = !DILocation(line: 4117, column: 74, scope: !8085)
!8133 = !DILocation(line: 4117, column: 69, scope: !8085)
!8134 = !DILocation(line: 4117, column: 27, scope: !8085)
!8135 = !DILocalVariable(name: "temp", scope: !8136, file: !1, line: 4118, type: !10)
!8136 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4118, column: 25)
!8137 = !DILocation(line: 4118, column: 25, scope: !8136)
!8138 = !DILocation(line: 4119, column: 30, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4119, column: 29)
!8140 = !DILocation(line: 4119, column: 29, scope: !8085)
!8141 = !DILocation(line: 4120, column: 32, scope: !8139)
!8142 = !DILocation(line: 4120, column: 50, scope: !8139)
!8143 = !DILocation(line: 4120, column: 51, scope: !8139)
!8144 = !DILocation(line: 4120, column: 61, scope: !8139)
!8145 = !DILocation(line: 4120, column: 58, scope: !8139)
!8146 = !DILocation(line: 4120, column: 75, scope: !8139)
!8147 = !DILocation(line: 4120, column: 77, scope: !8139)
!8148 = !DILocation(line: 4120, column: 30, scope: !8139)
!8149 = !DILocation(line: 4120, column: 28, scope: !8139)
!8150 = !DILocation(line: 4122, column: 49, scope: !8085)
!8151 = !DILocation(line: 4122, column: 51, scope: !8085)
!8152 = !DILocation(line: 4122, column: 57, scope: !8085)
!8153 = !DILocation(line: 4122, column: 37, scope: !8085)
!8154 = !DILocation(line: 4122, column: 27, scope: !8085)
!8155 = !DILocation(line: 4122, column: 30, scope: !8085)
!8156 = !DILocation(line: 4122, column: 35, scope: !8085)
!8157 = !DILocation(line: 4123, column: 48, scope: !8085)
!8158 = !DILocation(line: 4123, column: 50, scope: !8085)
!8159 = !DILocation(line: 4123, column: 37, scope: !8085)
!8160 = !DILocation(line: 4123, column: 27, scope: !8085)
!8161 = !DILocation(line: 4123, column: 30, scope: !8085)
!8162 = !DILocation(line: 4123, column: 35, scope: !8085)
!8163 = !DILocation(line: 4125, column: 29, scope: !8085)
!8164 = !DILocation(line: 4125, column: 45, scope: !8085)
!8165 = !DILocation(line: 4125, column: 48, scope: !8085)
!8166 = !DILocation(line: 4125, column: 43, scope: !8085)
!8167 = !DILocation(line: 4125, column: 56, scope: !8085)
!8168 = !DILocation(line: 4125, column: 53, scope: !8085)
!8169 = !DILocation(line: 4125, column: 71, scope: !8085)
!8170 = !DILocation(line: 4125, column: 74, scope: !8085)
!8171 = !DILocation(line: 4125, column: 69, scope: !8085)
!8172 = !DILocation(line: 4125, column: 27, scope: !8085)
!8173 = !DILocalVariable(name: "temp", scope: !8174, file: !1, line: 4126, type: !10)
!8174 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4126, column: 25)
!8175 = !DILocation(line: 4126, column: 25, scope: !8174)
!8176 = !DILocation(line: 4127, column: 30, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 4127, column: 29)
!8178 = !DILocation(line: 4127, column: 29, scope: !8085)
!8179 = !DILocation(line: 4128, column: 32, scope: !8177)
!8180 = !DILocation(line: 4128, column: 50, scope: !8177)
!8181 = !DILocation(line: 4128, column: 51, scope: !8177)
!8182 = !DILocation(line: 4128, column: 61, scope: !8177)
!8183 = !DILocation(line: 4128, column: 58, scope: !8177)
!8184 = !DILocation(line: 4128, column: 75, scope: !8177)
!8185 = !DILocation(line: 4128, column: 77, scope: !8177)
!8186 = !DILocation(line: 4128, column: 30, scope: !8177)
!8187 = !DILocation(line: 4128, column: 28, scope: !8177)
!8188 = !DILocation(line: 4130, column: 49, scope: !8085)
!8189 = !DILocation(line: 4130, column: 51, scope: !8085)
!8190 = !DILocation(line: 4130, column: 57, scope: !8085)
!8191 = !DILocation(line: 4130, column: 37, scope: !8085)
!8192 = !DILocation(line: 4130, column: 27, scope: !8085)
!8193 = !DILocation(line: 4130, column: 30, scope: !8085)
!8194 = !DILocation(line: 4130, column: 35, scope: !8085)
!8195 = !DILocation(line: 4131, column: 48, scope: !8085)
!8196 = !DILocation(line: 4131, column: 50, scope: !8085)
!8197 = !DILocation(line: 4131, column: 37, scope: !8085)
!8198 = !DILocation(line: 4131, column: 27, scope: !8085)
!8199 = !DILocation(line: 4131, column: 30, scope: !8085)
!8200 = !DILocation(line: 4131, column: 35, scope: !8085)
!8201 = !DILocation(line: 4133, column: 19, scope: !7940)
!8202 = !DILocation(line: 4073, column: 47, scope: !7935)
!8203 = !DILocation(line: 4073, column: 54, scope: !7935)
!8204 = !DILocation(line: 4073, column: 19, scope: !7935)
!8205 = distinct !{!8205, !7938, !8206}
!8206 = !DILocation(line: 4133, column: 19, scope: !7932)
!8207 = !DILocation(line: 4134, column: 16, scope: !7929)
!8208 = !DILocation(line: 4139, column: 24, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 4138, column: 16)
!8210 = !DILocation(line: 4139, column: 22, scope: !8209)
!8211 = !DILocation(line: 4140, column: 26, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8209, file: !1, line: 4140, column: 19)
!8213 = !DILocation(line: 4140, column: 24, scope: !8212)
!8214 = !DILocation(line: 4140, column: 31, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8212, file: !1, line: 4140, column: 19)
!8216 = !DILocation(line: 4140, column: 35, scope: !8215)
!8217 = !DILocation(line: 4140, column: 33, scope: !8215)
!8218 = !DILocation(line: 4140, column: 19, scope: !8212)
!8219 = !DILocalVariable(name: "a", scope: !8220, file: !1, line: 4142, type: !24)
!8220 = distinct !DILexicalBlock(scope: !8215, file: !1, line: 4141, column: 19)
!8221 = !DILocation(line: 4142, column: 34, scope: !8220)
!8222 = !DILocation(line: 4142, column: 69, scope: !8220)
!8223 = !DILocation(line: 4142, column: 72, scope: !8220)
!8224 = !DILocation(line: 4142, column: 67, scope: !8220)
!8225 = !DILocation(line: 4142, column: 53, scope: !8220)
!8226 = !DILocation(line: 4143, column: 26, scope: !8220)
!8227 = !DILocation(line: 4143, column: 50, scope: !8220)
!8228 = !DILocation(line: 4143, column: 53, scope: !8220)
!8229 = !DILocation(line: 4143, column: 48, scope: !8220)
!8230 = !DILocation(line: 4143, column: 34, scope: !8220)
!8231 = !DILocation(line: 4143, column: 32, scope: !8220)
!8232 = !DILocation(line: 4142, column: 38, scope: !8220)
!8233 = !DILocation(line: 4145, column: 26, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8220, file: !1, line: 4145, column: 26)
!8235 = !DILocation(line: 4145, column: 28, scope: !8234)
!8236 = !DILocation(line: 4145, column: 26, scope: !8220)
!8237 = !DILocation(line: 4147, column: 43, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !1, line: 4146, column: 22)
!8239 = !DILocation(line: 4147, column: 52, scope: !8238)
!8240 = !DILocation(line: 4147, column: 63, scope: !8238)
!8241 = !DILocation(line: 4147, column: 67, scope: !8238)
!8242 = !DILocation(line: 4147, column: 73, scope: !8238)
!8243 = !DILocation(line: 4147, column: 31, scope: !8238)
!8244 = !DILocation(line: 4147, column: 26, scope: !8238)
!8245 = !DILocation(line: 4147, column: 29, scope: !8238)
!8246 = !DILocation(line: 4148, column: 48, scope: !8238)
!8247 = !DILocation(line: 4148, column: 57, scope: !8238)
!8248 = !DILocation(line: 4148, column: 68, scope: !8238)
!8249 = !DILocation(line: 4148, column: 72, scope: !8238)
!8250 = !DILocation(line: 4148, column: 37, scope: !8238)
!8251 = !DILocation(line: 4148, column: 27, scope: !8238)
!8252 = !DILocation(line: 4148, column: 30, scope: !8238)
!8253 = !DILocation(line: 4148, column: 35, scope: !8238)
!8254 = !DILocation(line: 4149, column: 49, scope: !8238)
!8255 = !DILocation(line: 4149, column: 58, scope: !8238)
!8256 = !DILocation(line: 4149, column: 69, scope: !8238)
!8257 = !DILocation(line: 4149, column: 75, scope: !8238)
!8258 = !DILocation(line: 4149, column: 81, scope: !8238)
!8259 = !DILocation(line: 4149, column: 37, scope: !8238)
!8260 = !DILocation(line: 4149, column: 27, scope: !8238)
!8261 = !DILocation(line: 4149, column: 30, scope: !8238)
!8262 = !DILocation(line: 4149, column: 35, scope: !8238)
!8263 = !DILocation(line: 4150, column: 48, scope: !8238)
!8264 = !DILocation(line: 4150, column: 57, scope: !8238)
!8265 = !DILocation(line: 4150, column: 68, scope: !8238)
!8266 = !DILocation(line: 4150, column: 74, scope: !8238)
!8267 = !DILocation(line: 4150, column: 37, scope: !8238)
!8268 = !DILocation(line: 4150, column: 27, scope: !8238)
!8269 = !DILocation(line: 4150, column: 30, scope: !8238)
!8270 = !DILocation(line: 4150, column: 35, scope: !8238)
!8271 = !DILocation(line: 4151, column: 49, scope: !8238)
!8272 = !DILocation(line: 4151, column: 58, scope: !8238)
!8273 = !DILocation(line: 4151, column: 69, scope: !8238)
!8274 = !DILocation(line: 4151, column: 74, scope: !8238)
!8275 = !DILocation(line: 4151, column: 80, scope: !8238)
!8276 = !DILocation(line: 4151, column: 37, scope: !8238)
!8277 = !DILocation(line: 4151, column: 27, scope: !8238)
!8278 = !DILocation(line: 4151, column: 30, scope: !8238)
!8279 = !DILocation(line: 4151, column: 35, scope: !8238)
!8280 = !DILocation(line: 4152, column: 48, scope: !8238)
!8281 = !DILocation(line: 4152, column: 57, scope: !8238)
!8282 = !DILocation(line: 4152, column: 68, scope: !8238)
!8283 = !DILocation(line: 4152, column: 73, scope: !8238)
!8284 = !DILocation(line: 4152, column: 37, scope: !8238)
!8285 = !DILocation(line: 4152, column: 27, scope: !8238)
!8286 = !DILocation(line: 4152, column: 30, scope: !8238)
!8287 = !DILocation(line: 4152, column: 35, scope: !8238)
!8288 = !DILocation(line: 4153, column: 22, scope: !8238)
!8289 = !DILocation(line: 4155, column: 31, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8234, file: !1, line: 4155, column: 31)
!8291 = !DILocation(line: 4155, column: 33, scope: !8290)
!8292 = !DILocation(line: 4155, column: 31, scope: !8234)
!8293 = !DILocalVariable(name: "v", scope: !8294, file: !1, line: 4157, type: !24)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !1, line: 4156, column: 22)
!8295 = !DILocation(line: 4157, column: 37, scope: !8294)
!8296 = !DILocalVariable(name: "r", scope: !8294, file: !1, line: 4159, type: !24)
!8297 = !DILocation(line: 4159, column: 37, scope: !8294)
!8298 = !DILocation(line: 4159, column: 58, scope: !8294)
!8299 = !DILocation(line: 4159, column: 57, scope: !8294)
!8300 = !DILocation(line: 4159, column: 56, scope: !8294)
!8301 = !DILocation(line: 4159, column: 62, scope: !8294)
!8302 = !DILocation(line: 4159, column: 72, scope: !8294)
!8303 = !DILocation(line: 4159, column: 75, scope: !8294)
!8304 = !DILocation(line: 4159, column: 70, scope: !8294)
!8305 = !DILocation(line: 4159, column: 68, scope: !8294)
!8306 = !DILocation(line: 4159, column: 41, scope: !8294)
!8307 = !DILocalVariable(name: "g", scope: !8294, file: !1, line: 4160, type: !24)
!8308 = !DILocation(line: 4160, column: 37, scope: !8294)
!8309 = !DILocation(line: 4160, column: 59, scope: !8294)
!8310 = !DILocation(line: 4160, column: 62, scope: !8294)
!8311 = !DILocation(line: 4160, column: 57, scope: !8294)
!8312 = !DILocation(line: 4160, column: 56, scope: !8294)
!8313 = !DILocation(line: 4160, column: 68, scope: !8294)
!8314 = !DILocation(line: 4161, column: 33, scope: !8294)
!8315 = !DILocation(line: 4161, column: 36, scope: !8294)
!8316 = !DILocation(line: 4161, column: 31, scope: !8294)
!8317 = !DILocation(line: 4161, column: 29, scope: !8294)
!8318 = !DILocation(line: 4160, column: 41, scope: !8294)
!8319 = !DILocalVariable(name: "b", scope: !8294, file: !1, line: 4162, type: !24)
!8320 = !DILocation(line: 4162, column: 37, scope: !8294)
!8321 = !DILocation(line: 4162, column: 59, scope: !8294)
!8322 = !DILocation(line: 4162, column: 62, scope: !8294)
!8323 = !DILocation(line: 4162, column: 57, scope: !8294)
!8324 = !DILocation(line: 4162, column: 56, scope: !8294)
!8325 = !DILocation(line: 4162, column: 68, scope: !8294)
!8326 = !DILocation(line: 4163, column: 33, scope: !8294)
!8327 = !DILocation(line: 4163, column: 36, scope: !8294)
!8328 = !DILocation(line: 4163, column: 31, scope: !8294)
!8329 = !DILocation(line: 4163, column: 29, scope: !8294)
!8330 = !DILocation(line: 4162, column: 41, scope: !8294)
!8331 = !DILocalVariable(name: "temp", scope: !8332, file: !1, line: 4165, type: !10)
!8332 = distinct !DILexicalBlock(scope: !8294, file: !1, line: 4165, column: 25)
!8333 = !DILocation(line: 4165, column: 25, scope: !8332)
!8334 = !DILocation(line: 4166, column: 43, scope: !8294)
!8335 = !DILocation(line: 4166, column: 45, scope: !8294)
!8336 = !DILocation(line: 4166, column: 51, scope: !8294)
!8337 = !DILocation(line: 4166, column: 31, scope: !8294)
!8338 = !DILocation(line: 4166, column: 26, scope: !8294)
!8339 = !DILocation(line: 4166, column: 29, scope: !8294)
!8340 = !DILocation(line: 4167, column: 48, scope: !8294)
!8341 = !DILocation(line: 4167, column: 50, scope: !8294)
!8342 = !DILocation(line: 4167, column: 37, scope: !8294)
!8343 = !DILocation(line: 4167, column: 27, scope: !8294)
!8344 = !DILocation(line: 4167, column: 30, scope: !8294)
!8345 = !DILocation(line: 4167, column: 35, scope: !8294)
!8346 = !DILocalVariable(name: "temp", scope: !8347, file: !1, line: 4169, type: !10)
!8347 = distinct !DILexicalBlock(scope: !8294, file: !1, line: 4169, column: 25)
!8348 = !DILocation(line: 4169, column: 25, scope: !8347)
!8349 = !DILocation(line: 4170, column: 49, scope: !8294)
!8350 = !DILocation(line: 4170, column: 51, scope: !8294)
!8351 = !DILocation(line: 4170, column: 57, scope: !8294)
!8352 = !DILocation(line: 4170, column: 37, scope: !8294)
!8353 = !DILocation(line: 4170, column: 27, scope: !8294)
!8354 = !DILocation(line: 4170, column: 30, scope: !8294)
!8355 = !DILocation(line: 4170, column: 35, scope: !8294)
!8356 = !DILocation(line: 4171, column: 48, scope: !8294)
!8357 = !DILocation(line: 4171, column: 50, scope: !8294)
!8358 = !DILocation(line: 4171, column: 37, scope: !8294)
!8359 = !DILocation(line: 4171, column: 27, scope: !8294)
!8360 = !DILocation(line: 4171, column: 30, scope: !8294)
!8361 = !DILocation(line: 4171, column: 35, scope: !8294)
!8362 = !DILocalVariable(name: "temp", scope: !8363, file: !1, line: 4173, type: !10)
!8363 = distinct !DILexicalBlock(scope: !8294, file: !1, line: 4173, column: 25)
!8364 = !DILocation(line: 4173, column: 25, scope: !8363)
!8365 = !DILocation(line: 4174, column: 49, scope: !8294)
!8366 = !DILocation(line: 4174, column: 51, scope: !8294)
!8367 = !DILocation(line: 4174, column: 57, scope: !8294)
!8368 = !DILocation(line: 4174, column: 37, scope: !8294)
!8369 = !DILocation(line: 4174, column: 27, scope: !8294)
!8370 = !DILocation(line: 4174, column: 30, scope: !8294)
!8371 = !DILocation(line: 4174, column: 35, scope: !8294)
!8372 = !DILocation(line: 4175, column: 48, scope: !8294)
!8373 = !DILocation(line: 4175, column: 50, scope: !8294)
!8374 = !DILocation(line: 4175, column: 37, scope: !8294)
!8375 = !DILocation(line: 4175, column: 27, scope: !8294)
!8376 = !DILocation(line: 4175, column: 30, scope: !8294)
!8377 = !DILocation(line: 4175, column: 35, scope: !8294)
!8378 = !DILocation(line: 4176, column: 22, scope: !8294)
!8379 = !DILocation(line: 4177, column: 19, scope: !8220)
!8380 = !DILocation(line: 4140, column: 47, scope: !8215)
!8381 = !DILocation(line: 4140, column: 54, scope: !8215)
!8382 = !DILocation(line: 4140, column: 19, scope: !8215)
!8383 = distinct !{!8383, !8218, !8384}
!8384 = !DILocation(line: 4177, column: 19, scope: !8212)
!8385 = !DILocation(line: 4180, column: 13, scope: !7702)
!8386 = !DILocation(line: 4184, column: 13, scope: !6279)
!8387 = !DILocation(line: 4187, column: 1, scope: !6216)
!8388 = distinct !DISubprogram(name: "png_do_gamma", scope: !1, file: !1, line: 4198, type: !6217, scopeLine: 4199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!8389 = !DILocalVariable(name: "row_info", arg: 1, scope: !8388, file: !1, line: 4198, type: !101)
!8390 = !DILocation(line: 4198, column: 28, scope: !8388)
!8391 = !DILocalVariable(name: "row", arg: 2, scope: !8388, file: !1, line: 4198, type: !8)
!8392 = !DILocation(line: 4198, column: 48, scope: !8388)
!8393 = !DILocalVariable(name: "png_ptr", arg: 3, scope: !8388, file: !1, line: 4198, type: !39)
!8394 = !DILocation(line: 4198, column: 65, scope: !8388)
!8395 = !DILocalVariable(name: "gamma_table", scope: !8388, file: !1, line: 4200, type: !477)
!8396 = !DILocation(line: 4200, column: 20, scope: !8388)
!8397 = !DILocation(line: 4200, column: 34, scope: !8388)
!8398 = !DILocation(line: 4200, column: 43, scope: !8388)
!8399 = !DILocalVariable(name: "gamma_16_table", scope: !8388, file: !1, line: 4201, type: !6238)
!8400 = !DILocation(line: 4201, column: 24, scope: !8388)
!8401 = !DILocation(line: 4201, column: 41, scope: !8388)
!8402 = !DILocation(line: 4201, column: 50, scope: !8388)
!8403 = !DILocalVariable(name: "gamma_shift", scope: !8388, file: !1, line: 4202, type: !12)
!8404 = !DILocation(line: 4202, column: 8, scope: !8388)
!8405 = !DILocation(line: 4202, column: 22, scope: !8388)
!8406 = !DILocation(line: 4202, column: 31, scope: !8388)
!8407 = !DILocalVariable(name: "sp", scope: !8388, file: !1, line: 4204, type: !8)
!8408 = !DILocation(line: 4204, column: 14, scope: !8388)
!8409 = !DILocalVariable(name: "i", scope: !8388, file: !1, line: 4205, type: !10)
!8410 = !DILocation(line: 4205, column: 16, scope: !8388)
!8411 = !DILocalVariable(name: "row_width", scope: !8388, file: !1, line: 4206, type: !10)
!8412 = !DILocation(line: 4206, column: 16, scope: !8388)
!8413 = !DILocation(line: 4206, column: 26, scope: !8388)
!8414 = !DILocation(line: 4206, column: 36, scope: !8388)
!8415 = !DILocation(line: 4210, column: 10, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8388, file: !1, line: 4210, column: 8)
!8417 = !DILocation(line: 4210, column: 20, scope: !8416)
!8418 = !DILocation(line: 4210, column: 30, scope: !8416)
!8419 = !DILocation(line: 4210, column: 35, scope: !8416)
!8420 = !DILocation(line: 4210, column: 38, scope: !8416)
!8421 = !DILocation(line: 4210, column: 50, scope: !8416)
!8422 = !DILocation(line: 4210, column: 59, scope: !8416)
!8423 = !DILocation(line: 4211, column: 9, scope: !8416)
!8424 = !DILocation(line: 4211, column: 19, scope: !8416)
!8425 = !DILocation(line: 4211, column: 29, scope: !8416)
!8426 = !DILocation(line: 4211, column: 35, scope: !8416)
!8427 = !DILocation(line: 4211, column: 38, scope: !8416)
!8428 = !DILocation(line: 4211, column: 53, scope: !8416)
!8429 = !DILocation(line: 4210, column: 8, scope: !8388)
!8430 = !DILocation(line: 4213, column: 15, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8416, file: !1, line: 4212, column: 4)
!8432 = !DILocation(line: 4213, column: 25, scope: !8431)
!8433 = !DILocation(line: 4213, column: 7, scope: !8431)
!8434 = !DILocation(line: 4217, column: 17, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 4217, column: 17)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !1, line: 4216, column: 10)
!8437 = distinct !DILexicalBlock(scope: !8431, file: !1, line: 4214, column: 7)
!8438 = !DILocation(line: 4217, column: 27, scope: !8435)
!8439 = !DILocation(line: 4217, column: 37, scope: !8435)
!8440 = !DILocation(line: 4217, column: 17, scope: !8436)
!8441 = !DILocation(line: 4219, column: 21, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8435, file: !1, line: 4218, column: 13)
!8443 = !DILocation(line: 4219, column: 19, scope: !8442)
!8444 = !DILocation(line: 4220, column: 23, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8442, file: !1, line: 4220, column: 16)
!8446 = !DILocation(line: 4220, column: 21, scope: !8445)
!8447 = !DILocation(line: 4220, column: 28, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !1, line: 4220, column: 16)
!8449 = !DILocation(line: 4220, column: 32, scope: !8448)
!8450 = !DILocation(line: 4220, column: 30, scope: !8448)
!8451 = !DILocation(line: 4220, column: 16, scope: !8445)
!8452 = !DILocation(line: 4222, column: 25, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !1, line: 4221, column: 16)
!8454 = !DILocation(line: 4222, column: 38, scope: !8453)
!8455 = !DILocation(line: 4222, column: 37, scope: !8453)
!8456 = !DILocation(line: 4222, column: 20, scope: !8453)
!8457 = !DILocation(line: 4222, column: 23, scope: !8453)
!8458 = !DILocation(line: 4223, column: 21, scope: !8453)
!8459 = !DILocation(line: 4224, column: 25, scope: !8453)
!8460 = !DILocation(line: 4224, column: 38, scope: !8453)
!8461 = !DILocation(line: 4224, column: 37, scope: !8453)
!8462 = !DILocation(line: 4224, column: 20, scope: !8453)
!8463 = !DILocation(line: 4224, column: 23, scope: !8453)
!8464 = !DILocation(line: 4225, column: 21, scope: !8453)
!8465 = !DILocation(line: 4226, column: 25, scope: !8453)
!8466 = !DILocation(line: 4226, column: 38, scope: !8453)
!8467 = !DILocation(line: 4226, column: 37, scope: !8453)
!8468 = !DILocation(line: 4226, column: 20, scope: !8453)
!8469 = !DILocation(line: 4226, column: 23, scope: !8453)
!8470 = !DILocation(line: 4227, column: 21, scope: !8453)
!8471 = !DILocation(line: 4228, column: 16, scope: !8453)
!8472 = !DILocation(line: 4220, column: 44, scope: !8448)
!8473 = !DILocation(line: 4220, column: 16, scope: !8448)
!8474 = distinct !{!8474, !8451, !8475}
!8475 = !DILocation(line: 4228, column: 16, scope: !8445)
!8476 = !DILocation(line: 4229, column: 13, scope: !8442)
!8477 = !DILocation(line: 4233, column: 21, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8435, file: !1, line: 4232, column: 13)
!8479 = !DILocation(line: 4233, column: 19, scope: !8478)
!8480 = !DILocation(line: 4234, column: 23, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8478, file: !1, line: 4234, column: 16)
!8482 = !DILocation(line: 4234, column: 21, scope: !8481)
!8483 = !DILocation(line: 4234, column: 28, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8481, file: !1, line: 4234, column: 16)
!8485 = !DILocation(line: 4234, column: 32, scope: !8484)
!8486 = !DILocation(line: 4234, column: 30, scope: !8484)
!8487 = !DILocation(line: 4234, column: 16, scope: !8481)
!8488 = !DILocalVariable(name: "v", scope: !8489, file: !1, line: 4236, type: !24)
!8489 = distinct !DILexicalBlock(scope: !8484, file: !1, line: 4235, column: 16)
!8490 = !DILocation(line: 4236, column: 31, scope: !8489)
!8491 = !DILocation(line: 4238, column: 23, scope: !8489)
!8492 = !DILocation(line: 4238, column: 40, scope: !8489)
!8493 = !DILocation(line: 4238, column: 43, scope: !8489)
!8494 = !DILocation(line: 4238, column: 38, scope: !8489)
!8495 = !DILocation(line: 4238, column: 51, scope: !8489)
!8496 = !DILocation(line: 4238, column: 48, scope: !8489)
!8497 = !DILocation(line: 4238, column: 65, scope: !8489)
!8498 = !DILocation(line: 4238, column: 64, scope: !8489)
!8499 = !DILocation(line: 4238, column: 21, scope: !8489)
!8500 = !DILocation(line: 4239, column: 37, scope: !8489)
!8501 = !DILocation(line: 4239, column: 39, scope: !8489)
!8502 = !DILocation(line: 4239, column: 45, scope: !8489)
!8503 = !DILocation(line: 4239, column: 25, scope: !8489)
!8504 = !DILocation(line: 4239, column: 20, scope: !8489)
!8505 = !DILocation(line: 4239, column: 23, scope: !8489)
!8506 = !DILocation(line: 4240, column: 42, scope: !8489)
!8507 = !DILocation(line: 4240, column: 44, scope: !8489)
!8508 = !DILocation(line: 4240, column: 31, scope: !8489)
!8509 = !DILocation(line: 4240, column: 21, scope: !8489)
!8510 = !DILocation(line: 4240, column: 24, scope: !8489)
!8511 = !DILocation(line: 4240, column: 29, scope: !8489)
!8512 = !DILocation(line: 4241, column: 22, scope: !8489)
!8513 = !DILocation(line: 4243, column: 23, scope: !8489)
!8514 = !DILocation(line: 4243, column: 40, scope: !8489)
!8515 = !DILocation(line: 4243, column: 43, scope: !8489)
!8516 = !DILocation(line: 4243, column: 38, scope: !8489)
!8517 = !DILocation(line: 4243, column: 51, scope: !8489)
!8518 = !DILocation(line: 4243, column: 48, scope: !8489)
!8519 = !DILocation(line: 4243, column: 65, scope: !8489)
!8520 = !DILocation(line: 4243, column: 64, scope: !8489)
!8521 = !DILocation(line: 4243, column: 21, scope: !8489)
!8522 = !DILocation(line: 4244, column: 37, scope: !8489)
!8523 = !DILocation(line: 4244, column: 39, scope: !8489)
!8524 = !DILocation(line: 4244, column: 45, scope: !8489)
!8525 = !DILocation(line: 4244, column: 25, scope: !8489)
!8526 = !DILocation(line: 4244, column: 20, scope: !8489)
!8527 = !DILocation(line: 4244, column: 23, scope: !8489)
!8528 = !DILocation(line: 4245, column: 42, scope: !8489)
!8529 = !DILocation(line: 4245, column: 44, scope: !8489)
!8530 = !DILocation(line: 4245, column: 31, scope: !8489)
!8531 = !DILocation(line: 4245, column: 21, scope: !8489)
!8532 = !DILocation(line: 4245, column: 24, scope: !8489)
!8533 = !DILocation(line: 4245, column: 29, scope: !8489)
!8534 = !DILocation(line: 4246, column: 22, scope: !8489)
!8535 = !DILocation(line: 4248, column: 23, scope: !8489)
!8536 = !DILocation(line: 4248, column: 40, scope: !8489)
!8537 = !DILocation(line: 4248, column: 43, scope: !8489)
!8538 = !DILocation(line: 4248, column: 38, scope: !8489)
!8539 = !DILocation(line: 4248, column: 51, scope: !8489)
!8540 = !DILocation(line: 4248, column: 48, scope: !8489)
!8541 = !DILocation(line: 4248, column: 65, scope: !8489)
!8542 = !DILocation(line: 4248, column: 64, scope: !8489)
!8543 = !DILocation(line: 4248, column: 21, scope: !8489)
!8544 = !DILocation(line: 4249, column: 37, scope: !8489)
!8545 = !DILocation(line: 4249, column: 39, scope: !8489)
!8546 = !DILocation(line: 4249, column: 45, scope: !8489)
!8547 = !DILocation(line: 4249, column: 25, scope: !8489)
!8548 = !DILocation(line: 4249, column: 20, scope: !8489)
!8549 = !DILocation(line: 4249, column: 23, scope: !8489)
!8550 = !DILocation(line: 4250, column: 42, scope: !8489)
!8551 = !DILocation(line: 4250, column: 44, scope: !8489)
!8552 = !DILocation(line: 4250, column: 31, scope: !8489)
!8553 = !DILocation(line: 4250, column: 21, scope: !8489)
!8554 = !DILocation(line: 4250, column: 24, scope: !8489)
!8555 = !DILocation(line: 4250, column: 29, scope: !8489)
!8556 = !DILocation(line: 4251, column: 22, scope: !8489)
!8557 = !DILocation(line: 4252, column: 16, scope: !8489)
!8558 = !DILocation(line: 4234, column: 44, scope: !8484)
!8559 = !DILocation(line: 4234, column: 16, scope: !8484)
!8560 = distinct !{!8560, !8487, !8561}
!8561 = !DILocation(line: 4252, column: 16, scope: !8481)
!8562 = !DILocation(line: 4254, column: 13, scope: !8436)
!8563 = !DILocation(line: 4259, column: 17, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !1, line: 4259, column: 17)
!8565 = distinct !DILexicalBlock(scope: !8437, file: !1, line: 4258, column: 10)
!8566 = !DILocation(line: 4259, column: 27, scope: !8564)
!8567 = !DILocation(line: 4259, column: 37, scope: !8564)
!8568 = !DILocation(line: 4259, column: 17, scope: !8565)
!8569 = !DILocation(line: 4261, column: 21, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8564, file: !1, line: 4260, column: 13)
!8571 = !DILocation(line: 4261, column: 19, scope: !8570)
!8572 = !DILocation(line: 4262, column: 23, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8570, file: !1, line: 4262, column: 16)
!8574 = !DILocation(line: 4262, column: 21, scope: !8573)
!8575 = !DILocation(line: 4262, column: 28, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8573, file: !1, line: 4262, column: 16)
!8577 = !DILocation(line: 4262, column: 32, scope: !8576)
!8578 = !DILocation(line: 4262, column: 30, scope: !8576)
!8579 = !DILocation(line: 4262, column: 16, scope: !8573)
!8580 = !DILocation(line: 4264, column: 25, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8576, file: !1, line: 4263, column: 16)
!8582 = !DILocation(line: 4264, column: 38, scope: !8581)
!8583 = !DILocation(line: 4264, column: 37, scope: !8581)
!8584 = !DILocation(line: 4264, column: 20, scope: !8581)
!8585 = !DILocation(line: 4264, column: 23, scope: !8581)
!8586 = !DILocation(line: 4265, column: 21, scope: !8581)
!8587 = !DILocation(line: 4267, column: 25, scope: !8581)
!8588 = !DILocation(line: 4267, column: 38, scope: !8581)
!8589 = !DILocation(line: 4267, column: 37, scope: !8581)
!8590 = !DILocation(line: 4267, column: 20, scope: !8581)
!8591 = !DILocation(line: 4267, column: 23, scope: !8581)
!8592 = !DILocation(line: 4268, column: 21, scope: !8581)
!8593 = !DILocation(line: 4270, column: 25, scope: !8581)
!8594 = !DILocation(line: 4270, column: 38, scope: !8581)
!8595 = !DILocation(line: 4270, column: 37, scope: !8581)
!8596 = !DILocation(line: 4270, column: 20, scope: !8581)
!8597 = !DILocation(line: 4270, column: 23, scope: !8581)
!8598 = !DILocation(line: 4271, column: 21, scope: !8581)
!8599 = !DILocation(line: 4273, column: 21, scope: !8581)
!8600 = !DILocation(line: 4274, column: 16, scope: !8581)
!8601 = !DILocation(line: 4262, column: 44, scope: !8576)
!8602 = !DILocation(line: 4262, column: 16, scope: !8576)
!8603 = distinct !{!8603, !8579, !8604}
!8604 = !DILocation(line: 4274, column: 16, scope: !8573)
!8605 = !DILocation(line: 4275, column: 13, scope: !8570)
!8606 = !DILocation(line: 4279, column: 21, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8564, file: !1, line: 4278, column: 13)
!8608 = !DILocation(line: 4279, column: 19, scope: !8607)
!8609 = !DILocation(line: 4280, column: 23, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8607, file: !1, line: 4280, column: 16)
!8611 = !DILocation(line: 4280, column: 21, scope: !8610)
!8612 = !DILocation(line: 4280, column: 28, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !1, line: 4280, column: 16)
!8614 = !DILocation(line: 4280, column: 32, scope: !8613)
!8615 = !DILocation(line: 4280, column: 30, scope: !8613)
!8616 = !DILocation(line: 4280, column: 16, scope: !8610)
!8617 = !DILocalVariable(name: "v", scope: !8618, file: !1, line: 4282, type: !24)
!8618 = distinct !DILexicalBlock(scope: !8613, file: !1, line: 4281, column: 16)
!8619 = !DILocation(line: 4282, column: 31, scope: !8618)
!8620 = !DILocation(line: 4282, column: 35, scope: !8618)
!8621 = !DILocation(line: 4282, column: 52, scope: !8618)
!8622 = !DILocation(line: 4282, column: 55, scope: !8618)
!8623 = !DILocation(line: 4282, column: 50, scope: !8618)
!8624 = !DILocation(line: 4282, column: 63, scope: !8618)
!8625 = !DILocation(line: 4282, column: 60, scope: !8618)
!8626 = !DILocation(line: 4282, column: 77, scope: !8618)
!8627 = !DILocation(line: 4282, column: 76, scope: !8618)
!8628 = !DILocation(line: 4283, column: 37, scope: !8618)
!8629 = !DILocation(line: 4283, column: 39, scope: !8618)
!8630 = !DILocation(line: 4283, column: 45, scope: !8618)
!8631 = !DILocation(line: 4283, column: 25, scope: !8618)
!8632 = !DILocation(line: 4283, column: 20, scope: !8618)
!8633 = !DILocation(line: 4283, column: 23, scope: !8618)
!8634 = !DILocation(line: 4284, column: 42, scope: !8618)
!8635 = !DILocation(line: 4284, column: 44, scope: !8618)
!8636 = !DILocation(line: 4284, column: 31, scope: !8618)
!8637 = !DILocation(line: 4284, column: 21, scope: !8618)
!8638 = !DILocation(line: 4284, column: 24, scope: !8618)
!8639 = !DILocation(line: 4284, column: 29, scope: !8618)
!8640 = !DILocation(line: 4285, column: 22, scope: !8618)
!8641 = !DILocation(line: 4287, column: 23, scope: !8618)
!8642 = !DILocation(line: 4287, column: 40, scope: !8618)
!8643 = !DILocation(line: 4287, column: 43, scope: !8618)
!8644 = !DILocation(line: 4287, column: 38, scope: !8618)
!8645 = !DILocation(line: 4287, column: 51, scope: !8618)
!8646 = !DILocation(line: 4287, column: 48, scope: !8618)
!8647 = !DILocation(line: 4287, column: 65, scope: !8618)
!8648 = !DILocation(line: 4287, column: 64, scope: !8618)
!8649 = !DILocation(line: 4287, column: 21, scope: !8618)
!8650 = !DILocation(line: 4288, column: 37, scope: !8618)
!8651 = !DILocation(line: 4288, column: 39, scope: !8618)
!8652 = !DILocation(line: 4288, column: 45, scope: !8618)
!8653 = !DILocation(line: 4288, column: 25, scope: !8618)
!8654 = !DILocation(line: 4288, column: 20, scope: !8618)
!8655 = !DILocation(line: 4288, column: 23, scope: !8618)
!8656 = !DILocation(line: 4289, column: 42, scope: !8618)
!8657 = !DILocation(line: 4289, column: 44, scope: !8618)
!8658 = !DILocation(line: 4289, column: 31, scope: !8618)
!8659 = !DILocation(line: 4289, column: 21, scope: !8618)
!8660 = !DILocation(line: 4289, column: 24, scope: !8618)
!8661 = !DILocation(line: 4289, column: 29, scope: !8618)
!8662 = !DILocation(line: 4290, column: 22, scope: !8618)
!8663 = !DILocation(line: 4292, column: 23, scope: !8618)
!8664 = !DILocation(line: 4292, column: 40, scope: !8618)
!8665 = !DILocation(line: 4292, column: 43, scope: !8618)
!8666 = !DILocation(line: 4292, column: 38, scope: !8618)
!8667 = !DILocation(line: 4292, column: 51, scope: !8618)
!8668 = !DILocation(line: 4292, column: 48, scope: !8618)
!8669 = !DILocation(line: 4292, column: 65, scope: !8618)
!8670 = !DILocation(line: 4292, column: 64, scope: !8618)
!8671 = !DILocation(line: 4292, column: 21, scope: !8618)
!8672 = !DILocation(line: 4293, column: 37, scope: !8618)
!8673 = !DILocation(line: 4293, column: 39, scope: !8618)
!8674 = !DILocation(line: 4293, column: 45, scope: !8618)
!8675 = !DILocation(line: 4293, column: 25, scope: !8618)
!8676 = !DILocation(line: 4293, column: 20, scope: !8618)
!8677 = !DILocation(line: 4293, column: 23, scope: !8618)
!8678 = !DILocation(line: 4294, column: 42, scope: !8618)
!8679 = !DILocation(line: 4294, column: 44, scope: !8618)
!8680 = !DILocation(line: 4294, column: 31, scope: !8618)
!8681 = !DILocation(line: 4294, column: 21, scope: !8618)
!8682 = !DILocation(line: 4294, column: 24, scope: !8618)
!8683 = !DILocation(line: 4294, column: 29, scope: !8618)
!8684 = !DILocation(line: 4295, column: 22, scope: !8618)
!8685 = !DILocation(line: 4296, column: 16, scope: !8618)
!8686 = !DILocation(line: 4280, column: 44, scope: !8613)
!8687 = !DILocation(line: 4280, column: 16, scope: !8613)
!8688 = distinct !{!8688, !8616, !8689}
!8689 = !DILocation(line: 4296, column: 16, scope: !8610)
!8690 = !DILocation(line: 4298, column: 13, scope: !8565)
!8691 = !DILocation(line: 4303, column: 17, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !1, line: 4303, column: 17)
!8693 = distinct !DILexicalBlock(scope: !8437, file: !1, line: 4302, column: 10)
!8694 = !DILocation(line: 4303, column: 27, scope: !8692)
!8695 = !DILocation(line: 4303, column: 37, scope: !8692)
!8696 = !DILocation(line: 4303, column: 17, scope: !8693)
!8697 = !DILocation(line: 4305, column: 21, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8692, file: !1, line: 4304, column: 13)
!8699 = !DILocation(line: 4305, column: 19, scope: !8698)
!8700 = !DILocation(line: 4306, column: 23, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8698, file: !1, line: 4306, column: 16)
!8702 = !DILocation(line: 4306, column: 21, scope: !8701)
!8703 = !DILocation(line: 4306, column: 28, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8701, file: !1, line: 4306, column: 16)
!8705 = !DILocation(line: 4306, column: 32, scope: !8704)
!8706 = !DILocation(line: 4306, column: 30, scope: !8704)
!8707 = !DILocation(line: 4306, column: 16, scope: !8701)
!8708 = !DILocation(line: 4308, column: 25, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8704, file: !1, line: 4307, column: 16)
!8710 = !DILocation(line: 4308, column: 38, scope: !8709)
!8711 = !DILocation(line: 4308, column: 37, scope: !8709)
!8712 = !DILocation(line: 4308, column: 20, scope: !8709)
!8713 = !DILocation(line: 4308, column: 23, scope: !8709)
!8714 = !DILocation(line: 4309, column: 22, scope: !8709)
!8715 = !DILocation(line: 4310, column: 16, scope: !8709)
!8716 = !DILocation(line: 4306, column: 44, scope: !8704)
!8717 = !DILocation(line: 4306, column: 16, scope: !8704)
!8718 = distinct !{!8718, !8707, !8719}
!8719 = !DILocation(line: 4310, column: 16, scope: !8701)
!8720 = !DILocation(line: 4311, column: 13, scope: !8698)
!8721 = !DILocation(line: 4315, column: 21, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8692, file: !1, line: 4314, column: 13)
!8723 = !DILocation(line: 4315, column: 19, scope: !8722)
!8724 = !DILocation(line: 4316, column: 23, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8722, file: !1, line: 4316, column: 16)
!8726 = !DILocation(line: 4316, column: 21, scope: !8725)
!8727 = !DILocation(line: 4316, column: 28, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8725, file: !1, line: 4316, column: 16)
!8729 = !DILocation(line: 4316, column: 32, scope: !8728)
!8730 = !DILocation(line: 4316, column: 30, scope: !8728)
!8731 = !DILocation(line: 4316, column: 16, scope: !8725)
!8732 = !DILocalVariable(name: "v", scope: !8733, file: !1, line: 4318, type: !24)
!8733 = distinct !DILexicalBlock(scope: !8728, file: !1, line: 4317, column: 16)
!8734 = !DILocation(line: 4318, column: 31, scope: !8733)
!8735 = !DILocation(line: 4318, column: 35, scope: !8733)
!8736 = !DILocation(line: 4318, column: 52, scope: !8733)
!8737 = !DILocation(line: 4318, column: 55, scope: !8733)
!8738 = !DILocation(line: 4318, column: 50, scope: !8733)
!8739 = !DILocation(line: 4318, column: 63, scope: !8733)
!8740 = !DILocation(line: 4318, column: 60, scope: !8733)
!8741 = !DILocation(line: 4318, column: 77, scope: !8733)
!8742 = !DILocation(line: 4318, column: 76, scope: !8733)
!8743 = !DILocation(line: 4319, column: 37, scope: !8733)
!8744 = !DILocation(line: 4319, column: 39, scope: !8733)
!8745 = !DILocation(line: 4319, column: 45, scope: !8733)
!8746 = !DILocation(line: 4319, column: 25, scope: !8733)
!8747 = !DILocation(line: 4319, column: 20, scope: !8733)
!8748 = !DILocation(line: 4319, column: 23, scope: !8733)
!8749 = !DILocation(line: 4320, column: 42, scope: !8733)
!8750 = !DILocation(line: 4320, column: 44, scope: !8733)
!8751 = !DILocation(line: 4320, column: 31, scope: !8733)
!8752 = !DILocation(line: 4320, column: 21, scope: !8733)
!8753 = !DILocation(line: 4320, column: 24, scope: !8733)
!8754 = !DILocation(line: 4320, column: 29, scope: !8733)
!8755 = !DILocation(line: 4321, column: 22, scope: !8733)
!8756 = !DILocation(line: 4322, column: 16, scope: !8733)
!8757 = !DILocation(line: 4316, column: 44, scope: !8728)
!8758 = !DILocation(line: 4316, column: 16, scope: !8728)
!8759 = distinct !{!8759, !8731, !8760}
!8760 = !DILocation(line: 4322, column: 16, scope: !8725)
!8761 = !DILocation(line: 4324, column: 13, scope: !8693)
!8762 = !DILocation(line: 4329, column: 17, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !1, line: 4329, column: 17)
!8764 = distinct !DILexicalBlock(scope: !8437, file: !1, line: 4328, column: 10)
!8765 = !DILocation(line: 4329, column: 27, scope: !8763)
!8766 = !DILocation(line: 4329, column: 37, scope: !8763)
!8767 = !DILocation(line: 4329, column: 17, scope: !8764)
!8768 = !DILocation(line: 4331, column: 21, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8763, file: !1, line: 4330, column: 13)
!8770 = !DILocation(line: 4331, column: 19, scope: !8769)
!8771 = !DILocation(line: 4332, column: 23, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !1, line: 4332, column: 16)
!8773 = !DILocation(line: 4332, column: 21, scope: !8772)
!8774 = !DILocation(line: 4332, column: 28, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8772, file: !1, line: 4332, column: 16)
!8776 = !DILocation(line: 4332, column: 32, scope: !8775)
!8777 = !DILocation(line: 4332, column: 30, scope: !8775)
!8778 = !DILocation(line: 4332, column: 16, scope: !8772)
!8779 = !DILocalVariable(name: "a", scope: !8780, file: !1, line: 4334, type: !12)
!8780 = distinct !DILexicalBlock(scope: !8775, file: !1, line: 4333, column: 16)
!8781 = !DILocation(line: 4334, column: 23, scope: !8780)
!8782 = !DILocation(line: 4334, column: 28, scope: !8780)
!8783 = !DILocation(line: 4334, column: 27, scope: !8780)
!8784 = !DILocation(line: 4334, column: 31, scope: !8780)
!8785 = !DILocalVariable(name: "b", scope: !8780, file: !1, line: 4335, type: !12)
!8786 = !DILocation(line: 4335, column: 23, scope: !8780)
!8787 = !DILocation(line: 4335, column: 28, scope: !8780)
!8788 = !DILocation(line: 4335, column: 27, scope: !8780)
!8789 = !DILocation(line: 4335, column: 31, scope: !8780)
!8790 = !DILocalVariable(name: "c", scope: !8780, file: !1, line: 4336, type: !12)
!8791 = !DILocation(line: 4336, column: 23, scope: !8780)
!8792 = !DILocation(line: 4336, column: 28, scope: !8780)
!8793 = !DILocation(line: 4336, column: 27, scope: !8780)
!8794 = !DILocation(line: 4336, column: 31, scope: !8780)
!8795 = !DILocalVariable(name: "d", scope: !8780, file: !1, line: 4337, type: !12)
!8796 = !DILocation(line: 4337, column: 23, scope: !8780)
!8797 = !DILocation(line: 4337, column: 28, scope: !8780)
!8798 = !DILocation(line: 4337, column: 27, scope: !8780)
!8799 = !DILocation(line: 4337, column: 31, scope: !8780)
!8800 = !DILocation(line: 4340, column: 31, scope: !8780)
!8801 = !DILocation(line: 4340, column: 43, scope: !8780)
!8802 = !DILocation(line: 4340, column: 46, scope: !8780)
!8803 = !DILocation(line: 4340, column: 47, scope: !8780)
!8804 = !DILocation(line: 4340, column: 44, scope: !8780)
!8805 = !DILocation(line: 4340, column: 53, scope: !8780)
!8806 = !DILocation(line: 4340, column: 54, scope: !8780)
!8807 = !DILocation(line: 4340, column: 51, scope: !8780)
!8808 = !DILocation(line: 4340, column: 60, scope: !8780)
!8809 = !DILocation(line: 4340, column: 61, scope: !8780)
!8810 = !DILocation(line: 4340, column: 58, scope: !8780)
!8811 = !DILocation(line: 4340, column: 26, scope: !8780)
!8812 = !DILocation(line: 4340, column: 72, scope: !8780)
!8813 = !DILocation(line: 4341, column: 31, scope: !8780)
!8814 = !DILocation(line: 4341, column: 44, scope: !8780)
!8815 = !DILocation(line: 4341, column: 45, scope: !8780)
!8816 = !DILocation(line: 4341, column: 50, scope: !8780)
!8817 = !DILocation(line: 4341, column: 49, scope: !8780)
!8818 = !DILocation(line: 4341, column: 53, scope: !8780)
!8819 = !DILocation(line: 4341, column: 54, scope: !8780)
!8820 = !DILocation(line: 4341, column: 51, scope: !8780)
!8821 = !DILocation(line: 4341, column: 60, scope: !8780)
!8822 = !DILocation(line: 4341, column: 61, scope: !8780)
!8823 = !DILocation(line: 4341, column: 58, scope: !8780)
!8824 = !DILocation(line: 4341, column: 26, scope: !8780)
!8825 = !DILocation(line: 4341, column: 67, scope: !8780)
!8826 = !DILocation(line: 4341, column: 72, scope: !8780)
!8827 = !DILocation(line: 4340, column: 79, scope: !8780)
!8828 = !DILocation(line: 4342, column: 31, scope: !8780)
!8829 = !DILocation(line: 4342, column: 44, scope: !8780)
!8830 = !DILocation(line: 4342, column: 45, scope: !8780)
!8831 = !DILocation(line: 4342, column: 51, scope: !8780)
!8832 = !DILocation(line: 4342, column: 52, scope: !8780)
!8833 = !DILocation(line: 4342, column: 49, scope: !8780)
!8834 = !DILocation(line: 4342, column: 57, scope: !8780)
!8835 = !DILocation(line: 4342, column: 56, scope: !8780)
!8836 = !DILocation(line: 4342, column: 60, scope: !8780)
!8837 = !DILocation(line: 4342, column: 61, scope: !8780)
!8838 = !DILocation(line: 4342, column: 58, scope: !8780)
!8839 = !DILocation(line: 4342, column: 26, scope: !8780)
!8840 = !DILocation(line: 4342, column: 67, scope: !8780)
!8841 = !DILocation(line: 4342, column: 72, scope: !8780)
!8842 = !DILocation(line: 4341, column: 79, scope: !8780)
!8843 = !DILocation(line: 4343, column: 31, scope: !8780)
!8844 = !DILocation(line: 4343, column: 44, scope: !8780)
!8845 = !DILocation(line: 4343, column: 45, scope: !8780)
!8846 = !DILocation(line: 4343, column: 51, scope: !8780)
!8847 = !DILocation(line: 4343, column: 52, scope: !8780)
!8848 = !DILocation(line: 4343, column: 49, scope: !8780)
!8849 = !DILocation(line: 4343, column: 58, scope: !8780)
!8850 = !DILocation(line: 4343, column: 59, scope: !8780)
!8851 = !DILocation(line: 4343, column: 56, scope: !8780)
!8852 = !DILocation(line: 4343, column: 64, scope: !8780)
!8853 = !DILocation(line: 4343, column: 63, scope: !8780)
!8854 = !DILocation(line: 4343, column: 26, scope: !8780)
!8855 = !DILocation(line: 4343, column: 67, scope: !8780)
!8856 = !DILocation(line: 4342, column: 79, scope: !8780)
!8857 = !DILocation(line: 4339, column: 25, scope: !8780)
!8858 = !DILocation(line: 4339, column: 20, scope: !8780)
!8859 = !DILocation(line: 4339, column: 23, scope: !8780)
!8860 = !DILocation(line: 4344, column: 21, scope: !8780)
!8861 = !DILocation(line: 4345, column: 16, scope: !8780)
!8862 = !DILocation(line: 4332, column: 45, scope: !8775)
!8863 = !DILocation(line: 4332, column: 16, scope: !8775)
!8864 = distinct !{!8864, !8778, !8865}
!8865 = !DILocation(line: 4345, column: 16, scope: !8772)
!8866 = !DILocation(line: 4346, column: 13, scope: !8769)
!8867 = !DILocation(line: 4348, column: 17, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8764, file: !1, line: 4348, column: 17)
!8869 = !DILocation(line: 4348, column: 27, scope: !8868)
!8870 = !DILocation(line: 4348, column: 37, scope: !8868)
!8871 = !DILocation(line: 4348, column: 17, scope: !8764)
!8872 = !DILocation(line: 4350, column: 21, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8868, file: !1, line: 4349, column: 13)
!8874 = !DILocation(line: 4350, column: 19, scope: !8873)
!8875 = !DILocation(line: 4351, column: 23, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8873, file: !1, line: 4351, column: 16)
!8877 = !DILocation(line: 4351, column: 21, scope: !8876)
!8878 = !DILocation(line: 4351, column: 28, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8876, file: !1, line: 4351, column: 16)
!8880 = !DILocation(line: 4351, column: 32, scope: !8879)
!8881 = !DILocation(line: 4351, column: 30, scope: !8879)
!8882 = !DILocation(line: 4351, column: 16, scope: !8876)
!8883 = !DILocalVariable(name: "msb", scope: !8884, file: !1, line: 4353, type: !12)
!8884 = distinct !DILexicalBlock(scope: !8879, file: !1, line: 4352, column: 16)
!8885 = !DILocation(line: 4353, column: 23, scope: !8884)
!8886 = !DILocation(line: 4353, column: 30, scope: !8884)
!8887 = !DILocation(line: 4353, column: 29, scope: !8884)
!8888 = !DILocation(line: 4353, column: 33, scope: !8884)
!8889 = !DILocalVariable(name: "lsb", scope: !8884, file: !1, line: 4354, type: !12)
!8890 = !DILocation(line: 4354, column: 23, scope: !8884)
!8891 = !DILocation(line: 4354, column: 30, scope: !8884)
!8892 = !DILocation(line: 4354, column: 29, scope: !8884)
!8893 = !DILocation(line: 4354, column: 33, scope: !8884)
!8894 = !DILocation(line: 4356, column: 43, scope: !8884)
!8895 = !DILocation(line: 4356, column: 55, scope: !8884)
!8896 = !DILocation(line: 4356, column: 62, scope: !8884)
!8897 = !DILocation(line: 4356, column: 66, scope: !8884)
!8898 = !DILocation(line: 4356, column: 59, scope: !8884)
!8899 = !DILocation(line: 4356, column: 38, scope: !8884)
!8900 = !DILocation(line: 4356, column: 74, scope: !8884)
!8901 = !DILocation(line: 4357, column: 32, scope: !8884)
!8902 = !DILocation(line: 4357, column: 45, scope: !8884)
!8903 = !DILocation(line: 4357, column: 49, scope: !8884)
!8904 = !DILocation(line: 4357, column: 57, scope: !8884)
!8905 = !DILocation(line: 4357, column: 55, scope: !8884)
!8906 = !DILocation(line: 4357, column: 27, scope: !8884)
!8907 = !DILocation(line: 4357, column: 63, scope: !8884)
!8908 = !DILocation(line: 4357, column: 23, scope: !8884)
!8909 = !DILocation(line: 4356, column: 25, scope: !8884)
!8910 = !DILocation(line: 4356, column: 20, scope: !8884)
!8911 = !DILocation(line: 4356, column: 23, scope: !8884)
!8912 = !DILocation(line: 4358, column: 21, scope: !8884)
!8913 = !DILocation(line: 4359, column: 16, scope: !8884)
!8914 = !DILocation(line: 4351, column: 45, scope: !8879)
!8915 = !DILocation(line: 4351, column: 16, scope: !8879)
!8916 = distinct !{!8916, !8882, !8917}
!8917 = !DILocation(line: 4359, column: 16, scope: !8876)
!8918 = !DILocation(line: 4360, column: 13, scope: !8873)
!8919 = !DILocation(line: 4362, column: 22, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8868, file: !1, line: 4362, column: 22)
!8921 = !DILocation(line: 4362, column: 32, scope: !8920)
!8922 = !DILocation(line: 4362, column: 42, scope: !8920)
!8923 = !DILocation(line: 4362, column: 22, scope: !8868)
!8924 = !DILocation(line: 4364, column: 21, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !1, line: 4363, column: 13)
!8926 = !DILocation(line: 4364, column: 19, scope: !8925)
!8927 = !DILocation(line: 4365, column: 23, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8925, file: !1, line: 4365, column: 16)
!8929 = !DILocation(line: 4365, column: 21, scope: !8928)
!8930 = !DILocation(line: 4365, column: 28, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 4365, column: 16)
!8932 = !DILocation(line: 4365, column: 32, scope: !8931)
!8933 = !DILocation(line: 4365, column: 30, scope: !8931)
!8934 = !DILocation(line: 4365, column: 16, scope: !8928)
!8935 = !DILocation(line: 4367, column: 25, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8931, file: !1, line: 4366, column: 16)
!8937 = !DILocation(line: 4367, column: 38, scope: !8936)
!8938 = !DILocation(line: 4367, column: 37, scope: !8936)
!8939 = !DILocation(line: 4367, column: 20, scope: !8936)
!8940 = !DILocation(line: 4367, column: 23, scope: !8936)
!8941 = !DILocation(line: 4368, column: 21, scope: !8936)
!8942 = !DILocation(line: 4369, column: 16, scope: !8936)
!8943 = !DILocation(line: 4365, column: 44, scope: !8931)
!8944 = !DILocation(line: 4365, column: 16, scope: !8931)
!8945 = distinct !{!8945, !8934, !8946}
!8946 = !DILocation(line: 4369, column: 16, scope: !8928)
!8947 = !DILocation(line: 4370, column: 13, scope: !8925)
!8948 = !DILocation(line: 4372, column: 22, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8920, file: !1, line: 4372, column: 22)
!8950 = !DILocation(line: 4372, column: 32, scope: !8949)
!8951 = !DILocation(line: 4372, column: 42, scope: !8949)
!8952 = !DILocation(line: 4372, column: 22, scope: !8920)
!8953 = !DILocation(line: 4374, column: 21, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8949, file: !1, line: 4373, column: 13)
!8955 = !DILocation(line: 4374, column: 19, scope: !8954)
!8956 = !DILocation(line: 4375, column: 23, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8954, file: !1, line: 4375, column: 16)
!8958 = !DILocation(line: 4375, column: 21, scope: !8957)
!8959 = !DILocation(line: 4375, column: 28, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 4375, column: 16)
!8961 = !DILocation(line: 4375, column: 32, scope: !8960)
!8962 = !DILocation(line: 4375, column: 30, scope: !8960)
!8963 = !DILocation(line: 4375, column: 16, scope: !8957)
!8964 = !DILocalVariable(name: "v", scope: !8965, file: !1, line: 4377, type: !24)
!8965 = distinct !DILexicalBlock(scope: !8960, file: !1, line: 4376, column: 16)
!8966 = !DILocation(line: 4377, column: 31, scope: !8965)
!8967 = !DILocation(line: 4377, column: 35, scope: !8965)
!8968 = !DILocation(line: 4377, column: 52, scope: !8965)
!8969 = !DILocation(line: 4377, column: 55, scope: !8965)
!8970 = !DILocation(line: 4377, column: 50, scope: !8965)
!8971 = !DILocation(line: 4377, column: 63, scope: !8965)
!8972 = !DILocation(line: 4377, column: 60, scope: !8965)
!8973 = !DILocation(line: 4377, column: 77, scope: !8965)
!8974 = !DILocation(line: 4377, column: 76, scope: !8965)
!8975 = !DILocation(line: 4378, column: 37, scope: !8965)
!8976 = !DILocation(line: 4378, column: 39, scope: !8965)
!8977 = !DILocation(line: 4378, column: 45, scope: !8965)
!8978 = !DILocation(line: 4378, column: 25, scope: !8965)
!8979 = !DILocation(line: 4378, column: 20, scope: !8965)
!8980 = !DILocation(line: 4378, column: 23, scope: !8965)
!8981 = !DILocation(line: 4379, column: 42, scope: !8965)
!8982 = !DILocation(line: 4379, column: 44, scope: !8965)
!8983 = !DILocation(line: 4379, column: 31, scope: !8965)
!8984 = !DILocation(line: 4379, column: 21, scope: !8965)
!8985 = !DILocation(line: 4379, column: 24, scope: !8965)
!8986 = !DILocation(line: 4379, column: 29, scope: !8965)
!8987 = !DILocation(line: 4380, column: 22, scope: !8965)
!8988 = !DILocation(line: 4381, column: 16, scope: !8965)
!8989 = !DILocation(line: 4375, column: 44, scope: !8960)
!8990 = !DILocation(line: 4375, column: 16, scope: !8960)
!8991 = distinct !{!8991, !8963, !8992}
!8992 = !DILocation(line: 4381, column: 16, scope: !8957)
!8993 = !DILocation(line: 4382, column: 13, scope: !8954)
!8994 = !DILocation(line: 4383, column: 13, scope: !8764)
!8995 = !DILocation(line: 4387, column: 13, scope: !8437)
!8996 = !DILocation(line: 4389, column: 4, scope: !8431)
!8997 = !DILocation(line: 4390, column: 1, scope: !8388)
!8998 = distinct !DISubprogram(name: "png_do_encode_alpha", scope: !1, file: !1, line: 4399, type: !6217, scopeLine: 4400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!8999 = !DILocalVariable(name: "row_info", arg: 1, scope: !8998, file: !1, line: 4399, type: !101)
!9000 = !DILocation(line: 4399, column: 35, scope: !8998)
!9001 = !DILocalVariable(name: "row", arg: 2, scope: !8998, file: !1, line: 4399, type: !8)
!9002 = !DILocation(line: 4399, column: 55, scope: !8998)
!9003 = !DILocalVariable(name: "png_ptr", arg: 3, scope: !8998, file: !1, line: 4399, type: !39)
!9004 = !DILocation(line: 4399, column: 72, scope: !8998)
!9005 = !DILocalVariable(name: "row_width", scope: !8998, file: !1, line: 4401, type: !10)
!9006 = !DILocation(line: 4401, column: 16, scope: !8998)
!9007 = !DILocation(line: 4401, column: 28, scope: !8998)
!9008 = !DILocation(line: 4401, column: 38, scope: !8998)
!9009 = !DILocation(line: 4405, column: 8, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 4405, column: 8)
!9011 = !DILocation(line: 4405, column: 18, scope: !9010)
!9012 = !DILocation(line: 4405, column: 29, scope: !9010)
!9013 = !DILocation(line: 4405, column: 8, scope: !8998)
!9014 = !DILocation(line: 4407, column: 11, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !1, line: 4407, column: 11)
!9016 = distinct !DILexicalBlock(scope: !9010, file: !1, line: 4406, column: 4)
!9017 = !DILocation(line: 4407, column: 21, scope: !9015)
!9018 = !DILocation(line: 4407, column: 31, scope: !9015)
!9019 = !DILocation(line: 4407, column: 11, scope: !9016)
!9020 = !DILocalVariable(name: "table", scope: !9021, file: !1, line: 4409, type: !9022)
!9021 = distinct !DILexicalBlock(scope: !9015, file: !1, line: 4408, column: 7)
!9022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!9023 = !DILocation(line: 4409, column: 30, scope: !9021)
!9024 = !DILocation(line: 4409, column: 38, scope: !9021)
!9025 = !DILocation(line: 4409, column: 47, scope: !9021)
!9026 = !DILocation(line: 4411, column: 14, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9021, file: !1, line: 4411, column: 14)
!9028 = !DILocation(line: 4411, column: 20, scope: !9027)
!9029 = !DILocation(line: 4411, column: 14, scope: !9021)
!9030 = !DILocalVariable(name: "step", scope: !9031, file: !1, line: 4413, type: !5408)
!9031 = distinct !DILexicalBlock(scope: !9027, file: !1, line: 4412, column: 10)
!9032 = !DILocation(line: 4413, column: 27, scope: !9031)
!9033 = !DILocation(line: 4414, column: 17, scope: !9031)
!9034 = !DILocation(line: 4414, column: 27, scope: !9031)
!9035 = !DILocation(line: 4414, column: 38, scope: !9031)
!9036 = !DILocation(line: 4414, column: 16, scope: !9031)
!9037 = !DILocation(line: 4417, column: 20, scope: !9031)
!9038 = !DILocation(line: 4417, column: 25, scope: !9031)
!9039 = !DILocation(line: 4417, column: 17, scope: !9031)
!9040 = !DILocation(line: 4419, column: 13, scope: !9031)
!9041 = !DILocation(line: 4419, column: 20, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !1, line: 4419, column: 13)
!9043 = distinct !DILexicalBlock(scope: !9031, file: !1, line: 4419, column: 13)
!9044 = !DILocation(line: 4419, column: 30, scope: !9042)
!9045 = !DILocation(line: 4419, column: 13, scope: !9043)
!9046 = !DILocation(line: 4420, column: 23, scope: !9042)
!9047 = !DILocation(line: 4420, column: 30, scope: !9042)
!9048 = !DILocation(line: 4420, column: 29, scope: !9042)
!9049 = !DILocation(line: 4420, column: 17, scope: !9042)
!9050 = !DILocation(line: 4420, column: 21, scope: !9042)
!9051 = !DILocation(line: 4420, column: 16, scope: !9042)
!9052 = !DILocation(line: 4419, column: 35, scope: !9042)
!9053 = !DILocation(line: 4419, column: 55, scope: !9042)
!9054 = !DILocation(line: 4419, column: 52, scope: !9042)
!9055 = !DILocation(line: 4419, column: 13, scope: !9042)
!9056 = distinct !{!9056, !9045, !9057}
!9057 = !DILocation(line: 4420, column: 33, scope: !9043)
!9058 = !DILocation(line: 4422, column: 13, scope: !9031)
!9059 = !DILocation(line: 4424, column: 7, scope: !9021)
!9060 = !DILocation(line: 4426, column: 16, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9015, file: !1, line: 4426, column: 16)
!9062 = !DILocation(line: 4426, column: 26, scope: !9061)
!9063 = !DILocation(line: 4426, column: 36, scope: !9061)
!9064 = !DILocation(line: 4426, column: 16, scope: !9015)
!9065 = !DILocalVariable(name: "table", scope: !9066, file: !1, line: 4428, type: !9067)
!9066 = distinct !DILexicalBlock(scope: !9061, file: !1, line: 4427, column: 7)
!9067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !243)
!9068 = !DILocation(line: 4428, column: 34, scope: !9066)
!9069 = !DILocation(line: 4428, column: 42, scope: !9066)
!9070 = !DILocation(line: 4428, column: 51, scope: !9066)
!9071 = !DILocalVariable(name: "gamma_shift", scope: !9066, file: !1, line: 4429, type: !5408)
!9072 = !DILocation(line: 4429, column: 24, scope: !9066)
!9073 = !DILocation(line: 4429, column: 38, scope: !9066)
!9074 = !DILocation(line: 4429, column: 47, scope: !9066)
!9075 = !DILocation(line: 4431, column: 14, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9066, file: !1, line: 4431, column: 14)
!9077 = !DILocation(line: 4431, column: 20, scope: !9076)
!9078 = !DILocation(line: 4431, column: 14, scope: !9066)
!9079 = !DILocalVariable(name: "step", scope: !9080, file: !1, line: 4433, type: !5408)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !1, line: 4432, column: 10)
!9081 = !DILocation(line: 4433, column: 27, scope: !9080)
!9082 = !DILocation(line: 4434, column: 17, scope: !9080)
!9083 = !DILocation(line: 4434, column: 27, scope: !9080)
!9084 = !DILocation(line: 4434, column: 38, scope: !9080)
!9085 = !DILocation(line: 4434, column: 16, scope: !9080)
!9086 = !DILocation(line: 4437, column: 20, scope: !9080)
!9087 = !DILocation(line: 4437, column: 25, scope: !9080)
!9088 = !DILocation(line: 4437, column: 17, scope: !9080)
!9089 = !DILocation(line: 4439, column: 13, scope: !9080)
!9090 = !DILocation(line: 4439, column: 20, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !1, line: 4439, column: 13)
!9092 = distinct !DILexicalBlock(scope: !9080, file: !1, line: 4439, column: 13)
!9093 = !DILocation(line: 4439, column: 30, scope: !9091)
!9094 = !DILocation(line: 4439, column: 13, scope: !9092)
!9095 = !DILocalVariable(name: "v", scope: !9096, file: !1, line: 4441, type: !24)
!9096 = distinct !DILexicalBlock(scope: !9091, file: !1, line: 4440, column: 13)
!9097 = !DILocation(line: 4441, column: 28, scope: !9096)
!9098 = !DILocation(line: 4443, column: 20, scope: !9096)
!9099 = !DILocation(line: 4443, column: 28, scope: !9096)
!9100 = !DILocation(line: 4443, column: 32, scope: !9096)
!9101 = !DILocation(line: 4443, column: 26, scope: !9096)
!9102 = !DILocation(line: 4443, column: 40, scope: !9096)
!9103 = !DILocation(line: 4443, column: 37, scope: !9096)
!9104 = !DILocation(line: 4443, column: 54, scope: !9096)
!9105 = !DILocation(line: 4443, column: 53, scope: !9096)
!9106 = !DILocation(line: 4443, column: 18, scope: !9096)
!9107 = !DILocation(line: 4444, column: 35, scope: !9096)
!9108 = !DILocation(line: 4444, column: 37, scope: !9096)
!9109 = !DILocation(line: 4444, column: 43, scope: !9096)
!9110 = !DILocation(line: 4444, column: 23, scope: !9096)
!9111 = !DILocation(line: 4444, column: 17, scope: !9096)
!9112 = !DILocation(line: 4444, column: 21, scope: !9096)
!9113 = !DILocation(line: 4445, column: 40, scope: !9096)
!9114 = !DILocation(line: 4445, column: 42, scope: !9096)
!9115 = !DILocation(line: 4445, column: 29, scope: !9096)
!9116 = !DILocation(line: 4445, column: 18, scope: !9096)
!9117 = !DILocation(line: 4445, column: 22, scope: !9096)
!9118 = !DILocation(line: 4445, column: 27, scope: !9096)
!9119 = !DILocation(line: 4446, column: 13, scope: !9096)
!9120 = !DILocation(line: 4439, column: 35, scope: !9091)
!9121 = !DILocation(line: 4439, column: 55, scope: !9091)
!9122 = !DILocation(line: 4439, column: 52, scope: !9091)
!9123 = !DILocation(line: 4439, column: 13, scope: !9091)
!9124 = distinct !{!9124, !9094, !9125}
!9125 = !DILocation(line: 4446, column: 13, scope: !9092)
!9126 = !DILocation(line: 4448, column: 13, scope: !9080)
!9127 = !DILocation(line: 4450, column: 7, scope: !9066)
!9128 = !DILocation(line: 4451, column: 4, scope: !9016)
!9129 = !DILocation(line: 4456, column: 16, scope: !8998)
!9130 = !DILocation(line: 4456, column: 4, scope: !8998)
!9131 = !DILocation(line: 4457, column: 1, scope: !8998)
!9132 = distinct !DISubprogram(name: "png_do_scale_16_to_8", scope: !1, file: !1, line: 2615, type: !5936, scopeLine: 2616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9133 = !DILocalVariable(name: "row_info", arg: 1, scope: !9132, file: !1, line: 2615, type: !101)
!9134 = !DILocation(line: 2615, column: 36, scope: !9132)
!9135 = !DILocalVariable(name: "row", arg: 2, scope: !9132, file: !1, line: 2615, type: !8)
!9136 = !DILocation(line: 2615, column: 56, scope: !9132)
!9137 = !DILocation(line: 2619, column: 8, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9132, file: !1, line: 2619, column: 8)
!9139 = !DILocation(line: 2619, column: 18, scope: !9138)
!9140 = !DILocation(line: 2619, column: 28, scope: !9138)
!9141 = !DILocation(line: 2619, column: 8, scope: !9132)
!9142 = !DILocalVariable(name: "sp", scope: !9143, file: !1, line: 2621, type: !8)
!9143 = distinct !DILexicalBlock(scope: !9138, file: !1, line: 2620, column: 4)
!9144 = !DILocation(line: 2621, column: 17, scope: !9143)
!9145 = !DILocation(line: 2621, column: 22, scope: !9143)
!9146 = !DILocalVariable(name: "dp", scope: !9143, file: !1, line: 2622, type: !8)
!9147 = !DILocation(line: 2622, column: 17, scope: !9143)
!9148 = !DILocation(line: 2622, column: 22, scope: !9143)
!9149 = !DILocalVariable(name: "ep", scope: !9143, file: !1, line: 2623, type: !8)
!9150 = !DILocation(line: 2623, column: 17, scope: !9143)
!9151 = !DILocation(line: 2623, column: 22, scope: !9143)
!9152 = !DILocation(line: 2623, column: 27, scope: !9143)
!9153 = !DILocation(line: 2623, column: 37, scope: !9143)
!9154 = !DILocation(line: 2623, column: 25, scope: !9143)
!9155 = !DILocation(line: 2625, column: 7, scope: !9143)
!9156 = !DILocation(line: 2625, column: 14, scope: !9143)
!9157 = !DILocation(line: 2625, column: 19, scope: !9143)
!9158 = !DILocation(line: 2625, column: 17, scope: !9143)
!9159 = !DILocalVariable(name: "tmp", scope: !9160, file: !1, line: 2659, type: !31)
!9160 = distinct !DILexicalBlock(scope: !9143, file: !1, line: 2626, column: 7)
!9161 = !DILocation(line: 2659, column: 21, scope: !9160)
!9162 = !DILocation(line: 2659, column: 30, scope: !9160)
!9163 = !DILocation(line: 2659, column: 27, scope: !9160)
!9164 = !DILocation(line: 2660, column: 27, scope: !9160)
!9165 = !DILocation(line: 2660, column: 24, scope: !9160)
!9166 = !DILocation(line: 2660, column: 19, scope: !9160)
!9167 = !DILocation(line: 2660, column: 32, scope: !9160)
!9168 = !DILocation(line: 2660, column: 30, scope: !9160)
!9169 = !DILocation(line: 2660, column: 36, scope: !9160)
!9170 = !DILocation(line: 2660, column: 43, scope: !9160)
!9171 = !DILocation(line: 2660, column: 52, scope: !9160)
!9172 = !DILocation(line: 2660, column: 14, scope: !9160)
!9173 = !DILocation(line: 2661, column: 28, scope: !9160)
!9174 = !DILocation(line: 2661, column: 18, scope: !9160)
!9175 = !DILocation(line: 2661, column: 13, scope: !9160)
!9176 = !DILocation(line: 2661, column: 16, scope: !9160)
!9177 = distinct !{!9177, !9155, !9178}
!9178 = !DILocation(line: 2662, column: 7, scope: !9143)
!9179 = !DILocation(line: 2664, column: 7, scope: !9143)
!9180 = !DILocation(line: 2664, column: 17, scope: !9143)
!9181 = !DILocation(line: 2664, column: 27, scope: !9143)
!9182 = !DILocation(line: 2665, column: 46, scope: !9143)
!9183 = !DILocation(line: 2665, column: 56, scope: !9143)
!9184 = !DILocation(line: 2665, column: 44, scope: !9143)
!9185 = !DILocation(line: 2665, column: 31, scope: !9143)
!9186 = !DILocation(line: 2665, column: 7, scope: !9143)
!9187 = !DILocation(line: 2665, column: 17, scope: !9143)
!9188 = !DILocation(line: 2665, column: 29, scope: !9143)
!9189 = !DILocation(line: 2666, column: 28, scope: !9143)
!9190 = !DILocation(line: 2666, column: 38, scope: !9143)
!9191 = !DILocation(line: 2666, column: 46, scope: !9143)
!9192 = !DILocation(line: 2666, column: 56, scope: !9143)
!9193 = !DILocation(line: 2666, column: 44, scope: !9143)
!9194 = !DILocation(line: 2666, column: 7, scope: !9143)
!9195 = !DILocation(line: 2666, column: 17, scope: !9143)
!9196 = !DILocation(line: 2666, column: 26, scope: !9143)
!9197 = !DILocation(line: 2667, column: 4, scope: !9143)
!9198 = !DILocation(line: 2668, column: 1, scope: !9132)
!9199 = distinct !DISubprogram(name: "png_do_chop", scope: !1, file: !1, line: 2676, type: !5936, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9200 = !DILocalVariable(name: "row_info", arg: 1, scope: !9199, file: !1, line: 2676, type: !101)
!9201 = !DILocation(line: 2676, column: 27, scope: !9199)
!9202 = !DILocalVariable(name: "row", arg: 2, scope: !9199, file: !1, line: 2676, type: !8)
!9203 = !DILocation(line: 2676, column: 47, scope: !9199)
!9204 = !DILocation(line: 2680, column: 8, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9199, file: !1, line: 2680, column: 8)
!9206 = !DILocation(line: 2680, column: 18, scope: !9205)
!9207 = !DILocation(line: 2680, column: 28, scope: !9205)
!9208 = !DILocation(line: 2680, column: 8, scope: !9199)
!9209 = !DILocalVariable(name: "sp", scope: !9210, file: !1, line: 2682, type: !8)
!9210 = distinct !DILexicalBlock(scope: !9205, file: !1, line: 2681, column: 4)
!9211 = !DILocation(line: 2682, column: 17, scope: !9210)
!9212 = !DILocation(line: 2682, column: 22, scope: !9210)
!9213 = !DILocalVariable(name: "dp", scope: !9210, file: !1, line: 2683, type: !8)
!9214 = !DILocation(line: 2683, column: 17, scope: !9210)
!9215 = !DILocation(line: 2683, column: 22, scope: !9210)
!9216 = !DILocalVariable(name: "ep", scope: !9210, file: !1, line: 2684, type: !8)
!9217 = !DILocation(line: 2684, column: 17, scope: !9210)
!9218 = !DILocation(line: 2684, column: 22, scope: !9210)
!9219 = !DILocation(line: 2684, column: 27, scope: !9210)
!9220 = !DILocation(line: 2684, column: 37, scope: !9210)
!9221 = !DILocation(line: 2684, column: 25, scope: !9210)
!9222 = !DILocation(line: 2686, column: 7, scope: !9210)
!9223 = !DILocation(line: 2686, column: 14, scope: !9210)
!9224 = !DILocation(line: 2686, column: 19, scope: !9210)
!9225 = !DILocation(line: 2686, column: 17, scope: !9210)
!9226 = !DILocation(line: 2688, column: 19, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9210, file: !1, line: 2687, column: 7)
!9228 = !DILocation(line: 2688, column: 18, scope: !9227)
!9229 = !DILocation(line: 2688, column: 13, scope: !9227)
!9230 = !DILocation(line: 2688, column: 16, scope: !9227)
!9231 = !DILocation(line: 2689, column: 13, scope: !9227)
!9232 = distinct !{!9232, !9222, !9233}
!9233 = !DILocation(line: 2690, column: 7, scope: !9210)
!9234 = !DILocation(line: 2692, column: 7, scope: !9210)
!9235 = !DILocation(line: 2692, column: 17, scope: !9210)
!9236 = !DILocation(line: 2692, column: 27, scope: !9210)
!9237 = !DILocation(line: 2693, column: 46, scope: !9210)
!9238 = !DILocation(line: 2693, column: 56, scope: !9210)
!9239 = !DILocation(line: 2693, column: 44, scope: !9210)
!9240 = !DILocation(line: 2693, column: 31, scope: !9210)
!9241 = !DILocation(line: 2693, column: 7, scope: !9210)
!9242 = !DILocation(line: 2693, column: 17, scope: !9210)
!9243 = !DILocation(line: 2693, column: 29, scope: !9210)
!9244 = !DILocation(line: 2694, column: 28, scope: !9210)
!9245 = !DILocation(line: 2694, column: 38, scope: !9210)
!9246 = !DILocation(line: 2694, column: 46, scope: !9210)
!9247 = !DILocation(line: 2694, column: 56, scope: !9210)
!9248 = !DILocation(line: 2694, column: 44, scope: !9210)
!9249 = !DILocation(line: 2694, column: 7, scope: !9210)
!9250 = !DILocation(line: 2694, column: 17, scope: !9210)
!9251 = !DILocation(line: 2694, column: 26, scope: !9210)
!9252 = !DILocation(line: 2695, column: 4, scope: !9210)
!9253 = !DILocation(line: 2696, column: 1, scope: !9199)
!9254 = distinct !DISubprogram(name: "png_do_quantize", scope: !1, file: !1, line: 4876, type: !9255, scopeLine: 4878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{null, !101, !8, !477, !477}
!9257 = !DILocalVariable(name: "row_info", arg: 1, scope: !9254, file: !1, line: 4876, type: !101)
!9258 = !DILocation(line: 4876, column: 31, scope: !9254)
!9259 = !DILocalVariable(name: "row", arg: 2, scope: !9254, file: !1, line: 4876, type: !8)
!9260 = !DILocation(line: 4876, column: 51, scope: !9254)
!9261 = !DILocalVariable(name: "palette_lookup", arg: 3, scope: !9254, file: !1, line: 4877, type: !477)
!9262 = !DILocation(line: 4877, column: 21, scope: !9254)
!9263 = !DILocalVariable(name: "quantize_lookup", arg: 4, scope: !9254, file: !1, line: 4877, type: !477)
!9264 = !DILocation(line: 4877, column: 53, scope: !9254)
!9265 = !DILocalVariable(name: "sp", scope: !9254, file: !1, line: 4879, type: !8)
!9266 = !DILocation(line: 4879, column: 14, scope: !9254)
!9267 = !DILocalVariable(name: "dp", scope: !9254, file: !1, line: 4879, type: !8)
!9268 = !DILocation(line: 4879, column: 18, scope: !9254)
!9269 = !DILocalVariable(name: "i", scope: !9254, file: !1, line: 4880, type: !10)
!9270 = !DILocation(line: 4880, column: 16, scope: !9254)
!9271 = !DILocalVariable(name: "row_width", scope: !9254, file: !1, line: 4881, type: !10)
!9272 = !DILocation(line: 4881, column: 16, scope: !9254)
!9273 = !DILocation(line: 4881, column: 26, scope: !9254)
!9274 = !DILocation(line: 4881, column: 36, scope: !9254)
!9275 = !DILocation(line: 4885, column: 8, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9254, file: !1, line: 4885, column: 8)
!9277 = !DILocation(line: 4885, column: 18, scope: !9276)
!9278 = !DILocation(line: 4885, column: 28, scope: !9276)
!9279 = !DILocation(line: 4885, column: 8, scope: !9254)
!9280 = !DILocation(line: 4887, column: 11, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !1, line: 4887, column: 11)
!9282 = distinct !DILexicalBlock(scope: !9276, file: !1, line: 4886, column: 4)
!9283 = !DILocation(line: 4887, column: 21, scope: !9281)
!9284 = !DILocation(line: 4887, column: 32, scope: !9281)
!9285 = !DILocation(line: 4887, column: 54, scope: !9281)
!9286 = !DILocation(line: 4887, column: 57, scope: !9281)
!9287 = !DILocation(line: 4887, column: 11, scope: !9282)
!9288 = !DILocalVariable(name: "r", scope: !9289, file: !1, line: 4889, type: !12)
!9289 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4888, column: 7)
!9290 = !DILocation(line: 4889, column: 14, scope: !9289)
!9291 = !DILocalVariable(name: "g", scope: !9289, file: !1, line: 4889, type: !12)
!9292 = !DILocation(line: 4889, column: 17, scope: !9289)
!9293 = !DILocalVariable(name: "b", scope: !9289, file: !1, line: 4889, type: !12)
!9294 = !DILocation(line: 4889, column: 20, scope: !9289)
!9295 = !DILocalVariable(name: "p", scope: !9289, file: !1, line: 4889, type: !12)
!9296 = !DILocation(line: 4889, column: 23, scope: !9289)
!9297 = !DILocation(line: 4890, column: 15, scope: !9289)
!9298 = !DILocation(line: 4890, column: 13, scope: !9289)
!9299 = !DILocation(line: 4891, column: 15, scope: !9289)
!9300 = !DILocation(line: 4891, column: 13, scope: !9289)
!9301 = !DILocation(line: 4892, column: 17, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9289, file: !1, line: 4892, column: 10)
!9303 = !DILocation(line: 4892, column: 15, scope: !9302)
!9304 = !DILocation(line: 4892, column: 22, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9302, file: !1, line: 4892, column: 10)
!9306 = !DILocation(line: 4892, column: 26, scope: !9305)
!9307 = !DILocation(line: 4892, column: 24, scope: !9305)
!9308 = !DILocation(line: 4892, column: 10, scope: !9302)
!9309 = !DILocation(line: 4894, column: 20, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9305, file: !1, line: 4893, column: 10)
!9311 = !DILocation(line: 4894, column: 17, scope: !9310)
!9312 = !DILocation(line: 4894, column: 15, scope: !9310)
!9313 = !DILocation(line: 4895, column: 20, scope: !9310)
!9314 = !DILocation(line: 4895, column: 17, scope: !9310)
!9315 = !DILocation(line: 4895, column: 15, scope: !9310)
!9316 = !DILocation(line: 4896, column: 20, scope: !9310)
!9317 = !DILocation(line: 4896, column: 17, scope: !9310)
!9318 = !DILocation(line: 4896, column: 15, scope: !9310)
!9319 = !DILocation(line: 4905, column: 20, scope: !9310)
!9320 = !DILocation(line: 4905, column: 22, scope: !9310)
!9321 = !DILocation(line: 4905, column: 54, scope: !9310)
!9322 = !DILocation(line: 4906, column: 53, scope: !9310)
!9323 = !DILocation(line: 4908, column: 20, scope: !9310)
!9324 = !DILocation(line: 4908, column: 22, scope: !9310)
!9325 = !DILocation(line: 4908, column: 56, scope: !9310)
!9326 = !DILocation(line: 4909, column: 55, scope: !9310)
!9327 = !DILocation(line: 4907, column: 69, scope: !9310)
!9328 = !DILocation(line: 4911, column: 19, scope: !9310)
!9329 = !DILocation(line: 4911, column: 21, scope: !9310)
!9330 = !DILocation(line: 4911, column: 54, scope: !9310)
!9331 = !DILocation(line: 4910, column: 43, scope: !9310)
!9332 = !DILocation(line: 4905, column: 15, scope: !9310)
!9333 = !DILocation(line: 4914, column: 21, scope: !9310)
!9334 = !DILocation(line: 4914, column: 36, scope: !9310)
!9335 = !DILocation(line: 4914, column: 16, scope: !9310)
!9336 = !DILocation(line: 4914, column: 19, scope: !9310)
!9337 = !DILocation(line: 4915, column: 10, scope: !9310)
!9338 = !DILocation(line: 4892, column: 38, scope: !9305)
!9339 = !DILocation(line: 4892, column: 10, scope: !9305)
!9340 = distinct !{!9340, !9308, !9341}
!9341 = !DILocation(line: 4915, column: 10, scope: !9302)
!9342 = !DILocation(line: 4917, column: 10, scope: !9289)
!9343 = !DILocation(line: 4917, column: 20, scope: !9289)
!9344 = !DILocation(line: 4917, column: 31, scope: !9289)
!9345 = !DILocation(line: 4918, column: 10, scope: !9289)
!9346 = !DILocation(line: 4918, column: 20, scope: !9289)
!9347 = !DILocation(line: 4918, column: 29, scope: !9289)
!9348 = !DILocation(line: 4919, column: 34, scope: !9289)
!9349 = !DILocation(line: 4919, column: 44, scope: !9289)
!9350 = !DILocation(line: 4919, column: 10, scope: !9289)
!9351 = !DILocation(line: 4919, column: 20, scope: !9289)
!9352 = !DILocation(line: 4919, column: 32, scope: !9289)
!9353 = !DILocation(line: 4920, column: 31, scope: !9289)
!9354 = !DILocation(line: 4920, column: 10, scope: !9289)
!9355 = !DILocation(line: 4920, column: 20, scope: !9289)
!9356 = !DILocation(line: 4920, column: 29, scope: !9289)
!9357 = !DILocation(line: 4921, column: 7, scope: !9289)
!9358 = !DILocation(line: 4923, column: 16, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4923, column: 16)
!9360 = !DILocation(line: 4923, column: 26, scope: !9359)
!9361 = !DILocation(line: 4923, column: 37, scope: !9359)
!9362 = !DILocation(line: 4923, column: 65, scope: !9359)
!9363 = !DILocation(line: 4924, column: 10, scope: !9359)
!9364 = !DILocation(line: 4924, column: 25, scope: !9359)
!9365 = !DILocation(line: 4923, column: 16, scope: !9281)
!9366 = !DILocalVariable(name: "r", scope: !9367, file: !1, line: 4926, type: !12)
!9367 = distinct !DILexicalBlock(scope: !9359, file: !1, line: 4925, column: 7)
!9368 = !DILocation(line: 4926, column: 14, scope: !9367)
!9369 = !DILocalVariable(name: "g", scope: !9367, file: !1, line: 4926, type: !12)
!9370 = !DILocation(line: 4926, column: 17, scope: !9367)
!9371 = !DILocalVariable(name: "b", scope: !9367, file: !1, line: 4926, type: !12)
!9372 = !DILocation(line: 4926, column: 20, scope: !9367)
!9373 = !DILocalVariable(name: "p", scope: !9367, file: !1, line: 4926, type: !12)
!9374 = !DILocation(line: 4926, column: 23, scope: !9367)
!9375 = !DILocation(line: 4927, column: 15, scope: !9367)
!9376 = !DILocation(line: 4927, column: 13, scope: !9367)
!9377 = !DILocation(line: 4928, column: 15, scope: !9367)
!9378 = !DILocation(line: 4928, column: 13, scope: !9367)
!9379 = !DILocation(line: 4929, column: 17, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9367, file: !1, line: 4929, column: 10)
!9381 = !DILocation(line: 4929, column: 15, scope: !9380)
!9382 = !DILocation(line: 4929, column: 22, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9380, file: !1, line: 4929, column: 10)
!9384 = !DILocation(line: 4929, column: 26, scope: !9383)
!9385 = !DILocation(line: 4929, column: 24, scope: !9383)
!9386 = !DILocation(line: 4929, column: 10, scope: !9380)
!9387 = !DILocation(line: 4931, column: 20, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9383, file: !1, line: 4930, column: 10)
!9389 = !DILocation(line: 4931, column: 17, scope: !9388)
!9390 = !DILocation(line: 4931, column: 15, scope: !9388)
!9391 = !DILocation(line: 4932, column: 20, scope: !9388)
!9392 = !DILocation(line: 4932, column: 17, scope: !9388)
!9393 = !DILocation(line: 4932, column: 15, scope: !9388)
!9394 = !DILocation(line: 4933, column: 20, scope: !9388)
!9395 = !DILocation(line: 4933, column: 17, scope: !9388)
!9396 = !DILocation(line: 4933, column: 15, scope: !9388)
!9397 = !DILocation(line: 4934, column: 15, scope: !9388)
!9398 = !DILocation(line: 4936, column: 20, scope: !9388)
!9399 = !DILocation(line: 4936, column: 22, scope: !9388)
!9400 = !DILocation(line: 4936, column: 54, scope: !9388)
!9401 = !DILocation(line: 4937, column: 53, scope: !9388)
!9402 = !DILocation(line: 4939, column: 20, scope: !9388)
!9403 = !DILocation(line: 4939, column: 22, scope: !9388)
!9404 = !DILocation(line: 4939, column: 56, scope: !9388)
!9405 = !DILocation(line: 4940, column: 55, scope: !9388)
!9406 = !DILocation(line: 4938, column: 69, scope: !9388)
!9407 = !DILocation(line: 4942, column: 19, scope: !9388)
!9408 = !DILocation(line: 4942, column: 21, scope: !9388)
!9409 = !DILocation(line: 4942, column: 54, scope: !9388)
!9410 = !DILocation(line: 4941, column: 43, scope: !9388)
!9411 = !DILocation(line: 4936, column: 15, scope: !9388)
!9412 = !DILocation(line: 4945, column: 21, scope: !9388)
!9413 = !DILocation(line: 4945, column: 36, scope: !9388)
!9414 = !DILocation(line: 4945, column: 16, scope: !9388)
!9415 = !DILocation(line: 4945, column: 19, scope: !9388)
!9416 = !DILocation(line: 4946, column: 10, scope: !9388)
!9417 = !DILocation(line: 4929, column: 38, scope: !9383)
!9418 = !DILocation(line: 4929, column: 10, scope: !9383)
!9419 = distinct !{!9419, !9386, !9420}
!9420 = !DILocation(line: 4946, column: 10, scope: !9380)
!9421 = !DILocation(line: 4948, column: 10, scope: !9367)
!9422 = !DILocation(line: 4948, column: 20, scope: !9367)
!9423 = !DILocation(line: 4948, column: 31, scope: !9367)
!9424 = !DILocation(line: 4949, column: 10, scope: !9367)
!9425 = !DILocation(line: 4949, column: 20, scope: !9367)
!9426 = !DILocation(line: 4949, column: 29, scope: !9367)
!9427 = !DILocation(line: 4950, column: 34, scope: !9367)
!9428 = !DILocation(line: 4950, column: 44, scope: !9367)
!9429 = !DILocation(line: 4950, column: 10, scope: !9367)
!9430 = !DILocation(line: 4950, column: 20, scope: !9367)
!9431 = !DILocation(line: 4950, column: 32, scope: !9367)
!9432 = !DILocation(line: 4951, column: 31, scope: !9367)
!9433 = !DILocation(line: 4951, column: 10, scope: !9367)
!9434 = !DILocation(line: 4951, column: 20, scope: !9367)
!9435 = !DILocation(line: 4951, column: 29, scope: !9367)
!9436 = !DILocation(line: 4952, column: 7, scope: !9367)
!9437 = !DILocation(line: 4954, column: 16, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9359, file: !1, line: 4954, column: 16)
!9439 = !DILocation(line: 4954, column: 26, scope: !9438)
!9440 = !DILocation(line: 4954, column: 37, scope: !9438)
!9441 = !DILocation(line: 4954, column: 63, scope: !9438)
!9442 = !DILocation(line: 4955, column: 10, scope: !9438)
!9443 = !DILocation(line: 4954, column: 16, scope: !9359)
!9444 = !DILocation(line: 4957, column: 15, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9438, file: !1, line: 4956, column: 7)
!9446 = !DILocation(line: 4957, column: 13, scope: !9445)
!9447 = !DILocation(line: 4959, column: 17, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9445, file: !1, line: 4959, column: 10)
!9449 = !DILocation(line: 4959, column: 15, scope: !9448)
!9450 = !DILocation(line: 4959, column: 22, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9448, file: !1, line: 4959, column: 10)
!9452 = !DILocation(line: 4959, column: 26, scope: !9451)
!9453 = !DILocation(line: 4959, column: 24, scope: !9451)
!9454 = !DILocation(line: 4959, column: 10, scope: !9448)
!9455 = !DILocation(line: 4961, column: 19, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9451, file: !1, line: 4960, column: 10)
!9457 = !DILocation(line: 4961, column: 36, scope: !9456)
!9458 = !DILocation(line: 4961, column: 35, scope: !9456)
!9459 = !DILocation(line: 4961, column: 14, scope: !9456)
!9460 = !DILocation(line: 4961, column: 17, scope: !9456)
!9461 = !DILocation(line: 4962, column: 10, scope: !9456)
!9462 = !DILocation(line: 4959, column: 38, scope: !9451)
!9463 = !DILocation(line: 4959, column: 44, scope: !9451)
!9464 = !DILocation(line: 4959, column: 10, scope: !9451)
!9465 = distinct !{!9465, !9454, !9466}
!9466 = !DILocation(line: 4962, column: 10, scope: !9448)
!9467 = !DILocation(line: 4963, column: 7, scope: !9445)
!9468 = !DILocation(line: 4964, column: 4, scope: !9282)
!9469 = !DILocation(line: 4965, column: 1, scope: !9254)
!9470 = distinct !DISubprogram(name: "png_do_expand_16", scope: !1, file: !1, line: 4848, type: !5936, scopeLine: 4849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9471 = !DILocalVariable(name: "row_info", arg: 1, scope: !9470, file: !1, line: 4848, type: !101)
!9472 = !DILocation(line: 4848, column: 32, scope: !9470)
!9473 = !DILocalVariable(name: "row", arg: 2, scope: !9470, file: !1, line: 4848, type: !8)
!9474 = !DILocation(line: 4848, column: 52, scope: !9470)
!9475 = !DILocation(line: 4850, column: 8, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9470, file: !1, line: 4850, column: 8)
!9477 = !DILocation(line: 4850, column: 18, scope: !9476)
!9478 = !DILocation(line: 4850, column: 28, scope: !9476)
!9479 = !DILocation(line: 4850, column: 33, scope: !9476)
!9480 = !DILocation(line: 4851, column: 7, scope: !9476)
!9481 = !DILocation(line: 4851, column: 17, scope: !9476)
!9482 = !DILocation(line: 4851, column: 28, scope: !9476)
!9483 = !DILocation(line: 4850, column: 8, scope: !9470)
!9484 = !DILocalVariable(name: "sp", scope: !9485, file: !1, line: 4862, type: !9)
!9485 = distinct !DILexicalBlock(scope: !9476, file: !1, line: 4852, column: 4)
!9486 = !DILocation(line: 4862, column: 17, scope: !9485)
!9487 = !DILocation(line: 4862, column: 22, scope: !9485)
!9488 = !DILocation(line: 4862, column: 28, scope: !9485)
!9489 = !DILocation(line: 4862, column: 38, scope: !9485)
!9490 = !DILocation(line: 4862, column: 26, scope: !9485)
!9491 = !DILocalVariable(name: "dp", scope: !9485, file: !1, line: 4863, type: !9)
!9492 = !DILocation(line: 4863, column: 17, scope: !9485)
!9493 = !DILocation(line: 4863, column: 22, scope: !9485)
!9494 = !DILocation(line: 4863, column: 27, scope: !9485)
!9495 = !DILocation(line: 4863, column: 37, scope: !9485)
!9496 = !DILocation(line: 4863, column: 25, scope: !9485)
!9497 = !DILocation(line: 4864, column: 7, scope: !9485)
!9498 = !DILocation(line: 4864, column: 14, scope: !9485)
!9499 = !DILocation(line: 4864, column: 19, scope: !9485)
!9500 = !DILocation(line: 4864, column: 17, scope: !9485)
!9501 = !DILocation(line: 4865, column: 29, scope: !9485)
!9502 = !DILocation(line: 4865, column: 28, scope: !9485)
!9503 = !DILocation(line: 4865, column: 19, scope: !9485)
!9504 = !DILocation(line: 4865, column: 26, scope: !9485)
!9505 = !DILocation(line: 4865, column: 10, scope: !9485)
!9506 = !DILocation(line: 4865, column: 17, scope: !9485)
!9507 = !DILocation(line: 4865, column: 38, scope: !9485)
!9508 = distinct !{!9508, !9497, !9509}
!9509 = !DILocation(line: 4865, column: 41, scope: !9485)
!9510 = !DILocation(line: 4867, column: 7, scope: !9485)
!9511 = !DILocation(line: 4867, column: 17, scope: !9485)
!9512 = !DILocation(line: 4867, column: 26, scope: !9485)
!9513 = !DILocation(line: 4868, column: 7, scope: !9485)
!9514 = !DILocation(line: 4868, column: 17, scope: !9485)
!9515 = !DILocation(line: 4868, column: 27, scope: !9485)
!9516 = !DILocation(line: 4869, column: 42, scope: !9485)
!9517 = !DILocation(line: 4869, column: 52, scope: !9485)
!9518 = !DILocation(line: 4869, column: 61, scope: !9485)
!9519 = !DILocation(line: 4869, column: 31, scope: !9485)
!9520 = !DILocation(line: 4869, column: 7, scope: !9485)
!9521 = !DILocation(line: 4869, column: 17, scope: !9485)
!9522 = !DILocation(line: 4869, column: 29, scope: !9485)
!9523 = !DILocation(line: 4870, column: 4, scope: !9485)
!9524 = !DILocation(line: 4871, column: 1, scope: !9470)
!9525 = distinct !DISubprogram(name: "png_do_unshift", scope: !1, file: !1, line: 2476, type: !9526, scopeLine: 2478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{null, !101, !8, !9528}
!9528 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_color_8p", file: !40, line: 584, baseType: !9529)
!9529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9530, size: 64)
!9530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!9531 = !DILocalVariable(name: "row_info", arg: 1, scope: !9525, file: !1, line: 2476, type: !101)
!9532 = !DILocation(line: 2476, column: 30, scope: !9525)
!9533 = !DILocalVariable(name: "row", arg: 2, scope: !9525, file: !1, line: 2476, type: !8)
!9534 = !DILocation(line: 2476, column: 50, scope: !9525)
!9535 = !DILocalVariable(name: "sig_bits", arg: 3, scope: !9525, file: !1, line: 2477, type: !9528)
!9536 = !DILocation(line: 2477, column: 24, scope: !9525)
!9537 = !DILocalVariable(name: "color_type", scope: !9525, file: !1, line: 2479, type: !12)
!9538 = !DILocation(line: 2479, column: 8, scope: !9525)
!9539 = !DILocation(line: 2484, column: 17, scope: !9525)
!9540 = !DILocation(line: 2484, column: 27, scope: !9525)
!9541 = !DILocation(line: 2484, column: 15, scope: !9525)
!9542 = !DILocation(line: 2486, column: 8, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9525, file: !1, line: 2486, column: 8)
!9544 = !DILocation(line: 2486, column: 19, scope: !9543)
!9545 = !DILocation(line: 2486, column: 8, scope: !9525)
!9546 = !DILocalVariable(name: "shift", scope: !9547, file: !1, line: 2488, type: !9548)
!9547 = distinct !DILexicalBlock(scope: !9543, file: !1, line: 2487, column: 4)
!9548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 128, elements: !480)
!9549 = !DILocation(line: 2488, column: 11, scope: !9547)
!9550 = !DILocalVariable(name: "channels", scope: !9547, file: !1, line: 2489, type: !12)
!9551 = !DILocation(line: 2489, column: 11, scope: !9547)
!9552 = !DILocalVariable(name: "bit_depth", scope: !9547, file: !1, line: 2490, type: !12)
!9553 = !DILocation(line: 2490, column: 11, scope: !9547)
!9554 = !DILocation(line: 2490, column: 23, scope: !9547)
!9555 = !DILocation(line: 2490, column: 33, scope: !9547)
!9556 = !DILocation(line: 2492, column: 11, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9547, file: !1, line: 2492, column: 11)
!9558 = !DILocation(line: 2492, column: 22, scope: !9557)
!9559 = !DILocation(line: 2492, column: 11, scope: !9547)
!9560 = !DILocation(line: 2494, column: 30, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9557, file: !1, line: 2493, column: 7)
!9562 = !DILocation(line: 2494, column: 42, scope: !9561)
!9563 = !DILocation(line: 2494, column: 52, scope: !9561)
!9564 = !DILocation(line: 2494, column: 40, scope: !9561)
!9565 = !DILocation(line: 2494, column: 24, scope: !9561)
!9566 = !DILocation(line: 2494, column: 10, scope: !9561)
!9567 = !DILocation(line: 2494, column: 28, scope: !9561)
!9568 = !DILocation(line: 2495, column: 30, scope: !9561)
!9569 = !DILocation(line: 2495, column: 42, scope: !9561)
!9570 = !DILocation(line: 2495, column: 52, scope: !9561)
!9571 = !DILocation(line: 2495, column: 40, scope: !9561)
!9572 = !DILocation(line: 2495, column: 24, scope: !9561)
!9573 = !DILocation(line: 2495, column: 10, scope: !9561)
!9574 = !DILocation(line: 2495, column: 28, scope: !9561)
!9575 = !DILocation(line: 2496, column: 30, scope: !9561)
!9576 = !DILocation(line: 2496, column: 42, scope: !9561)
!9577 = !DILocation(line: 2496, column: 52, scope: !9561)
!9578 = !DILocation(line: 2496, column: 40, scope: !9561)
!9579 = !DILocation(line: 2496, column: 24, scope: !9561)
!9580 = !DILocation(line: 2496, column: 10, scope: !9561)
!9581 = !DILocation(line: 2496, column: 28, scope: !9561)
!9582 = !DILocation(line: 2497, column: 7, scope: !9561)
!9583 = !DILocation(line: 2501, column: 30, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9557, file: !1, line: 2500, column: 7)
!9585 = !DILocation(line: 2501, column: 42, scope: !9584)
!9586 = !DILocation(line: 2501, column: 52, scope: !9584)
!9587 = !DILocation(line: 2501, column: 40, scope: !9584)
!9588 = !DILocation(line: 2501, column: 24, scope: !9584)
!9589 = !DILocation(line: 2501, column: 10, scope: !9584)
!9590 = !DILocation(line: 2501, column: 28, scope: !9584)
!9591 = !DILocation(line: 2504, column: 11, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9547, file: !1, line: 2504, column: 11)
!9593 = !DILocation(line: 2504, column: 22, scope: !9592)
!9594 = !DILocation(line: 2504, column: 11, scope: !9547)
!9595 = !DILocation(line: 2506, column: 30, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !1, line: 2505, column: 7)
!9597 = !DILocation(line: 2506, column: 42, scope: !9596)
!9598 = !DILocation(line: 2506, column: 52, scope: !9596)
!9599 = !DILocation(line: 2506, column: 40, scope: !9596)
!9600 = !DILocation(line: 2506, column: 24, scope: !9596)
!9601 = !DILocation(line: 2506, column: 10, scope: !9596)
!9602 = !DILocation(line: 2506, column: 28, scope: !9596)
!9603 = !DILocation(line: 2507, column: 7, scope: !9596)
!9604 = !DILocalVariable(name: "c", scope: !9605, file: !1, line: 2510, type: !12)
!9605 = distinct !DILexicalBlock(scope: !9547, file: !1, line: 2509, column: 7)
!9606 = !DILocation(line: 2510, column: 14, scope: !9605)
!9607 = !DILocalVariable(name: "have_shift", scope: !9605, file: !1, line: 2510, type: !12)
!9608 = !DILocation(line: 2510, column: 17, scope: !9605)
!9609 = !DILocation(line: 2512, column: 30, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9605, file: !1, line: 2512, column: 10)
!9611 = !DILocation(line: 2512, column: 17, scope: !9610)
!9612 = !DILocation(line: 2512, column: 15, scope: !9610)
!9613 = !DILocation(line: 2512, column: 35, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1, line: 2512, column: 10)
!9615 = !DILocation(line: 2512, column: 39, scope: !9614)
!9616 = !DILocation(line: 2512, column: 37, scope: !9614)
!9617 = !DILocation(line: 2512, column: 10, scope: !9610)
!9618 = !DILocation(line: 2517, column: 23, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !1, line: 2517, column: 17)
!9620 = distinct !DILexicalBlock(scope: !9614, file: !1, line: 2513, column: 10)
!9621 = !DILocation(line: 2517, column: 17, scope: !9619)
!9622 = !DILocation(line: 2517, column: 26, scope: !9619)
!9623 = !DILocation(line: 2517, column: 31, scope: !9619)
!9624 = !DILocation(line: 2517, column: 40, scope: !9619)
!9625 = !DILocation(line: 2517, column: 34, scope: !9619)
!9626 = !DILocation(line: 2517, column: 46, scope: !9619)
!9627 = !DILocation(line: 2517, column: 43, scope: !9619)
!9628 = !DILocation(line: 2517, column: 17, scope: !9620)
!9629 = !DILocation(line: 2518, column: 22, scope: !9619)
!9630 = !DILocation(line: 2518, column: 16, scope: !9619)
!9631 = !DILocation(line: 2518, column: 25, scope: !9619)
!9632 = !DILocation(line: 2521, column: 27, scope: !9619)
!9633 = !DILocation(line: 2522, column: 10, scope: !9620)
!9634 = !DILocation(line: 2512, column: 49, scope: !9614)
!9635 = !DILocation(line: 2512, column: 10, scope: !9614)
!9636 = distinct !{!9636, !9617, !9637}
!9637 = !DILocation(line: 2522, column: 10, scope: !9610)
!9638 = !DILocation(line: 2524, column: 15, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9605, file: !1, line: 2524, column: 14)
!9640 = !DILocation(line: 2524, column: 14, scope: !9605)
!9641 = !DILocation(line: 2525, column: 13, scope: !9639)
!9642 = !DILocation(line: 2528, column: 15, scope: !9547)
!9643 = !DILocation(line: 2528, column: 7, scope: !9547)
!9644 = !DILocation(line: 2533, column: 13, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9547, file: !1, line: 2529, column: 7)
!9646 = !DILocalVariable(name: "bp", scope: !9647, file: !1, line: 2539, type: !8)
!9647 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 2538, column: 10)
!9648 = !DILocation(line: 2539, column: 23, scope: !9647)
!9649 = !DILocation(line: 2539, column: 28, scope: !9647)
!9650 = !DILocalVariable(name: "bp_end", scope: !9647, file: !1, line: 2540, type: !8)
!9651 = !DILocation(line: 2540, column: 23, scope: !9647)
!9652 = !DILocation(line: 2540, column: 32, scope: !9647)
!9653 = !DILocation(line: 2540, column: 37, scope: !9647)
!9654 = !DILocation(line: 2540, column: 47, scope: !9647)
!9655 = !DILocation(line: 2540, column: 35, scope: !9647)
!9656 = !DILocation(line: 2542, column: 13, scope: !9647)
!9657 = !DILocation(line: 2542, column: 20, scope: !9647)
!9658 = !DILocation(line: 2542, column: 25, scope: !9647)
!9659 = !DILocation(line: 2542, column: 23, scope: !9647)
!9660 = !DILocalVariable(name: "b", scope: !9661, file: !1, line: 2544, type: !12)
!9661 = distinct !DILexicalBlock(scope: !9647, file: !1, line: 2543, column: 13)
!9662 = !DILocation(line: 2544, column: 20, scope: !9661)
!9663 = !DILocation(line: 2544, column: 26, scope: !9661)
!9664 = !DILocation(line: 2544, column: 25, scope: !9661)
!9665 = !DILocation(line: 2544, column: 29, scope: !9661)
!9666 = !DILocation(line: 2544, column: 35, scope: !9661)
!9667 = !DILocation(line: 2545, column: 34, scope: !9661)
!9668 = !DILocation(line: 2545, column: 24, scope: !9661)
!9669 = !DILocation(line: 2545, column: 19, scope: !9661)
!9670 = !DILocation(line: 2545, column: 22, scope: !9661)
!9671 = distinct !{!9671, !9656, !9672}
!9672 = !DILocation(line: 2546, column: 13, scope: !9647)
!9673 = !DILocation(line: 2547, column: 13, scope: !9647)
!9674 = !DILocalVariable(name: "bp", scope: !9675, file: !1, line: 2554, type: !8)
!9675 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 2553, column: 10)
!9676 = !DILocation(line: 2554, column: 23, scope: !9675)
!9677 = !DILocation(line: 2554, column: 28, scope: !9675)
!9678 = !DILocalVariable(name: "bp_end", scope: !9675, file: !1, line: 2555, type: !8)
!9679 = !DILocation(line: 2555, column: 23, scope: !9675)
!9680 = !DILocation(line: 2555, column: 32, scope: !9675)
!9681 = !DILocation(line: 2555, column: 37, scope: !9675)
!9682 = !DILocation(line: 2555, column: 47, scope: !9675)
!9683 = !DILocation(line: 2555, column: 35, scope: !9675)
!9684 = !DILocalVariable(name: "gray_shift", scope: !9675, file: !1, line: 2556, type: !12)
!9685 = !DILocation(line: 2556, column: 17, scope: !9675)
!9686 = !DILocation(line: 2556, column: 30, scope: !9675)
!9687 = !DILocalVariable(name: "mask", scope: !9675, file: !1, line: 2557, type: !12)
!9688 = !DILocation(line: 2557, column: 17, scope: !9675)
!9689 = !DILocation(line: 2557, column: 32, scope: !9675)
!9690 = !DILocation(line: 2557, column: 29, scope: !9675)
!9691 = !DILocation(line: 2559, column: 21, scope: !9675)
!9692 = !DILocation(line: 2559, column: 26, scope: !9675)
!9693 = !DILocation(line: 2559, column: 18, scope: !9675)
!9694 = !DILocation(line: 2561, column: 13, scope: !9675)
!9695 = !DILocation(line: 2561, column: 20, scope: !9675)
!9696 = !DILocation(line: 2561, column: 25, scope: !9675)
!9697 = !DILocation(line: 2561, column: 23, scope: !9675)
!9698 = !DILocalVariable(name: "b", scope: !9699, file: !1, line: 2563, type: !12)
!9699 = distinct !DILexicalBlock(scope: !9675, file: !1, line: 2562, column: 13)
!9700 = !DILocation(line: 2563, column: 20, scope: !9699)
!9701 = !DILocation(line: 2563, column: 26, scope: !9699)
!9702 = !DILocation(line: 2563, column: 25, scope: !9699)
!9703 = !DILocation(line: 2563, column: 32, scope: !9699)
!9704 = !DILocation(line: 2563, column: 29, scope: !9699)
!9705 = !DILocation(line: 2563, column: 46, scope: !9699)
!9706 = !DILocation(line: 2563, column: 44, scope: !9699)
!9707 = !DILocation(line: 2564, column: 34, scope: !9699)
!9708 = !DILocation(line: 2564, column: 24, scope: !9699)
!9709 = !DILocation(line: 2564, column: 19, scope: !9699)
!9710 = !DILocation(line: 2564, column: 22, scope: !9699)
!9711 = distinct !{!9711, !9694, !9712}
!9712 = !DILocation(line: 2565, column: 13, scope: !9675)
!9713 = !DILocation(line: 2566, column: 13, scope: !9675)
!9714 = !DILocalVariable(name: "bp", scope: !9715, file: !1, line: 2572, type: !8)
!9715 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 2571, column: 10)
!9716 = !DILocation(line: 2572, column: 23, scope: !9715)
!9717 = !DILocation(line: 2572, column: 28, scope: !9715)
!9718 = !DILocalVariable(name: "bp_end", scope: !9715, file: !1, line: 2573, type: !8)
!9719 = !DILocation(line: 2573, column: 23, scope: !9715)
!9720 = !DILocation(line: 2573, column: 32, scope: !9715)
!9721 = !DILocation(line: 2573, column: 37, scope: !9715)
!9722 = !DILocation(line: 2573, column: 47, scope: !9715)
!9723 = !DILocation(line: 2573, column: 35, scope: !9715)
!9724 = !DILocalVariable(name: "channel", scope: !9715, file: !1, line: 2574, type: !12)
!9725 = !DILocation(line: 2574, column: 17, scope: !9715)
!9726 = !DILocation(line: 2576, column: 13, scope: !9715)
!9727 = !DILocation(line: 2576, column: 20, scope: !9715)
!9728 = !DILocation(line: 2576, column: 25, scope: !9715)
!9729 = !DILocation(line: 2576, column: 23, scope: !9715)
!9730 = !DILocalVariable(name: "b", scope: !9731, file: !1, line: 2578, type: !12)
!9731 = distinct !DILexicalBlock(scope: !9715, file: !1, line: 2577, column: 13)
!9732 = !DILocation(line: 2578, column: 20, scope: !9731)
!9733 = !DILocation(line: 2578, column: 25, scope: !9731)
!9734 = !DILocation(line: 2578, column: 24, scope: !9731)
!9735 = !DILocation(line: 2578, column: 37, scope: !9731)
!9736 = !DILocation(line: 2578, column: 31, scope: !9731)
!9737 = !DILocation(line: 2578, column: 28, scope: !9731)
!9738 = !DILocation(line: 2579, column: 20, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9731, file: !1, line: 2579, column: 20)
!9740 = !DILocation(line: 2579, column: 33, scope: !9739)
!9741 = !DILocation(line: 2579, column: 30, scope: !9739)
!9742 = !DILocation(line: 2579, column: 20, scope: !9731)
!9743 = !DILocation(line: 2580, column: 27, scope: !9739)
!9744 = !DILocation(line: 2580, column: 19, scope: !9739)
!9745 = !DILocation(line: 2581, column: 34, scope: !9731)
!9746 = !DILocation(line: 2581, column: 24, scope: !9731)
!9747 = !DILocation(line: 2581, column: 19, scope: !9731)
!9748 = !DILocation(line: 2581, column: 22, scope: !9731)
!9749 = distinct !{!9749, !9726, !9750}
!9750 = !DILocation(line: 2582, column: 13, scope: !9715)
!9751 = !DILocation(line: 2583, column: 13, scope: !9715)
!9752 = !DILocalVariable(name: "bp", scope: !9753, file: !1, line: 2590, type: !8)
!9753 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 2589, column: 10)
!9754 = !DILocation(line: 2590, column: 23, scope: !9753)
!9755 = !DILocation(line: 2590, column: 28, scope: !9753)
!9756 = !DILocalVariable(name: "bp_end", scope: !9753, file: !1, line: 2591, type: !8)
!9757 = !DILocation(line: 2591, column: 23, scope: !9753)
!9758 = !DILocation(line: 2591, column: 32, scope: !9753)
!9759 = !DILocation(line: 2591, column: 37, scope: !9753)
!9760 = !DILocation(line: 2591, column: 47, scope: !9753)
!9761 = !DILocation(line: 2591, column: 35, scope: !9753)
!9762 = !DILocalVariable(name: "channel", scope: !9753, file: !1, line: 2592, type: !12)
!9763 = !DILocation(line: 2592, column: 17, scope: !9753)
!9764 = !DILocation(line: 2594, column: 13, scope: !9753)
!9765 = !DILocation(line: 2594, column: 20, scope: !9753)
!9766 = !DILocation(line: 2594, column: 25, scope: !9753)
!9767 = !DILocation(line: 2594, column: 23, scope: !9753)
!9768 = !DILocalVariable(name: "value", scope: !9769, file: !1, line: 2596, type: !12)
!9769 = distinct !DILexicalBlock(scope: !9753, file: !1, line: 2595, column: 13)
!9770 = !DILocation(line: 2596, column: 20, scope: !9769)
!9771 = !DILocation(line: 2596, column: 29, scope: !9769)
!9772 = !DILocation(line: 2596, column: 35, scope: !9769)
!9773 = !DILocation(line: 2596, column: 43, scope: !9769)
!9774 = !DILocation(line: 2596, column: 41, scope: !9769)
!9775 = !DILocation(line: 2598, column: 32, scope: !9769)
!9776 = !DILocation(line: 2598, column: 26, scope: !9769)
!9777 = !DILocation(line: 2598, column: 22, scope: !9769)
!9778 = !DILocation(line: 2599, column: 20, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9769, file: !1, line: 2599, column: 20)
!9780 = !DILocation(line: 2599, column: 33, scope: !9779)
!9781 = !DILocation(line: 2599, column: 30, scope: !9779)
!9782 = !DILocation(line: 2599, column: 20, scope: !9769)
!9783 = !DILocation(line: 2600, column: 27, scope: !9779)
!9784 = !DILocation(line: 2600, column: 19, scope: !9779)
!9785 = !DILocation(line: 2601, column: 35, scope: !9769)
!9786 = !DILocation(line: 2601, column: 41, scope: !9769)
!9787 = !DILocation(line: 2601, column: 24, scope: !9769)
!9788 = !DILocation(line: 2601, column: 19, scope: !9769)
!9789 = !DILocation(line: 2601, column: 22, scope: !9769)
!9790 = !DILocation(line: 2602, column: 35, scope: !9769)
!9791 = !DILocation(line: 2602, column: 41, scope: !9769)
!9792 = !DILocation(line: 2602, column: 24, scope: !9769)
!9793 = !DILocation(line: 2602, column: 19, scope: !9769)
!9794 = !DILocation(line: 2602, column: 22, scope: !9769)
!9795 = distinct !{!9795, !9764, !9796}
!9796 = !DILocation(line: 2603, column: 13, scope: !9753)
!9797 = !DILocation(line: 2604, column: 13, scope: !9753)
!9798 = !DILocation(line: 2608, column: 4, scope: !9547)
!9799 = !DILocation(line: 2609, column: 1, scope: !9525)
!9800 = distinct !DISubprogram(name: "png_do_unpack", scope: !1, file: !1, line: 2378, type: !5936, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9801 = !DILocalVariable(name: "row_info", arg: 1, scope: !9800, file: !1, line: 2378, type: !101)
!9802 = !DILocation(line: 2378, column: 29, scope: !9800)
!9803 = !DILocalVariable(name: "row", arg: 2, scope: !9800, file: !1, line: 2378, type: !8)
!9804 = !DILocation(line: 2378, column: 49, scope: !9800)
!9805 = !DILocation(line: 2382, column: 8, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9800, file: !1, line: 2382, column: 8)
!9807 = !DILocation(line: 2382, column: 18, scope: !9806)
!9808 = !DILocation(line: 2382, column: 28, scope: !9806)
!9809 = !DILocation(line: 2382, column: 8, scope: !9800)
!9810 = !DILocalVariable(name: "i", scope: !9811, file: !1, line: 2384, type: !10)
!9811 = distinct !DILexicalBlock(scope: !9806, file: !1, line: 2383, column: 4)
!9812 = !DILocation(line: 2384, column: 19, scope: !9811)
!9813 = !DILocalVariable(name: "row_width", scope: !9811, file: !1, line: 2385, type: !10)
!9814 = !DILocation(line: 2385, column: 19, scope: !9811)
!9815 = !DILocation(line: 2385, column: 29, scope: !9811)
!9816 = !DILocation(line: 2385, column: 39, scope: !9811)
!9817 = !DILocation(line: 2387, column: 15, scope: !9811)
!9818 = !DILocation(line: 2387, column: 25, scope: !9811)
!9819 = !DILocation(line: 2387, column: 7, scope: !9811)
!9820 = !DILocalVariable(name: "sp", scope: !9821, file: !1, line: 2391, type: !8)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !1, line: 2390, column: 10)
!9822 = distinct !DILexicalBlock(scope: !9811, file: !1, line: 2388, column: 7)
!9823 = !DILocation(line: 2391, column: 23, scope: !9821)
!9824 = !DILocation(line: 2391, column: 28, scope: !9821)
!9825 = !DILocation(line: 2391, column: 48, scope: !9821)
!9826 = !DILocation(line: 2391, column: 58, scope: !9821)
!9827 = !DILocation(line: 2391, column: 63, scope: !9821)
!9828 = !DILocation(line: 2391, column: 34, scope: !9821)
!9829 = !DILocation(line: 2391, column: 32, scope: !9821)
!9830 = !DILocalVariable(name: "dp", scope: !9821, file: !1, line: 2392, type: !8)
!9831 = !DILocation(line: 2392, column: 23, scope: !9821)
!9832 = !DILocation(line: 2392, column: 28, scope: !9821)
!9833 = !DILocation(line: 2392, column: 46, scope: !9821)
!9834 = !DILocation(line: 2392, column: 34, scope: !9821)
!9835 = !DILocation(line: 2392, column: 32, scope: !9821)
!9836 = !DILocation(line: 2392, column: 56, scope: !9821)
!9837 = !DILocalVariable(name: "shift", scope: !9821, file: !1, line: 2393, type: !10)
!9838 = !DILocation(line: 2393, column: 25, scope: !9821)
!9839 = !DILocation(line: 2393, column: 44, scope: !9821)
!9840 = !DILocation(line: 2393, column: 54, scope: !9821)
!9841 = !DILocation(line: 2393, column: 59, scope: !9821)
!9842 = !DILocation(line: 2393, column: 35, scope: !9821)
!9843 = !DILocation(line: 2394, column: 20, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9821, file: !1, line: 2394, column: 13)
!9845 = !DILocation(line: 2394, column: 18, scope: !9844)
!9846 = !DILocation(line: 2394, column: 25, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9844, file: !1, line: 2394, column: 13)
!9848 = !DILocation(line: 2394, column: 29, scope: !9847)
!9849 = !DILocation(line: 2394, column: 27, scope: !9847)
!9850 = !DILocation(line: 2394, column: 13, scope: !9844)
!9851 = !DILocation(line: 2396, column: 35, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9847, file: !1, line: 2395, column: 13)
!9853 = !DILocation(line: 2396, column: 34, scope: !9852)
!9854 = !DILocation(line: 2396, column: 41, scope: !9852)
!9855 = !DILocation(line: 2396, column: 38, scope: !9852)
!9856 = !DILocation(line: 2396, column: 48, scope: !9852)
!9857 = !DILocation(line: 2396, column: 22, scope: !9852)
!9858 = !DILocation(line: 2396, column: 17, scope: !9852)
!9859 = !DILocation(line: 2396, column: 20, scope: !9852)
!9860 = !DILocation(line: 2398, column: 20, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9852, file: !1, line: 2398, column: 20)
!9862 = !DILocation(line: 2398, column: 26, scope: !9861)
!9863 = !DILocation(line: 2398, column: 20, scope: !9852)
!9864 = !DILocation(line: 2400, column: 25, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9861, file: !1, line: 2399, column: 16)
!9866 = !DILocation(line: 2401, column: 21, scope: !9865)
!9867 = !DILocation(line: 2402, column: 16, scope: !9865)
!9868 = !DILocation(line: 2405, column: 24, scope: !9861)
!9869 = !DILocation(line: 2407, column: 18, scope: !9852)
!9870 = !DILocation(line: 2408, column: 13, scope: !9852)
!9871 = !DILocation(line: 2394, column: 41, scope: !9847)
!9872 = !DILocation(line: 2394, column: 13, scope: !9847)
!9873 = distinct !{!9873, !9850, !9874}
!9874 = !DILocation(line: 2408, column: 13, scope: !9844)
!9875 = !DILocation(line: 2409, column: 13, scope: !9821)
!9876 = !DILocalVariable(name: "sp", scope: !9877, file: !1, line: 2415, type: !8)
!9877 = distinct !DILexicalBlock(scope: !9822, file: !1, line: 2413, column: 10)
!9878 = !DILocation(line: 2415, column: 23, scope: !9877)
!9879 = !DILocation(line: 2415, column: 28, scope: !9877)
!9880 = !DILocation(line: 2415, column: 48, scope: !9877)
!9881 = !DILocation(line: 2415, column: 58, scope: !9877)
!9882 = !DILocation(line: 2415, column: 63, scope: !9877)
!9883 = !DILocation(line: 2415, column: 34, scope: !9877)
!9884 = !DILocation(line: 2415, column: 32, scope: !9877)
!9885 = !DILocalVariable(name: "dp", scope: !9877, file: !1, line: 2416, type: !8)
!9886 = !DILocation(line: 2416, column: 23, scope: !9877)
!9887 = !DILocation(line: 2416, column: 28, scope: !9877)
!9888 = !DILocation(line: 2416, column: 46, scope: !9877)
!9889 = !DILocation(line: 2416, column: 34, scope: !9877)
!9890 = !DILocation(line: 2416, column: 32, scope: !9877)
!9891 = !DILocation(line: 2416, column: 56, scope: !9877)
!9892 = !DILocalVariable(name: "shift", scope: !9877, file: !1, line: 2417, type: !10)
!9893 = !DILocation(line: 2417, column: 25, scope: !9877)
!9894 = !DILocation(line: 2417, column: 46, scope: !9877)
!9895 = !DILocation(line: 2417, column: 56, scope: !9877)
!9896 = !DILocation(line: 2417, column: 61, scope: !9877)
!9897 = !DILocation(line: 2417, column: 42, scope: !9877)
!9898 = !DILocation(line: 2417, column: 70, scope: !9877)
!9899 = !DILocation(line: 2418, column: 20, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9877, file: !1, line: 2418, column: 13)
!9901 = !DILocation(line: 2418, column: 18, scope: !9900)
!9902 = !DILocation(line: 2418, column: 25, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9900, file: !1, line: 2418, column: 13)
!9904 = !DILocation(line: 2418, column: 29, scope: !9903)
!9905 = !DILocation(line: 2418, column: 27, scope: !9903)
!9906 = !DILocation(line: 2418, column: 13, scope: !9900)
!9907 = !DILocation(line: 2420, column: 35, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9903, file: !1, line: 2419, column: 13)
!9909 = !DILocation(line: 2420, column: 34, scope: !9908)
!9910 = !DILocation(line: 2420, column: 41, scope: !9908)
!9911 = !DILocation(line: 2420, column: 38, scope: !9908)
!9912 = !DILocation(line: 2420, column: 48, scope: !9908)
!9913 = !DILocation(line: 2420, column: 22, scope: !9908)
!9914 = !DILocation(line: 2420, column: 17, scope: !9908)
!9915 = !DILocation(line: 2420, column: 20, scope: !9908)
!9916 = !DILocation(line: 2422, column: 20, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9908, file: !1, line: 2422, column: 20)
!9918 = !DILocation(line: 2422, column: 26, scope: !9917)
!9919 = !DILocation(line: 2422, column: 20, scope: !9908)
!9920 = !DILocation(line: 2424, column: 25, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !1, line: 2423, column: 16)
!9922 = !DILocation(line: 2425, column: 21, scope: !9921)
!9923 = !DILocation(line: 2426, column: 16, scope: !9921)
!9924 = !DILocation(line: 2429, column: 25, scope: !9917)
!9925 = !DILocation(line: 2431, column: 18, scope: !9908)
!9926 = !DILocation(line: 2432, column: 13, scope: !9908)
!9927 = !DILocation(line: 2418, column: 41, scope: !9903)
!9928 = !DILocation(line: 2418, column: 13, scope: !9903)
!9929 = distinct !{!9929, !9906, !9930}
!9930 = !DILocation(line: 2432, column: 13, scope: !9900)
!9931 = !DILocation(line: 2433, column: 13, scope: !9877)
!9932 = !DILocalVariable(name: "sp", scope: !9933, file: !1, line: 2438, type: !8)
!9933 = distinct !DILexicalBlock(scope: !9822, file: !1, line: 2437, column: 10)
!9934 = !DILocation(line: 2438, column: 23, scope: !9933)
!9935 = !DILocation(line: 2438, column: 28, scope: !9933)
!9936 = !DILocation(line: 2438, column: 48, scope: !9933)
!9937 = !DILocation(line: 2438, column: 58, scope: !9933)
!9938 = !DILocation(line: 2438, column: 63, scope: !9933)
!9939 = !DILocation(line: 2438, column: 34, scope: !9933)
!9940 = !DILocation(line: 2438, column: 32, scope: !9933)
!9941 = !DILocalVariable(name: "dp", scope: !9933, file: !1, line: 2439, type: !8)
!9942 = !DILocation(line: 2439, column: 23, scope: !9933)
!9943 = !DILocation(line: 2439, column: 28, scope: !9933)
!9944 = !DILocation(line: 2439, column: 46, scope: !9933)
!9945 = !DILocation(line: 2439, column: 34, scope: !9933)
!9946 = !DILocation(line: 2439, column: 32, scope: !9933)
!9947 = !DILocation(line: 2439, column: 56, scope: !9933)
!9948 = !DILocalVariable(name: "shift", scope: !9933, file: !1, line: 2440, type: !10)
!9949 = !DILocation(line: 2440, column: 25, scope: !9933)
!9950 = !DILocation(line: 2440, column: 46, scope: !9933)
!9951 = !DILocation(line: 2440, column: 56, scope: !9933)
!9952 = !DILocation(line: 2440, column: 61, scope: !9933)
!9953 = !DILocation(line: 2440, column: 42, scope: !9933)
!9954 = !DILocation(line: 2440, column: 70, scope: !9933)
!9955 = !DILocation(line: 2441, column: 20, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9933, file: !1, line: 2441, column: 13)
!9957 = !DILocation(line: 2441, column: 18, scope: !9956)
!9958 = !DILocation(line: 2441, column: 25, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9956, file: !1, line: 2441, column: 13)
!9960 = !DILocation(line: 2441, column: 29, scope: !9959)
!9961 = !DILocation(line: 2441, column: 27, scope: !9959)
!9962 = !DILocation(line: 2441, column: 13, scope: !9956)
!9963 = !DILocation(line: 2443, column: 35, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2442, column: 13)
!9965 = !DILocation(line: 2443, column: 34, scope: !9964)
!9966 = !DILocation(line: 2443, column: 41, scope: !9964)
!9967 = !DILocation(line: 2443, column: 38, scope: !9964)
!9968 = !DILocation(line: 2443, column: 48, scope: !9964)
!9969 = !DILocation(line: 2443, column: 22, scope: !9964)
!9970 = !DILocation(line: 2443, column: 17, scope: !9964)
!9971 = !DILocation(line: 2443, column: 20, scope: !9964)
!9972 = !DILocation(line: 2445, column: 20, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9964, file: !1, line: 2445, column: 20)
!9974 = !DILocation(line: 2445, column: 26, scope: !9973)
!9975 = !DILocation(line: 2445, column: 20, scope: !9964)
!9976 = !DILocation(line: 2447, column: 25, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9973, file: !1, line: 2446, column: 16)
!9978 = !DILocation(line: 2448, column: 21, scope: !9977)
!9979 = !DILocation(line: 2449, column: 16, scope: !9977)
!9980 = !DILocation(line: 2452, column: 25, scope: !9973)
!9981 = !DILocation(line: 2454, column: 18, scope: !9964)
!9982 = !DILocation(line: 2455, column: 13, scope: !9964)
!9983 = !DILocation(line: 2441, column: 41, scope: !9959)
!9984 = !DILocation(line: 2441, column: 13, scope: !9959)
!9985 = distinct !{!9985, !9962, !9986}
!9986 = !DILocation(line: 2455, column: 13, scope: !9956)
!9987 = !DILocation(line: 2456, column: 13, scope: !9933)
!9988 = !DILocation(line: 2460, column: 13, scope: !9822)
!9989 = !DILocation(line: 2462, column: 7, scope: !9811)
!9990 = !DILocation(line: 2462, column: 17, scope: !9811)
!9991 = !DILocation(line: 2462, column: 27, scope: !9811)
!9992 = !DILocation(line: 2463, column: 46, scope: !9811)
!9993 = !DILocation(line: 2463, column: 56, scope: !9811)
!9994 = !DILocation(line: 2463, column: 44, scope: !9811)
!9995 = !DILocation(line: 2463, column: 31, scope: !9811)
!9996 = !DILocation(line: 2463, column: 7, scope: !9811)
!9997 = !DILocation(line: 2463, column: 17, scope: !9811)
!9998 = !DILocation(line: 2463, column: 29, scope: !9811)
!9999 = !DILocation(line: 2464, column: 28, scope: !9811)
!10000 = !DILocation(line: 2464, column: 40, scope: !9811)
!10001 = !DILocation(line: 2464, column: 50, scope: !9811)
!10002 = !DILocation(line: 2464, column: 38, scope: !9811)
!10003 = !DILocation(line: 2464, column: 7, scope: !9811)
!10004 = !DILocation(line: 2464, column: 17, scope: !9811)
!10005 = !DILocation(line: 2464, column: 26, scope: !9811)
!10006 = !DILocation(line: 2465, column: 4, scope: !9811)
!10007 = !DILocation(line: 2466, column: 1, scope: !9800)
!10008 = distinct !DISubprogram(name: "png_do_read_filler", scope: !1, file: !1, line: 2900, type: !10009, scopeLine: 2902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{null, !101, !8, !10, !10}
!10011 = !DILocalVariable(name: "row_info", arg: 1, scope: !10008, file: !1, line: 2900, type: !101)
!10012 = !DILocation(line: 2900, column: 34, scope: !10008)
!10013 = !DILocalVariable(name: "row", arg: 2, scope: !10008, file: !1, line: 2900, type: !8)
!10014 = !DILocation(line: 2900, column: 54, scope: !10008)
!10015 = !DILocalVariable(name: "filler", arg: 3, scope: !10008, file: !1, line: 2901, type: !10)
!10016 = !DILocation(line: 2901, column: 17, scope: !10008)
!10017 = !DILocalVariable(name: "flags", arg: 4, scope: !10008, file: !1, line: 2901, type: !10)
!10018 = !DILocation(line: 2901, column: 37, scope: !10008)
!10019 = !DILocalVariable(name: "i", scope: !10008, file: !1, line: 2903, type: !10)
!10020 = !DILocation(line: 2903, column: 16, scope: !10008)
!10021 = !DILocalVariable(name: "row_width", scope: !10008, file: !1, line: 2904, type: !10)
!10022 = !DILocation(line: 2904, column: 16, scope: !10008)
!10023 = !DILocation(line: 2904, column: 28, scope: !10008)
!10024 = !DILocation(line: 2904, column: 38, scope: !10008)
!10025 = !DILocalVariable(name: "hi_filler", scope: !10008, file: !1, line: 2907, type: !5)
!10026 = !DILocation(line: 2907, column: 13, scope: !10008)
!10027 = !DILocation(line: 2907, column: 37, scope: !10008)
!10028 = !DILocation(line: 2907, column: 43, scope: !10008)
!10029 = !DILocation(line: 2907, column: 48, scope: !10008)
!10030 = !DILocation(line: 2907, column: 25, scope: !10008)
!10031 = !DILocalVariable(name: "lo_filler", scope: !10008, file: !1, line: 2909, type: !5)
!10032 = !DILocation(line: 2909, column: 13, scope: !10008)
!10033 = !DILocation(line: 2909, column: 36, scope: !10008)
!10034 = !DILocation(line: 2909, column: 43, scope: !10008)
!10035 = !DILocation(line: 2909, column: 25, scope: !10008)
!10036 = !DILocation(line: 2914, column: 8, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10008, file: !1, line: 2914, column: 8)
!10038 = !DILocation(line: 2914, column: 18, scope: !10037)
!10039 = !DILocation(line: 2914, column: 29, scope: !10037)
!10040 = !DILocation(line: 2914, column: 8, scope: !10008)
!10041 = !DILocation(line: 2916, column: 11, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !1, line: 2916, column: 11)
!10043 = distinct !DILexicalBlock(scope: !10037, file: !1, line: 2915, column: 4)
!10044 = !DILocation(line: 2916, column: 21, scope: !10042)
!10045 = !DILocation(line: 2916, column: 31, scope: !10042)
!10046 = !DILocation(line: 2916, column: 11, scope: !10043)
!10047 = !DILocation(line: 2918, column: 14, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !1, line: 2918, column: 14)
!10049 = distinct !DILexicalBlock(scope: !10042, file: !1, line: 2917, column: 7)
!10050 = !DILocation(line: 2918, column: 20, scope: !10048)
!10051 = !DILocation(line: 2918, column: 14, scope: !10049)
!10052 = !DILocalVariable(name: "sp", scope: !10053, file: !1, line: 2921, type: !8)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !1, line: 2919, column: 10)
!10054 = !DILocation(line: 2921, column: 23, scope: !10053)
!10055 = !DILocation(line: 2921, column: 28, scope: !10053)
!10056 = !DILocation(line: 2921, column: 46, scope: !10053)
!10057 = !DILocation(line: 2921, column: 34, scope: !10053)
!10058 = !DILocation(line: 2921, column: 32, scope: !10053)
!10059 = !DILocalVariable(name: "dp", scope: !10053, file: !1, line: 2922, type: !8)
!10060 = !DILocation(line: 2922, column: 23, scope: !10053)
!10061 = !DILocation(line: 2922, column: 29, scope: !10053)
!10062 = !DILocation(line: 2922, column: 46, scope: !10053)
!10063 = !DILocation(line: 2922, column: 34, scope: !10053)
!10064 = !DILocation(line: 2922, column: 32, scope: !10053)
!10065 = !DILocation(line: 2923, column: 20, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10053, file: !1, line: 2923, column: 13)
!10067 = !DILocation(line: 2923, column: 18, scope: !10066)
!10068 = !DILocation(line: 2923, column: 25, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10066, file: !1, line: 2923, column: 13)
!10070 = !DILocation(line: 2923, column: 29, scope: !10069)
!10071 = !DILocation(line: 2923, column: 27, scope: !10069)
!10072 = !DILocation(line: 2923, column: 13, scope: !10066)
!10073 = !DILocation(line: 2925, column: 26, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10069, file: !1, line: 2924, column: 13)
!10075 = !DILocation(line: 2925, column: 18, scope: !10074)
!10076 = !DILocation(line: 2925, column: 24, scope: !10074)
!10077 = !DILocation(line: 2926, column: 28, scope: !10074)
!10078 = !DILocation(line: 2926, column: 26, scope: !10074)
!10079 = !DILocation(line: 2926, column: 18, scope: !10074)
!10080 = !DILocation(line: 2926, column: 24, scope: !10074)
!10081 = !DILocation(line: 2927, column: 13, scope: !10074)
!10082 = !DILocation(line: 2923, column: 41, scope: !10069)
!10083 = !DILocation(line: 2923, column: 13, scope: !10069)
!10084 = distinct !{!10084, !10072, !10085}
!10085 = !DILocation(line: 2927, column: 13, scope: !10066)
!10086 = !DILocation(line: 2928, column: 23, scope: !10053)
!10087 = !DILocation(line: 2928, column: 15, scope: !10053)
!10088 = !DILocation(line: 2928, column: 21, scope: !10053)
!10089 = !DILocation(line: 2929, column: 13, scope: !10053)
!10090 = !DILocation(line: 2929, column: 23, scope: !10053)
!10091 = !DILocation(line: 2929, column: 32, scope: !10053)
!10092 = !DILocation(line: 2930, column: 13, scope: !10053)
!10093 = !DILocation(line: 2930, column: 23, scope: !10053)
!10094 = !DILocation(line: 2930, column: 35, scope: !10053)
!10095 = !DILocation(line: 2931, column: 34, scope: !10053)
!10096 = !DILocation(line: 2931, column: 44, scope: !10053)
!10097 = !DILocation(line: 2931, column: 13, scope: !10053)
!10098 = !DILocation(line: 2931, column: 23, scope: !10053)
!10099 = !DILocation(line: 2931, column: 32, scope: !10053)
!10100 = !DILocation(line: 2932, column: 10, scope: !10053)
!10101 = !DILocalVariable(name: "sp", scope: !10102, file: !1, line: 2937, type: !8)
!10102 = distinct !DILexicalBlock(scope: !10048, file: !1, line: 2935, column: 10)
!10103 = !DILocation(line: 2937, column: 23, scope: !10102)
!10104 = !DILocation(line: 2937, column: 28, scope: !10102)
!10105 = !DILocation(line: 2937, column: 46, scope: !10102)
!10106 = !DILocation(line: 2937, column: 34, scope: !10102)
!10107 = !DILocation(line: 2937, column: 32, scope: !10102)
!10108 = !DILocalVariable(name: "dp", scope: !10102, file: !1, line: 2938, type: !8)
!10109 = !DILocation(line: 2938, column: 23, scope: !10102)
!10110 = !DILocation(line: 2938, column: 28, scope: !10102)
!10111 = !DILocation(line: 2938, column: 46, scope: !10102)
!10112 = !DILocation(line: 2938, column: 34, scope: !10102)
!10113 = !DILocation(line: 2938, column: 32, scope: !10102)
!10114 = !DILocation(line: 2939, column: 20, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10102, file: !1, line: 2939, column: 13)
!10116 = !DILocation(line: 2939, column: 18, scope: !10115)
!10117 = !DILocation(line: 2939, column: 25, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10115, file: !1, line: 2939, column: 13)
!10119 = !DILocation(line: 2939, column: 29, scope: !10118)
!10120 = !DILocation(line: 2939, column: 27, scope: !10118)
!10121 = !DILocation(line: 2939, column: 13, scope: !10115)
!10122 = !DILocation(line: 2941, column: 28, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10118, file: !1, line: 2940, column: 13)
!10124 = !DILocation(line: 2941, column: 26, scope: !10123)
!10125 = !DILocation(line: 2941, column: 18, scope: !10123)
!10126 = !DILocation(line: 2941, column: 24, scope: !10123)
!10127 = !DILocation(line: 2942, column: 26, scope: !10123)
!10128 = !DILocation(line: 2942, column: 18, scope: !10123)
!10129 = !DILocation(line: 2942, column: 24, scope: !10123)
!10130 = !DILocation(line: 2943, column: 13, scope: !10123)
!10131 = !DILocation(line: 2939, column: 41, scope: !10118)
!10132 = !DILocation(line: 2939, column: 13, scope: !10118)
!10133 = distinct !{!10133, !10121, !10134}
!10134 = !DILocation(line: 2943, column: 13, scope: !10115)
!10135 = !DILocation(line: 2944, column: 13, scope: !10102)
!10136 = !DILocation(line: 2944, column: 23, scope: !10102)
!10137 = !DILocation(line: 2944, column: 32, scope: !10102)
!10138 = !DILocation(line: 2945, column: 13, scope: !10102)
!10139 = !DILocation(line: 2945, column: 23, scope: !10102)
!10140 = !DILocation(line: 2945, column: 35, scope: !10102)
!10141 = !DILocation(line: 2946, column: 34, scope: !10102)
!10142 = !DILocation(line: 2946, column: 44, scope: !10102)
!10143 = !DILocation(line: 2946, column: 13, scope: !10102)
!10144 = !DILocation(line: 2946, column: 23, scope: !10102)
!10145 = !DILocation(line: 2946, column: 32, scope: !10102)
!10146 = !DILocation(line: 2948, column: 7, scope: !10049)
!10147 = !DILocation(line: 2951, column: 16, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10042, file: !1, line: 2951, column: 16)
!10149 = !DILocation(line: 2951, column: 26, scope: !10148)
!10150 = !DILocation(line: 2951, column: 36, scope: !10148)
!10151 = !DILocation(line: 2951, column: 16, scope: !10042)
!10152 = !DILocation(line: 2953, column: 14, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10154, file: !1, line: 2953, column: 14)
!10154 = distinct !DILexicalBlock(scope: !10148, file: !1, line: 2952, column: 7)
!10155 = !DILocation(line: 2953, column: 20, scope: !10153)
!10156 = !DILocation(line: 2953, column: 14, scope: !10154)
!10157 = !DILocalVariable(name: "sp", scope: !10158, file: !1, line: 2956, type: !8)
!10158 = distinct !DILexicalBlock(scope: !10153, file: !1, line: 2954, column: 10)
!10159 = !DILocation(line: 2956, column: 23, scope: !10158)
!10160 = !DILocation(line: 2956, column: 28, scope: !10158)
!10161 = !DILocation(line: 2956, column: 46, scope: !10158)
!10162 = !DILocation(line: 2956, column: 34, scope: !10158)
!10163 = !DILocation(line: 2956, column: 56, scope: !10158)
!10164 = !DILocation(line: 2956, column: 32, scope: !10158)
!10165 = !DILocalVariable(name: "dp", scope: !10158, file: !1, line: 2957, type: !8)
!10166 = !DILocation(line: 2957, column: 23, scope: !10158)
!10167 = !DILocation(line: 2957, column: 28, scope: !10158)
!10168 = !DILocation(line: 2957, column: 46, scope: !10158)
!10169 = !DILocation(line: 2957, column: 34, scope: !10158)
!10170 = !DILocation(line: 2957, column: 56, scope: !10158)
!10171 = !DILocation(line: 2957, column: 32, scope: !10158)
!10172 = !DILocation(line: 2958, column: 20, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10158, file: !1, line: 2958, column: 13)
!10174 = !DILocation(line: 2958, column: 18, scope: !10173)
!10175 = !DILocation(line: 2958, column: 25, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10173, file: !1, line: 2958, column: 13)
!10177 = !DILocation(line: 2958, column: 29, scope: !10176)
!10178 = !DILocation(line: 2958, column: 27, scope: !10176)
!10179 = !DILocation(line: 2958, column: 13, scope: !10173)
!10180 = !DILocation(line: 2960, column: 26, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10176, file: !1, line: 2959, column: 13)
!10182 = !DILocation(line: 2960, column: 18, scope: !10181)
!10183 = !DILocation(line: 2960, column: 24, scope: !10181)
!10184 = !DILocation(line: 2961, column: 26, scope: !10181)
!10185 = !DILocation(line: 2961, column: 18, scope: !10181)
!10186 = !DILocation(line: 2961, column: 24, scope: !10181)
!10187 = !DILocation(line: 2962, column: 28, scope: !10181)
!10188 = !DILocation(line: 2962, column: 26, scope: !10181)
!10189 = !DILocation(line: 2962, column: 18, scope: !10181)
!10190 = !DILocation(line: 2962, column: 24, scope: !10181)
!10191 = !DILocation(line: 2963, column: 28, scope: !10181)
!10192 = !DILocation(line: 2963, column: 26, scope: !10181)
!10193 = !DILocation(line: 2963, column: 18, scope: !10181)
!10194 = !DILocation(line: 2963, column: 24, scope: !10181)
!10195 = !DILocation(line: 2964, column: 13, scope: !10181)
!10196 = !DILocation(line: 2958, column: 41, scope: !10176)
!10197 = !DILocation(line: 2958, column: 13, scope: !10176)
!10198 = distinct !{!10198, !10179, !10199}
!10199 = !DILocation(line: 2964, column: 13, scope: !10173)
!10200 = !DILocation(line: 2965, column: 23, scope: !10158)
!10201 = !DILocation(line: 2965, column: 15, scope: !10158)
!10202 = !DILocation(line: 2965, column: 21, scope: !10158)
!10203 = !DILocation(line: 2966, column: 23, scope: !10158)
!10204 = !DILocation(line: 2966, column: 15, scope: !10158)
!10205 = !DILocation(line: 2966, column: 21, scope: !10158)
!10206 = !DILocation(line: 2967, column: 13, scope: !10158)
!10207 = !DILocation(line: 2967, column: 23, scope: !10158)
!10208 = !DILocation(line: 2967, column: 32, scope: !10158)
!10209 = !DILocation(line: 2968, column: 13, scope: !10158)
!10210 = !DILocation(line: 2968, column: 23, scope: !10158)
!10211 = !DILocation(line: 2968, column: 35, scope: !10158)
!10212 = !DILocation(line: 2969, column: 34, scope: !10158)
!10213 = !DILocation(line: 2969, column: 44, scope: !10158)
!10214 = !DILocation(line: 2969, column: 13, scope: !10158)
!10215 = !DILocation(line: 2969, column: 23, scope: !10158)
!10216 = !DILocation(line: 2969, column: 32, scope: !10158)
!10217 = !DILocation(line: 2970, column: 10, scope: !10158)
!10218 = !DILocalVariable(name: "sp", scope: !10219, file: !1, line: 2975, type: !8)
!10219 = distinct !DILexicalBlock(scope: !10153, file: !1, line: 2973, column: 10)
!10220 = !DILocation(line: 2975, column: 23, scope: !10219)
!10221 = !DILocation(line: 2975, column: 28, scope: !10219)
!10222 = !DILocation(line: 2975, column: 46, scope: !10219)
!10223 = !DILocation(line: 2975, column: 34, scope: !10219)
!10224 = !DILocation(line: 2975, column: 56, scope: !10219)
!10225 = !DILocation(line: 2975, column: 32, scope: !10219)
!10226 = !DILocalVariable(name: "dp", scope: !10219, file: !1, line: 2976, type: !8)
!10227 = !DILocation(line: 2976, column: 23, scope: !10219)
!10228 = !DILocation(line: 2976, column: 28, scope: !10219)
!10229 = !DILocation(line: 2976, column: 46, scope: !10219)
!10230 = !DILocation(line: 2976, column: 34, scope: !10219)
!10231 = !DILocation(line: 2976, column: 56, scope: !10219)
!10232 = !DILocation(line: 2976, column: 32, scope: !10219)
!10233 = !DILocation(line: 2977, column: 20, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10219, file: !1, line: 2977, column: 13)
!10235 = !DILocation(line: 2977, column: 18, scope: !10234)
!10236 = !DILocation(line: 2977, column: 25, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10234, file: !1, line: 2977, column: 13)
!10238 = !DILocation(line: 2977, column: 29, scope: !10237)
!10239 = !DILocation(line: 2977, column: 27, scope: !10237)
!10240 = !DILocation(line: 2977, column: 13, scope: !10234)
!10241 = !DILocation(line: 2979, column: 28, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10237, file: !1, line: 2978, column: 13)
!10243 = !DILocation(line: 2979, column: 26, scope: !10242)
!10244 = !DILocation(line: 2979, column: 18, scope: !10242)
!10245 = !DILocation(line: 2979, column: 24, scope: !10242)
!10246 = !DILocation(line: 2980, column: 28, scope: !10242)
!10247 = !DILocation(line: 2980, column: 26, scope: !10242)
!10248 = !DILocation(line: 2980, column: 18, scope: !10242)
!10249 = !DILocation(line: 2980, column: 24, scope: !10242)
!10250 = !DILocation(line: 2981, column: 26, scope: !10242)
!10251 = !DILocation(line: 2981, column: 18, scope: !10242)
!10252 = !DILocation(line: 2981, column: 24, scope: !10242)
!10253 = !DILocation(line: 2982, column: 26, scope: !10242)
!10254 = !DILocation(line: 2982, column: 18, scope: !10242)
!10255 = !DILocation(line: 2982, column: 24, scope: !10242)
!10256 = !DILocation(line: 2983, column: 13, scope: !10242)
!10257 = !DILocation(line: 2977, column: 41, scope: !10237)
!10258 = !DILocation(line: 2977, column: 13, scope: !10237)
!10259 = distinct !{!10259, !10240, !10260}
!10260 = !DILocation(line: 2983, column: 13, scope: !10234)
!10261 = !DILocation(line: 2984, column: 13, scope: !10219)
!10262 = !DILocation(line: 2984, column: 23, scope: !10219)
!10263 = !DILocation(line: 2984, column: 32, scope: !10219)
!10264 = !DILocation(line: 2985, column: 13, scope: !10219)
!10265 = !DILocation(line: 2985, column: 23, scope: !10219)
!10266 = !DILocation(line: 2985, column: 35, scope: !10219)
!10267 = !DILocation(line: 2986, column: 34, scope: !10219)
!10268 = !DILocation(line: 2986, column: 44, scope: !10219)
!10269 = !DILocation(line: 2986, column: 13, scope: !10219)
!10270 = !DILocation(line: 2986, column: 23, scope: !10219)
!10271 = !DILocation(line: 2986, column: 32, scope: !10219)
!10272 = !DILocation(line: 2988, column: 7, scope: !10154)
!10273 = !DILocation(line: 2990, column: 4, scope: !10043)
!10274 = !DILocation(line: 2991, column: 13, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10037, file: !1, line: 2991, column: 13)
!10276 = !DILocation(line: 2991, column: 23, scope: !10275)
!10277 = !DILocation(line: 2991, column: 34, scope: !10275)
!10278 = !DILocation(line: 2991, column: 13, scope: !10037)
!10279 = !DILocation(line: 2993, column: 11, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !1, line: 2993, column: 11)
!10281 = distinct !DILexicalBlock(scope: !10275, file: !1, line: 2992, column: 4)
!10282 = !DILocation(line: 2993, column: 21, scope: !10280)
!10283 = !DILocation(line: 2993, column: 31, scope: !10280)
!10284 = !DILocation(line: 2993, column: 11, scope: !10281)
!10285 = !DILocation(line: 2995, column: 14, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10287, file: !1, line: 2995, column: 14)
!10287 = distinct !DILexicalBlock(scope: !10280, file: !1, line: 2994, column: 7)
!10288 = !DILocation(line: 2995, column: 20, scope: !10286)
!10289 = !DILocation(line: 2995, column: 14, scope: !10287)
!10290 = !DILocalVariable(name: "sp", scope: !10291, file: !1, line: 2998, type: !8)
!10291 = distinct !DILexicalBlock(scope: !10286, file: !1, line: 2996, column: 10)
!10292 = !DILocation(line: 2998, column: 23, scope: !10291)
!10293 = !DILocation(line: 2998, column: 28, scope: !10291)
!10294 = !DILocation(line: 2998, column: 46, scope: !10291)
!10295 = !DILocation(line: 2998, column: 34, scope: !10291)
!10296 = !DILocation(line: 2998, column: 56, scope: !10291)
!10297 = !DILocation(line: 2998, column: 32, scope: !10291)
!10298 = !DILocalVariable(name: "dp", scope: !10291, file: !1, line: 2999, type: !8)
!10299 = !DILocation(line: 2999, column: 23, scope: !10291)
!10300 = !DILocation(line: 2999, column: 28, scope: !10291)
!10301 = !DILocation(line: 2999, column: 46, scope: !10291)
!10302 = !DILocation(line: 2999, column: 34, scope: !10291)
!10303 = !DILocation(line: 2999, column: 32, scope: !10291)
!10304 = !DILocation(line: 3000, column: 20, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10291, file: !1, line: 3000, column: 13)
!10306 = !DILocation(line: 3000, column: 18, scope: !10305)
!10307 = !DILocation(line: 3000, column: 25, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !1, line: 3000, column: 13)
!10309 = !DILocation(line: 3000, column: 29, scope: !10308)
!10310 = !DILocation(line: 3000, column: 27, scope: !10308)
!10311 = !DILocation(line: 3000, column: 13, scope: !10305)
!10312 = !DILocation(line: 3002, column: 26, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10308, file: !1, line: 3001, column: 13)
!10314 = !DILocation(line: 3002, column: 18, scope: !10313)
!10315 = !DILocation(line: 3002, column: 24, scope: !10313)
!10316 = !DILocation(line: 3003, column: 28, scope: !10313)
!10317 = !DILocation(line: 3003, column: 26, scope: !10313)
!10318 = !DILocation(line: 3003, column: 18, scope: !10313)
!10319 = !DILocation(line: 3003, column: 24, scope: !10313)
!10320 = !DILocation(line: 3004, column: 28, scope: !10313)
!10321 = !DILocation(line: 3004, column: 26, scope: !10313)
!10322 = !DILocation(line: 3004, column: 18, scope: !10313)
!10323 = !DILocation(line: 3004, column: 24, scope: !10313)
!10324 = !DILocation(line: 3005, column: 28, scope: !10313)
!10325 = !DILocation(line: 3005, column: 26, scope: !10313)
!10326 = !DILocation(line: 3005, column: 18, scope: !10313)
!10327 = !DILocation(line: 3005, column: 24, scope: !10313)
!10328 = !DILocation(line: 3006, column: 13, scope: !10313)
!10329 = !DILocation(line: 3000, column: 41, scope: !10308)
!10330 = !DILocation(line: 3000, column: 13, scope: !10308)
!10331 = distinct !{!10331, !10311, !10332}
!10332 = !DILocation(line: 3006, column: 13, scope: !10305)
!10333 = !DILocation(line: 3007, column: 23, scope: !10291)
!10334 = !DILocation(line: 3007, column: 15, scope: !10291)
!10335 = !DILocation(line: 3007, column: 21, scope: !10291)
!10336 = !DILocation(line: 3008, column: 13, scope: !10291)
!10337 = !DILocation(line: 3008, column: 23, scope: !10291)
!10338 = !DILocation(line: 3008, column: 32, scope: !10291)
!10339 = !DILocation(line: 3009, column: 13, scope: !10291)
!10340 = !DILocation(line: 3009, column: 23, scope: !10291)
!10341 = !DILocation(line: 3009, column: 35, scope: !10291)
!10342 = !DILocation(line: 3010, column: 34, scope: !10291)
!10343 = !DILocation(line: 3010, column: 44, scope: !10291)
!10344 = !DILocation(line: 3010, column: 13, scope: !10291)
!10345 = !DILocation(line: 3010, column: 23, scope: !10291)
!10346 = !DILocation(line: 3010, column: 32, scope: !10291)
!10347 = !DILocation(line: 3011, column: 10, scope: !10291)
!10348 = !DILocalVariable(name: "sp", scope: !10349, file: !1, line: 3016, type: !8)
!10349 = distinct !DILexicalBlock(scope: !10286, file: !1, line: 3014, column: 10)
!10350 = !DILocation(line: 3016, column: 23, scope: !10349)
!10351 = !DILocation(line: 3016, column: 28, scope: !10349)
!10352 = !DILocation(line: 3016, column: 46, scope: !10349)
!10353 = !DILocation(line: 3016, column: 34, scope: !10349)
!10354 = !DILocation(line: 3016, column: 56, scope: !10349)
!10355 = !DILocation(line: 3016, column: 32, scope: !10349)
!10356 = !DILocalVariable(name: "dp", scope: !10349, file: !1, line: 3017, type: !8)
!10357 = !DILocation(line: 3017, column: 23, scope: !10349)
!10358 = !DILocation(line: 3017, column: 28, scope: !10349)
!10359 = !DILocation(line: 3017, column: 45, scope: !10349)
!10360 = !DILocation(line: 3017, column: 33, scope: !10349)
!10361 = !DILocation(line: 3017, column: 31, scope: !10349)
!10362 = !DILocation(line: 3018, column: 20, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10349, file: !1, line: 3018, column: 13)
!10364 = !DILocation(line: 3018, column: 18, scope: !10363)
!10365 = !DILocation(line: 3018, column: 25, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10363, file: !1, line: 3018, column: 13)
!10367 = !DILocation(line: 3018, column: 29, scope: !10366)
!10368 = !DILocation(line: 3018, column: 27, scope: !10366)
!10369 = !DILocation(line: 3018, column: 13, scope: !10363)
!10370 = !DILocation(line: 3020, column: 28, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10366, file: !1, line: 3019, column: 13)
!10372 = !DILocation(line: 3020, column: 26, scope: !10371)
!10373 = !DILocation(line: 3020, column: 18, scope: !10371)
!10374 = !DILocation(line: 3020, column: 24, scope: !10371)
!10375 = !DILocation(line: 3021, column: 28, scope: !10371)
!10376 = !DILocation(line: 3021, column: 26, scope: !10371)
!10377 = !DILocation(line: 3021, column: 18, scope: !10371)
!10378 = !DILocation(line: 3021, column: 24, scope: !10371)
!10379 = !DILocation(line: 3022, column: 28, scope: !10371)
!10380 = !DILocation(line: 3022, column: 26, scope: !10371)
!10381 = !DILocation(line: 3022, column: 18, scope: !10371)
!10382 = !DILocation(line: 3022, column: 24, scope: !10371)
!10383 = !DILocation(line: 3023, column: 26, scope: !10371)
!10384 = !DILocation(line: 3023, column: 18, scope: !10371)
!10385 = !DILocation(line: 3023, column: 24, scope: !10371)
!10386 = !DILocation(line: 3024, column: 13, scope: !10371)
!10387 = !DILocation(line: 3018, column: 41, scope: !10366)
!10388 = !DILocation(line: 3018, column: 13, scope: !10366)
!10389 = distinct !{!10389, !10369, !10390}
!10390 = !DILocation(line: 3024, column: 13, scope: !10363)
!10391 = !DILocation(line: 3025, column: 13, scope: !10349)
!10392 = !DILocation(line: 3025, column: 23, scope: !10349)
!10393 = !DILocation(line: 3025, column: 32, scope: !10349)
!10394 = !DILocation(line: 3026, column: 13, scope: !10349)
!10395 = !DILocation(line: 3026, column: 23, scope: !10349)
!10396 = !DILocation(line: 3026, column: 35, scope: !10349)
!10397 = !DILocation(line: 3027, column: 34, scope: !10349)
!10398 = !DILocation(line: 3027, column: 44, scope: !10349)
!10399 = !DILocation(line: 3027, column: 13, scope: !10349)
!10400 = !DILocation(line: 3027, column: 23, scope: !10349)
!10401 = !DILocation(line: 3027, column: 32, scope: !10349)
!10402 = !DILocation(line: 3029, column: 7, scope: !10287)
!10403 = !DILocation(line: 3032, column: 16, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10280, file: !1, line: 3032, column: 16)
!10405 = !DILocation(line: 3032, column: 26, scope: !10404)
!10406 = !DILocation(line: 3032, column: 36, scope: !10404)
!10407 = !DILocation(line: 3032, column: 16, scope: !10280)
!10408 = !DILocation(line: 3034, column: 14, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !1, line: 3034, column: 14)
!10410 = distinct !DILexicalBlock(scope: !10404, file: !1, line: 3033, column: 7)
!10411 = !DILocation(line: 3034, column: 20, scope: !10409)
!10412 = !DILocation(line: 3034, column: 14, scope: !10410)
!10413 = !DILocalVariable(name: "sp", scope: !10414, file: !1, line: 3037, type: !8)
!10414 = distinct !DILexicalBlock(scope: !10409, file: !1, line: 3035, column: 10)
!10415 = !DILocation(line: 3037, column: 23, scope: !10414)
!10416 = !DILocation(line: 3037, column: 28, scope: !10414)
!10417 = !DILocation(line: 3037, column: 46, scope: !10414)
!10418 = !DILocation(line: 3037, column: 34, scope: !10414)
!10419 = !DILocation(line: 3037, column: 56, scope: !10414)
!10420 = !DILocation(line: 3037, column: 32, scope: !10414)
!10421 = !DILocalVariable(name: "dp", scope: !10414, file: !1, line: 3038, type: !8)
!10422 = !DILocation(line: 3038, column: 23, scope: !10414)
!10423 = !DILocation(line: 3038, column: 28, scope: !10414)
!10424 = !DILocation(line: 3038, column: 46, scope: !10414)
!10425 = !DILocation(line: 3038, column: 34, scope: !10414)
!10426 = !DILocation(line: 3038, column: 56, scope: !10414)
!10427 = !DILocation(line: 3038, column: 32, scope: !10414)
!10428 = !DILocation(line: 3039, column: 20, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10414, file: !1, line: 3039, column: 13)
!10430 = !DILocation(line: 3039, column: 18, scope: !10429)
!10431 = !DILocation(line: 3039, column: 25, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10429, file: !1, line: 3039, column: 13)
!10433 = !DILocation(line: 3039, column: 29, scope: !10432)
!10434 = !DILocation(line: 3039, column: 27, scope: !10432)
!10435 = !DILocation(line: 3039, column: 13, scope: !10429)
!10436 = !DILocation(line: 3041, column: 26, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10432, file: !1, line: 3040, column: 13)
!10438 = !DILocation(line: 3041, column: 18, scope: !10437)
!10439 = !DILocation(line: 3041, column: 24, scope: !10437)
!10440 = !DILocation(line: 3042, column: 26, scope: !10437)
!10441 = !DILocation(line: 3042, column: 18, scope: !10437)
!10442 = !DILocation(line: 3042, column: 24, scope: !10437)
!10443 = !DILocation(line: 3043, column: 28, scope: !10437)
!10444 = !DILocation(line: 3043, column: 26, scope: !10437)
!10445 = !DILocation(line: 3043, column: 18, scope: !10437)
!10446 = !DILocation(line: 3043, column: 24, scope: !10437)
!10447 = !DILocation(line: 3044, column: 28, scope: !10437)
!10448 = !DILocation(line: 3044, column: 26, scope: !10437)
!10449 = !DILocation(line: 3044, column: 18, scope: !10437)
!10450 = !DILocation(line: 3044, column: 24, scope: !10437)
!10451 = !DILocation(line: 3045, column: 28, scope: !10437)
!10452 = !DILocation(line: 3045, column: 26, scope: !10437)
!10453 = !DILocation(line: 3045, column: 18, scope: !10437)
!10454 = !DILocation(line: 3045, column: 24, scope: !10437)
!10455 = !DILocation(line: 3046, column: 28, scope: !10437)
!10456 = !DILocation(line: 3046, column: 26, scope: !10437)
!10457 = !DILocation(line: 3046, column: 18, scope: !10437)
!10458 = !DILocation(line: 3046, column: 24, scope: !10437)
!10459 = !DILocation(line: 3047, column: 28, scope: !10437)
!10460 = !DILocation(line: 3047, column: 26, scope: !10437)
!10461 = !DILocation(line: 3047, column: 18, scope: !10437)
!10462 = !DILocation(line: 3047, column: 24, scope: !10437)
!10463 = !DILocation(line: 3048, column: 28, scope: !10437)
!10464 = !DILocation(line: 3048, column: 26, scope: !10437)
!10465 = !DILocation(line: 3048, column: 18, scope: !10437)
!10466 = !DILocation(line: 3048, column: 24, scope: !10437)
!10467 = !DILocation(line: 3049, column: 13, scope: !10437)
!10468 = !DILocation(line: 3039, column: 41, scope: !10432)
!10469 = !DILocation(line: 3039, column: 13, scope: !10432)
!10470 = distinct !{!10470, !10435, !10471}
!10471 = !DILocation(line: 3049, column: 13, scope: !10429)
!10472 = !DILocation(line: 3050, column: 23, scope: !10414)
!10473 = !DILocation(line: 3050, column: 15, scope: !10414)
!10474 = !DILocation(line: 3050, column: 21, scope: !10414)
!10475 = !DILocation(line: 3051, column: 23, scope: !10414)
!10476 = !DILocation(line: 3051, column: 15, scope: !10414)
!10477 = !DILocation(line: 3051, column: 21, scope: !10414)
!10478 = !DILocation(line: 3052, column: 13, scope: !10414)
!10479 = !DILocation(line: 3052, column: 23, scope: !10414)
!10480 = !DILocation(line: 3052, column: 32, scope: !10414)
!10481 = !DILocation(line: 3053, column: 13, scope: !10414)
!10482 = !DILocation(line: 3053, column: 23, scope: !10414)
!10483 = !DILocation(line: 3053, column: 35, scope: !10414)
!10484 = !DILocation(line: 3054, column: 34, scope: !10414)
!10485 = !DILocation(line: 3054, column: 44, scope: !10414)
!10486 = !DILocation(line: 3054, column: 13, scope: !10414)
!10487 = !DILocation(line: 3054, column: 23, scope: !10414)
!10488 = !DILocation(line: 3054, column: 32, scope: !10414)
!10489 = !DILocation(line: 3055, column: 10, scope: !10414)
!10490 = !DILocalVariable(name: "sp", scope: !10491, file: !1, line: 3060, type: !8)
!10491 = distinct !DILexicalBlock(scope: !10409, file: !1, line: 3058, column: 10)
!10492 = !DILocation(line: 3060, column: 23, scope: !10491)
!10493 = !DILocation(line: 3060, column: 28, scope: !10491)
!10494 = !DILocation(line: 3060, column: 46, scope: !10491)
!10495 = !DILocation(line: 3060, column: 34, scope: !10491)
!10496 = !DILocation(line: 3060, column: 56, scope: !10491)
!10497 = !DILocation(line: 3060, column: 32, scope: !10491)
!10498 = !DILocalVariable(name: "dp", scope: !10491, file: !1, line: 3061, type: !8)
!10499 = !DILocation(line: 3061, column: 23, scope: !10491)
!10500 = !DILocation(line: 3061, column: 28, scope: !10491)
!10501 = !DILocation(line: 3061, column: 46, scope: !10491)
!10502 = !DILocation(line: 3061, column: 34, scope: !10491)
!10503 = !DILocation(line: 3061, column: 56, scope: !10491)
!10504 = !DILocation(line: 3061, column: 32, scope: !10491)
!10505 = !DILocation(line: 3062, column: 20, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10491, file: !1, line: 3062, column: 13)
!10507 = !DILocation(line: 3062, column: 18, scope: !10506)
!10508 = !DILocation(line: 3062, column: 25, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !1, line: 3062, column: 13)
!10510 = !DILocation(line: 3062, column: 29, scope: !10509)
!10511 = !DILocation(line: 3062, column: 27, scope: !10509)
!10512 = !DILocation(line: 3062, column: 13, scope: !10506)
!10513 = !DILocation(line: 3064, column: 28, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10509, file: !1, line: 3063, column: 13)
!10515 = !DILocation(line: 3064, column: 26, scope: !10514)
!10516 = !DILocation(line: 3064, column: 18, scope: !10514)
!10517 = !DILocation(line: 3064, column: 24, scope: !10514)
!10518 = !DILocation(line: 3065, column: 28, scope: !10514)
!10519 = !DILocation(line: 3065, column: 26, scope: !10514)
!10520 = !DILocation(line: 3065, column: 18, scope: !10514)
!10521 = !DILocation(line: 3065, column: 24, scope: !10514)
!10522 = !DILocation(line: 3066, column: 28, scope: !10514)
!10523 = !DILocation(line: 3066, column: 26, scope: !10514)
!10524 = !DILocation(line: 3066, column: 18, scope: !10514)
!10525 = !DILocation(line: 3066, column: 24, scope: !10514)
!10526 = !DILocation(line: 3067, column: 28, scope: !10514)
!10527 = !DILocation(line: 3067, column: 26, scope: !10514)
!10528 = !DILocation(line: 3067, column: 18, scope: !10514)
!10529 = !DILocation(line: 3067, column: 24, scope: !10514)
!10530 = !DILocation(line: 3068, column: 28, scope: !10514)
!10531 = !DILocation(line: 3068, column: 26, scope: !10514)
!10532 = !DILocation(line: 3068, column: 18, scope: !10514)
!10533 = !DILocation(line: 3068, column: 24, scope: !10514)
!10534 = !DILocation(line: 3069, column: 28, scope: !10514)
!10535 = !DILocation(line: 3069, column: 26, scope: !10514)
!10536 = !DILocation(line: 3069, column: 18, scope: !10514)
!10537 = !DILocation(line: 3069, column: 24, scope: !10514)
!10538 = !DILocation(line: 3070, column: 26, scope: !10514)
!10539 = !DILocation(line: 3070, column: 18, scope: !10514)
!10540 = !DILocation(line: 3070, column: 24, scope: !10514)
!10541 = !DILocation(line: 3071, column: 26, scope: !10514)
!10542 = !DILocation(line: 3071, column: 18, scope: !10514)
!10543 = !DILocation(line: 3071, column: 24, scope: !10514)
!10544 = !DILocation(line: 3072, column: 13, scope: !10514)
!10545 = !DILocation(line: 3062, column: 41, scope: !10509)
!10546 = !DILocation(line: 3062, column: 13, scope: !10509)
!10547 = distinct !{!10547, !10512, !10548}
!10548 = !DILocation(line: 3072, column: 13, scope: !10506)
!10549 = !DILocation(line: 3074, column: 13, scope: !10491)
!10550 = !DILocation(line: 3074, column: 23, scope: !10491)
!10551 = !DILocation(line: 3074, column: 32, scope: !10491)
!10552 = !DILocation(line: 3075, column: 13, scope: !10491)
!10553 = !DILocation(line: 3075, column: 23, scope: !10491)
!10554 = !DILocation(line: 3075, column: 35, scope: !10491)
!10555 = !DILocation(line: 3076, column: 34, scope: !10491)
!10556 = !DILocation(line: 3076, column: 44, scope: !10491)
!10557 = !DILocation(line: 3076, column: 13, scope: !10491)
!10558 = !DILocation(line: 3076, column: 23, scope: !10491)
!10559 = !DILocation(line: 3076, column: 32, scope: !10491)
!10560 = !DILocation(line: 3078, column: 7, scope: !10410)
!10561 = !DILocation(line: 3080, column: 4, scope: !10281)
!10562 = !DILocation(line: 3081, column: 1, scope: !10008)
!10563 = distinct !DISubprogram(name: "png_do_read_invert_alpha", scope: !1, file: !1, line: 2798, type: !5936, scopeLine: 2799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!10564 = !DILocalVariable(name: "row_info", arg: 1, scope: !10563, file: !1, line: 2798, type: !101)
!10565 = !DILocation(line: 2798, column: 40, scope: !10563)
!10566 = !DILocalVariable(name: "row", arg: 2, scope: !10563, file: !1, line: 2798, type: !8)
!10567 = !DILocation(line: 2798, column: 60, scope: !10563)
!10568 = !DILocalVariable(name: "row_width", scope: !10563, file: !1, line: 2800, type: !10)
!10569 = !DILocation(line: 2800, column: 16, scope: !10563)
!10570 = !DILocation(line: 2803, column: 16, scope: !10563)
!10571 = !DILocation(line: 2803, column: 26, scope: !10563)
!10572 = !DILocation(line: 2803, column: 14, scope: !10563)
!10573 = !DILocation(line: 2804, column: 8, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10563, file: !1, line: 2804, column: 8)
!10575 = !DILocation(line: 2804, column: 18, scope: !10574)
!10576 = !DILocation(line: 2804, column: 29, scope: !10574)
!10577 = !DILocation(line: 2804, column: 8, scope: !10563)
!10578 = !DILocation(line: 2806, column: 11, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !1, line: 2806, column: 11)
!10580 = distinct !DILexicalBlock(scope: !10574, file: !1, line: 2805, column: 4)
!10581 = !DILocation(line: 2806, column: 21, scope: !10579)
!10582 = !DILocation(line: 2806, column: 31, scope: !10579)
!10583 = !DILocation(line: 2806, column: 11, scope: !10580)
!10584 = !DILocalVariable(name: "sp", scope: !10585, file: !1, line: 2809, type: !8)
!10585 = distinct !DILexicalBlock(scope: !10579, file: !1, line: 2807, column: 7)
!10586 = !DILocation(line: 2809, column: 20, scope: !10585)
!10587 = !DILocation(line: 2809, column: 25, scope: !10585)
!10588 = !DILocation(line: 2809, column: 31, scope: !10585)
!10589 = !DILocation(line: 2809, column: 41, scope: !10585)
!10590 = !DILocation(line: 2809, column: 29, scope: !10585)
!10591 = !DILocalVariable(name: "dp", scope: !10585, file: !1, line: 2810, type: !8)
!10592 = !DILocation(line: 2810, column: 20, scope: !10585)
!10593 = !DILocation(line: 2810, column: 25, scope: !10585)
!10594 = !DILocalVariable(name: "i", scope: !10585, file: !1, line: 2811, type: !10)
!10595 = !DILocation(line: 2811, column: 22, scope: !10585)
!10596 = !DILocation(line: 2813, column: 17, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10585, file: !1, line: 2813, column: 10)
!10598 = !DILocation(line: 2813, column: 15, scope: !10597)
!10599 = !DILocation(line: 2813, column: 22, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10597, file: !1, line: 2813, column: 10)
!10601 = !DILocation(line: 2813, column: 26, scope: !10600)
!10602 = !DILocation(line: 2813, column: 24, scope: !10600)
!10603 = !DILocation(line: 2813, column: 10, scope: !10597)
!10604 = !DILocation(line: 2815, column: 42, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10600, file: !1, line: 2814, column: 10)
!10606 = !DILocation(line: 2815, column: 40, scope: !10605)
!10607 = !DILocation(line: 2815, column: 38, scope: !10605)
!10608 = !DILocation(line: 2815, column: 23, scope: !10605)
!10609 = !DILocation(line: 2815, column: 15, scope: !10605)
!10610 = !DILocation(line: 2815, column: 21, scope: !10605)
!10611 = !DILocation(line: 2823, column: 15, scope: !10605)
!10612 = !DILocation(line: 2824, column: 16, scope: !10605)
!10613 = !DILocation(line: 2824, column: 15, scope: !10605)
!10614 = !DILocation(line: 2825, column: 10, scope: !10605)
!10615 = !DILocation(line: 2813, column: 38, scope: !10600)
!10616 = !DILocation(line: 2813, column: 10, scope: !10600)
!10617 = distinct !{!10617, !10603, !10618}
!10618 = !DILocation(line: 2825, column: 10, scope: !10597)
!10619 = !DILocation(line: 2826, column: 7, scope: !10585)
!10620 = !DILocalVariable(name: "sp", scope: !10621, file: !1, line: 2832, type: !8)
!10621 = distinct !DILexicalBlock(scope: !10579, file: !1, line: 2831, column: 7)
!10622 = !DILocation(line: 2832, column: 20, scope: !10621)
!10623 = !DILocation(line: 2832, column: 25, scope: !10621)
!10624 = !DILocation(line: 2832, column: 31, scope: !10621)
!10625 = !DILocation(line: 2832, column: 41, scope: !10621)
!10626 = !DILocation(line: 2832, column: 29, scope: !10621)
!10627 = !DILocalVariable(name: "dp", scope: !10621, file: !1, line: 2833, type: !8)
!10628 = !DILocation(line: 2833, column: 20, scope: !10621)
!10629 = !DILocation(line: 2833, column: 25, scope: !10621)
!10630 = !DILocalVariable(name: "i", scope: !10621, file: !1, line: 2834, type: !10)
!10631 = !DILocation(line: 2834, column: 22, scope: !10621)
!10632 = !DILocation(line: 2836, column: 17, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10621, file: !1, line: 2836, column: 10)
!10634 = !DILocation(line: 2836, column: 15, scope: !10633)
!10635 = !DILocation(line: 2836, column: 22, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10633, file: !1, line: 2836, column: 10)
!10637 = !DILocation(line: 2836, column: 26, scope: !10636)
!10638 = !DILocation(line: 2836, column: 24, scope: !10636)
!10639 = !DILocation(line: 2836, column: 10, scope: !10633)
!10640 = !DILocation(line: 2838, column: 42, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10636, file: !1, line: 2837, column: 10)
!10642 = !DILocation(line: 2838, column: 40, scope: !10641)
!10643 = !DILocation(line: 2838, column: 38, scope: !10641)
!10644 = !DILocation(line: 2838, column: 23, scope: !10641)
!10645 = !DILocation(line: 2838, column: 15, scope: !10641)
!10646 = !DILocation(line: 2838, column: 21, scope: !10641)
!10647 = !DILocation(line: 2839, column: 42, scope: !10641)
!10648 = !DILocation(line: 2839, column: 40, scope: !10641)
!10649 = !DILocation(line: 2839, column: 38, scope: !10641)
!10650 = !DILocation(line: 2839, column: 23, scope: !10641)
!10651 = !DILocation(line: 2839, column: 15, scope: !10641)
!10652 = !DILocation(line: 2839, column: 21, scope: !10641)
!10653 = !DILocation(line: 2850, column: 15, scope: !10641)
!10654 = !DILocation(line: 2851, column: 16, scope: !10641)
!10655 = !DILocation(line: 2851, column: 15, scope: !10641)
!10656 = !DILocation(line: 2852, column: 10, scope: !10641)
!10657 = !DILocation(line: 2836, column: 38, scope: !10636)
!10658 = !DILocation(line: 2836, column: 10, scope: !10636)
!10659 = distinct !{!10659, !10639, !10660}
!10660 = !DILocation(line: 2852, column: 10, scope: !10633)
!10661 = !DILocation(line: 2855, column: 4, scope: !10580)
!10662 = !DILocation(line: 2856, column: 13, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10574, file: !1, line: 2856, column: 13)
!10664 = !DILocation(line: 2856, column: 23, scope: !10663)
!10665 = !DILocation(line: 2856, column: 34, scope: !10663)
!10666 = !DILocation(line: 2856, column: 13, scope: !10574)
!10667 = !DILocation(line: 2858, column: 11, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !1, line: 2858, column: 11)
!10669 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 2857, column: 4)
!10670 = !DILocation(line: 2858, column: 21, scope: !10668)
!10671 = !DILocation(line: 2858, column: 31, scope: !10668)
!10672 = !DILocation(line: 2858, column: 11, scope: !10669)
!10673 = !DILocalVariable(name: "sp", scope: !10674, file: !1, line: 2861, type: !8)
!10674 = distinct !DILexicalBlock(scope: !10668, file: !1, line: 2859, column: 7)
!10675 = !DILocation(line: 2861, column: 20, scope: !10674)
!10676 = !DILocation(line: 2861, column: 25, scope: !10674)
!10677 = !DILocation(line: 2861, column: 31, scope: !10674)
!10678 = !DILocation(line: 2861, column: 41, scope: !10674)
!10679 = !DILocation(line: 2861, column: 29, scope: !10674)
!10680 = !DILocalVariable(name: "dp", scope: !10674, file: !1, line: 2862, type: !8)
!10681 = !DILocation(line: 2862, column: 20, scope: !10674)
!10682 = !DILocation(line: 2862, column: 25, scope: !10674)
!10683 = !DILocalVariable(name: "i", scope: !10674, file: !1, line: 2863, type: !10)
!10684 = !DILocation(line: 2863, column: 22, scope: !10674)
!10685 = !DILocation(line: 2865, column: 17, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10674, file: !1, line: 2865, column: 10)
!10687 = !DILocation(line: 2865, column: 15, scope: !10686)
!10688 = !DILocation(line: 2865, column: 22, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10686, file: !1, line: 2865, column: 10)
!10690 = !DILocation(line: 2865, column: 26, scope: !10689)
!10691 = !DILocation(line: 2865, column: 24, scope: !10689)
!10692 = !DILocation(line: 2865, column: 10, scope: !10686)
!10693 = !DILocation(line: 2867, column: 42, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10689, file: !1, line: 2866, column: 10)
!10695 = !DILocation(line: 2867, column: 40, scope: !10694)
!10696 = !DILocation(line: 2867, column: 38, scope: !10694)
!10697 = !DILocation(line: 2867, column: 23, scope: !10694)
!10698 = !DILocation(line: 2867, column: 15, scope: !10694)
!10699 = !DILocation(line: 2867, column: 21, scope: !10694)
!10700 = !DILocation(line: 2868, column: 25, scope: !10694)
!10701 = !DILocation(line: 2868, column: 23, scope: !10694)
!10702 = !DILocation(line: 2868, column: 15, scope: !10694)
!10703 = !DILocation(line: 2868, column: 21, scope: !10694)
!10704 = !DILocation(line: 2869, column: 10, scope: !10694)
!10705 = !DILocation(line: 2865, column: 38, scope: !10689)
!10706 = !DILocation(line: 2865, column: 10, scope: !10689)
!10707 = distinct !{!10707, !10692, !10708}
!10708 = !DILocation(line: 2869, column: 10, scope: !10686)
!10709 = !DILocation(line: 2870, column: 7, scope: !10674)
!10710 = !DILocalVariable(name: "sp", scope: !10711, file: !1, line: 2876, type: !8)
!10711 = distinct !DILexicalBlock(scope: !10668, file: !1, line: 2874, column: 7)
!10712 = !DILocation(line: 2876, column: 20, scope: !10711)
!10713 = !DILocation(line: 2876, column: 26, scope: !10711)
!10714 = !DILocation(line: 2876, column: 32, scope: !10711)
!10715 = !DILocation(line: 2876, column: 42, scope: !10711)
!10716 = !DILocation(line: 2876, column: 30, scope: !10711)
!10717 = !DILocalVariable(name: "dp", scope: !10711, file: !1, line: 2877, type: !8)
!10718 = !DILocation(line: 2877, column: 20, scope: !10711)
!10719 = !DILocation(line: 2877, column: 25, scope: !10711)
!10720 = !DILocalVariable(name: "i", scope: !10711, file: !1, line: 2878, type: !10)
!10721 = !DILocation(line: 2878, column: 22, scope: !10711)
!10722 = !DILocation(line: 2880, column: 17, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10711, file: !1, line: 2880, column: 10)
!10724 = !DILocation(line: 2880, column: 15, scope: !10723)
!10725 = !DILocation(line: 2880, column: 22, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10723, file: !1, line: 2880, column: 10)
!10727 = !DILocation(line: 2880, column: 26, scope: !10726)
!10728 = !DILocation(line: 2880, column: 24, scope: !10726)
!10729 = !DILocation(line: 2880, column: 10, scope: !10723)
!10730 = !DILocation(line: 2882, column: 42, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10726, file: !1, line: 2881, column: 10)
!10732 = !DILocation(line: 2882, column: 40, scope: !10731)
!10733 = !DILocation(line: 2882, column: 38, scope: !10731)
!10734 = !DILocation(line: 2882, column: 23, scope: !10731)
!10735 = !DILocation(line: 2882, column: 15, scope: !10731)
!10736 = !DILocation(line: 2882, column: 21, scope: !10731)
!10737 = !DILocation(line: 2883, column: 42, scope: !10731)
!10738 = !DILocation(line: 2883, column: 40, scope: !10731)
!10739 = !DILocation(line: 2883, column: 38, scope: !10731)
!10740 = !DILocation(line: 2883, column: 23, scope: !10731)
!10741 = !DILocation(line: 2883, column: 15, scope: !10731)
!10742 = !DILocation(line: 2883, column: 21, scope: !10731)
!10743 = !DILocation(line: 2888, column: 15, scope: !10731)
!10744 = !DILocation(line: 2889, column: 16, scope: !10731)
!10745 = !DILocation(line: 2889, column: 15, scope: !10731)
!10746 = !DILocation(line: 2890, column: 10, scope: !10731)
!10747 = !DILocation(line: 2880, column: 38, scope: !10726)
!10748 = !DILocation(line: 2880, column: 10, scope: !10726)
!10749 = distinct !{!10749, !10729, !10750}
!10750 = !DILocation(line: 2890, column: 10, scope: !10723)
!10751 = !DILocation(line: 2893, column: 4, scope: !10669)
!10752 = !DILocation(line: 2894, column: 1, scope: !10563)
!10753 = distinct !DISubprogram(name: "png_do_read_swap_alpha", scope: !1, file: !1, line: 2701, type: !5936, scopeLine: 2702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!10754 = !DILocalVariable(name: "row_info", arg: 1, scope: !10753, file: !1, line: 2701, type: !101)
!10755 = !DILocation(line: 2701, column: 38, scope: !10753)
!10756 = !DILocalVariable(name: "row", arg: 2, scope: !10753, file: !1, line: 2701, type: !8)
!10757 = !DILocation(line: 2701, column: 58, scope: !10753)
!10758 = !DILocalVariable(name: "row_width", scope: !10759, file: !1, line: 2706, type: !10)
!10759 = distinct !DILexicalBlock(scope: !10753, file: !1, line: 2705, column: 4)
!10760 = !DILocation(line: 2706, column: 19, scope: !10759)
!10761 = !DILocation(line: 2706, column: 31, scope: !10759)
!10762 = !DILocation(line: 2706, column: 41, scope: !10759)
!10763 = !DILocation(line: 2707, column: 11, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10759, file: !1, line: 2707, column: 11)
!10765 = !DILocation(line: 2707, column: 21, scope: !10764)
!10766 = !DILocation(line: 2707, column: 32, scope: !10764)
!10767 = !DILocation(line: 2707, column: 11, scope: !10759)
!10768 = !DILocation(line: 2710, column: 14, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !1, line: 2710, column: 14)
!10770 = distinct !DILexicalBlock(scope: !10764, file: !1, line: 2708, column: 7)
!10771 = !DILocation(line: 2710, column: 24, scope: !10769)
!10772 = !DILocation(line: 2710, column: 34, scope: !10769)
!10773 = !DILocation(line: 2710, column: 14, scope: !10770)
!10774 = !DILocalVariable(name: "sp", scope: !10775, file: !1, line: 2712, type: !8)
!10775 = distinct !DILexicalBlock(scope: !10769, file: !1, line: 2711, column: 10)
!10776 = !DILocation(line: 2712, column: 23, scope: !10775)
!10777 = !DILocation(line: 2712, column: 28, scope: !10775)
!10778 = !DILocation(line: 2712, column: 34, scope: !10775)
!10779 = !DILocation(line: 2712, column: 44, scope: !10775)
!10780 = !DILocation(line: 2712, column: 32, scope: !10775)
!10781 = !DILocalVariable(name: "dp", scope: !10775, file: !1, line: 2713, type: !8)
!10782 = !DILocation(line: 2713, column: 23, scope: !10775)
!10783 = !DILocation(line: 2713, column: 28, scope: !10775)
!10784 = !DILocalVariable(name: "save", scope: !10775, file: !1, line: 2714, type: !5)
!10785 = !DILocation(line: 2714, column: 22, scope: !10775)
!10786 = !DILocalVariable(name: "i", scope: !10775, file: !1, line: 2715, type: !10)
!10787 = !DILocation(line: 2715, column: 25, scope: !10775)
!10788 = !DILocation(line: 2717, column: 20, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10775, file: !1, line: 2717, column: 13)
!10790 = !DILocation(line: 2717, column: 18, scope: !10789)
!10791 = !DILocation(line: 2717, column: 25, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10789, file: !1, line: 2717, column: 13)
!10793 = !DILocation(line: 2717, column: 29, scope: !10792)
!10794 = !DILocation(line: 2717, column: 27, scope: !10792)
!10795 = !DILocation(line: 2717, column: 13, scope: !10789)
!10796 = !DILocation(line: 2719, column: 25, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10792, file: !1, line: 2718, column: 13)
!10798 = !DILocation(line: 2719, column: 23, scope: !10797)
!10799 = !DILocation(line: 2719, column: 21, scope: !10797)
!10800 = !DILocation(line: 2720, column: 28, scope: !10797)
!10801 = !DILocation(line: 2720, column: 26, scope: !10797)
!10802 = !DILocation(line: 2720, column: 18, scope: !10797)
!10803 = !DILocation(line: 2720, column: 24, scope: !10797)
!10804 = !DILocation(line: 2721, column: 28, scope: !10797)
!10805 = !DILocation(line: 2721, column: 26, scope: !10797)
!10806 = !DILocation(line: 2721, column: 18, scope: !10797)
!10807 = !DILocation(line: 2721, column: 24, scope: !10797)
!10808 = !DILocation(line: 2722, column: 28, scope: !10797)
!10809 = !DILocation(line: 2722, column: 26, scope: !10797)
!10810 = !DILocation(line: 2722, column: 18, scope: !10797)
!10811 = !DILocation(line: 2722, column: 24, scope: !10797)
!10812 = !DILocation(line: 2723, column: 26, scope: !10797)
!10813 = !DILocation(line: 2723, column: 18, scope: !10797)
!10814 = !DILocation(line: 2723, column: 24, scope: !10797)
!10815 = !DILocation(line: 2724, column: 13, scope: !10797)
!10816 = !DILocation(line: 2717, column: 41, scope: !10792)
!10817 = !DILocation(line: 2717, column: 13, scope: !10792)
!10818 = distinct !{!10818, !10795, !10819}
!10819 = !DILocation(line: 2724, column: 13, scope: !10789)
!10820 = !DILocation(line: 2725, column: 10, scope: !10775)
!10821 = !DILocalVariable(name: "sp", scope: !10822, file: !1, line: 2731, type: !8)
!10822 = distinct !DILexicalBlock(scope: !10769, file: !1, line: 2730, column: 10)
!10823 = !DILocation(line: 2731, column: 23, scope: !10822)
!10824 = !DILocation(line: 2731, column: 28, scope: !10822)
!10825 = !DILocation(line: 2731, column: 34, scope: !10822)
!10826 = !DILocation(line: 2731, column: 44, scope: !10822)
!10827 = !DILocation(line: 2731, column: 32, scope: !10822)
!10828 = !DILocalVariable(name: "dp", scope: !10822, file: !1, line: 2732, type: !8)
!10829 = !DILocation(line: 2732, column: 23, scope: !10822)
!10830 = !DILocation(line: 2732, column: 28, scope: !10822)
!10831 = !DILocalVariable(name: "save", scope: !10822, file: !1, line: 2733, type: !10832)
!10832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 16, elements: !10833)
!10833 = !{!10834}
!10834 = !DISubrange(count: 2)
!10835 = !DILocation(line: 2733, column: 22, scope: !10822)
!10836 = !DILocalVariable(name: "i", scope: !10822, file: !1, line: 2734, type: !10)
!10837 = !DILocation(line: 2734, column: 25, scope: !10822)
!10838 = !DILocation(line: 2736, column: 20, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10822, file: !1, line: 2736, column: 13)
!10840 = !DILocation(line: 2736, column: 18, scope: !10839)
!10841 = !DILocation(line: 2736, column: 25, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !1, line: 2736, column: 13)
!10843 = !DILocation(line: 2736, column: 29, scope: !10842)
!10844 = !DILocation(line: 2736, column: 27, scope: !10842)
!10845 = !DILocation(line: 2736, column: 13, scope: !10839)
!10846 = !DILocation(line: 2738, column: 28, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10842, file: !1, line: 2737, column: 13)
!10848 = !DILocation(line: 2738, column: 26, scope: !10847)
!10849 = !DILocation(line: 2738, column: 16, scope: !10847)
!10850 = !DILocation(line: 2738, column: 24, scope: !10847)
!10851 = !DILocation(line: 2739, column: 28, scope: !10847)
!10852 = !DILocation(line: 2739, column: 26, scope: !10847)
!10853 = !DILocation(line: 2739, column: 16, scope: !10847)
!10854 = !DILocation(line: 2739, column: 24, scope: !10847)
!10855 = !DILocation(line: 2740, column: 28, scope: !10847)
!10856 = !DILocation(line: 2740, column: 26, scope: !10847)
!10857 = !DILocation(line: 2740, column: 18, scope: !10847)
!10858 = !DILocation(line: 2740, column: 24, scope: !10847)
!10859 = !DILocation(line: 2741, column: 28, scope: !10847)
!10860 = !DILocation(line: 2741, column: 26, scope: !10847)
!10861 = !DILocation(line: 2741, column: 18, scope: !10847)
!10862 = !DILocation(line: 2741, column: 24, scope: !10847)
!10863 = !DILocation(line: 2742, column: 28, scope: !10847)
!10864 = !DILocation(line: 2742, column: 26, scope: !10847)
!10865 = !DILocation(line: 2742, column: 18, scope: !10847)
!10866 = !DILocation(line: 2742, column: 24, scope: !10847)
!10867 = !DILocation(line: 2743, column: 28, scope: !10847)
!10868 = !DILocation(line: 2743, column: 26, scope: !10847)
!10869 = !DILocation(line: 2743, column: 18, scope: !10847)
!10870 = !DILocation(line: 2743, column: 24, scope: !10847)
!10871 = !DILocation(line: 2744, column: 28, scope: !10847)
!10872 = !DILocation(line: 2744, column: 26, scope: !10847)
!10873 = !DILocation(line: 2744, column: 18, scope: !10847)
!10874 = !DILocation(line: 2744, column: 24, scope: !10847)
!10875 = !DILocation(line: 2745, column: 28, scope: !10847)
!10876 = !DILocation(line: 2745, column: 26, scope: !10847)
!10877 = !DILocation(line: 2745, column: 18, scope: !10847)
!10878 = !DILocation(line: 2745, column: 24, scope: !10847)
!10879 = !DILocation(line: 2746, column: 26, scope: !10847)
!10880 = !DILocation(line: 2746, column: 18, scope: !10847)
!10881 = !DILocation(line: 2746, column: 24, scope: !10847)
!10882 = !DILocation(line: 2747, column: 26, scope: !10847)
!10883 = !DILocation(line: 2747, column: 18, scope: !10847)
!10884 = !DILocation(line: 2747, column: 24, scope: !10847)
!10885 = !DILocation(line: 2748, column: 13, scope: !10847)
!10886 = !DILocation(line: 2736, column: 41, scope: !10842)
!10887 = !DILocation(line: 2736, column: 13, scope: !10842)
!10888 = distinct !{!10888, !10845, !10889}
!10889 = !DILocation(line: 2748, column: 13, scope: !10839)
!10890 = !DILocation(line: 2751, column: 7, scope: !10770)
!10891 = !DILocation(line: 2753, column: 16, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10764, file: !1, line: 2753, column: 16)
!10893 = !DILocation(line: 2753, column: 26, scope: !10892)
!10894 = !DILocation(line: 2753, column: 37, scope: !10892)
!10895 = !DILocation(line: 2753, column: 16, scope: !10764)
!10896 = !DILocation(line: 2756, column: 14, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !1, line: 2756, column: 14)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !1, line: 2754, column: 7)
!10899 = !DILocation(line: 2756, column: 24, scope: !10897)
!10900 = !DILocation(line: 2756, column: 34, scope: !10897)
!10901 = !DILocation(line: 2756, column: 14, scope: !10898)
!10902 = !DILocalVariable(name: "sp", scope: !10903, file: !1, line: 2758, type: !8)
!10903 = distinct !DILexicalBlock(scope: !10897, file: !1, line: 2757, column: 10)
!10904 = !DILocation(line: 2758, column: 23, scope: !10903)
!10905 = !DILocation(line: 2758, column: 28, scope: !10903)
!10906 = !DILocation(line: 2758, column: 34, scope: !10903)
!10907 = !DILocation(line: 2758, column: 44, scope: !10903)
!10908 = !DILocation(line: 2758, column: 32, scope: !10903)
!10909 = !DILocalVariable(name: "dp", scope: !10903, file: !1, line: 2759, type: !8)
!10910 = !DILocation(line: 2759, column: 23, scope: !10903)
!10911 = !DILocation(line: 2759, column: 28, scope: !10903)
!10912 = !DILocalVariable(name: "save", scope: !10903, file: !1, line: 2760, type: !5)
!10913 = !DILocation(line: 2760, column: 22, scope: !10903)
!10914 = !DILocalVariable(name: "i", scope: !10903, file: !1, line: 2761, type: !10)
!10915 = !DILocation(line: 2761, column: 25, scope: !10903)
!10916 = !DILocation(line: 2763, column: 20, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10903, file: !1, line: 2763, column: 13)
!10918 = !DILocation(line: 2763, column: 18, scope: !10917)
!10919 = !DILocation(line: 2763, column: 25, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10917, file: !1, line: 2763, column: 13)
!10921 = !DILocation(line: 2763, column: 29, scope: !10920)
!10922 = !DILocation(line: 2763, column: 27, scope: !10920)
!10923 = !DILocation(line: 2763, column: 13, scope: !10917)
!10924 = !DILocation(line: 2765, column: 25, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10920, file: !1, line: 2764, column: 13)
!10926 = !DILocation(line: 2765, column: 23, scope: !10925)
!10927 = !DILocation(line: 2765, column: 21, scope: !10925)
!10928 = !DILocation(line: 2766, column: 28, scope: !10925)
!10929 = !DILocation(line: 2766, column: 26, scope: !10925)
!10930 = !DILocation(line: 2766, column: 18, scope: !10925)
!10931 = !DILocation(line: 2766, column: 24, scope: !10925)
!10932 = !DILocation(line: 2767, column: 26, scope: !10925)
!10933 = !DILocation(line: 2767, column: 18, scope: !10925)
!10934 = !DILocation(line: 2767, column: 24, scope: !10925)
!10935 = !DILocation(line: 2768, column: 13, scope: !10925)
!10936 = !DILocation(line: 2763, column: 41, scope: !10920)
!10937 = !DILocation(line: 2763, column: 13, scope: !10920)
!10938 = distinct !{!10938, !10923, !10939}
!10939 = !DILocation(line: 2768, column: 13, scope: !10917)
!10940 = !DILocation(line: 2769, column: 10, scope: !10903)
!10941 = !DILocalVariable(name: "sp", scope: !10942, file: !1, line: 2775, type: !8)
!10942 = distinct !DILexicalBlock(scope: !10897, file: !1, line: 2774, column: 10)
!10943 = !DILocation(line: 2775, column: 23, scope: !10942)
!10944 = !DILocation(line: 2775, column: 28, scope: !10942)
!10945 = !DILocation(line: 2775, column: 34, scope: !10942)
!10946 = !DILocation(line: 2775, column: 44, scope: !10942)
!10947 = !DILocation(line: 2775, column: 32, scope: !10942)
!10948 = !DILocalVariable(name: "dp", scope: !10942, file: !1, line: 2776, type: !8)
!10949 = !DILocation(line: 2776, column: 23, scope: !10942)
!10950 = !DILocation(line: 2776, column: 28, scope: !10942)
!10951 = !DILocalVariable(name: "save", scope: !10942, file: !1, line: 2777, type: !10832)
!10952 = !DILocation(line: 2777, column: 22, scope: !10942)
!10953 = !DILocalVariable(name: "i", scope: !10942, file: !1, line: 2778, type: !10)
!10954 = !DILocation(line: 2778, column: 25, scope: !10942)
!10955 = !DILocation(line: 2780, column: 20, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10942, file: !1, line: 2780, column: 13)
!10957 = !DILocation(line: 2780, column: 18, scope: !10956)
!10958 = !DILocation(line: 2780, column: 25, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10956, file: !1, line: 2780, column: 13)
!10960 = !DILocation(line: 2780, column: 29, scope: !10959)
!10961 = !DILocation(line: 2780, column: 27, scope: !10959)
!10962 = !DILocation(line: 2780, column: 13, scope: !10956)
!10963 = !DILocation(line: 2782, column: 28, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10959, file: !1, line: 2781, column: 13)
!10965 = !DILocation(line: 2782, column: 26, scope: !10964)
!10966 = !DILocation(line: 2782, column: 16, scope: !10964)
!10967 = !DILocation(line: 2782, column: 24, scope: !10964)
!10968 = !DILocation(line: 2783, column: 28, scope: !10964)
!10969 = !DILocation(line: 2783, column: 26, scope: !10964)
!10970 = !DILocation(line: 2783, column: 16, scope: !10964)
!10971 = !DILocation(line: 2783, column: 24, scope: !10964)
!10972 = !DILocation(line: 2784, column: 28, scope: !10964)
!10973 = !DILocation(line: 2784, column: 26, scope: !10964)
!10974 = !DILocation(line: 2784, column: 18, scope: !10964)
!10975 = !DILocation(line: 2784, column: 24, scope: !10964)
!10976 = !DILocation(line: 2785, column: 28, scope: !10964)
!10977 = !DILocation(line: 2785, column: 26, scope: !10964)
!10978 = !DILocation(line: 2785, column: 18, scope: !10964)
!10979 = !DILocation(line: 2785, column: 24, scope: !10964)
!10980 = !DILocation(line: 2786, column: 26, scope: !10964)
!10981 = !DILocation(line: 2786, column: 18, scope: !10964)
!10982 = !DILocation(line: 2786, column: 24, scope: !10964)
!10983 = !DILocation(line: 2787, column: 26, scope: !10964)
!10984 = !DILocation(line: 2787, column: 18, scope: !10964)
!10985 = !DILocation(line: 2787, column: 24, scope: !10964)
!10986 = !DILocation(line: 2788, column: 13, scope: !10964)
!10987 = !DILocation(line: 2780, column: 41, scope: !10959)
!10988 = !DILocation(line: 2780, column: 13, scope: !10959)
!10989 = distinct !{!10989, !10962, !10990}
!10990 = !DILocation(line: 2788, column: 13, scope: !10956)
!10991 = !DILocation(line: 2791, column: 7, scope: !10898)
!10992 = !DILocation(line: 2793, column: 1, scope: !10753)
!10993 = distinct !DISubprogram(name: "png_build_grayscale_palette", scope: !1, file: !1, line: 3428, type: !10994, scopeLine: 3429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{null, !12, !189}
!10996 = !DILocalVariable(name: "bit_depth", arg: 1, scope: !10993, file: !1, line: 3428, type: !12)
!10997 = !DILocation(line: 3428, column: 33, scope: !10993)
!10998 = !DILocalVariable(name: "palette", arg: 2, scope: !10993, file: !1, line: 3428, type: !189)
!10999 = !DILocation(line: 3428, column: 55, scope: !10993)
!11000 = !DILocalVariable(name: "num_palette", scope: !10993, file: !1, line: 3430, type: !12)
!11001 = !DILocation(line: 3430, column: 8, scope: !10993)
!11002 = !DILocalVariable(name: "color_inc", scope: !10993, file: !1, line: 3431, type: !12)
!11003 = !DILocation(line: 3431, column: 8, scope: !10993)
!11004 = !DILocalVariable(name: "i", scope: !10993, file: !1, line: 3432, type: !12)
!11005 = !DILocation(line: 3432, column: 8, scope: !10993)
!11006 = !DILocalVariable(name: "v", scope: !10993, file: !1, line: 3433, type: !12)
!11007 = !DILocation(line: 3433, column: 8, scope: !10993)
!11008 = !DILocation(line: 3437, column: 8, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10993, file: !1, line: 3437, column: 8)
!11010 = !DILocation(line: 3437, column: 16, scope: !11009)
!11011 = !DILocation(line: 3437, column: 8, scope: !10993)
!11012 = !DILocation(line: 3438, column: 7, scope: !11009)
!11013 = !DILocation(line: 3440, column: 12, scope: !10993)
!11014 = !DILocation(line: 3440, column: 4, scope: !10993)
!11015 = !DILocation(line: 3443, column: 22, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10993, file: !1, line: 3441, column: 4)
!11017 = !DILocation(line: 3444, column: 20, scope: !11016)
!11018 = !DILocation(line: 3445, column: 10, scope: !11016)
!11019 = !DILocation(line: 3448, column: 22, scope: !11016)
!11020 = !DILocation(line: 3449, column: 20, scope: !11016)
!11021 = !DILocation(line: 3450, column: 10, scope: !11016)
!11022 = !DILocation(line: 3453, column: 22, scope: !11016)
!11023 = !DILocation(line: 3454, column: 20, scope: !11016)
!11024 = !DILocation(line: 3455, column: 10, scope: !11016)
!11025 = !DILocation(line: 3458, column: 22, scope: !11016)
!11026 = !DILocation(line: 3459, column: 20, scope: !11016)
!11027 = !DILocation(line: 3460, column: 10, scope: !11016)
!11028 = !DILocation(line: 3463, column: 22, scope: !11016)
!11029 = !DILocation(line: 3464, column: 20, scope: !11016)
!11030 = !DILocation(line: 3465, column: 10, scope: !11016)
!11031 = !DILocation(line: 3468, column: 11, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !10993, file: !1, line: 3468, column: 4)
!11033 = !DILocation(line: 3468, column: 18, scope: !11032)
!11034 = !DILocation(line: 3468, column: 9, scope: !11032)
!11035 = !DILocation(line: 3468, column: 23, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11032, file: !1, line: 3468, column: 4)
!11037 = !DILocation(line: 3468, column: 27, scope: !11036)
!11038 = !DILocation(line: 3468, column: 25, scope: !11036)
!11039 = !DILocation(line: 3468, column: 4, scope: !11032)
!11040 = !DILocation(line: 3470, column: 34, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !1, line: 3469, column: 4)
!11042 = !DILocation(line: 3470, column: 24, scope: !11041)
!11043 = !DILocation(line: 3470, column: 7, scope: !11041)
!11044 = !DILocation(line: 3470, column: 15, scope: !11041)
!11045 = !DILocation(line: 3470, column: 18, scope: !11041)
!11046 = !DILocation(line: 3470, column: 22, scope: !11041)
!11047 = !DILocation(line: 3471, column: 36, scope: !11041)
!11048 = !DILocation(line: 3471, column: 26, scope: !11041)
!11049 = !DILocation(line: 3471, column: 7, scope: !11041)
!11050 = !DILocation(line: 3471, column: 15, scope: !11041)
!11051 = !DILocation(line: 3471, column: 18, scope: !11041)
!11052 = !DILocation(line: 3471, column: 24, scope: !11041)
!11053 = !DILocation(line: 3472, column: 35, scope: !11041)
!11054 = !DILocation(line: 3472, column: 25, scope: !11041)
!11055 = !DILocation(line: 3472, column: 7, scope: !11041)
!11056 = !DILocation(line: 3472, column: 15, scope: !11041)
!11057 = !DILocation(line: 3472, column: 18, scope: !11041)
!11058 = !DILocation(line: 3472, column: 23, scope: !11041)
!11059 = !DILocation(line: 3473, column: 4, scope: !11041)
!11060 = !DILocation(line: 3468, column: 41, scope: !11036)
!11061 = !DILocation(line: 3468, column: 50, scope: !11036)
!11062 = !DILocation(line: 3468, column: 47, scope: !11036)
!11063 = !DILocation(line: 3468, column: 4, scope: !11036)
!11064 = distinct !{!11064, !11039, !11065}
!11065 = !DILocation(line: 3473, column: 4, scope: !11032)
!11066 = !DILocation(line: 3474, column: 1, scope: !10993)
!11067 = distinct !DISubprogram(name: "png_do_read_intrapixel", scope: !1, file: !1, line: 4972, type: !5936, scopeLine: 4973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!11068 = !DILocalVariable(name: "row_info", arg: 1, scope: !11067, file: !1, line: 4972, type: !101)
!11069 = !DILocation(line: 4972, column: 38, scope: !11067)
!11070 = !DILocalVariable(name: "row", arg: 2, scope: !11067, file: !1, line: 4972, type: !8)
!11071 = !DILocation(line: 4972, column: 58, scope: !11067)
!11072 = !DILocation(line: 4977, column: 9, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11067, file: !1, line: 4977, column: 8)
!11074 = !DILocation(line: 4977, column: 19, scope: !11073)
!11075 = !DILocation(line: 4977, column: 30, scope: !11073)
!11076 = !DILocation(line: 4977, column: 8, scope: !11067)
!11077 = !DILocalVariable(name: "bytes_per_pixel", scope: !11078, file: !1, line: 4979, type: !12)
!11078 = distinct !DILexicalBlock(scope: !11073, file: !1, line: 4978, column: 4)
!11079 = !DILocation(line: 4979, column: 11, scope: !11078)
!11080 = !DILocalVariable(name: "row_width", scope: !11078, file: !1, line: 4980, type: !10)
!11081 = !DILocation(line: 4980, column: 19, scope: !11078)
!11082 = !DILocation(line: 4980, column: 31, scope: !11078)
!11083 = !DILocation(line: 4980, column: 41, scope: !11078)
!11084 = !DILocation(line: 4982, column: 11, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11078, file: !1, line: 4982, column: 11)
!11086 = !DILocation(line: 4982, column: 21, scope: !11085)
!11087 = !DILocation(line: 4982, column: 31, scope: !11085)
!11088 = !DILocation(line: 4982, column: 11, scope: !11078)
!11089 = !DILocalVariable(name: "rp", scope: !11090, file: !1, line: 4984, type: !8)
!11090 = distinct !DILexicalBlock(scope: !11085, file: !1, line: 4983, column: 7)
!11091 = !DILocation(line: 4984, column: 20, scope: !11090)
!11092 = !DILocalVariable(name: "i", scope: !11090, file: !1, line: 4985, type: !10)
!11093 = !DILocation(line: 4985, column: 22, scope: !11090)
!11094 = !DILocation(line: 4987, column: 14, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !1, line: 4987, column: 14)
!11096 = !DILocation(line: 4987, column: 24, scope: !11095)
!11097 = !DILocation(line: 4987, column: 35, scope: !11095)
!11098 = !DILocation(line: 4987, column: 14, scope: !11090)
!11099 = !DILocation(line: 4988, column: 29, scope: !11095)
!11100 = !DILocation(line: 4988, column: 13, scope: !11095)
!11101 = !DILocation(line: 4990, column: 19, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11095, file: !1, line: 4990, column: 19)
!11103 = !DILocation(line: 4990, column: 29, scope: !11102)
!11104 = !DILocation(line: 4990, column: 40, scope: !11102)
!11105 = !DILocation(line: 4990, column: 19, scope: !11095)
!11106 = !DILocation(line: 4991, column: 29, scope: !11102)
!11107 = !DILocation(line: 4991, column: 13, scope: !11102)
!11108 = !DILocation(line: 4994, column: 13, scope: !11102)
!11109 = !DILocation(line: 4996, column: 17, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11090, file: !1, line: 4996, column: 10)
!11111 = !DILocation(line: 4996, column: 27, scope: !11110)
!11112 = !DILocation(line: 4996, column: 25, scope: !11110)
!11113 = !DILocation(line: 4996, column: 15, scope: !11110)
!11114 = !DILocation(line: 4996, column: 32, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !1, line: 4996, column: 10)
!11116 = !DILocation(line: 4996, column: 36, scope: !11115)
!11117 = !DILocation(line: 4996, column: 34, scope: !11115)
!11118 = !DILocation(line: 4996, column: 10, scope: !11110)
!11119 = !DILocation(line: 4998, column: 40, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11115, file: !1, line: 4997, column: 10)
!11121 = !DILocation(line: 4998, column: 39, scope: !11120)
!11122 = !DILocation(line: 4998, column: 37, scope: !11120)
!11123 = !DILocation(line: 4998, column: 47, scope: !11120)
!11124 = !DILocation(line: 4998, column: 50, scope: !11120)
!11125 = !DILocation(line: 4998, column: 45, scope: !11120)
!11126 = !DILocation(line: 4998, column: 43, scope: !11120)
!11127 = !DILocation(line: 4998, column: 56, scope: !11120)
!11128 = !DILocation(line: 4998, column: 21, scope: !11120)
!11129 = !DILocation(line: 4998, column: 15, scope: !11120)
!11130 = !DILocation(line: 4998, column: 19, scope: !11120)
!11131 = !DILocation(line: 4999, column: 43, scope: !11120)
!11132 = !DILocation(line: 4999, column: 46, scope: !11120)
!11133 = !DILocation(line: 4999, column: 41, scope: !11120)
!11134 = !DILocation(line: 4999, column: 39, scope: !11120)
!11135 = !DILocation(line: 4999, column: 55, scope: !11120)
!11136 = !DILocation(line: 4999, column: 58, scope: !11120)
!11137 = !DILocation(line: 4999, column: 53, scope: !11120)
!11138 = !DILocation(line: 4999, column: 51, scope: !11120)
!11139 = !DILocation(line: 4999, column: 64, scope: !11120)
!11140 = !DILocation(line: 4999, column: 23, scope: !11120)
!11141 = !DILocation(line: 4999, column: 15, scope: !11120)
!11142 = !DILocation(line: 4999, column: 17, scope: !11120)
!11143 = !DILocation(line: 4999, column: 21, scope: !11120)
!11144 = !DILocation(line: 5000, column: 10, scope: !11120)
!11145 = !DILocation(line: 4996, column: 48, scope: !11115)
!11146 = !DILocation(line: 4996, column: 58, scope: !11115)
!11147 = !DILocation(line: 4996, column: 55, scope: !11115)
!11148 = !DILocation(line: 4996, column: 10, scope: !11115)
!11149 = distinct !{!11149, !11118, !11150}
!11150 = !DILocation(line: 5000, column: 10, scope: !11110)
!11151 = !DILocation(line: 5001, column: 7, scope: !11090)
!11152 = !DILocation(line: 5002, column: 16, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11085, file: !1, line: 5002, column: 16)
!11154 = !DILocation(line: 5002, column: 26, scope: !11153)
!11155 = !DILocation(line: 5002, column: 36, scope: !11153)
!11156 = !DILocation(line: 5002, column: 16, scope: !11085)
!11157 = !DILocalVariable(name: "rp", scope: !11158, file: !1, line: 5004, type: !8)
!11158 = distinct !DILexicalBlock(scope: !11153, file: !1, line: 5003, column: 7)
!11159 = !DILocation(line: 5004, column: 20, scope: !11158)
!11160 = !DILocalVariable(name: "i", scope: !11158, file: !1, line: 5005, type: !10)
!11161 = !DILocation(line: 5005, column: 22, scope: !11158)
!11162 = !DILocation(line: 5007, column: 14, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11158, file: !1, line: 5007, column: 14)
!11164 = !DILocation(line: 5007, column: 24, scope: !11163)
!11165 = !DILocation(line: 5007, column: 35, scope: !11163)
!11166 = !DILocation(line: 5007, column: 14, scope: !11158)
!11167 = !DILocation(line: 5008, column: 29, scope: !11163)
!11168 = !DILocation(line: 5008, column: 13, scope: !11163)
!11169 = !DILocation(line: 5010, column: 19, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11163, file: !1, line: 5010, column: 19)
!11171 = !DILocation(line: 5010, column: 29, scope: !11170)
!11172 = !DILocation(line: 5010, column: 40, scope: !11170)
!11173 = !DILocation(line: 5010, column: 19, scope: !11163)
!11174 = !DILocation(line: 5011, column: 29, scope: !11170)
!11175 = !DILocation(line: 5011, column: 13, scope: !11170)
!11176 = !DILocation(line: 5014, column: 13, scope: !11170)
!11177 = !DILocation(line: 5016, column: 17, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11158, file: !1, line: 5016, column: 10)
!11179 = !DILocation(line: 5016, column: 27, scope: !11178)
!11180 = !DILocation(line: 5016, column: 25, scope: !11178)
!11181 = !DILocation(line: 5016, column: 15, scope: !11178)
!11182 = !DILocation(line: 5016, column: 32, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11178, file: !1, line: 5016, column: 10)
!11184 = !DILocation(line: 5016, column: 36, scope: !11183)
!11185 = !DILocation(line: 5016, column: 34, scope: !11183)
!11186 = !DILocation(line: 5016, column: 10, scope: !11178)
!11187 = !DILocalVariable(name: "s0", scope: !11188, file: !1, line: 5018, type: !10)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !1, line: 5017, column: 10)
!11189 = !DILocation(line: 5018, column: 25, scope: !11188)
!11190 = !DILocation(line: 5018, column: 35, scope: !11188)
!11191 = !DILocation(line: 5018, column: 33, scope: !11188)
!11192 = !DILocation(line: 5018, column: 43, scope: !11188)
!11193 = !DILocation(line: 5018, column: 53, scope: !11188)
!11194 = !DILocation(line: 5018, column: 56, scope: !11188)
!11195 = !DILocation(line: 5018, column: 51, scope: !11188)
!11196 = !DILocation(line: 5018, column: 49, scope: !11188)
!11197 = !DILocalVariable(name: "s1", scope: !11188, file: !1, line: 5019, type: !10)
!11198 = !DILocation(line: 5019, column: 25, scope: !11188)
!11199 = !DILocation(line: 5019, column: 35, scope: !11188)
!11200 = !DILocation(line: 5019, column: 38, scope: !11188)
!11201 = !DILocation(line: 5019, column: 33, scope: !11188)
!11202 = !DILocation(line: 5019, column: 43, scope: !11188)
!11203 = !DILocation(line: 5019, column: 53, scope: !11188)
!11204 = !DILocation(line: 5019, column: 56, scope: !11188)
!11205 = !DILocation(line: 5019, column: 51, scope: !11188)
!11206 = !DILocation(line: 5019, column: 49, scope: !11188)
!11207 = !DILocalVariable(name: "s2", scope: !11188, file: !1, line: 5020, type: !10)
!11208 = !DILocation(line: 5020, column: 25, scope: !11188)
!11209 = !DILocation(line: 5020, column: 35, scope: !11188)
!11210 = !DILocation(line: 5020, column: 38, scope: !11188)
!11211 = !DILocation(line: 5020, column: 33, scope: !11188)
!11212 = !DILocation(line: 5020, column: 43, scope: !11188)
!11213 = !DILocation(line: 5020, column: 53, scope: !11188)
!11214 = !DILocation(line: 5020, column: 56, scope: !11188)
!11215 = !DILocation(line: 5020, column: 51, scope: !11188)
!11216 = !DILocation(line: 5020, column: 49, scope: !11188)
!11217 = !DILocalVariable(name: "red", scope: !11188, file: !1, line: 5021, type: !10)
!11218 = !DILocation(line: 5021, column: 25, scope: !11188)
!11219 = !DILocation(line: 5021, column: 33, scope: !11188)
!11220 = !DILocation(line: 5021, column: 38, scope: !11188)
!11221 = !DILocation(line: 5021, column: 36, scope: !11188)
!11222 = !DILocation(line: 5021, column: 41, scope: !11188)
!11223 = !DILocation(line: 5021, column: 50, scope: !11188)
!11224 = !DILocalVariable(name: "blue", scope: !11188, file: !1, line: 5022, type: !10)
!11225 = !DILocation(line: 5022, column: 25, scope: !11188)
!11226 = !DILocation(line: 5022, column: 33, scope: !11188)
!11227 = !DILocation(line: 5022, column: 38, scope: !11188)
!11228 = !DILocation(line: 5022, column: 36, scope: !11188)
!11229 = !DILocation(line: 5022, column: 41, scope: !11188)
!11230 = !DILocation(line: 5022, column: 50, scope: !11188)
!11231 = !DILocation(line: 5023, column: 37, scope: !11188)
!11232 = !DILocation(line: 5023, column: 41, scope: !11188)
!11233 = !DILocation(line: 5023, column: 47, scope: !11188)
!11234 = !DILocation(line: 5023, column: 25, scope: !11188)
!11235 = !DILocation(line: 5023, column: 15, scope: !11188)
!11236 = !DILocation(line: 5023, column: 23, scope: !11188)
!11237 = !DILocation(line: 5024, column: 36, scope: !11188)
!11238 = !DILocation(line: 5024, column: 40, scope: !11188)
!11239 = !DILocation(line: 5024, column: 25, scope: !11188)
!11240 = !DILocation(line: 5024, column: 15, scope: !11188)
!11241 = !DILocation(line: 5024, column: 18, scope: !11188)
!11242 = !DILocation(line: 5024, column: 23, scope: !11188)
!11243 = !DILocation(line: 5025, column: 37, scope: !11188)
!11244 = !DILocation(line: 5025, column: 42, scope: !11188)
!11245 = !DILocation(line: 5025, column: 48, scope: !11188)
!11246 = !DILocation(line: 5025, column: 25, scope: !11188)
!11247 = !DILocation(line: 5025, column: 15, scope: !11188)
!11248 = !DILocation(line: 5025, column: 18, scope: !11188)
!11249 = !DILocation(line: 5025, column: 23, scope: !11188)
!11250 = !DILocation(line: 5026, column: 36, scope: !11188)
!11251 = !DILocation(line: 5026, column: 41, scope: !11188)
!11252 = !DILocation(line: 5026, column: 25, scope: !11188)
!11253 = !DILocation(line: 5026, column: 15, scope: !11188)
!11254 = !DILocation(line: 5026, column: 18, scope: !11188)
!11255 = !DILocation(line: 5026, column: 23, scope: !11188)
!11256 = !DILocation(line: 5027, column: 10, scope: !11188)
!11257 = !DILocation(line: 5016, column: 48, scope: !11183)
!11258 = !DILocation(line: 5016, column: 58, scope: !11183)
!11259 = !DILocation(line: 5016, column: 55, scope: !11183)
!11260 = !DILocation(line: 5016, column: 10, scope: !11183)
!11261 = distinct !{!11261, !11186, !11262}
!11262 = !DILocation(line: 5027, column: 10, scope: !11178)
!11263 = !DILocation(line: 5028, column: 7, scope: !11158)
!11264 = !DILocation(line: 5029, column: 4, scope: !11078)
!11265 = !DILocation(line: 5030, column: 1, scope: !11067)
