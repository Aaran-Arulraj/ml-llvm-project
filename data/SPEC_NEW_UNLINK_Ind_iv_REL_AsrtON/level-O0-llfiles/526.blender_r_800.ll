; ModuleID = 'blender/source/blender/editors/screen/screen_edit.c'
source_filename = "blender/source/blender/editors/screen/screen_edit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ScrEdge = type { %struct.ScrEdge*, %struct.ScrEdge*, %struct.ScrVert*, %struct.ScrVert*, i16, i16, i32 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.GHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.AZone = type { %struct.AZone*, %struct.AZone*, %struct.ARegion*, i32, i32, i16, i16, i16, i16, %struct.rcti, float }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.Group = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.BoundBox = type opaque
%struct.RenderEngine = type opaque
%struct.ViewDepths = type opaque
%struct.SmoothView3DStore = type opaque
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.ScreenFrameRateInfo = type { double, double, [8 x float], i16 }
%struct.ScreenAnimData = type { %struct.ARegion*, i16, i16, i16, i32, i32, double }
%struct.vec2f = type { float, float }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [37 x i8] c"error: area %d edge 1 doesn't exist\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"error: area %d edge 2 doesn't exist\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"error: area %d edge 3 doesn't exist\0A\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"error: area %d edge 4 doesn't exist\0A\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@G = external dso_local global %struct.Global, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"%s: set screen\0A\00", align 1
@__func__.ED_screen_refresh = private unnamed_addr constant [18 x i8] c"ED_screen_refresh\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"%s: something wrong in areafullscreen\0A\00", align 1
@__func__.ED_screen_state_toggle = private unnamed_addr constant [23 x i8] c"ED_screen_state_toggle\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%s-%s\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"nonnormal\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [30 x i8] c"refresh_viewport_fps fps_info\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"ScreenAnimData\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"addscrvert\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"addscredge\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"addscrarea\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ScrEdge* @screen_findedge(%struct.bScreen* %sc, %struct.ScrVert* %v1, %struct.ScrVert* %v2) #0 !dbg !3047 {
entry:
  %retval = alloca %struct.ScrEdge*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %v1.addr = alloca %struct.ScrVert*, align 8
  %v2.addr = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3063, metadata !DIExpression()), !dbg !3064
  store %struct.ScrVert* %v1, %struct.ScrVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1.addr, metadata !3065, metadata !DIExpression()), !dbg !3066
  store %struct.ScrVert* %v2, %struct.ScrVert** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v2.addr, metadata !3067, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3069, metadata !DIExpression()), !dbg !3070
  call void @sortscrvert(%struct.ScrVert** %v1.addr, %struct.ScrVert** %v2.addr), !dbg !3071
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3072
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 2, !dbg !3074
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3075
  %1 = load i8*, i8** %first, align 8, !dbg !3075
  %2 = bitcast i8* %1 to %struct.ScrEdge*, !dbg !3072
  store %struct.ScrEdge* %2, %struct.ScrEdge** %se, align 8, !dbg !3076
  br label %for.cond, !dbg !3077

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3078
  %tobool = icmp ne %struct.ScrEdge* %3, null, !dbg !3080
  br i1 %tobool, label %for.body, label %for.end, !dbg !3080

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3081
  %v11 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %4, i32 0, i32 2, !dbg !3083
  %5 = load %struct.ScrVert*, %struct.ScrVert** %v11, align 8, !dbg !3083
  %6 = load %struct.ScrVert*, %struct.ScrVert** %v1.addr, align 8, !dbg !3084
  %cmp = icmp eq %struct.ScrVert* %5, %6, !dbg !3085
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3086

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3087
  %v22 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %7, i32 0, i32 3, !dbg !3088
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v22, align 8, !dbg !3088
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v2.addr, align 8, !dbg !3089
  %cmp3 = icmp eq %struct.ScrVert* %8, %9, !dbg !3090
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3091

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3092
  store %struct.ScrEdge* %10, %struct.ScrEdge** %retval, align 8, !dbg !3093
  br label %return, !dbg !3093

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !3089

for.inc:                                          ; preds = %if.end
  %11 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3094
  %next = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %11, i32 0, i32 0, !dbg !3095
  %12 = load %struct.ScrEdge*, %struct.ScrEdge** %next, align 8, !dbg !3095
  store %struct.ScrEdge* %12, %struct.ScrEdge** %se, align 8, !dbg !3096
  br label %for.cond, !dbg !3097, !llvm.loop !3098

for.end:                                          ; preds = %for.cond
  store %struct.ScrEdge* null, %struct.ScrEdge** %retval, align 8, !dbg !3100
  br label %return, !dbg !3100

return:                                           ; preds = %for.end, %if.then
  %13 = load %struct.ScrEdge*, %struct.ScrEdge** %retval, align 8, !dbg !3101
  ret %struct.ScrEdge* %13, !dbg !3101
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sortscrvert(%struct.ScrVert** %v1, %struct.ScrVert** %v2) #0 !dbg !3102 {
entry:
  %v1.addr = alloca %struct.ScrVert**, align 8
  %v2.addr = alloca %struct.ScrVert**, align 8
  %tmp = alloca %struct.ScrVert*, align 8
  store %struct.ScrVert** %v1, %struct.ScrVert*** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert*** %v1.addr, metadata !3106, metadata !DIExpression()), !dbg !3107
  store %struct.ScrVert** %v2, %struct.ScrVert*** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert*** %v2.addr, metadata !3108, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %tmp, metadata !3110, metadata !DIExpression()), !dbg !3111
  %0 = load %struct.ScrVert**, %struct.ScrVert*** %v1.addr, align 8, !dbg !3112
  %1 = load %struct.ScrVert*, %struct.ScrVert** %0, align 8, !dbg !3114
  %2 = load %struct.ScrVert**, %struct.ScrVert*** %v2.addr, align 8, !dbg !3115
  %3 = load %struct.ScrVert*, %struct.ScrVert** %2, align 8, !dbg !3116
  %cmp = icmp ugt %struct.ScrVert* %1, %3, !dbg !3117
  br i1 %cmp, label %if.then, label %if.end, !dbg !3118

if.then:                                          ; preds = %entry
  %4 = load %struct.ScrVert**, %struct.ScrVert*** %v1.addr, align 8, !dbg !3119
  %5 = load %struct.ScrVert*, %struct.ScrVert** %4, align 8, !dbg !3121
  store %struct.ScrVert* %5, %struct.ScrVert** %tmp, align 8, !dbg !3122
  %6 = load %struct.ScrVert**, %struct.ScrVert*** %v2.addr, align 8, !dbg !3123
  %7 = load %struct.ScrVert*, %struct.ScrVert** %6, align 8, !dbg !3124
  %8 = load %struct.ScrVert**, %struct.ScrVert*** %v1.addr, align 8, !dbg !3125
  store %struct.ScrVert* %7, %struct.ScrVert** %8, align 8, !dbg !3126
  %9 = load %struct.ScrVert*, %struct.ScrVert** %tmp, align 8, !dbg !3127
  %10 = load %struct.ScrVert**, %struct.ScrVert*** %v2.addr, align 8, !dbg !3128
  store %struct.ScrVert* %9, %struct.ScrVert** %10, align 8, !dbg !3129
  br label %if.end, !dbg !3130

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3131
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @removedouble_scrverts(%struct.bScreen* %sc) #0 !dbg !3132 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %v1 = alloca %struct.ScrVert*, align 8
  %verg = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1, metadata !3137, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %verg, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3143, metadata !DIExpression()), !dbg !3144
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3145
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 1, !dbg !3146
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !3147
  %1 = load i8*, i8** %first, align 8, !dbg !3147
  %2 = bitcast i8* %1 to %struct.ScrVert*, !dbg !3145
  store %struct.ScrVert* %2, %struct.ScrVert** %verg, align 8, !dbg !3148
  br label %while.cond, !dbg !3149

while.cond:                                       ; preds = %if.end23, %entry
  %3 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3150
  %tobool = icmp ne %struct.ScrVert* %3, null, !dbg !3149
  br i1 %tobool, label %while.body, label %while.end25, !dbg !3149

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3151
  %newv = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 2, !dbg !3154
  %5 = load %struct.ScrVert*, %struct.ScrVert** %newv, align 8, !dbg !3154
  %cmp = icmp eq %struct.ScrVert* %5, null, !dbg !3155
  br i1 %cmp, label %if.then, label %if.end23, !dbg !3156

if.then:                                          ; preds = %while.body
  %6 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3157
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %6, i32 0, i32 0, !dbg !3159
  %7 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !3159
  store %struct.ScrVert* %7, %struct.ScrVert** %v1, align 8, !dbg !3160
  br label %while.cond1, !dbg !3161

while.cond1:                                      ; preds = %if.end21, %if.then
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3162
  %tobool2 = icmp ne %struct.ScrVert* %8, null, !dbg !3161
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !3161

while.body3:                                      ; preds = %while.cond1
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3163
  %newv4 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %9, i32 0, i32 2, !dbg !3166
  %10 = load %struct.ScrVert*, %struct.ScrVert** %newv4, align 8, !dbg !3166
  %cmp5 = icmp eq %struct.ScrVert* %10, null, !dbg !3167
  br i1 %cmp5, label %if.then6, label %if.end21, !dbg !3168

if.then6:                                         ; preds = %while.body3
  %11 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3169
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %11, i32 0, i32 3, !dbg !3172
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !3173
  %12 = load i16, i16* %x, align 8, !dbg !3173
  %conv = sext i16 %12 to i32, !dbg !3169
  %13 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3174
  %vec7 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %13, i32 0, i32 3, !dbg !3175
  %x8 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec7, i32 0, i32 0, !dbg !3176
  %14 = load i16, i16* %x8, align 8, !dbg !3176
  %conv9 = sext i16 %14 to i32, !dbg !3174
  %cmp10 = icmp eq i32 %conv, %conv9, !dbg !3177
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !3178

land.lhs.true:                                    ; preds = %if.then6
  %15 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3179
  %vec12 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %15, i32 0, i32 3, !dbg !3180
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec12, i32 0, i32 1, !dbg !3181
  %16 = load i16, i16* %y, align 2, !dbg !3181
  %conv13 = sext i16 %16 to i32, !dbg !3179
  %17 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3182
  %vec14 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %17, i32 0, i32 3, !dbg !3183
  %y15 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec14, i32 0, i32 1, !dbg !3184
  %18 = load i16, i16* %y15, align 2, !dbg !3184
  %conv16 = sext i16 %18 to i32, !dbg !3182
  %cmp17 = icmp eq i32 %conv13, %conv16, !dbg !3185
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !3186

if.then19:                                        ; preds = %land.lhs.true
  %19 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3187
  %20 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3189
  %newv20 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %20, i32 0, i32 2, !dbg !3190
  store %struct.ScrVert* %19, %struct.ScrVert** %newv20, align 8, !dbg !3191
  br label %if.end, !dbg !3192

if.end:                                           ; preds = %if.then19, %land.lhs.true, %if.then6
  br label %if.end21, !dbg !3193

if.end21:                                         ; preds = %if.end, %while.body3
  %21 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3194
  %next22 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %21, i32 0, i32 0, !dbg !3195
  %22 = load %struct.ScrVert*, %struct.ScrVert** %next22, align 8, !dbg !3195
  store %struct.ScrVert* %22, %struct.ScrVert** %v1, align 8, !dbg !3196
  br label %while.cond1, !dbg !3161, !llvm.loop !3197

while.end:                                        ; preds = %while.cond1
  br label %if.end23, !dbg !3199

if.end23:                                         ; preds = %while.end, %while.body
  %23 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3200
  %next24 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 0, !dbg !3201
  %24 = load %struct.ScrVert*, %struct.ScrVert** %next24, align 8, !dbg !3201
  store %struct.ScrVert* %24, %struct.ScrVert** %verg, align 8, !dbg !3202
  br label %while.cond, !dbg !3149, !llvm.loop !3203

while.end25:                                      ; preds = %while.cond
  %25 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3205
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %25, i32 0, i32 2, !dbg !3206
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3207
  %26 = load i8*, i8** %first26, align 8, !dbg !3207
  %27 = bitcast i8* %26 to %struct.ScrEdge*, !dbg !3205
  store %struct.ScrEdge* %27, %struct.ScrEdge** %se, align 8, !dbg !3208
  br label %while.cond27, !dbg !3209

while.cond27:                                     ; preds = %if.end44, %while.end25
  %28 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3210
  %tobool28 = icmp ne %struct.ScrEdge* %28, null, !dbg !3209
  br i1 %tobool28, label %while.body29, label %while.end48, !dbg !3209

while.body29:                                     ; preds = %while.cond27
  %29 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3211
  %v130 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %29, i32 0, i32 2, !dbg !3214
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v130, align 8, !dbg !3214
  %newv31 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 2, !dbg !3215
  %31 = load %struct.ScrVert*, %struct.ScrVert** %newv31, align 8, !dbg !3215
  %tobool32 = icmp ne %struct.ScrVert* %31, null, !dbg !3211
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !3216

if.then33:                                        ; preds = %while.body29
  %32 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3217
  %v134 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %32, i32 0, i32 2, !dbg !3218
  %33 = load %struct.ScrVert*, %struct.ScrVert** %v134, align 8, !dbg !3218
  %newv35 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %33, i32 0, i32 2, !dbg !3219
  %34 = load %struct.ScrVert*, %struct.ScrVert** %newv35, align 8, !dbg !3219
  %35 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3220
  %v136 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %35, i32 0, i32 2, !dbg !3221
  store %struct.ScrVert* %34, %struct.ScrVert** %v136, align 8, !dbg !3222
  br label %if.end37, !dbg !3220

if.end37:                                         ; preds = %if.then33, %while.body29
  %36 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3223
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %36, i32 0, i32 3, !dbg !3225
  %37 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3225
  %newv38 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %37, i32 0, i32 2, !dbg !3226
  %38 = load %struct.ScrVert*, %struct.ScrVert** %newv38, align 8, !dbg !3226
  %tobool39 = icmp ne %struct.ScrVert* %38, null, !dbg !3223
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !3227

if.then40:                                        ; preds = %if.end37
  %39 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3228
  %v241 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %39, i32 0, i32 3, !dbg !3229
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v241, align 8, !dbg !3229
  %newv42 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %40, i32 0, i32 2, !dbg !3230
  %41 = load %struct.ScrVert*, %struct.ScrVert** %newv42, align 8, !dbg !3230
  %42 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3231
  %v243 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %42, i32 0, i32 3, !dbg !3232
  store %struct.ScrVert* %41, %struct.ScrVert** %v243, align 8, !dbg !3233
  br label %if.end44, !dbg !3231

if.end44:                                         ; preds = %if.then40, %if.end37
  %43 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3234
  %v145 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %43, i32 0, i32 2, !dbg !3235
  %44 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3236
  %v246 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %44, i32 0, i32 3, !dbg !3237
  call void @sortscrvert(%struct.ScrVert** %v145, %struct.ScrVert** %v246), !dbg !3238
  %45 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3239
  %next47 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %45, i32 0, i32 0, !dbg !3240
  %46 = load %struct.ScrEdge*, %struct.ScrEdge** %next47, align 8, !dbg !3240
  store %struct.ScrEdge* %46, %struct.ScrEdge** %se, align 8, !dbg !3241
  br label %while.cond27, !dbg !3209, !llvm.loop !3242

while.end48:                                      ; preds = %while.cond27
  %47 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3244
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %47, i32 0, i32 3, !dbg !3245
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !3246
  %48 = load i8*, i8** %first49, align 8, !dbg !3246
  %49 = bitcast i8* %48 to %struct.ScrArea*, !dbg !3244
  store %struct.ScrArea* %49, %struct.ScrArea** %sa, align 8, !dbg !3247
  br label %while.cond50, !dbg !3248

while.cond50:                                     ; preds = %if.end82, %while.end48
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3249
  %tobool51 = icmp ne %struct.ScrArea* %50, null, !dbg !3248
  br i1 %tobool51, label %while.body52, label %while.end84, !dbg !3248

while.body52:                                     ; preds = %while.cond50
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3250
  %v153 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 2, !dbg !3253
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v153, align 8, !dbg !3253
  %newv54 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 2, !dbg !3254
  %53 = load %struct.ScrVert*, %struct.ScrVert** %newv54, align 8, !dbg !3254
  %tobool55 = icmp ne %struct.ScrVert* %53, null, !dbg !3250
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !3255

if.then56:                                        ; preds = %while.body52
  %54 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3256
  %v157 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %54, i32 0, i32 2, !dbg !3257
  %55 = load %struct.ScrVert*, %struct.ScrVert** %v157, align 8, !dbg !3257
  %newv58 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %55, i32 0, i32 2, !dbg !3258
  %56 = load %struct.ScrVert*, %struct.ScrVert** %newv58, align 8, !dbg !3258
  %57 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3259
  %v159 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %57, i32 0, i32 2, !dbg !3260
  store %struct.ScrVert* %56, %struct.ScrVert** %v159, align 8, !dbg !3261
  br label %if.end60, !dbg !3259

if.end60:                                         ; preds = %if.then56, %while.body52
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3262
  %v261 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 3, !dbg !3264
  %59 = load %struct.ScrVert*, %struct.ScrVert** %v261, align 8, !dbg !3264
  %newv62 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %59, i32 0, i32 2, !dbg !3265
  %60 = load %struct.ScrVert*, %struct.ScrVert** %newv62, align 8, !dbg !3265
  %tobool63 = icmp ne %struct.ScrVert* %60, null, !dbg !3262
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !3266

if.then64:                                        ; preds = %if.end60
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3267
  %v265 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 3, !dbg !3268
  %62 = load %struct.ScrVert*, %struct.ScrVert** %v265, align 8, !dbg !3268
  %newv66 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %62, i32 0, i32 2, !dbg !3269
  %63 = load %struct.ScrVert*, %struct.ScrVert** %newv66, align 8, !dbg !3269
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3270
  %v267 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 3, !dbg !3271
  store %struct.ScrVert* %63, %struct.ScrVert** %v267, align 8, !dbg !3272
  br label %if.end68, !dbg !3270

if.end68:                                         ; preds = %if.then64, %if.end60
  %65 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3273
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %65, i32 0, i32 4, !dbg !3275
  %66 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !3275
  %newv69 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %66, i32 0, i32 2, !dbg !3276
  %67 = load %struct.ScrVert*, %struct.ScrVert** %newv69, align 8, !dbg !3276
  %tobool70 = icmp ne %struct.ScrVert* %67, null, !dbg !3273
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !3277

if.then71:                                        ; preds = %if.end68
  %68 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3278
  %v372 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %68, i32 0, i32 4, !dbg !3279
  %69 = load %struct.ScrVert*, %struct.ScrVert** %v372, align 8, !dbg !3279
  %newv73 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %69, i32 0, i32 2, !dbg !3280
  %70 = load %struct.ScrVert*, %struct.ScrVert** %newv73, align 8, !dbg !3280
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3281
  %v374 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %71, i32 0, i32 4, !dbg !3282
  store %struct.ScrVert* %70, %struct.ScrVert** %v374, align 8, !dbg !3283
  br label %if.end75, !dbg !3281

if.end75:                                         ; preds = %if.then71, %if.end68
  %72 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3284
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %72, i32 0, i32 5, !dbg !3286
  %73 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !3286
  %newv76 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %73, i32 0, i32 2, !dbg !3287
  %74 = load %struct.ScrVert*, %struct.ScrVert** %newv76, align 8, !dbg !3287
  %tobool77 = icmp ne %struct.ScrVert* %74, null, !dbg !3284
  br i1 %tobool77, label %if.then78, label %if.end82, !dbg !3288

if.then78:                                        ; preds = %if.end75
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3289
  %v479 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %75, i32 0, i32 5, !dbg !3290
  %76 = load %struct.ScrVert*, %struct.ScrVert** %v479, align 8, !dbg !3290
  %newv80 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %76, i32 0, i32 2, !dbg !3291
  %77 = load %struct.ScrVert*, %struct.ScrVert** %newv80, align 8, !dbg !3291
  %78 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3292
  %v481 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %78, i32 0, i32 5, !dbg !3293
  store %struct.ScrVert* %77, %struct.ScrVert** %v481, align 8, !dbg !3294
  br label %if.end82, !dbg !3292

if.end82:                                         ; preds = %if.then78, %if.end75
  %79 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3295
  %next83 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %79, i32 0, i32 0, !dbg !3296
  %80 = load %struct.ScrArea*, %struct.ScrArea** %next83, align 8, !dbg !3296
  store %struct.ScrArea* %80, %struct.ScrArea** %sa, align 8, !dbg !3297
  br label %while.cond50, !dbg !3248, !llvm.loop !3298

while.end84:                                      ; preds = %while.cond50
  %81 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3300
  %vertbase85 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %81, i32 0, i32 1, !dbg !3301
  %first86 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase85, i32 0, i32 0, !dbg !3302
  %82 = load i8*, i8** %first86, align 8, !dbg !3302
  %83 = bitcast i8* %82 to %struct.ScrVert*, !dbg !3300
  store %struct.ScrVert* %83, %struct.ScrVert** %verg, align 8, !dbg !3303
  br label %while.cond87, !dbg !3304

while.cond87:                                     ; preds = %if.end95, %while.end84
  %84 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3305
  %tobool88 = icmp ne %struct.ScrVert* %84, null, !dbg !3304
  br i1 %tobool88, label %while.body89, label %while.end96, !dbg !3304

while.body89:                                     ; preds = %while.cond87
  %85 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3306
  %next90 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %85, i32 0, i32 0, !dbg !3308
  %86 = load %struct.ScrVert*, %struct.ScrVert** %next90, align 8, !dbg !3308
  store %struct.ScrVert* %86, %struct.ScrVert** %v1, align 8, !dbg !3309
  %87 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3310
  %newv91 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %87, i32 0, i32 2, !dbg !3312
  %88 = load %struct.ScrVert*, %struct.ScrVert** %newv91, align 8, !dbg !3312
  %tobool92 = icmp ne %struct.ScrVert* %88, null, !dbg !3310
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !3313

if.then93:                                        ; preds = %while.body89
  %89 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3314
  %vertbase94 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %89, i32 0, i32 1, !dbg !3316
  %90 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3317
  %91 = bitcast %struct.ScrVert* %90 to i8*, !dbg !3317
  call void @BLI_remlink(%struct.ListBase* %vertbase94, i8* %91), !dbg !3318
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3319
  %93 = load %struct.ScrVert*, %struct.ScrVert** %verg, align 8, !dbg !3320
  %94 = bitcast %struct.ScrVert* %93 to i8*, !dbg !3320
  call void %92(i8* %94), !dbg !3319
  br label %if.end95, !dbg !3321

if.end95:                                         ; preds = %if.then93, %while.body89
  %95 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3322
  store %struct.ScrVert* %95, %struct.ScrVert** %verg, align 8, !dbg !3323
  br label %while.cond87, !dbg !3304, !llvm.loop !3324

while.end96:                                      ; preds = %while.cond87
  ret void, !dbg !3326
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @removenotused_scrverts(%struct.bScreen* %sc) #0 !dbg !3327 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %sv = alloca %struct.ScrVert*, align 8
  %svn = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3328, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !3330, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %svn, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3334, metadata !DIExpression()), !dbg !3335
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3336
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 2, !dbg !3337
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3338
  %1 = load i8*, i8** %first, align 8, !dbg !3338
  %2 = bitcast i8* %1 to %struct.ScrEdge*, !dbg !3336
  store %struct.ScrEdge* %2, %struct.ScrEdge** %se, align 8, !dbg !3339
  br label %while.cond, !dbg !3340

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3341
  %tobool = icmp ne %struct.ScrEdge* %3, null, !dbg !3340
  br i1 %tobool, label %while.body, label %while.end, !dbg !3340

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3342
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %4, i32 0, i32 2, !dbg !3344
  %5 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3344
  %flag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %5, i32 0, i32 4, !dbg !3345
  store i16 1, i16* %flag, align 4, !dbg !3346
  %6 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3347
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %6, i32 0, i32 3, !dbg !3348
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3348
  %flag1 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %7, i32 0, i32 4, !dbg !3349
  store i16 1, i16* %flag1, align 4, !dbg !3350
  %8 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3351
  %next = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %8, i32 0, i32 0, !dbg !3352
  %9 = load %struct.ScrEdge*, %struct.ScrEdge** %next, align 8, !dbg !3352
  store %struct.ScrEdge* %9, %struct.ScrEdge** %se, align 8, !dbg !3353
  br label %while.cond, !dbg !3340, !llvm.loop !3354

while.end:                                        ; preds = %while.cond
  %10 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3356
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 1, !dbg !3357
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !3358
  %11 = load i8*, i8** %first2, align 8, !dbg !3358
  %12 = bitcast i8* %11 to %struct.ScrVert*, !dbg !3356
  store %struct.ScrVert* %12, %struct.ScrVert** %sv, align 8, !dbg !3359
  br label %while.cond3, !dbg !3360

while.cond3:                                      ; preds = %if.end, %while.end
  %13 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3361
  %tobool4 = icmp ne %struct.ScrVert* %13, null, !dbg !3360
  br i1 %tobool4, label %while.body5, label %while.end11, !dbg !3360

while.body5:                                      ; preds = %while.cond3
  %14 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3362
  %next6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %14, i32 0, i32 0, !dbg !3364
  %15 = load %struct.ScrVert*, %struct.ScrVert** %next6, align 8, !dbg !3364
  store %struct.ScrVert* %15, %struct.ScrVert** %svn, align 8, !dbg !3365
  %16 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3366
  %flag7 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %16, i32 0, i32 4, !dbg !3368
  %17 = load i16, i16* %flag7, align 4, !dbg !3368
  %conv = sext i16 %17 to i32, !dbg !3366
  %cmp = icmp eq i32 %conv, 0, !dbg !3369
  br i1 %cmp, label %if.then, label %if.else, !dbg !3370

if.then:                                          ; preds = %while.body5
  %18 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3371
  %vertbase9 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 1, !dbg !3373
  %19 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3374
  %20 = bitcast %struct.ScrVert* %19 to i8*, !dbg !3374
  call void @BLI_remlink(%struct.ListBase* %vertbase9, i8* %20), !dbg !3375
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3376
  %22 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3377
  %23 = bitcast %struct.ScrVert* %22 to i8*, !dbg !3377
  call void %21(i8* %23), !dbg !3376
  br label %if.end, !dbg !3378

if.else:                                          ; preds = %while.body5
  %24 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !3379
  %flag10 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %24, i32 0, i32 4, !dbg !3381
  store i16 0, i16* %flag10, align 4, !dbg !3382
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.ScrVert*, %struct.ScrVert** %svn, align 8, !dbg !3383
  store %struct.ScrVert* %25, %struct.ScrVert** %sv, align 8, !dbg !3384
  br label %while.cond3, !dbg !3360, !llvm.loop !3385

while.end11:                                      ; preds = %while.cond3
  ret void, !dbg !3387
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @removedouble_scredges(%struct.bScreen* %sc) #0 !dbg !3388 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %verg = alloca %struct.ScrEdge*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %sn = alloca %struct.ScrEdge*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3389, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %verg, metadata !3391, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %sn, metadata !3395, metadata !DIExpression()), !dbg !3396
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3397
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 2, !dbg !3398
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3399
  %1 = load i8*, i8** %first, align 8, !dbg !3399
  %2 = bitcast i8* %1 to %struct.ScrEdge*, !dbg !3397
  store %struct.ScrEdge* %2, %struct.ScrEdge** %verg, align 8, !dbg !3400
  br label %while.cond, !dbg !3401

while.cond:                                       ; preds = %while.end, %entry
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %verg, align 8, !dbg !3402
  %tobool = icmp ne %struct.ScrEdge* %3, null, !dbg !3401
  br i1 %tobool, label %while.body, label %while.end10, !dbg !3401

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ScrEdge*, %struct.ScrEdge** %verg, align 8, !dbg !3403
  %next = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %4, i32 0, i32 0, !dbg !3405
  %5 = load %struct.ScrEdge*, %struct.ScrEdge** %next, align 8, !dbg !3405
  store %struct.ScrEdge* %5, %struct.ScrEdge** %se, align 8, !dbg !3406
  br label %while.cond1, !dbg !3407

while.cond1:                                      ; preds = %if.end, %while.body
  %6 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3408
  %tobool2 = icmp ne %struct.ScrEdge* %6, null, !dbg !3407
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !3407

while.body3:                                      ; preds = %while.cond1
  %7 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3409
  %next4 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %7, i32 0, i32 0, !dbg !3411
  %8 = load %struct.ScrEdge*, %struct.ScrEdge** %next4, align 8, !dbg !3411
  store %struct.ScrEdge* %8, %struct.ScrEdge** %sn, align 8, !dbg !3412
  %9 = load %struct.ScrEdge*, %struct.ScrEdge** %verg, align 8, !dbg !3413
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %9, i32 0, i32 2, !dbg !3415
  %10 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3415
  %11 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3416
  %v15 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %11, i32 0, i32 2, !dbg !3417
  %12 = load %struct.ScrVert*, %struct.ScrVert** %v15, align 8, !dbg !3417
  %cmp = icmp eq %struct.ScrVert* %10, %12, !dbg !3418
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3419

land.lhs.true:                                    ; preds = %while.body3
  %13 = load %struct.ScrEdge*, %struct.ScrEdge** %verg, align 8, !dbg !3420
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %13, i32 0, i32 3, !dbg !3421
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3421
  %15 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3422
  %v26 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %15, i32 0, i32 3, !dbg !3423
  %16 = load %struct.ScrVert*, %struct.ScrVert** %v26, align 8, !dbg !3423
  %cmp7 = icmp eq %struct.ScrVert* %14, %16, !dbg !3424
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3425

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3426
  %edgebase8 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 2, !dbg !3428
  %18 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3429
  %19 = bitcast %struct.ScrEdge* %18 to i8*, !dbg !3429
  call void @BLI_remlink(%struct.ListBase* %edgebase8, i8* %19), !dbg !3430
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3431
  %21 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3432
  %22 = bitcast %struct.ScrEdge* %21 to i8*, !dbg !3432
  call void %20(i8* %22), !dbg !3431
  br label %if.end, !dbg !3433

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body3
  %23 = load %struct.ScrEdge*, %struct.ScrEdge** %sn, align 8, !dbg !3434
  store %struct.ScrEdge* %23, %struct.ScrEdge** %se, align 8, !dbg !3435
  br label %while.cond1, !dbg !3407, !llvm.loop !3436

while.end:                                        ; preds = %while.cond1
  %24 = load %struct.ScrEdge*, %struct.ScrEdge** %verg, align 8, !dbg !3438
  %next9 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %24, i32 0, i32 0, !dbg !3439
  %25 = load %struct.ScrEdge*, %struct.ScrEdge** %next9, align 8, !dbg !3439
  store %struct.ScrEdge* %25, %struct.ScrEdge** %verg, align 8, !dbg !3440
  br label %while.cond, !dbg !3401, !llvm.loop !3441

while.end10:                                      ; preds = %while.cond
  ret void, !dbg !3443
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @removenotused_scredges(%struct.bScreen* %sc) #0 !dbg !3444 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %sen = alloca %struct.ScrEdge*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %a = alloca i32, align 4
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3445, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3447, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %sen, metadata !3449, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3451, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3453, metadata !DIExpression()), !dbg !3454
  store i32 0, i32* %a, align 4, !dbg !3454
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3455
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 3, !dbg !3456
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !3457
  %1 = load i8*, i8** %first, align 8, !dbg !3457
  %2 = bitcast i8* %1 to %struct.ScrArea*, !dbg !3455
  store %struct.ScrArea* %2, %struct.ScrArea** %sa, align 8, !dbg !3458
  br label %while.cond, !dbg !3459

while.cond:                                       ; preds = %if.end26, %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3460
  %tobool = icmp ne %struct.ScrArea* %3, null, !dbg !3459
  br i1 %tobool, label %while.body, label %while.end, !dbg !3459

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3461
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3463
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 2, !dbg !3464
  %6 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3464
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3465
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 3, !dbg !3466
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3466
  %call = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %4, %struct.ScrVert* %6, %struct.ScrVert* %8), !dbg !3467
  store %struct.ScrEdge* %call, %struct.ScrEdge** %se, align 8, !dbg !3468
  %9 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3469
  %cmp = icmp eq %struct.ScrEdge* %9, null, !dbg !3471
  br i1 %cmp, label %if.then, label %if.else, !dbg !3472

if.then:                                          ; preds = %while.body
  %10 = load i32, i32* %a, align 4, !dbg !3473
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 %10), !dbg !3474
  br label %if.end, !dbg !3474

if.else:                                          ; preds = %while.body
  %11 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3475
  %flag = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %11, i32 0, i32 5, !dbg !3476
  store i16 1, i16* %flag, align 2, !dbg !3477
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3478
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3479
  %v22 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 3, !dbg !3480
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v22, align 8, !dbg !3480
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3481
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 4, !dbg !3482
  %16 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !3482
  %call3 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %12, %struct.ScrVert* %14, %struct.ScrVert* %16), !dbg !3483
  store %struct.ScrEdge* %call3, %struct.ScrEdge** %se, align 8, !dbg !3484
  %17 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3485
  %cmp4 = icmp eq %struct.ScrEdge* %17, null, !dbg !3487
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !3488

if.then5:                                         ; preds = %if.end
  %18 = load i32, i32* %a, align 4, !dbg !3489
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %18), !dbg !3490
  br label %if.end9, !dbg !3490

if.else7:                                         ; preds = %if.end
  %19 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3491
  %flag8 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %19, i32 0, i32 5, !dbg !3492
  store i16 1, i16* %flag8, align 2, !dbg !3493
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %20 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3494
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3495
  %v310 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 4, !dbg !3496
  %22 = load %struct.ScrVert*, %struct.ScrVert** %v310, align 8, !dbg !3496
  %23 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3497
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %23, i32 0, i32 5, !dbg !3498
  %24 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !3498
  %call11 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %20, %struct.ScrVert* %22, %struct.ScrVert* %24), !dbg !3499
  store %struct.ScrEdge* %call11, %struct.ScrEdge** %se, align 8, !dbg !3500
  %25 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3501
  %cmp12 = icmp eq %struct.ScrEdge* %25, null, !dbg !3503
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !3504

if.then13:                                        ; preds = %if.end9
  %26 = load i32, i32* %a, align 4, !dbg !3505
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 %26), !dbg !3506
  br label %if.end17, !dbg !3506

if.else15:                                        ; preds = %if.end9
  %27 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3507
  %flag16 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %27, i32 0, i32 5, !dbg !3508
  store i16 1, i16* %flag16, align 2, !dbg !3509
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then13
  %28 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3510
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3511
  %v418 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 5, !dbg !3512
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v418, align 8, !dbg !3512
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3513
  %v119 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 2, !dbg !3514
  %32 = load %struct.ScrVert*, %struct.ScrVert** %v119, align 8, !dbg !3514
  %call20 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %28, %struct.ScrVert* %30, %struct.ScrVert* %32), !dbg !3515
  store %struct.ScrEdge* %call20, %struct.ScrEdge** %se, align 8, !dbg !3516
  %33 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3517
  %cmp21 = icmp eq %struct.ScrEdge* %33, null, !dbg !3519
  br i1 %cmp21, label %if.then22, label %if.else24, !dbg !3520

if.then22:                                        ; preds = %if.end17
  %34 = load i32, i32* %a, align 4, !dbg !3521
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i32 %34), !dbg !3522
  br label %if.end26, !dbg !3522

if.else24:                                        ; preds = %if.end17
  %35 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3523
  %flag25 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %35, i32 0, i32 5, !dbg !3524
  store i16 1, i16* %flag25, align 2, !dbg !3525
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3526
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %36, i32 0, i32 0, !dbg !3527
  %37 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !3527
  store %struct.ScrArea* %37, %struct.ScrArea** %sa, align 8, !dbg !3528
  %38 = load i32, i32* %a, align 4, !dbg !3529
  %inc = add nsw i32 %38, 1, !dbg !3529
  store i32 %inc, i32* %a, align 4, !dbg !3529
  br label %while.cond, !dbg !3459, !llvm.loop !3530

while.end:                                        ; preds = %while.cond
  %39 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3532
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %39, i32 0, i32 2, !dbg !3533
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3534
  %40 = load i8*, i8** %first27, align 8, !dbg !3534
  %41 = bitcast i8* %40 to %struct.ScrEdge*, !dbg !3532
  store %struct.ScrEdge* %41, %struct.ScrEdge** %se, align 8, !dbg !3535
  br label %while.cond28, !dbg !3536

while.cond28:                                     ; preds = %if.end39, %while.end
  %42 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3537
  %tobool29 = icmp ne %struct.ScrEdge* %42, null, !dbg !3536
  br i1 %tobool29, label %while.body30, label %while.end40, !dbg !3536

while.body30:                                     ; preds = %while.cond28
  %43 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3538
  %next31 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %43, i32 0, i32 0, !dbg !3540
  %44 = load %struct.ScrEdge*, %struct.ScrEdge** %next31, align 8, !dbg !3540
  store %struct.ScrEdge* %44, %struct.ScrEdge** %sen, align 8, !dbg !3541
  %45 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3542
  %flag32 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %45, i32 0, i32 5, !dbg !3544
  %46 = load i16, i16* %flag32, align 2, !dbg !3544
  %conv = sext i16 %46 to i32, !dbg !3542
  %cmp33 = icmp eq i32 %conv, 0, !dbg !3545
  br i1 %cmp33, label %if.then35, label %if.else37, !dbg !3546

if.then35:                                        ; preds = %while.body30
  %47 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3547
  %edgebase36 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %47, i32 0, i32 2, !dbg !3549
  %48 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3550
  %49 = bitcast %struct.ScrEdge* %48 to i8*, !dbg !3550
  call void @BLI_remlink(%struct.ListBase* %edgebase36, i8* %49), !dbg !3551
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3552
  %51 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3553
  %52 = bitcast %struct.ScrEdge* %51 to i8*, !dbg !3553
  call void %50(i8* %52), !dbg !3552
  br label %if.end39, !dbg !3554

if.else37:                                        ; preds = %while.body30
  %53 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3555
  %flag38 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %53, i32 0, i32 5, !dbg !3557
  store i16 0, i16* %flag38, align 2, !dbg !3558
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then35
  %54 = load %struct.ScrEdge*, %struct.ScrEdge** %sen, align 8, !dbg !3559
  store %struct.ScrEdge* %54, %struct.ScrEdge** %se, align 8, !dbg !3560
  br label %while.cond28, !dbg !3536, !llvm.loop !3561

while.end40:                                      ; preds = %while.cond28
  ret void, !dbg !3563
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @scredge_is_horizontal(%struct.ScrEdge* %se) #0 !dbg !3564 {
entry:
  %se.addr = alloca %struct.ScrEdge*, align 8
  store %struct.ScrEdge* %se, %struct.ScrEdge** %se.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se.addr, metadata !3567, metadata !DIExpression()), !dbg !3568
  %0 = load %struct.ScrEdge*, %struct.ScrEdge** %se.addr, align 8, !dbg !3569
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %0, i32 0, i32 2, !dbg !3570
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3570
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !3571
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 1, !dbg !3572
  %2 = load i16, i16* %y, align 2, !dbg !3572
  %conv = sext i16 %2 to i32, !dbg !3569
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %se.addr, align 8, !dbg !3573
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %3, i32 0, i32 3, !dbg !3574
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3574
  %vec1 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !3575
  %y2 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec1, i32 0, i32 1, !dbg !3576
  %5 = load i16, i16* %y2, align 2, !dbg !3576
  %conv3 = sext i16 %5 to i32, !dbg !3573
  %cmp = icmp eq i32 %conv, %conv3, !dbg !3577
  %conv4 = zext i1 %cmp to i32, !dbg !3577
  %conv5 = trunc i32 %conv4 to i8, !dbg !3578
  ret i8 %conv5, !dbg !3579
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %sc, i32 %winsize_x, i32 %winsize_y, i32 %mx, i32 %my) #0 !dbg !3580 {
entry:
  %retval = alloca %struct.ScrEdge*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %winsize_x.addr = alloca i32, align 4
  %winsize_y.addr = alloca i32, align 4
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  %se = alloca %struct.ScrEdge*, align 8
  %safety = alloca i32, align 4
  %min = alloca i16, align 2
  %max = alloca i16, align 2
  %min88 = alloca i16, align 2
  %max89 = alloca i16, align 2
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3584, metadata !DIExpression()), !dbg !3585
  store i32 %winsize_x, i32* %winsize_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_x.addr, metadata !3586, metadata !DIExpression()), !dbg !3587
  store i32 %winsize_y, i32* %winsize_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_y.addr, metadata !3588, metadata !DIExpression()), !dbg !3589
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !3590, metadata !DIExpression()), !dbg !3591
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !3594, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata i32* %safety, metadata !3596, metadata !DIExpression()), !dbg !3597
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3598
  %conv = sext i16 %0 to i32, !dbg !3599
  %div = sdiv i32 %conv, 10, !dbg !3600
  store i32 %div, i32* %safety, align 4, !dbg !3597
  %1 = load i32, i32* %safety, align 4, !dbg !3601
  %cmp = icmp slt i32 %1, 2, !dbg !3603
  br i1 %cmp, label %if.then, label %if.end, !dbg !3604

if.then:                                          ; preds = %entry
  store i32 2, i32* %safety, align 4, !dbg !3605
  br label %if.end, !dbg !3606

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3607
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 2, !dbg !3609
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !3610
  %3 = load i8*, i8** %first, align 8, !dbg !3610
  %4 = bitcast i8* %3 to %struct.ScrEdge*, !dbg !3607
  store %struct.ScrEdge* %4, %struct.ScrEdge** %se, align 8, !dbg !3611
  br label %for.cond, !dbg !3612

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3613
  %tobool = icmp ne %struct.ScrEdge* %5, null, !dbg !3615
  br i1 %tobool, label %for.body, label %for.end, !dbg !3615

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3616
  %call = call zeroext i8 @scredge_is_horizontal(%struct.ScrEdge* %6), !dbg !3619
  %tobool2 = icmp ne i8 %call, 0, !dbg !3619
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3620

if.then3:                                         ; preds = %for.body
  %7 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3621
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %7, i32 0, i32 2, !dbg !3624
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3624
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %8, i32 0, i32 3, !dbg !3625
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 1, !dbg !3626
  %9 = load i16, i16* %y, align 2, !dbg !3626
  %conv4 = sext i16 %9 to i32, !dbg !3621
  %cmp5 = icmp sgt i32 %conv4, 0, !dbg !3627
  br i1 %cmp5, label %land.lhs.true, label %if.end72, !dbg !3628

land.lhs.true:                                    ; preds = %if.then3
  %10 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3629
  %v17 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %10, i32 0, i32 2, !dbg !3630
  %11 = load %struct.ScrVert*, %struct.ScrVert** %v17, align 8, !dbg !3630
  %vec8 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %11, i32 0, i32 3, !dbg !3631
  %y9 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec8, i32 0, i32 1, !dbg !3632
  %12 = load i16, i16* %y9, align 2, !dbg !3632
  %conv10 = sext i16 %12 to i32, !dbg !3629
  %13 = load i32, i32* %winsize_y.addr, align 4, !dbg !3633
  %sub = sub nsw i32 %13, 1, !dbg !3634
  %cmp11 = icmp slt i32 %conv10, %sub, !dbg !3635
  br i1 %cmp11, label %if.then13, label %if.end72, !dbg !3636

if.then13:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %min, metadata !3637, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata i16* %max, metadata !3640, metadata !DIExpression()), !dbg !3641
  %14 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3642
  %v114 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %14, i32 0, i32 2, !dbg !3642
  %15 = load %struct.ScrVert*, %struct.ScrVert** %v114, align 8, !dbg !3642
  %vec15 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %15, i32 0, i32 3, !dbg !3642
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec15, i32 0, i32 0, !dbg !3642
  %16 = load i16, i16* %x, align 8, !dbg !3642
  %conv16 = sext i16 %16 to i32, !dbg !3642
  %17 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3642
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %17, i32 0, i32 3, !dbg !3642
  %18 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3642
  %vec17 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %18, i32 0, i32 3, !dbg !3642
  %x18 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec17, i32 0, i32 0, !dbg !3642
  %19 = load i16, i16* %x18, align 8, !dbg !3642
  %conv19 = sext i16 %19 to i32, !dbg !3642
  %cmp20 = icmp slt i32 %conv16, %conv19, !dbg !3642
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !3642

cond.true:                                        ; preds = %if.then13
  %20 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3642
  %v122 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %20, i32 0, i32 2, !dbg !3642
  %21 = load %struct.ScrVert*, %struct.ScrVert** %v122, align 8, !dbg !3642
  %vec23 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %21, i32 0, i32 3, !dbg !3642
  %x24 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec23, i32 0, i32 0, !dbg !3642
  %22 = load i16, i16* %x24, align 8, !dbg !3642
  %conv25 = sext i16 %22 to i32, !dbg !3642
  br label %cond.end, !dbg !3642

cond.false:                                       ; preds = %if.then13
  %23 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3642
  %v226 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %23, i32 0, i32 3, !dbg !3642
  %24 = load %struct.ScrVert*, %struct.ScrVert** %v226, align 8, !dbg !3642
  %vec27 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %24, i32 0, i32 3, !dbg !3642
  %x28 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec27, i32 0, i32 0, !dbg !3642
  %25 = load i16, i16* %x28, align 8, !dbg !3642
  %conv29 = sext i16 %25 to i32, !dbg !3642
  br label %cond.end, !dbg !3642

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv25, %cond.true ], [ %conv29, %cond.false ], !dbg !3642
  %conv30 = trunc i32 %cond to i16, !dbg !3642
  store i16 %conv30, i16* %min, align 2, !dbg !3643
  %26 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3644
  %v131 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %26, i32 0, i32 2, !dbg !3644
  %27 = load %struct.ScrVert*, %struct.ScrVert** %v131, align 8, !dbg !3644
  %vec32 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %27, i32 0, i32 3, !dbg !3644
  %x33 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec32, i32 0, i32 0, !dbg !3644
  %28 = load i16, i16* %x33, align 8, !dbg !3644
  %conv34 = sext i16 %28 to i32, !dbg !3644
  %29 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3644
  %v235 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %29, i32 0, i32 3, !dbg !3644
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v235, align 8, !dbg !3644
  %vec36 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 3, !dbg !3644
  %x37 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec36, i32 0, i32 0, !dbg !3644
  %31 = load i16, i16* %x37, align 8, !dbg !3644
  %conv38 = sext i16 %31 to i32, !dbg !3644
  %cmp39 = icmp sgt i32 %conv34, %conv38, !dbg !3644
  br i1 %cmp39, label %cond.true41, label %cond.false46, !dbg !3644

cond.true41:                                      ; preds = %cond.end
  %32 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3644
  %v142 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %32, i32 0, i32 2, !dbg !3644
  %33 = load %struct.ScrVert*, %struct.ScrVert** %v142, align 8, !dbg !3644
  %vec43 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %33, i32 0, i32 3, !dbg !3644
  %x44 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec43, i32 0, i32 0, !dbg !3644
  %34 = load i16, i16* %x44, align 8, !dbg !3644
  %conv45 = sext i16 %34 to i32, !dbg !3644
  br label %cond.end51, !dbg !3644

cond.false46:                                     ; preds = %cond.end
  %35 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3644
  %v247 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %35, i32 0, i32 3, !dbg !3644
  %36 = load %struct.ScrVert*, %struct.ScrVert** %v247, align 8, !dbg !3644
  %vec48 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %36, i32 0, i32 3, !dbg !3644
  %x49 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec48, i32 0, i32 0, !dbg !3644
  %37 = load i16, i16* %x49, align 8, !dbg !3644
  %conv50 = sext i16 %37 to i32, !dbg !3644
  br label %cond.end51, !dbg !3644

cond.end51:                                       ; preds = %cond.false46, %cond.true41
  %cond52 = phi i32 [ %conv45, %cond.true41 ], [ %conv50, %cond.false46 ], !dbg !3644
  %conv53 = trunc i32 %cond52 to i16, !dbg !3644
  store i16 %conv53, i16* %max, align 2, !dbg !3645
  %38 = load i32, i32* %my.addr, align 4, !dbg !3646
  %39 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3648
  %v154 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %39, i32 0, i32 2, !dbg !3649
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v154, align 8, !dbg !3649
  %vec55 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %40, i32 0, i32 3, !dbg !3650
  %y56 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec55, i32 0, i32 1, !dbg !3651
  %41 = load i16, i16* %y56, align 2, !dbg !3651
  %conv57 = sext i16 %41 to i32, !dbg !3648
  %sub58 = sub nsw i32 %38, %conv57, !dbg !3652
  %call59 = call i32 @abs(i32 %sub58) #4, !dbg !3653
  %42 = load i32, i32* %safety, align 4, !dbg !3654
  %cmp60 = icmp sle i32 %call59, %42, !dbg !3655
  br i1 %cmp60, label %land.lhs.true62, label %if.end71, !dbg !3656

land.lhs.true62:                                  ; preds = %cond.end51
  %43 = load i32, i32* %mx.addr, align 4, !dbg !3657
  %44 = load i16, i16* %min, align 2, !dbg !3658
  %conv63 = sext i16 %44 to i32, !dbg !3658
  %cmp64 = icmp sge i32 %43, %conv63, !dbg !3659
  br i1 %cmp64, label %land.lhs.true66, label %if.end71, !dbg !3660

land.lhs.true66:                                  ; preds = %land.lhs.true62
  %45 = load i32, i32* %mx.addr, align 4, !dbg !3661
  %46 = load i16, i16* %max, align 2, !dbg !3662
  %conv67 = sext i16 %46 to i32, !dbg !3662
  %cmp68 = icmp sle i32 %45, %conv67, !dbg !3663
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !3664

if.then70:                                        ; preds = %land.lhs.true66
  %47 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3665
  store %struct.ScrEdge* %47, %struct.ScrEdge** %retval, align 8, !dbg !3666
  br label %return, !dbg !3666

if.end71:                                         ; preds = %land.lhs.true66, %land.lhs.true62, %cond.end51
  br label %if.end72, !dbg !3667

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %if.then3
  br label %if.end155, !dbg !3668

if.else:                                          ; preds = %for.body
  %48 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3669
  %v173 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %48, i32 0, i32 2, !dbg !3672
  %49 = load %struct.ScrVert*, %struct.ScrVert** %v173, align 8, !dbg !3672
  %vec74 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %49, i32 0, i32 3, !dbg !3673
  %x75 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec74, i32 0, i32 0, !dbg !3674
  %50 = load i16, i16* %x75, align 8, !dbg !3674
  %conv76 = sext i16 %50 to i32, !dbg !3669
  %cmp77 = icmp sgt i32 %conv76, 0, !dbg !3675
  br i1 %cmp77, label %land.lhs.true79, label %if.end154, !dbg !3676

land.lhs.true79:                                  ; preds = %if.else
  %51 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3677
  %v180 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %51, i32 0, i32 2, !dbg !3678
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v180, align 8, !dbg !3678
  %vec81 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 3, !dbg !3679
  %x82 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec81, i32 0, i32 0, !dbg !3680
  %53 = load i16, i16* %x82, align 8, !dbg !3680
  %conv83 = sext i16 %53 to i32, !dbg !3677
  %54 = load i32, i32* %winsize_x.addr, align 4, !dbg !3681
  %sub84 = sub nsw i32 %54, 1, !dbg !3682
  %cmp85 = icmp slt i32 %conv83, %sub84, !dbg !3683
  br i1 %cmp85, label %if.then87, label %if.end154, !dbg !3684

if.then87:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata i16* %min88, metadata !3685, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata i16* %max89, metadata !3688, metadata !DIExpression()), !dbg !3689
  %55 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3690
  %v190 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %55, i32 0, i32 2, !dbg !3690
  %56 = load %struct.ScrVert*, %struct.ScrVert** %v190, align 8, !dbg !3690
  %vec91 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %56, i32 0, i32 3, !dbg !3690
  %y92 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec91, i32 0, i32 1, !dbg !3690
  %57 = load i16, i16* %y92, align 2, !dbg !3690
  %conv93 = sext i16 %57 to i32, !dbg !3690
  %58 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3690
  %v294 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %58, i32 0, i32 3, !dbg !3690
  %59 = load %struct.ScrVert*, %struct.ScrVert** %v294, align 8, !dbg !3690
  %vec95 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %59, i32 0, i32 3, !dbg !3690
  %y96 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec95, i32 0, i32 1, !dbg !3690
  %60 = load i16, i16* %y96, align 2, !dbg !3690
  %conv97 = sext i16 %60 to i32, !dbg !3690
  %cmp98 = icmp slt i32 %conv93, %conv97, !dbg !3690
  br i1 %cmp98, label %cond.true100, label %cond.false105, !dbg !3690

cond.true100:                                     ; preds = %if.then87
  %61 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3690
  %v1101 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %61, i32 0, i32 2, !dbg !3690
  %62 = load %struct.ScrVert*, %struct.ScrVert** %v1101, align 8, !dbg !3690
  %vec102 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %62, i32 0, i32 3, !dbg !3690
  %y103 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec102, i32 0, i32 1, !dbg !3690
  %63 = load i16, i16* %y103, align 2, !dbg !3690
  %conv104 = sext i16 %63 to i32, !dbg !3690
  br label %cond.end110, !dbg !3690

cond.false105:                                    ; preds = %if.then87
  %64 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3690
  %v2106 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %64, i32 0, i32 3, !dbg !3690
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v2106, align 8, !dbg !3690
  %vec107 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %65, i32 0, i32 3, !dbg !3690
  %y108 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec107, i32 0, i32 1, !dbg !3690
  %66 = load i16, i16* %y108, align 2, !dbg !3690
  %conv109 = sext i16 %66 to i32, !dbg !3690
  br label %cond.end110, !dbg !3690

cond.end110:                                      ; preds = %cond.false105, %cond.true100
  %cond111 = phi i32 [ %conv104, %cond.true100 ], [ %conv109, %cond.false105 ], !dbg !3690
  %conv112 = trunc i32 %cond111 to i16, !dbg !3690
  store i16 %conv112, i16* %min88, align 2, !dbg !3691
  %67 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3692
  %v1113 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %67, i32 0, i32 2, !dbg !3692
  %68 = load %struct.ScrVert*, %struct.ScrVert** %v1113, align 8, !dbg !3692
  %vec114 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %68, i32 0, i32 3, !dbg !3692
  %y115 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec114, i32 0, i32 1, !dbg !3692
  %69 = load i16, i16* %y115, align 2, !dbg !3692
  %conv116 = sext i16 %69 to i32, !dbg !3692
  %70 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3692
  %v2117 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %70, i32 0, i32 3, !dbg !3692
  %71 = load %struct.ScrVert*, %struct.ScrVert** %v2117, align 8, !dbg !3692
  %vec118 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %71, i32 0, i32 3, !dbg !3692
  %y119 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec118, i32 0, i32 1, !dbg !3692
  %72 = load i16, i16* %y119, align 2, !dbg !3692
  %conv120 = sext i16 %72 to i32, !dbg !3692
  %cmp121 = icmp sgt i32 %conv116, %conv120, !dbg !3692
  br i1 %cmp121, label %cond.true123, label %cond.false128, !dbg !3692

cond.true123:                                     ; preds = %cond.end110
  %73 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3692
  %v1124 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %73, i32 0, i32 2, !dbg !3692
  %74 = load %struct.ScrVert*, %struct.ScrVert** %v1124, align 8, !dbg !3692
  %vec125 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %74, i32 0, i32 3, !dbg !3692
  %y126 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec125, i32 0, i32 1, !dbg !3692
  %75 = load i16, i16* %y126, align 2, !dbg !3692
  %conv127 = sext i16 %75 to i32, !dbg !3692
  br label %cond.end133, !dbg !3692

cond.false128:                                    ; preds = %cond.end110
  %76 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3692
  %v2129 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %76, i32 0, i32 3, !dbg !3692
  %77 = load %struct.ScrVert*, %struct.ScrVert** %v2129, align 8, !dbg !3692
  %vec130 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %77, i32 0, i32 3, !dbg !3692
  %y131 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec130, i32 0, i32 1, !dbg !3692
  %78 = load i16, i16* %y131, align 2, !dbg !3692
  %conv132 = sext i16 %78 to i32, !dbg !3692
  br label %cond.end133, !dbg !3692

cond.end133:                                      ; preds = %cond.false128, %cond.true123
  %cond134 = phi i32 [ %conv127, %cond.true123 ], [ %conv132, %cond.false128 ], !dbg !3692
  %conv135 = trunc i32 %cond134 to i16, !dbg !3692
  store i16 %conv135, i16* %max89, align 2, !dbg !3693
  %79 = load i32, i32* %mx.addr, align 4, !dbg !3694
  %80 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3696
  %v1136 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %80, i32 0, i32 2, !dbg !3697
  %81 = load %struct.ScrVert*, %struct.ScrVert** %v1136, align 8, !dbg !3697
  %vec137 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %81, i32 0, i32 3, !dbg !3698
  %x138 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec137, i32 0, i32 0, !dbg !3699
  %82 = load i16, i16* %x138, align 8, !dbg !3699
  %conv139 = sext i16 %82 to i32, !dbg !3696
  %sub140 = sub nsw i32 %79, %conv139, !dbg !3700
  %call141 = call i32 @abs(i32 %sub140) #4, !dbg !3701
  %83 = load i32, i32* %safety, align 4, !dbg !3702
  %cmp142 = icmp sle i32 %call141, %83, !dbg !3703
  br i1 %cmp142, label %land.lhs.true144, label %if.end153, !dbg !3704

land.lhs.true144:                                 ; preds = %cond.end133
  %84 = load i32, i32* %my.addr, align 4, !dbg !3705
  %85 = load i16, i16* %min88, align 2, !dbg !3706
  %conv145 = sext i16 %85 to i32, !dbg !3706
  %cmp146 = icmp sge i32 %84, %conv145, !dbg !3707
  br i1 %cmp146, label %land.lhs.true148, label %if.end153, !dbg !3708

land.lhs.true148:                                 ; preds = %land.lhs.true144
  %86 = load i32, i32* %my.addr, align 4, !dbg !3709
  %87 = load i16, i16* %max89, align 2, !dbg !3710
  %conv149 = sext i16 %87 to i32, !dbg !3710
  %cmp150 = icmp sle i32 %86, %conv149, !dbg !3711
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !3712

if.then152:                                       ; preds = %land.lhs.true148
  %88 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3713
  store %struct.ScrEdge* %88, %struct.ScrEdge** %retval, align 8, !dbg !3714
  br label %return, !dbg !3714

if.end153:                                        ; preds = %land.lhs.true148, %land.lhs.true144, %cond.end133
  br label %if.end154, !dbg !3715

if.end154:                                        ; preds = %if.end153, %land.lhs.true79, %if.else
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end72
  br label %for.inc, !dbg !3716

for.inc:                                          ; preds = %if.end155
  %89 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !3717
  %next = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %89, i32 0, i32 0, !dbg !3718
  %90 = load %struct.ScrEdge*, %struct.ScrEdge** %next, align 8, !dbg !3718
  store %struct.ScrEdge* %90, %struct.ScrEdge** %se, align 8, !dbg !3719
  br label %for.cond, !dbg !3720, !llvm.loop !3721

for.end:                                          ; preds = %for.cond
  store %struct.ScrEdge* null, %struct.ScrEdge** %retval, align 8, !dbg !3723
  br label %return, !dbg !3723

return:                                           ; preds = %for.end, %if.then152, %if.then70
  %91 = load %struct.ScrEdge*, %struct.ScrEdge** %retval, align 8, !dbg !3724
  ret %struct.ScrEdge* %91, !dbg !3724
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ScrArea* @area_split(%struct.bScreen* %sc, %struct.ScrArea* %sa, i8 zeroext %dir, float %fac, i32 %merge) #0 !dbg !3725 {
entry:
  %retval = alloca %struct.ScrArea*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  %fac.addr = alloca float, align 4
  %merge.addr = alloca i32, align 4
  %newa = alloca %struct.ScrArea*, align 8
  %sv1 = alloca %struct.ScrVert*, align 8
  %sv2 = alloca %struct.ScrVert*, align 8
  %split = alloca i16, align 2
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !3732, metadata !DIExpression()), !dbg !3733
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !3734, metadata !DIExpression()), !dbg !3735
  store i32 %merge, i32* %merge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %merge.addr, metadata !3736, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %newa, metadata !3738, metadata !DIExpression()), !dbg !3739
  store %struct.ScrArea* null, %struct.ScrArea** %newa, align 8, !dbg !3739
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv1, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv2, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.declare(metadata i16* %split, metadata !3744, metadata !DIExpression()), !dbg !3745
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3746
  %cmp = icmp eq %struct.ScrArea* %0, null, !dbg !3748
  br i1 %cmp, label %if.then, label %if.end, !dbg !3749

if.then:                                          ; preds = %entry
  store %struct.ScrArea* null, %struct.ScrArea** %retval, align 8, !dbg !3750
  br label %return, !dbg !3750

if.end:                                           ; preds = %entry
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3751
  %2 = load i8, i8* %dir.addr, align 1, !dbg !3752
  %3 = load float, float* %fac.addr, align 4, !dbg !3753
  %call = call signext i16 @testsplitpoint(%struct.ScrArea* %1, i8 zeroext %2, float %3), !dbg !3754
  store i16 %call, i16* %split, align 2, !dbg !3755
  %4 = load i16, i16* %split, align 2, !dbg !3756
  %conv = sext i16 %4 to i32, !dbg !3756
  %cmp1 = icmp eq i32 %conv, 0, !dbg !3758
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !3759

if.then3:                                         ; preds = %if.end
  store %struct.ScrArea* null, %struct.ScrArea** %retval, align 8, !dbg !3760
  br label %return, !dbg !3760

if.end4:                                          ; preds = %if.end
  %5 = load i8, i8* %dir.addr, align 1, !dbg !3761
  %conv5 = zext i8 %5 to i32, !dbg !3761
  %cmp6 = icmp eq i32 %conv5, 104, !dbg !3763
  br i1 %cmp6, label %if.then8, label %if.else38, !dbg !3764

if.then8:                                         ; preds = %if.end4
  %6 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3765
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3767
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 2, !dbg !3768
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3768
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %8, i32 0, i32 3, !dbg !3769
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !3770
  %9 = load i16, i16* %x, align 8, !dbg !3770
  %10 = load i16, i16* %split, align 2, !dbg !3771
  %call9 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %6, i16 signext %9, i16 signext %10), !dbg !3772
  store %struct.ScrVert* %call9, %struct.ScrVert** %sv1, align 8, !dbg !3773
  %11 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3774
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3775
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 5, !dbg !3776
  %13 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !3776
  %vec10 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %13, i32 0, i32 3, !dbg !3777
  %x11 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec10, i32 0, i32 0, !dbg !3778
  %14 = load i16, i16* %x11, align 8, !dbg !3778
  %15 = load i16, i16* %split, align 2, !dbg !3779
  %call12 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %11, i16 signext %14, i16 signext %15), !dbg !3780
  store %struct.ScrVert* %call12, %struct.ScrVert** %sv2, align 8, !dbg !3781
  %16 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3782
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3783
  %v113 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 2, !dbg !3784
  %18 = load %struct.ScrVert*, %struct.ScrVert** %v113, align 8, !dbg !3784
  %19 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3785
  %call14 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %16, %struct.ScrVert* %18, %struct.ScrVert* %19), !dbg !3786
  %20 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3787
  %21 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3788
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3789
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 3, !dbg !3790
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !3790
  %call15 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %20, %struct.ScrVert* %21, %struct.ScrVert* %23), !dbg !3791
  %24 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3792
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3793
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 4, !dbg !3794
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !3794
  %27 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3795
  %call16 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %24, %struct.ScrVert* %26, %struct.ScrVert* %27), !dbg !3796
  %28 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3797
  %29 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3798
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3799
  %v417 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %30, i32 0, i32 5, !dbg !3800
  %31 = load %struct.ScrVert*, %struct.ScrVert** %v417, align 8, !dbg !3800
  %call18 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %28, %struct.ScrVert* %29, %struct.ScrVert* %31), !dbg !3801
  %32 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3802
  %33 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3803
  %34 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3804
  %call19 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %32, %struct.ScrVert* %33, %struct.ScrVert* %34), !dbg !3805
  %35 = load float, float* %fac.addr, align 4, !dbg !3806
  %cmp20 = fcmp ogt float %35, 5.000000e-01, !dbg !3808
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !3809

if.then22:                                        ; preds = %if.then8
  %36 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3810
  %37 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3812
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3813
  %v223 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 3, !dbg !3814
  %39 = load %struct.ScrVert*, %struct.ScrVert** %v223, align 8, !dbg !3814
  %40 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3815
  %v324 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %40, i32 0, i32 4, !dbg !3816
  %41 = load %struct.ScrVert*, %struct.ScrVert** %v324, align 8, !dbg !3816
  %42 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3817
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3818
  %headertype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %43, i32 0, i32 12, !dbg !3819
  %44 = load i16, i16* %headertype, align 2, !dbg !3819
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3820
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 8, !dbg !3821
  %46 = load i8, i8* %spacetype, align 8, !dbg !3821
  %conv25 = zext i8 %46 to i16, !dbg !3820
  %call26 = call %struct.ScrArea* @screen_addarea(%struct.bScreen* %36, %struct.ScrVert* %37, %struct.ScrVert* %39, %struct.ScrVert* %41, %struct.ScrVert* %42, i16 signext %44, i16 signext %conv25), !dbg !3822
  store %struct.ScrArea* %call26, %struct.ScrArea** %newa, align 8, !dbg !3823
  %47 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3824
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3825
  %v227 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %48, i32 0, i32 3, !dbg !3826
  store %struct.ScrVert* %47, %struct.ScrVert** %v227, align 8, !dbg !3827
  %49 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3828
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3829
  %v328 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %50, i32 0, i32 4, !dbg !3830
  store %struct.ScrVert* %49, %struct.ScrVert** %v328, align 8, !dbg !3831
  br label %if.end37, !dbg !3832

if.else:                                          ; preds = %if.then8
  %51 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3833
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3835
  %v129 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %52, i32 0, i32 2, !dbg !3836
  %53 = load %struct.ScrVert*, %struct.ScrVert** %v129, align 8, !dbg !3836
  %54 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3837
  %55 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3838
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3839
  %v430 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 5, !dbg !3840
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v430, align 8, !dbg !3840
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3841
  %headertype31 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 12, !dbg !3842
  %59 = load i16, i16* %headertype31, align 2, !dbg !3842
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3843
  %spacetype32 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 8, !dbg !3844
  %61 = load i8, i8* %spacetype32, align 8, !dbg !3844
  %conv33 = zext i8 %61 to i16, !dbg !3843
  %call34 = call %struct.ScrArea* @screen_addarea(%struct.bScreen* %51, %struct.ScrVert* %53, %struct.ScrVert* %54, %struct.ScrVert* %55, %struct.ScrVert* %57, i16 signext %59, i16 signext %conv33), !dbg !3845
  store %struct.ScrArea* %call34, %struct.ScrArea** %newa, align 8, !dbg !3846
  %62 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3847
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3848
  %v135 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 2, !dbg !3849
  store %struct.ScrVert* %62, %struct.ScrVert** %v135, align 8, !dbg !3850
  %64 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3851
  %65 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3852
  %v436 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %65, i32 0, i32 5, !dbg !3853
  store %struct.ScrVert* %64, %struct.ScrVert** %v436, align 8, !dbg !3854
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then22
  %66 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !3855
  %67 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3856
  call void @ED_area_data_copy(%struct.ScrArea* %66, %struct.ScrArea* %67, i8 zeroext 1), !dbg !3857
  br label %if.end76, !dbg !3858

if.else38:                                        ; preds = %if.end4
  %68 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3859
  %69 = load i16, i16* %split, align 2, !dbg !3861
  %70 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3862
  %v139 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %70, i32 0, i32 2, !dbg !3863
  %71 = load %struct.ScrVert*, %struct.ScrVert** %v139, align 8, !dbg !3863
  %vec40 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %71, i32 0, i32 3, !dbg !3864
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec40, i32 0, i32 1, !dbg !3865
  %72 = load i16, i16* %y, align 2, !dbg !3865
  %call41 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %68, i16 signext %69, i16 signext %72), !dbg !3866
  store %struct.ScrVert* %call41, %struct.ScrVert** %sv1, align 8, !dbg !3867
  %73 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3868
  %74 = load i16, i16* %split, align 2, !dbg !3869
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3870
  %v242 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %75, i32 0, i32 3, !dbg !3871
  %76 = load %struct.ScrVert*, %struct.ScrVert** %v242, align 8, !dbg !3871
  %vec43 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %76, i32 0, i32 3, !dbg !3872
  %y44 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec43, i32 0, i32 1, !dbg !3873
  %77 = load i16, i16* %y44, align 2, !dbg !3873
  %call45 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %73, i16 signext %74, i16 signext %77), !dbg !3874
  store %struct.ScrVert* %call45, %struct.ScrVert** %sv2, align 8, !dbg !3875
  %78 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3876
  %79 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3877
  %v146 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %79, i32 0, i32 2, !dbg !3878
  %80 = load %struct.ScrVert*, %struct.ScrVert** %v146, align 8, !dbg !3878
  %81 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3879
  %call47 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %78, %struct.ScrVert* %80, %struct.ScrVert* %81), !dbg !3880
  %82 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3881
  %83 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3882
  %84 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3883
  %v448 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %84, i32 0, i32 5, !dbg !3884
  %85 = load %struct.ScrVert*, %struct.ScrVert** %v448, align 8, !dbg !3884
  %call49 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %82, %struct.ScrVert* %83, %struct.ScrVert* %85), !dbg !3885
  %86 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3886
  %87 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3887
  %v250 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %87, i32 0, i32 3, !dbg !3888
  %88 = load %struct.ScrVert*, %struct.ScrVert** %v250, align 8, !dbg !3888
  %89 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3889
  %call51 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %86, %struct.ScrVert* %88, %struct.ScrVert* %89), !dbg !3890
  %90 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3891
  %91 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3892
  %92 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3893
  %v352 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %92, i32 0, i32 4, !dbg !3894
  %93 = load %struct.ScrVert*, %struct.ScrVert** %v352, align 8, !dbg !3894
  %call53 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %90, %struct.ScrVert* %91, %struct.ScrVert* %93), !dbg !3895
  %94 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3896
  %95 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3897
  %96 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3898
  %call54 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %94, %struct.ScrVert* %95, %struct.ScrVert* %96), !dbg !3899
  %97 = load float, float* %fac.addr, align 4, !dbg !3900
  %cmp55 = fcmp ogt float %97, 5.000000e-01, !dbg !3902
  br i1 %cmp55, label %if.then57, label %if.else66, !dbg !3903

if.then57:                                        ; preds = %if.else38
  %98 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3904
  %99 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3906
  %100 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3907
  %101 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3908
  %v358 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %101, i32 0, i32 4, !dbg !3909
  %102 = load %struct.ScrVert*, %struct.ScrVert** %v358, align 8, !dbg !3909
  %103 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3910
  %v459 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %103, i32 0, i32 5, !dbg !3911
  %104 = load %struct.ScrVert*, %struct.ScrVert** %v459, align 8, !dbg !3911
  %105 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3912
  %headertype60 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %105, i32 0, i32 12, !dbg !3913
  %106 = load i16, i16* %headertype60, align 2, !dbg !3913
  %107 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3914
  %spacetype61 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %107, i32 0, i32 8, !dbg !3915
  %108 = load i8, i8* %spacetype61, align 8, !dbg !3915
  %conv62 = zext i8 %108 to i16, !dbg !3914
  %call63 = call %struct.ScrArea* @screen_addarea(%struct.bScreen* %98, %struct.ScrVert* %99, %struct.ScrVert* %100, %struct.ScrVert* %102, %struct.ScrVert* %104, i16 signext %106, i16 signext %conv62), !dbg !3916
  store %struct.ScrArea* %call63, %struct.ScrArea** %newa, align 8, !dbg !3917
  %109 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3918
  %110 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3919
  %v364 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %110, i32 0, i32 4, !dbg !3920
  store %struct.ScrVert* %109, %struct.ScrVert** %v364, align 8, !dbg !3921
  %111 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3922
  %112 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3923
  %v465 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %112, i32 0, i32 5, !dbg !3924
  store %struct.ScrVert* %111, %struct.ScrVert** %v465, align 8, !dbg !3925
  br label %if.end75, !dbg !3926

if.else66:                                        ; preds = %if.else38
  %113 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3927
  %114 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3929
  %v167 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %114, i32 0, i32 2, !dbg !3930
  %115 = load %struct.ScrVert*, %struct.ScrVert** %v167, align 8, !dbg !3930
  %116 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3931
  %v268 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %116, i32 0, i32 3, !dbg !3932
  %117 = load %struct.ScrVert*, %struct.ScrVert** %v268, align 8, !dbg !3932
  %118 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3933
  %119 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3934
  %120 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3935
  %headertype69 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %120, i32 0, i32 12, !dbg !3936
  %121 = load i16, i16* %headertype69, align 2, !dbg !3936
  %122 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3937
  %spacetype70 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %122, i32 0, i32 8, !dbg !3938
  %123 = load i8, i8* %spacetype70, align 8, !dbg !3938
  %conv71 = zext i8 %123 to i16, !dbg !3937
  %call72 = call %struct.ScrArea* @screen_addarea(%struct.bScreen* %113, %struct.ScrVert* %115, %struct.ScrVert* %117, %struct.ScrVert* %118, %struct.ScrVert* %119, i16 signext %121, i16 signext %conv71), !dbg !3939
  store %struct.ScrArea* %call72, %struct.ScrArea** %newa, align 8, !dbg !3940
  %124 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !3941
  %125 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3942
  %v173 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %125, i32 0, i32 2, !dbg !3943
  store %struct.ScrVert* %124, %struct.ScrVert** %v173, align 8, !dbg !3944
  %126 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !3945
  %127 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3946
  %v274 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %127, i32 0, i32 3, !dbg !3947
  store %struct.ScrVert* %126, %struct.ScrVert** %v274, align 8, !dbg !3948
  br label %if.end75

if.end75:                                         ; preds = %if.else66, %if.then57
  %128 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !3949
  %129 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3950
  call void @ED_area_data_copy(%struct.ScrArea* %128, %struct.ScrArea* %129, i8 zeroext 1), !dbg !3951
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end37
  %130 = load i32, i32* %merge.addr, align 4, !dbg !3952
  %tobool = icmp ne i32 %130, 0, !dbg !3952
  br i1 %tobool, label %if.then77, label %if.end78, !dbg !3954

if.then77:                                        ; preds = %if.end76
  %131 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3955
  call void @removedouble_scrverts(%struct.bScreen* %131), !dbg !3956
  br label %if.end78, !dbg !3956

if.end78:                                         ; preds = %if.then77, %if.end76
  %132 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3957
  call void @removedouble_scredges(%struct.bScreen* %132), !dbg !3958
  %133 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !3959
  call void @removenotused_scredges(%struct.bScreen* %133), !dbg !3960
  %134 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !3961
  store %struct.ScrArea* %134, %struct.ScrArea** %retval, align 8, !dbg !3962
  br label %return, !dbg !3962

return:                                           ; preds = %if.end78, %if.then3, %if.then
  %135 = load %struct.ScrArea*, %struct.ScrArea** %retval, align 8, !dbg !3963
  ret %struct.ScrArea* %135, !dbg !3963
}

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @testsplitpoint(%struct.ScrArea* %sa, i8 zeroext %dir, float %fac) #0 !dbg !3964 {
entry:
  %retval = alloca i16, align 2
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  %fac.addr = alloca float, align 4
  %x = alloca i16, align 2
  %y = alloca i16, align 2
  %area_min_x = alloca i16, align 2
  %area_min_y = alloca i16, align 2
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !3969, metadata !DIExpression()), !dbg !3970
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !3971, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.declare(metadata i16* %x, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata i16* %y, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata i16* %area_min_x, metadata !3977, metadata !DIExpression()), !dbg !3979
  store i16 32, i16* %area_min_x, align 2, !dbg !3979
  call void @llvm.dbg.declare(metadata i16* %area_min_y, metadata !3980, metadata !DIExpression()), !dbg !3981
  %call = call i32 @ED_area_headersize(), !dbg !3982
  %conv = trunc i32 %call to i16, !dbg !3982
  store i16 %conv, i16* %area_min_y, align 2, !dbg !3981
  %0 = load i8, i8* %dir.addr, align 1, !dbg !3983
  %conv1 = zext i8 %0 to i32, !dbg !3983
  %cmp = icmp eq i32 %conv1, 118, !dbg !3985
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3986

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3987
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %1, i32 0, i32 5, !dbg !3988
  %2 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !3988
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %2, i32 0, i32 3, !dbg !3989
  %x3 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !3990
  %3 = load i16, i16* %x3, align 8, !dbg !3990
  %conv4 = sext i16 %3 to i32, !dbg !3987
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3991
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 2, !dbg !3992
  %5 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !3992
  %vec5 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %5, i32 0, i32 3, !dbg !3993
  %x6 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec5, i32 0, i32 0, !dbg !3994
  %6 = load i16, i16* %x6, align 8, !dbg !3994
  %conv7 = sext i16 %6 to i32, !dbg !3991
  %sub = sub nsw i32 %conv4, %conv7, !dbg !3995
  %cmp8 = icmp sle i32 %sub, 64, !dbg !3996
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3997

if.then:                                          ; preds = %land.lhs.true
  store i16 0, i16* %retval, align 2, !dbg !3998
  br label %return, !dbg !3998

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i8, i8* %dir.addr, align 1, !dbg !3999
  %conv10 = zext i8 %7 to i32, !dbg !3999
  %cmp11 = icmp eq i32 %conv10, 104, !dbg !4001
  br i1 %cmp11, label %land.lhs.true13, label %if.end26, !dbg !4002

land.lhs.true13:                                  ; preds = %if.end
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4003
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 3, !dbg !4004
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !4004
  %vec14 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %9, i32 0, i32 3, !dbg !4005
  %y15 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec14, i32 0, i32 1, !dbg !4006
  %10 = load i16, i16* %y15, align 2, !dbg !4006
  %conv16 = sext i16 %10 to i32, !dbg !4003
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4007
  %v117 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 2, !dbg !4008
  %12 = load %struct.ScrVert*, %struct.ScrVert** %v117, align 8, !dbg !4008
  %vec18 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %12, i32 0, i32 3, !dbg !4009
  %y19 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec18, i32 0, i32 1, !dbg !4010
  %13 = load i16, i16* %y19, align 2, !dbg !4010
  %conv20 = sext i16 %13 to i32, !dbg !4007
  %sub21 = sub nsw i32 %conv16, %conv20, !dbg !4011
  %14 = load i16, i16* %area_min_y, align 2, !dbg !4012
  %conv22 = sext i16 %14 to i32, !dbg !4012
  %mul = mul nsw i32 2, %conv22, !dbg !4013
  %cmp23 = icmp sle i32 %sub21, %mul, !dbg !4014
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4015

if.then25:                                        ; preds = %land.lhs.true13
  store i16 0, i16* %retval, align 2, !dbg !4016
  br label %return, !dbg !4016

if.end26:                                         ; preds = %land.lhs.true13, %if.end
  %15 = load float, float* %fac.addr, align 4, !dbg !4017
  %cmp27 = fcmp olt float %15, 0.000000e+00, !dbg !4017
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !4020

if.then29:                                        ; preds = %if.end26
  store float 0.000000e+00, float* %fac.addr, align 4, !dbg !4017
  br label %if.end34, !dbg !4017

if.else:                                          ; preds = %if.end26
  %16 = load float, float* %fac.addr, align 4, !dbg !4021
  %cmp30 = fcmp ogt float %16, 1.000000e+00, !dbg !4021
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4017

if.then32:                                        ; preds = %if.else
  store float 1.000000e+00, float* %fac.addr, align 4, !dbg !4021
  br label %if.end33, !dbg !4021

if.end33:                                         ; preds = %if.then32, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then29
  %17 = load i8, i8* %dir.addr, align 1, !dbg !4023
  %conv35 = zext i8 %17 to i32, !dbg !4023
  %cmp36 = icmp eq i32 %conv35, 104, !dbg !4025
  br i1 %cmp36, label %if.then38, label %if.else98, !dbg !4026

if.then38:                                        ; preds = %if.end34
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4027
  %v139 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %18, i32 0, i32 2, !dbg !4029
  %19 = load %struct.ScrVert*, %struct.ScrVert** %v139, align 8, !dbg !4029
  %vec40 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %19, i32 0, i32 3, !dbg !4030
  %y41 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec40, i32 0, i32 1, !dbg !4031
  %20 = load i16, i16* %y41, align 2, !dbg !4031
  %conv42 = sext i16 %20 to i32, !dbg !4027
  %conv43 = sitofp i32 %conv42 to float, !dbg !4027
  %21 = load float, float* %fac.addr, align 4, !dbg !4032
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4033
  %v244 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 3, !dbg !4034
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v244, align 8, !dbg !4034
  %vec45 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 3, !dbg !4035
  %y46 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec45, i32 0, i32 1, !dbg !4036
  %24 = load i16, i16* %y46, align 2, !dbg !4036
  %conv47 = sext i16 %24 to i32, !dbg !4033
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4037
  %v148 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 2, !dbg !4038
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v148, align 8, !dbg !4038
  %vec49 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 3, !dbg !4039
  %y50 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec49, i32 0, i32 1, !dbg !4040
  %27 = load i16, i16* %y50, align 2, !dbg !4040
  %conv51 = sext i16 %27 to i32, !dbg !4037
  %sub52 = sub nsw i32 %conv47, %conv51, !dbg !4041
  %conv53 = sitofp i32 %sub52 to float, !dbg !4042
  %mul54 = fmul float %21, %conv53, !dbg !4043
  %add = fadd float %conv43, %mul54, !dbg !4044
  %conv55 = fptosi float %add to i16, !dbg !4027
  store i16 %conv55, i16* %y, align 2, !dbg !4045
  %28 = load i16, i16* %y, align 2, !dbg !4046
  %conv56 = sext i16 %28 to i32, !dbg !4046
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4048
  %v157 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 2, !dbg !4049
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v157, align 8, !dbg !4049
  %vec58 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 3, !dbg !4050
  %y59 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec58, i32 0, i32 1, !dbg !4051
  %31 = load i16, i16* %y59, align 2, !dbg !4051
  %conv60 = sext i16 %31 to i32, !dbg !4048
  %sub61 = sub nsw i32 %conv56, %conv60, !dbg !4052
  %32 = load i16, i16* %area_min_y, align 2, !dbg !4053
  %conv62 = sext i16 %32 to i32, !dbg !4053
  %cmp63 = icmp slt i32 %sub61, %conv62, !dbg !4054
  br i1 %cmp63, label %if.then65, label %if.else73, !dbg !4055

if.then65:                                        ; preds = %if.then38
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4056
  %v166 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %33, i32 0, i32 2, !dbg !4057
  %34 = load %struct.ScrVert*, %struct.ScrVert** %v166, align 8, !dbg !4057
  %vec67 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %34, i32 0, i32 3, !dbg !4058
  %y68 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec67, i32 0, i32 1, !dbg !4059
  %35 = load i16, i16* %y68, align 2, !dbg !4059
  %conv69 = sext i16 %35 to i32, !dbg !4056
  %36 = load i16, i16* %area_min_y, align 2, !dbg !4060
  %conv70 = sext i16 %36 to i32, !dbg !4060
  %add71 = add nsw i32 %conv69, %conv70, !dbg !4061
  %conv72 = trunc i32 %add71 to i16, !dbg !4056
  store i16 %conv72, i16* %y, align 2, !dbg !4062
  br label %if.end97, !dbg !4063

if.else73:                                        ; preds = %if.then38
  %37 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4064
  %v274 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %37, i32 0, i32 3, !dbg !4066
  %38 = load %struct.ScrVert*, %struct.ScrVert** %v274, align 8, !dbg !4066
  %vec75 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %38, i32 0, i32 3, !dbg !4067
  %y76 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec75, i32 0, i32 1, !dbg !4068
  %39 = load i16, i16* %y76, align 2, !dbg !4068
  %conv77 = sext i16 %39 to i32, !dbg !4064
  %40 = load i16, i16* %y, align 2, !dbg !4069
  %conv78 = sext i16 %40 to i32, !dbg !4069
  %sub79 = sub nsw i32 %conv77, %conv78, !dbg !4070
  %41 = load i16, i16* %area_min_y, align 2, !dbg !4071
  %conv80 = sext i16 %41 to i32, !dbg !4071
  %cmp81 = icmp slt i32 %sub79, %conv80, !dbg !4072
  br i1 %cmp81, label %if.then83, label %if.else91, !dbg !4073

if.then83:                                        ; preds = %if.else73
  %42 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4074
  %v284 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %42, i32 0, i32 3, !dbg !4075
  %43 = load %struct.ScrVert*, %struct.ScrVert** %v284, align 8, !dbg !4075
  %vec85 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %43, i32 0, i32 3, !dbg !4076
  %y86 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec85, i32 0, i32 1, !dbg !4077
  %44 = load i16, i16* %y86, align 2, !dbg !4077
  %conv87 = sext i16 %44 to i32, !dbg !4074
  %45 = load i16, i16* %area_min_y, align 2, !dbg !4078
  %conv88 = sext i16 %45 to i32, !dbg !4078
  %sub89 = sub nsw i32 %conv87, %conv88, !dbg !4079
  %conv90 = trunc i32 %sub89 to i16, !dbg !4074
  store i16 %conv90, i16* %y, align 2, !dbg !4080
  br label %if.end96, !dbg !4081

if.else91:                                        ; preds = %if.else73
  %46 = load i16, i16* %y, align 2, !dbg !4082
  %conv92 = sext i16 %46 to i32, !dbg !4082
  %rem = srem i32 %conv92, 4, !dbg !4083
  %47 = load i16, i16* %y, align 2, !dbg !4084
  %conv93 = sext i16 %47 to i32, !dbg !4084
  %sub94 = sub nsw i32 %conv93, %rem, !dbg !4084
  %conv95 = trunc i32 %sub94 to i16, !dbg !4084
  store i16 %conv95, i16* %y, align 2, !dbg !4084
  br label %if.end96

if.end96:                                         ; preds = %if.else91, %if.then83
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then65
  %48 = load i16, i16* %y, align 2, !dbg !4085
  store i16 %48, i16* %retval, align 2, !dbg !4086
  br label %return, !dbg !4086

if.else98:                                        ; preds = %if.end34
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4087
  %v199 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %49, i32 0, i32 2, !dbg !4089
  %50 = load %struct.ScrVert*, %struct.ScrVert** %v199, align 8, !dbg !4089
  %vec100 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %50, i32 0, i32 3, !dbg !4090
  %x101 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec100, i32 0, i32 0, !dbg !4091
  %51 = load i16, i16* %x101, align 8, !dbg !4091
  %conv102 = sext i16 %51 to i32, !dbg !4087
  %conv103 = sitofp i32 %conv102 to float, !dbg !4087
  %52 = load float, float* %fac.addr, align 4, !dbg !4092
  %53 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4093
  %v4104 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %53, i32 0, i32 5, !dbg !4094
  %54 = load %struct.ScrVert*, %struct.ScrVert** %v4104, align 8, !dbg !4094
  %vec105 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %54, i32 0, i32 3, !dbg !4095
  %x106 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec105, i32 0, i32 0, !dbg !4096
  %55 = load i16, i16* %x106, align 8, !dbg !4096
  %conv107 = sext i16 %55 to i32, !dbg !4093
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4097
  %v1108 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 2, !dbg !4098
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v1108, align 8, !dbg !4098
  %vec109 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %57, i32 0, i32 3, !dbg !4099
  %x110 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec109, i32 0, i32 0, !dbg !4100
  %58 = load i16, i16* %x110, align 8, !dbg !4100
  %conv111 = sext i16 %58 to i32, !dbg !4097
  %sub112 = sub nsw i32 %conv107, %conv111, !dbg !4101
  %conv113 = sitofp i32 %sub112 to float, !dbg !4102
  %mul114 = fmul float %52, %conv113, !dbg !4103
  %add115 = fadd float %conv103, %mul114, !dbg !4104
  %conv116 = fptosi float %add115 to i16, !dbg !4087
  store i16 %conv116, i16* %x, align 2, !dbg !4105
  %59 = load i16, i16* %x, align 2, !dbg !4106
  %conv117 = sext i16 %59 to i32, !dbg !4106
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4108
  %v1118 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 2, !dbg !4109
  %61 = load %struct.ScrVert*, %struct.ScrVert** %v1118, align 8, !dbg !4109
  %vec119 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %61, i32 0, i32 3, !dbg !4110
  %x120 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec119, i32 0, i32 0, !dbg !4111
  %62 = load i16, i16* %x120, align 8, !dbg !4111
  %conv121 = sext i16 %62 to i32, !dbg !4108
  %sub122 = sub nsw i32 %conv117, %conv121, !dbg !4112
  %cmp123 = icmp slt i32 %sub122, 32, !dbg !4113
  br i1 %cmp123, label %if.then125, label %if.else132, !dbg !4114

if.then125:                                       ; preds = %if.else98
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4115
  %v1126 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 2, !dbg !4116
  %64 = load %struct.ScrVert*, %struct.ScrVert** %v1126, align 8, !dbg !4116
  %vec127 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %64, i32 0, i32 3, !dbg !4117
  %x128 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec127, i32 0, i32 0, !dbg !4118
  %65 = load i16, i16* %x128, align 8, !dbg !4118
  %conv129 = sext i16 %65 to i32, !dbg !4115
  %add130 = add nsw i32 %conv129, 32, !dbg !4119
  %conv131 = trunc i32 %add130 to i16, !dbg !4115
  store i16 %conv131, i16* %x, align 2, !dbg !4120
  br label %if.end155, !dbg !4121

if.else132:                                       ; preds = %if.else98
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4122
  %v4133 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %66, i32 0, i32 5, !dbg !4124
  %67 = load %struct.ScrVert*, %struct.ScrVert** %v4133, align 8, !dbg !4124
  %vec134 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %67, i32 0, i32 3, !dbg !4125
  %x135 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec134, i32 0, i32 0, !dbg !4126
  %68 = load i16, i16* %x135, align 8, !dbg !4126
  %conv136 = sext i16 %68 to i32, !dbg !4122
  %69 = load i16, i16* %x, align 2, !dbg !4127
  %conv137 = sext i16 %69 to i32, !dbg !4127
  %sub138 = sub nsw i32 %conv136, %conv137, !dbg !4128
  %cmp139 = icmp slt i32 %sub138, 32, !dbg !4129
  br i1 %cmp139, label %if.then141, label %if.else148, !dbg !4130

if.then141:                                       ; preds = %if.else132
  %70 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4131
  %v4142 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %70, i32 0, i32 5, !dbg !4132
  %71 = load %struct.ScrVert*, %struct.ScrVert** %v4142, align 8, !dbg !4132
  %vec143 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %71, i32 0, i32 3, !dbg !4133
  %x144 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec143, i32 0, i32 0, !dbg !4134
  %72 = load i16, i16* %x144, align 8, !dbg !4134
  %conv145 = sext i16 %72 to i32, !dbg !4131
  %sub146 = sub nsw i32 %conv145, 32, !dbg !4135
  %conv147 = trunc i32 %sub146 to i16, !dbg !4131
  store i16 %conv147, i16* %x, align 2, !dbg !4136
  br label %if.end154, !dbg !4137

if.else148:                                       ; preds = %if.else132
  %73 = load i16, i16* %x, align 2, !dbg !4138
  %conv149 = sext i16 %73 to i32, !dbg !4138
  %rem150 = srem i32 %conv149, 4, !dbg !4139
  %74 = load i16, i16* %x, align 2, !dbg !4140
  %conv151 = sext i16 %74 to i32, !dbg !4140
  %sub152 = sub nsw i32 %conv151, %rem150, !dbg !4140
  %conv153 = trunc i32 %sub152 to i16, !dbg !4140
  store i16 %conv153, i16* %x, align 2, !dbg !4140
  br label %if.end154

if.end154:                                        ; preds = %if.else148, %if.then141
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then125
  %75 = load i16, i16* %x, align 2, !dbg !4141
  store i16 %75, i16* %retval, align 2, !dbg !4142
  br label %return, !dbg !4142

return:                                           ; preds = %if.end155, %if.end97, %if.then25, %if.then
  %76 = load i16, i16* %retval, align 2, !dbg !4143
  ret i16 %76, !dbg !4143
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrVert* @screen_addvert(%struct.bScreen* %sc, i16 signext %x, i16 signext %y) #0 !dbg !4144 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %x.addr = alloca i16, align 2
  %y.addr = alloca i16, align 2
  %sv = alloca %struct.ScrVert*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4147, metadata !DIExpression()), !dbg !4148
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !4149, metadata !DIExpression()), !dbg !4150
  store i16 %y, i16* %y.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %y.addr, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !4153, metadata !DIExpression()), !dbg !4154
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4155
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)), !dbg !4155
  %1 = bitcast i8* %call to %struct.ScrVert*, !dbg !4155
  store %struct.ScrVert* %1, %struct.ScrVert** %sv, align 8, !dbg !4154
  %2 = load i16, i16* %x.addr, align 2, !dbg !4156
  %3 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4157
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %3, i32 0, i32 3, !dbg !4158
  %x1 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !4159
  store i16 %2, i16* %x1, align 8, !dbg !4160
  %4 = load i16, i16* %y.addr, align 2, !dbg !4161
  %5 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4162
  %vec2 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %5, i32 0, i32 3, !dbg !4163
  %y3 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec2, i32 0, i32 1, !dbg !4164
  store i16 %4, i16* %y3, align 2, !dbg !4165
  %6 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4166
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 1, !dbg !4167
  %7 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4168
  %8 = bitcast %struct.ScrVert* %7 to i8*, !dbg !4168
  call void @BLI_addtail(%struct.ListBase* %vertbase, i8* %8), !dbg !4169
  %9 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4170
  ret %struct.ScrVert* %9, !dbg !4171
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrEdge* @screen_addedge(%struct.bScreen* %sc, %struct.ScrVert* %v1, %struct.ScrVert* %v2) #0 !dbg !4172 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %v1.addr = alloca %struct.ScrVert*, align 8
  %v2.addr = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4173, metadata !DIExpression()), !dbg !4174
  store %struct.ScrVert* %v1, %struct.ScrVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  store %struct.ScrVert* %v2, %struct.ScrVert** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v2.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !4179, metadata !DIExpression()), !dbg !4180
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4181
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !4181
  %1 = bitcast i8* %call to %struct.ScrEdge*, !dbg !4181
  store %struct.ScrEdge* %1, %struct.ScrEdge** %se, align 8, !dbg !4180
  call void @sortscrvert(%struct.ScrVert** %v1.addr, %struct.ScrVert** %v2.addr), !dbg !4182
  %2 = load %struct.ScrVert*, %struct.ScrVert** %v1.addr, align 8, !dbg !4183
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4184
  %v11 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %3, i32 0, i32 2, !dbg !4185
  store %struct.ScrVert* %2, %struct.ScrVert** %v11, align 8, !dbg !4186
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v2.addr, align 8, !dbg !4187
  %5 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4188
  %v22 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %5, i32 0, i32 3, !dbg !4189
  store %struct.ScrVert* %4, %struct.ScrVert** %v22, align 8, !dbg !4190
  %6 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4191
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 2, !dbg !4192
  %7 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4193
  %8 = bitcast %struct.ScrEdge* %7 to i8*, !dbg !4193
  call void @BLI_addtail(%struct.ListBase* %edgebase, i8* %8), !dbg !4194
  %9 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4195
  ret %struct.ScrEdge* %9, !dbg !4196
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrArea* @screen_addarea(%struct.bScreen* %sc, %struct.ScrVert* %v1, %struct.ScrVert* %v2, %struct.ScrVert* %v3, %struct.ScrVert* %v4, i16 signext %headertype, i16 signext %spacetype) #0 !dbg !4197 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %v1.addr = alloca %struct.ScrVert*, align 8
  %v2.addr = alloca %struct.ScrVert*, align 8
  %v3.addr = alloca %struct.ScrVert*, align 8
  %v4.addr = alloca %struct.ScrVert*, align 8
  %headertype.addr = alloca i16, align 2
  %spacetype.addr = alloca i16, align 2
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4200, metadata !DIExpression()), !dbg !4201
  store %struct.ScrVert* %v1, %struct.ScrVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1.addr, metadata !4202, metadata !DIExpression()), !dbg !4203
  store %struct.ScrVert* %v2, %struct.ScrVert** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v2.addr, metadata !4204, metadata !DIExpression()), !dbg !4205
  store %struct.ScrVert* %v3, %struct.ScrVert** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v3.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  store %struct.ScrVert* %v4, %struct.ScrVert** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v4.addr, metadata !4208, metadata !DIExpression()), !dbg !4209
  store i16 %headertype, i16* %headertype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %headertype.addr, metadata !4210, metadata !DIExpression()), !dbg !4211
  store i16 %spacetype, i16* %spacetype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %spacetype.addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4214, metadata !DIExpression()), !dbg !4215
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4216
  %call = call i8* %0(i64 160, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)), !dbg !4216
  %1 = bitcast i8* %call to %struct.ScrArea*, !dbg !4216
  store %struct.ScrArea* %1, %struct.ScrArea** %sa, align 8, !dbg !4215
  %2 = load %struct.ScrVert*, %struct.ScrVert** %v1.addr, align 8, !dbg !4217
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4218
  %v11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 2, !dbg !4219
  store %struct.ScrVert* %2, %struct.ScrVert** %v11, align 8, !dbg !4220
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v2.addr, align 8, !dbg !4221
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4222
  %v22 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 3, !dbg !4223
  store %struct.ScrVert* %4, %struct.ScrVert** %v22, align 8, !dbg !4224
  %6 = load %struct.ScrVert*, %struct.ScrVert** %v3.addr, align 8, !dbg !4225
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4226
  %v33 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 4, !dbg !4227
  store %struct.ScrVert* %6, %struct.ScrVert** %v33, align 8, !dbg !4228
  %8 = load %struct.ScrVert*, %struct.ScrVert** %v4.addr, align 8, !dbg !4229
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4230
  %v44 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 5, !dbg !4231
  store %struct.ScrVert* %8, %struct.ScrVert** %v44, align 8, !dbg !4232
  %10 = load i16, i16* %headertype.addr, align 2, !dbg !4233
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4234
  %headertype5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 12, !dbg !4235
  store i16 %10, i16* %headertype5, align 2, !dbg !4236
  %12 = load i16, i16* %spacetype.addr, align 2, !dbg !4237
  %conv = trunc i16 %12 to i8, !dbg !4237
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4238
  %butspacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 9, !dbg !4239
  store i8 %conv, i8* %butspacetype, align 1, !dbg !4240
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4241
  %spacetype6 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 8, !dbg !4242
  store i8 %conv, i8* %spacetype6, align 8, !dbg !4243
  %15 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4244
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %15, i32 0, i32 3, !dbg !4245
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4246
  %17 = bitcast %struct.ScrArea* %16 to i8*, !dbg !4246
  call void @BLI_addtail(%struct.ListBase* %areabase, i8* %17), !dbg !4247
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4248
  ret %struct.ScrArea* %18, !dbg !4249
}

declare dso_local void @ED_area_data_copy(%struct.ScrArea*, %struct.ScrArea*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bScreen* @ED_screen_add(%struct.wmWindow* %win, %struct.Scene* %scene, i8* %name) #0 !dbg !4250 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %name.addr = alloca i8*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %sc = alloca %struct.bScreen*, align 8
  %sv1 = alloca %struct.ScrVert*, align 8
  %sv2 = alloca %struct.ScrVert*, align 8
  %sv3 = alloca %struct.ScrVert*, align 8
  %sv4 = alloca %struct.ScrVert*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !4257, metadata !DIExpression()), !dbg !4258
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4259, metadata !DIExpression()), !dbg !4260
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4261, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !4263, metadata !DIExpression()), !dbg !4264
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !4265
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %0), !dbg !4266
  store i32 %call, i32* %winsize_x, align 4, !dbg !4264
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !4267, metadata !DIExpression()), !dbg !4268
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !4269
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %1), !dbg !4270
  store i32 %call1, i32* %winsize_y, align 4, !dbg !4268
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !4271, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv1, metadata !4273, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv2, metadata !4275, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv3, metadata !4277, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv4, metadata !4279, metadata !DIExpression()), !dbg !4280
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4281
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4282
  %call2 = call i8* @BKE_libblock_alloc(%struct.Main* %2, i16 signext 21075, i8* %3), !dbg !4283
  %4 = bitcast i8* %call2 to %struct.bScreen*, !dbg !4283
  store %struct.bScreen* %4, %struct.bScreen** %sc, align 8, !dbg !4284
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4285
  %6 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4286
  %scene3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 5, !dbg !4287
  store %struct.Scene* %5, %struct.Scene** %scene3, align 8, !dbg !4288
  %7 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4289
  %do_refresh = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 13, !dbg !4290
  store i16 1, i16* %do_refresh, align 8, !dbg !4291
  %8 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4292
  %redraws_flag = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 7, !dbg !4293
  store i32 6, i32* %redraws_flag, align 8, !dbg !4294
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !4295
  %winid = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 18, !dbg !4296
  %10 = load i32, i32* %winid, align 8, !dbg !4296
  %conv = trunc i32 %10 to i16, !dbg !4295
  %11 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4297
  %winid4 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 11, !dbg !4298
  store i16 %conv, i16* %winid4, align 4, !dbg !4299
  %12 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4300
  %call5 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %12, i16 signext 0, i16 signext 0), !dbg !4301
  store %struct.ScrVert* %call5, %struct.ScrVert** %sv1, align 8, !dbg !4302
  %13 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4303
  %14 = load i32, i32* %winsize_y, align 4, !dbg !4304
  %sub = sub nsw i32 %14, 1, !dbg !4305
  %conv6 = trunc i32 %sub to i16, !dbg !4304
  %call7 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %13, i16 signext 0, i16 signext %conv6), !dbg !4306
  store %struct.ScrVert* %call7, %struct.ScrVert** %sv2, align 8, !dbg !4307
  %15 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4308
  %16 = load i32, i32* %winsize_x, align 4, !dbg !4309
  %sub8 = sub nsw i32 %16, 1, !dbg !4310
  %conv9 = trunc i32 %sub8 to i16, !dbg !4309
  %17 = load i32, i32* %winsize_y, align 4, !dbg !4311
  %sub10 = sub nsw i32 %17, 1, !dbg !4312
  %conv11 = trunc i32 %sub10 to i16, !dbg !4311
  %call12 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %15, i16 signext %conv9, i16 signext %conv11), !dbg !4313
  store %struct.ScrVert* %call12, %struct.ScrVert** %sv3, align 8, !dbg !4314
  %18 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4315
  %19 = load i32, i32* %winsize_x, align 4, !dbg !4316
  %sub13 = sub nsw i32 %19, 1, !dbg !4317
  %conv14 = trunc i32 %sub13 to i16, !dbg !4316
  %call15 = call %struct.ScrVert* @screen_addvert(%struct.bScreen* %18, i16 signext %conv14, i16 signext 0), !dbg !4318
  store %struct.ScrVert* %call15, %struct.ScrVert** %sv4, align 8, !dbg !4319
  %20 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4320
  %21 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !4321
  %22 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !4322
  %call16 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %20, %struct.ScrVert* %21, %struct.ScrVert* %22), !dbg !4323
  %23 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4324
  %24 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !4325
  %25 = load %struct.ScrVert*, %struct.ScrVert** %sv3, align 8, !dbg !4326
  %call17 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %23, %struct.ScrVert* %24, %struct.ScrVert* %25), !dbg !4327
  %26 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4328
  %27 = load %struct.ScrVert*, %struct.ScrVert** %sv3, align 8, !dbg !4329
  %28 = load %struct.ScrVert*, %struct.ScrVert** %sv4, align 8, !dbg !4330
  %call18 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %26, %struct.ScrVert* %27, %struct.ScrVert* %28), !dbg !4331
  %29 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4332
  %30 = load %struct.ScrVert*, %struct.ScrVert** %sv4, align 8, !dbg !4333
  %31 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !4334
  %call19 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %29, %struct.ScrVert* %30, %struct.ScrVert* %31), !dbg !4335
  %32 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4336
  %33 = load %struct.ScrVert*, %struct.ScrVert** %sv1, align 8, !dbg !4337
  %34 = load %struct.ScrVert*, %struct.ScrVert** %sv2, align 8, !dbg !4338
  %35 = load %struct.ScrVert*, %struct.ScrVert** %sv3, align 8, !dbg !4339
  %36 = load %struct.ScrVert*, %struct.ScrVert** %sv4, align 8, !dbg !4340
  %call20 = call %struct.ScrArea* @screen_addarea(%struct.bScreen* %32, %struct.ScrVert* %33, %struct.ScrVert* %34, %struct.ScrVert* %35, %struct.ScrVert* %36, i16 signext 1, i16 signext 0), !dbg !4341
  %37 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !4342
  ret %struct.bScreen* %37, !dbg !4343
}

declare dso_local i32 @WM_window_pixels_x(%struct.wmWindow*) #2

declare dso_local i32 @WM_window_pixels_y(%struct.wmWindow*) #2

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @area_getorientation(%struct.ScrArea* %sa, %struct.ScrArea* %sb) #0 !dbg !4344 {
entry:
  %retval = alloca i32, align 4
  %sa.addr = alloca %struct.ScrArea*, align 8
  %sb.addr = alloca %struct.ScrArea*, align 8
  %sav1 = alloca %struct.ScrVert*, align 8
  %sav2 = alloca %struct.ScrVert*, align 8
  %sav3 = alloca %struct.ScrVert*, align 8
  %sav4 = alloca %struct.ScrVert*, align 8
  %sbv1 = alloca %struct.ScrVert*, align 8
  %sbv2 = alloca %struct.ScrVert*, align 8
  %sbv3 = alloca %struct.ScrVert*, align 8
  %sbv4 = alloca %struct.ScrVert*, align 8
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !4347, metadata !DIExpression()), !dbg !4348
  store %struct.ScrArea* %sb, %struct.ScrArea** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sb.addr, metadata !4349, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav1, metadata !4351, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav2, metadata !4353, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav3, metadata !4355, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav4, metadata !4357, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv1, metadata !4359, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv2, metadata !4361, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv3, metadata !4363, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv4, metadata !4365, metadata !DIExpression()), !dbg !4366
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4367
  %cmp = icmp eq %struct.ScrArea* %0, null, !dbg !4369
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4370

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !4371
  %cmp1 = icmp eq %struct.ScrArea* %1, null, !dbg !4372
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4373

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !4374
  br label %return, !dbg !4374

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4375
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 2, !dbg !4376
  %3 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !4376
  store %struct.ScrVert* %3, %struct.ScrVert** %sav1, align 8, !dbg !4377
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4378
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 3, !dbg !4379
  %5 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !4379
  store %struct.ScrVert* %5, %struct.ScrVert** %sav2, align 8, !dbg !4380
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4381
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 4, !dbg !4382
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !4382
  store %struct.ScrVert* %7, %struct.ScrVert** %sav3, align 8, !dbg !4383
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4384
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 5, !dbg !4385
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !4385
  store %struct.ScrVert* %9, %struct.ScrVert** %sav4, align 8, !dbg !4386
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !4387
  %v12 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %10, i32 0, i32 2, !dbg !4388
  %11 = load %struct.ScrVert*, %struct.ScrVert** %v12, align 8, !dbg !4388
  store %struct.ScrVert* %11, %struct.ScrVert** %sbv1, align 8, !dbg !4389
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !4390
  %v23 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 3, !dbg !4391
  %13 = load %struct.ScrVert*, %struct.ScrVert** %v23, align 8, !dbg !4391
  store %struct.ScrVert* %13, %struct.ScrVert** %sbv2, align 8, !dbg !4392
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !4393
  %v34 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 4, !dbg !4394
  %15 = load %struct.ScrVert*, %struct.ScrVert** %v34, align 8, !dbg !4394
  store %struct.ScrVert* %15, %struct.ScrVert** %sbv3, align 8, !dbg !4395
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !4396
  %v45 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 5, !dbg !4397
  %17 = load %struct.ScrVert*, %struct.ScrVert** %v45, align 8, !dbg !4397
  store %struct.ScrVert* %17, %struct.ScrVert** %sbv4, align 8, !dbg !4398
  %18 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !4399
  %19 = load %struct.ScrVert*, %struct.ScrVert** %sbv4, align 8, !dbg !4401
  %cmp6 = icmp eq %struct.ScrVert* %18, %19, !dbg !4402
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !4403

land.lhs.true:                                    ; preds = %if.end
  %20 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !4404
  %21 = load %struct.ScrVert*, %struct.ScrVert** %sbv3, align 8, !dbg !4405
  %cmp7 = icmp eq %struct.ScrVert* %20, %21, !dbg !4406
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !4407

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4408
  br label %return, !dbg !4408

if.else:                                          ; preds = %land.lhs.true, %if.end
  %22 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !4410
  %23 = load %struct.ScrVert*, %struct.ScrVert** %sbv1, align 8, !dbg !4412
  %cmp9 = icmp eq %struct.ScrVert* %22, %23, !dbg !4413
  br i1 %cmp9, label %land.lhs.true10, label %if.else13, !dbg !4414

land.lhs.true10:                                  ; preds = %if.else
  %24 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !4415
  %25 = load %struct.ScrVert*, %struct.ScrVert** %sbv4, align 8, !dbg !4416
  %cmp11 = icmp eq %struct.ScrVert* %24, %25, !dbg !4417
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !4418

if.then12:                                        ; preds = %land.lhs.true10
  store i32 1, i32* %retval, align 4, !dbg !4419
  br label %return, !dbg !4419

if.else13:                                        ; preds = %land.lhs.true10, %if.else
  %26 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !4421
  %27 = load %struct.ScrVert*, %struct.ScrVert** %sbv2, align 8, !dbg !4423
  %cmp14 = icmp eq %struct.ScrVert* %26, %27, !dbg !4424
  br i1 %cmp14, label %land.lhs.true15, label %if.else18, !dbg !4425

land.lhs.true15:                                  ; preds = %if.else13
  %28 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !4426
  %29 = load %struct.ScrVert*, %struct.ScrVert** %sbv1, align 8, !dbg !4427
  %cmp16 = icmp eq %struct.ScrVert* %28, %29, !dbg !4428
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !4429

if.then17:                                        ; preds = %land.lhs.true15
  store i32 2, i32* %retval, align 4, !dbg !4430
  br label %return, !dbg !4430

if.else18:                                        ; preds = %land.lhs.true15, %if.else13
  %30 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !4432
  %31 = load %struct.ScrVert*, %struct.ScrVert** %sbv2, align 8, !dbg !4434
  %cmp19 = icmp eq %struct.ScrVert* %30, %31, !dbg !4435
  br i1 %cmp19, label %land.lhs.true20, label %if.end23, !dbg !4436

land.lhs.true20:                                  ; preds = %if.else18
  %32 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !4437
  %33 = load %struct.ScrVert*, %struct.ScrVert** %sbv3, align 8, !dbg !4438
  %cmp21 = icmp eq %struct.ScrVert* %32, %33, !dbg !4439
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4440

if.then22:                                        ; preds = %land.lhs.true20
  store i32 3, i32* %retval, align 4, !dbg !4441
  br label %return, !dbg !4441

if.end23:                                         ; preds = %land.lhs.true20, %if.else18
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !4443
  br label %return, !dbg !4443

return:                                           ; preds = %if.end26, %if.then22, %if.then17, %if.then12, %if.then8, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !4444
  ret i32 %34, !dbg !4444
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @screen_area_join(%struct.bContext* %C, %struct.bScreen* %scr, %struct.ScrArea* %sa1, %struct.ScrArea* %sa2) #0 !dbg !4445 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %scr.addr = alloca %struct.bScreen*, align 8
  %sa1.addr = alloca %struct.ScrArea*, align 8
  %sa2.addr = alloca %struct.ScrArea*, align 8
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  store %struct.bScreen* %scr, %struct.bScreen** %scr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %scr.addr, metadata !4452, metadata !DIExpression()), !dbg !4453
  store %struct.ScrArea* %sa1, %struct.ScrArea** %sa1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa1.addr, metadata !4454, metadata !DIExpression()), !dbg !4455
  store %struct.ScrArea* %sa2, %struct.ScrArea** %sa2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa2.addr, metadata !4456, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !4458, metadata !DIExpression()), !dbg !4459
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4460
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4461
  %call = call i32 @area_getorientation(%struct.ScrArea* %0, %struct.ScrArea* %1), !dbg !4462
  store i32 %call, i32* %dir, align 4, !dbg !4463
  %2 = load i32, i32* %dir, align 4, !dbg !4464
  %cmp = icmp eq i32 %2, -1, !dbg !4466
  br i1 %cmp, label %if.then, label %if.end10, !dbg !4467

if.then:                                          ; preds = %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4468
  %tobool = icmp ne %struct.ScrArea* %3, null, !dbg !4468
  br i1 %tobool, label %if.then1, label %if.end, !dbg !4471

if.then1:                                         ; preds = %if.then
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4472
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 14, !dbg !4473
  %5 = load i16, i16* %flag, align 2, !dbg !4474
  %conv = sext i16 %5 to i32, !dbg !4474
  %and = and i32 %conv, -5, !dbg !4474
  %conv2 = trunc i32 %and to i16, !dbg !4474
  store i16 %conv2, i16* %flag, align 2, !dbg !4474
  br label %if.end, !dbg !4472

if.end:                                           ; preds = %if.then1, %if.then
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4475
  %tobool3 = icmp ne %struct.ScrArea* %6, null, !dbg !4475
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !4477

if.then4:                                         ; preds = %if.end
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4478
  %flag5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 14, !dbg !4479
  %8 = load i16, i16* %flag5, align 2, !dbg !4480
  %conv6 = sext i16 %8 to i32, !dbg !4480
  %and7 = and i32 %conv6, -3, !dbg !4480
  %conv8 = trunc i32 %and7 to i16, !dbg !4480
  store i16 %conv8, i16* %flag5, align 2, !dbg !4480
  br label %if.end9, !dbg !4478

if.end9:                                          ; preds = %if.then4, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4481
  br label %return, !dbg !4481

if.end10:                                         ; preds = %entry
  %9 = load i32, i32* %dir, align 4, !dbg !4482
  %cmp11 = icmp eq i32 %9, 0, !dbg !4484
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !4485

if.then13:                                        ; preds = %if.end10
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4486
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %10, i32 0, i32 2, !dbg !4488
  %11 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !4488
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4489
  %v114 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 2, !dbg !4490
  store %struct.ScrVert* %11, %struct.ScrVert** %v114, align 8, !dbg !4491
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4492
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 3, !dbg !4493
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !4493
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4494
  %v215 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 3, !dbg !4495
  store %struct.ScrVert* %14, %struct.ScrVert** %v215, align 8, !dbg !4496
  %16 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4497
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4498
  %v216 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 3, !dbg !4499
  %18 = load %struct.ScrVert*, %struct.ScrVert** %v216, align 8, !dbg !4499
  %19 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4500
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %19, i32 0, i32 4, !dbg !4501
  %20 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !4501
  %call17 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %16, %struct.ScrVert* %18, %struct.ScrVert* %20), !dbg !4502
  %21 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4503
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4504
  %v118 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 2, !dbg !4505
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v118, align 8, !dbg !4505
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4506
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %24, i32 0, i32 5, !dbg !4507
  %25 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !4507
  %call19 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %21, %struct.ScrVert* %23, %struct.ScrVert* %25), !dbg !4508
  br label %if.end64, !dbg !4509

if.else:                                          ; preds = %if.end10
  %26 = load i32, i32* %dir, align 4, !dbg !4510
  %cmp20 = icmp eq i32 %26, 1, !dbg !4512
  br i1 %cmp20, label %if.then22, label %if.else33, !dbg !4513

if.then22:                                        ; preds = %if.else
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4514
  %v223 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %27, i32 0, i32 3, !dbg !4516
  %28 = load %struct.ScrVert*, %struct.ScrVert** %v223, align 8, !dbg !4516
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4517
  %v224 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 3, !dbg !4518
  store %struct.ScrVert* %28, %struct.ScrVert** %v224, align 8, !dbg !4519
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4520
  %v325 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %30, i32 0, i32 4, !dbg !4521
  %31 = load %struct.ScrVert*, %struct.ScrVert** %v325, align 8, !dbg !4521
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4522
  %v326 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 4, !dbg !4523
  store %struct.ScrVert* %31, %struct.ScrVert** %v326, align 8, !dbg !4524
  %33 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4525
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4526
  %v127 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %34, i32 0, i32 2, !dbg !4527
  %35 = load %struct.ScrVert*, %struct.ScrVert** %v127, align 8, !dbg !4527
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4528
  %v228 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %36, i32 0, i32 3, !dbg !4529
  %37 = load %struct.ScrVert*, %struct.ScrVert** %v228, align 8, !dbg !4529
  %call29 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %33, %struct.ScrVert* %35, %struct.ScrVert* %37), !dbg !4530
  %38 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4531
  %39 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4532
  %v330 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %39, i32 0, i32 4, !dbg !4533
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v330, align 8, !dbg !4533
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4534
  %v431 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %41, i32 0, i32 5, !dbg !4535
  %42 = load %struct.ScrVert*, %struct.ScrVert** %v431, align 8, !dbg !4535
  %call32 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %38, %struct.ScrVert* %40, %struct.ScrVert* %42), !dbg !4536
  br label %if.end63, !dbg !4537

if.else33:                                        ; preds = %if.else
  %43 = load i32, i32* %dir, align 4, !dbg !4538
  %cmp34 = icmp eq i32 %43, 2, !dbg !4540
  br i1 %cmp34, label %if.then36, label %if.else47, !dbg !4541

if.then36:                                        ; preds = %if.else33
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4542
  %v337 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %44, i32 0, i32 4, !dbg !4544
  %45 = load %struct.ScrVert*, %struct.ScrVert** %v337, align 8, !dbg !4544
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4545
  %v338 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %46, i32 0, i32 4, !dbg !4546
  store %struct.ScrVert* %45, %struct.ScrVert** %v338, align 8, !dbg !4547
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4548
  %v439 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 5, !dbg !4549
  %48 = load %struct.ScrVert*, %struct.ScrVert** %v439, align 8, !dbg !4549
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4550
  %v440 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %49, i32 0, i32 5, !dbg !4551
  store %struct.ScrVert* %48, %struct.ScrVert** %v440, align 8, !dbg !4552
  %50 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4553
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4554
  %v241 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 3, !dbg !4555
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v241, align 8, !dbg !4555
  %53 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4556
  %v342 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %53, i32 0, i32 4, !dbg !4557
  %54 = load %struct.ScrVert*, %struct.ScrVert** %v342, align 8, !dbg !4557
  %call43 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %50, %struct.ScrVert* %52, %struct.ScrVert* %54), !dbg !4558
  %55 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4559
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4560
  %v144 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 2, !dbg !4561
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v144, align 8, !dbg !4561
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4562
  %v445 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 5, !dbg !4563
  %59 = load %struct.ScrVert*, %struct.ScrVert** %v445, align 8, !dbg !4563
  %call46 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %55, %struct.ScrVert* %57, %struct.ScrVert* %59), !dbg !4564
  br label %if.end62, !dbg !4565

if.else47:                                        ; preds = %if.else33
  %60 = load i32, i32* %dir, align 4, !dbg !4566
  %cmp48 = icmp eq i32 %60, 3, !dbg !4568
  br i1 %cmp48, label %if.then50, label %if.end61, !dbg !4569

if.then50:                                        ; preds = %if.else47
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4570
  %v151 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 2, !dbg !4572
  %62 = load %struct.ScrVert*, %struct.ScrVert** %v151, align 8, !dbg !4572
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4573
  %v152 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 2, !dbg !4574
  store %struct.ScrVert* %62, %struct.ScrVert** %v152, align 8, !dbg !4575
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4576
  %v453 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 5, !dbg !4577
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v453, align 8, !dbg !4577
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4578
  %v454 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %66, i32 0, i32 5, !dbg !4579
  store %struct.ScrVert* %65, %struct.ScrVert** %v454, align 8, !dbg !4580
  %67 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4581
  %68 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4582
  %v155 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %68, i32 0, i32 2, !dbg !4583
  %69 = load %struct.ScrVert*, %struct.ScrVert** %v155, align 8, !dbg !4583
  %70 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4584
  %v256 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %70, i32 0, i32 3, !dbg !4585
  %71 = load %struct.ScrVert*, %struct.ScrVert** %v256, align 8, !dbg !4585
  %call57 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %67, %struct.ScrVert* %69, %struct.ScrVert* %71), !dbg !4586
  %72 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4587
  %73 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4588
  %v358 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %73, i32 0, i32 4, !dbg !4589
  %74 = load %struct.ScrVert*, %struct.ScrVert** %v358, align 8, !dbg !4589
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4590
  %v459 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %75, i32 0, i32 5, !dbg !4591
  %76 = load %struct.ScrVert*, %struct.ScrVert** %v459, align 8, !dbg !4591
  %call60 = call %struct.ScrEdge* @screen_addedge(%struct.bScreen* %72, %struct.ScrVert* %74, %struct.ScrVert* %76), !dbg !4592
  br label %if.end61, !dbg !4593

if.end61:                                         ; preds = %if.then50, %if.else47
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then36
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then22
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then13
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4594
  %78 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4595
  %79 = load %struct.ScrArea*, %struct.ScrArea** %sa2.addr, align 8, !dbg !4596
  call void @screen_delarea(%struct.bContext* %77, %struct.bScreen* %78, %struct.ScrArea* %79), !dbg !4597
  %80 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !4598
  call void @removedouble_scrverts(%struct.bScreen* %80), !dbg !4599
  %81 = load %struct.ScrArea*, %struct.ScrArea** %sa1.addr, align 8, !dbg !4600
  %flag65 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %81, i32 0, i32 14, !dbg !4601
  %82 = load i16, i16* %flag65, align 2, !dbg !4602
  %conv66 = sext i16 %82 to i32, !dbg !4602
  %and67 = and i32 %conv66, -5, !dbg !4602
  %conv68 = trunc i32 %and67 to i16, !dbg !4602
  store i16 %conv68, i16* %flag65, align 2, !dbg !4602
  store i32 1, i32* %retval, align 4, !dbg !4603
  br label %return, !dbg !4603

return:                                           ; preds = %if.end64, %if.end9
  %83 = load i32, i32* %retval, align 4, !dbg !4604
  ret i32 %83, !dbg !4604
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_delarea(%struct.bContext* %C, %struct.bScreen* %sc, %struct.ScrArea* %sa) #0 !dbg !4605 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4608, metadata !DIExpression()), !dbg !4609
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4610, metadata !DIExpression()), !dbg !4611
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !4612, metadata !DIExpression()), !dbg !4613
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4614
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4615
  call void @ED_area_exit(%struct.bContext* %0, %struct.ScrArea* %1), !dbg !4616
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4617
  call void @BKE_screen_area_free(%struct.ScrArea* %2), !dbg !4618
  %3 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4619
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 3, !dbg !4620
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4621
  %5 = bitcast %struct.ScrArea* %4 to i8*, !dbg !4621
  call void @BLI_remlink(%struct.ListBase* %areabase, i8* %5), !dbg !4622
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4623
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !4624
  %8 = bitcast %struct.ScrArea* %7 to i8*, !dbg !4624
  call void %6(i8* %8), !dbg !4623
  ret void, !dbg !4625
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @select_connected_scredge(%struct.bScreen* %sc, %struct.ScrEdge* %edge) #0 !dbg !4626 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %edge.addr = alloca %struct.ScrEdge*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %sv = alloca %struct.ScrVert*, align 8
  %oneselected = alloca i32, align 4
  %dir = alloca i8, align 1
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4629, metadata !DIExpression()), !dbg !4630
  store %struct.ScrEdge* %edge, %struct.ScrEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %edge.addr, metadata !4631, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !4633, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !4635, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata i32* %oneselected, metadata !4637, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.declare(metadata i8* %dir, metadata !4639, metadata !DIExpression()), !dbg !4640
  %0 = load %struct.ScrEdge*, %struct.ScrEdge** %edge.addr, align 8, !dbg !4641
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %0, i32 0, i32 2, !dbg !4643
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !4643
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !4644
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !4645
  %2 = load i16, i16* %x, align 8, !dbg !4645
  %conv = sext i16 %2 to i32, !dbg !4641
  %3 = load %struct.ScrEdge*, %struct.ScrEdge** %edge.addr, align 8, !dbg !4646
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %3, i32 0, i32 3, !dbg !4647
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !4647
  %vec1 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !4648
  %x2 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec1, i32 0, i32 0, !dbg !4649
  %5 = load i16, i16* %x2, align 8, !dbg !4649
  %conv3 = sext i16 %5 to i32, !dbg !4646
  %cmp = icmp eq i32 %conv, %conv3, !dbg !4650
  br i1 %cmp, label %if.then, label %if.else, !dbg !4651

if.then:                                          ; preds = %entry
  store i8 118, i8* %dir, align 1, !dbg !4652
  br label %if.end, !dbg !4653

if.else:                                          ; preds = %entry
  store i8 104, i8* %dir, align 1, !dbg !4654
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4655
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 1, !dbg !4656
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !4657
  %7 = load i8*, i8** %first, align 8, !dbg !4657
  %8 = bitcast i8* %7 to %struct.ScrVert*, !dbg !4655
  store %struct.ScrVert* %8, %struct.ScrVert** %sv, align 8, !dbg !4658
  br label %while.cond, !dbg !4659

while.cond:                                       ; preds = %while.body, %if.end
  %9 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4660
  %tobool = icmp ne %struct.ScrVert* %9, null, !dbg !4659
  br i1 %tobool, label %while.body, label %while.end, !dbg !4659

while.body:                                       ; preds = %while.cond
  %10 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4661
  %flag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %10, i32 0, i32 4, !dbg !4663
  store i16 0, i16* %flag, align 4, !dbg !4664
  %11 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !4665
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %11, i32 0, i32 0, !dbg !4666
  %12 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !4666
  store %struct.ScrVert* %12, %struct.ScrVert** %sv, align 8, !dbg !4667
  br label %while.cond, !dbg !4659, !llvm.loop !4668

while.end:                                        ; preds = %while.cond
  %13 = load %struct.ScrEdge*, %struct.ScrEdge** %edge.addr, align 8, !dbg !4670
  %v15 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %13, i32 0, i32 2, !dbg !4671
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v15, align 8, !dbg !4671
  %flag6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %14, i32 0, i32 4, !dbg !4672
  store i16 1, i16* %flag6, align 4, !dbg !4673
  %15 = load %struct.ScrEdge*, %struct.ScrEdge** %edge.addr, align 8, !dbg !4674
  %v27 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %15, i32 0, i32 3, !dbg !4675
  %16 = load %struct.ScrVert*, %struct.ScrVert** %v27, align 8, !dbg !4675
  %flag8 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %16, i32 0, i32 4, !dbg !4676
  store i16 1, i16* %flag8, align 4, !dbg !4677
  store i32 1, i32* %oneselected, align 4, !dbg !4678
  br label %while.cond9, !dbg !4679

while.cond9:                                      ; preds = %while.end68, %while.end
  %17 = load i32, i32* %oneselected, align 4, !dbg !4680
  %tobool10 = icmp ne i32 %17, 0, !dbg !4679
  br i1 %tobool10, label %while.body11, label %while.end69, !dbg !4679

while.body11:                                     ; preds = %while.cond9
  %18 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4681
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 2, !dbg !4683
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase, i32 0, i32 0, !dbg !4684
  %19 = load i8*, i8** %first12, align 8, !dbg !4684
  %20 = bitcast i8* %19 to %struct.ScrEdge*, !dbg !4681
  store %struct.ScrEdge* %20, %struct.ScrEdge** %se, align 8, !dbg !4685
  store i32 0, i32* %oneselected, align 4, !dbg !4686
  br label %while.cond13, !dbg !4687

while.cond13:                                     ; preds = %if.end66, %while.body11
  %21 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4688
  %tobool14 = icmp ne %struct.ScrEdge* %21, null, !dbg !4687
  br i1 %tobool14, label %while.body15, label %while.end68, !dbg !4687

while.body15:                                     ; preds = %while.cond13
  %22 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4689
  %v116 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %22, i32 0, i32 2, !dbg !4692
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v116, align 8, !dbg !4692
  %flag17 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 4, !dbg !4693
  %24 = load i16, i16* %flag17, align 4, !dbg !4693
  %conv18 = sext i16 %24 to i32, !dbg !4689
  %25 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4694
  %v219 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %25, i32 0, i32 3, !dbg !4695
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v219, align 8, !dbg !4695
  %flag20 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 4, !dbg !4696
  %27 = load i16, i16* %flag20, align 4, !dbg !4696
  %conv21 = sext i16 %27 to i32, !dbg !4694
  %add = add nsw i32 %conv18, %conv21, !dbg !4697
  %cmp22 = icmp eq i32 %add, 1, !dbg !4698
  br i1 %cmp22, label %if.then24, label %if.end66, !dbg !4699

if.then24:                                        ; preds = %while.body15
  %28 = load i8, i8* %dir, align 1, !dbg !4700
  %conv25 = zext i8 %28 to i32, !dbg !4700
  %cmp26 = icmp eq i32 %conv25, 104, !dbg !4703
  br i1 %cmp26, label %if.then28, label %if.end44, !dbg !4704

if.then28:                                        ; preds = %if.then24
  %29 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4705
  %v129 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %29, i32 0, i32 2, !dbg !4708
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v129, align 8, !dbg !4708
  %vec30 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 3, !dbg !4709
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec30, i32 0, i32 1, !dbg !4710
  %31 = load i16, i16* %y, align 2, !dbg !4710
  %conv31 = sext i16 %31 to i32, !dbg !4705
  %32 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4711
  %v232 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %32, i32 0, i32 3, !dbg !4712
  %33 = load %struct.ScrVert*, %struct.ScrVert** %v232, align 8, !dbg !4712
  %vec33 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %33, i32 0, i32 3, !dbg !4713
  %y34 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec33, i32 0, i32 1, !dbg !4714
  %34 = load i16, i16* %y34, align 2, !dbg !4714
  %conv35 = sext i16 %34 to i32, !dbg !4711
  %cmp36 = icmp eq i32 %conv31, %conv35, !dbg !4715
  br i1 %cmp36, label %if.then38, label %if.end43, !dbg !4716

if.then38:                                        ; preds = %if.then28
  %35 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4717
  %v239 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %35, i32 0, i32 3, !dbg !4719
  %36 = load %struct.ScrVert*, %struct.ScrVert** %v239, align 8, !dbg !4719
  %flag40 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %36, i32 0, i32 4, !dbg !4720
  store i16 1, i16* %flag40, align 4, !dbg !4721
  %37 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4722
  %v141 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %37, i32 0, i32 2, !dbg !4723
  %38 = load %struct.ScrVert*, %struct.ScrVert** %v141, align 8, !dbg !4723
  %flag42 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %38, i32 0, i32 4, !dbg !4724
  store i16 1, i16* %flag42, align 4, !dbg !4725
  store i32 1, i32* %oneselected, align 4, !dbg !4726
  br label %if.end43, !dbg !4727

if.end43:                                         ; preds = %if.then38, %if.then28
  br label %if.end44, !dbg !4728

if.end44:                                         ; preds = %if.end43, %if.then24
  %39 = load i8, i8* %dir, align 1, !dbg !4729
  %conv45 = zext i8 %39 to i32, !dbg !4729
  %cmp46 = icmp eq i32 %conv45, 118, !dbg !4731
  br i1 %cmp46, label %if.then48, label %if.end65, !dbg !4732

if.then48:                                        ; preds = %if.end44
  %40 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4733
  %v149 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %40, i32 0, i32 2, !dbg !4736
  %41 = load %struct.ScrVert*, %struct.ScrVert** %v149, align 8, !dbg !4736
  %vec50 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %41, i32 0, i32 3, !dbg !4737
  %x51 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec50, i32 0, i32 0, !dbg !4738
  %42 = load i16, i16* %x51, align 8, !dbg !4738
  %conv52 = sext i16 %42 to i32, !dbg !4733
  %43 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4739
  %v253 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %43, i32 0, i32 3, !dbg !4740
  %44 = load %struct.ScrVert*, %struct.ScrVert** %v253, align 8, !dbg !4740
  %vec54 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %44, i32 0, i32 3, !dbg !4741
  %x55 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec54, i32 0, i32 0, !dbg !4742
  %45 = load i16, i16* %x55, align 8, !dbg !4742
  %conv56 = sext i16 %45 to i32, !dbg !4739
  %cmp57 = icmp eq i32 %conv52, %conv56, !dbg !4743
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !4744

if.then59:                                        ; preds = %if.then48
  %46 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4745
  %v260 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %46, i32 0, i32 3, !dbg !4747
  %47 = load %struct.ScrVert*, %struct.ScrVert** %v260, align 8, !dbg !4747
  %flag61 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %47, i32 0, i32 4, !dbg !4748
  store i16 1, i16* %flag61, align 4, !dbg !4749
  %48 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4750
  %v162 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %48, i32 0, i32 2, !dbg !4751
  %49 = load %struct.ScrVert*, %struct.ScrVert** %v162, align 8, !dbg !4751
  %flag63 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %49, i32 0, i32 4, !dbg !4752
  store i16 1, i16* %flag63, align 4, !dbg !4753
  store i32 1, i32* %oneselected, align 4, !dbg !4754
  br label %if.end64, !dbg !4755

if.end64:                                         ; preds = %if.then59, %if.then48
  br label %if.end65, !dbg !4756

if.end65:                                         ; preds = %if.end64, %if.end44
  br label %if.end66, !dbg !4757

if.end66:                                         ; preds = %if.end65, %while.body15
  %50 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4758
  %next67 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %50, i32 0, i32 0, !dbg !4759
  %51 = load %struct.ScrEdge*, %struct.ScrEdge** %next67, align 8, !dbg !4759
  store %struct.ScrEdge* %51, %struct.ScrEdge** %se, align 8, !dbg !4760
  br label %while.cond13, !dbg !4687, !llvm.loop !4761

while.end68:                                      ; preds = %while.cond13
  br label %while.cond9, !dbg !4679, !llvm.loop !4763

while.end69:                                      ; preds = %while.cond9
  ret void, !dbg !4765
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bScreen* @ED_screen_duplicate(%struct.wmWindow* %win, %struct.bScreen* %sc) #0 !dbg !4766 {
entry:
  %retval = alloca %struct.bScreen*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %newsc = alloca %struct.bScreen*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !4769, metadata !DIExpression()), !dbg !4770
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.declare(metadata %struct.bScreen** %newsc, metadata !4773, metadata !DIExpression()), !dbg !4774
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4775
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 9, !dbg !4777
  %1 = load i16, i16* %state, align 8, !dbg !4777
  %conv = sext i16 %1 to i32, !dbg !4775
  %cmp = icmp ne i32 %conv, 0, !dbg !4778
  br i1 %cmp, label %if.then, label %if.end, !dbg !4779

if.then:                                          ; preds = %entry
  store %struct.bScreen* null, %struct.bScreen** %retval, align 8, !dbg !4780
  br label %return, !dbg !4780

if.end:                                           ; preds = %entry
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !4781
  %3 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4782
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 5, !dbg !4783
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4783
  %5 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4784
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 0, !dbg !4785
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4786
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4784
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !4787
  %call = call %struct.bScreen* @ED_screen_add(%struct.wmWindow* %2, %struct.Scene* %4, i8* %add.ptr), !dbg !4788
  store %struct.bScreen* %call, %struct.bScreen** %newsc, align 8, !dbg !4789
  %6 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !4790
  %7 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !4791
  call void @screen_copy(%struct.bScreen* %6, %struct.bScreen* %7), !dbg !4792
  %8 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !4793
  store %struct.bScreen* %8, %struct.bScreen** %retval, align 8, !dbg !4794
  br label %return, !dbg !4794

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.bScreen*, %struct.bScreen** %retval, align 8, !dbg !4795
  ret %struct.bScreen* %9, !dbg !4795
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_copy(%struct.bScreen* %to, %struct.bScreen* %from) #0 !dbg !4796 {
entry:
  %to.addr = alloca %struct.bScreen*, align 8
  %from.addr = alloca %struct.bScreen*, align 8
  %s1 = alloca %struct.ScrVert*, align 8
  %s2 = alloca %struct.ScrVert*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %saf = alloca %struct.ScrArea*, align 8
  store %struct.bScreen* %to, %struct.bScreen** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %to.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  store %struct.bScreen* %from, %struct.bScreen** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %from.addr, metadata !4801, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %s1, metadata !4803, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %s2, metadata !4805, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !4807, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4809, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %saf, metadata !4811, metadata !DIExpression()), !dbg !4812
  %0 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4813
  call void @BKE_screen_free(%struct.bScreen* %0), !dbg !4814
  %1 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4815
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %1, i32 0, i32 1, !dbg !4816
  %2 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4817
  %vertbase1 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 1, !dbg !4818
  call void @BLI_duplicatelist(%struct.ListBase* %vertbase, %struct.ListBase* %vertbase1), !dbg !4819
  %3 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4820
  %edgebase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 2, !dbg !4821
  %4 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4822
  %edgebase2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 2, !dbg !4823
  call void @BLI_duplicatelist(%struct.ListBase* %edgebase, %struct.ListBase* %edgebase2), !dbg !4824
  %5 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4825
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 3, !dbg !4826
  %6 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4827
  %areabase3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 3, !dbg !4828
  call void @BLI_duplicatelist(%struct.ListBase* %areabase, %struct.ListBase* %areabase3), !dbg !4829
  %7 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4830
  %regionbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 4, !dbg !4831
  call void @BLI_listbase_clear(%struct.ListBase* %regionbase), !dbg !4832
  %8 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4833
  %vertbase4 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 1, !dbg !4834
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase4, i32 0, i32 0, !dbg !4835
  %9 = load i8*, i8** %first, align 8, !dbg !4835
  %10 = bitcast i8* %9 to %struct.ScrVert*, !dbg !4833
  store %struct.ScrVert* %10, %struct.ScrVert** %s2, align 8, !dbg !4836
  %11 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4837
  %vertbase5 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 1, !dbg !4839
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase5, i32 0, i32 0, !dbg !4840
  %12 = load i8*, i8** %first6, align 8, !dbg !4840
  %13 = bitcast i8* %12 to %struct.ScrVert*, !dbg !4837
  store %struct.ScrVert* %13, %struct.ScrVert** %s1, align 8, !dbg !4841
  br label %for.cond, !dbg !4842

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4843
  %tobool = icmp ne %struct.ScrVert* %14, null, !dbg !4845
  br i1 %tobool, label %for.body, label %for.end, !dbg !4845

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ScrVert*, %struct.ScrVert** %s2, align 8, !dbg !4846
  %16 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4848
  %newv = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %16, i32 0, i32 2, !dbg !4849
  store %struct.ScrVert* %15, %struct.ScrVert** %newv, align 8, !dbg !4850
  br label %for.inc, !dbg !4851

for.inc:                                          ; preds = %for.body
  %17 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4852
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %17, i32 0, i32 0, !dbg !4853
  %18 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !4853
  store %struct.ScrVert* %18, %struct.ScrVert** %s1, align 8, !dbg !4854
  %19 = load %struct.ScrVert*, %struct.ScrVert** %s2, align 8, !dbg !4855
  %next7 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %19, i32 0, i32 0, !dbg !4856
  %20 = load %struct.ScrVert*, %struct.ScrVert** %next7, align 8, !dbg !4856
  store %struct.ScrVert* %20, %struct.ScrVert** %s2, align 8, !dbg !4857
  br label %for.cond, !dbg !4858, !llvm.loop !4859

for.end:                                          ; preds = %for.cond
  %21 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4861
  %edgebase8 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %21, i32 0, i32 2, !dbg !4863
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edgebase8, i32 0, i32 0, !dbg !4864
  %22 = load i8*, i8** %first9, align 8, !dbg !4864
  %23 = bitcast i8* %22 to %struct.ScrEdge*, !dbg !4861
  store %struct.ScrEdge* %23, %struct.ScrEdge** %se, align 8, !dbg !4865
  br label %for.cond10, !dbg !4866

for.cond10:                                       ; preds = %for.inc19, %for.end
  %24 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4867
  %tobool11 = icmp ne %struct.ScrEdge* %24, null, !dbg !4869
  br i1 %tobool11, label %for.body12, label %for.end21, !dbg !4869

for.body12:                                       ; preds = %for.cond10
  %25 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4870
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %25, i32 0, i32 2, !dbg !4872
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !4872
  %newv13 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 2, !dbg !4873
  %27 = load %struct.ScrVert*, %struct.ScrVert** %newv13, align 8, !dbg !4873
  %28 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4874
  %v114 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %28, i32 0, i32 2, !dbg !4875
  store %struct.ScrVert* %27, %struct.ScrVert** %v114, align 8, !dbg !4876
  %29 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4877
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %29, i32 0, i32 3, !dbg !4878
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !4878
  %newv15 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 2, !dbg !4879
  %31 = load %struct.ScrVert*, %struct.ScrVert** %newv15, align 8, !dbg !4879
  %32 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4880
  %v216 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %32, i32 0, i32 3, !dbg !4881
  store %struct.ScrVert* %31, %struct.ScrVert** %v216, align 8, !dbg !4882
  %33 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4883
  %v117 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %33, i32 0, i32 2, !dbg !4884
  %34 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4885
  %v218 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %34, i32 0, i32 3, !dbg !4886
  call void @sortscrvert(%struct.ScrVert** %v117, %struct.ScrVert** %v218), !dbg !4887
  br label %for.inc19, !dbg !4888

for.inc19:                                        ; preds = %for.body12
  %35 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !4889
  %next20 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %35, i32 0, i32 0, !dbg !4890
  %36 = load %struct.ScrEdge*, %struct.ScrEdge** %next20, align 8, !dbg !4890
  store %struct.ScrEdge* %36, %struct.ScrEdge** %se, align 8, !dbg !4891
  br label %for.cond10, !dbg !4892, !llvm.loop !4893

for.end21:                                        ; preds = %for.cond10
  %37 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4895
  %areabase22 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %37, i32 0, i32 3, !dbg !4896
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase22, i32 0, i32 0, !dbg !4897
  %38 = load i8*, i8** %first23, align 8, !dbg !4897
  %39 = bitcast i8* %38 to %struct.ScrArea*, !dbg !4895
  store %struct.ScrArea* %39, %struct.ScrArea** %saf, align 8, !dbg !4898
  %40 = load %struct.bScreen*, %struct.bScreen** %to.addr, align 8, !dbg !4899
  %areabase24 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %40, i32 0, i32 3, !dbg !4901
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase24, i32 0, i32 0, !dbg !4902
  %41 = load i8*, i8** %first25, align 8, !dbg !4902
  %42 = bitcast i8* %41 to %struct.ScrArea*, !dbg !4899
  store %struct.ScrArea* %42, %struct.ScrArea** %sa, align 8, !dbg !4903
  br label %for.cond26, !dbg !4904

for.cond26:                                       ; preds = %for.inc40, %for.end21
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4905
  %tobool27 = icmp ne %struct.ScrArea* %43, null, !dbg !4907
  br i1 %tobool27, label %for.body28, label %for.end43, !dbg !4907

for.body28:                                       ; preds = %for.cond26
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4908
  %v129 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %44, i32 0, i32 2, !dbg !4910
  %45 = load %struct.ScrVert*, %struct.ScrVert** %v129, align 8, !dbg !4910
  %newv30 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %45, i32 0, i32 2, !dbg !4911
  %46 = load %struct.ScrVert*, %struct.ScrVert** %newv30, align 8, !dbg !4911
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4912
  %v131 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 2, !dbg !4913
  store %struct.ScrVert* %46, %struct.ScrVert** %v131, align 8, !dbg !4914
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4915
  %v232 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %48, i32 0, i32 3, !dbg !4916
  %49 = load %struct.ScrVert*, %struct.ScrVert** %v232, align 8, !dbg !4916
  %newv33 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %49, i32 0, i32 2, !dbg !4917
  %50 = load %struct.ScrVert*, %struct.ScrVert** %newv33, align 8, !dbg !4917
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4918
  %v234 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 3, !dbg !4919
  store %struct.ScrVert* %50, %struct.ScrVert** %v234, align 8, !dbg !4920
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4921
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %52, i32 0, i32 4, !dbg !4922
  %53 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !4922
  %newv35 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %53, i32 0, i32 2, !dbg !4923
  %54 = load %struct.ScrVert*, %struct.ScrVert** %newv35, align 8, !dbg !4923
  %55 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4924
  %v336 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %55, i32 0, i32 4, !dbg !4925
  store %struct.ScrVert* %54, %struct.ScrVert** %v336, align 8, !dbg !4926
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4927
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 5, !dbg !4928
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !4928
  %newv37 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %57, i32 0, i32 2, !dbg !4929
  %58 = load %struct.ScrVert*, %struct.ScrVert** %newv37, align 8, !dbg !4929
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4930
  %v438 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %59, i32 0, i32 5, !dbg !4931
  store %struct.ScrVert* %58, %struct.ScrVert** %v438, align 8, !dbg !4932
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4933
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 19, !dbg !4934
  call void @BLI_listbase_clear(%struct.ListBase* %spacedata), !dbg !4935
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4936
  %regionbase39 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 20, !dbg !4937
  call void @BLI_listbase_clear(%struct.ListBase* %regionbase39), !dbg !4938
  %62 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4939
  %actionzones = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %62, i32 0, i32 22, !dbg !4940
  call void @BLI_listbase_clear(%struct.ListBase* %actionzones), !dbg !4941
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4942
  %handlers = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 21, !dbg !4943
  call void @BLI_listbase_clear(%struct.ListBase* %handlers), !dbg !4944
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4945
  %65 = load %struct.ScrArea*, %struct.ScrArea** %saf, align 8, !dbg !4946
  call void @ED_area_data_copy(%struct.ScrArea* %64, %struct.ScrArea* %65, i8 zeroext 1), !dbg !4947
  br label %for.inc40, !dbg !4948

for.inc40:                                        ; preds = %for.body28
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4949
  %next41 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %66, i32 0, i32 0, !dbg !4950
  %67 = load %struct.ScrArea*, %struct.ScrArea** %next41, align 8, !dbg !4950
  store %struct.ScrArea* %67, %struct.ScrArea** %sa, align 8, !dbg !4951
  %68 = load %struct.ScrArea*, %struct.ScrArea** %saf, align 8, !dbg !4952
  %next42 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %68, i32 0, i32 0, !dbg !4953
  %69 = load %struct.ScrArea*, %struct.ScrArea** %next42, align 8, !dbg !4953
  store %struct.ScrArea* %69, %struct.ScrArea** %saf, align 8, !dbg !4954
  br label %for.cond26, !dbg !4955, !llvm.loop !4956

for.end43:                                        ; preds = %for.cond26
  %70 = load %struct.bScreen*, %struct.bScreen** %from.addr, align 8, !dbg !4958
  %vertbase44 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %70, i32 0, i32 1, !dbg !4960
  %first45 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase44, i32 0, i32 0, !dbg !4961
  %71 = load i8*, i8** %first45, align 8, !dbg !4961
  %72 = bitcast i8* %71 to %struct.ScrVert*, !dbg !4958
  store %struct.ScrVert* %72, %struct.ScrVert** %s1, align 8, !dbg !4962
  br label %for.cond46, !dbg !4963

for.cond46:                                       ; preds = %for.inc50, %for.end43
  %73 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4964
  %tobool47 = icmp ne %struct.ScrVert* %73, null, !dbg !4966
  br i1 %tobool47, label %for.body48, label %for.end52, !dbg !4966

for.body48:                                       ; preds = %for.cond46
  %74 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4967
  %newv49 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %74, i32 0, i32 2, !dbg !4968
  store %struct.ScrVert* null, %struct.ScrVert** %newv49, align 8, !dbg !4969
  br label %for.inc50, !dbg !4967

for.inc50:                                        ; preds = %for.body48
  %75 = load %struct.ScrVert*, %struct.ScrVert** %s1, align 8, !dbg !4970
  %next51 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %75, i32 0, i32 0, !dbg !4971
  %76 = load %struct.ScrVert*, %struct.ScrVert** %next51, align 8, !dbg !4971
  store %struct.ScrVert* %76, %struct.ScrVert** %s1, align 8, !dbg !4972
  br label %for.cond46, !dbg !4973, !llvm.loop !4974

for.end52:                                        ; preds = %for.cond46
  ret void, !dbg !4976
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_do_listen(%struct.bContext* %C, %struct.wmNotifier* %note) #0 !dbg !4977 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %note.addr = alloca %struct.wmNotifier*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  store %struct.wmNotifier* %note, %struct.wmNotifier** %note.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note.addr, metadata !4984, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !4986, metadata !DIExpression()), !dbg !4987
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4988
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !4989
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !4987
  %1 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !4990
  %category = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %1, i32 0, i32 5, !dbg !4991
  %2 = load i32, i32* %category, align 4, !dbg !4991
  switch i32 %2, label %sw.epilog [
    i32 16777216, label %sw.bb
    i32 33554432, label %sw.bb1
    i32 50331648, label %sw.bb4
    i32 67108864, label %sw.bb11
  ], !dbg !4992

sw.bb:                                            ; preds = %entry
  %3 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !4993
  %data = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %3, i32 0, i32 6, !dbg !4996
  %4 = load i32, i32* %data, align 8, !dbg !4996
  %cmp = icmp eq i32 %4, 65536, !dbg !4997
  br i1 %cmp, label %if.then, label %if.end, !dbg !4998

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4999
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %5, i32 0, i32 3, !dbg !5000
  %6 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5000
  %do_draw = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 12, !dbg !5001
  store i16 1, i16* %do_draw, align 2, !dbg !5002
  br label %if.end, !dbg !4999

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !5003

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5004
  %screen2 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %7, i32 0, i32 3, !dbg !5005
  %8 = load %struct.bScreen*, %struct.bScreen** %screen2, align 8, !dbg !5005
  %do_draw3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 12, !dbg !5006
  store i16 1, i16* %do_draw3, align 2, !dbg !5007
  br label %sw.epilog, !dbg !5008

sw.bb4:                                           ; preds = %entry
  %9 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !5009
  %action = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %9, i32 0, i32 8, !dbg !5011
  %10 = load i32, i32* %action, align 8, !dbg !5011
  %cmp5 = icmp eq i32 %10, 1, !dbg !5012
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !5013

if.then6:                                         ; preds = %sw.bb4
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5014
  %screen7 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %11, i32 0, i32 3, !dbg !5015
  %12 = load %struct.bScreen*, %struct.bScreen** %screen7, align 8, !dbg !5015
  %do_refresh = getelementptr inbounds %struct.bScreen, %struct.bScreen* %12, i32 0, i32 13, !dbg !5016
  store i16 1, i16* %do_refresh, align 8, !dbg !5017
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5018
  %screen8 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %13, i32 0, i32 3, !dbg !5019
  %14 = load %struct.bScreen*, %struct.bScreen** %screen8, align 8, !dbg !5019
  %do_draw9 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %14, i32 0, i32 12, !dbg !5020
  store i16 1, i16* %do_draw9, align 2, !dbg !5021
  br label %if.end10, !dbg !5018

if.end10:                                         ; preds = %if.then6, %sw.bb4
  br label %sw.epilog, !dbg !5022

sw.bb11:                                          ; preds = %entry
  %15 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !5023
  %data12 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %15, i32 0, i32 6, !dbg !5025
  %16 = load i32, i32* %data12, align 8, !dbg !5025
  %cmp13 = icmp eq i32 %16, 720896, !dbg !5026
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5027

if.then14:                                        ; preds = %sw.bb11
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5028
  %18 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !5029
  %swinid = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %18, i32 0, i32 4, !dbg !5030
  %19 = load i32, i32* %swinid, align 8, !dbg !5030
  call void @region_cursor_set(%struct.wmWindow* %17, i32 %19, i32 1), !dbg !5031
  br label %if.end15, !dbg !5031

if.end15:                                         ; preds = %if.then14, %sw.bb11
  br label %sw.epilog, !dbg !5032

sw.epilog:                                        ; preds = %entry, %if.end15, %if.end10, %sw.bb1, %if.end
  ret void, !dbg !5033
}

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @region_cursor_set(%struct.wmWindow* %win, i32 %swinid, i32 %swin_changed) #0 !dbg !5034 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %swinid.addr = alloca i32, align 4
  %swin_changed.addr = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store i32 %swinid, i32* %swinid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swinid.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  store i32 %swin_changed, i32* %swin_changed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swin_changed.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5043, metadata !DIExpression()), !dbg !5044
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5045
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 3, !dbg !5046
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5046
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %1, i32 0, i32 3, !dbg !5047
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5048
  %2 = load i8*, i8** %first, align 8, !dbg !5048
  %3 = bitcast i8* %2 to %struct.ScrArea*, !dbg !5045
  store %struct.ScrArea* %3, %struct.ScrArea** %sa, align 8, !dbg !5044
  br label %for.cond, !dbg !5049

for.cond:                                         ; preds = %for.inc23, %entry
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5050
  %tobool = icmp ne %struct.ScrArea* %4, null, !dbg !5053
  br i1 %tobool, label %for.body, label %for.end25, !dbg !5053

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5054, metadata !DIExpression()), !dbg !5058
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5059
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 20, !dbg !5060
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !5061
  %6 = load i8*, i8** %first1, align 8, !dbg !5061
  %7 = bitcast i8* %6 to %struct.ARegion*, !dbg !5059
  store %struct.ARegion* %7, %struct.ARegion** %ar, align 8, !dbg !5058
  br label %for.cond2, !dbg !5062

for.cond2:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5063
  %tobool3 = icmp ne %struct.ARegion* %8, null, !dbg !5066
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !5066

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5067
  %swinid5 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 7, !dbg !5070
  %10 = load i16, i16* %swinid5, align 4, !dbg !5070
  %conv = sext i16 %10 to i32, !dbg !5067
  %11 = load i32, i32* %swinid.addr, align 4, !dbg !5071
  %cmp = icmp eq i32 %conv, %11, !dbg !5072
  br i1 %cmp, label %if.then, label %if.end22, !dbg !5073

if.then:                                          ; preds = %for.body4
  %12 = load i32, i32* %swin_changed.addr, align 4, !dbg !5074
  %tobool7 = icmp ne i32 %12, 0, !dbg !5074
  br i1 %tobool7, label %if.then12, label %lor.lhs.false, !dbg !5077

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5078
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 20, !dbg !5079
  %14 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !5079
  %tobool8 = icmp ne %struct.ARegionType* %14, null, !dbg !5078
  br i1 %tobool8, label %land.lhs.true, label %if.end21, !dbg !5080

land.lhs.true:                                    ; preds = %lor.lhs.false
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5081
  %type9 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 20, !dbg !5082
  %16 = load %struct.ARegionType*, %struct.ARegionType** %type9, align 8, !dbg !5082
  %event_cursor = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %16, i32 0, i32 23, !dbg !5083
  %17 = load i16, i16* %event_cursor, align 8, !dbg !5083
  %conv10 = sext i16 %17 to i32, !dbg !5081
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !5081
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !5084

if.then12:                                        ; preds = %land.lhs.true, %if.then
  %18 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5085
  %type13 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %18, i32 0, i32 20, !dbg !5088
  %19 = load %struct.ARegionType*, %struct.ARegionType** %type13, align 8, !dbg !5088
  %tobool14 = icmp ne %struct.ARegionType* %19, null, !dbg !5085
  br i1 %tobool14, label %land.lhs.true15, label %if.else, !dbg !5089

land.lhs.true15:                                  ; preds = %if.then12
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5090
  %type16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 20, !dbg !5091
  %21 = load %struct.ARegionType*, %struct.ARegionType** %type16, align 8, !dbg !5091
  %cursor = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %21, i32 0, i32 11, !dbg !5092
  %22 = load void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)** %cursor, align 8, !dbg !5092
  %tobool17 = icmp ne void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)* %22, null, !dbg !5090
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5093

if.then18:                                        ; preds = %land.lhs.true15
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5094
  %type19 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 20, !dbg !5095
  %24 = load %struct.ARegionType*, %struct.ARegionType** %type19, align 8, !dbg !5095
  %cursor20 = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %24, i32 0, i32 11, !dbg !5096
  %25 = load void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)** %cursor20, align 8, !dbg !5096
  %26 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5097
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5098
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5099
  call void %25(%struct.wmWindow* %26, %struct.ScrArea* %27, %struct.ARegion* %28), !dbg !5094
  br label %if.end, !dbg !5094

if.else:                                          ; preds = %land.lhs.true15, %if.then12
  %29 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5100
  call void @WM_cursor_set(%struct.wmWindow* %29, i32 1006), !dbg !5101
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  br label %if.end21, !dbg !5102

if.end21:                                         ; preds = %if.end, %land.lhs.true, %lor.lhs.false
  br label %for.end25, !dbg !5103

if.end22:                                         ; preds = %for.body4
  br label %for.inc, !dbg !5104

for.inc:                                          ; preds = %if.end22
  %30 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5105
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %30, i32 0, i32 0, !dbg !5106
  %31 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !5106
  store %struct.ARegion* %31, %struct.ARegion** %ar, align 8, !dbg !5107
  br label %for.cond2, !dbg !5108, !llvm.loop !5109

for.end:                                          ; preds = %for.cond2
  br label %for.inc23, !dbg !5111

for.inc23:                                        ; preds = %for.end
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5112
  %next24 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 0, !dbg !5113
  %33 = load %struct.ScrArea*, %struct.ScrArea** %next24, align 8, !dbg !5113
  store %struct.ScrArea* %33, %struct.ScrArea** %sa, align 8, !dbg !5114
  br label %for.cond, !dbg !5115, !llvm.loop !5116

for.end25:                                        ; preds = %if.end21, %for.cond
  ret void, !dbg !5118
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_draw(%struct.wmWindow* %win) #0 !dbg !5119 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %sa1 = alloca %struct.ScrArea*, align 8
  %sa2 = alloca %struct.ScrArea*, align 8
  %sa3 = alloca %struct.ScrArea*, align 8
  %dir = alloca i32, align 4
  %dira = alloca i32, align 4
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !5124, metadata !DIExpression()), !dbg !5125
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5126
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %0), !dbg !5127
  store i32 %call, i32* %winsize_x, align 4, !dbg !5125
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !5128, metadata !DIExpression()), !dbg !5129
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5130
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %1), !dbg !5131
  store i32 %call1, i32* %winsize_y, align 4, !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5132, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa1, metadata !5134, metadata !DIExpression()), !dbg !5135
  store %struct.ScrArea* null, %struct.ScrArea** %sa1, align 8, !dbg !5135
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa2, metadata !5136, metadata !DIExpression()), !dbg !5137
  store %struct.ScrArea* null, %struct.ScrArea** %sa2, align 8, !dbg !5137
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa3, metadata !5138, metadata !DIExpression()), !dbg !5139
  store %struct.ScrArea* null, %struct.ScrArea** %sa3, align 8, !dbg !5139
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !5140, metadata !DIExpression()), !dbg !5141
  store i32 -1, i32* %dir, align 4, !dbg !5141
  call void @llvm.dbg.declare(metadata i32* %dira, metadata !5142, metadata !DIExpression()), !dbg !5143
  store i32 -1, i32* %dira, align 4, !dbg !5143
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5144
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5145
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %3, i32 0, i32 3, !dbg !5146
  %4 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5146
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 18, !dbg !5147
  %5 = load i16, i16* %mainwin, align 2, !dbg !5147
  %conv = sext i16 %5 to i32, !dbg !5145
  call void @wmSubWindowSet(%struct.wmWindow* %2, i32 %conv), !dbg !5148
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5149
  %screen2 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %6, i32 0, i32 3, !dbg !5151
  %7 = load %struct.bScreen*, %struct.bScreen** %screen2, align 8, !dbg !5151
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 3, !dbg !5152
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5153
  %8 = load i8*, i8** %first, align 8, !dbg !5153
  %9 = bitcast i8* %8 to %struct.ScrArea*, !dbg !5149
  store %struct.ScrArea* %9, %struct.ScrArea** %sa, align 8, !dbg !5154
  br label %for.cond, !dbg !5155

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5156
  %tobool = icmp ne %struct.ScrArea* %10, null, !dbg !5158
  br i1 %tobool, label %for.body, label %for.end, !dbg !5158

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5159
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 14, !dbg !5162
  %12 = load i16, i16* %flag, align 2, !dbg !5162
  %conv3 = sext i16 %12 to i32, !dbg !5159
  %and = and i32 %conv3, 4, !dbg !5163
  %tobool4 = icmp ne i32 %and, 0, !dbg !5163
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5164

if.then:                                          ; preds = %for.body
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5165
  store %struct.ScrArea* %13, %struct.ScrArea** %sa1, align 8, !dbg !5166
  br label %if.end, !dbg !5167

if.end:                                           ; preds = %if.then, %for.body
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5168
  %flag5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 14, !dbg !5170
  %15 = load i16, i16* %flag5, align 2, !dbg !5170
  %conv6 = sext i16 %15 to i32, !dbg !5168
  %and7 = and i32 %conv6, 2, !dbg !5171
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5171
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5172

if.then9:                                         ; preds = %if.end
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5173
  store %struct.ScrArea* %16, %struct.ScrArea** %sa2, align 8, !dbg !5174
  br label %if.end10, !dbg !5175

if.end10:                                         ; preds = %if.then9, %if.end
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5176
  %flag11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 14, !dbg !5178
  %18 = load i16, i16* %flag11, align 2, !dbg !5178
  %conv12 = sext i16 %18 to i32, !dbg !5176
  %and13 = and i32 %conv12, 48, !dbg !5179
  %tobool14 = icmp ne i32 %and13, 0, !dbg !5179
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5180

if.then15:                                        ; preds = %if.end10
  %19 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5181
  store %struct.ScrArea* %19, %struct.ScrArea** %sa3, align 8, !dbg !5182
  br label %if.end16, !dbg !5183

if.end16:                                         ; preds = %if.then15, %if.end10
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5184
  %21 = load i32, i32* %winsize_x, align 4, !dbg !5185
  %22 = load i32, i32* %winsize_y, align 4, !dbg !5186
  call void @drawscredge_area(%struct.ScrArea* %20, i32 %21, i32 %22, i32 0), !dbg !5187
  br label %for.inc, !dbg !5188

for.inc:                                          ; preds = %if.end16
  %23 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5189
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %23, i32 0, i32 0, !dbg !5190
  %24 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !5190
  store %struct.ScrArea* %24, %struct.ScrArea** %sa, align 8, !dbg !5191
  br label %for.cond, !dbg !5192, !llvm.loop !5193

for.end:                                          ; preds = %for.cond
  %25 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5195
  %screen17 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %25, i32 0, i32 3, !dbg !5197
  %26 = load %struct.bScreen*, %struct.bScreen** %screen17, align 8, !dbg !5197
  %areabase18 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %26, i32 0, i32 3, !dbg !5198
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase18, i32 0, i32 0, !dbg !5199
  %27 = load i8*, i8** %first19, align 8, !dbg !5199
  %28 = bitcast i8* %27 to %struct.ScrArea*, !dbg !5195
  store %struct.ScrArea* %28, %struct.ScrArea** %sa, align 8, !dbg !5200
  br label %for.cond20, !dbg !5201

for.cond20:                                       ; preds = %for.inc23, %for.end
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5202
  %tobool21 = icmp ne %struct.ScrArea* %29, null, !dbg !5204
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !5204

for.body22:                                       ; preds = %for.cond20
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5205
  %31 = load i32, i32* %winsize_x, align 4, !dbg !5206
  %32 = load i32, i32* %winsize_y, align 4, !dbg !5207
  call void @drawscredge_area(%struct.ScrArea* %30, i32 %31, i32 %32, i32 1), !dbg !5208
  br label %for.inc23, !dbg !5208

for.inc23:                                        ; preds = %for.body22
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5209
  %next24 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %33, i32 0, i32 0, !dbg !5210
  %34 = load %struct.ScrArea*, %struct.ScrArea** %next24, align 8, !dbg !5210
  store %struct.ScrArea* %34, %struct.ScrArea** %sa, align 8, !dbg !5211
  br label %for.cond20, !dbg !5212, !llvm.loop !5213

for.end25:                                        ; preds = %for.cond20
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !5215
  %tobool26 = icmp ne %struct.ScrArea* %35, null, !dbg !5215
  br i1 %tobool26, label %land.lhs.true, label %if.end38, !dbg !5217

land.lhs.true:                                    ; preds = %for.end25
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !5218
  %tobool27 = icmp ne %struct.ScrArea* %36, null, !dbg !5218
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !5219

if.then28:                                        ; preds = %land.lhs.true
  %37 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !5220
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !5222
  %call29 = call i32 @area_getorientation(%struct.ScrArea* %37, %struct.ScrArea* %38), !dbg !5223
  store i32 %call29, i32* %dir, align 4, !dbg !5224
  %39 = load i32, i32* %dir, align 4, !dbg !5225
  %cmp = icmp ne i32 %39, -1, !dbg !5227
  br i1 %cmp, label %if.then31, label %if.end35, !dbg !5228

if.then31:                                        ; preds = %if.then28
  %40 = load i32, i32* %dir, align 4, !dbg !5229
  switch i32 %40, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb32
    i32 2, label %sw.bb33
    i32 3, label %sw.bb34
  ], !dbg !5231

sw.bb:                                            ; preds = %if.then31
  store i32 114, i32* %dir, align 4, !dbg !5232
  store i32 108, i32* %dira, align 4, !dbg !5234
  br label %sw.epilog, !dbg !5235

sw.bb32:                                          ; preds = %if.then31
  store i32 100, i32* %dir, align 4, !dbg !5236
  store i32 117, i32* %dira, align 4, !dbg !5237
  br label %sw.epilog, !dbg !5238

sw.bb33:                                          ; preds = %if.then31
  store i32 108, i32* %dir, align 4, !dbg !5239
  store i32 114, i32* %dira, align 4, !dbg !5240
  br label %sw.epilog, !dbg !5241

sw.bb34:                                          ; preds = %if.then31
  store i32 117, i32* %dir, align 4, !dbg !5242
  store i32 100, i32* %dira, align 4, !dbg !5243
  br label %sw.epilog, !dbg !5244

sw.epilog:                                        ; preds = %if.then31, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb
  br label %if.end35, !dbg !5245

if.end35:                                         ; preds = %sw.epilog, %if.then28
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !5246
  %42 = load i32, i32* %dir, align 4, !dbg !5247
  %conv36 = trunc i32 %42 to i8, !dbg !5247
  call void @scrarea_draw_shape_dark(%struct.ScrArea* %41, i8 zeroext %conv36), !dbg !5248
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !5249
  %44 = load i32, i32* %dira, align 4, !dbg !5250
  %conv37 = trunc i32 %44 to i8, !dbg !5250
  call void @scrarea_draw_shape_light(%struct.ScrArea* %43, i8 zeroext %conv37), !dbg !5251
  br label %if.end38, !dbg !5252

if.end38:                                         ; preds = %if.end35, %land.lhs.true, %for.end25
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5253
  %tobool39 = icmp ne %struct.ScrArea* %45, null, !dbg !5253
  br i1 %tobool39, label %if.then40, label %if.end74, !dbg !5255

if.then40:                                        ; preds = %if.end38
  call void @glEnable(i32 3042), !dbg !5256
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext -1, i8 zeroext 100), !dbg !5258
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5259
  %flag41 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %46, i32 0, i32 14, !dbg !5261
  %47 = load i16, i16* %flag41, align 2, !dbg !5261
  %conv42 = sext i16 %47 to i32, !dbg !5259
  %and43 = and i32 %conv42, 16, !dbg !5262
  %tobool44 = icmp ne i32 %and43, 0, !dbg !5262
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !5263

if.then45:                                        ; preds = %if.then40
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5264
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %48, i32 0, i32 7, !dbg !5266
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct, i32 0, i32 0, !dbg !5267
  %49 = load i32, i32* %xmin, align 8, !dbg !5267
  %50 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5268
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %50, i32 0, i32 21, !dbg !5269
  %51 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5269
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %51, i32 0, i32 5, !dbg !5270
  %52 = load i32, i32* %y, align 8, !dbg !5270
  %53 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5271
  %totrct46 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %53, i32 0, i32 7, !dbg !5272
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct46, i32 0, i32 1, !dbg !5273
  %54 = load i32, i32* %xmax, align 4, !dbg !5273
  %55 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5274
  %eventstate47 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %55, i32 0, i32 21, !dbg !5275
  %56 = load %struct.wmEvent*, %struct.wmEvent** %eventstate47, align 8, !dbg !5275
  %y48 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %56, i32 0, i32 5, !dbg !5276
  %57 = load i32, i32* %y48, align 8, !dbg !5276
  call void @sdrawline(i32 %49, i32 %52, i32 %54, i32 %57), !dbg !5277
  call void @glColor4ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 100), !dbg !5278
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5279
  %totrct49 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 7, !dbg !5280
  %xmin50 = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct49, i32 0, i32 0, !dbg !5281
  %59 = load i32, i32* %xmin50, align 8, !dbg !5281
  %60 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5282
  %eventstate51 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %60, i32 0, i32 21, !dbg !5283
  %61 = load %struct.wmEvent*, %struct.wmEvent** %eventstate51, align 8, !dbg !5283
  %y52 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %61, i32 0, i32 5, !dbg !5284
  %62 = load i32, i32* %y52, align 8, !dbg !5284
  %add = add nsw i32 %62, 1, !dbg !5285
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5286
  %totrct53 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 7, !dbg !5287
  %xmax54 = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct53, i32 0, i32 1, !dbg !5288
  %64 = load i32, i32* %xmax54, align 4, !dbg !5288
  %65 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5289
  %eventstate55 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %65, i32 0, i32 21, !dbg !5290
  %66 = load %struct.wmEvent*, %struct.wmEvent** %eventstate55, align 8, !dbg !5290
  %y56 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %66, i32 0, i32 5, !dbg !5291
  %67 = load i32, i32* %y56, align 8, !dbg !5291
  %add57 = add nsw i32 %67, 1, !dbg !5292
  call void @sdrawline(i32 %59, i32 %add, i32 %64, i32 %add57), !dbg !5293
  br label %if.end73, !dbg !5294

if.else:                                          ; preds = %if.then40
  %68 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5295
  %eventstate58 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %68, i32 0, i32 21, !dbg !5297
  %69 = load %struct.wmEvent*, %struct.wmEvent** %eventstate58, align 8, !dbg !5297
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %69, i32 0, i32 4, !dbg !5298
  %70 = load i32, i32* %x, align 4, !dbg !5298
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5299
  %totrct59 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %71, i32 0, i32 7, !dbg !5300
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct59, i32 0, i32 2, !dbg !5301
  %72 = load i32, i32* %ymin, align 8, !dbg !5301
  %73 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5302
  %eventstate60 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %73, i32 0, i32 21, !dbg !5303
  %74 = load %struct.wmEvent*, %struct.wmEvent** %eventstate60, align 8, !dbg !5303
  %x61 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %74, i32 0, i32 4, !dbg !5304
  %75 = load i32, i32* %x61, align 4, !dbg !5304
  %76 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5305
  %totrct62 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %76, i32 0, i32 7, !dbg !5306
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct62, i32 0, i32 3, !dbg !5307
  %77 = load i32, i32* %ymax, align 4, !dbg !5307
  call void @sdrawline(i32 %70, i32 %72, i32 %75, i32 %77), !dbg !5308
  call void @glColor4ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 100), !dbg !5309
  %78 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5310
  %eventstate63 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %78, i32 0, i32 21, !dbg !5311
  %79 = load %struct.wmEvent*, %struct.wmEvent** %eventstate63, align 8, !dbg !5311
  %x64 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %79, i32 0, i32 4, !dbg !5312
  %80 = load i32, i32* %x64, align 4, !dbg !5312
  %add65 = add nsw i32 %80, 1, !dbg !5313
  %81 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5314
  %totrct66 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %81, i32 0, i32 7, !dbg !5315
  %ymin67 = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct66, i32 0, i32 2, !dbg !5316
  %82 = load i32, i32* %ymin67, align 8, !dbg !5316
  %83 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5317
  %eventstate68 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %83, i32 0, i32 21, !dbg !5318
  %84 = load %struct.wmEvent*, %struct.wmEvent** %eventstate68, align 8, !dbg !5318
  %x69 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %84, i32 0, i32 4, !dbg !5319
  %85 = load i32, i32* %x69, align 4, !dbg !5319
  %add70 = add nsw i32 %85, 1, !dbg !5320
  %86 = load %struct.ScrArea*, %struct.ScrArea** %sa3, align 8, !dbg !5321
  %totrct71 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %86, i32 0, i32 7, !dbg !5322
  %ymax72 = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct71, i32 0, i32 3, !dbg !5323
  %87 = load i32, i32* %ymax72, align 4, !dbg !5323
  call void @sdrawline(i32 %add65, i32 %82, i32 %add70, i32 %87), !dbg !5324
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then45
  call void @glDisable(i32 3042), !dbg !5325
  br label %if.end74, !dbg !5326

if.end74:                                         ; preds = %if.end73, %if.end38
  %88 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5327
  %screen75 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %88, i32 0, i32 3, !dbg !5328
  %89 = load %struct.bScreen*, %struct.bScreen** %screen75, align 8, !dbg !5328
  %do_draw = getelementptr inbounds %struct.bScreen, %struct.bScreen* %89, i32 0, i32 12, !dbg !5329
  store i16 0, i16* %do_draw, align 2, !dbg !5330
  ret void, !dbg !5331
}

declare dso_local void @wmSubWindowSet(%struct.wmWindow*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @drawscredge_area(%struct.ScrArea* %sa, i32 %sizex, i32 %sizey, i32 %center) #0 !dbg !5332 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %sizex.addr = alloca i32, align 4
  %sizey.addr = alloca i32, align 4
  %center.addr = alloca i32, align 4
  %x1 = alloca i16, align 2
  %y1 = alloca i16, align 2
  %x2 = alloca i16, align 2
  %y2 = alloca i16, align 2
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store i32 %sizex, i32* %sizex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizex.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store i32 %sizey, i32* %sizey.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizey.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  store i32 %center, i32* %center.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %center.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata i16* %x1, metadata !5343, metadata !DIExpression()), !dbg !5344
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5345
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 2, !dbg !5346
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !5346
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !5347
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !5348
  %2 = load i16, i16* %x, align 8, !dbg !5348
  store i16 %2, i16* %x1, align 2, !dbg !5344
  call void @llvm.dbg.declare(metadata i16* %y1, metadata !5349, metadata !DIExpression()), !dbg !5350
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5351
  %v11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 2, !dbg !5352
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v11, align 8, !dbg !5352
  %vec2 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !5353
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec2, i32 0, i32 1, !dbg !5354
  %5 = load i16, i16* %y, align 2, !dbg !5354
  store i16 %5, i16* %y1, align 2, !dbg !5350
  call void @llvm.dbg.declare(metadata i16* %x2, metadata !5355, metadata !DIExpression()), !dbg !5356
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5357
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 4, !dbg !5358
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !5358
  %vec3 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %7, i32 0, i32 3, !dbg !5359
  %x4 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec3, i32 0, i32 0, !dbg !5360
  %8 = load i16, i16* %x4, align 8, !dbg !5360
  store i16 %8, i16* %x2, align 2, !dbg !5356
  call void @llvm.dbg.declare(metadata i16* %y2, metadata !5361, metadata !DIExpression()), !dbg !5362
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5363
  %v35 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 4, !dbg !5364
  %10 = load %struct.ScrVert*, %struct.ScrVert** %v35, align 8, !dbg !5364
  %vec6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %10, i32 0, i32 3, !dbg !5365
  %y7 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec6, i32 0, i32 1, !dbg !5366
  %11 = load i16, i16* %y7, align 2, !dbg !5366
  store i16 %11, i16* %y2, align 2, !dbg !5362
  %12 = load i32, i32* %center.addr, align 4, !dbg !5367
  %cmp = icmp eq i32 %12, 0, !dbg !5369
  br i1 %cmp, label %if.then, label %if.else, !dbg !5370

if.then:                                          ; preds = %entry
  %13 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5371
  %cmp8 = fcmp ogt float %13, 1.000000e+00, !dbg !5374
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !5375

if.then9:                                         ; preds = %if.then
  call void @glColor3ub(i8 zeroext 80, i8 zeroext 80, i8 zeroext 80), !dbg !5376
  %14 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5378
  %15 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5378
  %mul = fmul float 2.000000e+00, %15, !dbg !5378
  %sub = fsub float %mul, 1.000000e+00, !dbg !5378
  call void @glLineWidth(float %sub), !dbg !5378
  %16 = load i32, i32* %sizex.addr, align 4, !dbg !5379
  %17 = load i32, i32* %sizey.addr, align 4, !dbg !5380
  %18 = load i16, i16* %x1, align 2, !dbg !5381
  %conv = sext i16 %18 to i32, !dbg !5381
  %19 = load i16, i16* %y1, align 2, !dbg !5382
  %conv10 = sext i16 %19 to i32, !dbg !5382
  %20 = load i16, i16* %x2, align 2, !dbg !5383
  %conv11 = sext i16 %20 to i32, !dbg !5383
  %21 = load i16, i16* %y2, align 2, !dbg !5384
  %conv12 = sext i16 %21 to i32, !dbg !5384
  call void @drawscredge_area_draw(i32 %16, i32 %17, i32 %conv, i32 %conv10, i32 %conv11, i32 %conv12, i32 0), !dbg !5385
  %22 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5386
  call void @glLineWidth(float 1.000000e+00), !dbg !5386
  br label %if.end, !dbg !5387

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end17, !dbg !5388

if.else:                                          ; preds = %entry
  call void @glColor3ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !5389
  %23 = load i32, i32* %sizex.addr, align 4, !dbg !5391
  %24 = load i32, i32* %sizey.addr, align 4, !dbg !5392
  %25 = load i16, i16* %x1, align 2, !dbg !5393
  %conv13 = sext i16 %25 to i32, !dbg !5393
  %26 = load i16, i16* %y1, align 2, !dbg !5394
  %conv14 = sext i16 %26 to i32, !dbg !5394
  %27 = load i16, i16* %x2, align 2, !dbg !5395
  %conv15 = sext i16 %27 to i32, !dbg !5395
  %28 = load i16, i16* %y2, align 2, !dbg !5396
  %conv16 = sext i16 %28 to i32, !dbg !5396
  call void @drawscredge_area_draw(i32 %23, i32 %24, i32 %conv13, i32 %conv14, i32 %conv15, i32 %conv16, i32 0), !dbg !5397
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  ret void, !dbg !5398
}

; Function Attrs: noinline nounwind uwtable
define internal void @scrarea_draw_shape_dark(%struct.ScrArea* %sa, i8 zeroext %dir) #0 !dbg !5399 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @glBlendFunc(i32 770, i32 771), !dbg !5406
  call void @glEnable(i32 3042), !dbg !5407
  call void @glColor4ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 50), !dbg !5408
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5409
  %1 = load i8, i8* %dir.addr, align 1, !dbg !5410
  call void @draw_join_shape(%struct.ScrArea* %0, i8 zeroext %1), !dbg !5411
  call void @glDisable(i32 3042), !dbg !5412
  ret void, !dbg !5413
}

; Function Attrs: noinline nounwind uwtable
define internal void @scrarea_draw_shape_light(%struct.ScrArea* %sa, i8 zeroext %UNUSED_dir) #0 !dbg !5414 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %UNUSED_dir.addr = alloca i8, align 1
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  store i8 %UNUSED_dir, i8* %UNUSED_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_dir.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  call void @glBlendFunc(i32 774, i32 770), !dbg !5419
  call void @glEnable(i32 3042), !dbg !5420
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext -1, i8 zeroext 50), !dbg !5421
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5422
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 2, !dbg !5423
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !5423
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !5424
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !5425
  %2 = load i16, i16* %x, align 8, !dbg !5425
  %conv = sext i16 %2 to i32, !dbg !5422
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5426
  %v11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 2, !dbg !5427
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v11, align 8, !dbg !5427
  %vec2 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !5428
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec2, i32 0, i32 1, !dbg !5429
  %5 = load i16, i16* %y, align 2, !dbg !5429
  %conv3 = sext i16 %5 to i32, !dbg !5426
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5430
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 4, !dbg !5431
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !5431
  %vec4 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %7, i32 0, i32 3, !dbg !5432
  %x5 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec4, i32 0, i32 0, !dbg !5433
  %8 = load i16, i16* %x5, align 8, !dbg !5433
  %conv6 = sext i16 %8 to i32, !dbg !5430
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5434
  %v37 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 4, !dbg !5435
  %10 = load %struct.ScrVert*, %struct.ScrVert** %v37, align 8, !dbg !5435
  %vec8 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %10, i32 0, i32 3, !dbg !5436
  %y9 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec8, i32 0, i32 1, !dbg !5437
  %11 = load i16, i16* %y9, align 2, !dbg !5437
  %conv10 = sext i16 %11 to i32, !dbg !5434
  call void @glRecti(i32 %conv, i32 %conv3, i32 %conv6, i32 %conv10), !dbg !5438
  call void @glDisable(i32 3042), !dbg !5439
  ret void, !dbg !5440
}

declare dso_local void @glEnable(i32) #2

declare dso_local void @glColor4ub(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @sdrawline(i32, i32, i32, i32) #2

declare dso_local void @glDisable(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_refresh(%struct.wmWindowManager* %wm, %struct.wmWindow* %win) #0 !dbg !5441 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %winrct = alloca %struct.rcti, align 4
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !5446, metadata !DIExpression()), !dbg !5447
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !5448, metadata !DIExpression()), !dbg !5449
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !5450
  %tobool = icmp ne i8 %0, 0, !dbg !5452
  br i1 %tobool, label %if.end21, label %if.then, !dbg !5453

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !5454, metadata !DIExpression()), !dbg !5456
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5457
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %1), !dbg !5458
  store i32 %call, i32* %winsize_x, align 4, !dbg !5456
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !5459, metadata !DIExpression()), !dbg !5460
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5461
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %2), !dbg !5462
  store i32 %call1, i32* %winsize_y, align 4, !dbg !5460
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5463, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.declare(metadata %struct.rcti* %winrct, metadata !5465, metadata !DIExpression()), !dbg !5466
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !5467
  store i32 0, i32* %xmin, align 4, !dbg !5468
  %3 = load i32, i32* %winsize_x, align 4, !dbg !5469
  %sub = sub nsw i32 %3, 1, !dbg !5470
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 1, !dbg !5471
  store i32 %sub, i32* %xmax, align 4, !dbg !5472
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 2, !dbg !5473
  store i32 0, i32* %ymin, align 4, !dbg !5474
  %4 = load i32, i32* %winsize_y, align 4, !dbg !5475
  %sub2 = sub nsw i32 %4, 1, !dbg !5476
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 3, !dbg !5477
  store i32 %sub2, i32* %ymax, align 4, !dbg !5478
  call void @screen_refresh_headersizes(), !dbg !5479
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5480
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %5, i32 0, i32 3, !dbg !5481
  %6 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5481
  %7 = load i32, i32* %winsize_x, align 4, !dbg !5482
  %8 = load i32, i32* %winsize_y, align 4, !dbg !5483
  call void @screen_test_scale(%struct.bScreen* %6, i32 %7, i32 %8), !dbg !5484
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5485
  %screen3 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 3, !dbg !5487
  %10 = load %struct.bScreen*, %struct.bScreen** %screen3, align 8, !dbg !5487
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 18, !dbg !5488
  %11 = load i16, i16* %mainwin, align 2, !dbg !5488
  %conv = sext i16 %11 to i32, !dbg !5485
  %cmp = icmp eq i32 %conv, 0, !dbg !5489
  br i1 %cmp, label %if.then5, label %if.else, !dbg !5490

if.then5:                                         ; preds = %if.then
  %12 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5491
  %call6 = call i32 @wm_subwindow_open(%struct.wmWindow* %12, %struct.rcti* %winrct), !dbg !5492
  %conv7 = trunc i32 %call6 to i16, !dbg !5492
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5493
  %screen8 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %13, i32 0, i32 3, !dbg !5494
  %14 = load %struct.bScreen*, %struct.bScreen** %screen8, align 8, !dbg !5494
  %mainwin9 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %14, i32 0, i32 18, !dbg !5495
  store i16 %conv7, i16* %mainwin9, align 2, !dbg !5496
  br label %if.end, !dbg !5493

if.else:                                          ; preds = %if.then
  %15 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5497
  %16 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5498
  %screen10 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %16, i32 0, i32 3, !dbg !5499
  %17 = load %struct.bScreen*, %struct.bScreen** %screen10, align 8, !dbg !5499
  %mainwin11 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 18, !dbg !5500
  %18 = load i16, i16* %mainwin11, align 2, !dbg !5500
  %conv12 = sext i16 %18 to i32, !dbg !5498
  call void @wm_subwindow_position(%struct.wmWindow* %15, i32 %conv12, %struct.rcti* %winrct), !dbg !5501
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %19 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5502
  %screen13 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %19, i32 0, i32 3, !dbg !5504
  %20 = load %struct.bScreen*, %struct.bScreen** %screen13, align 8, !dbg !5504
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %20, i32 0, i32 3, !dbg !5505
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5506
  %21 = load i8*, i8** %first, align 8, !dbg !5506
  %22 = bitcast i8* %21 to %struct.ScrArea*, !dbg !5502
  store %struct.ScrArea* %22, %struct.ScrArea** %sa, align 8, !dbg !5507
  br label %for.cond, !dbg !5508

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5509
  %tobool14 = icmp ne %struct.ScrArea* %23, null, !dbg !5511
  br i1 %tobool14, label %for.body, label %for.end, !dbg !5511

for.body:                                         ; preds = %for.cond
  %24 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5512
  %25 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5514
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5515
  call void @ED_area_initialize(%struct.wmWindowManager* %24, %struct.wmWindow* %25, %struct.ScrArea* %26), !dbg !5516
  br label %for.inc, !dbg !5517

for.inc:                                          ; preds = %for.body
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5518
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %27, i32 0, i32 0, !dbg !5519
  %28 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !5519
  store %struct.ScrArea* %28, %struct.ScrArea** %sa, align 8, !dbg !5520
  br label %for.cond, !dbg !5521, !llvm.loop !5522

for.end:                                          ; preds = %for.cond
  %29 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5524
  %screen15 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %29, i32 0, i32 3, !dbg !5526
  %30 = load %struct.bScreen*, %struct.bScreen** %screen15, align 8, !dbg !5526
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %30, i32 0, i32 21, !dbg !5527
  %31 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !5527
  %tobool16 = icmp ne %struct.wmTimer* %31, null, !dbg !5524
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !5528

if.then17:                                        ; preds = %for.end
  %32 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5529
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5530
  %34 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5531
  %screen18 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %34, i32 0, i32 3, !dbg !5532
  %35 = load %struct.bScreen*, %struct.bScreen** %screen18, align 8, !dbg !5532
  %animtimer19 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %35, i32 0, i32 21, !dbg !5533
  %36 = load %struct.wmTimer*, %struct.wmTimer** %animtimer19, align 8, !dbg !5533
  call void @WM_event_timer_sleep(%struct.wmWindowManager* %32, %struct.wmWindow* %33, %struct.wmTimer* %36, i8 zeroext 0), !dbg !5534
  br label %if.end20, !dbg !5534

if.end20:                                         ; preds = %if.then17, %for.end
  br label %if.end21, !dbg !5535

if.end21:                                         ; preds = %if.end20, %entry
  %37 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5536
  %and = and i32 %37, 8, !dbg !5538
  %tobool22 = icmp ne i32 %and, 0, !dbg !5538
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !5539

if.then23:                                        ; preds = %if.end21
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.ED_screen_refresh, i64 0, i64 0)), !dbg !5540
  br label %if.end25, !dbg !5542

if.end25:                                         ; preds = %if.then23, %if.end21
  %38 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5543
  %screen26 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %38, i32 0, i32 3, !dbg !5544
  %39 = load %struct.bScreen*, %struct.bScreen** %screen26, align 8, !dbg !5544
  %do_refresh = getelementptr inbounds %struct.bScreen, %struct.bScreen* %39, i32 0, i32 13, !dbg !5545
  store i16 0, i16* %do_refresh, align 8, !dbg !5546
  %40 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5547
  %screen27 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %40, i32 0, i32 3, !dbg !5548
  %41 = load %struct.bScreen*, %struct.bScreen** %screen27, align 8, !dbg !5548
  %context = getelementptr inbounds %struct.bScreen, %struct.bScreen* %41, i32 0, i32 22, !dbg !5549
  store i8* bitcast (i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)* @ed_screen_context to i8*), i8** %context, align 8, !dbg !5550
  ret void, !dbg !5551
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_refresh_headersizes() #0 !dbg !5552 {
entry:
  %lb = alloca %struct.ListBase*, align 8
  %st = alloca %struct.SpaceType*, align 8
  %art = alloca %struct.ARegionType*, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !5553, metadata !DIExpression()), !dbg !5556
  %call = call %struct.ListBase* @BKE_spacetypes_list(), !dbg !5557
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !5556
  call void @llvm.dbg.declare(metadata %struct.SpaceType** %st, metadata !5558, metadata !DIExpression()), !dbg !5561
  %0 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5562
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5564
  %1 = load i8*, i8** %first, align 8, !dbg !5564
  %2 = bitcast i8* %1 to %struct.SpaceType*, !dbg !5562
  store %struct.SpaceType* %2, %struct.SpaceType** %st, align 8, !dbg !5565
  br label %for.cond, !dbg !5566

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SpaceType*, %struct.SpaceType** %st, align 8, !dbg !5567
  %tobool = icmp ne %struct.SpaceType* %3, null, !dbg !5569
  br i1 %tobool, label %for.body, label %for.end, !dbg !5569

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ARegionType** %art, metadata !5570, metadata !DIExpression()), !dbg !5574
  %4 = load %struct.SpaceType*, %struct.SpaceType** %st, align 8, !dbg !5575
  %call1 = call %struct.ARegionType* @BKE_regiontype_from_id(%struct.SpaceType* %4, i32 1), !dbg !5576
  store %struct.ARegionType* %call1, %struct.ARegionType** %art, align 8, !dbg !5574
  %5 = load %struct.ARegionType*, %struct.ARegionType** %art, align 8, !dbg !5577
  %tobool2 = icmp ne %struct.ARegionType* %5, null, !dbg !5577
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5579

if.then:                                          ; preds = %for.body
  %call3 = call i32 @ED_area_headersize(), !dbg !5580
  %6 = load %struct.ARegionType*, %struct.ARegionType** %art, align 8, !dbg !5581
  %prefsizey = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %6, i32 0, i32 19, !dbg !5582
  store i32 %call3, i32* %prefsizey, align 4, !dbg !5583
  br label %if.end, !dbg !5581

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5584

for.inc:                                          ; preds = %if.end
  %7 = load %struct.SpaceType*, %struct.SpaceType** %st, align 8, !dbg !5585
  %next = getelementptr inbounds %struct.SpaceType, %struct.SpaceType* %7, i32 0, i32 0, !dbg !5586
  %8 = load %struct.SpaceType*, %struct.SpaceType** %next, align 8, !dbg !5586
  store %struct.SpaceType* %8, %struct.SpaceType** %st, align 8, !dbg !5587
  br label %for.cond, !dbg !5588, !llvm.loop !5589

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5591
}

; Function Attrs: noinline nounwind uwtable
define internal void @screen_test_scale(%struct.bScreen* %sc, i32 %winsize_x, i32 %winsize_y) #0 !dbg !5592 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %winsize_x.addr = alloca i32, align 4
  %winsize_y.addr = alloca i32, align 4
  %headery_init = alloca i32, align 4
  %sv = alloca %struct.ScrVert*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %winsize_x_prev = alloca i32, align 4
  %winsize_y_prev = alloca i32, align 4
  %facx = alloca float, align 4
  %facy = alloca float, align 4
  %tempf = alloca float, align 4
  %min = alloca [2 x float], align 4
  %max = alloca [2 x float], align 4
  %fv = alloca [2 x float], align 4
  %headery_margin_max = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %se = alloca %struct.ScrEdge*, align 8
  %yval = alloca i32, align 4
  %yval232 = alloca i32, align 4
  %headery = alloca i32, align 4
  %se311 = alloca %struct.ScrEdge*, align 8
  %yval322 = alloca i32, align 4
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  store i32 %winsize_x, i32* %winsize_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_x.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  store i32 %winsize_y, i32* %winsize_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_y.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata i32* %headery_init, metadata !5601, metadata !DIExpression()), !dbg !5602
  %call = call i32 @ED_area_headersize(), !dbg !5603
  store i32 %call, i32* %headery_init, align 4, !dbg !5602
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !5604, metadata !DIExpression()), !dbg !5605
  store %struct.ScrVert* null, %struct.ScrVert** %sv, align 8, !dbg !5605
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5606, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata i32* %winsize_x_prev, metadata !5608, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.declare(metadata i32* %winsize_y_prev, metadata !5610, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.declare(metadata float* %facx, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata float* %facy, metadata !5614, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.declare(metadata float* %tempf, metadata !5616, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.declare(metadata [2 x float]* %min, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata [2 x float]* %max, metadata !5620, metadata !DIExpression()), !dbg !5621
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !5622
  store float 2.000000e+04, float* %arrayidx, align 4, !dbg !5623
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !5624
  store float 2.000000e+04, float* %arrayidx1, align 4, !dbg !5625
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !5626
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5627
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !5628
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !5629
  %0 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5630
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 1, !dbg !5632
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !5633
  %1 = load i8*, i8** %first, align 8, !dbg !5633
  %2 = bitcast i8* %1 to %struct.ScrVert*, !dbg !5630
  store %struct.ScrVert* %2, %struct.ScrVert** %sv, align 8, !dbg !5634
  br label %for.cond, !dbg !5635

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5636
  %tobool = icmp ne %struct.ScrVert* %3, null, !dbg !5638
  br i1 %tobool, label %for.body, label %for.end, !dbg !5638

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x float]* %fv, metadata !5639, metadata !DIExpression()), !dbg !5643
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %fv, i64 0, i64 0, !dbg !5644
  %4 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5645
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !5646
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !5647
  %5 = load i16, i16* %x, align 8, !dbg !5647
  %conv = sitofp i16 %5 to float, !dbg !5648
  store float %conv, float* %arrayinit.begin, align 4, !dbg !5644
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !5644
  %6 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5649
  %vec4 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %6, i32 0, i32 3, !dbg !5650
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec4, i32 0, i32 1, !dbg !5651
  %7 = load i16, i16* %y, align 2, !dbg !5651
  %conv5 = sitofp i16 %7 to float, !dbg !5652
  store float %conv5, float* %arrayinit.element, align 4, !dbg !5644
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !5653
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !5654
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %fv, i64 0, i64 0, !dbg !5655
  call void @minmax_v2v2_v2(float* %arraydecay, float* %arraydecay6, float* %arraydecay7), !dbg !5656
  br label %for.inc, !dbg !5657

for.inc:                                          ; preds = %for.body
  %8 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5658
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %8, i32 0, i32 0, !dbg !5659
  %9 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !5659
  store %struct.ScrVert* %9, %struct.ScrVert** %sv, align 8, !dbg !5660
  br label %for.cond, !dbg !5661, !llvm.loop !5662

for.end:                                          ; preds = %for.cond
  %10 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5664
  %vertbase8 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 1, !dbg !5666
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase8, i32 0, i32 0, !dbg !5667
  %11 = load i8*, i8** %first9, align 8, !dbg !5667
  %12 = bitcast i8* %11 to %struct.ScrVert*, !dbg !5664
  store %struct.ScrVert* %12, %struct.ScrVert** %sv, align 8, !dbg !5668
  br label %for.cond10, !dbg !5669

for.cond10:                                       ; preds = %for.inc24, %for.end
  %13 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5670
  %tobool11 = icmp ne %struct.ScrVert* %13, null, !dbg !5672
  br i1 %tobool11, label %for.body12, label %for.end26, !dbg !5672

for.body12:                                       ; preds = %for.cond10
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !5673
  %14 = load float, float* %arrayidx13, align 4, !dbg !5673
  %15 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5675
  %vec14 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %15, i32 0, i32 3, !dbg !5676
  %x15 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec14, i32 0, i32 0, !dbg !5677
  %16 = load i16, i16* %x15, align 8, !dbg !5678
  %conv16 = sitofp i16 %16 to float, !dbg !5678
  %sub = fsub float %conv16, %14, !dbg !5678
  %conv17 = fptosi float %sub to i16, !dbg !5678
  store i16 %conv17, i16* %x15, align 8, !dbg !5678
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !5679
  %17 = load float, float* %arrayidx18, align 4, !dbg !5679
  %18 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5680
  %vec19 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %18, i32 0, i32 3, !dbg !5681
  %y20 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec19, i32 0, i32 1, !dbg !5682
  %19 = load i16, i16* %y20, align 2, !dbg !5683
  %conv21 = sitofp i16 %19 to float, !dbg !5683
  %sub22 = fsub float %conv21, %17, !dbg !5683
  %conv23 = fptosi float %sub22 to i16, !dbg !5683
  store i16 %conv23, i16* %y20, align 2, !dbg !5683
  br label %for.inc24, !dbg !5684

for.inc24:                                        ; preds = %for.body12
  %20 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5685
  %next25 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %20, i32 0, i32 0, !dbg !5686
  %21 = load %struct.ScrVert*, %struct.ScrVert** %next25, align 8, !dbg !5686
  store %struct.ScrVert* %21, %struct.ScrVert** %sv, align 8, !dbg !5687
  br label %for.cond10, !dbg !5688, !llvm.loop !5689

for.end26:                                        ; preds = %for.cond10
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !5691
  %22 = load float, float* %arrayidx27, align 4, !dbg !5691
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !5692
  %23 = load float, float* %arrayidx28, align 4, !dbg !5692
  %sub29 = fsub float %22, %23, !dbg !5693
  %add = fadd float %sub29, 1.000000e+00, !dbg !5694
  %conv30 = fptosi float %add to i32, !dbg !5695
  store i32 %conv30, i32* %winsize_x_prev, align 4, !dbg !5696
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 1, !dbg !5697
  %24 = load float, float* %arrayidx31, align 4, !dbg !5697
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 1, !dbg !5698
  %25 = load float, float* %arrayidx32, align 4, !dbg !5698
  %sub33 = fsub float %24, %25, !dbg !5699
  %add34 = fadd float %sub33, 1.000000e+00, !dbg !5700
  %conv35 = fptosi float %add34 to i32, !dbg !5701
  store i32 %conv35, i32* %winsize_y_prev, align 4, !dbg !5702
  %26 = load i32, i32* %winsize_y_prev, align 4, !dbg !5703
  %27 = load i32, i32* %winsize_y.addr, align 4, !dbg !5705
  %cmp = icmp slt i32 %26, %27, !dbg !5706
  br i1 %cmp, label %if.then, label %if.end93, !dbg !5707

if.then:                                          ; preds = %for.end26
  call void @llvm.dbg.declare(metadata i32* %headery_margin_max, metadata !5708, metadata !DIExpression()), !dbg !5710
  %28 = load i32, i32* %headery_init, align 4, !dbg !5711
  %add37 = add nsw i32 %28, 4, !dbg !5712
  store i32 %add37, i32* %headery_margin_max, align 4, !dbg !5710
  %29 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5713
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %29, i32 0, i32 3, !dbg !5715
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5716
  %30 = load i8*, i8** %first38, align 8, !dbg !5716
  %31 = bitcast i8* %30 to %struct.ScrArea*, !dbg !5713
  store %struct.ScrArea* %31, %struct.ScrArea** %sa, align 8, !dbg !5717
  br label %for.cond39, !dbg !5718

for.cond39:                                       ; preds = %for.inc90, %if.then
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5719
  %tobool40 = icmp ne %struct.ScrArea* %32, null, !dbg !5721
  br i1 %tobool40, label %for.body41, label %for.end92, !dbg !5721

for.body41:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5722, metadata !DIExpression()), !dbg !5724
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5725
  %call42 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %33, i32 1), !dbg !5726
  store %struct.ARegion* %call42, %struct.ARegion** %ar, align 8, !dbg !5724
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5727
  %temp = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %34, i32 0, i32 16, !dbg !5728
  store i8 0, i8* %temp, align 2, !dbg !5729
  %35 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5730
  %tobool43 = icmp ne %struct.ARegion* %35, null, !dbg !5730
  br i1 %tobool43, label %land.lhs.true, label %if.end89, !dbg !5732

land.lhs.true:                                    ; preds = %for.body41
  %36 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5733
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %36, i32 0, i32 10, !dbg !5734
  %37 = load i16, i16* %flag, align 2, !dbg !5734
  %conv44 = sext i16 %37 to i32, !dbg !5733
  %and = and i32 %conv44, 1, !dbg !5735
  %tobool45 = icmp ne i32 %and, 0, !dbg !5735
  br i1 %tobool45, label %if.end89, label %if.then46, !dbg !5736

if.then46:                                        ; preds = %land.lhs.true
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5737
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 3, !dbg !5740
  %39 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !5740
  %vec47 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %39, i32 0, i32 3, !dbg !5741
  %y48 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec47, i32 0, i32 1, !dbg !5742
  %40 = load i16, i16* %y48, align 2, !dbg !5742
  %conv49 = sext i16 %40 to i32, !dbg !5737
  %41 = load i32, i32* %winsize_y_prev, align 4, !dbg !5743
  %sub50 = sub nsw i32 %41, 1, !dbg !5744
  %cmp51 = icmp eq i32 %conv49, %sub50, !dbg !5745
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !5746

if.then53:                                        ; preds = %if.then46
  %42 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5747
  %v254 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %42, i32 0, i32 3, !dbg !5750
  %43 = load %struct.ScrVert*, %struct.ScrVert** %v254, align 8, !dbg !5750
  %vec55 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %43, i32 0, i32 3, !dbg !5751
  %y56 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec55, i32 0, i32 1, !dbg !5752
  %44 = load i16, i16* %y56, align 2, !dbg !5752
  %conv57 = sext i16 %44 to i32, !dbg !5747
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5753
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 2, !dbg !5754
  %46 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !5754
  %vec58 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %46, i32 0, i32 3, !dbg !5755
  %y59 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec58, i32 0, i32 1, !dbg !5756
  %47 = load i16, i16* %y59, align 2, !dbg !5756
  %conv60 = sext i16 %47 to i32, !dbg !5753
  %sub61 = sub nsw i32 %conv57, %conv60, !dbg !5757
  %48 = load i32, i32* %headery_margin_max, align 4, !dbg !5758
  %cmp62 = icmp slt i32 %sub61, %48, !dbg !5759
  br i1 %cmp62, label %if.then64, label %if.end, !dbg !5760

if.then64:                                        ; preds = %if.then53
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5761
  %temp65 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %49, i32 0, i32 16, !dbg !5763
  store i8 2, i8* %temp65, align 2, !dbg !5764
  br label %if.end, !dbg !5765

if.end:                                           ; preds = %if.then64, %if.then53
  br label %if.end88, !dbg !5766

if.else:                                          ; preds = %if.then46
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5767
  %v166 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %50, i32 0, i32 2, !dbg !5769
  %51 = load %struct.ScrVert*, %struct.ScrVert** %v166, align 8, !dbg !5769
  %vec67 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %51, i32 0, i32 3, !dbg !5770
  %y68 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec67, i32 0, i32 1, !dbg !5771
  %52 = load i16, i16* %y68, align 2, !dbg !5771
  %conv69 = sext i16 %52 to i32, !dbg !5767
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !5772
  br i1 %cmp70, label %if.then72, label %if.end87, !dbg !5773

if.then72:                                        ; preds = %if.else
  %53 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5774
  %v273 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %53, i32 0, i32 3, !dbg !5777
  %54 = load %struct.ScrVert*, %struct.ScrVert** %v273, align 8, !dbg !5777
  %vec74 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %54, i32 0, i32 3, !dbg !5778
  %y75 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec74, i32 0, i32 1, !dbg !5779
  %55 = load i16, i16* %y75, align 2, !dbg !5779
  %conv76 = sext i16 %55 to i32, !dbg !5774
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5780
  %v177 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 2, !dbg !5781
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v177, align 8, !dbg !5781
  %vec78 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %57, i32 0, i32 3, !dbg !5782
  %y79 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec78, i32 0, i32 1, !dbg !5783
  %58 = load i16, i16* %y79, align 2, !dbg !5783
  %conv80 = sext i16 %58 to i32, !dbg !5780
  %sub81 = sub nsw i32 %conv76, %conv80, !dbg !5784
  %59 = load i32, i32* %headery_margin_max, align 4, !dbg !5785
  %cmp82 = icmp slt i32 %sub81, %59, !dbg !5786
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !5787

if.then84:                                        ; preds = %if.then72
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5788
  %temp85 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 16, !dbg !5790
  store i8 1, i8* %temp85, align 2, !dbg !5791
  br label %if.end86, !dbg !5792

if.end86:                                         ; preds = %if.then84, %if.then72
  br label %if.end87, !dbg !5793

if.end87:                                         ; preds = %if.end86, %if.else
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end
  br label %if.end89, !dbg !5794

if.end89:                                         ; preds = %if.end88, %land.lhs.true, %for.body41
  br label %for.inc90, !dbg !5795

for.inc90:                                        ; preds = %if.end89
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5796
  %next91 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 0, !dbg !5797
  %62 = load %struct.ScrArea*, %struct.ScrArea** %next91, align 8, !dbg !5797
  store %struct.ScrArea* %62, %struct.ScrArea** %sa, align 8, !dbg !5798
  br label %for.cond39, !dbg !5799, !llvm.loop !5800

for.end92:                                        ; preds = %for.cond39
  br label %if.end93, !dbg !5802

if.end93:                                         ; preds = %for.end92, %for.end26
  %63 = load i32, i32* %winsize_x_prev, align 4, !dbg !5803
  %64 = load i32, i32* %winsize_x.addr, align 4, !dbg !5805
  %cmp94 = icmp ne i32 %63, %64, !dbg !5806
  br i1 %cmp94, label %if.then98, label %lor.lhs.false, !dbg !5807

lor.lhs.false:                                    ; preds = %if.end93
  %65 = load i32, i32* %winsize_y_prev, align 4, !dbg !5808
  %66 = load i32, i32* %winsize_y.addr, align 4, !dbg !5809
  %cmp96 = icmp ne i32 %65, %66, !dbg !5810
  br i1 %cmp96, label %if.then98, label %if.end175, !dbg !5811

if.then98:                                        ; preds = %lor.lhs.false, %if.end93
  %67 = load i32, i32* %winsize_x.addr, align 4, !dbg !5812
  %conv99 = sitofp i32 %67 to float, !dbg !5814
  %sub100 = fsub float %conv99, 1.000000e+00, !dbg !5815
  %68 = load i32, i32* %winsize_x_prev, align 4, !dbg !5816
  %conv101 = sitofp i32 %68 to float, !dbg !5817
  %sub102 = fsub float %conv101, 1.000000e+00, !dbg !5818
  %div = fdiv float %sub100, %sub102, !dbg !5819
  store float %div, float* %facx, align 4, !dbg !5820
  %69 = load i32, i32* %winsize_y.addr, align 4, !dbg !5821
  %conv103 = sitofp i32 %69 to float, !dbg !5822
  %sub104 = fsub float %conv103, 1.000000e+00, !dbg !5823
  %70 = load i32, i32* %winsize_y_prev, align 4, !dbg !5824
  %conv105 = sitofp i32 %70 to float, !dbg !5825
  %sub106 = fsub float %conv105, 1.000000e+00, !dbg !5826
  %div107 = fdiv float %sub104, %sub106, !dbg !5827
  store float %div107, float* %facy, align 4, !dbg !5828
  %71 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5829
  %vertbase108 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %71, i32 0, i32 1, !dbg !5831
  %first109 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase108, i32 0, i32 0, !dbg !5832
  %72 = load i8*, i8** %first109, align 8, !dbg !5832
  %73 = bitcast i8* %72 to %struct.ScrVert*, !dbg !5829
  store %struct.ScrVert* %73, %struct.ScrVert** %sv, align 8, !dbg !5833
  br label %for.cond110, !dbg !5834

for.cond110:                                      ; preds = %for.inc172, %if.then98
  %74 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5835
  %tobool111 = icmp ne %struct.ScrVert* %74, null, !dbg !5837
  br i1 %tobool111, label %for.body112, label %for.end174, !dbg !5837

for.body112:                                      ; preds = %for.cond110
  %75 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5838
  %vec113 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %75, i32 0, i32 3, !dbg !5840
  %x114 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec113, i32 0, i32 0, !dbg !5841
  %76 = load i16, i16* %x114, align 8, !dbg !5841
  %conv115 = sitofp i16 %76 to float, !dbg !5842
  %77 = load float, float* %facx, align 4, !dbg !5843
  %mul = fmul float %conv115, %77, !dbg !5844
  store float %mul, float* %tempf, align 4, !dbg !5845
  %78 = load float, float* %tempf, align 4, !dbg !5846
  %add116 = fadd float %78, 5.000000e-01, !dbg !5847
  %conv117 = fptosi float %add116 to i16, !dbg !5848
  %79 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5849
  %vec118 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %79, i32 0, i32 3, !dbg !5850
  %x119 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec118, i32 0, i32 0, !dbg !5851
  store i16 %conv117, i16* %x119, align 8, !dbg !5852
  %80 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5853
  %vec120 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %80, i32 0, i32 3, !dbg !5853
  %x121 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec120, i32 0, i32 0, !dbg !5853
  %81 = load i16, i16* %x121, align 8, !dbg !5853
  %conv122 = sext i16 %81 to i32, !dbg !5853
  %cmp123 = icmp slt i32 %conv122, 0, !dbg !5853
  br i1 %cmp123, label %if.then125, label %if.else128, !dbg !5856

if.then125:                                       ; preds = %for.body112
  %82 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5853
  %vec126 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %82, i32 0, i32 3, !dbg !5853
  %x127 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec126, i32 0, i32 0, !dbg !5853
  store i16 0, i16* %x127, align 8, !dbg !5853
  br label %if.end141, !dbg !5853

if.else128:                                       ; preds = %for.body112
  %83 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5857
  %vec129 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %83, i32 0, i32 3, !dbg !5857
  %x130 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec129, i32 0, i32 0, !dbg !5857
  %84 = load i16, i16* %x130, align 8, !dbg !5857
  %conv131 = sext i16 %84 to i32, !dbg !5857
  %85 = load i32, i32* %winsize_x.addr, align 4, !dbg !5857
  %sub132 = sub nsw i32 %85, 1, !dbg !5857
  %cmp133 = icmp sgt i32 %conv131, %sub132, !dbg !5857
  br i1 %cmp133, label %if.then135, label %if.end140, !dbg !5853

if.then135:                                       ; preds = %if.else128
  %86 = load i32, i32* %winsize_x.addr, align 4, !dbg !5857
  %sub136 = sub nsw i32 %86, 1, !dbg !5857
  %conv137 = trunc i32 %sub136 to i16, !dbg !5857
  %87 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5857
  %vec138 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %87, i32 0, i32 3, !dbg !5857
  %x139 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec138, i32 0, i32 0, !dbg !5857
  store i16 %conv137, i16* %x139, align 8, !dbg !5857
  br label %if.end140, !dbg !5857

if.end140:                                        ; preds = %if.then135, %if.else128
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then125
  %88 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5859
  %vec142 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %88, i32 0, i32 3, !dbg !5860
  %y143 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec142, i32 0, i32 1, !dbg !5861
  %89 = load i16, i16* %y143, align 2, !dbg !5861
  %conv144 = sitofp i16 %89 to float, !dbg !5862
  %90 = load float, float* %facy, align 4, !dbg !5863
  %mul145 = fmul float %conv144, %90, !dbg !5864
  store float %mul145, float* %tempf, align 4, !dbg !5865
  %91 = load float, float* %tempf, align 4, !dbg !5866
  %add146 = fadd float %91, 5.000000e-01, !dbg !5867
  %conv147 = fptosi float %add146 to i16, !dbg !5868
  %92 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5869
  %vec148 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %92, i32 0, i32 3, !dbg !5870
  %y149 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec148, i32 0, i32 1, !dbg !5871
  store i16 %conv147, i16* %y149, align 2, !dbg !5872
  %93 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5873
  %vec150 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %93, i32 0, i32 3, !dbg !5873
  %y151 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec150, i32 0, i32 1, !dbg !5873
  %94 = load i16, i16* %y151, align 2, !dbg !5873
  %conv152 = sext i16 %94 to i32, !dbg !5873
  %cmp153 = icmp slt i32 %conv152, 0, !dbg !5873
  br i1 %cmp153, label %if.then155, label %if.else158, !dbg !5876

if.then155:                                       ; preds = %if.end141
  %95 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5873
  %vec156 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %95, i32 0, i32 3, !dbg !5873
  %y157 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec156, i32 0, i32 1, !dbg !5873
  store i16 0, i16* %y157, align 2, !dbg !5873
  br label %if.end171, !dbg !5873

if.else158:                                       ; preds = %if.end141
  %96 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5877
  %vec159 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %96, i32 0, i32 3, !dbg !5877
  %y160 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec159, i32 0, i32 1, !dbg !5877
  %97 = load i16, i16* %y160, align 2, !dbg !5877
  %conv161 = sext i16 %97 to i32, !dbg !5877
  %98 = load i32, i32* %winsize_y.addr, align 4, !dbg !5877
  %sub162 = sub nsw i32 %98, 1, !dbg !5877
  %cmp163 = icmp sgt i32 %conv161, %sub162, !dbg !5877
  br i1 %cmp163, label %if.then165, label %if.end170, !dbg !5873

if.then165:                                       ; preds = %if.else158
  %99 = load i32, i32* %winsize_y.addr, align 4, !dbg !5877
  %sub166 = sub nsw i32 %99, 1, !dbg !5877
  %conv167 = trunc i32 %sub166 to i16, !dbg !5877
  %100 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5877
  %vec168 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %100, i32 0, i32 3, !dbg !5877
  %y169 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec168, i32 0, i32 1, !dbg !5877
  store i16 %conv167, i16* %y169, align 2, !dbg !5877
  br label %if.end170, !dbg !5877

if.end170:                                        ; preds = %if.then165, %if.else158
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then155
  br label %for.inc172, !dbg !5879

for.inc172:                                       ; preds = %if.end171
  %101 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5880
  %next173 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %101, i32 0, i32 0, !dbg !5881
  %102 = load %struct.ScrVert*, %struct.ScrVert** %next173, align 8, !dbg !5881
  store %struct.ScrVert* %102, %struct.ScrVert** %sv, align 8, !dbg !5882
  br label %for.cond110, !dbg !5883, !llvm.loop !5884

for.end174:                                       ; preds = %for.cond110
  br label %if.end175, !dbg !5886

if.end175:                                        ; preds = %for.end174, %lor.lhs.false
  %103 = load i32, i32* %winsize_y_prev, align 4, !dbg !5887
  %104 = load i32, i32* %winsize_y.addr, align 4, !dbg !5889
  %cmp176 = icmp slt i32 %103, %104, !dbg !5890
  br i1 %cmp176, label %if.then178, label %if.end269, !dbg !5891

if.then178:                                       ; preds = %if.end175
  %105 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5892
  %areabase179 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %105, i32 0, i32 3, !dbg !5895
  %first180 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase179, i32 0, i32 0, !dbg !5896
  %106 = load i8*, i8** %first180, align 8, !dbg !5896
  %107 = bitcast i8* %106 to %struct.ScrArea*, !dbg !5892
  store %struct.ScrArea* %107, %struct.ScrArea** %sa, align 8, !dbg !5897
  br label %for.cond181, !dbg !5898

for.cond181:                                      ; preds = %for.inc266, %if.then178
  %108 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5899
  %tobool182 = icmp ne %struct.ScrArea* %108, null, !dbg !5901
  br i1 %tobool182, label %for.body183, label %for.end268, !dbg !5901

for.body183:                                      ; preds = %for.cond181
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se, metadata !5902, metadata !DIExpression()), !dbg !5904
  store %struct.ScrEdge* null, %struct.ScrEdge** %se, align 8, !dbg !5904
  %109 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5905
  %temp184 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %109, i32 0, i32 16, !dbg !5907
  %110 = load i8, i8* %temp184, align 2, !dbg !5907
  %conv185 = zext i8 %110 to i32, !dbg !5905
  %cmp186 = icmp eq i32 %conv185, 0, !dbg !5908
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !5909

if.then188:                                       ; preds = %for.body183
  br label %for.inc266, !dbg !5910

if.end189:                                        ; preds = %for.body183
  %111 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5911
  %v1190 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %111, i32 0, i32 2, !dbg !5913
  %112 = load %struct.ScrVert*, %struct.ScrVert** %v1190, align 8, !dbg !5913
  %113 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5914
  %v2191 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %113, i32 0, i32 3, !dbg !5915
  %114 = load %struct.ScrVert*, %struct.ScrVert** %v2191, align 8, !dbg !5915
  %cmp192 = icmp eq %struct.ScrVert* %112, %114, !dbg !5916
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !5917

if.then194:                                       ; preds = %if.end189
  br label %for.inc266, !dbg !5918

if.end195:                                        ; preds = %if.end189
  %115 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5919
  %temp196 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %115, i32 0, i32 16, !dbg !5921
  %116 = load i8, i8* %temp196, align 2, !dbg !5921
  %conv197 = zext i8 %116 to i32, !dbg !5919
  %cmp198 = icmp eq i32 %conv197, 2, !dbg !5922
  br i1 %cmp198, label %if.then200, label %if.else231, !dbg !5923

if.then200:                                       ; preds = %if.end195
  call void @llvm.dbg.declare(metadata i32* %yval, metadata !5924, metadata !DIExpression()), !dbg !5926
  %117 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5927
  %v2201 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %117, i32 0, i32 3, !dbg !5928
  %118 = load %struct.ScrVert*, %struct.ScrVert** %v2201, align 8, !dbg !5928
  %vec202 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %118, i32 0, i32 3, !dbg !5929
  %y203 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec202, i32 0, i32 1, !dbg !5930
  %119 = load i16, i16* %y203, align 2, !dbg !5930
  %conv204 = sext i16 %119 to i32, !dbg !5927
  %120 = load i32, i32* %headery_init, align 4, !dbg !5931
  %sub205 = sub nsw i32 %conv204, %120, !dbg !5932
  store i32 %sub205, i32* %yval, align 4, !dbg !5926
  %121 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5933
  %122 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5934
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %122, i32 0, i32 5, !dbg !5935
  %123 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !5935
  %124 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5936
  %v1206 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %124, i32 0, i32 2, !dbg !5937
  %125 = load %struct.ScrVert*, %struct.ScrVert** %v1206, align 8, !dbg !5937
  %call207 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %121, %struct.ScrVert* %123, %struct.ScrVert* %125), !dbg !5938
  store %struct.ScrEdge* %call207, %struct.ScrEdge** %se, align 8, !dbg !5939
  %126 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5940
  %127 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !5941
  call void @select_connected_scredge(%struct.bScreen* %126, %struct.ScrEdge* %127), !dbg !5942
  %128 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5943
  %vertbase208 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %128, i32 0, i32 1, !dbg !5945
  %first209 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase208, i32 0, i32 0, !dbg !5946
  %129 = load i8*, i8** %first209, align 8, !dbg !5946
  %130 = bitcast i8* %129 to %struct.ScrVert*, !dbg !5943
  store %struct.ScrVert* %130, %struct.ScrVert** %sv, align 8, !dbg !5947
  br label %for.cond210, !dbg !5948

for.cond210:                                      ; preds = %for.inc228, %if.then200
  %131 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5949
  %tobool211 = icmp ne %struct.ScrVert* %131, null, !dbg !5951
  br i1 %tobool211, label %for.body212, label %for.end230, !dbg !5951

for.body212:                                      ; preds = %for.cond210
  %132 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5952
  %133 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5955
  %v2213 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %133, i32 0, i32 3, !dbg !5956
  %134 = load %struct.ScrVert*, %struct.ScrVert** %v2213, align 8, !dbg !5956
  %cmp214 = icmp ne %struct.ScrVert* %132, %134, !dbg !5957
  br i1 %cmp214, label %land.lhs.true216, label %if.end227, !dbg !5958

land.lhs.true216:                                 ; preds = %for.body212
  %135 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5959
  %136 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5960
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %136, i32 0, i32 4, !dbg !5961
  %137 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !5961
  %cmp217 = icmp ne %struct.ScrVert* %135, %137, !dbg !5962
  br i1 %cmp217, label %if.then219, label %if.end227, !dbg !5963

if.then219:                                       ; preds = %land.lhs.true216
  %138 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5964
  %flag220 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %138, i32 0, i32 4, !dbg !5967
  %139 = load i16, i16* %flag220, align 4, !dbg !5967
  %tobool221 = icmp ne i16 %139, 0, !dbg !5964
  br i1 %tobool221, label %if.then222, label %if.end226, !dbg !5968

if.then222:                                       ; preds = %if.then219
  %140 = load i32, i32* %yval, align 4, !dbg !5969
  %conv223 = trunc i32 %140 to i16, !dbg !5969
  %141 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5971
  %vec224 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %141, i32 0, i32 3, !dbg !5972
  %y225 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec224, i32 0, i32 1, !dbg !5973
  store i16 %conv223, i16* %y225, align 2, !dbg !5974
  br label %if.end226, !dbg !5975

if.end226:                                        ; preds = %if.then222, %if.then219
  br label %if.end227, !dbg !5976

if.end227:                                        ; preds = %if.end226, %land.lhs.true216, %for.body212
  br label %for.inc228, !dbg !5977

for.inc228:                                       ; preds = %if.end227
  %142 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !5978
  %next229 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %142, i32 0, i32 0, !dbg !5979
  %143 = load %struct.ScrVert*, %struct.ScrVert** %next229, align 8, !dbg !5979
  store %struct.ScrVert* %143, %struct.ScrVert** %sv, align 8, !dbg !5980
  br label %for.cond210, !dbg !5981, !llvm.loop !5982

for.end230:                                       ; preds = %for.cond210
  br label %if.end265, !dbg !5984

if.else231:                                       ; preds = %if.end195
  call void @llvm.dbg.declare(metadata i32* %yval232, metadata !5985, metadata !DIExpression()), !dbg !5987
  %144 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5988
  %v1233 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %144, i32 0, i32 2, !dbg !5989
  %145 = load %struct.ScrVert*, %struct.ScrVert** %v1233, align 8, !dbg !5989
  %vec234 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %145, i32 0, i32 3, !dbg !5990
  %y235 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec234, i32 0, i32 1, !dbg !5991
  %146 = load i16, i16* %y235, align 2, !dbg !5991
  %conv236 = sext i16 %146 to i32, !dbg !5988
  %147 = load i32, i32* %headery_init, align 4, !dbg !5992
  %add237 = add nsw i32 %conv236, %147, !dbg !5993
  store i32 %add237, i32* %yval232, align 4, !dbg !5987
  %148 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !5994
  %149 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5995
  %v2238 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %149, i32 0, i32 3, !dbg !5996
  %150 = load %struct.ScrVert*, %struct.ScrVert** %v2238, align 8, !dbg !5996
  %151 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5997
  %v3239 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %151, i32 0, i32 4, !dbg !5998
  %152 = load %struct.ScrVert*, %struct.ScrVert** %v3239, align 8, !dbg !5998
  %call240 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %148, %struct.ScrVert* %150, %struct.ScrVert* %152), !dbg !5999
  store %struct.ScrEdge* %call240, %struct.ScrEdge** %se, align 8, !dbg !6000
  %153 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6001
  %154 = load %struct.ScrEdge*, %struct.ScrEdge** %se, align 8, !dbg !6002
  call void @select_connected_scredge(%struct.bScreen* %153, %struct.ScrEdge* %154), !dbg !6003
  %155 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6004
  %vertbase241 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %155, i32 0, i32 1, !dbg !6006
  %first242 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase241, i32 0, i32 0, !dbg !6007
  %156 = load i8*, i8** %first242, align 8, !dbg !6007
  %157 = bitcast i8* %156 to %struct.ScrVert*, !dbg !6004
  store %struct.ScrVert* %157, %struct.ScrVert** %sv, align 8, !dbg !6008
  br label %for.cond243, !dbg !6009

for.cond243:                                      ; preds = %for.inc262, %if.else231
  %158 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6010
  %tobool244 = icmp ne %struct.ScrVert* %158, null, !dbg !6012
  br i1 %tobool244, label %for.body245, label %for.end264, !dbg !6012

for.body245:                                      ; preds = %for.cond243
  %159 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6013
  %160 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6016
  %v1246 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %160, i32 0, i32 2, !dbg !6017
  %161 = load %struct.ScrVert*, %struct.ScrVert** %v1246, align 8, !dbg !6017
  %cmp247 = icmp ne %struct.ScrVert* %159, %161, !dbg !6018
  br i1 %cmp247, label %land.lhs.true249, label %if.end261, !dbg !6019

land.lhs.true249:                                 ; preds = %for.body245
  %162 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6020
  %163 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6021
  %v4250 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %163, i32 0, i32 5, !dbg !6022
  %164 = load %struct.ScrVert*, %struct.ScrVert** %v4250, align 8, !dbg !6022
  %cmp251 = icmp ne %struct.ScrVert* %162, %164, !dbg !6023
  br i1 %cmp251, label %if.then253, label %if.end261, !dbg !6024

if.then253:                                       ; preds = %land.lhs.true249
  %165 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6025
  %flag254 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %165, i32 0, i32 4, !dbg !6028
  %166 = load i16, i16* %flag254, align 4, !dbg !6028
  %tobool255 = icmp ne i16 %166, 0, !dbg !6025
  br i1 %tobool255, label %if.then256, label %if.end260, !dbg !6029

if.then256:                                       ; preds = %if.then253
  %167 = load i32, i32* %yval232, align 4, !dbg !6030
  %conv257 = trunc i32 %167 to i16, !dbg !6030
  %168 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6032
  %vec258 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %168, i32 0, i32 3, !dbg !6033
  %y259 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec258, i32 0, i32 1, !dbg !6034
  store i16 %conv257, i16* %y259, align 2, !dbg !6035
  br label %if.end260, !dbg !6036

if.end260:                                        ; preds = %if.then256, %if.then253
  br label %if.end261, !dbg !6037

if.end261:                                        ; preds = %if.end260, %land.lhs.true249, %for.body245
  br label %for.inc262, !dbg !6038

for.inc262:                                       ; preds = %if.end261
  %169 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6039
  %next263 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %169, i32 0, i32 0, !dbg !6040
  %170 = load %struct.ScrVert*, %struct.ScrVert** %next263, align 8, !dbg !6040
  store %struct.ScrVert* %170, %struct.ScrVert** %sv, align 8, !dbg !6041
  br label %for.cond243, !dbg !6042, !llvm.loop !6043

for.end264:                                       ; preds = %for.cond243
  br label %if.end265

if.end265:                                        ; preds = %for.end264, %for.end230
  br label %for.inc266, !dbg !6045

for.inc266:                                       ; preds = %if.end265, %if.then194, %if.then188
  %171 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6046
  %next267 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %171, i32 0, i32 0, !dbg !6047
  %172 = load %struct.ScrArea*, %struct.ScrArea** %next267, align 8, !dbg !6047
  store %struct.ScrArea* %172, %struct.ScrArea** %sa, align 8, !dbg !6048
  br label %for.cond181, !dbg !6049, !llvm.loop !6050

for.end268:                                       ; preds = %for.cond181
  br label %if.end269, !dbg !6052

if.end269:                                        ; preds = %for.end268, %if.end175
  %173 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6053
  %areabase270 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %173, i32 0, i32 3, !dbg !6055
  %first271 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase270, i32 0, i32 0, !dbg !6056
  %174 = load i8*, i8** %first271, align 8, !dbg !6056
  %175 = bitcast i8* %174 to %struct.ScrArea*, !dbg !6053
  store %struct.ScrArea* %175, %struct.ScrArea** %sa, align 8, !dbg !6057
  br label %for.cond272, !dbg !6058

for.cond272:                                      ; preds = %for.inc355, %if.end269
  %176 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6059
  %tobool273 = icmp ne %struct.ScrArea* %176, null, !dbg !6061
  br i1 %tobool273, label %for.body274, label %for.end357, !dbg !6061

for.body274:                                      ; preds = %for.cond272
  call void @llvm.dbg.declare(metadata i32* %headery, metadata !6062, metadata !DIExpression()), !dbg !6064
  %177 = load i32, i32* %headery_init, align 4, !dbg !6065
  store i32 %177, i32* %headery, align 4, !dbg !6064
  %178 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6066
  %v1275 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %178, i32 0, i32 2, !dbg !6068
  %179 = load %struct.ScrVert*, %struct.ScrVert** %v1275, align 8, !dbg !6068
  %vec276 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %179, i32 0, i32 3, !dbg !6069
  %y277 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec276, i32 0, i32 1, !dbg !6070
  %180 = load i16, i16* %y277, align 2, !dbg !6070
  %conv278 = sext i16 %180 to i32, !dbg !6066
  %cmp279 = icmp sgt i32 %conv278, 0, !dbg !6071
  br i1 %cmp279, label %if.then281, label %if.end285, !dbg !6072

if.then281:                                       ; preds = %for.body274
  %181 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6073
  %182 = load i32, i32* %headery, align 4, !dbg !6074
  %conv282 = sitofp i32 %182 to float, !dbg !6074
  %add283 = fadd float %conv282, %181, !dbg !6074
  %conv284 = fptosi float %add283 to i32, !dbg !6074
  store i32 %conv284, i32* %headery, align 4, !dbg !6074
  br label %if.end285, !dbg !6075

if.end285:                                        ; preds = %if.then281, %for.body274
  %183 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6076
  %v2286 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %183, i32 0, i32 3, !dbg !6078
  %184 = load %struct.ScrVert*, %struct.ScrVert** %v2286, align 8, !dbg !6078
  %vec287 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %184, i32 0, i32 3, !dbg !6079
  %y288 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec287, i32 0, i32 1, !dbg !6080
  %185 = load i16, i16* %y288, align 2, !dbg !6080
  %conv289 = sext i16 %185 to i32, !dbg !6076
  %186 = load i32, i32* %winsize_y.addr, align 4, !dbg !6081
  %sub290 = sub nsw i32 %186, 1, !dbg !6082
  %cmp291 = icmp slt i32 %conv289, %sub290, !dbg !6083
  br i1 %cmp291, label %if.then293, label %if.end297, !dbg !6084

if.then293:                                       ; preds = %if.end285
  %187 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6085
  %188 = load i32, i32* %headery, align 4, !dbg !6086
  %conv294 = sitofp i32 %188 to float, !dbg !6086
  %add295 = fadd float %conv294, %187, !dbg !6086
  %conv296 = fptosi float %add295 to i32, !dbg !6086
  store i32 %conv296, i32* %headery, align 4, !dbg !6086
  br label %if.end297, !dbg !6087

if.end297:                                        ; preds = %if.then293, %if.end285
  %189 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6088
  %v2298 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %189, i32 0, i32 3, !dbg !6090
  %190 = load %struct.ScrVert*, %struct.ScrVert** %v2298, align 8, !dbg !6090
  %vec299 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %190, i32 0, i32 3, !dbg !6091
  %y300 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec299, i32 0, i32 1, !dbg !6092
  %191 = load i16, i16* %y300, align 2, !dbg !6092
  %conv301 = sext i16 %191 to i32, !dbg !6088
  %192 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6093
  %v1302 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %192, i32 0, i32 2, !dbg !6094
  %193 = load %struct.ScrVert*, %struct.ScrVert** %v1302, align 8, !dbg !6094
  %vec303 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %193, i32 0, i32 3, !dbg !6095
  %y304 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec303, i32 0, i32 1, !dbg !6096
  %194 = load i16, i16* %y304, align 2, !dbg !6096
  %conv305 = sext i16 %194 to i32, !dbg !6093
  %sub306 = sub nsw i32 %conv301, %conv305, !dbg !6097
  %add307 = add nsw i32 %sub306, 1, !dbg !6098
  %195 = load i32, i32* %headery, align 4, !dbg !6099
  %cmp308 = icmp slt i32 %add307, %195, !dbg !6100
  br i1 %cmp308, label %if.then310, label %if.end354, !dbg !6101

if.then310:                                       ; preds = %if.end297
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %se311, metadata !6102, metadata !DIExpression()), !dbg !6104
  %196 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6105
  %197 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6106
  %v4312 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %197, i32 0, i32 5, !dbg !6107
  %198 = load %struct.ScrVert*, %struct.ScrVert** %v4312, align 8, !dbg !6107
  %199 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6108
  %v1313 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %199, i32 0, i32 2, !dbg !6109
  %200 = load %struct.ScrVert*, %struct.ScrVert** %v1313, align 8, !dbg !6109
  %call314 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %196, %struct.ScrVert* %198, %struct.ScrVert* %200), !dbg !6110
  store %struct.ScrEdge* %call314, %struct.ScrEdge** %se311, align 8, !dbg !6104
  %201 = load %struct.ScrEdge*, %struct.ScrEdge** %se311, align 8, !dbg !6111
  %tobool315 = icmp ne %struct.ScrEdge* %201, null, !dbg !6111
  br i1 %tobool315, label %land.lhs.true316, label %if.end353, !dbg !6113

land.lhs.true316:                                 ; preds = %if.then310
  %202 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6114
  %v1317 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %202, i32 0, i32 2, !dbg !6115
  %203 = load %struct.ScrVert*, %struct.ScrVert** %v1317, align 8, !dbg !6115
  %204 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6116
  %v2318 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %204, i32 0, i32 3, !dbg !6117
  %205 = load %struct.ScrVert*, %struct.ScrVert** %v2318, align 8, !dbg !6117
  %cmp319 = icmp ne %struct.ScrVert* %203, %205, !dbg !6118
  br i1 %cmp319, label %if.then321, label %if.end353, !dbg !6119

if.then321:                                       ; preds = %land.lhs.true316
  call void @llvm.dbg.declare(metadata i32* %yval322, metadata !6120, metadata !DIExpression()), !dbg !6122
  %206 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6123
  %207 = load %struct.ScrEdge*, %struct.ScrEdge** %se311, align 8, !dbg !6124
  call void @select_connected_scredge(%struct.bScreen* %206, %struct.ScrEdge* %207), !dbg !6125
  %208 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6126
  %v2323 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %208, i32 0, i32 3, !dbg !6127
  %209 = load %struct.ScrVert*, %struct.ScrVert** %v2323, align 8, !dbg !6127
  %vec324 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %209, i32 0, i32 3, !dbg !6128
  %y325 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec324, i32 0, i32 1, !dbg !6129
  %210 = load i16, i16* %y325, align 2, !dbg !6129
  %conv326 = sext i16 %210 to i32, !dbg !6126
  %211 = load i32, i32* %headery, align 4, !dbg !6130
  %sub327 = sub nsw i32 %conv326, %211, !dbg !6131
  %add328 = add nsw i32 %sub327, 1, !dbg !6132
  store i32 %add328, i32* %yval322, align 4, !dbg !6133
  %212 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6134
  %vertbase329 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %212, i32 0, i32 1, !dbg !6136
  %first330 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase329, i32 0, i32 0, !dbg !6137
  %213 = load i8*, i8** %first330, align 8, !dbg !6137
  %214 = bitcast i8* %213 to %struct.ScrVert*, !dbg !6134
  store %struct.ScrVert* %214, %struct.ScrVert** %sv, align 8, !dbg !6138
  br label %for.cond331, !dbg !6139

for.cond331:                                      ; preds = %for.inc350, %if.then321
  %215 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6140
  %tobool332 = icmp ne %struct.ScrVert* %215, null, !dbg !6142
  br i1 %tobool332, label %for.body333, label %for.end352, !dbg !6142

for.body333:                                      ; preds = %for.cond331
  %216 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6143
  %217 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6146
  %v2334 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %217, i32 0, i32 3, !dbg !6147
  %218 = load %struct.ScrVert*, %struct.ScrVert** %v2334, align 8, !dbg !6147
  %cmp335 = icmp ne %struct.ScrVert* %216, %218, !dbg !6148
  br i1 %cmp335, label %land.lhs.true337, label %if.end349, !dbg !6149

land.lhs.true337:                                 ; preds = %for.body333
  %219 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6150
  %220 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6151
  %v3338 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %220, i32 0, i32 4, !dbg !6152
  %221 = load %struct.ScrVert*, %struct.ScrVert** %v3338, align 8, !dbg !6152
  %cmp339 = icmp ne %struct.ScrVert* %219, %221, !dbg !6153
  br i1 %cmp339, label %if.then341, label %if.end349, !dbg !6154

if.then341:                                       ; preds = %land.lhs.true337
  %222 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6155
  %flag342 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %222, i32 0, i32 4, !dbg !6158
  %223 = load i16, i16* %flag342, align 4, !dbg !6158
  %tobool343 = icmp ne i16 %223, 0, !dbg !6155
  br i1 %tobool343, label %if.then344, label %if.end348, !dbg !6159

if.then344:                                       ; preds = %if.then341
  %224 = load i32, i32* %yval322, align 4, !dbg !6160
  %conv345 = trunc i32 %224 to i16, !dbg !6160
  %225 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6162
  %vec346 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %225, i32 0, i32 3, !dbg !6163
  %y347 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec346, i32 0, i32 1, !dbg !6164
  store i16 %conv345, i16* %y347, align 2, !dbg !6165
  br label %if.end348, !dbg !6166

if.end348:                                        ; preds = %if.then344, %if.then341
  br label %if.end349, !dbg !6167

if.end349:                                        ; preds = %if.end348, %land.lhs.true337, %for.body333
  br label %for.inc350, !dbg !6168

for.inc350:                                       ; preds = %if.end349
  %226 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !6169
  %next351 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %226, i32 0, i32 0, !dbg !6170
  %227 = load %struct.ScrVert*, %struct.ScrVert** %next351, align 8, !dbg !6170
  store %struct.ScrVert* %227, %struct.ScrVert** %sv, align 8, !dbg !6171
  br label %for.cond331, !dbg !6172, !llvm.loop !6173

for.end352:                                       ; preds = %for.cond331
  br label %if.end353, !dbg !6175

if.end353:                                        ; preds = %for.end352, %land.lhs.true316, %if.then310
  br label %if.end354, !dbg !6176

if.end354:                                        ; preds = %if.end353, %if.end297
  br label %for.inc355, !dbg !6177

for.inc355:                                       ; preds = %if.end354
  %228 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6178
  %next356 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %228, i32 0, i32 0, !dbg !6179
  %229 = load %struct.ScrArea*, %struct.ScrArea** %next356, align 8, !dbg !6179
  store %struct.ScrArea* %229, %struct.ScrArea** %sa, align 8, !dbg !6180
  br label %for.cond272, !dbg !6181, !llvm.loop !6182

for.end357:                                       ; preds = %for.cond272
  ret void, !dbg !6184
}

declare dso_local i32 @wm_subwindow_open(%struct.wmWindow*, %struct.rcti*) #2

declare dso_local void @wm_subwindow_position(%struct.wmWindow*, i32, %struct.rcti*) #2

declare dso_local void @ED_area_initialize(%struct.wmWindowManager*, %struct.wmWindow*, %struct.ScrArea*) #2

declare dso_local void @WM_event_timer_sleep(%struct.wmWindowManager*, %struct.wmWindow*, %struct.wmTimer*, i8 zeroext) #2

declare dso_local i32 @ed_screen_context(%struct.bContext*, i8*, %struct.bContextDataResult*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screens_initialize(%struct.wmWindowManager* %wm) #0 !dbg !6185 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !6188, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !6190, metadata !DIExpression()), !dbg !6191
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6192
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 3, !dbg !6194
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !6195
  %1 = load i8*, i8** %first, align 8, !dbg !6195
  %2 = bitcast i8* %1 to %struct.wmWindow*, !dbg !6192
  store %struct.wmWindow* %2, %struct.wmWindow** %win, align 8, !dbg !6196
  br label %for.cond, !dbg !6197

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6198
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !6200
  br i1 %tobool, label %for.body, label %for.end, !dbg !6200

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6201
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 3, !dbg !6204
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !6204
  %cmp = icmp eq %struct.bScreen* %5, null, !dbg !6205
  br i1 %cmp, label %if.then, label %if.end, !dbg !6206

if.then:                                          ; preds = %for.body
  %6 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6207
  %screen1 = getelementptr inbounds %struct.Main, %struct.Main* %6, i32 0, i32 26, !dbg !6208
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen1, i32 0, i32 0, !dbg !6209
  %7 = load i8*, i8** %first2, align 8, !dbg !6209
  %8 = bitcast i8* %7 to %struct.bScreen*, !dbg !6210
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6211
  %screen3 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 3, !dbg !6212
  store %struct.bScreen* %8, %struct.bScreen** %screen3, align 8, !dbg !6213
  br label %if.end, !dbg !6211

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6214
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6215
  call void @ED_screen_refresh(%struct.wmWindowManager* %10, %struct.wmWindow* %11), !dbg !6216
  br label %for.inc, !dbg !6217

for.inc:                                          ; preds = %if.end
  %12 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6218
  %next = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %12, i32 0, i32 0, !dbg !6219
  %13 = load %struct.wmWindow*, %struct.wmWindow** %next, align 8, !dbg !6219
  store %struct.wmWindow* %13, %struct.wmWindow** %win, align 8, !dbg !6220
  br label %for.cond, !dbg !6221, !llvm.loop !6222

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6224
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_region_exit(%struct.bContext* %C, %struct.ARegion* %ar) #0 !dbg !6225 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %prevar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6232, metadata !DIExpression()), !dbg !6233
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6234
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !6235
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !6233
  call void @llvm.dbg.declare(metadata %struct.ARegion** %prevar, metadata !6236, metadata !DIExpression()), !dbg !6237
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6238
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !6239
  store %struct.ARegion* %call1, %struct.ARegion** %prevar, align 8, !dbg !6237
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6240
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 20, !dbg !6242
  %3 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !6242
  %tobool = icmp ne %struct.ARegionType* %3, null, !dbg !6240
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6243

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6244
  %type2 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 20, !dbg !6245
  %5 = load %struct.ARegionType*, %struct.ARegionType** %type2, align 8, !dbg !6245
  %exit = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %5, i32 0, i32 4, !dbg !6246
  %6 = load void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)** %exit, align 8, !dbg !6246
  %tobool3 = icmp ne void (%struct.wmWindowManager*, %struct.ARegion*)* %6, null, !dbg !6244
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6247

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6248
  %type4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 20, !dbg !6249
  %8 = load %struct.ARegionType*, %struct.ARegionType** %type4, align 8, !dbg !6249
  %exit5 = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %8, i32 0, i32 4, !dbg !6250
  %9 = load void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)** %exit5, align 8, !dbg !6250
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6251
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6252
  call void %9(%struct.wmWindowManager* %10, %struct.ARegion* %11), !dbg !6248
  br label %if.end, !dbg !6248

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6253
  %13 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6254
  call void @CTX_wm_region_set(%struct.bContext* %12, %struct.ARegion* %13), !dbg !6255
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6256
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6257
  %handlers = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 26, !dbg !6258
  call void @WM_event_remove_handlers(%struct.bContext* %14, %struct.ListBase* %handlers), !dbg !6259
  %16 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6260
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 7, !dbg !6262
  %17 = load i16, i16* %swinid, align 4, !dbg !6262
  %tobool6 = icmp ne i16 %17, 0, !dbg !6260
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !6263

if.then7:                                         ; preds = %if.end
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6264
  %call8 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %18), !dbg !6265
  %19 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6266
  %swinid9 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 7, !dbg !6267
  %20 = load i16, i16* %swinid9, align 4, !dbg !6267
  %conv = sext i16 %20 to i32, !dbg !6266
  call void @wm_subwindow_close(%struct.wmWindow* %call8, i32 %conv), !dbg !6268
  br label %if.end10, !dbg !6268

if.end10:                                         ; preds = %if.then7, %if.end
  %21 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6269
  %swinid11 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %21, i32 0, i32 7, !dbg !6270
  store i16 0, i16* %swinid11, align 4, !dbg !6271
  %22 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6272
  %headerstr = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 29, !dbg !6274
  %23 = load i8*, i8** %headerstr, align 8, !dbg !6274
  %tobool12 = icmp ne i8* %23, null, !dbg !6272
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6275

if.then13:                                        ; preds = %if.end10
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6276
  %25 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6277
  %headerstr14 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %25, i32 0, i32 29, !dbg !6278
  %26 = load i8*, i8** %headerstr14, align 8, !dbg !6278
  call void %24(i8* %26), !dbg !6276
  br label %if.end15, !dbg !6276

if.end15:                                         ; preds = %if.then13, %if.end10
  %27 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6279
  %headerstr16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %27, i32 0, i32 29, !dbg !6280
  store i8* null, i8** %headerstr16, align 8, !dbg !6281
  %28 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6282
  %regiontimer = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 28, !dbg !6284
  %29 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer, align 8, !dbg !6284
  %tobool17 = icmp ne %struct.wmTimer* %29, null, !dbg !6282
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !6285

if.then18:                                        ; preds = %if.end15
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6286
  %call19 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %30), !dbg !6287
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6288
  %call20 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %31), !dbg !6289
  %32 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6290
  %regiontimer21 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %32, i32 0, i32 28, !dbg !6291
  %33 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer21, align 8, !dbg !6291
  call void @WM_event_remove_timer(%struct.wmWindowManager* %call19, %struct.wmWindow* %call20, %struct.wmTimer* %33), !dbg !6292
  br label %if.end22, !dbg !6292

if.end22:                                         ; preds = %if.then18, %if.end15
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6293
  %35 = load %struct.ARegion*, %struct.ARegion** %prevar, align 8, !dbg !6294
  call void @CTX_wm_region_set(%struct.bContext* %34, %struct.ARegion* %35), !dbg !6295
  ret void, !dbg !6296
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @CTX_wm_region_set(%struct.bContext*, %struct.ARegion*) #2

declare dso_local void @WM_event_remove_handlers(%struct.bContext*, %struct.ListBase*) #2

declare dso_local void @wm_subwindow_close(%struct.wmWindow*, i32) #2

declare dso_local void @WM_event_remove_timer(%struct.wmWindowManager*, %struct.wmWindow*, %struct.wmTimer*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_area_exit(%struct.bContext* %C, %struct.ScrArea* %sa) #0 !dbg !6297 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %prevsa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6304, metadata !DIExpression()), !dbg !6305
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6306
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !6307
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !6305
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %prevsa, metadata !6308, metadata !DIExpression()), !dbg !6309
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6310
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !6311
  store %struct.ScrArea* %call1, %struct.ScrArea** %prevsa, align 8, !dbg !6309
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6312, metadata !DIExpression()), !dbg !6313
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6314
  %type = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 18, !dbg !6316
  %3 = load %struct.SpaceType*, %struct.SpaceType** %type, align 8, !dbg !6316
  %tobool = icmp ne %struct.SpaceType* %3, null, !dbg !6314
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6317

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6318
  %type2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 18, !dbg !6319
  %5 = load %struct.SpaceType*, %struct.SpaceType** %type2, align 8, !dbg !6319
  %exit = getelementptr inbounds %struct.SpaceType, %struct.SpaceType* %5, i32 0, i32 8, !dbg !6320
  %6 = load void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)** %exit, align 8, !dbg !6320
  %tobool3 = icmp ne void (%struct.wmWindowManager*, %struct.ScrArea*)* %6, null, !dbg !6318
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6321

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6322
  %type4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 18, !dbg !6323
  %8 = load %struct.SpaceType*, %struct.SpaceType** %type4, align 8, !dbg !6323
  %exit5 = getelementptr inbounds %struct.SpaceType, %struct.SpaceType* %8, i32 0, i32 8, !dbg !6324
  %9 = load void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)** %exit5, align 8, !dbg !6324
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6325
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6326
  call void %9(%struct.wmWindowManager* %10, %struct.ScrArea* %11), !dbg !6322
  br label %if.end, !dbg !6322

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6327
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6328
  call void @CTX_wm_area_set(%struct.bContext* %12, %struct.ScrArea* %13), !dbg !6329
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6330
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 20, !dbg !6332
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !6333
  %15 = load i8*, i8** %first, align 8, !dbg !6333
  %16 = bitcast i8* %15 to %struct.ARegion*, !dbg !6330
  store %struct.ARegion* %16, %struct.ARegion** %ar, align 8, !dbg !6334
  br label %for.cond, !dbg !6335

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6336
  %tobool6 = icmp ne %struct.ARegion* %17, null, !dbg !6338
  br i1 %tobool6, label %for.body, label %for.end, !dbg !6338

for.body:                                         ; preds = %for.cond
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6339
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6340
  call void @ED_region_exit(%struct.bContext* %18, %struct.ARegion* %19), !dbg !6341
  br label %for.inc, !dbg !6341

for.inc:                                          ; preds = %for.body
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6342
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 0, !dbg !6343
  %21 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !6343
  store %struct.ARegion* %21, %struct.ARegion** %ar, align 8, !dbg !6344
  br label %for.cond, !dbg !6345, !llvm.loop !6346

for.end:                                          ; preds = %for.cond
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6348
  %23 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !6349
  %handlers = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %23, i32 0, i32 21, !dbg !6350
  call void @WM_event_remove_handlers(%struct.bContext* %22, %struct.ListBase* %handlers), !dbg !6351
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6352
  %25 = load %struct.ScrArea*, %struct.ScrArea** %prevsa, align 8, !dbg !6353
  call void @CTX_wm_area_set(%struct.bContext* %24, %struct.ScrArea* %25), !dbg !6354
  ret void, !dbg !6355
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local void @CTX_wm_area_set(%struct.bContext*, %struct.ScrArea*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_exit(%struct.bContext* %C, %struct.wmWindow* %window, %struct.bScreen* %screen) #0 !dbg !6356 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %window.addr = alloca %struct.wmWindow*, align 8
  %screen.addr = alloca %struct.bScreen*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %prevwin = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6359, metadata !DIExpression()), !dbg !6360
  store %struct.wmWindow* %window, %struct.wmWindow** %window.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window.addr, metadata !6361, metadata !DIExpression()), !dbg !6362
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6365, metadata !DIExpression()), !dbg !6366
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6367
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !6368
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !6366
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %prevwin, metadata !6369, metadata !DIExpression()), !dbg !6370
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6371
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !6372
  store %struct.wmWindow* %call1, %struct.wmWindow** %prevwin, align 8, !dbg !6370
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6373, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6375, metadata !DIExpression()), !dbg !6376
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6377
  %3 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6378
  call void @CTX_wm_window_set(%struct.bContext* %2, %struct.wmWindow* %3), !dbg !6379
  %4 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6380
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 21, !dbg !6382
  %5 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !6382
  %tobool = icmp ne %struct.wmTimer* %5, null, !dbg !6380
  br i1 %tobool, label %if.then, label %if.end, !dbg !6383

if.then:                                          ; preds = %entry
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6384
  %7 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6385
  %8 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6386
  %animtimer2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 21, !dbg !6387
  %9 = load %struct.wmTimer*, %struct.wmTimer** %animtimer2, align 8, !dbg !6387
  call void @WM_event_remove_timer(%struct.wmWindowManager* %6, %struct.wmWindow* %7, %struct.wmTimer* %9), !dbg !6388
  br label %if.end, !dbg !6388

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6389
  %animtimer3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 21, !dbg !6390
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer3, align 8, !dbg !6391
  %11 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6392
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 18, !dbg !6394
  %12 = load i16, i16* %mainwin, align 2, !dbg !6394
  %tobool4 = icmp ne i16 %12, 0, !dbg !6392
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !6395

if.then5:                                         ; preds = %if.end
  %13 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6396
  %14 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6397
  %mainwin6 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %14, i32 0, i32 18, !dbg !6398
  %15 = load i16, i16* %mainwin6, align 2, !dbg !6398
  %conv = sext i16 %15 to i32, !dbg !6397
  call void @wm_subwindow_close(%struct.wmWindow* %13, i32 %conv), !dbg !6399
  br label %if.end7, !dbg !6399

if.end7:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6400
  %mainwin8 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %16, i32 0, i32 18, !dbg !6401
  store i16 0, i16* %mainwin8, align 2, !dbg !6402
  %17 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6403
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 19, !dbg !6404
  store i16 0, i16* %subwinactive, align 4, !dbg !6405
  %18 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6406
  %regionbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 4, !dbg !6408
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !6409
  %19 = load i8*, i8** %first, align 8, !dbg !6409
  %20 = bitcast i8* %19 to %struct.ARegion*, !dbg !6406
  store %struct.ARegion* %20, %struct.ARegion** %ar, align 8, !dbg !6410
  br label %for.cond, !dbg !6411

for.cond:                                         ; preds = %for.inc, %if.end7
  %21 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6412
  %tobool9 = icmp ne %struct.ARegion* %21, null, !dbg !6414
  br i1 %tobool9, label %for.body, label %for.end, !dbg !6414

for.body:                                         ; preds = %for.cond
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6415
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6416
  call void @ED_region_exit(%struct.bContext* %22, %struct.ARegion* %23), !dbg !6417
  br label %for.inc, !dbg !6417

for.inc:                                          ; preds = %for.body
  %24 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6418
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %24, i32 0, i32 0, !dbg !6419
  %25 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !6419
  store %struct.ARegion* %25, %struct.ARegion** %ar, align 8, !dbg !6420
  br label %for.cond, !dbg !6421, !llvm.loop !6422

for.end:                                          ; preds = %for.cond
  %26 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6424
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %26, i32 0, i32 3, !dbg !6426
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !6427
  %27 = load i8*, i8** %first10, align 8, !dbg !6427
  %28 = bitcast i8* %27 to %struct.ScrArea*, !dbg !6424
  store %struct.ScrArea* %28, %struct.ScrArea** %sa, align 8, !dbg !6428
  br label %for.cond11, !dbg !6429

for.cond11:                                       ; preds = %for.inc14, %for.end
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6430
  %tobool12 = icmp ne %struct.ScrArea* %29, null, !dbg !6432
  br i1 %tobool12, label %for.body13, label %for.end16, !dbg !6432

for.body13:                                       ; preds = %for.cond11
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6433
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6434
  call void @ED_area_exit(%struct.bContext* %30, %struct.ScrArea* %31), !dbg !6435
  br label %for.inc14, !dbg !6435

for.inc14:                                        ; preds = %for.body13
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6436
  %next15 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 0, !dbg !6437
  %33 = load %struct.ScrArea*, %struct.ScrArea** %next15, align 8, !dbg !6437
  store %struct.ScrArea* %33, %struct.ScrArea** %sa, align 8, !dbg !6438
  br label %for.cond11, !dbg !6439, !llvm.loop !6440

for.end16:                                        ; preds = %for.cond11
  %34 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !6442
  %winid = getelementptr inbounds %struct.bScreen, %struct.bScreen* %34, i32 0, i32 11, !dbg !6443
  store i16 0, i16* %winid, align 4, !dbg !6444
  %35 = load %struct.wmWindow*, %struct.wmWindow** %prevwin, align 8, !dbg !6445
  %screen17 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 3, !dbg !6447
  %36 = load %struct.bScreen*, %struct.bScreen** %screen17, align 8, !dbg !6447
  %temp = getelementptr inbounds %struct.bScreen, %struct.bScreen* %36, i32 0, i32 10, !dbg !6448
  %37 = load i16, i16* %temp, align 2, !dbg !6448
  %conv18 = sext i16 %37 to i32, !dbg !6445
  %cmp = icmp eq i32 %conv18, 0, !dbg !6449
  br i1 %cmp, label %if.then20, label %if.else, !dbg !6450

if.then20:                                        ; preds = %for.end16
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6451
  %39 = load %struct.wmWindow*, %struct.wmWindow** %prevwin, align 8, !dbg !6453
  call void @CTX_wm_window_set(%struct.bContext* %38, %struct.wmWindow* %39), !dbg !6454
  br label %if.end21, !dbg !6455

if.else:                                          ; preds = %for.end16
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6456
  call void @CTX_wm_window_set(%struct.bContext* %40, %struct.wmWindow* null), !dbg !6458
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  ret void, !dbg !6459
}

declare dso_local void @CTX_wm_window_set(%struct.bContext*, %struct.wmWindow*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_set_subwinactive(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !6460 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %scr = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %oldswin = alloca i32, align 4
  %do_draw = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6471
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !6472
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !6470
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6473
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 3, !dbg !6475
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !6475
  %tobool = icmp ne %struct.bScreen* %2, null, !dbg !6473
  br i1 %tobool, label %if.then, label %if.end113, !dbg !6476

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bScreen** %scr, metadata !6477, metadata !DIExpression()), !dbg !6479
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6480
  %screen1 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %3, i32 0, i32 3, !dbg !6481
  %4 = load %struct.bScreen*, %struct.bScreen** %screen1, align 8, !dbg !6481
  store %struct.bScreen* %4, %struct.bScreen** %scr, align 8, !dbg !6479
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %oldswin, metadata !6486, metadata !DIExpression()), !dbg !6487
  %5 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6488
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 19, !dbg !6489
  %6 = load i16, i16* %subwinactive, align 4, !dbg !6489
  %conv = sext i16 %6 to i32, !dbg !6488
  store i32 %conv, i32* %oldswin, align 4, !dbg !6487
  %7 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6490
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 3, !dbg !6492
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !6493
  %8 = load i8*, i8** %first, align 8, !dbg !6493
  %9 = bitcast i8* %8 to %struct.ScrArea*, !dbg !6490
  store %struct.ScrArea* %9, %struct.ScrArea** %sa, align 8, !dbg !6494
  br label %for.cond, !dbg !6495

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6496
  %tobool2 = icmp ne %struct.ScrArea* %10, null, !dbg !6498
  br i1 %tobool2, label %for.body, label %for.end, !dbg !6498

for.body:                                         ; preds = %for.cond
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6499
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 4, !dbg !6502
  %12 = load i32, i32* %x, align 4, !dbg !6502
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6503
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 7, !dbg !6504
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct, i32 0, i32 0, !dbg !6505
  %14 = load i32, i32* %xmin, align 8, !dbg !6505
  %cmp = icmp sgt i32 %12, %14, !dbg !6506
  br i1 %cmp, label %land.lhs.true, label %if.end24, !dbg !6507

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6508
  %x4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 4, !dbg !6509
  %16 = load i32, i32* %x4, align 4, !dbg !6509
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6510
  %totrct5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 7, !dbg !6511
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct5, i32 0, i32 1, !dbg !6512
  %18 = load i32, i32* %xmax, align 4, !dbg !6512
  %cmp6 = icmp slt i32 %16, %18, !dbg !6513
  br i1 %cmp6, label %if.then8, label %if.end24, !dbg !6514

if.then8:                                         ; preds = %land.lhs.true
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6515
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 5, !dbg !6517
  %20 = load i32, i32* %y, align 8, !dbg !6517
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6518
  %totrct9 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 7, !dbg !6519
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct9, i32 0, i32 2, !dbg !6520
  %22 = load i32, i32* %ymin, align 8, !dbg !6520
  %cmp10 = icmp sgt i32 %20, %22, !dbg !6521
  br i1 %cmp10, label %land.lhs.true12, label %if.end23, !dbg !6522

land.lhs.true12:                                  ; preds = %if.then8
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6523
  %y13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 5, !dbg !6524
  %24 = load i32, i32* %y13, align 8, !dbg !6524
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6525
  %totrct14 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 7, !dbg !6526
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct14, i32 0, i32 3, !dbg !6527
  %26 = load i32, i32* %ymax, align 4, !dbg !6527
  %cmp15 = icmp slt i32 %24, %26, !dbg !6528
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !6529

if.then17:                                        ; preds = %land.lhs.true12
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6530
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6532
  %x18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 4, !dbg !6533
  %call19 = call %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %27, i32* %x18), !dbg !6534
  %cmp20 = icmp eq %struct.AZone* null, %call19, !dbg !6535
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !6536

if.then22:                                        ; preds = %if.then17
  br label %for.end, !dbg !6537

if.end:                                           ; preds = %if.then17
  br label %if.end23, !dbg !6538

if.end23:                                         ; preds = %if.end, %land.lhs.true12, %if.then8
  br label %if.end24, !dbg !6527

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6539

for.inc:                                          ; preds = %if.end24
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6540
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 0, !dbg !6541
  %30 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !6541
  store %struct.ScrArea* %30, %struct.ScrArea** %sa, align 8, !dbg !6542
  br label %for.cond, !dbg !6543, !llvm.loop !6544

for.end:                                          ; preds = %if.then22, %for.cond
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6546
  %tobool25 = icmp ne %struct.ScrArea* %31, null, !dbg !6546
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !6548

if.then26:                                        ; preds = %for.end
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6549
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 20, !dbg !6552
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !6553
  %33 = load i8*, i8** %first27, align 8, !dbg !6553
  %34 = bitcast i8* %33 to %struct.ARegion*, !dbg !6549
  store %struct.ARegion* %34, %struct.ARegion** %ar, align 8, !dbg !6554
  br label %for.cond28, !dbg !6555

for.cond28:                                       ; preds = %for.inc37, %if.then26
  %35 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6556
  %tobool29 = icmp ne %struct.ARegion* %35, null, !dbg !6558
  br i1 %tobool29, label %for.body30, label %for.end39, !dbg !6558

for.body30:                                       ; preds = %for.cond28
  %36 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6559
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %36, i32 0, i32 3, !dbg !6562
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6563
  %x31 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 4, !dbg !6564
  %call32 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct, i32* %x31), !dbg !6565
  %tobool33 = icmp ne i8 %call32, 0, !dbg !6565
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !6566

if.then34:                                        ; preds = %for.body30
  %38 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6567
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %38, i32 0, i32 7, !dbg !6569
  %39 = load i16, i16* %swinid, align 4, !dbg !6569
  %40 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6570
  %subwinactive35 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %40, i32 0, i32 19, !dbg !6571
  store i16 %39, i16* %subwinactive35, align 4, !dbg !6572
  br label %for.end39, !dbg !6573

if.end36:                                         ; preds = %for.body30
  br label %for.inc37, !dbg !6574

for.inc37:                                        ; preds = %if.end36
  %41 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6575
  %next38 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %41, i32 0, i32 0, !dbg !6576
  %42 = load %struct.ARegion*, %struct.ARegion** %next38, align 8, !dbg !6576
  store %struct.ARegion* %42, %struct.ARegion** %ar, align 8, !dbg !6577
  br label %for.cond28, !dbg !6578, !llvm.loop !6579

for.end39:                                        ; preds = %if.then34, %for.cond28
  br label %if.end41, !dbg !6581

if.else:                                          ; preds = %for.end
  %43 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6582
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %43, i32 0, i32 18, !dbg !6583
  %44 = load i16, i16* %mainwin, align 2, !dbg !6583
  %45 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6584
  %subwinactive40 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %45, i32 0, i32 19, !dbg !6585
  store i16 %44, i16* %subwinactive40, align 4, !dbg !6586
  br label %if.end41

if.end41:                                         ; preds = %if.else, %for.end39
  %46 = load i32, i32* %oldswin, align 4, !dbg !6587
  %47 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6589
  %subwinactive42 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %47, i32 0, i32 19, !dbg !6590
  %48 = load i16, i16* %subwinactive42, align 4, !dbg !6590
  %conv43 = sext i16 %48 to i32, !dbg !6589
  %cmp44 = icmp ne i32 %46, %conv43, !dbg !6591
  br i1 %cmp44, label %if.then46, label %if.end91, !dbg !6592

if.then46:                                        ; preds = %if.end41
  %49 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6593
  %areabase47 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %49, i32 0, i32 3, !dbg !6596
  %first48 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase47, i32 0, i32 0, !dbg !6597
  %50 = load i8*, i8** %first48, align 8, !dbg !6597
  %51 = bitcast i8* %50 to %struct.ScrArea*, !dbg !6593
  store %struct.ScrArea* %51, %struct.ScrArea** %sa, align 8, !dbg !6598
  br label %for.cond49, !dbg !6599

for.cond49:                                       ; preds = %for.inc88, %if.then46
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6600
  %tobool50 = icmp ne %struct.ScrArea* %52, null, !dbg !6602
  br i1 %tobool50, label %for.body51, label %for.end90, !dbg !6602

for.body51:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata i8* %do_draw, metadata !6603, metadata !DIExpression()), !dbg !6605
  store i8 0, i8* %do_draw, align 1, !dbg !6605
  %53 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6606
  %regionbase52 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %53, i32 0, i32 20, !dbg !6608
  %first53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase52, i32 0, i32 0, !dbg !6609
  %54 = load i8*, i8** %first53, align 8, !dbg !6609
  %55 = bitcast i8* %54 to %struct.ARegion*, !dbg !6606
  store %struct.ARegion* %55, %struct.ARegion** %ar, align 8, !dbg !6610
  br label %for.cond54, !dbg !6611

for.cond54:                                       ; preds = %for.inc69, %for.body51
  %56 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6612
  %tobool55 = icmp ne %struct.ARegion* %56, null, !dbg !6614
  br i1 %tobool55, label %for.body56, label %for.end71, !dbg !6614

for.body56:                                       ; preds = %for.cond54
  %57 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6615
  %swinid57 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %57, i32 0, i32 7, !dbg !6617
  %58 = load i16, i16* %swinid57, align 4, !dbg !6617
  %conv58 = sext i16 %58 to i32, !dbg !6615
  %59 = load i32, i32* %oldswin, align 4, !dbg !6618
  %cmp59 = icmp eq i32 %conv58, %59, !dbg !6619
  br i1 %cmp59, label %if.then67, label %lor.lhs.false, !dbg !6620

lor.lhs.false:                                    ; preds = %for.body56
  %60 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6621
  %swinid61 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %60, i32 0, i32 7, !dbg !6622
  %61 = load i16, i16* %swinid61, align 4, !dbg !6622
  %conv62 = sext i16 %61 to i32, !dbg !6621
  %62 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6623
  %subwinactive63 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %62, i32 0, i32 19, !dbg !6624
  %63 = load i16, i16* %subwinactive63, align 4, !dbg !6624
  %conv64 = sext i16 %63 to i32, !dbg !6623
  %cmp65 = icmp eq i32 %conv62, %conv64, !dbg !6625
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !6626

if.then67:                                        ; preds = %lor.lhs.false, %for.body56
  store i8 1, i8* %do_draw, align 1, !dbg !6627
  br label %if.end68, !dbg !6628

if.end68:                                         ; preds = %if.then67, %lor.lhs.false
  br label %for.inc69, !dbg !6624

for.inc69:                                        ; preds = %if.end68
  %64 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6629
  %next70 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %64, i32 0, i32 0, !dbg !6630
  %65 = load %struct.ARegion*, %struct.ARegion** %next70, align 8, !dbg !6630
  store %struct.ARegion* %65, %struct.ARegion** %ar, align 8, !dbg !6631
  br label %for.cond54, !dbg !6632, !llvm.loop !6633

for.end71:                                        ; preds = %for.cond54
  %66 = load i8, i8* %do_draw, align 1, !dbg !6635
  %tobool72 = icmp ne i8 %66, 0, !dbg !6635
  br i1 %tobool72, label %if.then73, label %if.end87, !dbg !6637

if.then73:                                        ; preds = %for.end71
  %67 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6638
  %regionbase74 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %67, i32 0, i32 20, !dbg !6641
  %first75 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase74, i32 0, i32 0, !dbg !6642
  %68 = load i8*, i8** %first75, align 8, !dbg !6642
  %69 = bitcast i8* %68 to %struct.ARegion*, !dbg !6638
  store %struct.ARegion* %69, %struct.ARegion** %ar, align 8, !dbg !6643
  br label %for.cond76, !dbg !6644

for.cond76:                                       ; preds = %for.inc84, %if.then73
  %70 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6645
  %tobool77 = icmp ne %struct.ARegion* %70, null, !dbg !6647
  br i1 %tobool77, label %for.body78, label %for.end86, !dbg !6647

for.body78:                                       ; preds = %for.cond76
  %71 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6648
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %71, i32 0, i32 8, !dbg !6650
  %72 = load i16, i16* %regiontype, align 2, !dbg !6650
  %conv79 = sext i16 %72 to i32, !dbg !6648
  %cmp80 = icmp eq i32 %conv79, 1, !dbg !6651
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !6652

if.then82:                                        ; preds = %for.body78
  %73 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6653
  call void @ED_region_tag_redraw(%struct.ARegion* %73), !dbg !6654
  br label %if.end83, !dbg !6654

if.end83:                                         ; preds = %if.then82, %for.body78
  br label %for.inc84, !dbg !6655

for.inc84:                                        ; preds = %if.end83
  %74 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6656
  %next85 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %74, i32 0, i32 0, !dbg !6657
  %75 = load %struct.ARegion*, %struct.ARegion** %next85, align 8, !dbg !6657
  store %struct.ARegion* %75, %struct.ARegion** %ar, align 8, !dbg !6658
  br label %for.cond76, !dbg !6659, !llvm.loop !6660

for.end86:                                        ; preds = %for.cond76
  br label %if.end87, !dbg !6662

if.end87:                                         ; preds = %for.end86, %for.end71
  br label %for.inc88, !dbg !6663

for.inc88:                                        ; preds = %if.end87
  %76 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6664
  %next89 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %76, i32 0, i32 0, !dbg !6665
  %77 = load %struct.ScrArea*, %struct.ScrArea** %next89, align 8, !dbg !6665
  store %struct.ScrArea* %77, %struct.ScrArea** %sa, align 8, !dbg !6666
  br label %for.cond49, !dbg !6667, !llvm.loop !6668

for.end90:                                        ; preds = %for.cond49
  br label %if.end91, !dbg !6670

if.end91:                                         ; preds = %for.end90, %if.end41
  %78 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6671
  %subwinactive92 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %78, i32 0, i32 19, !dbg !6673
  %79 = load i16, i16* %subwinactive92, align 4, !dbg !6673
  %conv93 = sext i16 %79 to i32, !dbg !6671
  %80 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6674
  %mainwin94 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %80, i32 0, i32 18, !dbg !6675
  %81 = load i16, i16* %mainwin94, align 2, !dbg !6675
  %conv95 = sext i16 %81 to i32, !dbg !6674
  %cmp96 = icmp eq i32 %conv93, %conv95, !dbg !6676
  br i1 %cmp96, label %if.then98, label %if.else99, !dbg !6677

if.then98:                                        ; preds = %if.end91
  %82 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6678
  %83 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6680
  call void @screen_cursor_set(%struct.wmWindow* %82, %struct.wmEvent* %83), !dbg !6681
  br label %if.end112, !dbg !6682

if.else99:                                        ; preds = %if.end91
  %84 = load i32, i32* %oldswin, align 4, !dbg !6683
  %85 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6686
  %subwinactive100 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %85, i32 0, i32 19, !dbg !6687
  %86 = load i16, i16* %subwinactive100, align 4, !dbg !6687
  %conv101 = sext i16 %86 to i32, !dbg !6686
  %cmp102 = icmp ne i32 %84, %conv101, !dbg !6688
  br i1 %cmp102, label %if.then104, label %if.else108, !dbg !6689

if.then104:                                       ; preds = %if.else99
  %87 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6690
  %88 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6692
  %subwinactive105 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %88, i32 0, i32 19, !dbg !6693
  %89 = load i16, i16* %subwinactive105, align 4, !dbg !6693
  %conv106 = sext i16 %89 to i32, !dbg !6692
  call void @region_cursor_set(%struct.wmWindow* %87, i32 %conv106, i32 1), !dbg !6694
  %90 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6695
  %91 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6696
  %screen107 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %91, i32 0, i32 3, !dbg !6697
  %92 = load %struct.bScreen*, %struct.bScreen** %screen107, align 8, !dbg !6697
  call void @uiFreeActiveButtons(%struct.bContext* %90, %struct.bScreen* %92), !dbg !6698
  br label %if.end111, !dbg !6699

if.else108:                                       ; preds = %if.else99
  %93 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6700
  %94 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !6701
  %subwinactive109 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %94, i32 0, i32 19, !dbg !6702
  %95 = load i16, i16* %subwinactive109, align 4, !dbg !6702
  %conv110 = sext i16 %95 to i32, !dbg !6701
  call void @region_cursor_set(%struct.wmWindow* %93, i32 %conv110, i32 0), !dbg !6703
  br label %if.end111

if.end111:                                        ; preds = %if.else108, %if.then104
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then98
  br label %if.end113, !dbg !6704

if.end113:                                        ; preds = %if.end112, %entry
  ret void, !dbg !6705
}

declare dso_local %struct.AZone* @is_in_area_actionzone(%struct.ScrArea*, i32*) #2

declare dso_local zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti*, i32*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @screen_cursor_set(%struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !6706 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %az = alloca %struct.AZone*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %actedge = alloca %struct.ScrEdge*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !6713, metadata !DIExpression()), !dbg !6714
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6715
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %0), !dbg !6716
  store i32 %call, i32* %winsize_x, align 4, !dbg !6714
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !6717, metadata !DIExpression()), !dbg !6718
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6719
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %1), !dbg !6720
  store i32 %call1, i32* %winsize_y, align 4, !dbg !6718
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !6721, metadata !DIExpression()), !dbg !6739
  store %struct.AZone* null, %struct.AZone** %az, align 8, !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6740, metadata !DIExpression()), !dbg !6741
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6742
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %2, i32 0, i32 3, !dbg !6744
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !6744
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 3, !dbg !6745
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !6746
  %4 = load i8*, i8** %first, align 8, !dbg !6746
  %5 = bitcast i8* %4 to %struct.ScrArea*, !dbg !6742
  store %struct.ScrArea* %5, %struct.ScrArea** %sa, align 8, !dbg !6747
  br label %for.cond, !dbg !6748

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6749
  %tobool = icmp ne %struct.ScrArea* %6, null, !dbg !6751
  br i1 %tobool, label %for.body, label %for.end, !dbg !6751

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6752
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6754
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 4, !dbg !6755
  %call2 = call %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %7, i32* %x), !dbg !6756
  store %struct.AZone* %call2, %struct.AZone** %az, align 8, !dbg !6757
  %tobool3 = icmp ne %struct.AZone* %call2, null, !dbg !6757
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6758

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6759

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6760

for.inc:                                          ; preds = %if.end
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6761
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 0, !dbg !6762
  %10 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !6762
  store %struct.ScrArea* %10, %struct.ScrArea** %sa, align 8, !dbg !6763
  br label %for.cond, !dbg !6764, !llvm.loop !6765

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6767
  %tobool4 = icmp ne %struct.ScrArea* %11, null, !dbg !6767
  br i1 %tobool4, label %if.then5, label %if.else18, !dbg !6769

if.then5:                                         ; preds = %for.end
  %12 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6770
  %type = getelementptr inbounds %struct.AZone, %struct.AZone* %12, i32 0, i32 3, !dbg !6773
  %13 = load i32, i32* %type, align 8, !dbg !6773
  %cmp = icmp eq i32 %13, 1, !dbg !6774
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6775

if.then6:                                         ; preds = %if.then5
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6776
  call void @WM_cursor_set(%struct.wmWindow* %14, i32 1002), !dbg !6777
  br label %if.end17, !dbg !6777

if.else:                                          ; preds = %if.then5
  %15 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6778
  %type7 = getelementptr inbounds %struct.AZone, %struct.AZone* %15, i32 0, i32 3, !dbg !6780
  %16 = load i32, i32* %type7, align 8, !dbg !6780
  %cmp8 = icmp eq i32 %16, 2, !dbg !6781
  br i1 %cmp8, label %if.then9, label %if.end16, !dbg !6782

if.then9:                                         ; preds = %if.else
  %17 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6783
  %edge = getelementptr inbounds %struct.AZone, %struct.AZone* %17, i32 0, i32 4, !dbg !6786
  %18 = load i32, i32* %edge, align 4, !dbg !6786
  %cmp10 = icmp eq i32 %18, 1, !dbg !6787
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !6788

lor.lhs.false:                                    ; preds = %if.then9
  %19 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6789
  %edge11 = getelementptr inbounds %struct.AZone, %struct.AZone* %19, i32 0, i32 4, !dbg !6790
  %20 = load i32, i32* %edge11, align 4, !dbg !6790
  %cmp12 = icmp eq i32 %20, 0, !dbg !6791
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !6792

if.then13:                                        ; preds = %lor.lhs.false, %if.then9
  %21 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6793
  call void @WM_cursor_set(%struct.wmWindow* %21, i32 1003), !dbg !6794
  br label %if.end15, !dbg !6794

if.else14:                                        ; preds = %lor.lhs.false
  %22 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6795
  call void @WM_cursor_set(%struct.wmWindow* %22, i32 1004), !dbg !6796
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  br label %if.end16, !dbg !6797

if.end16:                                         ; preds = %if.end15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then6
  br label %if.end31, !dbg !6798

if.else18:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %actedge, metadata !6799, metadata !DIExpression()), !dbg !6801
  %23 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6802
  %screen19 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %23, i32 0, i32 3, !dbg !6803
  %24 = load %struct.bScreen*, %struct.bScreen** %screen19, align 8, !dbg !6803
  %25 = load i32, i32* %winsize_x, align 4, !dbg !6804
  %26 = load i32, i32* %winsize_y, align 4, !dbg !6805
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6806
  %x20 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 4, !dbg !6807
  %28 = load i32, i32* %x20, align 4, !dbg !6807
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6808
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 5, !dbg !6809
  %30 = load i32, i32* %y, align 8, !dbg !6809
  %call21 = call %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %24, i32 %25, i32 %26, i32 %28, i32 %30), !dbg !6810
  store %struct.ScrEdge* %call21, %struct.ScrEdge** %actedge, align 8, !dbg !6801
  %31 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !6811
  %tobool22 = icmp ne %struct.ScrEdge* %31, null, !dbg !6811
  br i1 %tobool22, label %if.then23, label %if.else29, !dbg !6813

if.then23:                                        ; preds = %if.else18
  %32 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !6814
  %call24 = call zeroext i8 @scredge_is_horizontal(%struct.ScrEdge* %32), !dbg !6817
  %tobool25 = icmp ne i8 %call24, 0, !dbg !6817
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !6818

if.then26:                                        ; preds = %if.then23
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6819
  call void @WM_cursor_set(%struct.wmWindow* %33, i32 1004), !dbg !6820
  br label %if.end28, !dbg !6820

if.else27:                                        ; preds = %if.then23
  %34 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6821
  call void @WM_cursor_set(%struct.wmWindow* %34, i32 1003), !dbg !6822
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  br label %if.end30, !dbg !6823

if.else29:                                        ; preds = %if.else18
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6824
  call void @WM_cursor_set(%struct.wmWindow* %35, i32 1006), !dbg !6825
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end28
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end17
  ret void, !dbg !6826
}

declare dso_local void @uiFreeActiveButtons(%struct.bContext*, %struct.bScreen*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_screen_area_active(%struct.bContext* %C) #0 !dbg !6827 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %az = alloca %struct.AZone*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !6834, metadata !DIExpression()), !dbg !6835
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6836
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !6837
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !6838, metadata !DIExpression()), !dbg !6839
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6840
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !6841
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !6839
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6842, metadata !DIExpression()), !dbg !6843
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6844
  %call2 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %2), !dbg !6845
  store %struct.ScrArea* %call2, %struct.ScrArea** %sa, align 8, !dbg !6843
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6846
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !6846
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !6848

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !6849
  %tobool3 = icmp ne %struct.bScreen* %4, null, !dbg !6849
  br i1 %tobool3, label %land.lhs.true4, label %if.end16, !dbg !6850

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6851
  %tobool5 = icmp ne %struct.ScrArea* %5, null, !dbg !6851
  br i1 %tobool5, label %if.then, label %if.end16, !dbg !6852

if.then:                                          ; preds = %land.lhs.true4
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !6853, metadata !DIExpression()), !dbg !6855
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6856
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6857
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %7, i32 0, i32 21, !dbg !6858
  %8 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !6858
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 4, !dbg !6859
  %call6 = call %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %6, i32* %x), !dbg !6860
  store %struct.AZone* %call6, %struct.AZone** %az, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6861, metadata !DIExpression()), !dbg !6862
  %9 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6863
  %tobool7 = icmp ne %struct.AZone* %9, null, !dbg !6863
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !6865

land.lhs.true8:                                   ; preds = %if.then
  %10 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !6866
  %type = getelementptr inbounds %struct.AZone, %struct.AZone* %10, i32 0, i32 3, !dbg !6867
  %11 = load i32, i32* %type, align 8, !dbg !6867
  %cmp = icmp eq i32 %11, 2, !dbg !6868
  br i1 %cmp, label %if.then9, label %if.end, !dbg !6869

if.then9:                                         ; preds = %land.lhs.true8
  store i32 1, i32* %retval, align 4, !dbg !6870
  br label %return, !dbg !6870

if.end:                                           ; preds = %land.lhs.true8, %if.then
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6871
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 20, !dbg !6873
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !6874
  %13 = load i8*, i8** %first, align 8, !dbg !6874
  %14 = bitcast i8* %13 to %struct.ARegion*, !dbg !6871
  store %struct.ARegion* %14, %struct.ARegion** %ar, align 8, !dbg !6875
  br label %for.cond, !dbg !6876

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6877
  %tobool10 = icmp ne %struct.ARegion* %15, null, !dbg !6879
  br i1 %tobool10, label %for.body, label %for.end, !dbg !6879

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6880
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 7, !dbg !6882
  %17 = load i16, i16* %swinid, align 4, !dbg !6882
  %conv = sext i16 %17 to i32, !dbg !6880
  %18 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !6883
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 19, !dbg !6884
  %19 = load i16, i16* %subwinactive, align 4, !dbg !6884
  %conv11 = sext i16 %19 to i32, !dbg !6883
  %cmp12 = icmp eq i32 %conv, %conv11, !dbg !6885
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6886

if.then14:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !6887
  br label %return, !dbg !6887

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !6884

for.inc:                                          ; preds = %if.end15
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6888
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 0, !dbg !6889
  %21 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !6889
  store %struct.ARegion* %21, %struct.ARegion** %ar, align 8, !dbg !6890
  br label %for.cond, !dbg !6891, !llvm.loop !6892

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !6894

if.end16:                                         ; preds = %for.end, %land.lhs.true4, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

return:                                           ; preds = %if.end16, %if.then14, %if.then9
  %22 = load i32, i32* %retval, align 4, !dbg !6896
  ret i32 %22, !dbg !6896
}

declare dso_local %struct.bScreen* @CTX_wm_screen(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_set(%struct.bContext* %C, %struct.bScreen* %sc) #0 !dbg !6897 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %bmain = alloca %struct.Main*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %oldscreen = alloca %struct.bScreen*, align 8
  %id = alloca %struct.ID*, align 8
  %sc1 = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %wt = alloca %struct.wmTimer*, align 8
  %sa38 = alloca %struct.ScrArea*, align 8
  %oldscene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6904, metadata !DIExpression()), !dbg !6969
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6970
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !6971
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !6969
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6972, metadata !DIExpression()), !dbg !6973
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6974
  %call1 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %1), !dbg !6975
  store %struct.wmWindowManager* %call1, %struct.wmWindowManager** %wm, align 8, !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !6976, metadata !DIExpression()), !dbg !6977
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6978
  %call2 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !6979
  store %struct.wmWindow* %call2, %struct.wmWindow** %win, align 8, !dbg !6977
  call void @llvm.dbg.declare(metadata %struct.bScreen** %oldscreen, metadata !6980, metadata !DIExpression()), !dbg !6981
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6982
  %call3 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %3), !dbg !6983
  store %struct.bScreen* %call3, %struct.bScreen** %oldscreen, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6984, metadata !DIExpression()), !dbg !6985
  %4 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6986
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 26, !dbg !6988
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen, i32 0, i32 0, !dbg !6989
  %5 = load i8*, i8** %first, align 8, !dbg !6989
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !6986
  store %struct.ID* %6, %struct.ID** %id, align 8, !dbg !6990
  br label %for.cond, !dbg !6991

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6992
  %tobool = icmp ne %struct.ID* %7, null, !dbg !6994
  br i1 %tobool, label %for.body, label %for.end, !dbg !6994

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !6995
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6997
  %10 = bitcast %struct.ID* %9 to %struct.bScreen*, !dbg !6998
  %cmp = icmp eq %struct.bScreen* %8, %10, !dbg !6999
  br i1 %cmp, label %if.then, label %if.end, !dbg !7000

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7001

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6997

for.inc:                                          ; preds = %if.end
  %11 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7002
  %next = getelementptr inbounds %struct.ID, %struct.ID* %11, i32 0, i32 0, !dbg !7003
  %12 = load i8*, i8** %next, align 8, !dbg !7003
  %13 = bitcast i8* %12 to %struct.ID*, !dbg !7002
  store %struct.ID* %13, %struct.ID** %id, align 8, !dbg !7004
  br label %for.cond, !dbg !7005, !llvm.loop !7006

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7008
  %cmp4 = icmp eq %struct.ID* %14, null, !dbg !7010
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7011

if.then5:                                         ; preds = %for.end
  br label %if.end74, !dbg !7012

if.end6:                                          ; preds = %for.end
  %15 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7013
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %15, i32 0, i32 9, !dbg !7015
  %16 = load i16, i16* %state, align 8, !dbg !7015
  %conv = sext i16 %16 to i32, !dbg !7013
  %cmp7 = icmp eq i32 %conv, 2, !dbg !7016
  br i1 %cmp7, label %if.then9, label %if.end24, !dbg !7017

if.then9:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc1, metadata !7018, metadata !DIExpression()), !dbg !7020
  %17 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7021
  %screen10 = getelementptr inbounds %struct.Main, %struct.Main* %17, i32 0, i32 26, !dbg !7023
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen10, i32 0, i32 0, !dbg !7024
  %18 = load i8*, i8** %first11, align 8, !dbg !7024
  %19 = bitcast i8* %18 to %struct.bScreen*, !dbg !7021
  store %struct.bScreen* %19, %struct.bScreen** %sc1, align 8, !dbg !7025
  br label %for.cond12, !dbg !7026

for.cond12:                                       ; preds = %for.inc20, %if.then9
  %20 = load %struct.bScreen*, %struct.bScreen** %sc1, align 8, !dbg !7027
  %tobool13 = icmp ne %struct.bScreen* %20, null, !dbg !7029
  br i1 %tobool13, label %for.body14, label %for.end23, !dbg !7029

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7030, metadata !DIExpression()), !dbg !7032
  %21 = load %struct.bScreen*, %struct.bScreen** %sc1, align 8, !dbg !7033
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %21, i32 0, i32 3, !dbg !7034
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7035
  %22 = load i8*, i8** %first15, align 8, !dbg !7035
  %23 = bitcast i8* %22 to %struct.ScrArea*, !dbg !7033
  store %struct.ScrArea* %23, %struct.ScrArea** %sa, align 8, !dbg !7032
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7036
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %24, i32 0, i32 6, !dbg !7038
  %25 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !7038
  %26 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7039
  %cmp16 = icmp eq %struct.bScreen* %25, %26, !dbg !7040
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7041

if.then18:                                        ; preds = %for.body14
  %27 = load %struct.bScreen*, %struct.bScreen** %sc1, align 8, !dbg !7042
  store %struct.bScreen* %27, %struct.bScreen** %sc.addr, align 8, !dbg !7044
  br label %for.end23, !dbg !7045

if.end19:                                         ; preds = %for.body14
  br label %for.inc20, !dbg !7046

for.inc20:                                        ; preds = %if.end19
  %28 = load %struct.bScreen*, %struct.bScreen** %sc1, align 8, !dbg !7047
  %id21 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %28, i32 0, i32 0, !dbg !7048
  %next22 = getelementptr inbounds %struct.ID, %struct.ID* %id21, i32 0, i32 0, !dbg !7049
  %29 = load i8*, i8** %next22, align 8, !dbg !7049
  %30 = bitcast i8* %29 to %struct.bScreen*, !dbg !7047
  store %struct.bScreen* %30, %struct.bScreen** %sc1, align 8, !dbg !7050
  br label %for.cond12, !dbg !7051, !llvm.loop !7052

for.end23:                                        ; preds = %if.then18, %for.cond12
  br label %if.end24, !dbg !7054

if.end24:                                         ; preds = %for.end23, %if.end6
  %31 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7055
  %winid = getelementptr inbounds %struct.bScreen, %struct.bScreen* %31, i32 0, i32 11, !dbg !7057
  %32 = load i16, i16* %winid, align 4, !dbg !7057
  %conv25 = sext i16 %32 to i32, !dbg !7055
  %cmp26 = icmp ne i32 %conv25, 0, !dbg !7058
  br i1 %cmp26, label %land.lhs.true, label %if.end34, !dbg !7059

land.lhs.true:                                    ; preds = %if.end24
  %33 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7060
  %winid28 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %33, i32 0, i32 11, !dbg !7061
  %34 = load i16, i16* %winid28, align 4, !dbg !7061
  %conv29 = sext i16 %34 to i32, !dbg !7060
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7062
  %winid30 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 18, !dbg !7063
  %36 = load i32, i32* %winid30, align 8, !dbg !7063
  %cmp31 = icmp ne i32 %conv29, %36, !dbg !7064
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7065

if.then33:                                        ; preds = %land.lhs.true
  br label %if.end74, !dbg !7066

if.end34:                                         ; preds = %land.lhs.true, %if.end24
  %37 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7067
  %38 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7069
  %cmp35 = icmp ne %struct.bScreen* %37, %38, !dbg !7070
  br i1 %cmp35, label %if.then37, label %if.end74, !dbg !7071

if.then37:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %wt, metadata !7072, metadata !DIExpression()), !dbg !7076
  %39 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7077
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %39, i32 0, i32 21, !dbg !7078
  %40 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !7078
  store %struct.wmTimer* %40, %struct.wmTimer** %wt, align 8, !dbg !7076
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa38, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata %struct.Scene** %oldscene, metadata !7081, metadata !DIExpression()), !dbg !7082
  %41 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7083
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %41, i32 0, i32 5, !dbg !7084
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7084
  store %struct.Scene* %42, %struct.Scene** %oldscene, align 8, !dbg !7082
  %43 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7085
  %areabase39 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %43, i32 0, i32 3, !dbg !7087
  %first40 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase39, i32 0, i32 0, !dbg !7088
  %44 = load i8*, i8** %first40, align 8, !dbg !7088
  %45 = bitcast i8* %44 to %struct.ScrArea*, !dbg !7085
  store %struct.ScrArea* %45, %struct.ScrArea** %sa38, align 8, !dbg !7089
  br label %for.cond41, !dbg !7090

for.cond41:                                       ; preds = %for.inc44, %if.then37
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa38, align 8, !dbg !7091
  %tobool42 = icmp ne %struct.ScrArea* %46, null, !dbg !7093
  br i1 %tobool42, label %for.body43, label %for.end46, !dbg !7093

for.body43:                                       ; preds = %for.cond41
  %47 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7094
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %47, i32 0, i32 29, !dbg !7096
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa38, align 8, !dbg !7097
  %49 = bitcast %struct.ScrArea* %48 to i8*, !dbg !7097
  call void @WM_event_remove_area_handler(%struct.ListBase* %modalhandlers, i8* %49), !dbg !7098
  br label %for.inc44, !dbg !7099

for.inc44:                                        ; preds = %for.body43
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa38, align 8, !dbg !7100
  %next45 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %50, i32 0, i32 0, !dbg !7101
  %51 = load %struct.ScrArea*, %struct.ScrArea** %next45, align 8, !dbg !7101
  store %struct.ScrArea* %51, %struct.ScrArea** %sa38, align 8, !dbg !7102
  br label %for.cond41, !dbg !7103, !llvm.loop !7104

for.end46:                                        ; preds = %for.cond41
  %52 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7106
  %animtimer47 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %52, i32 0, i32 21, !dbg !7107
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer47, align 8, !dbg !7108
  %53 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !7109
  %tobool48 = icmp ne %struct.wmTimer* %53, null, !dbg !7109
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !7111

if.then49:                                        ; preds = %for.end46
  %54 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7112
  %55 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7114
  %56 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !7115
  call void @WM_event_timer_sleep(%struct.wmWindowManager* %54, %struct.wmWindow* %55, %struct.wmTimer* %56, i8 zeroext 1), !dbg !7116
  br label %if.end50, !dbg !7117

if.end50:                                         ; preds = %if.then49, %for.end46
  %57 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7118
  %58 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7119
  %59 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7120
  call void @ED_screen_exit(%struct.bContext* %57, %struct.wmWindow* %58, %struct.bScreen* %59), !dbg !7121
  %60 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !7122
  %tobool51 = icmp ne %struct.wmTimer* %60, null, !dbg !7122
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !7124

if.then52:                                        ; preds = %if.end50
  %61 = load %struct.Scene*, %struct.Scene** %oldscene, align 8, !dbg !7125
  %62 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7128
  %scene53 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %62, i32 0, i32 5, !dbg !7129
  %63 = load %struct.Scene*, %struct.Scene** %scene53, align 8, !dbg !7129
  %cmp54 = icmp eq %struct.Scene* %61, %63, !dbg !7130
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !7131

if.then56:                                        ; preds = %if.then52
  %64 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !7132
  %65 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7134
  %animtimer57 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %65, i32 0, i32 21, !dbg !7135
  store %struct.wmTimer* %64, %struct.wmTimer** %animtimer57, align 8, !dbg !7136
  br label %if.end60, !dbg !7137

if.else:                                          ; preds = %if.then52
  %66 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !7138
  %67 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !7140
  %animtimer58 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %67, i32 0, i32 21, !dbg !7141
  store %struct.wmTimer* %66, %struct.wmTimer** %animtimer58, align 8, !dbg !7142
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7143
  %call59 = call i32 @ED_screen_animation_play(%struct.bContext* %68, i32 0, i32 0), !dbg !7144
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then56
  br label %if.end61, !dbg !7145

if.end61:                                         ; preds = %if.end60, %if.end50
  %69 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7146
  %70 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7147
  %screen62 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %70, i32 0, i32 3, !dbg !7148
  store %struct.bScreen* %69, %struct.bScreen** %screen62, align 8, !dbg !7149
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7150
  %72 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7151
  call void @CTX_wm_window_set(%struct.bContext* %71, %struct.wmWindow* %72), !dbg !7152
  %73 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7153
  %winid63 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %73, i32 0, i32 18, !dbg !7154
  %74 = load i32, i32* %winid63, align 8, !dbg !7154
  %conv64 = trunc i32 %74 to i16, !dbg !7153
  %75 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7155
  %winid65 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %75, i32 0, i32 11, !dbg !7156
  store i16 %conv64, i16* %winid65, align 4, !dbg !7157
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7158
  %call66 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %76), !dbg !7159
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7160
  %call67 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %77), !dbg !7161
  call void @ED_screen_refresh(%struct.wmWindowManager* %call66, %struct.wmWindow* %call67), !dbg !7162
  %78 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7163
  call void @WM_event_add_notifier(%struct.bContext* %78, i32 33554432, i8* null), !dbg !7164
  %79 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7165
  %80 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7166
  %81 = bitcast %struct.bScreen* %80 to i8*, !dbg !7166
  call void @WM_event_add_notifier(%struct.bContext* %79, i32 50790400, i8* %81), !dbg !7167
  %82 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7168
  call void @WM_event_add_mousemove(%struct.bContext* %82), !dbg !7169
  %83 = load %struct.Scene*, %struct.Scene** %oldscene, align 8, !dbg !7170
  %84 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7172
  %scene68 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %84, i32 0, i32 5, !dbg !7173
  %85 = load %struct.Scene*, %struct.Scene** %scene68, align 8, !dbg !7173
  %cmp69 = icmp ne %struct.Scene* %83, %85, !dbg !7174
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !7175

if.then71:                                        ; preds = %if.end61
  %86 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7176
  %87 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7178
  %scene72 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %87, i32 0, i32 5, !dbg !7179
  %88 = load %struct.Scene*, %struct.Scene** %scene72, align 8, !dbg !7179
  call void @BKE_scene_set_background(%struct.Main* %86, %struct.Scene* %88), !dbg !7180
  br label %if.end73, !dbg !7181

if.end73:                                         ; preds = %if.then71, %if.end61
  %89 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7182
  call void @DAG_on_visible_update(%struct.Main* %89, i8 zeroext 0), !dbg !7183
  br label %if.end74, !dbg !7184

if.end74:                                         ; preds = %if.then5, %if.then33, %if.end73, %if.end34
  ret void, !dbg !7185
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local void @WM_event_remove_area_handler(%struct.ListBase*, i8*) #2

declare dso_local i32 @ED_screen_animation_play(%struct.bContext*, i32, i32) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @WM_event_add_mousemove(%struct.bContext*) #2

declare dso_local void @BKE_scene_set_background(%struct.Main*, %struct.Scene*) #2

declare dso_local void @DAG_on_visible_update(%struct.Main*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_delete(%struct.bContext* %C, %struct.bScreen* %sc) #0 !dbg !7186 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %bmain = alloca %struct.Main*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %newsc = alloca %struct.bScreen*, align 8
  %delete = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !7191, metadata !DIExpression()), !dbg !7192
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7193
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7194
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !7192
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7195, metadata !DIExpression()), !dbg !7196
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7197
  %call1 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %1), !dbg !7198
  store %struct.wmWindowManager* %call1, %struct.wmWindowManager** %wm, align 8, !dbg !7196
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7199, metadata !DIExpression()), !dbg !7200
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7201
  %call2 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !7202
  store %struct.wmWindow* %call2, %struct.wmWindow** %win, align 8, !dbg !7200
  call void @llvm.dbg.declare(metadata %struct.bScreen** %newsc, metadata !7203, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.declare(metadata i32* %delete, metadata !7205, metadata !DIExpression()), !dbg !7206
  store i32 1, i32* %delete, align 4, !dbg !7206
  %3 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7207
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 9, !dbg !7207
  %4 = load i16, i16* %state, align 8, !dbg !7207
  %conv = sext i16 %4 to i32, !dbg !7207
  %cmp = icmp eq i32 %conv, 1, !dbg !7207
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7207

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7207
  %state4 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 9, !dbg !7207
  %6 = load i16, i16* %state4, align 8, !dbg !7207
  %conv5 = sext i16 %6 to i32, !dbg !7207
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !7207
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7209

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end36, !dbg !7210

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7212
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 0, !dbg !7214
  %prev = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 1, !dbg !7215
  %8 = load i8*, i8** %prev, align 8, !dbg !7215
  %9 = bitcast i8* %8 to %struct.bScreen*, !dbg !7212
  store %struct.bScreen* %9, %struct.bScreen** %newsc, align 8, !dbg !7216
  br label %for.cond, !dbg !7217

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7218
  %tobool = icmp ne %struct.bScreen* %10, null, !dbg !7220
  br i1 %tobool, label %for.body, label %for.end, !dbg !7220

for.body:                                         ; preds = %for.cond
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7221
  %12 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7223
  %call8 = call i32 @ed_screen_used(%struct.wmWindowManager* %11, %struct.bScreen* %12), !dbg !7224
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7224
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !7225

if.then10:                                        ; preds = %for.body
  br label %for.end, !dbg !7226

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !7227

for.inc:                                          ; preds = %if.end11
  %13 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7228
  %id12 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %13, i32 0, i32 0, !dbg !7229
  %prev13 = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 1, !dbg !7230
  %14 = load i8*, i8** %prev13, align 8, !dbg !7230
  %15 = bitcast i8* %14 to %struct.bScreen*, !dbg !7228
  store %struct.bScreen* %15, %struct.bScreen** %newsc, align 8, !dbg !7231
  br label %for.cond, !dbg !7232, !llvm.loop !7233

for.end:                                          ; preds = %if.then10, %for.cond
  %16 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7235
  %tobool14 = icmp ne %struct.bScreen* %16, null, !dbg !7235
  br i1 %tobool14, label %if.end28, label %if.then15, !dbg !7237

if.then15:                                        ; preds = %for.end
  %17 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7238
  %id16 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 0, !dbg !7241
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 0, !dbg !7242
  %18 = load i8*, i8** %next, align 8, !dbg !7242
  %19 = bitcast i8* %18 to %struct.bScreen*, !dbg !7238
  store %struct.bScreen* %19, %struct.bScreen** %newsc, align 8, !dbg !7243
  br label %for.cond17, !dbg !7244

for.cond17:                                       ; preds = %for.inc24, %if.then15
  %20 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7245
  %tobool18 = icmp ne %struct.bScreen* %20, null, !dbg !7247
  br i1 %tobool18, label %for.body19, label %for.end27, !dbg !7247

for.body19:                                       ; preds = %for.cond17
  %21 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7248
  %22 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7250
  %call20 = call i32 @ed_screen_used(%struct.wmWindowManager* %21, %struct.bScreen* %22), !dbg !7251
  %tobool21 = icmp ne i32 %call20, 0, !dbg !7251
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !7252

if.then22:                                        ; preds = %for.body19
  br label %for.end27, !dbg !7253

if.end23:                                         ; preds = %for.body19
  br label %for.inc24, !dbg !7254

for.inc24:                                        ; preds = %if.end23
  %23 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7255
  %id25 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %23, i32 0, i32 0, !dbg !7256
  %next26 = getelementptr inbounds %struct.ID, %struct.ID* %id25, i32 0, i32 0, !dbg !7257
  %24 = load i8*, i8** %next26, align 8, !dbg !7257
  %25 = bitcast i8* %24 to %struct.bScreen*, !dbg !7255
  store %struct.bScreen* %25, %struct.bScreen** %newsc, align 8, !dbg !7258
  br label %for.cond17, !dbg !7259, !llvm.loop !7260

for.end27:                                        ; preds = %if.then22, %for.cond17
  br label %if.end28, !dbg !7262

if.end28:                                         ; preds = %for.end27, %for.end
  %26 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7263
  %tobool29 = icmp ne %struct.bScreen* %26, null, !dbg !7263
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !7265

if.then30:                                        ; preds = %if.end28
  br label %if.end36, !dbg !7266

if.end31:                                         ; preds = %if.end28
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7267
  %28 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !7268
  call void @ED_screen_set(%struct.bContext* %27, %struct.bScreen* %28), !dbg !7269
  %29 = load i32, i32* %delete, align 4, !dbg !7270
  %tobool32 = icmp ne i32 %29, 0, !dbg !7270
  br i1 %tobool32, label %land.lhs.true, label %if.end36, !dbg !7272

land.lhs.true:                                    ; preds = %if.end31
  %30 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7273
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %30, i32 0, i32 3, !dbg !7274
  %31 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7274
  %32 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7275
  %cmp33 = icmp ne %struct.bScreen* %31, %32, !dbg !7276
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !7277

if.then35:                                        ; preds = %land.lhs.true
  %33 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7278
  %34 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7279
  %35 = bitcast %struct.bScreen* %34 to i8*, !dbg !7279
  call void @BKE_libblock_free(%struct.Main* %33, i8* %35), !dbg !7280
  br label %if.end36, !dbg !7280

if.end36:                                         ; preds = %if.then, %if.then30, %if.then35, %land.lhs.true, %if.end31
  ret void, !dbg !7281
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ed_screen_used(%struct.wmWindowManager* %wm, %struct.bScreen* %sc) #0 !dbg !7282 {
entry:
  %retval = alloca i32, align 4
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !7285, metadata !DIExpression()), !dbg !7286
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !7291
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 3, !dbg !7293
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !7294
  %1 = load i8*, i8** %first, align 8, !dbg !7294
  %2 = bitcast i8* %1 to %struct.wmWindow*, !dbg !7291
  store %struct.wmWindow* %2, %struct.wmWindow** %win, align 8, !dbg !7295
  br label %for.cond, !dbg !7296

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7297
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !7299
  br i1 %tobool, label %for.body, label %for.end, !dbg !7299

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7300
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 3, !dbg !7302
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7302
  %6 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7303
  %cmp = icmp eq %struct.bScreen* %5, %6, !dbg !7304
  br i1 %cmp, label %if.then, label %if.end, !dbg !7305

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7306
  br label %return, !dbg !7306

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7303

for.inc:                                          ; preds = %if.end
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7307
  %next = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %7, i32 0, i32 0, !dbg !7308
  %8 = load %struct.wmWindow*, %struct.wmWindow** %next, align 8, !dbg !7308
  store %struct.wmWindow* %8, %struct.wmWindow** %win, align 8, !dbg !7309
  br label %for.cond, !dbg !7310, !llvm.loop !7311

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7313
  br label %return, !dbg !7313

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7314
  ret i32 %9, !dbg !7314
}

declare dso_local void @BKE_libblock_free(%struct.Main*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_set_scene(%struct.bContext* %C, %struct.bScreen* %screen, %struct.Scene* %scene) #0 !dbg !7315 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %screen.addr = alloca %struct.bScreen*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %bmain = alloca %struct.Main*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %v3d = alloca %struct.View3D*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !7324, metadata !DIExpression()), !dbg !7325
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7326
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7327
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !7325
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7328, metadata !DIExpression()), !dbg !7329
  %1 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !7330
  %cmp = icmp eq %struct.bScreen* %1, null, !dbg !7332
  br i1 %cmp, label %if.then, label %if.end, !dbg !7333

if.then:                                          ; preds = %entry
  br label %return, !dbg !7334

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7335
  %call1 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %2), !dbg !7337
  %3 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !7338
  %call2 = call i32 @ed_screen_used(%struct.wmWindowManager* %call1, %struct.bScreen* %3), !dbg !7339
  %tobool = icmp ne i32 %call2, 0, !dbg !7339
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7340

if.then3:                                         ; preds = %if.end
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7341
  call void @ED_object_editmode_exit(%struct.bContext* %4, i32 9), !dbg !7342
  br label %if.end4, !dbg !7342

if.end4:                                          ; preds = %if.then3, %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7343
  %screen5 = getelementptr inbounds %struct.Main, %struct.Main* %5, i32 0, i32 26, !dbg !7345
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen5, i32 0, i32 0, !dbg !7346
  %6 = load i8*, i8** %first, align 8, !dbg !7346
  %7 = bitcast i8* %6 to %struct.bScreen*, !dbg !7343
  store %struct.bScreen* %7, %struct.bScreen** %sc, align 8, !dbg !7347
  br label %for.cond, !dbg !7348

for.cond:                                         ; preds = %for.inc, %if.end4
  %8 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7349
  %tobool6 = icmp ne %struct.bScreen* %8, null, !dbg !7351
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7351

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !7352
  %and = and i32 %9, 16, !dbg !7355
  %tobool7 = icmp ne i32 %and, 0, !dbg !7355
  br i1 %tobool7, label %if.then9, label %lor.lhs.false, !dbg !7356

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7357
  %11 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !7358
  %cmp8 = icmp eq %struct.bScreen* %10, %11, !dbg !7359
  br i1 %cmp8, label %if.then9, label %if.end15, !dbg !7360

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7361
  %13 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7364
  %scene10 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %13, i32 0, i32 5, !dbg !7365
  %14 = load %struct.Scene*, %struct.Scene** %scene10, align 8, !dbg !7365
  %cmp11 = icmp ne %struct.Scene* %12, %14, !dbg !7366
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !7367

if.then12:                                        ; preds = %if.then9
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7368
  %16 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7370
  %scene13 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %16, i32 0, i32 5, !dbg !7371
  store %struct.Scene* %15, %struct.Scene** %scene13, align 8, !dbg !7372
  br label %if.end14, !dbg !7373

if.end14:                                         ; preds = %if.then12, %if.then9
  br label %if.end15, !dbg !7374

if.end15:                                         ; preds = %if.end14, %lor.lhs.false
  br label %for.inc, !dbg !7375

for.inc:                                          ; preds = %if.end15
  %17 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7376
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 0, !dbg !7377
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7378
  %18 = load i8*, i8** %next, align 8, !dbg !7378
  %19 = bitcast i8* %18 to %struct.bScreen*, !dbg !7376
  store %struct.bScreen* %19, %struct.bScreen** %sc, align 8, !dbg !7379
  br label %for.cond, !dbg !7380, !llvm.loop !7381

for.end:                                          ; preds = %for.cond
  %20 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7383
  %screen16 = getelementptr inbounds %struct.Main, %struct.Main* %20, i32 0, i32 26, !dbg !7385
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen16, i32 0, i32 0, !dbg !7386
  %21 = load i8*, i8** %first17, align 8, !dbg !7386
  %22 = bitcast i8* %21 to %struct.bScreen*, !dbg !7383
  store %struct.bScreen* %22, %struct.bScreen** %sc, align 8, !dbg !7387
  br label %for.cond18, !dbg !7388

for.cond18:                                       ; preds = %for.inc39, %for.end
  %23 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7389
  %tobool19 = icmp ne %struct.bScreen* %23, null, !dbg !7391
  br i1 %tobool19, label %for.body20, label %for.end42, !dbg !7391

for.body20:                                       ; preds = %for.cond18
  %24 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !7392
  %and21 = and i32 %24, 16, !dbg !7395
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7395
  br i1 %tobool22, label %if.then25, label %lor.lhs.false23, !dbg !7396

lor.lhs.false23:                                  ; preds = %for.body20
  %25 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7397
  %26 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !7398
  %cmp24 = icmp eq %struct.bScreen* %25, %26, !dbg !7399
  br i1 %cmp24, label %if.then25, label %if.end38, !dbg !7400

if.then25:                                        ; preds = %lor.lhs.false23, %for.body20
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7401, metadata !DIExpression()), !dbg !7403
  %27 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7404
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %27, i32 0, i32 3, !dbg !7405
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7406
  %28 = load i8*, i8** %first26, align 8, !dbg !7406
  %29 = bitcast i8* %28 to %struct.ScrArea*, !dbg !7404
  store %struct.ScrArea* %29, %struct.ScrArea** %sa, align 8, !dbg !7403
  br label %while.cond, !dbg !7407

while.cond:                                       ; preds = %while.end, %if.then25
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7408
  %tobool27 = icmp ne %struct.ScrArea* %30, null, !dbg !7407
  br i1 %tobool27, label %while.body, label %while.end37, !dbg !7407

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !7409, metadata !DIExpression()), !dbg !7411
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7412
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 19, !dbg !7413
  %first28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !7414
  %32 = load i8*, i8** %first28, align 8, !dbg !7414
  %33 = bitcast i8* %32 to %struct.SpaceLink*, !dbg !7412
  store %struct.SpaceLink* %33, %struct.SpaceLink** %sl, align 8, !dbg !7411
  br label %while.cond29, !dbg !7415

while.cond29:                                     ; preds = %if.end34, %while.body
  %34 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7416
  %tobool30 = icmp ne %struct.SpaceLink* %34, null, !dbg !7415
  br i1 %tobool30, label %while.body31, label %while.end, !dbg !7415

while.body31:                                     ; preds = %while.cond29
  %35 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7417
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %35, i32 0, i32 3, !dbg !7420
  %36 = load i32, i32* %spacetype, align 8, !dbg !7420
  %cmp32 = icmp eq i32 %36, 1, !dbg !7421
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !7422

if.then33:                                        ; preds = %while.body31
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !7423, metadata !DIExpression()), !dbg !7425
  %37 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7426
  %38 = bitcast %struct.SpaceLink* %37 to %struct.View3D*, !dbg !7427
  store %struct.View3D* %38, %struct.View3D** %v3d, align 8, !dbg !7425
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7428
  %40 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7429
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7430
  %42 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7431
  call void @ed_screen_set_3dview_camera(%struct.Scene* %39, %struct.bScreen* %40, %struct.ScrArea* %41, %struct.View3D* %42), !dbg !7432
  br label %if.end34, !dbg !7433

if.end34:                                         ; preds = %if.then33, %while.body31
  %43 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7434
  %next35 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %43, i32 0, i32 0, !dbg !7435
  %44 = load %struct.SpaceLink*, %struct.SpaceLink** %next35, align 8, !dbg !7435
  store %struct.SpaceLink* %44, %struct.SpaceLink** %sl, align 8, !dbg !7436
  br label %while.cond29, !dbg !7415, !llvm.loop !7437

while.end:                                        ; preds = %while.cond29
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7439
  %next36 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 0, !dbg !7440
  %46 = load %struct.ScrArea*, %struct.ScrArea** %next36, align 8, !dbg !7440
  store %struct.ScrArea* %46, %struct.ScrArea** %sa, align 8, !dbg !7441
  br label %while.cond, !dbg !7407, !llvm.loop !7442

while.end37:                                      ; preds = %while.cond
  br label %if.end38, !dbg !7444

if.end38:                                         ; preds = %while.end37, %lor.lhs.false23
  br label %for.inc39, !dbg !7445

for.inc39:                                        ; preds = %if.end38
  %47 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7446
  %id40 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %47, i32 0, i32 0, !dbg !7447
  %next41 = getelementptr inbounds %struct.ID, %struct.ID* %id40, i32 0, i32 0, !dbg !7448
  %48 = load i8*, i8** %next41, align 8, !dbg !7448
  %49 = bitcast i8* %48 to %struct.bScreen*, !dbg !7446
  store %struct.bScreen* %49, %struct.bScreen** %sc, align 8, !dbg !7449
  br label %for.cond18, !dbg !7450, !llvm.loop !7451

for.end42:                                        ; preds = %for.cond18
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7453
  %51 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7454
  call void @CTX_data_scene_set(%struct.bContext* %50, %struct.Scene* %51), !dbg !7455
  %52 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7456
  %53 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7457
  call void @BKE_scene_set_background(%struct.Main* %52, %struct.Scene* %53), !dbg !7458
  %54 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7459
  call void @DAG_on_visible_update(%struct.Main* %54, i8 zeroext 0), !dbg !7460
  %55 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7461
  call void @ED_render_engine_changed(%struct.Main* %55), !dbg !7462
  %56 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7463
  %57 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7464
  call void @ED_update_for_newframe(%struct.Main* %56, %struct.Scene* %57, i32 1), !dbg !7465
  %58 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7466
  call void @WM_event_add_notifier(%struct.bContext* %58, i32 33554432, i8* null), !dbg !7467
  br label %return, !dbg !7468

return:                                           ; preds = %for.end42, %if.then
  ret void, !dbg !7468
}

declare dso_local void @ED_object_editmode_exit(%struct.bContext*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ed_screen_set_3dview_camera(%struct.Scene* %scene, %struct.bScreen* %sc, %struct.ScrArea* %sa, %struct.View3D* %v3d) #0 !dbg !7469 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %sc.addr = alloca %struct.bScreen*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %regionbase = alloca %struct.ListBase*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  %0 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7480
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7481
  call void @BKE_screen_view3d_sync(%struct.View3D* %0, %struct.Scene* %1), !dbg !7482
  %2 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7483
  %camera = getelementptr inbounds %struct.View3D, %struct.View3D* %2, i32 0, i32 15, !dbg !7485
  %3 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7485
  %tobool = icmp ne %struct.Object* %3, null, !dbg !7483
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7486

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7487
  %5 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7488
  %camera1 = getelementptr inbounds %struct.View3D, %struct.View3D* %5, i32 0, i32 15, !dbg !7489
  %6 = load %struct.Object*, %struct.Object** %camera1, align 8, !dbg !7489
  %call = call %struct.Base* @BKE_scene_base_find(%struct.Scene* %4, %struct.Object* %6), !dbg !7490
  %tobool2 = icmp ne %struct.Base* %call, null, !dbg !7490
  br i1 %tobool2, label %if.end25, label %if.then, !dbg !7491

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7492
  %scene3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 5, !dbg !7494
  %8 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !7494
  %call4 = call %struct.Object* @BKE_scene_camera_find(%struct.Scene* %8), !dbg !7495
  %9 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7496
  %camera5 = getelementptr inbounds %struct.View3D, %struct.View3D* %9, i32 0, i32 15, !dbg !7497
  store %struct.Object* %call4, %struct.Object** %camera5, align 8, !dbg !7498
  %10 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7499
  %camera6 = getelementptr inbounds %struct.View3D, %struct.View3D* %10, i32 0, i32 15, !dbg !7501
  %11 = load %struct.Object*, %struct.Object** %camera6, align 8, !dbg !7501
  %tobool7 = icmp ne %struct.Object* %11, null, !dbg !7499
  br i1 %tobool7, label %if.end24, label %if.then8, !dbg !7502

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata %struct.ListBase** %regionbase, metadata !7506, metadata !DIExpression()), !dbg !7507
  %12 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7508
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7510
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 19, !dbg !7511
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !7512
  %14 = load i8*, i8** %first, align 8, !dbg !7512
  %15 = bitcast i8* %14 to %struct.View3D*, !dbg !7510
  %cmp = icmp eq %struct.View3D* %12, %15, !dbg !7513
  br i1 %cmp, label %if.then9, label %if.else, !dbg !7514

if.then9:                                         ; preds = %if.then8
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7515
  %regionbase10 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 20, !dbg !7516
  store %struct.ListBase* %regionbase10, %struct.ListBase** %regionbase, align 8, !dbg !7517
  br label %if.end, !dbg !7518

if.else:                                          ; preds = %if.then8
  %17 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !7519
  %regionbase11 = getelementptr inbounds %struct.View3D, %struct.View3D* %17, i32 0, i32 2, !dbg !7520
  store %struct.ListBase* %regionbase11, %struct.ListBase** %regionbase, align 8, !dbg !7521
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %18 = load %struct.ListBase*, %struct.ListBase** %regionbase, align 8, !dbg !7522
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 0, !dbg !7524
  %19 = load i8*, i8** %first12, align 8, !dbg !7524
  %20 = bitcast i8* %19 to %struct.ARegion*, !dbg !7522
  store %struct.ARegion* %20, %struct.ARegion** %ar, align 8, !dbg !7525
  br label %for.cond, !dbg !7526

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7527
  %tobool13 = icmp ne %struct.ARegion* %21, null, !dbg !7529
  br i1 %tobool13, label %for.body, label %for.end, !dbg !7529

for.body:                                         ; preds = %for.cond
  %22 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7530
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 8, !dbg !7533
  %23 = load i16, i16* %regiontype, align 2, !dbg !7533
  %conv = sext i16 %23 to i32, !dbg !7530
  %cmp14 = icmp eq i32 %conv, 0, !dbg !7534
  br i1 %cmp14, label %if.then16, label %if.end23, !dbg !7535

if.then16:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !7536, metadata !DIExpression()), !dbg !7593
  %24 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7594
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %24, i32 0, i32 30, !dbg !7595
  %25 = load i8*, i8** %regiondata, align 8, !dbg !7595
  %26 = bitcast i8* %25 to %struct.RegionView3D*, !dbg !7594
  store %struct.RegionView3D* %26, %struct.RegionView3D** %rv3d, align 8, !dbg !7593
  %27 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7596
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %27, i32 0, i32 25, !dbg !7598
  %28 = load i8, i8* %persp, align 1, !dbg !7598
  %conv17 = zext i8 %28 to i32, !dbg !7596
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !7599
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !7600

if.then20:                                        ; preds = %if.then16
  %29 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7601
  %persp21 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %29, i32 0, i32 25, !dbg !7603
  store i8 1, i8* %persp21, align 1, !dbg !7604
  br label %if.end22, !dbg !7605

if.end22:                                         ; preds = %if.then20, %if.then16
  br label %if.end23, !dbg !7606

if.end23:                                         ; preds = %if.end22, %for.body
  br label %for.inc, !dbg !7607

for.inc:                                          ; preds = %if.end23
  %30 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7608
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %30, i32 0, i32 0, !dbg !7609
  %31 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !7609
  store %struct.ARegion* %31, %struct.ARegion** %ar, align 8, !dbg !7610
  br label %for.cond, !dbg !7611, !llvm.loop !7612

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !7614

if.end24:                                         ; preds = %for.end, %if.then
  br label %if.end25, !dbg !7615

if.end25:                                         ; preds = %if.end24, %lor.lhs.false
  ret void, !dbg !7616
}

declare dso_local void @CTX_data_scene_set(%struct.bContext*, %struct.Scene*) #2

declare dso_local void @ED_render_engine_changed(%struct.Main*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_update_for_newframe(%struct.Main* %bmain, %struct.Scene* %scene, i32 %UNUSED_mute) #0 !dbg !7617 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %UNUSED_mute.addr = alloca i32, align 4
  %wm = alloca %struct.wmWindowManager*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %layers = alloca i32, align 4
  %camera = alloca i8*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %tex = alloca %struct.Tex*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  store i32 %UNUSED_mute, i32* %UNUSED_mute.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_mute.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7626, metadata !DIExpression()), !dbg !7627
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7628
  %wm1 = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 40, !dbg !7629
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm1, i32 0, i32 0, !dbg !7630
  %1 = load i8*, i8** %first, align 8, !dbg !7630
  %2 = bitcast i8* %1 to %struct.wmWindowManager*, !dbg !7628
  store %struct.wmWindowManager* %2, %struct.wmWindowManager** %wm, align 8, !dbg !7627
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !7631, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.declare(metadata i32* %layers, metadata !7633, metadata !DIExpression()), !dbg !7634
  store i32 0, i32* %layers, align 4, !dbg !7634
  call void @llvm.dbg.declare(metadata i8** %camera, metadata !7635, metadata !DIExpression()), !dbg !7636
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7637
  %call = call %struct.Object* @BKE_scene_camera_switch_find(%struct.Scene* %3), !dbg !7638
  %4 = bitcast %struct.Object* %call to i8*, !dbg !7638
  store i8* %4, i8** %camera, align 8, !dbg !7636
  %5 = load i8*, i8** %camera, align 8, !dbg !7639
  %tobool = icmp ne i8* %5, null, !dbg !7639
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7641

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7642
  %camera2 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 2, !dbg !7643
  %7 = load %struct.Object*, %struct.Object** %camera2, align 8, !dbg !7643
  %8 = load i8*, i8** %camera, align 8, !dbg !7644
  %9 = bitcast i8* %8 to %struct.Object*, !dbg !7644
  %cmp = icmp ne %struct.Object* %7, %9, !dbg !7645
  br i1 %cmp, label %if.then, label %if.end, !dbg !7646

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7647, metadata !DIExpression()), !dbg !7649
  %10 = load i8*, i8** %camera, align 8, !dbg !7650
  %11 = bitcast i8* %10 to %struct.Object*, !dbg !7650
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7651
  %camera3 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 2, !dbg !7652
  store %struct.Object* %11, %struct.Object** %camera3, align 8, !dbg !7653
  %13 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7654
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %13, i32 0, i32 26, !dbg !7656
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen, i32 0, i32 0, !dbg !7657
  %14 = load i8*, i8** %first4, align 8, !dbg !7657
  %15 = bitcast i8* %14 to %struct.bScreen*, !dbg !7654
  store %struct.bScreen* %15, %struct.bScreen** %sc, align 8, !dbg !7658
  br label %for.cond, !dbg !7659

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7660
  %tobool5 = icmp ne %struct.bScreen* %16, null, !dbg !7662
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7662

for.body:                                         ; preds = %for.cond
  %17 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7663
  call void @BKE_screen_view3d_scene_sync(%struct.bScreen* %17), !dbg !7665
  br label %for.inc, !dbg !7666

for.inc:                                          ; preds = %for.body
  %18 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7667
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 0, !dbg !7668
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7669
  %19 = load i8*, i8** %next, align 8, !dbg !7669
  %20 = bitcast i8* %19 to %struct.bScreen*, !dbg !7667
  store %struct.bScreen* %20, %struct.bScreen** %sc, align 8, !dbg !7670
  br label %for.cond, !dbg !7671, !llvm.loop !7672

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7674

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %21 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7675
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7676
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 22, !dbg !7677
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !7678
  %23 = load i32, i32* %cfra, align 8, !dbg !7678
  call void @ED_clip_update_frame(%struct.Main* %21, i32 %23), !dbg !7679
  %24 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7680
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %24, i32 0, i32 3, !dbg !7682
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !7683
  %25 = load i8*, i8** %first6, align 8, !dbg !7683
  %26 = bitcast i8* %25 to %struct.wmWindow*, !dbg !7680
  store %struct.wmWindow* %26, %struct.wmWindow** %window, align 8, !dbg !7684
  br label %for.cond7, !dbg !7685

for.cond7:                                        ; preds = %for.inc12, %if.end
  %27 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7686
  %tobool8 = icmp ne %struct.wmWindow* %27, null, !dbg !7688
  br i1 %tobool8, label %for.body9, label %for.end14, !dbg !7688

for.body9:                                        ; preds = %for.cond7
  %28 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7689
  %screen10 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %28, i32 0, i32 3, !dbg !7690
  %29 = load %struct.bScreen*, %struct.bScreen** %screen10, align 8, !dbg !7690
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7691
  %call11 = call i32 @BKE_screen_visible_layers(%struct.bScreen* %29, %struct.Scene* %30), !dbg !7692
  %31 = load i32, i32* %layers, align 4, !dbg !7693
  %or = or i32 %31, %call11, !dbg !7693
  store i32 %or, i32* %layers, align 4, !dbg !7693
  br label %for.inc12, !dbg !7694

for.inc12:                                        ; preds = %for.body9
  %32 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7695
  %next13 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %32, i32 0, i32 0, !dbg !7696
  %33 = load %struct.wmWindow*, %struct.wmWindow** %next13, align 8, !dbg !7696
  store %struct.wmWindow* %33, %struct.wmWindow** %window, align 8, !dbg !7697
  br label %for.cond7, !dbg !7698, !llvm.loop !7699

for.end14:                                        ; preds = %for.cond7
  %34 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7701
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %34, i32 0, i32 46, !dbg !7702
  %35 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !7702
  %36 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7703
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7704
  %38 = load i32, i32* %layers, align 4, !dbg !7705
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %35, %struct.Main* %36, %struct.Scene* %37, i32 %38), !dbg !7706
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7707
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %39, i32 0, i32 16, !dbg !7709
  %40 = load i8, i8* %use_nodes, align 2, !dbg !7709
  %conv = zext i8 %40 to i32, !dbg !7707
  %tobool15 = icmp ne i32 %conv, 0, !dbg !7707
  br i1 %tobool15, label %land.lhs.true16, label %if.end21, !dbg !7710

land.lhs.true16:                                  ; preds = %for.end14
  %41 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7711
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %41, i32 0, i32 18, !dbg !7712
  %42 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7712
  %tobool17 = icmp ne %struct.bNodeTree* %42, null, !dbg !7711
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !7713

if.then18:                                        ; preds = %land.lhs.true16
  %43 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7714
  %nodetree19 = getelementptr inbounds %struct.Scene, %struct.Scene* %43, i32 0, i32 18, !dbg !7715
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree19, align 8, !dbg !7715
  %call20 = call i32 @ntreeCompositTagAnimated(%struct.bNodeTree* %44), !dbg !7716
  br label %if.end21, !dbg !7716

if.end21:                                         ; preds = %if.then18, %land.lhs.true16, %for.end14
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !7717, metadata !DIExpression()), !dbg !7721
  %45 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7722
  %tex22 = getelementptr inbounds %struct.Main, %struct.Main* %45, i32 0, i32 18, !dbg !7724
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex22, i32 0, i32 0, !dbg !7725
  %46 = load i8*, i8** %first23, align 8, !dbg !7725
  %47 = bitcast i8* %46 to %struct.Tex*, !dbg !7722
  store %struct.Tex* %47, %struct.Tex** %tex, align 8, !dbg !7726
  br label %for.cond24, !dbg !7727

for.cond24:                                       ; preds = %for.inc37, %if.end21
  %48 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7728
  %tobool25 = icmp ne %struct.Tex* %48, null, !dbg !7730
  br i1 %tobool25, label %for.body26, label %for.end40, !dbg !7730

for.body26:                                       ; preds = %for.cond24
  %49 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7731
  %use_nodes27 = getelementptr inbounds %struct.Tex, %struct.Tex* %49, i32 0, i32 61, !dbg !7733
  %50 = load i8, i8* %use_nodes27, align 8, !dbg !7733
  %conv28 = zext i8 %50 to i32, !dbg !7731
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !7731
  br i1 %tobool29, label %land.lhs.true30, label %if.end36, !dbg !7734

land.lhs.true30:                                  ; preds = %for.body26
  %51 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7735
  %nodetree31 = getelementptr inbounds %struct.Tex, %struct.Tex* %51, i32 0, i32 52, !dbg !7736
  %52 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree31, align 8, !dbg !7736
  %tobool32 = icmp ne %struct.bNodeTree* %52, null, !dbg !7735
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !7737

if.then33:                                        ; preds = %land.lhs.true30
  %53 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7738
  %nodetree34 = getelementptr inbounds %struct.Tex, %struct.Tex* %53, i32 0, i32 52, !dbg !7740
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree34, align 8, !dbg !7740
  %call35 = call i32 @ntreeTexTagAnimated(%struct.bNodeTree* %54), !dbg !7741
  br label %if.end36, !dbg !7742

if.end36:                                         ; preds = %if.then33, %land.lhs.true30, %for.body26
  br label %for.inc37, !dbg !7736

for.inc37:                                        ; preds = %if.end36
  %55 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7743
  %id38 = getelementptr inbounds %struct.Tex, %struct.Tex* %55, i32 0, i32 0, !dbg !7744
  %next39 = getelementptr inbounds %struct.ID, %struct.ID* %id38, i32 0, i32 0, !dbg !7745
  %56 = load i8*, i8** %next39, align 8, !dbg !7745
  %57 = bitcast i8* %56 to %struct.Tex*, !dbg !7743
  store %struct.Tex* %57, %struct.Tex** %tex, align 8, !dbg !7746
  br label %for.cond24, !dbg !7747, !llvm.loop !7748

for.end40:                                        ; preds = %for.cond24
  ret void, !dbg !7750
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_delete_scene(%struct.bContext* %C, %struct.Scene* %scene) #0 !dbg !7751 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %bmain = alloca %struct.Main*, align 8
  %newscene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !7758, metadata !DIExpression()), !dbg !7759
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7760
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7761
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.Scene** %newscene, metadata !7762, metadata !DIExpression()), !dbg !7763
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7764
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 0, !dbg !7766
  %prev = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 1, !dbg !7767
  %2 = load i8*, i8** %prev, align 8, !dbg !7767
  %tobool = icmp ne i8* %2, null, !dbg !7764
  br i1 %tobool, label %if.then, label %if.else, !dbg !7768

if.then:                                          ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7769
  %id1 = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 0, !dbg !7770
  %prev2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 1, !dbg !7771
  %4 = load i8*, i8** %prev2, align 8, !dbg !7771
  %5 = bitcast i8* %4 to %struct.Scene*, !dbg !7769
  store %struct.Scene* %5, %struct.Scene** %newscene, align 8, !dbg !7772
  br label %if.end9, !dbg !7773

if.else:                                          ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7774
  %id3 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 0, !dbg !7776
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 0, !dbg !7777
  %7 = load i8*, i8** %next, align 8, !dbg !7777
  %tobool4 = icmp ne i8* %7, null, !dbg !7774
  br i1 %tobool4, label %if.then5, label %if.else8, !dbg !7778

if.then5:                                         ; preds = %if.else
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7779
  %id6 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 0, !dbg !7780
  %next7 = getelementptr inbounds %struct.ID, %struct.ID* %id6, i32 0, i32 0, !dbg !7781
  %9 = load i8*, i8** %next7, align 8, !dbg !7781
  %10 = bitcast i8* %9 to %struct.Scene*, !dbg !7779
  store %struct.Scene* %10, %struct.Scene** %newscene, align 8, !dbg !7782
  br label %if.end, !dbg !7783

if.else8:                                         ; preds = %if.else
  br label %return, !dbg !7784

if.end:                                           ; preds = %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7785
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7786
  %call10 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %12), !dbg !7787
  %13 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !7788
  call void @ED_screen_set_scene(%struct.bContext* %11, %struct.bScreen* %call10, %struct.Scene* %13), !dbg !7789
  %14 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7790
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7791
  %16 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !7792
  call void @BKE_scene_unlink(%struct.Main* %14, %struct.Scene* %15, %struct.Scene* %16), !dbg !7793
  br label %return, !dbg !7794

return:                                           ; preds = %if.end9, %if.else8
  ret void, !dbg !7794
}

declare dso_local void @BKE_scene_unlink(%struct.Main*, %struct.Scene*, %struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ScrArea* @ED_screen_full_newspace(%struct.bContext* %C, %struct.ScrArea* %sa, i32 %type) #0 !dbg !7795 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %type.addr = alloca i32, align 4
  %win = alloca %struct.wmWindow*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %newsa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !7800, metadata !DIExpression()), !dbg !7801
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7802, metadata !DIExpression()), !dbg !7803
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7804, metadata !DIExpression()), !dbg !7805
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7806
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7807
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !7805
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !7808, metadata !DIExpression()), !dbg !7809
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7810
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !7811
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !7809
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %newsa, metadata !7812, metadata !DIExpression()), !dbg !7813
  store %struct.ScrArea* null, %struct.ScrArea** %newsa, align 8, !dbg !7813
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7814
  %tobool = icmp ne %struct.ScrArea* %2, null, !dbg !7814
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7816

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7817
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 6, !dbg !7818
  %4 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !7818
  %cmp = icmp eq %struct.bScreen* %4, null, !dbg !7819
  br i1 %cmp, label %if.then, label %if.end, !dbg !7820

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7821
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7823
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7824
  %call2 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %5, %struct.wmWindow* %6, %struct.ScrArea* %7, i16 signext 1), !dbg !7825
  store %struct.ScrArea* %call2, %struct.ScrArea** %newsa, align 8, !dbg !7826
  br label %if.end, !dbg !7827

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %8 = load %struct.ScrArea*, %struct.ScrArea** %newsa, align 8, !dbg !7828
  %tobool3 = icmp ne %struct.ScrArea* %8, null, !dbg !7828
  br i1 %tobool3, label %if.end16, label %if.then4, !dbg !7830

if.then4:                                         ; preds = %if.end
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7831
  %full5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 6, !dbg !7834
  %10 = load %struct.bScreen*, %struct.bScreen** %full5, align 8, !dbg !7834
  %tobool6 = icmp ne %struct.bScreen* %10, null, !dbg !7831
  br i1 %tobool6, label %land.lhs.true, label %if.else, !dbg !7835

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7836
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 9, !dbg !7837
  %12 = load i16, i16* %state, align 8, !dbg !7837
  %conv = sext i16 %12 to i32, !dbg !7836
  %cmp7 = icmp eq i32 %conv, 1, !dbg !7838
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !7839

if.then9:                                         ; preds = %land.lhs.true
  %13 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7840
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %13, i32 0, i32 3, !dbg !7843
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7844
  %14 = load i8*, i8** %first, align 8, !dbg !7844
  %15 = bitcast i8* %14 to %struct.ScrArea*, !dbg !7840
  store %struct.ScrArea* %15, %struct.ScrArea** %newsa, align 8, !dbg !7845
  br label %for.cond, !dbg !7846

for.cond:                                         ; preds = %for.inc, %if.then9
  %16 = load %struct.ScrArea*, %struct.ScrArea** %newsa, align 8, !dbg !7847
  %tobool10 = icmp ne %struct.ScrArea* %16, null, !dbg !7849
  br i1 %tobool10, label %for.body, label %for.end, !dbg !7849

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7850
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 14, !dbg !7853
  %18 = load i16, i16* %flag, align 2, !dbg !7853
  %conv11 = sext i16 %18 to i32, !dbg !7850
  %and = and i32 %conv11, 8, !dbg !7854
  %tobool12 = icmp ne i32 %and, 0, !dbg !7854
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7855

if.then13:                                        ; preds = %for.body
  br label %for.end, !dbg !7856

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !7857

for.inc:                                          ; preds = %if.end14
  %19 = load %struct.ScrArea*, %struct.ScrArea** %newsa, align 8, !dbg !7858
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %19, i32 0, i32 0, !dbg !7859
  %20 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !7859
  store %struct.ScrArea* %20, %struct.ScrArea** %newsa, align 8, !dbg !7860
  br label %for.cond, !dbg !7861, !llvm.loop !7862

for.end:                                          ; preds = %if.then13, %for.cond
  br label %if.end15, !dbg !7864

if.else:                                          ; preds = %land.lhs.true, %if.then4
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7865
  store %struct.ScrArea* %21, %struct.ScrArea** %newsa, align 8, !dbg !7867
  br label %if.end15

if.end15:                                         ; preds = %if.else, %for.end
  br label %if.end16, !dbg !7868

if.end16:                                         ; preds = %if.end15, %if.end
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7869
  %23 = load %struct.ScrArea*, %struct.ScrArea** %newsa, align 8, !dbg !7870
  %24 = load i32, i32* %type.addr, align 4, !dbg !7871
  call void @ED_area_newspace(%struct.bContext* %22, %struct.ScrArea* %23, i32 %24), !dbg !7872
  %25 = load %struct.ScrArea*, %struct.ScrArea** %newsa, align 8, !dbg !7873
  ret %struct.ScrArea* %25, !dbg !7874
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %C, %struct.wmWindow* %win, %struct.ScrArea* %sa, i16 signext %state) #0 !dbg !7875 {
entry:
  %retval = alloca %struct.ScrArea*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %state.addr = alloca i16, align 2
  %sc = alloca %struct.bScreen*, align 8
  %oldscreen = alloca %struct.bScreen*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %old = alloca %struct.ScrArea*, align 8
  %newa = alloca %struct.ScrArea*, align 8
  %newname = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !7882, metadata !DIExpression()), !dbg !7883
  store i16 %state, i16* %state.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %state.addr, metadata !7884, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata %struct.bScreen** %oldscreen, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7890, metadata !DIExpression()), !dbg !7891
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7892
  %tobool = icmp ne %struct.ScrArea* %0, null, !dbg !7892
  br i1 %tobool, label %if.then, label %if.end, !dbg !7894

if.then:                                          ; preds = %entry
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7895
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %1, i32 0, i32 20, !dbg !7898
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !7899
  %2 = load i8*, i8** %first, align 8, !dbg !7899
  %3 = bitcast i8* %2 to %struct.ARegion*, !dbg !7895
  store %struct.ARegion* %3, %struct.ARegion** %ar, align 8, !dbg !7900
  br label %for.cond, !dbg !7901

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7902
  %tobool1 = icmp ne %struct.ARegion* %4, null, !dbg !7904
  br i1 %tobool1, label %for.body, label %for.end, !dbg !7904

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7905
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7906
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 21, !dbg !7907
  call void @uiFreeBlocks(%struct.bContext* %5, %struct.ListBase* %uiblocks), !dbg !7908
  br label %for.inc, !dbg !7908

for.inc:                                          ; preds = %for.body
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7909
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 0, !dbg !7910
  %8 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !7910
  store %struct.ARegion* %8, %struct.ARegion** %ar, align 8, !dbg !7911
  br label %for.cond, !dbg !7912, !llvm.loop !7913

for.end:                                          ; preds = %for.cond
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7915
  call void @ED_area_headerprint(%struct.ScrArea* %9, i8* null), !dbg !7916
  br label %if.end, !dbg !7917

if.end:                                           ; preds = %for.end, %entry
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7918
  %tobool2 = icmp ne %struct.ScrArea* %10, null, !dbg !7918
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !7920

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7921
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 6, !dbg !7922
  %12 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !7922
  %tobool3 = icmp ne %struct.bScreen* %12, null, !dbg !7921
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7923

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %old, metadata !7924, metadata !DIExpression()), !dbg !7926
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7927
  %full5 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 6, !dbg !7928
  %14 = load %struct.bScreen*, %struct.bScreen** %full5, align 8, !dbg !7928
  store %struct.bScreen* %14, %struct.bScreen** %sc, align 8, !dbg !7929
  %15 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7930
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %15, i32 0, i32 3, !dbg !7931
  %16 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7931
  store %struct.bScreen* %16, %struct.bScreen** %oldscreen, align 8, !dbg !7932
  %17 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7933
  %state6 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %17, i32 0, i32 9, !dbg !7934
  store i16 0, i16* %state6, align 8, !dbg !7935
  %18 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7936
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %18, i32 0, i32 3, !dbg !7938
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7939
  %19 = load i8*, i8** %first7, align 8, !dbg !7939
  %20 = bitcast i8* %19 to %struct.ScrArea*, !dbg !7936
  store %struct.ScrArea* %20, %struct.ScrArea** %old, align 8, !dbg !7940
  br label %for.cond8, !dbg !7941

for.cond8:                                        ; preds = %for.inc15, %if.then4
  %21 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !7942
  %tobool9 = icmp ne %struct.ScrArea* %21, null, !dbg !7944
  br i1 %tobool9, label %for.body10, label %for.end17, !dbg !7944

for.body10:                                       ; preds = %for.cond8
  %22 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !7945
  %full11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 6, !dbg !7947
  %23 = load %struct.bScreen*, %struct.bScreen** %full11, align 8, !dbg !7947
  %tobool12 = icmp ne %struct.bScreen* %23, null, !dbg !7945
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7948

if.then13:                                        ; preds = %for.body10
  br label %for.end17, !dbg !7949

if.end14:                                         ; preds = %for.body10
  br label %for.inc15, !dbg !7947

for.inc15:                                        ; preds = %if.end14
  %24 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !7950
  %next16 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %24, i32 0, i32 0, !dbg !7951
  %25 = load %struct.ScrArea*, %struct.ScrArea** %next16, align 8, !dbg !7951
  store %struct.ScrArea* %25, %struct.ScrArea** %old, align 8, !dbg !7952
  br label %for.cond8, !dbg !7953, !llvm.loop !7954

for.end17:                                        ; preds = %if.then13, %for.cond8
  %26 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !7956
  %cmp = icmp eq %struct.ScrArea* %26, null, !dbg !7958
  br i1 %cmp, label %if.then18, label %if.end22, !dbg !7959

if.then18:                                        ; preds = %for.end17
  %27 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7960
  %and = and i32 %27, 1, !dbg !7963
  %tobool19 = icmp ne i32 %and, 0, !dbg !7963
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7964

if.then20:                                        ; preds = %if.then18
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.ED_screen_state_toggle, i64 0, i64 0)), !dbg !7965
  br label %if.end21, !dbg !7965

if.end21:                                         ; preds = %if.then20, %if.then18
  store %struct.ScrArea* null, %struct.ScrArea** %retval, align 8, !dbg !7966
  br label %return, !dbg !7966

if.end22:                                         ; preds = %for.end17
  %28 = load i16, i16* %state.addr, align 2, !dbg !7967
  %conv = sext i16 %28 to i32, !dbg !7967
  %cmp23 = icmp eq i32 %conv, 2, !dbg !7969
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !7970

if.then25:                                        ; preds = %if.end22
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7971
  %regionbase26 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 20, !dbg !7974
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase26, i32 0, i32 0, !dbg !7975
  %30 = load i8*, i8** %first27, align 8, !dbg !7975
  %31 = bitcast i8* %30 to %struct.ARegion*, !dbg !7971
  store %struct.ARegion* %31, %struct.ARegion** %ar, align 8, !dbg !7976
  br label %for.cond28, !dbg !7977

for.cond28:                                       ; preds = %for.inc31, %if.then25
  %32 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7978
  %tobool29 = icmp ne %struct.ARegion* %32, null, !dbg !7980
  br i1 %tobool29, label %for.body30, label %for.end33, !dbg !7980

for.body30:                                       ; preds = %for.cond28
  %33 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7981
  %flagfullscreen = getelementptr inbounds %struct.ARegion, %struct.ARegion* %33, i32 0, i32 18, !dbg !7983
  %34 = load i16, i16* %flagfullscreen, align 4, !dbg !7983
  %35 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7984
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %35, i32 0, i32 10, !dbg !7985
  store i16 %34, i16* %flag, align 2, !dbg !7986
  br label %for.inc31, !dbg !7987

for.inc31:                                        ; preds = %for.body30
  %36 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7988
  %next32 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %36, i32 0, i32 0, !dbg !7989
  %37 = load %struct.ARegion*, %struct.ARegion** %next32, align 8, !dbg !7989
  store %struct.ARegion* %37, %struct.ARegion** %ar, align 8, !dbg !7990
  br label %for.cond28, !dbg !7991, !llvm.loop !7992

for.end33:                                        ; preds = %for.cond28
  br label %if.end34, !dbg !7994

if.end34:                                         ; preds = %for.end33, %if.end22
  %38 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !7995
  %39 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7996
  call void @ED_area_data_swap(%struct.ScrArea* %38, %struct.ScrArea* %39), !dbg !7997
  %40 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !7998
  %flag35 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %40, i32 0, i32 14, !dbg !8000
  %41 = load i16, i16* %flag35, align 2, !dbg !8000
  %conv36 = sext i16 %41 to i32, !dbg !7998
  %and37 = and i32 %conv36, 8, !dbg !8001
  %tobool38 = icmp ne i32 %and37, 0, !dbg !8001
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !8002

if.then39:                                        ; preds = %if.end34
  %42 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8003
  %flag40 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %42, i32 0, i32 14, !dbg !8004
  %43 = load i16, i16* %flag40, align 2, !dbg !8005
  %conv41 = sext i16 %43 to i32, !dbg !8005
  %and42 = and i32 %conv41, -9, !dbg !8005
  %conv43 = trunc i32 %and42 to i16, !dbg !8005
  store i16 %conv43, i16* %flag40, align 2, !dbg !8005
  br label %if.end44, !dbg !8003

if.end44:                                         ; preds = %if.then39, %if.end34
  %44 = load %struct.ScrArea*, %struct.ScrArea** %old, align 8, !dbg !8006
  %full45 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %44, i32 0, i32 6, !dbg !8007
  store %struct.bScreen* null, %struct.bScreen** %full45, align 8, !dbg !8008
  %45 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8009
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %45, i32 0, i32 21, !dbg !8010
  %46 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8010
  %47 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8011
  %animtimer46 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %47, i32 0, i32 21, !dbg !8012
  store %struct.wmTimer* %46, %struct.wmTimer** %animtimer46, align 8, !dbg !8013
  %48 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8014
  %animtimer47 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %48, i32 0, i32 21, !dbg !8015
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer47, align 8, !dbg !8016
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8017
  %50 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8018
  call void @ED_screen_set(%struct.bContext* %49, %struct.bScreen* %50), !dbg !8019
  %51 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8020
  call void @BKE_screen_free(%struct.bScreen* %51), !dbg !8021
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8022
  %call48 = call %struct.Main* @CTX_data_main(%struct.bContext* %52), !dbg !8023
  %53 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8024
  %54 = bitcast %struct.bScreen* %53 to i8*, !dbg !8024
  call void @BKE_libblock_free(%struct.Main* %call48, i8* %54), !dbg !8025
  br label %if.end120, !dbg !8026

if.else:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %newa, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.declare(metadata [64 x i8]* %newname, metadata !8030, metadata !DIExpression()), !dbg !8031
  %55 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !8032
  %screen49 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %55, i32 0, i32 3, !dbg !8033
  %56 = load %struct.bScreen*, %struct.bScreen** %screen49, align 8, !dbg !8033
  store %struct.bScreen* %56, %struct.bScreen** %oldscreen, align 8, !dbg !8034
  %57 = load i16, i16* %state.addr, align 2, !dbg !8035
  %58 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8036
  %state50 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %58, i32 0, i32 9, !dbg !8037
  store i16 %57, i16* %state50, align 8, !dbg !8038
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %newname, i64 0, i64 0, !dbg !8039
  %59 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8040
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %59, i32 0, i32 0, !dbg !8041
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8042
  %arraydecay51 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8040
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay51, i64 2, !dbg !8043
  %call52 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* %add.ptr, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !8044
  %60 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !8045
  %61 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8046
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %61, i32 0, i32 5, !dbg !8047
  %62 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8047
  %arraydecay53 = getelementptr inbounds [64 x i8], [64 x i8]* %newname, i64 0, i64 0, !dbg !8048
  %call54 = call %struct.bScreen* @ED_screen_add(%struct.wmWindow* %60, %struct.Scene* %62, i8* %arraydecay53), !dbg !8049
  store %struct.bScreen* %call54, %struct.bScreen** %sc, align 8, !dbg !8050
  %63 = load i16, i16* %state.addr, align 2, !dbg !8051
  %64 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8052
  %state55 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %64, i32 0, i32 9, !dbg !8053
  store i16 %63, i16* %state55, align 8, !dbg !8054
  %65 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8055
  %animtimer56 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %65, i32 0, i32 21, !dbg !8056
  %66 = load %struct.wmTimer*, %struct.wmTimer** %animtimer56, align 8, !dbg !8056
  %67 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8057
  %animtimer57 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %67, i32 0, i32 21, !dbg !8058
  store %struct.wmTimer* %66, %struct.wmTimer** %animtimer57, align 8, !dbg !8059
  %68 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8060
  %animtimer58 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %68, i32 0, i32 21, !dbg !8061
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer58, align 8, !dbg !8062
  %69 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8063
  %tobool59 = icmp ne %struct.ScrArea* %69, null, !dbg !8063
  br i1 %tobool59, label %if.end63, label %if.then60, !dbg !8065

if.then60:                                        ; preds = %if.else
  %70 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8066
  %areabase61 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %70, i32 0, i32 3, !dbg !8067
  %first62 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase61, i32 0, i32 0, !dbg !8068
  %71 = load i8*, i8** %first62, align 8, !dbg !8068
  %72 = bitcast i8* %71 to %struct.ScrArea*, !dbg !8066
  store %struct.ScrArea* %72, %struct.ScrArea** %sa.addr, align 8, !dbg !8069
  br label %if.end63, !dbg !8070

if.end63:                                         ; preds = %if.then60, %if.else
  %73 = load i16, i16* %state.addr, align 2, !dbg !8071
  %conv64 = sext i16 %73 to i32, !dbg !8071
  %cmp65 = icmp eq i32 %conv64, 1, !dbg !8073
  br i1 %cmp65, label %if.then67, label %if.else78, !dbg !8074

if.then67:                                        ; preds = %if.end63
  %74 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8075
  %75 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8077
  %areabase68 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %75, i32 0, i32 3, !dbg !8078
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase68, i32 0, i32 0, !dbg !8079
  %76 = load i8*, i8** %first69, align 8, !dbg !8079
  %77 = bitcast i8* %76 to %struct.ScrArea*, !dbg !8080
  %call70 = call %struct.ScrArea* @area_split(%struct.bScreen* %74, %struct.ScrArea* %77, i8 zeroext 104, float 0x3FEFAE1480000000, i32 1), !dbg !8081
  store %struct.ScrArea* %call70, %struct.ScrArea** %newa, align 8, !dbg !8082
  %78 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8083
  %79 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8084
  call void @ED_area_newspace(%struct.bContext* %78, %struct.ScrArea* %79, i32 7), !dbg !8085
  %80 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8086
  %prev = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %80, i32 0, i32 1, !dbg !8087
  %81 = load %struct.ScrArea*, %struct.ScrArea** %prev, align 8, !dbg !8087
  store %struct.ScrArea* %81, %struct.ScrArea** %newa, align 8, !dbg !8088
  %82 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8089
  %83 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8090
  call void @ED_area_data_swap(%struct.ScrArea* %82, %struct.ScrArea* %83), !dbg !8091
  %84 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8092
  %flag71 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %84, i32 0, i32 14, !dbg !8093
  %85 = load i16, i16* %flag71, align 2, !dbg !8094
  %conv72 = sext i16 %85 to i32, !dbg !8094
  %or = or i32 %conv72, 8, !dbg !8094
  %conv73 = trunc i32 %or to i16, !dbg !8094
  store i16 %conv73, i16* %flag71, align 2, !dbg !8094
  %86 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8095
  %87 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8096
  %full74 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %87, i32 0, i32 6, !dbg !8097
  store %struct.bScreen* %86, %struct.bScreen** %full74, align 8, !dbg !8098
  %88 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8099
  %89 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8100
  %full75 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %89, i32 0, i32 6, !dbg !8101
  store %struct.bScreen* %88, %struct.bScreen** %full75, align 8, !dbg !8102
  %90 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8103
  %91 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8104
  %next76 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %91, i32 0, i32 0, !dbg !8105
  %92 = load %struct.ScrArea*, %struct.ScrArea** %next76, align 8, !dbg !8105
  %full77 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %92, i32 0, i32 6, !dbg !8106
  store %struct.bScreen* %90, %struct.bScreen** %full77, align 8, !dbg !8107
  br label %if.end119, !dbg !8108

if.else78:                                        ; preds = %if.end63
  %93 = load i16, i16* %state.addr, align 2, !dbg !8109
  %conv79 = sext i16 %93 to i32, !dbg !8109
  %cmp80 = icmp eq i32 %conv79, 2, !dbg !8111
  br i1 %cmp80, label %if.then82, label %if.else117, !dbg !8112

if.then82:                                        ; preds = %if.else78
  %94 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8113
  %areabase83 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %94, i32 0, i32 3, !dbg !8115
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase83, i32 0, i32 0, !dbg !8116
  %95 = load i8*, i8** %first84, align 8, !dbg !8116
  %96 = bitcast i8* %95 to %struct.ScrArea*, !dbg !8117
  store %struct.ScrArea* %96, %struct.ScrArea** %newa, align 8, !dbg !8118
  %97 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8119
  %98 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8120
  call void @ED_area_data_swap(%struct.ScrArea* %97, %struct.ScrArea* %98), !dbg !8121
  %99 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8122
  %flag85 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %99, i32 0, i32 14, !dbg !8123
  %100 = load i16, i16* %flag85, align 2, !dbg !8123
  %101 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8124
  %flag86 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %101, i32 0, i32 14, !dbg !8125
  store i16 %100, i16* %flag86, align 2, !dbg !8126
  %102 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8127
  %regionbase87 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %102, i32 0, i32 20, !dbg !8129
  %first88 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase87, i32 0, i32 0, !dbg !8130
  %103 = load i8*, i8** %first88, align 8, !dbg !8130
  %104 = bitcast i8* %103 to %struct.ARegion*, !dbg !8127
  store %struct.ARegion* %104, %struct.ARegion** %ar, align 8, !dbg !8131
  br label %for.cond89, !dbg !8132

for.cond89:                                       ; preds = %for.inc112, %if.then82
  %105 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8133
  %tobool90 = icmp ne %struct.ARegion* %105, null, !dbg !8135
  br i1 %tobool90, label %for.body91, label %for.end114, !dbg !8135

for.body91:                                       ; preds = %for.cond89
  %106 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8136
  %flag92 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %106, i32 0, i32 10, !dbg !8138
  %107 = load i16, i16* %flag92, align 2, !dbg !8138
  %108 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8139
  %flagfullscreen93 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %108, i32 0, i32 18, !dbg !8140
  store i16 %107, i16* %flagfullscreen93, align 4, !dbg !8141
  %109 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8142
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %109, i32 0, i32 8, !dbg !8142
  %110 = load i16, i16* %regiontype, align 2, !dbg !8142
  %conv94 = sext i16 %110 to i32, !dbg !8142
  %cmp95 = icmp eq i32 %conv94, 4, !dbg !8142
  br i1 %cmp95, label %if.then106, label %lor.lhs.false, !dbg !8142

lor.lhs.false:                                    ; preds = %for.body91
  %111 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8142
  %regiontype97 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %111, i32 0, i32 8, !dbg !8142
  %112 = load i16, i16* %regiontype97, align 2, !dbg !8142
  %conv98 = sext i16 %112 to i32, !dbg !8142
  %cmp99 = icmp eq i32 %conv98, 1, !dbg !8142
  br i1 %cmp99, label %if.then106, label %lor.lhs.false101, !dbg !8142

lor.lhs.false101:                                 ; preds = %lor.lhs.false
  %113 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8142
  %regiontype102 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %113, i32 0, i32 8, !dbg !8142
  %114 = load i16, i16* %regiontype102, align 2, !dbg !8142
  %conv103 = sext i16 %114 to i32, !dbg !8142
  %cmp104 = icmp eq i32 %conv103, 5, !dbg !8142
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !8144

if.then106:                                       ; preds = %lor.lhs.false101, %lor.lhs.false, %for.body91
  %115 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8145
  %flag107 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %115, i32 0, i32 10, !dbg !8147
  %116 = load i16, i16* %flag107, align 2, !dbg !8148
  %conv108 = sext i16 %116 to i32, !dbg !8148
  %or109 = or i32 %conv108, 1, !dbg !8148
  %conv110 = trunc i32 %or109 to i16, !dbg !8148
  store i16 %conv110, i16* %flag107, align 2, !dbg !8148
  br label %if.end111, !dbg !8149

if.end111:                                        ; preds = %if.then106, %lor.lhs.false101
  br label %for.inc112, !dbg !8150

for.inc112:                                       ; preds = %if.end111
  %117 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8151
  %next113 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %117, i32 0, i32 0, !dbg !8152
  %118 = load %struct.ARegion*, %struct.ARegion** %next113, align 8, !dbg !8152
  store %struct.ARegion* %118, %struct.ARegion** %ar, align 8, !dbg !8153
  br label %for.cond89, !dbg !8154, !llvm.loop !8155

for.end114:                                       ; preds = %for.cond89
  %119 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8157
  %120 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8158
  %full115 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %120, i32 0, i32 6, !dbg !8159
  store %struct.bScreen* %119, %struct.bScreen** %full115, align 8, !dbg !8160
  %121 = load %struct.bScreen*, %struct.bScreen** %oldscreen, align 8, !dbg !8161
  %122 = load %struct.ScrArea*, %struct.ScrArea** %newa, align 8, !dbg !8162
  %full116 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %122, i32 0, i32 6, !dbg !8163
  store %struct.bScreen* %121, %struct.bScreen** %full116, align 8, !dbg !8164
  br label %if.end118, !dbg !8165

if.else117:                                       ; preds = %if.else78
  br label %if.end118

if.end118:                                        ; preds = %if.else117, %for.end114
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then67
  %123 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8166
  %124 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8167
  call void @ED_screen_set(%struct.bContext* %123, %struct.bScreen* %124), !dbg !8168
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end44
  %125 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8169
  %126 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8170
  %areabase121 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %126, i32 0, i32 3, !dbg !8171
  %first122 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase121, i32 0, i32 0, !dbg !8172
  %127 = load i8*, i8** %first122, align 8, !dbg !8172
  %128 = bitcast i8* %127 to %struct.ScrArea*, !dbg !8170
  call void @CTX_wm_area_set(%struct.bContext* %125, %struct.ScrArea* %128), !dbg !8173
  %129 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8174
  %areabase123 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %129, i32 0, i32 3, !dbg !8175
  %first124 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase123, i32 0, i32 0, !dbg !8176
  %130 = load i8*, i8** %first124, align 8, !dbg !8176
  %131 = bitcast i8* %130 to %struct.ScrArea*, !dbg !8174
  store %struct.ScrArea* %131, %struct.ScrArea** %retval, align 8, !dbg !8177
  br label %return, !dbg !8177

return:                                           ; preds = %if.end120, %if.end21
  %132 = load %struct.ScrArea*, %struct.ScrArea** %retval, align 8, !dbg !8178
  ret %struct.ScrArea* %132, !dbg !8178
}

declare dso_local void @ED_area_newspace(%struct.bContext*, %struct.ScrArea*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_full_prevspace(%struct.bContext* %C, %struct.ScrArea* %sa) #0 !dbg !8179 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8184, metadata !DIExpression()), !dbg !8185
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8186
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8187
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8185
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8188
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8189
  call void @ED_area_prevspace(%struct.bContext* %1, %struct.ScrArea* %2), !dbg !8190
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8191
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 6, !dbg !8193
  %4 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !8193
  %tobool = icmp ne %struct.bScreen* %4, null, !dbg !8191
  br i1 %tobool, label %if.then, label %if.end, !dbg !8194

if.then:                                          ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8195
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8196
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8197
  %call1 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %5, %struct.wmWindow* %6, %struct.ScrArea* %7, i16 signext 1), !dbg !8198
  br label %if.end, !dbg !8198

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8199
}

declare dso_local void @ED_area_prevspace(%struct.bContext*, %struct.ScrArea*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_full_restore(%struct.bContext* %C, %struct.ScrArea* %sa) #0 !dbg !8200 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %state = alloca i16, align 2
  %sima = alloca %struct.SpaceImage*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8205, metadata !DIExpression()), !dbg !8206
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8207
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8208
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8206
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !8209, metadata !DIExpression()), !dbg !8210
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8211
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %1, i32 0, i32 19, !dbg !8212
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !8213
  %2 = load i8*, i8** %first, align 8, !dbg !8213
  %3 = bitcast i8* %2 to %struct.SpaceLink*, !dbg !8211
  store %struct.SpaceLink* %3, %struct.SpaceLink** %sl, align 8, !dbg !8210
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !8214, metadata !DIExpression()), !dbg !8215
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8216
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %4), !dbg !8217
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !8215
  call void @llvm.dbg.declare(metadata i16* %state, metadata !8218, metadata !DIExpression()), !dbg !8219
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !8220
  %tobool = icmp ne %struct.bScreen* %5, null, !dbg !8220
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8220

cond.true:                                        ; preds = %entry
  %6 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !8221
  %state2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 9, !dbg !8222
  %7 = load i16, i16* %state2, align 8, !dbg !8222
  %conv = sext i16 %7 to i32, !dbg !8221
  br label %cond.end, !dbg !8220

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8220

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 1, %cond.false ], !dbg !8220
  %conv3 = trunc i32 %cond to i16, !dbg !8223
  store i16 %conv3, i16* %state, align 2, !dbg !8219
  %8 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8224
  %next = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %8, i32 0, i32 0, !dbg !8226
  %9 = load %struct.SpaceLink*, %struct.SpaceLink** %next, align 8, !dbg !8226
  %tobool4 = icmp ne %struct.SpaceLink* %9, null, !dbg !8224
  br i1 %tobool4, label %if.then, label %if.else25, !dbg !8227

if.then:                                          ; preds = %cond.end
  %10 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8228
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %10, i32 0, i32 3, !dbg !8231
  %11 = load i32, i32* %spacetype, align 8, !dbg !8231
  %cmp = icmp eq i32 %11, 6, !dbg !8232
  br i1 %cmp, label %if.then6, label %if.else16, !dbg !8233

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !8234, metadata !DIExpression()), !dbg !8315
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8316
  %spacedata7 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 19, !dbg !8317
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata7, i32 0, i32 0, !dbg !8318
  %13 = load i8*, i8** %first8, align 8, !dbg !8318
  %14 = bitcast i8* %13 to %struct.SpaceImage*, !dbg !8316
  store %struct.SpaceImage* %14, %struct.SpaceImage** %sima, align 8, !dbg !8315
  %15 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8319
  %flag = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %15, i32 0, i32 4, !dbg !8321
  %16 = load i32, i32* %flag, align 4, !dbg !8321
  %and = and i32 %16, 98304, !dbg !8322
  %tobool9 = icmp ne i32 %and, 0, !dbg !8322
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !8323

if.then10:                                        ; preds = %if.then6
  %17 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8324
  %flag11 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %17, i32 0, i32 4, !dbg !8326
  %18 = load i32, i32* %flag11, align 4, !dbg !8327
  %and12 = and i32 %18, -32769, !dbg !8327
  store i32 %and12, i32* %flag11, align 4, !dbg !8327
  %19 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8328
  %flag13 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %19, i32 0, i32 4, !dbg !8329
  %20 = load i32, i32* %flag13, align 4, !dbg !8330
  %and14 = and i32 %20, -65537, !dbg !8330
  store i32 %and14, i32* %flag13, align 4, !dbg !8330
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8331
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8332
  call void @ED_screen_full_prevspace(%struct.bContext* %21, %struct.ScrArea* %22), !dbg !8333
  br label %if.end, !dbg !8334

if.else:                                          ; preds = %if.then6
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8335
  %24 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8336
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8337
  %26 = load i16, i16* %state, align 2, !dbg !8338
  %call15 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %23, %struct.wmWindow* %24, %struct.ScrArea* %25, i16 signext %26), !dbg !8339
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  br label %if.end24, !dbg !8340

if.else16:                                        ; preds = %if.then
  %27 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !8341
  %spacetype17 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %27, i32 0, i32 3, !dbg !8343
  %28 = load i32, i32* %spacetype17, align 8, !dbg !8343
  %cmp18 = icmp eq i32 %28, 5, !dbg !8344
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !8345

if.then20:                                        ; preds = %if.else16
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8346
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8348
  call void @ED_screen_full_prevspace(%struct.bContext* %29, %struct.ScrArea* %30), !dbg !8349
  br label %if.end23, !dbg !8350

if.else21:                                        ; preds = %if.else16
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8351
  %32 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8353
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8354
  %34 = load i16, i16* %state, align 2, !dbg !8355
  %call22 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %31, %struct.wmWindow* %32, %struct.ScrArea* %33, i16 signext %34), !dbg !8356
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  br label %if.end27, !dbg !8357

if.else25:                                        ; preds = %cond.end
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8358
  %36 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8360
  %37 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8361
  %38 = load i16, i16* %state, align 2, !dbg !8362
  %call26 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %35, %struct.wmWindow* %36, %struct.ScrArea* %37, i16 signext %38), !dbg !8363
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.end24
  ret void, !dbg !8364
}

declare dso_local void @uiFreeBlocks(%struct.bContext*, %struct.ListBase*) #2

declare dso_local void @ED_area_headerprint(%struct.ScrArea*, i8*) #2

declare dso_local void @ED_area_data_swap(%struct.ScrArea*, %struct.ScrArea*) #2

declare dso_local void @BKE_screen_free(%struct.bScreen*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_refresh_viewport_fps(%struct.bContext* %C) #0 !dbg !8365 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %animtimer = alloca %struct.wmTimer*, align 8
  %scene = alloca %struct.Scene*, align 8
  %fpsi = alloca %struct.ScreenFrameRateInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %animtimer, metadata !8370, metadata !DIExpression()), !dbg !8371
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8372
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !8373
  %animtimer1 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call, i32 0, i32 21, !dbg !8374
  %1 = load %struct.wmTimer*, %struct.wmTimer** %animtimer1, align 8, !dbg !8374
  store %struct.wmTimer* %1, %struct.wmTimer** %animtimer, align 8, !dbg !8371
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8375, metadata !DIExpression()), !dbg !8376
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8377
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !8378
  store %struct.Scene* %call2, %struct.Scene** %scene, align 8, !dbg !8376
  %3 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8379
  %tobool = icmp ne %struct.wmTimer* %3, null, !dbg !8379
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8381

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !8382
  %and = and i32 %4, 2097152, !dbg !8383
  %tobool3 = icmp ne i32 %and, 0, !dbg !8383
  br i1 %tobool3, label %if.then, label %if.else, !dbg !8384

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ScreenFrameRateInfo** %fpsi, metadata !8385, metadata !DIExpression()), !dbg !8396
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8397
  %fps_info = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 30, !dbg !8398
  %6 = load i8*, i8** %fps_info, align 8, !dbg !8398
  %7 = bitcast i8* %6 to %struct.ScreenFrameRateInfo*, !dbg !8397
  store %struct.ScreenFrameRateInfo* %7, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8396
  %8 = load %struct.ScreenFrameRateInfo*, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8399
  %cmp = icmp eq %struct.ScreenFrameRateInfo* %8, null, !dbg !8401
  br i1 %cmp, label %if.then4, label %if.end, !dbg !8402

if.then4:                                         ; preds = %if.then
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8403
  %call5 = call i8* %9(i64 56, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)), !dbg !8403
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8404
  %fps_info6 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 30, !dbg !8405
  store i8* %call5, i8** %fps_info6, align 8, !dbg !8406
  %11 = bitcast i8* %call5 to %struct.ScreenFrameRateInfo*, !dbg !8404
  store %struct.ScreenFrameRateInfo* %11, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8407
  br label %if.end, !dbg !8408

if.end:                                           ; preds = %if.then4, %if.then
  %12 = load %struct.ScreenFrameRateInfo*, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8409
  %lredrawtime = getelementptr inbounds %struct.ScreenFrameRateInfo, %struct.ScreenFrameRateInfo* %12, i32 0, i32 1, !dbg !8410
  %13 = load double, double* %lredrawtime, align 8, !dbg !8410
  %14 = load %struct.ScreenFrameRateInfo*, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8411
  %redrawtime = getelementptr inbounds %struct.ScreenFrameRateInfo, %struct.ScreenFrameRateInfo* %14, i32 0, i32 0, !dbg !8412
  store double %13, double* %redrawtime, align 8, !dbg !8413
  %15 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8414
  %ltime = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %15, i32 0, i32 8, !dbg !8415
  %16 = load double, double* %ltime, align 8, !dbg !8415
  %17 = load %struct.ScreenFrameRateInfo*, %struct.ScreenFrameRateInfo** %fpsi, align 8, !dbg !8416
  %lredrawtime7 = getelementptr inbounds %struct.ScreenFrameRateInfo, %struct.ScreenFrameRateInfo* %17, i32 0, i32 1, !dbg !8417
  store double %16, double* %lredrawtime7, align 8, !dbg !8418
  br label %if.end14, !dbg !8419

if.else:                                          ; preds = %land.lhs.true, %entry
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8420
  %fps_info8 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 30, !dbg !8423
  %19 = load i8*, i8** %fps_info8, align 8, !dbg !8423
  %tobool9 = icmp ne i8* %19, null, !dbg !8420
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !8424

if.then10:                                        ; preds = %if.else
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8425
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8426
  %fps_info11 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 30, !dbg !8427
  %22 = load i8*, i8** %fps_info11, align 8, !dbg !8427
  call void %20(i8* %22), !dbg !8425
  br label %if.end12, !dbg !8425

if.end12:                                         ; preds = %if.then10, %if.else
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8428
  %fps_info13 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 30, !dbg !8429
  store i8* null, i8** %fps_info13, align 8, !dbg !8430
  br label %if.end14

if.end14:                                         ; preds = %if.end12, %if.end
  ret void, !dbg !8431
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_animation_timer(%struct.bContext* %C, i32 %redraws, i32 %refresh, i32 %sync, i32 %enable) #0 !dbg !8432 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %redraws.addr = alloca i32, align 4
  %refresh.addr = alloca i32, align 4
  %sync.addr = alloca i32, align 4
  %enable.addr = alloca i32, align 4
  %screen = alloca %struct.bScreen*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %scene = alloca %struct.Scene*, align 8
  %stopscreen = alloca %struct.bScreen*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i32 %redraws, i32* %redraws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %redraws.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  store i32 %refresh, i32* %refresh.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %refresh.addr, metadata !8439, metadata !DIExpression()), !dbg !8440
  store i32 %sync, i32* %sync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !8445, metadata !DIExpression()), !dbg !8446
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8447
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !8448
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !8446
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !8449, metadata !DIExpression()), !dbg !8450
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8451
  %call1 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %1), !dbg !8452
  store %struct.wmWindowManager* %call1, %struct.wmWindowManager** %wm, align 8, !dbg !8450
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8453, metadata !DIExpression()), !dbg !8454
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8455
  %call2 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !8456
  store %struct.wmWindow* %call2, %struct.wmWindow** %win, align 8, !dbg !8454
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8457, metadata !DIExpression()), !dbg !8458
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8459
  %call3 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %3), !dbg !8460
  store %struct.Scene* %call3, %struct.Scene** %scene, align 8, !dbg !8458
  call void @llvm.dbg.declare(metadata %struct.bScreen** %stopscreen, metadata !8461, metadata !DIExpression()), !dbg !8462
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8463
  %call4 = call %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager* %4), !dbg !8464
  store %struct.bScreen* %call4, %struct.bScreen** %stopscreen, align 8, !dbg !8462
  %5 = load %struct.bScreen*, %struct.bScreen** %stopscreen, align 8, !dbg !8465
  %tobool = icmp ne %struct.bScreen* %5, null, !dbg !8465
  br i1 %tobool, label %if.then, label %if.end, !dbg !8467

if.then:                                          ; preds = %entry
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8468
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8470
  %8 = load %struct.bScreen*, %struct.bScreen** %stopscreen, align 8, !dbg !8471
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 21, !dbg !8472
  %9 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8472
  call void @WM_event_remove_timer(%struct.wmWindowManager* %6, %struct.wmWindow* %7, %struct.wmTimer* %9), !dbg !8473
  %10 = load %struct.bScreen*, %struct.bScreen** %stopscreen, align 8, !dbg !8474
  %animtimer5 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 21, !dbg !8475
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer5, align 8, !dbg !8476
  br label %if.end, !dbg !8477

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %enable.addr, align 4, !dbg !8478
  %tobool6 = icmp ne i32 %11, 0, !dbg !8478
  br i1 %tobool6, label %if.then7, label %if.end74, !dbg !8480

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !8481, metadata !DIExpression()), !dbg !8494
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8495
  %call8 = call i8* %12(i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)), !dbg !8495
  %13 = bitcast i8* %call8 to %struct.ScreenAnimData*, !dbg !8495
  store %struct.ScreenAnimData* %13, %struct.ScreenAnimData** %sad, align 8, !dbg !8494
  %14 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8496
  %15 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8497
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8498
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !8498
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !8498
  %17 = load i16, i16* %frs_sec, align 4, !dbg !8498
  %conv = sitofp i16 %17 to double, !dbg !8498
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8498
  %r9 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 22, !dbg !8498
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r9, i32 0, i32 65, !dbg !8498
  %19 = load float, float* %frs_sec_base, align 4, !dbg !8498
  %conv10 = fpext float %19 to double, !dbg !8498
  %div = fdiv double %conv, %conv10, !dbg !8498
  %div11 = fdiv double 1.000000e+00, %div, !dbg !8499
  %call12 = call %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager* %14, %struct.wmWindow* %15, i32 273, double %div11), !dbg !8500
  %20 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !8501
  %animtimer13 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %20, i32 0, i32 21, !dbg !8502
  store %struct.wmTimer* %call12, %struct.wmTimer** %animtimer13, align 8, !dbg !8503
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8504
  %call14 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %21), !dbg !8505
  %22 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8506
  %ar = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %22, i32 0, i32 0, !dbg !8507
  store %struct.ARegion* %call14, %struct.ARegion** %ar, align 8, !dbg !8508
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8509
  %r15 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !8509
  %flag = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 13, !dbg !8509
  %24 = load i16, i16* %flag, align 8, !dbg !8509
  %conv16 = sext i16 %24 to i32, !dbg !8509
  %and = and i32 %conv16, 1, !dbg !8509
  %tobool17 = icmp ne i32 %and, 0, !dbg !8509
  br i1 %tobool17, label %if.then18, label %if.else33, !dbg !8511

if.then18:                                        ; preds = %if.then7
  %25 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8512
  %r19 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 22, !dbg !8515
  %psfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r19, i32 0, i32 9, !dbg !8516
  %26 = load i32, i32* %psfra, align 8, !dbg !8516
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8517
  %r20 = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 22, !dbg !8518
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r20, i32 0, i32 5, !dbg !8519
  %28 = load i32, i32* %cfra, align 8, !dbg !8519
  %cmp = icmp sgt i32 %26, %28, !dbg !8520
  br i1 %cmp, label %if.then22, label %if.else, !dbg !8521

if.then22:                                        ; preds = %if.then18
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8522
  %r23 = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 22, !dbg !8524
  %cfra24 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r23, i32 0, i32 5, !dbg !8525
  %30 = load i32, i32* %cfra24, align 8, !dbg !8525
  %31 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8526
  %sfra = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %31, i32 0, i32 4, !dbg !8527
  store i32 %30, i32* %sfra, align 8, !dbg !8528
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8529
  %r25 = getelementptr inbounds %struct.Scene, %struct.Scene* %32, i32 0, i32 22, !dbg !8530
  %psfra26 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r25, i32 0, i32 9, !dbg !8531
  %33 = load i32, i32* %psfra26, align 8, !dbg !8531
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8532
  %r27 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 22, !dbg !8533
  %cfra28 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r27, i32 0, i32 5, !dbg !8534
  store i32 %33, i32* %cfra28, align 8, !dbg !8535
  br label %if.end32, !dbg !8536

if.else:                                          ; preds = %if.then18
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8537
  %r29 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 22, !dbg !8538
  %cfra30 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r29, i32 0, i32 5, !dbg !8539
  %36 = load i32, i32* %cfra30, align 8, !dbg !8539
  %37 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8540
  %sfra31 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %37, i32 0, i32 4, !dbg !8541
  store i32 %36, i32* %sfra31, align 8, !dbg !8542
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then22
  br label %if.end53, !dbg !8543

if.else33:                                        ; preds = %if.then7
  %38 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8544
  %r34 = getelementptr inbounds %struct.Scene, %struct.Scene* %38, i32 0, i32 22, !dbg !8547
  %sfra35 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r34, i32 0, i32 6, !dbg !8548
  %39 = load i32, i32* %sfra35, align 4, !dbg !8548
  %40 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8549
  %r36 = getelementptr inbounds %struct.Scene, %struct.Scene* %40, i32 0, i32 22, !dbg !8550
  %cfra37 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r36, i32 0, i32 5, !dbg !8551
  %41 = load i32, i32* %cfra37, align 8, !dbg !8551
  %cmp38 = icmp sgt i32 %39, %41, !dbg !8552
  br i1 %cmp38, label %if.then40, label %if.else48, !dbg !8553

if.then40:                                        ; preds = %if.else33
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8554
  %r41 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !8556
  %cfra42 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r41, i32 0, i32 5, !dbg !8557
  %43 = load i32, i32* %cfra42, align 8, !dbg !8557
  %44 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8558
  %sfra43 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %44, i32 0, i32 4, !dbg !8559
  store i32 %43, i32* %sfra43, align 8, !dbg !8560
  %45 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8561
  %r44 = getelementptr inbounds %struct.Scene, %struct.Scene* %45, i32 0, i32 22, !dbg !8562
  %sfra45 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r44, i32 0, i32 6, !dbg !8563
  %46 = load i32, i32* %sfra45, align 4, !dbg !8563
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8564
  %r46 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 22, !dbg !8565
  %cfra47 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r46, i32 0, i32 5, !dbg !8566
  store i32 %46, i32* %cfra47, align 8, !dbg !8567
  br label %if.end52, !dbg !8568

if.else48:                                        ; preds = %if.else33
  %48 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8569
  %r49 = getelementptr inbounds %struct.Scene, %struct.Scene* %48, i32 0, i32 22, !dbg !8570
  %cfra50 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r49, i32 0, i32 5, !dbg !8571
  %49 = load i32, i32* %cfra50, align 8, !dbg !8571
  %50 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8572
  %sfra51 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %50, i32 0, i32 4, !dbg !8573
  store i32 %49, i32* %sfra51, align 8, !dbg !8574
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.then40
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end32
  %51 = load i32, i32* %redraws.addr, align 4, !dbg !8575
  %conv54 = trunc i32 %51 to i16, !dbg !8575
  %52 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8576
  %redraws55 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %52, i32 0, i32 1, !dbg !8577
  store i16 %conv54, i16* %redraws55, align 8, !dbg !8578
  %53 = load i32, i32* %refresh.addr, align 4, !dbg !8579
  %conv56 = trunc i32 %53 to i16, !dbg !8579
  %54 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8580
  %refresh57 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %54, i32 0, i32 2, !dbg !8581
  store i16 %conv56, i16* %refresh57, align 2, !dbg !8582
  %55 = load i32, i32* %enable.addr, align 4, !dbg !8583
  %cmp58 = icmp slt i32 %55, 0, !dbg !8584
  %56 = zext i1 %cmp58 to i64, !dbg !8585
  %cond = select i1 %cmp58, i32 1, i32 0, !dbg !8585
  %57 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8586
  %flag60 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %57, i32 0, i32 3, !dbg !8587
  %58 = load i16, i16* %flag60, align 4, !dbg !8588
  %conv61 = sext i16 %58 to i32, !dbg !8588
  %or = or i32 %conv61, %cond, !dbg !8588
  %conv62 = trunc i32 %or to i16, !dbg !8588
  store i16 %conv62, i16* %flag60, align 4, !dbg !8588
  %59 = load i32, i32* %sync.addr, align 4, !dbg !8589
  %cmp63 = icmp eq i32 %59, 0, !dbg !8590
  br i1 %cmp63, label %cond.true, label %cond.false, !dbg !8591

cond.true:                                        ; preds = %if.end53
  br label %cond.end, !dbg !8591

cond.false:                                       ; preds = %if.end53
  %60 = load i32, i32* %sync.addr, align 4, !dbg !8592
  %cmp65 = icmp eq i32 %60, 1, !dbg !8593
  %61 = zext i1 %cmp65 to i64, !dbg !8594
  %cond67 = select i1 %cmp65, i32 4, i32 0, !dbg !8594
  br label %cond.end, !dbg !8591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond68 = phi i32 [ 8, %cond.true ], [ %cond67, %cond.false ], !dbg !8591
  %62 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8595
  %flag69 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %62, i32 0, i32 3, !dbg !8596
  %63 = load i16, i16* %flag69, align 4, !dbg !8597
  %conv70 = sext i16 %63 to i32, !dbg !8597
  %or71 = or i32 %conv70, %cond68, !dbg !8597
  %conv72 = trunc i32 %or71 to i16, !dbg !8597
  store i16 %conv72, i16* %flag69, align 4, !dbg !8597
  %64 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8598
  %65 = bitcast %struct.ScreenAnimData* %64 to i8*, !dbg !8598
  %66 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !8599
  %animtimer73 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %66, i32 0, i32 21, !dbg !8600
  %67 = load %struct.wmTimer*, %struct.wmTimer** %animtimer73, align 8, !dbg !8600
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %67, i32 0, i32 5, !dbg !8601
  store i8* %65, i8** %customdata, align 8, !dbg !8602
  br label %if.end74, !dbg !8603

if.end74:                                         ; preds = %cond.end, %if.end
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8604
  call void @WM_event_add_notifier(%struct.bContext* %68, i32 50593792, i8* null), !dbg !8605
  ret void, !dbg !8606
}

declare dso_local %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager*) #2

declare dso_local %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager*, %struct.wmWindow*, i32, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screen_animation_timer_update(%struct.bScreen* %screen, i32 %redraws, i32 %refresh) #0 !dbg !8607 {
entry:
  %screen.addr = alloca %struct.bScreen*, align 8
  %redraws.addr = alloca i32, align 4
  %refresh.addr = alloca i32, align 4
  %wt = alloca %struct.wmTimer*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store i32 %redraws, i32* %redraws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %redraws.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store i32 %refresh, i32* %refresh.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %refresh.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  %0 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !8614
  %tobool = icmp ne %struct.bScreen* %0, null, !dbg !8614
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !8616

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !8617
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %1, i32 0, i32 21, !dbg !8618
  %2 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8618
  %tobool1 = icmp ne %struct.wmTimer* %2, null, !dbg !8617
  br i1 %tobool1, label %if.then, label %if.end9, !dbg !8619

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %wt, metadata !8620, metadata !DIExpression()), !dbg !8622
  %3 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !8623
  %animtimer2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 21, !dbg !8624
  %4 = load %struct.wmTimer*, %struct.wmTimer** %animtimer2, align 8, !dbg !8624
  store %struct.wmTimer* %4, %struct.wmTimer** %wt, align 8, !dbg !8622
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !8625, metadata !DIExpression()), !dbg !8626
  %5 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !8627
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %5, i32 0, i32 5, !dbg !8628
  %6 = load i8*, i8** %customdata, align 8, !dbg !8628
  %7 = bitcast i8* %6 to %struct.ScreenAnimData*, !dbg !8627
  store %struct.ScreenAnimData* %7, %struct.ScreenAnimData** %sad, align 8, !dbg !8626
  %8 = load i32, i32* %redraws.addr, align 4, !dbg !8629
  %conv = trunc i32 %8 to i16, !dbg !8629
  %9 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8630
  %redraws3 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %9, i32 0, i32 1, !dbg !8631
  store i16 %conv, i16* %redraws3, align 8, !dbg !8632
  %10 = load i32, i32* %refresh.addr, align 4, !dbg !8633
  %conv4 = trunc i32 %10 to i16, !dbg !8633
  %11 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8634
  %refresh5 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %11, i32 0, i32 2, !dbg !8635
  store i16 %conv4, i16* %refresh5, align 2, !dbg !8636
  %12 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8637
  %ar = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %12, i32 0, i32 0, !dbg !8638
  store %struct.ARegion* null, %struct.ARegion** %ar, align 8, !dbg !8639
  %13 = load i32, i32* %redraws.addr, align 4, !dbg !8640
  %and = and i32 %13, 1, !dbg !8642
  %tobool6 = icmp ne i32 %and, 0, !dbg !8642
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !8643

if.then7:                                         ; preds = %if.then
  %14 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !8644
  %call = call %struct.ARegion* @time_top_left_3dwindow(%struct.bScreen* %14), !dbg !8645
  %15 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !8646
  %ar8 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %15, i32 0, i32 0, !dbg !8647
  store %struct.ARegion* %call, %struct.ARegion** %ar8, align 8, !dbg !8648
  br label %if.end, !dbg !8646

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end9, !dbg !8649

if.end9:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !8650
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ARegion* @time_top_left_3dwindow(%struct.bScreen* %screen) #0 !dbg !8651 {
entry:
  %screen.addr = alloca %struct.bScreen*, align 8
  %aret = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %min = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata %struct.ARegion** %aret, metadata !8656, metadata !DIExpression()), !dbg !8657
  store %struct.ARegion* null, %struct.ARegion** %aret, align 8, !dbg !8657
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8658, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %min, metadata !8660, metadata !DIExpression()), !dbg !8661
  store i32 10000, i32* %min, align 4, !dbg !8661
  %0 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !8662
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 3, !dbg !8664
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !8665
  %1 = load i8*, i8** %first, align 8, !dbg !8665
  %2 = bitcast i8* %1 to %struct.ScrArea*, !dbg !8662
  store %struct.ScrArea* %2, %struct.ScrArea** %sa, align 8, !dbg !8666
  br label %for.cond, !dbg !8667

for.cond:                                         ; preds = %for.inc21, %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8668
  %tobool = icmp ne %struct.ScrArea* %3, null, !dbg !8670
  br i1 %tobool, label %for.body, label %for.end23, !dbg !8670

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8671
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 8, !dbg !8674
  %5 = load i8, i8* %spacetype, align 8, !dbg !8674
  %conv = zext i8 %5 to i32, !dbg !8671
  %cmp = icmp eq i32 %conv, 1, !dbg !8675
  br i1 %cmp, label %if.then, label %if.end20, !dbg !8676

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8677, metadata !DIExpression()), !dbg !8679
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8680
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 20, !dbg !8682
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !8683
  %7 = load i8*, i8** %first2, align 8, !dbg !8683
  %8 = bitcast i8* %7 to %struct.ARegion*, !dbg !8680
  store %struct.ARegion* %8, %struct.ARegion** %ar, align 8, !dbg !8684
  br label %for.cond3, !dbg !8685

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8686
  %tobool4 = icmp ne %struct.ARegion* %9, null, !dbg !8688
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !8688

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8689
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 8, !dbg !8692
  %11 = load i16, i16* %regiontype, align 2, !dbg !8692
  %conv6 = sext i16 %11 to i32, !dbg !8689
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !8693
  br i1 %cmp7, label %if.then9, label %if.end19, !dbg !8694

if.then9:                                         ; preds = %for.body5
  %12 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8695
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 3, !dbg !8698
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !8699
  %13 = load i32, i32* %xmin, align 8, !dbg !8699
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8700
  %winrct10 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %14, i32 0, i32 3, !dbg !8701
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct10, i32 0, i32 2, !dbg !8702
  %15 = load i32, i32* %ymin, align 8, !dbg !8702
  %sub = sub nsw i32 %13, %15, !dbg !8703
  %16 = load i32, i32* %min, align 4, !dbg !8704
  %cmp11 = icmp slt i32 %sub, %16, !dbg !8705
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8706

if.then13:                                        ; preds = %if.then9
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8707
  store %struct.ARegion* %17, %struct.ARegion** %aret, align 8, !dbg !8709
  %18 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8710
  %winrct14 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %18, i32 0, i32 3, !dbg !8711
  %xmin15 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct14, i32 0, i32 0, !dbg !8712
  %19 = load i32, i32* %xmin15, align 8, !dbg !8712
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8713
  %winrct16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 3, !dbg !8714
  %ymin17 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct16, i32 0, i32 2, !dbg !8715
  %21 = load i32, i32* %ymin17, align 8, !dbg !8715
  %sub18 = sub nsw i32 %19, %21, !dbg !8716
  store i32 %sub18, i32* %min, align 4, !dbg !8717
  br label %if.end, !dbg !8718

if.end:                                           ; preds = %if.then13, %if.then9
  br label %if.end19, !dbg !8719

if.end19:                                         ; preds = %if.end, %for.body5
  br label %for.inc, !dbg !8720

for.inc:                                          ; preds = %if.end19
  %22 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8721
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 0, !dbg !8722
  %23 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !8722
  store %struct.ARegion* %23, %struct.ARegion** %ar, align 8, !dbg !8723
  br label %for.cond3, !dbg !8724, !llvm.loop !8725

for.end:                                          ; preds = %for.cond3
  br label %if.end20, !dbg !8727

if.end20:                                         ; preds = %for.end, %for.body
  br label %for.inc21, !dbg !8728

for.inc21:                                        ; preds = %if.end20
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8729
  %next22 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %24, i32 0, i32 0, !dbg !8730
  %25 = load %struct.ScrArea*, %struct.ScrArea** %next22, align 8, !dbg !8730
  store %struct.ScrArea* %25, %struct.ScrArea** %sa, align 8, !dbg !8731
  br label %for.cond, !dbg !8732, !llvm.loop !8733

for.end23:                                        ; preds = %for.cond
  %26 = load %struct.ARegion*, %struct.ARegion** %aret, align 8, !dbg !8735
  ret %struct.ARegion* %26, !dbg !8736
}

declare dso_local %struct.Object* @BKE_scene_camera_switch_find(%struct.Scene*) #2

declare dso_local void @BKE_screen_view3d_scene_sync(%struct.bScreen*) #2

declare dso_local void @ED_clip_update_frame(%struct.Main*, i32) #2

declare dso_local i32 @BKE_screen_visible_layers(%struct.bScreen*, %struct.Scene*) #2

declare dso_local void @BKE_scene_update_for_newframe(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32) #2

declare dso_local i32 @ntreeCompositTagAnimated(%struct.bNodeTree*) #2

declare dso_local i32 @ntreeTexTagAnimated(%struct.bNodeTree*) #2

declare dso_local i32 @ED_area_headersize() #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local void @BKE_screen_area_free(%struct.ScrArea*) #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !8737 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8744
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !8745
  store i8* null, i8** %last, align 8, !dbg !8746
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8747
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !8748
  store i8* null, i8** %first, align 8, !dbg !8749
  ret void, !dbg !8750
}

declare dso_local void @WM_cursor_set(%struct.wmWindow*, i32) #2

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @glLineWidth(float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @drawscredge_area_draw(i32 %sizex, i32 %sizey, i32 %x1, i32 %y1, i32 %x2, i32 %y2, i32 %a) #0 !dbg !8751 {
entry:
  %sizex.addr = alloca i32, align 4
  %sizey.addr = alloca i32, align 4
  %x1.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %x2.addr = alloca i32, align 4
  %y2.addr = alloca i32, align 4
  %a.addr = alloca i32, align 4
  store i32 %sizex, i32* %sizex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizex.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  store i32 %sizey, i32* %sizey.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizey.addr, metadata !8756, metadata !DIExpression()), !dbg !8757
  store i32 %x1, i32* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x1.addr, metadata !8758, metadata !DIExpression()), !dbg !8759
  store i32 %y1, i32* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y1.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  store i32 %x2, i32* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x2.addr, metadata !8762, metadata !DIExpression()), !dbg !8763
  store i32 %y2, i32* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y2.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8766, metadata !DIExpression()), !dbg !8767
  %0 = load i32, i32* %x2.addr, align 4, !dbg !8768
  %1 = load i32, i32* %sizex.addr, align 4, !dbg !8770
  %sub = sub nsw i32 %1, 1, !dbg !8771
  %cmp = icmp slt i32 %0, %sub, !dbg !8772
  br i1 %cmp, label %if.then, label %if.end, !dbg !8773

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %x2.addr, align 4, !dbg !8774
  %3 = load i32, i32* %a.addr, align 4, !dbg !8775
  %add = add nsw i32 %2, %3, !dbg !8776
  %4 = load i32, i32* %y1.addr, align 4, !dbg !8777
  %5 = load i32, i32* %x2.addr, align 4, !dbg !8778
  %6 = load i32, i32* %a.addr, align 4, !dbg !8779
  %add1 = add nsw i32 %5, %6, !dbg !8780
  %7 = load i32, i32* %y2.addr, align 4, !dbg !8781
  call void @sdrawline(i32 %add, i32 %4, i32 %add1, i32 %7), !dbg !8782
  br label %if.end, !dbg !8782

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %x1.addr, align 4, !dbg !8783
  %cmp2 = icmp sgt i32 %8, 0, !dbg !8785
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !8786

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* %x1.addr, align 4, !dbg !8787
  %10 = load i32, i32* %a.addr, align 4, !dbg !8788
  %add4 = add nsw i32 %9, %10, !dbg !8789
  %11 = load i32, i32* %y1.addr, align 4, !dbg !8790
  %12 = load i32, i32* %x1.addr, align 4, !dbg !8791
  %13 = load i32, i32* %a.addr, align 4, !dbg !8792
  %add5 = add nsw i32 %12, %13, !dbg !8793
  %14 = load i32, i32* %y2.addr, align 4, !dbg !8794
  call void @sdrawline(i32 %add4, i32 %11, i32 %add5, i32 %14), !dbg !8795
  br label %if.end6, !dbg !8795

if.end6:                                          ; preds = %if.then3, %if.end
  %15 = load i32, i32* %y2.addr, align 4, !dbg !8796
  %16 = load i32, i32* %sizey.addr, align 4, !dbg !8798
  %sub7 = sub nsw i32 %16, 1, !dbg !8799
  %cmp8 = icmp slt i32 %15, %sub7, !dbg !8800
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8801

if.then9:                                         ; preds = %if.end6
  %17 = load i32, i32* %x1.addr, align 4, !dbg !8802
  %18 = load i32, i32* %y2.addr, align 4, !dbg !8803
  %19 = load i32, i32* %a.addr, align 4, !dbg !8804
  %add10 = add nsw i32 %18, %19, !dbg !8805
  %20 = load i32, i32* %x2.addr, align 4, !dbg !8806
  %21 = load i32, i32* %y2.addr, align 4, !dbg !8807
  %22 = load i32, i32* %a.addr, align 4, !dbg !8808
  %add11 = add nsw i32 %21, %22, !dbg !8809
  call void @sdrawline(i32 %17, i32 %add10, i32 %20, i32 %add11), !dbg !8810
  br label %if.end12, !dbg !8810

if.end12:                                         ; preds = %if.then9, %if.end6
  %23 = load i32, i32* %y1.addr, align 4, !dbg !8811
  %cmp13 = icmp sgt i32 %23, 0, !dbg !8813
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !8814

if.then14:                                        ; preds = %if.end12
  %24 = load i32, i32* %x1.addr, align 4, !dbg !8815
  %25 = load i32, i32* %y1.addr, align 4, !dbg !8816
  %26 = load i32, i32* %a.addr, align 4, !dbg !8817
  %add15 = add nsw i32 %25, %26, !dbg !8818
  %27 = load i32, i32* %x2.addr, align 4, !dbg !8819
  %28 = load i32, i32* %y1.addr, align 4, !dbg !8820
  %29 = load i32, i32* %a.addr, align 4, !dbg !8821
  %add16 = add nsw i32 %28, %29, !dbg !8822
  call void @sdrawline(i32 %24, i32 %add15, i32 %27, i32 %add16), !dbg !8823
  br label %if.end17, !dbg !8823

if.end17:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !8824
}

declare dso_local void @glBlendFunc(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @draw_join_shape(%struct.ScrArea* %sa, i8 zeroext %dir) #0 !dbg !8825 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  %0 = load i8, i8* %dir.addr, align 1, !dbg !8830
  %conv = zext i8 %0 to i32, !dbg !8830
  %cmp = icmp eq i32 %conv, 117, !dbg !8832
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8833

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %dir.addr, align 1, !dbg !8834
  %conv2 = zext i8 %1 to i32, !dbg !8834
  %cmp3 = icmp eq i32 %conv2, 100, !dbg !8835
  br i1 %cmp3, label %if.then, label %if.else, !dbg !8836

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8837
  %3 = load i8, i8* %dir.addr, align 1, !dbg !8838
  call void @draw_vertical_join_shape(%struct.ScrArea* %2, i8 zeroext %3), !dbg !8839
  br label %if.end, !dbg !8839

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8840
  %5 = load i8, i8* %dir.addr, align 1, !dbg !8841
  call void @draw_horizontal_join_shape(%struct.ScrArea* %4, i8 zeroext %5), !dbg !8842
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_vertical_join_shape(%struct.ScrArea* %sa, i8 zeroext %dir) #0 !dbg !8844 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  %points = alloca [10 x %struct.vec2f], align 16
  %i = alloca i16, align 2
  %w = alloca float, align 4
  %h = alloca float, align 4
  %width = alloca float, align 4
  %height = alloca float, align 4
  %cy = alloca float, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.declare(metadata [10 x %struct.vec2f]* %points, metadata !8849, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.declare(metadata i16* %i, metadata !8859, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.declare(metadata float* %w, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.declare(metadata float* %h, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.declare(metadata float* %width, metadata !8865, metadata !DIExpression()), !dbg !8866
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8867
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 4, !dbg !8868
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !8868
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !8869
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !8870
  %2 = load i16, i16* %x, align 8, !dbg !8870
  %conv = sext i16 %2 to i32, !dbg !8867
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8871
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 2, !dbg !8872
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8872
  %vec1 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !8873
  %x2 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec1, i32 0, i32 0, !dbg !8874
  %5 = load i16, i16* %x2, align 8, !dbg !8874
  %conv3 = sext i16 %5 to i32, !dbg !8871
  %sub = sub nsw i32 %conv, %conv3, !dbg !8875
  %conv4 = sitofp i32 %sub to float, !dbg !8867
  store float %conv4, float* %width, align 4, !dbg !8866
  call void @llvm.dbg.declare(metadata float* %height, metadata !8876, metadata !DIExpression()), !dbg !8877
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8878
  %v35 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 4, !dbg !8879
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v35, align 8, !dbg !8879
  %vec6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %7, i32 0, i32 3, !dbg !8880
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec6, i32 0, i32 1, !dbg !8881
  %8 = load i16, i16* %y, align 2, !dbg !8881
  %conv7 = sext i16 %8 to i32, !dbg !8878
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8882
  %v18 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 2, !dbg !8883
  %10 = load %struct.ScrVert*, %struct.ScrVert** %v18, align 8, !dbg !8883
  %vec9 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %10, i32 0, i32 3, !dbg !8884
  %y10 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec9, i32 0, i32 1, !dbg !8885
  %11 = load i16, i16* %y10, align 2, !dbg !8885
  %conv11 = sext i16 %11 to i32, !dbg !8882
  %sub12 = sub nsw i32 %conv7, %conv11, !dbg !8886
  %conv13 = sitofp i32 %sub12 to float, !dbg !8878
  store float %conv13, float* %height, align 4, !dbg !8877
  %12 = load float, float* %height, align 4, !dbg !8887
  %13 = load float, float* %width, align 4, !dbg !8889
  %cmp = fcmp olt float %12, %13, !dbg !8890
  br i1 %cmp, label %if.then, label %if.else, !dbg !8891

if.then:                                          ; preds = %entry
  %14 = load float, float* %height, align 4, !dbg !8892
  %div = fdiv float %14, 4.000000e+00, !dbg !8894
  store float %div, float* %h, align 4, !dbg !8895
  %15 = load float, float* %height, align 4, !dbg !8896
  %div15 = fdiv float %15, 8.000000e+00, !dbg !8897
  store float %div15, float* %w, align 4, !dbg !8898
  br label %if.end, !dbg !8899

if.else:                                          ; preds = %entry
  %16 = load float, float* %width, align 4, !dbg !8900
  %div16 = fdiv float %16, 4.000000e+00, !dbg !8902
  store float %div16, float* %h, align 4, !dbg !8903
  %17 = load float, float* %width, align 4, !dbg !8904
  %div17 = fdiv float %17, 8.000000e+00, !dbg !8905
  store float %div17, float* %w, align 4, !dbg !8906
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8907
  %v118 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %18, i32 0, i32 2, !dbg !8908
  %19 = load %struct.ScrVert*, %struct.ScrVert** %v118, align 8, !dbg !8908
  %vec19 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %19, i32 0, i32 3, !dbg !8909
  %x20 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec19, i32 0, i32 0, !dbg !8910
  %20 = load i16, i16* %x20, align 8, !dbg !8910
  %conv21 = sext i16 %20 to i32, !dbg !8907
  %conv22 = sitofp i32 %conv21 to float, !dbg !8907
  %21 = load float, float* %width, align 4, !dbg !8911
  %div23 = fdiv float %21, 2.000000e+00, !dbg !8912
  %add = fadd float %conv22, %div23, !dbg !8913
  %arrayidx = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !8914
  %x24 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx, i32 0, i32 0, !dbg !8915
  store float %add, float* %x24, align 16, !dbg !8916
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8917
  %v325 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 4, !dbg !8918
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v325, align 8, !dbg !8918
  %vec26 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 3, !dbg !8919
  %y27 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec26, i32 0, i32 1, !dbg !8920
  %24 = load i16, i16* %y27, align 2, !dbg !8920
  %conv28 = sitofp i16 %24 to float, !dbg !8917
  %arrayidx29 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !8921
  %y30 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx29, i32 0, i32 1, !dbg !8922
  store float %conv28, float* %y30, align 4, !dbg !8923
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8924
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 3, !dbg !8925
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !8925
  %vec31 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 3, !dbg !8926
  %x32 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec31, i32 0, i32 0, !dbg !8927
  %27 = load i16, i16* %x32, align 8, !dbg !8927
  %conv33 = sitofp i16 %27 to float, !dbg !8924
  %arrayidx34 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 1, !dbg !8928
  %x35 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx34, i32 0, i32 0, !dbg !8929
  store float %conv33, float* %x35, align 8, !dbg !8930
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8931
  %v236 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %28, i32 0, i32 3, !dbg !8932
  %29 = load %struct.ScrVert*, %struct.ScrVert** %v236, align 8, !dbg !8932
  %vec37 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %29, i32 0, i32 3, !dbg !8933
  %y38 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec37, i32 0, i32 1, !dbg !8934
  %30 = load i16, i16* %y38, align 2, !dbg !8934
  %conv39 = sitofp i16 %30 to float, !dbg !8931
  %arrayidx40 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 1, !dbg !8935
  %y41 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx40, i32 0, i32 1, !dbg !8936
  store float %conv39, float* %y41, align 4, !dbg !8937
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8938
  %v142 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 2, !dbg !8939
  %32 = load %struct.ScrVert*, %struct.ScrVert** %v142, align 8, !dbg !8939
  %vec43 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %32, i32 0, i32 3, !dbg !8940
  %x44 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec43, i32 0, i32 0, !dbg !8941
  %33 = load i16, i16* %x44, align 8, !dbg !8941
  %conv45 = sitofp i16 %33 to float, !dbg !8938
  %arrayidx46 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !8942
  %x47 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx46, i32 0, i32 0, !dbg !8943
  store float %conv45, float* %x47, align 16, !dbg !8944
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8945
  %v148 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %34, i32 0, i32 2, !dbg !8946
  %35 = load %struct.ScrVert*, %struct.ScrVert** %v148, align 8, !dbg !8946
  %vec49 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %35, i32 0, i32 3, !dbg !8947
  %y50 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec49, i32 0, i32 1, !dbg !8948
  %36 = load i16, i16* %y50, align 2, !dbg !8948
  %conv51 = sext i16 %36 to i32, !dbg !8945
  %conv52 = sitofp i32 %conv51 to float, !dbg !8945
  %37 = load float, float* %h, align 4, !dbg !8949
  %add53 = fadd float %conv52, %37, !dbg !8950
  %arrayidx54 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !8951
  %y55 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx54, i32 0, i32 1, !dbg !8952
  store float %add53, float* %y55, align 4, !dbg !8953
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8954
  %v156 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 2, !dbg !8955
  %39 = load %struct.ScrVert*, %struct.ScrVert** %v156, align 8, !dbg !8955
  %vec57 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %39, i32 0, i32 3, !dbg !8956
  %x58 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec57, i32 0, i32 0, !dbg !8957
  %40 = load i16, i16* %x58, align 8, !dbg !8957
  %conv59 = sext i16 %40 to i32, !dbg !8954
  %conv60 = sitofp i32 %conv59 to float, !dbg !8954
  %41 = load float, float* %width, align 4, !dbg !8958
  %div61 = fdiv float %41, 2.000000e+00, !dbg !8959
  %add62 = fadd float %conv60, %div61, !dbg !8960
  %42 = load float, float* %w, align 4, !dbg !8961
  %mul = fmul float 2.000000e+00, %42, !dbg !8962
  %sub63 = fsub float %add62, %mul, !dbg !8963
  %arrayidx64 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 3, !dbg !8964
  %x65 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx64, i32 0, i32 0, !dbg !8965
  store float %sub63, float* %x65, align 8, !dbg !8966
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8967
  %v166 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %43, i32 0, i32 2, !dbg !8968
  %44 = load %struct.ScrVert*, %struct.ScrVert** %v166, align 8, !dbg !8968
  %vec67 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %44, i32 0, i32 3, !dbg !8969
  %y68 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec67, i32 0, i32 1, !dbg !8970
  %45 = load i16, i16* %y68, align 2, !dbg !8970
  %conv69 = sext i16 %45 to i32, !dbg !8967
  %conv70 = sitofp i32 %conv69 to float, !dbg !8967
  %46 = load float, float* %h, align 4, !dbg !8971
  %add71 = fadd float %conv70, %46, !dbg !8972
  %arrayidx72 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 3, !dbg !8973
  %y73 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx72, i32 0, i32 1, !dbg !8974
  store float %add71, float* %y73, align 4, !dbg !8975
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8976
  %v174 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 2, !dbg !8977
  %48 = load %struct.ScrVert*, %struct.ScrVert** %v174, align 8, !dbg !8977
  %vec75 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %48, i32 0, i32 3, !dbg !8978
  %x76 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec75, i32 0, i32 0, !dbg !8979
  %49 = load i16, i16* %x76, align 8, !dbg !8979
  %conv77 = sext i16 %49 to i32, !dbg !8976
  %conv78 = sitofp i32 %conv77 to float, !dbg !8976
  %50 = load float, float* %width, align 4, !dbg !8980
  %div79 = fdiv float %50, 2.000000e+00, !dbg !8981
  %add80 = fadd float %conv78, %div79, !dbg !8982
  %arrayidx81 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 4, !dbg !8983
  %x82 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx81, i32 0, i32 0, !dbg !8984
  store float %add80, float* %x82, align 16, !dbg !8985
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8986
  %v183 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 2, !dbg !8987
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v183, align 8, !dbg !8987
  %vec84 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 3, !dbg !8988
  %y85 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec84, i32 0, i32 1, !dbg !8989
  %53 = load i16, i16* %y85, align 2, !dbg !8989
  %conv86 = sext i16 %53 to i32, !dbg !8986
  %conv87 = sitofp i32 %conv86 to float, !dbg !8986
  %54 = load float, float* %h, align 4, !dbg !8990
  %mul88 = fmul float 2.000000e+00, %54, !dbg !8991
  %add89 = fadd float %conv87, %mul88, !dbg !8992
  %arrayidx90 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 4, !dbg !8993
  %y91 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx90, i32 0, i32 1, !dbg !8994
  store float %add89, float* %y91, align 4, !dbg !8995
  %55 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8996
  %v192 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %55, i32 0, i32 2, !dbg !8997
  %56 = load %struct.ScrVert*, %struct.ScrVert** %v192, align 8, !dbg !8997
  %vec93 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %56, i32 0, i32 3, !dbg !8998
  %x94 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec93, i32 0, i32 0, !dbg !8999
  %57 = load i16, i16* %x94, align 8, !dbg !8999
  %conv95 = sext i16 %57 to i32, !dbg !8996
  %conv96 = sitofp i32 %conv95 to float, !dbg !8996
  %58 = load float, float* %width, align 4, !dbg !9000
  %div97 = fdiv float %58, 2.000000e+00, !dbg !9001
  %add98 = fadd float %conv96, %div97, !dbg !9002
  %59 = load float, float* %w, align 4, !dbg !9003
  %mul99 = fmul float 2.000000e+00, %59, !dbg !9004
  %add100 = fadd float %add98, %mul99, !dbg !9005
  %arrayidx101 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 5, !dbg !9006
  %x102 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx101, i32 0, i32 0, !dbg !9007
  store float %add100, float* %x102, align 8, !dbg !9008
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9009
  %v1103 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 2, !dbg !9010
  %61 = load %struct.ScrVert*, %struct.ScrVert** %v1103, align 8, !dbg !9010
  %vec104 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %61, i32 0, i32 3, !dbg !9011
  %y105 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec104, i32 0, i32 1, !dbg !9012
  %62 = load i16, i16* %y105, align 2, !dbg !9012
  %conv106 = sext i16 %62 to i32, !dbg !9009
  %conv107 = sitofp i32 %conv106 to float, !dbg !9009
  %63 = load float, float* %h, align 4, !dbg !9013
  %add108 = fadd float %conv107, %63, !dbg !9014
  %arrayidx109 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 5, !dbg !9015
  %y110 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx109, i32 0, i32 1, !dbg !9016
  store float %add108, float* %y110, align 4, !dbg !9017
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9018
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 5, !dbg !9019
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !9019
  %vec111 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %65, i32 0, i32 3, !dbg !9020
  %x112 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec111, i32 0, i32 0, !dbg !9021
  %66 = load i16, i16* %x112, align 8, !dbg !9021
  %conv113 = sitofp i16 %66 to float, !dbg !9018
  %arrayidx114 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9022
  %x115 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx114, i32 0, i32 0, !dbg !9023
  store float %conv113, float* %x115, align 16, !dbg !9024
  %67 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9025
  %v4116 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %67, i32 0, i32 5, !dbg !9026
  %68 = load %struct.ScrVert*, %struct.ScrVert** %v4116, align 8, !dbg !9026
  %vec117 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %68, i32 0, i32 3, !dbg !9027
  %y118 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec117, i32 0, i32 1, !dbg !9028
  %69 = load i16, i16* %y118, align 2, !dbg !9028
  %conv119 = sext i16 %69 to i32, !dbg !9025
  %conv120 = sitofp i32 %conv119 to float, !dbg !9025
  %70 = load float, float* %h, align 4, !dbg !9029
  %add121 = fadd float %conv120, %70, !dbg !9030
  %arrayidx122 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9031
  %y123 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx122, i32 0, i32 1, !dbg !9032
  store float %add121, float* %y123, align 4, !dbg !9033
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9034
  %v3124 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %71, i32 0, i32 4, !dbg !9035
  %72 = load %struct.ScrVert*, %struct.ScrVert** %v3124, align 8, !dbg !9035
  %vec125 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %72, i32 0, i32 3, !dbg !9036
  %x126 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec125, i32 0, i32 0, !dbg !9037
  %73 = load i16, i16* %x126, align 8, !dbg !9037
  %conv127 = sitofp i16 %73 to float, !dbg !9034
  %arrayidx128 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 7, !dbg !9038
  %x129 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx128, i32 0, i32 0, !dbg !9039
  store float %conv127, float* %x129, align 8, !dbg !9040
  %74 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9041
  %v3130 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %74, i32 0, i32 4, !dbg !9042
  %75 = load %struct.ScrVert*, %struct.ScrVert** %v3130, align 8, !dbg !9042
  %vec131 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %75, i32 0, i32 3, !dbg !9043
  %y132 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec131, i32 0, i32 1, !dbg !9044
  %76 = load i16, i16* %y132, align 2, !dbg !9044
  %conv133 = sitofp i16 %76 to float, !dbg !9041
  %arrayidx134 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 7, !dbg !9045
  %y135 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx134, i32 0, i32 1, !dbg !9046
  store float %conv133, float* %y135, align 4, !dbg !9047
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9048
  %v1136 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %77, i32 0, i32 2, !dbg !9049
  %78 = load %struct.ScrVert*, %struct.ScrVert** %v1136, align 8, !dbg !9049
  %vec137 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %78, i32 0, i32 3, !dbg !9050
  %x138 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec137, i32 0, i32 0, !dbg !9051
  %79 = load i16, i16* %x138, align 8, !dbg !9051
  %conv139 = sext i16 %79 to i32, !dbg !9048
  %conv140 = sitofp i32 %conv139 to float, !dbg !9048
  %80 = load float, float* %width, align 4, !dbg !9052
  %div141 = fdiv float %80, 2.000000e+00, !dbg !9053
  %add142 = fadd float %conv140, %div141, !dbg !9054
  %81 = load float, float* %w, align 4, !dbg !9055
  %sub143 = fsub float %add142, %81, !dbg !9056
  %arrayidx144 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9057
  %x145 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx144, i32 0, i32 0, !dbg !9058
  store float %sub143, float* %x145, align 16, !dbg !9059
  %82 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9060
  %v1146 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %82, i32 0, i32 2, !dbg !9061
  %83 = load %struct.ScrVert*, %struct.ScrVert** %v1146, align 8, !dbg !9061
  %vec147 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %83, i32 0, i32 3, !dbg !9062
  %y148 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec147, i32 0, i32 1, !dbg !9063
  %84 = load i16, i16* %y148, align 2, !dbg !9063
  %conv149 = sitofp i16 %84 to float, !dbg !9060
  %arrayidx150 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9064
  %y151 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx150, i32 0, i32 1, !dbg !9065
  store float %conv149, float* %y151, align 4, !dbg !9066
  %85 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9067
  %v1152 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %85, i32 0, i32 2, !dbg !9068
  %86 = load %struct.ScrVert*, %struct.ScrVert** %v1152, align 8, !dbg !9068
  %vec153 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %86, i32 0, i32 3, !dbg !9069
  %x154 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec153, i32 0, i32 0, !dbg !9070
  %87 = load i16, i16* %x154, align 8, !dbg !9070
  %conv155 = sext i16 %87 to i32, !dbg !9067
  %conv156 = sitofp i32 %conv155 to float, !dbg !9067
  %88 = load float, float* %width, align 4, !dbg !9071
  %div157 = fdiv float %88, 2.000000e+00, !dbg !9072
  %add158 = fadd float %conv156, %div157, !dbg !9073
  %89 = load float, float* %w, align 4, !dbg !9074
  %add159 = fadd float %add158, %89, !dbg !9075
  %arrayidx160 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9076
  %x161 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx160, i32 0, i32 0, !dbg !9077
  store float %add159, float* %x161, align 8, !dbg !9078
  %90 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9079
  %v1162 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %90, i32 0, i32 2, !dbg !9080
  %91 = load %struct.ScrVert*, %struct.ScrVert** %v1162, align 8, !dbg !9080
  %vec163 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %91, i32 0, i32 3, !dbg !9081
  %y164 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec163, i32 0, i32 1, !dbg !9082
  %92 = load i16, i16* %y164, align 2, !dbg !9082
  %conv165 = sitofp i16 %92 to float, !dbg !9079
  %arrayidx166 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9083
  %y167 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx166, i32 0, i32 1, !dbg !9084
  store float %conv165, float* %y167, align 4, !dbg !9085
  %93 = load i8, i8* %dir.addr, align 1, !dbg !9086
  %conv168 = zext i8 %93 to i32, !dbg !9086
  %cmp169 = icmp eq i32 %conv168, 117, !dbg !9088
  br i1 %cmp169, label %if.then171, label %if.end199, !dbg !9089

if.then171:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %cy, metadata !9090, metadata !DIExpression()), !dbg !9092
  %94 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9093
  %v1172 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %94, i32 0, i32 2, !dbg !9094
  %95 = load %struct.ScrVert*, %struct.ScrVert** %v1172, align 8, !dbg !9094
  %vec173 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %95, i32 0, i32 3, !dbg !9095
  %y174 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec173, i32 0, i32 1, !dbg !9096
  %96 = load i16, i16* %y174, align 2, !dbg !9096
  %conv175 = sext i16 %96 to i32, !dbg !9093
  %conv176 = sitofp i32 %conv175 to float, !dbg !9093
  %97 = load float, float* %height, align 4, !dbg !9097
  %add177 = fadd float %conv176, %97, !dbg !9098
  store float %add177, float* %cy, align 4, !dbg !9092
  store i16 0, i16* %i, align 2, !dbg !9099
  br label %for.cond, !dbg !9101

for.cond:                                         ; preds = %for.inc, %if.then171
  %98 = load i16, i16* %i, align 2, !dbg !9102
  %conv178 = sext i16 %98 to i32, !dbg !9102
  %cmp179 = icmp slt i32 %conv178, 10, !dbg !9104
  br i1 %cmp179, label %for.body, label %for.end, !dbg !9105

for.body:                                         ; preds = %for.cond
  %99 = load float, float* %cy, align 4, !dbg !9106
  %100 = load i16, i16* %i, align 2, !dbg !9108
  %idxprom = sext i16 %100 to i64, !dbg !9109
  %arrayidx181 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom, !dbg !9109
  %y182 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx181, i32 0, i32 1, !dbg !9110
  %101 = load float, float* %y182, align 4, !dbg !9111
  %sub183 = fsub float %101, %99, !dbg !9111
  store float %sub183, float* %y182, align 4, !dbg !9111
  %102 = load i16, i16* %i, align 2, !dbg !9112
  %idxprom184 = sext i16 %102 to i64, !dbg !9113
  %arrayidx185 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom184, !dbg !9113
  %y186 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx185, i32 0, i32 1, !dbg !9114
  %103 = load float, float* %y186, align 4, !dbg !9114
  %fneg = fneg float %103, !dbg !9115
  %104 = load i16, i16* %i, align 2, !dbg !9116
  %idxprom187 = sext i16 %104 to i64, !dbg !9117
  %arrayidx188 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom187, !dbg !9117
  %y189 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx188, i32 0, i32 1, !dbg !9118
  store float %fneg, float* %y189, align 4, !dbg !9119
  %105 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9120
  %v1190 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %105, i32 0, i32 2, !dbg !9121
  %106 = load %struct.ScrVert*, %struct.ScrVert** %v1190, align 8, !dbg !9121
  %vec191 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %106, i32 0, i32 3, !dbg !9122
  %y192 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec191, i32 0, i32 1, !dbg !9123
  %107 = load i16, i16* %y192, align 2, !dbg !9123
  %conv193 = sext i16 %107 to i32, !dbg !9120
  %conv194 = sitofp i32 %conv193 to float, !dbg !9120
  %108 = load i16, i16* %i, align 2, !dbg !9124
  %idxprom195 = sext i16 %108 to i64, !dbg !9125
  %arrayidx196 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom195, !dbg !9125
  %y197 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx196, i32 0, i32 1, !dbg !9126
  %109 = load float, float* %y197, align 4, !dbg !9127
  %add198 = fadd float %109, %conv194, !dbg !9127
  store float %add198, float* %y197, align 4, !dbg !9127
  br label %for.inc, !dbg !9128

for.inc:                                          ; preds = %for.body
  %110 = load i16, i16* %i, align 2, !dbg !9129
  %inc = add i16 %110, 1, !dbg !9129
  store i16 %inc, i16* %i, align 2, !dbg !9129
  br label %for.cond, !dbg !9130, !llvm.loop !9131

for.end:                                          ; preds = %for.cond
  br label %if.end199, !dbg !9133

if.end199:                                        ; preds = %for.end, %if.end
  call void @glBegin(i32 9), !dbg !9134
  store i16 0, i16* %i, align 2, !dbg !9135
  br label %for.cond200, !dbg !9137

for.cond200:                                      ; preds = %for.inc211, %if.end199
  %111 = load i16, i16* %i, align 2, !dbg !9138
  %conv201 = sext i16 %111 to i32, !dbg !9138
  %cmp202 = icmp slt i32 %conv201, 5, !dbg !9140
  br i1 %cmp202, label %for.body204, label %for.end213, !dbg !9141

for.body204:                                      ; preds = %for.cond200
  %112 = load i16, i16* %i, align 2, !dbg !9142
  %idxprom205 = sext i16 %112 to i64, !dbg !9143
  %arrayidx206 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom205, !dbg !9143
  %x207 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx206, i32 0, i32 0, !dbg !9144
  %113 = load float, float* %x207, align 8, !dbg !9144
  %114 = load i16, i16* %i, align 2, !dbg !9145
  %idxprom208 = sext i16 %114 to i64, !dbg !9146
  %arrayidx209 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom208, !dbg !9146
  %y210 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx209, i32 0, i32 1, !dbg !9147
  %115 = load float, float* %y210, align 4, !dbg !9147
  call void @glVertex2f(float %113, float %115), !dbg !9148
  br label %for.inc211, !dbg !9148

for.inc211:                                       ; preds = %for.body204
  %116 = load i16, i16* %i, align 2, !dbg !9149
  %inc212 = add i16 %116, 1, !dbg !9149
  store i16 %inc212, i16* %i, align 2, !dbg !9149
  br label %for.cond200, !dbg !9150, !llvm.loop !9151

for.end213:                                       ; preds = %for.cond200
  call void @glEnd(), !dbg !9153
  call void @glBegin(i32 9), !dbg !9154
  store i16 4, i16* %i, align 2, !dbg !9155
  br label %for.cond214, !dbg !9157

for.cond214:                                      ; preds = %for.inc225, %for.end213
  %117 = load i16, i16* %i, align 2, !dbg !9158
  %conv215 = sext i16 %117 to i32, !dbg !9158
  %cmp216 = icmp slt i32 %conv215, 8, !dbg !9160
  br i1 %cmp216, label %for.body218, label %for.end227, !dbg !9161

for.body218:                                      ; preds = %for.cond214
  %118 = load i16, i16* %i, align 2, !dbg !9162
  %idxprom219 = sext i16 %118 to i64, !dbg !9163
  %arrayidx220 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom219, !dbg !9163
  %x221 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx220, i32 0, i32 0, !dbg !9164
  %119 = load float, float* %x221, align 8, !dbg !9164
  %120 = load i16, i16* %i, align 2, !dbg !9165
  %idxprom222 = sext i16 %120 to i64, !dbg !9166
  %arrayidx223 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom222, !dbg !9166
  %y224 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx223, i32 0, i32 1, !dbg !9167
  %121 = load float, float* %y224, align 4, !dbg !9167
  call void @glVertex2f(float %119, float %121), !dbg !9168
  br label %for.inc225, !dbg !9168

for.inc225:                                       ; preds = %for.body218
  %122 = load i16, i16* %i, align 2, !dbg !9169
  %inc226 = add i16 %122, 1, !dbg !9169
  store i16 %inc226, i16* %i, align 2, !dbg !9169
  br label %for.cond214, !dbg !9170, !llvm.loop !9171

for.end227:                                       ; preds = %for.cond214
  %arrayidx228 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9173
  %x229 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx228, i32 0, i32 0, !dbg !9174
  %123 = load float, float* %x229, align 16, !dbg !9174
  %arrayidx230 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9175
  %y231 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx230, i32 0, i32 1, !dbg !9176
  %124 = load float, float* %y231, align 4, !dbg !9176
  call void @glVertex2f(float %123, float %124), !dbg !9177
  call void @glEnd(), !dbg !9178
  %arrayidx232 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9179
  %x233 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx232, i32 0, i32 0, !dbg !9180
  %125 = load float, float* %x233, align 16, !dbg !9180
  %arrayidx234 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9181
  %y235 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx234, i32 0, i32 1, !dbg !9182
  %126 = load float, float* %y235, align 4, !dbg !9182
  %arrayidx236 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9183
  %x237 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx236, i32 0, i32 0, !dbg !9184
  %127 = load float, float* %x237, align 16, !dbg !9184
  %arrayidx238 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9185
  %y239 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx238, i32 0, i32 1, !dbg !9186
  %128 = load float, float* %y239, align 4, !dbg !9186
  call void @glRectf(float %125, float %126, float %127, float %128), !dbg !9187
  %arrayidx240 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9188
  %x241 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx240, i32 0, i32 0, !dbg !9189
  %129 = load float, float* %x241, align 16, !dbg !9189
  %arrayidx242 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9190
  %y243 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx242, i32 0, i32 1, !dbg !9191
  %130 = load float, float* %y243, align 4, !dbg !9191
  %arrayidx244 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9192
  %x245 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx244, i32 0, i32 0, !dbg !9193
  %131 = load float, float* %x245, align 8, !dbg !9193
  %arrayidx246 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9194
  %y247 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx246, i32 0, i32 1, !dbg !9195
  %132 = load float, float* %y247, align 4, !dbg !9195
  call void @glRectf(float %129, float %130, float %131, float %132), !dbg !9196
  ret void, !dbg !9197
}

; Function Attrs: noinline nounwind uwtable
define internal void @draw_horizontal_join_shape(%struct.ScrArea* %sa, i8 zeroext %dir) #0 !dbg !9198 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %dir.addr = alloca i8, align 1
  %points = alloca [10 x %struct.vec2f], align 16
  %i = alloca i16, align 2
  %w = alloca float, align 4
  %h = alloca float, align 4
  %width = alloca float, align 4
  %height = alloca float, align 4
  %cx = alloca float, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata [10 x %struct.vec2f]* %points, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata i16* %i, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata float* %w, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata float* %h, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata float* %width, metadata !9211, metadata !DIExpression()), !dbg !9212
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9213
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 4, !dbg !9214
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !9214
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %1, i32 0, i32 3, !dbg !9215
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !9216
  %2 = load i16, i16* %x, align 8, !dbg !9216
  %conv = sext i16 %2 to i32, !dbg !9213
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9217
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 2, !dbg !9218
  %4 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !9218
  %vec1 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %4, i32 0, i32 3, !dbg !9219
  %x2 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec1, i32 0, i32 0, !dbg !9220
  %5 = load i16, i16* %x2, align 8, !dbg !9220
  %conv3 = sext i16 %5 to i32, !dbg !9217
  %sub = sub nsw i32 %conv, %conv3, !dbg !9221
  %conv4 = sitofp i32 %sub to float, !dbg !9213
  store float %conv4, float* %width, align 4, !dbg !9212
  call void @llvm.dbg.declare(metadata float* %height, metadata !9222, metadata !DIExpression()), !dbg !9223
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9224
  %v35 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 4, !dbg !9225
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v35, align 8, !dbg !9225
  %vec6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %7, i32 0, i32 3, !dbg !9226
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec6, i32 0, i32 1, !dbg !9227
  %8 = load i16, i16* %y, align 2, !dbg !9227
  %conv7 = sext i16 %8 to i32, !dbg !9224
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9228
  %v18 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 2, !dbg !9229
  %10 = load %struct.ScrVert*, %struct.ScrVert** %v18, align 8, !dbg !9229
  %vec9 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %10, i32 0, i32 3, !dbg !9230
  %y10 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec9, i32 0, i32 1, !dbg !9231
  %11 = load i16, i16* %y10, align 2, !dbg !9231
  %conv11 = sext i16 %11 to i32, !dbg !9228
  %sub12 = sub nsw i32 %conv7, %conv11, !dbg !9232
  %conv13 = sitofp i32 %sub12 to float, !dbg !9224
  store float %conv13, float* %height, align 4, !dbg !9223
  %12 = load float, float* %height, align 4, !dbg !9233
  %13 = load float, float* %width, align 4, !dbg !9235
  %cmp = fcmp olt float %12, %13, !dbg !9236
  br i1 %cmp, label %if.then, label %if.else, !dbg !9237

if.then:                                          ; preds = %entry
  %14 = load float, float* %height, align 4, !dbg !9238
  %div = fdiv float %14, 8.000000e+00, !dbg !9240
  store float %div, float* %h, align 4, !dbg !9241
  %15 = load float, float* %height, align 4, !dbg !9242
  %div15 = fdiv float %15, 4.000000e+00, !dbg !9243
  store float %div15, float* %w, align 4, !dbg !9244
  br label %if.end, !dbg !9245

if.else:                                          ; preds = %entry
  %16 = load float, float* %width, align 4, !dbg !9246
  %div16 = fdiv float %16, 8.000000e+00, !dbg !9248
  store float %div16, float* %h, align 4, !dbg !9249
  %17 = load float, float* %width, align 4, !dbg !9250
  %div17 = fdiv float %17, 4.000000e+00, !dbg !9251
  store float %div17, float* %w, align 4, !dbg !9252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9253
  %v118 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %18, i32 0, i32 2, !dbg !9254
  %19 = load %struct.ScrVert*, %struct.ScrVert** %v118, align 8, !dbg !9254
  %vec19 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %19, i32 0, i32 3, !dbg !9255
  %x20 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec19, i32 0, i32 0, !dbg !9256
  %20 = load i16, i16* %x20, align 8, !dbg !9256
  %conv21 = sitofp i16 %20 to float, !dbg !9253
  %arrayidx = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9257
  %x22 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx, i32 0, i32 0, !dbg !9258
  store float %conv21, float* %x22, align 16, !dbg !9259
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9260
  %v123 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 2, !dbg !9261
  %22 = load %struct.ScrVert*, %struct.ScrVert** %v123, align 8, !dbg !9261
  %vec24 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %22, i32 0, i32 3, !dbg !9262
  %y25 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec24, i32 0, i32 1, !dbg !9263
  %23 = load i16, i16* %y25, align 2, !dbg !9263
  %conv26 = sext i16 %23 to i32, !dbg !9260
  %conv27 = sitofp i32 %conv26 to float, !dbg !9260
  %24 = load float, float* %height, align 4, !dbg !9264
  %div28 = fdiv float %24, 2.000000e+00, !dbg !9265
  %add = fadd float %conv27, %div28, !dbg !9266
  %arrayidx29 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9267
  %y30 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx29, i32 0, i32 1, !dbg !9268
  store float %add, float* %y30, align 4, !dbg !9269
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9270
  %v131 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 2, !dbg !9271
  %26 = load %struct.ScrVert*, %struct.ScrVert** %v131, align 8, !dbg !9271
  %vec32 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 3, !dbg !9272
  %x33 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec32, i32 0, i32 0, !dbg !9273
  %27 = load i16, i16* %x33, align 8, !dbg !9273
  %conv34 = sitofp i16 %27 to float, !dbg !9270
  %arrayidx35 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 1, !dbg !9274
  %x36 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx35, i32 0, i32 0, !dbg !9275
  store float %conv34, float* %x36, align 8, !dbg !9276
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9277
  %v137 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %28, i32 0, i32 2, !dbg !9278
  %29 = load %struct.ScrVert*, %struct.ScrVert** %v137, align 8, !dbg !9278
  %vec38 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %29, i32 0, i32 3, !dbg !9279
  %y39 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec38, i32 0, i32 1, !dbg !9280
  %30 = load i16, i16* %y39, align 2, !dbg !9280
  %conv40 = sitofp i16 %30 to float, !dbg !9277
  %arrayidx41 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 1, !dbg !9281
  %y42 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx41, i32 0, i32 1, !dbg !9282
  store float %conv40, float* %y42, align 4, !dbg !9283
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9284
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 5, !dbg !9285
  %32 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !9285
  %vec43 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %32, i32 0, i32 3, !dbg !9286
  %x44 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec43, i32 0, i32 0, !dbg !9287
  %33 = load i16, i16* %x44, align 8, !dbg !9287
  %conv45 = sext i16 %33 to i32, !dbg !9284
  %conv46 = sitofp i32 %conv45 to float, !dbg !9284
  %34 = load float, float* %w, align 4, !dbg !9288
  %sub47 = fsub float %conv46, %34, !dbg !9289
  %arrayidx48 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9290
  %x49 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx48, i32 0, i32 0, !dbg !9291
  store float %sub47, float* %x49, align 16, !dbg !9292
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9293
  %v450 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %35, i32 0, i32 5, !dbg !9294
  %36 = load %struct.ScrVert*, %struct.ScrVert** %v450, align 8, !dbg !9294
  %vec51 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %36, i32 0, i32 3, !dbg !9295
  %y52 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec51, i32 0, i32 1, !dbg !9296
  %37 = load i16, i16* %y52, align 2, !dbg !9296
  %conv53 = sitofp i16 %37 to float, !dbg !9293
  %arrayidx54 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9297
  %y55 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx54, i32 0, i32 1, !dbg !9298
  store float %conv53, float* %y55, align 4, !dbg !9299
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9300
  %v456 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 5, !dbg !9301
  %39 = load %struct.ScrVert*, %struct.ScrVert** %v456, align 8, !dbg !9301
  %vec57 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %39, i32 0, i32 3, !dbg !9302
  %x58 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec57, i32 0, i32 0, !dbg !9303
  %40 = load i16, i16* %x58, align 8, !dbg !9303
  %conv59 = sext i16 %40 to i32, !dbg !9300
  %conv60 = sitofp i32 %conv59 to float, !dbg !9300
  %41 = load float, float* %w, align 4, !dbg !9304
  %sub61 = fsub float %conv60, %41, !dbg !9305
  %arrayidx62 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 3, !dbg !9306
  %x63 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx62, i32 0, i32 0, !dbg !9307
  store float %sub61, float* %x63, align 8, !dbg !9308
  %42 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9309
  %v464 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %42, i32 0, i32 5, !dbg !9310
  %43 = load %struct.ScrVert*, %struct.ScrVert** %v464, align 8, !dbg !9310
  %vec65 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %43, i32 0, i32 3, !dbg !9311
  %y66 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec65, i32 0, i32 1, !dbg !9312
  %44 = load i16, i16* %y66, align 2, !dbg !9312
  %conv67 = sext i16 %44 to i32, !dbg !9309
  %conv68 = sitofp i32 %conv67 to float, !dbg !9309
  %45 = load float, float* %height, align 4, !dbg !9313
  %div69 = fdiv float %45, 2.000000e+00, !dbg !9314
  %add70 = fadd float %conv68, %div69, !dbg !9315
  %46 = load float, float* %h, align 4, !dbg !9316
  %mul = fmul float 2.000000e+00, %46, !dbg !9317
  %sub71 = fsub float %add70, %mul, !dbg !9318
  %arrayidx72 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 3, !dbg !9319
  %y73 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx72, i32 0, i32 1, !dbg !9320
  store float %sub71, float* %y73, align 4, !dbg !9321
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9322
  %v474 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 5, !dbg !9323
  %48 = load %struct.ScrVert*, %struct.ScrVert** %v474, align 8, !dbg !9323
  %vec75 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %48, i32 0, i32 3, !dbg !9324
  %x76 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec75, i32 0, i32 0, !dbg !9325
  %49 = load i16, i16* %x76, align 8, !dbg !9325
  %conv77 = sext i16 %49 to i32, !dbg !9322
  %conv78 = sitofp i32 %conv77 to float, !dbg !9322
  %50 = load float, float* %w, align 4, !dbg !9326
  %mul79 = fmul float 2.000000e+00, %50, !dbg !9327
  %sub80 = fsub float %conv78, %mul79, !dbg !9328
  %arrayidx81 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 4, !dbg !9329
  %x82 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx81, i32 0, i32 0, !dbg !9330
  store float %sub80, float* %x82, align 16, !dbg !9331
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9332
  %v483 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 5, !dbg !9333
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v483, align 8, !dbg !9333
  %vec84 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 3, !dbg !9334
  %y85 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec84, i32 0, i32 1, !dbg !9335
  %53 = load i16, i16* %y85, align 2, !dbg !9335
  %conv86 = sext i16 %53 to i32, !dbg !9332
  %conv87 = sitofp i32 %conv86 to float, !dbg !9332
  %54 = load float, float* %height, align 4, !dbg !9336
  %div88 = fdiv float %54, 2.000000e+00, !dbg !9337
  %add89 = fadd float %conv87, %div88, !dbg !9338
  %arrayidx90 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 4, !dbg !9339
  %y91 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx90, i32 0, i32 1, !dbg !9340
  store float %add89, float* %y91, align 4, !dbg !9341
  %55 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9342
  %v492 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %55, i32 0, i32 5, !dbg !9343
  %56 = load %struct.ScrVert*, %struct.ScrVert** %v492, align 8, !dbg !9343
  %vec93 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %56, i32 0, i32 3, !dbg !9344
  %x94 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec93, i32 0, i32 0, !dbg !9345
  %57 = load i16, i16* %x94, align 8, !dbg !9345
  %conv95 = sext i16 %57 to i32, !dbg !9342
  %conv96 = sitofp i32 %conv95 to float, !dbg !9342
  %58 = load float, float* %w, align 4, !dbg !9346
  %sub97 = fsub float %conv96, %58, !dbg !9347
  %arrayidx98 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 5, !dbg !9348
  %x99 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx98, i32 0, i32 0, !dbg !9349
  store float %sub97, float* %x99, align 8, !dbg !9350
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9351
  %v4100 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %59, i32 0, i32 5, !dbg !9352
  %60 = load %struct.ScrVert*, %struct.ScrVert** %v4100, align 8, !dbg !9352
  %vec101 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %60, i32 0, i32 3, !dbg !9353
  %y102 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec101, i32 0, i32 1, !dbg !9354
  %61 = load i16, i16* %y102, align 2, !dbg !9354
  %conv103 = sext i16 %61 to i32, !dbg !9351
  %conv104 = sitofp i32 %conv103 to float, !dbg !9351
  %62 = load float, float* %height, align 4, !dbg !9355
  %div105 = fdiv float %62, 2.000000e+00, !dbg !9356
  %add106 = fadd float %conv104, %div105, !dbg !9357
  %63 = load float, float* %h, align 4, !dbg !9358
  %mul107 = fmul float 2.000000e+00, %63, !dbg !9359
  %add108 = fadd float %add106, %mul107, !dbg !9360
  %arrayidx109 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 5, !dbg !9361
  %y110 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx109, i32 0, i32 1, !dbg !9362
  store float %add108, float* %y110, align 4, !dbg !9363
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9364
  %v3111 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 4, !dbg !9365
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v3111, align 8, !dbg !9365
  %vec112 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %65, i32 0, i32 3, !dbg !9366
  %x113 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec112, i32 0, i32 0, !dbg !9367
  %66 = load i16, i16* %x113, align 8, !dbg !9367
  %conv114 = sext i16 %66 to i32, !dbg !9364
  %conv115 = sitofp i32 %conv114 to float, !dbg !9364
  %67 = load float, float* %w, align 4, !dbg !9368
  %sub116 = fsub float %conv115, %67, !dbg !9369
  %arrayidx117 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9370
  %x118 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx117, i32 0, i32 0, !dbg !9371
  store float %sub116, float* %x118, align 16, !dbg !9372
  %68 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9373
  %v3119 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %68, i32 0, i32 4, !dbg !9374
  %69 = load %struct.ScrVert*, %struct.ScrVert** %v3119, align 8, !dbg !9374
  %vec120 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %69, i32 0, i32 3, !dbg !9375
  %y121 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec120, i32 0, i32 1, !dbg !9376
  %70 = load i16, i16* %y121, align 2, !dbg !9376
  %conv122 = sitofp i16 %70 to float, !dbg !9373
  %arrayidx123 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9377
  %y124 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx123, i32 0, i32 1, !dbg !9378
  store float %conv122, float* %y124, align 4, !dbg !9379
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9380
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %71, i32 0, i32 3, !dbg !9381
  %72 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !9381
  %vec125 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %72, i32 0, i32 3, !dbg !9382
  %x126 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec125, i32 0, i32 0, !dbg !9383
  %73 = load i16, i16* %x126, align 8, !dbg !9383
  %conv127 = sitofp i16 %73 to float, !dbg !9380
  %arrayidx128 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 7, !dbg !9384
  %x129 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx128, i32 0, i32 0, !dbg !9385
  store float %conv127, float* %x129, align 8, !dbg !9386
  %74 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9387
  %v2130 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %74, i32 0, i32 3, !dbg !9388
  %75 = load %struct.ScrVert*, %struct.ScrVert** %v2130, align 8, !dbg !9388
  %vec131 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %75, i32 0, i32 3, !dbg !9389
  %y132 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec131, i32 0, i32 1, !dbg !9390
  %76 = load i16, i16* %y132, align 2, !dbg !9390
  %conv133 = sitofp i16 %76 to float, !dbg !9387
  %arrayidx134 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 7, !dbg !9391
  %y135 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx134, i32 0, i32 1, !dbg !9392
  store float %conv133, float* %y135, align 4, !dbg !9393
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9394
  %v4136 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %77, i32 0, i32 5, !dbg !9395
  %78 = load %struct.ScrVert*, %struct.ScrVert** %v4136, align 8, !dbg !9395
  %vec137 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %78, i32 0, i32 3, !dbg !9396
  %x138 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec137, i32 0, i32 0, !dbg !9397
  %79 = load i16, i16* %x138, align 8, !dbg !9397
  %conv139 = sitofp i16 %79 to float, !dbg !9394
  %arrayidx140 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9398
  %x141 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx140, i32 0, i32 0, !dbg !9399
  store float %conv139, float* %x141, align 16, !dbg !9400
  %80 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9401
  %v4142 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %80, i32 0, i32 5, !dbg !9402
  %81 = load %struct.ScrVert*, %struct.ScrVert** %v4142, align 8, !dbg !9402
  %vec143 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %81, i32 0, i32 3, !dbg !9403
  %y144 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec143, i32 0, i32 1, !dbg !9404
  %82 = load i16, i16* %y144, align 2, !dbg !9404
  %conv145 = sext i16 %82 to i32, !dbg !9401
  %conv146 = sitofp i32 %conv145 to float, !dbg !9401
  %83 = load float, float* %height, align 4, !dbg !9405
  %div147 = fdiv float %83, 2.000000e+00, !dbg !9406
  %add148 = fadd float %conv146, %div147, !dbg !9407
  %84 = load float, float* %h, align 4, !dbg !9408
  %sub149 = fsub float %add148, %84, !dbg !9409
  %arrayidx150 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9410
  %y151 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx150, i32 0, i32 1, !dbg !9411
  store float %sub149, float* %y151, align 4, !dbg !9412
  %85 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9413
  %v4152 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %85, i32 0, i32 5, !dbg !9414
  %86 = load %struct.ScrVert*, %struct.ScrVert** %v4152, align 8, !dbg !9414
  %vec153 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %86, i32 0, i32 3, !dbg !9415
  %x154 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec153, i32 0, i32 0, !dbg !9416
  %87 = load i16, i16* %x154, align 8, !dbg !9416
  %conv155 = sitofp i16 %87 to float, !dbg !9413
  %arrayidx156 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9417
  %x157 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx156, i32 0, i32 0, !dbg !9418
  store float %conv155, float* %x157, align 8, !dbg !9419
  %88 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9420
  %v4158 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %88, i32 0, i32 5, !dbg !9421
  %89 = load %struct.ScrVert*, %struct.ScrVert** %v4158, align 8, !dbg !9421
  %vec159 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %89, i32 0, i32 3, !dbg !9422
  %y160 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec159, i32 0, i32 1, !dbg !9423
  %90 = load i16, i16* %y160, align 2, !dbg !9423
  %conv161 = sext i16 %90 to i32, !dbg !9420
  %conv162 = sitofp i32 %conv161 to float, !dbg !9420
  %91 = load float, float* %height, align 4, !dbg !9424
  %div163 = fdiv float %91, 2.000000e+00, !dbg !9425
  %add164 = fadd float %conv162, %div163, !dbg !9426
  %92 = load float, float* %h, align 4, !dbg !9427
  %add165 = fadd float %add164, %92, !dbg !9428
  %arrayidx166 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9429
  %y167 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx166, i32 0, i32 1, !dbg !9430
  store float %add165, float* %y167, align 4, !dbg !9431
  %93 = load i8, i8* %dir.addr, align 1, !dbg !9432
  %conv168 = zext i8 %93 to i32, !dbg !9432
  %cmp169 = icmp eq i32 %conv168, 108, !dbg !9434
  br i1 %cmp169, label %if.then171, label %if.end199, !dbg !9435

if.then171:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %cx, metadata !9436, metadata !DIExpression()), !dbg !9438
  %94 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9439
  %v1172 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %94, i32 0, i32 2, !dbg !9440
  %95 = load %struct.ScrVert*, %struct.ScrVert** %v1172, align 8, !dbg !9440
  %vec173 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %95, i32 0, i32 3, !dbg !9441
  %x174 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec173, i32 0, i32 0, !dbg !9442
  %96 = load i16, i16* %x174, align 8, !dbg !9442
  %conv175 = sext i16 %96 to i32, !dbg !9439
  %conv176 = sitofp i32 %conv175 to float, !dbg !9439
  %97 = load float, float* %width, align 4, !dbg !9443
  %add177 = fadd float %conv176, %97, !dbg !9444
  store float %add177, float* %cx, align 4, !dbg !9438
  store i16 0, i16* %i, align 2, !dbg !9445
  br label %for.cond, !dbg !9447

for.cond:                                         ; preds = %for.inc, %if.then171
  %98 = load i16, i16* %i, align 2, !dbg !9448
  %conv178 = sext i16 %98 to i32, !dbg !9448
  %cmp179 = icmp slt i32 %conv178, 10, !dbg !9450
  br i1 %cmp179, label %for.body, label %for.end, !dbg !9451

for.body:                                         ; preds = %for.cond
  %99 = load float, float* %cx, align 4, !dbg !9452
  %100 = load i16, i16* %i, align 2, !dbg !9454
  %idxprom = sext i16 %100 to i64, !dbg !9455
  %arrayidx181 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom, !dbg !9455
  %x182 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx181, i32 0, i32 0, !dbg !9456
  %101 = load float, float* %x182, align 8, !dbg !9457
  %sub183 = fsub float %101, %99, !dbg !9457
  store float %sub183, float* %x182, align 8, !dbg !9457
  %102 = load i16, i16* %i, align 2, !dbg !9458
  %idxprom184 = sext i16 %102 to i64, !dbg !9459
  %arrayidx185 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom184, !dbg !9459
  %x186 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx185, i32 0, i32 0, !dbg !9460
  %103 = load float, float* %x186, align 8, !dbg !9460
  %fneg = fneg float %103, !dbg !9461
  %104 = load i16, i16* %i, align 2, !dbg !9462
  %idxprom187 = sext i16 %104 to i64, !dbg !9463
  %arrayidx188 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom187, !dbg !9463
  %x189 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx188, i32 0, i32 0, !dbg !9464
  store float %fneg, float* %x189, align 8, !dbg !9465
  %105 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9466
  %v1190 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %105, i32 0, i32 2, !dbg !9467
  %106 = load %struct.ScrVert*, %struct.ScrVert** %v1190, align 8, !dbg !9467
  %vec191 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %106, i32 0, i32 3, !dbg !9468
  %x192 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec191, i32 0, i32 0, !dbg !9469
  %107 = load i16, i16* %x192, align 8, !dbg !9469
  %conv193 = sext i16 %107 to i32, !dbg !9466
  %conv194 = sitofp i32 %conv193 to float, !dbg !9466
  %108 = load i16, i16* %i, align 2, !dbg !9470
  %idxprom195 = sext i16 %108 to i64, !dbg !9471
  %arrayidx196 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom195, !dbg !9471
  %x197 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx196, i32 0, i32 0, !dbg !9472
  %109 = load float, float* %x197, align 8, !dbg !9473
  %add198 = fadd float %109, %conv194, !dbg !9473
  store float %add198, float* %x197, align 8, !dbg !9473
  br label %for.inc, !dbg !9474

for.inc:                                          ; preds = %for.body
  %110 = load i16, i16* %i, align 2, !dbg !9475
  %inc = add i16 %110, 1, !dbg !9475
  store i16 %inc, i16* %i, align 2, !dbg !9475
  br label %for.cond, !dbg !9476, !llvm.loop !9477

for.end:                                          ; preds = %for.cond
  br label %if.end199, !dbg !9479

if.end199:                                        ; preds = %for.end, %if.end
  call void @glBegin(i32 9), !dbg !9480
  store i16 0, i16* %i, align 2, !dbg !9481
  br label %for.cond200, !dbg !9483

for.cond200:                                      ; preds = %for.inc211, %if.end199
  %111 = load i16, i16* %i, align 2, !dbg !9484
  %conv201 = sext i16 %111 to i32, !dbg !9484
  %cmp202 = icmp slt i32 %conv201, 5, !dbg !9486
  br i1 %cmp202, label %for.body204, label %for.end213, !dbg !9487

for.body204:                                      ; preds = %for.cond200
  %112 = load i16, i16* %i, align 2, !dbg !9488
  %idxprom205 = sext i16 %112 to i64, !dbg !9489
  %arrayidx206 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom205, !dbg !9489
  %x207 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx206, i32 0, i32 0, !dbg !9490
  %113 = load float, float* %x207, align 8, !dbg !9490
  %114 = load i16, i16* %i, align 2, !dbg !9491
  %idxprom208 = sext i16 %114 to i64, !dbg !9492
  %arrayidx209 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom208, !dbg !9492
  %y210 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx209, i32 0, i32 1, !dbg !9493
  %115 = load float, float* %y210, align 4, !dbg !9493
  call void @glVertex2f(float %113, float %115), !dbg !9494
  br label %for.inc211, !dbg !9494

for.inc211:                                       ; preds = %for.body204
  %116 = load i16, i16* %i, align 2, !dbg !9495
  %inc212 = add i16 %116, 1, !dbg !9495
  store i16 %inc212, i16* %i, align 2, !dbg !9495
  br label %for.cond200, !dbg !9496, !llvm.loop !9497

for.end213:                                       ; preds = %for.cond200
  call void @glEnd(), !dbg !9499
  call void @glBegin(i32 9), !dbg !9500
  store i16 4, i16* %i, align 2, !dbg !9501
  br label %for.cond214, !dbg !9503

for.cond214:                                      ; preds = %for.inc225, %for.end213
  %117 = load i16, i16* %i, align 2, !dbg !9504
  %conv215 = sext i16 %117 to i32, !dbg !9504
  %cmp216 = icmp slt i32 %conv215, 8, !dbg !9506
  br i1 %cmp216, label %for.body218, label %for.end227, !dbg !9507

for.body218:                                      ; preds = %for.cond214
  %118 = load i16, i16* %i, align 2, !dbg !9508
  %idxprom219 = sext i16 %118 to i64, !dbg !9509
  %arrayidx220 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom219, !dbg !9509
  %x221 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx220, i32 0, i32 0, !dbg !9510
  %119 = load float, float* %x221, align 8, !dbg !9510
  %120 = load i16, i16* %i, align 2, !dbg !9511
  %idxprom222 = sext i16 %120 to i64, !dbg !9512
  %arrayidx223 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 %idxprom222, !dbg !9512
  %y224 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx223, i32 0, i32 1, !dbg !9513
  %121 = load float, float* %y224, align 4, !dbg !9513
  call void @glVertex2f(float %119, float %121), !dbg !9514
  br label %for.inc225, !dbg !9514

for.inc225:                                       ; preds = %for.body218
  %122 = load i16, i16* %i, align 2, !dbg !9515
  %inc226 = add i16 %122, 1, !dbg !9515
  store i16 %inc226, i16* %i, align 2, !dbg !9515
  br label %for.cond214, !dbg !9516, !llvm.loop !9517

for.end227:                                       ; preds = %for.cond214
  %arrayidx228 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9519
  %x229 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx228, i32 0, i32 0, !dbg !9520
  %123 = load float, float* %x229, align 16, !dbg !9520
  %arrayidx230 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 0, !dbg !9521
  %y231 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx230, i32 0, i32 1, !dbg !9522
  %124 = load float, float* %y231, align 4, !dbg !9522
  call void @glVertex2f(float %123, float %124), !dbg !9523
  call void @glEnd(), !dbg !9524
  %arrayidx232 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9525
  %x233 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx232, i32 0, i32 0, !dbg !9526
  %125 = load float, float* %x233, align 16, !dbg !9526
  %arrayidx234 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 2, !dbg !9527
  %y235 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx234, i32 0, i32 1, !dbg !9528
  %126 = load float, float* %y235, align 4, !dbg !9528
  %arrayidx236 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9529
  %x237 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx236, i32 0, i32 0, !dbg !9530
  %127 = load float, float* %x237, align 16, !dbg !9530
  %arrayidx238 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 8, !dbg !9531
  %y239 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx238, i32 0, i32 1, !dbg !9532
  %128 = load float, float* %y239, align 4, !dbg !9532
  call void @glRectf(float %125, float %126, float %127, float %128), !dbg !9533
  %arrayidx240 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9534
  %x241 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx240, i32 0, i32 0, !dbg !9535
  %129 = load float, float* %x241, align 16, !dbg !9535
  %arrayidx242 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 6, !dbg !9536
  %y243 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx242, i32 0, i32 1, !dbg !9537
  %130 = load float, float* %y243, align 4, !dbg !9537
  %arrayidx244 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9538
  %x245 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx244, i32 0, i32 0, !dbg !9539
  %131 = load float, float* %x245, align 8, !dbg !9539
  %arrayidx246 = getelementptr inbounds [10 x %struct.vec2f], [10 x %struct.vec2f]* %points, i64 0, i64 9, !dbg !9540
  %y247 = getelementptr inbounds %struct.vec2f, %struct.vec2f* %arrayidx246, i32 0, i32 1, !dbg !9541
  %132 = load float, float* %y247, align 4, !dbg !9541
  call void @glRectf(float %129, float %130, float %131, float %132), !dbg !9542
  ret void, !dbg !9543
}

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex2f(float, float) #2

declare dso_local void @glEnd() #2

declare dso_local void @glRectf(float, float, float, float) #2

declare dso_local void @glRecti(i32, i32, i32, i32) #2

declare dso_local %struct.ListBase* @BKE_spacetypes_list() #2

declare dso_local %struct.ARegionType* @BKE_regiontype_from_id(%struct.SpaceType*, i32) #2

declare dso_local void @minmax_v2v2_v2(float*, float*, float*) #2

declare dso_local %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea*, i32) #2

declare dso_local void @BKE_screen_view3d_sync(%struct.View3D*, %struct.Scene*) #2

declare dso_local %struct.Base* @BKE_scene_base_find(%struct.Scene*, %struct.Object*) #2

declare dso_local %struct.Object* @BKE_scene_camera_find(%struct.Scene*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3043, !3044, !3045}
!llvm.ident = !{!3046}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !370, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/editors/screen/screen_edit.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !15, !39, !45, !57, !67, !74, !97, !118, !149, !350, !357}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eScreen_Redraws_Flag", file: !4, line: 453, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14}
!7 = !DIEnumerator(name: "TIME_REGION", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "TIME_ALL_3D_WIN", value: 2, isUnsigned: true)
!9 = !DIEnumerator(name: "TIME_ALL_ANIM_WIN", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "TIME_ALL_BUTS_WIN", value: 8, isUnsigned: true)
!11 = !DIEnumerator(name: "TIME_SEQ", value: 32, isUnsigned: true)
!12 = !DIEnumerator(name: "TIME_ALL_IMAGE_WIN", value: 64, isUnsigned: true)
!13 = !DIEnumerator(name: "TIME_NODES", value: 256, isUnsigned: true)
!14 = !DIEnumerator(name: "TIME_CLIPS", value: 512, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !4, line: 1163, baseType: !5, size: 32, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38}
!17 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!36 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!37 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!38 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 292, baseType: !5, size: 32, elements: !41)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !{!42, !43, !44}
!42 = !DIEnumerator(name: "SCREENNORMAL", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "SCREENMAXIMIZED", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "SCREENFULL", value: 2, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !46, line: 123, baseType: !5, size: 32, elements: !47)
!46 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56}
!48 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!52 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!53 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!54 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!55 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!56 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 361, baseType: !5, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66}
!59 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!66 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 78, baseType: !5, size: 32, elements: !69)
!68 = !DIFile(filename: "blender/source/blender/editors/include/ED_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!69 = !{!70, !71, !72, !73}
!70 = !DIEnumerator(name: "AE_RIGHT_TO_TOPLEFT", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "AE_LEFT_TO_TOPRIGHT", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "AE_TOP_TO_BOTTOMRIGHT", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "AE_BOTTOM_TO_TOPLEFT", value: 3, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !75, line: 569, baseType: !5, size: 32, elements: !76)
!75 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!76 = !{!77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96}
!77 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!79 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!80 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!81 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!82 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!83 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!84 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!85 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!86 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!87 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!88 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!89 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!90 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!91 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!92 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!93 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!94 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!95 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!96 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceImage_Flag", file: !4, line: 777, baseType: !5, size: 32, elements: !98)
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117}
!99 = !DIEnumerator(name: "SI_EDITTILE", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "SI_CLIP_UV", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "SI_NO_DRAWFACES", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "SI_DRAWSHADOW", value: 32, isUnsigned: true)
!103 = !DIEnumerator(name: "SI_COORDFLOATS", value: 512, isUnsigned: true)
!104 = !DIEnumerator(name: "SI_PIXELSNAP", value: 1024, isUnsigned: true)
!105 = !DIEnumerator(name: "SI_LIVE_UNWRAP", value: 2048, isUnsigned: true)
!106 = !DIEnumerator(name: "SI_USE_ALPHA", value: 4096, isUnsigned: true)
!107 = !DIEnumerator(name: "SI_SHOW_ALPHA", value: 8192, isUnsigned: true)
!108 = !DIEnumerator(name: "SI_SHOW_ZBUF", value: 16384, isUnsigned: true)
!109 = !DIEnumerator(name: "SI_PREVSPACE", value: 32768, isUnsigned: true)
!110 = !DIEnumerator(name: "SI_FULLWINDOW", value: 65536, isUnsigned: true)
!111 = !DIEnumerator(name: "SI_DRAW_TILE", value: 524288, isUnsigned: true)
!112 = !DIEnumerator(name: "SI_SMOOTH_UV", value: 1048576, isUnsigned: true)
!113 = !DIEnumerator(name: "SI_DRAW_STRETCH", value: 2097152, isUnsigned: true)
!114 = !DIEnumerator(name: "SI_SHOW_GPENCIL", value: 4194304, isUnsigned: true)
!115 = !DIEnumerator(name: "SI_DRAW_OTHER", value: 8388608, isUnsigned: true)
!116 = !DIEnumerator(name: "SI_COLOR_CORRECTION", value: 16777216, isUnsigned: true)
!117 = !DIEnumerator(name: "SI_NO_DRAW_TEXPAINT", value: 33554432, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserpref_UI_Flag", file: !75, line: 630, baseType: !119, size: 32, elements: !120)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148}
!121 = !DIEnumerator(name: "USER_WHEELZOOMDIR", value: 4)
!122 = !DIEnumerator(name: "USER_FILTERFILEEXTS", value: 8)
!123 = !DIEnumerator(name: "USER_DRAWVIEWINFO", value: 16)
!124 = !DIEnumerator(name: "USER_PLAINMENUS", value: 32)
!125 = !DIEnumerator(name: "USER_ALLWINCODECS", value: 256)
!126 = !DIEnumerator(name: "USER_MENUOPENAUTO", value: 512)
!127 = !DIEnumerator(name: "USER_ZBUF_CURSOR", value: 1024)
!128 = !DIEnumerator(name: "USER_AUTOPERSP", value: 2048)
!129 = !DIEnumerator(name: "USER_LOCKAROUND", value: 4096)
!130 = !DIEnumerator(name: "USER_GLOBALUNDO", value: 8192)
!131 = !DIEnumerator(name: "USER_ORBIT_SELECTION", value: 16384)
!132 = !DIEnumerator(name: "USER_ZBUF_ORBIT", value: 32768)
!133 = !DIEnumerator(name: "USER_HIDE_DOT", value: 65536)
!134 = !DIEnumerator(name: "USER_SHOW_ROTVIEWICON", value: 131072)
!135 = !DIEnumerator(name: "USER_SHOW_VIEWPORTNAME", value: 262144)
!136 = !DIEnumerator(name: "USER_CAM_LOCK_NO_PARENT", value: 524288)
!137 = !DIEnumerator(name: "USER_ZOOM_TO_MOUSEPOS", value: 1048576)
!138 = !DIEnumerator(name: "USER_SHOW_FPS", value: 2097152)
!139 = !DIEnumerator(name: "USER_MMB_PASTE", value: 4194304)
!140 = !DIEnumerator(name: "USER_MENUFIXEDORDER", value: 8388608)
!141 = !DIEnumerator(name: "USER_CONTINUOUS_MOUSE", value: 16777216)
!142 = !DIEnumerator(name: "USER_ZOOM_INVERT", value: 33554432)
!143 = !DIEnumerator(name: "USER_ZOOM_HORIZ", value: 67108864)
!144 = !DIEnumerator(name: "USER_SPLASH_DISABLE", value: 134217728)
!145 = !DIEnumerator(name: "USER_HIDE_RECENT", value: 268435456)
!146 = !DIEnumerator(name: "USER_SHOW_THUMBNAILS", value: 536870912)
!147 = !DIEnumerator(name: "USER_QUIT_PROMPT", value: 1073741824)
!148 = !DIEnumerator(name: "USER_HIDE_SYSTEM_BOOKMARKS", value: -2147483648)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !150, line: 54, baseType: !5, size: 32, elements: !151)
!150 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!151 = !{!152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349}
!152 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!154 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!155 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!156 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!157 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!158 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!159 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!160 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!161 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!162 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!163 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!164 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!165 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!166 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!167 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!168 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!169 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!170 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!171 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!172 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!173 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!174 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!175 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!176 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!177 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!178 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!179 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!180 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!181 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!182 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!183 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!184 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!185 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!186 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!187 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!188 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!189 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!190 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!191 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!192 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!193 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!194 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!195 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!196 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!197 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!198 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!199 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!200 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!201 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!202 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!203 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!204 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!205 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!206 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!207 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!208 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!209 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!210 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!211 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!212 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!213 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!214 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!215 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!216 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!217 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!218 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!219 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!220 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!221 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!222 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!223 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!224 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!225 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!226 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!227 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!228 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!229 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!230 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!231 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!232 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!233 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!234 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!235 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!236 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!237 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!238 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!239 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!240 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!241 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!242 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!243 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!244 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!245 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!246 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!247 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!248 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!249 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!250 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!251 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!252 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!253 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!254 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!255 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!256 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!257 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!258 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!259 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!260 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!261 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!262 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!263 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!264 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!265 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!266 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!267 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!268 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!269 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!270 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!271 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!272 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!273 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!274 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!275 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!276 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!277 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!278 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!279 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!280 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!281 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!282 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!283 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!284 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!285 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!286 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!287 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!288 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!289 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!290 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!291 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!292 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!293 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!294 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!295 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!296 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!297 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!298 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!299 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!300 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!301 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!302 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!303 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!304 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!305 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!306 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!307 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!308 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!309 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!310 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!311 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!312 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!313 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!314 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!315 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!316 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!317 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!318 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!319 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!320 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!321 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!322 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!323 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!324 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!325 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!326 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!327 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!328 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!329 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!330 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!331 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!332 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!333 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!334 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!335 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!336 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!337 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!338 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!339 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!340 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!341 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!342 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!343 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!344 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!345 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!346 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!347 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!348 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!349 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 48, baseType: !5, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355, !356}
!352 = !DIEnumerator(name: "ANIMPLAY_FLAG_REVERSE", value: 1, isUnsigned: true)
!353 = !DIEnumerator(name: "ANIMPLAY_FLAG_JUMPED", value: 2, isUnsigned: true)
!354 = !DIEnumerator(name: "ANIMPLAY_FLAG_SYNC", value: 4, isUnsigned: true)
!355 = !DIEnumerator(name: "ANIMPLAY_FLAG_NO_SYNC", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "ANIMPLAY_FLAG_USE_NEXT_FRAME", value: 16, isUnsigned: true)
!357 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !358, line: 43, baseType: !5, size: 32, elements: !359)
!358 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!360 = !DIEnumerator(name: "CURSOR_FACESEL", value: 1000, isUnsigned: true)
!361 = !DIEnumerator(name: "CURSOR_WAIT", value: 1001, isUnsigned: true)
!362 = !DIEnumerator(name: "CURSOR_EDIT", value: 1002, isUnsigned: true)
!363 = !DIEnumerator(name: "CURSOR_X_MOVE", value: 1003, isUnsigned: true)
!364 = !DIEnumerator(name: "CURSOR_Y_MOVE", value: 1004, isUnsigned: true)
!365 = !DIEnumerator(name: "CURSOR_HELP", value: 1005, isUnsigned: true)
!366 = !DIEnumerator(name: "CURSOR_STD", value: 1006, isUnsigned: true)
!367 = !DIEnumerator(name: "CURSOR_NONE", value: 1007, isUnsigned: true)
!368 = !DIEnumerator(name: "CURSOR_PENCIL", value: 1008, isUnsigned: true)
!369 = !DIEnumerator(name: "CURSOR_COPY", value: 1009, isUnsigned: true)
!370 = !{!371, !372, !2783, !3041, !963, !474, !410}
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !40, line: 80, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !40, line: 49, size: 1984, elements: !375)
!375 = !{!376, !446, !447, !448, !449, !450, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !374, file: !40, line: 50, baseType: !377, size: 960)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !378, line: 130, baseType: !379)
!378 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !378, line: 117, size: 960, elements: !380)
!380 = !{!381, !382, !383, !385, !405, !409, !411, !412, !413, !414}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !379, file: !378, line: 118, baseType: !371, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !379, file: !378, line: 118, baseType: !371, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !379, file: !378, line: 119, baseType: !384, size: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !379, file: !378, line: 120, baseType: !386, size: 64, offset: 192)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !378, line: 136, size: 17600, elements: !388)
!388 = !{!389, !390, !392, !395, !400, !401, !402}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !387, file: !378, line: 137, baseType: !377, size: 960)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !387, file: !378, line: 138, baseType: !391, size: 64, offset: 960)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !387, file: !378, line: 139, baseType: !393, size: 64, offset: 1024)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !378, line: 43, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !387, file: !378, line: 140, baseType: !396, size: 8192, offset: 1088)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 8192, elements: !398)
!397 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!398 = !{!399}
!399 = !DISubrange(count: 1024)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !387, file: !378, line: 141, baseType: !396, size: 8192, offset: 9280)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !387, file: !378, line: 148, baseType: !386, size: 64, offset: 17472)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !387, file: !378, line: 150, baseType: !403, size: 64, offset: 17536)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !378, line: 45, flags: DIFlagFwdDecl)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !379, file: !378, line: 121, baseType: !406, size: 528, offset: 256)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 528, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 66)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !379, file: !378, line: 126, baseType: !410, size: 16, offset: 784)
!410 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !379, file: !378, line: 127, baseType: !119, size: 32, offset: 800)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !379, file: !378, line: 128, baseType: !119, size: 32, offset: 832)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !379, file: !378, line: 128, baseType: !119, size: 32, offset: 864)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !379, file: !378, line: 129, baseType: !415, size: 64, offset: 896)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !378, line: 75, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !378, line: 62, size: 1024, elements: !418)
!418 = !{!419, !421, !422, !423, !424, !425, !429, !430, !444, !445}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !417, file: !378, line: 63, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !378, line: 63, baseType: !420, size: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !417, file: !378, line: 64, baseType: !397, size: 8, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !417, file: !378, line: 64, baseType: !397, size: 8, offset: 136)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !417, file: !378, line: 65, baseType: !410, size: 16, offset: 144)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !417, file: !378, line: 66, baseType: !426, size: 512, offset: 160)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 512, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !417, file: !378, line: 67, baseType: !119, size: 32, offset: 672)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !417, file: !378, line: 69, baseType: !431, size: 256, offset: 704)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !378, line: 60, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !378, line: 48, size: 256, elements: !433)
!433 = !{!434, !435, !442, !443}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !432, file: !378, line: 49, baseType: !371, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !432, file: !378, line: 58, baseType: !436, size: 128, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !437, line: 71, baseType: !438)
!437 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !437, line: 69, size: 128, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !438, file: !437, line: 70, baseType: !371, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !438, file: !437, line: 70, baseType: !371, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !432, file: !378, line: 59, baseType: !119, size: 32, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !432, file: !378, line: 59, baseType: !119, size: 32, offset: 224)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !417, file: !378, line: 70, baseType: !119, size: 32, offset: 960)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !417, file: !378, line: 74, baseType: !119, size: 32, offset: 992)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !374, file: !40, line: 52, baseType: !436, size: 128, offset: 960)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !374, file: !40, line: 53, baseType: !436, size: 128, offset: 1088)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !374, file: !40, line: 54, baseType: !436, size: 128, offset: 1216)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !374, file: !40, line: 55, baseType: !436, size: 128, offset: 1344)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !374, file: !40, line: 57, baseType: !451, size: 64, offset: 1472)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !453, line: 1216, size: 39680, elements: !454)
!453 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!454 = !{!455, !456, !459, !462, !1811, !1812, !1813, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !2181, !2395, !2398, !2637, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2659, !2660, !2661, !2662, !2663, !2671, !2737, !2744, !2745, !2752, !2753, !2759, !2760, !2761, !2762, !2763}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !452, file: !453, line: 1217, baseType: !377, size: 960)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !452, file: !453, line: 1218, baseType: !457, size: 64, offset: 960)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !453, line: 58, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !452, file: !453, line: 1220, baseType: !460, size: 64, offset: 1024)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !453, line: 50, flags: DIFlagFwdDecl)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !452, file: !453, line: 1221, baseType: !463, size: 64, offset: 1088)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !465, line: 52, size: 4224, elements: !466)
!465 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!466 = !{!467, !468, !469, !470, !471, !472, !473, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !537, !538, !542, !1806, !1807, !1808, !1809, !1810}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !464, file: !465, line: 53, baseType: !377, size: 960)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !464, file: !465, line: 54, baseType: !457, size: 64, offset: 960)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !464, file: !465, line: 56, baseType: !410, size: 16, offset: 1024)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !464, file: !465, line: 56, baseType: !410, size: 16, offset: 1040)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !464, file: !465, line: 57, baseType: !410, size: 16, offset: 1056)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !464, file: !465, line: 57, baseType: !410, size: 16, offset: 1072)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !464, file: !465, line: 59, baseType: !474, size: 32, offset: 1088)
!474 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !464, file: !465, line: 59, baseType: !474, size: 32, offset: 1120)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !464, file: !465, line: 59, baseType: !474, size: 32, offset: 1152)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !464, file: !465, line: 60, baseType: !474, size: 32, offset: 1184)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !464, file: !465, line: 60, baseType: !474, size: 32, offset: 1216)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !464, file: !465, line: 60, baseType: !474, size: 32, offset: 1248)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !464, file: !465, line: 61, baseType: !474, size: 32, offset: 1280)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !464, file: !465, line: 61, baseType: !474, size: 32, offset: 1312)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !464, file: !465, line: 61, baseType: !474, size: 32, offset: 1344)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !464, file: !465, line: 68, baseType: !474, size: 32, offset: 1376)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !464, file: !465, line: 68, baseType: !474, size: 32, offset: 1408)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !464, file: !465, line: 68, baseType: !474, size: 32, offset: 1440)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !464, file: !465, line: 69, baseType: !474, size: 32, offset: 1472)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !464, file: !465, line: 69, baseType: !474, size: 32, offset: 1504)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !464, file: !465, line: 74, baseType: !474, size: 32, offset: 1536)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !464, file: !465, line: 79, baseType: !474, size: 32, offset: 1568)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !464, file: !465, line: 81, baseType: !410, size: 16, offset: 1600)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !464, file: !465, line: 91, baseType: !410, size: 16, offset: 1616)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !464, file: !465, line: 92, baseType: !410, size: 16, offset: 1632)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !464, file: !465, line: 93, baseType: !410, size: 16, offset: 1648)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !464, file: !465, line: 94, baseType: !410, size: 16, offset: 1664)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !464, file: !465, line: 94, baseType: !410, size: 16, offset: 1680)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !464, file: !465, line: 94, baseType: !410, size: 16, offset: 1696)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !464, file: !465, line: 94, baseType: !410, size: 16, offset: 1712)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !464, file: !465, line: 96, baseType: !474, size: 32, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !464, file: !465, line: 96, baseType: !474, size: 32, offset: 1760)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !464, file: !465, line: 96, baseType: !474, size: 32, offset: 1792)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !464, file: !465, line: 96, baseType: !474, size: 32, offset: 1824)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !464, file: !465, line: 98, baseType: !474, size: 32, offset: 1856)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !464, file: !465, line: 98, baseType: !474, size: 32, offset: 1888)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !464, file: !465, line: 98, baseType: !474, size: 32, offset: 1920)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !464, file: !465, line: 98, baseType: !474, size: 32, offset: 1952)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !464, file: !465, line: 99, baseType: !474, size: 32, offset: 1984)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !464, file: !465, line: 99, baseType: !474, size: 32, offset: 2016)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !464, file: !465, line: 100, baseType: !474, size: 32, offset: 2048)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !464, file: !465, line: 100, baseType: !474, size: 32, offset: 2080)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !464, file: !465, line: 103, baseType: !410, size: 16, offset: 2112)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !464, file: !465, line: 103, baseType: !410, size: 16, offset: 2128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !464, file: !465, line: 103, baseType: !410, size: 16, offset: 2144)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !464, file: !465, line: 103, baseType: !410, size: 16, offset: 2160)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !464, file: !465, line: 106, baseType: !474, size: 32, offset: 2176)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !464, file: !465, line: 106, baseType: !474, size: 32, offset: 2208)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !464, file: !465, line: 106, baseType: !474, size: 32, offset: 2240)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !464, file: !465, line: 106, baseType: !474, size: 32, offset: 2272)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !464, file: !465, line: 107, baseType: !410, size: 16, offset: 2304)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !464, file: !465, line: 107, baseType: !410, size: 16, offset: 2320)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !464, file: !465, line: 107, baseType: !410, size: 16, offset: 2336)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !464, file: !465, line: 107, baseType: !410, size: 16, offset: 2352)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !464, file: !465, line: 108, baseType: !474, size: 32, offset: 2368)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !464, file: !465, line: 108, baseType: !474, size: 32, offset: 2400)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !464, file: !465, line: 109, baseType: !474, size: 32, offset: 2432)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !464, file: !465, line: 109, baseType: !474, size: 32, offset: 2464)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !464, file: !465, line: 110, baseType: !474, size: 32, offset: 2496)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !464, file: !465, line: 110, baseType: !474, size: 32, offset: 2528)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !464, file: !465, line: 110, baseType: !474, size: 32, offset: 2560)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !464, file: !465, line: 111, baseType: !410, size: 16, offset: 2592)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !464, file: !465, line: 111, baseType: !410, size: 16, offset: 2608)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !464, file: !465, line: 112, baseType: !410, size: 16, offset: 2624)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !464, file: !465, line: 112, baseType: !410, size: 16, offset: 2640)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !464, file: !465, line: 112, baseType: !410, size: 16, offset: 2656)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !464, file: !465, line: 115, baseType: !410, size: 16, offset: 2672)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !464, file: !465, line: 118, baseType: !536, size: 64, offset: 2688)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !464, file: !465, line: 118, baseType: !536, size: 64, offset: 2752)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !464, file: !465, line: 121, baseType: !539, size: 64, offset: 2816)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !541, line: 46, flags: DIFlagFwdDecl)
!541 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !464, file: !465, line: 122, baseType: !543, size: 1152, offset: 2880)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 1152, elements: !1804)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !541, line: 57, size: 2496, elements: !546)
!546 = !{!547, !548, !549, !550, !551, !552, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !545, file: !541, line: 59, baseType: !410, size: 16)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !545, file: !541, line: 59, baseType: !410, size: 16, offset: 16)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !545, file: !541, line: 59, baseType: !410, size: 16, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !545, file: !541, line: 59, baseType: !410, size: 16, offset: 48)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !545, file: !541, line: 60, baseType: !460, size: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !545, file: !541, line: 61, baseType: !553, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !541, line: 202, size: 3328, elements: !555)
!555 = !{!556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !625, !1517, !1518, !1593, !1619, !1645, !1646, !1714, !1735, !1743, !1744}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !554, file: !541, line: 203, baseType: !377, size: 960)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !554, file: !541, line: 204, baseType: !457, size: 64, offset: 960)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !554, file: !541, line: 206, baseType: !474, size: 32, offset: 1024)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !554, file: !541, line: 206, baseType: !474, size: 32, offset: 1056)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1088)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1120)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1152)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1184)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1216)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !554, file: !541, line: 207, baseType: !474, size: 32, offset: 1248)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !554, file: !541, line: 208, baseType: !474, size: 32, offset: 1280)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !554, file: !541, line: 208, baseType: !474, size: 32, offset: 1312)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !554, file: !541, line: 211, baseType: !474, size: 32, offset: 1344)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !554, file: !541, line: 211, baseType: !474, size: 32, offset: 1376)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !554, file: !541, line: 211, baseType: !474, size: 32, offset: 1408)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !554, file: !541, line: 211, baseType: !474, size: 32, offset: 1440)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !554, file: !541, line: 211, baseType: !474, size: 32, offset: 1472)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !554, file: !541, line: 214, baseType: !474, size: 32, offset: 1504)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !554, file: !541, line: 214, baseType: !474, size: 32, offset: 1536)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !554, file: !541, line: 217, baseType: !474, size: 32, offset: 1568)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !554, file: !541, line: 218, baseType: !474, size: 32, offset: 1600)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !554, file: !541, line: 219, baseType: !474, size: 32, offset: 1632)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !554, file: !541, line: 220, baseType: !474, size: 32, offset: 1664)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !554, file: !541, line: 221, baseType: !474, size: 32, offset: 1696)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !554, file: !541, line: 222, baseType: !410, size: 16, offset: 1728)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !554, file: !541, line: 222, baseType: !410, size: 16, offset: 1744)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !554, file: !541, line: 224, baseType: !410, size: 16, offset: 1760)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !554, file: !541, line: 224, baseType: !410, size: 16, offset: 1776)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !554, file: !541, line: 227, baseType: !410, size: 16, offset: 1792)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !554, file: !541, line: 227, baseType: !410, size: 16, offset: 1808)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !554, file: !541, line: 229, baseType: !410, size: 16, offset: 1824)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !554, file: !541, line: 229, baseType: !410, size: 16, offset: 1840)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !554, file: !541, line: 230, baseType: !410, size: 16, offset: 1856)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !554, file: !541, line: 230, baseType: !410, size: 16, offset: 1872)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !554, file: !541, line: 232, baseType: !474, size: 32, offset: 1888)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !554, file: !541, line: 232, baseType: !474, size: 32, offset: 1920)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !554, file: !541, line: 232, baseType: !474, size: 32, offset: 1952)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !554, file: !541, line: 232, baseType: !474, size: 32, offset: 1984)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !554, file: !541, line: 233, baseType: !119, size: 32, offset: 2016)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !554, file: !541, line: 234, baseType: !119, size: 32, offset: 2048)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !554, file: !541, line: 235, baseType: !410, size: 16, offset: 2080)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !554, file: !541, line: 235, baseType: !410, size: 16, offset: 2096)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !554, file: !541, line: 236, baseType: !410, size: 16, offset: 2112)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !554, file: !541, line: 239, baseType: !410, size: 16, offset: 2128)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !554, file: !541, line: 240, baseType: !119, size: 32, offset: 2144)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !554, file: !541, line: 241, baseType: !119, size: 32, offset: 2176)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !554, file: !541, line: 241, baseType: !119, size: 32, offset: 2208)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !554, file: !541, line: 241, baseType: !119, size: 32, offset: 2240)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !554, file: !541, line: 243, baseType: !474, size: 32, offset: 2272)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !554, file: !541, line: 243, baseType: !474, size: 32, offset: 2304)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !554, file: !541, line: 244, baseType: !474, size: 32, offset: 2336)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !554, file: !541, line: 246, baseType: !608, size: 320, offset: 2368)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !609, line: 50, size: 320, elements: !610)
!609 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !608, file: !609, line: 51, baseType: !451, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !608, file: !609, line: 53, baseType: !119, size: 32, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !608, file: !609, line: 54, baseType: !119, size: 32, offset: 96)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !608, file: !609, line: 55, baseType: !119, size: 32, offset: 128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !608, file: !609, line: 55, baseType: !119, size: 32, offset: 160)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !608, file: !609, line: 56, baseType: !397, size: 8, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !608, file: !609, line: 56, baseType: !397, size: 8, offset: 200)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !608, file: !609, line: 57, baseType: !397, size: 8, offset: 208)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !608, file: !609, line: 57, baseType: !397, size: 8, offset: 216)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !608, file: !609, line: 59, baseType: !410, size: 16, offset: 224)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !608, file: !609, line: 59, baseType: !410, size: 16, offset: 240)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !608, file: !609, line: 59, baseType: !410, size: 16, offset: 256)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !608, file: !609, line: 61, baseType: !410, size: 16, offset: 272)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !608, file: !609, line: 63, baseType: !119, size: 32, offset: 288)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !554, file: !541, line: 248, baseType: !626, size: 64, offset: 2688)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !628, line: 328, size: 3456, elements: !629)
!628 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!629 = !{!630, !631, !632, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1495, !1496, !1497, !1500, !1504, !1508, !1512, !1513, !1514, !1515, !1516}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !627, file: !628, line: 329, baseType: !377, size: 960)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !627, file: !628, line: 330, baseType: !457, size: 64, offset: 960)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !627, file: !628, line: 332, baseType: !633, size: 64, offset: 1024)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !635, line: 283, size: 4096, elements: !636)
!635 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!636 = !{!637, !638, !639, !640, !644, !645, !649, !1434, !1442, !1446, !1452, !1456, !1457, !1458, !1459, !1463, !1464}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !634, file: !635, line: 284, baseType: !119, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !634, file: !635, line: 285, baseType: !426, size: 512, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !634, file: !635, line: 287, baseType: !426, size: 512, offset: 544)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !634, file: !635, line: 288, baseType: !641, size: 2048, offset: 1056)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 2048, elements: !642)
!642 = !{!643}
!643 = !DISubrange(count: 256)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !634, file: !635, line: 289, baseType: !119, size: 32, offset: 3104)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !634, file: !635, line: 292, baseType: !646, size: 64, offset: 3136)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !626}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !634, file: !635, line: 293, baseType: !650, size: 64, offset: 3200)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{null, !626, !653}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !628, line: 167, size: 3712, elements: !655)
!655 = !{!656, !657, !658, !659, !660, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !654, file: !628, line: 168, baseType: !653, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !654, file: !628, line: 168, baseType: !653, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !654, file: !628, line: 168, baseType: !653, size: 64, offset: 128)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !654, file: !628, line: 170, baseType: !415, size: 64, offset: 192)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !654, file: !628, line: 172, baseType: !661, size: 64, offset: 256)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !635, line: 144, size: 6016, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !845, !846, !847, !1298, !1302, !1306, !1307, !1314, !1318, !1322, !1323, !1324, !1325, !1329, !1330, !1334, !1338, !1342, !1346, !1350, !1354, !1358, !1359, !1366, !1368, !1377, !1386}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !662, file: !635, line: 145, baseType: !371, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !662, file: !635, line: 145, baseType: !371, size: 64, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !662, file: !635, line: 146, baseType: !410, size: 16, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !662, file: !635, line: 148, baseType: !426, size: 512, offset: 144)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !662, file: !635, line: 149, baseType: !119, size: 32, offset: 672)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !662, file: !635, line: 151, baseType: !426, size: 512, offset: 704)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !662, file: !635, line: 152, baseType: !641, size: 2048, offset: 1216)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !662, file: !635, line: 153, baseType: !119, size: 32, offset: 3264)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !662, file: !635, line: 155, baseType: !474, size: 32, offset: 3296)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !662, file: !635, line: 155, baseType: !474, size: 32, offset: 3328)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !662, file: !635, line: 155, baseType: !474, size: 32, offset: 3360)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !662, file: !635, line: 156, baseType: !474, size: 32, offset: 3392)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !662, file: !635, line: 156, baseType: !474, size: 32, offset: 3424)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !662, file: !635, line: 156, baseType: !474, size: 32, offset: 3456)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !662, file: !635, line: 157, baseType: !410, size: 16, offset: 3488)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !662, file: !635, line: 157, baseType: !410, size: 16, offset: 3504)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !662, file: !635, line: 157, baseType: !410, size: 16, offset: 3520)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !662, file: !635, line: 160, baseType: !682, size: 64, offset: 3584)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !635, line: 109, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !635, line: 98, size: 1408, elements: !685)
!685 = !{!686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !844}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !684, file: !635, line: 99, baseType: !119, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !684, file: !635, line: 99, baseType: !119, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !684, file: !635, line: 100, baseType: !426, size: 512, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !684, file: !635, line: 101, baseType: !474, size: 32, offset: 576)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !684, file: !635, line: 101, baseType: !474, size: 32, offset: 608)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !684, file: !635, line: 101, baseType: !474, size: 32, offset: 640)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !684, file: !635, line: 101, baseType: !474, size: 32, offset: 672)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !684, file: !635, line: 102, baseType: !474, size: 32, offset: 704)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !684, file: !635, line: 102, baseType: !474, size: 32, offset: 736)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !684, file: !635, line: 103, baseType: !119, size: 32, offset: 768)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !684, file: !635, line: 104, baseType: !119, size: 32, offset: 800)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !684, file: !635, line: 107, baseType: !698, size: 64, offset: 832)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !628, line: 87, size: 2816, elements: !700)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !823}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !699, file: !628, line: 88, baseType: !698, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !699, file: !628, line: 88, baseType: !698, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !699, file: !628, line: 88, baseType: !698, size: 64, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !699, file: !628, line: 90, baseType: !415, size: 64, offset: 192)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !699, file: !628, line: 92, baseType: !426, size: 512, offset: 256)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !699, file: !628, line: 94, baseType: !426, size: 512, offset: 768)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !699, file: !628, line: 99, baseType: !371, size: 64, offset: 1280)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !699, file: !628, line: 101, baseType: !410, size: 16, offset: 1344)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !699, file: !628, line: 101, baseType: !410, size: 16, offset: 1360)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !699, file: !628, line: 102, baseType: !410, size: 16, offset: 1376)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !699, file: !628, line: 103, baseType: !410, size: 16, offset: 1392)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !699, file: !628, line: 104, baseType: !713, size: 64, offset: 1408)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !635, line: 114, size: 1600, elements: !715)
!715 = !{!716, !717, !739, !743, !747, !751, !755, !759, !760, !764, !793, !794, !795}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !714, file: !635, line: 115, baseType: !426, size: 512)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !714, file: !635, line: 117, baseType: !718, size: 64, offset: 512)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !721, !724, !726, !726, !737}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !723, line: 44, flags: DIFlagFwdDecl)
!723 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !635, line: 73, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !723, line: 55, size: 192, elements: !728)
!728 = !{!729, !733, !736}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !727, file: !723, line: 58, baseType: !730, size: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !727, file: !723, line: 56, size: 64, elements: !731)
!731 = !{!732}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !730, file: !723, line: 57, baseType: !371, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !727, file: !723, line: 60, baseType: !734, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !723, line: 41, flags: DIFlagFwdDecl)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !727, file: !723, line: 61, baseType: !371, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !714, file: !635, line: 118, baseType: !740, size: 64, offset: 576)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !721, !726, !726, !536}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !714, file: !635, line: 120, baseType: !744, size: 64, offset: 640)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !721, !724, !726}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !714, file: !635, line: 121, baseType: !748, size: 64, offset: 704)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !721, !726, !536}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !714, file: !635, line: 122, baseType: !752, size: 64, offset: 768)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{null, !626, !698, !734}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !714, file: !635, line: 123, baseType: !756, size: 64, offset: 832)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !626, !698, !653, !698, !737}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !714, file: !635, line: 124, baseType: !756, size: 64, offset: 896)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !714, file: !635, line: 125, baseType: !761, size: 64, offset: 960)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{null, !626, !698, !653, !698}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !714, file: !635, line: 128, baseType: !765, size: 256, offset: 1024)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !723, line: 436, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !723, line: 430, size: 256, elements: !767)
!767 = !{!768, !769, !772, !788}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !766, file: !723, line: 431, baseType: !371, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !766, file: !723, line: 432, baseType: !770, size: 64, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !723, line: 417, baseType: !735)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !766, file: !723, line: 433, baseType: !773, size: 64, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !723, line: 408, baseType: !774)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{!119, !721, !726, !777, !779}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !723, line: 38, flags: DIFlagFwdDecl)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !723, line: 348, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !723, line: 337, size: 256, elements: !782)
!782 = !{!783, !784, !785, !786, !787}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !781, file: !723, line: 339, baseType: !371, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !781, file: !723, line: 342, baseType: !777, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !781, file: !723, line: 345, baseType: !119, size: 32, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !781, file: !723, line: 347, baseType: !119, size: 32, offset: 160)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !781, file: !723, line: 347, baseType: !119, size: 32, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !766, file: !723, line: 434, baseType: !789, size: 64, offset: 192)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !723, line: 409, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{null, !371}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !714, file: !635, line: 129, baseType: !765, size: 256, offset: 1280)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !714, file: !635, line: 132, baseType: !119, size: 32, offset: 1536)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !714, file: !635, line: 132, baseType: !119, size: 32, offset: 1568)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !699, file: !628, line: 105, baseType: !426, size: 512, offset: 1472)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !699, file: !628, line: 107, baseType: !474, size: 32, offset: 1984)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !699, file: !628, line: 107, baseType: !474, size: 32, offset: 2016)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !699, file: !628, line: 109, baseType: !371, size: 64, offset: 2048)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !699, file: !628, line: 112, baseType: !410, size: 16, offset: 2112)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !699, file: !628, line: 114, baseType: !410, size: 16, offset: 2128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !699, file: !628, line: 115, baseType: !119, size: 32, offset: 2144)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !699, file: !628, line: 117, baseType: !371, size: 64, offset: 2176)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !699, file: !628, line: 122, baseType: !119, size: 32, offset: 2240)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !699, file: !628, line: 124, baseType: !119, size: 32, offset: 2272)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !699, file: !628, line: 126, baseType: !698, size: 64, offset: 2304)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !699, file: !628, line: 128, baseType: !808, size: 64, offset: 2368)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !628, line: 298, size: 448, elements: !810)
!810 = !{!811, !812, !813, !816, !817, !820, !821, !822}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !809, file: !628, line: 299, baseType: !808, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !809, file: !628, line: 299, baseType: !808, size: 64, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !809, file: !628, line: 301, baseType: !814, size: 64, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !628, line: 218, baseType: !654)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !809, file: !628, line: 301, baseType: !814, size: 64, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !809, file: !628, line: 302, baseType: !818, size: 64, offset: 256)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !628, line: 132, baseType: !699)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !809, file: !628, line: 302, baseType: !818, size: 64, offset: 320)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !809, file: !628, line: 304, baseType: !119, size: 32, offset: 384)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !809, file: !628, line: 305, baseType: !119, size: 32, offset: 416)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !699, file: !628, line: 131, baseType: !824, size: 384, offset: 2432)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !628, line: 73, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !628, line: 62, size: 384, elements: !826)
!826 = !{!827, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !825, file: !628, line: 63, baseType: !828, size: 128)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 128, elements: !829)
!829 = !{!830}
!830 = !DISubrange(count: 4)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !825, file: !628, line: 64, baseType: !474, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !825, file: !628, line: 64, baseType: !474, size: 32, offset: 160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !825, file: !628, line: 65, baseType: !371, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !825, file: !628, line: 66, baseType: !410, size: 16, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !825, file: !628, line: 67, baseType: !410, size: 16, offset: 272)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !825, file: !628, line: 68, baseType: !410, size: 16, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !825, file: !628, line: 69, baseType: !410, size: 16, offset: 304)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !825, file: !628, line: 70, baseType: !410, size: 16, offset: 320)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !825, file: !628, line: 71, baseType: !410, size: 16, offset: 336)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !825, file: !628, line: 72, baseType: !841, size: 32, offset: 352)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 32, elements: !842)
!842 = !{!843}
!843 = !DISubrange(count: 2)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !684, file: !635, line: 108, baseType: !426, size: 512, offset: 896)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !662, file: !635, line: 160, baseType: !682, size: 64, offset: 3648)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !662, file: !635, line: 162, baseType: !426, size: 512, offset: 3712)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !662, file: !635, line: 165, baseType: !848, size: 64, offset: 4224)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !851, !853, !1258, !626, !653, !1294}
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !40, line: 230, size: 3072, elements: !855)
!855 = !{!856, !857, !858, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1257}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !854, file: !40, line: 231, baseType: !853, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !854, file: !40, line: 231, baseType: !853, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !854, file: !40, line: 233, baseType: !859, size: 1280, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !860, line: 71, baseType: !861)
!860 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !860, line: 40, size: 1280, elements: !862)
!862 = !{!863, !872, !873, !881, !882, !883, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !906}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !861, file: !860, line: 41, baseType: !864, size: 128)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !865, line: 95, baseType: !866)
!865 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !865, line: 92, size: 128, elements: !867)
!867 = !{!868, !869, !870, !871}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !866, file: !865, line: 93, baseType: !474, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !866, file: !865, line: 93, baseType: !474, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !866, file: !865, line: 94, baseType: !474, size: 32, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !866, file: !865, line: 94, baseType: !474, size: 32, offset: 96)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !861, file: !860, line: 41, baseType: !864, size: 128, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !861, file: !860, line: 42, baseType: !874, size: 128, offset: 256)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !865, line: 89, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !865, line: 86, size: 128, elements: !876)
!876 = !{!877, !878, !879, !880}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !875, file: !865, line: 87, baseType: !119, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !875, file: !865, line: 87, baseType: !119, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !875, file: !865, line: 88, baseType: !119, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !875, file: !865, line: 88, baseType: !119, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !861, file: !860, line: 42, baseType: !874, size: 128, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !861, file: !860, line: 43, baseType: !874, size: 128, offset: 512)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !861, file: !860, line: 45, baseType: !884, size: 64, offset: 640)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 64, elements: !842)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !861, file: !860, line: 45, baseType: !884, size: 64, offset: 704)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !861, file: !860, line: 46, baseType: !474, size: 32, offset: 768)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !861, file: !860, line: 46, baseType: !474, size: 32, offset: 800)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !861, file: !860, line: 48, baseType: !410, size: 16, offset: 832)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !861, file: !860, line: 49, baseType: !410, size: 16, offset: 848)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !861, file: !860, line: 51, baseType: !410, size: 16, offset: 864)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !861, file: !860, line: 52, baseType: !410, size: 16, offset: 880)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !861, file: !860, line: 53, baseType: !410, size: 16, offset: 896)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !861, file: !860, line: 55, baseType: !410, size: 16, offset: 912)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !861, file: !860, line: 56, baseType: !410, size: 16, offset: 928)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !861, file: !860, line: 58, baseType: !410, size: 16, offset: 944)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !861, file: !860, line: 58, baseType: !410, size: 16, offset: 960)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !861, file: !860, line: 59, baseType: !410, size: 16, offset: 976)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !861, file: !860, line: 59, baseType: !410, size: 16, offset: 992)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !861, file: !860, line: 61, baseType: !410, size: 16, offset: 1008)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !861, file: !860, line: 63, baseType: !536, size: 64, offset: 1024)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !861, file: !860, line: 64, baseType: !119, size: 32, offset: 1088)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !861, file: !860, line: 65, baseType: !119, size: 32, offset: 1120)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !861, file: !860, line: 68, baseType: !904, size: 64, offset: 1152)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !860, line: 68, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !861, file: !860, line: 69, baseType: !907, size: 64, offset: 1216)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !909, line: 490, size: 768, elements: !910)
!909 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!910 = !{!911, !912, !913, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !909, line: 491, baseType: !907, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !908, file: !909, line: 491, baseType: !907, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !908, file: !909, line: 493, baseType: !914, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !916, line: 169, size: 2048, elements: !917)
!916 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!917 = !{!918, !919, !920, !921, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !985, !988, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !915, file: !916, line: 170, baseType: !914, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !915, file: !916, line: 170, baseType: !914, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !915, file: !916, line: 172, baseType: !371, size: 64, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !915, file: !916, line: 174, baseType: !922, size: 64, offset: 192)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !915, file: !916, line: 175, baseType: !922, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !915, file: !916, line: 176, baseType: !426, size: 512, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !915, file: !916, line: 178, baseType: !410, size: 16, offset: 832)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !915, file: !916, line: 178, baseType: !410, size: 16, offset: 848)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !915, file: !916, line: 178, baseType: !410, size: 16, offset: 864)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !915, file: !916, line: 178, baseType: !410, size: 16, offset: 880)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !915, file: !916, line: 179, baseType: !410, size: 16, offset: 896)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !915, file: !916, line: 180, baseType: !410, size: 16, offset: 912)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !915, file: !916, line: 181, baseType: !410, size: 16, offset: 928)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !915, file: !916, line: 182, baseType: !410, size: 16, offset: 944)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !915, file: !916, line: 183, baseType: !410, size: 16, offset: 960)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !915, file: !916, line: 184, baseType: !410, size: 16, offset: 976)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !915, file: !916, line: 185, baseType: !410, size: 16, offset: 992)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !915, file: !916, line: 186, baseType: !410, size: 16, offset: 1008)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !915, file: !916, line: 188, baseType: !119, size: 32, offset: 1024)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !915, file: !916, line: 190, baseType: !410, size: 16, offset: 1056)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !915, file: !916, line: 191, baseType: !410, size: 16, offset: 1072)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !915, file: !916, line: 194, baseType: !941, size: 64, offset: 1088)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !909, line: 421, size: 960, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !952, !956, !957, !958, !959, !960, !961, !962, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !981, !982, !983, !984}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !942, file: !909, line: 422, baseType: !941, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !942, file: !909, line: 422, baseType: !941, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !942, file: !909, line: 424, baseType: !410, size: 16, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !942, file: !909, line: 425, baseType: !410, size: 16, offset: 144)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !942, file: !909, line: 426, baseType: !119, size: 32, offset: 160)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !942, file: !909, line: 426, baseType: !119, size: 32, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !942, file: !909, line: 427, baseType: !951, size: 64, offset: 224)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 64, elements: !842)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !942, file: !909, line: 428, baseType: !953, size: 48, offset: 288)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 48, elements: !954)
!954 = !{!955}
!955 = !DISubrange(count: 6)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !942, file: !909, line: 431, baseType: !397, size: 8, offset: 336)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !942, file: !909, line: 432, baseType: !397, size: 8, offset: 344)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !942, file: !909, line: 435, baseType: !410, size: 16, offset: 352)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !942, file: !909, line: 436, baseType: !410, size: 16, offset: 368)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !942, file: !909, line: 437, baseType: !119, size: 32, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !942, file: !909, line: 437, baseType: !119, size: 32, offset: 416)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !942, file: !909, line: 438, baseType: !963, size: 64, offset: 448)
!963 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !942, file: !909, line: 439, baseType: !119, size: 32, offset: 512)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !942, file: !909, line: 439, baseType: !119, size: 32, offset: 544)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !942, file: !909, line: 442, baseType: !410, size: 16, offset: 576)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !942, file: !909, line: 442, baseType: !410, size: 16, offset: 592)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !942, file: !909, line: 442, baseType: !410, size: 16, offset: 608)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !942, file: !909, line: 442, baseType: !410, size: 16, offset: 624)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !942, file: !909, line: 443, baseType: !410, size: 16, offset: 640)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !942, file: !909, line: 446, baseType: !410, size: 16, offset: 656)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !942, file: !909, line: 449, baseType: !737, size: 64, offset: 704)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !942, file: !909, line: 452, baseType: !974, size: 64, offset: 768)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !909, line: 463, size: 128, elements: !976)
!976 = !{!977, !978, !979, !980}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !975, file: !909, line: 464, baseType: !119, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !975, file: !909, line: 465, baseType: !474, size: 32, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !975, file: !909, line: 466, baseType: !474, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !975, file: !909, line: 467, baseType: !474, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !942, file: !909, line: 455, baseType: !410, size: 16, offset: 832)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !942, file: !909, line: 456, baseType: !410, size: 16, offset: 848)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !942, file: !909, line: 457, baseType: !119, size: 32, offset: 864)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !942, file: !909, line: 458, baseType: !371, size: 64, offset: 896)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !915, file: !916, line: 196, baseType: !986, size: 64, offset: 1152)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !916, line: 55, flags: DIFlagFwdDecl)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !915, file: !916, line: 198, baseType: !989, size: 64, offset: 1216)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !909, line: 398, size: 448, elements: !991)
!991 = !{!992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !990, file: !909, line: 399, baseType: !989, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !990, file: !909, line: 399, baseType: !989, size: 64, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !990, file: !909, line: 400, baseType: !119, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !990, file: !909, line: 401, baseType: !119, size: 32, offset: 160)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !990, file: !909, line: 402, baseType: !119, size: 32, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !990, file: !909, line: 403, baseType: !119, size: 32, offset: 224)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !990, file: !909, line: 404, baseType: !119, size: 32, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !990, file: !909, line: 405, baseType: !119, size: 32, offset: 288)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !990, file: !909, line: 407, baseType: !371, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !990, file: !909, line: 414, baseType: !371, size: 64, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !915, file: !916, line: 200, baseType: !119, size: 32, offset: 1280)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !915, file: !916, line: 200, baseType: !119, size: 32, offset: 1312)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !915, file: !916, line: 201, baseType: !371, size: 64, offset: 1344)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !915, file: !916, line: 203, baseType: !436, size: 128, offset: 1408)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !915, file: !916, line: 204, baseType: !436, size: 128, offset: 1536)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !915, file: !916, line: 205, baseType: !436, size: 128, offset: 1664)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !915, file: !916, line: 207, baseType: !436, size: 128, offset: 1792)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !915, file: !916, line: 208, baseType: !436, size: 128, offset: 1920)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !908, file: !909, line: 495, baseType: !963, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !908, file: !909, line: 496, baseType: !119, size: 32, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !908, file: !909, line: 497, baseType: !371, size: 64, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !908, file: !909, line: 499, baseType: !963, size: 64, offset: 384)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !908, file: !909, line: 500, baseType: !963, size: 64, offset: 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !908, file: !909, line: 502, baseType: !963, size: 64, offset: 512)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !908, file: !909, line: 503, baseType: !963, size: 64, offset: 576)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !908, file: !909, line: 504, baseType: !963, size: 64, offset: 640)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !908, file: !909, line: 505, baseType: !119, size: 32, offset: 704)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !854, file: !40, line: 234, baseType: !874, size: 128, offset: 1408)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !854, file: !40, line: 235, baseType: !874, size: 128, offset: 1536)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !854, file: !40, line: 236, baseType: !410, size: 16, offset: 1664)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !854, file: !40, line: 236, baseType: !410, size: 16, offset: 1680)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !854, file: !40, line: 238, baseType: !410, size: 16, offset: 1696)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !854, file: !40, line: 239, baseType: !410, size: 16, offset: 1712)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !854, file: !40, line: 240, baseType: !410, size: 16, offset: 1728)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !854, file: !40, line: 241, baseType: !410, size: 16, offset: 1744)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !854, file: !40, line: 243, baseType: !474, size: 32, offset: 1760)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !854, file: !40, line: 244, baseType: !410, size: 16, offset: 1792)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !854, file: !40, line: 244, baseType: !410, size: 16, offset: 1808)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !854, file: !40, line: 246, baseType: !410, size: 16, offset: 1824)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !854, file: !40, line: 247, baseType: !410, size: 16, offset: 1840)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !854, file: !40, line: 248, baseType: !410, size: 16, offset: 1856)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !854, file: !40, line: 249, baseType: !410, size: 16, offset: 1872)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !854, file: !40, line: 250, baseType: !410, size: 16, offset: 1888)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !854, file: !40, line: 251, baseType: !410, size: 16, offset: 1904)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !854, file: !40, line: 253, baseType: !1037, size: 64, offset: 1920)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1039, line: 116, size: 1472, elements: !1040)
!1039 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1040 = !{!1041, !1042, !1043, !1044, !1093, !1094, !1098, !1221, !1225, !1229, !1230, !1231, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1038, file: !1039, line: 117, baseType: !1037, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1038, file: !1039, line: 117, baseType: !1037, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1038, file: !1039, line: 119, baseType: !119, size: 32, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1038, file: !1039, line: 122, baseType: !1045, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{null, !1048, !853}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !916, line: 128, size: 2816, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1069, !1070, !1071, !1072, !1073, !1084, !1085, !1086, !1087, !1088, !1089}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1049, file: !916, line: 129, baseType: !377, size: 960)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !1049, file: !916, line: 131, baseType: !914, size: 64, offset: 960)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !1049, file: !916, line: 131, baseType: !914, size: 64, offset: 1024)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1049, file: !916, line: 132, baseType: !436, size: 128, offset: 1088)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1049, file: !916, line: 134, baseType: !119, size: 32, offset: 1216)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !1049, file: !916, line: 135, baseType: !410, size: 16, offset: 1248)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !1049, file: !916, line: 136, baseType: !410, size: 16, offset: 1264)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !1049, file: !916, line: 138, baseType: !436, size: 128, offset: 1280)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1049, file: !916, line: 140, baseType: !436, size: 128, offset: 1408)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1049, file: !916, line: 142, baseType: !1061, size: 320, offset: 1536)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !916, line: 106, size: 320, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1067, !1068}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1061, file: !916, line: 107, baseType: !436, size: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !1061, file: !916, line: 108, baseType: !119, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !1061, file: !916, line: 109, baseType: !119, size: 32, offset: 160)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1061, file: !916, line: 110, baseType: !119, size: 32, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1061, file: !916, line: 110, baseType: !119, size: 32, offset: 224)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !1061, file: !916, line: 111, baseType: !907, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !1049, file: !916, line: 144, baseType: !436, size: 128, offset: 1856)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !1049, file: !916, line: 146, baseType: !436, size: 128, offset: 1984)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !1049, file: !916, line: 148, baseType: !436, size: 128, offset: 2112)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !1049, file: !916, line: 150, baseType: !436, size: 128, offset: 2240)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !1049, file: !916, line: 151, baseType: !1074, size: 64, offset: 2368)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !916, line: 310, size: 1344, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1075, file: !916, line: 311, baseType: !1074, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1075, file: !916, line: 311, baseType: !1074, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1075, file: !916, line: 313, baseType: !426, size: 512, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !1075, file: !916, line: 314, baseType: !426, size: 512, offset: 640)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !1075, file: !916, line: 316, baseType: !436, size: 128, offset: 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !1075, file: !916, line: 317, baseType: !119, size: 32, offset: 1280)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1075, file: !916, line: 317, baseType: !119, size: 32, offset: 1312)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !1049, file: !916, line: 152, baseType: !1074, size: 64, offset: 2432)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !1049, file: !916, line: 153, baseType: !1074, size: 64, offset: 2496)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !1049, file: !916, line: 155, baseType: !436, size: 128, offset: 2560)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !1049, file: !916, line: 156, baseType: !907, size: 64, offset: 2688)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !1049, file: !916, line: 158, baseType: !397, size: 8, offset: 2752)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1049, file: !916, line: 159, baseType: !1090, size: 56, offset: 2760)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 56, elements: !1091)
!1091 = !{!1092}
!1092 = !DISubrange(count: 7)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1038, file: !1039, line: 124, baseType: !1045, size: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1038, file: !1039, line: 126, baseType: !1095, size: 64, offset: 320)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !851, !853}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1038, file: !1039, line: 128, baseType: !1099, size: 64, offset: 384)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !922, !1102, !853, !1177}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !40, line: 203, size: 1280, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1217, !1218, !1219, !1220}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1103, file: !40, line: 204, baseType: !1102, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1103, file: !40, line: 204, baseType: !1102, size: 64, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1103, file: !40, line: 206, baseType: !1108, size: 64, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !40, line: 87, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !40, line: 82, size: 256, elements: !1111)
!1111 = !{!1112, !1114, !1115, !1116, !1122, !1123}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1110, file: !40, line: 83, baseType: !1113, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1110, file: !40, line: 83, baseType: !1113, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !1110, file: !40, line: 83, baseType: !1113, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1110, file: !40, line: 84, baseType: !1117, size: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !865, line: 43, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !865, line: 41, size: 32, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1118, file: !865, line: 42, baseType: !410, size: 16)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1118, file: !865, line: 42, baseType: !410, size: 16, offset: 16)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1110, file: !40, line: 86, baseType: !410, size: 16, offset: 224)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1110, file: !40, line: 86, baseType: !410, size: 16, offset: 240)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1103, file: !40, line: 206, baseType: !1108, size: 64, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1103, file: !40, line: 206, baseType: !1108, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1103, file: !40, line: 206, baseType: !1108, size: 64, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !1103, file: !40, line: 207, baseType: !372, size: 64, offset: 384)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !1103, file: !40, line: 209, baseType: !874, size: 128, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1103, file: !40, line: 211, baseType: !397, size: 8, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !1103, file: !40, line: 211, baseType: !397, size: 8, offset: 584)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1103, file: !40, line: 212, baseType: !410, size: 16, offset: 592)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1103, file: !40, line: 212, baseType: !410, size: 16, offset: 608)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !1103, file: !40, line: 214, baseType: !410, size: 16, offset: 624)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1103, file: !40, line: 215, baseType: !410, size: 16, offset: 640)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1103, file: !40, line: 216, baseType: !410, size: 16, offset: 656)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !1103, file: !40, line: 217, baseType: !410, size: 16, offset: 672)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1103, file: !40, line: 219, baseType: !397, size: 8, offset: 688)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1103, file: !40, line: 219, baseType: !397, size: 8, offset: 696)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1103, file: !40, line: 221, baseType: !1140, size: 64, offset: 704)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1039, line: 66, size: 1728, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1164, !1168, !1172, !1173, !1190, !1194, !1198, !1202, !1206, !1207, !1214, !1215, !1216}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1141, file: !1039, line: 67, baseType: !1140, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1141, file: !1039, line: 67, baseType: !1140, size: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1141, file: !1039, line: 69, baseType: !426, size: 512, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1141, file: !1039, line: 70, baseType: !119, size: 32, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !1141, file: !1039, line: 71, baseType: !119, size: 32, offset: 672)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !1141, file: !1039, line: 74, baseType: !1149, size: 64, offset: 704)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!1152, !851}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !4, line: 85, size: 448, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1153, file: !4, line: 86, baseType: !1152, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1153, file: !4, line: 86, baseType: !1152, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1153, file: !4, line: 87, baseType: !436, size: 128, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1153, file: !4, line: 88, baseType: !119, size: 32, offset: 256)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1153, file: !4, line: 89, baseType: !474, size: 32, offset: 288)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1153, file: !4, line: 90, baseType: !1161, size: 128, offset: 320)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 128, elements: !1162)
!1162 = !{!1163}
!1163 = !DISubrange(count: 8)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1141, file: !1039, line: 76, baseType: !1165, size: 64, offset: 768)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{null, !1152}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1141, file: !1039, line: 79, baseType: !1169, size: 64, offset: 832)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !1048, !1102}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1141, file: !1039, line: 81, baseType: !1169, size: 64, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1141, file: !1039, line: 83, baseType: !1174, size: 64, offset: 960)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{null, !922, !1102, !1177}
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !909, line: 195, size: 512, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1178, file: !909, line: 196, baseType: !1177, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1178, file: !909, line: 196, baseType: !1177, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !1178, file: !909, line: 198, baseType: !1048, size: 64, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1178, file: !909, line: 199, baseType: !914, size: 64, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1178, file: !909, line: 201, baseType: !119, size: 32, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1178, file: !909, line: 202, baseType: !5, size: 32, offset: 288)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1178, file: !909, line: 202, baseType: !5, size: 32, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1178, file: !909, line: 202, baseType: !5, size: 32, offset: 352)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1178, file: !909, line: 202, baseType: !5, size: 32, offset: 384)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1178, file: !909, line: 204, baseType: !371, size: 64, offset: 448)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !1141, file: !1039, line: 86, baseType: !1191, size: 64, offset: 1024)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !851, !1102}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !1141, file: !1039, line: 89, baseType: !1195, size: 64, offset: 1088)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!1152, !1152}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !1141, file: !1039, line: 92, baseType: !1199, size: 64, offset: 1152)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{null}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !1141, file: !1039, line: 94, baseType: !1203, size: 64, offset: 1216)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !1074}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !1141, file: !1039, line: 96, baseType: !1199, size: 64, offset: 1280)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1141, file: !1039, line: 99, baseType: !1208, size: 64, offset: 1344)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!119, !851, !737, !1211}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !1213, line: 71, flags: DIFlagFwdDecl)
!1213 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !1141, file: !1039, line: 102, baseType: !436, size: 128, offset: 1408)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !1141, file: !1039, line: 105, baseType: !436, size: 128, offset: 1536)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !1141, file: !1039, line: 110, baseType: !119, size: 32, offset: 1664)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !1103, file: !40, line: 223, baseType: !436, size: 128, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1103, file: !40, line: 224, baseType: !436, size: 128, offset: 896)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1103, file: !40, line: 225, baseType: !436, size: 128, offset: 1024)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !1103, file: !40, line: 227, baseType: !436, size: 128, offset: 1152)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1038, file: !1039, line: 130, baseType: !1222, size: 64, offset: 448)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{null, !853}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !1038, file: !1039, line: 133, baseType: !1226, size: 64, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!371, !371}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !1038, file: !1039, line: 137, baseType: !1199, size: 64, offset: 576)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !1038, file: !1039, line: 139, baseType: !1203, size: 64, offset: 640)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1038, file: !1039, line: 141, baseType: !1232, size: 64, offset: 704)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{null, !914, !1102, !853}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1038, file: !1039, line: 144, baseType: !1208, size: 64, offset: 768)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !1038, file: !1039, line: 147, baseType: !436, size: 128, offset: 832)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !1038, file: !1039, line: 150, baseType: !436, size: 128, offset: 960)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !1038, file: !1039, line: 153, baseType: !436, size: 128, offset: 1088)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !1038, file: !1039, line: 156, baseType: !119, size: 32, offset: 1216)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !1038, file: !1039, line: 156, baseType: !119, size: 32, offset: 1248)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !1038, file: !1039, line: 158, baseType: !119, size: 32, offset: 1280)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !1038, file: !1039, line: 158, baseType: !119, size: 32, offset: 1312)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !1038, file: !1039, line: 160, baseType: !119, size: 32, offset: 1344)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !1038, file: !1039, line: 162, baseType: !410, size: 16, offset: 1376)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1038, file: !1039, line: 162, baseType: !410, size: 16, offset: 1392)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !1038, file: !1039, line: 164, baseType: !410, size: 16, offset: 1408)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !854, file: !40, line: 255, baseType: !436, size: 128, offset: 1984)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !854, file: !40, line: 256, baseType: !436, size: 128, offset: 2112)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !854, file: !40, line: 257, baseType: !436, size: 128, offset: 2240)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !854, file: !40, line: 258, baseType: !436, size: 128, offset: 2368)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !854, file: !40, line: 259, baseType: !436, size: 128, offset: 2496)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !854, file: !40, line: 260, baseType: !436, size: 128, offset: 2624)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !854, file: !40, line: 261, baseType: !436, size: 128, offset: 2752)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !854, file: !40, line: 263, baseType: !907, size: 64, offset: 2880)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !854, file: !40, line: 265, baseType: !1256, size: 64, offset: 2944)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !854, file: !40, line: 266, baseType: !371, size: 64, offset: 3008)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !4, line: 925, size: 3200, elements: !1260)
!1260 = !{!1261, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1259, file: !4, line: 926, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !4, line: 91, baseType: !1153)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1259, file: !4, line: 926, baseType: !1262, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1259, file: !4, line: 927, baseType: !436, size: 128, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1259, file: !4, line: 928, baseType: !119, size: 32, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1259, file: !4, line: 929, baseType: !474, size: 32, offset: 288)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1259, file: !4, line: 930, baseType: !1161, size: 128, offset: 320)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1259, file: !4, line: 932, baseType: !859, size: 1280, offset: 448)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1259, file: !4, line: 934, baseType: !384, size: 64, offset: 1728)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1259, file: !4, line: 934, baseType: !384, size: 64, offset: 1792)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1259, file: !4, line: 935, baseType: !410, size: 16, offset: 1856)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1259, file: !4, line: 935, baseType: !410, size: 16, offset: 1872)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1259, file: !4, line: 936, baseType: !474, size: 32, offset: 1888)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1259, file: !4, line: 936, baseType: !474, size: 32, offset: 1920)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1259, file: !4, line: 938, baseType: !474, size: 32, offset: 1952)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1259, file: !4, line: 938, baseType: !474, size: 32, offset: 1984)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !1259, file: !4, line: 939, baseType: !474, size: 32, offset: 2016)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1259, file: !4, line: 940, baseType: !884, size: 64, offset: 2048)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !1259, file: !4, line: 947, baseType: !436, size: 128, offset: 2112)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1259, file: !4, line: 949, baseType: !626, size: 64, offset: 2240)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !1259, file: !4, line: 949, baseType: !626, size: 64, offset: 2304)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !1259, file: !4, line: 952, baseType: !426, size: 512, offset: 2368)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !1259, file: !4, line: 953, baseType: !119, size: 32, offset: 2880)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1259, file: !4, line: 954, baseType: !119, size: 32, offset: 2912)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !1259, file: !4, line: 956, baseType: !410, size: 16, offset: 2944)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !1259, file: !4, line: 957, baseType: !410, size: 16, offset: 2960)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1259, file: !4, line: 958, baseType: !410, size: 16, offset: 2976)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1259, file: !4, line: 959, baseType: !410, size: 16, offset: 2992)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !1259, file: !4, line: 960, baseType: !436, size: 128, offset: 3008)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1259, file: !4, line: 962, baseType: !1292, size: 64, offset: 3136)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !453, line: 61, flags: DIFlagFwdDecl)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !628, line: 274, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !628, line: 271, size: 32, elements: !1296)
!1296 = !{!1297}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1295, file: !628, line: 273, baseType: !5, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !662, file: !635, line: 168, baseType: !1299, size: 64, offset: 4288)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{null, !851, !626, !653}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !662, file: !635, line: 171, baseType: !1303, size: 64, offset: 4352)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !724, !721, !726}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !662, file: !635, line: 173, baseType: !1303, size: 64, offset: 4416)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !662, file: !635, line: 176, baseType: !1308, size: 64, offset: 4480)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{null, !1258, !1311, !653, !119, !119}
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1313, line: 136, flags: DIFlagFwdDecl)
!1313 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !662, file: !635, line: 179, baseType: !1315, size: 64, offset: 4544)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !626, !653, !1256, !119}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !662, file: !635, line: 181, baseType: !1319, size: 64, offset: 4608)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!119, !653, !119, !119}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !662, file: !635, line: 183, baseType: !1319, size: 64, offset: 4672)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !662, file: !635, line: 185, baseType: !1319, size: 64, offset: 4736)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !662, file: !635, line: 188, baseType: !650, size: 64, offset: 4800)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !662, file: !635, line: 190, baseType: !1326, size: 64, offset: 4864)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{null, !626, !653, !384}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !662, file: !635, line: 193, baseType: !650, size: 64, offset: 4928)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !662, file: !635, line: 195, baseType: !1331, size: 64, offset: 4992)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{null, !653}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !662, file: !635, line: 197, baseType: !1335, size: 64, offset: 5056)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{null, !626, !653, !653}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !662, file: !635, line: 200, baseType: !1339, size: 64, offset: 5120)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{null, !851, !726}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !662, file: !635, line: 201, baseType: !1343, size: 64, offset: 5184)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !726}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !662, file: !635, line: 202, baseType: !1347, size: 64, offset: 5248)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !726, !653}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !662, file: !635, line: 205, baseType: !1351, size: 64, offset: 5312)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!119, !661, !626}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !662, file: !635, line: 207, baseType: !1355, size: 64, offset: 5376)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!119, !653, !626}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !662, file: !635, line: 210, baseType: !650, size: 64, offset: 5440)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !662, file: !635, line: 213, baseType: !1360, size: 64, offset: 5504)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !635, line: 135, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!371, !1364, !653, !1294}
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !635, line: 62, flags: DIFlagFwdDecl)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !662, file: !635, line: 214, baseType: !1367, size: 64, offset: 5568)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !635, line: 136, baseType: !790)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !662, file: !635, line: 215, baseType: !1369, size: 64, offset: 5632)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !635, line: 137, baseType: !1370)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{null, !371, !119, !653, !1373, !1375, !1375}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !635, line: 63, flags: DIFlagFwdDecl)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !662, file: !635, line: 217, baseType: !1378, size: 64, offset: 5696)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !635, line: 138, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!119, !1382, !653, !1373, !1384, !1384}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !635, line: 64, flags: DIFlagFwdDecl)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !635, line: 66, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !662, file: !635, line: 220, baseType: !765, size: 256, offset: 5760)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !654, file: !628, line: 173, baseType: !426, size: 512, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !654, file: !628, line: 175, baseType: !426, size: 512, offset: 832)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !654, file: !628, line: 176, baseType: !119, size: 32, offset: 1344)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !654, file: !628, line: 177, baseType: !410, size: 16, offset: 1376)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !654, file: !628, line: 177, baseType: !410, size: 16, offset: 1392)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !654, file: !628, line: 178, baseType: !410, size: 16, offset: 1408)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !654, file: !628, line: 178, baseType: !410, size: 16, offset: 1424)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !654, file: !628, line: 179, baseType: !410, size: 16, offset: 1440)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !654, file: !628, line: 179, baseType: !410, size: 16, offset: 1456)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !654, file: !628, line: 180, baseType: !410, size: 16, offset: 1472)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !654, file: !628, line: 181, baseType: !410, size: 16, offset: 1488)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !654, file: !628, line: 182, baseType: !1399, size: 96, offset: 1504)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 96, elements: !1400)
!1400 = !{!1401}
!1401 = !DISubrange(count: 3)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !654, file: !628, line: 184, baseType: !436, size: 128, offset: 1600)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !654, file: !628, line: 184, baseType: !436, size: 128, offset: 1728)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !654, file: !628, line: 185, baseType: !653, size: 64, offset: 1856)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !654, file: !628, line: 186, baseType: !384, size: 64, offset: 1920)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !654, file: !628, line: 187, baseType: !371, size: 64, offset: 1984)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !654, file: !628, line: 188, baseType: !653, size: 64, offset: 2048)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !654, file: !628, line: 189, baseType: !436, size: 128, offset: 2112)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !654, file: !628, line: 191, baseType: !474, size: 32, offset: 2240)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !654, file: !628, line: 191, baseType: !474, size: 32, offset: 2272)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !654, file: !628, line: 192, baseType: !474, size: 32, offset: 2304)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !654, file: !628, line: 192, baseType: !474, size: 32, offset: 2336)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !654, file: !628, line: 193, baseType: !474, size: 32, offset: 2368)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !654, file: !628, line: 194, baseType: !474, size: 32, offset: 2400)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !654, file: !628, line: 194, baseType: !474, size: 32, offset: 2432)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !654, file: !628, line: 196, baseType: !119, size: 32, offset: 2464)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !654, file: !628, line: 198, baseType: !426, size: 512, offset: 2496)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !654, file: !628, line: 199, baseType: !410, size: 16, offset: 3008)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !654, file: !628, line: 199, baseType: !410, size: 16, offset: 3024)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !654, file: !628, line: 200, baseType: !474, size: 32, offset: 3040)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !654, file: !628, line: 200, baseType: !474, size: 32, offset: 3072)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !654, file: !628, line: 202, baseType: !410, size: 16, offset: 3104)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !654, file: !628, line: 202, baseType: !410, size: 16, offset: 3120)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !654, file: !628, line: 203, baseType: !371, size: 64, offset: 3136)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !654, file: !628, line: 204, baseType: !864, size: 128, offset: 3200)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !654, file: !628, line: 205, baseType: !864, size: 128, offset: 3328)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !654, file: !628, line: 206, baseType: !864, size: 128, offset: 3456)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !654, file: !628, line: 215, baseType: !410, size: 16, offset: 3584)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !654, file: !628, line: 215, baseType: !410, size: 16, offset: 3600)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !654, file: !628, line: 216, baseType: !119, size: 32, offset: 3616)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !654, file: !628, line: 217, baseType: !1432, size: 64, offset: 3648)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !628, line: 51, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !634, file: !635, line: 294, baseType: !1435, size: 64, offset: 3264)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{null, !451, !371, !1438}
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !635, line: 282, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !371, !119, !737}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !634, file: !635, line: 296, baseType: !1443, size: 64, offset: 3328)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!119, !851, !633}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !634, file: !635, line: 298, baseType: !1447, size: 64, offset: 3392)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{null, !851, !633, !1450, !1451, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !634, file: !635, line: 302, baseType: !1453, size: 64, offset: 3456)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{null, !626, !626}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !634, file: !635, line: 303, baseType: !1453, size: 64, offset: 3520)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !634, file: !635, line: 304, baseType: !1453, size: 64, offset: 3584)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !634, file: !635, line: 307, baseType: !646, size: 64, offset: 3648)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !634, file: !635, line: 309, baseType: !1460, size: 64, offset: 3712)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!119, !626, !808}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !634, file: !635, line: 311, baseType: !650, size: 64, offset: 3776)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !634, file: !635, line: 314, baseType: !765, size: 256, offset: 3840)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !627, file: !628, line: 333, baseType: !426, size: 512, offset: 1088)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !627, file: !628, line: 335, baseType: !734, size: 64, offset: 1600)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !627, file: !628, line: 337, baseType: !1292, size: 64, offset: 1664)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !627, file: !628, line: 338, baseType: !884, size: 64, offset: 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !627, file: !628, line: 340, baseType: !436, size: 128, offset: 1792)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !627, file: !628, line: 340, baseType: !436, size: 128, offset: 1920)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !627, file: !628, line: 342, baseType: !119, size: 32, offset: 2048)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !627, file: !628, line: 342, baseType: !119, size: 32, offset: 2080)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !627, file: !628, line: 343, baseType: !119, size: 32, offset: 2112)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !627, file: !628, line: 345, baseType: !119, size: 32, offset: 2144)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !627, file: !628, line: 346, baseType: !119, size: 32, offset: 2176)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !627, file: !628, line: 347, baseType: !410, size: 16, offset: 2208)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !627, file: !628, line: 348, baseType: !410, size: 16, offset: 2224)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !627, file: !628, line: 349, baseType: !119, size: 32, offset: 2240)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !627, file: !628, line: 351, baseType: !119, size: 32, offset: 2272)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !627, file: !628, line: 353, baseType: !410, size: 16, offset: 2304)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !627, file: !628, line: 354, baseType: !410, size: 16, offset: 2320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !627, file: !628, line: 355, baseType: !119, size: 32, offset: 2336)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !627, file: !628, line: 357, baseType: !864, size: 128, offset: 2368)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !627, file: !628, line: 363, baseType: !436, size: 128, offset: 2496)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !627, file: !628, line: 363, baseType: !436, size: 128, offset: 2624)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !627, file: !628, line: 368, baseType: !1487, size: 64, offset: 2752)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !635, line: 500, size: 64, elements: !1489)
!1489 = !{!1490}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1488, file: !635, line: 502, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1493, line: 48, baseType: !1494)
!1493 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1494 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1493, line: 48, flags: DIFlagFwdDecl)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !627, file: !628, line: 372, baseType: !1294, size: 32, offset: 2816)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !627, file: !628, line: 373, baseType: !119, size: 32, offset: 2848)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !627, file: !628, line: 382, baseType: !1498, size: 64, offset: 2880)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !628, line: 46, flags: DIFlagFwdDecl)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !627, file: !628, line: 385, baseType: !1501, size: 64, offset: 2944)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !371, !474}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !627, file: !628, line: 386, baseType: !1505, size: 64, offset: 3008)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !371, !1256}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !627, file: !628, line: 387, baseType: !1509, size: 64, offset: 3072)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!119, !371}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !627, file: !628, line: 388, baseType: !790, size: 64, offset: 3136)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !627, file: !628, line: 389, baseType: !371, size: 64, offset: 3200)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !627, file: !628, line: 389, baseType: !371, size: 64, offset: 3264)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !627, file: !628, line: 389, baseType: !371, size: 64, offset: 3328)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !627, file: !628, line: 389, baseType: !371, size: 64, offset: 3392)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !554, file: !541, line: 249, baseType: !539, size: 64, offset: 2752)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !554, file: !541, line: 250, baseType: !1519, size: 64, offset: 2816)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !609, line: 77, size: 15424, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1527, !1530, !1533, !1536, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1554, !1555, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1585, !1586, !1587}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1520, file: !609, line: 78, baseType: !377, size: 960)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1520, file: !609, line: 80, baseType: !396, size: 8192, offset: 960)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1520, file: !609, line: 82, baseType: !1525, size: 64, offset: 9152)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !609, line: 43, flags: DIFlagFwdDecl)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1520, file: !609, line: 83, baseType: !1528, size: 64, offset: 9216)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !378, line: 46, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1520, file: !609, line: 86, baseType: !1531, size: 64, offset: 9280)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !609, line: 41, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1520, file: !609, line: 87, baseType: !1534, size: 64, offset: 9344)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !609, line: 44, flags: DIFlagFwdDecl)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1520, file: !609, line: 89, baseType: !1537, size: 512, offset: 9408)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 512, elements: !1162)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1520, file: !609, line: 90, baseType: !410, size: 16, offset: 9920)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1520, file: !609, line: 90, baseType: !410, size: 16, offset: 9936)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1520, file: !609, line: 92, baseType: !410, size: 16, offset: 9952)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1520, file: !609, line: 92, baseType: !410, size: 16, offset: 9968)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1520, file: !609, line: 93, baseType: !410, size: 16, offset: 9984)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1520, file: !609, line: 93, baseType: !410, size: 16, offset: 10000)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1520, file: !609, line: 94, baseType: !119, size: 32, offset: 10016)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1520, file: !609, line: 97, baseType: !410, size: 16, offset: 10048)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1520, file: !609, line: 97, baseType: !410, size: 16, offset: 10064)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1520, file: !609, line: 98, baseType: !410, size: 16, offset: 10080)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1520, file: !609, line: 98, baseType: !410, size: 16, offset: 10096)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1520, file: !609, line: 99, baseType: !410, size: 16, offset: 10112)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1520, file: !609, line: 99, baseType: !410, size: 16, offset: 10128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1520, file: !609, line: 100, baseType: !5, size: 32, offset: 10144)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1520, file: !609, line: 101, baseType: !1553, size: 64, offset: 10176)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1520, file: !609, line: 103, baseType: !403, size: 64, offset: 10240)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1520, file: !609, line: 104, baseType: !1556, size: 64, offset: 10304)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !378, line: 159, size: 448, elements: !1558)
!1558 = !{!1559, !1561, !1562, !1563, !1564, !1566}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1557, file: !378, line: 161, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !842)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1557, file: !378, line: 162, baseType: !1560, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1557, file: !378, line: 163, baseType: !841, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1557, file: !378, line: 164, baseType: !841, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1557, file: !378, line: 165, baseType: !1565, size: 128, offset: 192)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 128, elements: !842)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1557, file: !378, line: 166, baseType: !1567, size: 128, offset: 320)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 128, elements: !842)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1520, file: !609, line: 107, baseType: !474, size: 32, offset: 10368)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1520, file: !609, line: 108, baseType: !119, size: 32, offset: 10400)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1520, file: !609, line: 109, baseType: !410, size: 16, offset: 10432)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1520, file: !609, line: 110, baseType: !410, size: 16, offset: 10448)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1520, file: !609, line: 113, baseType: !119, size: 32, offset: 10464)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1520, file: !609, line: 113, baseType: !119, size: 32, offset: 10496)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1520, file: !609, line: 114, baseType: !397, size: 8, offset: 10528)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1520, file: !609, line: 114, baseType: !397, size: 8, offset: 10536)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1520, file: !609, line: 115, baseType: !410, size: 16, offset: 10544)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1520, file: !609, line: 116, baseType: !828, size: 128, offset: 10560)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1520, file: !609, line: 119, baseType: !474, size: 32, offset: 10688)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1520, file: !609, line: 119, baseType: !474, size: 32, offset: 10720)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1520, file: !609, line: 122, baseType: !1581, size: 512, offset: 10752)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1313, line: 182, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1313, line: 180, size: 512, elements: !1583)
!1583 = !{!1584}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1582, file: !1313, line: 181, baseType: !426, size: 512)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1520, file: !609, line: 123, baseType: !397, size: 8, offset: 11264)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1520, file: !609, line: 125, baseType: !1090, size: 56, offset: 11272)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1520, file: !609, line: 126, baseType: !1588, size: 4096, offset: 11328)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 4096, elements: !1162)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !609, line: 69, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !609, line: 67, size: 512, elements: !1591)
!1591 = !{!1592}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1590, file: !609, line: 68, baseType: !426, size: 512)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !554, file: !541, line: 251, baseType: !1594, size: 64, offset: 2880)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !541, line: 113, size: 6208, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1606}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1595, file: !541, line: 114, baseType: !410, size: 16)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1595, file: !541, line: 114, baseType: !410, size: 16, offset: 16)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1595, file: !541, line: 115, baseType: !397, size: 8, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1595, file: !541, line: 115, baseType: !397, size: 8, offset: 40)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1595, file: !541, line: 116, baseType: !397, size: 8, offset: 48)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1595, file: !541, line: 117, baseType: !1603, size: 8, offset: 56)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 8, elements: !1604)
!1604 = !{!1605}
!1605 = !DISubrange(count: 1)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1595, file: !541, line: 119, baseType: !1607, size: 6144, offset: 64)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 6144, elements: !1617)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !541, line: 109, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !541, line: 106, size: 192, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1609, file: !541, line: 107, baseType: !474, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1609, file: !541, line: 107, baseType: !474, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1609, file: !541, line: 107, baseType: !474, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1609, file: !541, line: 107, baseType: !474, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1609, file: !541, line: 107, baseType: !474, size: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1609, file: !541, line: 108, baseType: !119, size: 32, offset: 160)
!1617 = !{!1618}
!1618 = !DISubrange(count: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !554, file: !541, line: 252, baseType: !1620, size: 64, offset: 2944)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !541, line: 122, size: 1600, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1627, !1630, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1621, file: !541, line: 123, baseType: !460, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1621, file: !541, line: 124, baseType: !1519, size: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1621, file: !541, line: 125, baseType: !1626, size: 384, offset: 128)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1311, size: 384, elements: !954)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1621, file: !541, line: 126, baseType: !1628, size: 512, offset: 512)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 512, elements: !1629)
!1629 = !{!830, !830}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1621, file: !541, line: 127, baseType: !1631, size: 288, offset: 1024)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 288, elements: !1632)
!1632 = !{!1401, !1401}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1621, file: !541, line: 128, baseType: !410, size: 16, offset: 1312)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1621, file: !541, line: 128, baseType: !410, size: 16, offset: 1328)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1621, file: !541, line: 129, baseType: !474, size: 32, offset: 1344)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1621, file: !541, line: 129, baseType: !474, size: 32, offset: 1376)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1621, file: !541, line: 130, baseType: !474, size: 32, offset: 1408)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1621, file: !541, line: 131, baseType: !5, size: 32, offset: 1440)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1621, file: !541, line: 132, baseType: !410, size: 16, offset: 1472)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1621, file: !541, line: 132, baseType: !410, size: 16, offset: 1488)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1621, file: !541, line: 133, baseType: !119, size: 32, offset: 1504)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1621, file: !541, line: 133, baseType: !119, size: 32, offset: 1536)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1621, file: !541, line: 134, baseType: !410, size: 16, offset: 1568)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1621, file: !541, line: 134, baseType: !410, size: 16, offset: 1584)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !554, file: !541, line: 253, baseType: !1556, size: 64, offset: 3008)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !554, file: !541, line: 254, baseType: !1647, size: 64, offset: 3072)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !541, line: 137, size: 832, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1670, !1671, !1672, !1673, !1674, !1675}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1648, file: !541, line: 138, baseType: !410, size: 16)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1648, file: !541, line: 140, baseType: !410, size: 16, offset: 16)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1648, file: !541, line: 141, baseType: !474, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1648, file: !541, line: 142, baseType: !474, size: 32, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1648, file: !541, line: 143, baseType: !410, size: 16, offset: 96)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1648, file: !541, line: 144, baseType: !410, size: 16, offset: 112)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1648, file: !541, line: 145, baseType: !119, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1648, file: !541, line: 147, baseType: !119, size: 32, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1648, file: !541, line: 149, baseType: !460, size: 64, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1648, file: !541, line: 150, baseType: !119, size: 32, offset: 256)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1648, file: !541, line: 151, baseType: !410, size: 16, offset: 288)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1648, file: !541, line: 152, baseType: !410, size: 16, offset: 304)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1648, file: !541, line: 154, baseType: !371, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1648, file: !541, line: 155, baseType: !536, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1648, file: !541, line: 157, baseType: !474, size: 32, offset: 448)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1648, file: !541, line: 158, baseType: !410, size: 16, offset: 480)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1648, file: !541, line: 159, baseType: !410, size: 16, offset: 496)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1648, file: !541, line: 160, baseType: !410, size: 16, offset: 512)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1648, file: !541, line: 161, baseType: !1669, size: 48, offset: 528)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 48, elements: !1400)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1648, file: !541, line: 162, baseType: !474, size: 32, offset: 576)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1648, file: !541, line: 164, baseType: !474, size: 32, offset: 608)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1648, file: !541, line: 164, baseType: !474, size: 32, offset: 640)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1648, file: !541, line: 164, baseType: !474, size: 32, offset: 672)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1648, file: !541, line: 165, baseType: !1594, size: 64, offset: 704)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1648, file: !541, line: 167, baseType: !1676, size: 64, offset: 768)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1313, line: 72, size: 3072, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684, !1685, !1710, !1711, !1712, !1713}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1677, file: !1313, line: 73, baseType: !119, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1677, file: !1313, line: 73, baseType: !119, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1677, file: !1313, line: 74, baseType: !119, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1677, file: !1313, line: 75, baseType: !119, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1677, file: !1313, line: 77, baseType: !864, size: 128, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1677, file: !1313, line: 77, baseType: !864, size: 128, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1677, file: !1313, line: 79, baseType: !1686, size: 2304, offset: 384)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 2304, elements: !829)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1313, line: 67, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1313, line: 55, size: 576, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1706, !1707, !1708, !1709}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1688, file: !1313, line: 56, baseType: !410, size: 16)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1688, file: !1313, line: 56, baseType: !410, size: 16, offset: 16)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1688, file: !1313, line: 58, baseType: !474, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1688, file: !1313, line: 59, baseType: !474, size: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1688, file: !1313, line: 59, baseType: !474, size: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1688, file: !1313, line: 60, baseType: !884, size: 64, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1688, file: !1313, line: 60, baseType: !884, size: 64, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1688, file: !1313, line: 61, baseType: !1698, size: 64, offset: 256)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1313, line: 47, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1313, line: 44, size: 96, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1700, file: !1313, line: 45, baseType: !474, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1700, file: !1313, line: 45, baseType: !474, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1700, file: !1313, line: 46, baseType: !410, size: 16, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1700, file: !1313, line: 46, baseType: !410, size: 16, offset: 80)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1688, file: !1313, line: 62, baseType: !1698, size: 64, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1688, file: !1313, line: 64, baseType: !1698, size: 64, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1688, file: !1313, line: 65, baseType: !884, size: 64, offset: 448)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1688, file: !1313, line: 66, baseType: !884, size: 64, offset: 512)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1677, file: !1313, line: 80, baseType: !1399, size: 96, offset: 2688)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1677, file: !1313, line: 80, baseType: !1399, size: 96, offset: 2784)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1677, file: !1313, line: 81, baseType: !1399, size: 96, offset: 2880)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1677, file: !1313, line: 83, baseType: !1399, size: 96, offset: 2976)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !554, file: !541, line: 255, baseType: !1715, size: 64, offset: 3136)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !541, line: 170, size: 8704, elements: !1717)
!1717 = !{!1718, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1716, file: !541, line: 171, baseType: !1719, size: 96)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 96, elements: !1400)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1716, file: !541, line: 172, baseType: !119, size: 32, offset: 96)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1716, file: !541, line: 173, baseType: !410, size: 16, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1716, file: !541, line: 174, baseType: !410, size: 16, offset: 144)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1716, file: !541, line: 175, baseType: !410, size: 16, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1716, file: !541, line: 176, baseType: !410, size: 16, offset: 176)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1716, file: !541, line: 177, baseType: !410, size: 16, offset: 192)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1716, file: !541, line: 178, baseType: !410, size: 16, offset: 208)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1716, file: !541, line: 179, baseType: !119, size: 32, offset: 224)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1716, file: !541, line: 181, baseType: !460, size: 64, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1716, file: !541, line: 182, baseType: !474, size: 32, offset: 320)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1716, file: !541, line: 183, baseType: !119, size: 32, offset: 352)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1716, file: !541, line: 184, baseType: !396, size: 8192, offset: 384)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1716, file: !541, line: 187, baseType: !536, size: 64, offset: 8576)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1716, file: !541, line: 188, baseType: !119, size: 32, offset: 8640)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1716, file: !541, line: 189, baseType: !119, size: 32, offset: 8672)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !554, file: !541, line: 256, baseType: !1736, size: 64, offset: 3200)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !541, line: 193, size: 640, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1737, file: !541, line: 194, baseType: !460, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1737, file: !541, line: 195, baseType: !426, size: 512, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1737, file: !541, line: 197, baseType: !119, size: 32, offset: 576)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1737, file: !541, line: 198, baseType: !119, size: 32, offset: 608)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !554, file: !541, line: 258, baseType: !397, size: 8, offset: 3264)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !554, file: !541, line: 259, baseType: !1090, size: 56, offset: 3272)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !545, file: !541, line: 62, baseType: !426, size: 512, offset: 192)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !545, file: !541, line: 64, baseType: !397, size: 8, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !545, file: !541, line: 64, baseType: !397, size: 8, offset: 712)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !545, file: !541, line: 64, baseType: !397, size: 8, offset: 720)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !545, file: !541, line: 64, baseType: !397, size: 8, offset: 728)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !545, file: !541, line: 65, baseType: !1399, size: 96, offset: 736)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !545, file: !541, line: 65, baseType: !1399, size: 96, offset: 832)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !545, file: !541, line: 65, baseType: !474, size: 32, offset: 928)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !545, file: !541, line: 67, baseType: !410, size: 16, offset: 960)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !545, file: !541, line: 67, baseType: !410, size: 16, offset: 976)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !545, file: !541, line: 67, baseType: !410, size: 16, offset: 992)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !545, file: !541, line: 67, baseType: !410, size: 16, offset: 1008)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !545, file: !541, line: 68, baseType: !410, size: 16, offset: 1024)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !545, file: !541, line: 68, baseType: !410, size: 16, offset: 1040)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !545, file: !541, line: 69, baseType: !397, size: 8, offset: 1056)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !545, file: !541, line: 69, baseType: !1090, size: 56, offset: 1064)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !545, file: !541, line: 70, baseType: !474, size: 32, offset: 1120)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !545, file: !541, line: 70, baseType: !474, size: 32, offset: 1152)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !545, file: !541, line: 70, baseType: !474, size: 32, offset: 1184)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !545, file: !541, line: 70, baseType: !474, size: 32, offset: 1216)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !545, file: !541, line: 71, baseType: !474, size: 32, offset: 1248)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !545, file: !541, line: 71, baseType: !474, size: 32, offset: 1280)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !545, file: !541, line: 74, baseType: !474, size: 32, offset: 1312)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !545, file: !541, line: 74, baseType: !474, size: 32, offset: 1344)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !545, file: !541, line: 77, baseType: !474, size: 32, offset: 1376)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !545, file: !541, line: 77, baseType: !474, size: 32, offset: 1408)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !545, file: !541, line: 77, baseType: !474, size: 32, offset: 1440)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !545, file: !541, line: 78, baseType: !474, size: 32, offset: 1472)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !545, file: !541, line: 78, baseType: !474, size: 32, offset: 1504)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !545, file: !541, line: 78, baseType: !474, size: 32, offset: 1536)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !545, file: !541, line: 79, baseType: !474, size: 32, offset: 1568)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !545, file: !541, line: 79, baseType: !474, size: 32, offset: 1600)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !545, file: !541, line: 79, baseType: !474, size: 32, offset: 1632)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !545, file: !541, line: 79, baseType: !474, size: 32, offset: 1664)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !545, file: !541, line: 80, baseType: !474, size: 32, offset: 1696)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !545, file: !541, line: 80, baseType: !474, size: 32, offset: 1728)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !545, file: !541, line: 80, baseType: !474, size: 32, offset: 1760)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !545, file: !541, line: 81, baseType: !474, size: 32, offset: 1792)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !545, file: !541, line: 81, baseType: !474, size: 32, offset: 1824)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !545, file: !541, line: 81, baseType: !474, size: 32, offset: 1856)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !545, file: !541, line: 82, baseType: !474, size: 32, offset: 1888)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !545, file: !541, line: 82, baseType: !474, size: 32, offset: 1920)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !545, file: !541, line: 82, baseType: !474, size: 32, offset: 1952)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !545, file: !541, line: 85, baseType: !474, size: 32, offset: 1984)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !545, file: !541, line: 85, baseType: !474, size: 32, offset: 2016)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !545, file: !541, line: 85, baseType: !474, size: 32, offset: 2048)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !545, file: !541, line: 85, baseType: !474, size: 32, offset: 2080)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !545, file: !541, line: 86, baseType: !474, size: 32, offset: 2112)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !545, file: !541, line: 86, baseType: !474, size: 32, offset: 2144)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !545, file: !541, line: 86, baseType: !474, size: 32, offset: 2176)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !545, file: !541, line: 86, baseType: !474, size: 32, offset: 2208)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !545, file: !541, line: 87, baseType: !474, size: 32, offset: 2240)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !545, file: !541, line: 87, baseType: !474, size: 32, offset: 2272)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !545, file: !541, line: 87, baseType: !474, size: 32, offset: 2304)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !545, file: !541, line: 87, baseType: !474, size: 32, offset: 2336)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !545, file: !541, line: 90, baseType: !474, size: 32, offset: 2368)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !545, file: !541, line: 93, baseType: !474, size: 32, offset: 2400)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !545, file: !541, line: 93, baseType: !474, size: 32, offset: 2432)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !545, file: !541, line: 93, baseType: !474, size: 32, offset: 2464)
!1804 = !{!1805}
!1805 = !DISubrange(count: 18)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !464, file: !465, line: 123, baseType: !410, size: 16, offset: 4032)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !464, file: !465, line: 123, baseType: !410, size: 16, offset: 4048)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !464, file: !465, line: 123, baseType: !841, size: 32, offset: 4064)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !464, file: !465, line: 126, baseType: !1556, size: 64, offset: 4096)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !464, file: !465, line: 129, baseType: !626, size: 64, offset: 4160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !452, file: !453, line: 1223, baseType: !451, size: 64, offset: 1152)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !452, file: !453, line: 1225, baseType: !436, size: 128, offset: 1216)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !452, file: !453, line: 1226, baseType: !1814, size: 64, offset: 1344)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !453, line: 69, size: 320, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1815, file: !453, line: 70, baseType: !1814, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1815, file: !453, line: 70, baseType: !1814, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1815, file: !453, line: 71, baseType: !5, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1815, file: !453, line: 71, baseType: !5, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1815, file: !453, line: 72, baseType: !119, size: 32, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1815, file: !453, line: 73, baseType: !410, size: 16, offset: 224)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1815, file: !453, line: 73, baseType: !410, size: 16, offset: 240)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1815, file: !453, line: 74, baseType: !460, size: 64, offset: 256)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !452, file: !453, line: 1227, baseType: !460, size: 64, offset: 1408)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !452, file: !453, line: 1229, baseType: !1399, size: 96, offset: 1472)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !452, file: !453, line: 1230, baseType: !1399, size: 96, offset: 1568)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !452, file: !453, line: 1231, baseType: !1399, size: 96, offset: 1664)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !452, file: !453, line: 1231, baseType: !1399, size: 96, offset: 1760)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !452, file: !453, line: 1233, baseType: !5, size: 32, offset: 1856)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !452, file: !453, line: 1234, baseType: !119, size: 32, offset: 1888)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !452, file: !453, line: 1235, baseType: !5, size: 32, offset: 1920)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !452, file: !453, line: 1237, baseType: !410, size: 16, offset: 1952)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !452, file: !453, line: 1239, baseType: !397, size: 8, offset: 1968)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !452, file: !453, line: 1240, baseType: !1603, size: 8, offset: 1976)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !452, file: !453, line: 1242, baseType: !626, size: 64, offset: 1984)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !452, file: !453, line: 1244, baseType: !1838, size: 64, offset: 2048)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1840, line: 200, size: 17024, elements: !1841)
!1840 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1841 = !{!1842, !1844, !1845, !1846, !2174, !2175, !2176, !2177, !2178, !2179, !2180}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1839, file: !1840, line: 201, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1839, file: !1840, line: 202, baseType: !436, size: 128, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1839, file: !1840, line: 203, baseType: !436, size: 128, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1839, file: !1840, line: 206, baseType: !1847, size: 64, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1840, line: 190, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1840, line: 126, size: 2816, elements: !1850)
!1850 = !{!1851, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1939, !1940, !1941, !1942, !2146, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2173}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1849, file: !1840, line: 127, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1849, file: !1840, line: 127, baseType: !1852, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1849, file: !1840, line: 128, baseType: !371, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1849, file: !1840, line: 129, baseType: !371, size: 64, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1849, file: !1840, line: 130, baseType: !426, size: 512, offset: 256)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1849, file: !1840, line: 132, baseType: !119, size: 32, offset: 768)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1840, line: 132, baseType: !119, size: 32, offset: 800)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1849, file: !1840, line: 133, baseType: !119, size: 32, offset: 832)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1849, file: !1840, line: 134, baseType: !119, size: 32, offset: 864)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1849, file: !1840, line: 134, baseType: !119, size: 32, offset: 896)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1849, file: !1840, line: 134, baseType: !119, size: 32, offset: 928)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1849, file: !1840, line: 135, baseType: !119, size: 32, offset: 960)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1849, file: !1840, line: 135, baseType: !119, size: 32, offset: 992)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1849, file: !1840, line: 136, baseType: !119, size: 32, offset: 1024)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1849, file: !1840, line: 136, baseType: !119, size: 32, offset: 1056)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1849, file: !1840, line: 137, baseType: !119, size: 32, offset: 1088)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1849, file: !1840, line: 137, baseType: !119, size: 32, offset: 1120)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1849, file: !1840, line: 138, baseType: !474, size: 32, offset: 1152)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1849, file: !1840, line: 139, baseType: !474, size: 32, offset: 1184)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1849, file: !1840, line: 139, baseType: !474, size: 32, offset: 1216)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1849, file: !1840, line: 141, baseType: !410, size: 16, offset: 1248)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1849, file: !1840, line: 142, baseType: !410, size: 16, offset: 1264)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1849, file: !1840, line: 143, baseType: !119, size: 32, offset: 1280)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1849, file: !1840, line: 144, baseType: !119, size: 32, offset: 1312)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1849, file: !1840, line: 146, baseType: !1877, size: 64, offset: 1344)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1840, line: 114, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1840, line: 99, size: 7232, elements: !1880)
!1880 = !{!1881, !1883, !1884, !1885, !1886, !1887, !1888, !1896, !1900, !1912, !1921, !1928, !1938}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1879, file: !1840, line: 100, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1879, file: !1840, line: 100, baseType: !1882, size: 64, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1879, file: !1840, line: 101, baseType: !119, size: 32, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1879, file: !1840, line: 101, baseType: !119, size: 32, offset: 160)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1879, file: !1840, line: 102, baseType: !119, size: 32, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1879, file: !1840, line: 102, baseType: !119, size: 32, offset: 224)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1879, file: !1840, line: 103, baseType: !1889, size: 64, offset: 256)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1840, line: 59, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1840, line: 56, size: 2112, elements: !1892)
!1892 = !{!1893, !1894, !1895}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1891, file: !1840, line: 57, baseType: !641, size: 2048)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1891, file: !1840, line: 58, baseType: !119, size: 32, offset: 2048)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1891, file: !1840, line: 58, baseType: !119, size: 32, offset: 2080)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1879, file: !1840, line: 106, baseType: !1897, size: 6144, offset: 320)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 6144, elements: !1898)
!1898 = !{!1899}
!1899 = !DISubrange(count: 768)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1879, file: !1840, line: 107, baseType: !1901, size: 64, offset: 6464)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1840, line: 97, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1840, line: 83, size: 8320, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1903, file: !1840, line: 84, baseType: !1897, size: 6144)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1903, file: !1840, line: 87, baseType: !641, size: 2048, offset: 6144)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1903, file: !1840, line: 88, baseType: !1531, size: 64, offset: 8192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1903, file: !1840, line: 90, baseType: !410, size: 16, offset: 8256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1903, file: !1840, line: 92, baseType: !410, size: 16, offset: 8272)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1903, file: !1840, line: 93, baseType: !410, size: 16, offset: 8288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1903, file: !1840, line: 95, baseType: !410, size: 16, offset: 8304)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1879, file: !1840, line: 108, baseType: !1913, size: 64, offset: 6528)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1840, line: 66, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1840, line: 61, size: 128, elements: !1916)
!1916 = !{!1917, !1918, !1919, !1920}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1915, file: !1840, line: 62, baseType: !119, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1915, file: !1840, line: 63, baseType: !119, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1915, file: !1840, line: 64, baseType: !119, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1915, file: !1840, line: 65, baseType: !119, size: 32, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1879, file: !1840, line: 109, baseType: !1922, size: 64, offset: 6592)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1840, line: 71, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1840, line: 68, size: 64, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1924, file: !1840, line: 69, baseType: !119, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1924, file: !1840, line: 70, baseType: !119, size: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1879, file: !1840, line: 110, baseType: !1929, size: 64, offset: 6656)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1840, line: 81, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1840, line: 73, size: 352, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1931, file: !1840, line: 74, baseType: !1399, size: 96)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1931, file: !1840, line: 75, baseType: !1399, size: 96, offset: 96)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1931, file: !1840, line: 76, baseType: !1399, size: 96, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1931, file: !1840, line: 77, baseType: !119, size: 32, offset: 288)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1931, file: !1840, line: 78, baseType: !119, size: 32, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1879, file: !1840, line: 113, baseType: !1581, size: 512, offset: 6720)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1849, file: !1840, line: 148, baseType: !539, size: 64, offset: 1408)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1849, file: !1840, line: 151, baseType: !451, size: 64, offset: 1472)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1849, file: !1840, line: 152, baseType: !460, size: 64, offset: 1536)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1849, file: !1840, line: 153, baseType: !1943, size: 64, offset: 1600)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1945, line: 64, size: 19136, elements: !1946)
!1945 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1959, !1960, !2132, !2133, !2141, !2142, !2143, !2144, !2145}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1944, file: !1945, line: 65, baseType: !377, size: 960)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1944, file: !1945, line: 66, baseType: !457, size: 64, offset: 960)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1944, file: !1945, line: 68, baseType: !396, size: 8192, offset: 1024)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1944, file: !1945, line: 70, baseType: !119, size: 32, offset: 9216)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1944, file: !1945, line: 71, baseType: !119, size: 32, offset: 9248)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1944, file: !1945, line: 72, baseType: !951, size: 64, offset: 9280)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1944, file: !1945, line: 74, baseType: !474, size: 32, offset: 9344)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1944, file: !1945, line: 74, baseType: !474, size: 32, offset: 9376)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1944, file: !1945, line: 76, baseType: !1531, size: 64, offset: 9408)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1944, file: !1945, line: 77, baseType: !1957, size: 64, offset: 9472)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1945, line: 77, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1944, file: !1945, line: 78, baseType: !1292, size: 64, offset: 9536)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1944, file: !1945, line: 80, baseType: !1961, size: 2624, offset: 9600)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1962, line: 340, size: 2624, elements: !1963)
!1962 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1963 = !{!1964, !1992, !2010, !2011, !2012, !2027, !2085, !2086, !2112, !2113, !2114, !2115, !2121}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1961, file: !1962, line: 341, baseType: !1965, size: 576)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1962, line: 251, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1962, line: 207, size: 576, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1966, file: !1962, line: 208, baseType: !119, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1966, file: !1962, line: 211, baseType: !410, size: 16, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1966, file: !1962, line: 212, baseType: !410, size: 16, offset: 48)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1966, file: !1962, line: 213, baseType: !474, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1966, file: !1962, line: 214, baseType: !410, size: 16, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1966, file: !1962, line: 215, baseType: !410, size: 16, offset: 112)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1966, file: !1962, line: 216, baseType: !410, size: 16, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1966, file: !1962, line: 217, baseType: !410, size: 16, offset: 144)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1966, file: !1962, line: 218, baseType: !410, size: 16, offset: 160)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1966, file: !1962, line: 219, baseType: !410, size: 16, offset: 176)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1966, file: !1962, line: 220, baseType: !474, size: 32, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1966, file: !1962, line: 222, baseType: !410, size: 16, offset: 224)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1966, file: !1962, line: 225, baseType: !410, size: 16, offset: 240)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1966, file: !1962, line: 228, baseType: !119, size: 32, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1966, file: !1962, line: 229, baseType: !119, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1966, file: !1962, line: 233, baseType: !119, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1966, file: !1962, line: 236, baseType: !410, size: 16, offset: 352)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1966, file: !1962, line: 236, baseType: !410, size: 16, offset: 368)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1966, file: !1962, line: 241, baseType: !474, size: 32, offset: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1966, file: !1962, line: 244, baseType: !119, size: 32, offset: 416)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1966, file: !1962, line: 244, baseType: !119, size: 32, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1966, file: !1962, line: 245, baseType: !474, size: 32, offset: 480)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1966, file: !1962, line: 248, baseType: !474, size: 32, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1966, file: !1962, line: 250, baseType: !119, size: 32, offset: 544)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1961, file: !1962, line: 342, baseType: !1993, size: 448, offset: 576)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1962, line: 79, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1962, line: 61, size: 448, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1994, file: !1962, line: 62, baseType: !371, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1994, file: !1962, line: 64, baseType: !410, size: 16, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1994, file: !1962, line: 65, baseType: !410, size: 16, offset: 80)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1994, file: !1962, line: 67, baseType: !474, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1994, file: !1962, line: 68, baseType: !474, size: 32, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1994, file: !1962, line: 69, baseType: !474, size: 32, offset: 160)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1994, file: !1962, line: 70, baseType: !410, size: 16, offset: 192)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1994, file: !1962, line: 71, baseType: !410, size: 16, offset: 208)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1994, file: !1962, line: 72, baseType: !884, size: 64, offset: 224)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1994, file: !1962, line: 75, baseType: !474, size: 32, offset: 288)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1994, file: !1962, line: 75, baseType: !474, size: 32, offset: 320)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1994, file: !1962, line: 75, baseType: !474, size: 32, offset: 352)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1994, file: !1962, line: 78, baseType: !474, size: 32, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1994, file: !1962, line: 78, baseType: !474, size: 32, offset: 416)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1961, file: !1962, line: 343, baseType: !436, size: 128, offset: 1024)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1961, file: !1962, line: 344, baseType: !436, size: 128, offset: 1152)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1961, file: !1962, line: 345, baseType: !2013, size: 192, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1962, line: 278, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1962, line: 270, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2014, file: !1962, line: 271, baseType: !119, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2014, file: !1962, line: 273, baseType: !474, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2014, file: !1962, line: 275, baseType: !119, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2014, file: !1962, line: 276, baseType: !119, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2014, file: !1962, line: 277, baseType: !2021, size: 64, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1962, line: 55, size: 576, elements: !2023)
!2023 = !{!2024, !2025, !2026}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2022, file: !1962, line: 56, baseType: !119, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2022, file: !1962, line: 57, baseType: !474, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2022, file: !1962, line: 58, baseType: !1628, size: 512, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1961, file: !1962, line: 346, baseType: !2028, size: 384, offset: 1472)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1962, line: 268, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1962, line: 253, size: 384, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2079, !2080, !2081, !2082, !2083, !2084}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2029, file: !1962, line: 254, baseType: !119, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2029, file: !1962, line: 255, baseType: !119, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2029, file: !1962, line: 255, baseType: !119, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2029, file: !1962, line: 258, baseType: !474, size: 32, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2029, file: !1962, line: 259, baseType: !2036, size: 64, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1962, line: 164, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1962, line: 108, size: 1664, elements: !2039)
!2039 = !{!2040, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2038, file: !1962, line: 109, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2038, file: !1962, line: 109, baseType: !2041, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2038, file: !1962, line: 111, baseType: !426, size: 512, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2038, file: !1962, line: 119, baseType: !884, size: 64, offset: 640)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2038, file: !1962, line: 119, baseType: !884, size: 64, offset: 704)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2038, file: !1962, line: 125, baseType: !884, size: 64, offset: 768)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2038, file: !1962, line: 125, baseType: !884, size: 64, offset: 832)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2038, file: !1962, line: 127, baseType: !884, size: 64, offset: 896)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2038, file: !1962, line: 130, baseType: !119, size: 32, offset: 960)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2038, file: !1962, line: 131, baseType: !119, size: 32, offset: 992)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2038, file: !1962, line: 132, baseType: !2052, size: 64, offset: 1024)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1962, line: 106, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1962, line: 81, size: 512, elements: !2055)
!2055 = !{!2056, !2057, !2060, !2061, !2062, !2063}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2054, file: !1962, line: 82, baseType: !884, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2054, file: !1962, line: 97, baseType: !2058, size: 256, offset: 64)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 256, elements: !2059)
!2059 = !{!830, !843}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2054, file: !1962, line: 102, baseType: !884, size: 64, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2054, file: !1962, line: 102, baseType: !884, size: 64, offset: 384)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2054, file: !1962, line: 104, baseType: !119, size: 32, offset: 448)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2054, file: !1962, line: 105, baseType: !119, size: 32, offset: 480)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2038, file: !1962, line: 135, baseType: !1399, size: 96, offset: 1088)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2038, file: !1962, line: 136, baseType: !474, size: 32, offset: 1184)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2038, file: !1962, line: 139, baseType: !119, size: 32, offset: 1216)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2038, file: !1962, line: 139, baseType: !119, size: 32, offset: 1248)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2038, file: !1962, line: 139, baseType: !119, size: 32, offset: 1280)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2038, file: !1962, line: 140, baseType: !1399, size: 96, offset: 1312)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2038, file: !1962, line: 143, baseType: !410, size: 16, offset: 1408)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2038, file: !1962, line: 144, baseType: !410, size: 16, offset: 1424)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2038, file: !1962, line: 145, baseType: !410, size: 16, offset: 1440)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2038, file: !1962, line: 148, baseType: !410, size: 16, offset: 1456)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2038, file: !1962, line: 149, baseType: !119, size: 32, offset: 1472)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2038, file: !1962, line: 150, baseType: !474, size: 32, offset: 1504)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2038, file: !1962, line: 152, baseType: !1292, size: 64, offset: 1536)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2038, file: !1962, line: 163, baseType: !474, size: 32, offset: 1600)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2038, file: !1962, line: 163, baseType: !474, size: 32, offset: 1632)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2029, file: !1962, line: 261, baseType: !474, size: 32, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2029, file: !1962, line: 261, baseType: !474, size: 32, offset: 224)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2029, file: !1962, line: 261, baseType: !474, size: 32, offset: 256)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2029, file: !1962, line: 263, baseType: !119, size: 32, offset: 288)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2029, file: !1962, line: 266, baseType: !119, size: 32, offset: 320)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2029, file: !1962, line: 267, baseType: !474, size: 32, offset: 352)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1961, file: !1962, line: 347, baseType: !2036, size: 64, offset: 1856)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1961, file: !1962, line: 348, baseType: !2087, size: 64, offset: 1920)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1962, line: 205, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1962, line: 186, size: 1024, elements: !2090)
!2090 = !{!2091, !2093, !2094, !2095, !2097, !2098, !2099, !2107, !2108, !2109, !2110, !2111}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2089, file: !1962, line: 187, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2089, file: !1962, line: 187, baseType: !2092, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2089, file: !1962, line: 189, baseType: !426, size: 512, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2089, file: !1962, line: 191, baseType: !2096, size: 64, offset: 640)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2089, file: !1962, line: 193, baseType: !119, size: 32, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2089, file: !1962, line: 193, baseType: !119, size: 32, offset: 736)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2089, file: !1962, line: 195, baseType: !2100, size: 64, offset: 768)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1962, line: 184, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1962, line: 166, size: 320, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2102, file: !1962, line: 180, baseType: !2058, size: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2102, file: !1962, line: 182, baseType: !119, size: 32, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2102, file: !1962, line: 183, baseType: !119, size: 32, offset: 288)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2089, file: !1962, line: 196, baseType: !119, size: 32, offset: 832)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2089, file: !1962, line: 198, baseType: !119, size: 32, offset: 864)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2089, file: !1962, line: 200, baseType: !1519, size: 64, offset: 896)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2089, file: !1962, line: 201, baseType: !474, size: 32, offset: 960)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2089, file: !1962, line: 204, baseType: !119, size: 32, offset: 992)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1961, file: !1962, line: 350, baseType: !436, size: 128, offset: 1984)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1961, file: !1962, line: 351, baseType: !119, size: 32, offset: 2112)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1961, file: !1962, line: 351, baseType: !119, size: 32, offset: 2144)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1961, file: !1962, line: 353, baseType: !2116, size: 64, offset: 2176)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1962, line: 297, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1962, line: 295, size: 2048, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2118, file: !1962, line: 296, baseType: !641, size: 2048)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1961, file: !1962, line: 355, baseType: !2122, size: 384, offset: 2240)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1962, line: 338, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1962, line: 322, size: 384, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2123, file: !1962, line: 323, baseType: !119, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2123, file: !1962, line: 325, baseType: !410, size: 16, offset: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2123, file: !1962, line: 326, baseType: !410, size: 16, offset: 48)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2123, file: !1962, line: 331, baseType: !436, size: 128, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2123, file: !1962, line: 334, baseType: !436, size: 128, offset: 192)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2123, file: !1962, line: 335, baseType: !119, size: 32, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2123, file: !1962, line: 337, baseType: !119, size: 32, offset: 352)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1944, file: !1945, line: 81, baseType: !371, size: 64, offset: 12224)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1944, file: !1945, line: 85, baseType: !2134, size: 6208, offset: 12288)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1945, line: 55, size: 6208, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2134, file: !1945, line: 56, baseType: !1897, size: 6144)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2134, file: !1945, line: 58, baseType: !410, size: 16, offset: 6144)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2134, file: !1945, line: 59, baseType: !410, size: 16, offset: 6160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2134, file: !1945, line: 60, baseType: !410, size: 16, offset: 6176)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2134, file: !1945, line: 61, baseType: !410, size: 16, offset: 6192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1944, file: !1945, line: 86, baseType: !119, size: 32, offset: 18496)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1944, file: !1945, line: 88, baseType: !119, size: 32, offset: 18528)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1944, file: !1945, line: 90, baseType: !119, size: 32, offset: 18560)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1944, file: !1945, line: 94, baseType: !119, size: 32, offset: 18592)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1944, file: !1945, line: 100, baseType: !1581, size: 512, offset: 18624)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1849, file: !1840, line: 154, baseType: !2147, size: 64, offset: 1664)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1213, line: 264, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1849, file: !1840, line: 156, baseType: !1531, size: 64, offset: 1728)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1849, file: !1840, line: 158, baseType: !474, size: 32, offset: 1792)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1849, file: !1840, line: 159, baseType: !474, size: 32, offset: 1824)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1849, file: !1840, line: 162, baseType: !1852, size: 64, offset: 1856)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1849, file: !1840, line: 162, baseType: !1852, size: 64, offset: 1920)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1849, file: !1840, line: 162, baseType: !1852, size: 64, offset: 1984)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1849, file: !1840, line: 164, baseType: !436, size: 128, offset: 2048)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1849, file: !1840, line: 166, baseType: !2157, size: 64, offset: 2176)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1840, line: 51, flags: DIFlagFwdDecl)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1849, file: !1840, line: 167, baseType: !371, size: 64, offset: 2240)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1849, file: !1840, line: 168, baseType: !474, size: 32, offset: 2304)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1849, file: !1840, line: 170, baseType: !474, size: 32, offset: 2336)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1849, file: !1840, line: 170, baseType: !474, size: 32, offset: 2368)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1849, file: !1840, line: 171, baseType: !474, size: 32, offset: 2400)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1849, file: !1840, line: 173, baseType: !371, size: 64, offset: 2432)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1849, file: !1840, line: 175, baseType: !119, size: 32, offset: 2496)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1849, file: !1840, line: 176, baseType: !119, size: 32, offset: 2528)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1849, file: !1840, line: 179, baseType: !119, size: 32, offset: 2560)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1849, file: !1840, line: 180, baseType: !474, size: 32, offset: 2592)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1849, file: !1840, line: 183, baseType: !119, size: 32, offset: 2624)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1849, file: !1840, line: 185, baseType: !397, size: 8, offset: 2656)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1849, file: !1840, line: 186, baseType: !2172, size: 24, offset: 2664)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 24, elements: !1400)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1849, file: !1840, line: 189, baseType: !436, size: 128, offset: 2688)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1839, file: !1840, line: 207, baseType: !396, size: 8192, offset: 384)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1839, file: !1840, line: 208, baseType: !396, size: 8192, offset: 8576)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1839, file: !1840, line: 210, baseType: !119, size: 32, offset: 16768)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1839, file: !1840, line: 210, baseType: !119, size: 32, offset: 16800)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1839, file: !1840, line: 211, baseType: !119, size: 32, offset: 16832)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1839, file: !1840, line: 211, baseType: !119, size: 32, offset: 16864)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1839, file: !1840, line: 212, baseType: !864, size: 128, offset: 16896)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !452, file: !453, line: 1246, baseType: !2182, size: 64, offset: 2112)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !453, line: 1067, size: 5184, elements: !2184)
!2184 = !{!2185, !2215, !2216, !2230, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2252, !2268, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2378}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2183, file: !453, line: 1068, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !453, line: 934, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !453, line: 925, size: 576, elements: !2189)
!2189 = !{!2190, !2207, !2208, !2209, !2210, !2211, !2214}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2188, file: !453, line: 926, baseType: !2191, size: 320)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !453, line: 830, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !453, line: 813, size: 320, elements: !2193)
!2193 = !{!2194, !2197, !2200, !2201, !2204, !2205, !2206}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2192, file: !453, line: 814, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !453, line: 51, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2192, file: !453, line: 815, baseType: !2198, size: 64, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !453, line: 815, flags: DIFlagFwdDecl)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2192, file: !453, line: 818, baseType: !371, size: 64, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2192, file: !453, line: 819, baseType: !2202, size: 32, offset: 192)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2203, size: 32, elements: !829)
!2203 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2192, file: !453, line: 822, baseType: !119, size: 32, offset: 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2192, file: !453, line: 826, baseType: !119, size: 32, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2192, file: !453, line: 829, baseType: !119, size: 32, offset: 288)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2188, file: !453, line: 928, baseType: !410, size: 16, offset: 320)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2188, file: !453, line: 928, baseType: !410, size: 16, offset: 336)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2188, file: !453, line: 929, baseType: !119, size: 32, offset: 352)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2188, file: !453, line: 930, baseType: !1553, size: 64, offset: 384)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2188, file: !453, line: 931, baseType: !2212, size: 64, offset: 448)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !453, line: 931, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2188, file: !453, line: 933, baseType: !371, size: 64, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2183, file: !453, line: 1069, baseType: !2186, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2183, file: !453, line: 1070, baseType: !2217, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !453, line: 916, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !453, line: 891, size: 704, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2219, file: !453, line: 892, baseType: !2191, size: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2219, file: !453, line: 896, baseType: !119, size: 32, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2219, file: !453, line: 900, baseType: !1719, size: 96, offset: 352)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2219, file: !453, line: 903, baseType: !474, size: 32, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2219, file: !453, line: 906, baseType: !119, size: 32, offset: 480)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2219, file: !453, line: 909, baseType: !474, size: 32, offset: 512)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2219, file: !453, line: 912, baseType: !474, size: 32, offset: 544)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2219, file: !453, line: 914, baseType: !460, size: 64, offset: 576)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2219, file: !453, line: 915, baseType: !371, size: 64, offset: 640)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2183, file: !453, line: 1071, baseType: !2231, size: 64, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !453, line: 920, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !453, line: 918, size: 320, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2233, file: !453, line: 919, baseType: !2191, size: 320)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2183, file: !453, line: 1075, baseType: !474, size: 32, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2183, file: !453, line: 1077, baseType: !474, size: 32, offset: 288)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2183, file: !453, line: 1078, baseType: !474, size: 32, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2183, file: !453, line: 1079, baseType: !410, size: 16, offset: 352)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2183, file: !453, line: 1082, baseType: !410, size: 16, offset: 368)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2183, file: !453, line: 1085, baseType: !397, size: 8, offset: 384)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2183, file: !453, line: 1086, baseType: !397, size: 8, offset: 392)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2183, file: !453, line: 1087, baseType: !397, size: 8, offset: 400)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2183, file: !453, line: 1088, baseType: !397, size: 8, offset: 408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2183, file: !453, line: 1090, baseType: !474, size: 32, offset: 416)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2183, file: !453, line: 1093, baseType: !410, size: 16, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2183, file: !453, line: 1096, baseType: !397, size: 8, offset: 464)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2183, file: !453, line: 1098, baseType: !2249, size: 40, offset: 472)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 40, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 5)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2183, file: !453, line: 1101, baseType: !2253, size: 832, offset: 512)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !453, line: 836, size: 832, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2253, file: !453, line: 837, baseType: !2191, size: 320)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2253, file: !453, line: 839, baseType: !410, size: 16, offset: 320)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2253, file: !453, line: 839, baseType: !410, size: 16, offset: 336)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2253, file: !453, line: 842, baseType: !410, size: 16, offset: 352)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2253, file: !453, line: 842, baseType: !410, size: 16, offset: 368)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2253, file: !453, line: 843, baseType: !841, size: 32, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2253, file: !453, line: 845, baseType: !119, size: 32, offset: 416)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2253, file: !453, line: 847, baseType: !371, size: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2253, file: !453, line: 848, baseType: !1519, size: 64, offset: 512)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2253, file: !453, line: 849, baseType: !1519, size: 64, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2253, file: !453, line: 850, baseType: !1519, size: 64, offset: 640)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2253, file: !453, line: 851, baseType: !1399, size: 96, offset: 704)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2253, file: !453, line: 852, baseType: !474, size: 32, offset: 800)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2183, file: !453, line: 1104, baseType: !2269, size: 1344, offset: 1344)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !453, line: 867, size: 1344, elements: !2270)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2269, file: !453, line: 868, baseType: !410, size: 16)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2269, file: !453, line: 869, baseType: !410, size: 16, offset: 16)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2269, file: !453, line: 870, baseType: !410, size: 16, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2269, file: !453, line: 871, baseType: !410, size: 16, offset: 48)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2269, file: !453, line: 873, baseType: !2276, size: 896, offset: 64)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2277, size: 896, elements: !1091)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !453, line: 864, baseType: !2278)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !453, line: 859, size: 128, elements: !2279)
!2279 = !{!2280, !2281, !2282, !2283, !2284, !2285}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2278, file: !453, line: 860, baseType: !410, size: 16)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2278, file: !453, line: 861, baseType: !410, size: 16, offset: 16)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2278, file: !453, line: 861, baseType: !410, size: 16, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2278, file: !453, line: 861, baseType: !410, size: 16, offset: 48)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2278, file: !453, line: 862, baseType: !119, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2278, file: !453, line: 863, baseType: !474, size: 32, offset: 96)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2269, file: !453, line: 874, baseType: !371, size: 64, offset: 960)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2269, file: !453, line: 876, baseType: !474, size: 32, offset: 1024)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2269, file: !453, line: 876, baseType: !474, size: 32, offset: 1056)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2269, file: !453, line: 878, baseType: !119, size: 32, offset: 1088)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2269, file: !453, line: 879, baseType: !119, size: 32, offset: 1120)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2269, file: !453, line: 881, baseType: !119, size: 32, offset: 1152)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2269, file: !453, line: 881, baseType: !119, size: 32, offset: 1184)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2269, file: !453, line: 883, baseType: !451, size: 64, offset: 1216)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2269, file: !453, line: 884, baseType: !460, size: 64, offset: 1280)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2183, file: !453, line: 1107, baseType: !474, size: 32, offset: 2688)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2183, file: !453, line: 1110, baseType: !474, size: 32, offset: 2720)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2183, file: !453, line: 1113, baseType: !410, size: 16, offset: 2752)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2183, file: !453, line: 1113, baseType: !410, size: 16, offset: 2768)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2183, file: !453, line: 1116, baseType: !397, size: 8, offset: 2784)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2183, file: !453, line: 1117, baseType: !1603, size: 8, offset: 2792)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2183, file: !453, line: 1120, baseType: !410, size: 16, offset: 2800)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2183, file: !453, line: 1121, baseType: !474, size: 32, offset: 2816)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2183, file: !453, line: 1122, baseType: !474, size: 32, offset: 2848)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2183, file: !453, line: 1123, baseType: !474, size: 32, offset: 2880)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2183, file: !453, line: 1124, baseType: !474, size: 32, offset: 2912)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2183, file: !453, line: 1125, baseType: !474, size: 32, offset: 2944)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2183, file: !453, line: 1126, baseType: !474, size: 32, offset: 2976)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2183, file: !453, line: 1127, baseType: !474, size: 32, offset: 3008)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2183, file: !453, line: 1128, baseType: !474, size: 32, offset: 3040)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2183, file: !453, line: 1129, baseType: !474, size: 32, offset: 3072)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2183, file: !453, line: 1130, baseType: !474, size: 32, offset: 3104)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2183, file: !453, line: 1131, baseType: !410, size: 16, offset: 3136)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2183, file: !453, line: 1132, baseType: !397, size: 8, offset: 3152)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2183, file: !453, line: 1133, baseType: !397, size: 8, offset: 3160)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2183, file: !453, line: 1134, baseType: !2172, size: 24, offset: 3168)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2183, file: !453, line: 1135, baseType: !397, size: 8, offset: 3192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2183, file: !453, line: 1138, baseType: !460, size: 64, offset: 3200)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2183, file: !453, line: 1139, baseType: !397, size: 8, offset: 3264)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2183, file: !453, line: 1140, baseType: !397, size: 8, offset: 3272)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2183, file: !453, line: 1141, baseType: !397, size: 8, offset: 3280)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2183, file: !453, line: 1142, baseType: !397, size: 8, offset: 3288)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2183, file: !453, line: 1143, baseType: !397, size: 8, offset: 3296)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2183, file: !453, line: 1144, baseType: !2324, size: 64, offset: 3304)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 64, elements: !1162)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2183, file: !453, line: 1145, baseType: !2324, size: 64, offset: 3368)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2183, file: !453, line: 1148, baseType: !397, size: 8, offset: 3432)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2183, file: !453, line: 1149, baseType: !397, size: 8, offset: 3440)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2183, file: !453, line: 1152, baseType: !397, size: 8, offset: 3448)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2183, file: !453, line: 1152, baseType: !397, size: 8, offset: 3456)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2183, file: !453, line: 1153, baseType: !397, size: 8, offset: 3464)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2183, file: !453, line: 1154, baseType: !410, size: 16, offset: 3472)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2183, file: !453, line: 1154, baseType: !410, size: 16, offset: 3488)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2183, file: !453, line: 1155, baseType: !410, size: 16, offset: 3504)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2183, file: !453, line: 1155, baseType: !410, size: 16, offset: 3520)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2183, file: !453, line: 1156, baseType: !397, size: 8, offset: 3536)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2183, file: !453, line: 1157, baseType: !397, size: 8, offset: 3544)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2183, file: !453, line: 1159, baseType: !397, size: 8, offset: 3552)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2183, file: !453, line: 1160, baseType: !397, size: 8, offset: 3560)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2183, file: !453, line: 1161, baseType: !397, size: 8, offset: 3568)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2183, file: !453, line: 1162, baseType: !397, size: 8, offset: 3576)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2183, file: !453, line: 1165, baseType: !119, size: 32, offset: 3584)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2183, file: !453, line: 1166, baseType: !119, size: 32, offset: 3616)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2183, file: !453, line: 1167, baseType: !119, size: 32, offset: 3648)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2183, file: !453, line: 1168, baseType: !119, size: 32, offset: 3680)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2183, file: !453, line: 1171, baseType: !410, size: 16, offset: 3712)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2183, file: !453, line: 1171, baseType: !410, size: 16, offset: 3728)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2183, file: !453, line: 1172, baseType: !119, size: 32, offset: 3744)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2183, file: !453, line: 1173, baseType: !474, size: 32, offset: 3776)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2183, file: !453, line: 1174, baseType: !474, size: 32, offset: 3808)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2183, file: !453, line: 1177, baseType: !2351, size: 1024, offset: 3840)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !453, line: 963, size: 1024, elements: !2352)
!2352 = !{!2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2376, !2377}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2351, file: !453, line: 965, baseType: !119, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2351, file: !453, line: 968, baseType: !474, size: 32, offset: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2351, file: !453, line: 971, baseType: !474, size: 32, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2351, file: !453, line: 974, baseType: !474, size: 32, offset: 96)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2351, file: !453, line: 977, baseType: !1399, size: 96, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2351, file: !453, line: 979, baseType: !1399, size: 96, offset: 224)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2351, file: !453, line: 982, baseType: !119, size: 32, offset: 320)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2351, file: !453, line: 987, baseType: !884, size: 64, offset: 352)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2351, file: !453, line: 989, baseType: !474, size: 32, offset: 416)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2351, file: !453, line: 994, baseType: !119, size: 32, offset: 448)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2351, file: !453, line: 995, baseType: !119, size: 32, offset: 480)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2351, file: !453, line: 997, baseType: !397, size: 8, offset: 512)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2351, file: !453, line: 998, baseType: !1090, size: 56, offset: 520)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2351, file: !453, line: 1000, baseType: !474, size: 32, offset: 576)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2351, file: !453, line: 1003, baseType: !884, size: 64, offset: 608)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2351, file: !453, line: 1006, baseType: !119, size: 32, offset: 672)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2351, file: !453, line: 1009, baseType: !474, size: 32, offset: 704)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2351, file: !453, line: 1012, baseType: !884, size: 64, offset: 736)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2351, file: !453, line: 1015, baseType: !884, size: 64, offset: 800)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2351, file: !453, line: 1018, baseType: !119, size: 32, offset: 864)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2351, file: !453, line: 1019, baseType: !2374, size: 64, offset: 896)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !453, line: 63, flags: DIFlagFwdDecl)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2351, file: !453, line: 1023, baseType: !474, size: 32, offset: 960)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2351, file: !453, line: 1024, baseType: !119, size: 32, offset: 992)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2183, file: !453, line: 1179, baseType: !2379, size: 320, offset: 4864)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !453, line: 1043, size: 320, elements: !2380)
!2380 = !{!2381, !2382, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2379, file: !453, line: 1044, baseType: !397, size: 8)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2379, file: !453, line: 1045, baseType: !2383, size: 16, offset: 8)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 16, elements: !842)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2379, file: !453, line: 1048, baseType: !397, size: 8, offset: 24)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2379, file: !453, line: 1049, baseType: !474, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2379, file: !453, line: 1049, baseType: !474, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2379, file: !453, line: 1052, baseType: !474, size: 32, offset: 96)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2379, file: !453, line: 1052, baseType: !474, size: 32, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2379, file: !453, line: 1053, baseType: !397, size: 8, offset: 160)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2379, file: !453, line: 1054, baseType: !2172, size: 24, offset: 168)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2379, file: !453, line: 1057, baseType: !474, size: 32, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2379, file: !453, line: 1057, baseType: !474, size: 32, offset: 224)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2379, file: !453, line: 1060, baseType: !474, size: 32, offset: 256)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2379, file: !453, line: 1060, baseType: !474, size: 32, offset: 288)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !452, file: !453, line: 1247, baseType: !2396, size: 64, offset: 2176)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !453, line: 60, flags: DIFlagFwdDecl)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !452, file: !453, line: 1251, baseType: !2399, size: 31872, offset: 2240)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !453, line: 403, size: 31872, elements: !2400)
!2400 = !{!2401, !2435, !2455, !2464, !2484, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2615, !2616, !2617, !2619, !2635, !2636}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2399, file: !453, line: 404, baseType: !2402, size: 1984)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !453, line: 259, size: 1984, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2430}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2402, file: !453, line: 260, baseType: !397, size: 8)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2402, file: !453, line: 263, baseType: !397, size: 8, offset: 8)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2402, file: !453, line: 266, baseType: !397, size: 8, offset: 16)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2402, file: !453, line: 267, baseType: !397, size: 8, offset: 24)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2402, file: !453, line: 269, baseType: !397, size: 8, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2402, file: !453, line: 270, baseType: !397, size: 8, offset: 40)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2402, file: !453, line: 276, baseType: !397, size: 8, offset: 48)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2402, file: !453, line: 279, baseType: !397, size: 8, offset: 56)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2402, file: !453, line: 280, baseType: !410, size: 16, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2402, file: !453, line: 280, baseType: !410, size: 16, offset: 80)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2402, file: !453, line: 281, baseType: !474, size: 32, offset: 96)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2402, file: !453, line: 284, baseType: !397, size: 8, offset: 128)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2402, file: !453, line: 285, baseType: !397, size: 8, offset: 136)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2402, file: !453, line: 287, baseType: !953, size: 48, offset: 144)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2402, file: !453, line: 290, baseType: !2419, size: 1280, offset: 192)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1313, line: 174, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1313, line: 166, size: 1280, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2420, file: !1313, line: 167, baseType: !119, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2420, file: !1313, line: 167, baseType: !119, size: 32, offset: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2420, file: !1313, line: 168, baseType: !426, size: 512, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2420, file: !1313, line: 169, baseType: !426, size: 512, offset: 576)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2420, file: !1313, line: 170, baseType: !474, size: 32, offset: 1088)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2420, file: !1313, line: 171, baseType: !474, size: 32, offset: 1120)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2420, file: !1313, line: 172, baseType: !1676, size: 64, offset: 1152)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2420, file: !1313, line: 173, baseType: !371, size: 64, offset: 1216)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2402, file: !453, line: 291, baseType: !2431, size: 512, offset: 1472)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1313, line: 178, baseType: !2432)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1313, line: 176, size: 512, elements: !2433)
!2433 = !{!2434}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2432, file: !1313, line: 177, baseType: !426, size: 512)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2399, file: !453, line: 406, baseType: !2436, size: 64, offset: 1984)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !453, line: 80, size: 1472, elements: !2438)
!2438 = !{!2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2437, file: !453, line: 81, baseType: !371, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2437, file: !453, line: 82, baseType: !371, size: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2437, file: !453, line: 83, baseType: !5, size: 32, offset: 128)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2437, file: !453, line: 84, baseType: !5, size: 32, offset: 160)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2437, file: !453, line: 86, baseType: !5, size: 32, offset: 192)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2437, file: !453, line: 87, baseType: !5, size: 32, offset: 224)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2437, file: !453, line: 88, baseType: !5, size: 32, offset: 256)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2437, file: !453, line: 89, baseType: !5, size: 32, offset: 288)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2437, file: !453, line: 90, baseType: !5, size: 32, offset: 320)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2437, file: !453, line: 91, baseType: !5, size: 32, offset: 352)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2437, file: !453, line: 92, baseType: !5, size: 32, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2437, file: !453, line: 93, baseType: !5, size: 32, offset: 416)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2437, file: !453, line: 95, baseType: !2452, size: 1024, offset: 448)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 1024, elements: !2453)
!2453 = !{!2454}
!2454 = !DISubrange(count: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2399, file: !453, line: 407, baseType: !2456, size: 64, offset: 2048)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !453, line: 98, size: 1216, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2457, file: !453, line: 100, baseType: !371, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2457, file: !453, line: 101, baseType: !371, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2457, file: !453, line: 103, baseType: !5, size: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2457, file: !453, line: 104, baseType: !5, size: 32, offset: 160)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2457, file: !453, line: 106, baseType: !2452, size: 1024, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2399, file: !453, line: 408, baseType: !2465, size: 512, offset: 2112)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !453, line: 109, size: 512, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2465, file: !453, line: 111, baseType: !119, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2465, file: !453, line: 112, baseType: !119, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2465, file: !453, line: 115, baseType: !119, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2465, file: !453, line: 116, baseType: !119, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2465, file: !453, line: 117, baseType: !119, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2465, file: !453, line: 118, baseType: !119, size: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2465, file: !453, line: 119, baseType: !119, size: 32, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2465, file: !453, line: 120, baseType: !119, size: 32, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2465, file: !453, line: 121, baseType: !119, size: 32, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2465, file: !453, line: 122, baseType: !119, size: 32, offset: 288)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2465, file: !453, line: 125, baseType: !119, size: 32, offset: 320)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2465, file: !453, line: 126, baseType: !119, size: 32, offset: 352)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2465, file: !453, line: 127, baseType: !410, size: 16, offset: 384)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2465, file: !453, line: 128, baseType: !410, size: 16, offset: 400)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2465, file: !453, line: 129, baseType: !119, size: 32, offset: 416)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2465, file: !453, line: 130, baseType: !119, size: 32, offset: 448)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2465, file: !453, line: 131, baseType: !119, size: 32, offset: 480)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2399, file: !453, line: 409, baseType: !2485, size: 576, offset: 2624)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !453, line: 134, size: 576, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2485, file: !453, line: 135, baseType: !119, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2485, file: !453, line: 136, baseType: !119, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2485, file: !453, line: 137, baseType: !119, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2485, file: !453, line: 138, baseType: !119, size: 32, offset: 96)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2485, file: !453, line: 139, baseType: !119, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2485, file: !453, line: 140, baseType: !119, size: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2485, file: !453, line: 141, baseType: !119, size: 32, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2485, file: !453, line: 142, baseType: !119, size: 32, offset: 224)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2485, file: !453, line: 143, baseType: !474, size: 32, offset: 256)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2485, file: !453, line: 144, baseType: !119, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2485, file: !453, line: 145, baseType: !119, size: 32, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2485, file: !453, line: 147, baseType: !119, size: 32, offset: 352)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2485, file: !453, line: 148, baseType: !119, size: 32, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2485, file: !453, line: 149, baseType: !119, size: 32, offset: 416)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2485, file: !453, line: 150, baseType: !119, size: 32, offset: 448)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2485, file: !453, line: 151, baseType: !119, size: 32, offset: 480)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2485, file: !453, line: 152, baseType: !415, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2399, file: !453, line: 411, baseType: !119, size: 32, offset: 3200)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2399, file: !453, line: 411, baseType: !119, size: 32, offset: 3232)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2399, file: !453, line: 411, baseType: !119, size: 32, offset: 3264)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2399, file: !453, line: 412, baseType: !474, size: 32, offset: 3296)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2399, file: !453, line: 413, baseType: !119, size: 32, offset: 3328)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2399, file: !453, line: 413, baseType: !119, size: 32, offset: 3360)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2399, file: !453, line: 415, baseType: !119, size: 32, offset: 3392)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2399, file: !453, line: 415, baseType: !119, size: 32, offset: 3424)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2399, file: !453, line: 416, baseType: !410, size: 16, offset: 3456)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2399, file: !453, line: 416, baseType: !410, size: 16, offset: 3472)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2399, file: !453, line: 418, baseType: !474, size: 32, offset: 3488)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2399, file: !453, line: 418, baseType: !474, size: 32, offset: 3520)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2399, file: !453, line: 421, baseType: !474, size: 32, offset: 3552)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2399, file: !453, line: 421, baseType: !474, size: 32, offset: 3584)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2399, file: !453, line: 421, baseType: !474, size: 32, offset: 3616)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2399, file: !453, line: 425, baseType: !410, size: 16, offset: 3648)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2399, file: !453, line: 425, baseType: !410, size: 16, offset: 3664)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2399, file: !453, line: 425, baseType: !410, size: 16, offset: 3680)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2399, file: !453, line: 426, baseType: !410, size: 16, offset: 3696)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2399, file: !453, line: 428, baseType: !410, size: 16, offset: 3712)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2399, file: !453, line: 428, baseType: !410, size: 16, offset: 3728)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2399, file: !453, line: 431, baseType: !119, size: 32, offset: 3744)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2399, file: !453, line: 433, baseType: !410, size: 16, offset: 3776)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2399, file: !453, line: 435, baseType: !410, size: 16, offset: 3792)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2399, file: !453, line: 437, baseType: !410, size: 16, offset: 3808)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2399, file: !453, line: 439, baseType: !410, size: 16, offset: 3824)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2399, file: !453, line: 441, baseType: !410, size: 16, offset: 3840)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2399, file: !453, line: 443, baseType: !410, size: 16, offset: 3856)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2399, file: !453, line: 449, baseType: !119, size: 32, offset: 3872)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2399, file: !453, line: 453, baseType: !119, size: 32, offset: 3904)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2399, file: !453, line: 458, baseType: !410, size: 16, offset: 3936)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2399, file: !453, line: 462, baseType: !410, size: 16, offset: 3952)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2399, file: !453, line: 467, baseType: !119, size: 32, offset: 3968)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2399, file: !453, line: 467, baseType: !119, size: 32, offset: 4000)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2399, file: !453, line: 469, baseType: !410, size: 16, offset: 4032)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2399, file: !453, line: 469, baseType: !410, size: 16, offset: 4048)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2399, file: !453, line: 469, baseType: !410, size: 16, offset: 4064)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2399, file: !453, line: 469, baseType: !410, size: 16, offset: 4080)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2399, file: !453, line: 474, baseType: !410, size: 16, offset: 4096)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2399, file: !453, line: 475, baseType: !397, size: 8, offset: 4112)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2399, file: !453, line: 476, baseType: !397, size: 8, offset: 4120)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2399, file: !453, line: 481, baseType: !119, size: 32, offset: 4128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2399, file: !453, line: 486, baseType: !119, size: 32, offset: 4160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2399, file: !453, line: 491, baseType: !119, size: 32, offset: 4192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2399, file: !453, line: 496, baseType: !410, size: 16, offset: 4224)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2399, file: !453, line: 498, baseType: !410, size: 16, offset: 4240)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2399, file: !453, line: 501, baseType: !410, size: 16, offset: 4256)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2399, file: !453, line: 502, baseType: !410, size: 16, offset: 4272)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2399, file: !453, line: 508, baseType: !410, size: 16, offset: 4288)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2399, file: !453, line: 513, baseType: !410, size: 16, offset: 4304)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2399, file: !453, line: 515, baseType: !410, size: 16, offset: 4320)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2399, file: !453, line: 515, baseType: !410, size: 16, offset: 4336)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2399, file: !453, line: 519, baseType: !864, size: 128, offset: 4352)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2399, file: !453, line: 519, baseType: !864, size: 128, offset: 4480)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2399, file: !453, line: 520, baseType: !874, size: 128, offset: 4608)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2399, file: !453, line: 523, baseType: !436, size: 128, offset: 4736)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2399, file: !453, line: 524, baseType: !410, size: 16, offset: 4864)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2399, file: !453, line: 527, baseType: !410, size: 16, offset: 4880)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2399, file: !453, line: 532, baseType: !474, size: 32, offset: 4896)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2399, file: !453, line: 532, baseType: !474, size: 32, offset: 4928)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2399, file: !453, line: 534, baseType: !474, size: 32, offset: 4960)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2399, file: !453, line: 538, baseType: !474, size: 32, offset: 4992)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2399, file: !453, line: 542, baseType: !119, size: 32, offset: 5024)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2399, file: !453, line: 545, baseType: !474, size: 32, offset: 5056)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2399, file: !453, line: 545, baseType: !474, size: 32, offset: 5088)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2399, file: !453, line: 545, baseType: !474, size: 32, offset: 5120)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2399, file: !453, line: 548, baseType: !474, size: 32, offset: 5152)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2399, file: !453, line: 551, baseType: !410, size: 16, offset: 5184)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2399, file: !453, line: 551, baseType: !410, size: 16, offset: 5200)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2399, file: !453, line: 551, baseType: !410, size: 16, offset: 5216)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2399, file: !453, line: 551, baseType: !410, size: 16, offset: 5232)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2399, file: !453, line: 552, baseType: !410, size: 16, offset: 5248)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2399, file: !453, line: 552, baseType: !410, size: 16, offset: 5264)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2399, file: !453, line: 553, baseType: !474, size: 32, offset: 5280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2399, file: !453, line: 553, baseType: !474, size: 32, offset: 5312)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2399, file: !453, line: 554, baseType: !410, size: 16, offset: 5344)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2399, file: !453, line: 554, baseType: !410, size: 16, offset: 5360)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2399, file: !453, line: 555, baseType: !474, size: 32, offset: 5376)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2399, file: !453, line: 555, baseType: !474, size: 32, offset: 5408)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2399, file: !453, line: 558, baseType: !396, size: 8192, offset: 5440)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2399, file: !453, line: 561, baseType: !119, size: 32, offset: 13632)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2399, file: !453, line: 562, baseType: !410, size: 16, offset: 13664)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2399, file: !453, line: 562, baseType: !410, size: 16, offset: 13680)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2399, file: !453, line: 565, baseType: !1897, size: 6144, offset: 13696)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2399, file: !453, line: 568, baseType: !828, size: 128, offset: 19840)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2399, file: !453, line: 569, baseType: !828, size: 128, offset: 19968)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2399, file: !453, line: 572, baseType: !397, size: 8, offset: 20096)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2399, file: !453, line: 573, baseType: !397, size: 8, offset: 20104)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2399, file: !453, line: 574, baseType: !397, size: 8, offset: 20112)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2399, file: !453, line: 575, baseType: !2249, size: 40, offset: 20120)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2399, file: !453, line: 578, baseType: !119, size: 32, offset: 20160)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2399, file: !453, line: 579, baseType: !410, size: 16, offset: 20192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2399, file: !453, line: 580, baseType: !410, size: 16, offset: 20208)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2399, file: !453, line: 581, baseType: !474, size: 32, offset: 20224)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2399, file: !453, line: 582, baseType: !474, size: 32, offset: 20256)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2399, file: !453, line: 585, baseType: !410, size: 16, offset: 20288)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2399, file: !453, line: 585, baseType: !410, size: 16, offset: 20304)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2399, file: !453, line: 586, baseType: !474, size: 32, offset: 20320)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2399, file: !453, line: 589, baseType: !410, size: 16, offset: 20352)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2399, file: !453, line: 589, baseType: !410, size: 16, offset: 20368)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2399, file: !453, line: 590, baseType: !119, size: 32, offset: 20384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2399, file: !453, line: 593, baseType: !410, size: 16, offset: 20416)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2399, file: !453, line: 593, baseType: !410, size: 16, offset: 20432)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2399, file: !453, line: 594, baseType: !410, size: 16, offset: 20448)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2399, file: !453, line: 594, baseType: !410, size: 16, offset: 20464)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2399, file: !453, line: 595, baseType: !474, size: 32, offset: 20480)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2399, file: !453, line: 596, baseType: !474, size: 32, offset: 20512)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2399, file: !453, line: 597, baseType: !2612, size: 64, offset: 20544)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2614, line: 44, flags: DIFlagFwdDecl)
!2614 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2399, file: !453, line: 600, baseType: !119, size: 32, offset: 20608)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2399, file: !453, line: 601, baseType: !474, size: 32, offset: 20640)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2399, file: !453, line: 604, baseType: !2618, size: 256, offset: 20672)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 256, elements: !1617)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2399, file: !453, line: 607, baseType: !2620, size: 10880, offset: 20928)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !453, line: 364, size: 10880, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2620, file: !453, line: 365, baseType: !2402, size: 1984)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2620, file: !453, line: 367, baseType: !396, size: 8192, offset: 1984)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2620, file: !453, line: 369, baseType: !410, size: 16, offset: 10176)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2620, file: !453, line: 369, baseType: !410, size: 16, offset: 10192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2620, file: !453, line: 370, baseType: !410, size: 16, offset: 10208)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2620, file: !453, line: 370, baseType: !410, size: 16, offset: 10224)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2620, file: !453, line: 372, baseType: !474, size: 32, offset: 10240)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2620, file: !453, line: 373, baseType: !474, size: 32, offset: 10272)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2620, file: !453, line: 375, baseType: !2172, size: 24, offset: 10304)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2620, file: !453, line: 376, baseType: !397, size: 8, offset: 10328)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2620, file: !453, line: 378, baseType: !397, size: 8, offset: 10336)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2620, file: !453, line: 379, baseType: !2172, size: 24, offset: 10344)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2620, file: !453, line: 381, baseType: !426, size: 512, offset: 10368)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2399, file: !453, line: 609, baseType: !119, size: 32, offset: 31808)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2399, file: !453, line: 610, baseType: !119, size: 32, offset: 31840)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !452, file: !453, line: 1252, baseType: !2638, size: 256, offset: 34112)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !453, line: 158, size: 256, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2638, file: !453, line: 159, baseType: !119, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2638, file: !453, line: 160, baseType: !474, size: 32, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2638, file: !453, line: 161, baseType: !474, size: 32, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2638, file: !453, line: 162, baseType: !474, size: 32, offset: 96)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2638, file: !453, line: 163, baseType: !119, size: 32, offset: 128)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2638, file: !453, line: 164, baseType: !410, size: 16, offset: 160)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2638, file: !453, line: 165, baseType: !410, size: 16, offset: 176)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2638, file: !453, line: 166, baseType: !474, size: 32, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2638, file: !453, line: 167, baseType: !474, size: 32, offset: 224)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !452, file: !453, line: 1254, baseType: !436, size: 128, offset: 34368)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !452, file: !453, line: 1255, baseType: !436, size: 128, offset: 34496)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !452, file: !453, line: 1257, baseType: !371, size: 64, offset: 34624)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !452, file: !453, line: 1258, baseType: !371, size: 64, offset: 34688)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !452, file: !453, line: 1259, baseType: !371, size: 64, offset: 34752)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !452, file: !453, line: 1260, baseType: !371, size: 64, offset: 34816)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !452, file: !453, line: 1262, baseType: !371, size: 64, offset: 34880)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !452, file: !453, line: 1265, baseType: !2657, size: 64, offset: 34944)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !453, line: 1265, flags: DIFlagFwdDecl)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !452, file: !453, line: 1266, baseType: !410, size: 16, offset: 35008)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !452, file: !453, line: 1267, baseType: !410, size: 16, offset: 35024)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !452, file: !453, line: 1270, baseType: !119, size: 32, offset: 35040)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !452, file: !453, line: 1271, baseType: !436, size: 128, offset: 35072)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !452, file: !453, line: 1274, baseType: !2664, size: 128, offset: 35200)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !453, line: 650, size: 128, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2664, file: !453, line: 651, baseType: !1399, size: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2664, file: !453, line: 652, baseType: !397, size: 8, offset: 96)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2664, file: !453, line: 652, baseType: !397, size: 8, offset: 104)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2664, file: !453, line: 652, baseType: !397, size: 8, offset: 112)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2664, file: !453, line: 652, baseType: !397, size: 8, offset: 120)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !452, file: !453, line: 1275, baseType: !2672, size: 1472, offset: 35328)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !453, line: 676, size: 1472, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2695, !2696, !2697, !2698, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2672, file: !453, line: 679, baseType: !2664, size: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2672, file: !453, line: 680, baseType: !410, size: 16, offset: 128)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2672, file: !453, line: 680, baseType: !410, size: 16, offset: 144)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2672, file: !453, line: 680, baseType: !410, size: 16, offset: 160)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2672, file: !453, line: 680, baseType: !410, size: 16, offset: 176)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2672, file: !453, line: 681, baseType: !410, size: 16, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2672, file: !453, line: 681, baseType: !410, size: 16, offset: 208)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2672, file: !453, line: 681, baseType: !410, size: 16, offset: 224)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2672, file: !453, line: 681, baseType: !410, size: 16, offset: 240)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2672, file: !453, line: 682, baseType: !410, size: 16, offset: 256)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2672, file: !453, line: 682, baseType: !1669, size: 48, offset: 272)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2672, file: !453, line: 685, baseType: !2686, size: 192, offset: 320)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !453, line: 633, size: 192, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2686, file: !453, line: 634, baseType: !410, size: 16)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2686, file: !453, line: 634, baseType: !410, size: 16, offset: 16)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2686, file: !453, line: 635, baseType: !410, size: 16, offset: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2686, file: !453, line: 635, baseType: !410, size: 16, offset: 48)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2686, file: !453, line: 636, baseType: !474, size: 32, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2686, file: !453, line: 636, baseType: !474, size: 32, offset: 96)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2686, file: !453, line: 637, baseType: !2612, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2672, file: !453, line: 686, baseType: !410, size: 16, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2672, file: !453, line: 686, baseType: !410, size: 16, offset: 528)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2672, file: !453, line: 687, baseType: !474, size: 32, offset: 544)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2672, file: !453, line: 688, baseType: !2699, size: 448, offset: 576)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !453, line: 674, baseType: !2700)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !453, line: 659, size: 448, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2700, file: !453, line: 660, baseType: !474, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2700, file: !453, line: 661, baseType: !474, size: 32, offset: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2700, file: !453, line: 662, baseType: !474, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2700, file: !453, line: 663, baseType: !474, size: 32, offset: 96)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2700, file: !453, line: 664, baseType: !474, size: 32, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2700, file: !453, line: 665, baseType: !474, size: 32, offset: 160)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2700, file: !453, line: 666, baseType: !474, size: 32, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2700, file: !453, line: 667, baseType: !474, size: 32, offset: 224)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2700, file: !453, line: 668, baseType: !474, size: 32, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2700, file: !453, line: 669, baseType: !474, size: 32, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2700, file: !453, line: 670, baseType: !119, size: 32, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2700, file: !453, line: 671, baseType: !474, size: 32, offset: 352)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2700, file: !453, line: 672, baseType: !474, size: 32, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2700, file: !453, line: 673, baseType: !410, size: 16, offset: 416)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2700, file: !453, line: 673, baseType: !410, size: 16, offset: 432)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2672, file: !453, line: 692, baseType: !474, size: 32, offset: 1024)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2672, file: !453, line: 697, baseType: !474, size: 32, offset: 1056)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2672, file: !453, line: 703, baseType: !119, size: 32, offset: 1088)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2672, file: !453, line: 704, baseType: !410, size: 16, offset: 1120)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2672, file: !453, line: 704, baseType: !410, size: 16, offset: 1136)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2672, file: !453, line: 705, baseType: !410, size: 16, offset: 1152)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2672, file: !453, line: 706, baseType: !410, size: 16, offset: 1168)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2672, file: !453, line: 707, baseType: !410, size: 16, offset: 1184)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2672, file: !453, line: 708, baseType: !410, size: 16, offset: 1200)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2672, file: !453, line: 709, baseType: !410, size: 16, offset: 1216)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2672, file: !453, line: 709, baseType: !410, size: 16, offset: 1232)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2672, file: !453, line: 709, baseType: !410, size: 16, offset: 1248)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2672, file: !453, line: 709, baseType: !410, size: 16, offset: 1264)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2672, file: !453, line: 710, baseType: !410, size: 16, offset: 1280)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2672, file: !453, line: 711, baseType: !410, size: 16, offset: 1296)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2672, file: !453, line: 712, baseType: !474, size: 32, offset: 1312)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2672, file: !453, line: 713, baseType: !474, size: 32, offset: 1344)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2672, file: !453, line: 713, baseType: !474, size: 32, offset: 1376)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2672, file: !453, line: 713, baseType: !474, size: 32, offset: 1408)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2672, file: !453, line: 713, baseType: !474, size: 32, offset: 1440)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !452, file: !453, line: 1278, baseType: !2738, size: 64, offset: 36800)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !453, line: 1197, size: 64, elements: !2739)
!2739 = !{!2740, !2741, !2742, !2743}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2738, file: !453, line: 1199, baseType: !474, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2738, file: !453, line: 1200, baseType: !397, size: 8, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2738, file: !453, line: 1201, baseType: !397, size: 8, offset: 40)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2738, file: !453, line: 1202, baseType: !410, size: 16, offset: 48)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !452, file: !453, line: 1281, baseType: !1292, size: 64, offset: 36864)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !452, file: !453, line: 1284, baseType: !2746, size: 192, offset: 36928)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !453, line: 1208, size: 192, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2746, file: !453, line: 1209, baseType: !1399, size: 96)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2746, file: !453, line: 1210, baseType: !119, size: 32, offset: 96)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2746, file: !453, line: 1210, baseType: !119, size: 32, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2746, file: !453, line: 1210, baseType: !119, size: 32, offset: 160)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !452, file: !453, line: 1287, baseType: !1943, size: 64, offset: 37120)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !452, file: !453, line: 1289, baseType: !2754, size: 64, offset: 37184)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2755, line: 27, baseType: !2756)
!2755 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2757, line: 45, baseType: !2758)
!2757 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2758 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !452, file: !453, line: 1290, baseType: !2754, size: 64, offset: 37248)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !452, file: !453, line: 1293, baseType: !2419, size: 1280, offset: 37312)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !452, file: !453, line: 1294, baseType: !2431, size: 512, offset: 38592)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !452, file: !453, line: 1295, baseType: !1581, size: 512, offset: 39104)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !452, file: !453, line: 1298, baseType: !2764, size: 64, offset: 39616)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !453, line: 1298, flags: DIFlagFwdDecl)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !374, file: !40, line: 58, baseType: !451, size: 64, offset: 1536)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !374, file: !40, line: 60, baseType: !119, size: 32, offset: 1600)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !374, file: !40, line: 61, baseType: !119, size: 32, offset: 1632)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !374, file: !40, line: 63, baseType: !410, size: 16, offset: 1664)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !374, file: !40, line: 64, baseType: !410, size: 16, offset: 1680)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !374, file: !40, line: 65, baseType: !410, size: 16, offset: 1696)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !374, file: !40, line: 66, baseType: !410, size: 16, offset: 1712)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !374, file: !40, line: 67, baseType: !410, size: 16, offset: 1728)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !374, file: !40, line: 68, baseType: !410, size: 16, offset: 1744)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !374, file: !40, line: 69, baseType: !410, size: 16, offset: 1760)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !374, file: !40, line: 70, baseType: !410, size: 16, offset: 1776)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !374, file: !40, line: 71, baseType: !410, size: 16, offset: 1792)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !374, file: !40, line: 73, baseType: !410, size: 16, offset: 1808)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !374, file: !40, line: 74, baseType: !410, size: 16, offset: 1824)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !374, file: !40, line: 76, baseType: !410, size: 16, offset: 1840)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !374, file: !40, line: 78, baseType: !907, size: 64, offset: 1856)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !374, file: !40, line: 79, baseType: !371, size: 64, offset: 1920)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !2785, line: 221, baseType: !2786)
!2785 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !2785, line: 151, size: 3008, elements: !2787)
!2787 = !{!2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2830, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !3040}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2786, file: !2785, line: 152, baseType: !1152, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2786, file: !2785, line: 152, baseType: !1152, size: 64, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2786, file: !2785, line: 153, baseType: !436, size: 128, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2786, file: !2785, line: 154, baseType: !119, size: 32, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2786, file: !2785, line: 155, baseType: !474, size: 32, offset: 288)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2786, file: !2785, line: 156, baseType: !1161, size: 128, offset: 320)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2786, file: !2785, line: 158, baseType: !828, size: 128, offset: 448)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2786, file: !2785, line: 159, baseType: !474, size: 32, offset: 576)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !2786, file: !2785, line: 161, baseType: !474, size: 32, offset: 608)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !2786, file: !2785, line: 162, baseType: !397, size: 8, offset: 640)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2786, file: !2785, line: 163, baseType: !2172, size: 24, offset: 648)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !2786, file: !2785, line: 165, baseType: !5, size: 32, offset: 672)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !2786, file: !2785, line: 166, baseType: !5, size: 32, offset: 704)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2786, file: !2785, line: 168, baseType: !410, size: 16, offset: 736)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2786, file: !2785, line: 169, baseType: !410, size: 16, offset: 752)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2786, file: !2785, line: 171, baseType: !460, size: 64, offset: 768)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !2786, file: !2785, line: 171, baseType: !460, size: 64, offset: 832)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !2786, file: !2785, line: 172, baseType: !864, size: 128, offset: 896)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !2786, file: !2785, line: 174, baseType: !438, size: 128, offset: 1024)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !2786, file: !2785, line: 175, baseType: !2808, size: 64, offset: 1152)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !2785, line: 70, size: 832, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815, !2816, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2809, file: !2785, line: 71, baseType: !2808, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2809, file: !2785, line: 71, baseType: !2808, size: 64, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2809, file: !2785, line: 73, baseType: !1519, size: 64, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2809, file: !2785, line: 74, baseType: !608, size: 320, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2809, file: !2785, line: 75, baseType: !1943, size: 64, offset: 512)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !2809, file: !2785, line: 76, baseType: !2817, size: 64, offset: 576)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1945, line: 50, size: 64, elements: !2818)
!2818 = !{!2819, !2820, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2817, file: !1945, line: 51, baseType: !119, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !2817, file: !1945, line: 52, baseType: !410, size: 16, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !2817, file: !1945, line: 52, baseType: !410, size: 16, offset: 48)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2809, file: !2785, line: 77, baseType: !474, size: 32, offset: 640)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2809, file: !2785, line: 77, baseType: !474, size: 32, offset: 672)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2809, file: !2785, line: 77, baseType: !474, size: 32, offset: 704)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2809, file: !2785, line: 77, baseType: !474, size: 32, offset: 736)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2809, file: !2785, line: 78, baseType: !410, size: 16, offset: 768)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2809, file: !2785, line: 79, baseType: !410, size: 16, offset: 784)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2809, file: !2785, line: 80, baseType: !410, size: 16, offset: 800)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2809, file: !2785, line: 80, baseType: !410, size: 16, offset: 816)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2786, file: !2785, line: 177, baseType: !2831, size: 64, offset: 1216)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !2786, file: !2785, line: 179, baseType: !426, size: 512, offset: 1280)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2786, file: !2785, line: 181, baseType: !5, size: 32, offset: 1792)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2786, file: !2785, line: 182, baseType: !119, size: 32, offset: 1824)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2786, file: !2785, line: 187, baseType: !410, size: 16, offset: 1856)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !2786, file: !2785, line: 188, baseType: !410, size: 16, offset: 1872)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !2786, file: !2785, line: 189, baseType: !410, size: 16, offset: 1888)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2786, file: !2785, line: 189, baseType: !410, size: 16, offset: 1904)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2786, file: !2785, line: 190, baseType: !410, size: 16, offset: 1920)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !2786, file: !2785, line: 190, baseType: !410, size: 16, offset: 1936)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !2786, file: !2785, line: 192, baseType: !474, size: 32, offset: 1952)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !2786, file: !2785, line: 192, baseType: !474, size: 32, offset: 1984)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !2786, file: !2785, line: 193, baseType: !474, size: 32, offset: 2016)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !2786, file: !2785, line: 193, baseType: !474, size: 32, offset: 2048)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2786, file: !2785, line: 194, baseType: !1399, size: 96, offset: 2080)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2786, file: !2785, line: 195, baseType: !1399, size: 96, offset: 2176)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !2786, file: !2785, line: 197, baseType: !410, size: 16, offset: 2272)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !2786, file: !2785, line: 199, baseType: !410, size: 16, offset: 2288)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !2786, file: !2785, line: 200, baseType: !410, size: 16, offset: 2304)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !2786, file: !2785, line: 201, baseType: !397, size: 8, offset: 2320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !2786, file: !2785, line: 204, baseType: !397, size: 8, offset: 2328)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !2786, file: !2785, line: 204, baseType: !397, size: 8, offset: 2336)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !2786, file: !2785, line: 204, baseType: !397, size: 8, offset: 2344)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2786, file: !2785, line: 204, baseType: !2383, size: 16, offset: 2352)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !2786, file: !2785, line: 207, baseType: !438, size: 128, offset: 2368)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !2786, file: !2785, line: 208, baseType: !438, size: 128, offset: 2496)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !2786, file: !2785, line: 209, baseType: !438, size: 128, offset: 2624)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !2786, file: !2785, line: 212, baseType: !397, size: 8, offset: 2752)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2786, file: !2785, line: 212, baseType: !397, size: 8, offset: 2760)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !2786, file: !2785, line: 212, baseType: !397, size: 8, offset: 2768)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2786, file: !2785, line: 213, baseType: !2249, size: 40, offset: 2776)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !2786, file: !2785, line: 215, baseType: !371, size: 64, offset: 2816)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !2786, file: !2785, line: 216, baseType: !2864, size: 64, offset: 2880)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !2866, line: 93, size: 7552, elements: !2867)
!2866 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2916, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3039}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2865, file: !2866, line: 94, baseType: !377, size: 960)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2865, file: !2866, line: 95, baseType: !457, size: 64, offset: 960)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !2865, file: !2866, line: 97, baseType: !410, size: 16, offset: 1024)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2865, file: !2866, line: 97, baseType: !410, size: 16, offset: 1040)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2865, file: !2866, line: 99, baseType: !474, size: 32, offset: 1056)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2865, file: !2866, line: 99, baseType: !474, size: 32, offset: 1088)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2865, file: !2866, line: 99, baseType: !474, size: 32, offset: 1120)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2865, file: !2866, line: 100, baseType: !474, size: 32, offset: 1152)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2865, file: !2866, line: 100, baseType: !474, size: 32, offset: 1184)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2865, file: !2866, line: 100, baseType: !474, size: 32, offset: 1216)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2865, file: !2866, line: 101, baseType: !474, size: 32, offset: 1248)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2865, file: !2866, line: 101, baseType: !474, size: 32, offset: 1280)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2865, file: !2866, line: 101, baseType: !474, size: 32, offset: 1312)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2865, file: !2866, line: 102, baseType: !474, size: 32, offset: 1344)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2865, file: !2866, line: 102, baseType: !474, size: 32, offset: 1376)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2865, file: !2866, line: 102, baseType: !474, size: 32, offset: 1408)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2865, file: !2866, line: 103, baseType: !474, size: 32, offset: 1440)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2865, file: !2866, line: 103, baseType: !474, size: 32, offset: 1472)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2865, file: !2866, line: 103, baseType: !474, size: 32, offset: 1504)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2865, file: !2866, line: 103, baseType: !474, size: 32, offset: 1536)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2865, file: !2866, line: 103, baseType: !474, size: 32, offset: 1568)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2865, file: !2866, line: 104, baseType: !474, size: 32, offset: 1600)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2865, file: !2866, line: 104, baseType: !474, size: 32, offset: 1632)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2865, file: !2866, line: 104, baseType: !474, size: 32, offset: 1664)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2865, file: !2866, line: 104, baseType: !474, size: 32, offset: 1696)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2865, file: !2866, line: 104, baseType: !474, size: 32, offset: 1728)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2865, file: !2866, line: 105, baseType: !474, size: 32, offset: 1760)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !2865, file: !2866, line: 108, baseType: !2896, size: 704, offset: 1792)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !2866, line: 53, size: 704, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !2896, file: !2866, line: 54, baseType: !474, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !2896, file: !2866, line: 55, baseType: !474, size: 32, offset: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !2896, file: !2866, line: 56, baseType: !474, size: 32, offset: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !2896, file: !2866, line: 57, baseType: !474, size: 32, offset: 96)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !2896, file: !2866, line: 59, baseType: !1399, size: 96, offset: 128)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !2896, file: !2866, line: 60, baseType: !1399, size: 96, offset: 224)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !2896, file: !2866, line: 61, baseType: !1399, size: 96, offset: 320)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !2896, file: !2866, line: 63, baseType: !474, size: 32, offset: 416)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !2896, file: !2866, line: 64, baseType: !474, size: 32, offset: 448)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !2896, file: !2866, line: 65, baseType: !474, size: 32, offset: 480)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !2896, file: !2866, line: 67, baseType: !410, size: 16, offset: 512)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !2896, file: !2866, line: 68, baseType: !410, size: 16, offset: 528)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !2896, file: !2866, line: 69, baseType: !410, size: 16, offset: 544)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !2896, file: !2866, line: 70, baseType: !410, size: 16, offset: 560)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !2896, file: !2866, line: 72, baseType: !474, size: 32, offset: 576)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !2896, file: !2866, line: 73, baseType: !474, size: 32, offset: 608)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !2896, file: !2866, line: 74, baseType: !474, size: 32, offset: 640)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !2896, file: !2866, line: 75, baseType: !474, size: 32, offset: 672)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !2865, file: !2866, line: 109, baseType: !2917, size: 128, offset: 2496)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !2866, line: 79, size: 128, elements: !2918)
!2918 = !{!2919, !2920, !2921, !2922}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2917, file: !2866, line: 80, baseType: !119, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !2917, file: !2866, line: 81, baseType: !119, size: 32, offset: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !2917, file: !2866, line: 82, baseType: !119, size: 32, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2917, file: !2866, line: 83, baseType: !119, size: 32, offset: 96)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !2865, file: !2866, line: 111, baseType: !474, size: 32, offset: 2624)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !2865, file: !2866, line: 111, baseType: !474, size: 32, offset: 2656)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !2865, file: !2866, line: 112, baseType: !474, size: 32, offset: 2688)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !2865, file: !2866, line: 112, baseType: !474, size: 32, offset: 2720)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2865, file: !2866, line: 113, baseType: !474, size: 32, offset: 2752)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !2865, file: !2866, line: 114, baseType: !474, size: 32, offset: 2784)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !2865, file: !2866, line: 114, baseType: !474, size: 32, offset: 2816)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !2865, file: !2866, line: 115, baseType: !410, size: 16, offset: 2848)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !2865, file: !2866, line: 115, baseType: !410, size: 16, offset: 2864)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2865, file: !2866, line: 116, baseType: !410, size: 16, offset: 2880)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !2865, file: !2866, line: 117, baseType: !397, size: 8, offset: 2896)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !2865, file: !2866, line: 117, baseType: !397, size: 8, offset: 2904)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !2865, file: !2866, line: 119, baseType: !474, size: 32, offset: 2912)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !2865, file: !2866, line: 119, baseType: !474, size: 32, offset: 2944)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !2865, file: !2866, line: 120, baseType: !410, size: 16, offset: 2976)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !2865, file: !2866, line: 120, baseType: !410, size: 16, offset: 2992)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !2865, file: !2866, line: 121, baseType: !474, size: 32, offset: 3008)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !2865, file: !2866, line: 121, baseType: !474, size: 32, offset: 3040)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !2865, file: !2866, line: 122, baseType: !474, size: 32, offset: 3072)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !2865, file: !2866, line: 123, baseType: !474, size: 32, offset: 3104)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !2865, file: !2866, line: 124, baseType: !410, size: 16, offset: 3136)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !2865, file: !2866, line: 125, baseType: !410, size: 16, offset: 3152)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2865, file: !2866, line: 127, baseType: !119, size: 32, offset: 3168)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !2865, file: !2866, line: 127, baseType: !119, size: 32, offset: 3200)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2865, file: !2866, line: 128, baseType: !119, size: 32, offset: 3232)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !2865, file: !2866, line: 128, baseType: !119, size: 32, offset: 3264)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2865, file: !2866, line: 129, baseType: !410, size: 16, offset: 3296)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !2865, file: !2866, line: 129, baseType: !410, size: 16, offset: 3312)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2865, file: !2866, line: 129, baseType: !410, size: 16, offset: 3328)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2865, file: !2866, line: 129, baseType: !410, size: 16, offset: 3344)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2865, file: !2866, line: 130, baseType: !474, size: 32, offset: 3360)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !2865, file: !2866, line: 130, baseType: !474, size: 32, offset: 3392)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !2865, file: !2866, line: 130, baseType: !474, size: 32, offset: 3424)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !2865, file: !2866, line: 130, baseType: !474, size: 32, offset: 3456)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !2865, file: !2866, line: 131, baseType: !474, size: 32, offset: 3488)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !2865, file: !2866, line: 131, baseType: !474, size: 32, offset: 3520)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !2865, file: !2866, line: 131, baseType: !474, size: 32, offset: 3552)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !2865, file: !2866, line: 131, baseType: !474, size: 32, offset: 3584)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !2865, file: !2866, line: 132, baseType: !474, size: 32, offset: 3616)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !2865, file: !2866, line: 132, baseType: !474, size: 32, offset: 3648)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !2865, file: !2866, line: 133, baseType: !426, size: 512, offset: 3680)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !2865, file: !2866, line: 135, baseType: !474, size: 32, offset: 4192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !2865, file: !2866, line: 136, baseType: !474, size: 32, offset: 4224)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !2865, file: !2866, line: 137, baseType: !474, size: 32, offset: 4256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !2865, file: !2866, line: 138, baseType: !119, size: 32, offset: 4288)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !2865, file: !2866, line: 141, baseType: !397, size: 8, offset: 4320)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2865, file: !2866, line: 141, baseType: !397, size: 8, offset: 4328)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !2865, file: !2866, line: 141, baseType: !397, size: 8, offset: 4336)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2865, file: !2866, line: 141, baseType: !397, size: 8, offset: 4344)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !2865, file: !2866, line: 142, baseType: !410, size: 16, offset: 4352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2865, file: !2866, line: 142, baseType: !410, size: 16, offset: 4368)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !2865, file: !2866, line: 142, baseType: !410, size: 16, offset: 4384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !2865, file: !2866, line: 145, baseType: !397, size: 8, offset: 4400)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2865, file: !2866, line: 145, baseType: !397, size: 8, offset: 4408)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !2865, file: !2866, line: 148, baseType: !410, size: 16, offset: 4416)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !2865, file: !2866, line: 148, baseType: !410, size: 16, offset: 4432)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !2865, file: !2866, line: 149, baseType: !474, size: 32, offset: 4448)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !2865, file: !2866, line: 149, baseType: !474, size: 32, offset: 4480)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2865, file: !2866, line: 152, baseType: !828, size: 128, offset: 4512)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !2865, file: !2866, line: 153, baseType: !474, size: 32, offset: 4640)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !2865, file: !2866, line: 154, baseType: !474, size: 32, offset: 4672)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2865, file: !2866, line: 157, baseType: !410, size: 16, offset: 4704)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2865, file: !2866, line: 157, baseType: !410, size: 16, offset: 4720)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !2865, file: !2866, line: 160, baseType: !1594, size: 64, offset: 4736)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !2865, file: !2866, line: 161, baseType: !1594, size: 64, offset: 4800)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !2865, file: !2866, line: 162, baseType: !397, size: 8, offset: 4864)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !2865, file: !2866, line: 162, baseType: !397, size: 8, offset: 4872)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !2865, file: !2866, line: 163, baseType: !397, size: 8, offset: 4880)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !2865, file: !2866, line: 163, baseType: !397, size: 8, offset: 4888)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !2865, file: !2866, line: 164, baseType: !410, size: 16, offset: 4896)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2865, file: !2866, line: 164, baseType: !410, size: 16, offset: 4912)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !2865, file: !2866, line: 165, baseType: !474, size: 32, offset: 4928)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !2865, file: !2866, line: 165, baseType: !474, size: 32, offset: 4960)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2865, file: !2866, line: 167, baseType: !543, size: 1152, offset: 4992)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2865, file: !2866, line: 168, baseType: !626, size: 64, offset: 6144)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2865, file: !2866, line: 169, baseType: !539, size: 64, offset: 6208)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2865, file: !2866, line: 170, baseType: !3000, size: 64, offset: 6272)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2614, line: 43, flags: DIFlagFwdDecl)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2865, file: !2866, line: 171, baseType: !1556, size: 64, offset: 6336)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2865, file: !2866, line: 174, baseType: !474, size: 32, offset: 6400)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !2865, file: !2866, line: 174, baseType: !474, size: 32, offset: 6432)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !2865, file: !2866, line: 174, baseType: !474, size: 32, offset: 6464)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !2865, file: !2866, line: 175, baseType: !474, size: 32, offset: 6496)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !2865, file: !2866, line: 175, baseType: !474, size: 32, offset: 6528)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !2865, file: !2866, line: 176, baseType: !410, size: 16, offset: 6560)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2865, file: !2866, line: 176, baseType: !410, size: 16, offset: 6576)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !2865, file: !2866, line: 179, baseType: !1399, size: 96, offset: 6592)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !2865, file: !2866, line: 179, baseType: !1399, size: 96, offset: 6688)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !2865, file: !2866, line: 180, baseType: !474, size: 32, offset: 6784)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !2865, file: !2866, line: 180, baseType: !474, size: 32, offset: 6816)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !2865, file: !2866, line: 180, baseType: !474, size: 32, offset: 6848)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !2865, file: !2866, line: 181, baseType: !474, size: 32, offset: 6880)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !2865, file: !2866, line: 181, baseType: !474, size: 32, offset: 6912)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !2865, file: !2866, line: 182, baseType: !474, size: 32, offset: 6944)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !2865, file: !2866, line: 182, baseType: !474, size: 32, offset: 6976)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !2865, file: !2866, line: 183, baseType: !410, size: 16, offset: 7008)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !2865, file: !2866, line: 183, baseType: !410, size: 16, offset: 7024)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !2865, file: !2866, line: 185, baseType: !119, size: 32, offset: 7040)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !2865, file: !2866, line: 186, baseType: !410, size: 16, offset: 7072)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2865, file: !2866, line: 187, baseType: !410, size: 16, offset: 7088)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !2865, file: !2866, line: 190, baseType: !828, size: 128, offset: 7104)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !2865, file: !2866, line: 191, baseType: !410, size: 16, offset: 7232)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !2865, file: !2866, line: 192, baseType: !410, size: 16, offset: 7248)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !2865, file: !2866, line: 195, baseType: !410, size: 16, offset: 7264)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !2865, file: !2866, line: 196, baseType: !410, size: 16, offset: 7280)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !2865, file: !2866, line: 197, baseType: !410, size: 16, offset: 7296)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2865, file: !2866, line: 198, baseType: !1669, size: 48, offset: 7312)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !2865, file: !2866, line: 200, baseType: !3032, size: 64, offset: 7360)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !2866, line: 86, size: 192, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3033, file: !2866, line: 87, baseType: !1519, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !3033, file: !2866, line: 88, baseType: !1256, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3033, file: !2866, line: 89, baseType: !119, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3033, file: !2866, line: 90, baseType: !119, size: 32, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !2865, file: !2866, line: 202, baseType: !436, size: 128, offset: 7424)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2786, file: !2785, line: 219, baseType: !1292, size: 64, offset: 2944)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !40, line: 228, baseType: !1103)
!3043 = !{i32 7, !"Dwarf Version", i32 4}
!3044 = !{i32 2, !"Debug Info Version", i32 3}
!3045 = !{i32 1, !"wchar_size", i32 4}
!3046 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3047 = distinct !DISubprogram(name: "screen_findedge", scope: !1, file: !1, line: 108, type: !3048, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!3050, !372, !1108, !1108}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrEdge", file: !40, line: 95, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrEdge", file: !40, line: 89, size: 320, elements: !3053)
!3053 = !{!3054, !3056, !3057, !3058, !3059, !3060, !3061}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3052, file: !40, line: 90, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3052, file: !40, line: 90, baseType: !3055, size: 64, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3052, file: !40, line: 91, baseType: !1108, size: 64, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3052, file: !40, line: 91, baseType: !1108, size: 64, offset: 192)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !3052, file: !40, line: 92, baseType: !410, size: 16, offset: 256)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3052, file: !40, line: 93, baseType: !410, size: 16, offset: 272)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3052, file: !40, line: 94, baseType: !119, size: 32, offset: 288)
!3062 = !{}
!3063 = !DILocalVariable(name: "sc", arg: 1, scope: !3047, file: !1, line: 108, type: !372)
!3064 = !DILocation(line: 108, column: 35, scope: !3047)
!3065 = !DILocalVariable(name: "v1", arg: 2, scope: !3047, file: !1, line: 108, type: !1108)
!3066 = !DILocation(line: 108, column: 48, scope: !3047)
!3067 = !DILocalVariable(name: "v2", arg: 3, scope: !3047, file: !1, line: 108, type: !1108)
!3068 = !DILocation(line: 108, column: 61, scope: !3047)
!3069 = !DILocalVariable(name: "se", scope: !3047, file: !1, line: 110, type: !3050)
!3070 = !DILocation(line: 110, column: 11, scope: !3047)
!3071 = !DILocation(line: 112, column: 2, scope: !3047)
!3072 = !DILocation(line: 113, column: 12, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3047, file: !1, line: 113, column: 2)
!3074 = !DILocation(line: 113, column: 16, scope: !3073)
!3075 = !DILocation(line: 113, column: 25, scope: !3073)
!3076 = !DILocation(line: 113, column: 10, scope: !3073)
!3077 = !DILocation(line: 113, column: 7, scope: !3073)
!3078 = !DILocation(line: 113, column: 32, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3073, file: !1, line: 113, column: 2)
!3080 = !DILocation(line: 113, column: 2, scope: !3073)
!3081 = !DILocation(line: 114, column: 7, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 114, column: 7)
!3083 = !DILocation(line: 114, column: 11, scope: !3082)
!3084 = !DILocation(line: 114, column: 17, scope: !3082)
!3085 = !DILocation(line: 114, column: 14, scope: !3082)
!3086 = !DILocation(line: 114, column: 20, scope: !3082)
!3087 = !DILocation(line: 114, column: 23, scope: !3082)
!3088 = !DILocation(line: 114, column: 27, scope: !3082)
!3089 = !DILocation(line: 114, column: 33, scope: !3082)
!3090 = !DILocation(line: 114, column: 30, scope: !3082)
!3091 = !DILocation(line: 114, column: 7, scope: !3079)
!3092 = !DILocation(line: 115, column: 11, scope: !3082)
!3093 = !DILocation(line: 115, column: 4, scope: !3082)
!3094 = !DILocation(line: 113, column: 41, scope: !3079)
!3095 = !DILocation(line: 113, column: 45, scope: !3079)
!3096 = !DILocation(line: 113, column: 39, scope: !3079)
!3097 = !DILocation(line: 113, column: 2, scope: !3079)
!3098 = distinct !{!3098, !3080, !3099}
!3099 = !DILocation(line: 115, column: 11, scope: !3073)
!3100 = !DILocation(line: 117, column: 2, scope: !3047)
!3101 = !DILocation(line: 118, column: 1, scope: !3047)
!3102 = distinct !DISubprogram(name: "sortscrvert", scope: !1, file: !1, line: 84, type: !3103, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{null, !3105, !3105}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!3106 = !DILocalVariable(name: "v1", arg: 1, scope: !3102, file: !1, line: 84, type: !3105)
!3107 = !DILocation(line: 84, column: 35, scope: !3102)
!3108 = !DILocalVariable(name: "v2", arg: 2, scope: !3102, file: !1, line: 84, type: !3105)
!3109 = !DILocation(line: 84, column: 49, scope: !3102)
!3110 = !DILocalVariable(name: "tmp", scope: !3102, file: !1, line: 86, type: !1108)
!3111 = !DILocation(line: 86, column: 11, scope: !3102)
!3112 = !DILocation(line: 88, column: 7, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 88, column: 6)
!3114 = !DILocation(line: 88, column: 6, scope: !3113)
!3115 = !DILocation(line: 88, column: 13, scope: !3113)
!3116 = !DILocation(line: 88, column: 12, scope: !3113)
!3117 = !DILocation(line: 88, column: 10, scope: !3113)
!3118 = !DILocation(line: 88, column: 6, scope: !3102)
!3119 = !DILocation(line: 89, column: 10, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 88, column: 17)
!3121 = !DILocation(line: 89, column: 9, scope: !3120)
!3122 = !DILocation(line: 89, column: 7, scope: !3120)
!3123 = !DILocation(line: 90, column: 10, scope: !3120)
!3124 = !DILocation(line: 90, column: 9, scope: !3120)
!3125 = !DILocation(line: 90, column: 4, scope: !3120)
!3126 = !DILocation(line: 90, column: 7, scope: !3120)
!3127 = !DILocation(line: 91, column: 9, scope: !3120)
!3128 = !DILocation(line: 91, column: 4, scope: !3120)
!3129 = !DILocation(line: 91, column: 7, scope: !3120)
!3130 = !DILocation(line: 92, column: 2, scope: !3120)
!3131 = !DILocation(line: 93, column: 1, scope: !3102)
!3132 = distinct !DISubprogram(name: "removedouble_scrverts", scope: !1, file: !1, line: 120, type: !3133, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{null, !372}
!3135 = !DILocalVariable(name: "sc", arg: 1, scope: !3132, file: !1, line: 120, type: !372)
!3136 = !DILocation(line: 120, column: 37, scope: !3132)
!3137 = !DILocalVariable(name: "v1", scope: !3132, file: !1, line: 122, type: !1108)
!3138 = !DILocation(line: 122, column: 11, scope: !3132)
!3139 = !DILocalVariable(name: "verg", scope: !3132, file: !1, line: 122, type: !1108)
!3140 = !DILocation(line: 122, column: 16, scope: !3132)
!3141 = !DILocalVariable(name: "se", scope: !3132, file: !1, line: 123, type: !3050)
!3142 = !DILocation(line: 123, column: 11, scope: !3132)
!3143 = !DILocalVariable(name: "sa", scope: !3132, file: !1, line: 124, type: !3041)
!3144 = !DILocation(line: 124, column: 11, scope: !3132)
!3145 = !DILocation(line: 126, column: 9, scope: !3132)
!3146 = !DILocation(line: 126, column: 13, scope: !3132)
!3147 = !DILocation(line: 126, column: 22, scope: !3132)
!3148 = !DILocation(line: 126, column: 7, scope: !3132)
!3149 = !DILocation(line: 127, column: 2, scope: !3132)
!3150 = !DILocation(line: 127, column: 9, scope: !3132)
!3151 = !DILocation(line: 128, column: 7, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !1, line: 128, column: 7)
!3153 = distinct !DILexicalBlock(scope: !3132, file: !1, line: 127, column: 15)
!3154 = !DILocation(line: 128, column: 13, scope: !3152)
!3155 = !DILocation(line: 128, column: 18, scope: !3152)
!3156 = !DILocation(line: 128, column: 7, scope: !3153)
!3157 = !DILocation(line: 129, column: 9, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3152, file: !1, line: 128, column: 27)
!3159 = !DILocation(line: 129, column: 15, scope: !3158)
!3160 = !DILocation(line: 129, column: 7, scope: !3158)
!3161 = !DILocation(line: 130, column: 4, scope: !3158)
!3162 = !DILocation(line: 130, column: 11, scope: !3158)
!3163 = !DILocation(line: 131, column: 9, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !1, line: 131, column: 9)
!3165 = distinct !DILexicalBlock(scope: !3158, file: !1, line: 130, column: 15)
!3166 = !DILocation(line: 131, column: 13, scope: !3164)
!3167 = !DILocation(line: 131, column: 18, scope: !3164)
!3168 = !DILocation(line: 131, column: 9, scope: !3165)
!3169 = !DILocation(line: 132, column: 10, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !1, line: 132, column: 10)
!3171 = distinct !DILexicalBlock(scope: !3164, file: !1, line: 131, column: 27)
!3172 = !DILocation(line: 132, column: 14, scope: !3170)
!3173 = !DILocation(line: 132, column: 18, scope: !3170)
!3174 = !DILocation(line: 132, column: 23, scope: !3170)
!3175 = !DILocation(line: 132, column: 29, scope: !3170)
!3176 = !DILocation(line: 132, column: 33, scope: !3170)
!3177 = !DILocation(line: 132, column: 20, scope: !3170)
!3178 = !DILocation(line: 132, column: 35, scope: !3170)
!3179 = !DILocation(line: 132, column: 38, scope: !3170)
!3180 = !DILocation(line: 132, column: 42, scope: !3170)
!3181 = !DILocation(line: 132, column: 46, scope: !3170)
!3182 = !DILocation(line: 132, column: 51, scope: !3170)
!3183 = !DILocation(line: 132, column: 57, scope: !3170)
!3184 = !DILocation(line: 132, column: 61, scope: !3170)
!3185 = !DILocation(line: 132, column: 48, scope: !3170)
!3186 = !DILocation(line: 132, column: 10, scope: !3171)
!3187 = !DILocation(line: 134, column: 18, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3170, file: !1, line: 132, column: 64)
!3189 = !DILocation(line: 134, column: 7, scope: !3188)
!3190 = !DILocation(line: 134, column: 11, scope: !3188)
!3191 = !DILocation(line: 134, column: 16, scope: !3188)
!3192 = !DILocation(line: 135, column: 6, scope: !3188)
!3193 = !DILocation(line: 136, column: 5, scope: !3171)
!3194 = !DILocation(line: 137, column: 10, scope: !3165)
!3195 = !DILocation(line: 137, column: 14, scope: !3165)
!3196 = !DILocation(line: 137, column: 8, scope: !3165)
!3197 = distinct !{!3197, !3161, !3198}
!3198 = !DILocation(line: 138, column: 4, scope: !3158)
!3199 = !DILocation(line: 139, column: 3, scope: !3158)
!3200 = !DILocation(line: 140, column: 10, scope: !3153)
!3201 = !DILocation(line: 140, column: 16, scope: !3153)
!3202 = !DILocation(line: 140, column: 8, scope: !3153)
!3203 = distinct !{!3203, !3149, !3204}
!3204 = !DILocation(line: 141, column: 2, scope: !3132)
!3205 = !DILocation(line: 144, column: 7, scope: !3132)
!3206 = !DILocation(line: 144, column: 11, scope: !3132)
!3207 = !DILocation(line: 144, column: 20, scope: !3132)
!3208 = !DILocation(line: 144, column: 5, scope: !3132)
!3209 = !DILocation(line: 145, column: 2, scope: !3132)
!3210 = !DILocation(line: 145, column: 9, scope: !3132)
!3211 = !DILocation(line: 146, column: 7, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 146, column: 7)
!3213 = distinct !DILexicalBlock(scope: !3132, file: !1, line: 145, column: 13)
!3214 = !DILocation(line: 146, column: 11, scope: !3212)
!3215 = !DILocation(line: 146, column: 15, scope: !3212)
!3216 = !DILocation(line: 146, column: 7, scope: !3213)
!3217 = !DILocation(line: 146, column: 30, scope: !3212)
!3218 = !DILocation(line: 146, column: 34, scope: !3212)
!3219 = !DILocation(line: 146, column: 38, scope: !3212)
!3220 = !DILocation(line: 146, column: 21, scope: !3212)
!3221 = !DILocation(line: 146, column: 25, scope: !3212)
!3222 = !DILocation(line: 146, column: 28, scope: !3212)
!3223 = !DILocation(line: 147, column: 7, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 147, column: 7)
!3225 = !DILocation(line: 147, column: 11, scope: !3224)
!3226 = !DILocation(line: 147, column: 15, scope: !3224)
!3227 = !DILocation(line: 147, column: 7, scope: !3213)
!3228 = !DILocation(line: 147, column: 30, scope: !3224)
!3229 = !DILocation(line: 147, column: 34, scope: !3224)
!3230 = !DILocation(line: 147, column: 38, scope: !3224)
!3231 = !DILocation(line: 147, column: 21, scope: !3224)
!3232 = !DILocation(line: 147, column: 25, scope: !3224)
!3233 = !DILocation(line: 147, column: 28, scope: !3224)
!3234 = !DILocation(line: 149, column: 17, scope: !3213)
!3235 = !DILocation(line: 149, column: 21, scope: !3213)
!3236 = !DILocation(line: 149, column: 28, scope: !3213)
!3237 = !DILocation(line: 149, column: 32, scope: !3213)
!3238 = !DILocation(line: 149, column: 3, scope: !3213)
!3239 = !DILocation(line: 150, column: 8, scope: !3213)
!3240 = !DILocation(line: 150, column: 12, scope: !3213)
!3241 = !DILocation(line: 150, column: 6, scope: !3213)
!3242 = distinct !{!3242, !3209, !3243}
!3243 = !DILocation(line: 151, column: 2, scope: !3132)
!3244 = !DILocation(line: 152, column: 7, scope: !3132)
!3245 = !DILocation(line: 152, column: 11, scope: !3132)
!3246 = !DILocation(line: 152, column: 20, scope: !3132)
!3247 = !DILocation(line: 152, column: 5, scope: !3132)
!3248 = !DILocation(line: 153, column: 2, scope: !3132)
!3249 = !DILocation(line: 153, column: 9, scope: !3132)
!3250 = !DILocation(line: 154, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 154, column: 7)
!3252 = distinct !DILexicalBlock(scope: !3132, file: !1, line: 153, column: 13)
!3253 = !DILocation(line: 154, column: 11, scope: !3251)
!3254 = !DILocation(line: 154, column: 15, scope: !3251)
!3255 = !DILocation(line: 154, column: 7, scope: !3252)
!3256 = !DILocation(line: 154, column: 30, scope: !3251)
!3257 = !DILocation(line: 154, column: 34, scope: !3251)
!3258 = !DILocation(line: 154, column: 38, scope: !3251)
!3259 = !DILocation(line: 154, column: 21, scope: !3251)
!3260 = !DILocation(line: 154, column: 25, scope: !3251)
!3261 = !DILocation(line: 154, column: 28, scope: !3251)
!3262 = !DILocation(line: 155, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 155, column: 7)
!3264 = !DILocation(line: 155, column: 11, scope: !3263)
!3265 = !DILocation(line: 155, column: 15, scope: !3263)
!3266 = !DILocation(line: 155, column: 7, scope: !3252)
!3267 = !DILocation(line: 155, column: 30, scope: !3263)
!3268 = !DILocation(line: 155, column: 34, scope: !3263)
!3269 = !DILocation(line: 155, column: 38, scope: !3263)
!3270 = !DILocation(line: 155, column: 21, scope: !3263)
!3271 = !DILocation(line: 155, column: 25, scope: !3263)
!3272 = !DILocation(line: 155, column: 28, scope: !3263)
!3273 = !DILocation(line: 156, column: 7, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 156, column: 7)
!3275 = !DILocation(line: 156, column: 11, scope: !3274)
!3276 = !DILocation(line: 156, column: 15, scope: !3274)
!3277 = !DILocation(line: 156, column: 7, scope: !3252)
!3278 = !DILocation(line: 156, column: 30, scope: !3274)
!3279 = !DILocation(line: 156, column: 34, scope: !3274)
!3280 = !DILocation(line: 156, column: 38, scope: !3274)
!3281 = !DILocation(line: 156, column: 21, scope: !3274)
!3282 = !DILocation(line: 156, column: 25, scope: !3274)
!3283 = !DILocation(line: 156, column: 28, scope: !3274)
!3284 = !DILocation(line: 157, column: 7, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 157, column: 7)
!3286 = !DILocation(line: 157, column: 11, scope: !3285)
!3287 = !DILocation(line: 157, column: 15, scope: !3285)
!3288 = !DILocation(line: 157, column: 7, scope: !3252)
!3289 = !DILocation(line: 157, column: 30, scope: !3285)
!3290 = !DILocation(line: 157, column: 34, scope: !3285)
!3291 = !DILocation(line: 157, column: 38, scope: !3285)
!3292 = !DILocation(line: 157, column: 21, scope: !3285)
!3293 = !DILocation(line: 157, column: 25, scope: !3285)
!3294 = !DILocation(line: 157, column: 28, scope: !3285)
!3295 = !DILocation(line: 158, column: 8, scope: !3252)
!3296 = !DILocation(line: 158, column: 12, scope: !3252)
!3297 = !DILocation(line: 158, column: 6, scope: !3252)
!3298 = distinct !{!3298, !3248, !3299}
!3299 = !DILocation(line: 159, column: 2, scope: !3132)
!3300 = !DILocation(line: 162, column: 9, scope: !3132)
!3301 = !DILocation(line: 162, column: 13, scope: !3132)
!3302 = !DILocation(line: 162, column: 22, scope: !3132)
!3303 = !DILocation(line: 162, column: 7, scope: !3132)
!3304 = !DILocation(line: 163, column: 2, scope: !3132)
!3305 = !DILocation(line: 163, column: 9, scope: !3132)
!3306 = !DILocation(line: 164, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3132, file: !1, line: 163, column: 15)
!3308 = !DILocation(line: 164, column: 14, scope: !3307)
!3309 = !DILocation(line: 164, column: 6, scope: !3307)
!3310 = !DILocation(line: 165, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3307, file: !1, line: 165, column: 7)
!3312 = !DILocation(line: 165, column: 13, scope: !3311)
!3313 = !DILocation(line: 165, column: 7, scope: !3307)
!3314 = !DILocation(line: 166, column: 17, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3311, file: !1, line: 165, column: 19)
!3316 = !DILocation(line: 166, column: 21, scope: !3315)
!3317 = !DILocation(line: 166, column: 31, scope: !3315)
!3318 = !DILocation(line: 166, column: 4, scope: !3315)
!3319 = !DILocation(line: 167, column: 4, scope: !3315)
!3320 = !DILocation(line: 167, column: 14, scope: !3315)
!3321 = !DILocation(line: 168, column: 3, scope: !3315)
!3322 = !DILocation(line: 169, column: 10, scope: !3307)
!3323 = !DILocation(line: 169, column: 8, scope: !3307)
!3324 = distinct !{!3324, !3304, !3325}
!3325 = !DILocation(line: 170, column: 2, scope: !3132)
!3326 = !DILocation(line: 172, column: 1, scope: !3132)
!3327 = distinct !DISubprogram(name: "removenotused_scrverts", scope: !1, file: !1, line: 174, type: !3133, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3328 = !DILocalVariable(name: "sc", arg: 1, scope: !3327, file: !1, line: 174, type: !372)
!3329 = !DILocation(line: 174, column: 38, scope: !3327)
!3330 = !DILocalVariable(name: "sv", scope: !3327, file: !1, line: 176, type: !1108)
!3331 = !DILocation(line: 176, column: 11, scope: !3327)
!3332 = !DILocalVariable(name: "svn", scope: !3327, file: !1, line: 176, type: !1108)
!3333 = !DILocation(line: 176, column: 16, scope: !3327)
!3334 = !DILocalVariable(name: "se", scope: !3327, file: !1, line: 177, type: !3050)
!3335 = !DILocation(line: 177, column: 11, scope: !3327)
!3336 = !DILocation(line: 181, column: 7, scope: !3327)
!3337 = !DILocation(line: 181, column: 11, scope: !3327)
!3338 = !DILocation(line: 181, column: 20, scope: !3327)
!3339 = !DILocation(line: 181, column: 5, scope: !3327)
!3340 = !DILocation(line: 182, column: 2, scope: !3327)
!3341 = !DILocation(line: 182, column: 9, scope: !3327)
!3342 = !DILocation(line: 183, column: 3, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 182, column: 13)
!3344 = !DILocation(line: 183, column: 7, scope: !3343)
!3345 = !DILocation(line: 183, column: 11, scope: !3343)
!3346 = !DILocation(line: 183, column: 16, scope: !3343)
!3347 = !DILocation(line: 184, column: 3, scope: !3343)
!3348 = !DILocation(line: 184, column: 7, scope: !3343)
!3349 = !DILocation(line: 184, column: 11, scope: !3343)
!3350 = !DILocation(line: 184, column: 16, scope: !3343)
!3351 = !DILocation(line: 185, column: 8, scope: !3343)
!3352 = !DILocation(line: 185, column: 12, scope: !3343)
!3353 = !DILocation(line: 185, column: 6, scope: !3343)
!3354 = distinct !{!3354, !3340, !3355}
!3355 = !DILocation(line: 186, column: 2, scope: !3327)
!3356 = !DILocation(line: 188, column: 7, scope: !3327)
!3357 = !DILocation(line: 188, column: 11, scope: !3327)
!3358 = !DILocation(line: 188, column: 20, scope: !3327)
!3359 = !DILocation(line: 188, column: 5, scope: !3327)
!3360 = !DILocation(line: 189, column: 2, scope: !3327)
!3361 = !DILocation(line: 189, column: 9, scope: !3327)
!3362 = !DILocation(line: 190, column: 9, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3327, file: !1, line: 189, column: 13)
!3364 = !DILocation(line: 190, column: 13, scope: !3363)
!3365 = !DILocation(line: 190, column: 7, scope: !3363)
!3366 = !DILocation(line: 191, column: 7, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3363, file: !1, line: 191, column: 7)
!3368 = !DILocation(line: 191, column: 11, scope: !3367)
!3369 = !DILocation(line: 191, column: 16, scope: !3367)
!3370 = !DILocation(line: 191, column: 7, scope: !3363)
!3371 = !DILocation(line: 192, column: 17, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 191, column: 22)
!3373 = !DILocation(line: 192, column: 21, scope: !3372)
!3374 = !DILocation(line: 192, column: 31, scope: !3372)
!3375 = !DILocation(line: 192, column: 4, scope: !3372)
!3376 = !DILocation(line: 193, column: 4, scope: !3372)
!3377 = !DILocation(line: 193, column: 14, scope: !3372)
!3378 = !DILocation(line: 194, column: 3, scope: !3372)
!3379 = !DILocation(line: 196, column: 4, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 195, column: 8)
!3381 = !DILocation(line: 196, column: 8, scope: !3380)
!3382 = !DILocation(line: 196, column: 13, scope: !3380)
!3383 = !DILocation(line: 198, column: 8, scope: !3363)
!3384 = !DILocation(line: 198, column: 6, scope: !3363)
!3385 = distinct !{!3385, !3360, !3386}
!3386 = !DILocation(line: 199, column: 2, scope: !3327)
!3387 = !DILocation(line: 200, column: 1, scope: !3327)
!3388 = distinct !DISubprogram(name: "removedouble_scredges", scope: !1, file: !1, line: 202, type: !3133, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3389 = !DILocalVariable(name: "sc", arg: 1, scope: !3388, file: !1, line: 202, type: !372)
!3390 = !DILocation(line: 202, column: 37, scope: !3388)
!3391 = !DILocalVariable(name: "verg", scope: !3388, file: !1, line: 204, type: !3050)
!3392 = !DILocation(line: 204, column: 11, scope: !3388)
!3393 = !DILocalVariable(name: "se", scope: !3388, file: !1, line: 204, type: !3050)
!3394 = !DILocation(line: 204, column: 18, scope: !3388)
!3395 = !DILocalVariable(name: "sn", scope: !3388, file: !1, line: 204, type: !3050)
!3396 = !DILocation(line: 204, column: 23, scope: !3388)
!3397 = !DILocation(line: 207, column: 9, scope: !3388)
!3398 = !DILocation(line: 207, column: 13, scope: !3388)
!3399 = !DILocation(line: 207, column: 22, scope: !3388)
!3400 = !DILocation(line: 207, column: 7, scope: !3388)
!3401 = !DILocation(line: 208, column: 2, scope: !3388)
!3402 = !DILocation(line: 208, column: 9, scope: !3388)
!3403 = !DILocation(line: 209, column: 8, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3388, file: !1, line: 208, column: 15)
!3405 = !DILocation(line: 209, column: 14, scope: !3404)
!3406 = !DILocation(line: 209, column: 6, scope: !3404)
!3407 = !DILocation(line: 210, column: 3, scope: !3404)
!3408 = !DILocation(line: 210, column: 10, scope: !3404)
!3409 = !DILocation(line: 211, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 210, column: 14)
!3411 = !DILocation(line: 211, column: 13, scope: !3410)
!3412 = !DILocation(line: 211, column: 7, scope: !3410)
!3413 = !DILocation(line: 212, column: 8, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3410, file: !1, line: 212, column: 8)
!3415 = !DILocation(line: 212, column: 14, scope: !3414)
!3416 = !DILocation(line: 212, column: 20, scope: !3414)
!3417 = !DILocation(line: 212, column: 24, scope: !3414)
!3418 = !DILocation(line: 212, column: 17, scope: !3414)
!3419 = !DILocation(line: 212, column: 27, scope: !3414)
!3420 = !DILocation(line: 212, column: 30, scope: !3414)
!3421 = !DILocation(line: 212, column: 36, scope: !3414)
!3422 = !DILocation(line: 212, column: 42, scope: !3414)
!3423 = !DILocation(line: 212, column: 46, scope: !3414)
!3424 = !DILocation(line: 212, column: 39, scope: !3414)
!3425 = !DILocation(line: 212, column: 8, scope: !3410)
!3426 = !DILocation(line: 213, column: 18, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3414, file: !1, line: 212, column: 50)
!3428 = !DILocation(line: 213, column: 22, scope: !3427)
!3429 = !DILocation(line: 213, column: 32, scope: !3427)
!3430 = !DILocation(line: 213, column: 5, scope: !3427)
!3431 = !DILocation(line: 214, column: 5, scope: !3427)
!3432 = !DILocation(line: 214, column: 15, scope: !3427)
!3433 = !DILocation(line: 215, column: 4, scope: !3427)
!3434 = !DILocation(line: 216, column: 9, scope: !3410)
!3435 = !DILocation(line: 216, column: 7, scope: !3410)
!3436 = distinct !{!3436, !3407, !3437}
!3437 = !DILocation(line: 217, column: 3, scope: !3404)
!3438 = !DILocation(line: 218, column: 10, scope: !3404)
!3439 = !DILocation(line: 218, column: 16, scope: !3404)
!3440 = !DILocation(line: 218, column: 8, scope: !3404)
!3441 = distinct !{!3441, !3401, !3442}
!3442 = !DILocation(line: 219, column: 2, scope: !3388)
!3443 = !DILocation(line: 220, column: 1, scope: !3388)
!3444 = distinct !DISubprogram(name: "removenotused_scredges", scope: !1, file: !1, line: 222, type: !3133, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3445 = !DILocalVariable(name: "sc", arg: 1, scope: !3444, file: !1, line: 222, type: !372)
!3446 = !DILocation(line: 222, column: 38, scope: !3444)
!3447 = !DILocalVariable(name: "se", scope: !3444, file: !1, line: 224, type: !3050)
!3448 = !DILocation(line: 224, column: 11, scope: !3444)
!3449 = !DILocalVariable(name: "sen", scope: !3444, file: !1, line: 224, type: !3050)
!3450 = !DILocation(line: 224, column: 16, scope: !3444)
!3451 = !DILocalVariable(name: "sa", scope: !3444, file: !1, line: 225, type: !3041)
!3452 = !DILocation(line: 225, column: 11, scope: !3444)
!3453 = !DILocalVariable(name: "a", scope: !3444, file: !1, line: 226, type: !119)
!3454 = !DILocation(line: 226, column: 6, scope: !3444)
!3455 = !DILocation(line: 229, column: 7, scope: !3444)
!3456 = !DILocation(line: 229, column: 11, scope: !3444)
!3457 = !DILocation(line: 229, column: 20, scope: !3444)
!3458 = !DILocation(line: 229, column: 5, scope: !3444)
!3459 = !DILocation(line: 230, column: 2, scope: !3444)
!3460 = !DILocation(line: 230, column: 9, scope: !3444)
!3461 = !DILocation(line: 231, column: 24, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3444, file: !1, line: 230, column: 13)
!3463 = !DILocation(line: 231, column: 28, scope: !3462)
!3464 = !DILocation(line: 231, column: 32, scope: !3462)
!3465 = !DILocation(line: 231, column: 36, scope: !3462)
!3466 = !DILocation(line: 231, column: 40, scope: !3462)
!3467 = !DILocation(line: 231, column: 8, scope: !3462)
!3468 = !DILocation(line: 231, column: 6, scope: !3462)
!3469 = !DILocation(line: 232, column: 7, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3462, file: !1, line: 232, column: 7)
!3471 = !DILocation(line: 232, column: 10, scope: !3470)
!3472 = !DILocation(line: 232, column: 7, scope: !3462)
!3473 = !DILocation(line: 232, column: 67, scope: !3470)
!3474 = !DILocation(line: 232, column: 19, scope: !3470)
!3475 = !DILocation(line: 233, column: 8, scope: !3470)
!3476 = !DILocation(line: 233, column: 12, scope: !3470)
!3477 = !DILocation(line: 233, column: 17, scope: !3470)
!3478 = !DILocation(line: 234, column: 24, scope: !3462)
!3479 = !DILocation(line: 234, column: 28, scope: !3462)
!3480 = !DILocation(line: 234, column: 32, scope: !3462)
!3481 = !DILocation(line: 234, column: 36, scope: !3462)
!3482 = !DILocation(line: 234, column: 40, scope: !3462)
!3483 = !DILocation(line: 234, column: 8, scope: !3462)
!3484 = !DILocation(line: 234, column: 6, scope: !3462)
!3485 = !DILocation(line: 235, column: 7, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3462, file: !1, line: 235, column: 7)
!3487 = !DILocation(line: 235, column: 10, scope: !3486)
!3488 = !DILocation(line: 235, column: 7, scope: !3462)
!3489 = !DILocation(line: 235, column: 67, scope: !3486)
!3490 = !DILocation(line: 235, column: 19, scope: !3486)
!3491 = !DILocation(line: 236, column: 8, scope: !3486)
!3492 = !DILocation(line: 236, column: 12, scope: !3486)
!3493 = !DILocation(line: 236, column: 17, scope: !3486)
!3494 = !DILocation(line: 237, column: 24, scope: !3462)
!3495 = !DILocation(line: 237, column: 28, scope: !3462)
!3496 = !DILocation(line: 237, column: 32, scope: !3462)
!3497 = !DILocation(line: 237, column: 36, scope: !3462)
!3498 = !DILocation(line: 237, column: 40, scope: !3462)
!3499 = !DILocation(line: 237, column: 8, scope: !3462)
!3500 = !DILocation(line: 237, column: 6, scope: !3462)
!3501 = !DILocation(line: 238, column: 7, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3462, file: !1, line: 238, column: 7)
!3503 = !DILocation(line: 238, column: 10, scope: !3502)
!3504 = !DILocation(line: 238, column: 7, scope: !3462)
!3505 = !DILocation(line: 238, column: 67, scope: !3502)
!3506 = !DILocation(line: 238, column: 19, scope: !3502)
!3507 = !DILocation(line: 239, column: 8, scope: !3502)
!3508 = !DILocation(line: 239, column: 12, scope: !3502)
!3509 = !DILocation(line: 239, column: 17, scope: !3502)
!3510 = !DILocation(line: 240, column: 24, scope: !3462)
!3511 = !DILocation(line: 240, column: 28, scope: !3462)
!3512 = !DILocation(line: 240, column: 32, scope: !3462)
!3513 = !DILocation(line: 240, column: 36, scope: !3462)
!3514 = !DILocation(line: 240, column: 40, scope: !3462)
!3515 = !DILocation(line: 240, column: 8, scope: !3462)
!3516 = !DILocation(line: 240, column: 6, scope: !3462)
!3517 = !DILocation(line: 241, column: 7, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3462, file: !1, line: 241, column: 7)
!3519 = !DILocation(line: 241, column: 10, scope: !3518)
!3520 = !DILocation(line: 241, column: 7, scope: !3462)
!3521 = !DILocation(line: 241, column: 67, scope: !3518)
!3522 = !DILocation(line: 241, column: 19, scope: !3518)
!3523 = !DILocation(line: 242, column: 8, scope: !3518)
!3524 = !DILocation(line: 242, column: 12, scope: !3518)
!3525 = !DILocation(line: 242, column: 17, scope: !3518)
!3526 = !DILocation(line: 243, column: 8, scope: !3462)
!3527 = !DILocation(line: 243, column: 12, scope: !3462)
!3528 = !DILocation(line: 243, column: 6, scope: !3462)
!3529 = !DILocation(line: 244, column: 4, scope: !3462)
!3530 = distinct !{!3530, !3459, !3531}
!3531 = !DILocation(line: 245, column: 2, scope: !3444)
!3532 = !DILocation(line: 246, column: 7, scope: !3444)
!3533 = !DILocation(line: 246, column: 11, scope: !3444)
!3534 = !DILocation(line: 246, column: 20, scope: !3444)
!3535 = !DILocation(line: 246, column: 5, scope: !3444)
!3536 = !DILocation(line: 247, column: 2, scope: !3444)
!3537 = !DILocation(line: 247, column: 9, scope: !3444)
!3538 = !DILocation(line: 248, column: 9, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3444, file: !1, line: 247, column: 13)
!3540 = !DILocation(line: 248, column: 13, scope: !3539)
!3541 = !DILocation(line: 248, column: 7, scope: !3539)
!3542 = !DILocation(line: 249, column: 7, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3539, file: !1, line: 249, column: 7)
!3544 = !DILocation(line: 249, column: 11, scope: !3543)
!3545 = !DILocation(line: 249, column: 16, scope: !3543)
!3546 = !DILocation(line: 249, column: 7, scope: !3539)
!3547 = !DILocation(line: 250, column: 17, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3543, file: !1, line: 249, column: 22)
!3549 = !DILocation(line: 250, column: 21, scope: !3548)
!3550 = !DILocation(line: 250, column: 31, scope: !3548)
!3551 = !DILocation(line: 250, column: 4, scope: !3548)
!3552 = !DILocation(line: 251, column: 4, scope: !3548)
!3553 = !DILocation(line: 251, column: 14, scope: !3548)
!3554 = !DILocation(line: 252, column: 3, scope: !3548)
!3555 = !DILocation(line: 254, column: 4, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3543, file: !1, line: 253, column: 8)
!3557 = !DILocation(line: 254, column: 8, scope: !3556)
!3558 = !DILocation(line: 254, column: 13, scope: !3556)
!3559 = !DILocation(line: 256, column: 8, scope: !3539)
!3560 = !DILocation(line: 256, column: 6, scope: !3539)
!3561 = distinct !{!3561, !3536, !3562}
!3562 = !DILocation(line: 257, column: 2, scope: !3444)
!3563 = !DILocation(line: 258, column: 1, scope: !3444)
!3564 = distinct !DISubprogram(name: "scredge_is_horizontal", scope: !1, file: !1, line: 260, type: !3565, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!2203, !3050}
!3567 = !DILocalVariable(name: "se", arg: 1, scope: !3564, file: !1, line: 260, type: !3050)
!3568 = !DILocation(line: 260, column: 37, scope: !3564)
!3569 = !DILocation(line: 262, column: 10, scope: !3564)
!3570 = !DILocation(line: 262, column: 14, scope: !3564)
!3571 = !DILocation(line: 262, column: 18, scope: !3564)
!3572 = !DILocation(line: 262, column: 22, scope: !3564)
!3573 = !DILocation(line: 262, column: 27, scope: !3564)
!3574 = !DILocation(line: 262, column: 31, scope: !3564)
!3575 = !DILocation(line: 262, column: 35, scope: !3564)
!3576 = !DILocation(line: 262, column: 39, scope: !3564)
!3577 = !DILocation(line: 262, column: 24, scope: !3564)
!3578 = !DILocation(line: 262, column: 9, scope: !3564)
!3579 = !DILocation(line: 262, column: 2, scope: !3564)
!3580 = distinct !DISubprogram(name: "screen_find_active_scredge", scope: !1, file: !1, line: 266, type: !3581, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!3050, !372, !3583, !3583, !3583, !3583}
!3583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!3584 = !DILocalVariable(name: "sc", arg: 1, scope: !3580, file: !1, line: 266, type: !372)
!3585 = !DILocation(line: 266, column: 46, scope: !3580)
!3586 = !DILocalVariable(name: "winsize_x", arg: 2, scope: !3580, file: !1, line: 267, type: !3583)
!3587 = !DILocation(line: 267, column: 47, scope: !3580)
!3588 = !DILocalVariable(name: "winsize_y", arg: 3, scope: !3580, file: !1, line: 267, type: !3583)
!3589 = !DILocation(line: 267, column: 68, scope: !3580)
!3590 = !DILocalVariable(name: "mx", arg: 4, scope: !3580, file: !1, line: 268, type: !3583)
!3591 = !DILocation(line: 268, column: 47, scope: !3580)
!3592 = !DILocalVariable(name: "my", arg: 5, scope: !3580, file: !1, line: 268, type: !3583)
!3593 = !DILocation(line: 268, column: 61, scope: !3580)
!3594 = !DILocalVariable(name: "se", scope: !3580, file: !1, line: 270, type: !3050)
!3595 = !DILocation(line: 270, column: 11, scope: !3580)
!3596 = !DILocalVariable(name: "safety", scope: !3580, file: !1, line: 271, type: !119)
!3597 = !DILocation(line: 271, column: 6, scope: !3580)
!3598 = !DILocation(line: 271, column: 17, scope: !3580)
!3599 = !DILocation(line: 271, column: 15, scope: !3580)
!3600 = !DILocation(line: 271, column: 29, scope: !3580)
!3601 = !DILocation(line: 273, column: 6, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3580, file: !1, line: 273, column: 6)
!3603 = !DILocation(line: 273, column: 13, scope: !3602)
!3604 = !DILocation(line: 273, column: 6, scope: !3580)
!3605 = !DILocation(line: 273, column: 25, scope: !3602)
!3606 = !DILocation(line: 273, column: 18, scope: !3602)
!3607 = !DILocation(line: 275, column: 12, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3580, file: !1, line: 275, column: 2)
!3609 = !DILocation(line: 275, column: 16, scope: !3608)
!3610 = !DILocation(line: 275, column: 25, scope: !3608)
!3611 = !DILocation(line: 275, column: 10, scope: !3608)
!3612 = !DILocation(line: 275, column: 7, scope: !3608)
!3613 = !DILocation(line: 275, column: 32, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !1, line: 275, column: 2)
!3615 = !DILocation(line: 275, column: 2, scope: !3608)
!3616 = !DILocation(line: 276, column: 29, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !1, line: 276, column: 7)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !1, line: 275, column: 51)
!3619 = !DILocation(line: 276, column: 7, scope: !3617)
!3620 = !DILocation(line: 276, column: 7, scope: !3618)
!3621 = !DILocation(line: 277, column: 8, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 277, column: 8)
!3623 = distinct !DILexicalBlock(scope: !3617, file: !1, line: 276, column: 34)
!3624 = !DILocation(line: 277, column: 12, scope: !3622)
!3625 = !DILocation(line: 277, column: 16, scope: !3622)
!3626 = !DILocation(line: 277, column: 20, scope: !3622)
!3627 = !DILocation(line: 277, column: 22, scope: !3622)
!3628 = !DILocation(line: 277, column: 26, scope: !3622)
!3629 = !DILocation(line: 277, column: 29, scope: !3622)
!3630 = !DILocation(line: 277, column: 33, scope: !3622)
!3631 = !DILocation(line: 277, column: 37, scope: !3622)
!3632 = !DILocation(line: 277, column: 41, scope: !3622)
!3633 = !DILocation(line: 277, column: 45, scope: !3622)
!3634 = !DILocation(line: 277, column: 55, scope: !3622)
!3635 = !DILocation(line: 277, column: 43, scope: !3622)
!3636 = !DILocation(line: 277, column: 8, scope: !3623)
!3637 = !DILocalVariable(name: "min", scope: !3638, file: !1, line: 278, type: !410)
!3638 = distinct !DILexicalBlock(scope: !3622, file: !1, line: 277, column: 60)
!3639 = !DILocation(line: 278, column: 11, scope: !3638)
!3640 = !DILocalVariable(name: "max", scope: !3638, file: !1, line: 278, type: !410)
!3641 = !DILocation(line: 278, column: 16, scope: !3638)
!3642 = !DILocation(line: 279, column: 11, scope: !3638)
!3643 = !DILocation(line: 279, column: 9, scope: !3638)
!3644 = !DILocation(line: 280, column: 11, scope: !3638)
!3645 = !DILocation(line: 280, column: 9, scope: !3638)
!3646 = !DILocation(line: 282, column: 13, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3638, file: !1, line: 282, column: 9)
!3648 = !DILocation(line: 282, column: 18, scope: !3647)
!3649 = !DILocation(line: 282, column: 22, scope: !3647)
!3650 = !DILocation(line: 282, column: 26, scope: !3647)
!3651 = !DILocation(line: 282, column: 30, scope: !3647)
!3652 = !DILocation(line: 282, column: 16, scope: !3647)
!3653 = !DILocation(line: 282, column: 9, scope: !3647)
!3654 = !DILocation(line: 282, column: 36, scope: !3647)
!3655 = !DILocation(line: 282, column: 33, scope: !3647)
!3656 = !DILocation(line: 282, column: 43, scope: !3647)
!3657 = !DILocation(line: 282, column: 46, scope: !3647)
!3658 = !DILocation(line: 282, column: 52, scope: !3647)
!3659 = !DILocation(line: 282, column: 49, scope: !3647)
!3660 = !DILocation(line: 282, column: 56, scope: !3647)
!3661 = !DILocation(line: 282, column: 59, scope: !3647)
!3662 = !DILocation(line: 282, column: 65, scope: !3647)
!3663 = !DILocation(line: 282, column: 62, scope: !3647)
!3664 = !DILocation(line: 282, column: 9, scope: !3638)
!3665 = !DILocation(line: 283, column: 13, scope: !3647)
!3666 = !DILocation(line: 283, column: 6, scope: !3647)
!3667 = !DILocation(line: 284, column: 4, scope: !3638)
!3668 = !DILocation(line: 285, column: 3, scope: !3623)
!3669 = !DILocation(line: 287, column: 8, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 287, column: 8)
!3671 = distinct !DILexicalBlock(scope: !3617, file: !1, line: 286, column: 8)
!3672 = !DILocation(line: 287, column: 12, scope: !3670)
!3673 = !DILocation(line: 287, column: 16, scope: !3670)
!3674 = !DILocation(line: 287, column: 20, scope: !3670)
!3675 = !DILocation(line: 287, column: 22, scope: !3670)
!3676 = !DILocation(line: 287, column: 26, scope: !3670)
!3677 = !DILocation(line: 287, column: 29, scope: !3670)
!3678 = !DILocation(line: 287, column: 33, scope: !3670)
!3679 = !DILocation(line: 287, column: 37, scope: !3670)
!3680 = !DILocation(line: 287, column: 41, scope: !3670)
!3681 = !DILocation(line: 287, column: 45, scope: !3670)
!3682 = !DILocation(line: 287, column: 55, scope: !3670)
!3683 = !DILocation(line: 287, column: 43, scope: !3670)
!3684 = !DILocation(line: 287, column: 8, scope: !3671)
!3685 = !DILocalVariable(name: "min", scope: !3686, file: !1, line: 288, type: !410)
!3686 = distinct !DILexicalBlock(scope: !3670, file: !1, line: 287, column: 60)
!3687 = !DILocation(line: 288, column: 11, scope: !3686)
!3688 = !DILocalVariable(name: "max", scope: !3686, file: !1, line: 288, type: !410)
!3689 = !DILocation(line: 288, column: 16, scope: !3686)
!3690 = !DILocation(line: 289, column: 11, scope: !3686)
!3691 = !DILocation(line: 289, column: 9, scope: !3686)
!3692 = !DILocation(line: 290, column: 11, scope: !3686)
!3693 = !DILocation(line: 290, column: 9, scope: !3686)
!3694 = !DILocation(line: 292, column: 13, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3686, file: !1, line: 292, column: 9)
!3696 = !DILocation(line: 292, column: 18, scope: !3695)
!3697 = !DILocation(line: 292, column: 22, scope: !3695)
!3698 = !DILocation(line: 292, column: 26, scope: !3695)
!3699 = !DILocation(line: 292, column: 30, scope: !3695)
!3700 = !DILocation(line: 292, column: 16, scope: !3695)
!3701 = !DILocation(line: 292, column: 9, scope: !3695)
!3702 = !DILocation(line: 292, column: 36, scope: !3695)
!3703 = !DILocation(line: 292, column: 33, scope: !3695)
!3704 = !DILocation(line: 292, column: 43, scope: !3695)
!3705 = !DILocation(line: 292, column: 46, scope: !3695)
!3706 = !DILocation(line: 292, column: 52, scope: !3695)
!3707 = !DILocation(line: 292, column: 49, scope: !3695)
!3708 = !DILocation(line: 292, column: 56, scope: !3695)
!3709 = !DILocation(line: 292, column: 59, scope: !3695)
!3710 = !DILocation(line: 292, column: 65, scope: !3695)
!3711 = !DILocation(line: 292, column: 62, scope: !3695)
!3712 = !DILocation(line: 292, column: 9, scope: !3686)
!3713 = !DILocation(line: 293, column: 13, scope: !3695)
!3714 = !DILocation(line: 293, column: 6, scope: !3695)
!3715 = !DILocation(line: 294, column: 4, scope: !3686)
!3716 = !DILocation(line: 296, column: 2, scope: !3618)
!3717 = !DILocation(line: 275, column: 41, scope: !3614)
!3718 = !DILocation(line: 275, column: 45, scope: !3614)
!3719 = !DILocation(line: 275, column: 39, scope: !3614)
!3720 = !DILocation(line: 275, column: 2, scope: !3614)
!3721 = distinct !{!3721, !3615, !3722}
!3722 = !DILocation(line: 296, column: 2, scope: !3608)
!3723 = !DILocation(line: 298, column: 2, scope: !3580)
!3724 = !DILocation(line: 299, column: 1, scope: !3580)
!3725 = distinct !DISubprogram(name: "area_split", scope: !1, file: !1, line: 369, type: !3726, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!3041, !372, !3041, !397, !474, !119}
!3728 = !DILocalVariable(name: "sc", arg: 1, scope: !3725, file: !1, line: 369, type: !372)
!3729 = !DILocation(line: 369, column: 30, scope: !3725)
!3730 = !DILocalVariable(name: "sa", arg: 2, scope: !3725, file: !1, line: 369, type: !3041)
!3731 = !DILocation(line: 369, column: 43, scope: !3725)
!3732 = !DILocalVariable(name: "dir", arg: 3, scope: !3725, file: !1, line: 369, type: !397)
!3733 = !DILocation(line: 369, column: 52, scope: !3725)
!3734 = !DILocalVariable(name: "fac", arg: 4, scope: !3725, file: !1, line: 369, type: !474)
!3735 = !DILocation(line: 369, column: 63, scope: !3725)
!3736 = !DILocalVariable(name: "merge", arg: 5, scope: !3725, file: !1, line: 369, type: !119)
!3737 = !DILocation(line: 369, column: 72, scope: !3725)
!3738 = !DILocalVariable(name: "newa", scope: !3725, file: !1, line: 371, type: !3041)
!3739 = !DILocation(line: 371, column: 11, scope: !3725)
!3740 = !DILocalVariable(name: "sv1", scope: !3725, file: !1, line: 372, type: !1108)
!3741 = !DILocation(line: 372, column: 11, scope: !3725)
!3742 = !DILocalVariable(name: "sv2", scope: !3725, file: !1, line: 372, type: !1108)
!3743 = !DILocation(line: 372, column: 17, scope: !3725)
!3744 = !DILocalVariable(name: "split", scope: !3725, file: !1, line: 373, type: !410)
!3745 = !DILocation(line: 373, column: 8, scope: !3725)
!3746 = !DILocation(line: 375, column: 6, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3725, file: !1, line: 375, column: 6)
!3748 = !DILocation(line: 375, column: 9, scope: !3747)
!3749 = !DILocation(line: 375, column: 6, scope: !3725)
!3750 = !DILocation(line: 375, column: 18, scope: !3747)
!3751 = !DILocation(line: 377, column: 25, scope: !3725)
!3752 = !DILocation(line: 377, column: 29, scope: !3725)
!3753 = !DILocation(line: 377, column: 34, scope: !3725)
!3754 = !DILocation(line: 377, column: 10, scope: !3725)
!3755 = !DILocation(line: 377, column: 8, scope: !3725)
!3756 = !DILocation(line: 378, column: 6, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3725, file: !1, line: 378, column: 6)
!3758 = !DILocation(line: 378, column: 12, scope: !3757)
!3759 = !DILocation(line: 378, column: 6, scope: !3725)
!3760 = !DILocation(line: 378, column: 18, scope: !3757)
!3761 = !DILocation(line: 384, column: 6, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3725, file: !1, line: 384, column: 6)
!3763 = !DILocation(line: 384, column: 10, scope: !3762)
!3764 = !DILocation(line: 384, column: 6, scope: !3725)
!3765 = !DILocation(line: 386, column: 24, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 384, column: 18)
!3767 = !DILocation(line: 386, column: 28, scope: !3766)
!3768 = !DILocation(line: 386, column: 32, scope: !3766)
!3769 = !DILocation(line: 386, column: 36, scope: !3766)
!3770 = !DILocation(line: 386, column: 40, scope: !3766)
!3771 = !DILocation(line: 386, column: 43, scope: !3766)
!3772 = !DILocation(line: 386, column: 9, scope: !3766)
!3773 = !DILocation(line: 386, column: 7, scope: !3766)
!3774 = !DILocation(line: 387, column: 24, scope: !3766)
!3775 = !DILocation(line: 387, column: 28, scope: !3766)
!3776 = !DILocation(line: 387, column: 32, scope: !3766)
!3777 = !DILocation(line: 387, column: 36, scope: !3766)
!3778 = !DILocation(line: 387, column: 40, scope: !3766)
!3779 = !DILocation(line: 387, column: 43, scope: !3766)
!3780 = !DILocation(line: 387, column: 9, scope: !3766)
!3781 = !DILocation(line: 387, column: 7, scope: !3766)
!3782 = !DILocation(line: 390, column: 18, scope: !3766)
!3783 = !DILocation(line: 390, column: 22, scope: !3766)
!3784 = !DILocation(line: 390, column: 26, scope: !3766)
!3785 = !DILocation(line: 390, column: 30, scope: !3766)
!3786 = !DILocation(line: 390, column: 3, scope: !3766)
!3787 = !DILocation(line: 391, column: 18, scope: !3766)
!3788 = !DILocation(line: 391, column: 22, scope: !3766)
!3789 = !DILocation(line: 391, column: 27, scope: !3766)
!3790 = !DILocation(line: 391, column: 31, scope: !3766)
!3791 = !DILocation(line: 391, column: 3, scope: !3766)
!3792 = !DILocation(line: 392, column: 18, scope: !3766)
!3793 = !DILocation(line: 392, column: 22, scope: !3766)
!3794 = !DILocation(line: 392, column: 26, scope: !3766)
!3795 = !DILocation(line: 392, column: 30, scope: !3766)
!3796 = !DILocation(line: 392, column: 3, scope: !3766)
!3797 = !DILocation(line: 393, column: 18, scope: !3766)
!3798 = !DILocation(line: 393, column: 22, scope: !3766)
!3799 = !DILocation(line: 393, column: 27, scope: !3766)
!3800 = !DILocation(line: 393, column: 31, scope: !3766)
!3801 = !DILocation(line: 393, column: 3, scope: !3766)
!3802 = !DILocation(line: 394, column: 18, scope: !3766)
!3803 = !DILocation(line: 394, column: 22, scope: !3766)
!3804 = !DILocation(line: 394, column: 27, scope: !3766)
!3805 = !DILocation(line: 394, column: 3, scope: !3766)
!3806 = !DILocation(line: 396, column: 7, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3766, file: !1, line: 396, column: 7)
!3808 = !DILocation(line: 396, column: 11, scope: !3807)
!3809 = !DILocation(line: 396, column: 7, scope: !3766)
!3810 = !DILocation(line: 398, column: 26, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3807, file: !1, line: 396, column: 19)
!3812 = !DILocation(line: 398, column: 30, scope: !3811)
!3813 = !DILocation(line: 398, column: 35, scope: !3811)
!3814 = !DILocation(line: 398, column: 39, scope: !3811)
!3815 = !DILocation(line: 398, column: 43, scope: !3811)
!3816 = !DILocation(line: 398, column: 47, scope: !3811)
!3817 = !DILocation(line: 398, column: 51, scope: !3811)
!3818 = !DILocation(line: 398, column: 56, scope: !3811)
!3819 = !DILocation(line: 398, column: 60, scope: !3811)
!3820 = !DILocation(line: 398, column: 72, scope: !3811)
!3821 = !DILocation(line: 398, column: 76, scope: !3811)
!3822 = !DILocation(line: 398, column: 11, scope: !3811)
!3823 = !DILocation(line: 398, column: 9, scope: !3811)
!3824 = !DILocation(line: 401, column: 13, scope: !3811)
!3825 = !DILocation(line: 401, column: 4, scope: !3811)
!3826 = !DILocation(line: 401, column: 8, scope: !3811)
!3827 = !DILocation(line: 401, column: 11, scope: !3811)
!3828 = !DILocation(line: 402, column: 13, scope: !3811)
!3829 = !DILocation(line: 402, column: 4, scope: !3811)
!3830 = !DILocation(line: 402, column: 8, scope: !3811)
!3831 = !DILocation(line: 402, column: 11, scope: !3811)
!3832 = !DILocation(line: 403, column: 3, scope: !3811)
!3833 = !DILocation(line: 406, column: 26, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3807, file: !1, line: 404, column: 8)
!3835 = !DILocation(line: 406, column: 30, scope: !3834)
!3836 = !DILocation(line: 406, column: 34, scope: !3834)
!3837 = !DILocation(line: 406, column: 38, scope: !3834)
!3838 = !DILocation(line: 406, column: 43, scope: !3834)
!3839 = !DILocation(line: 406, column: 48, scope: !3834)
!3840 = !DILocation(line: 406, column: 52, scope: !3834)
!3841 = !DILocation(line: 406, column: 56, scope: !3834)
!3842 = !DILocation(line: 406, column: 60, scope: !3834)
!3843 = !DILocation(line: 406, column: 72, scope: !3834)
!3844 = !DILocation(line: 406, column: 76, scope: !3834)
!3845 = !DILocation(line: 406, column: 11, scope: !3834)
!3846 = !DILocation(line: 406, column: 9, scope: !3834)
!3847 = !DILocation(line: 409, column: 13, scope: !3834)
!3848 = !DILocation(line: 409, column: 4, scope: !3834)
!3849 = !DILocation(line: 409, column: 8, scope: !3834)
!3850 = !DILocation(line: 409, column: 11, scope: !3834)
!3851 = !DILocation(line: 410, column: 13, scope: !3834)
!3852 = !DILocation(line: 410, column: 4, scope: !3834)
!3853 = !DILocation(line: 410, column: 8, scope: !3834)
!3854 = !DILocation(line: 410, column: 11, scope: !3834)
!3855 = !DILocation(line: 413, column: 21, scope: !3766)
!3856 = !DILocation(line: 413, column: 27, scope: !3766)
!3857 = !DILocation(line: 413, column: 3, scope: !3766)
!3858 = !DILocation(line: 415, column: 2, scope: !3766)
!3859 = !DILocation(line: 418, column: 24, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 416, column: 7)
!3861 = !DILocation(line: 418, column: 28, scope: !3860)
!3862 = !DILocation(line: 418, column: 35, scope: !3860)
!3863 = !DILocation(line: 418, column: 39, scope: !3860)
!3864 = !DILocation(line: 418, column: 43, scope: !3860)
!3865 = !DILocation(line: 418, column: 47, scope: !3860)
!3866 = !DILocation(line: 418, column: 9, scope: !3860)
!3867 = !DILocation(line: 418, column: 7, scope: !3860)
!3868 = !DILocation(line: 419, column: 24, scope: !3860)
!3869 = !DILocation(line: 419, column: 28, scope: !3860)
!3870 = !DILocation(line: 419, column: 35, scope: !3860)
!3871 = !DILocation(line: 419, column: 39, scope: !3860)
!3872 = !DILocation(line: 419, column: 43, scope: !3860)
!3873 = !DILocation(line: 419, column: 47, scope: !3860)
!3874 = !DILocation(line: 419, column: 9, scope: !3860)
!3875 = !DILocation(line: 419, column: 7, scope: !3860)
!3876 = !DILocation(line: 422, column: 18, scope: !3860)
!3877 = !DILocation(line: 422, column: 22, scope: !3860)
!3878 = !DILocation(line: 422, column: 26, scope: !3860)
!3879 = !DILocation(line: 422, column: 30, scope: !3860)
!3880 = !DILocation(line: 422, column: 3, scope: !3860)
!3881 = !DILocation(line: 423, column: 18, scope: !3860)
!3882 = !DILocation(line: 423, column: 22, scope: !3860)
!3883 = !DILocation(line: 423, column: 27, scope: !3860)
!3884 = !DILocation(line: 423, column: 31, scope: !3860)
!3885 = !DILocation(line: 423, column: 3, scope: !3860)
!3886 = !DILocation(line: 424, column: 18, scope: !3860)
!3887 = !DILocation(line: 424, column: 22, scope: !3860)
!3888 = !DILocation(line: 424, column: 26, scope: !3860)
!3889 = !DILocation(line: 424, column: 30, scope: !3860)
!3890 = !DILocation(line: 424, column: 3, scope: !3860)
!3891 = !DILocation(line: 425, column: 18, scope: !3860)
!3892 = !DILocation(line: 425, column: 22, scope: !3860)
!3893 = !DILocation(line: 425, column: 27, scope: !3860)
!3894 = !DILocation(line: 425, column: 31, scope: !3860)
!3895 = !DILocation(line: 425, column: 3, scope: !3860)
!3896 = !DILocation(line: 426, column: 18, scope: !3860)
!3897 = !DILocation(line: 426, column: 22, scope: !3860)
!3898 = !DILocation(line: 426, column: 27, scope: !3860)
!3899 = !DILocation(line: 426, column: 3, scope: !3860)
!3900 = !DILocation(line: 428, column: 7, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3860, file: !1, line: 428, column: 7)
!3902 = !DILocation(line: 428, column: 11, scope: !3901)
!3903 = !DILocation(line: 428, column: 7, scope: !3860)
!3904 = !DILocation(line: 430, column: 26, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3901, file: !1, line: 428, column: 19)
!3906 = !DILocation(line: 430, column: 30, scope: !3905)
!3907 = !DILocation(line: 430, column: 35, scope: !3905)
!3908 = !DILocation(line: 430, column: 40, scope: !3905)
!3909 = !DILocation(line: 430, column: 44, scope: !3905)
!3910 = !DILocation(line: 430, column: 48, scope: !3905)
!3911 = !DILocation(line: 430, column: 52, scope: !3905)
!3912 = !DILocation(line: 430, column: 56, scope: !3905)
!3913 = !DILocation(line: 430, column: 60, scope: !3905)
!3914 = !DILocation(line: 430, column: 72, scope: !3905)
!3915 = !DILocation(line: 430, column: 76, scope: !3905)
!3916 = !DILocation(line: 430, column: 11, scope: !3905)
!3917 = !DILocation(line: 430, column: 9, scope: !3905)
!3918 = !DILocation(line: 433, column: 13, scope: !3905)
!3919 = !DILocation(line: 433, column: 4, scope: !3905)
!3920 = !DILocation(line: 433, column: 8, scope: !3905)
!3921 = !DILocation(line: 433, column: 11, scope: !3905)
!3922 = !DILocation(line: 434, column: 13, scope: !3905)
!3923 = !DILocation(line: 434, column: 4, scope: !3905)
!3924 = !DILocation(line: 434, column: 8, scope: !3905)
!3925 = !DILocation(line: 434, column: 11, scope: !3905)
!3926 = !DILocation(line: 435, column: 3, scope: !3905)
!3927 = !DILocation(line: 438, column: 26, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3901, file: !1, line: 436, column: 8)
!3929 = !DILocation(line: 438, column: 30, scope: !3928)
!3930 = !DILocation(line: 438, column: 34, scope: !3928)
!3931 = !DILocation(line: 438, column: 38, scope: !3928)
!3932 = !DILocation(line: 438, column: 42, scope: !3928)
!3933 = !DILocation(line: 438, column: 46, scope: !3928)
!3934 = !DILocation(line: 438, column: 51, scope: !3928)
!3935 = !DILocation(line: 438, column: 56, scope: !3928)
!3936 = !DILocation(line: 438, column: 60, scope: !3928)
!3937 = !DILocation(line: 438, column: 72, scope: !3928)
!3938 = !DILocation(line: 438, column: 76, scope: !3928)
!3939 = !DILocation(line: 438, column: 11, scope: !3928)
!3940 = !DILocation(line: 438, column: 9, scope: !3928)
!3941 = !DILocation(line: 441, column: 13, scope: !3928)
!3942 = !DILocation(line: 441, column: 4, scope: !3928)
!3943 = !DILocation(line: 441, column: 8, scope: !3928)
!3944 = !DILocation(line: 441, column: 11, scope: !3928)
!3945 = !DILocation(line: 442, column: 13, scope: !3928)
!3946 = !DILocation(line: 442, column: 4, scope: !3928)
!3947 = !DILocation(line: 442, column: 8, scope: !3928)
!3948 = !DILocation(line: 442, column: 11, scope: !3928)
!3949 = !DILocation(line: 445, column: 21, scope: !3860)
!3950 = !DILocation(line: 445, column: 27, scope: !3860)
!3951 = !DILocation(line: 445, column: 3, scope: !3860)
!3952 = !DILocation(line: 449, column: 6, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3725, file: !1, line: 449, column: 6)
!3954 = !DILocation(line: 449, column: 6, scope: !3725)
!3955 = !DILocation(line: 450, column: 25, scope: !3953)
!3956 = !DILocation(line: 450, column: 3, scope: !3953)
!3957 = !DILocation(line: 451, column: 24, scope: !3725)
!3958 = !DILocation(line: 451, column: 2, scope: !3725)
!3959 = !DILocation(line: 452, column: 25, scope: !3725)
!3960 = !DILocation(line: 452, column: 2, scope: !3725)
!3961 = !DILocation(line: 454, column: 9, scope: !3725)
!3962 = !DILocation(line: 454, column: 2, scope: !3725)
!3963 = !DILocation(line: 455, column: 1, scope: !3725)
!3964 = distinct !DISubprogram(name: "testsplitpoint", scope: !1, file: !1, line: 332, type: !3965, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!410, !3041, !397, !474}
!3967 = !DILocalVariable(name: "sa", arg: 1, scope: !3964, file: !1, line: 332, type: !3041)
!3968 = !DILocation(line: 332, column: 38, scope: !3964)
!3969 = !DILocalVariable(name: "dir", arg: 2, scope: !3964, file: !1, line: 332, type: !397)
!3970 = !DILocation(line: 332, column: 47, scope: !3964)
!3971 = !DILocalVariable(name: "fac", arg: 3, scope: !3964, file: !1, line: 332, type: !474)
!3972 = !DILocation(line: 332, column: 58, scope: !3964)
!3973 = !DILocalVariable(name: "x", scope: !3964, file: !1, line: 334, type: !410)
!3974 = !DILocation(line: 334, column: 8, scope: !3964)
!3975 = !DILocalVariable(name: "y", scope: !3964, file: !1, line: 334, type: !410)
!3976 = !DILocation(line: 334, column: 11, scope: !3964)
!3977 = !DILocalVariable(name: "area_min_x", scope: !3964, file: !1, line: 335, type: !3978)
!3978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!3979 = !DILocation(line: 335, column: 14, scope: !3964)
!3980 = !DILocalVariable(name: "area_min_y", scope: !3964, file: !1, line: 336, type: !3978)
!3981 = !DILocation(line: 336, column: 14, scope: !3964)
!3982 = !DILocation(line: 336, column: 27, scope: !3964)
!3983 = !DILocation(line: 339, column: 6, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3964, file: !1, line: 339, column: 6)
!3985 = !DILocation(line: 339, column: 10, scope: !3984)
!3986 = !DILocation(line: 339, column: 17, scope: !3984)
!3987 = !DILocation(line: 339, column: 21, scope: !3984)
!3988 = !DILocation(line: 339, column: 25, scope: !3984)
!3989 = !DILocation(line: 339, column: 29, scope: !3984)
!3990 = !DILocation(line: 339, column: 33, scope: !3984)
!3991 = !DILocation(line: 339, column: 37, scope: !3984)
!3992 = !DILocation(line: 339, column: 41, scope: !3984)
!3993 = !DILocation(line: 339, column: 45, scope: !3984)
!3994 = !DILocation(line: 339, column: 49, scope: !3984)
!3995 = !DILocation(line: 339, column: 35, scope: !3984)
!3996 = !DILocation(line: 339, column: 51, scope: !3984)
!3997 = !DILocation(line: 339, column: 6, scope: !3964)
!3998 = !DILocation(line: 339, column: 71, scope: !3984)
!3999 = !DILocation(line: 340, column: 6, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3964, file: !1, line: 340, column: 6)
!4001 = !DILocation(line: 340, column: 10, scope: !4000)
!4002 = !DILocation(line: 340, column: 17, scope: !4000)
!4003 = !DILocation(line: 340, column: 21, scope: !4000)
!4004 = !DILocation(line: 340, column: 25, scope: !4000)
!4005 = !DILocation(line: 340, column: 29, scope: !4000)
!4006 = !DILocation(line: 340, column: 33, scope: !4000)
!4007 = !DILocation(line: 340, column: 37, scope: !4000)
!4008 = !DILocation(line: 340, column: 41, scope: !4000)
!4009 = !DILocation(line: 340, column: 45, scope: !4000)
!4010 = !DILocation(line: 340, column: 49, scope: !4000)
!4011 = !DILocation(line: 340, column: 35, scope: !4000)
!4012 = !DILocation(line: 340, column: 58, scope: !4000)
!4013 = !DILocation(line: 340, column: 56, scope: !4000)
!4014 = !DILocation(line: 340, column: 51, scope: !4000)
!4015 = !DILocation(line: 340, column: 6, scope: !3964)
!4016 = !DILocation(line: 340, column: 71, scope: !4000)
!4017 = !DILocation(line: 343, column: 2, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !1, line: 343, column: 2)
!4019 = distinct !DILexicalBlock(scope: !3964, file: !1, line: 343, column: 2)
!4020 = !DILocation(line: 343, column: 2, scope: !4019)
!4021 = !DILocation(line: 343, column: 2, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4018, file: !1, line: 343, column: 2)
!4023 = !DILocation(line: 345, column: 6, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3964, file: !1, line: 345, column: 6)
!4025 = !DILocation(line: 345, column: 10, scope: !4024)
!4026 = !DILocation(line: 345, column: 6, scope: !3964)
!4027 = !DILocation(line: 346, column: 7, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4024, file: !1, line: 345, column: 18)
!4029 = !DILocation(line: 346, column: 11, scope: !4028)
!4030 = !DILocation(line: 346, column: 15, scope: !4028)
!4031 = !DILocation(line: 346, column: 19, scope: !4028)
!4032 = !DILocation(line: 346, column: 23, scope: !4028)
!4033 = !DILocation(line: 346, column: 30, scope: !4028)
!4034 = !DILocation(line: 346, column: 34, scope: !4028)
!4035 = !DILocation(line: 346, column: 38, scope: !4028)
!4036 = !DILocation(line: 346, column: 42, scope: !4028)
!4037 = !DILocation(line: 346, column: 46, scope: !4028)
!4038 = !DILocation(line: 346, column: 50, scope: !4028)
!4039 = !DILocation(line: 346, column: 54, scope: !4028)
!4040 = !DILocation(line: 346, column: 58, scope: !4028)
!4041 = !DILocation(line: 346, column: 44, scope: !4028)
!4042 = !DILocation(line: 346, column: 29, scope: !4028)
!4043 = !DILocation(line: 346, column: 27, scope: !4028)
!4044 = !DILocation(line: 346, column: 21, scope: !4028)
!4045 = !DILocation(line: 346, column: 5, scope: !4028)
!4046 = !DILocation(line: 348, column: 7, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4028, file: !1, line: 348, column: 7)
!4048 = !DILocation(line: 348, column: 11, scope: !4047)
!4049 = !DILocation(line: 348, column: 15, scope: !4047)
!4050 = !DILocation(line: 348, column: 19, scope: !4047)
!4051 = !DILocation(line: 348, column: 23, scope: !4047)
!4052 = !DILocation(line: 348, column: 9, scope: !4047)
!4053 = !DILocation(line: 348, column: 27, scope: !4047)
!4054 = !DILocation(line: 348, column: 25, scope: !4047)
!4055 = !DILocation(line: 348, column: 7, scope: !4028)
!4056 = !DILocation(line: 349, column: 8, scope: !4047)
!4057 = !DILocation(line: 349, column: 12, scope: !4047)
!4058 = !DILocation(line: 349, column: 16, scope: !4047)
!4059 = !DILocation(line: 349, column: 20, scope: !4047)
!4060 = !DILocation(line: 349, column: 24, scope: !4047)
!4061 = !DILocation(line: 349, column: 22, scope: !4047)
!4062 = !DILocation(line: 349, column: 6, scope: !4047)
!4063 = !DILocation(line: 349, column: 4, scope: !4047)
!4064 = !DILocation(line: 350, column: 12, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4047, file: !1, line: 350, column: 12)
!4066 = !DILocation(line: 350, column: 16, scope: !4065)
!4067 = !DILocation(line: 350, column: 20, scope: !4065)
!4068 = !DILocation(line: 350, column: 24, scope: !4065)
!4069 = !DILocation(line: 350, column: 28, scope: !4065)
!4070 = !DILocation(line: 350, column: 26, scope: !4065)
!4071 = !DILocation(line: 350, column: 32, scope: !4065)
!4072 = !DILocation(line: 350, column: 30, scope: !4065)
!4073 = !DILocation(line: 350, column: 12, scope: !4047)
!4074 = !DILocation(line: 351, column: 8, scope: !4065)
!4075 = !DILocation(line: 351, column: 12, scope: !4065)
!4076 = !DILocation(line: 351, column: 16, scope: !4065)
!4077 = !DILocation(line: 351, column: 20, scope: !4065)
!4078 = !DILocation(line: 351, column: 24, scope: !4065)
!4079 = !DILocation(line: 351, column: 22, scope: !4065)
!4080 = !DILocation(line: 351, column: 6, scope: !4065)
!4081 = !DILocation(line: 351, column: 4, scope: !4065)
!4082 = !DILocation(line: 352, column: 14, scope: !4065)
!4083 = !DILocation(line: 352, column: 16, scope: !4065)
!4084 = !DILocation(line: 352, column: 10, scope: !4065)
!4085 = !DILocation(line: 354, column: 10, scope: !4028)
!4086 = !DILocation(line: 354, column: 3, scope: !4028)
!4087 = !DILocation(line: 357, column: 7, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4024, file: !1, line: 356, column: 7)
!4089 = !DILocation(line: 357, column: 11, scope: !4088)
!4090 = !DILocation(line: 357, column: 15, scope: !4088)
!4091 = !DILocation(line: 357, column: 19, scope: !4088)
!4092 = !DILocation(line: 357, column: 23, scope: !4088)
!4093 = !DILocation(line: 357, column: 30, scope: !4088)
!4094 = !DILocation(line: 357, column: 34, scope: !4088)
!4095 = !DILocation(line: 357, column: 38, scope: !4088)
!4096 = !DILocation(line: 357, column: 42, scope: !4088)
!4097 = !DILocation(line: 357, column: 46, scope: !4088)
!4098 = !DILocation(line: 357, column: 50, scope: !4088)
!4099 = !DILocation(line: 357, column: 54, scope: !4088)
!4100 = !DILocation(line: 357, column: 58, scope: !4088)
!4101 = !DILocation(line: 357, column: 44, scope: !4088)
!4102 = !DILocation(line: 357, column: 29, scope: !4088)
!4103 = !DILocation(line: 357, column: 27, scope: !4088)
!4104 = !DILocation(line: 357, column: 21, scope: !4088)
!4105 = !DILocation(line: 357, column: 5, scope: !4088)
!4106 = !DILocation(line: 359, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4088, file: !1, line: 359, column: 7)
!4108 = !DILocation(line: 359, column: 11, scope: !4107)
!4109 = !DILocation(line: 359, column: 15, scope: !4107)
!4110 = !DILocation(line: 359, column: 19, scope: !4107)
!4111 = !DILocation(line: 359, column: 23, scope: !4107)
!4112 = !DILocation(line: 359, column: 9, scope: !4107)
!4113 = !DILocation(line: 359, column: 25, scope: !4107)
!4114 = !DILocation(line: 359, column: 7, scope: !4088)
!4115 = !DILocation(line: 360, column: 8, scope: !4107)
!4116 = !DILocation(line: 360, column: 12, scope: !4107)
!4117 = !DILocation(line: 360, column: 16, scope: !4107)
!4118 = !DILocation(line: 360, column: 20, scope: !4107)
!4119 = !DILocation(line: 360, column: 22, scope: !4107)
!4120 = !DILocation(line: 360, column: 6, scope: !4107)
!4121 = !DILocation(line: 360, column: 4, scope: !4107)
!4122 = !DILocation(line: 361, column: 12, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4107, file: !1, line: 361, column: 12)
!4124 = !DILocation(line: 361, column: 16, scope: !4123)
!4125 = !DILocation(line: 361, column: 20, scope: !4123)
!4126 = !DILocation(line: 361, column: 24, scope: !4123)
!4127 = !DILocation(line: 361, column: 28, scope: !4123)
!4128 = !DILocation(line: 361, column: 26, scope: !4123)
!4129 = !DILocation(line: 361, column: 30, scope: !4123)
!4130 = !DILocation(line: 361, column: 12, scope: !4107)
!4131 = !DILocation(line: 362, column: 8, scope: !4123)
!4132 = !DILocation(line: 362, column: 12, scope: !4123)
!4133 = !DILocation(line: 362, column: 16, scope: !4123)
!4134 = !DILocation(line: 362, column: 20, scope: !4123)
!4135 = !DILocation(line: 362, column: 22, scope: !4123)
!4136 = !DILocation(line: 362, column: 6, scope: !4123)
!4137 = !DILocation(line: 362, column: 4, scope: !4123)
!4138 = !DILocation(line: 363, column: 14, scope: !4123)
!4139 = !DILocation(line: 363, column: 16, scope: !4123)
!4140 = !DILocation(line: 363, column: 10, scope: !4123)
!4141 = !DILocation(line: 365, column: 10, scope: !4088)
!4142 = !DILocation(line: 365, column: 3, scope: !4088)
!4143 = !DILocation(line: 367, column: 1, scope: !3964)
!4144 = distinct !DISubprogram(name: "screen_addvert", scope: !1, file: !1, line: 74, type: !4145, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!1108, !372, !410, !410}
!4147 = !DILocalVariable(name: "sc", arg: 1, scope: !4144, file: !1, line: 74, type: !372)
!4148 = !DILocation(line: 74, column: 41, scope: !4144)
!4149 = !DILocalVariable(name: "x", arg: 2, scope: !4144, file: !1, line: 74, type: !410)
!4150 = !DILocation(line: 74, column: 51, scope: !4144)
!4151 = !DILocalVariable(name: "y", arg: 3, scope: !4144, file: !1, line: 74, type: !410)
!4152 = !DILocation(line: 74, column: 60, scope: !4144)
!4153 = !DILocalVariable(name: "sv", scope: !4144, file: !1, line: 76, type: !1108)
!4154 = !DILocation(line: 76, column: 11, scope: !4144)
!4155 = !DILocation(line: 76, column: 16, scope: !4144)
!4156 = !DILocation(line: 77, column: 14, scope: !4144)
!4157 = !DILocation(line: 77, column: 2, scope: !4144)
!4158 = !DILocation(line: 77, column: 6, scope: !4144)
!4159 = !DILocation(line: 77, column: 10, scope: !4144)
!4160 = !DILocation(line: 77, column: 12, scope: !4144)
!4161 = !DILocation(line: 78, column: 14, scope: !4144)
!4162 = !DILocation(line: 78, column: 2, scope: !4144)
!4163 = !DILocation(line: 78, column: 6, scope: !4144)
!4164 = !DILocation(line: 78, column: 10, scope: !4144)
!4165 = !DILocation(line: 78, column: 12, scope: !4144)
!4166 = !DILocation(line: 80, column: 15, scope: !4144)
!4167 = !DILocation(line: 80, column: 19, scope: !4144)
!4168 = !DILocation(line: 80, column: 29, scope: !4144)
!4169 = !DILocation(line: 80, column: 2, scope: !4144)
!4170 = !DILocation(line: 81, column: 9, scope: !4144)
!4171 = !DILocation(line: 81, column: 2, scope: !4144)
!4172 = distinct !DISubprogram(name: "screen_addedge", scope: !1, file: !1, line: 95, type: !3048, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4173 = !DILocalVariable(name: "sc", arg: 1, scope: !4172, file: !1, line: 95, type: !372)
!4174 = !DILocation(line: 95, column: 41, scope: !4172)
!4175 = !DILocalVariable(name: "v1", arg: 2, scope: !4172, file: !1, line: 95, type: !1108)
!4176 = !DILocation(line: 95, column: 54, scope: !4172)
!4177 = !DILocalVariable(name: "v2", arg: 3, scope: !4172, file: !1, line: 95, type: !1108)
!4178 = !DILocation(line: 95, column: 67, scope: !4172)
!4179 = !DILocalVariable(name: "se", scope: !4172, file: !1, line: 97, type: !3050)
!4180 = !DILocation(line: 97, column: 11, scope: !4172)
!4181 = !DILocation(line: 97, column: 16, scope: !4172)
!4182 = !DILocation(line: 99, column: 2, scope: !4172)
!4183 = !DILocation(line: 100, column: 11, scope: !4172)
!4184 = !DILocation(line: 100, column: 2, scope: !4172)
!4185 = !DILocation(line: 100, column: 6, scope: !4172)
!4186 = !DILocation(line: 100, column: 9, scope: !4172)
!4187 = !DILocation(line: 101, column: 11, scope: !4172)
!4188 = !DILocation(line: 101, column: 2, scope: !4172)
!4189 = !DILocation(line: 101, column: 6, scope: !4172)
!4190 = !DILocation(line: 101, column: 9, scope: !4172)
!4191 = !DILocation(line: 103, column: 15, scope: !4172)
!4192 = !DILocation(line: 103, column: 19, scope: !4172)
!4193 = !DILocation(line: 103, column: 29, scope: !4172)
!4194 = !DILocation(line: 103, column: 2, scope: !4172)
!4195 = !DILocation(line: 104, column: 9, scope: !4172)
!4196 = !DILocation(line: 104, column: 2, scope: !4172)
!4197 = distinct !DISubprogram(name: "screen_addarea", scope: !1, file: !1, line: 304, type: !4198, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!3041, !372, !1108, !1108, !1108, !1108, !410, !410}
!4200 = !DILocalVariable(name: "sc", arg: 1, scope: !4197, file: !1, line: 304, type: !372)
!4201 = !DILocation(line: 304, column: 41, scope: !4197)
!4202 = !DILocalVariable(name: "v1", arg: 2, scope: !4197, file: !1, line: 304, type: !1108)
!4203 = !DILocation(line: 304, column: 54, scope: !4197)
!4204 = !DILocalVariable(name: "v2", arg: 3, scope: !4197, file: !1, line: 304, type: !1108)
!4205 = !DILocation(line: 304, column: 67, scope: !4197)
!4206 = !DILocalVariable(name: "v3", arg: 4, scope: !4197, file: !1, line: 304, type: !1108)
!4207 = !DILocation(line: 304, column: 80, scope: !4197)
!4208 = !DILocalVariable(name: "v4", arg: 5, scope: !4197, file: !1, line: 304, type: !1108)
!4209 = !DILocation(line: 304, column: 93, scope: !4197)
!4210 = !DILocalVariable(name: "headertype", arg: 6, scope: !4197, file: !1, line: 304, type: !410)
!4211 = !DILocation(line: 304, column: 103, scope: !4197)
!4212 = !DILocalVariable(name: "spacetype", arg: 7, scope: !4197, file: !1, line: 304, type: !410)
!4213 = !DILocation(line: 304, column: 121, scope: !4197)
!4214 = !DILocalVariable(name: "sa", scope: !4197, file: !1, line: 306, type: !3041)
!4215 = !DILocation(line: 306, column: 11, scope: !4197)
!4216 = !DILocation(line: 306, column: 16, scope: !4197)
!4217 = !DILocation(line: 307, column: 11, scope: !4197)
!4218 = !DILocation(line: 307, column: 2, scope: !4197)
!4219 = !DILocation(line: 307, column: 6, scope: !4197)
!4220 = !DILocation(line: 307, column: 9, scope: !4197)
!4221 = !DILocation(line: 308, column: 11, scope: !4197)
!4222 = !DILocation(line: 308, column: 2, scope: !4197)
!4223 = !DILocation(line: 308, column: 6, scope: !4197)
!4224 = !DILocation(line: 308, column: 9, scope: !4197)
!4225 = !DILocation(line: 309, column: 11, scope: !4197)
!4226 = !DILocation(line: 309, column: 2, scope: !4197)
!4227 = !DILocation(line: 309, column: 6, scope: !4197)
!4228 = !DILocation(line: 309, column: 9, scope: !4197)
!4229 = !DILocation(line: 310, column: 11, scope: !4197)
!4230 = !DILocation(line: 310, column: 2, scope: !4197)
!4231 = !DILocation(line: 310, column: 6, scope: !4197)
!4232 = !DILocation(line: 310, column: 9, scope: !4197)
!4233 = !DILocation(line: 311, column: 19, scope: !4197)
!4234 = !DILocation(line: 311, column: 2, scope: !4197)
!4235 = !DILocation(line: 311, column: 6, scope: !4197)
!4236 = !DILocation(line: 311, column: 17, scope: !4197)
!4237 = !DILocation(line: 312, column: 37, scope: !4197)
!4238 = !DILocation(line: 312, column: 18, scope: !4197)
!4239 = !DILocation(line: 312, column: 22, scope: !4197)
!4240 = !DILocation(line: 312, column: 35, scope: !4197)
!4241 = !DILocation(line: 312, column: 2, scope: !4197)
!4242 = !DILocation(line: 312, column: 6, scope: !4197)
!4243 = !DILocation(line: 312, column: 16, scope: !4197)
!4244 = !DILocation(line: 314, column: 15, scope: !4197)
!4245 = !DILocation(line: 314, column: 19, scope: !4197)
!4246 = !DILocation(line: 314, column: 29, scope: !4197)
!4247 = !DILocation(line: 314, column: 2, scope: !4197)
!4248 = !DILocation(line: 316, column: 9, scope: !4197)
!4249 = !DILocation(line: 316, column: 2, scope: !4197)
!4250 = distinct !DISubprogram(name: "ED_screen_add", scope: !1, file: !1, line: 459, type: !4251, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!372, !4253, !4255, !737}
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !916, line: 209, baseType: !915)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !453, line: 1299, baseType: !452)
!4257 = !DILocalVariable(name: "win", arg: 1, scope: !4250, file: !1, line: 459, type: !4253)
!4258 = !DILocation(line: 459, column: 34, scope: !4250)
!4259 = !DILocalVariable(name: "scene", arg: 2, scope: !4250, file: !1, line: 459, type: !4255)
!4260 = !DILocation(line: 459, column: 46, scope: !4250)
!4261 = !DILocalVariable(name: "name", arg: 3, scope: !4250, file: !1, line: 459, type: !737)
!4262 = !DILocation(line: 459, column: 65, scope: !4250)
!4263 = !DILocalVariable(name: "winsize_x", scope: !4250, file: !1, line: 461, type: !3583)
!4264 = !DILocation(line: 461, column: 12, scope: !4250)
!4265 = !DILocation(line: 461, column: 43, scope: !4250)
!4266 = !DILocation(line: 461, column: 24, scope: !4250)
!4267 = !DILocalVariable(name: "winsize_y", scope: !4250, file: !1, line: 462, type: !3583)
!4268 = !DILocation(line: 462, column: 12, scope: !4250)
!4269 = !DILocation(line: 462, column: 43, scope: !4250)
!4270 = !DILocation(line: 462, column: 24, scope: !4250)
!4271 = !DILocalVariable(name: "sc", scope: !4250, file: !1, line: 464, type: !372)
!4272 = !DILocation(line: 464, column: 11, scope: !4250)
!4273 = !DILocalVariable(name: "sv1", scope: !4250, file: !1, line: 465, type: !1108)
!4274 = !DILocation(line: 465, column: 11, scope: !4250)
!4275 = !DILocalVariable(name: "sv2", scope: !4250, file: !1, line: 465, type: !1108)
!4276 = !DILocation(line: 465, column: 17, scope: !4250)
!4277 = !DILocalVariable(name: "sv3", scope: !4250, file: !1, line: 465, type: !1108)
!4278 = !DILocation(line: 465, column: 23, scope: !4250)
!4279 = !DILocalVariable(name: "sv4", scope: !4250, file: !1, line: 465, type: !1108)
!4280 = !DILocation(line: 465, column: 29, scope: !4250)
!4281 = !DILocation(line: 467, column: 28, scope: !4250)
!4282 = !DILocation(line: 467, column: 42, scope: !4250)
!4283 = !DILocation(line: 467, column: 7, scope: !4250)
!4284 = !DILocation(line: 467, column: 5, scope: !4250)
!4285 = !DILocation(line: 468, column: 14, scope: !4250)
!4286 = !DILocation(line: 468, column: 2, scope: !4250)
!4287 = !DILocation(line: 468, column: 6, scope: !4250)
!4288 = !DILocation(line: 468, column: 12, scope: !4250)
!4289 = !DILocation(line: 469, column: 2, scope: !4250)
!4290 = !DILocation(line: 469, column: 6, scope: !4250)
!4291 = !DILocation(line: 469, column: 17, scope: !4250)
!4292 = !DILocation(line: 470, column: 2, scope: !4250)
!4293 = !DILocation(line: 470, column: 6, scope: !4250)
!4294 = !DILocation(line: 470, column: 19, scope: !4250)
!4295 = !DILocation(line: 471, column: 14, scope: !4250)
!4296 = !DILocation(line: 471, column: 19, scope: !4250)
!4297 = !DILocation(line: 471, column: 2, scope: !4250)
!4298 = !DILocation(line: 471, column: 6, scope: !4250)
!4299 = !DILocation(line: 471, column: 12, scope: !4250)
!4300 = !DILocation(line: 473, column: 23, scope: !4250)
!4301 = !DILocation(line: 473, column: 8, scope: !4250)
!4302 = !DILocation(line: 473, column: 6, scope: !4250)
!4303 = !DILocation(line: 474, column: 23, scope: !4250)
!4304 = !DILocation(line: 474, column: 30, scope: !4250)
!4305 = !DILocation(line: 474, column: 40, scope: !4250)
!4306 = !DILocation(line: 474, column: 8, scope: !4250)
!4307 = !DILocation(line: 474, column: 6, scope: !4250)
!4308 = !DILocation(line: 475, column: 23, scope: !4250)
!4309 = !DILocation(line: 475, column: 27, scope: !4250)
!4310 = !DILocation(line: 475, column: 37, scope: !4250)
!4311 = !DILocation(line: 475, column: 42, scope: !4250)
!4312 = !DILocation(line: 475, column: 52, scope: !4250)
!4313 = !DILocation(line: 475, column: 8, scope: !4250)
!4314 = !DILocation(line: 475, column: 6, scope: !4250)
!4315 = !DILocation(line: 476, column: 23, scope: !4250)
!4316 = !DILocation(line: 476, column: 27, scope: !4250)
!4317 = !DILocation(line: 476, column: 37, scope: !4250)
!4318 = !DILocation(line: 476, column: 8, scope: !4250)
!4319 = !DILocation(line: 476, column: 6, scope: !4250)
!4320 = !DILocation(line: 478, column: 17, scope: !4250)
!4321 = !DILocation(line: 478, column: 21, scope: !4250)
!4322 = !DILocation(line: 478, column: 26, scope: !4250)
!4323 = !DILocation(line: 478, column: 2, scope: !4250)
!4324 = !DILocation(line: 479, column: 17, scope: !4250)
!4325 = !DILocation(line: 479, column: 21, scope: !4250)
!4326 = !DILocation(line: 479, column: 26, scope: !4250)
!4327 = !DILocation(line: 479, column: 2, scope: !4250)
!4328 = !DILocation(line: 480, column: 17, scope: !4250)
!4329 = !DILocation(line: 480, column: 21, scope: !4250)
!4330 = !DILocation(line: 480, column: 26, scope: !4250)
!4331 = !DILocation(line: 480, column: 2, scope: !4250)
!4332 = !DILocation(line: 481, column: 17, scope: !4250)
!4333 = !DILocation(line: 481, column: 21, scope: !4250)
!4334 = !DILocation(line: 481, column: 26, scope: !4250)
!4335 = !DILocation(line: 481, column: 2, scope: !4250)
!4336 = !DILocation(line: 484, column: 17, scope: !4250)
!4337 = !DILocation(line: 484, column: 21, scope: !4250)
!4338 = !DILocation(line: 484, column: 26, scope: !4250)
!4339 = !DILocation(line: 484, column: 31, scope: !4250)
!4340 = !DILocation(line: 484, column: 36, scope: !4250)
!4341 = !DILocation(line: 484, column: 2, scope: !4250)
!4342 = !DILocation(line: 486, column: 9, scope: !4250)
!4343 = !DILocation(line: 486, column: 2, scope: !4250)
!4344 = distinct !DISubprogram(name: "area_getorientation", scope: !1, file: !1, line: 539, type: !4345, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4345 = !DISubroutineType(types: !4346)
!4346 = !{!119, !3041, !3041}
!4347 = !DILocalVariable(name: "sa", arg: 1, scope: !4344, file: !1, line: 539, type: !3041)
!4348 = !DILocation(line: 539, column: 34, scope: !4344)
!4349 = !DILocalVariable(name: "sb", arg: 2, scope: !4344, file: !1, line: 539, type: !3041)
!4350 = !DILocation(line: 539, column: 47, scope: !4344)
!4351 = !DILocalVariable(name: "sav1", scope: !4344, file: !1, line: 541, type: !1108)
!4352 = !DILocation(line: 541, column: 11, scope: !4344)
!4353 = !DILocalVariable(name: "sav2", scope: !4344, file: !1, line: 541, type: !1108)
!4354 = !DILocation(line: 541, column: 18, scope: !4344)
!4355 = !DILocalVariable(name: "sav3", scope: !4344, file: !1, line: 541, type: !1108)
!4356 = !DILocation(line: 541, column: 25, scope: !4344)
!4357 = !DILocalVariable(name: "sav4", scope: !4344, file: !1, line: 541, type: !1108)
!4358 = !DILocation(line: 541, column: 32, scope: !4344)
!4359 = !DILocalVariable(name: "sbv1", scope: !4344, file: !1, line: 542, type: !1108)
!4360 = !DILocation(line: 542, column: 11, scope: !4344)
!4361 = !DILocalVariable(name: "sbv2", scope: !4344, file: !1, line: 542, type: !1108)
!4362 = !DILocation(line: 542, column: 18, scope: !4344)
!4363 = !DILocalVariable(name: "sbv3", scope: !4344, file: !1, line: 542, type: !1108)
!4364 = !DILocation(line: 542, column: 25, scope: !4344)
!4365 = !DILocalVariable(name: "sbv4", scope: !4344, file: !1, line: 542, type: !1108)
!4366 = !DILocation(line: 542, column: 32, scope: !4344)
!4367 = !DILocation(line: 544, column: 6, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4344, file: !1, line: 544, column: 6)
!4369 = !DILocation(line: 544, column: 9, scope: !4368)
!4370 = !DILocation(line: 544, column: 17, scope: !4368)
!4371 = !DILocation(line: 544, column: 20, scope: !4368)
!4372 = !DILocation(line: 544, column: 23, scope: !4368)
!4373 = !DILocation(line: 544, column: 6, scope: !4344)
!4374 = !DILocation(line: 544, column: 32, scope: !4368)
!4375 = !DILocation(line: 546, column: 9, scope: !4344)
!4376 = !DILocation(line: 546, column: 13, scope: !4344)
!4377 = !DILocation(line: 546, column: 7, scope: !4344)
!4378 = !DILocation(line: 547, column: 9, scope: !4344)
!4379 = !DILocation(line: 547, column: 13, scope: !4344)
!4380 = !DILocation(line: 547, column: 7, scope: !4344)
!4381 = !DILocation(line: 548, column: 9, scope: !4344)
!4382 = !DILocation(line: 548, column: 13, scope: !4344)
!4383 = !DILocation(line: 548, column: 7, scope: !4344)
!4384 = !DILocation(line: 549, column: 9, scope: !4344)
!4385 = !DILocation(line: 549, column: 13, scope: !4344)
!4386 = !DILocation(line: 549, column: 7, scope: !4344)
!4387 = !DILocation(line: 550, column: 9, scope: !4344)
!4388 = !DILocation(line: 550, column: 13, scope: !4344)
!4389 = !DILocation(line: 550, column: 7, scope: !4344)
!4390 = !DILocation(line: 551, column: 9, scope: !4344)
!4391 = !DILocation(line: 551, column: 13, scope: !4344)
!4392 = !DILocation(line: 551, column: 7, scope: !4344)
!4393 = !DILocation(line: 552, column: 9, scope: !4344)
!4394 = !DILocation(line: 552, column: 13, scope: !4344)
!4395 = !DILocation(line: 552, column: 7, scope: !4344)
!4396 = !DILocation(line: 553, column: 9, scope: !4344)
!4397 = !DILocation(line: 553, column: 13, scope: !4344)
!4398 = !DILocation(line: 553, column: 7, scope: !4344)
!4399 = !DILocation(line: 555, column: 6, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4344, file: !1, line: 555, column: 6)
!4401 = !DILocation(line: 555, column: 14, scope: !4400)
!4402 = !DILocation(line: 555, column: 11, scope: !4400)
!4403 = !DILocation(line: 555, column: 19, scope: !4400)
!4404 = !DILocation(line: 555, column: 22, scope: !4400)
!4405 = !DILocation(line: 555, column: 30, scope: !4400)
!4406 = !DILocation(line: 555, column: 27, scope: !4400)
!4407 = !DILocation(line: 555, column: 6, scope: !4344)
!4408 = !DILocation(line: 556, column: 3, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 555, column: 36)
!4410 = !DILocation(line: 558, column: 11, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 558, column: 11)
!4412 = !DILocation(line: 558, column: 19, scope: !4411)
!4413 = !DILocation(line: 558, column: 16, scope: !4411)
!4414 = !DILocation(line: 558, column: 24, scope: !4411)
!4415 = !DILocation(line: 558, column: 27, scope: !4411)
!4416 = !DILocation(line: 558, column: 35, scope: !4411)
!4417 = !DILocation(line: 558, column: 32, scope: !4411)
!4418 = !DILocation(line: 558, column: 11, scope: !4400)
!4419 = !DILocation(line: 559, column: 3, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 558, column: 41)
!4421 = !DILocation(line: 561, column: 11, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 561, column: 11)
!4423 = !DILocation(line: 561, column: 19, scope: !4422)
!4424 = !DILocation(line: 561, column: 16, scope: !4422)
!4425 = !DILocation(line: 561, column: 24, scope: !4422)
!4426 = !DILocation(line: 561, column: 27, scope: !4422)
!4427 = !DILocation(line: 561, column: 35, scope: !4422)
!4428 = !DILocation(line: 561, column: 32, scope: !4422)
!4429 = !DILocation(line: 561, column: 11, scope: !4411)
!4430 = !DILocation(line: 562, column: 3, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4422, file: !1, line: 561, column: 41)
!4432 = !DILocation(line: 564, column: 11, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4422, file: !1, line: 564, column: 11)
!4434 = !DILocation(line: 564, column: 19, scope: !4433)
!4435 = !DILocation(line: 564, column: 16, scope: !4433)
!4436 = !DILocation(line: 564, column: 24, scope: !4433)
!4437 = !DILocation(line: 564, column: 27, scope: !4433)
!4438 = !DILocation(line: 564, column: 35, scope: !4433)
!4439 = !DILocation(line: 564, column: 32, scope: !4433)
!4440 = !DILocation(line: 564, column: 11, scope: !4422)
!4441 = !DILocation(line: 565, column: 3, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4433, file: !1, line: 564, column: 41)
!4443 = !DILocation(line: 568, column: 2, scope: !4344)
!4444 = !DILocation(line: 569, column: 1, scope: !4344)
!4445 = distinct !DISubprogram(name: "screen_area_join", scope: !1, file: !1, line: 574, type: !4446, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!119, !4448, !372, !3041, !3041}
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1213, line: 69, baseType: !722)
!4450 = !DILocalVariable(name: "C", arg: 1, scope: !4445, file: !1, line: 574, type: !4448)
!4451 = !DILocation(line: 574, column: 32, scope: !4445)
!4452 = !DILocalVariable(name: "scr", arg: 2, scope: !4445, file: !1, line: 574, type: !372)
!4453 = !DILocation(line: 574, column: 44, scope: !4445)
!4454 = !DILocalVariable(name: "sa1", arg: 3, scope: !4445, file: !1, line: 574, type: !3041)
!4455 = !DILocation(line: 574, column: 58, scope: !4445)
!4456 = !DILocalVariable(name: "sa2", arg: 4, scope: !4445, file: !1, line: 574, type: !3041)
!4457 = !DILocation(line: 574, column: 72, scope: !4445)
!4458 = !DILocalVariable(name: "dir", scope: !4445, file: !1, line: 576, type: !119)
!4459 = !DILocation(line: 576, column: 6, scope: !4445)
!4460 = !DILocation(line: 578, column: 28, scope: !4445)
!4461 = !DILocation(line: 578, column: 33, scope: !4445)
!4462 = !DILocation(line: 578, column: 8, scope: !4445)
!4463 = !DILocation(line: 578, column: 6, scope: !4445)
!4464 = !DILocation(line: 581, column: 6, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 581, column: 6)
!4466 = !DILocation(line: 581, column: 10, scope: !4465)
!4467 = !DILocation(line: 581, column: 6, scope: !4445)
!4468 = !DILocation(line: 582, column: 7, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 582, column: 7)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 581, column: 17)
!4471 = !DILocation(line: 582, column: 7, scope: !4470)
!4472 = !DILocation(line: 582, column: 12, scope: !4469)
!4473 = !DILocation(line: 582, column: 17, scope: !4469)
!4474 = !DILocation(line: 582, column: 22, scope: !4469)
!4475 = !DILocation(line: 583, column: 7, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 583, column: 7)
!4477 = !DILocation(line: 583, column: 7, scope: !4470)
!4478 = !DILocation(line: 583, column: 12, scope: !4476)
!4479 = !DILocation(line: 583, column: 17, scope: !4476)
!4480 = !DILocation(line: 583, column: 22, scope: !4476)
!4481 = !DILocation(line: 584, column: 3, scope: !4470)
!4482 = !DILocation(line: 587, column: 6, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 587, column: 6)
!4484 = !DILocation(line: 587, column: 10, scope: !4483)
!4485 = !DILocation(line: 587, column: 6, scope: !4445)
!4486 = !DILocation(line: 588, column: 13, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4483, file: !1, line: 587, column: 16)
!4488 = !DILocation(line: 588, column: 18, scope: !4487)
!4489 = !DILocation(line: 588, column: 3, scope: !4487)
!4490 = !DILocation(line: 588, column: 8, scope: !4487)
!4491 = !DILocation(line: 588, column: 11, scope: !4487)
!4492 = !DILocation(line: 589, column: 13, scope: !4487)
!4493 = !DILocation(line: 589, column: 18, scope: !4487)
!4494 = !DILocation(line: 589, column: 3, scope: !4487)
!4495 = !DILocation(line: 589, column: 8, scope: !4487)
!4496 = !DILocation(line: 589, column: 11, scope: !4487)
!4497 = !DILocation(line: 590, column: 18, scope: !4487)
!4498 = !DILocation(line: 590, column: 23, scope: !4487)
!4499 = !DILocation(line: 590, column: 28, scope: !4487)
!4500 = !DILocation(line: 590, column: 32, scope: !4487)
!4501 = !DILocation(line: 590, column: 37, scope: !4487)
!4502 = !DILocation(line: 590, column: 3, scope: !4487)
!4503 = !DILocation(line: 591, column: 18, scope: !4487)
!4504 = !DILocation(line: 591, column: 23, scope: !4487)
!4505 = !DILocation(line: 591, column: 28, scope: !4487)
!4506 = !DILocation(line: 591, column: 32, scope: !4487)
!4507 = !DILocation(line: 591, column: 37, scope: !4487)
!4508 = !DILocation(line: 591, column: 3, scope: !4487)
!4509 = !DILocation(line: 592, column: 2, scope: !4487)
!4510 = !DILocation(line: 593, column: 11, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4483, file: !1, line: 593, column: 11)
!4512 = !DILocation(line: 593, column: 15, scope: !4511)
!4513 = !DILocation(line: 593, column: 11, scope: !4483)
!4514 = !DILocation(line: 594, column: 13, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 593, column: 21)
!4516 = !DILocation(line: 594, column: 18, scope: !4515)
!4517 = !DILocation(line: 594, column: 3, scope: !4515)
!4518 = !DILocation(line: 594, column: 8, scope: !4515)
!4519 = !DILocation(line: 594, column: 11, scope: !4515)
!4520 = !DILocation(line: 595, column: 13, scope: !4515)
!4521 = !DILocation(line: 595, column: 18, scope: !4515)
!4522 = !DILocation(line: 595, column: 3, scope: !4515)
!4523 = !DILocation(line: 595, column: 8, scope: !4515)
!4524 = !DILocation(line: 595, column: 11, scope: !4515)
!4525 = !DILocation(line: 596, column: 18, scope: !4515)
!4526 = !DILocation(line: 596, column: 23, scope: !4515)
!4527 = !DILocation(line: 596, column: 28, scope: !4515)
!4528 = !DILocation(line: 596, column: 32, scope: !4515)
!4529 = !DILocation(line: 596, column: 37, scope: !4515)
!4530 = !DILocation(line: 596, column: 3, scope: !4515)
!4531 = !DILocation(line: 597, column: 18, scope: !4515)
!4532 = !DILocation(line: 597, column: 23, scope: !4515)
!4533 = !DILocation(line: 597, column: 28, scope: !4515)
!4534 = !DILocation(line: 597, column: 32, scope: !4515)
!4535 = !DILocation(line: 597, column: 37, scope: !4515)
!4536 = !DILocation(line: 597, column: 3, scope: !4515)
!4537 = !DILocation(line: 598, column: 2, scope: !4515)
!4538 = !DILocation(line: 599, column: 11, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 599, column: 11)
!4540 = !DILocation(line: 599, column: 15, scope: !4539)
!4541 = !DILocation(line: 599, column: 11, scope: !4511)
!4542 = !DILocation(line: 600, column: 13, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 599, column: 21)
!4544 = !DILocation(line: 600, column: 18, scope: !4543)
!4545 = !DILocation(line: 600, column: 3, scope: !4543)
!4546 = !DILocation(line: 600, column: 8, scope: !4543)
!4547 = !DILocation(line: 600, column: 11, scope: !4543)
!4548 = !DILocation(line: 601, column: 13, scope: !4543)
!4549 = !DILocation(line: 601, column: 18, scope: !4543)
!4550 = !DILocation(line: 601, column: 3, scope: !4543)
!4551 = !DILocation(line: 601, column: 8, scope: !4543)
!4552 = !DILocation(line: 601, column: 11, scope: !4543)
!4553 = !DILocation(line: 602, column: 18, scope: !4543)
!4554 = !DILocation(line: 602, column: 23, scope: !4543)
!4555 = !DILocation(line: 602, column: 28, scope: !4543)
!4556 = !DILocation(line: 602, column: 32, scope: !4543)
!4557 = !DILocation(line: 602, column: 37, scope: !4543)
!4558 = !DILocation(line: 602, column: 3, scope: !4543)
!4559 = !DILocation(line: 603, column: 18, scope: !4543)
!4560 = !DILocation(line: 603, column: 23, scope: !4543)
!4561 = !DILocation(line: 603, column: 28, scope: !4543)
!4562 = !DILocation(line: 603, column: 32, scope: !4543)
!4563 = !DILocation(line: 603, column: 37, scope: !4543)
!4564 = !DILocation(line: 603, column: 3, scope: !4543)
!4565 = !DILocation(line: 604, column: 2, scope: !4543)
!4566 = !DILocation(line: 605, column: 11, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 605, column: 11)
!4568 = !DILocation(line: 605, column: 15, scope: !4567)
!4569 = !DILocation(line: 605, column: 11, scope: !4539)
!4570 = !DILocation(line: 606, column: 13, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4567, file: !1, line: 605, column: 21)
!4572 = !DILocation(line: 606, column: 18, scope: !4571)
!4573 = !DILocation(line: 606, column: 3, scope: !4571)
!4574 = !DILocation(line: 606, column: 8, scope: !4571)
!4575 = !DILocation(line: 606, column: 11, scope: !4571)
!4576 = !DILocation(line: 607, column: 13, scope: !4571)
!4577 = !DILocation(line: 607, column: 18, scope: !4571)
!4578 = !DILocation(line: 607, column: 3, scope: !4571)
!4579 = !DILocation(line: 607, column: 8, scope: !4571)
!4580 = !DILocation(line: 607, column: 11, scope: !4571)
!4581 = !DILocation(line: 608, column: 18, scope: !4571)
!4582 = !DILocation(line: 608, column: 23, scope: !4571)
!4583 = !DILocation(line: 608, column: 28, scope: !4571)
!4584 = !DILocation(line: 608, column: 32, scope: !4571)
!4585 = !DILocation(line: 608, column: 37, scope: !4571)
!4586 = !DILocation(line: 608, column: 3, scope: !4571)
!4587 = !DILocation(line: 609, column: 18, scope: !4571)
!4588 = !DILocation(line: 609, column: 23, scope: !4571)
!4589 = !DILocation(line: 609, column: 28, scope: !4571)
!4590 = !DILocation(line: 609, column: 32, scope: !4571)
!4591 = !DILocation(line: 609, column: 37, scope: !4571)
!4592 = !DILocation(line: 609, column: 3, scope: !4571)
!4593 = !DILocation(line: 610, column: 2, scope: !4571)
!4594 = !DILocation(line: 612, column: 17, scope: !4445)
!4595 = !DILocation(line: 612, column: 20, scope: !4445)
!4596 = !DILocation(line: 612, column: 25, scope: !4445)
!4597 = !DILocation(line: 612, column: 2, scope: !4445)
!4598 = !DILocation(line: 613, column: 24, scope: !4445)
!4599 = !DILocation(line: 613, column: 2, scope: !4445)
!4600 = !DILocation(line: 614, column: 2, scope: !4445)
!4601 = !DILocation(line: 614, column: 7, scope: !4445)
!4602 = !DILocation(line: 614, column: 12, scope: !4445)
!4603 = !DILocation(line: 616, column: 2, scope: !4445)
!4604 = !DILocation(line: 617, column: 1, scope: !4445)
!4605 = distinct !DISubprogram(name: "screen_delarea", scope: !1, file: !1, line: 319, type: !4606, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{null, !4448, !372, !3041}
!4608 = !DILocalVariable(name: "C", arg: 1, scope: !4605, file: !1, line: 319, type: !4448)
!4609 = !DILocation(line: 319, column: 38, scope: !4605)
!4610 = !DILocalVariable(name: "sc", arg: 2, scope: !4605, file: !1, line: 319, type: !372)
!4611 = !DILocation(line: 319, column: 50, scope: !4605)
!4612 = !DILocalVariable(name: "sa", arg: 3, scope: !4605, file: !1, line: 319, type: !3041)
!4613 = !DILocation(line: 319, column: 63, scope: !4605)
!4614 = !DILocation(line: 322, column: 15, scope: !4605)
!4615 = !DILocation(line: 322, column: 18, scope: !4605)
!4616 = !DILocation(line: 322, column: 2, scope: !4605)
!4617 = !DILocation(line: 324, column: 23, scope: !4605)
!4618 = !DILocation(line: 324, column: 2, scope: !4605)
!4619 = !DILocation(line: 326, column: 15, scope: !4605)
!4620 = !DILocation(line: 326, column: 19, scope: !4605)
!4621 = !DILocation(line: 326, column: 29, scope: !4605)
!4622 = !DILocation(line: 326, column: 2, scope: !4605)
!4623 = !DILocation(line: 327, column: 2, scope: !4605)
!4624 = !DILocation(line: 327, column: 12, scope: !4605)
!4625 = !DILocation(line: 328, column: 1, scope: !4605)
!4626 = distinct !DISubprogram(name: "select_connected_scredge", scope: !1, file: !1, line: 619, type: !4627, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{null, !372, !3050}
!4629 = !DILocalVariable(name: "sc", arg: 1, scope: !4626, file: !1, line: 619, type: !372)
!4630 = !DILocation(line: 619, column: 40, scope: !4626)
!4631 = !DILocalVariable(name: "edge", arg: 2, scope: !4626, file: !1, line: 619, type: !3050)
!4632 = !DILocation(line: 619, column: 53, scope: !4626)
!4633 = !DILocalVariable(name: "se", scope: !4626, file: !1, line: 621, type: !3050)
!4634 = !DILocation(line: 621, column: 11, scope: !4626)
!4635 = !DILocalVariable(name: "sv", scope: !4626, file: !1, line: 622, type: !1108)
!4636 = !DILocation(line: 622, column: 11, scope: !4626)
!4637 = !DILocalVariable(name: "oneselected", scope: !4626, file: !1, line: 623, type: !119)
!4638 = !DILocation(line: 623, column: 6, scope: !4626)
!4639 = !DILocalVariable(name: "dir", scope: !4626, file: !1, line: 624, type: !397)
!4640 = !DILocation(line: 624, column: 7, scope: !4626)
!4641 = !DILocation(line: 629, column: 6, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4626, file: !1, line: 629, column: 6)
!4643 = !DILocation(line: 629, column: 12, scope: !4642)
!4644 = !DILocation(line: 629, column: 16, scope: !4642)
!4645 = !DILocation(line: 629, column: 20, scope: !4642)
!4646 = !DILocation(line: 629, column: 25, scope: !4642)
!4647 = !DILocation(line: 629, column: 31, scope: !4642)
!4648 = !DILocation(line: 629, column: 35, scope: !4642)
!4649 = !DILocation(line: 629, column: 39, scope: !4642)
!4650 = !DILocation(line: 629, column: 22, scope: !4642)
!4651 = !DILocation(line: 629, column: 6, scope: !4626)
!4652 = !DILocation(line: 629, column: 46, scope: !4642)
!4653 = !DILocation(line: 629, column: 42, scope: !4642)
!4654 = !DILocation(line: 630, column: 11, scope: !4642)
!4655 = !DILocation(line: 632, column: 7, scope: !4626)
!4656 = !DILocation(line: 632, column: 11, scope: !4626)
!4657 = !DILocation(line: 632, column: 20, scope: !4626)
!4658 = !DILocation(line: 632, column: 5, scope: !4626)
!4659 = !DILocation(line: 633, column: 2, scope: !4626)
!4660 = !DILocation(line: 633, column: 9, scope: !4626)
!4661 = !DILocation(line: 634, column: 3, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4626, file: !1, line: 633, column: 13)
!4663 = !DILocation(line: 634, column: 7, scope: !4662)
!4664 = !DILocation(line: 634, column: 12, scope: !4662)
!4665 = !DILocation(line: 635, column: 8, scope: !4662)
!4666 = !DILocation(line: 635, column: 12, scope: !4662)
!4667 = !DILocation(line: 635, column: 6, scope: !4662)
!4668 = distinct !{!4668, !4659, !4669}
!4669 = !DILocation(line: 636, column: 2, scope: !4626)
!4670 = !DILocation(line: 638, column: 2, scope: !4626)
!4671 = !DILocation(line: 638, column: 8, scope: !4626)
!4672 = !DILocation(line: 638, column: 12, scope: !4626)
!4673 = !DILocation(line: 638, column: 17, scope: !4626)
!4674 = !DILocation(line: 639, column: 2, scope: !4626)
!4675 = !DILocation(line: 639, column: 8, scope: !4626)
!4676 = !DILocation(line: 639, column: 12, scope: !4626)
!4677 = !DILocation(line: 639, column: 17, scope: !4626)
!4678 = !DILocation(line: 641, column: 14, scope: !4626)
!4679 = !DILocation(line: 642, column: 2, scope: !4626)
!4680 = !DILocation(line: 642, column: 9, scope: !4626)
!4681 = !DILocation(line: 643, column: 8, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4626, file: !1, line: 642, column: 22)
!4683 = !DILocation(line: 643, column: 12, scope: !4682)
!4684 = !DILocation(line: 643, column: 21, scope: !4682)
!4685 = !DILocation(line: 643, column: 6, scope: !4682)
!4686 = !DILocation(line: 644, column: 15, scope: !4682)
!4687 = !DILocation(line: 645, column: 3, scope: !4682)
!4688 = !DILocation(line: 645, column: 10, scope: !4682)
!4689 = !DILocation(line: 646, column: 8, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 646, column: 8)
!4691 = distinct !DILexicalBlock(scope: !4682, file: !1, line: 645, column: 14)
!4692 = !DILocation(line: 646, column: 12, scope: !4690)
!4693 = !DILocation(line: 646, column: 16, scope: !4690)
!4694 = !DILocation(line: 646, column: 23, scope: !4690)
!4695 = !DILocation(line: 646, column: 27, scope: !4690)
!4696 = !DILocation(line: 646, column: 31, scope: !4690)
!4697 = !DILocation(line: 646, column: 21, scope: !4690)
!4698 = !DILocation(line: 646, column: 36, scope: !4690)
!4699 = !DILocation(line: 646, column: 8, scope: !4691)
!4700 = !DILocation(line: 647, column: 9, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !1, line: 647, column: 9)
!4702 = distinct !DILexicalBlock(scope: !4690, file: !1, line: 646, column: 42)
!4703 = !DILocation(line: 647, column: 13, scope: !4701)
!4704 = !DILocation(line: 647, column: 9, scope: !4702)
!4705 = !DILocation(line: 648, column: 10, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !1, line: 648, column: 10)
!4707 = distinct !DILexicalBlock(scope: !4701, file: !1, line: 647, column: 21)
!4708 = !DILocation(line: 648, column: 14, scope: !4706)
!4709 = !DILocation(line: 648, column: 18, scope: !4706)
!4710 = !DILocation(line: 648, column: 22, scope: !4706)
!4711 = !DILocation(line: 648, column: 27, scope: !4706)
!4712 = !DILocation(line: 648, column: 31, scope: !4706)
!4713 = !DILocation(line: 648, column: 35, scope: !4706)
!4714 = !DILocation(line: 648, column: 39, scope: !4706)
!4715 = !DILocation(line: 648, column: 24, scope: !4706)
!4716 = !DILocation(line: 648, column: 10, scope: !4707)
!4717 = !DILocation(line: 649, column: 22, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 648, column: 42)
!4719 = !DILocation(line: 649, column: 26, scope: !4718)
!4720 = !DILocation(line: 649, column: 30, scope: !4718)
!4721 = !DILocation(line: 649, column: 35, scope: !4718)
!4722 = !DILocation(line: 649, column: 7, scope: !4718)
!4723 = !DILocation(line: 649, column: 11, scope: !4718)
!4724 = !DILocation(line: 649, column: 15, scope: !4718)
!4725 = !DILocation(line: 649, column: 20, scope: !4718)
!4726 = !DILocation(line: 650, column: 19, scope: !4718)
!4727 = !DILocation(line: 651, column: 6, scope: !4718)
!4728 = !DILocation(line: 652, column: 5, scope: !4707)
!4729 = !DILocation(line: 653, column: 9, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4702, file: !1, line: 653, column: 9)
!4731 = !DILocation(line: 653, column: 13, scope: !4730)
!4732 = !DILocation(line: 653, column: 9, scope: !4702)
!4733 = !DILocation(line: 654, column: 10, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !1, line: 654, column: 10)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 653, column: 21)
!4736 = !DILocation(line: 654, column: 14, scope: !4734)
!4737 = !DILocation(line: 654, column: 18, scope: !4734)
!4738 = !DILocation(line: 654, column: 22, scope: !4734)
!4739 = !DILocation(line: 654, column: 27, scope: !4734)
!4740 = !DILocation(line: 654, column: 31, scope: !4734)
!4741 = !DILocation(line: 654, column: 35, scope: !4734)
!4742 = !DILocation(line: 654, column: 39, scope: !4734)
!4743 = !DILocation(line: 654, column: 24, scope: !4734)
!4744 = !DILocation(line: 654, column: 10, scope: !4735)
!4745 = !DILocation(line: 655, column: 22, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4734, file: !1, line: 654, column: 42)
!4747 = !DILocation(line: 655, column: 26, scope: !4746)
!4748 = !DILocation(line: 655, column: 30, scope: !4746)
!4749 = !DILocation(line: 655, column: 35, scope: !4746)
!4750 = !DILocation(line: 655, column: 7, scope: !4746)
!4751 = !DILocation(line: 655, column: 11, scope: !4746)
!4752 = !DILocation(line: 655, column: 15, scope: !4746)
!4753 = !DILocation(line: 655, column: 20, scope: !4746)
!4754 = !DILocation(line: 656, column: 19, scope: !4746)
!4755 = !DILocation(line: 657, column: 6, scope: !4746)
!4756 = !DILocation(line: 658, column: 5, scope: !4735)
!4757 = !DILocation(line: 659, column: 4, scope: !4702)
!4758 = !DILocation(line: 660, column: 9, scope: !4691)
!4759 = !DILocation(line: 660, column: 13, scope: !4691)
!4760 = !DILocation(line: 660, column: 7, scope: !4691)
!4761 = distinct !{!4761, !4687, !4762}
!4762 = !DILocation(line: 661, column: 3, scope: !4682)
!4763 = distinct !{!4763, !4679, !4764}
!4764 = !DILocation(line: 662, column: 2, scope: !4626)
!4765 = !DILocation(line: 663, column: 1, scope: !4626)
!4766 = distinct !DISubprogram(name: "ED_screen_duplicate", scope: !1, file: !1, line: 1057, type: !4767, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{!372, !4253, !372}
!4769 = !DILocalVariable(name: "win", arg: 1, scope: !4766, file: !1, line: 1057, type: !4253)
!4770 = !DILocation(line: 1057, column: 40, scope: !4766)
!4771 = !DILocalVariable(name: "sc", arg: 2, scope: !4766, file: !1, line: 1057, type: !372)
!4772 = !DILocation(line: 1057, column: 54, scope: !4766)
!4773 = !DILocalVariable(name: "newsc", scope: !4766, file: !1, line: 1059, type: !372)
!4774 = !DILocation(line: 1059, column: 11, scope: !4766)
!4775 = !DILocation(line: 1061, column: 6, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1061, column: 6)
!4777 = !DILocation(line: 1061, column: 10, scope: !4776)
!4778 = !DILocation(line: 1061, column: 16, scope: !4776)
!4779 = !DILocation(line: 1061, column: 6, scope: !4766)
!4780 = !DILocation(line: 1061, column: 33, scope: !4776)
!4781 = !DILocation(line: 1064, column: 24, scope: !4766)
!4782 = !DILocation(line: 1064, column: 29, scope: !4766)
!4783 = !DILocation(line: 1064, column: 33, scope: !4766)
!4784 = !DILocation(line: 1064, column: 40, scope: !4766)
!4785 = !DILocation(line: 1064, column: 44, scope: !4766)
!4786 = !DILocation(line: 1064, column: 47, scope: !4766)
!4787 = !DILocation(line: 1064, column: 52, scope: !4766)
!4788 = !DILocation(line: 1064, column: 10, scope: !4766)
!4789 = !DILocation(line: 1064, column: 8, scope: !4766)
!4790 = !DILocation(line: 1066, column: 14, scope: !4766)
!4791 = !DILocation(line: 1066, column: 21, scope: !4766)
!4792 = !DILocation(line: 1066, column: 2, scope: !4766)
!4793 = !DILocation(line: 1068, column: 9, scope: !4766)
!4794 = !DILocation(line: 1068, column: 2, scope: !4766)
!4795 = !DILocation(line: 1069, column: 1, scope: !4766)
!4796 = distinct !DISubprogram(name: "screen_copy", scope: !1, file: !1, line: 489, type: !4797, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !372, !372}
!4799 = !DILocalVariable(name: "to", arg: 1, scope: !4796, file: !1, line: 489, type: !372)
!4800 = !DILocation(line: 489, column: 34, scope: !4796)
!4801 = !DILocalVariable(name: "from", arg: 2, scope: !4796, file: !1, line: 489, type: !372)
!4802 = !DILocation(line: 489, column: 47, scope: !4796)
!4803 = !DILocalVariable(name: "s1", scope: !4796, file: !1, line: 491, type: !1108)
!4804 = !DILocation(line: 491, column: 11, scope: !4796)
!4805 = !DILocalVariable(name: "s2", scope: !4796, file: !1, line: 491, type: !1108)
!4806 = !DILocation(line: 491, column: 16, scope: !4796)
!4807 = !DILocalVariable(name: "se", scope: !4796, file: !1, line: 492, type: !3050)
!4808 = !DILocation(line: 492, column: 11, scope: !4796)
!4809 = !DILocalVariable(name: "sa", scope: !4796, file: !1, line: 493, type: !3041)
!4810 = !DILocation(line: 493, column: 11, scope: !4796)
!4811 = !DILocalVariable(name: "saf", scope: !4796, file: !1, line: 493, type: !3041)
!4812 = !DILocation(line: 493, column: 16, scope: !4796)
!4813 = !DILocation(line: 496, column: 18, scope: !4796)
!4814 = !DILocation(line: 496, column: 2, scope: !4796)
!4815 = !DILocation(line: 498, column: 21, scope: !4796)
!4816 = !DILocation(line: 498, column: 25, scope: !4796)
!4817 = !DILocation(line: 498, column: 36, scope: !4796)
!4818 = !DILocation(line: 498, column: 42, scope: !4796)
!4819 = !DILocation(line: 498, column: 2, scope: !4796)
!4820 = !DILocation(line: 499, column: 21, scope: !4796)
!4821 = !DILocation(line: 499, column: 25, scope: !4796)
!4822 = !DILocation(line: 499, column: 36, scope: !4796)
!4823 = !DILocation(line: 499, column: 42, scope: !4796)
!4824 = !DILocation(line: 499, column: 2, scope: !4796)
!4825 = !DILocation(line: 500, column: 21, scope: !4796)
!4826 = !DILocation(line: 500, column: 25, scope: !4796)
!4827 = !DILocation(line: 500, column: 36, scope: !4796)
!4828 = !DILocation(line: 500, column: 42, scope: !4796)
!4829 = !DILocation(line: 500, column: 2, scope: !4796)
!4830 = !DILocation(line: 501, column: 22, scope: !4796)
!4831 = !DILocation(line: 501, column: 26, scope: !4796)
!4832 = !DILocation(line: 501, column: 2, scope: !4796)
!4833 = !DILocation(line: 503, column: 7, scope: !4796)
!4834 = !DILocation(line: 503, column: 11, scope: !4796)
!4835 = !DILocation(line: 503, column: 20, scope: !4796)
!4836 = !DILocation(line: 503, column: 5, scope: !4796)
!4837 = !DILocation(line: 504, column: 12, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 504, column: 2)
!4839 = !DILocation(line: 504, column: 18, scope: !4838)
!4840 = !DILocation(line: 504, column: 27, scope: !4838)
!4841 = !DILocation(line: 504, column: 10, scope: !4838)
!4842 = !DILocation(line: 504, column: 7, scope: !4838)
!4843 = !DILocation(line: 504, column: 34, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4838, file: !1, line: 504, column: 2)
!4845 = !DILocation(line: 504, column: 2, scope: !4838)
!4846 = !DILocation(line: 505, column: 14, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !1, line: 504, column: 68)
!4848 = !DILocation(line: 505, column: 3, scope: !4847)
!4849 = !DILocation(line: 505, column: 7, scope: !4847)
!4850 = !DILocation(line: 505, column: 12, scope: !4847)
!4851 = !DILocation(line: 506, column: 2, scope: !4847)
!4852 = !DILocation(line: 504, column: 43, scope: !4844)
!4853 = !DILocation(line: 504, column: 47, scope: !4844)
!4854 = !DILocation(line: 504, column: 41, scope: !4844)
!4855 = !DILocation(line: 504, column: 58, scope: !4844)
!4856 = !DILocation(line: 504, column: 62, scope: !4844)
!4857 = !DILocation(line: 504, column: 56, scope: !4844)
!4858 = !DILocation(line: 504, column: 2, scope: !4844)
!4859 = distinct !{!4859, !4845, !4860}
!4860 = !DILocation(line: 506, column: 2, scope: !4838)
!4861 = !DILocation(line: 508, column: 12, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 508, column: 2)
!4863 = !DILocation(line: 508, column: 16, scope: !4862)
!4864 = !DILocation(line: 508, column: 25, scope: !4862)
!4865 = !DILocation(line: 508, column: 10, scope: !4862)
!4866 = !DILocation(line: 508, column: 7, scope: !4862)
!4867 = !DILocation(line: 508, column: 32, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4862, file: !1, line: 508, column: 2)
!4869 = !DILocation(line: 508, column: 2, scope: !4862)
!4870 = !DILocation(line: 509, column: 12, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4868, file: !1, line: 508, column: 51)
!4872 = !DILocation(line: 509, column: 16, scope: !4871)
!4873 = !DILocation(line: 509, column: 20, scope: !4871)
!4874 = !DILocation(line: 509, column: 3, scope: !4871)
!4875 = !DILocation(line: 509, column: 7, scope: !4871)
!4876 = !DILocation(line: 509, column: 10, scope: !4871)
!4877 = !DILocation(line: 510, column: 12, scope: !4871)
!4878 = !DILocation(line: 510, column: 16, scope: !4871)
!4879 = !DILocation(line: 510, column: 20, scope: !4871)
!4880 = !DILocation(line: 510, column: 3, scope: !4871)
!4881 = !DILocation(line: 510, column: 7, scope: !4871)
!4882 = !DILocation(line: 510, column: 10, scope: !4871)
!4883 = !DILocation(line: 511, column: 17, scope: !4871)
!4884 = !DILocation(line: 511, column: 21, scope: !4871)
!4885 = !DILocation(line: 511, column: 28, scope: !4871)
!4886 = !DILocation(line: 511, column: 32, scope: !4871)
!4887 = !DILocation(line: 511, column: 3, scope: !4871)
!4888 = !DILocation(line: 512, column: 2, scope: !4871)
!4889 = !DILocation(line: 508, column: 41, scope: !4868)
!4890 = !DILocation(line: 508, column: 45, scope: !4868)
!4891 = !DILocation(line: 508, column: 39, scope: !4868)
!4892 = !DILocation(line: 508, column: 2, scope: !4868)
!4893 = distinct !{!4893, !4869, !4894}
!4894 = !DILocation(line: 512, column: 2, scope: !4862)
!4895 = !DILocation(line: 514, column: 8, scope: !4796)
!4896 = !DILocation(line: 514, column: 14, scope: !4796)
!4897 = !DILocation(line: 514, column: 23, scope: !4796)
!4898 = !DILocation(line: 514, column: 6, scope: !4796)
!4899 = !DILocation(line: 515, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 515, column: 2)
!4901 = !DILocation(line: 515, column: 16, scope: !4900)
!4902 = !DILocation(line: 515, column: 25, scope: !4900)
!4903 = !DILocation(line: 515, column: 10, scope: !4900)
!4904 = !DILocation(line: 515, column: 7, scope: !4900)
!4905 = !DILocation(line: 515, column: 32, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 515, column: 2)
!4907 = !DILocation(line: 515, column: 2, scope: !4900)
!4908 = !DILocation(line: 516, column: 12, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !1, line: 515, column: 68)
!4910 = !DILocation(line: 516, column: 16, scope: !4909)
!4911 = !DILocation(line: 516, column: 20, scope: !4909)
!4912 = !DILocation(line: 516, column: 3, scope: !4909)
!4913 = !DILocation(line: 516, column: 7, scope: !4909)
!4914 = !DILocation(line: 516, column: 10, scope: !4909)
!4915 = !DILocation(line: 517, column: 12, scope: !4909)
!4916 = !DILocation(line: 517, column: 16, scope: !4909)
!4917 = !DILocation(line: 517, column: 20, scope: !4909)
!4918 = !DILocation(line: 517, column: 3, scope: !4909)
!4919 = !DILocation(line: 517, column: 7, scope: !4909)
!4920 = !DILocation(line: 517, column: 10, scope: !4909)
!4921 = !DILocation(line: 518, column: 12, scope: !4909)
!4922 = !DILocation(line: 518, column: 16, scope: !4909)
!4923 = !DILocation(line: 518, column: 20, scope: !4909)
!4924 = !DILocation(line: 518, column: 3, scope: !4909)
!4925 = !DILocation(line: 518, column: 7, scope: !4909)
!4926 = !DILocation(line: 518, column: 10, scope: !4909)
!4927 = !DILocation(line: 519, column: 12, scope: !4909)
!4928 = !DILocation(line: 519, column: 16, scope: !4909)
!4929 = !DILocation(line: 519, column: 20, scope: !4909)
!4930 = !DILocation(line: 519, column: 3, scope: !4909)
!4931 = !DILocation(line: 519, column: 7, scope: !4909)
!4932 = !DILocation(line: 519, column: 10, scope: !4909)
!4933 = !DILocation(line: 521, column: 23, scope: !4909)
!4934 = !DILocation(line: 521, column: 27, scope: !4909)
!4935 = !DILocation(line: 521, column: 3, scope: !4909)
!4936 = !DILocation(line: 522, column: 23, scope: !4909)
!4937 = !DILocation(line: 522, column: 27, scope: !4909)
!4938 = !DILocation(line: 522, column: 3, scope: !4909)
!4939 = !DILocation(line: 523, column: 23, scope: !4909)
!4940 = !DILocation(line: 523, column: 27, scope: !4909)
!4941 = !DILocation(line: 523, column: 3, scope: !4909)
!4942 = !DILocation(line: 524, column: 23, scope: !4909)
!4943 = !DILocation(line: 524, column: 27, scope: !4909)
!4944 = !DILocation(line: 524, column: 3, scope: !4909)
!4945 = !DILocation(line: 526, column: 21, scope: !4909)
!4946 = !DILocation(line: 526, column: 25, scope: !4909)
!4947 = !DILocation(line: 526, column: 3, scope: !4909)
!4948 = !DILocation(line: 527, column: 2, scope: !4909)
!4949 = !DILocation(line: 515, column: 41, scope: !4906)
!4950 = !DILocation(line: 515, column: 45, scope: !4906)
!4951 = !DILocation(line: 515, column: 39, scope: !4906)
!4952 = !DILocation(line: 515, column: 57, scope: !4906)
!4953 = !DILocation(line: 515, column: 62, scope: !4906)
!4954 = !DILocation(line: 515, column: 55, scope: !4906)
!4955 = !DILocation(line: 515, column: 2, scope: !4906)
!4956 = distinct !{!4956, !4907, !4957}
!4957 = !DILocation(line: 527, column: 2, scope: !4900)
!4958 = !DILocation(line: 530, column: 12, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 530, column: 2)
!4960 = !DILocation(line: 530, column: 18, scope: !4959)
!4961 = !DILocation(line: 530, column: 27, scope: !4959)
!4962 = !DILocation(line: 530, column: 10, scope: !4959)
!4963 = !DILocation(line: 530, column: 7, scope: !4959)
!4964 = !DILocation(line: 530, column: 34, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4959, file: !1, line: 530, column: 2)
!4966 = !DILocation(line: 530, column: 2, scope: !4959)
!4967 = !DILocation(line: 531, column: 3, scope: !4965)
!4968 = !DILocation(line: 531, column: 7, scope: !4965)
!4969 = !DILocation(line: 531, column: 12, scope: !4965)
!4970 = !DILocation(line: 530, column: 43, scope: !4965)
!4971 = !DILocation(line: 530, column: 47, scope: !4965)
!4972 = !DILocation(line: 530, column: 41, scope: !4965)
!4973 = !DILocation(line: 530, column: 2, scope: !4965)
!4974 = distinct !{!4974, !4966, !4975}
!4975 = !DILocation(line: 531, column: 14, scope: !4959)
!4976 = !DILocation(line: 533, column: 1, scope: !4796)
!4977 = distinct !DISubprogram(name: "ED_screen_do_listen", scope: !1, file: !1, line: 1092, type: !4978, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !4448, !4980}
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmNotifier", file: !909, line: 206, baseType: !1178)
!4982 = !DILocalVariable(name: "C", arg: 1, scope: !4977, file: !1, line: 1092, type: !4448)
!4983 = !DILocation(line: 1092, column: 36, scope: !4977)
!4984 = !DILocalVariable(name: "note", arg: 2, scope: !4977, file: !1, line: 1092, type: !4980)
!4985 = !DILocation(line: 1092, column: 51, scope: !4977)
!4986 = !DILocalVariable(name: "win", scope: !4977, file: !1, line: 1094, type: !4253)
!4987 = !DILocation(line: 1094, column: 12, scope: !4977)
!4988 = !DILocation(line: 1094, column: 32, scope: !4977)
!4989 = !DILocation(line: 1094, column: 18, scope: !4977)
!4990 = !DILocation(line: 1097, column: 10, scope: !4977)
!4991 = !DILocation(line: 1097, column: 16, scope: !4977)
!4992 = !DILocation(line: 1097, column: 2, scope: !4977)
!4993 = !DILocation(line: 1099, column: 8, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !1, line: 1099, column: 8)
!4995 = distinct !DILexicalBlock(scope: !4977, file: !1, line: 1097, column: 26)
!4996 = !DILocation(line: 1099, column: 14, scope: !4994)
!4997 = !DILocation(line: 1099, column: 19, scope: !4994)
!4998 = !DILocation(line: 1099, column: 8, scope: !4995)
!4999 = !DILocation(line: 1100, column: 5, scope: !4994)
!5000 = !DILocation(line: 1100, column: 10, scope: !4994)
!5001 = !DILocation(line: 1100, column: 18, scope: !4994)
!5002 = !DILocation(line: 1100, column: 26, scope: !4994)
!5003 = !DILocation(line: 1101, column: 4, scope: !4995)
!5004 = !DILocation(line: 1103, column: 4, scope: !4995)
!5005 = !DILocation(line: 1103, column: 9, scope: !4995)
!5006 = !DILocation(line: 1103, column: 17, scope: !4995)
!5007 = !DILocation(line: 1103, column: 25, scope: !4995)
!5008 = !DILocation(line: 1104, column: 4, scope: !4995)
!5009 = !DILocation(line: 1106, column: 8, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4995, file: !1, line: 1106, column: 8)
!5011 = !DILocation(line: 1106, column: 14, scope: !5010)
!5012 = !DILocation(line: 1106, column: 21, scope: !5010)
!5013 = !DILocation(line: 1106, column: 8, scope: !4995)
!5014 = !DILocation(line: 1107, column: 28, scope: !5010)
!5015 = !DILocation(line: 1107, column: 33, scope: !5010)
!5016 = !DILocation(line: 1107, column: 41, scope: !5010)
!5017 = !DILocation(line: 1107, column: 52, scope: !5010)
!5018 = !DILocation(line: 1107, column: 5, scope: !5010)
!5019 = !DILocation(line: 1107, column: 10, scope: !5010)
!5020 = !DILocation(line: 1107, column: 18, scope: !5010)
!5021 = !DILocation(line: 1107, column: 26, scope: !5010)
!5022 = !DILocation(line: 1108, column: 4, scope: !4995)
!5023 = !DILocation(line: 1110, column: 8, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4995, file: !1, line: 1110, column: 8)
!5025 = !DILocation(line: 1110, column: 14, scope: !5024)
!5026 = !DILocation(line: 1110, column: 19, scope: !5024)
!5027 = !DILocation(line: 1110, column: 8, scope: !4995)
!5028 = !DILocation(line: 1111, column: 23, scope: !5024)
!5029 = !DILocation(line: 1111, column: 28, scope: !5024)
!5030 = !DILocation(line: 1111, column: 34, scope: !5024)
!5031 = !DILocation(line: 1111, column: 5, scope: !5024)
!5032 = !DILocation(line: 1112, column: 4, scope: !4995)
!5033 = !DILocation(line: 1114, column: 1, scope: !4977)
!5034 = distinct !DISubprogram(name: "region_cursor_set", scope: !1, file: !1, line: 1072, type: !5035, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{null, !4253, !119, !119}
!5037 = !DILocalVariable(name: "win", arg: 1, scope: !5034, file: !1, line: 1072, type: !4253)
!5038 = !DILocation(line: 1072, column: 41, scope: !5034)
!5039 = !DILocalVariable(name: "swinid", arg: 2, scope: !5034, file: !1, line: 1072, type: !119)
!5040 = !DILocation(line: 1072, column: 50, scope: !5034)
!5041 = !DILocalVariable(name: "swin_changed", arg: 3, scope: !5034, file: !1, line: 1072, type: !119)
!5042 = !DILocation(line: 1072, column: 62, scope: !5034)
!5043 = !DILocalVariable(name: "sa", scope: !5034, file: !1, line: 1074, type: !3041)
!5044 = !DILocation(line: 1074, column: 11, scope: !5034)
!5045 = !DILocation(line: 1074, column: 16, scope: !5034)
!5046 = !DILocation(line: 1074, column: 21, scope: !5034)
!5047 = !DILocation(line: 1074, column: 29, scope: !5034)
!5048 = !DILocation(line: 1074, column: 38, scope: !5034)
!5049 = !DILocation(line: 1076, column: 2, scope: !5034)
!5050 = !DILocation(line: 1076, column: 9, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !1, line: 1076, column: 2)
!5052 = distinct !DILexicalBlock(scope: !5034, file: !1, line: 1076, column: 2)
!5053 = !DILocation(line: 1076, column: 2, scope: !5052)
!5054 = !DILocalVariable(name: "ar", scope: !5055, file: !1, line: 1077, type: !5056)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !1, line: 1076, column: 28)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !40, line: 267, baseType: !854)
!5058 = !DILocation(line: 1077, column: 12, scope: !5055)
!5059 = !DILocation(line: 1077, column: 17, scope: !5055)
!5060 = !DILocation(line: 1077, column: 21, scope: !5055)
!5061 = !DILocation(line: 1077, column: 32, scope: !5055)
!5062 = !DILocation(line: 1078, column: 3, scope: !5055)
!5063 = !DILocation(line: 1078, column: 10, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !1, line: 1078, column: 3)
!5065 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1078, column: 3)
!5066 = !DILocation(line: 1078, column: 3, scope: !5065)
!5067 = !DILocation(line: 1079, column: 8, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5069, file: !1, line: 1079, column: 8)
!5069 = distinct !DILexicalBlock(scope: !5064, file: !1, line: 1078, column: 29)
!5070 = !DILocation(line: 1079, column: 12, scope: !5068)
!5071 = !DILocation(line: 1079, column: 22, scope: !5068)
!5072 = !DILocation(line: 1079, column: 19, scope: !5068)
!5073 = !DILocation(line: 1079, column: 8, scope: !5069)
!5074 = !DILocation(line: 1080, column: 9, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 1080, column: 9)
!5076 = distinct !DILexicalBlock(scope: !5068, file: !1, line: 1079, column: 30)
!5077 = !DILocation(line: 1080, column: 22, scope: !5075)
!5078 = !DILocation(line: 1080, column: 26, scope: !5075)
!5079 = !DILocation(line: 1080, column: 30, scope: !5075)
!5080 = !DILocation(line: 1080, column: 35, scope: !5075)
!5081 = !DILocation(line: 1080, column: 38, scope: !5075)
!5082 = !DILocation(line: 1080, column: 42, scope: !5075)
!5083 = !DILocation(line: 1080, column: 48, scope: !5075)
!5084 = !DILocation(line: 1080, column: 9, scope: !5076)
!5085 = !DILocation(line: 1081, column: 10, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 1081, column: 10)
!5087 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 1080, column: 63)
!5088 = !DILocation(line: 1081, column: 14, scope: !5086)
!5089 = !DILocation(line: 1081, column: 19, scope: !5086)
!5090 = !DILocation(line: 1081, column: 22, scope: !5086)
!5091 = !DILocation(line: 1081, column: 26, scope: !5086)
!5092 = !DILocation(line: 1081, column: 32, scope: !5086)
!5093 = !DILocation(line: 1081, column: 10, scope: !5087)
!5094 = !DILocation(line: 1082, column: 7, scope: !5086)
!5095 = !DILocation(line: 1082, column: 11, scope: !5086)
!5096 = !DILocation(line: 1082, column: 17, scope: !5086)
!5097 = !DILocation(line: 1082, column: 24, scope: !5086)
!5098 = !DILocation(line: 1082, column: 29, scope: !5086)
!5099 = !DILocation(line: 1082, column: 33, scope: !5086)
!5100 = !DILocation(line: 1084, column: 21, scope: !5086)
!5101 = !DILocation(line: 1084, column: 7, scope: !5086)
!5102 = !DILocation(line: 1085, column: 5, scope: !5087)
!5103 = !DILocation(line: 1086, column: 5, scope: !5076)
!5104 = !DILocation(line: 1088, column: 3, scope: !5069)
!5105 = !DILocation(line: 1078, column: 19, scope: !5064)
!5106 = !DILocation(line: 1078, column: 23, scope: !5064)
!5107 = !DILocation(line: 1078, column: 17, scope: !5064)
!5108 = !DILocation(line: 1078, column: 3, scope: !5064)
!5109 = distinct !{!5109, !5066, !5110}
!5110 = !DILocation(line: 1088, column: 3, scope: !5065)
!5111 = !DILocation(line: 1089, column: 2, scope: !5055)
!5112 = !DILocation(line: 1076, column: 18, scope: !5051)
!5113 = !DILocation(line: 1076, column: 22, scope: !5051)
!5114 = !DILocation(line: 1076, column: 16, scope: !5051)
!5115 = !DILocation(line: 1076, column: 2, scope: !5051)
!5116 = distinct !{!5116, !5053, !5117}
!5117 = !DILocation(line: 1089, column: 2, scope: !5052)
!5118 = !DILocation(line: 1090, column: 1, scope: !5034)
!5119 = distinct !DISubprogram(name: "ED_screen_draw", scope: !1, file: !1, line: 1117, type: !5120, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{null, !4253}
!5122 = !DILocalVariable(name: "win", arg: 1, scope: !5119, file: !1, line: 1117, type: !4253)
!5123 = !DILocation(line: 1117, column: 31, scope: !5119)
!5124 = !DILocalVariable(name: "winsize_x", scope: !5119, file: !1, line: 1119, type: !3583)
!5125 = !DILocation(line: 1119, column: 12, scope: !5119)
!5126 = !DILocation(line: 1119, column: 43, scope: !5119)
!5127 = !DILocation(line: 1119, column: 24, scope: !5119)
!5128 = !DILocalVariable(name: "winsize_y", scope: !5119, file: !1, line: 1120, type: !3583)
!5129 = !DILocation(line: 1120, column: 12, scope: !5119)
!5130 = !DILocation(line: 1120, column: 43, scope: !5119)
!5131 = !DILocation(line: 1120, column: 24, scope: !5119)
!5132 = !DILocalVariable(name: "sa", scope: !5119, file: !1, line: 1122, type: !3041)
!5133 = !DILocation(line: 1122, column: 11, scope: !5119)
!5134 = !DILocalVariable(name: "sa1", scope: !5119, file: !1, line: 1123, type: !3041)
!5135 = !DILocation(line: 1123, column: 11, scope: !5119)
!5136 = !DILocalVariable(name: "sa2", scope: !5119, file: !1, line: 1124, type: !3041)
!5137 = !DILocation(line: 1124, column: 11, scope: !5119)
!5138 = !DILocalVariable(name: "sa3", scope: !5119, file: !1, line: 1125, type: !3041)
!5139 = !DILocation(line: 1125, column: 11, scope: !5119)
!5140 = !DILocalVariable(name: "dir", scope: !5119, file: !1, line: 1126, type: !119)
!5141 = !DILocation(line: 1126, column: 6, scope: !5119)
!5142 = !DILocalVariable(name: "dira", scope: !5119, file: !1, line: 1127, type: !119)
!5143 = !DILocation(line: 1127, column: 6, scope: !5119)
!5144 = !DILocation(line: 1129, column: 17, scope: !5119)
!5145 = !DILocation(line: 1129, column: 22, scope: !5119)
!5146 = !DILocation(line: 1129, column: 27, scope: !5119)
!5147 = !DILocation(line: 1129, column: 35, scope: !5119)
!5148 = !DILocation(line: 1129, column: 2, scope: !5119)
!5149 = !DILocation(line: 1131, column: 12, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1131, column: 2)
!5151 = !DILocation(line: 1131, column: 17, scope: !5150)
!5152 = !DILocation(line: 1131, column: 25, scope: !5150)
!5153 = !DILocation(line: 1131, column: 34, scope: !5150)
!5154 = !DILocation(line: 1131, column: 10, scope: !5150)
!5155 = !DILocation(line: 1131, column: 7, scope: !5150)
!5156 = !DILocation(line: 1131, column: 41, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5150, file: !1, line: 1131, column: 2)
!5158 = !DILocation(line: 1131, column: 2, scope: !5150)
!5159 = !DILocation(line: 1132, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 1132, column: 7)
!5161 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 1131, column: 60)
!5162 = !DILocation(line: 1132, column: 11, scope: !5160)
!5163 = !DILocation(line: 1132, column: 16, scope: !5160)
!5164 = !DILocation(line: 1132, column: 7, scope: !5161)
!5165 = !DILocation(line: 1132, column: 48, scope: !5160)
!5166 = !DILocation(line: 1132, column: 46, scope: !5160)
!5167 = !DILocation(line: 1132, column: 42, scope: !5160)
!5168 = !DILocation(line: 1133, column: 7, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 1133, column: 7)
!5170 = !DILocation(line: 1133, column: 11, scope: !5169)
!5171 = !DILocation(line: 1133, column: 16, scope: !5169)
!5172 = !DILocation(line: 1133, column: 7, scope: !5161)
!5173 = !DILocation(line: 1133, column: 46, scope: !5169)
!5174 = !DILocation(line: 1133, column: 44, scope: !5169)
!5175 = !DILocation(line: 1133, column: 40, scope: !5169)
!5176 = !DILocation(line: 1134, column: 7, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 1134, column: 7)
!5178 = !DILocation(line: 1134, column: 11, scope: !5177)
!5179 = !DILocation(line: 1134, column: 16, scope: !5177)
!5180 = !DILocation(line: 1134, column: 7, scope: !5161)
!5181 = !DILocation(line: 1134, column: 73, scope: !5177)
!5182 = !DILocation(line: 1134, column: 71, scope: !5177)
!5183 = !DILocation(line: 1134, column: 67, scope: !5177)
!5184 = !DILocation(line: 1135, column: 20, scope: !5161)
!5185 = !DILocation(line: 1135, column: 24, scope: !5161)
!5186 = !DILocation(line: 1135, column: 35, scope: !5161)
!5187 = !DILocation(line: 1135, column: 3, scope: !5161)
!5188 = !DILocation(line: 1136, column: 2, scope: !5161)
!5189 = !DILocation(line: 1131, column: 50, scope: !5157)
!5190 = !DILocation(line: 1131, column: 54, scope: !5157)
!5191 = !DILocation(line: 1131, column: 48, scope: !5157)
!5192 = !DILocation(line: 1131, column: 2, scope: !5157)
!5193 = distinct !{!5193, !5158, !5194}
!5194 = !DILocation(line: 1136, column: 2, scope: !5150)
!5195 = !DILocation(line: 1137, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1137, column: 2)
!5197 = !DILocation(line: 1137, column: 17, scope: !5196)
!5198 = !DILocation(line: 1137, column: 25, scope: !5196)
!5199 = !DILocation(line: 1137, column: 34, scope: !5196)
!5200 = !DILocation(line: 1137, column: 10, scope: !5196)
!5201 = !DILocation(line: 1137, column: 7, scope: !5196)
!5202 = !DILocation(line: 1137, column: 41, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5196, file: !1, line: 1137, column: 2)
!5204 = !DILocation(line: 1137, column: 2, scope: !5196)
!5205 = !DILocation(line: 1138, column: 20, scope: !5203)
!5206 = !DILocation(line: 1138, column: 24, scope: !5203)
!5207 = !DILocation(line: 1138, column: 35, scope: !5203)
!5208 = !DILocation(line: 1138, column: 3, scope: !5203)
!5209 = !DILocation(line: 1137, column: 50, scope: !5203)
!5210 = !DILocation(line: 1137, column: 54, scope: !5203)
!5211 = !DILocation(line: 1137, column: 48, scope: !5203)
!5212 = !DILocation(line: 1137, column: 2, scope: !5203)
!5213 = distinct !{!5213, !5204, !5214}
!5214 = !DILocation(line: 1138, column: 47, scope: !5196)
!5215 = !DILocation(line: 1141, column: 6, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1141, column: 6)
!5217 = !DILocation(line: 1141, column: 10, scope: !5216)
!5218 = !DILocation(line: 1141, column: 13, scope: !5216)
!5219 = !DILocation(line: 1141, column: 6, scope: !5119)
!5220 = !DILocation(line: 1142, column: 29, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5216, file: !1, line: 1141, column: 18)
!5222 = !DILocation(line: 1142, column: 34, scope: !5221)
!5223 = !DILocation(line: 1142, column: 9, scope: !5221)
!5224 = !DILocation(line: 1142, column: 7, scope: !5221)
!5225 = !DILocation(line: 1143, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1143, column: 7)
!5227 = !DILocation(line: 1143, column: 11, scope: !5226)
!5228 = !DILocation(line: 1143, column: 7, scope: !5221)
!5229 = !DILocation(line: 1144, column: 12, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 1143, column: 18)
!5231 = !DILocation(line: 1144, column: 4, scope: !5230)
!5232 = !DILocation(line: 1146, column: 10, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 1144, column: 17)
!5234 = !DILocation(line: 1147, column: 11, scope: !5233)
!5235 = !DILocation(line: 1148, column: 6, scope: !5233)
!5236 = !DILocation(line: 1150, column: 10, scope: !5233)
!5237 = !DILocation(line: 1151, column: 11, scope: !5233)
!5238 = !DILocation(line: 1152, column: 6, scope: !5233)
!5239 = !DILocation(line: 1154, column: 10, scope: !5233)
!5240 = !DILocation(line: 1155, column: 11, scope: !5233)
!5241 = !DILocation(line: 1156, column: 6, scope: !5233)
!5242 = !DILocation(line: 1158, column: 10, scope: !5233)
!5243 = !DILocation(line: 1159, column: 11, scope: !5233)
!5244 = !DILocation(line: 1160, column: 6, scope: !5233)
!5245 = !DILocation(line: 1162, column: 3, scope: !5230)
!5246 = !DILocation(line: 1163, column: 27, scope: !5221)
!5247 = !DILocation(line: 1163, column: 32, scope: !5221)
!5248 = !DILocation(line: 1163, column: 3, scope: !5221)
!5249 = !DILocation(line: 1164, column: 28, scope: !5221)
!5250 = !DILocation(line: 1164, column: 33, scope: !5221)
!5251 = !DILocation(line: 1164, column: 3, scope: !5221)
!5252 = !DILocation(line: 1165, column: 2, scope: !5221)
!5253 = !DILocation(line: 1168, column: 6, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1168, column: 6)
!5255 = !DILocation(line: 1168, column: 6, scope: !5119)
!5256 = !DILocation(line: 1169, column: 3, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5254, file: !1, line: 1168, column: 11)
!5258 = !DILocation(line: 1170, column: 3, scope: !5257)
!5259 = !DILocation(line: 1172, column: 7, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5257, file: !1, line: 1172, column: 7)
!5261 = !DILocation(line: 1172, column: 12, scope: !5260)
!5262 = !DILocation(line: 1172, column: 17, scope: !5260)
!5263 = !DILocation(line: 1172, column: 7, scope: !5257)
!5264 = !DILocation(line: 1173, column: 14, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 1172, column: 42)
!5266 = !DILocation(line: 1173, column: 19, scope: !5265)
!5267 = !DILocation(line: 1173, column: 26, scope: !5265)
!5268 = !DILocation(line: 1173, column: 32, scope: !5265)
!5269 = !DILocation(line: 1173, column: 37, scope: !5265)
!5270 = !DILocation(line: 1173, column: 49, scope: !5265)
!5271 = !DILocation(line: 1173, column: 52, scope: !5265)
!5272 = !DILocation(line: 1173, column: 57, scope: !5265)
!5273 = !DILocation(line: 1173, column: 64, scope: !5265)
!5274 = !DILocation(line: 1173, column: 70, scope: !5265)
!5275 = !DILocation(line: 1173, column: 75, scope: !5265)
!5276 = !DILocation(line: 1173, column: 87, scope: !5265)
!5277 = !DILocation(line: 1173, column: 4, scope: !5265)
!5278 = !DILocation(line: 1174, column: 4, scope: !5265)
!5279 = !DILocation(line: 1175, column: 14, scope: !5265)
!5280 = !DILocation(line: 1175, column: 19, scope: !5265)
!5281 = !DILocation(line: 1175, column: 26, scope: !5265)
!5282 = !DILocation(line: 1175, column: 32, scope: !5265)
!5283 = !DILocation(line: 1175, column: 37, scope: !5265)
!5284 = !DILocation(line: 1175, column: 49, scope: !5265)
!5285 = !DILocation(line: 1175, column: 51, scope: !5265)
!5286 = !DILocation(line: 1175, column: 56, scope: !5265)
!5287 = !DILocation(line: 1175, column: 61, scope: !5265)
!5288 = !DILocation(line: 1175, column: 68, scope: !5265)
!5289 = !DILocation(line: 1175, column: 74, scope: !5265)
!5290 = !DILocation(line: 1175, column: 79, scope: !5265)
!5291 = !DILocation(line: 1175, column: 91, scope: !5265)
!5292 = !DILocation(line: 1175, column: 93, scope: !5265)
!5293 = !DILocation(line: 1175, column: 4, scope: !5265)
!5294 = !DILocation(line: 1176, column: 3, scope: !5265)
!5295 = !DILocation(line: 1178, column: 14, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 1177, column: 8)
!5297 = !DILocation(line: 1178, column: 19, scope: !5296)
!5298 = !DILocation(line: 1178, column: 31, scope: !5296)
!5299 = !DILocation(line: 1178, column: 34, scope: !5296)
!5300 = !DILocation(line: 1178, column: 39, scope: !5296)
!5301 = !DILocation(line: 1178, column: 46, scope: !5296)
!5302 = !DILocation(line: 1178, column: 52, scope: !5296)
!5303 = !DILocation(line: 1178, column: 57, scope: !5296)
!5304 = !DILocation(line: 1178, column: 69, scope: !5296)
!5305 = !DILocation(line: 1178, column: 72, scope: !5296)
!5306 = !DILocation(line: 1178, column: 77, scope: !5296)
!5307 = !DILocation(line: 1178, column: 84, scope: !5296)
!5308 = !DILocation(line: 1178, column: 4, scope: !5296)
!5309 = !DILocation(line: 1179, column: 4, scope: !5296)
!5310 = !DILocation(line: 1180, column: 14, scope: !5296)
!5311 = !DILocation(line: 1180, column: 19, scope: !5296)
!5312 = !DILocation(line: 1180, column: 31, scope: !5296)
!5313 = !DILocation(line: 1180, column: 33, scope: !5296)
!5314 = !DILocation(line: 1180, column: 38, scope: !5296)
!5315 = !DILocation(line: 1180, column: 43, scope: !5296)
!5316 = !DILocation(line: 1180, column: 50, scope: !5296)
!5317 = !DILocation(line: 1180, column: 56, scope: !5296)
!5318 = !DILocation(line: 1180, column: 61, scope: !5296)
!5319 = !DILocation(line: 1180, column: 73, scope: !5296)
!5320 = !DILocation(line: 1180, column: 75, scope: !5296)
!5321 = !DILocation(line: 1180, column: 80, scope: !5296)
!5322 = !DILocation(line: 1180, column: 85, scope: !5296)
!5323 = !DILocation(line: 1180, column: 92, scope: !5296)
!5324 = !DILocation(line: 1180, column: 4, scope: !5296)
!5325 = !DILocation(line: 1183, column: 3, scope: !5257)
!5326 = !DILocation(line: 1184, column: 2, scope: !5257)
!5327 = !DILocation(line: 1186, column: 2, scope: !5119)
!5328 = !DILocation(line: 1186, column: 7, scope: !5119)
!5329 = !DILocation(line: 1186, column: 15, scope: !5119)
!5330 = !DILocation(line: 1186, column: 23, scope: !5119)
!5331 = !DILocation(line: 1187, column: 1, scope: !5119)
!5332 = distinct !DISubprogram(name: "drawscredge_area", scope: !1, file: !1, line: 1033, type: !5333, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{null, !3041, !119, !119, !119}
!5335 = !DILocalVariable(name: "sa", arg: 1, scope: !5332, file: !1, line: 1033, type: !3041)
!5336 = !DILocation(line: 1033, column: 39, scope: !5332)
!5337 = !DILocalVariable(name: "sizex", arg: 2, scope: !5332, file: !1, line: 1033, type: !119)
!5338 = !DILocation(line: 1033, column: 47, scope: !5332)
!5339 = !DILocalVariable(name: "sizey", arg: 3, scope: !5332, file: !1, line: 1033, type: !119)
!5340 = !DILocation(line: 1033, column: 58, scope: !5332)
!5341 = !DILocalVariable(name: "center", arg: 4, scope: !5332, file: !1, line: 1033, type: !119)
!5342 = !DILocation(line: 1033, column: 69, scope: !5332)
!5343 = !DILocalVariable(name: "x1", scope: !5332, file: !1, line: 1035, type: !410)
!5344 = !DILocation(line: 1035, column: 8, scope: !5332)
!5345 = !DILocation(line: 1035, column: 13, scope: !5332)
!5346 = !DILocation(line: 1035, column: 17, scope: !5332)
!5347 = !DILocation(line: 1035, column: 21, scope: !5332)
!5348 = !DILocation(line: 1035, column: 25, scope: !5332)
!5349 = !DILocalVariable(name: "y1", scope: !5332, file: !1, line: 1036, type: !410)
!5350 = !DILocation(line: 1036, column: 8, scope: !5332)
!5351 = !DILocation(line: 1036, column: 13, scope: !5332)
!5352 = !DILocation(line: 1036, column: 17, scope: !5332)
!5353 = !DILocation(line: 1036, column: 21, scope: !5332)
!5354 = !DILocation(line: 1036, column: 25, scope: !5332)
!5355 = !DILocalVariable(name: "x2", scope: !5332, file: !1, line: 1037, type: !410)
!5356 = !DILocation(line: 1037, column: 8, scope: !5332)
!5357 = !DILocation(line: 1037, column: 13, scope: !5332)
!5358 = !DILocation(line: 1037, column: 17, scope: !5332)
!5359 = !DILocation(line: 1037, column: 21, scope: !5332)
!5360 = !DILocation(line: 1037, column: 25, scope: !5332)
!5361 = !DILocalVariable(name: "y2", scope: !5332, file: !1, line: 1038, type: !410)
!5362 = !DILocation(line: 1038, column: 8, scope: !5332)
!5363 = !DILocation(line: 1038, column: 13, scope: !5332)
!5364 = !DILocation(line: 1038, column: 17, scope: !5332)
!5365 = !DILocation(line: 1038, column: 21, scope: !5332)
!5366 = !DILocation(line: 1038, column: 25, scope: !5332)
!5367 = !DILocation(line: 1040, column: 6, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5332, file: !1, line: 1040, column: 6)
!5369 = !DILocation(line: 1040, column: 13, scope: !5368)
!5370 = !DILocation(line: 1040, column: 6, scope: !5332)
!5371 = !DILocation(line: 1041, column: 9, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !1, line: 1041, column: 7)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !1, line: 1040, column: 19)
!5374 = !DILocation(line: 1041, column: 19, scope: !5372)
!5375 = !DILocation(line: 1041, column: 7, scope: !5373)
!5376 = !DILocation(line: 1043, column: 4, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1041, column: 27)
!5378 = !DILocation(line: 1044, column: 4, scope: !5377)
!5379 = !DILocation(line: 1045, column: 26, scope: !5377)
!5380 = !DILocation(line: 1045, column: 33, scope: !5377)
!5381 = !DILocation(line: 1045, column: 40, scope: !5377)
!5382 = !DILocation(line: 1045, column: 44, scope: !5377)
!5383 = !DILocation(line: 1045, column: 48, scope: !5377)
!5384 = !DILocation(line: 1045, column: 52, scope: !5377)
!5385 = !DILocation(line: 1045, column: 4, scope: !5377)
!5386 = !DILocation(line: 1046, column: 4, scope: !5377)
!5387 = !DILocation(line: 1047, column: 3, scope: !5377)
!5388 = !DILocation(line: 1048, column: 2, scope: !5373)
!5389 = !DILocation(line: 1050, column: 3, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5368, file: !1, line: 1049, column: 7)
!5391 = !DILocation(line: 1051, column: 25, scope: !5390)
!5392 = !DILocation(line: 1051, column: 32, scope: !5390)
!5393 = !DILocation(line: 1051, column: 39, scope: !5390)
!5394 = !DILocation(line: 1051, column: 43, scope: !5390)
!5395 = !DILocation(line: 1051, column: 47, scope: !5390)
!5396 = !DILocation(line: 1051, column: 51, scope: !5390)
!5397 = !DILocation(line: 1051, column: 3, scope: !5390)
!5398 = !DILocation(line: 1053, column: 1, scope: !5332)
!5399 = distinct !DISubprogram(name: "scrarea_draw_shape_dark", scope: !1, file: !1, line: 991, type: !5400, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{null, !3041, !397}
!5402 = !DILocalVariable(name: "sa", arg: 1, scope: !5399, file: !1, line: 991, type: !3041)
!5403 = !DILocation(line: 991, column: 46, scope: !5399)
!5404 = !DILocalVariable(name: "dir", arg: 2, scope: !5399, file: !1, line: 991, type: !397)
!5405 = !DILocation(line: 991, column: 55, scope: !5399)
!5406 = !DILocation(line: 993, column: 2, scope: !5399)
!5407 = !DILocation(line: 994, column: 2, scope: !5399)
!5408 = !DILocation(line: 995, column: 2, scope: !5399)
!5409 = !DILocation(line: 996, column: 18, scope: !5399)
!5410 = !DILocation(line: 996, column: 22, scope: !5399)
!5411 = !DILocation(line: 996, column: 2, scope: !5399)
!5412 = !DILocation(line: 997, column: 2, scope: !5399)
!5413 = !DILocation(line: 998, column: 1, scope: !5399)
!5414 = distinct !DISubprogram(name: "scrarea_draw_shape_light", scope: !1, file: !1, line: 1001, type: !5400, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5415 = !DILocalVariable(name: "sa", arg: 1, scope: !5414, file: !1, line: 1001, type: !3041)
!5416 = !DILocation(line: 1001, column: 47, scope: !5414)
!5417 = !DILocalVariable(name: "UNUSED_dir", arg: 2, scope: !5414, file: !1, line: 1001, type: !397)
!5418 = !DILocation(line: 1001, column: 56, scope: !5414)
!5419 = !DILocation(line: 1003, column: 2, scope: !5414)
!5420 = !DILocation(line: 1004, column: 2, scope: !5414)
!5421 = !DILocation(line: 1006, column: 2, scope: !5414)
!5422 = !DILocation(line: 1008, column: 10, scope: !5414)
!5423 = !DILocation(line: 1008, column: 14, scope: !5414)
!5424 = !DILocation(line: 1008, column: 18, scope: !5414)
!5425 = !DILocation(line: 1008, column: 22, scope: !5414)
!5426 = !DILocation(line: 1008, column: 25, scope: !5414)
!5427 = !DILocation(line: 1008, column: 29, scope: !5414)
!5428 = !DILocation(line: 1008, column: 33, scope: !5414)
!5429 = !DILocation(line: 1008, column: 37, scope: !5414)
!5430 = !DILocation(line: 1008, column: 40, scope: !5414)
!5431 = !DILocation(line: 1008, column: 44, scope: !5414)
!5432 = !DILocation(line: 1008, column: 48, scope: !5414)
!5433 = !DILocation(line: 1008, column: 52, scope: !5414)
!5434 = !DILocation(line: 1008, column: 55, scope: !5414)
!5435 = !DILocation(line: 1008, column: 59, scope: !5414)
!5436 = !DILocation(line: 1008, column: 63, scope: !5414)
!5437 = !DILocation(line: 1008, column: 67, scope: !5414)
!5438 = !DILocation(line: 1008, column: 2, scope: !5414)
!5439 = !DILocation(line: 1009, column: 2, scope: !5414)
!5440 = !DILocation(line: 1010, column: 1, scope: !5414)
!5441 = distinct !DISubprogram(name: "ED_screen_refresh", scope: !1, file: !1, line: 1203, type: !5442, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{null, !5444, !4253}
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !916, line: 160, baseType: !1049)
!5446 = !DILocalVariable(name: "wm", arg: 1, scope: !5441, file: !1, line: 1203, type: !5444)
!5447 = !DILocation(line: 1203, column: 41, scope: !5441)
!5448 = !DILocalVariable(name: "win", arg: 2, scope: !5441, file: !1, line: 1203, type: !4253)
!5449 = !DILocation(line: 1203, column: 55, scope: !5441)
!5450 = !DILocation(line: 1206, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5441, file: !1, line: 1206, column: 6)
!5452 = !DILocation(line: 1206, column: 7, scope: !5451)
!5453 = !DILocation(line: 1206, column: 6, scope: !5441)
!5454 = !DILocalVariable(name: "winsize_x", scope: !5455, file: !1, line: 1207, type: !3583)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !1, line: 1206, column: 21)
!5456 = !DILocation(line: 1207, column: 13, scope: !5455)
!5457 = !DILocation(line: 1207, column: 44, scope: !5455)
!5458 = !DILocation(line: 1207, column: 25, scope: !5455)
!5459 = !DILocalVariable(name: "winsize_y", scope: !5455, file: !1, line: 1208, type: !3583)
!5460 = !DILocation(line: 1208, column: 13, scope: !5455)
!5461 = !DILocation(line: 1208, column: 44, scope: !5455)
!5462 = !DILocation(line: 1208, column: 25, scope: !5455)
!5463 = !DILocalVariable(name: "sa", scope: !5455, file: !1, line: 1209, type: !3041)
!5464 = !DILocation(line: 1209, column: 12, scope: !5455)
!5465 = !DILocalVariable(name: "winrct", scope: !5455, file: !1, line: 1210, type: !874)
!5466 = !DILocation(line: 1210, column: 8, scope: !5455)
!5467 = !DILocation(line: 1212, column: 10, scope: !5455)
!5468 = !DILocation(line: 1212, column: 15, scope: !5455)
!5469 = !DILocation(line: 1213, column: 17, scope: !5455)
!5470 = !DILocation(line: 1213, column: 27, scope: !5455)
!5471 = !DILocation(line: 1213, column: 10, scope: !5455)
!5472 = !DILocation(line: 1213, column: 15, scope: !5455)
!5473 = !DILocation(line: 1214, column: 10, scope: !5455)
!5474 = !DILocation(line: 1214, column: 15, scope: !5455)
!5475 = !DILocation(line: 1215, column: 17, scope: !5455)
!5476 = !DILocation(line: 1215, column: 27, scope: !5455)
!5477 = !DILocation(line: 1215, column: 10, scope: !5455)
!5478 = !DILocation(line: 1215, column: 15, scope: !5455)
!5479 = !DILocation(line: 1218, column: 3, scope: !5455)
!5480 = !DILocation(line: 1220, column: 21, scope: !5455)
!5481 = !DILocation(line: 1220, column: 26, scope: !5455)
!5482 = !DILocation(line: 1220, column: 34, scope: !5455)
!5483 = !DILocation(line: 1220, column: 45, scope: !5455)
!5484 = !DILocation(line: 1220, column: 3, scope: !5455)
!5485 = !DILocation(line: 1222, column: 7, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 1222, column: 7)
!5487 = !DILocation(line: 1222, column: 12, scope: !5486)
!5488 = !DILocation(line: 1222, column: 20, scope: !5486)
!5489 = !DILocation(line: 1222, column: 28, scope: !5486)
!5490 = !DILocation(line: 1222, column: 7, scope: !5455)
!5491 = !DILocation(line: 1223, column: 45, scope: !5486)
!5492 = !DILocation(line: 1223, column: 27, scope: !5486)
!5493 = !DILocation(line: 1223, column: 4, scope: !5486)
!5494 = !DILocation(line: 1223, column: 9, scope: !5486)
!5495 = !DILocation(line: 1223, column: 17, scope: !5486)
!5496 = !DILocation(line: 1223, column: 25, scope: !5486)
!5497 = !DILocation(line: 1225, column: 26, scope: !5486)
!5498 = !DILocation(line: 1225, column: 31, scope: !5486)
!5499 = !DILocation(line: 1225, column: 36, scope: !5486)
!5500 = !DILocation(line: 1225, column: 44, scope: !5486)
!5501 = !DILocation(line: 1225, column: 4, scope: !5486)
!5502 = !DILocation(line: 1227, column: 13, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 1227, column: 3)
!5504 = !DILocation(line: 1227, column: 18, scope: !5503)
!5505 = !DILocation(line: 1227, column: 26, scope: !5503)
!5506 = !DILocation(line: 1227, column: 35, scope: !5503)
!5507 = !DILocation(line: 1227, column: 11, scope: !5503)
!5508 = !DILocation(line: 1227, column: 8, scope: !5503)
!5509 = !DILocation(line: 1227, column: 42, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5503, file: !1, line: 1227, column: 3)
!5511 = !DILocation(line: 1227, column: 3, scope: !5503)
!5512 = !DILocation(line: 1230, column: 23, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5510, file: !1, line: 1227, column: 61)
!5514 = !DILocation(line: 1230, column: 27, scope: !5513)
!5515 = !DILocation(line: 1230, column: 32, scope: !5513)
!5516 = !DILocation(line: 1230, column: 4, scope: !5513)
!5517 = !DILocation(line: 1231, column: 3, scope: !5513)
!5518 = !DILocation(line: 1227, column: 51, scope: !5510)
!5519 = !DILocation(line: 1227, column: 55, scope: !5510)
!5520 = !DILocation(line: 1227, column: 49, scope: !5510)
!5521 = !DILocation(line: 1227, column: 3, scope: !5510)
!5522 = distinct !{!5522, !5511, !5523}
!5523 = !DILocation(line: 1231, column: 3, scope: !5503)
!5524 = !DILocation(line: 1234, column: 7, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 1234, column: 7)
!5526 = !DILocation(line: 1234, column: 12, scope: !5525)
!5527 = !DILocation(line: 1234, column: 20, scope: !5525)
!5528 = !DILocation(line: 1234, column: 7, scope: !5455)
!5529 = !DILocation(line: 1235, column: 25, scope: !5525)
!5530 = !DILocation(line: 1235, column: 29, scope: !5525)
!5531 = !DILocation(line: 1235, column: 34, scope: !5525)
!5532 = !DILocation(line: 1235, column: 39, scope: !5525)
!5533 = !DILocation(line: 1235, column: 47, scope: !5525)
!5534 = !DILocation(line: 1235, column: 4, scope: !5525)
!5535 = !DILocation(line: 1236, column: 2, scope: !5455)
!5536 = !DILocation(line: 1238, column: 8, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5441, file: !1, line: 1238, column: 6)
!5538 = !DILocation(line: 1238, column: 14, scope: !5537)
!5539 = !DILocation(line: 1238, column: 6, scope: !5441)
!5540 = !DILocation(line: 1239, column: 3, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5537, file: !1, line: 1238, column: 32)
!5542 = !DILocation(line: 1240, column: 2, scope: !5541)
!5543 = !DILocation(line: 1241, column: 2, scope: !5441)
!5544 = !DILocation(line: 1241, column: 7, scope: !5441)
!5545 = !DILocation(line: 1241, column: 15, scope: !5441)
!5546 = !DILocation(line: 1241, column: 26, scope: !5441)
!5547 = !DILocation(line: 1243, column: 2, scope: !5441)
!5548 = !DILocation(line: 1243, column: 7, scope: !5441)
!5549 = !DILocation(line: 1243, column: 15, scope: !5441)
!5550 = !DILocation(line: 1243, column: 23, scope: !5441)
!5551 = !DILocation(line: 1244, column: 1, scope: !5441)
!5552 = distinct !DISubprogram(name: "screen_refresh_headersizes", scope: !1, file: !1, line: 1190, type: !1200, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5553 = !DILocalVariable(name: "lb", scope: !5552, file: !1, line: 1192, type: !5554)
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5555, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!5556 = !DILocation(line: 1192, column: 18, scope: !5552)
!5557 = !DILocation(line: 1192, column: 23, scope: !5552)
!5558 = !DILocalVariable(name: "st", scope: !5552, file: !1, line: 1193, type: !5559)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceType", file: !1039, line: 112, baseType: !1141)
!5561 = !DILocation(line: 1193, column: 13, scope: !5552)
!5562 = !DILocation(line: 1195, column: 12, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 1195, column: 2)
!5564 = !DILocation(line: 1195, column: 16, scope: !5563)
!5565 = !DILocation(line: 1195, column: 10, scope: !5563)
!5566 = !DILocation(line: 1195, column: 7, scope: !5563)
!5567 = !DILocation(line: 1195, column: 23, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5563, file: !1, line: 1195, column: 2)
!5569 = !DILocation(line: 1195, column: 2, scope: !5563)
!5570 = !DILocalVariable(name: "art", scope: !5571, file: !1, line: 1196, type: !5572)
!5571 = distinct !DILexicalBlock(scope: !5568, file: !1, line: 1195, column: 42)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegionType", file: !1039, line: 165, baseType: !1038)
!5574 = !DILocation(line: 1196, column: 16, scope: !5571)
!5575 = !DILocation(line: 1196, column: 45, scope: !5571)
!5576 = !DILocation(line: 1196, column: 22, scope: !5571)
!5577 = !DILocation(line: 1197, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5571, file: !1, line: 1197, column: 7)
!5579 = !DILocation(line: 1197, column: 7, scope: !5571)
!5580 = !DILocation(line: 1197, column: 29, scope: !5578)
!5581 = !DILocation(line: 1197, column: 12, scope: !5578)
!5582 = !DILocation(line: 1197, column: 17, scope: !5578)
!5583 = !DILocation(line: 1197, column: 27, scope: !5578)
!5584 = !DILocation(line: 1198, column: 2, scope: !5571)
!5585 = !DILocation(line: 1195, column: 32, scope: !5568)
!5586 = !DILocation(line: 1195, column: 36, scope: !5568)
!5587 = !DILocation(line: 1195, column: 30, scope: !5568)
!5588 = !DILocation(line: 1195, column: 2, scope: !5568)
!5589 = distinct !{!5589, !5569, !5590}
!5590 = !DILocation(line: 1198, column: 2, scope: !5563)
!5591 = !DILocation(line: 1199, column: 1, scope: !5552)
!5592 = distinct !DISubprogram(name: "screen_test_scale", scope: !1, file: !1, line: 666, type: !5593, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{null, !372, !119, !119}
!5595 = !DILocalVariable(name: "sc", arg: 1, scope: !5592, file: !1, line: 666, type: !372)
!5596 = !DILocation(line: 666, column: 40, scope: !5592)
!5597 = !DILocalVariable(name: "winsize_x", arg: 2, scope: !5592, file: !1, line: 666, type: !119)
!5598 = !DILocation(line: 666, column: 48, scope: !5592)
!5599 = !DILocalVariable(name: "winsize_y", arg: 3, scope: !5592, file: !1, line: 666, type: !119)
!5600 = !DILocation(line: 666, column: 63, scope: !5592)
!5601 = !DILocalVariable(name: "headery_init", scope: !5592, file: !1, line: 672, type: !3583)
!5602 = !DILocation(line: 672, column: 12, scope: !5592)
!5603 = !DILocation(line: 672, column: 27, scope: !5592)
!5604 = !DILocalVariable(name: "sv", scope: !5592, file: !1, line: 673, type: !1108)
!5605 = !DILocation(line: 673, column: 11, scope: !5592)
!5606 = !DILocalVariable(name: "sa", scope: !5592, file: !1, line: 674, type: !3041)
!5607 = !DILocation(line: 674, column: 11, scope: !5592)
!5608 = !DILocalVariable(name: "winsize_x_prev", scope: !5592, file: !1, line: 675, type: !119)
!5609 = !DILocation(line: 675, column: 6, scope: !5592)
!5610 = !DILocalVariable(name: "winsize_y_prev", scope: !5592, file: !1, line: 675, type: !119)
!5611 = !DILocation(line: 675, column: 22, scope: !5592)
!5612 = !DILocalVariable(name: "facx", scope: !5592, file: !1, line: 676, type: !474)
!5613 = !DILocation(line: 676, column: 8, scope: !5592)
!5614 = !DILocalVariable(name: "facy", scope: !5592, file: !1, line: 676, type: !474)
!5615 = !DILocation(line: 676, column: 14, scope: !5592)
!5616 = !DILocalVariable(name: "tempf", scope: !5592, file: !1, line: 676, type: !474)
!5617 = !DILocation(line: 676, column: 20, scope: !5592)
!5618 = !DILocalVariable(name: "min", scope: !5592, file: !1, line: 676, type: !884)
!5619 = !DILocation(line: 676, column: 27, scope: !5592)
!5620 = !DILocalVariable(name: "max", scope: !5592, file: !1, line: 676, type: !884)
!5621 = !DILocation(line: 676, column: 35, scope: !5592)
!5622 = !DILocation(line: 679, column: 11, scope: !5592)
!5623 = !DILocation(line: 679, column: 18, scope: !5592)
!5624 = !DILocation(line: 679, column: 2, scope: !5592)
!5625 = !DILocation(line: 679, column: 9, scope: !5592)
!5626 = !DILocation(line: 680, column: 11, scope: !5592)
!5627 = !DILocation(line: 680, column: 18, scope: !5592)
!5628 = !DILocation(line: 680, column: 2, scope: !5592)
!5629 = !DILocation(line: 680, column: 9, scope: !5592)
!5630 = !DILocation(line: 682, column: 12, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 682, column: 2)
!5632 = !DILocation(line: 682, column: 16, scope: !5631)
!5633 = !DILocation(line: 682, column: 25, scope: !5631)
!5634 = !DILocation(line: 682, column: 10, scope: !5631)
!5635 = !DILocation(line: 682, column: 7, scope: !5631)
!5636 = !DILocation(line: 682, column: 32, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 682, column: 2)
!5638 = !DILocation(line: 682, column: 2, scope: !5631)
!5639 = !DILocalVariable(name: "fv", scope: !5640, file: !1, line: 683, type: !5641)
!5640 = distinct !DILexicalBlock(scope: !5637, file: !1, line: 682, column: 51)
!5641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5642, size: 64, elements: !842)
!5642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!5643 = !DILocation(line: 683, column: 15, scope: !5640)
!5644 = !DILocation(line: 683, column: 23, scope: !5640)
!5645 = !DILocation(line: 683, column: 31, scope: !5640)
!5646 = !DILocation(line: 683, column: 35, scope: !5640)
!5647 = !DILocation(line: 683, column: 39, scope: !5640)
!5648 = !DILocation(line: 683, column: 24, scope: !5640)
!5649 = !DILocation(line: 683, column: 49, scope: !5640)
!5650 = !DILocation(line: 683, column: 53, scope: !5640)
!5651 = !DILocation(line: 683, column: 57, scope: !5640)
!5652 = !DILocation(line: 683, column: 42, scope: !5640)
!5653 = !DILocation(line: 684, column: 18, scope: !5640)
!5654 = !DILocation(line: 684, column: 23, scope: !5640)
!5655 = !DILocation(line: 684, column: 28, scope: !5640)
!5656 = !DILocation(line: 684, column: 3, scope: !5640)
!5657 = !DILocation(line: 685, column: 2, scope: !5640)
!5658 = !DILocation(line: 682, column: 41, scope: !5637)
!5659 = !DILocation(line: 682, column: 45, scope: !5637)
!5660 = !DILocation(line: 682, column: 39, scope: !5637)
!5661 = !DILocation(line: 682, column: 2, scope: !5637)
!5662 = distinct !{!5662, !5638, !5663}
!5663 = !DILocation(line: 685, column: 2, scope: !5631)
!5664 = !DILocation(line: 688, column: 12, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 688, column: 2)
!5666 = !DILocation(line: 688, column: 16, scope: !5665)
!5667 = !DILocation(line: 688, column: 25, scope: !5665)
!5668 = !DILocation(line: 688, column: 10, scope: !5665)
!5669 = !DILocation(line: 688, column: 7, scope: !5665)
!5670 = !DILocation(line: 688, column: 32, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5665, file: !1, line: 688, column: 2)
!5672 = !DILocation(line: 688, column: 2, scope: !5665)
!5673 = !DILocation(line: 689, column: 16, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !1, line: 688, column: 51)
!5675 = !DILocation(line: 689, column: 3, scope: !5674)
!5676 = !DILocation(line: 689, column: 7, scope: !5674)
!5677 = !DILocation(line: 689, column: 11, scope: !5674)
!5678 = !DILocation(line: 689, column: 13, scope: !5674)
!5679 = !DILocation(line: 690, column: 16, scope: !5674)
!5680 = !DILocation(line: 690, column: 3, scope: !5674)
!5681 = !DILocation(line: 690, column: 7, scope: !5674)
!5682 = !DILocation(line: 690, column: 11, scope: !5674)
!5683 = !DILocation(line: 690, column: 13, scope: !5674)
!5684 = !DILocation(line: 691, column: 2, scope: !5674)
!5685 = !DILocation(line: 688, column: 41, scope: !5671)
!5686 = !DILocation(line: 688, column: 45, scope: !5671)
!5687 = !DILocation(line: 688, column: 39, scope: !5671)
!5688 = !DILocation(line: 688, column: 2, scope: !5671)
!5689 = distinct !{!5689, !5672, !5690}
!5690 = !DILocation(line: 691, column: 2, scope: !5665)
!5691 = !DILocation(line: 693, column: 20, scope: !5592)
!5692 = !DILocation(line: 693, column: 29, scope: !5592)
!5693 = !DILocation(line: 693, column: 27, scope: !5592)
!5694 = !DILocation(line: 693, column: 37, scope: !5592)
!5695 = !DILocation(line: 693, column: 19, scope: !5592)
!5696 = !DILocation(line: 693, column: 17, scope: !5592)
!5697 = !DILocation(line: 694, column: 20, scope: !5592)
!5698 = !DILocation(line: 694, column: 29, scope: !5592)
!5699 = !DILocation(line: 694, column: 27, scope: !5592)
!5700 = !DILocation(line: 694, column: 37, scope: !5592)
!5701 = !DILocation(line: 694, column: 19, scope: !5592)
!5702 = !DILocation(line: 694, column: 17, scope: !5592)
!5703 = !DILocation(line: 702, column: 6, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 702, column: 6)
!5705 = !DILocation(line: 702, column: 23, scope: !5704)
!5706 = !DILocation(line: 702, column: 21, scope: !5704)
!5707 = !DILocation(line: 702, column: 6, scope: !5592)
!5708 = !DILocalVariable(name: "headery_margin_max", scope: !5709, file: !1, line: 703, type: !3583)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 702, column: 34)
!5710 = !DILocation(line: 703, column: 13, scope: !5709)
!5711 = !DILocation(line: 703, column: 34, scope: !5709)
!5712 = !DILocation(line: 703, column: 47, scope: !5709)
!5713 = !DILocation(line: 704, column: 13, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 704, column: 3)
!5715 = !DILocation(line: 704, column: 17, scope: !5714)
!5716 = !DILocation(line: 704, column: 26, scope: !5714)
!5717 = !DILocation(line: 704, column: 11, scope: !5714)
!5718 = !DILocation(line: 704, column: 8, scope: !5714)
!5719 = !DILocation(line: 704, column: 33, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5714, file: !1, line: 704, column: 3)
!5721 = !DILocation(line: 704, column: 3, scope: !5714)
!5722 = !DILocalVariable(name: "ar", scope: !5723, file: !1, line: 705, type: !5056)
!5723 = distinct !DILexicalBlock(scope: !5720, file: !1, line: 704, column: 52)
!5724 = !DILocation(line: 705, column: 13, scope: !5723)
!5725 = !DILocation(line: 705, column: 44, scope: !5723)
!5726 = !DILocation(line: 705, column: 18, scope: !5723)
!5727 = !DILocation(line: 706, column: 4, scope: !5723)
!5728 = !DILocation(line: 706, column: 8, scope: !5723)
!5729 = !DILocation(line: 706, column: 13, scope: !5723)
!5730 = !DILocation(line: 708, column: 8, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5723, file: !1, line: 708, column: 8)
!5732 = !DILocation(line: 708, column: 11, scope: !5731)
!5733 = !DILocation(line: 708, column: 16, scope: !5731)
!5734 = !DILocation(line: 708, column: 20, scope: !5731)
!5735 = !DILocation(line: 708, column: 25, scope: !5731)
!5736 = !DILocation(line: 708, column: 8, scope: !5723)
!5737 = !DILocation(line: 709, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !1, line: 709, column: 9)
!5739 = distinct !DILexicalBlock(scope: !5731, file: !1, line: 708, column: 45)
!5740 = !DILocation(line: 709, column: 13, scope: !5738)
!5741 = !DILocation(line: 709, column: 17, scope: !5738)
!5742 = !DILocation(line: 709, column: 21, scope: !5738)
!5743 = !DILocation(line: 709, column: 26, scope: !5738)
!5744 = !DILocation(line: 709, column: 41, scope: !5738)
!5745 = !DILocation(line: 709, column: 23, scope: !5738)
!5746 = !DILocation(line: 709, column: 9, scope: !5739)
!5747 = !DILocation(line: 710, column: 11, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !1, line: 710, column: 10)
!5749 = distinct !DILexicalBlock(scope: !5738, file: !1, line: 709, column: 46)
!5750 = !DILocation(line: 710, column: 15, scope: !5748)
!5751 = !DILocation(line: 710, column: 19, scope: !5748)
!5752 = !DILocation(line: 710, column: 23, scope: !5748)
!5753 = !DILocation(line: 710, column: 27, scope: !5748)
!5754 = !DILocation(line: 710, column: 31, scope: !5748)
!5755 = !DILocation(line: 710, column: 35, scope: !5748)
!5756 = !DILocation(line: 710, column: 39, scope: !5748)
!5757 = !DILocation(line: 710, column: 25, scope: !5748)
!5758 = !DILocation(line: 710, column: 44, scope: !5748)
!5759 = !DILocation(line: 710, column: 42, scope: !5748)
!5760 = !DILocation(line: 710, column: 10, scope: !5749)
!5761 = !DILocation(line: 711, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 710, column: 64)
!5763 = !DILocation(line: 711, column: 11, scope: !5762)
!5764 = !DILocation(line: 711, column: 16, scope: !5762)
!5765 = !DILocation(line: 712, column: 6, scope: !5762)
!5766 = !DILocation(line: 713, column: 5, scope: !5749)
!5767 = !DILocation(line: 714, column: 14, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5738, file: !1, line: 714, column: 14)
!5769 = !DILocation(line: 714, column: 18, scope: !5768)
!5770 = !DILocation(line: 714, column: 22, scope: !5768)
!5771 = !DILocation(line: 714, column: 26, scope: !5768)
!5772 = !DILocation(line: 714, column: 28, scope: !5768)
!5773 = !DILocation(line: 714, column: 14, scope: !5738)
!5774 = !DILocation(line: 715, column: 11, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !1, line: 715, column: 10)
!5776 = distinct !DILexicalBlock(scope: !5768, file: !1, line: 714, column: 34)
!5777 = !DILocation(line: 715, column: 15, scope: !5775)
!5778 = !DILocation(line: 715, column: 19, scope: !5775)
!5779 = !DILocation(line: 715, column: 23, scope: !5775)
!5780 = !DILocation(line: 715, column: 27, scope: !5775)
!5781 = !DILocation(line: 715, column: 31, scope: !5775)
!5782 = !DILocation(line: 715, column: 35, scope: !5775)
!5783 = !DILocation(line: 715, column: 39, scope: !5775)
!5784 = !DILocation(line: 715, column: 25, scope: !5775)
!5785 = !DILocation(line: 715, column: 44, scope: !5775)
!5786 = !DILocation(line: 715, column: 42, scope: !5775)
!5787 = !DILocation(line: 715, column: 10, scope: !5776)
!5788 = !DILocation(line: 716, column: 7, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5775, file: !1, line: 715, column: 64)
!5790 = !DILocation(line: 716, column: 11, scope: !5789)
!5791 = !DILocation(line: 716, column: 16, scope: !5789)
!5792 = !DILocation(line: 717, column: 6, scope: !5789)
!5793 = !DILocation(line: 718, column: 5, scope: !5776)
!5794 = !DILocation(line: 719, column: 4, scope: !5739)
!5795 = !DILocation(line: 720, column: 3, scope: !5723)
!5796 = !DILocation(line: 704, column: 42, scope: !5720)
!5797 = !DILocation(line: 704, column: 46, scope: !5720)
!5798 = !DILocation(line: 704, column: 40, scope: !5720)
!5799 = !DILocation(line: 704, column: 3, scope: !5720)
!5800 = distinct !{!5800, !5721, !5801}
!5801 = !DILocation(line: 720, column: 3, scope: !5714)
!5802 = !DILocation(line: 721, column: 2, scope: !5709)
!5803 = !DILocation(line: 725, column: 6, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 725, column: 6)
!5805 = !DILocation(line: 725, column: 24, scope: !5804)
!5806 = !DILocation(line: 725, column: 21, scope: !5804)
!5807 = !DILocation(line: 725, column: 34, scope: !5804)
!5808 = !DILocation(line: 725, column: 37, scope: !5804)
!5809 = !DILocation(line: 725, column: 55, scope: !5804)
!5810 = !DILocation(line: 725, column: 52, scope: !5804)
!5811 = !DILocation(line: 725, column: 6, scope: !5592)
!5812 = !DILocation(line: 726, column: 18, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5804, file: !1, line: 725, column: 66)
!5814 = !DILocation(line: 726, column: 11, scope: !5813)
!5815 = !DILocation(line: 726, column: 28, scope: !5813)
!5816 = !DILocation(line: 726, column: 43, scope: !5813)
!5817 = !DILocation(line: 726, column: 36, scope: !5813)
!5818 = !DILocation(line: 726, column: 58, scope: !5813)
!5819 = !DILocation(line: 726, column: 33, scope: !5813)
!5820 = !DILocation(line: 726, column: 8, scope: !5813)
!5821 = !DILocation(line: 727, column: 18, scope: !5813)
!5822 = !DILocation(line: 727, column: 11, scope: !5813)
!5823 = !DILocation(line: 727, column: 28, scope: !5813)
!5824 = !DILocation(line: 727, column: 43, scope: !5813)
!5825 = !DILocation(line: 727, column: 36, scope: !5813)
!5826 = !DILocation(line: 727, column: 58, scope: !5813)
!5827 = !DILocation(line: 727, column: 33, scope: !5813)
!5828 = !DILocation(line: 727, column: 8, scope: !5813)
!5829 = !DILocation(line: 730, column: 13, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5813, file: !1, line: 730, column: 3)
!5831 = !DILocation(line: 730, column: 17, scope: !5830)
!5832 = !DILocation(line: 730, column: 26, scope: !5830)
!5833 = !DILocation(line: 730, column: 11, scope: !5830)
!5834 = !DILocation(line: 730, column: 8, scope: !5830)
!5835 = !DILocation(line: 730, column: 33, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5830, file: !1, line: 730, column: 3)
!5837 = !DILocation(line: 730, column: 3, scope: !5830)
!5838 = !DILocation(line: 733, column: 20, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5836, file: !1, line: 730, column: 52)
!5840 = !DILocation(line: 733, column: 24, scope: !5839)
!5841 = !DILocation(line: 733, column: 28, scope: !5839)
!5842 = !DILocation(line: 733, column: 13, scope: !5839)
!5843 = !DILocation(line: 733, column: 33, scope: !5839)
!5844 = !DILocation(line: 733, column: 31, scope: !5839)
!5845 = !DILocation(line: 733, column: 10, scope: !5839)
!5846 = !DILocation(line: 734, column: 24, scope: !5839)
!5847 = !DILocation(line: 734, column: 30, scope: !5839)
!5848 = !DILocation(line: 734, column: 16, scope: !5839)
!5849 = !DILocation(line: 734, column: 4, scope: !5839)
!5850 = !DILocation(line: 734, column: 8, scope: !5839)
!5851 = !DILocation(line: 734, column: 12, scope: !5839)
!5852 = !DILocation(line: 734, column: 14, scope: !5839)
!5853 = !DILocation(line: 738, column: 4, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !1, line: 738, column: 4)
!5855 = distinct !DILexicalBlock(scope: !5839, file: !1, line: 738, column: 4)
!5856 = !DILocation(line: 738, column: 4, scope: !5855)
!5857 = !DILocation(line: 738, column: 4, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !1, line: 738, column: 4)
!5859 = !DILocation(line: 740, column: 20, scope: !5839)
!5860 = !DILocation(line: 740, column: 24, scope: !5839)
!5861 = !DILocation(line: 740, column: 28, scope: !5839)
!5862 = !DILocation(line: 740, column: 13, scope: !5839)
!5863 = !DILocation(line: 740, column: 33, scope: !5839)
!5864 = !DILocation(line: 740, column: 31, scope: !5839)
!5865 = !DILocation(line: 740, column: 10, scope: !5839)
!5866 = !DILocation(line: 741, column: 24, scope: !5839)
!5867 = !DILocation(line: 741, column: 30, scope: !5839)
!5868 = !DILocation(line: 741, column: 16, scope: !5839)
!5869 = !DILocation(line: 741, column: 4, scope: !5839)
!5870 = !DILocation(line: 741, column: 8, scope: !5839)
!5871 = !DILocation(line: 741, column: 12, scope: !5839)
!5872 = !DILocation(line: 741, column: 14, scope: !5839)
!5873 = !DILocation(line: 745, column: 4, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5875, file: !1, line: 745, column: 4)
!5875 = distinct !DILexicalBlock(scope: !5839, file: !1, line: 745, column: 4)
!5876 = !DILocation(line: 745, column: 4, scope: !5875)
!5877 = !DILocation(line: 745, column: 4, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 745, column: 4)
!5879 = !DILocation(line: 746, column: 3, scope: !5839)
!5880 = !DILocation(line: 730, column: 42, scope: !5836)
!5881 = !DILocation(line: 730, column: 46, scope: !5836)
!5882 = !DILocation(line: 730, column: 40, scope: !5836)
!5883 = !DILocation(line: 730, column: 3, scope: !5836)
!5884 = distinct !{!5884, !5837, !5885}
!5885 = !DILocation(line: 746, column: 3, scope: !5830)
!5886 = !DILocation(line: 747, column: 2, scope: !5813)
!5887 = !DILocation(line: 751, column: 6, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 751, column: 6)
!5889 = !DILocation(line: 751, column: 23, scope: !5888)
!5890 = !DILocation(line: 751, column: 21, scope: !5888)
!5891 = !DILocation(line: 751, column: 6, scope: !5592)
!5892 = !DILocation(line: 752, column: 13, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !1, line: 752, column: 3)
!5894 = distinct !DILexicalBlock(scope: !5888, file: !1, line: 751, column: 34)
!5895 = !DILocation(line: 752, column: 17, scope: !5893)
!5896 = !DILocation(line: 752, column: 26, scope: !5893)
!5897 = !DILocation(line: 752, column: 11, scope: !5893)
!5898 = !DILocation(line: 752, column: 8, scope: !5893)
!5899 = !DILocation(line: 752, column: 33, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5893, file: !1, line: 752, column: 3)
!5901 = !DILocation(line: 752, column: 3, scope: !5893)
!5902 = !DILocalVariable(name: "se", scope: !5903, file: !1, line: 753, type: !3050)
!5903 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 752, column: 52)
!5904 = !DILocation(line: 753, column: 13, scope: !5903)
!5905 = !DILocation(line: 755, column: 8, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5903, file: !1, line: 755, column: 8)
!5907 = !DILocation(line: 755, column: 12, scope: !5906)
!5908 = !DILocation(line: 755, column: 17, scope: !5906)
!5909 = !DILocation(line: 755, column: 8, scope: !5903)
!5910 = !DILocation(line: 756, column: 5, scope: !5906)
!5911 = !DILocation(line: 758, column: 8, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5903, file: !1, line: 758, column: 8)
!5913 = !DILocation(line: 758, column: 12, scope: !5912)
!5914 = !DILocation(line: 758, column: 18, scope: !5912)
!5915 = !DILocation(line: 758, column: 22, scope: !5912)
!5916 = !DILocation(line: 758, column: 15, scope: !5912)
!5917 = !DILocation(line: 758, column: 8, scope: !5903)
!5918 = !DILocation(line: 759, column: 5, scope: !5912)
!5919 = !DILocation(line: 762, column: 8, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5903, file: !1, line: 762, column: 8)
!5921 = !DILocation(line: 762, column: 12, scope: !5920)
!5922 = !DILocation(line: 762, column: 17, scope: !5920)
!5923 = !DILocation(line: 762, column: 8, scope: !5903)
!5924 = !DILocalVariable(name: "yval", scope: !5925, file: !1, line: 764, type: !3583)
!5925 = distinct !DILexicalBlock(scope: !5920, file: !1, line: 762, column: 30)
!5926 = !DILocation(line: 764, column: 15, scope: !5925)
!5927 = !DILocation(line: 764, column: 22, scope: !5925)
!5928 = !DILocation(line: 764, column: 26, scope: !5925)
!5929 = !DILocation(line: 764, column: 30, scope: !5925)
!5930 = !DILocation(line: 764, column: 34, scope: !5925)
!5931 = !DILocation(line: 764, column: 38, scope: !5925)
!5932 = !DILocation(line: 764, column: 36, scope: !5925)
!5933 = !DILocation(line: 765, column: 26, scope: !5925)
!5934 = !DILocation(line: 765, column: 30, scope: !5925)
!5935 = !DILocation(line: 765, column: 34, scope: !5925)
!5936 = !DILocation(line: 765, column: 38, scope: !5925)
!5937 = !DILocation(line: 765, column: 42, scope: !5925)
!5938 = !DILocation(line: 765, column: 10, scope: !5925)
!5939 = !DILocation(line: 765, column: 8, scope: !5925)
!5940 = !DILocation(line: 766, column: 30, scope: !5925)
!5941 = !DILocation(line: 766, column: 34, scope: !5925)
!5942 = !DILocation(line: 766, column: 5, scope: !5925)
!5943 = !DILocation(line: 767, column: 15, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5925, file: !1, line: 767, column: 5)
!5945 = !DILocation(line: 767, column: 19, scope: !5944)
!5946 = !DILocation(line: 767, column: 28, scope: !5944)
!5947 = !DILocation(line: 767, column: 13, scope: !5944)
!5948 = !DILocation(line: 767, column: 10, scope: !5944)
!5949 = !DILocation(line: 767, column: 35, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5944, file: !1, line: 767, column: 5)
!5951 = !DILocation(line: 767, column: 5, scope: !5944)
!5952 = !DILocation(line: 768, column: 10, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !1, line: 768, column: 10)
!5954 = distinct !DILexicalBlock(scope: !5950, file: !1, line: 767, column: 54)
!5955 = !DILocation(line: 768, column: 16, scope: !5953)
!5956 = !DILocation(line: 768, column: 20, scope: !5953)
!5957 = !DILocation(line: 768, column: 13, scope: !5953)
!5958 = !DILocation(line: 768, column: 23, scope: !5953)
!5959 = !DILocation(line: 768, column: 26, scope: !5953)
!5960 = !DILocation(line: 768, column: 32, scope: !5953)
!5961 = !DILocation(line: 768, column: 36, scope: !5953)
!5962 = !DILocation(line: 768, column: 29, scope: !5953)
!5963 = !DILocation(line: 768, column: 10, scope: !5954)
!5964 = !DILocation(line: 769, column: 11, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !1, line: 769, column: 11)
!5966 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 768, column: 40)
!5967 = !DILocation(line: 769, column: 15, scope: !5965)
!5968 = !DILocation(line: 769, column: 11, scope: !5966)
!5969 = !DILocation(line: 770, column: 20, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !1, line: 769, column: 21)
!5971 = !DILocation(line: 770, column: 8, scope: !5970)
!5972 = !DILocation(line: 770, column: 12, scope: !5970)
!5973 = !DILocation(line: 770, column: 16, scope: !5970)
!5974 = !DILocation(line: 770, column: 18, scope: !5970)
!5975 = !DILocation(line: 771, column: 7, scope: !5970)
!5976 = !DILocation(line: 772, column: 6, scope: !5966)
!5977 = !DILocation(line: 773, column: 5, scope: !5954)
!5978 = !DILocation(line: 767, column: 44, scope: !5950)
!5979 = !DILocation(line: 767, column: 48, scope: !5950)
!5980 = !DILocation(line: 767, column: 42, scope: !5950)
!5981 = !DILocation(line: 767, column: 5, scope: !5950)
!5982 = distinct !{!5982, !5951, !5983}
!5983 = !DILocation(line: 773, column: 5, scope: !5944)
!5984 = !DILocation(line: 774, column: 4, scope: !5925)
!5985 = !DILocalVariable(name: "yval", scope: !5986, file: !1, line: 777, type: !3583)
!5986 = distinct !DILexicalBlock(scope: !5920, file: !1, line: 775, column: 9)
!5987 = !DILocation(line: 777, column: 15, scope: !5986)
!5988 = !DILocation(line: 777, column: 22, scope: !5986)
!5989 = !DILocation(line: 777, column: 26, scope: !5986)
!5990 = !DILocation(line: 777, column: 30, scope: !5986)
!5991 = !DILocation(line: 777, column: 34, scope: !5986)
!5992 = !DILocation(line: 777, column: 38, scope: !5986)
!5993 = !DILocation(line: 777, column: 36, scope: !5986)
!5994 = !DILocation(line: 778, column: 26, scope: !5986)
!5995 = !DILocation(line: 778, column: 30, scope: !5986)
!5996 = !DILocation(line: 778, column: 34, scope: !5986)
!5997 = !DILocation(line: 778, column: 38, scope: !5986)
!5998 = !DILocation(line: 778, column: 42, scope: !5986)
!5999 = !DILocation(line: 778, column: 10, scope: !5986)
!6000 = !DILocation(line: 778, column: 8, scope: !5986)
!6001 = !DILocation(line: 779, column: 30, scope: !5986)
!6002 = !DILocation(line: 779, column: 34, scope: !5986)
!6003 = !DILocation(line: 779, column: 5, scope: !5986)
!6004 = !DILocation(line: 780, column: 15, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5986, file: !1, line: 780, column: 5)
!6006 = !DILocation(line: 780, column: 19, scope: !6005)
!6007 = !DILocation(line: 780, column: 28, scope: !6005)
!6008 = !DILocation(line: 780, column: 13, scope: !6005)
!6009 = !DILocation(line: 780, column: 10, scope: !6005)
!6010 = !DILocation(line: 780, column: 35, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6005, file: !1, line: 780, column: 5)
!6012 = !DILocation(line: 780, column: 5, scope: !6005)
!6013 = !DILocation(line: 781, column: 10, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6015, file: !1, line: 781, column: 10)
!6015 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 780, column: 54)
!6016 = !DILocation(line: 781, column: 16, scope: !6014)
!6017 = !DILocation(line: 781, column: 20, scope: !6014)
!6018 = !DILocation(line: 781, column: 13, scope: !6014)
!6019 = !DILocation(line: 781, column: 23, scope: !6014)
!6020 = !DILocation(line: 781, column: 26, scope: !6014)
!6021 = !DILocation(line: 781, column: 32, scope: !6014)
!6022 = !DILocation(line: 781, column: 36, scope: !6014)
!6023 = !DILocation(line: 781, column: 29, scope: !6014)
!6024 = !DILocation(line: 781, column: 10, scope: !6015)
!6025 = !DILocation(line: 782, column: 11, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !1, line: 782, column: 11)
!6027 = distinct !DILexicalBlock(scope: !6014, file: !1, line: 781, column: 40)
!6028 = !DILocation(line: 782, column: 15, scope: !6026)
!6029 = !DILocation(line: 782, column: 11, scope: !6027)
!6030 = !DILocation(line: 783, column: 20, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 782, column: 21)
!6032 = !DILocation(line: 783, column: 8, scope: !6031)
!6033 = !DILocation(line: 783, column: 12, scope: !6031)
!6034 = !DILocation(line: 783, column: 16, scope: !6031)
!6035 = !DILocation(line: 783, column: 18, scope: !6031)
!6036 = !DILocation(line: 784, column: 7, scope: !6031)
!6037 = !DILocation(line: 785, column: 6, scope: !6027)
!6038 = !DILocation(line: 786, column: 5, scope: !6015)
!6039 = !DILocation(line: 780, column: 44, scope: !6011)
!6040 = !DILocation(line: 780, column: 48, scope: !6011)
!6041 = !DILocation(line: 780, column: 42, scope: !6011)
!6042 = !DILocation(line: 780, column: 5, scope: !6011)
!6043 = distinct !{!6043, !6012, !6044}
!6044 = !DILocation(line: 786, column: 5, scope: !6005)
!6045 = !DILocation(line: 788, column: 3, scope: !5903)
!6046 = !DILocation(line: 752, column: 42, scope: !5900)
!6047 = !DILocation(line: 752, column: 46, scope: !5900)
!6048 = !DILocation(line: 752, column: 40, scope: !5900)
!6049 = !DILocation(line: 752, column: 3, scope: !5900)
!6050 = distinct !{!6050, !5901, !6051}
!6051 = !DILocation(line: 788, column: 3, scope: !5893)
!6052 = !DILocation(line: 789, column: 2, scope: !5894)
!6053 = !DILocation(line: 801, column: 12, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 801, column: 2)
!6055 = !DILocation(line: 801, column: 16, scope: !6054)
!6056 = !DILocation(line: 801, column: 25, scope: !6054)
!6057 = !DILocation(line: 801, column: 10, scope: !6054)
!6058 = !DILocation(line: 801, column: 7, scope: !6054)
!6059 = !DILocation(line: 801, column: 32, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6054, file: !1, line: 801, column: 2)
!6061 = !DILocation(line: 801, column: 2, scope: !6054)
!6062 = !DILocalVariable(name: "headery", scope: !6063, file: !1, line: 802, type: !119)
!6063 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 801, column: 51)
!6064 = !DILocation(line: 802, column: 7, scope: !6063)
!6065 = !DILocation(line: 802, column: 17, scope: !6063)
!6066 = !DILocation(line: 805, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 805, column: 7)
!6068 = !DILocation(line: 805, column: 11, scope: !6067)
!6069 = !DILocation(line: 805, column: 15, scope: !6067)
!6070 = !DILocation(line: 805, column: 19, scope: !6067)
!6071 = !DILocation(line: 805, column: 21, scope: !6067)
!6072 = !DILocation(line: 805, column: 7, scope: !6063)
!6073 = !DILocation(line: 806, column: 17, scope: !6067)
!6074 = !DILocation(line: 806, column: 12, scope: !6067)
!6075 = !DILocation(line: 806, column: 4, scope: !6067)
!6076 = !DILocation(line: 807, column: 7, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 807, column: 7)
!6078 = !DILocation(line: 807, column: 11, scope: !6077)
!6079 = !DILocation(line: 807, column: 15, scope: !6077)
!6080 = !DILocation(line: 807, column: 19, scope: !6077)
!6081 = !DILocation(line: 807, column: 23, scope: !6077)
!6082 = !DILocation(line: 807, column: 33, scope: !6077)
!6083 = !DILocation(line: 807, column: 21, scope: !6077)
!6084 = !DILocation(line: 807, column: 7, scope: !6063)
!6085 = !DILocation(line: 808, column: 17, scope: !6077)
!6086 = !DILocation(line: 808, column: 12, scope: !6077)
!6087 = !DILocation(line: 808, column: 4, scope: !6077)
!6088 = !DILocation(line: 810, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 810, column: 7)
!6090 = !DILocation(line: 810, column: 11, scope: !6089)
!6091 = !DILocation(line: 810, column: 15, scope: !6089)
!6092 = !DILocation(line: 810, column: 19, scope: !6089)
!6093 = !DILocation(line: 810, column: 23, scope: !6089)
!6094 = !DILocation(line: 810, column: 27, scope: !6089)
!6095 = !DILocation(line: 810, column: 31, scope: !6089)
!6096 = !DILocation(line: 810, column: 35, scope: !6089)
!6097 = !DILocation(line: 810, column: 21, scope: !6089)
!6098 = !DILocation(line: 810, column: 37, scope: !6089)
!6099 = !DILocation(line: 810, column: 43, scope: !6089)
!6100 = !DILocation(line: 810, column: 41, scope: !6089)
!6101 = !DILocation(line: 810, column: 7, scope: !6063)
!6102 = !DILocalVariable(name: "se", scope: !6103, file: !1, line: 812, type: !3050)
!6103 = distinct !DILexicalBlock(scope: !6089, file: !1, line: 810, column: 52)
!6104 = !DILocation(line: 812, column: 13, scope: !6103)
!6105 = !DILocation(line: 812, column: 34, scope: !6103)
!6106 = !DILocation(line: 812, column: 38, scope: !6103)
!6107 = !DILocation(line: 812, column: 42, scope: !6103)
!6108 = !DILocation(line: 812, column: 46, scope: !6103)
!6109 = !DILocation(line: 812, column: 50, scope: !6103)
!6110 = !DILocation(line: 812, column: 18, scope: !6103)
!6111 = !DILocation(line: 813, column: 8, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6103, file: !1, line: 813, column: 8)
!6113 = !DILocation(line: 813, column: 11, scope: !6112)
!6114 = !DILocation(line: 813, column: 14, scope: !6112)
!6115 = !DILocation(line: 813, column: 18, scope: !6112)
!6116 = !DILocation(line: 813, column: 24, scope: !6112)
!6117 = !DILocation(line: 813, column: 28, scope: !6112)
!6118 = !DILocation(line: 813, column: 21, scope: !6112)
!6119 = !DILocation(line: 813, column: 8, scope: !6103)
!6120 = !DILocalVariable(name: "yval", scope: !6121, file: !1, line: 814, type: !119)
!6121 = distinct !DILexicalBlock(scope: !6112, file: !1, line: 813, column: 32)
!6122 = !DILocation(line: 814, column: 9, scope: !6121)
!6123 = !DILocation(line: 816, column: 30, scope: !6121)
!6124 = !DILocation(line: 816, column: 34, scope: !6121)
!6125 = !DILocation(line: 816, column: 5, scope: !6121)
!6126 = !DILocation(line: 819, column: 12, scope: !6121)
!6127 = !DILocation(line: 819, column: 16, scope: !6121)
!6128 = !DILocation(line: 819, column: 20, scope: !6121)
!6129 = !DILocation(line: 819, column: 24, scope: !6121)
!6130 = !DILocation(line: 819, column: 28, scope: !6121)
!6131 = !DILocation(line: 819, column: 26, scope: !6121)
!6132 = !DILocation(line: 819, column: 36, scope: !6121)
!6133 = !DILocation(line: 819, column: 10, scope: !6121)
!6134 = !DILocation(line: 820, column: 15, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 820, column: 5)
!6136 = !DILocation(line: 820, column: 19, scope: !6135)
!6137 = !DILocation(line: 820, column: 28, scope: !6135)
!6138 = !DILocation(line: 820, column: 13, scope: !6135)
!6139 = !DILocation(line: 820, column: 10, scope: !6135)
!6140 = !DILocation(line: 820, column: 35, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6135, file: !1, line: 820, column: 5)
!6142 = !DILocation(line: 820, column: 5, scope: !6135)
!6143 = !DILocation(line: 822, column: 10, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !1, line: 822, column: 10)
!6145 = distinct !DILexicalBlock(scope: !6141, file: !1, line: 820, column: 54)
!6146 = !DILocation(line: 822, column: 16, scope: !6144)
!6147 = !DILocation(line: 822, column: 20, scope: !6144)
!6148 = !DILocation(line: 822, column: 13, scope: !6144)
!6149 = !DILocation(line: 822, column: 23, scope: !6144)
!6150 = !DILocation(line: 822, column: 26, scope: !6144)
!6151 = !DILocation(line: 822, column: 32, scope: !6144)
!6152 = !DILocation(line: 822, column: 36, scope: !6144)
!6153 = !DILocation(line: 822, column: 29, scope: !6144)
!6154 = !DILocation(line: 822, column: 10, scope: !6145)
!6155 = !DILocation(line: 823, column: 11, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 823, column: 11)
!6157 = distinct !DILexicalBlock(scope: !6144, file: !1, line: 822, column: 40)
!6158 = !DILocation(line: 823, column: 15, scope: !6156)
!6159 = !DILocation(line: 823, column: 11, scope: !6157)
!6160 = !DILocation(line: 824, column: 20, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6156, file: !1, line: 823, column: 21)
!6162 = !DILocation(line: 824, column: 8, scope: !6161)
!6163 = !DILocation(line: 824, column: 12, scope: !6161)
!6164 = !DILocation(line: 824, column: 16, scope: !6161)
!6165 = !DILocation(line: 824, column: 18, scope: !6161)
!6166 = !DILocation(line: 825, column: 7, scope: !6161)
!6167 = !DILocation(line: 826, column: 6, scope: !6157)
!6168 = !DILocation(line: 827, column: 5, scope: !6145)
!6169 = !DILocation(line: 820, column: 44, scope: !6141)
!6170 = !DILocation(line: 820, column: 48, scope: !6141)
!6171 = !DILocation(line: 820, column: 42, scope: !6141)
!6172 = !DILocation(line: 820, column: 5, scope: !6141)
!6173 = distinct !{!6173, !6142, !6174}
!6174 = !DILocation(line: 827, column: 5, scope: !6135)
!6175 = !DILocation(line: 828, column: 4, scope: !6121)
!6176 = !DILocation(line: 829, column: 3, scope: !6103)
!6177 = !DILocation(line: 830, column: 2, scope: !6063)
!6178 = !DILocation(line: 801, column: 41, scope: !6060)
!6179 = !DILocation(line: 801, column: 45, scope: !6060)
!6180 = !DILocation(line: 801, column: 39, scope: !6060)
!6181 = !DILocation(line: 801, column: 2, scope: !6060)
!6182 = distinct !{!6182, !6061, !6183}
!6183 = !DILocation(line: 830, column: 2, scope: !6054)
!6184 = !DILocation(line: 832, column: 1, scope: !5592)
!6185 = distinct !DISubprogram(name: "ED_screens_initialize", scope: !1, file: !1, line: 1247, type: !6186, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{null, !5444}
!6188 = !DILocalVariable(name: "wm", arg: 1, scope: !6185, file: !1, line: 1247, type: !5444)
!6189 = !DILocation(line: 1247, column: 45, scope: !6185)
!6190 = !DILocalVariable(name: "win", scope: !6185, file: !1, line: 1249, type: !4253)
!6191 = !DILocation(line: 1249, column: 12, scope: !6185)
!6192 = !DILocation(line: 1251, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6185, file: !1, line: 1251, column: 2)
!6194 = !DILocation(line: 1251, column: 17, scope: !6193)
!6195 = !DILocation(line: 1251, column: 25, scope: !6193)
!6196 = !DILocation(line: 1251, column: 11, scope: !6193)
!6197 = !DILocation(line: 1251, column: 7, scope: !6193)
!6198 = !DILocation(line: 1251, column: 32, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 1251, column: 2)
!6200 = !DILocation(line: 1251, column: 2, scope: !6193)
!6201 = !DILocation(line: 1253, column: 7, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !1, line: 1253, column: 7)
!6203 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 1251, column: 54)
!6204 = !DILocation(line: 1253, column: 12, scope: !6202)
!6205 = !DILocation(line: 1253, column: 19, scope: !6202)
!6206 = !DILocation(line: 1253, column: 7, scope: !6203)
!6207 = !DILocation(line: 1254, column: 20, scope: !6202)
!6208 = !DILocation(line: 1254, column: 26, scope: !6202)
!6209 = !DILocation(line: 1254, column: 33, scope: !6202)
!6210 = !DILocation(line: 1254, column: 18, scope: !6202)
!6211 = !DILocation(line: 1254, column: 4, scope: !6202)
!6212 = !DILocation(line: 1254, column: 9, scope: !6202)
!6213 = !DILocation(line: 1254, column: 16, scope: !6202)
!6214 = !DILocation(line: 1256, column: 21, scope: !6203)
!6215 = !DILocation(line: 1256, column: 25, scope: !6203)
!6216 = !DILocation(line: 1256, column: 3, scope: !6203)
!6217 = !DILocation(line: 1257, column: 2, scope: !6203)
!6218 = !DILocation(line: 1251, column: 43, scope: !6199)
!6219 = !DILocation(line: 1251, column: 48, scope: !6199)
!6220 = !DILocation(line: 1251, column: 41, scope: !6199)
!6221 = !DILocation(line: 1251, column: 2, scope: !6199)
!6222 = distinct !{!6222, !6200, !6223}
!6223 = !DILocation(line: 1257, column: 2, scope: !6193)
!6224 = !DILocation(line: 1258, column: 1, scope: !6185)
!6225 = distinct !DISubprogram(name: "ED_region_exit", scope: !1, file: !1, line: 1263, type: !6226, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{null, !4448, !5056}
!6228 = !DILocalVariable(name: "C", arg: 1, scope: !6225, file: !1, line: 1263, type: !4448)
!6229 = !DILocation(line: 1263, column: 31, scope: !6225)
!6230 = !DILocalVariable(name: "ar", arg: 2, scope: !6225, file: !1, line: 1263, type: !5056)
!6231 = !DILocation(line: 1263, column: 43, scope: !6225)
!6232 = !DILocalVariable(name: "wm", scope: !6225, file: !1, line: 1265, type: !5444)
!6233 = !DILocation(line: 1265, column: 19, scope: !6225)
!6234 = !DILocation(line: 1265, column: 39, scope: !6225)
!6235 = !DILocation(line: 1265, column: 24, scope: !6225)
!6236 = !DILocalVariable(name: "prevar", scope: !6225, file: !1, line: 1266, type: !5056)
!6237 = !DILocation(line: 1266, column: 11, scope: !6225)
!6238 = !DILocation(line: 1266, column: 34, scope: !6225)
!6239 = !DILocation(line: 1266, column: 20, scope: !6225)
!6240 = !DILocation(line: 1268, column: 6, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 1268, column: 6)
!6242 = !DILocation(line: 1268, column: 10, scope: !6241)
!6243 = !DILocation(line: 1268, column: 15, scope: !6241)
!6244 = !DILocation(line: 1268, column: 18, scope: !6241)
!6245 = !DILocation(line: 1268, column: 22, scope: !6241)
!6246 = !DILocation(line: 1268, column: 28, scope: !6241)
!6247 = !DILocation(line: 1268, column: 6, scope: !6225)
!6248 = !DILocation(line: 1269, column: 3, scope: !6241)
!6249 = !DILocation(line: 1269, column: 7, scope: !6241)
!6250 = !DILocation(line: 1269, column: 13, scope: !6241)
!6251 = !DILocation(line: 1269, column: 18, scope: !6241)
!6252 = !DILocation(line: 1269, column: 22, scope: !6241)
!6253 = !DILocation(line: 1271, column: 20, scope: !6225)
!6254 = !DILocation(line: 1271, column: 23, scope: !6225)
!6255 = !DILocation(line: 1271, column: 2, scope: !6225)
!6256 = !DILocation(line: 1272, column: 27, scope: !6225)
!6257 = !DILocation(line: 1272, column: 31, scope: !6225)
!6258 = !DILocation(line: 1272, column: 35, scope: !6225)
!6259 = !DILocation(line: 1272, column: 2, scope: !6225)
!6260 = !DILocation(line: 1273, column: 6, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 1273, column: 6)
!6262 = !DILocation(line: 1273, column: 10, scope: !6261)
!6263 = !DILocation(line: 1273, column: 6, scope: !6225)
!6264 = !DILocation(line: 1274, column: 36, scope: !6261)
!6265 = !DILocation(line: 1274, column: 22, scope: !6261)
!6266 = !DILocation(line: 1274, column: 40, scope: !6261)
!6267 = !DILocation(line: 1274, column: 44, scope: !6261)
!6268 = !DILocation(line: 1274, column: 3, scope: !6261)
!6269 = !DILocation(line: 1275, column: 2, scope: !6225)
!6270 = !DILocation(line: 1275, column: 6, scope: !6225)
!6271 = !DILocation(line: 1275, column: 13, scope: !6225)
!6272 = !DILocation(line: 1277, column: 6, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 1277, column: 6)
!6274 = !DILocation(line: 1277, column: 10, scope: !6273)
!6275 = !DILocation(line: 1277, column: 6, scope: !6225)
!6276 = !DILocation(line: 1278, column: 3, scope: !6273)
!6277 = !DILocation(line: 1278, column: 13, scope: !6273)
!6278 = !DILocation(line: 1278, column: 17, scope: !6273)
!6279 = !DILocation(line: 1279, column: 2, scope: !6225)
!6280 = !DILocation(line: 1279, column: 6, scope: !6225)
!6281 = !DILocation(line: 1279, column: 16, scope: !6225)
!6282 = !DILocation(line: 1281, column: 6, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 1281, column: 6)
!6284 = !DILocation(line: 1281, column: 10, scope: !6283)
!6285 = !DILocation(line: 1281, column: 6, scope: !6225)
!6286 = !DILocation(line: 1282, column: 40, scope: !6283)
!6287 = !DILocation(line: 1282, column: 25, scope: !6283)
!6288 = !DILocation(line: 1282, column: 58, scope: !6283)
!6289 = !DILocation(line: 1282, column: 44, scope: !6283)
!6290 = !DILocation(line: 1282, column: 62, scope: !6283)
!6291 = !DILocation(line: 1282, column: 66, scope: !6283)
!6292 = !DILocation(line: 1282, column: 3, scope: !6283)
!6293 = !DILocation(line: 1284, column: 20, scope: !6225)
!6294 = !DILocation(line: 1284, column: 23, scope: !6225)
!6295 = !DILocation(line: 1284, column: 2, scope: !6225)
!6296 = !DILocation(line: 1285, column: 1, scope: !6225)
!6297 = distinct !DISubprogram(name: "ED_area_exit", scope: !1, file: !1, line: 1287, type: !6298, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6298 = !DISubroutineType(types: !6299)
!6299 = !{null, !4448, !3041}
!6300 = !DILocalVariable(name: "C", arg: 1, scope: !6297, file: !1, line: 1287, type: !4448)
!6301 = !DILocation(line: 1287, column: 29, scope: !6297)
!6302 = !DILocalVariable(name: "sa", arg: 2, scope: !6297, file: !1, line: 1287, type: !3041)
!6303 = !DILocation(line: 1287, column: 41, scope: !6297)
!6304 = !DILocalVariable(name: "wm", scope: !6297, file: !1, line: 1289, type: !5444)
!6305 = !DILocation(line: 1289, column: 19, scope: !6297)
!6306 = !DILocation(line: 1289, column: 39, scope: !6297)
!6307 = !DILocation(line: 1289, column: 24, scope: !6297)
!6308 = !DILocalVariable(name: "prevsa", scope: !6297, file: !1, line: 1290, type: !3041)
!6309 = !DILocation(line: 1290, column: 11, scope: !6297)
!6310 = !DILocation(line: 1290, column: 32, scope: !6297)
!6311 = !DILocation(line: 1290, column: 20, scope: !6297)
!6312 = !DILocalVariable(name: "ar", scope: !6297, file: !1, line: 1291, type: !5056)
!6313 = !DILocation(line: 1291, column: 11, scope: !6297)
!6314 = !DILocation(line: 1293, column: 6, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6297, file: !1, line: 1293, column: 6)
!6316 = !DILocation(line: 1293, column: 10, scope: !6315)
!6317 = !DILocation(line: 1293, column: 15, scope: !6315)
!6318 = !DILocation(line: 1293, column: 18, scope: !6315)
!6319 = !DILocation(line: 1293, column: 22, scope: !6315)
!6320 = !DILocation(line: 1293, column: 28, scope: !6315)
!6321 = !DILocation(line: 1293, column: 6, scope: !6297)
!6322 = !DILocation(line: 1294, column: 3, scope: !6315)
!6323 = !DILocation(line: 1294, column: 7, scope: !6315)
!6324 = !DILocation(line: 1294, column: 13, scope: !6315)
!6325 = !DILocation(line: 1294, column: 18, scope: !6315)
!6326 = !DILocation(line: 1294, column: 22, scope: !6315)
!6327 = !DILocation(line: 1296, column: 18, scope: !6297)
!6328 = !DILocation(line: 1296, column: 21, scope: !6297)
!6329 = !DILocation(line: 1296, column: 2, scope: !6297)
!6330 = !DILocation(line: 1297, column: 12, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6297, file: !1, line: 1297, column: 2)
!6332 = !DILocation(line: 1297, column: 16, scope: !6331)
!6333 = !DILocation(line: 1297, column: 27, scope: !6331)
!6334 = !DILocation(line: 1297, column: 10, scope: !6331)
!6335 = !DILocation(line: 1297, column: 7, scope: !6331)
!6336 = !DILocation(line: 1297, column: 34, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6331, file: !1, line: 1297, column: 2)
!6338 = !DILocation(line: 1297, column: 2, scope: !6331)
!6339 = !DILocation(line: 1298, column: 18, scope: !6337)
!6340 = !DILocation(line: 1298, column: 21, scope: !6337)
!6341 = !DILocation(line: 1298, column: 3, scope: !6337)
!6342 = !DILocation(line: 1297, column: 43, scope: !6337)
!6343 = !DILocation(line: 1297, column: 47, scope: !6337)
!6344 = !DILocation(line: 1297, column: 41, scope: !6337)
!6345 = !DILocation(line: 1297, column: 2, scope: !6337)
!6346 = distinct !{!6346, !6338, !6347}
!6347 = !DILocation(line: 1298, column: 23, scope: !6331)
!6348 = !DILocation(line: 1300, column: 27, scope: !6297)
!6349 = !DILocation(line: 1300, column: 31, scope: !6297)
!6350 = !DILocation(line: 1300, column: 35, scope: !6297)
!6351 = !DILocation(line: 1300, column: 2, scope: !6297)
!6352 = !DILocation(line: 1301, column: 18, scope: !6297)
!6353 = !DILocation(line: 1301, column: 21, scope: !6297)
!6354 = !DILocation(line: 1301, column: 2, scope: !6297)
!6355 = !DILocation(line: 1302, column: 1, scope: !6297)
!6356 = distinct !DISubprogram(name: "ED_screen_exit", scope: !1, file: !1, line: 1304, type: !6357, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{null, !4448, !4253, !372}
!6359 = !DILocalVariable(name: "C", arg: 1, scope: !6356, file: !1, line: 1304, type: !4448)
!6360 = !DILocation(line: 1304, column: 31, scope: !6356)
!6361 = !DILocalVariable(name: "window", arg: 2, scope: !6356, file: !1, line: 1304, type: !4253)
!6362 = !DILocation(line: 1304, column: 44, scope: !6356)
!6363 = !DILocalVariable(name: "screen", arg: 3, scope: !6356, file: !1, line: 1304, type: !372)
!6364 = !DILocation(line: 1304, column: 61, scope: !6356)
!6365 = !DILocalVariable(name: "wm", scope: !6356, file: !1, line: 1306, type: !5444)
!6366 = !DILocation(line: 1306, column: 19, scope: !6356)
!6367 = !DILocation(line: 1306, column: 39, scope: !6356)
!6368 = !DILocation(line: 1306, column: 24, scope: !6356)
!6369 = !DILocalVariable(name: "prevwin", scope: !6356, file: !1, line: 1307, type: !4253)
!6370 = !DILocation(line: 1307, column: 12, scope: !6356)
!6371 = !DILocation(line: 1307, column: 36, scope: !6356)
!6372 = !DILocation(line: 1307, column: 22, scope: !6356)
!6373 = !DILocalVariable(name: "sa", scope: !6356, file: !1, line: 1308, type: !3041)
!6374 = !DILocation(line: 1308, column: 11, scope: !6356)
!6375 = !DILocalVariable(name: "ar", scope: !6356, file: !1, line: 1309, type: !5056)
!6376 = !DILocation(line: 1309, column: 11, scope: !6356)
!6377 = !DILocation(line: 1311, column: 20, scope: !6356)
!6378 = !DILocation(line: 1311, column: 23, scope: !6356)
!6379 = !DILocation(line: 1311, column: 2, scope: !6356)
!6380 = !DILocation(line: 1313, column: 6, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 1313, column: 6)
!6382 = !DILocation(line: 1313, column: 14, scope: !6381)
!6383 = !DILocation(line: 1313, column: 6, scope: !6356)
!6384 = !DILocation(line: 1314, column: 25, scope: !6381)
!6385 = !DILocation(line: 1314, column: 29, scope: !6381)
!6386 = !DILocation(line: 1314, column: 37, scope: !6381)
!6387 = !DILocation(line: 1314, column: 45, scope: !6381)
!6388 = !DILocation(line: 1314, column: 3, scope: !6381)
!6389 = !DILocation(line: 1315, column: 2, scope: !6356)
!6390 = !DILocation(line: 1315, column: 10, scope: !6356)
!6391 = !DILocation(line: 1315, column: 20, scope: !6356)
!6392 = !DILocation(line: 1317, column: 6, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 1317, column: 6)
!6394 = !DILocation(line: 1317, column: 14, scope: !6393)
!6395 = !DILocation(line: 1317, column: 6, scope: !6356)
!6396 = !DILocation(line: 1318, column: 22, scope: !6393)
!6397 = !DILocation(line: 1318, column: 30, scope: !6393)
!6398 = !DILocation(line: 1318, column: 38, scope: !6393)
!6399 = !DILocation(line: 1318, column: 3, scope: !6393)
!6400 = !DILocation(line: 1319, column: 2, scope: !6356)
!6401 = !DILocation(line: 1319, column: 10, scope: !6356)
!6402 = !DILocation(line: 1319, column: 18, scope: !6356)
!6403 = !DILocation(line: 1320, column: 2, scope: !6356)
!6404 = !DILocation(line: 1320, column: 10, scope: !6356)
!6405 = !DILocation(line: 1320, column: 23, scope: !6356)
!6406 = !DILocation(line: 1322, column: 12, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 1322, column: 2)
!6408 = !DILocation(line: 1322, column: 20, scope: !6407)
!6409 = !DILocation(line: 1322, column: 31, scope: !6407)
!6410 = !DILocation(line: 1322, column: 10, scope: !6407)
!6411 = !DILocation(line: 1322, column: 7, scope: !6407)
!6412 = !DILocation(line: 1322, column: 38, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6407, file: !1, line: 1322, column: 2)
!6414 = !DILocation(line: 1322, column: 2, scope: !6407)
!6415 = !DILocation(line: 1323, column: 18, scope: !6413)
!6416 = !DILocation(line: 1323, column: 21, scope: !6413)
!6417 = !DILocation(line: 1323, column: 3, scope: !6413)
!6418 = !DILocation(line: 1322, column: 47, scope: !6413)
!6419 = !DILocation(line: 1322, column: 51, scope: !6413)
!6420 = !DILocation(line: 1322, column: 45, scope: !6413)
!6421 = !DILocation(line: 1322, column: 2, scope: !6413)
!6422 = distinct !{!6422, !6414, !6423}
!6423 = !DILocation(line: 1323, column: 23, scope: !6407)
!6424 = !DILocation(line: 1325, column: 12, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 1325, column: 2)
!6426 = !DILocation(line: 1325, column: 20, scope: !6425)
!6427 = !DILocation(line: 1325, column: 29, scope: !6425)
!6428 = !DILocation(line: 1325, column: 10, scope: !6425)
!6429 = !DILocation(line: 1325, column: 7, scope: !6425)
!6430 = !DILocation(line: 1325, column: 36, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6425, file: !1, line: 1325, column: 2)
!6432 = !DILocation(line: 1325, column: 2, scope: !6425)
!6433 = !DILocation(line: 1326, column: 16, scope: !6431)
!6434 = !DILocation(line: 1326, column: 19, scope: !6431)
!6435 = !DILocation(line: 1326, column: 3, scope: !6431)
!6436 = !DILocation(line: 1325, column: 45, scope: !6431)
!6437 = !DILocation(line: 1325, column: 49, scope: !6431)
!6438 = !DILocation(line: 1325, column: 43, scope: !6431)
!6439 = !DILocation(line: 1325, column: 2, scope: !6431)
!6440 = distinct !{!6440, !6432, !6441}
!6441 = !DILocation(line: 1326, column: 21, scope: !6425)
!6442 = !DILocation(line: 1329, column: 2, scope: !6356)
!6443 = !DILocation(line: 1329, column: 10, scope: !6356)
!6444 = !DILocation(line: 1329, column: 16, scope: !6356)
!6445 = !DILocation(line: 1331, column: 6, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 1331, column: 6)
!6447 = !DILocation(line: 1331, column: 15, scope: !6446)
!6448 = !DILocation(line: 1331, column: 23, scope: !6446)
!6449 = !DILocation(line: 1331, column: 28, scope: !6446)
!6450 = !DILocation(line: 1331, column: 6, scope: !6356)
!6451 = !DILocation(line: 1333, column: 21, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 1331, column: 34)
!6453 = !DILocation(line: 1333, column: 24, scope: !6452)
!6454 = !DILocation(line: 1333, column: 3, scope: !6452)
!6455 = !DILocation(line: 1334, column: 2, scope: !6452)
!6456 = !DILocation(line: 1337, column: 21, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 1335, column: 7)
!6458 = !DILocation(line: 1337, column: 3, scope: !6457)
!6459 = !DILocation(line: 1340, column: 1, scope: !6356)
!6460 = distinct !DISubprogram(name: "ED_screen_set_subwinactive", scope: !1, file: !1, line: 1384, type: !6461, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{null, !4448, !6463}
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6464, size: 64)
!6464 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !909, line: 460, baseType: !942)
!6465 = !DILocalVariable(name: "C", arg: 1, scope: !6460, file: !1, line: 1384, type: !4448)
!6466 = !DILocation(line: 1384, column: 43, scope: !6460)
!6467 = !DILocalVariable(name: "event", arg: 2, scope: !6460, file: !1, line: 1384, type: !6463)
!6468 = !DILocation(line: 1384, column: 55, scope: !6460)
!6469 = !DILocalVariable(name: "win", scope: !6460, file: !1, line: 1386, type: !4253)
!6470 = !DILocation(line: 1386, column: 12, scope: !6460)
!6471 = !DILocation(line: 1386, column: 32, scope: !6460)
!6472 = !DILocation(line: 1386, column: 18, scope: !6460)
!6473 = !DILocation(line: 1388, column: 6, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6460, file: !1, line: 1388, column: 6)
!6475 = !DILocation(line: 1388, column: 11, scope: !6474)
!6476 = !DILocation(line: 1388, column: 6, scope: !6460)
!6477 = !DILocalVariable(name: "scr", scope: !6478, file: !1, line: 1389, type: !372)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !1, line: 1388, column: 19)
!6479 = !DILocation(line: 1389, column: 12, scope: !6478)
!6480 = !DILocation(line: 1389, column: 18, scope: !6478)
!6481 = !DILocation(line: 1389, column: 23, scope: !6478)
!6482 = !DILocalVariable(name: "sa", scope: !6478, file: !1, line: 1390, type: !3041)
!6483 = !DILocation(line: 1390, column: 12, scope: !6478)
!6484 = !DILocalVariable(name: "ar", scope: !6478, file: !1, line: 1391, type: !5056)
!6485 = !DILocation(line: 1391, column: 12, scope: !6478)
!6486 = !DILocalVariable(name: "oldswin", scope: !6478, file: !1, line: 1392, type: !119)
!6487 = !DILocation(line: 1392, column: 7, scope: !6478)
!6488 = !DILocation(line: 1392, column: 17, scope: !6478)
!6489 = !DILocation(line: 1392, column: 22, scope: !6478)
!6490 = !DILocation(line: 1394, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1394, column: 3)
!6492 = !DILocation(line: 1394, column: 18, scope: !6491)
!6493 = !DILocation(line: 1394, column: 27, scope: !6491)
!6494 = !DILocation(line: 1394, column: 11, scope: !6491)
!6495 = !DILocation(line: 1394, column: 8, scope: !6491)
!6496 = !DILocation(line: 1394, column: 34, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6491, file: !1, line: 1394, column: 3)
!6498 = !DILocation(line: 1394, column: 3, scope: !6491)
!6499 = !DILocation(line: 1395, column: 8, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !1, line: 1395, column: 8)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !1, line: 1394, column: 53)
!6502 = !DILocation(line: 1395, column: 15, scope: !6500)
!6503 = !DILocation(line: 1395, column: 19, scope: !6500)
!6504 = !DILocation(line: 1395, column: 23, scope: !6500)
!6505 = !DILocation(line: 1395, column: 30, scope: !6500)
!6506 = !DILocation(line: 1395, column: 17, scope: !6500)
!6507 = !DILocation(line: 1395, column: 35, scope: !6500)
!6508 = !DILocation(line: 1395, column: 38, scope: !6500)
!6509 = !DILocation(line: 1395, column: 45, scope: !6500)
!6510 = !DILocation(line: 1395, column: 49, scope: !6500)
!6511 = !DILocation(line: 1395, column: 53, scope: !6500)
!6512 = !DILocation(line: 1395, column: 60, scope: !6500)
!6513 = !DILocation(line: 1395, column: 47, scope: !6500)
!6514 = !DILocation(line: 1395, column: 8, scope: !6501)
!6515 = !DILocation(line: 1396, column: 9, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6500, file: !1, line: 1396, column: 9)
!6517 = !DILocation(line: 1396, column: 16, scope: !6516)
!6518 = !DILocation(line: 1396, column: 20, scope: !6516)
!6519 = !DILocation(line: 1396, column: 24, scope: !6516)
!6520 = !DILocation(line: 1396, column: 31, scope: !6516)
!6521 = !DILocation(line: 1396, column: 18, scope: !6516)
!6522 = !DILocation(line: 1396, column: 36, scope: !6516)
!6523 = !DILocation(line: 1396, column: 39, scope: !6516)
!6524 = !DILocation(line: 1396, column: 46, scope: !6516)
!6525 = !DILocation(line: 1396, column: 50, scope: !6516)
!6526 = !DILocation(line: 1396, column: 54, scope: !6516)
!6527 = !DILocation(line: 1396, column: 61, scope: !6516)
!6528 = !DILocation(line: 1396, column: 48, scope: !6516)
!6529 = !DILocation(line: 1396, column: 9, scope: !6500)
!6530 = !DILocation(line: 1397, column: 40, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6516, file: !1, line: 1397, column: 10)
!6532 = !DILocation(line: 1397, column: 45, scope: !6531)
!6533 = !DILocation(line: 1397, column: 52, scope: !6531)
!6534 = !DILocation(line: 1397, column: 18, scope: !6531)
!6535 = !DILocation(line: 1397, column: 15, scope: !6531)
!6536 = !DILocation(line: 1397, column: 10, scope: !6516)
!6537 = !DILocation(line: 1398, column: 7, scope: !6531)
!6538 = !DILocation(line: 1397, column: 53, scope: !6531)
!6539 = !DILocation(line: 1399, column: 3, scope: !6501)
!6540 = !DILocation(line: 1394, column: 43, scope: !6497)
!6541 = !DILocation(line: 1394, column: 47, scope: !6497)
!6542 = !DILocation(line: 1394, column: 41, scope: !6497)
!6543 = !DILocation(line: 1394, column: 3, scope: !6497)
!6544 = distinct !{!6544, !6498, !6545}
!6545 = !DILocation(line: 1399, column: 3, scope: !6491)
!6546 = !DILocation(line: 1400, column: 7, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1400, column: 7)
!6548 = !DILocation(line: 1400, column: 7, scope: !6478)
!6549 = !DILocation(line: 1402, column: 14, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !1, line: 1402, column: 4)
!6551 = distinct !DILexicalBlock(scope: !6547, file: !1, line: 1400, column: 11)
!6552 = !DILocation(line: 1402, column: 18, scope: !6550)
!6553 = !DILocation(line: 1402, column: 29, scope: !6550)
!6554 = !DILocation(line: 1402, column: 12, scope: !6550)
!6555 = !DILocation(line: 1402, column: 9, scope: !6550)
!6556 = !DILocation(line: 1402, column: 36, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6550, file: !1, line: 1402, column: 4)
!6558 = !DILocation(line: 1402, column: 4, scope: !6550)
!6559 = !DILocation(line: 1403, column: 30, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !1, line: 1403, column: 9)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 1402, column: 55)
!6562 = !DILocation(line: 1403, column: 34, scope: !6560)
!6563 = !DILocation(line: 1403, column: 43, scope: !6560)
!6564 = !DILocation(line: 1403, column: 50, scope: !6560)
!6565 = !DILocation(line: 1403, column: 9, scope: !6560)
!6566 = !DILocation(line: 1403, column: 9, scope: !6561)
!6567 = !DILocation(line: 1404, column: 26, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6560, file: !1, line: 1403, column: 54)
!6569 = !DILocation(line: 1404, column: 30, scope: !6568)
!6570 = !DILocation(line: 1404, column: 6, scope: !6568)
!6571 = !DILocation(line: 1404, column: 11, scope: !6568)
!6572 = !DILocation(line: 1404, column: 24, scope: !6568)
!6573 = !DILocation(line: 1405, column: 6, scope: !6568)
!6574 = !DILocation(line: 1407, column: 4, scope: !6561)
!6575 = !DILocation(line: 1402, column: 45, scope: !6557)
!6576 = !DILocation(line: 1402, column: 49, scope: !6557)
!6577 = !DILocation(line: 1402, column: 43, scope: !6557)
!6578 = !DILocation(line: 1402, column: 4, scope: !6557)
!6579 = distinct !{!6579, !6558, !6580}
!6580 = !DILocation(line: 1407, column: 4, scope: !6550)
!6581 = !DILocation(line: 1408, column: 3, scope: !6551)
!6582 = !DILocation(line: 1410, column: 24, scope: !6547)
!6583 = !DILocation(line: 1410, column: 29, scope: !6547)
!6584 = !DILocation(line: 1410, column: 4, scope: !6547)
!6585 = !DILocation(line: 1410, column: 9, scope: !6547)
!6586 = !DILocation(line: 1410, column: 22, scope: !6547)
!6587 = !DILocation(line: 1413, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1413, column: 7)
!6589 = !DILocation(line: 1413, column: 18, scope: !6588)
!6590 = !DILocation(line: 1413, column: 23, scope: !6588)
!6591 = !DILocation(line: 1413, column: 15, scope: !6588)
!6592 = !DILocation(line: 1413, column: 7, scope: !6478)
!6593 = !DILocation(line: 1415, column: 14, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !1, line: 1415, column: 4)
!6595 = distinct !DILexicalBlock(scope: !6588, file: !1, line: 1413, column: 37)
!6596 = !DILocation(line: 1415, column: 19, scope: !6594)
!6597 = !DILocation(line: 1415, column: 28, scope: !6594)
!6598 = !DILocation(line: 1415, column: 12, scope: !6594)
!6599 = !DILocation(line: 1415, column: 9, scope: !6594)
!6600 = !DILocation(line: 1415, column: 35, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6594, file: !1, line: 1415, column: 4)
!6602 = !DILocation(line: 1415, column: 4, scope: !6594)
!6603 = !DILocalVariable(name: "do_draw", scope: !6604, file: !1, line: 1416, type: !2203)
!6604 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 1415, column: 54)
!6605 = !DILocation(line: 1416, column: 10, scope: !6604)
!6606 = !DILocation(line: 1418, column: 15, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6604, file: !1, line: 1418, column: 5)
!6608 = !DILocation(line: 1418, column: 19, scope: !6607)
!6609 = !DILocation(line: 1418, column: 30, scope: !6607)
!6610 = !DILocation(line: 1418, column: 13, scope: !6607)
!6611 = !DILocation(line: 1418, column: 10, scope: !6607)
!6612 = !DILocation(line: 1418, column: 37, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 1418, column: 5)
!6614 = !DILocation(line: 1418, column: 5, scope: !6607)
!6615 = !DILocation(line: 1419, column: 10, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6613, file: !1, line: 1419, column: 10)
!6617 = !DILocation(line: 1419, column: 14, scope: !6616)
!6618 = !DILocation(line: 1419, column: 24, scope: !6616)
!6619 = !DILocation(line: 1419, column: 21, scope: !6616)
!6620 = !DILocation(line: 1419, column: 32, scope: !6616)
!6621 = !DILocation(line: 1419, column: 35, scope: !6616)
!6622 = !DILocation(line: 1419, column: 39, scope: !6616)
!6623 = !DILocation(line: 1419, column: 49, scope: !6616)
!6624 = !DILocation(line: 1419, column: 54, scope: !6616)
!6625 = !DILocation(line: 1419, column: 46, scope: !6616)
!6626 = !DILocation(line: 1419, column: 10, scope: !6613)
!6627 = !DILocation(line: 1420, column: 15, scope: !6616)
!6628 = !DILocation(line: 1420, column: 7, scope: !6616)
!6629 = !DILocation(line: 1418, column: 46, scope: !6613)
!6630 = !DILocation(line: 1418, column: 50, scope: !6613)
!6631 = !DILocation(line: 1418, column: 44, scope: !6613)
!6632 = !DILocation(line: 1418, column: 5, scope: !6613)
!6633 = distinct !{!6633, !6614, !6634}
!6634 = !DILocation(line: 1420, column: 17, scope: !6607)
!6635 = !DILocation(line: 1422, column: 9, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6604, file: !1, line: 1422, column: 9)
!6637 = !DILocation(line: 1422, column: 9, scope: !6604)
!6638 = !DILocation(line: 1423, column: 16, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !1, line: 1423, column: 6)
!6640 = distinct !DILexicalBlock(scope: !6636, file: !1, line: 1422, column: 18)
!6641 = !DILocation(line: 1423, column: 20, scope: !6639)
!6642 = !DILocation(line: 1423, column: 31, scope: !6639)
!6643 = !DILocation(line: 1423, column: 14, scope: !6639)
!6644 = !DILocation(line: 1423, column: 11, scope: !6639)
!6645 = !DILocation(line: 1423, column: 38, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6639, file: !1, line: 1423, column: 6)
!6647 = !DILocation(line: 1423, column: 6, scope: !6639)
!6648 = !DILocation(line: 1424, column: 11, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 1424, column: 11)
!6650 = !DILocation(line: 1424, column: 15, scope: !6649)
!6651 = !DILocation(line: 1424, column: 26, scope: !6649)
!6652 = !DILocation(line: 1424, column: 11, scope: !6646)
!6653 = !DILocation(line: 1425, column: 29, scope: !6649)
!6654 = !DILocation(line: 1425, column: 8, scope: !6649)
!6655 = !DILocation(line: 1424, column: 29, scope: !6649)
!6656 = !DILocation(line: 1423, column: 47, scope: !6646)
!6657 = !DILocation(line: 1423, column: 51, scope: !6646)
!6658 = !DILocation(line: 1423, column: 45, scope: !6646)
!6659 = !DILocation(line: 1423, column: 6, scope: !6646)
!6660 = distinct !{!6660, !6647, !6661}
!6661 = !DILocation(line: 1425, column: 31, scope: !6639)
!6662 = !DILocation(line: 1426, column: 5, scope: !6640)
!6663 = !DILocation(line: 1427, column: 4, scope: !6604)
!6664 = !DILocation(line: 1415, column: 44, scope: !6601)
!6665 = !DILocation(line: 1415, column: 48, scope: !6601)
!6666 = !DILocation(line: 1415, column: 42, scope: !6601)
!6667 = !DILocation(line: 1415, column: 4, scope: !6601)
!6668 = distinct !{!6668, !6602, !6669}
!6669 = !DILocation(line: 1427, column: 4, scope: !6594)
!6670 = !DILocation(line: 1428, column: 3, scope: !6595)
!6671 = !DILocation(line: 1431, column: 7, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1431, column: 7)
!6673 = !DILocation(line: 1431, column: 12, scope: !6672)
!6674 = !DILocation(line: 1431, column: 28, scope: !6672)
!6675 = !DILocation(line: 1431, column: 33, scope: !6672)
!6676 = !DILocation(line: 1431, column: 25, scope: !6672)
!6677 = !DILocation(line: 1431, column: 7, scope: !6478)
!6678 = !DILocation(line: 1432, column: 22, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6672, file: !1, line: 1431, column: 42)
!6680 = !DILocation(line: 1432, column: 27, scope: !6679)
!6681 = !DILocation(line: 1432, column: 4, scope: !6679)
!6682 = !DILocation(line: 1433, column: 3, scope: !6679)
!6683 = !DILocation(line: 1436, column: 8, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 1436, column: 8)
!6685 = distinct !DILexicalBlock(scope: !6672, file: !1, line: 1434, column: 8)
!6686 = !DILocation(line: 1436, column: 19, scope: !6684)
!6687 = !DILocation(line: 1436, column: 24, scope: !6684)
!6688 = !DILocation(line: 1436, column: 16, scope: !6684)
!6689 = !DILocation(line: 1436, column: 8, scope: !6685)
!6690 = !DILocation(line: 1437, column: 23, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !1, line: 1436, column: 38)
!6692 = !DILocation(line: 1437, column: 28, scope: !6691)
!6693 = !DILocation(line: 1437, column: 33, scope: !6691)
!6694 = !DILocation(line: 1437, column: 5, scope: !6691)
!6695 = !DILocation(line: 1442, column: 25, scope: !6691)
!6696 = !DILocation(line: 1442, column: 28, scope: !6691)
!6697 = !DILocation(line: 1442, column: 33, scope: !6691)
!6698 = !DILocation(line: 1442, column: 5, scope: !6691)
!6699 = !DILocation(line: 1443, column: 4, scope: !6691)
!6700 = !DILocation(line: 1445, column: 23, scope: !6684)
!6701 = !DILocation(line: 1445, column: 28, scope: !6684)
!6702 = !DILocation(line: 1445, column: 33, scope: !6684)
!6703 = !DILocation(line: 1445, column: 5, scope: !6684)
!6704 = !DILocation(line: 1447, column: 2, scope: !6478)
!6705 = !DILocation(line: 1448, column: 1, scope: !6460)
!6706 = distinct !DISubprogram(name: "screen_cursor_set", scope: !1, file: !1, line: 1345, type: !6707, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{null, !4253, !6463}
!6709 = !DILocalVariable(name: "win", arg: 1, scope: !6706, file: !1, line: 1345, type: !4253)
!6710 = !DILocation(line: 1345, column: 41, scope: !6706)
!6711 = !DILocalVariable(name: "event", arg: 2, scope: !6706, file: !1, line: 1345, type: !6463)
!6712 = !DILocation(line: 1345, column: 55, scope: !6706)
!6713 = !DILocalVariable(name: "winsize_x", scope: !6706, file: !1, line: 1347, type: !3583)
!6714 = !DILocation(line: 1347, column: 12, scope: !6706)
!6715 = !DILocation(line: 1347, column: 43, scope: !6706)
!6716 = !DILocation(line: 1347, column: 24, scope: !6706)
!6717 = !DILocalVariable(name: "winsize_y", scope: !6706, file: !1, line: 1348, type: !3583)
!6718 = !DILocation(line: 1348, column: 12, scope: !6706)
!6719 = !DILocation(line: 1348, column: 43, scope: !6706)
!6720 = !DILocation(line: 1348, column: 24, scope: !6706)
!6721 = !DILocalVariable(name: "az", scope: !6706, file: !1, line: 1350, type: !6722)
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 64)
!6723 = !DIDerivedType(tag: DW_TAG_typedef, name: "AZone", file: !68, line: 98, baseType: !6724)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AZone", file: !68, line: 86, size: 512, elements: !6725)
!6725 = !{!6726, !6728, !6729, !6730, !6731, !6733, !6734, !6735, !6736, !6737, !6738}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6724, file: !68, line: 87, baseType: !6727, size: 64)
!6727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6724, file: !68, line: 87, baseType: !6727, size: 64, offset: 64)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !6724, file: !68, line: 88, baseType: !5056, size: 64, offset: 128)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6724, file: !68, line: 89, baseType: !119, size: 32, offset: 192)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !6724, file: !68, line: 91, baseType: !6732, size: 32, offset: 224)
!6732 = !DIDerivedType(tag: DW_TAG_typedef, name: "AZEdge", file: !68, line: 83, baseType: !67)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !6724, file: !68, line: 93, baseType: !410, size: 16, offset: 256)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !6724, file: !68, line: 93, baseType: !410, size: 16, offset: 272)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !6724, file: !68, line: 93, baseType: !410, size: 16, offset: 288)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !6724, file: !68, line: 93, baseType: !410, size: 16, offset: 304)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !6724, file: !68, line: 95, baseType: !874, size: 128, offset: 320)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !6724, file: !68, line: 97, baseType: !474, size: 32, offset: 448)
!6739 = !DILocation(line: 1350, column: 9, scope: !6706)
!6740 = !DILocalVariable(name: "sa", scope: !6706, file: !1, line: 1351, type: !3041)
!6741 = !DILocation(line: 1351, column: 11, scope: !6706)
!6742 = !DILocation(line: 1353, column: 12, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 1353, column: 2)
!6744 = !DILocation(line: 1353, column: 17, scope: !6743)
!6745 = !DILocation(line: 1353, column: 25, scope: !6743)
!6746 = !DILocation(line: 1353, column: 34, scope: !6743)
!6747 = !DILocation(line: 1353, column: 10, scope: !6743)
!6748 = !DILocation(line: 1353, column: 7, scope: !6743)
!6749 = !DILocation(line: 1353, column: 41, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6743, file: !1, line: 1353, column: 2)
!6751 = !DILocation(line: 1353, column: 2, scope: !6743)
!6752 = !DILocation(line: 1354, column: 35, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6750, file: !1, line: 1354, column: 7)
!6754 = !DILocation(line: 1354, column: 40, scope: !6753)
!6755 = !DILocation(line: 1354, column: 47, scope: !6753)
!6756 = !DILocation(line: 1354, column: 13, scope: !6753)
!6757 = !DILocation(line: 1354, column: 11, scope: !6753)
!6758 = !DILocation(line: 1354, column: 7, scope: !6750)
!6759 = !DILocation(line: 1355, column: 4, scope: !6753)
!6760 = !DILocation(line: 1354, column: 49, scope: !6753)
!6761 = !DILocation(line: 1353, column: 50, scope: !6750)
!6762 = !DILocation(line: 1353, column: 54, scope: !6750)
!6763 = !DILocation(line: 1353, column: 48, scope: !6750)
!6764 = !DILocation(line: 1353, column: 2, scope: !6750)
!6765 = distinct !{!6765, !6751, !6766}
!6766 = !DILocation(line: 1355, column: 4, scope: !6743)
!6767 = !DILocation(line: 1357, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 1357, column: 6)
!6769 = !DILocation(line: 1357, column: 6, scope: !6706)
!6770 = !DILocation(line: 1358, column: 7, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !1, line: 1358, column: 7)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1357, column: 10)
!6773 = !DILocation(line: 1358, column: 11, scope: !6771)
!6774 = !DILocation(line: 1358, column: 16, scope: !6771)
!6775 = !DILocation(line: 1358, column: 7, scope: !6772)
!6776 = !DILocation(line: 1359, column: 18, scope: !6771)
!6777 = !DILocation(line: 1359, column: 4, scope: !6771)
!6778 = !DILocation(line: 1360, column: 12, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6771, file: !1, line: 1360, column: 12)
!6780 = !DILocation(line: 1360, column: 16, scope: !6779)
!6781 = !DILocation(line: 1360, column: 21, scope: !6779)
!6782 = !DILocation(line: 1360, column: 12, scope: !6771)
!6783 = !DILocation(line: 1361, column: 8, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !1, line: 1361, column: 8)
!6785 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 1360, column: 38)
!6786 = !DILocation(line: 1361, column: 12, scope: !6784)
!6787 = !DILocation(line: 1361, column: 17, scope: !6784)
!6788 = !DILocation(line: 1361, column: 40, scope: !6784)
!6789 = !DILocation(line: 1361, column: 43, scope: !6784)
!6790 = !DILocation(line: 1361, column: 47, scope: !6784)
!6791 = !DILocation(line: 1361, column: 52, scope: !6784)
!6792 = !DILocation(line: 1361, column: 8, scope: !6785)
!6793 = !DILocation(line: 1362, column: 19, scope: !6784)
!6794 = !DILocation(line: 1362, column: 5, scope: !6784)
!6795 = !DILocation(line: 1364, column: 19, scope: !6784)
!6796 = !DILocation(line: 1364, column: 5, scope: !6784)
!6797 = !DILocation(line: 1365, column: 3, scope: !6785)
!6798 = !DILocation(line: 1366, column: 2, scope: !6772)
!6799 = !DILocalVariable(name: "actedge", scope: !6800, file: !1, line: 1368, type: !3050)
!6800 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1367, column: 7)
!6801 = !DILocation(line: 1368, column: 12, scope: !6800)
!6802 = !DILocation(line: 1368, column: 49, scope: !6800)
!6803 = !DILocation(line: 1368, column: 54, scope: !6800)
!6804 = !DILocation(line: 1368, column: 62, scope: !6800)
!6805 = !DILocation(line: 1368, column: 73, scope: !6800)
!6806 = !DILocation(line: 1368, column: 84, scope: !6800)
!6807 = !DILocation(line: 1368, column: 91, scope: !6800)
!6808 = !DILocation(line: 1368, column: 94, scope: !6800)
!6809 = !DILocation(line: 1368, column: 101, scope: !6800)
!6810 = !DILocation(line: 1368, column: 22, scope: !6800)
!6811 = !DILocation(line: 1370, column: 7, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6800, file: !1, line: 1370, column: 7)
!6813 = !DILocation(line: 1370, column: 7, scope: !6800)
!6814 = !DILocation(line: 1371, column: 30, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 1371, column: 8)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !1, line: 1370, column: 16)
!6817 = !DILocation(line: 1371, column: 8, scope: !6815)
!6818 = !DILocation(line: 1371, column: 8, scope: !6816)
!6819 = !DILocation(line: 1372, column: 19, scope: !6815)
!6820 = !DILocation(line: 1372, column: 5, scope: !6815)
!6821 = !DILocation(line: 1374, column: 19, scope: !6815)
!6822 = !DILocation(line: 1374, column: 5, scope: !6815)
!6823 = !DILocation(line: 1375, column: 3, scope: !6816)
!6824 = !DILocation(line: 1377, column: 18, scope: !6812)
!6825 = !DILocation(line: 1377, column: 4, scope: !6812)
!6826 = !DILocation(line: 1379, column: 1, scope: !6706)
!6827 = distinct !DISubprogram(name: "ED_screen_area_active", scope: !1, file: !1, line: 1450, type: !6828, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!119, !6830}
!6830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6831, size: 64)
!6831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4449)
!6832 = !DILocalVariable(name: "C", arg: 1, scope: !6827, file: !1, line: 1450, type: !6830)
!6833 = !DILocation(line: 1450, column: 43, scope: !6827)
!6834 = !DILocalVariable(name: "win", scope: !6827, file: !1, line: 1452, type: !4253)
!6835 = !DILocation(line: 1452, column: 12, scope: !6827)
!6836 = !DILocation(line: 1452, column: 32, scope: !6827)
!6837 = !DILocation(line: 1452, column: 18, scope: !6827)
!6838 = !DILocalVariable(name: "sc", scope: !6827, file: !1, line: 1453, type: !372)
!6839 = !DILocation(line: 1453, column: 11, scope: !6827)
!6840 = !DILocation(line: 1453, column: 30, scope: !6827)
!6841 = !DILocation(line: 1453, column: 16, scope: !6827)
!6842 = !DILocalVariable(name: "sa", scope: !6827, file: !1, line: 1454, type: !3041)
!6843 = !DILocation(line: 1454, column: 11, scope: !6827)
!6844 = !DILocation(line: 1454, column: 28, scope: !6827)
!6845 = !DILocation(line: 1454, column: 16, scope: !6827)
!6846 = !DILocation(line: 1456, column: 6, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 1456, column: 6)
!6848 = !DILocation(line: 1456, column: 10, scope: !6847)
!6849 = !DILocation(line: 1456, column: 13, scope: !6847)
!6850 = !DILocation(line: 1456, column: 16, scope: !6847)
!6851 = !DILocation(line: 1456, column: 19, scope: !6847)
!6852 = !DILocation(line: 1456, column: 6, scope: !6827)
!6853 = !DILocalVariable(name: "az", scope: !6854, file: !1, line: 1457, type: !6722)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !1, line: 1456, column: 23)
!6855 = !DILocation(line: 1457, column: 10, scope: !6854)
!6856 = !DILocation(line: 1457, column: 37, scope: !6854)
!6857 = !DILocation(line: 1457, column: 42, scope: !6854)
!6858 = !DILocation(line: 1457, column: 47, scope: !6854)
!6859 = !DILocation(line: 1457, column: 59, scope: !6854)
!6860 = !DILocation(line: 1457, column: 15, scope: !6854)
!6861 = !DILocalVariable(name: "ar", scope: !6854, file: !1, line: 1458, type: !5056)
!6862 = !DILocation(line: 1458, column: 12, scope: !6854)
!6863 = !DILocation(line: 1460, column: 7, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6854, file: !1, line: 1460, column: 7)
!6865 = !DILocation(line: 1460, column: 10, scope: !6864)
!6866 = !DILocation(line: 1460, column: 13, scope: !6864)
!6867 = !DILocation(line: 1460, column: 17, scope: !6864)
!6868 = !DILocation(line: 1460, column: 22, scope: !6864)
!6869 = !DILocation(line: 1460, column: 7, scope: !6854)
!6870 = !DILocation(line: 1461, column: 4, scope: !6864)
!6871 = !DILocation(line: 1463, column: 13, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6854, file: !1, line: 1463, column: 3)
!6873 = !DILocation(line: 1463, column: 17, scope: !6872)
!6874 = !DILocation(line: 1463, column: 28, scope: !6872)
!6875 = !DILocation(line: 1463, column: 11, scope: !6872)
!6876 = !DILocation(line: 1463, column: 8, scope: !6872)
!6877 = !DILocation(line: 1463, column: 35, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6872, file: !1, line: 1463, column: 3)
!6879 = !DILocation(line: 1463, column: 3, scope: !6872)
!6880 = !DILocation(line: 1464, column: 8, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 1464, column: 8)
!6882 = !DILocation(line: 1464, column: 12, scope: !6881)
!6883 = !DILocation(line: 1464, column: 22, scope: !6881)
!6884 = !DILocation(line: 1464, column: 26, scope: !6881)
!6885 = !DILocation(line: 1464, column: 19, scope: !6881)
!6886 = !DILocation(line: 1464, column: 8, scope: !6878)
!6887 = !DILocation(line: 1465, column: 5, scope: !6881)
!6888 = !DILocation(line: 1463, column: 44, scope: !6878)
!6889 = !DILocation(line: 1463, column: 48, scope: !6878)
!6890 = !DILocation(line: 1463, column: 42, scope: !6878)
!6891 = !DILocation(line: 1463, column: 3, scope: !6878)
!6892 = distinct !{!6892, !6879, !6893}
!6893 = !DILocation(line: 1465, column: 12, scope: !6872)
!6894 = !DILocation(line: 1466, column: 2, scope: !6854)
!6895 = !DILocation(line: 1467, column: 2, scope: !6827)
!6896 = !DILocation(line: 1468, column: 1, scope: !6827)
!6897 = distinct !DISubprogram(name: "ED_screen_set", scope: !1, file: !1, line: 1472, type: !6898, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{null, !4448, !372}
!6900 = !DILocalVariable(name: "C", arg: 1, scope: !6897, file: !1, line: 1472, type: !4448)
!6901 = !DILocation(line: 1472, column: 30, scope: !6897)
!6902 = !DILocalVariable(name: "sc", arg: 2, scope: !6897, file: !1, line: 1472, type: !372)
!6903 = !DILocation(line: 1472, column: 42, scope: !6897)
!6904 = !DILocalVariable(name: "bmain", scope: !6897, file: !1, line: 1474, type: !6905)
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6906, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !6907, line: 104, baseType: !6908)
!6907 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !6907, line: 53, size: 15232, elements: !6909)
!6909 = !{!6910, !6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919, !6923, !6924, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935, !6936, !6937, !6938, !6939, !6940, !6941, !6942, !6943, !6944, !6945, !6946, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6966}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6908, file: !6907, line: 54, baseType: !6911, size: 64)
!6911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6908, size: 64)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6908, file: !6907, line: 54, baseType: !6911, size: 64, offset: 64)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6908, file: !6907, line: 55, baseType: !396, size: 8192, offset: 128)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !6908, file: !6907, line: 56, baseType: !410, size: 16, offset: 8320)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !6908, file: !6907, line: 56, baseType: !410, size: 16, offset: 8336)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !6908, file: !6907, line: 57, baseType: !410, size: 16, offset: 8352)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !6908, file: !6907, line: 57, baseType: !410, size: 16, offset: 8368)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !6908, file: !6907, line: 58, baseType: !2754, size: 64, offset: 8384)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !6908, file: !6907, line: 59, baseType: !6920, size: 128, offset: 8448)
!6920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 128, elements: !6921)
!6921 = !{!6922}
!6922 = !DISubrange(count: 16)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !6908, file: !6907, line: 60, baseType: !410, size: 16, offset: 8576)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !6908, file: !6907, line: 62, baseType: !386, size: 64, offset: 8640)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6908, file: !6907, line: 63, baseType: !436, size: 128, offset: 8704)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !6908, file: !6907, line: 64, baseType: !436, size: 128, offset: 8832)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6908, file: !6907, line: 65, baseType: !436, size: 128, offset: 8960)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !6908, file: !6907, line: 66, baseType: !436, size: 128, offset: 9088)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !6908, file: !6907, line: 67, baseType: !436, size: 128, offset: 9216)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !6908, file: !6907, line: 68, baseType: !436, size: 128, offset: 9344)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6908, file: !6907, line: 69, baseType: !436, size: 128, offset: 9472)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !6908, file: !6907, line: 70, baseType: !436, size: 128, offset: 9600)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6908, file: !6907, line: 71, baseType: !436, size: 128, offset: 9728)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !6908, file: !6907, line: 72, baseType: !436, size: 128, offset: 9856)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !6908, file: !6907, line: 73, baseType: !436, size: 128, offset: 9984)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !6908, file: !6907, line: 74, baseType: !436, size: 128, offset: 10112)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6908, file: !6907, line: 75, baseType: !436, size: 128, offset: 10240)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6908, file: !6907, line: 76, baseType: !436, size: 128, offset: 10368)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !6908, file: !6907, line: 77, baseType: !436, size: 128, offset: 10496)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !6908, file: !6907, line: 78, baseType: !436, size: 128, offset: 10624)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !6908, file: !6907, line: 79, baseType: !436, size: 128, offset: 10752)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !6908, file: !6907, line: 80, baseType: !436, size: 128, offset: 10880)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !6908, file: !6907, line: 81, baseType: !436, size: 128, offset: 11008)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !6908, file: !6907, line: 82, baseType: !436, size: 128, offset: 11136)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !6908, file: !6907, line: 83, baseType: !436, size: 128, offset: 11264)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !6908, file: !6907, line: 84, baseType: !436, size: 128, offset: 11392)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !6908, file: !6907, line: 85, baseType: !436, size: 128, offset: 11520)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6908, file: !6907, line: 86, baseType: !436, size: 128, offset: 11648)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !6908, file: !6907, line: 87, baseType: !436, size: 128, offset: 11776)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !6908, file: !6907, line: 88, baseType: !436, size: 128, offset: 11904)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !6908, file: !6907, line: 89, baseType: !436, size: 128, offset: 12032)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !6908, file: !6907, line: 90, baseType: !436, size: 128, offset: 12160)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !6908, file: !6907, line: 91, baseType: !436, size: 128, offset: 12288)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !6908, file: !6907, line: 92, baseType: !436, size: 128, offset: 12416)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !6908, file: !6907, line: 93, baseType: !436, size: 128, offset: 12544)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !6908, file: !6907, line: 94, baseType: !436, size: 128, offset: 12672)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6908, file: !6907, line: 95, baseType: !436, size: 128, offset: 12800)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !6908, file: !6907, line: 96, baseType: !436, size: 128, offset: 12928)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !6908, file: !6907, line: 98, baseType: !641, size: 2048, offset: 13056)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !6908, file: !6907, line: 101, baseType: !6961, size: 64, offset: 15104)
!6961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6962, size: 64)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !6963, line: 58, size: 32, elements: !6964)
!6963 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6964 = !{!6965}
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6962, file: !6963, line: 59, baseType: !119, size: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6908, file: !6907, line: 103, baseType: !6967, size: 64, offset: 15168)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 64)
!6968 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !6907, line: 51, flags: DIFlagFwdDecl)
!6969 = !DILocation(line: 1474, column: 8, scope: !6897)
!6970 = !DILocation(line: 1474, column: 30, scope: !6897)
!6971 = !DILocation(line: 1474, column: 16, scope: !6897)
!6972 = !DILocalVariable(name: "wm", scope: !6897, file: !1, line: 1475, type: !5444)
!6973 = !DILocation(line: 1475, column: 19, scope: !6897)
!6974 = !DILocation(line: 1475, column: 39, scope: !6897)
!6975 = !DILocation(line: 1475, column: 24, scope: !6897)
!6976 = !DILocalVariable(name: "win", scope: !6897, file: !1, line: 1476, type: !4253)
!6977 = !DILocation(line: 1476, column: 12, scope: !6897)
!6978 = !DILocation(line: 1476, column: 32, scope: !6897)
!6979 = !DILocation(line: 1476, column: 18, scope: !6897)
!6980 = !DILocalVariable(name: "oldscreen", scope: !6897, file: !1, line: 1477, type: !372)
!6981 = !DILocation(line: 1477, column: 11, scope: !6897)
!6982 = !DILocation(line: 1477, column: 37, scope: !6897)
!6983 = !DILocation(line: 1477, column: 23, scope: !6897)
!6984 = !DILocalVariable(name: "id", scope: !6897, file: !1, line: 1478, type: !391)
!6985 = !DILocation(line: 1478, column: 6, scope: !6897)
!6986 = !DILocation(line: 1481, column: 12, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1481, column: 2)
!6988 = !DILocation(line: 1481, column: 19, scope: !6987)
!6989 = !DILocation(line: 1481, column: 26, scope: !6987)
!6990 = !DILocation(line: 1481, column: 10, scope: !6987)
!6991 = !DILocation(line: 1481, column: 7, scope: !6987)
!6992 = !DILocation(line: 1481, column: 33, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6987, file: !1, line: 1481, column: 2)
!6994 = !DILocation(line: 1481, column: 2, scope: !6987)
!6995 = !DILocation(line: 1482, column: 7, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !1, line: 1482, column: 7)
!6997 = !DILocation(line: 1482, column: 24, scope: !6996)
!6998 = !DILocation(line: 1482, column: 13, scope: !6996)
!6999 = !DILocation(line: 1482, column: 10, scope: !6996)
!7000 = !DILocation(line: 1482, column: 7, scope: !6993)
!7001 = !DILocation(line: 1483, column: 4, scope: !6996)
!7002 = !DILocation(line: 1481, column: 42, scope: !6993)
!7003 = !DILocation(line: 1481, column: 46, scope: !6993)
!7004 = !DILocation(line: 1481, column: 40, scope: !6993)
!7005 = !DILocation(line: 1481, column: 2, scope: !6993)
!7006 = distinct !{!7006, !6994, !7007}
!7007 = !DILocation(line: 1483, column: 4, scope: !6987)
!7008 = !DILocation(line: 1484, column: 6, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1484, column: 6)
!7010 = !DILocation(line: 1484, column: 9, scope: !7009)
!7011 = !DILocation(line: 1484, column: 6, scope: !6897)
!7012 = !DILocation(line: 1485, column: 3, scope: !7009)
!7013 = !DILocation(line: 1488, column: 6, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1488, column: 6)
!7015 = !DILocation(line: 1488, column: 10, scope: !7014)
!7016 = !DILocation(line: 1488, column: 16, scope: !7014)
!7017 = !DILocation(line: 1488, column: 6, scope: !6897)
!7018 = !DILocalVariable(name: "sc1", scope: !7019, file: !1, line: 1489, type: !372)
!7019 = distinct !DILexicalBlock(scope: !7014, file: !1, line: 1488, column: 31)
!7020 = !DILocation(line: 1489, column: 12, scope: !7019)
!7021 = !DILocation(line: 1490, column: 14, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7019, file: !1, line: 1490, column: 3)
!7023 = !DILocation(line: 1490, column: 21, scope: !7022)
!7024 = !DILocation(line: 1490, column: 28, scope: !7022)
!7025 = !DILocation(line: 1490, column: 12, scope: !7022)
!7026 = !DILocation(line: 1490, column: 8, scope: !7022)
!7027 = !DILocation(line: 1490, column: 35, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7022, file: !1, line: 1490, column: 3)
!7029 = !DILocation(line: 1490, column: 3, scope: !7022)
!7030 = !DILocalVariable(name: "sa", scope: !7031, file: !1, line: 1491, type: !3041)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !1, line: 1490, column: 60)
!7032 = !DILocation(line: 1491, column: 13, scope: !7031)
!7033 = !DILocation(line: 1491, column: 18, scope: !7031)
!7034 = !DILocation(line: 1491, column: 23, scope: !7031)
!7035 = !DILocation(line: 1491, column: 32, scope: !7031)
!7036 = !DILocation(line: 1492, column: 8, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7031, file: !1, line: 1492, column: 8)
!7038 = !DILocation(line: 1492, column: 12, scope: !7037)
!7039 = !DILocation(line: 1492, column: 20, scope: !7037)
!7040 = !DILocation(line: 1492, column: 17, scope: !7037)
!7041 = !DILocation(line: 1492, column: 8, scope: !7031)
!7042 = !DILocation(line: 1493, column: 10, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7037, file: !1, line: 1492, column: 24)
!7044 = !DILocation(line: 1493, column: 8, scope: !7043)
!7045 = !DILocation(line: 1494, column: 5, scope: !7043)
!7046 = !DILocation(line: 1496, column: 3, scope: !7031)
!7047 = !DILocation(line: 1490, column: 46, scope: !7028)
!7048 = !DILocation(line: 1490, column: 51, scope: !7028)
!7049 = !DILocation(line: 1490, column: 54, scope: !7028)
!7050 = !DILocation(line: 1490, column: 44, scope: !7028)
!7051 = !DILocation(line: 1490, column: 3, scope: !7028)
!7052 = distinct !{!7052, !7029, !7053}
!7053 = !DILocation(line: 1496, column: 3, scope: !7022)
!7054 = !DILocation(line: 1497, column: 2, scope: !7019)
!7055 = !DILocation(line: 1500, column: 6, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1500, column: 6)
!7057 = !DILocation(line: 1500, column: 10, scope: !7056)
!7058 = !DILocation(line: 1500, column: 16, scope: !7056)
!7059 = !DILocation(line: 1500, column: 21, scope: !7056)
!7060 = !DILocation(line: 1500, column: 24, scope: !7056)
!7061 = !DILocation(line: 1500, column: 28, scope: !7056)
!7062 = !DILocation(line: 1500, column: 37, scope: !7056)
!7063 = !DILocation(line: 1500, column: 42, scope: !7056)
!7064 = !DILocation(line: 1500, column: 34, scope: !7056)
!7065 = !DILocation(line: 1500, column: 6, scope: !6897)
!7066 = !DILocation(line: 1501, column: 3, scope: !7056)
!7067 = !DILocation(line: 1503, column: 6, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1503, column: 6)
!7069 = !DILocation(line: 1503, column: 19, scope: !7068)
!7070 = !DILocation(line: 1503, column: 16, scope: !7068)
!7071 = !DILocation(line: 1503, column: 6, scope: !6897)
!7072 = !DILocalVariable(name: "wt", scope: !7073, file: !1, line: 1504, type: !7074)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !1, line: 1503, column: 23)
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7075, size: 64)
!7075 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmTimer", file: !909, line: 506, baseType: !908)
!7076 = !DILocation(line: 1504, column: 12, scope: !7073)
!7077 = !DILocation(line: 1504, column: 17, scope: !7073)
!7078 = !DILocation(line: 1504, column: 28, scope: !7073)
!7079 = !DILocalVariable(name: "sa", scope: !7073, file: !1, line: 1505, type: !3041)
!7080 = !DILocation(line: 1505, column: 12, scope: !7073)
!7081 = !DILocalVariable(name: "oldscene", scope: !7073, file: !1, line: 1506, type: !4255)
!7082 = !DILocation(line: 1506, column: 10, scope: !7073)
!7083 = !DILocation(line: 1506, column: 21, scope: !7073)
!7084 = !DILocation(line: 1506, column: 32, scope: !7073)
!7085 = !DILocation(line: 1509, column: 13, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 1509, column: 3)
!7087 = !DILocation(line: 1509, column: 24, scope: !7086)
!7088 = !DILocation(line: 1509, column: 33, scope: !7086)
!7089 = !DILocation(line: 1509, column: 11, scope: !7086)
!7090 = !DILocation(line: 1509, column: 8, scope: !7086)
!7091 = !DILocation(line: 1509, column: 40, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !1, line: 1509, column: 3)
!7093 = !DILocation(line: 1509, column: 3, scope: !7086)
!7094 = !DILocation(line: 1510, column: 34, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7092, file: !1, line: 1509, column: 59)
!7096 = !DILocation(line: 1510, column: 39, scope: !7095)
!7097 = !DILocation(line: 1510, column: 54, scope: !7095)
!7098 = !DILocation(line: 1510, column: 4, scope: !7095)
!7099 = !DILocation(line: 1511, column: 3, scope: !7095)
!7100 = !DILocation(line: 1509, column: 49, scope: !7092)
!7101 = !DILocation(line: 1509, column: 53, scope: !7092)
!7102 = !DILocation(line: 1509, column: 47, scope: !7092)
!7103 = !DILocation(line: 1509, column: 3, scope: !7092)
!7104 = distinct !{!7104, !7093, !7105}
!7105 = !DILocation(line: 1511, column: 3, scope: !7086)
!7106 = !DILocation(line: 1514, column: 3, scope: !7073)
!7107 = !DILocation(line: 1514, column: 14, scope: !7073)
!7108 = !DILocation(line: 1514, column: 24, scope: !7073)
!7109 = !DILocation(line: 1515, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 1515, column: 7)
!7111 = !DILocation(line: 1515, column: 7, scope: !7073)
!7112 = !DILocation(line: 1516, column: 25, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7110, file: !1, line: 1515, column: 11)
!7114 = !DILocation(line: 1516, column: 29, scope: !7113)
!7115 = !DILocation(line: 1516, column: 34, scope: !7113)
!7116 = !DILocation(line: 1516, column: 4, scope: !7113)
!7117 = !DILocation(line: 1517, column: 3, scope: !7113)
!7118 = !DILocation(line: 1519, column: 18, scope: !7073)
!7119 = !DILocation(line: 1519, column: 21, scope: !7073)
!7120 = !DILocation(line: 1519, column: 26, scope: !7073)
!7121 = !DILocation(line: 1519, column: 3, scope: !7073)
!7122 = !DILocation(line: 1522, column: 7, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 1522, column: 7)
!7124 = !DILocation(line: 1522, column: 7, scope: !7073)
!7125 = !DILocation(line: 1523, column: 8, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !1, line: 1523, column: 8)
!7127 = distinct !DILexicalBlock(scope: !7123, file: !1, line: 1522, column: 11)
!7128 = !DILocation(line: 1523, column: 20, scope: !7126)
!7129 = !DILocation(line: 1523, column: 24, scope: !7126)
!7130 = !DILocation(line: 1523, column: 17, scope: !7126)
!7131 = !DILocation(line: 1523, column: 8, scope: !7127)
!7132 = !DILocation(line: 1524, column: 21, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7126, file: !1, line: 1523, column: 31)
!7134 = !DILocation(line: 1524, column: 5, scope: !7133)
!7135 = !DILocation(line: 1524, column: 9, scope: !7133)
!7136 = !DILocation(line: 1524, column: 19, scope: !7133)
!7137 = !DILocation(line: 1525, column: 4, scope: !7133)
!7138 = !DILocation(line: 1528, column: 28, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7126, file: !1, line: 1527, column: 9)
!7140 = !DILocation(line: 1528, column: 5, scope: !7139)
!7141 = !DILocation(line: 1528, column: 16, scope: !7139)
!7142 = !DILocation(line: 1528, column: 26, scope: !7139)
!7143 = !DILocation(line: 1529, column: 30, scope: !7139)
!7144 = !DILocation(line: 1529, column: 5, scope: !7139)
!7145 = !DILocation(line: 1531, column: 3, scope: !7127)
!7146 = !DILocation(line: 1533, column: 17, scope: !7073)
!7147 = !DILocation(line: 1533, column: 3, scope: !7073)
!7148 = !DILocation(line: 1533, column: 8, scope: !7073)
!7149 = !DILocation(line: 1533, column: 15, scope: !7073)
!7150 = !DILocation(line: 1534, column: 21, scope: !7073)
!7151 = !DILocation(line: 1534, column: 24, scope: !7073)
!7152 = !DILocation(line: 1534, column: 3, scope: !7073)
!7153 = !DILocation(line: 1537, column: 15, scope: !7073)
!7154 = !DILocation(line: 1537, column: 20, scope: !7073)
!7155 = !DILocation(line: 1537, column: 3, scope: !7073)
!7156 = !DILocation(line: 1537, column: 7, scope: !7073)
!7157 = !DILocation(line: 1537, column: 13, scope: !7073)
!7158 = !DILocation(line: 1539, column: 36, scope: !7073)
!7159 = !DILocation(line: 1539, column: 21, scope: !7073)
!7160 = !DILocation(line: 1539, column: 54, scope: !7073)
!7161 = !DILocation(line: 1539, column: 40, scope: !7073)
!7162 = !DILocation(line: 1539, column: 3, scope: !7073)
!7163 = !DILocation(line: 1540, column: 25, scope: !7073)
!7164 = !DILocation(line: 1540, column: 3, scope: !7073)
!7165 = !DILocation(line: 1541, column: 25, scope: !7073)
!7166 = !DILocation(line: 1541, column: 54, scope: !7073)
!7167 = !DILocation(line: 1541, column: 3, scope: !7073)
!7168 = !DILocation(line: 1544, column: 26, scope: !7073)
!7169 = !DILocation(line: 1544, column: 3, scope: !7073)
!7170 = !DILocation(line: 1556, column: 7, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 1556, column: 7)
!7172 = !DILocation(line: 1556, column: 19, scope: !7171)
!7173 = !DILocation(line: 1556, column: 23, scope: !7171)
!7174 = !DILocation(line: 1556, column: 16, scope: !7171)
!7175 = !DILocation(line: 1556, column: 7, scope: !7073)
!7176 = !DILocation(line: 1557, column: 29, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7171, file: !1, line: 1556, column: 30)
!7178 = !DILocation(line: 1557, column: 36, scope: !7177)
!7179 = !DILocation(line: 1557, column: 40, scope: !7177)
!7180 = !DILocation(line: 1557, column: 4, scope: !7177)
!7181 = !DILocation(line: 1558, column: 3, scope: !7177)
!7182 = !DILocation(line: 1564, column: 25, scope: !7073)
!7183 = !DILocation(line: 1564, column: 3, scope: !7073)
!7184 = !DILocation(line: 1565, column: 2, scope: !7073)
!7185 = !DILocation(line: 1566, column: 1, scope: !6897)
!7186 = distinct !DISubprogram(name: "ED_screen_delete", scope: !1, file: !1, line: 1580, type: !6898, scopeLine: 1581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7187 = !DILocalVariable(name: "C", arg: 1, scope: !7186, file: !1, line: 1580, type: !4448)
!7188 = !DILocation(line: 1580, column: 33, scope: !7186)
!7189 = !DILocalVariable(name: "sc", arg: 2, scope: !7186, file: !1, line: 1580, type: !372)
!7190 = !DILocation(line: 1580, column: 45, scope: !7186)
!7191 = !DILocalVariable(name: "bmain", scope: !7186, file: !1, line: 1582, type: !6905)
!7192 = !DILocation(line: 1582, column: 8, scope: !7186)
!7193 = !DILocation(line: 1582, column: 30, scope: !7186)
!7194 = !DILocation(line: 1582, column: 16, scope: !7186)
!7195 = !DILocalVariable(name: "wm", scope: !7186, file: !1, line: 1583, type: !5444)
!7196 = !DILocation(line: 1583, column: 19, scope: !7186)
!7197 = !DILocation(line: 1583, column: 39, scope: !7186)
!7198 = !DILocation(line: 1583, column: 24, scope: !7186)
!7199 = !DILocalVariable(name: "win", scope: !7186, file: !1, line: 1584, type: !4253)
!7200 = !DILocation(line: 1584, column: 12, scope: !7186)
!7201 = !DILocation(line: 1584, column: 32, scope: !7186)
!7202 = !DILocation(line: 1584, column: 18, scope: !7186)
!7203 = !DILocalVariable(name: "newsc", scope: !7186, file: !1, line: 1585, type: !372)
!7204 = !DILocation(line: 1585, column: 11, scope: !7186)
!7205 = !DILocalVariable(name: "delete", scope: !7186, file: !1, line: 1586, type: !119)
!7206 = !DILocation(line: 1586, column: 6, scope: !7186)
!7207 = !DILocation(line: 1589, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1589, column: 6)
!7209 = !DILocation(line: 1589, column: 6, scope: !7186)
!7210 = !DILocation(line: 1590, column: 3, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7208, file: !1, line: 1589, column: 52)
!7212 = !DILocation(line: 1598, column: 15, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1598, column: 2)
!7214 = !DILocation(line: 1598, column: 19, scope: !7213)
!7215 = !DILocation(line: 1598, column: 22, scope: !7213)
!7216 = !DILocation(line: 1598, column: 13, scope: !7213)
!7217 = !DILocation(line: 1598, column: 7, scope: !7213)
!7218 = !DILocation(line: 1598, column: 28, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7213, file: !1, line: 1598, column: 2)
!7220 = !DILocation(line: 1598, column: 2, scope: !7213)
!7221 = !DILocation(line: 1599, column: 23, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7219, file: !1, line: 1599, column: 7)
!7223 = !DILocation(line: 1599, column: 27, scope: !7222)
!7224 = !DILocation(line: 1599, column: 8, scope: !7222)
!7225 = !DILocation(line: 1599, column: 7, scope: !7219)
!7226 = !DILocation(line: 1600, column: 4, scope: !7222)
!7227 = !DILocation(line: 1599, column: 32, scope: !7222)
!7228 = !DILocation(line: 1598, column: 43, scope: !7219)
!7229 = !DILocation(line: 1598, column: 50, scope: !7219)
!7230 = !DILocation(line: 1598, column: 53, scope: !7219)
!7231 = !DILocation(line: 1598, column: 41, scope: !7219)
!7232 = !DILocation(line: 1598, column: 2, scope: !7219)
!7233 = distinct !{!7233, !7220, !7234}
!7234 = !DILocation(line: 1600, column: 4, scope: !7213)
!7235 = !DILocation(line: 1602, column: 7, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1602, column: 6)
!7237 = !DILocation(line: 1602, column: 6, scope: !7186)
!7238 = !DILocation(line: 1603, column: 16, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 1603, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7236, file: !1, line: 1602, column: 14)
!7241 = !DILocation(line: 1603, column: 20, scope: !7239)
!7242 = !DILocation(line: 1603, column: 23, scope: !7239)
!7243 = !DILocation(line: 1603, column: 14, scope: !7239)
!7244 = !DILocation(line: 1603, column: 8, scope: !7239)
!7245 = !DILocation(line: 1603, column: 29, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 1603, column: 3)
!7247 = !DILocation(line: 1603, column: 3, scope: !7239)
!7248 = !DILocation(line: 1604, column: 24, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7246, file: !1, line: 1604, column: 8)
!7250 = !DILocation(line: 1604, column: 28, scope: !7249)
!7251 = !DILocation(line: 1604, column: 9, scope: !7249)
!7252 = !DILocation(line: 1604, column: 8, scope: !7246)
!7253 = !DILocation(line: 1605, column: 5, scope: !7249)
!7254 = !DILocation(line: 1604, column: 33, scope: !7249)
!7255 = !DILocation(line: 1603, column: 44, scope: !7246)
!7256 = !DILocation(line: 1603, column: 51, scope: !7246)
!7257 = !DILocation(line: 1603, column: 54, scope: !7246)
!7258 = !DILocation(line: 1603, column: 42, scope: !7246)
!7259 = !DILocation(line: 1603, column: 3, scope: !7246)
!7260 = distinct !{!7260, !7247, !7261}
!7261 = !DILocation(line: 1605, column: 5, scope: !7239)
!7262 = !DILocation(line: 1606, column: 2, scope: !7240)
!7263 = !DILocation(line: 1608, column: 7, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1608, column: 6)
!7265 = !DILocation(line: 1608, column: 6, scope: !7186)
!7266 = !DILocation(line: 1609, column: 3, scope: !7264)
!7267 = !DILocation(line: 1611, column: 16, scope: !7186)
!7268 = !DILocation(line: 1611, column: 19, scope: !7186)
!7269 = !DILocation(line: 1611, column: 2, scope: !7186)
!7270 = !DILocation(line: 1613, column: 6, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1613, column: 6)
!7272 = !DILocation(line: 1613, column: 13, scope: !7271)
!7273 = !DILocation(line: 1613, column: 16, scope: !7271)
!7274 = !DILocation(line: 1613, column: 21, scope: !7271)
!7275 = !DILocation(line: 1613, column: 31, scope: !7271)
!7276 = !DILocation(line: 1613, column: 28, scope: !7271)
!7277 = !DILocation(line: 1613, column: 6, scope: !7186)
!7278 = !DILocation(line: 1614, column: 21, scope: !7271)
!7279 = !DILocation(line: 1614, column: 28, scope: !7271)
!7280 = !DILocation(line: 1614, column: 3, scope: !7271)
!7281 = !DILocation(line: 1615, column: 1, scope: !7186)
!7282 = distinct !DISubprogram(name: "ed_screen_used", scope: !1, file: !1, line: 1568, type: !7283, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{!119, !5444, !372}
!7285 = !DILocalVariable(name: "wm", arg: 1, scope: !7282, file: !1, line: 1568, type: !5444)
!7286 = !DILocation(line: 1568, column: 44, scope: !7282)
!7287 = !DILocalVariable(name: "sc", arg: 2, scope: !7282, file: !1, line: 1568, type: !372)
!7288 = !DILocation(line: 1568, column: 57, scope: !7282)
!7289 = !DILocalVariable(name: "win", scope: !7282, file: !1, line: 1570, type: !4253)
!7290 = !DILocation(line: 1570, column: 12, scope: !7282)
!7291 = !DILocation(line: 1572, column: 13, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7282, file: !1, line: 1572, column: 2)
!7293 = !DILocation(line: 1572, column: 17, scope: !7292)
!7294 = !DILocation(line: 1572, column: 25, scope: !7292)
!7295 = !DILocation(line: 1572, column: 11, scope: !7292)
!7296 = !DILocation(line: 1572, column: 7, scope: !7292)
!7297 = !DILocation(line: 1572, column: 32, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7292, file: !1, line: 1572, column: 2)
!7299 = !DILocation(line: 1572, column: 2, scope: !7292)
!7300 = !DILocation(line: 1573, column: 7, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7298, file: !1, line: 1573, column: 7)
!7302 = !DILocation(line: 1573, column: 12, scope: !7301)
!7303 = !DILocation(line: 1573, column: 22, scope: !7301)
!7304 = !DILocation(line: 1573, column: 19, scope: !7301)
!7305 = !DILocation(line: 1573, column: 7, scope: !7298)
!7306 = !DILocation(line: 1574, column: 4, scope: !7301)
!7307 = !DILocation(line: 1572, column: 43, scope: !7298)
!7308 = !DILocation(line: 1572, column: 48, scope: !7298)
!7309 = !DILocation(line: 1572, column: 41, scope: !7298)
!7310 = !DILocation(line: 1572, column: 2, scope: !7298)
!7311 = distinct !{!7311, !7299, !7312}
!7312 = !DILocation(line: 1574, column: 11, scope: !7292)
!7313 = !DILocation(line: 1576, column: 2, scope: !7282)
!7314 = !DILocation(line: 1577, column: 1, scope: !7282)
!7315 = distinct !DISubprogram(name: "ED_screen_set_scene", scope: !1, file: !1, line: 1648, type: !7316, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !4448, !372, !4255}
!7318 = !DILocalVariable(name: "C", arg: 1, scope: !7315, file: !1, line: 1648, type: !4448)
!7319 = !DILocation(line: 1648, column: 36, scope: !7315)
!7320 = !DILocalVariable(name: "screen", arg: 2, scope: !7315, file: !1, line: 1648, type: !372)
!7321 = !DILocation(line: 1648, column: 48, scope: !7315)
!7322 = !DILocalVariable(name: "scene", arg: 3, scope: !7315, file: !1, line: 1648, type: !4255)
!7323 = !DILocation(line: 1648, column: 63, scope: !7315)
!7324 = !DILocalVariable(name: "bmain", scope: !7315, file: !1, line: 1650, type: !6905)
!7325 = !DILocation(line: 1650, column: 8, scope: !7315)
!7326 = !DILocation(line: 1650, column: 30, scope: !7315)
!7327 = !DILocation(line: 1650, column: 16, scope: !7315)
!7328 = !DILocalVariable(name: "sc", scope: !7315, file: !1, line: 1651, type: !372)
!7329 = !DILocation(line: 1651, column: 11, scope: !7315)
!7330 = !DILocation(line: 1653, column: 6, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 1653, column: 6)
!7332 = !DILocation(line: 1653, column: 13, scope: !7331)
!7333 = !DILocation(line: 1653, column: 6, scope: !7315)
!7334 = !DILocation(line: 1654, column: 3, scope: !7331)
!7335 = !DILocation(line: 1656, column: 36, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 1656, column: 6)
!7337 = !DILocation(line: 1656, column: 21, scope: !7336)
!7338 = !DILocation(line: 1656, column: 40, scope: !7336)
!7339 = !DILocation(line: 1656, column: 6, scope: !7336)
!7340 = !DILocation(line: 1656, column: 6, scope: !7315)
!7341 = !DILocation(line: 1657, column: 27, scope: !7336)
!7342 = !DILocation(line: 1657, column: 3, scope: !7336)
!7343 = !DILocation(line: 1659, column: 12, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 1659, column: 2)
!7345 = !DILocation(line: 1659, column: 19, scope: !7344)
!7346 = !DILocation(line: 1659, column: 26, scope: !7344)
!7347 = !DILocation(line: 1659, column: 10, scope: !7344)
!7348 = !DILocation(line: 1659, column: 7, scope: !7344)
!7349 = !DILocation(line: 1659, column: 33, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7344, file: !1, line: 1659, column: 2)
!7351 = !DILocation(line: 1659, column: 2, scope: !7344)
!7352 = !DILocation(line: 1660, column: 10, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !1, line: 1660, column: 7)
!7354 = distinct !DILexicalBlock(scope: !7350, file: !1, line: 1659, column: 55)
!7355 = !DILocation(line: 1660, column: 15, scope: !7353)
!7356 = !DILocation(line: 1660, column: 35, scope: !7353)
!7357 = !DILocation(line: 1660, column: 38, scope: !7353)
!7358 = !DILocation(line: 1660, column: 44, scope: !7353)
!7359 = !DILocation(line: 1660, column: 41, scope: !7353)
!7360 = !DILocation(line: 1660, column: 7, scope: !7354)
!7361 = !DILocation(line: 1662, column: 8, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 1662, column: 8)
!7363 = distinct !DILexicalBlock(scope: !7353, file: !1, line: 1660, column: 52)
!7364 = !DILocation(line: 1662, column: 17, scope: !7362)
!7365 = !DILocation(line: 1662, column: 21, scope: !7362)
!7366 = !DILocation(line: 1662, column: 14, scope: !7362)
!7367 = !DILocation(line: 1662, column: 8, scope: !7363)
!7368 = !DILocation(line: 1669, column: 17, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7362, file: !1, line: 1662, column: 28)
!7370 = !DILocation(line: 1669, column: 5, scope: !7369)
!7371 = !DILocation(line: 1669, column: 9, scope: !7369)
!7372 = !DILocation(line: 1669, column: 15, scope: !7369)
!7373 = !DILocation(line: 1670, column: 4, scope: !7369)
!7374 = !DILocation(line: 1672, column: 3, scope: !7363)
!7375 = !DILocation(line: 1673, column: 2, scope: !7354)
!7376 = !DILocation(line: 1659, column: 42, scope: !7350)
!7377 = !DILocation(line: 1659, column: 46, scope: !7350)
!7378 = !DILocation(line: 1659, column: 49, scope: !7350)
!7379 = !DILocation(line: 1659, column: 40, scope: !7350)
!7380 = !DILocation(line: 1659, column: 2, scope: !7350)
!7381 = distinct !{!7381, !7351, !7382}
!7382 = !DILocation(line: 1673, column: 2, scope: !7344)
!7383 = !DILocation(line: 1678, column: 12, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 1678, column: 2)
!7385 = !DILocation(line: 1678, column: 19, scope: !7384)
!7386 = !DILocation(line: 1678, column: 26, scope: !7384)
!7387 = !DILocation(line: 1678, column: 10, scope: !7384)
!7388 = !DILocation(line: 1678, column: 7, scope: !7384)
!7389 = !DILocation(line: 1678, column: 33, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7384, file: !1, line: 1678, column: 2)
!7391 = !DILocation(line: 1678, column: 2, scope: !7384)
!7392 = !DILocation(line: 1679, column: 10, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !1, line: 1679, column: 7)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 1678, column: 55)
!7395 = !DILocation(line: 1679, column: 15, scope: !7393)
!7396 = !DILocation(line: 1679, column: 35, scope: !7393)
!7397 = !DILocation(line: 1679, column: 38, scope: !7393)
!7398 = !DILocation(line: 1679, column: 44, scope: !7393)
!7399 = !DILocation(line: 1679, column: 41, scope: !7393)
!7400 = !DILocation(line: 1679, column: 7, scope: !7394)
!7401 = !DILocalVariable(name: "sa", scope: !7402, file: !1, line: 1680, type: !3041)
!7402 = distinct !DILexicalBlock(scope: !7393, file: !1, line: 1679, column: 52)
!7403 = !DILocation(line: 1680, column: 13, scope: !7402)
!7404 = !DILocation(line: 1680, column: 18, scope: !7402)
!7405 = !DILocation(line: 1680, column: 22, scope: !7402)
!7406 = !DILocation(line: 1680, column: 31, scope: !7402)
!7407 = !DILocation(line: 1681, column: 4, scope: !7402)
!7408 = !DILocation(line: 1681, column: 11, scope: !7402)
!7409 = !DILocalVariable(name: "sl", scope: !7410, file: !1, line: 1682, type: !1262)
!7410 = distinct !DILexicalBlock(scope: !7402, file: !1, line: 1681, column: 15)
!7411 = !DILocation(line: 1682, column: 16, scope: !7410)
!7412 = !DILocation(line: 1682, column: 21, scope: !7410)
!7413 = !DILocation(line: 1682, column: 25, scope: !7410)
!7414 = !DILocation(line: 1682, column: 35, scope: !7410)
!7415 = !DILocation(line: 1683, column: 5, scope: !7410)
!7416 = !DILocation(line: 1683, column: 12, scope: !7410)
!7417 = !DILocation(line: 1684, column: 10, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !1, line: 1684, column: 10)
!7419 = distinct !DILexicalBlock(scope: !7410, file: !1, line: 1683, column: 16)
!7420 = !DILocation(line: 1684, column: 14, scope: !7418)
!7421 = !DILocation(line: 1684, column: 24, scope: !7418)
!7422 = !DILocation(line: 1684, column: 10, scope: !7419)
!7423 = !DILocalVariable(name: "v3d", scope: !7424, file: !1, line: 1685, type: !2783)
!7424 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 1684, column: 41)
!7425 = !DILocation(line: 1685, column: 15, scope: !7424)
!7426 = !DILocation(line: 1685, column: 32, scope: !7424)
!7427 = !DILocation(line: 1685, column: 21, scope: !7424)
!7428 = !DILocation(line: 1686, column: 35, scope: !7424)
!7429 = !DILocation(line: 1686, column: 42, scope: !7424)
!7430 = !DILocation(line: 1686, column: 46, scope: !7424)
!7431 = !DILocation(line: 1686, column: 50, scope: !7424)
!7432 = !DILocation(line: 1686, column: 7, scope: !7424)
!7433 = !DILocation(line: 1688, column: 6, scope: !7424)
!7434 = !DILocation(line: 1689, column: 11, scope: !7419)
!7435 = !DILocation(line: 1689, column: 15, scope: !7419)
!7436 = !DILocation(line: 1689, column: 9, scope: !7419)
!7437 = distinct !{!7437, !7415, !7438}
!7438 = !DILocation(line: 1690, column: 5, scope: !7410)
!7439 = !DILocation(line: 1691, column: 10, scope: !7410)
!7440 = !DILocation(line: 1691, column: 14, scope: !7410)
!7441 = !DILocation(line: 1691, column: 8, scope: !7410)
!7442 = distinct !{!7442, !7407, !7443}
!7443 = !DILocation(line: 1692, column: 4, scope: !7402)
!7444 = !DILocation(line: 1693, column: 3, scope: !7402)
!7445 = !DILocation(line: 1694, column: 2, scope: !7394)
!7446 = !DILocation(line: 1678, column: 42, scope: !7390)
!7447 = !DILocation(line: 1678, column: 46, scope: !7390)
!7448 = !DILocation(line: 1678, column: 49, scope: !7390)
!7449 = !DILocation(line: 1678, column: 40, scope: !7390)
!7450 = !DILocation(line: 1678, column: 2, scope: !7390)
!7451 = distinct !{!7451, !7391, !7452}
!7452 = !DILocation(line: 1694, column: 2, scope: !7384)
!7453 = !DILocation(line: 1696, column: 21, scope: !7315)
!7454 = !DILocation(line: 1696, column: 24, scope: !7315)
!7455 = !DILocation(line: 1696, column: 2, scope: !7315)
!7456 = !DILocation(line: 1697, column: 27, scope: !7315)
!7457 = !DILocation(line: 1697, column: 34, scope: !7315)
!7458 = !DILocation(line: 1697, column: 2, scope: !7315)
!7459 = !DILocation(line: 1698, column: 24, scope: !7315)
!7460 = !DILocation(line: 1698, column: 2, scope: !7315)
!7461 = !DILocation(line: 1700, column: 27, scope: !7315)
!7462 = !DILocation(line: 1700, column: 2, scope: !7315)
!7463 = !DILocation(line: 1701, column: 25, scope: !7315)
!7464 = !DILocation(line: 1701, column: 32, scope: !7315)
!7465 = !DILocation(line: 1701, column: 2, scope: !7315)
!7466 = !DILocation(line: 1704, column: 24, scope: !7315)
!7467 = !DILocation(line: 1704, column: 2, scope: !7315)
!7468 = !DILocation(line: 1706, column: 1, scope: !7315)
!7469 = distinct !DISubprogram(name: "ed_screen_set_3dview_camera", scope: !1, file: !1, line: 1617, type: !7470, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{null, !4255, !372, !3041, !2783}
!7472 = !DILocalVariable(name: "scene", arg: 1, scope: !7469, file: !1, line: 1617, type: !4255)
!7473 = !DILocation(line: 1617, column: 48, scope: !7469)
!7474 = !DILocalVariable(name: "sc", arg: 2, scope: !7469, file: !1, line: 1617, type: !372)
!7475 = !DILocation(line: 1617, column: 64, scope: !7469)
!7476 = !DILocalVariable(name: "sa", arg: 3, scope: !7469, file: !1, line: 1617, type: !3041)
!7477 = !DILocation(line: 1617, column: 77, scope: !7469)
!7478 = !DILocalVariable(name: "v3d", arg: 4, scope: !7469, file: !1, line: 1617, type: !2783)
!7479 = !DILocation(line: 1617, column: 89, scope: !7469)
!7480 = !DILocation(line: 1620, column: 25, scope: !7469)
!7481 = !DILocation(line: 1620, column: 30, scope: !7469)
!7482 = !DILocation(line: 1620, column: 2, scope: !7469)
!7483 = !DILocation(line: 1622, column: 7, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7469, file: !1, line: 1622, column: 6)
!7485 = !DILocation(line: 1622, column: 12, scope: !7484)
!7486 = !DILocation(line: 1622, column: 19, scope: !7484)
!7487 = !DILocation(line: 1622, column: 43, scope: !7484)
!7488 = !DILocation(line: 1622, column: 50, scope: !7484)
!7489 = !DILocation(line: 1622, column: 55, scope: !7484)
!7490 = !DILocation(line: 1622, column: 23, scope: !7484)
!7491 = !DILocation(line: 1622, column: 6, scope: !7469)
!7492 = !DILocation(line: 1623, column: 39, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 1622, column: 64)
!7494 = !DILocation(line: 1623, column: 43, scope: !7493)
!7495 = !DILocation(line: 1623, column: 17, scope: !7493)
!7496 = !DILocation(line: 1623, column: 3, scope: !7493)
!7497 = !DILocation(line: 1623, column: 8, scope: !7493)
!7498 = !DILocation(line: 1623, column: 15, scope: !7493)
!7499 = !DILocation(line: 1625, column: 8, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 1625, column: 7)
!7501 = !DILocation(line: 1625, column: 13, scope: !7500)
!7502 = !DILocation(line: 1625, column: 7, scope: !7493)
!7503 = !DILocalVariable(name: "ar", scope: !7504, file: !1, line: 1626, type: !5056)
!7504 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 1625, column: 21)
!7505 = !DILocation(line: 1626, column: 13, scope: !7504)
!7506 = !DILocalVariable(name: "regionbase", scope: !7504, file: !1, line: 1627, type: !1843)
!7507 = !DILocation(line: 1627, column: 14, scope: !7504)
!7508 = !DILocation(line: 1630, column: 8, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7504, file: !1, line: 1630, column: 8)
!7510 = !DILocation(line: 1630, column: 15, scope: !7509)
!7511 = !DILocation(line: 1630, column: 19, scope: !7509)
!7512 = !DILocation(line: 1630, column: 29, scope: !7509)
!7513 = !DILocation(line: 1630, column: 12, scope: !7509)
!7514 = !DILocation(line: 1630, column: 8, scope: !7504)
!7515 = !DILocation(line: 1631, column: 19, scope: !7509)
!7516 = !DILocation(line: 1631, column: 23, scope: !7509)
!7517 = !DILocation(line: 1631, column: 16, scope: !7509)
!7518 = !DILocation(line: 1631, column: 5, scope: !7509)
!7519 = !DILocation(line: 1633, column: 19, scope: !7509)
!7520 = !DILocation(line: 1633, column: 24, scope: !7509)
!7521 = !DILocation(line: 1633, column: 16, scope: !7509)
!7522 = !DILocation(line: 1635, column: 14, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7504, file: !1, line: 1635, column: 4)
!7524 = !DILocation(line: 1635, column: 26, scope: !7523)
!7525 = !DILocation(line: 1635, column: 12, scope: !7523)
!7526 = !DILocation(line: 1635, column: 9, scope: !7523)
!7527 = !DILocation(line: 1635, column: 33, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7523, file: !1, line: 1635, column: 4)
!7529 = !DILocation(line: 1635, column: 4, scope: !7523)
!7530 = !DILocation(line: 1636, column: 9, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !1, line: 1636, column: 9)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !1, line: 1635, column: 52)
!7533 = !DILocation(line: 1636, column: 13, scope: !7531)
!7534 = !DILocation(line: 1636, column: 24, scope: !7531)
!7535 = !DILocation(line: 1636, column: 9, scope: !7532)
!7536 = !DILocalVariable(name: "rv3d", scope: !7537, file: !1, line: 1637, type: !7538)
!7537 = distinct !DILexicalBlock(scope: !7531, file: !1, line: 1636, column: 44)
!7538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7539, size: 64)
!7539 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !2785, line: 148, baseType: !7540)
!7540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !2785, line: 85, size: 7040, elements: !7541)
!7541 = !{!7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7552, !7553, !7556, !7558, !7561, !7564, !7565, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592}
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !7540, file: !2785, line: 87, baseType: !1628, size: 512)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !7540, file: !2785, line: 88, baseType: !1628, size: 512, offset: 512)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !7540, file: !2785, line: 89, baseType: !1628, size: 512, offset: 1024)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !7540, file: !2785, line: 90, baseType: !1628, size: 512, offset: 1536)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !7540, file: !2785, line: 91, baseType: !1628, size: 512, offset: 2048)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !7540, file: !2785, line: 94, baseType: !1628, size: 512, offset: 2560)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !7540, file: !2785, line: 95, baseType: !1628, size: 512, offset: 3072)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !7540, file: !2785, line: 99, baseType: !7550, size: 768, offset: 3584)
!7550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 768, elements: !7551)
!7551 = !{!955, !830}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !7540, file: !2785, line: 100, baseType: !7550, size: 768, offset: 4352)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !7540, file: !2785, line: 101, baseType: !7554, size: 64, offset: 5120)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7555 = !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !2785, line: 41, flags: DIFlagFwdDecl)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !7540, file: !2785, line: 103, baseType: !7557, size: 64, offset: 5184)
!7557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7540, size: 64)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !7540, file: !2785, line: 104, baseType: !7559, size: 64, offset: 5248)
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7560 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2785, line: 44, flags: DIFlagFwdDecl)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !7540, file: !2785, line: 105, baseType: !7562, size: 64, offset: 5312)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7563, size: 64)
!7563 = !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2785, line: 35, flags: DIFlagFwdDecl)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !7540, file: !2785, line: 106, baseType: !371, size: 64, offset: 5376)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !7540, file: !2785, line: 109, baseType: !7566, size: 64, offset: 5440)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!7567 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !2785, line: 46, flags: DIFlagFwdDecl)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !7540, file: !2785, line: 110, baseType: !907, size: 64, offset: 5504)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !7540, file: !2785, line: 114, baseType: !1628, size: 512, offset: 5568)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !7540, file: !2785, line: 116, baseType: !828, size: 128, offset: 6080)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !7540, file: !2785, line: 117, baseType: !474, size: 32, offset: 6208)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !7540, file: !2785, line: 118, baseType: !474, size: 32, offset: 6240)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !7540, file: !2785, line: 118, baseType: !474, size: 32, offset: 6272)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !7540, file: !2785, line: 119, baseType: !474, size: 32, offset: 6304)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !7540, file: !2785, line: 120, baseType: !1399, size: 96, offset: 6336)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !7540, file: !2785, line: 122, baseType: !474, size: 32, offset: 6432)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !7540, file: !2785, line: 123, baseType: !397, size: 8, offset: 6464)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !7540, file: !2785, line: 125, baseType: !397, size: 8, offset: 6472)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !7540, file: !2785, line: 126, baseType: !397, size: 8, offset: 6480)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !7540, file: !2785, line: 127, baseType: !397, size: 8, offset: 6488)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !7540, file: !2785, line: 128, baseType: !397, size: 8, offset: 6496)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7540, file: !2785, line: 129, baseType: !2172, size: 24, offset: 6504)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !7540, file: !2785, line: 130, baseType: !884, size: 64, offset: 6528)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !7540, file: !2785, line: 132, baseType: !410, size: 16, offset: 6592)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !7540, file: !2785, line: 133, baseType: !410, size: 16, offset: 6608)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !7540, file: !2785, line: 137, baseType: !828, size: 128, offset: 6624)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !7540, file: !2785, line: 138, baseType: !410, size: 16, offset: 6752)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !7540, file: !2785, line: 138, baseType: !410, size: 16, offset: 6768)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !7540, file: !2785, line: 140, baseType: !474, size: 32, offset: 6784)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !7540, file: !2785, line: 141, baseType: !1399, size: 96, offset: 6816)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !7540, file: !2785, line: 145, baseType: !474, size: 32, offset: 6912)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !7540, file: !2785, line: 146, baseType: !1399, size: 96, offset: 6944)
!7593 = !DILocation(line: 1637, column: 20, scope: !7537)
!7594 = !DILocation(line: 1637, column: 27, scope: !7537)
!7595 = !DILocation(line: 1637, column: 31, scope: !7537)
!7596 = !DILocation(line: 1638, column: 10, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7537, file: !1, line: 1638, column: 10)
!7598 = !DILocation(line: 1638, column: 16, scope: !7597)
!7599 = !DILocation(line: 1638, column: 22, scope: !7597)
!7600 = !DILocation(line: 1638, column: 10, scope: !7537)
!7601 = !DILocation(line: 1639, column: 7, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !1, line: 1638, column: 37)
!7603 = !DILocation(line: 1639, column: 13, scope: !7602)
!7604 = !DILocation(line: 1639, column: 19, scope: !7602)
!7605 = !DILocation(line: 1640, column: 6, scope: !7602)
!7606 = !DILocation(line: 1641, column: 5, scope: !7537)
!7607 = !DILocation(line: 1642, column: 4, scope: !7532)
!7608 = !DILocation(line: 1635, column: 42, scope: !7528)
!7609 = !DILocation(line: 1635, column: 46, scope: !7528)
!7610 = !DILocation(line: 1635, column: 40, scope: !7528)
!7611 = !DILocation(line: 1635, column: 4, scope: !7528)
!7612 = distinct !{!7612, !7529, !7613}
!7613 = !DILocation(line: 1642, column: 4, scope: !7523)
!7614 = !DILocation(line: 1643, column: 3, scope: !7504)
!7615 = !DILocation(line: 1644, column: 2, scope: !7493)
!7616 = !DILocation(line: 1645, column: 1, scope: !7469)
!7617 = distinct !DISubprogram(name: "ED_update_for_newframe", scope: !1, file: !1, line: 2051, type: !7618, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{null, !6905, !4255, !119}
!7620 = !DILocalVariable(name: "bmain", arg: 1, scope: !7617, file: !1, line: 2051, type: !6905)
!7621 = !DILocation(line: 2051, column: 35, scope: !7617)
!7622 = !DILocalVariable(name: "scene", arg: 2, scope: !7617, file: !1, line: 2051, type: !4255)
!7623 = !DILocation(line: 2051, column: 49, scope: !7617)
!7624 = !DILocalVariable(name: "UNUSED_mute", arg: 3, scope: !7617, file: !1, line: 2051, type: !119)
!7625 = !DILocation(line: 2051, column: 60, scope: !7617)
!7626 = !DILocalVariable(name: "wm", scope: !7617, file: !1, line: 2053, type: !5444)
!7627 = !DILocation(line: 2053, column: 19, scope: !7617)
!7628 = !DILocation(line: 2053, column: 24, scope: !7617)
!7629 = !DILocation(line: 2053, column: 31, scope: !7617)
!7630 = !DILocation(line: 2053, column: 34, scope: !7617)
!7631 = !DILocalVariable(name: "window", scope: !7617, file: !1, line: 2054, type: !4253)
!7632 = !DILocation(line: 2054, column: 12, scope: !7617)
!7633 = !DILocalVariable(name: "layers", scope: !7617, file: !1, line: 2055, type: !119)
!7634 = !DILocation(line: 2055, column: 6, scope: !7617)
!7635 = !DILocalVariable(name: "camera", scope: !7617, file: !1, line: 2058, type: !371)
!7636 = !DILocation(line: 2058, column: 8, scope: !7617)
!7637 = !DILocation(line: 2058, column: 46, scope: !7617)
!7638 = !DILocation(line: 2058, column: 17, scope: !7617)
!7639 = !DILocation(line: 2059, column: 6, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 2059, column: 6)
!7641 = !DILocation(line: 2059, column: 13, scope: !7640)
!7642 = !DILocation(line: 2059, column: 16, scope: !7640)
!7643 = !DILocation(line: 2059, column: 23, scope: !7640)
!7644 = !DILocation(line: 2059, column: 33, scope: !7640)
!7645 = !DILocation(line: 2059, column: 30, scope: !7640)
!7646 = !DILocation(line: 2059, column: 6, scope: !7617)
!7647 = !DILocalVariable(name: "sc", scope: !7648, file: !1, line: 2060, type: !372)
!7648 = distinct !DILexicalBlock(scope: !7640, file: !1, line: 2059, column: 41)
!7649 = !DILocation(line: 2060, column: 12, scope: !7648)
!7650 = !DILocation(line: 2061, column: 19, scope: !7648)
!7651 = !DILocation(line: 2061, column: 3, scope: !7648)
!7652 = !DILocation(line: 2061, column: 10, scope: !7648)
!7653 = !DILocation(line: 2061, column: 17, scope: !7648)
!7654 = !DILocation(line: 2063, column: 13, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 2063, column: 3)
!7656 = !DILocation(line: 2063, column: 20, scope: !7655)
!7657 = !DILocation(line: 2063, column: 27, scope: !7655)
!7658 = !DILocation(line: 2063, column: 11, scope: !7655)
!7659 = !DILocation(line: 2063, column: 8, scope: !7655)
!7660 = !DILocation(line: 2063, column: 34, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7655, file: !1, line: 2063, column: 3)
!7662 = !DILocation(line: 2063, column: 3, scope: !7655)
!7663 = !DILocation(line: 2064, column: 33, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7661, file: !1, line: 2063, column: 56)
!7665 = !DILocation(line: 2064, column: 4, scope: !7664)
!7666 = !DILocation(line: 2065, column: 3, scope: !7664)
!7667 = !DILocation(line: 2063, column: 43, scope: !7661)
!7668 = !DILocation(line: 2063, column: 47, scope: !7661)
!7669 = !DILocation(line: 2063, column: 50, scope: !7661)
!7670 = !DILocation(line: 2063, column: 41, scope: !7661)
!7671 = !DILocation(line: 2063, column: 3, scope: !7661)
!7672 = distinct !{!7672, !7662, !7673}
!7673 = !DILocation(line: 2065, column: 3, scope: !7655)
!7674 = !DILocation(line: 2066, column: 2, scope: !7648)
!7675 = !DILocation(line: 2071, column: 23, scope: !7617)
!7676 = !DILocation(line: 2071, column: 30, scope: !7617)
!7677 = !DILocation(line: 2071, column: 37, scope: !7617)
!7678 = !DILocation(line: 2071, column: 39, scope: !7617)
!7679 = !DILocation(line: 2071, column: 2, scope: !7617)
!7680 = !DILocation(line: 2074, column: 16, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 2074, column: 2)
!7682 = !DILocation(line: 2074, column: 20, scope: !7681)
!7683 = !DILocation(line: 2074, column: 28, scope: !7681)
!7684 = !DILocation(line: 2074, column: 14, scope: !7681)
!7685 = !DILocation(line: 2074, column: 7, scope: !7681)
!7686 = !DILocation(line: 2074, column: 35, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7681, file: !1, line: 2074, column: 2)
!7688 = !DILocation(line: 2074, column: 2, scope: !7681)
!7689 = !DILocation(line: 2075, column: 39, scope: !7687)
!7690 = !DILocation(line: 2075, column: 47, scope: !7687)
!7691 = !DILocation(line: 2075, column: 55, scope: !7687)
!7692 = !DILocation(line: 2075, column: 13, scope: !7687)
!7693 = !DILocation(line: 2075, column: 10, scope: !7687)
!7694 = !DILocation(line: 2075, column: 3, scope: !7687)
!7695 = !DILocation(line: 2074, column: 52, scope: !7687)
!7696 = !DILocation(line: 2074, column: 60, scope: !7687)
!7697 = !DILocation(line: 2074, column: 50, scope: !7687)
!7698 = !DILocation(line: 2074, column: 2, scope: !7687)
!7699 = distinct !{!7699, !7688, !7700}
!7700 = !DILocation(line: 2075, column: 60, scope: !7681)
!7701 = !DILocation(line: 2078, column: 32, scope: !7617)
!7702 = !DILocation(line: 2078, column: 39, scope: !7617)
!7703 = !DILocation(line: 2078, column: 49, scope: !7617)
!7704 = !DILocation(line: 2078, column: 56, scope: !7617)
!7705 = !DILocation(line: 2078, column: 63, scope: !7617)
!7706 = !DILocation(line: 2078, column: 2, scope: !7617)
!7707 = !DILocation(line: 2090, column: 6, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 2090, column: 6)
!7709 = !DILocation(line: 2090, column: 13, scope: !7708)
!7710 = !DILocation(line: 2090, column: 23, scope: !7708)
!7711 = !DILocation(line: 2090, column: 26, scope: !7708)
!7712 = !DILocation(line: 2090, column: 33, scope: !7708)
!7713 = !DILocation(line: 2090, column: 6, scope: !7617)
!7714 = !DILocation(line: 2091, column: 28, scope: !7708)
!7715 = !DILocation(line: 2091, column: 35, scope: !7708)
!7716 = !DILocation(line: 2091, column: 3, scope: !7708)
!7717 = !DILocalVariable(name: "tex", scope: !7718, file: !1, line: 2095, type: !7719)
!7718 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 2094, column: 2)
!7719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 64)
!7720 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !541, line: 261, baseType: !554)
!7721 = !DILocation(line: 2095, column: 8, scope: !7718)
!7722 = !DILocation(line: 2096, column: 14, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7718, file: !1, line: 2096, column: 3)
!7724 = !DILocation(line: 2096, column: 21, scope: !7723)
!7725 = !DILocation(line: 2096, column: 25, scope: !7723)
!7726 = !DILocation(line: 2096, column: 12, scope: !7723)
!7727 = !DILocation(line: 2096, column: 8, scope: !7723)
!7728 = !DILocation(line: 2096, column: 32, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7723, file: !1, line: 2096, column: 3)
!7730 = !DILocation(line: 2096, column: 3, scope: !7723)
!7731 = !DILocation(line: 2097, column: 8, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7729, file: !1, line: 2097, column: 8)
!7733 = !DILocation(line: 2097, column: 13, scope: !7732)
!7734 = !DILocation(line: 2097, column: 23, scope: !7732)
!7735 = !DILocation(line: 2097, column: 26, scope: !7732)
!7736 = !DILocation(line: 2097, column: 31, scope: !7732)
!7737 = !DILocation(line: 2097, column: 8, scope: !7729)
!7738 = !DILocation(line: 2098, column: 25, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7732, file: !1, line: 2097, column: 41)
!7740 = !DILocation(line: 2098, column: 30, scope: !7739)
!7741 = !DILocation(line: 2098, column: 5, scope: !7739)
!7742 = !DILocation(line: 2099, column: 4, scope: !7739)
!7743 = !DILocation(line: 2096, column: 43, scope: !7729)
!7744 = !DILocation(line: 2096, column: 48, scope: !7729)
!7745 = !DILocation(line: 2096, column: 51, scope: !7729)
!7746 = !DILocation(line: 2096, column: 41, scope: !7729)
!7747 = !DILocation(line: 2096, column: 3, scope: !7729)
!7748 = distinct !{!7748, !7730, !7749}
!7749 = !DILocation(line: 2099, column: 4, scope: !7723)
!7750 = !DILocation(line: 2102, column: 1, scope: !7617)
!7751 = distinct !DISubprogram(name: "ED_screen_delete_scene", scope: !1, file: !1, line: 1709, type: !7752, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{null, !4448, !4255}
!7754 = !DILocalVariable(name: "C", arg: 1, scope: !7751, file: !1, line: 1709, type: !4448)
!7755 = !DILocation(line: 1709, column: 39, scope: !7751)
!7756 = !DILocalVariable(name: "scene", arg: 2, scope: !7751, file: !1, line: 1709, type: !4255)
!7757 = !DILocation(line: 1709, column: 49, scope: !7751)
!7758 = !DILocalVariable(name: "bmain", scope: !7751, file: !1, line: 1711, type: !6905)
!7759 = !DILocation(line: 1711, column: 8, scope: !7751)
!7760 = !DILocation(line: 1711, column: 30, scope: !7751)
!7761 = !DILocation(line: 1711, column: 16, scope: !7751)
!7762 = !DILocalVariable(name: "newscene", scope: !7751, file: !1, line: 1712, type: !4255)
!7763 = !DILocation(line: 1712, column: 9, scope: !7751)
!7764 = !DILocation(line: 1714, column: 6, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7751, file: !1, line: 1714, column: 6)
!7766 = !DILocation(line: 1714, column: 13, scope: !7765)
!7767 = !DILocation(line: 1714, column: 16, scope: !7765)
!7768 = !DILocation(line: 1714, column: 6, scope: !7751)
!7769 = !DILocation(line: 1715, column: 14, scope: !7765)
!7770 = !DILocation(line: 1715, column: 21, scope: !7765)
!7771 = !DILocation(line: 1715, column: 24, scope: !7765)
!7772 = !DILocation(line: 1715, column: 12, scope: !7765)
!7773 = !DILocation(line: 1715, column: 3, scope: !7765)
!7774 = !DILocation(line: 1716, column: 11, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7765, file: !1, line: 1716, column: 11)
!7776 = !DILocation(line: 1716, column: 18, scope: !7775)
!7777 = !DILocation(line: 1716, column: 21, scope: !7775)
!7778 = !DILocation(line: 1716, column: 11, scope: !7765)
!7779 = !DILocation(line: 1717, column: 14, scope: !7775)
!7780 = !DILocation(line: 1717, column: 21, scope: !7775)
!7781 = !DILocation(line: 1717, column: 24, scope: !7775)
!7782 = !DILocation(line: 1717, column: 12, scope: !7775)
!7783 = !DILocation(line: 1717, column: 3, scope: !7775)
!7784 = !DILocation(line: 1719, column: 3, scope: !7775)
!7785 = !DILocation(line: 1721, column: 22, scope: !7751)
!7786 = !DILocation(line: 1721, column: 39, scope: !7751)
!7787 = !DILocation(line: 1721, column: 25, scope: !7751)
!7788 = !DILocation(line: 1721, column: 43, scope: !7751)
!7789 = !DILocation(line: 1721, column: 2, scope: !7751)
!7790 = !DILocation(line: 1723, column: 19, scope: !7751)
!7791 = !DILocation(line: 1723, column: 26, scope: !7751)
!7792 = !DILocation(line: 1723, column: 33, scope: !7751)
!7793 = !DILocation(line: 1723, column: 2, scope: !7751)
!7794 = !DILocation(line: 1724, column: 1, scope: !7751)
!7795 = distinct !DISubprogram(name: "ED_screen_full_newspace", scope: !1, file: !1, line: 1726, type: !7796, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!3041, !4448, !3041, !119}
!7798 = !DILocalVariable(name: "C", arg: 1, scope: !7795, file: !1, line: 1726, type: !4448)
!7799 = !DILocation(line: 1726, column: 44, scope: !7795)
!7800 = !DILocalVariable(name: "sa", arg: 2, scope: !7795, file: !1, line: 1726, type: !3041)
!7801 = !DILocation(line: 1726, column: 56, scope: !7795)
!7802 = !DILocalVariable(name: "type", arg: 3, scope: !7795, file: !1, line: 1726, type: !119)
!7803 = !DILocation(line: 1726, column: 64, scope: !7795)
!7804 = !DILocalVariable(name: "win", scope: !7795, file: !1, line: 1728, type: !4253)
!7805 = !DILocation(line: 1728, column: 12, scope: !7795)
!7806 = !DILocation(line: 1728, column: 32, scope: !7795)
!7807 = !DILocation(line: 1728, column: 18, scope: !7795)
!7808 = !DILocalVariable(name: "screen", scope: !7795, file: !1, line: 1729, type: !372)
!7809 = !DILocation(line: 1729, column: 11, scope: !7795)
!7810 = !DILocation(line: 1729, column: 34, scope: !7795)
!7811 = !DILocation(line: 1729, column: 20, scope: !7795)
!7812 = !DILocalVariable(name: "newsa", scope: !7795, file: !1, line: 1730, type: !3041)
!7813 = !DILocation(line: 1730, column: 11, scope: !7795)
!7814 = !DILocation(line: 1732, column: 7, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7795, file: !1, line: 1732, column: 6)
!7816 = !DILocation(line: 1732, column: 10, scope: !7815)
!7817 = !DILocation(line: 1732, column: 13, scope: !7815)
!7818 = !DILocation(line: 1732, column: 17, scope: !7815)
!7819 = !DILocation(line: 1732, column: 22, scope: !7815)
!7820 = !DILocation(line: 1732, column: 6, scope: !7795)
!7821 = !DILocation(line: 1733, column: 34, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7815, file: !1, line: 1732, column: 31)
!7823 = !DILocation(line: 1733, column: 37, scope: !7822)
!7824 = !DILocation(line: 1733, column: 42, scope: !7822)
!7825 = !DILocation(line: 1733, column: 11, scope: !7822)
!7826 = !DILocation(line: 1733, column: 9, scope: !7822)
!7827 = !DILocation(line: 1734, column: 2, scope: !7822)
!7828 = !DILocation(line: 1736, column: 7, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7795, file: !1, line: 1736, column: 6)
!7830 = !DILocation(line: 1736, column: 6, scope: !7795)
!7831 = !DILocation(line: 1737, column: 7, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !1, line: 1737, column: 7)
!7833 = distinct !DILexicalBlock(scope: !7829, file: !1, line: 1736, column: 14)
!7834 = !DILocation(line: 1737, column: 11, scope: !7832)
!7835 = !DILocation(line: 1737, column: 16, scope: !7832)
!7836 = !DILocation(line: 1737, column: 20, scope: !7832)
!7837 = !DILocation(line: 1737, column: 28, scope: !7832)
!7838 = !DILocation(line: 1737, column: 34, scope: !7832)
!7839 = !DILocation(line: 1737, column: 7, scope: !7833)
!7840 = !DILocation(line: 1741, column: 17, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !1, line: 1741, column: 4)
!7842 = distinct !DILexicalBlock(scope: !7832, file: !1, line: 1737, column: 55)
!7843 = !DILocation(line: 1741, column: 25, scope: !7841)
!7844 = !DILocation(line: 1741, column: 34, scope: !7841)
!7845 = !DILocation(line: 1741, column: 15, scope: !7841)
!7846 = !DILocation(line: 1741, column: 9, scope: !7841)
!7847 = !DILocation(line: 1741, column: 41, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7841, file: !1, line: 1741, column: 4)
!7849 = !DILocation(line: 1741, column: 4, scope: !7841)
!7850 = !DILocation(line: 1742, column: 11, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !1, line: 1742, column: 9)
!7852 = distinct !DILexicalBlock(scope: !7848, file: !1, line: 1741, column: 69)
!7853 = !DILocation(line: 1742, column: 15, scope: !7851)
!7854 = !DILocation(line: 1742, column: 20, scope: !7851)
!7855 = !DILocation(line: 1742, column: 9, scope: !7852)
!7856 = !DILocation(line: 1743, column: 6, scope: !7851)
!7857 = !DILocation(line: 1744, column: 4, scope: !7852)
!7858 = !DILocation(line: 1741, column: 56, scope: !7848)
!7859 = !DILocation(line: 1741, column: 63, scope: !7848)
!7860 = !DILocation(line: 1741, column: 54, scope: !7848)
!7861 = !DILocation(line: 1741, column: 4, scope: !7848)
!7862 = distinct !{!7862, !7849, !7863}
!7863 = !DILocation(line: 1744, column: 4, scope: !7841)
!7864 = !DILocation(line: 1745, column: 3, scope: !7842)
!7865 = !DILocation(line: 1747, column: 12, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7832, file: !1, line: 1746, column: 8)
!7867 = !DILocation(line: 1747, column: 10, scope: !7866)
!7868 = !DILocation(line: 1749, column: 2, scope: !7833)
!7869 = !DILocation(line: 1751, column: 19, scope: !7795)
!7870 = !DILocation(line: 1751, column: 22, scope: !7795)
!7871 = !DILocation(line: 1751, column: 29, scope: !7795)
!7872 = !DILocation(line: 1751, column: 2, scope: !7795)
!7873 = !DILocation(line: 1753, column: 9, scope: !7795)
!7874 = !DILocation(line: 1753, column: 2, scope: !7795)
!7875 = distinct !DISubprogram(name: "ED_screen_state_toggle", scope: !1, file: !1, line: 1806, type: !7876, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!1102, !4448, !4253, !3041, !3978}
!7878 = !DILocalVariable(name: "C", arg: 1, scope: !7875, file: !1, line: 1806, type: !4448)
!7879 = !DILocation(line: 1806, column: 43, scope: !7875)
!7880 = !DILocalVariable(name: "win", arg: 2, scope: !7875, file: !1, line: 1806, type: !4253)
!7881 = !DILocation(line: 1806, column: 56, scope: !7875)
!7882 = !DILocalVariable(name: "sa", arg: 3, scope: !7875, file: !1, line: 1806, type: !3041)
!7883 = !DILocation(line: 1806, column: 70, scope: !7875)
!7884 = !DILocalVariable(name: "state", arg: 4, scope: !7875, file: !1, line: 1806, type: !3978)
!7885 = !DILocation(line: 1806, column: 86, scope: !7875)
!7886 = !DILocalVariable(name: "sc", scope: !7875, file: !1, line: 1808, type: !372)
!7887 = !DILocation(line: 1808, column: 11, scope: !7875)
!7888 = !DILocalVariable(name: "oldscreen", scope: !7875, file: !1, line: 1808, type: !372)
!7889 = !DILocation(line: 1808, column: 16, scope: !7875)
!7890 = !DILocalVariable(name: "ar", scope: !7875, file: !1, line: 1809, type: !5056)
!7891 = !DILocation(line: 1809, column: 11, scope: !7875)
!7892 = !DILocation(line: 1811, column: 6, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7875, file: !1, line: 1811, column: 6)
!7894 = !DILocation(line: 1811, column: 6, scope: !7875)
!7895 = !DILocation(line: 1815, column: 13, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !1, line: 1815, column: 3)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !1, line: 1811, column: 10)
!7898 = !DILocation(line: 1815, column: 17, scope: !7896)
!7899 = !DILocation(line: 1815, column: 28, scope: !7896)
!7900 = !DILocation(line: 1815, column: 11, scope: !7896)
!7901 = !DILocation(line: 1815, column: 8, scope: !7896)
!7902 = !DILocation(line: 1815, column: 35, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7896, file: !1, line: 1815, column: 3)
!7904 = !DILocation(line: 1815, column: 3, scope: !7896)
!7905 = !DILocation(line: 1816, column: 17, scope: !7903)
!7906 = !DILocation(line: 1816, column: 21, scope: !7903)
!7907 = !DILocation(line: 1816, column: 25, scope: !7903)
!7908 = !DILocation(line: 1816, column: 4, scope: !7903)
!7909 = !DILocation(line: 1815, column: 44, scope: !7903)
!7910 = !DILocation(line: 1815, column: 48, scope: !7903)
!7911 = !DILocation(line: 1815, column: 42, scope: !7903)
!7912 = !DILocation(line: 1815, column: 3, scope: !7903)
!7913 = distinct !{!7913, !7904, !7914}
!7914 = !DILocation(line: 1816, column: 33, scope: !7896)
!7915 = !DILocation(line: 1819, column: 23, scope: !7897)
!7916 = !DILocation(line: 1819, column: 3, scope: !7897)
!7917 = !DILocation(line: 1820, column: 2, scope: !7897)
!7918 = !DILocation(line: 1822, column: 6, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7875, file: !1, line: 1822, column: 6)
!7920 = !DILocation(line: 1822, column: 9, scope: !7919)
!7921 = !DILocation(line: 1822, column: 12, scope: !7919)
!7922 = !DILocation(line: 1822, column: 16, scope: !7919)
!7923 = !DILocation(line: 1822, column: 6, scope: !7875)
!7924 = !DILocalVariable(name: "old", scope: !7925, file: !1, line: 1824, type: !3041)
!7925 = distinct !DILexicalBlock(scope: !7919, file: !1, line: 1822, column: 22)
!7926 = !DILocation(line: 1824, column: 12, scope: !7925)
!7927 = !DILocation(line: 1826, column: 8, scope: !7925)
!7928 = !DILocation(line: 1826, column: 12, scope: !7925)
!7929 = !DILocation(line: 1826, column: 6, scope: !7925)
!7930 = !DILocation(line: 1827, column: 15, scope: !7925)
!7931 = !DILocation(line: 1827, column: 20, scope: !7925)
!7932 = !DILocation(line: 1827, column: 13, scope: !7925)
!7933 = !DILocation(line: 1829, column: 3, scope: !7925)
!7934 = !DILocation(line: 1829, column: 7, scope: !7925)
!7935 = !DILocation(line: 1829, column: 13, scope: !7925)
!7936 = !DILocation(line: 1832, column: 14, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1832, column: 3)
!7938 = !DILocation(line: 1832, column: 18, scope: !7937)
!7939 = !DILocation(line: 1832, column: 27, scope: !7937)
!7940 = !DILocation(line: 1832, column: 12, scope: !7937)
!7941 = !DILocation(line: 1832, column: 8, scope: !7937)
!7942 = !DILocation(line: 1832, column: 34, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7937, file: !1, line: 1832, column: 3)
!7944 = !DILocation(line: 1832, column: 3, scope: !7937)
!7945 = !DILocation(line: 1833, column: 8, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7943, file: !1, line: 1833, column: 8)
!7947 = !DILocation(line: 1833, column: 13, scope: !7946)
!7948 = !DILocation(line: 1833, column: 8, scope: !7943)
!7949 = !DILocation(line: 1833, column: 19, scope: !7946)
!7950 = !DILocation(line: 1832, column: 45, scope: !7943)
!7951 = !DILocation(line: 1832, column: 50, scope: !7943)
!7952 = !DILocation(line: 1832, column: 43, scope: !7943)
!7953 = !DILocation(line: 1832, column: 3, scope: !7943)
!7954 = distinct !{!7954, !7944, !7955}
!7955 = !DILocation(line: 1833, column: 19, scope: !7937)
!7956 = !DILocation(line: 1834, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1834, column: 7)
!7958 = !DILocation(line: 1834, column: 11, scope: !7957)
!7959 = !DILocation(line: 1834, column: 7, scope: !7925)
!7960 = !DILocation(line: 1835, column: 10, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !1, line: 1835, column: 8)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !1, line: 1834, column: 20)
!7963 = !DILocation(line: 1835, column: 16, scope: !7961)
!7964 = !DILocation(line: 1835, column: 8, scope: !7962)
!7965 = !DILocation(line: 1836, column: 5, scope: !7961)
!7966 = !DILocation(line: 1837, column: 4, scope: !7962)
!7967 = !DILocation(line: 1840, column: 7, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1840, column: 7)
!7969 = !DILocation(line: 1840, column: 13, scope: !7968)
!7970 = !DILocation(line: 1840, column: 7, scope: !7925)
!7971 = !DILocation(line: 1842, column: 14, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !1, line: 1842, column: 4)
!7973 = distinct !DILexicalBlock(scope: !7968, file: !1, line: 1840, column: 28)
!7974 = !DILocation(line: 1842, column: 18, scope: !7972)
!7975 = !DILocation(line: 1842, column: 29, scope: !7972)
!7976 = !DILocation(line: 1842, column: 12, scope: !7972)
!7977 = !DILocation(line: 1842, column: 9, scope: !7972)
!7978 = !DILocation(line: 1842, column: 36, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7972, file: !1, line: 1842, column: 4)
!7980 = !DILocation(line: 1842, column: 4, scope: !7972)
!7981 = !DILocation(line: 1843, column: 16, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7979, file: !1, line: 1842, column: 55)
!7983 = !DILocation(line: 1843, column: 20, scope: !7982)
!7984 = !DILocation(line: 1843, column: 5, scope: !7982)
!7985 = !DILocation(line: 1843, column: 9, scope: !7982)
!7986 = !DILocation(line: 1843, column: 14, scope: !7982)
!7987 = !DILocation(line: 1844, column: 4, scope: !7982)
!7988 = !DILocation(line: 1842, column: 45, scope: !7979)
!7989 = !DILocation(line: 1842, column: 49, scope: !7979)
!7990 = !DILocation(line: 1842, column: 43, scope: !7979)
!7991 = !DILocation(line: 1842, column: 4, scope: !7979)
!7992 = distinct !{!7992, !7980, !7993}
!7993 = !DILocation(line: 1844, column: 4, scope: !7972)
!7994 = !DILocation(line: 1845, column: 3, scope: !7973)
!7995 = !DILocation(line: 1847, column: 21, scope: !7925)
!7996 = !DILocation(line: 1847, column: 26, scope: !7925)
!7997 = !DILocation(line: 1847, column: 3, scope: !7925)
!7998 = !DILocation(line: 1848, column: 7, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 1848, column: 7)
!8000 = !DILocation(line: 1848, column: 11, scope: !7999)
!8001 = !DILocation(line: 1848, column: 16, scope: !7999)
!8002 = !DILocation(line: 1848, column: 7, scope: !7925)
!8003 = !DILocation(line: 1848, column: 34, scope: !7999)
!8004 = !DILocation(line: 1848, column: 38, scope: !7999)
!8005 = !DILocation(line: 1848, column: 43, scope: !7999)
!8006 = !DILocation(line: 1849, column: 3, scope: !7925)
!8007 = !DILocation(line: 1849, column: 8, scope: !7925)
!8008 = !DILocation(line: 1849, column: 13, scope: !7925)
!8009 = !DILocation(line: 1852, column: 19, scope: !7925)
!8010 = !DILocation(line: 1852, column: 30, scope: !7925)
!8011 = !DILocation(line: 1852, column: 3, scope: !7925)
!8012 = !DILocation(line: 1852, column: 7, scope: !7925)
!8013 = !DILocation(line: 1852, column: 17, scope: !7925)
!8014 = !DILocation(line: 1853, column: 3, scope: !7925)
!8015 = !DILocation(line: 1853, column: 14, scope: !7925)
!8016 = !DILocation(line: 1853, column: 24, scope: !7925)
!8017 = !DILocation(line: 1855, column: 17, scope: !7925)
!8018 = !DILocation(line: 1855, column: 20, scope: !7925)
!8019 = !DILocation(line: 1855, column: 3, scope: !7925)
!8020 = !DILocation(line: 1857, column: 19, scope: !7925)
!8021 = !DILocation(line: 1857, column: 3, scope: !7925)
!8022 = !DILocation(line: 1858, column: 35, scope: !7925)
!8023 = !DILocation(line: 1858, column: 21, scope: !7925)
!8024 = !DILocation(line: 1858, column: 39, scope: !7925)
!8025 = !DILocation(line: 1858, column: 3, scope: !7925)
!8026 = !DILocation(line: 1860, column: 2, scope: !7925)
!8027 = !DILocalVariable(name: "newa", scope: !8028, file: !1, line: 1863, type: !3041)
!8028 = distinct !DILexicalBlock(scope: !7919, file: !1, line: 1861, column: 7)
!8029 = !DILocation(line: 1863, column: 12, scope: !8028)
!8030 = !DILocalVariable(name: "newname", scope: !8028, file: !1, line: 1864, type: !426)
!8031 = !DILocation(line: 1864, column: 8, scope: !8028)
!8032 = !DILocation(line: 1866, column: 15, scope: !8028)
!8033 = !DILocation(line: 1866, column: 20, scope: !8028)
!8034 = !DILocation(line: 1866, column: 13, scope: !8028)
!8035 = !DILocation(line: 1868, column: 22, scope: !8028)
!8036 = !DILocation(line: 1868, column: 3, scope: !8028)
!8037 = !DILocation(line: 1868, column: 14, scope: !8028)
!8038 = !DILocation(line: 1868, column: 20, scope: !8028)
!8039 = !DILocation(line: 1869, column: 16, scope: !8028)
!8040 = !DILocation(line: 1869, column: 51, scope: !8028)
!8041 = !DILocation(line: 1869, column: 62, scope: !8028)
!8042 = !DILocation(line: 1869, column: 65, scope: !8028)
!8043 = !DILocation(line: 1869, column: 70, scope: !8028)
!8044 = !DILocation(line: 1869, column: 3, scope: !8028)
!8045 = !DILocation(line: 1870, column: 22, scope: !8028)
!8046 = !DILocation(line: 1870, column: 27, scope: !8028)
!8047 = !DILocation(line: 1870, column: 38, scope: !8028)
!8048 = !DILocation(line: 1870, column: 45, scope: !8028)
!8049 = !DILocation(line: 1870, column: 8, scope: !8028)
!8050 = !DILocation(line: 1870, column: 6, scope: !8028)
!8051 = !DILocation(line: 1871, column: 15, scope: !8028)
!8052 = !DILocation(line: 1871, column: 3, scope: !8028)
!8053 = !DILocation(line: 1871, column: 7, scope: !8028)
!8054 = !DILocation(line: 1871, column: 13, scope: !8028)
!8055 = !DILocation(line: 1874, column: 19, scope: !8028)
!8056 = !DILocation(line: 1874, column: 30, scope: !8028)
!8057 = !DILocation(line: 1874, column: 3, scope: !8028)
!8058 = !DILocation(line: 1874, column: 7, scope: !8028)
!8059 = !DILocation(line: 1874, column: 17, scope: !8028)
!8060 = !DILocation(line: 1875, column: 3, scope: !8028)
!8061 = !DILocation(line: 1875, column: 14, scope: !8028)
!8062 = !DILocation(line: 1875, column: 24, scope: !8028)
!8063 = !DILocation(line: 1879, column: 8, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 1879, column: 7)
!8065 = !DILocation(line: 1879, column: 7, scope: !8028)
!8066 = !DILocation(line: 1880, column: 9, scope: !8064)
!8067 = !DILocation(line: 1880, column: 20, scope: !8064)
!8068 = !DILocation(line: 1880, column: 29, scope: !8064)
!8069 = !DILocation(line: 1880, column: 7, scope: !8064)
!8070 = !DILocation(line: 1880, column: 4, scope: !8064)
!8071 = !DILocation(line: 1882, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 1882, column: 7)
!8073 = !DILocation(line: 1882, column: 13, scope: !8072)
!8074 = !DILocation(line: 1882, column: 7, scope: !8028)
!8075 = !DILocation(line: 1884, column: 22, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8072, file: !1, line: 1882, column: 33)
!8077 = !DILocation(line: 1884, column: 37, scope: !8076)
!8078 = !DILocation(line: 1884, column: 41, scope: !8076)
!8079 = !DILocation(line: 1884, column: 50, scope: !8076)
!8080 = !DILocation(line: 1884, column: 26, scope: !8076)
!8081 = !DILocation(line: 1884, column: 11, scope: !8076)
!8082 = !DILocation(line: 1884, column: 9, scope: !8076)
!8083 = !DILocation(line: 1885, column: 21, scope: !8076)
!8084 = !DILocation(line: 1885, column: 24, scope: !8076)
!8085 = !DILocation(line: 1885, column: 4, scope: !8076)
!8086 = !DILocation(line: 1888, column: 11, scope: !8076)
!8087 = !DILocation(line: 1888, column: 17, scope: !8076)
!8088 = !DILocation(line: 1888, column: 9, scope: !8076)
!8089 = !DILocation(line: 1889, column: 22, scope: !8076)
!8090 = !DILocation(line: 1889, column: 28, scope: !8076)
!8091 = !DILocation(line: 1889, column: 4, scope: !8076)
!8092 = !DILocation(line: 1890, column: 4, scope: !8076)
!8093 = !DILocation(line: 1890, column: 8, scope: !8076)
!8094 = !DILocation(line: 1890, column: 13, scope: !8076)
!8095 = !DILocation(line: 1892, column: 15, scope: !8076)
!8096 = !DILocation(line: 1892, column: 4, scope: !8076)
!8097 = !DILocation(line: 1892, column: 8, scope: !8076)
!8098 = !DILocation(line: 1892, column: 13, scope: !8076)
!8099 = !DILocation(line: 1893, column: 17, scope: !8076)
!8100 = !DILocation(line: 1893, column: 4, scope: !8076)
!8101 = !DILocation(line: 1893, column: 10, scope: !8076)
!8102 = !DILocation(line: 1893, column: 15, scope: !8076)
!8103 = !DILocation(line: 1894, column: 23, scope: !8076)
!8104 = !DILocation(line: 1894, column: 4, scope: !8076)
!8105 = !DILocation(line: 1894, column: 10, scope: !8076)
!8106 = !DILocation(line: 1894, column: 16, scope: !8076)
!8107 = !DILocation(line: 1894, column: 21, scope: !8076)
!8108 = !DILocation(line: 1895, column: 3, scope: !8076)
!8109 = !DILocation(line: 1896, column: 12, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8072, file: !1, line: 1896, column: 12)
!8111 = !DILocation(line: 1896, column: 18, scope: !8110)
!8112 = !DILocation(line: 1896, column: 12, scope: !8072)
!8113 = !DILocation(line: 1897, column: 22, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8110, file: !1, line: 1896, column: 33)
!8115 = !DILocation(line: 1897, column: 26, scope: !8114)
!8116 = !DILocation(line: 1897, column: 35, scope: !8114)
!8117 = !DILocation(line: 1897, column: 11, scope: !8114)
!8118 = !DILocation(line: 1897, column: 9, scope: !8114)
!8119 = !DILocation(line: 1900, column: 22, scope: !8114)
!8120 = !DILocation(line: 1900, column: 28, scope: !8114)
!8121 = !DILocation(line: 1900, column: 4, scope: !8114)
!8122 = !DILocation(line: 1901, column: 17, scope: !8114)
!8123 = !DILocation(line: 1901, column: 21, scope: !8114)
!8124 = !DILocation(line: 1901, column: 4, scope: !8114)
!8125 = !DILocation(line: 1901, column: 10, scope: !8114)
!8126 = !DILocation(line: 1901, column: 15, scope: !8114)
!8127 = !DILocation(line: 1904, column: 14, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8114, file: !1, line: 1904, column: 4)
!8129 = !DILocation(line: 1904, column: 20, scope: !8128)
!8130 = !DILocation(line: 1904, column: 31, scope: !8128)
!8131 = !DILocation(line: 1904, column: 12, scope: !8128)
!8132 = !DILocation(line: 1904, column: 9, scope: !8128)
!8133 = !DILocation(line: 1904, column: 38, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8128, file: !1, line: 1904, column: 4)
!8135 = !DILocation(line: 1904, column: 4, scope: !8128)
!8136 = !DILocation(line: 1905, column: 26, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8134, file: !1, line: 1904, column: 57)
!8138 = !DILocation(line: 1905, column: 30, scope: !8137)
!8139 = !DILocation(line: 1905, column: 5, scope: !8137)
!8140 = !DILocation(line: 1905, column: 9, scope: !8137)
!8141 = !DILocation(line: 1905, column: 24, scope: !8137)
!8142 = !DILocation(line: 1907, column: 9, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8137, file: !1, line: 1907, column: 9)
!8144 = !DILocation(line: 1907, column: 9, scope: !8137)
!8145 = !DILocation(line: 1912, column: 6, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8143, file: !1, line: 1911, column: 5)
!8147 = !DILocation(line: 1912, column: 10, scope: !8146)
!8148 = !DILocation(line: 1912, column: 15, scope: !8146)
!8149 = !DILocation(line: 1913, column: 5, scope: !8146)
!8150 = !DILocation(line: 1914, column: 4, scope: !8137)
!8151 = !DILocation(line: 1904, column: 47, scope: !8134)
!8152 = !DILocation(line: 1904, column: 51, scope: !8134)
!8153 = !DILocation(line: 1904, column: 45, scope: !8134)
!8154 = !DILocation(line: 1904, column: 4, scope: !8134)
!8155 = distinct !{!8155, !8135, !8156}
!8156 = !DILocation(line: 1914, column: 4, scope: !8128)
!8157 = !DILocation(line: 1916, column: 15, scope: !8114)
!8158 = !DILocation(line: 1916, column: 4, scope: !8114)
!8159 = !DILocation(line: 1916, column: 8, scope: !8114)
!8160 = !DILocation(line: 1916, column: 13, scope: !8114)
!8161 = !DILocation(line: 1917, column: 17, scope: !8114)
!8162 = !DILocation(line: 1917, column: 4, scope: !8114)
!8163 = !DILocation(line: 1917, column: 10, scope: !8114)
!8164 = !DILocation(line: 1917, column: 15, scope: !8114)
!8165 = !DILocation(line: 1918, column: 3, scope: !8114)
!8166 = !DILocation(line: 1923, column: 17, scope: !8028)
!8167 = !DILocation(line: 1923, column: 20, scope: !8028)
!8168 = !DILocation(line: 1923, column: 3, scope: !8028)
!8169 = !DILocation(line: 1927, column: 18, scope: !7875)
!8170 = !DILocation(line: 1927, column: 21, scope: !7875)
!8171 = !DILocation(line: 1927, column: 25, scope: !7875)
!8172 = !DILocation(line: 1927, column: 34, scope: !7875)
!8173 = !DILocation(line: 1927, column: 2, scope: !7875)
!8174 = !DILocation(line: 1929, column: 9, scope: !7875)
!8175 = !DILocation(line: 1929, column: 13, scope: !7875)
!8176 = !DILocation(line: 1929, column: 22, scope: !7875)
!8177 = !DILocation(line: 1929, column: 2, scope: !7875)
!8178 = !DILocation(line: 1930, column: 1, scope: !7875)
!8179 = distinct !DISubprogram(name: "ED_screen_full_prevspace", scope: !1, file: !1, line: 1756, type: !6298, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8180 = !DILocalVariable(name: "C", arg: 1, scope: !8179, file: !1, line: 1756, type: !4448)
!8181 = !DILocation(line: 1756, column: 41, scope: !8179)
!8182 = !DILocalVariable(name: "sa", arg: 2, scope: !8179, file: !1, line: 1756, type: !3041)
!8183 = !DILocation(line: 1756, column: 53, scope: !8179)
!8184 = !DILocalVariable(name: "win", scope: !8179, file: !1, line: 1758, type: !4253)
!8185 = !DILocation(line: 1758, column: 12, scope: !8179)
!8186 = !DILocation(line: 1758, column: 32, scope: !8179)
!8187 = !DILocation(line: 1758, column: 18, scope: !8179)
!8188 = !DILocation(line: 1760, column: 20, scope: !8179)
!8189 = !DILocation(line: 1760, column: 23, scope: !8179)
!8190 = !DILocation(line: 1760, column: 2, scope: !8179)
!8191 = !DILocation(line: 1762, column: 6, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8179, file: !1, line: 1762, column: 6)
!8193 = !DILocation(line: 1762, column: 10, scope: !8192)
!8194 = !DILocation(line: 1762, column: 6, scope: !8179)
!8195 = !DILocation(line: 1763, column: 26, scope: !8192)
!8196 = !DILocation(line: 1763, column: 29, scope: !8192)
!8197 = !DILocation(line: 1763, column: 34, scope: !8192)
!8198 = !DILocation(line: 1763, column: 3, scope: !8192)
!8199 = !DILocation(line: 1764, column: 1, scope: !8179)
!8200 = distinct !DISubprogram(name: "ED_screen_full_restore", scope: !1, file: !1, line: 1767, type: !6298, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8201 = !DILocalVariable(name: "C", arg: 1, scope: !8200, file: !1, line: 1767, type: !4448)
!8202 = !DILocation(line: 1767, column: 39, scope: !8200)
!8203 = !DILocalVariable(name: "sa", arg: 2, scope: !8200, file: !1, line: 1767, type: !3041)
!8204 = !DILocation(line: 1767, column: 51, scope: !8200)
!8205 = !DILocalVariable(name: "win", scope: !8200, file: !1, line: 1769, type: !4253)
!8206 = !DILocation(line: 1769, column: 12, scope: !8200)
!8207 = !DILocation(line: 1769, column: 32, scope: !8200)
!8208 = !DILocation(line: 1769, column: 18, scope: !8200)
!8209 = !DILocalVariable(name: "sl", scope: !8200, file: !1, line: 1770, type: !1262)
!8210 = !DILocation(line: 1770, column: 13, scope: !8200)
!8211 = !DILocation(line: 1770, column: 18, scope: !8200)
!8212 = !DILocation(line: 1770, column: 22, scope: !8200)
!8213 = !DILocation(line: 1770, column: 32, scope: !8200)
!8214 = !DILocalVariable(name: "screen", scope: !8200, file: !1, line: 1771, type: !372)
!8215 = !DILocation(line: 1771, column: 11, scope: !8200)
!8216 = !DILocation(line: 1771, column: 34, scope: !8200)
!8217 = !DILocation(line: 1771, column: 20, scope: !8200)
!8218 = !DILocalVariable(name: "state", scope: !8200, file: !1, line: 1772, type: !410)
!8219 = !DILocation(line: 1772, column: 8, scope: !8200)
!8220 = !DILocation(line: 1772, column: 17, scope: !8200)
!8221 = !DILocation(line: 1772, column: 26, scope: !8200)
!8222 = !DILocation(line: 1772, column: 34, scope: !8200)
!8223 = !DILocation(line: 1772, column: 16, scope: !8200)
!8224 = !DILocation(line: 1777, column: 6, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8200, file: !1, line: 1777, column: 6)
!8226 = !DILocation(line: 1777, column: 10, scope: !8225)
!8227 = !DILocation(line: 1777, column: 6, scope: !8200)
!8228 = !DILocation(line: 1781, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !1, line: 1781, column: 7)
!8230 = distinct !DILexicalBlock(scope: !8225, file: !1, line: 1777, column: 16)
!8231 = !DILocation(line: 1781, column: 11, scope: !8229)
!8232 = !DILocation(line: 1781, column: 21, scope: !8229)
!8233 = !DILocation(line: 1781, column: 7, scope: !8230)
!8234 = !DILocalVariable(name: "sima", scope: !8235, file: !1, line: 1782, type: !8236)
!8235 = distinct !DILexicalBlock(scope: !8229, file: !1, line: 1781, column: 37)
!8236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8237, size: 64)
!8237 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !4, line: 743, baseType: !8238)
!8238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !4, line: 710, size: 84672, elements: !8239)
!8239 = !{!8240, !8241, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302, !8303, !8304, !8305, !8306}
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8238, file: !4, line: 711, baseType: !1262, size: 64)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8238, file: !4, line: 711, baseType: !1262, size: 64, offset: 64)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !8238, file: !4, line: 712, baseType: !436, size: 128, offset: 128)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !8238, file: !4, line: 713, baseType: !119, size: 32, offset: 256)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8238, file: !4, line: 715, baseType: !119, size: 32, offset: 288)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !8238, file: !4, line: 717, baseType: !1519, size: 64, offset: 320)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !8238, file: !4, line: 718, baseType: !608, size: 320, offset: 384)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !8238, file: !4, line: 720, baseType: !1676, size: 64, offset: 704)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !8238, file: !4, line: 722, baseType: !8249, size: 42112, offset: 768)
!8249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !1313, line: 138, size: 42112, elements: !8250)
!8250 = !{!8251, !8252, !8253, !8254, !8255, !8256, !8257, !8258, !8259, !8260, !8261, !8264, !8283, !8284, !8285, !8286, !8287, !8288}
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8249, file: !1313, line: 139, baseType: !119, size: 32)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !8249, file: !1313, line: 140, baseType: !119, size: 32, offset: 32)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !8249, file: !1313, line: 141, baseType: !119, size: 32, offset: 64)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !8249, file: !1313, line: 142, baseType: !474, size: 32, offset: 96)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !8249, file: !1313, line: 143, baseType: !119, size: 32, offset: 128)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !8249, file: !1313, line: 144, baseType: !474, size: 32, offset: 160)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !8249, file: !1313, line: 145, baseType: !474, size: 32, offset: 192)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !8249, file: !1313, line: 146, baseType: !119, size: 32, offset: 224)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !8249, file: !1313, line: 147, baseType: !474, size: 32, offset: 256)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !8249, file: !1313, line: 148, baseType: !119, size: 32, offset: 288)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !8249, file: !1313, line: 149, baseType: !8262, size: 192, offset: 320)
!8262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 192, elements: !8263)
!8263 = !{!1401, !843}
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !8249, file: !1313, line: 150, baseType: !8265, size: 41280, offset: 512)
!8265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !1313, line: 118, size: 41280, elements: !8266)
!8266 = !{!8267, !8268, !8269, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278, !8279, !8280}
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !8265, file: !1313, line: 119, baseType: !119, size: 32)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !8265, file: !1313, line: 120, baseType: !119, size: 32, offset: 32)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !8265, file: !1313, line: 121, baseType: !8270, size: 8192, offset: 64)
!8270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 8192, elements: !642)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !8265, file: !1313, line: 122, baseType: !8270, size: 8192, offset: 8256)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !8265, file: !1313, line: 123, baseType: !8270, size: 8192, offset: 16448)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !8265, file: !1313, line: 124, baseType: !8270, size: 8192, offset: 24640)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !8265, file: !1313, line: 125, baseType: !8270, size: 8192, offset: 32832)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !8265, file: !1313, line: 126, baseType: !474, size: 32, offset: 41024)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !8265, file: !1313, line: 126, baseType: !474, size: 32, offset: 41056)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8265, file: !1313, line: 127, baseType: !410, size: 16, offset: 41088)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8265, file: !1313, line: 128, baseType: !410, size: 16, offset: 41104)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !8265, file: !1313, line: 129, baseType: !119, size: 32, offset: 41120)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8265, file: !1313, line: 133, baseType: !8281, size: 128, offset: 41152)
!8281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 128, elements: !8282)
!8282 = !{!843, !843}
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !8249, file: !1313, line: 151, baseType: !536, size: 64, offset: 41792)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !8249, file: !1313, line: 152, baseType: !536, size: 64, offset: 41856)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !8249, file: !1313, line: 153, baseType: !536, size: 64, offset: 41920)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !8249, file: !1313, line: 154, baseType: !536, size: 64, offset: 41984)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !8249, file: !1313, line: 155, baseType: !119, size: 32, offset: 42048)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8249, file: !1313, line: 156, baseType: !119, size: 32, offset: 42080)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !8238, file: !4, line: 723, baseType: !8265, size: 41280, offset: 42880)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !8238, file: !4, line: 725, baseType: !1292, size: 64, offset: 84160)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !8238, file: !4, line: 727, baseType: !884, size: 64, offset: 84224)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !8238, file: !4, line: 728, baseType: !474, size: 32, offset: 84288)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !8238, file: !4, line: 728, baseType: !474, size: 32, offset: 84320)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !8238, file: !4, line: 729, baseType: !474, size: 32, offset: 84352)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !8238, file: !4, line: 730, baseType: !474, size: 32, offset: 84384)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !8238, file: !4, line: 730, baseType: !474, size: 32, offset: 84416)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8238, file: !4, line: 732, baseType: !397, size: 8, offset: 84448)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8238, file: !4, line: 733, baseType: !397, size: 8, offset: 84456)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8238, file: !4, line: 734, baseType: !410, size: 16, offset: 84464)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !8238, file: !4, line: 735, baseType: !410, size: 16, offset: 84480)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8238, file: !4, line: 736, baseType: !410, size: 16, offset: 84496)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !8238, file: !4, line: 737, baseType: !397, size: 8, offset: 84512)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !8238, file: !4, line: 738, baseType: !397, size: 8, offset: 84520)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !8238, file: !4, line: 739, baseType: !397, size: 8, offset: 84528)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !8238, file: !4, line: 740, baseType: !397, size: 8, offset: 84536)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !8238, file: !4, line: 742, baseType: !8307, size: 128, offset: 84544)
!8307 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !4, line: 554, baseType: !8308)
!8308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !4, line: 545, size: 128, elements: !8309)
!8309 = !{!8310, !8311, !8312, !8313, !8314}
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8308, file: !4, line: 548, baseType: !2147, size: 64)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !8308, file: !4, line: 550, baseType: !397, size: 8, offset: 64)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !8308, file: !4, line: 551, baseType: !397, size: 8, offset: 72)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !8308, file: !4, line: 552, baseType: !397, size: 8, offset: 80)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !8308, file: !4, line: 553, baseType: !2249, size: 40, offset: 88)
!8315 = !DILocation(line: 1782, column: 16, scope: !8235)
!8316 = !DILocation(line: 1782, column: 23, scope: !8235)
!8317 = !DILocation(line: 1782, column: 27, scope: !8235)
!8318 = !DILocation(line: 1782, column: 37, scope: !8235)
!8319 = !DILocation(line: 1784, column: 8, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8235, file: !1, line: 1784, column: 8)
!8321 = !DILocation(line: 1784, column: 14, scope: !8320)
!8322 = !DILocation(line: 1784, column: 19, scope: !8320)
!8323 = !DILocation(line: 1784, column: 8, scope: !8235)
!8324 = !DILocation(line: 1785, column: 5, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8320, file: !1, line: 1784, column: 53)
!8326 = !DILocation(line: 1785, column: 11, scope: !8325)
!8327 = !DILocation(line: 1785, column: 16, scope: !8325)
!8328 = !DILocation(line: 1786, column: 5, scope: !8325)
!8329 = !DILocation(line: 1786, column: 11, scope: !8325)
!8330 = !DILocation(line: 1786, column: 16, scope: !8325)
!8331 = !DILocation(line: 1787, column: 30, scope: !8325)
!8332 = !DILocation(line: 1787, column: 33, scope: !8325)
!8333 = !DILocation(line: 1787, column: 5, scope: !8325)
!8334 = !DILocation(line: 1788, column: 4, scope: !8325)
!8335 = !DILocation(line: 1790, column: 28, scope: !8320)
!8336 = !DILocation(line: 1790, column: 31, scope: !8320)
!8337 = !DILocation(line: 1790, column: 36, scope: !8320)
!8338 = !DILocation(line: 1790, column: 40, scope: !8320)
!8339 = !DILocation(line: 1790, column: 5, scope: !8320)
!8340 = !DILocation(line: 1791, column: 3, scope: !8235)
!8341 = !DILocation(line: 1792, column: 12, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8229, file: !1, line: 1792, column: 12)
!8343 = !DILocation(line: 1792, column: 16, scope: !8342)
!8344 = !DILocation(line: 1792, column: 26, scope: !8342)
!8345 = !DILocation(line: 1792, column: 12, scope: !8229)
!8346 = !DILocation(line: 1793, column: 29, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8342, file: !1, line: 1792, column: 41)
!8348 = !DILocation(line: 1793, column: 32, scope: !8347)
!8349 = !DILocation(line: 1793, column: 4, scope: !8347)
!8350 = !DILocation(line: 1794, column: 3, scope: !8347)
!8351 = !DILocation(line: 1796, column: 27, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8342, file: !1, line: 1795, column: 8)
!8353 = !DILocation(line: 1796, column: 30, scope: !8352)
!8354 = !DILocation(line: 1796, column: 35, scope: !8352)
!8355 = !DILocation(line: 1796, column: 39, scope: !8352)
!8356 = !DILocation(line: 1796, column: 4, scope: !8352)
!8357 = !DILocation(line: 1798, column: 2, scope: !8230)
!8358 = !DILocation(line: 1801, column: 26, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8225, file: !1, line: 1800, column: 7)
!8360 = !DILocation(line: 1801, column: 29, scope: !8359)
!8361 = !DILocation(line: 1801, column: 34, scope: !8359)
!8362 = !DILocation(line: 1801, column: 38, scope: !8359)
!8363 = !DILocation(line: 1801, column: 3, scope: !8359)
!8364 = !DILocation(line: 1803, column: 1, scope: !8200)
!8365 = distinct !DISubprogram(name: "ED_refresh_viewport_fps", scope: !1, file: !1, line: 1933, type: !8366, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8366 = !DISubroutineType(types: !8367)
!8367 = !{null, !4448}
!8368 = !DILocalVariable(name: "C", arg: 1, scope: !8365, file: !1, line: 1933, type: !4448)
!8369 = !DILocation(line: 1933, column: 40, scope: !8365)
!8370 = !DILocalVariable(name: "animtimer", scope: !8365, file: !1, line: 1935, type: !7074)
!8371 = !DILocation(line: 1935, column: 11, scope: !8365)
!8372 = !DILocation(line: 1935, column: 37, scope: !8365)
!8373 = !DILocation(line: 1935, column: 23, scope: !8365)
!8374 = !DILocation(line: 1935, column: 41, scope: !8365)
!8375 = !DILocalVariable(name: "scene", scope: !8365, file: !1, line: 1936, type: !4255)
!8376 = !DILocation(line: 1936, column: 9, scope: !8365)
!8377 = !DILocation(line: 1936, column: 32, scope: !8365)
!8378 = !DILocation(line: 1936, column: 17, scope: !8365)
!8379 = !DILocation(line: 1939, column: 6, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8365, file: !1, line: 1939, column: 6)
!8381 = !DILocation(line: 1939, column: 16, scope: !8380)
!8382 = !DILocation(line: 1939, column: 22, scope: !8380)
!8383 = !DILocation(line: 1939, column: 29, scope: !8380)
!8384 = !DILocation(line: 1939, column: 6, scope: !8365)
!8385 = !DILocalVariable(name: "fpsi", scope: !8386, file: !1, line: 1940, type: !8387)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !1, line: 1939, column: 47)
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8388, size: 64)
!8388 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScreenFrameRateInfo", file: !68, line: 73, baseType: !8389)
!8389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScreenFrameRateInfo", file: !68, line: 68, size: 448, elements: !8390)
!8390 = !{!8391, !8392, !8393, !8395}
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "redrawtime", scope: !8389, file: !68, line: 69, baseType: !963, size: 64)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "lredrawtime", scope: !8389, file: !68, line: 70, baseType: !963, size: 64, offset: 64)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "redrawtimes_fps", scope: !8389, file: !68, line: 71, baseType: !8394, size: 256, offset: 128)
!8394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 256, elements: !1162)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "redrawtime_index", scope: !8389, file: !68, line: 72, baseType: !410, size: 16, offset: 384)
!8396 = !DILocation(line: 1940, column: 24, scope: !8386)
!8397 = !DILocation(line: 1940, column: 31, scope: !8386)
!8398 = !DILocation(line: 1940, column: 38, scope: !8386)
!8399 = !DILocation(line: 1943, column: 7, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8386, file: !1, line: 1943, column: 7)
!8401 = !DILocation(line: 1943, column: 12, scope: !8400)
!8402 = !DILocation(line: 1943, column: 7, scope: !8386)
!8403 = !DILocation(line: 1944, column: 29, scope: !8400)
!8404 = !DILocation(line: 1944, column: 11, scope: !8400)
!8405 = !DILocation(line: 1944, column: 18, scope: !8400)
!8406 = !DILocation(line: 1944, column: 27, scope: !8400)
!8407 = !DILocation(line: 1944, column: 9, scope: !8400)
!8408 = !DILocation(line: 1944, column: 4, scope: !8400)
!8409 = !DILocation(line: 1947, column: 22, scope: !8386)
!8410 = !DILocation(line: 1947, column: 28, scope: !8386)
!8411 = !DILocation(line: 1947, column: 3, scope: !8386)
!8412 = !DILocation(line: 1947, column: 9, scope: !8386)
!8413 = !DILocation(line: 1947, column: 20, scope: !8386)
!8414 = !DILocation(line: 1948, column: 23, scope: !8386)
!8415 = !DILocation(line: 1948, column: 34, scope: !8386)
!8416 = !DILocation(line: 1948, column: 3, scope: !8386)
!8417 = !DILocation(line: 1948, column: 9, scope: !8386)
!8418 = !DILocation(line: 1948, column: 21, scope: !8386)
!8419 = !DILocation(line: 1949, column: 2, scope: !8386)
!8420 = !DILocation(line: 1952, column: 7, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !1, line: 1952, column: 7)
!8422 = distinct !DILexicalBlock(scope: !8380, file: !1, line: 1950, column: 7)
!8423 = !DILocation(line: 1952, column: 14, scope: !8421)
!8424 = !DILocation(line: 1952, column: 7, scope: !8422)
!8425 = !DILocation(line: 1953, column: 4, scope: !8421)
!8426 = !DILocation(line: 1953, column: 14, scope: !8421)
!8427 = !DILocation(line: 1953, column: 21, scope: !8421)
!8428 = !DILocation(line: 1954, column: 3, scope: !8422)
!8429 = !DILocation(line: 1954, column: 10, scope: !8422)
!8430 = !DILocation(line: 1954, column: 19, scope: !8422)
!8431 = !DILocation(line: 1956, column: 1, scope: !8365)
!8432 = distinct !DISubprogram(name: "ED_screen_animation_timer", scope: !1, file: !1, line: 1961, type: !8433, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{null, !4448, !119, !119, !119, !119}
!8435 = !DILocalVariable(name: "C", arg: 1, scope: !8432, file: !1, line: 1961, type: !4448)
!8436 = !DILocation(line: 1961, column: 42, scope: !8432)
!8437 = !DILocalVariable(name: "redraws", arg: 2, scope: !8432, file: !1, line: 1961, type: !119)
!8438 = !DILocation(line: 1961, column: 49, scope: !8432)
!8439 = !DILocalVariable(name: "refresh", arg: 3, scope: !8432, file: !1, line: 1961, type: !119)
!8440 = !DILocation(line: 1961, column: 62, scope: !8432)
!8441 = !DILocalVariable(name: "sync", arg: 4, scope: !8432, file: !1, line: 1961, type: !119)
!8442 = !DILocation(line: 1961, column: 75, scope: !8432)
!8443 = !DILocalVariable(name: "enable", arg: 5, scope: !8432, file: !1, line: 1961, type: !119)
!8444 = !DILocation(line: 1961, column: 85, scope: !8432)
!8445 = !DILocalVariable(name: "screen", scope: !8432, file: !1, line: 1963, type: !372)
!8446 = !DILocation(line: 1963, column: 11, scope: !8432)
!8447 = !DILocation(line: 1963, column: 34, scope: !8432)
!8448 = !DILocation(line: 1963, column: 20, scope: !8432)
!8449 = !DILocalVariable(name: "wm", scope: !8432, file: !1, line: 1964, type: !5444)
!8450 = !DILocation(line: 1964, column: 19, scope: !8432)
!8451 = !DILocation(line: 1964, column: 39, scope: !8432)
!8452 = !DILocation(line: 1964, column: 24, scope: !8432)
!8453 = !DILocalVariable(name: "win", scope: !8432, file: !1, line: 1965, type: !4253)
!8454 = !DILocation(line: 1965, column: 12, scope: !8432)
!8455 = !DILocation(line: 1965, column: 32, scope: !8432)
!8456 = !DILocation(line: 1965, column: 18, scope: !8432)
!8457 = !DILocalVariable(name: "scene", scope: !8432, file: !1, line: 1966, type: !4255)
!8458 = !DILocation(line: 1966, column: 9, scope: !8432)
!8459 = !DILocation(line: 1966, column: 32, scope: !8432)
!8460 = !DILocation(line: 1966, column: 17, scope: !8432)
!8461 = !DILocalVariable(name: "stopscreen", scope: !8432, file: !1, line: 1967, type: !372)
!8462 = !DILocation(line: 1967, column: 11, scope: !8432)
!8463 = !DILocation(line: 1967, column: 52, scope: !8432)
!8464 = !DILocation(line: 1967, column: 24, scope: !8432)
!8465 = !DILocation(line: 1969, column: 6, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8432, file: !1, line: 1969, column: 6)
!8467 = !DILocation(line: 1969, column: 6, scope: !8432)
!8468 = !DILocation(line: 1970, column: 25, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8466, file: !1, line: 1969, column: 18)
!8470 = !DILocation(line: 1970, column: 29, scope: !8469)
!8471 = !DILocation(line: 1970, column: 34, scope: !8469)
!8472 = !DILocation(line: 1970, column: 46, scope: !8469)
!8473 = !DILocation(line: 1970, column: 3, scope: !8469)
!8474 = !DILocation(line: 1971, column: 3, scope: !8469)
!8475 = !DILocation(line: 1971, column: 15, scope: !8469)
!8476 = !DILocation(line: 1971, column: 25, scope: !8469)
!8477 = !DILocation(line: 1972, column: 2, scope: !8469)
!8478 = !DILocation(line: 1974, column: 6, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8432, file: !1, line: 1974, column: 6)
!8480 = !DILocation(line: 1974, column: 6, scope: !8432)
!8481 = !DILocalVariable(name: "sad", scope: !8482, file: !1, line: 1975, type: !8483)
!8482 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 1974, column: 14)
!8483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 64)
!8484 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScreenAnimData", file: !68, line: 45, baseType: !8485)
!8485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScreenAnimData", file: !68, line: 37, size: 256, elements: !8486)
!8486 = !{!8487, !8488, !8489, !8490, !8491, !8492, !8493}
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !8485, file: !68, line: 38, baseType: !5056, size: 64)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "redraws", scope: !8485, file: !68, line: 39, baseType: !410, size: 16, offset: 64)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !8485, file: !68, line: 40, baseType: !410, size: 16, offset: 80)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8485, file: !68, line: 41, baseType: !410, size: 16, offset: 96)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !8485, file: !68, line: 42, baseType: !119, size: 32, offset: 128)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "nextfra", scope: !8485, file: !68, line: 43, baseType: !119, size: 32, offset: 160)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !8485, file: !68, line: 44, baseType: !963, size: 64, offset: 192)
!8494 = !DILocation(line: 1975, column: 19, scope: !8482)
!8495 = !DILocation(line: 1975, column: 25, scope: !8482)
!8496 = !DILocation(line: 1977, column: 42, scope: !8482)
!8497 = !DILocation(line: 1977, column: 46, scope: !8482)
!8498 = !DILocation(line: 1977, column: 66, scope: !8482)
!8499 = !DILocation(line: 1977, column: 64, scope: !8482)
!8500 = !DILocation(line: 1977, column: 23, scope: !8482)
!8501 = !DILocation(line: 1977, column: 3, scope: !8482)
!8502 = !DILocation(line: 1977, column: 11, scope: !8482)
!8503 = !DILocation(line: 1977, column: 21, scope: !8482)
!8504 = !DILocation(line: 1979, column: 27, scope: !8482)
!8505 = !DILocation(line: 1979, column: 13, scope: !8482)
!8506 = !DILocation(line: 1979, column: 3, scope: !8482)
!8507 = !DILocation(line: 1979, column: 8, scope: !8482)
!8508 = !DILocation(line: 1979, column: 11, scope: !8482)
!8509 = !DILocation(line: 1982, column: 7, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8482, file: !1, line: 1982, column: 7)
!8511 = !DILocation(line: 1982, column: 7, scope: !8482)
!8512 = !DILocation(line: 1983, column: 8, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !1, line: 1983, column: 8)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !1, line: 1982, column: 19)
!8515 = !DILocation(line: 1983, column: 15, scope: !8513)
!8516 = !DILocation(line: 1983, column: 17, scope: !8513)
!8517 = !DILocation(line: 1983, column: 25, scope: !8513)
!8518 = !DILocation(line: 1983, column: 32, scope: !8513)
!8519 = !DILocation(line: 1983, column: 34, scope: !8513)
!8520 = !DILocation(line: 1983, column: 23, scope: !8513)
!8521 = !DILocation(line: 1983, column: 8, scope: !8514)
!8522 = !DILocation(line: 1984, column: 17, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8513, file: !1, line: 1983, column: 40)
!8524 = !DILocation(line: 1984, column: 24, scope: !8523)
!8525 = !DILocation(line: 1984, column: 26, scope: !8523)
!8526 = !DILocation(line: 1984, column: 5, scope: !8523)
!8527 = !DILocation(line: 1984, column: 10, scope: !8523)
!8528 = !DILocation(line: 1984, column: 15, scope: !8523)
!8529 = !DILocation(line: 1985, column: 21, scope: !8523)
!8530 = !DILocation(line: 1985, column: 28, scope: !8523)
!8531 = !DILocation(line: 1985, column: 30, scope: !8523)
!8532 = !DILocation(line: 1985, column: 5, scope: !8523)
!8533 = !DILocation(line: 1985, column: 12, scope: !8523)
!8534 = !DILocation(line: 1985, column: 14, scope: !8523)
!8535 = !DILocation(line: 1985, column: 19, scope: !8523)
!8536 = !DILocation(line: 1986, column: 4, scope: !8523)
!8537 = !DILocation(line: 1988, column: 17, scope: !8513)
!8538 = !DILocation(line: 1988, column: 24, scope: !8513)
!8539 = !DILocation(line: 1988, column: 26, scope: !8513)
!8540 = !DILocation(line: 1988, column: 5, scope: !8513)
!8541 = !DILocation(line: 1988, column: 10, scope: !8513)
!8542 = !DILocation(line: 1988, column: 15, scope: !8513)
!8543 = !DILocation(line: 1989, column: 3, scope: !8514)
!8544 = !DILocation(line: 1991, column: 8, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !1, line: 1991, column: 8)
!8546 = distinct !DILexicalBlock(scope: !8510, file: !1, line: 1990, column: 8)
!8547 = !DILocation(line: 1991, column: 15, scope: !8545)
!8548 = !DILocation(line: 1991, column: 17, scope: !8545)
!8549 = !DILocation(line: 1991, column: 24, scope: !8545)
!8550 = !DILocation(line: 1991, column: 31, scope: !8545)
!8551 = !DILocation(line: 1991, column: 33, scope: !8545)
!8552 = !DILocation(line: 1991, column: 22, scope: !8545)
!8553 = !DILocation(line: 1991, column: 8, scope: !8546)
!8554 = !DILocation(line: 1992, column: 17, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8545, file: !1, line: 1991, column: 39)
!8556 = !DILocation(line: 1992, column: 24, scope: !8555)
!8557 = !DILocation(line: 1992, column: 26, scope: !8555)
!8558 = !DILocation(line: 1992, column: 5, scope: !8555)
!8559 = !DILocation(line: 1992, column: 10, scope: !8555)
!8560 = !DILocation(line: 1992, column: 15, scope: !8555)
!8561 = !DILocation(line: 1993, column: 21, scope: !8555)
!8562 = !DILocation(line: 1993, column: 28, scope: !8555)
!8563 = !DILocation(line: 1993, column: 30, scope: !8555)
!8564 = !DILocation(line: 1993, column: 5, scope: !8555)
!8565 = !DILocation(line: 1993, column: 12, scope: !8555)
!8566 = !DILocation(line: 1993, column: 14, scope: !8555)
!8567 = !DILocation(line: 1993, column: 19, scope: !8555)
!8568 = !DILocation(line: 1994, column: 4, scope: !8555)
!8569 = !DILocation(line: 1996, column: 17, scope: !8545)
!8570 = !DILocation(line: 1996, column: 24, scope: !8545)
!8571 = !DILocation(line: 1996, column: 26, scope: !8545)
!8572 = !DILocation(line: 1996, column: 5, scope: !8545)
!8573 = !DILocation(line: 1996, column: 10, scope: !8545)
!8574 = !DILocation(line: 1996, column: 15, scope: !8545)
!8575 = !DILocation(line: 1998, column: 18, scope: !8482)
!8576 = !DILocation(line: 1998, column: 3, scope: !8482)
!8577 = !DILocation(line: 1998, column: 8, scope: !8482)
!8578 = !DILocation(line: 1998, column: 16, scope: !8482)
!8579 = !DILocation(line: 1999, column: 18, scope: !8482)
!8580 = !DILocation(line: 1999, column: 3, scope: !8482)
!8581 = !DILocation(line: 1999, column: 8, scope: !8482)
!8582 = !DILocation(line: 1999, column: 16, scope: !8482)
!8583 = !DILocation(line: 2000, column: 17, scope: !8482)
!8584 = !DILocation(line: 2000, column: 24, scope: !8482)
!8585 = !DILocation(line: 2000, column: 16, scope: !8482)
!8586 = !DILocation(line: 2000, column: 3, scope: !8482)
!8587 = !DILocation(line: 2000, column: 8, scope: !8482)
!8588 = !DILocation(line: 2000, column: 13, scope: !8482)
!8589 = !DILocation(line: 2001, column: 17, scope: !8482)
!8590 = !DILocation(line: 2001, column: 22, scope: !8482)
!8591 = !DILocation(line: 2001, column: 16, scope: !8482)
!8592 = !DILocation(line: 2001, column: 55, scope: !8482)
!8593 = !DILocation(line: 2001, column: 60, scope: !8482)
!8594 = !DILocation(line: 2001, column: 54, scope: !8482)
!8595 = !DILocation(line: 2001, column: 3, scope: !8482)
!8596 = !DILocation(line: 2001, column: 8, scope: !8482)
!8597 = !DILocation(line: 2001, column: 13, scope: !8482)
!8598 = !DILocation(line: 2003, column: 35, scope: !8482)
!8599 = !DILocation(line: 2003, column: 3, scope: !8482)
!8600 = !DILocation(line: 2003, column: 11, scope: !8482)
!8601 = !DILocation(line: 2003, column: 22, scope: !8482)
!8602 = !DILocation(line: 2003, column: 33, scope: !8482)
!8603 = !DILocation(line: 2005, column: 2, scope: !8482)
!8604 = !DILocation(line: 2008, column: 24, scope: !8432)
!8605 = !DILocation(line: 2008, column: 2, scope: !8432)
!8606 = !DILocation(line: 2009, column: 1, scope: !8432)
!8607 = distinct !DISubprogram(name: "ED_screen_animation_timer_update", scope: !1, file: !1, line: 2035, type: !5593, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8608 = !DILocalVariable(name: "screen", arg: 1, scope: !8607, file: !1, line: 2035, type: !372)
!8609 = !DILocation(line: 2035, column: 48, scope: !8607)
!8610 = !DILocalVariable(name: "redraws", arg: 2, scope: !8607, file: !1, line: 2035, type: !119)
!8611 = !DILocation(line: 2035, column: 60, scope: !8607)
!8612 = !DILocalVariable(name: "refresh", arg: 3, scope: !8607, file: !1, line: 2035, type: !119)
!8613 = !DILocation(line: 2035, column: 73, scope: !8607)
!8614 = !DILocation(line: 2037, column: 6, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8607, file: !1, line: 2037, column: 6)
!8616 = !DILocation(line: 2037, column: 13, scope: !8615)
!8617 = !DILocation(line: 2037, column: 16, scope: !8615)
!8618 = !DILocation(line: 2037, column: 24, scope: !8615)
!8619 = !DILocation(line: 2037, column: 6, scope: !8607)
!8620 = !DILocalVariable(name: "wt", scope: !8621, file: !1, line: 2038, type: !7074)
!8621 = distinct !DILexicalBlock(scope: !8615, file: !1, line: 2037, column: 35)
!8622 = !DILocation(line: 2038, column: 12, scope: !8621)
!8623 = !DILocation(line: 2038, column: 17, scope: !8621)
!8624 = !DILocation(line: 2038, column: 25, scope: !8621)
!8625 = !DILocalVariable(name: "sad", scope: !8621, file: !1, line: 2039, type: !8483)
!8626 = !DILocation(line: 2039, column: 19, scope: !8621)
!8627 = !DILocation(line: 2039, column: 25, scope: !8621)
!8628 = !DILocation(line: 2039, column: 29, scope: !8621)
!8629 = !DILocation(line: 2041, column: 18, scope: !8621)
!8630 = !DILocation(line: 2041, column: 3, scope: !8621)
!8631 = !DILocation(line: 2041, column: 8, scope: !8621)
!8632 = !DILocation(line: 2041, column: 16, scope: !8621)
!8633 = !DILocation(line: 2042, column: 18, scope: !8621)
!8634 = !DILocation(line: 2042, column: 3, scope: !8621)
!8635 = !DILocation(line: 2042, column: 8, scope: !8621)
!8636 = !DILocation(line: 2042, column: 16, scope: !8621)
!8637 = !DILocation(line: 2043, column: 3, scope: !8621)
!8638 = !DILocation(line: 2043, column: 8, scope: !8621)
!8639 = !DILocation(line: 2043, column: 11, scope: !8621)
!8640 = !DILocation(line: 2044, column: 7, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8621, file: !1, line: 2044, column: 7)
!8642 = !DILocation(line: 2044, column: 15, scope: !8641)
!8643 = !DILocation(line: 2044, column: 7, scope: !8621)
!8644 = !DILocation(line: 2045, column: 37, scope: !8641)
!8645 = !DILocation(line: 2045, column: 14, scope: !8641)
!8646 = !DILocation(line: 2045, column: 4, scope: !8641)
!8647 = !DILocation(line: 2045, column: 9, scope: !8641)
!8648 = !DILocation(line: 2045, column: 12, scope: !8641)
!8649 = !DILocation(line: 2046, column: 2, scope: !8621)
!8650 = !DILocation(line: 2047, column: 1, scope: !8607)
!8651 = distinct !DISubprogram(name: "time_top_left_3dwindow", scope: !1, file: !1, line: 2012, type: !8652, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{!5056, !372}
!8654 = !DILocalVariable(name: "screen", arg: 1, scope: !8651, file: !1, line: 2012, type: !372)
!8655 = !DILocation(line: 2012, column: 49, scope: !8651)
!8656 = !DILocalVariable(name: "aret", scope: !8651, file: !1, line: 2014, type: !5056)
!8657 = !DILocation(line: 2014, column: 11, scope: !8651)
!8658 = !DILocalVariable(name: "sa", scope: !8651, file: !1, line: 2015, type: !3041)
!8659 = !DILocation(line: 2015, column: 11, scope: !8651)
!8660 = !DILocalVariable(name: "min", scope: !8651, file: !1, line: 2016, type: !119)
!8661 = !DILocation(line: 2016, column: 6, scope: !8651)
!8662 = !DILocation(line: 2018, column: 12, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8651, file: !1, line: 2018, column: 2)
!8664 = !DILocation(line: 2018, column: 20, scope: !8663)
!8665 = !DILocation(line: 2018, column: 29, scope: !8663)
!8666 = !DILocation(line: 2018, column: 10, scope: !8663)
!8667 = !DILocation(line: 2018, column: 7, scope: !8663)
!8668 = !DILocation(line: 2018, column: 36, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8663, file: !1, line: 2018, column: 2)
!8670 = !DILocation(line: 2018, column: 2, scope: !8663)
!8671 = !DILocation(line: 2019, column: 7, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !1, line: 2019, column: 7)
!8673 = distinct !DILexicalBlock(scope: !8669, file: !1, line: 2018, column: 55)
!8674 = !DILocation(line: 2019, column: 11, scope: !8672)
!8675 = !DILocation(line: 2019, column: 21, scope: !8672)
!8676 = !DILocation(line: 2019, column: 7, scope: !8673)
!8677 = !DILocalVariable(name: "ar", scope: !8678, file: !1, line: 2020, type: !5056)
!8678 = distinct !DILexicalBlock(scope: !8672, file: !1, line: 2019, column: 38)
!8679 = !DILocation(line: 2020, column: 13, scope: !8678)
!8680 = !DILocation(line: 2021, column: 14, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8678, file: !1, line: 2021, column: 4)
!8682 = !DILocation(line: 2021, column: 18, scope: !8681)
!8683 = !DILocation(line: 2021, column: 29, scope: !8681)
!8684 = !DILocation(line: 2021, column: 12, scope: !8681)
!8685 = !DILocation(line: 2021, column: 9, scope: !8681)
!8686 = !DILocation(line: 2021, column: 36, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8681, file: !1, line: 2021, column: 4)
!8688 = !DILocation(line: 2021, column: 4, scope: !8681)
!8689 = !DILocation(line: 2022, column: 9, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !1, line: 2022, column: 9)
!8691 = distinct !DILexicalBlock(scope: !8687, file: !1, line: 2021, column: 55)
!8692 = !DILocation(line: 2022, column: 13, scope: !8690)
!8693 = !DILocation(line: 2022, column: 24, scope: !8690)
!8694 = !DILocation(line: 2022, column: 9, scope: !8691)
!8695 = !DILocation(line: 2023, column: 10, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !1, line: 2023, column: 10)
!8697 = distinct !DILexicalBlock(scope: !8690, file: !1, line: 2022, column: 44)
!8698 = !DILocation(line: 2023, column: 14, scope: !8696)
!8699 = !DILocation(line: 2023, column: 21, scope: !8696)
!8700 = !DILocation(line: 2023, column: 28, scope: !8696)
!8701 = !DILocation(line: 2023, column: 32, scope: !8696)
!8702 = !DILocation(line: 2023, column: 39, scope: !8696)
!8703 = !DILocation(line: 2023, column: 26, scope: !8696)
!8704 = !DILocation(line: 2023, column: 46, scope: !8696)
!8705 = !DILocation(line: 2023, column: 44, scope: !8696)
!8706 = !DILocation(line: 2023, column: 10, scope: !8697)
!8707 = !DILocation(line: 2024, column: 14, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8696, file: !1, line: 2023, column: 51)
!8709 = !DILocation(line: 2024, column: 12, scope: !8708)
!8710 = !DILocation(line: 2025, column: 13, scope: !8708)
!8711 = !DILocation(line: 2025, column: 17, scope: !8708)
!8712 = !DILocation(line: 2025, column: 24, scope: !8708)
!8713 = !DILocation(line: 2025, column: 31, scope: !8708)
!8714 = !DILocation(line: 2025, column: 35, scope: !8708)
!8715 = !DILocation(line: 2025, column: 42, scope: !8708)
!8716 = !DILocation(line: 2025, column: 29, scope: !8708)
!8717 = !DILocation(line: 2025, column: 11, scope: !8708)
!8718 = !DILocation(line: 2026, column: 6, scope: !8708)
!8719 = !DILocation(line: 2027, column: 5, scope: !8697)
!8720 = !DILocation(line: 2028, column: 4, scope: !8691)
!8721 = !DILocation(line: 2021, column: 45, scope: !8687)
!8722 = !DILocation(line: 2021, column: 49, scope: !8687)
!8723 = !DILocation(line: 2021, column: 43, scope: !8687)
!8724 = !DILocation(line: 2021, column: 4, scope: !8687)
!8725 = distinct !{!8725, !8688, !8726}
!8726 = !DILocation(line: 2028, column: 4, scope: !8681)
!8727 = !DILocation(line: 2029, column: 3, scope: !8678)
!8728 = !DILocation(line: 2030, column: 2, scope: !8673)
!8729 = !DILocation(line: 2018, column: 45, scope: !8669)
!8730 = !DILocation(line: 2018, column: 49, scope: !8669)
!8731 = !DILocation(line: 2018, column: 43, scope: !8669)
!8732 = !DILocation(line: 2018, column: 2, scope: !8669)
!8733 = distinct !{!8733, !8670, !8734}
!8734 = !DILocation(line: 2030, column: 2, scope: !8663)
!8735 = !DILocation(line: 2032, column: 9, scope: !8651)
!8736 = !DILocation(line: 2032, column: 2, scope: !8651)
!8737 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !8738, file: !8738, line: 89, type: !8739, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8738 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8739 = !DISubroutineType(types: !8740)
!8740 = !{null, !8741}
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!8742 = !DILocalVariable(name: "lb", arg: 1, scope: !8737, file: !8738, line: 89, type: !8741)
!8743 = !DILocation(line: 89, column: 53, scope: !8737)
!8744 = !DILocation(line: 89, column: 71, scope: !8737)
!8745 = !DILocation(line: 89, column: 75, scope: !8737)
!8746 = !DILocation(line: 89, column: 80, scope: !8737)
!8747 = !DILocation(line: 89, column: 59, scope: !8737)
!8748 = !DILocation(line: 89, column: 63, scope: !8737)
!8749 = !DILocation(line: 89, column: 69, scope: !8737)
!8750 = !DILocation(line: 89, column: 93, scope: !8737)
!8751 = distinct !DISubprogram(name: "drawscredge_area_draw", scope: !1, file: !1, line: 1012, type: !8752, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8752 = !DISubroutineType(types: !8753)
!8753 = !{null, !119, !119, !119, !119, !119, !119, !119}
!8754 = !DILocalVariable(name: "sizex", arg: 1, scope: !8751, file: !1, line: 1012, type: !119)
!8755 = !DILocation(line: 1012, column: 39, scope: !8751)
!8756 = !DILocalVariable(name: "sizey", arg: 2, scope: !8751, file: !1, line: 1012, type: !119)
!8757 = !DILocation(line: 1012, column: 50, scope: !8751)
!8758 = !DILocalVariable(name: "x1", arg: 3, scope: !8751, file: !1, line: 1012, type: !119)
!8759 = !DILocation(line: 1012, column: 61, scope: !8751)
!8760 = !DILocalVariable(name: "y1", arg: 4, scope: !8751, file: !1, line: 1012, type: !119)
!8761 = !DILocation(line: 1012, column: 69, scope: !8751)
!8762 = !DILocalVariable(name: "x2", arg: 5, scope: !8751, file: !1, line: 1012, type: !119)
!8763 = !DILocation(line: 1012, column: 77, scope: !8751)
!8764 = !DILocalVariable(name: "y2", arg: 6, scope: !8751, file: !1, line: 1012, type: !119)
!8765 = !DILocation(line: 1012, column: 85, scope: !8751)
!8766 = !DILocalVariable(name: "a", arg: 7, scope: !8751, file: !1, line: 1012, type: !119)
!8767 = !DILocation(line: 1012, column: 93, scope: !8751)
!8768 = !DILocation(line: 1015, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8751, file: !1, line: 1015, column: 6)
!8770 = !DILocation(line: 1015, column: 11, scope: !8769)
!8771 = !DILocation(line: 1015, column: 17, scope: !8769)
!8772 = !DILocation(line: 1015, column: 9, scope: !8769)
!8773 = !DILocation(line: 1015, column: 6, scope: !8751)
!8774 = !DILocation(line: 1016, column: 13, scope: !8769)
!8775 = !DILocation(line: 1016, column: 18, scope: !8769)
!8776 = !DILocation(line: 1016, column: 16, scope: !8769)
!8777 = !DILocation(line: 1016, column: 21, scope: !8769)
!8778 = !DILocation(line: 1016, column: 25, scope: !8769)
!8779 = !DILocation(line: 1016, column: 30, scope: !8769)
!8780 = !DILocation(line: 1016, column: 28, scope: !8769)
!8781 = !DILocation(line: 1016, column: 33, scope: !8769)
!8782 = !DILocation(line: 1016, column: 3, scope: !8769)
!8783 = !DILocation(line: 1019, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8751, file: !1, line: 1019, column: 6)
!8785 = !DILocation(line: 1019, column: 9, scope: !8784)
!8786 = !DILocation(line: 1019, column: 6, scope: !8751)
!8787 = !DILocation(line: 1020, column: 13, scope: !8784)
!8788 = !DILocation(line: 1020, column: 18, scope: !8784)
!8789 = !DILocation(line: 1020, column: 16, scope: !8784)
!8790 = !DILocation(line: 1020, column: 21, scope: !8784)
!8791 = !DILocation(line: 1020, column: 25, scope: !8784)
!8792 = !DILocation(line: 1020, column: 30, scope: !8784)
!8793 = !DILocation(line: 1020, column: 28, scope: !8784)
!8794 = !DILocation(line: 1020, column: 33, scope: !8784)
!8795 = !DILocation(line: 1020, column: 3, scope: !8784)
!8796 = !DILocation(line: 1023, column: 6, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8751, file: !1, line: 1023, column: 6)
!8798 = !DILocation(line: 1023, column: 11, scope: !8797)
!8799 = !DILocation(line: 1023, column: 17, scope: !8797)
!8800 = !DILocation(line: 1023, column: 9, scope: !8797)
!8801 = !DILocation(line: 1023, column: 6, scope: !8751)
!8802 = !DILocation(line: 1024, column: 13, scope: !8797)
!8803 = !DILocation(line: 1024, column: 17, scope: !8797)
!8804 = !DILocation(line: 1024, column: 22, scope: !8797)
!8805 = !DILocation(line: 1024, column: 20, scope: !8797)
!8806 = !DILocation(line: 1024, column: 25, scope: !8797)
!8807 = !DILocation(line: 1024, column: 29, scope: !8797)
!8808 = !DILocation(line: 1024, column: 34, scope: !8797)
!8809 = !DILocation(line: 1024, column: 32, scope: !8797)
!8810 = !DILocation(line: 1024, column: 3, scope: !8797)
!8811 = !DILocation(line: 1027, column: 6, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8751, file: !1, line: 1027, column: 6)
!8813 = !DILocation(line: 1027, column: 9, scope: !8812)
!8814 = !DILocation(line: 1027, column: 6, scope: !8751)
!8815 = !DILocation(line: 1028, column: 13, scope: !8812)
!8816 = !DILocation(line: 1028, column: 17, scope: !8812)
!8817 = !DILocation(line: 1028, column: 22, scope: !8812)
!8818 = !DILocation(line: 1028, column: 20, scope: !8812)
!8819 = !DILocation(line: 1028, column: 25, scope: !8812)
!8820 = !DILocation(line: 1028, column: 29, scope: !8812)
!8821 = !DILocation(line: 1028, column: 34, scope: !8812)
!8822 = !DILocation(line: 1028, column: 32, scope: !8812)
!8823 = !DILocation(line: 1028, column: 3, scope: !8812)
!8824 = !DILocation(line: 1030, column: 1, scope: !8751)
!8825 = distinct !DISubprogram(name: "draw_join_shape", scope: !1, file: !1, line: 982, type: !5400, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8826 = !DILocalVariable(name: "sa", arg: 1, scope: !8825, file: !1, line: 982, type: !3041)
!8827 = !DILocation(line: 982, column: 38, scope: !8825)
!8828 = !DILocalVariable(name: "dir", arg: 2, scope: !8825, file: !1, line: 982, type: !397)
!8829 = !DILocation(line: 982, column: 47, scope: !8825)
!8830 = !DILocation(line: 984, column: 6, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8825, file: !1, line: 984, column: 6)
!8832 = !DILocation(line: 984, column: 10, scope: !8831)
!8833 = !DILocation(line: 984, column: 17, scope: !8831)
!8834 = !DILocation(line: 984, column: 20, scope: !8831)
!8835 = !DILocation(line: 984, column: 24, scope: !8831)
!8836 = !DILocation(line: 984, column: 6, scope: !8825)
!8837 = !DILocation(line: 985, column: 28, scope: !8831)
!8838 = !DILocation(line: 985, column: 32, scope: !8831)
!8839 = !DILocation(line: 985, column: 3, scope: !8831)
!8840 = !DILocation(line: 987, column: 30, scope: !8831)
!8841 = !DILocation(line: 987, column: 34, scope: !8831)
!8842 = !DILocation(line: 987, column: 3, scope: !8831)
!8843 = !DILocation(line: 988, column: 1, scope: !8825)
!8844 = distinct !DISubprogram(name: "draw_vertical_join_shape", scope: !1, file: !1, line: 910, type: !5400, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!8845 = !DILocalVariable(name: "sa", arg: 1, scope: !8844, file: !1, line: 910, type: !3041)
!8846 = !DILocation(line: 910, column: 47, scope: !8844)
!8847 = !DILocalVariable(name: "dir", arg: 2, scope: !8844, file: !1, line: 910, type: !397)
!8848 = !DILocation(line: 910, column: 56, scope: !8844)
!8849 = !DILocalVariable(name: "points", scope: !8844, file: !1, line: 912, type: !8850)
!8850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8851, size: 640, elements: !8856)
!8851 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2f", file: !865, line: 48, baseType: !8852)
!8852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2f", file: !865, line: 46, size: 64, elements: !8853)
!8853 = !{!8854, !8855}
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !8852, file: !865, line: 47, baseType: !474, size: 32)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !8852, file: !865, line: 47, baseType: !474, size: 32, offset: 32)
!8856 = !{!8857}
!8857 = !DISubrange(count: 10)
!8858 = !DILocation(line: 912, column: 8, scope: !8844)
!8859 = !DILocalVariable(name: "i", scope: !8844, file: !1, line: 913, type: !410)
!8860 = !DILocation(line: 913, column: 8, scope: !8844)
!8861 = !DILocalVariable(name: "w", scope: !8844, file: !1, line: 914, type: !474)
!8862 = !DILocation(line: 914, column: 8, scope: !8844)
!8863 = !DILocalVariable(name: "h", scope: !8844, file: !1, line: 914, type: !474)
!8864 = !DILocation(line: 914, column: 11, scope: !8844)
!8865 = !DILocalVariable(name: "width", scope: !8844, file: !1, line: 915, type: !474)
!8866 = !DILocation(line: 915, column: 8, scope: !8844)
!8867 = !DILocation(line: 915, column: 16, scope: !8844)
!8868 = !DILocation(line: 915, column: 20, scope: !8844)
!8869 = !DILocation(line: 915, column: 24, scope: !8844)
!8870 = !DILocation(line: 915, column: 28, scope: !8844)
!8871 = !DILocation(line: 915, column: 32, scope: !8844)
!8872 = !DILocation(line: 915, column: 36, scope: !8844)
!8873 = !DILocation(line: 915, column: 40, scope: !8844)
!8874 = !DILocation(line: 915, column: 44, scope: !8844)
!8875 = !DILocation(line: 915, column: 30, scope: !8844)
!8876 = !DILocalVariable(name: "height", scope: !8844, file: !1, line: 916, type: !474)
!8877 = !DILocation(line: 916, column: 8, scope: !8844)
!8878 = !DILocation(line: 916, column: 17, scope: !8844)
!8879 = !DILocation(line: 916, column: 21, scope: !8844)
!8880 = !DILocation(line: 916, column: 25, scope: !8844)
!8881 = !DILocation(line: 916, column: 29, scope: !8844)
!8882 = !DILocation(line: 916, column: 33, scope: !8844)
!8883 = !DILocation(line: 916, column: 37, scope: !8844)
!8884 = !DILocation(line: 916, column: 41, scope: !8844)
!8885 = !DILocation(line: 916, column: 45, scope: !8844)
!8886 = !DILocation(line: 916, column: 31, scope: !8844)
!8887 = !DILocation(line: 918, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 918, column: 6)
!8889 = !DILocation(line: 918, column: 15, scope: !8888)
!8890 = !DILocation(line: 918, column: 13, scope: !8888)
!8891 = !DILocation(line: 918, column: 6, scope: !8844)
!8892 = !DILocation(line: 919, column: 7, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 918, column: 22)
!8894 = !DILocation(line: 919, column: 14, scope: !8893)
!8895 = !DILocation(line: 919, column: 5, scope: !8893)
!8896 = !DILocation(line: 920, column: 7, scope: !8893)
!8897 = !DILocation(line: 920, column: 14, scope: !8893)
!8898 = !DILocation(line: 920, column: 5, scope: !8893)
!8899 = !DILocation(line: 921, column: 2, scope: !8893)
!8900 = !DILocation(line: 923, column: 7, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8888, file: !1, line: 922, column: 7)
!8902 = !DILocation(line: 923, column: 13, scope: !8901)
!8903 = !DILocation(line: 923, column: 5, scope: !8901)
!8904 = !DILocation(line: 924, column: 7, scope: !8901)
!8905 = !DILocation(line: 924, column: 13, scope: !8901)
!8906 = !DILocation(line: 924, column: 5, scope: !8901)
!8907 = !DILocation(line: 927, column: 16, scope: !8844)
!8908 = !DILocation(line: 927, column: 20, scope: !8844)
!8909 = !DILocation(line: 927, column: 24, scope: !8844)
!8910 = !DILocation(line: 927, column: 28, scope: !8844)
!8911 = !DILocation(line: 927, column: 32, scope: !8844)
!8912 = !DILocation(line: 927, column: 38, scope: !8844)
!8913 = !DILocation(line: 927, column: 30, scope: !8844)
!8914 = !DILocation(line: 927, column: 2, scope: !8844)
!8915 = !DILocation(line: 927, column: 12, scope: !8844)
!8916 = !DILocation(line: 927, column: 14, scope: !8844)
!8917 = !DILocation(line: 928, column: 16, scope: !8844)
!8918 = !DILocation(line: 928, column: 20, scope: !8844)
!8919 = !DILocation(line: 928, column: 24, scope: !8844)
!8920 = !DILocation(line: 928, column: 28, scope: !8844)
!8921 = !DILocation(line: 928, column: 2, scope: !8844)
!8922 = !DILocation(line: 928, column: 12, scope: !8844)
!8923 = !DILocation(line: 928, column: 14, scope: !8844)
!8924 = !DILocation(line: 930, column: 16, scope: !8844)
!8925 = !DILocation(line: 930, column: 20, scope: !8844)
!8926 = !DILocation(line: 930, column: 24, scope: !8844)
!8927 = !DILocation(line: 930, column: 28, scope: !8844)
!8928 = !DILocation(line: 930, column: 2, scope: !8844)
!8929 = !DILocation(line: 930, column: 12, scope: !8844)
!8930 = !DILocation(line: 930, column: 14, scope: !8844)
!8931 = !DILocation(line: 931, column: 16, scope: !8844)
!8932 = !DILocation(line: 931, column: 20, scope: !8844)
!8933 = !DILocation(line: 931, column: 24, scope: !8844)
!8934 = !DILocation(line: 931, column: 28, scope: !8844)
!8935 = !DILocation(line: 931, column: 2, scope: !8844)
!8936 = !DILocation(line: 931, column: 12, scope: !8844)
!8937 = !DILocation(line: 931, column: 14, scope: !8844)
!8938 = !DILocation(line: 933, column: 16, scope: !8844)
!8939 = !DILocation(line: 933, column: 20, scope: !8844)
!8940 = !DILocation(line: 933, column: 24, scope: !8844)
!8941 = !DILocation(line: 933, column: 28, scope: !8844)
!8942 = !DILocation(line: 933, column: 2, scope: !8844)
!8943 = !DILocation(line: 933, column: 12, scope: !8844)
!8944 = !DILocation(line: 933, column: 14, scope: !8844)
!8945 = !DILocation(line: 934, column: 16, scope: !8844)
!8946 = !DILocation(line: 934, column: 20, scope: !8844)
!8947 = !DILocation(line: 934, column: 24, scope: !8844)
!8948 = !DILocation(line: 934, column: 28, scope: !8844)
!8949 = !DILocation(line: 934, column: 32, scope: !8844)
!8950 = !DILocation(line: 934, column: 30, scope: !8844)
!8951 = !DILocation(line: 934, column: 2, scope: !8844)
!8952 = !DILocation(line: 934, column: 12, scope: !8844)
!8953 = !DILocation(line: 934, column: 14, scope: !8844)
!8954 = !DILocation(line: 936, column: 16, scope: !8844)
!8955 = !DILocation(line: 936, column: 20, scope: !8844)
!8956 = !DILocation(line: 936, column: 24, scope: !8844)
!8957 = !DILocation(line: 936, column: 28, scope: !8844)
!8958 = !DILocation(line: 936, column: 32, scope: !8844)
!8959 = !DILocation(line: 936, column: 38, scope: !8844)
!8960 = !DILocation(line: 936, column: 30, scope: !8844)
!8961 = !DILocation(line: 936, column: 48, scope: !8844)
!8962 = !DILocation(line: 936, column: 46, scope: !8844)
!8963 = !DILocation(line: 936, column: 42, scope: !8844)
!8964 = !DILocation(line: 936, column: 2, scope: !8844)
!8965 = !DILocation(line: 936, column: 12, scope: !8844)
!8966 = !DILocation(line: 936, column: 14, scope: !8844)
!8967 = !DILocation(line: 937, column: 16, scope: !8844)
!8968 = !DILocation(line: 937, column: 20, scope: !8844)
!8969 = !DILocation(line: 937, column: 24, scope: !8844)
!8970 = !DILocation(line: 937, column: 28, scope: !8844)
!8971 = !DILocation(line: 937, column: 32, scope: !8844)
!8972 = !DILocation(line: 937, column: 30, scope: !8844)
!8973 = !DILocation(line: 937, column: 2, scope: !8844)
!8974 = !DILocation(line: 937, column: 12, scope: !8844)
!8975 = !DILocation(line: 937, column: 14, scope: !8844)
!8976 = !DILocation(line: 939, column: 16, scope: !8844)
!8977 = !DILocation(line: 939, column: 20, scope: !8844)
!8978 = !DILocation(line: 939, column: 24, scope: !8844)
!8979 = !DILocation(line: 939, column: 28, scope: !8844)
!8980 = !DILocation(line: 939, column: 32, scope: !8844)
!8981 = !DILocation(line: 939, column: 38, scope: !8844)
!8982 = !DILocation(line: 939, column: 30, scope: !8844)
!8983 = !DILocation(line: 939, column: 2, scope: !8844)
!8984 = !DILocation(line: 939, column: 12, scope: !8844)
!8985 = !DILocation(line: 939, column: 14, scope: !8844)
!8986 = !DILocation(line: 940, column: 16, scope: !8844)
!8987 = !DILocation(line: 940, column: 20, scope: !8844)
!8988 = !DILocation(line: 940, column: 24, scope: !8844)
!8989 = !DILocation(line: 940, column: 28, scope: !8844)
!8990 = !DILocation(line: 940, column: 36, scope: !8844)
!8991 = !DILocation(line: 940, column: 34, scope: !8844)
!8992 = !DILocation(line: 940, column: 30, scope: !8844)
!8993 = !DILocation(line: 940, column: 2, scope: !8844)
!8994 = !DILocation(line: 940, column: 12, scope: !8844)
!8995 = !DILocation(line: 940, column: 14, scope: !8844)
!8996 = !DILocation(line: 942, column: 16, scope: !8844)
!8997 = !DILocation(line: 942, column: 20, scope: !8844)
!8998 = !DILocation(line: 942, column: 24, scope: !8844)
!8999 = !DILocation(line: 942, column: 28, scope: !8844)
!9000 = !DILocation(line: 942, column: 32, scope: !8844)
!9001 = !DILocation(line: 942, column: 38, scope: !8844)
!9002 = !DILocation(line: 942, column: 30, scope: !8844)
!9003 = !DILocation(line: 942, column: 48, scope: !8844)
!9004 = !DILocation(line: 942, column: 46, scope: !8844)
!9005 = !DILocation(line: 942, column: 42, scope: !8844)
!9006 = !DILocation(line: 942, column: 2, scope: !8844)
!9007 = !DILocation(line: 942, column: 12, scope: !8844)
!9008 = !DILocation(line: 942, column: 14, scope: !8844)
!9009 = !DILocation(line: 943, column: 16, scope: !8844)
!9010 = !DILocation(line: 943, column: 20, scope: !8844)
!9011 = !DILocation(line: 943, column: 24, scope: !8844)
!9012 = !DILocation(line: 943, column: 28, scope: !8844)
!9013 = !DILocation(line: 943, column: 32, scope: !8844)
!9014 = !DILocation(line: 943, column: 30, scope: !8844)
!9015 = !DILocation(line: 943, column: 2, scope: !8844)
!9016 = !DILocation(line: 943, column: 12, scope: !8844)
!9017 = !DILocation(line: 943, column: 14, scope: !8844)
!9018 = !DILocation(line: 945, column: 16, scope: !8844)
!9019 = !DILocation(line: 945, column: 20, scope: !8844)
!9020 = !DILocation(line: 945, column: 24, scope: !8844)
!9021 = !DILocation(line: 945, column: 28, scope: !8844)
!9022 = !DILocation(line: 945, column: 2, scope: !8844)
!9023 = !DILocation(line: 945, column: 12, scope: !8844)
!9024 = !DILocation(line: 945, column: 14, scope: !8844)
!9025 = !DILocation(line: 946, column: 16, scope: !8844)
!9026 = !DILocation(line: 946, column: 20, scope: !8844)
!9027 = !DILocation(line: 946, column: 24, scope: !8844)
!9028 = !DILocation(line: 946, column: 28, scope: !8844)
!9029 = !DILocation(line: 946, column: 32, scope: !8844)
!9030 = !DILocation(line: 946, column: 30, scope: !8844)
!9031 = !DILocation(line: 946, column: 2, scope: !8844)
!9032 = !DILocation(line: 946, column: 12, scope: !8844)
!9033 = !DILocation(line: 946, column: 14, scope: !8844)
!9034 = !DILocation(line: 948, column: 16, scope: !8844)
!9035 = !DILocation(line: 948, column: 20, scope: !8844)
!9036 = !DILocation(line: 948, column: 24, scope: !8844)
!9037 = !DILocation(line: 948, column: 28, scope: !8844)
!9038 = !DILocation(line: 948, column: 2, scope: !8844)
!9039 = !DILocation(line: 948, column: 12, scope: !8844)
!9040 = !DILocation(line: 948, column: 14, scope: !8844)
!9041 = !DILocation(line: 949, column: 16, scope: !8844)
!9042 = !DILocation(line: 949, column: 20, scope: !8844)
!9043 = !DILocation(line: 949, column: 24, scope: !8844)
!9044 = !DILocation(line: 949, column: 28, scope: !8844)
!9045 = !DILocation(line: 949, column: 2, scope: !8844)
!9046 = !DILocation(line: 949, column: 12, scope: !8844)
!9047 = !DILocation(line: 949, column: 14, scope: !8844)
!9048 = !DILocation(line: 951, column: 16, scope: !8844)
!9049 = !DILocation(line: 951, column: 20, scope: !8844)
!9050 = !DILocation(line: 951, column: 24, scope: !8844)
!9051 = !DILocation(line: 951, column: 28, scope: !8844)
!9052 = !DILocation(line: 951, column: 32, scope: !8844)
!9053 = !DILocation(line: 951, column: 38, scope: !8844)
!9054 = !DILocation(line: 951, column: 30, scope: !8844)
!9055 = !DILocation(line: 951, column: 44, scope: !8844)
!9056 = !DILocation(line: 951, column: 42, scope: !8844)
!9057 = !DILocation(line: 951, column: 2, scope: !8844)
!9058 = !DILocation(line: 951, column: 12, scope: !8844)
!9059 = !DILocation(line: 951, column: 14, scope: !8844)
!9060 = !DILocation(line: 952, column: 16, scope: !8844)
!9061 = !DILocation(line: 952, column: 20, scope: !8844)
!9062 = !DILocation(line: 952, column: 24, scope: !8844)
!9063 = !DILocation(line: 952, column: 28, scope: !8844)
!9064 = !DILocation(line: 952, column: 2, scope: !8844)
!9065 = !DILocation(line: 952, column: 12, scope: !8844)
!9066 = !DILocation(line: 952, column: 14, scope: !8844)
!9067 = !DILocation(line: 954, column: 16, scope: !8844)
!9068 = !DILocation(line: 954, column: 20, scope: !8844)
!9069 = !DILocation(line: 954, column: 24, scope: !8844)
!9070 = !DILocation(line: 954, column: 28, scope: !8844)
!9071 = !DILocation(line: 954, column: 32, scope: !8844)
!9072 = !DILocation(line: 954, column: 38, scope: !8844)
!9073 = !DILocation(line: 954, column: 30, scope: !8844)
!9074 = !DILocation(line: 954, column: 44, scope: !8844)
!9075 = !DILocation(line: 954, column: 42, scope: !8844)
!9076 = !DILocation(line: 954, column: 2, scope: !8844)
!9077 = !DILocation(line: 954, column: 12, scope: !8844)
!9078 = !DILocation(line: 954, column: 14, scope: !8844)
!9079 = !DILocation(line: 955, column: 16, scope: !8844)
!9080 = !DILocation(line: 955, column: 20, scope: !8844)
!9081 = !DILocation(line: 955, column: 24, scope: !8844)
!9082 = !DILocation(line: 955, column: 28, scope: !8844)
!9083 = !DILocation(line: 955, column: 2, scope: !8844)
!9084 = !DILocation(line: 955, column: 12, scope: !8844)
!9085 = !DILocation(line: 955, column: 14, scope: !8844)
!9086 = !DILocation(line: 957, column: 6, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 957, column: 6)
!9088 = !DILocation(line: 957, column: 10, scope: !9087)
!9089 = !DILocation(line: 957, column: 6, scope: !8844)
!9090 = !DILocalVariable(name: "cy", scope: !9091, file: !1, line: 959, type: !474)
!9091 = distinct !DILexicalBlock(scope: !9087, file: !1, line: 957, column: 18)
!9092 = !DILocation(line: 959, column: 9, scope: !9091)
!9093 = !DILocation(line: 959, column: 14, scope: !9091)
!9094 = !DILocation(line: 959, column: 18, scope: !9091)
!9095 = !DILocation(line: 959, column: 22, scope: !9091)
!9096 = !DILocation(line: 959, column: 26, scope: !9091)
!9097 = !DILocation(line: 959, column: 30, scope: !9091)
!9098 = !DILocation(line: 959, column: 28, scope: !9091)
!9099 = !DILocation(line: 960, column: 10, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9091, file: !1, line: 960, column: 3)
!9101 = !DILocation(line: 960, column: 8, scope: !9100)
!9102 = !DILocation(line: 960, column: 15, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9100, file: !1, line: 960, column: 3)
!9104 = !DILocation(line: 960, column: 17, scope: !9103)
!9105 = !DILocation(line: 960, column: 3, scope: !9100)
!9106 = !DILocation(line: 961, column: 19, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !1, line: 960, column: 28)
!9108 = !DILocation(line: 961, column: 11, scope: !9107)
!9109 = !DILocation(line: 961, column: 4, scope: !9107)
!9110 = !DILocation(line: 961, column: 14, scope: !9107)
!9111 = !DILocation(line: 961, column: 16, scope: !9107)
!9112 = !DILocation(line: 962, column: 26, scope: !9107)
!9113 = !DILocation(line: 962, column: 19, scope: !9107)
!9114 = !DILocation(line: 962, column: 29, scope: !9107)
!9115 = !DILocation(line: 962, column: 18, scope: !9107)
!9116 = !DILocation(line: 962, column: 11, scope: !9107)
!9117 = !DILocation(line: 962, column: 4, scope: !9107)
!9118 = !DILocation(line: 962, column: 14, scope: !9107)
!9119 = !DILocation(line: 962, column: 16, scope: !9107)
!9120 = !DILocation(line: 963, column: 19, scope: !9107)
!9121 = !DILocation(line: 963, column: 23, scope: !9107)
!9122 = !DILocation(line: 963, column: 27, scope: !9107)
!9123 = !DILocation(line: 963, column: 31, scope: !9107)
!9124 = !DILocation(line: 963, column: 11, scope: !9107)
!9125 = !DILocation(line: 963, column: 4, scope: !9107)
!9126 = !DILocation(line: 963, column: 14, scope: !9107)
!9127 = !DILocation(line: 963, column: 16, scope: !9107)
!9128 = !DILocation(line: 964, column: 3, scope: !9107)
!9129 = !DILocation(line: 960, column: 24, scope: !9103)
!9130 = !DILocation(line: 960, column: 3, scope: !9103)
!9131 = distinct !{!9131, !9105, !9132}
!9132 = !DILocation(line: 964, column: 3, scope: !9100)
!9133 = !DILocation(line: 965, column: 2, scope: !9091)
!9134 = !DILocation(line: 967, column: 2, scope: !8844)
!9135 = !DILocation(line: 968, column: 9, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 968, column: 2)
!9137 = !DILocation(line: 968, column: 7, scope: !9136)
!9138 = !DILocation(line: 968, column: 14, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9136, file: !1, line: 968, column: 2)
!9140 = !DILocation(line: 968, column: 16, scope: !9139)
!9141 = !DILocation(line: 968, column: 2, scope: !9136)
!9142 = !DILocation(line: 969, column: 21, scope: !9139)
!9143 = !DILocation(line: 969, column: 14, scope: !9139)
!9144 = !DILocation(line: 969, column: 24, scope: !9139)
!9145 = !DILocation(line: 969, column: 34, scope: !9139)
!9146 = !DILocation(line: 969, column: 27, scope: !9139)
!9147 = !DILocation(line: 969, column: 37, scope: !9139)
!9148 = !DILocation(line: 969, column: 3, scope: !9139)
!9149 = !DILocation(line: 968, column: 22, scope: !9139)
!9150 = !DILocation(line: 968, column: 2, scope: !9139)
!9151 = distinct !{!9151, !9141, !9152}
!9152 = !DILocation(line: 969, column: 38, scope: !9136)
!9153 = !DILocation(line: 970, column: 2, scope: !8844)
!9154 = !DILocation(line: 971, column: 2, scope: !8844)
!9155 = !DILocation(line: 972, column: 9, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 972, column: 2)
!9157 = !DILocation(line: 972, column: 7, scope: !9156)
!9158 = !DILocation(line: 972, column: 14, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9156, file: !1, line: 972, column: 2)
!9160 = !DILocation(line: 972, column: 16, scope: !9159)
!9161 = !DILocation(line: 972, column: 2, scope: !9156)
!9162 = !DILocation(line: 973, column: 21, scope: !9159)
!9163 = !DILocation(line: 973, column: 14, scope: !9159)
!9164 = !DILocation(line: 973, column: 24, scope: !9159)
!9165 = !DILocation(line: 973, column: 34, scope: !9159)
!9166 = !DILocation(line: 973, column: 27, scope: !9159)
!9167 = !DILocation(line: 973, column: 37, scope: !9159)
!9168 = !DILocation(line: 973, column: 3, scope: !9159)
!9169 = !DILocation(line: 972, column: 22, scope: !9159)
!9170 = !DILocation(line: 972, column: 2, scope: !9159)
!9171 = distinct !{!9171, !9161, !9172}
!9172 = !DILocation(line: 973, column: 38, scope: !9156)
!9173 = !DILocation(line: 974, column: 13, scope: !8844)
!9174 = !DILocation(line: 974, column: 23, scope: !8844)
!9175 = !DILocation(line: 974, column: 26, scope: !8844)
!9176 = !DILocation(line: 974, column: 36, scope: !8844)
!9177 = !DILocation(line: 974, column: 2, scope: !8844)
!9178 = !DILocation(line: 975, column: 2, scope: !8844)
!9179 = !DILocation(line: 977, column: 10, scope: !8844)
!9180 = !DILocation(line: 977, column: 20, scope: !8844)
!9181 = !DILocation(line: 977, column: 23, scope: !8844)
!9182 = !DILocation(line: 977, column: 33, scope: !8844)
!9183 = !DILocation(line: 977, column: 36, scope: !8844)
!9184 = !DILocation(line: 977, column: 46, scope: !8844)
!9185 = !DILocation(line: 977, column: 49, scope: !8844)
!9186 = !DILocation(line: 977, column: 59, scope: !8844)
!9187 = !DILocation(line: 977, column: 2, scope: !8844)
!9188 = !DILocation(line: 978, column: 10, scope: !8844)
!9189 = !DILocation(line: 978, column: 20, scope: !8844)
!9190 = !DILocation(line: 978, column: 23, scope: !8844)
!9191 = !DILocation(line: 978, column: 33, scope: !8844)
!9192 = !DILocation(line: 978, column: 36, scope: !8844)
!9193 = !DILocation(line: 978, column: 46, scope: !8844)
!9194 = !DILocation(line: 978, column: 49, scope: !8844)
!9195 = !DILocation(line: 978, column: 59, scope: !8844)
!9196 = !DILocation(line: 978, column: 2, scope: !8844)
!9197 = !DILocation(line: 979, column: 1, scope: !8844)
!9198 = distinct !DISubprogram(name: "draw_horizontal_join_shape", scope: !1, file: !1, line: 838, type: !5400, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3062)
!9199 = !DILocalVariable(name: "sa", arg: 1, scope: !9198, file: !1, line: 838, type: !3041)
!9200 = !DILocation(line: 838, column: 49, scope: !9198)
!9201 = !DILocalVariable(name: "dir", arg: 2, scope: !9198, file: !1, line: 838, type: !397)
!9202 = !DILocation(line: 838, column: 58, scope: !9198)
!9203 = !DILocalVariable(name: "points", scope: !9198, file: !1, line: 840, type: !8850)
!9204 = !DILocation(line: 840, column: 8, scope: !9198)
!9205 = !DILocalVariable(name: "i", scope: !9198, file: !1, line: 841, type: !410)
!9206 = !DILocation(line: 841, column: 8, scope: !9198)
!9207 = !DILocalVariable(name: "w", scope: !9198, file: !1, line: 842, type: !474)
!9208 = !DILocation(line: 842, column: 8, scope: !9198)
!9209 = !DILocalVariable(name: "h", scope: !9198, file: !1, line: 842, type: !474)
!9210 = !DILocation(line: 842, column: 11, scope: !9198)
!9211 = !DILocalVariable(name: "width", scope: !9198, file: !1, line: 843, type: !474)
!9212 = !DILocation(line: 843, column: 8, scope: !9198)
!9213 = !DILocation(line: 843, column: 16, scope: !9198)
!9214 = !DILocation(line: 843, column: 20, scope: !9198)
!9215 = !DILocation(line: 843, column: 24, scope: !9198)
!9216 = !DILocation(line: 843, column: 28, scope: !9198)
!9217 = !DILocation(line: 843, column: 32, scope: !9198)
!9218 = !DILocation(line: 843, column: 36, scope: !9198)
!9219 = !DILocation(line: 843, column: 40, scope: !9198)
!9220 = !DILocation(line: 843, column: 44, scope: !9198)
!9221 = !DILocation(line: 843, column: 30, scope: !9198)
!9222 = !DILocalVariable(name: "height", scope: !9198, file: !1, line: 844, type: !474)
!9223 = !DILocation(line: 844, column: 8, scope: !9198)
!9224 = !DILocation(line: 844, column: 17, scope: !9198)
!9225 = !DILocation(line: 844, column: 21, scope: !9198)
!9226 = !DILocation(line: 844, column: 25, scope: !9198)
!9227 = !DILocation(line: 844, column: 29, scope: !9198)
!9228 = !DILocation(line: 844, column: 33, scope: !9198)
!9229 = !DILocation(line: 844, column: 37, scope: !9198)
!9230 = !DILocation(line: 844, column: 41, scope: !9198)
!9231 = !DILocation(line: 844, column: 45, scope: !9198)
!9232 = !DILocation(line: 844, column: 31, scope: !9198)
!9233 = !DILocation(line: 846, column: 6, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 846, column: 6)
!9235 = !DILocation(line: 846, column: 15, scope: !9234)
!9236 = !DILocation(line: 846, column: 13, scope: !9234)
!9237 = !DILocation(line: 846, column: 6, scope: !9198)
!9238 = !DILocation(line: 847, column: 7, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9234, file: !1, line: 846, column: 22)
!9240 = !DILocation(line: 847, column: 14, scope: !9239)
!9241 = !DILocation(line: 847, column: 5, scope: !9239)
!9242 = !DILocation(line: 848, column: 7, scope: !9239)
!9243 = !DILocation(line: 848, column: 14, scope: !9239)
!9244 = !DILocation(line: 848, column: 5, scope: !9239)
!9245 = !DILocation(line: 849, column: 2, scope: !9239)
!9246 = !DILocation(line: 851, column: 7, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9234, file: !1, line: 850, column: 7)
!9248 = !DILocation(line: 851, column: 13, scope: !9247)
!9249 = !DILocation(line: 851, column: 5, scope: !9247)
!9250 = !DILocation(line: 852, column: 7, scope: !9247)
!9251 = !DILocation(line: 852, column: 13, scope: !9247)
!9252 = !DILocation(line: 852, column: 5, scope: !9247)
!9253 = !DILocation(line: 855, column: 16, scope: !9198)
!9254 = !DILocation(line: 855, column: 20, scope: !9198)
!9255 = !DILocation(line: 855, column: 24, scope: !9198)
!9256 = !DILocation(line: 855, column: 28, scope: !9198)
!9257 = !DILocation(line: 855, column: 2, scope: !9198)
!9258 = !DILocation(line: 855, column: 12, scope: !9198)
!9259 = !DILocation(line: 855, column: 14, scope: !9198)
!9260 = !DILocation(line: 856, column: 16, scope: !9198)
!9261 = !DILocation(line: 856, column: 20, scope: !9198)
!9262 = !DILocation(line: 856, column: 24, scope: !9198)
!9263 = !DILocation(line: 856, column: 28, scope: !9198)
!9264 = !DILocation(line: 856, column: 32, scope: !9198)
!9265 = !DILocation(line: 856, column: 39, scope: !9198)
!9266 = !DILocation(line: 856, column: 30, scope: !9198)
!9267 = !DILocation(line: 856, column: 2, scope: !9198)
!9268 = !DILocation(line: 856, column: 12, scope: !9198)
!9269 = !DILocation(line: 856, column: 14, scope: !9198)
!9270 = !DILocation(line: 858, column: 16, scope: !9198)
!9271 = !DILocation(line: 858, column: 20, scope: !9198)
!9272 = !DILocation(line: 858, column: 24, scope: !9198)
!9273 = !DILocation(line: 858, column: 28, scope: !9198)
!9274 = !DILocation(line: 858, column: 2, scope: !9198)
!9275 = !DILocation(line: 858, column: 12, scope: !9198)
!9276 = !DILocation(line: 858, column: 14, scope: !9198)
!9277 = !DILocation(line: 859, column: 16, scope: !9198)
!9278 = !DILocation(line: 859, column: 20, scope: !9198)
!9279 = !DILocation(line: 859, column: 24, scope: !9198)
!9280 = !DILocation(line: 859, column: 28, scope: !9198)
!9281 = !DILocation(line: 859, column: 2, scope: !9198)
!9282 = !DILocation(line: 859, column: 12, scope: !9198)
!9283 = !DILocation(line: 859, column: 14, scope: !9198)
!9284 = !DILocation(line: 861, column: 16, scope: !9198)
!9285 = !DILocation(line: 861, column: 20, scope: !9198)
!9286 = !DILocation(line: 861, column: 24, scope: !9198)
!9287 = !DILocation(line: 861, column: 28, scope: !9198)
!9288 = !DILocation(line: 861, column: 32, scope: !9198)
!9289 = !DILocation(line: 861, column: 30, scope: !9198)
!9290 = !DILocation(line: 861, column: 2, scope: !9198)
!9291 = !DILocation(line: 861, column: 12, scope: !9198)
!9292 = !DILocation(line: 861, column: 14, scope: !9198)
!9293 = !DILocation(line: 862, column: 16, scope: !9198)
!9294 = !DILocation(line: 862, column: 20, scope: !9198)
!9295 = !DILocation(line: 862, column: 24, scope: !9198)
!9296 = !DILocation(line: 862, column: 28, scope: !9198)
!9297 = !DILocation(line: 862, column: 2, scope: !9198)
!9298 = !DILocation(line: 862, column: 12, scope: !9198)
!9299 = !DILocation(line: 862, column: 14, scope: !9198)
!9300 = !DILocation(line: 864, column: 16, scope: !9198)
!9301 = !DILocation(line: 864, column: 20, scope: !9198)
!9302 = !DILocation(line: 864, column: 24, scope: !9198)
!9303 = !DILocation(line: 864, column: 28, scope: !9198)
!9304 = !DILocation(line: 864, column: 32, scope: !9198)
!9305 = !DILocation(line: 864, column: 30, scope: !9198)
!9306 = !DILocation(line: 864, column: 2, scope: !9198)
!9307 = !DILocation(line: 864, column: 12, scope: !9198)
!9308 = !DILocation(line: 864, column: 14, scope: !9198)
!9309 = !DILocation(line: 865, column: 16, scope: !9198)
!9310 = !DILocation(line: 865, column: 20, scope: !9198)
!9311 = !DILocation(line: 865, column: 24, scope: !9198)
!9312 = !DILocation(line: 865, column: 28, scope: !9198)
!9313 = !DILocation(line: 865, column: 32, scope: !9198)
!9314 = !DILocation(line: 865, column: 39, scope: !9198)
!9315 = !DILocation(line: 865, column: 30, scope: !9198)
!9316 = !DILocation(line: 865, column: 49, scope: !9198)
!9317 = !DILocation(line: 865, column: 47, scope: !9198)
!9318 = !DILocation(line: 865, column: 43, scope: !9198)
!9319 = !DILocation(line: 865, column: 2, scope: !9198)
!9320 = !DILocation(line: 865, column: 12, scope: !9198)
!9321 = !DILocation(line: 865, column: 14, scope: !9198)
!9322 = !DILocation(line: 867, column: 16, scope: !9198)
!9323 = !DILocation(line: 867, column: 20, scope: !9198)
!9324 = !DILocation(line: 867, column: 24, scope: !9198)
!9325 = !DILocation(line: 867, column: 28, scope: !9198)
!9326 = !DILocation(line: 867, column: 36, scope: !9198)
!9327 = !DILocation(line: 867, column: 34, scope: !9198)
!9328 = !DILocation(line: 867, column: 30, scope: !9198)
!9329 = !DILocation(line: 867, column: 2, scope: !9198)
!9330 = !DILocation(line: 867, column: 12, scope: !9198)
!9331 = !DILocation(line: 867, column: 14, scope: !9198)
!9332 = !DILocation(line: 868, column: 16, scope: !9198)
!9333 = !DILocation(line: 868, column: 20, scope: !9198)
!9334 = !DILocation(line: 868, column: 24, scope: !9198)
!9335 = !DILocation(line: 868, column: 28, scope: !9198)
!9336 = !DILocation(line: 868, column: 32, scope: !9198)
!9337 = !DILocation(line: 868, column: 39, scope: !9198)
!9338 = !DILocation(line: 868, column: 30, scope: !9198)
!9339 = !DILocation(line: 868, column: 2, scope: !9198)
!9340 = !DILocation(line: 868, column: 12, scope: !9198)
!9341 = !DILocation(line: 868, column: 14, scope: !9198)
!9342 = !DILocation(line: 870, column: 16, scope: !9198)
!9343 = !DILocation(line: 870, column: 20, scope: !9198)
!9344 = !DILocation(line: 870, column: 24, scope: !9198)
!9345 = !DILocation(line: 870, column: 28, scope: !9198)
!9346 = !DILocation(line: 870, column: 32, scope: !9198)
!9347 = !DILocation(line: 870, column: 30, scope: !9198)
!9348 = !DILocation(line: 870, column: 2, scope: !9198)
!9349 = !DILocation(line: 870, column: 12, scope: !9198)
!9350 = !DILocation(line: 870, column: 14, scope: !9198)
!9351 = !DILocation(line: 871, column: 16, scope: !9198)
!9352 = !DILocation(line: 871, column: 20, scope: !9198)
!9353 = !DILocation(line: 871, column: 24, scope: !9198)
!9354 = !DILocation(line: 871, column: 28, scope: !9198)
!9355 = !DILocation(line: 871, column: 32, scope: !9198)
!9356 = !DILocation(line: 871, column: 39, scope: !9198)
!9357 = !DILocation(line: 871, column: 30, scope: !9198)
!9358 = !DILocation(line: 871, column: 49, scope: !9198)
!9359 = !DILocation(line: 871, column: 47, scope: !9198)
!9360 = !DILocation(line: 871, column: 43, scope: !9198)
!9361 = !DILocation(line: 871, column: 2, scope: !9198)
!9362 = !DILocation(line: 871, column: 12, scope: !9198)
!9363 = !DILocation(line: 871, column: 14, scope: !9198)
!9364 = !DILocation(line: 873, column: 16, scope: !9198)
!9365 = !DILocation(line: 873, column: 20, scope: !9198)
!9366 = !DILocation(line: 873, column: 24, scope: !9198)
!9367 = !DILocation(line: 873, column: 28, scope: !9198)
!9368 = !DILocation(line: 873, column: 32, scope: !9198)
!9369 = !DILocation(line: 873, column: 30, scope: !9198)
!9370 = !DILocation(line: 873, column: 2, scope: !9198)
!9371 = !DILocation(line: 873, column: 12, scope: !9198)
!9372 = !DILocation(line: 873, column: 14, scope: !9198)
!9373 = !DILocation(line: 874, column: 16, scope: !9198)
!9374 = !DILocation(line: 874, column: 20, scope: !9198)
!9375 = !DILocation(line: 874, column: 24, scope: !9198)
!9376 = !DILocation(line: 874, column: 28, scope: !9198)
!9377 = !DILocation(line: 874, column: 2, scope: !9198)
!9378 = !DILocation(line: 874, column: 12, scope: !9198)
!9379 = !DILocation(line: 874, column: 14, scope: !9198)
!9380 = !DILocation(line: 876, column: 16, scope: !9198)
!9381 = !DILocation(line: 876, column: 20, scope: !9198)
!9382 = !DILocation(line: 876, column: 24, scope: !9198)
!9383 = !DILocation(line: 876, column: 28, scope: !9198)
!9384 = !DILocation(line: 876, column: 2, scope: !9198)
!9385 = !DILocation(line: 876, column: 12, scope: !9198)
!9386 = !DILocation(line: 876, column: 14, scope: !9198)
!9387 = !DILocation(line: 877, column: 16, scope: !9198)
!9388 = !DILocation(line: 877, column: 20, scope: !9198)
!9389 = !DILocation(line: 877, column: 24, scope: !9198)
!9390 = !DILocation(line: 877, column: 28, scope: !9198)
!9391 = !DILocation(line: 877, column: 2, scope: !9198)
!9392 = !DILocation(line: 877, column: 12, scope: !9198)
!9393 = !DILocation(line: 877, column: 14, scope: !9198)
!9394 = !DILocation(line: 879, column: 16, scope: !9198)
!9395 = !DILocation(line: 879, column: 20, scope: !9198)
!9396 = !DILocation(line: 879, column: 24, scope: !9198)
!9397 = !DILocation(line: 879, column: 28, scope: !9198)
!9398 = !DILocation(line: 879, column: 2, scope: !9198)
!9399 = !DILocation(line: 879, column: 12, scope: !9198)
!9400 = !DILocation(line: 879, column: 14, scope: !9198)
!9401 = !DILocation(line: 880, column: 16, scope: !9198)
!9402 = !DILocation(line: 880, column: 20, scope: !9198)
!9403 = !DILocation(line: 880, column: 24, scope: !9198)
!9404 = !DILocation(line: 880, column: 28, scope: !9198)
!9405 = !DILocation(line: 880, column: 32, scope: !9198)
!9406 = !DILocation(line: 880, column: 39, scope: !9198)
!9407 = !DILocation(line: 880, column: 30, scope: !9198)
!9408 = !DILocation(line: 880, column: 45, scope: !9198)
!9409 = !DILocation(line: 880, column: 43, scope: !9198)
!9410 = !DILocation(line: 880, column: 2, scope: !9198)
!9411 = !DILocation(line: 880, column: 12, scope: !9198)
!9412 = !DILocation(line: 880, column: 14, scope: !9198)
!9413 = !DILocation(line: 882, column: 16, scope: !9198)
!9414 = !DILocation(line: 882, column: 20, scope: !9198)
!9415 = !DILocation(line: 882, column: 24, scope: !9198)
!9416 = !DILocation(line: 882, column: 28, scope: !9198)
!9417 = !DILocation(line: 882, column: 2, scope: !9198)
!9418 = !DILocation(line: 882, column: 12, scope: !9198)
!9419 = !DILocation(line: 882, column: 14, scope: !9198)
!9420 = !DILocation(line: 883, column: 16, scope: !9198)
!9421 = !DILocation(line: 883, column: 20, scope: !9198)
!9422 = !DILocation(line: 883, column: 24, scope: !9198)
!9423 = !DILocation(line: 883, column: 28, scope: !9198)
!9424 = !DILocation(line: 883, column: 32, scope: !9198)
!9425 = !DILocation(line: 883, column: 39, scope: !9198)
!9426 = !DILocation(line: 883, column: 30, scope: !9198)
!9427 = !DILocation(line: 883, column: 45, scope: !9198)
!9428 = !DILocation(line: 883, column: 43, scope: !9198)
!9429 = !DILocation(line: 883, column: 2, scope: !9198)
!9430 = !DILocation(line: 883, column: 12, scope: !9198)
!9431 = !DILocation(line: 883, column: 14, scope: !9198)
!9432 = !DILocation(line: 885, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 885, column: 6)
!9434 = !DILocation(line: 885, column: 10, scope: !9433)
!9435 = !DILocation(line: 885, column: 6, scope: !9198)
!9436 = !DILocalVariable(name: "cx", scope: !9437, file: !1, line: 887, type: !474)
!9437 = distinct !DILexicalBlock(scope: !9433, file: !1, line: 885, column: 18)
!9438 = !DILocation(line: 887, column: 9, scope: !9437)
!9439 = !DILocation(line: 887, column: 14, scope: !9437)
!9440 = !DILocation(line: 887, column: 18, scope: !9437)
!9441 = !DILocation(line: 887, column: 22, scope: !9437)
!9442 = !DILocation(line: 887, column: 26, scope: !9437)
!9443 = !DILocation(line: 887, column: 30, scope: !9437)
!9444 = !DILocation(line: 887, column: 28, scope: !9437)
!9445 = !DILocation(line: 888, column: 10, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9437, file: !1, line: 888, column: 3)
!9447 = !DILocation(line: 888, column: 8, scope: !9446)
!9448 = !DILocation(line: 888, column: 15, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9446, file: !1, line: 888, column: 3)
!9450 = !DILocation(line: 888, column: 17, scope: !9449)
!9451 = !DILocation(line: 888, column: 3, scope: !9446)
!9452 = !DILocation(line: 889, column: 19, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9449, file: !1, line: 888, column: 28)
!9454 = !DILocation(line: 889, column: 11, scope: !9453)
!9455 = !DILocation(line: 889, column: 4, scope: !9453)
!9456 = !DILocation(line: 889, column: 14, scope: !9453)
!9457 = !DILocation(line: 889, column: 16, scope: !9453)
!9458 = !DILocation(line: 890, column: 26, scope: !9453)
!9459 = !DILocation(line: 890, column: 19, scope: !9453)
!9460 = !DILocation(line: 890, column: 29, scope: !9453)
!9461 = !DILocation(line: 890, column: 18, scope: !9453)
!9462 = !DILocation(line: 890, column: 11, scope: !9453)
!9463 = !DILocation(line: 890, column: 4, scope: !9453)
!9464 = !DILocation(line: 890, column: 14, scope: !9453)
!9465 = !DILocation(line: 890, column: 16, scope: !9453)
!9466 = !DILocation(line: 891, column: 19, scope: !9453)
!9467 = !DILocation(line: 891, column: 23, scope: !9453)
!9468 = !DILocation(line: 891, column: 27, scope: !9453)
!9469 = !DILocation(line: 891, column: 31, scope: !9453)
!9470 = !DILocation(line: 891, column: 11, scope: !9453)
!9471 = !DILocation(line: 891, column: 4, scope: !9453)
!9472 = !DILocation(line: 891, column: 14, scope: !9453)
!9473 = !DILocation(line: 891, column: 16, scope: !9453)
!9474 = !DILocation(line: 892, column: 3, scope: !9453)
!9475 = !DILocation(line: 888, column: 24, scope: !9449)
!9476 = !DILocation(line: 888, column: 3, scope: !9449)
!9477 = distinct !{!9477, !9451, !9478}
!9478 = !DILocation(line: 892, column: 3, scope: !9446)
!9479 = !DILocation(line: 893, column: 2, scope: !9437)
!9480 = !DILocation(line: 895, column: 2, scope: !9198)
!9481 = !DILocation(line: 896, column: 9, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 896, column: 2)
!9483 = !DILocation(line: 896, column: 7, scope: !9482)
!9484 = !DILocation(line: 896, column: 14, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9482, file: !1, line: 896, column: 2)
!9486 = !DILocation(line: 896, column: 16, scope: !9485)
!9487 = !DILocation(line: 896, column: 2, scope: !9482)
!9488 = !DILocation(line: 897, column: 21, scope: !9485)
!9489 = !DILocation(line: 897, column: 14, scope: !9485)
!9490 = !DILocation(line: 897, column: 24, scope: !9485)
!9491 = !DILocation(line: 897, column: 34, scope: !9485)
!9492 = !DILocation(line: 897, column: 27, scope: !9485)
!9493 = !DILocation(line: 897, column: 37, scope: !9485)
!9494 = !DILocation(line: 897, column: 3, scope: !9485)
!9495 = !DILocation(line: 896, column: 22, scope: !9485)
!9496 = !DILocation(line: 896, column: 2, scope: !9485)
!9497 = distinct !{!9497, !9487, !9498}
!9498 = !DILocation(line: 897, column: 38, scope: !9482)
!9499 = !DILocation(line: 898, column: 2, scope: !9198)
!9500 = !DILocation(line: 899, column: 2, scope: !9198)
!9501 = !DILocation(line: 900, column: 9, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 900, column: 2)
!9503 = !DILocation(line: 900, column: 7, scope: !9502)
!9504 = !DILocation(line: 900, column: 14, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9502, file: !1, line: 900, column: 2)
!9506 = !DILocation(line: 900, column: 16, scope: !9505)
!9507 = !DILocation(line: 900, column: 2, scope: !9502)
!9508 = !DILocation(line: 901, column: 21, scope: !9505)
!9509 = !DILocation(line: 901, column: 14, scope: !9505)
!9510 = !DILocation(line: 901, column: 24, scope: !9505)
!9511 = !DILocation(line: 901, column: 34, scope: !9505)
!9512 = !DILocation(line: 901, column: 27, scope: !9505)
!9513 = !DILocation(line: 901, column: 37, scope: !9505)
!9514 = !DILocation(line: 901, column: 3, scope: !9505)
!9515 = !DILocation(line: 900, column: 22, scope: !9505)
!9516 = !DILocation(line: 900, column: 2, scope: !9505)
!9517 = distinct !{!9517, !9507, !9518}
!9518 = !DILocation(line: 901, column: 38, scope: !9502)
!9519 = !DILocation(line: 902, column: 13, scope: !9198)
!9520 = !DILocation(line: 902, column: 23, scope: !9198)
!9521 = !DILocation(line: 902, column: 26, scope: !9198)
!9522 = !DILocation(line: 902, column: 36, scope: !9198)
!9523 = !DILocation(line: 902, column: 2, scope: !9198)
!9524 = !DILocation(line: 903, column: 2, scope: !9198)
!9525 = !DILocation(line: 905, column: 10, scope: !9198)
!9526 = !DILocation(line: 905, column: 20, scope: !9198)
!9527 = !DILocation(line: 905, column: 23, scope: !9198)
!9528 = !DILocation(line: 905, column: 33, scope: !9198)
!9529 = !DILocation(line: 905, column: 36, scope: !9198)
!9530 = !DILocation(line: 905, column: 46, scope: !9198)
!9531 = !DILocation(line: 905, column: 49, scope: !9198)
!9532 = !DILocation(line: 905, column: 59, scope: !9198)
!9533 = !DILocation(line: 905, column: 2, scope: !9198)
!9534 = !DILocation(line: 906, column: 10, scope: !9198)
!9535 = !DILocation(line: 906, column: 20, scope: !9198)
!9536 = !DILocation(line: 906, column: 23, scope: !9198)
!9537 = !DILocation(line: 906, column: 33, scope: !9198)
!9538 = !DILocation(line: 906, column: 36, scope: !9198)
!9539 = !DILocation(line: 906, column: 46, scope: !9198)
!9540 = !DILocation(line: 906, column: 49, scope: !9198)
!9541 = !DILocation(line: 906, column: 59, scope: !9198)
!9542 = !DILocation(line: 906, column: 2, scope: !9198)
!9543 = !DILocation(line: 907, column: 1, scope: !9198)
